

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Feb 17 22:47:35 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1
   104                           	psect	text84,global,reloc=2,class=CODE,delta=1
   105                           	psect	text85,global,reloc=2,class=CODE,delta=1
   106                           	psect	text86,global,reloc=2,class=CODE,delta=1
   107                           	psect	text87,global,reloc=2,class=CODE,delta=1
   108                           	psect	text88,global,reloc=2,class=CODE,delta=1
   109                           	psect	text89,global,reloc=2,class=CODE,delta=1
   110                           	psect	text90,global,reloc=2,class=CODE,delta=1
   111                           	psect	text91,global,reloc=2,class=CODE,delta=1
   112                           	psect	text92,global,reloc=2,class=CODE,delta=1
   113                           	psect	text93,global,reloc=2,class=CODE,delta=1
   114                           	psect	text94,global,reloc=2,class=CODE,delta=1
   115                           	psect	text95,global,reloc=2,class=CODE,delta=1
   116                           	psect	text96,global,reloc=2,class=CODE,delta=1
   117                           	psect	text97,global,reloc=2,class=CODE,delta=1
   118                           	psect	text98,global,reloc=2,class=CODE,delta=1
   119                           	psect	text99,global,reloc=2,class=CODE,delta=1
   120                           	psect	text100,global,reloc=2,class=CODE,delta=1
   121                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=2
   122                           	psect	text102,global,reloc=2,class=CODE,delta=1
   123                           	psect	text103,global,reloc=2,class=CODE,delta=1
   124                           	psect	text104,global,reloc=2,class=CODE,delta=1
   125                           	psect	text105,global,reloc=2,class=CODE,delta=1
   126                           	psect	text106,global,reloc=2,class=CODE,delta=1
   127                           	psect	text107,global,reloc=2,class=CODE,delta=1
   128                           	psect	text108,global,reloc=2,class=CODE,delta=1
   129                           	psect	text109,global,reloc=2,class=CODE,delta=1
   130                           	psect	text110,global,reloc=2,class=CODE,delta=1
   131                           	psect	text111,global,reloc=2,class=CODE,delta=1
   132                           	psect	text112,global,reloc=2,class=CODE,delta=1
   133                           	psect	text113,global,reloc=2,class=CODE,delta=1
   134                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   135                           	psect	text115,global,reloc=2,class=CODE,delta=1
   136                           	psect	text116,global,reloc=2,class=CODE,delta=1
   137                           	psect	text117,global,reloc=2,class=CODE,delta=1
   138                           	psect	text118,global,reloc=2,class=CODE,delta=1
   139                           	psect	text119,global,reloc=2,class=CODE,delta=1
   140                           	psect	text120,global,reloc=2,class=CODE,delta=1
   141                           	psect	text121,global,reloc=2,class=CODE,delta=1
   142                           	psect	text122,global,reloc=2,class=CODE,delta=1
   143                           	psect	text123,global,reloc=2,class=CODE,delta=1
   144                           	psect	text124,global,reloc=2,class=CODE,delta=1
   145                           	psect	text125,global,reloc=2,class=CODE,delta=1
   146                           	psect	text126,global,reloc=2,class=CODE,delta=1
   147                           	psect	text127,global,reloc=2,class=CODE,delta=1
   148                           	psect	text128,global,reloc=2,class=CODE,delta=1
   149                           	psect	text129,global,reloc=2,class=CODE,delta=1
   150                           	psect	text130,global,reloc=2,class=CODE,delta=1
   151                           	psect	text131,global,reloc=2,class=CODE,delta=1
   152                           	psect	text132,global,reloc=2,class=CODE,delta=1
   153                           	psect	text133,global,reloc=2,class=CODE,delta=1
   154                           	psect	text134,global,reloc=2,class=CODE,delta=1
   155                           	psect	text135,global,reloc=2,class=CODE,delta=1
   156                           	psect	text136,global,reloc=2,class=CODE,delta=1
   157                           	psect	text137,global,reloc=2,class=CODE,delta=1
   158                           	psect	text138,global,reloc=2,class=CODE,delta=1
   159                           	psect	text139,global,reloc=2,class=CODE,delta=1
   160                           	psect	text140,global,reloc=2,class=CODE,delta=1
   161                           	psect	text141,global,reloc=2,class=CODE,delta=1
   162                           	psect	text142,global,reloc=2,class=CODE,delta=1
   163                           	psect	text143,global,reloc=2,class=CODE,delta=1
   164                           	psect	text144,global,reloc=2,class=CODE,delta=1
   165                           	psect	text145,global,reloc=2,class=CODE,delta=1
   166                           	psect	text146,global,reloc=2,class=CODE,delta=1
   167                           	psect	text147,global,reloc=2,class=CODE,delta=1
   168                           	psect	text148,global,reloc=2,class=CODE,delta=1
   169                           	psect	text149,global,reloc=2,class=CODE,delta=1
   170                           	psect	text150,global,reloc=2,class=CODE,delta=1
   171                           	psect	text151,global,reloc=2,class=CODE,delta=1
   172                           	psect	text152,global,reloc=2,class=CODE,delta=1
   173                           	psect	text153,global,reloc=2,class=CODE,delta=1
   174                           	psect	text154,global,reloc=2,class=CODE,delta=1
   175                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   176                           	psect	text155,global,reloc=2,class=CODE,delta=1
   177                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   178                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   179                           	dabs	1,0x600,512,_msd_buffer
   180                           	dabs	1,0xD00,48,_BDT
   181                           	dabs	1,0xD40,31,_msd_cbw
   182                           	dabs	1,0xD80,13,_msd_csw
   183                           	dabs	1,0xD38,8,_CtrlTrfData
   184                           	dabs	1,0xD30,8,_SetupPkt
   185  0000                     
   186                           ; Version 2.00
   187                           ; Generated 27/05/2018 GMT
   188                           ; 
   189                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   190                           ; All rights reserved.
   191                           ; 
   192                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   193                           ; 
   194                           ; Redistribution and use in source and binary forms, with or without modification, are
   195                           ; permitted provided that the following conditions are met:
   196                           ; 
   197                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   198                           ;        conditions and the following disclaimer.
   199                           ; 
   200                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   201                           ;        of conditions and the following disclaimer in the documentation and/or other
   202                           ;        materials provided with the distribution.
   203                           ; 
   204                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   205                           ;        software without specific prior written permission.
   206                           ; 
   207                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   208                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   209                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   210                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   211                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   212                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   213                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   214                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   215                           ; 
   216                           ; 
   217                           ; Code-generator required, PIC18F47J53 Definitions
   218                           ; 
   219                           ; SFR Addresses
   220  0000                     
   221                           	psect	idataBANK1
   222  012444                     __pidataBANK1:
   223                           	opt stack 0
   224                           
   225                           ;initializer for _LUN
   226  012444  9E                 	db	low _ExternalFlash_MediaInitialize
   227  012445  27                 	db	high _ExternalFlash_MediaInitialize
   228  012446  01                 	db	low (_ExternalFlash_MediaInitialize shr (0+16))
   229  012447  48                 	db	low _ExternalFlash_CapacityRead
   230  012448  28                 	db	high _ExternalFlash_CapacityRead
   231  012449  01                 	db	low (_ExternalFlash_CapacityRead shr (0+16))
   232  01244A  9C                 	db	low _ExternalFlash_SectorSizeRead
   233  01244B  28                 	db	high _ExternalFlash_SectorSizeRead
   234  01244C  01                 	db	low (_ExternalFlash_SectorSizeRead shr (0+16))
   235  01244D  BC                 	db	low _ExternalFlash_MediaDetect
   236  01244E  28                 	db	high _ExternalFlash_MediaDetect
   237  01244F  01                 	db	low (_ExternalFlash_MediaDetect shr (0+16))
   238  012450  B2                 	db	low _ExternalFlash_SectorRead
   239  012451  24                 	db	high _ExternalFlash_SectorRead
   240  012452  01                 	db	low (_ExternalFlash_SectorRead shr (0+16))
   241  012453  E4                 	db	low _ExternalFlash_WriteProtectStateGet
   242  012454  28                 	db	high _ExternalFlash_WriteProtectStateGet
   243  012455  01                 	db	low (_ExternalFlash_WriteProtectStateGet shr (0+16))
   244  012456  E8                 	db	low _ExternalFlash_SectorWrite
   245  012457  28                 	db	high _ExternalFlash_SectorWrite
   246  012458  01                 	db	low (_ExternalFlash_SectorWrite shr (0+16))
   247  012459  00                 	db	0
   248  01245A  00                 	db	0
   249  01245B  00                 	db	0
   250  01245C  00                 	db	0
   251  01245D  00                 	db	0
   252  01245E  00                 	db	0
   253  01245F  00                 	db	0
   254  012460  00                 	db	0
   255                           
   256                           ;initializer for i2c_display_init@F6901
   257  012461  3A                 	db	58
   258  012462  1E                 	db	30
   259  012463  39                 	db	57
   260  012464  0C                 	db	12
   261  012465  74                 	db	116
   262  012466  5C                 	db	92
   263  012467  6D                 	db	109
   264  012468  0C                 	db	12
   265  012469  01                 	db	1
   266                           
   267                           ;initializer for __i2c_display_send_init_sequence@F6898
   268  01246A  3A                 	db	58
   269  01246B  1E                 	db	30
   270  01246C  39                 	db	57
   271  01246D  0C                 	db	12
   272  01246E  74                 	db	116
   273  01246F  5C                 	db	92
   274  012470  6D                 	db	109
   275  012471  0C                 	db	12
   276  012472  01                 	db	1
   277                           
   278                           ;initializer for _tx_buf
   279  012473  01                 	db	1
   280  012474  02                 	db	2
   281  012475  03                 	db	3
   282  012476  04                 	db	4
   283  012477  05                 	db	5
   284  012478  06                 	db	6
   285  012479  07                 	db	7
   286  01247A  08                 	db	8
   287                           
   288                           	psect	idataBANK2
   289  011F3E                     __pidataBANK2:
   290                           	opt stack 0
   291                           
   292                           ;initializer for _display_content
   293  011F3E  2A                 	db	42
   294  011F3F  20                 	db	32
   295  011F40  20                 	db	32
   296  011F41  53                 	db	83
   297  011F42  74                 	db	116
   298  011F43  65                 	db	101
   299  011F44  70                 	db	112
   300  011F45  70                 	db	112
   301  011F46  65                 	db	101
   302  011F47  72                 	db	114
   303  011F48  20                 	db	32
   304  011F49  4D                 	db	77
   305  011F4A  6F                 	db	111
   306  011F4B  74                 	db	116
   307  011F4C  6F                 	db	111
   308  011F4D  72                 	db	114
   309  011F4E  20                 	db	32
   310  011F4F  20                 	db	32
   311  011F50  20                 	db	32
   312  011F51  2A                 	db	42
   313  011F52  2A                 	db	42
   314  011F53  20                 	db	32
   315  011F54  20                 	db	32
   316  011F55  20                 	db	32
   317  011F56  20                 	db	32
   318  011F57  43                 	db	67
   319  011F58  6F                 	db	111
   320  011F59  6E                 	db	110
   321  011F5A  74                 	db	116
   322  011F5B  72                 	db	114
   323  011F5C  6F                 	db	111
   324  011F5D  6C                 	db	108
   325  011F5E  6C                 	db	108
   326  011F5F  65                 	db	101
   327  011F60  72                 	db	114
   328  011F61  20                 	db	32
   329  011F62  20                 	db	32
   330  011F63  20                 	db	32
   331  011F64  20                 	db	32
   332  011F65  2A                 	db	42
   333  011F66  2A                 	db	42
   334  011F67  20                 	db	32
   335  011F68  20                 	db	32
   336  011F69  20                 	db	32
   337  011F6A  20                 	db	32
   338  011F6B  20                 	db	32
   339  011F6C  20                 	db	32
   340  011F6D  20                 	db	32
   341  011F6E  20                 	db	32
   342  011F6F  20                 	db	32
   343  011F70  20                 	db	32
   344  011F71  20                 	db	32
   345  011F72  20                 	db	32
   346  011F73  20                 	db	32
   347  011F74  20                 	db	32
   348  011F75  20                 	db	32
   349  011F76  20                 	db	32
   350  011F77  20                 	db	32
   351  011F78  20                 	db	32
   352  011F79  2A                 	db	42
   353  011F7A  2A                 	db	42
   354  011F7B  20                 	db	32
   355  011F7C  20                 	db	32
   356  011F7D  73                 	db	115
   357  011F7E  6F                 	db	111
   358  011F7F  6C                 	db	108
   359  011F80  64                 	db	100
   360  011F81  65                 	db	101
   361  011F82  72                 	db	114
   362  011F83  6E                 	db	110
   363  011F84  65                 	db	101
   364  011F85  72                 	db	114
   365  011F86  64                 	db	100
   366  011F87  2E                 	db	46
   367  011F88  63                 	db	99
   368  011F89  6F                 	db	111
   369  011F8A  6D                 	db	109
   370  011F8B  20                 	db	32
   371  011F8C  20                 	db	32
   372  011F8D  2A                 	db	42
   373                           
   374                           	psect	mediumconst
   375  009092                     __pmediumconst:
   376                           	opt stack 0
   377  009092  00                 	db	0
   378  009093                     _motor_speed_lookup:
   379                           	opt stack 0
   380  009093  0008               	dw	8
   381  009095  000C               	dw	12
   382  009097  0010               	dw	16
   383  009099  0013               	dw	19
   384  00909B  0016               	dw	22
   385  00909D  0019               	dw	25
   386  00909F  001C               	dw	28
   387  0090A1  001E               	dw	30
   388  0090A3  0021               	dw	33
   389  0090A5  0023               	dw	35
   390  0090A7  0026               	dw	38
   391  0090A9  0028               	dw	40
   392  0090AB  002A               	dw	42
   393  0090AD  002C               	dw	44
   394  0090AF  002E               	dw	46
   395  0090B1  0030               	dw	48
   396  0090B3  0032               	dw	50
   397  0090B5  0034               	dw	52
   398  0090B7  0036               	dw	54
   399  0090B9  0038               	dw	56
   400  0090BB  003A               	dw	58
   401  0090BD  003C               	dw	60
   402  0090BF  003D               	dw	61
   403  0090C1  003F               	dw	63
   404  0090C3  0041               	dw	65
   405  0090C5  0043               	dw	67
   406  0090C7  0045               	dw	69
   407  0090C9  0046               	dw	70
   408  0090CB  0048               	dw	72
   409  0090CD  0049               	dw	73
   410  0090CF  004B               	dw	75
   411  0090D1  004D               	dw	77
   412  0090D3  004E               	dw	78
   413  0090D5  0050               	dw	80
   414  0090D7  0051               	dw	81
   415  0090D9  0053               	dw	83
   416  0090DB  0054               	dw	84
   417  0090DD  0056               	dw	86
   418  0090DF  0057               	dw	87
   419  0090E1  0059               	dw	89
   420  0090E3  005A               	dw	90
   421  0090E5  005C               	dw	92
   422  0090E7  005D               	dw	93
   423  0090E9  005F               	dw	95
   424  0090EB  0060               	dw	96
   425  0090ED  0062               	dw	98
   426  0090EF  0063               	dw	99
   427  0090F1  0064               	dw	100
   428  0090F3  0066               	dw	102
   429  0090F5  0067               	dw	103
   430  0090F7  0069               	dw	105
   431  0090F9  006A               	dw	106
   432  0090FB  006C               	dw	108
   433  0090FD  006D               	dw	109
   434  0090FF  006E               	dw	110
   435  009101  0070               	dw	112
   436  009103  0071               	dw	113
   437  009105  0072               	dw	114
   438  009107  0073               	dw	115
   439  009109  0074               	dw	116
   440  00910B  0076               	dw	118
   441  00910D  0078               	dw	120
   442  00910F  0079               	dw	121
   443  009111  007A               	dw	122
   444  009113  007B               	dw	123
   445  009115  007D               	dw	125
   446  009117  007E               	dw	126
   447  009119  007F               	dw	127
   448  00911B  0082               	dw	130
   449  00911D  0085               	dw	133
   450  00911F  0087               	dw	135
   451  009121  008A               	dw	138
   452  009123  008C               	dw	140
   453  009125  008F               	dw	143
   454  009127  0091               	dw	145
   455  009129  0092               	dw	146
   456  00912B  0094               	dw	148
   457  00912D  0098               	dw	152
   458  00912F  009A               	dw	154
   459  009131  009C               	dw	156
   460  009133  009E               	dw	158
   461  009135  00A1               	dw	161
   462  009137  00A3               	dw	163
   463  009139  00A5               	dw	165
   464  00913B  00A7               	dw	167
   465  00913D  00AA               	dw	170
   466  00913F  00AC               	dw	172
   467  009141  00AF               	dw	175
   468  009143  00B2               	dw	178
   469  009145  00B4               	dw	180
   470  009147  00B7               	dw	183
   471  009149  00B8               	dw	184
   472  00914B  00BA               	dw	186
   473  00914D  00BC               	dw	188
   474  00914F  00BE               	dw	190
   475  009151  00C0               	dw	192
   476  009153  00C3               	dw	195
   477  009155  00C4               	dw	196
   478  009157  00C6               	dw	198
   479  009159  00C8               	dw	200
   480  00915B  00CA               	dw	202
   481  00915D  00CC               	dw	204
   482  00915F  00CE               	dw	206
   483  009161  00D0               	dw	208
   484  009163  00D2               	dw	210
   485  009165  00D4               	dw	212
   486  009167  00D6               	dw	214
   487  009169  00D8               	dw	216
   488  00916B  00D9               	dw	217
   489  00916D  00DB               	dw	219
   490  00916F  00DD               	dw	221
   491  009171  00DF               	dw	223
   492  009173  00E1               	dw	225
   493  009175  00E2               	dw	226
   494  009177  00E5               	dw	229
   495  009179  00E7               	dw	231
   496  00917B  00E8               	dw	232
   497  00917D  00EA               	dw	234
   498  00917F  00EC               	dw	236
   499  009181  00EE               	dw	238
   500  009183  00EF               	dw	239
   501  009185  00F2               	dw	242
   502  009187  00F3               	dw	243
   503  009189  00F5               	dw	245
   504  00918B  00F7               	dw	247
   505  00918D  00F8               	dw	248
   506  00918F  00FB               	dw	251
   507  009191  00FD               	dw	253
   508  009193  0100               	dw	256
   509  009195  0103               	dw	259
   510  009197  0104               	dw	260
   511  009199  0107               	dw	263
   512  00919B  010A               	dw	266
   513  00919D  010C               	dw	268
   514  00919F  010F               	dw	271
   515  0091A1  0112               	dw	274
   516  0091A3  0114               	dw	276
   517  0091A5  0117               	dw	279
   518  0091A7  0119               	dw	281
   519  0091A9  011C               	dw	284
   520  0091AB  011E               	dw	286
   521  0091AD  0121               	dw	289
   522  0091AF  0123               	dw	291
   523  0091B1  0125               	dw	293
   524  0091B3  0129               	dw	297
   525  0091B5  012B               	dw	299
   526  0091B7  012C               	dw	300
   527  0091B9  012E               	dw	302
   528  0091BB  0132               	dw	306
   529  0091BD  0134               	dw	308
   530  0091BF  0136               	dw	310
   531  0091C1  0138               	dw	312
   532  0091C3  013B               	dw	315
   533  0091C5  013D               	dw	317
   534  0091C7  013F               	dw	319
   535  0091C9  0143               	dw	323
   536  0091CB  0146               	dw	326
   537  0091CD  0148               	dw	328
   538  0091CF  014A               	dw	330
   539  0091D1  014C               	dw	332
   540  0091D3  014F               	dw	335
   541  0091D5  0151               	dw	337
   542  0091D7  0154               	dw	340
   543  0091D9  0156               	dw	342
   544  0091DB  0159               	dw	345
   545  0091DD  015B               	dw	347
   546  0091DF  015E               	dw	350
   547  0091E1  0160               	dw	352
   548  0091E3  0163               	dw	355
   549  0091E5  0166               	dw	358
   550  0091E7  0169               	dw	361
   551  0091E9  016B               	dw	363
   552  0091EB  016E               	dw	366
   553  0091ED  0171               	dw	369
   554  0091EF  0174               	dw	372
   555  0091F1  0177               	dw	375
   556  0091F3  017A               	dw	378
   557  0091F5  017D               	dw	381
   558  0091F7  0180               	dw	384
   559  0091F9  0183               	dw	387
   560  0091FB  0187               	dw	391
   561  0091FD  018A               	dw	394
   562  0091FF  018D               	dw	397
   563  009201  0191               	dw	401
   564  009203  0194               	dw	404
   565  009205  0198               	dw	408
   566  009207  019B               	dw	411
   567  009209  019F               	dw	415
   568  00920B  01A3               	dw	419
   569  00920D  01A6               	dw	422
   570  00920F  01AA               	dw	426
   571  009211  01AE               	dw	430
   572  009213  01B2               	dw	434
   573  009215  01B6               	dw	438
   574  009217  01BA               	dw	442
   575  009219  01BE               	dw	446
   576  00921B  01C3               	dw	451
   577  00921D  01C7               	dw	455
   578  00921F  01CC               	dw	460
   579  009221  01D0               	dw	464
   580  009223  01D5               	dw	469
   581  009225  01D9               	dw	473
   582  009227  01DE               	dw	478
   583  009229  01E3               	dw	483
   584  00922B  01E8               	dw	488
   585  00922D  01ED               	dw	493
   586  00922F  01F3               	dw	499
   587  009231  01F8               	dw	504
   588  009233  01FE               	dw	510
   589  009235  0203               	dw	515
   590  009237  0209               	dw	521
   591  009239  020F               	dw	527
   592  00923B  0215               	dw	533
   593  00923D  021B               	dw	539
   594  00923F  0221               	dw	545
   595  009241  0227               	dw	551
   596  009243  022E               	dw	558
   597  009245  0235               	dw	565
   598  009247  023C               	dw	572
   599  009249  0243               	dw	579
   600  00924B  024A               	dw	586
   601  00924D  0251               	dw	593
   602  00924F  0259               	dw	601
   603  009251  0261               	dw	609
   604  009253  0269               	dw	617
   605  009255  0271               	dw	625
   606  009257  0279               	dw	633
   607  009259  0282               	dw	642
   608  00925B  028B               	dw	651
   609  00925D  0294               	dw	660
   610  00925F  029E               	dw	670
   611  009261  02A7               	dw	679
   612  009263  02B1               	dw	689
   613  009265  02BC               	dw	700
   614  009267  02C6               	dw	710
   615  009269  02D1               	dw	721
   616  00926B  02DC               	dw	732
   617  00926D  02DC               	dw	732
   618  00926F  02DF               	dw	735
   619  009271  02E2               	dw	738
   620  009273  02E5               	dw	741
   621  009275  02E8               	dw	744
   622  009277  02EB               	dw	747
   623  009279  02EE               	dw	750
   624  00927B  02F1               	dw	753
   625  00927D  02F4               	dw	756
   626  00927F  02F7               	dw	759
   627  009281  02FA               	dw	762
   628  009283  02FD               	dw	765
   629  009285  0300               	dw	768
   630  009287  0304               	dw	772
   631  009289  0307               	dw	775
   632  00928B  030A               	dw	778
   633  00928D  030D               	dw	781
   634  00928F  0311               	dw	785
   635  009291  0314               	dw	788
   636  009293  0317               	dw	791
   637  009295  031A               	dw	794
   638  009297  031E               	dw	798
   639  009299  0321               	dw	801
   640  00929B  0325               	dw	805
   641  00929D  0328               	dw	808
   642  00929F  032C               	dw	812
   643  0092A1  032F               	dw	815
   644  0092A3  0333               	dw	819
   645  0092A5  0336               	dw	822
   646  0092A7  033A               	dw	826
   647  0092A9  033E               	dw	830
   648  0092AB  0341               	dw	833
   649  0092AD  0345               	dw	837
   650  0092AF  0349               	dw	841
   651  0092B1  034D               	dw	845
   652  0092B3  0350               	dw	848
   653  0092B5  0354               	dw	852
   654  0092B7  0358               	dw	856
   655  0092B9  035C               	dw	860
   656  0092BB  0360               	dw	864
   657  0092BD  0364               	dw	868
   658  0092BF  0368               	dw	872
   659  0092C1  036C               	dw	876
   660  0092C3  0370               	dw	880
   661  0092C5  0374               	dw	884
   662  0092C7  0379               	dw	889
   663  0092C9  037D               	dw	893
   664  0092CB  0381               	dw	897
   665  0092CD  0385               	dw	901
   666  0092CF  038A               	dw	906
   667  0092D1  038E               	dw	910
   668  0092D3  0393               	dw	915
   669  0092D5  0397               	dw	919
   670  0092D7  039C               	dw	924
   671  0092D9  03A0               	dw	928
   672  0092DB  03A5               	dw	933
   673  0092DD  03AA               	dw	938
   674  0092DF  03AE               	dw	942
   675  0092E1  03B3               	dw	947
   676  0092E3  03B8               	dw	952
   677  0092E5  03BD               	dw	957
   678  0092E7  03C2               	dw	962
   679  0092E9  03C6               	dw	966
   680  0092EB  03CC               	dw	972
   681  0092ED  03D1               	dw	977
   682  0092EF  03D6               	dw	982
   683  0092F1  03DB               	dw	987
   684  0092F3  03E0               	dw	992
   685  0092F5  03E5               	dw	997
   686  0092F7  03EB               	dw	1003
   687  0092F9  03F0               	dw	1008
   688  0092FB  03F6               	dw	1014
   689  0092FD  03FB               	dw	1019
   690  0092FF  0401               	dw	1025
   691  009301  0406               	dw	1030
   692  009303  040C               	dw	1036
   693  009305  0412               	dw	1042
   694  009307  0417               	dw	1047
   695  009309  041D               	dw	1053
   696  00930B  0423               	dw	1059
   697  00930D  0429               	dw	1065
   698  00930F  042F               	dw	1071
   699  009311  0436               	dw	1078
   700  009313  043C               	dw	1084
   701  009315  0442               	dw	1090
   702  009317  0448               	dw	1096
   703  009319  044F               	dw	1103
   704  00931B  0455               	dw	1109
   705  00931D  045C               	dw	1116
   706  00931F  0463               	dw	1123
   707  009321  046A               	dw	1130
   708  009323  0470               	dw	1136
   709  009325  0477               	dw	1143
   710  009327  047E               	dw	1150
   711  009329  0485               	dw	1157
   712  00932B  048D               	dw	1165
   713  00932D  0494               	dw	1172
   714  00932F  049B               	dw	1179
   715  009331  04A3               	dw	1187
   716  009333  04AA               	dw	1194
   717  009335  04B2               	dw	1202
   718  009337  04BA               	dw	1210
   719  009339  04C2               	dw	1218
   720  00933B  04C9               	dw	1225
   721  00933D  04D2               	dw	1234
   722  00933F  04DA               	dw	1242
   723  009341  04E2               	dw	1250
   724  009343  04EA               	dw	1258
   725  009345  04F3               	dw	1267
   726  009347  04FC               	dw	1276
   727  009349  0504               	dw	1284
   728  00934B  050D               	dw	1293
   729  00934D  0516               	dw	1302
   730  00934F  051F               	dw	1311
   731  009351  0528               	dw	1320
   732  009353  0532               	dw	1330
   733  009355  053B               	dw	1339
   734  009357  0545               	dw	1349
   735  009359  054F               	dw	1359
   736  00935B  0559               	dw	1369
   737  00935D  0563               	dw	1379
   738  00935F  056D               	dw	1389
   739  009361  0577               	dw	1399
   740  009363  0582               	dw	1410
   741  009365  058C               	dw	1420
   742  009367  0597               	dw	1431
   743  009369  05A2               	dw	1442
   744  00936B  05AD               	dw	1453
   745  00936D  05B9               	dw	1465
   746  00936F  05C4               	dw	1476
   747  009371  05D0               	dw	1488
   748  009373  05DC               	dw	1500
   749  009375  05E8               	dw	1512
   750  009377  05F4               	dw	1524
   751  009379  0601               	dw	1537
   752  00937B  060E               	dw	1550
   753  00937D  061A               	dw	1562
   754  00937F  0628               	dw	1576
   755  009381  0635               	dw	1589
   756  009383  0643               	dw	1603
   757  009385  0650               	dw	1616
   758  009387  065E               	dw	1630
   759  009389  066D               	dw	1645
   760  00938B  067B               	dw	1659
   761  00938D  068A               	dw	1674
   762  00938F  0699               	dw	1689
   763  009391  06A9               	dw	1705
   764  009393  06B8               	dw	1720
   765  009395  06C8               	dw	1736
   766  009397  06D8               	dw	1752
   767  009399  06E9               	dw	1769
   768  00939B  06FA               	dw	1786
   769  00939D  070B               	dw	1803
   770  00939F  071C               	dw	1820
   771  0093A1  072E               	dw	1838
   772  0093A3  0740               	dw	1856
   773  0093A5  0753               	dw	1875
   774  0093A7  0766               	dw	1894
   775  0093A9  0779               	dw	1913
   776  0093AB  078D               	dw	1933
   777  0093AD  07A1               	dw	1953
   778  0093AF  07B6               	dw	1974
   779  0093B1  07CB               	dw	1995
   780  0093B3  07E0               	dw	2016
   781  0093B5  07F6               	dw	2038
   782  0093B7  080C               	dw	2060
   783  0093B9  0823               	dw	2083
   784  0093BB  083B               	dw	2107
   785  0093BD  0853               	dw	2131
   786  0093BF  086B               	dw	2155
   787  0093C1  0884               	dw	2180
   788  0093C3  089E               	dw	2206
   789  0093C5  08B8               	dw	2232
   790  0093C7  08D3               	dw	2259
   791  0093C9  08EF               	dw	2287
   792  0093CB  090B               	dw	2315
   793  0093CD  0928               	dw	2344
   794  0093CF  0945               	dw	2373
   795  0093D1  0964               	dw	2404
   796  0093D3  0983               	dw	2435
   797  0093D5  09A3               	dw	2467
   798  0093D7  09C4               	dw	2500
   799  0093D9  09E6               	dw	2534
   800  0093DB  0A08               	dw	2568
   801  0093DD  0A2C               	dw	2604
   802  0093DF  0A51               	dw	2641
   803  0093E1  0A77               	dw	2679
   804  0093E3  0A9D               	dw	2717
   805  0093E5  0AC5               	dw	2757
   806  0093E7  0AEF               	dw	2799
   807  0093E9  0B19               	dw	2841
   808  0093EB  0B45               	dw	2885
   809  0093ED  0B72               	dw	2930
   810  0093EF  0B72               	dw	2930
   811  0093F1  0B7D               	dw	2941
   812  0093F3  0B89               	dw	2953
   813  0093F5  0B94               	dw	2964
   814  0093F7  0BA0               	dw	2976
   815  0093F9  0BAC               	dw	2988
   816  0093FB  0BB8               	dw	3000
   817  0093FD  0BC4               	dw	3012
   818  0093FF  0BD0               	dw	3024
   819  009401  0BDC               	dw	3036
   820  009403  0BE9               	dw	3049
   821  009405  0BF5               	dw	3061
   822  009407  0C02               	dw	3074
   823  009409  0C0E               	dw	3086
   824  00940B  0C1B               	dw	3099
   825  00940D  0C28               	dw	3112
   826  00940F  0C35               	dw	3125
   827  009411  0C42               	dw	3138
   828  009413  0C4F               	dw	3151
   829  009415  0C5D               	dw	3165
   830  009417  0C6A               	dw	3178
   831  009419  0C77               	dw	3191
   832  00941B  0C85               	dw	3205
   833  00941D  0C93               	dw	3219
   834  00941F  0CA1               	dw	3233
   835  009421  0CAF               	dw	3247
   836  009423  0CBD               	dw	3261
   837  009425  0CCB               	dw	3275
   838  009427  0CD9               	dw	3289
   839  009429  0CE8               	dw	3304
   840  00942B  0CF7               	dw	3319
   841  00942D  0D05               	dw	3333
   842  00942F  0D14               	dw	3348
   843  009431  0D23               	dw	3363
   844  009433  0D32               	dw	3378
   845  009435  0D42               	dw	3394
   846  009437  0D51               	dw	3409
   847  009439  0D61               	dw	3425
   848  00943B  0D70               	dw	3440
   849  00943D  0D80               	dw	3456
   850  00943F  0D90               	dw	3472
   851  009441  0DA0               	dw	3488
   852  009443  0DB1               	dw	3505
   853  009445  0DC1               	dw	3521
   854  009447  0DD2               	dw	3538
   855  009449  0DE3               	dw	3555
   856  00944B  0DF3               	dw	3571
   857  00944D  0E05               	dw	3589
   858  00944F  0E16               	dw	3606
   859  009451  0E27               	dw	3623
   860  009453  0E39               	dw	3641
   861  009455  0E4B               	dw	3659
   862  009457  0E5C               	dw	3676
   863  009459  0E6F               	dw	3695
   864  00945B  0E81               	dw	3713
   865  00945D  0E93               	dw	3731
   866  00945F  0EA6               	dw	3750
   867  009461                     __end_of_motor_speed_lookup:
   868                           	opt stack 0
   869  009461                     _motor_steps_lookup:
   870                           	opt stack 0
   871  009461  0001               	dw	1
   872  009463  0002               	dw	2
   873  009465  0003               	dw	3
   874  009467  0004               	dw	4
   875  009469  0005               	dw	5
   876  00946B  0006               	dw	6
   877  00946D  0007               	dw	7
   878  00946F  0008               	dw	8
   879  009471  0009               	dw	9
   880  009473  000A               	dw	10
   881  009475  000B               	dw	11
   882  009477  000C               	dw	12
   883  009479  000D               	dw	13
   884  00947B  000E               	dw	14
   885  00947D  000F               	dw	15
   886  00947F  0010               	dw	16
   887  009481  0011               	dw	17
   888  009483  0012               	dw	18
   889  009485  0013               	dw	19
   890  009487  0014               	dw	20
   891  009489  0015               	dw	21
   892  00948B  0016               	dw	22
   893  00948D  0017               	dw	23
   894  00948F  0018               	dw	24
   895  009491  0019               	dw	25
   896  009493  001A               	dw	26
   897  009495  001B               	dw	27
   898  009497  001C               	dw	28
   899  009499  001D               	dw	29
   900  00949B  001E               	dw	30
   901  00949D  001F               	dw	31
   902  00949F  0020               	dw	32
   903  0094A1  0021               	dw	33
   904  0094A3  0022               	dw	34
   905  0094A5  0023               	dw	35
   906  0094A7  0024               	dw	36
   907  0094A9  0025               	dw	37
   908  0094AB  0026               	dw	38
   909  0094AD  0027               	dw	39
   910  0094AF  0028               	dw	40
   911  0094B1  0029               	dw	41
   912  0094B3  002A               	dw	42
   913  0094B5  002B               	dw	43
   914  0094B7  002C               	dw	44
   915  0094B9  002D               	dw	45
   916  0094BB  002E               	dw	46
   917  0094BD  002F               	dw	47
   918  0094BF  0030               	dw	48
   919  0094C1  0031               	dw	49
   920  0094C3  0032               	dw	50
   921  0094C5  0033               	dw	51
   922  0094C7  0034               	dw	52
   923  0094C9  0035               	dw	53
   924  0094CB  0036               	dw	54
   925  0094CD  0037               	dw	55
   926  0094CF  0038               	dw	56
   927  0094D1  0039               	dw	57
   928  0094D3  003A               	dw	58
   929  0094D5  003B               	dw	59
   930  0094D7  003C               	dw	60
   931  0094D9  003D               	dw	61
   932  0094DB  003E               	dw	62
   933  0094DD  003F               	dw	63
   934  0094DF  0040               	dw	64
   935  0094E1  0041               	dw	65
   936  0094E3  0042               	dw	66
   937  0094E5  0043               	dw	67
   938  0094E7  0045               	dw	69
   939  0094E9  0047               	dw	71
   940  0094EB  0049               	dw	73
   941  0094ED  004B               	dw	75
   942  0094EF  004D               	dw	77
   943  0094F1  004F               	dw	79
   944  0094F3  0051               	dw	81
   945  0094F5  0053               	dw	83
   946  0094F7  0055               	dw	85
   947  0094F9  0057               	dw	87
   948  0094FB  0059               	dw	89
   949  0094FD  005B               	dw	91
   950  0094FF  005D               	dw	93
   951  009501  005F               	dw	95
   952  009503  0061               	dw	97
   953  009505  0063               	dw	99
   954  009507  0065               	dw	101
   955  009509  0067               	dw	103
   956  00950B  0069               	dw	105
   957  00950D  006B               	dw	107
   958  00950F  006E               	dw	110
   959  009511  0070               	dw	112
   960  009513  0073               	dw	115
   961  009515  0075               	dw	117
   962  009517  0077               	dw	119
   963  009519  0079               	dw	121
   964  00951B  007B               	dw	123
   965  00951D  007D               	dw	125
   966  00951F  007F               	dw	127
   967  009521  0081               	dw	129
   968  009523  0083               	dw	131
   969  009525  0085               	dw	133
   970  009527  0087               	dw	135
   971  009529  0089               	dw	137
   972  00952B  008B               	dw	139
   973  00952D  008D               	dw	141
   974  00952F  008F               	dw	143
   975  009531  0091               	dw	145
   976  009533  0093               	dw	147
   977  009535  0095               	dw	149
   978  009537  0097               	dw	151
   979  009539  0099               	dw	153
   980  00953B  009B               	dw	155
   981  00953D  009D               	dw	157
   982  00953F  009F               	dw	159
   983  009541  00A1               	dw	161
   984  009543  00A3               	dw	163
   985  009545  00A5               	dw	165
   986  009547  00A7               	dw	167
   987  009549  00A9               	dw	169
   988  00954B  00AB               	dw	171
   989  00954D  00AD               	dw	173
   990  00954F  00AF               	dw	175
   991  009551  00B1               	dw	177
   992  009553  00B3               	dw	179
   993  009555  00B5               	dw	181
   994  009557  00B7               	dw	183
   995  009559  00B9               	dw	185
   996  00955B  00BB               	dw	187
   997  00955D  00BD               	dw	189
   998  00955F  00C0               	dw	192
   999  009561  00C3               	dw	195
  1000  009563  00C6               	dw	198
  1001  009565  00C9               	dw	201
  1002  009567  00CC               	dw	204
  1003  009569  00CF               	dw	207
  1004  00956B  00D2               	dw	210
  1005  00956D  00D5               	dw	213
  1006  00956F  00D8               	dw	216
  1007  009571  00DB               	dw	219
  1008  009573  00DE               	dw	222
  1009  009575  00E1               	dw	225
  1010  009577  00E4               	dw	228
  1011  009579  00E7               	dw	231
  1012  00957B  00EA               	dw	234
  1013  00957D  00ED               	dw	237
  1014  00957F  00F0               	dw	240
  1015  009581  00F3               	dw	243
  1016  009583  00F6               	dw	246
  1017  009585  00F9               	dw	249
  1018  009587  00FC               	dw	252
  1019  009589  00FF               	dw	255
  1020  00958B  0102               	dw	258
  1021  00958D  0105               	dw	261
  1022  00958F  0108               	dw	264
  1023  009591  010B               	dw	267
  1024  009593  010E               	dw	270
  1025  009595  0111               	dw	273
  1026  009597  0114               	dw	276
  1027  009599  0117               	dw	279
  1028  00959B  011A               	dw	282
  1029  00959D  011D               	dw	285
  1030  00959F  0120               	dw	288
  1031  0095A1  0123               	dw	291
  1032  0095A3  0126               	dw	294
  1033  0095A5  012A               	dw	298
  1034  0095A7  012D               	dw	301
  1035  0095A9  0130               	dw	304
  1036  0095AB  0133               	dw	307
  1037  0095AD  0137               	dw	311
  1038  0095AF  013A               	dw	314
  1039  0095B1  013E               	dw	318
  1040  0095B3  0142               	dw	322
  1041  0095B5  0145               	dw	325
  1042  0095B7  0149               	dw	329
  1043  0095B9  014D               	dw	333
  1044  0095BB  0151               	dw	337
  1045  0095BD  0155               	dw	341
  1046  0095BF  0159               	dw	345
  1047  0095C1  015D               	dw	349
  1048  0095C3  0161               	dw	353
  1049  0095C5  0166               	dw	358
  1050  0095C7  016A               	dw	362
  1051  0095C9  016E               	dw	366
  1052  0095CB  0173               	dw	371
  1053  0095CD  0178               	dw	376
  1054  0095CF  017D               	dw	381
  1055  0095D1  0182               	dw	386
  1056  0095D3  0187               	dw	391
  1057  0095D5  018C               	dw	396
  1058  0095D7  0191               	dw	401
  1059  0095D9  0196               	dw	406
  1060  0095DB  019C               	dw	412
  1061  0095DD  01A1               	dw	417
  1062  0095DF  01A7               	dw	423
  1063  0095E1  01AD               	dw	429
  1064  0095E3  01B3               	dw	435
  1065  0095E5  01B9               	dw	441
  1066  0095E7  01BF               	dw	447
  1067  0095E9  01C6               	dw	454
  1068  0095EB  01CC               	dw	460
  1069  0095ED  01D3               	dw	467
  1070  0095EF  01DA               	dw	474
  1071  0095F1  01E1               	dw	481
  1072  0095F3  01E8               	dw	488
  1073  0095F5  01F0               	dw	496
  1074  0095F7  01F7               	dw	503
  1075  0095F9  01FF               	dw	511
  1076  0095FB  0207               	dw	519
  1077  0095FD  020F               	dw	527
  1078  0095FF  0218               	dw	536
  1079  009601  0221               	dw	545
  1080  009603  022A               	dw	554
  1081  009605  0233               	dw	563
  1082  009607  023D               	dw	573
  1083  009609  0247               	dw	583
  1084  00960B  0251               	dw	593
  1085  00960D  025C               	dw	604
  1086  00960F  0267               	dw	615
  1087  009611  0272               	dw	626
  1088  009613  027E               	dw	638
  1089  009615  028A               	dw	650
  1090  009617  0297               	dw	663
  1091  009619  02A4               	dw	676
  1092  00961B  02B2               	dw	690
  1093  00961D  02C0               	dw	704
  1094  00961F  02CF               	dw	719
  1095  009621  02DF               	dw	735
  1096  009623  02EF               	dw	751
  1097  009625  02FF               	dw	767
  1098  009627  0311               	dw	785
  1099  009629  0323               	dw	803
  1100  00962B  0336               	dw	822
  1101  00962D  0349               	dw	841
  1102  00962F  035E               	dw	862
  1103  009631  0373               	dw	883
  1104  009633  0389               	dw	905
  1105  009635  03A1               	dw	929
  1106  009637  03B9               	dw	953
  1107  009639  03D3               	dw	979
  1108  00963B  03DD               	dw	989
  1109  00963D  03E4               	dw	996
  1110  00963F  03EA               	dw	1002
  1111  009641  03F1               	dw	1009
  1112  009643  03F8               	dw	1016
  1113  009645  03FF               	dw	1023
  1114  009647  0406               	dw	1030
  1115  009649  040D               	dw	1037
  1116  00964B  0415               	dw	1045
  1117  00964D  041C               	dw	1052
  1118  00964F  0424               	dw	1060
  1119  009651  042B               	dw	1067
  1120  009653  0433               	dw	1075
  1121  009655  043B               	dw	1083
  1122  009657  0442               	dw	1090
  1123  009659  044A               	dw	1098
  1124  00965B  0452               	dw	1106
  1125  00965D  045A               	dw	1114
  1126  00965F  0463               	dw	1123
  1127  009661  046B               	dw	1131
  1128  009663  0474               	dw	1140
  1129  009665  047C               	dw	1148
  1130  009667  0485               	dw	1157
  1131  009669  048E               	dw	1166
  1132  00966B  0496               	dw	1174
  1133  00966D  049F               	dw	1183
  1134  00966F  04A9               	dw	1193
  1135  009671  04B2               	dw	1202
  1136  009673  04BB               	dw	1211
  1137  009675  04C5               	dw	1221
  1138  009677  04CE               	dw	1230
  1139  009679  04D8               	dw	1240
  1140  00967B  04E2               	dw	1250
  1141  00967D  04EC               	dw	1260
  1142  00967F  04F6               	dw	1270
  1143  009681  0500               	dw	1280
  1144  009683  050B               	dw	1291
  1145  009685  0515               	dw	1301
  1146  009687  0520               	dw	1312
  1147  009689  052B               	dw	1323
  1148  00968B  0536               	dw	1334
  1149  00968D  0541               	dw	1345
  1150  00968F  054C               	dw	1356
  1151  009691  0558               	dw	1368
  1152  009693  0564               	dw	1380
  1153  009695  056F               	dw	1391
  1154  009697  057B               	dw	1403
  1155  009699  0587               	dw	1415
  1156  00969B  0594               	dw	1428
  1157  00969D  05A0               	dw	1440
  1158  00969F  05AD               	dw	1453
  1159  0096A1  05BA               	dw	1466
  1160  0096A3  05C7               	dw	1479
  1161  0096A5  05D4               	dw	1492
  1162  0096A7  05E2               	dw	1506
  1163  0096A9  05EF               	dw	1519
  1164  0096AB  05FD               	dw	1533
  1165  0096AD  060B               	dw	1547
  1166  0096AF  0619               	dw	1561
  1167  0096B1  0628               	dw	1576
  1168  0096B3  0637               	dw	1591
  1169  0096B5  0646               	dw	1606
  1170  0096B7  0655               	dw	1621
  1171  0096B9  0664               	dw	1636
  1172  0096BB  0674               	dw	1652
  1173  0096BD  0684               	dw	1668
  1174  0096BF  0694               	dw	1684
  1175  0096C1  06A4               	dw	1700
  1176  0096C3  06B5               	dw	1717
  1177  0096C5  06C6               	dw	1734
  1178  0096C7  06D7               	dw	1751
  1179  0096C9  06E9               	dw	1769
  1180  0096CB  06FA               	dw	1786
  1181  0096CD  070C               	dw	1804
  1182  0096CF  071F               	dw	1823
  1183  0096D1  0731               	dw	1841
  1184  0096D3  0744               	dw	1860
  1185  0096D5  0758               	dw	1880
  1186  0096D7  076B               	dw	1899
  1187  0096D9  077F               	dw	1919
  1188  0096DB  0793               	dw	1939
  1189  0096DD  07A8               	dw	1960
  1190  0096DF  07BD               	dw	1981
  1191  0096E1  07D2               	dw	2002
  1192  0096E3  07E8               	dw	2024
  1193  0096E5  07FE               	dw	2046
  1194  0096E7  0815               	dw	2069
  1195  0096E9  082C               	dw	2092
  1196  0096EB  0843               	dw	2115
  1197  0096ED  085B               	dw	2139
  1198  0096EF  0873               	dw	2163
  1199  0096F1  088B               	dw	2187
  1200  0096F3  08A5               	dw	2213
  1201  0096F5  08BE               	dw	2238
  1202  0096F7  08D8               	dw	2264
  1203  0096F9  08F2               	dw	2290
  1204  0096FB  090D               	dw	2317
  1205  0096FD  0929               	dw	2345
  1206  0096FF  0945               	dw	2373
  1207  009701  0961               	dw	2401
  1208  009703  097E               	dw	2430
  1209  009705  099C               	dw	2460
  1210  009707  09BA               	dw	2490
  1211  009709  09D9               	dw	2521
  1212  00970B  09F9               	dw	2553
  1213  00970D  0A19               	dw	2585
  1214  00970F  0A39               	dw	2617
  1215  009711  0A5B               	dw	2651
  1216  009713  0A7D               	dw	2685
  1217  009715  0A9F               	dw	2719
  1218  009717  0AC3               	dw	2755
  1219  009719  0AE7               	dw	2791
  1220  00971B  0B0C               	dw	2828
  1221  00971D  0B31               	dw	2865
  1222  00971F  0B58               	dw	2904
  1223  009721  0B7F               	dw	2943
  1224  009723  0BA7               	dw	2983
  1225  009725  0BD0               	dw	3024
  1226  009727  0BFA               	dw	3066
  1227  009729  0C25               	dw	3109
  1228  00972B  0C51               	dw	3153
  1229  00972D  0C7E               	dw	3198
  1230  00972F  0CAB               	dw	3243
  1231  009731  0CDA               	dw	3290
  1232  009733  0D0A               	dw	3338
  1233  009735  0D3B               	dw	3387
  1234  009737  0D6D               	dw	3437
  1235  009739  0DA0               	dw	3488
  1236  00973B  0DD4               	dw	3540
  1237  00973D  0E0A               	dw	3594
  1238  00973F  0E41               	dw	3649
  1239  009741  0E79               	dw	3705
  1240  009743  0EB3               	dw	3763
  1241  009745  0EEE               	dw	3822
  1242  009747  0F2A               	dw	3882
  1243  009749  0F68               	dw	3944
  1244  00974B  0FA8               	dw	4008
  1245  00974D  0FE9               	dw	4073
  1246  00974F  102C               	dw	4140
  1247  009751  1070               	dw	4208
  1248  009753  10B6               	dw	4278
  1249  009755  10FE               	dw	4350
  1250  009757  1148               	dw	4424
  1251  009759  1194               	dw	4500
  1252  00975B  11E2               	dw	4578
  1253  00975D  1232               	dw	4658
  1254  00975F  1285               	dw	4741
  1255  009761  12D9               	dw	4825
  1256  009763  1330               	dw	4912
  1257  009765  1389               	dw	5001
  1258  009767  13E5               	dw	5093
  1259  009769  1444               	dw	5188
  1260  00976B  14A5               	dw	5285
  1261  00976D  1509               	dw	5385
  1262  00976F  1570               	dw	5488
  1263  009771  15DA               	dw	5594
  1264  009773  1647               	dw	5703
  1265  009775  16B8               	dw	5816
  1266  009777  172B               	dw	5931
  1267  009779  17A3               	dw	6051
  1268  00977B  181E               	dw	6174
  1269  00977D  189D               	dw	6301
  1270  00977F  1921               	dw	6433
  1271  009781  19A8               	dw	6568
  1272  009783  1A34               	dw	6708
  1273  009785  1AC4               	dw	6852
  1274  009787  1B5A               	dw	7002
  1275  009789  1BF4               	dw	7156
  1276  00978B  1C94               	dw	7316
  1277  00978D  1D39               	dw	7481
  1278  00978F  1DE4               	dw	7652
  1279  009791  1E95               	dw	7829
  1280  009793  1F4C               	dw	8012
  1281  009795  200A               	dw	8202
  1282  009797  20CE               	dw	8398
  1283  009799  219A               	dw	8602
  1284  00979B  226E               	dw	8814
  1285  00979D  234A               	dw	9034
  1286  00979F  242E               	dw	9262
  1287  0097A1  251B               	dw	9499
  1288  0097A3  2612               	dw	9746
  1289  0097A5  2712               	dw	10002
  1290  0097A7  281D               	dw	10269
  1291  0097A9  2932               	dw	10546
  1292  0097AB  2A53               	dw	10835
  1293  0097AD  2B81               	dw	11137
  1294  0097AF  2CBB               	dw	11451
  1295  0097B1  2E03               	dw	11779
  1296  0097B3  2F5A               	dw	12122
  1297  0097B5  30C0               	dw	12480
  1298  0097B7  3236               	dw	12854
  1299  0097B9  33BD               	dw	13245
  1300  0097BB  3557               	dw	13655
  1301  0097BD  35F5               	dw	13813
  1302  0097BF  3661               	dw	13921
  1303  0097C1  36CD               	dw	14029
  1304  0097C3  373B               	dw	14139
  1305  0097C5  37AA               	dw	14250
  1306  0097C7  381B               	dw	14363
  1307  0097C9  388C               	dw	14476
  1308  0097CB  3900               	dw	14592
  1309  0097CD  3974               	dw	14708
  1310  0097CF  39EA               	dw	14826
  1311  0097D1  3A62               	dw	14946
  1312  0097D3  3ADB               	dw	15067
  1313  0097D5  3B55               	dw	15189
  1314  0097D7  3BD1               	dw	15313
  1315  0097D9  3C4E               	dw	15438
  1316  0097DB  3CCD               	dw	15565
  1317  0097DD  3D4E               	dw	15694
  1318  0097DF  3DD0               	dw	15824
  1319  0097E1  3E54               	dw	15956
  1320  0097E3  3EDA               	dw	16090
  1321  0097E5  3F61               	dw	16225
  1322  0097E7  3FEA               	dw	16362
  1323  0097E9  4074               	dw	16500
  1324  0097EB  4101               	dw	16641
  1325  0097ED  418F               	dw	16783
  1326  0097EF  421F               	dw	16927
  1327  0097F1  42B1               	dw	17073
  1328  0097F3  4345               	dw	17221
  1329  0097F5  43DB               	dw	17371
  1330  0097F7  4473               	dw	17523
  1331  0097F9  450D               	dw	17677
  1332  0097FB  45A9               	dw	17833
  1333  0097FD  4647               	dw	17991
  1334  0097FF  46E7               	dw	18151
  1335  009801  4789               	dw	18313
  1336  009803  482E               	dw	18478
  1337  009805  48D5               	dw	18645
  1338  009807  497E               	dw	18814
  1339  009809  4A29               	dw	18985
  1340  00980B  4AD7               	dw	19159
  1341  00980D  4B87               	dw	19335
  1342  00980F  4C3A               	dw	19514
  1343  009811  4CEF               	dw	19695
  1344  009813  4DA6               	dw	19878
  1345  009815  4E61               	dw	20065
  1346  009817  4F1E               	dw	20254
  1347  009819  4FDD               	dw	20445
  1348  00981B  50A0               	dw	20640
  1349  00981D  5165               	dw	20837
  1350  00981F  522D               	dw	21037
  1351  009821  52F8               	dw	21240
  1352  009823  53C6               	dw	21446
  1353  009825  5497               	dw	21655
  1354  009827  556B               	dw	21867
  1355  009829  5642               	dw	22082
  1356  00982B  571C               	dw	22300
  1357  00982D  57FA               	dw	22522
  1358  00982F                     __end_of_motor_steps_lookup:
  1359                           	opt stack 0
  1360  00982F                     _motor_postscaler_lookup:
  1361                           	opt stack 0
  1362  00982F  0C                 	db	12
  1363  009830  07                 	db	7
  1364  009831  05                 	db	5
  1365  009832  04                 	db	4
  1366  009833  04                 	db	4
  1367  009834  03                 	db	3
  1368  009835  03                 	db	3
  1369  009836  03                 	db	3
  1370  009837  02                 	db	2
  1371  009838  02                 	db	2
  1372  009839  02                 	db	2
  1373  00983A  02                 	db	2
  1374  00983B  02                 	db	2
  1375  00983C  02                 	db	2
  1376  00983D  01                 	db	1
  1377  00983E  01                 	db	1
  1378  00983F  01                 	db	1
  1379  009840  01                 	db	1
  1380  009841  01                 	db	1
  1381  009842  01                 	db	1
  1382  009843  01                 	db	1
  1383  009844  01                 	db	1
  1384  009845  01                 	db	1
  1385  009846  01                 	db	1
  1386  009847  01                 	db	1
  1387  009848  01                 	db	1
  1388  009849  01                 	db	1
  1389  00984A  01                 	db	1
  1390  00984B  01                 	db	1
  1391  00984C  01                 	db	1
  1392  00984D  01                 	db	1
  1393  00984E  01                 	db	1
  1394  00984F  01                 	db	1
  1395  009850  01                 	db	1
  1396  009851  01                 	db	1
  1397  009852  01                 	db	1
  1398  009853  01                 	db	1
  1399  009854  01                 	db	1
  1400  009855  01                 	db	1
  1401  009856  01                 	db	1
  1402  009857  01                 	db	1
  1403  009858  01                 	db	1
  1404  009859  01                 	db	1
  1405  00985A  01                 	db	1
  1406  00985B  01                 	db	1
  1407  00985C  01                 	db	1
  1408  00985D  01                 	db	1
  1409  00985E  01                 	db	1
  1410  00985F  01                 	db	1
  1411  009860  01                 	db	1
  1412  009861  01                 	db	1
  1413  009862  01                 	db	1
  1414  009863  01                 	db	1
  1415  009864  01                 	db	1
  1416  009865  01                 	db	1
  1417  009866  01                 	db	1
  1418  009867  01                 	db	1
  1419  009868  01                 	db	1
  1420  009869  01                 	db	1
  1421  00986A  01                 	db	1
  1422  00986B  01                 	db	1
  1423  00986C  01                 	db	1
  1424  00986D  01                 	db	1
  1425  00986E  01                 	db	1
  1426  00986F  01                 	db	1
  1427  009870  01                 	db	1
  1428  009871  01                 	db	1
  1429  009872  01                 	db	1
  1430  009873  01                 	db	1
  1431  009874  01                 	db	1
  1432  009875  01                 	db	1
  1433  009876  01                 	db	1
  1434  009877  01                 	db	1
  1435  009878  01                 	db	1
  1436  009879  01                 	db	1
  1437  00987A  01                 	db	1
  1438  00987B  01                 	db	1
  1439  00987C  01                 	db	1
  1440  00987D  01                 	db	1
  1441  00987E  01                 	db	1
  1442  00987F  01                 	db	1
  1443  009880  01                 	db	1
  1444  009881  01                 	db	1
  1445  009882  01                 	db	1
  1446  009883  01                 	db	1
  1447  009884  01                 	db	1
  1448  009885  01                 	db	1
  1449  009886  01                 	db	1
  1450  009887  01                 	db	1
  1451  009888  01                 	db	1
  1452  009889  01                 	db	1
  1453  00988A  00                 	db	0
  1454  00988B  00                 	db	0
  1455  00988C  00                 	db	0
  1456  00988D  00                 	db	0
  1457  00988E  00                 	db	0
  1458  00988F  00                 	db	0
  1459  009890  00                 	db	0
  1460  009891  00                 	db	0
  1461  009892  00                 	db	0
  1462  009893  00                 	db	0
  1463  009894  00                 	db	0
  1464  009895  00                 	db	0
  1465  009896  00                 	db	0
  1466  009897  00                 	db	0
  1467  009898  00                 	db	0
  1468  009899  00                 	db	0
  1469  00989A  00                 	db	0
  1470  00989B  00                 	db	0
  1471  00989C  00                 	db	0
  1472  00989D  00                 	db	0
  1473  00989E  00                 	db	0
  1474  00989F  00                 	db	0
  1475  0098A0  00                 	db	0
  1476  0098A1  00                 	db	0
  1477  0098A2  00                 	db	0
  1478  0098A3  00                 	db	0
  1479  0098A4  00                 	db	0
  1480  0098A5  00                 	db	0
  1481  0098A6  00                 	db	0
  1482  0098A7  00                 	db	0
  1483  0098A8  00                 	db	0
  1484  0098A9  00                 	db	0
  1485  0098AA  00                 	db	0
  1486  0098AB  00                 	db	0
  1487  0098AC  00                 	db	0
  1488  0098AD  00                 	db	0
  1489  0098AE  00                 	db	0
  1490  0098AF  00                 	db	0
  1491  0098B0  00                 	db	0
  1492  0098B1  00                 	db	0
  1493  0098B2  00                 	db	0
  1494  0098B3  00                 	db	0
  1495  0098B4  00                 	db	0
  1496  0098B5  00                 	db	0
  1497  0098B6  00                 	db	0
  1498  0098B7  00                 	db	0
  1499  0098B8  00                 	db	0
  1500  0098B9  00                 	db	0
  1501  0098BA  00                 	db	0
  1502  0098BB  00                 	db	0
  1503  0098BC  00                 	db	0
  1504  0098BD  00                 	db	0
  1505  0098BE  00                 	db	0
  1506  0098BF  00                 	db	0
  1507  0098C0  00                 	db	0
  1508  0098C1  00                 	db	0
  1509  0098C2  00                 	db	0
  1510  0098C3  00                 	db	0
  1511  0098C4  00                 	db	0
  1512  0098C5  00                 	db	0
  1513  0098C6  00                 	db	0
  1514  0098C7  00                 	db	0
  1515  0098C8  00                 	db	0
  1516  0098C9  00                 	db	0
  1517  0098CA  00                 	db	0
  1518  0098CB  00                 	db	0
  1519  0098CC  00                 	db	0
  1520  0098CD  00                 	db	0
  1521  0098CE  00                 	db	0
  1522  0098CF  00                 	db	0
  1523  0098D0  00                 	db	0
  1524  0098D1  00                 	db	0
  1525  0098D2  00                 	db	0
  1526  0098D3  00                 	db	0
  1527  0098D4  00                 	db	0
  1528  0098D5  00                 	db	0
  1529  0098D6  00                 	db	0
  1530  0098D7  00                 	db	0
  1531  0098D8  00                 	db	0
  1532  0098D9  00                 	db	0
  1533  0098DA  00                 	db	0
  1534  0098DB  00                 	db	0
  1535  0098DC  00                 	db	0
  1536  0098DD  00                 	db	0
  1537  0098DE  00                 	db	0
  1538  0098DF  00                 	db	0
  1539  0098E0  00                 	db	0
  1540  0098E1  00                 	db	0
  1541  0098E2  00                 	db	0
  1542  0098E3  00                 	db	0
  1543  0098E4  00                 	db	0
  1544  0098E5  00                 	db	0
  1545  0098E6  00                 	db	0
  1546  0098E7  00                 	db	0
  1547  0098E8  00                 	db	0
  1548  0098E9  00                 	db	0
  1549  0098EA  00                 	db	0
  1550  0098EB  00                 	db	0
  1551  0098EC  00                 	db	0
  1552  0098ED  00                 	db	0
  1553  0098EE  00                 	db	0
  1554  0098EF  00                 	db	0
  1555  0098F0  00                 	db	0
  1556  0098F1  00                 	db	0
  1557  0098F2  00                 	db	0
  1558  0098F3  00                 	db	0
  1559  0098F4  00                 	db	0
  1560  0098F5  00                 	db	0
  1561  0098F6  00                 	db	0
  1562  0098F7  00                 	db	0
  1563  0098F8  00                 	db	0
  1564  0098F9  00                 	db	0
  1565  0098FA  00                 	db	0
  1566  0098FB  00                 	db	0
  1567  0098FC  00                 	db	0
  1568  0098FD  00                 	db	0
  1569  0098FE  00                 	db	0
  1570  0098FF  00                 	db	0
  1571  009900  00                 	db	0
  1572  009901  00                 	db	0
  1573  009902  00                 	db	0
  1574  009903  00                 	db	0
  1575  009904  00                 	db	0
  1576  009905  00                 	db	0
  1577  009906  00                 	db	0
  1578  009907  00                 	db	0
  1579  009908  00                 	db	0
  1580  009909  00                 	db	0
  1581  00990A  00                 	db	0
  1582  00990B  00                 	db	0
  1583  00990C  00                 	db	0
  1584  00990D  00                 	db	0
  1585  00990E  00                 	db	0
  1586  00990F  00                 	db	0
  1587  009910  00                 	db	0
  1588  009911  00                 	db	0
  1589  009912  00                 	db	0
  1590  009913  00                 	db	0
  1591  009914  00                 	db	0
  1592  009915  00                 	db	0
  1593  009916  00                 	db	0
  1594  009917  00                 	db	0
  1595  009918  00                 	db	0
  1596  009919  00                 	db	0
  1597  00991A  00                 	db	0
  1598  00991B  00                 	db	0
  1599  00991C  00                 	db	0
  1600  00991D  00                 	db	0
  1601  00991E  00                 	db	0
  1602  00991F  00                 	db	0
  1603  009920  00                 	db	0
  1604  009921  00                 	db	0
  1605  009922  00                 	db	0
  1606  009923  00                 	db	0
  1607  009924  00                 	db	0
  1608  009925  00                 	db	0
  1609  009926  00                 	db	0
  1610  009927  00                 	db	0
  1611  009928  00                 	db	0
  1612  009929  00                 	db	0
  1613  00992A  00                 	db	0
  1614  00992B  00                 	db	0
  1615  00992C  00                 	db	0
  1616  00992D  00                 	db	0
  1617  00992E  00                 	db	0
  1618  00992F  00                 	db	0
  1619  009930  00                 	db	0
  1620  009931  00                 	db	0
  1621  009932  00                 	db	0
  1622  009933  00                 	db	0
  1623  009934  00                 	db	0
  1624  009935  00                 	db	0
  1625  009936  00                 	db	0
  1626  009937  00                 	db	0
  1627  009938  00                 	db	0
  1628  009939  00                 	db	0
  1629  00993A  00                 	db	0
  1630  00993B  00                 	db	0
  1631  00993C  00                 	db	0
  1632  00993D  00                 	db	0
  1633  00993E  00                 	db	0
  1634  00993F  00                 	db	0
  1635  009940  00                 	db	0
  1636  009941  00                 	db	0
  1637  009942  00                 	db	0
  1638  009943  00                 	db	0
  1639  009944  00                 	db	0
  1640  009945  00                 	db	0
  1641  009946  00                 	db	0
  1642  009947  00                 	db	0
  1643  009948  00                 	db	0
  1644  009949  00                 	db	0
  1645  00994A  00                 	db	0
  1646  00994B  00                 	db	0
  1647  00994C  00                 	db	0
  1648  00994D  00                 	db	0
  1649  00994E  00                 	db	0
  1650  00994F  00                 	db	0
  1651  009950  00                 	db	0
  1652  009951  00                 	db	0
  1653  009952  00                 	db	0
  1654  009953  00                 	db	0
  1655  009954  00                 	db	0
  1656  009955  00                 	db	0
  1657  009956  00                 	db	0
  1658  009957  00                 	db	0
  1659  009958  00                 	db	0
  1660  009959  00                 	db	0
  1661  00995A  00                 	db	0
  1662  00995B  00                 	db	0
  1663  00995C  00                 	db	0
  1664  00995D  00                 	db	0
  1665  00995E  00                 	db	0
  1666  00995F  00                 	db	0
  1667  009960  00                 	db	0
  1668  009961  00                 	db	0
  1669  009962  00                 	db	0
  1670  009963  00                 	db	0
  1671  009964  00                 	db	0
  1672  009965  00                 	db	0
  1673  009966  00                 	db	0
  1674  009967  00                 	db	0
  1675  009968  00                 	db	0
  1676  009969  00                 	db	0
  1677  00996A  00                 	db	0
  1678  00996B  00                 	db	0
  1679  00996C  00                 	db	0
  1680  00996D  00                 	db	0
  1681  00996E  00                 	db	0
  1682  00996F  00                 	db	0
  1683  009970  00                 	db	0
  1684  009971  00                 	db	0
  1685  009972  00                 	db	0
  1686  009973  00                 	db	0
  1687  009974  00                 	db	0
  1688  009975  00                 	db	0
  1689  009976  00                 	db	0
  1690  009977  00                 	db	0
  1691  009978  00                 	db	0
  1692  009979  00                 	db	0
  1693  00997A  00                 	db	0
  1694  00997B  00                 	db	0
  1695  00997C  00                 	db	0
  1696  00997D  00                 	db	0
  1697  00997E  00                 	db	0
  1698  00997F  00                 	db	0
  1699  009980  00                 	db	0
  1700  009981  00                 	db	0
  1701  009982  00                 	db	0
  1702  009983  00                 	db	0
  1703  009984  00                 	db	0
  1704  009985  00                 	db	0
  1705  009986  00                 	db	0
  1706  009987  00                 	db	0
  1707  009988  00                 	db	0
  1708  009989  00                 	db	0
  1709  00998A  00                 	db	0
  1710  00998B  00                 	db	0
  1711  00998C  00                 	db	0
  1712  00998D  00                 	db	0
  1713  00998E  00                 	db	0
  1714  00998F  00                 	db	0
  1715  009990  00                 	db	0
  1716  009991  00                 	db	0
  1717  009992  00                 	db	0
  1718  009993  00                 	db	0
  1719  009994  00                 	db	0
  1720  009995  00                 	db	0
  1721  009996  00                 	db	0
  1722  009997  00                 	db	0
  1723  009998  00                 	db	0
  1724  009999  00                 	db	0
  1725  00999A  00                 	db	0
  1726  00999B  00                 	db	0
  1727  00999C  00                 	db	0
  1728  00999D  00                 	db	0
  1729  00999E  00                 	db	0
  1730  00999F  00                 	db	0
  1731  0099A0  00                 	db	0
  1732  0099A1  00                 	db	0
  1733  0099A2  00                 	db	0
  1734  0099A3  00                 	db	0
  1735  0099A4  00                 	db	0
  1736  0099A5  00                 	db	0
  1737  0099A6  00                 	db	0
  1738  0099A7  00                 	db	0
  1739  0099A8  00                 	db	0
  1740  0099A9  00                 	db	0
  1741  0099AA  00                 	db	0
  1742  0099AB  00                 	db	0
  1743  0099AC  00                 	db	0
  1744  0099AD  00                 	db	0
  1745  0099AE  00                 	db	0
  1746  0099AF  00                 	db	0
  1747  0099B0  00                 	db	0
  1748  0099B1  00                 	db	0
  1749  0099B2  00                 	db	0
  1750  0099B3  00                 	db	0
  1751  0099B4  00                 	db	0
  1752  0099B5  00                 	db	0
  1753  0099B6  00                 	db	0
  1754  0099B7  00                 	db	0
  1755  0099B8  00                 	db	0
  1756  0099B9  00                 	db	0
  1757  0099BA  00                 	db	0
  1758  0099BB  00                 	db	0
  1759  0099BC  00                 	db	0
  1760  0099BD  00                 	db	0
  1761  0099BE  00                 	db	0
  1762  0099BF  00                 	db	0
  1763  0099C0  00                 	db	0
  1764  0099C1  00                 	db	0
  1765  0099C2  00                 	db	0
  1766  0099C3  00                 	db	0
  1767  0099C4  00                 	db	0
  1768  0099C5  00                 	db	0
  1769  0099C6  00                 	db	0
  1770  0099C7  00                 	db	0
  1771  0099C8  00                 	db	0
  1772  0099C9  00                 	db	0
  1773  0099CA  00                 	db	0
  1774  0099CB  00                 	db	0
  1775  0099CC  00                 	db	0
  1776  0099CD  00                 	db	0
  1777  0099CE  00                 	db	0
  1778  0099CF  00                 	db	0
  1779  0099D0  00                 	db	0
  1780  0099D1  00                 	db	0
  1781  0099D2  00                 	db	0
  1782  0099D3  00                 	db	0
  1783  0099D4  00                 	db	0
  1784  0099D5  00                 	db	0
  1785  0099D6  00                 	db	0
  1786  0099D7  00                 	db	0
  1787  0099D8  00                 	db	0
  1788  0099D9  00                 	db	0
  1789  0099DA  00                 	db	0
  1790  0099DB  00                 	db	0
  1791  0099DC  00                 	db	0
  1792  0099DD  00                 	db	0
  1793  0099DE  00                 	db	0
  1794  0099DF  00                 	db	0
  1795  0099E0  00                 	db	0
  1796  0099E1  00                 	db	0
  1797  0099E2  00                 	db	0
  1798  0099E3  00                 	db	0
  1799  0099E4  00                 	db	0
  1800  0099E5  00                 	db	0
  1801  0099E6  00                 	db	0
  1802  0099E7  00                 	db	0
  1803  0099E8  00                 	db	0
  1804  0099E9  00                 	db	0
  1805  0099EA  00                 	db	0
  1806  0099EB  00                 	db	0
  1807  0099EC  00                 	db	0
  1808  0099ED  00                 	db	0
  1809  0099EE  00                 	db	0
  1810  0099EF  00                 	db	0
  1811  0099F0  00                 	db	0
  1812  0099F1  00                 	db	0
  1813  0099F2  00                 	db	0
  1814  0099F3  00                 	db	0
  1815  0099F4  00                 	db	0
  1816  0099F5  00                 	db	0
  1817  0099F6  00                 	db	0
  1818  0099F7  00                 	db	0
  1819  0099F8  00                 	db	0
  1820  0099F9  00                 	db	0
  1821  0099FA  00                 	db	0
  1822  0099FB  00                 	db	0
  1823  0099FC  00                 	db	0
  1824  0099FD  00                 	db	0
  1825  0099FE  00                 	db	0
  1826  0099FF  00                 	db	0
  1827  009A00  00                 	db	0
  1828  009A01  00                 	db	0
  1829  009A02  00                 	db	0
  1830  009A03  00                 	db	0
  1831  009A04  00                 	db	0
  1832  009A05  00                 	db	0
  1833  009A06  00                 	db	0
  1834  009A07  00                 	db	0
  1835  009A08  00                 	db	0
  1836  009A09  00                 	db	0
  1837  009A0A  00                 	db	0
  1838  009A0B  00                 	db	0
  1839  009A0C  00                 	db	0
  1840  009A0D  00                 	db	0
  1841  009A0E  00                 	db	0
  1842  009A0F  00                 	db	0
  1843  009A10  00                 	db	0
  1844  009A11  00                 	db	0
  1845  009A12  00                 	db	0
  1846  009A13  00                 	db	0
  1847  009A14  00                 	db	0
  1848  009A15  00                 	db	0
  1849  009A16                     __end_of_motor_postscaler_lookup:
  1850                           	opt stack 0
  1851  009A16                     _motor_period_lookup:
  1852                           	opt stack 0
  1853  009A16  EC                 	db	236
  1854  009A17  F2                 	db	242
  1855  009A18  F6                 	db	246
  1856  009A19  F4                 	db	244
  1857  009A1A  D2                 	db	210
  1858  009A1B  E8                 	db	232
  1859  009A1C  D2                 	db	210
  1860  009A1D  C0                 	db	192
  1861  009A1E  EC                 	db	236
  1862  009A1F  DC                 	db	220
  1863  009A20  CF                 	db	207
  1864  009A21  C3                 	db	195
  1865  009A22  B9                 	db	185
  1866  009A23  B0                 	db	176
  1867  009A24  FC                 	db	252
  1868  009A25  F2                 	db	242
  1869  009A26  E8                 	db	232
  1870  009A27  DF                 	db	223
  1871  009A28  D7                 	db	215
  1872  009A29  D0                 	db	208
  1873  009A2A  CA                 	db	202
  1874  009A2B  C3                 	db	195
  1875  009A2C  BE                 	db	190
  1876  009A2D  B8                 	db	184
  1877  009A2E  B3                 	db	179
  1878  009A2F  AF                 	db	175
  1879  009A30  AA                 	db	170
  1880  009A31  A6                 	db	166
  1881  009A32  A2                 	db	162
  1882  009A33  9F                 	db	159
  1883  009A34  9B                 	db	155
  1884  009A35  98                 	db	152
  1885  009A36  95                 	db	149
  1886  009A37  92                 	db	146
  1887  009A38  8F                 	db	143
  1888  009A39  8C                 	db	140
  1889  009A3A  8A                 	db	138
  1890  009A3B  87                 	db	135
  1891  009A3C  85                 	db	133
  1892  009A3D  83                 	db	131
  1893  009A3E  81                 	db	129
  1894  009A3F  7F                 	db	127
  1895  009A40  7D                 	db	125
  1896  009A41  7B                 	db	123
  1897  009A42  79                 	db	121
  1898  009A43  77                 	db	119
  1899  009A44  75                 	db	117
  1900  009A45  74                 	db	116
  1901  009A46  72                 	db	114
  1902  009A47  71                 	db	113
  1903  009A48  6F                 	db	111
  1904  009A49  6E                 	db	110
  1905  009A4A  6C                 	db	108
  1906  009A4B  6B                 	db	107
  1907  009A4C  6A                 	db	106
  1908  009A4D  68                 	db	104
  1909  009A4E  67                 	db	103
  1910  009A4F  66                 	db	102
  1911  009A50  65                 	db	101
  1912  009A51  64                 	db	100
  1913  009A52  62                 	db	98
  1914  009A53  61                 	db	97
  1915  009A54  60                 	db	96
  1916  009A55  5F                 	db	95
  1917  009A56  5E                 	db	94
  1918  009A57  5D                 	db	93
  1919  009A58  5C                 	db	92
  1920  009A59  5B                 	db	91
  1921  009A5A  59                 	db	89
  1922  009A5B  57                 	db	87
  1923  009A5C  56                 	db	86
  1924  009A5D  54                 	db	84
  1925  009A5E  53                 	db	83
  1926  009A5F  51                 	db	81
  1927  009A60  50                 	db	80
  1928  009A61  4F                 	db	79
  1929  009A62  4E                 	db	78
  1930  009A63  4C                 	db	76
  1931  009A64  4B                 	db	75
  1932  009A65  4A                 	db	74
  1933  009A66  49                 	db	73
  1934  009A67  48                 	db	72
  1935  009A68  47                 	db	71
  1936  009A69  46                 	db	70
  1937  009A6A  45                 	db	69
  1938  009A6B  44                 	db	68
  1939  009A6C  43                 	db	67
  1940  009A6D  42                 	db	66
  1941  009A6E  41                 	db	65
  1942  009A6F  40                 	db	64
  1943  009A70  3F                 	db	63
  1944  009A71  FE                 	db	254
  1945  009A72  FB                 	db	251
  1946  009A73  F8                 	db	248
  1947  009A74  F6                 	db	246
  1948  009A75  F3                 	db	243
  1949  009A76  F0                 	db	240
  1950  009A77  EE                 	db	238
  1951  009A78  EC                 	db	236
  1952  009A79  E9                 	db	233
  1953  009A7A  E7                 	db	231
  1954  009A7B  E5                 	db	229
  1955  009A7C  E3                 	db	227
  1956  009A7D  E0                 	db	224
  1957  009A7E  DE                 	db	222
  1958  009A7F  DC                 	db	220
  1959  009A80  DA                 	db	218
  1960  009A81  D8                 	db	216
  1961  009A82  D7                 	db	215
  1962  009A83  D5                 	db	213
  1963  009A84  D3                 	db	211
  1964  009A85  D1                 	db	209
  1965  009A86  CF                 	db	207
  1966  009A87  CE                 	db	206
  1967  009A88  CC                 	db	204
  1968  009A89  CA                 	db	202
  1969  009A8A  C9                 	db	201
  1970  009A8B  C7                 	db	199
  1971  009A8C  C6                 	db	198
  1972  009A8D  C4                 	db	196
  1973  009A8E  C3                 	db	195
  1974  009A8F  C1                 	db	193
  1975  009A90  C0                 	db	192
  1976  009A91  BE                 	db	190
  1977  009A92  BD                 	db	189
  1978  009A93  BC                 	db	188
  1979  009A94  BA                 	db	186
  1980  009A95  B8                 	db	184
  1981  009A96  B6                 	db	182
  1982  009A97  B4                 	db	180
  1983  009A98  B3                 	db	179
  1984  009A99  B1                 	db	177
  1985  009A9A  AF                 	db	175
  1986  009A9B  AE                 	db	174
  1987  009A9C  AC                 	db	172
  1988  009A9D  AA                 	db	170
  1989  009A9E  A9                 	db	169
  1990  009A9F  A7                 	db	167
  1991  009AA0  A6                 	db	166
  1992  009AA1  A4                 	db	164
  1993  009AA2  A3                 	db	163
  1994  009AA3  A1                 	db	161
  1995  009AA4  A0                 	db	160
  1996  009AA5  9F                 	db	159
  1997  009AA6  9D                 	db	157
  1998  009AA7  9C                 	db	156
  1999  009AA8  9B                 	db	155
  2000  009AA9  9A                 	db	154
  2001  009AAA  98                 	db	152
  2002  009AAB  97                 	db	151
  2003  009AAC  96                 	db	150
  2004  009AAD  95                 	db	149
  2005  009AAE  94                 	db	148
  2006  009AAF  93                 	db	147
  2007  009AB0  92                 	db	146
  2008  009AB1  90                 	db	144
  2009  009AB2  8F                 	db	143
  2010  009AB3  8E                 	db	142
  2011  009AB4  8D                 	db	141
  2012  009AB5  8C                 	db	140
  2013  009AB6  8B                 	db	139
  2014  009AB7  8A                 	db	138
  2015  009AB8  89                 	db	137
  2016  009AB9  88                 	db	136
  2017  009ABA  87                 	db	135
  2018  009ABB  86                 	db	134
  2019  009ABC  85                 	db	133
  2020  009ABD  84                 	db	132
  2021  009ABE  83                 	db	131
  2022  009ABF  82                 	db	130
  2023  009AC0  81                 	db	129
  2024  009AC1  80                 	db	128
  2025  009AC2  7F                 	db	127
  2026  009AC3  7E                 	db	126
  2027  009AC4  7D                 	db	125
  2028  009AC5  7C                 	db	124
  2029  009AC6  7B                 	db	123
  2030  009AC7  7A                 	db	122
  2031  009AC8  79                 	db	121
  2032  009AC9  78                 	db	120
  2033  009ACA  77                 	db	119
  2034  009ACB  76                 	db	118
  2035  009ACC  75                 	db	117
  2036  009ACD  74                 	db	116
  2037  009ACE  73                 	db	115
  2038  009ACF  72                 	db	114
  2039  009AD0  71                 	db	113
  2040  009AD1  70                 	db	112
  2041  009AD2  6F                 	db	111
  2042  009AD3  6E                 	db	110
  2043  009AD4  6D                 	db	109
  2044  009AD5  6C                 	db	108
  2045  009AD6  6B                 	db	107
  2046  009AD7  6A                 	db	106
  2047  009AD8  69                 	db	105
  2048  009AD9  68                 	db	104
  2049  009ADA  67                 	db	103
  2050  009ADB  66                 	db	102
  2051  009ADC  65                 	db	101
  2052  009ADD  64                 	db	100
  2053  009ADE  63                 	db	99
  2054  009ADF  62                 	db	98
  2055  009AE0  61                 	db	97
  2056  009AE1  60                 	db	96
  2057  009AE2  5F                 	db	95
  2058  009AE3  5E                 	db	94
  2059  009AE4  5D                 	db	93
  2060  009AE5  5C                 	db	92
  2061  009AE6  5B                 	db	91
  2062  009AE7  5A                 	db	90
  2063  009AE8  59                 	db	89
  2064  009AE9  58                 	db	88
  2065  009AEA  57                 	db	87
  2066  009AEB  56                 	db	86
  2067  009AEC  55                 	db	85
  2068  009AED  54                 	db	84
  2069  009AEE  53                 	db	83
  2070  009AEF  52                 	db	82
  2071  009AF0  51                 	db	81
  2072  009AF1  50                 	db	80
  2073  009AF2  4F                 	db	79
  2074  009AF3  4E                 	db	78
  2075  009AF4  4D                 	db	77
  2076  009AF5  4C                 	db	76
  2077  009AF6  4B                 	db	75
  2078  009AF7  4A                 	db	74
  2079  009AF8  49                 	db	73
  2080  009AF9  48                 	db	72
  2081  009AFA  47                 	db	71
  2082  009AFB  46                 	db	70
  2083  009AFC  45                 	db	69
  2084  009AFD  44                 	db	68
  2085  009AFE  43                 	db	67
  2086  009AFF  42                 	db	66
  2087  009B00  41                 	db	65
  2088  009B01  40                 	db	64
  2089  009B02  3F                 	db	63
  2090  009B03  FF                 	db	255
  2091  009B04  FE                 	db	254
  2092  009B05  FD                 	db	253
  2093  009B06  FC                 	db	252
  2094  009B07  FB                 	db	251
  2095  009B08  FA                 	db	250
  2096  009B09  F9                 	db	249
  2097  009B0A  F8                 	db	248
  2098  009B0B  F7                 	db	247
  2099  009B0C  F6                 	db	246
  2100  009B0D  F5                 	db	245
  2101  009B0E  F4                 	db	244
  2102  009B0F  F3                 	db	243
  2103  009B10  F2                 	db	242
  2104  009B11  F1                 	db	241
  2105  009B12  F0                 	db	240
  2106  009B13  EF                 	db	239
  2107  009B14  EE                 	db	238
  2108  009B15  ED                 	db	237
  2109  009B16  EC                 	db	236
  2110  009B17  EB                 	db	235
  2111  009B18  EA                 	db	234
  2112  009B19  E9                 	db	233
  2113  009B1A  E8                 	db	232
  2114  009B1B  E7                 	db	231
  2115  009B1C  E6                 	db	230
  2116  009B1D  E5                 	db	229
  2117  009B1E  E4                 	db	228
  2118  009B1F  E3                 	db	227
  2119  009B20  E2                 	db	226
  2120  009B21  E1                 	db	225
  2121  009B22  E0                 	db	224
  2122  009B23  DF                 	db	223
  2123  009B24  DE                 	db	222
  2124  009B25  DD                 	db	221
  2125  009B26  DC                 	db	220
  2126  009B27  DB                 	db	219
  2127  009B28  DA                 	db	218
  2128  009B29  D9                 	db	217
  2129  009B2A  D8                 	db	216
  2130  009B2B  D7                 	db	215
  2131  009B2C  D6                 	db	214
  2132  009B2D  D5                 	db	213
  2133  009B2E  D4                 	db	212
  2134  009B2F  D3                 	db	211
  2135  009B30  D2                 	db	210
  2136  009B31  D1                 	db	209
  2137  009B32  D0                 	db	208
  2138  009B33  CF                 	db	207
  2139  009B34  CE                 	db	206
  2140  009B35  CD                 	db	205
  2141  009B36  CC                 	db	204
  2142  009B37  CB                 	db	203
  2143  009B38  CA                 	db	202
  2144  009B39  C9                 	db	201
  2145  009B3A  C8                 	db	200
  2146  009B3B  C7                 	db	199
  2147  009B3C  C6                 	db	198
  2148  009B3D  C5                 	db	197
  2149  009B3E  C4                 	db	196
  2150  009B3F  C3                 	db	195
  2151  009B40  C2                 	db	194
  2152  009B41  C1                 	db	193
  2153  009B42  C0                 	db	192
  2154  009B43  BF                 	db	191
  2155  009B44  BE                 	db	190
  2156  009B45  BD                 	db	189
  2157  009B46  BC                 	db	188
  2158  009B47  BB                 	db	187
  2159  009B48  BA                 	db	186
  2160  009B49  B9                 	db	185
  2161  009B4A  B8                 	db	184
  2162  009B4B  B7                 	db	183
  2163  009B4C  B6                 	db	182
  2164  009B4D  B5                 	db	181
  2165  009B4E  B4                 	db	180
  2166  009B4F  B3                 	db	179
  2167  009B50  B2                 	db	178
  2168  009B51  B1                 	db	177
  2169  009B52  B0                 	db	176
  2170  009B53  AF                 	db	175
  2171  009B54  AE                 	db	174
  2172  009B55  AD                 	db	173
  2173  009B56  AC                 	db	172
  2174  009B57  AB                 	db	171
  2175  009B58  AA                 	db	170
  2176  009B59  A9                 	db	169
  2177  009B5A  A8                 	db	168
  2178  009B5B  A7                 	db	167
  2179  009B5C  A6                 	db	166
  2180  009B5D  A5                 	db	165
  2181  009B5E  A4                 	db	164
  2182  009B5F  A3                 	db	163
  2183  009B60  A2                 	db	162
  2184  009B61  A1                 	db	161
  2185  009B62  A0                 	db	160
  2186  009B63  9F                 	db	159
  2187  009B64  9E                 	db	158
  2188  009B65  9D                 	db	157
  2189  009B66  9C                 	db	156
  2190  009B67  9B                 	db	155
  2191  009B68  9A                 	db	154
  2192  009B69  99                 	db	153
  2193  009B6A  98                 	db	152
  2194  009B6B  97                 	db	151
  2195  009B6C  96                 	db	150
  2196  009B6D  95                 	db	149
  2197  009B6E  94                 	db	148
  2198  009B6F  93                 	db	147
  2199  009B70  92                 	db	146
  2200  009B71  91                 	db	145
  2201  009B72  90                 	db	144
  2202  009B73  8F                 	db	143
  2203  009B74  8E                 	db	142
  2204  009B75  8D                 	db	141
  2205  009B76  8C                 	db	140
  2206  009B77  8B                 	db	139
  2207  009B78  8A                 	db	138
  2208  009B79  89                 	db	137
  2209  009B7A  88                 	db	136
  2210  009B7B  87                 	db	135
  2211  009B7C  86                 	db	134
  2212  009B7D  85                 	db	133
  2213  009B7E  84                 	db	132
  2214  009B7F  83                 	db	131
  2215  009B80  82                 	db	130
  2216  009B81  81                 	db	129
  2217  009B82  80                 	db	128
  2218  009B83  7F                 	db	127
  2219  009B84  7E                 	db	126
  2220  009B85  7D                 	db	125
  2221  009B86  7C                 	db	124
  2222  009B87  7B                 	db	123
  2223  009B88  7A                 	db	122
  2224  009B89  79                 	db	121
  2225  009B8A  78                 	db	120
  2226  009B8B  77                 	db	119
  2227  009B8C  76                 	db	118
  2228  009B8D  75                 	db	117
  2229  009B8E  74                 	db	116
  2230  009B8F  73                 	db	115
  2231  009B90  72                 	db	114
  2232  009B91  71                 	db	113
  2233  009B92  70                 	db	112
  2234  009B93  6F                 	db	111
  2235  009B94  6E                 	db	110
  2236  009B95  6D                 	db	109
  2237  009B96  6C                 	db	108
  2238  009B97  6B                 	db	107
  2239  009B98  6A                 	db	106
  2240  009B99  69                 	db	105
  2241  009B9A  68                 	db	104
  2242  009B9B  67                 	db	103
  2243  009B9C  66                 	db	102
  2244  009B9D  65                 	db	101
  2245  009B9E  64                 	db	100
  2246  009B9F  63                 	db	99
  2247  009BA0  62                 	db	98
  2248  009BA1  61                 	db	97
  2249  009BA2  60                 	db	96
  2250  009BA3  5F                 	db	95
  2251  009BA4  5E                 	db	94
  2252  009BA5  5D                 	db	93
  2253  009BA6  5C                 	db	92
  2254  009BA7  5B                 	db	91
  2255  009BA8  5A                 	db	90
  2256  009BA9  59                 	db	89
  2257  009BAA  58                 	db	88
  2258  009BAB  57                 	db	87
  2259  009BAC  56                 	db	86
  2260  009BAD  55                 	db	85
  2261  009BAE  54                 	db	84
  2262  009BAF  53                 	db	83
  2263  009BB0  52                 	db	82
  2264  009BB1  51                 	db	81
  2265  009BB2  50                 	db	80
  2266  009BB3  4F                 	db	79
  2267  009BB4  4E                 	db	78
  2268  009BB5  4D                 	db	77
  2269  009BB6  4C                 	db	76
  2270  009BB7  4B                 	db	75
  2271  009BB8  4A                 	db	74
  2272  009BB9  49                 	db	73
  2273  009BBA  48                 	db	72
  2274  009BBB  47                 	db	71
  2275  009BBC  46                 	db	70
  2276  009BBD  45                 	db	69
  2277  009BBE  44                 	db	68
  2278  009BBF  43                 	db	67
  2279  009BC0  42                 	db	66
  2280  009BC1  41                 	db	65
  2281  009BC2  40                 	db	64
  2282  009BC3  3F                 	db	63
  2283  009BC4  FF                 	db	255
  2284  009BC5  FE                 	db	254
  2285  009BC6  FD                 	db	253
  2286  009BC7  FC                 	db	252
  2287  009BC8  FB                 	db	251
  2288  009BC9  FA                 	db	250
  2289  009BCA  F9                 	db	249
  2290  009BCB  F8                 	db	248
  2291  009BCC  F7                 	db	247
  2292  009BCD  F6                 	db	246
  2293  009BCE  F5                 	db	245
  2294  009BCF  F4                 	db	244
  2295  009BD0  F3                 	db	243
  2296  009BD1  F2                 	db	242
  2297  009BD2  F1                 	db	241
  2298  009BD3  F0                 	db	240
  2299  009BD4  EF                 	db	239
  2300  009BD5  EE                 	db	238
  2301  009BD6  ED                 	db	237
  2302  009BD7  EC                 	db	236
  2303  009BD8  EB                 	db	235
  2304  009BD9  EA                 	db	234
  2305  009BDA  E9                 	db	233
  2306  009BDB  E8                 	db	232
  2307  009BDC  E7                 	db	231
  2308  009BDD  E6                 	db	230
  2309  009BDE  E5                 	db	229
  2310  009BDF  E4                 	db	228
  2311  009BE0  E3                 	db	227
  2312  009BE1  E2                 	db	226
  2313  009BE2  E1                 	db	225
  2314  009BE3  E0                 	db	224
  2315  009BE4  DF                 	db	223
  2316  009BE5  DE                 	db	222
  2317  009BE6  DD                 	db	221
  2318  009BE7  DC                 	db	220
  2319  009BE8  DB                 	db	219
  2320  009BE9  DA                 	db	218
  2321  009BEA  D9                 	db	217
  2322  009BEB  D8                 	db	216
  2323  009BEC  D7                 	db	215
  2324  009BED  D6                 	db	214
  2325  009BEE  D5                 	db	213
  2326  009BEF  D4                 	db	212
  2327  009BF0  D3                 	db	211
  2328  009BF1  D2                 	db	210
  2329  009BF2  D1                 	db	209
  2330  009BF3  D0                 	db	208
  2331  009BF4  CF                 	db	207
  2332  009BF5  CE                 	db	206
  2333  009BF6  CD                 	db	205
  2334  009BF7  CC                 	db	204
  2335  009BF8  CB                 	db	203
  2336  009BF9  CA                 	db	202
  2337  009BFA  C9                 	db	201
  2338  009BFB  C8                 	db	200
  2339  009BFC  C7                 	db	199
  2340  009BFD                     __end_of_motor_period_lookup:
  2341                           	opt stack 0
  2342  009BFD                     _motor_prescaler_lookup:
  2343                           	opt stack 0
  2344  009BFD  02                 	db	2
  2345  009BFE  02                 	db	2
  2346  009BFF  02                 	db	2
  2347  009C00  02                 	db	2
  2348  009C01  02                 	db	2
  2349  009C02  02                 	db	2
  2350  009C03  02                 	db	2
  2351  009C04  02                 	db	2
  2352  009C05  02                 	db	2
  2353  009C06  02                 	db	2
  2354  009C07  02                 	db	2
  2355  009C08  02                 	db	2
  2356  009C09  02                 	db	2
  2357  009C0A  02                 	db	2
  2358  009C0B  02                 	db	2
  2359  009C0C  02                 	db	2
  2360  009C0D  02                 	db	2
  2361  009C0E  02                 	db	2
  2362  009C0F  02                 	db	2
  2363  009C10  02                 	db	2
  2364  009C11  02                 	db	2
  2365  009C12  02                 	db	2
  2366  009C13  02                 	db	2
  2367  009C14  02                 	db	2
  2368  009C15  02                 	db	2
  2369  009C16  02                 	db	2
  2370  009C17  02                 	db	2
  2371  009C18  02                 	db	2
  2372  009C19  02                 	db	2
  2373  009C1A  02                 	db	2
  2374  009C1B  02                 	db	2
  2375  009C1C  02                 	db	2
  2376  009C1D  02                 	db	2
  2377  009C1E  02                 	db	2
  2378  009C1F  02                 	db	2
  2379  009C20  02                 	db	2
  2380  009C21  02                 	db	2
  2381  009C22  02                 	db	2
  2382  009C23  02                 	db	2
  2383  009C24  02                 	db	2
  2384  009C25  02                 	db	2
  2385  009C26  02                 	db	2
  2386  009C27  02                 	db	2
  2387  009C28  02                 	db	2
  2388  009C29  02                 	db	2
  2389  009C2A  02                 	db	2
  2390  009C2B  02                 	db	2
  2391  009C2C  02                 	db	2
  2392  009C2D  02                 	db	2
  2393  009C2E  02                 	db	2
  2394  009C2F  02                 	db	2
  2395  009C30  02                 	db	2
  2396  009C31  02                 	db	2
  2397  009C32  02                 	db	2
  2398  009C33  02                 	db	2
  2399  009C34  02                 	db	2
  2400  009C35  02                 	db	2
  2401  009C36  02                 	db	2
  2402  009C37  02                 	db	2
  2403  009C38  02                 	db	2
  2404  009C39  02                 	db	2
  2405  009C3A  02                 	db	2
  2406  009C3B  02                 	db	2
  2407  009C3C  02                 	db	2
  2408  009C3D  02                 	db	2
  2409  009C3E  02                 	db	2
  2410  009C3F  02                 	db	2
  2411  009C40  02                 	db	2
  2412  009C41  02                 	db	2
  2413  009C42  02                 	db	2
  2414  009C43  02                 	db	2
  2415  009C44  02                 	db	2
  2416  009C45  02                 	db	2
  2417  009C46  02                 	db	2
  2418  009C47  02                 	db	2
  2419  009C48  02                 	db	2
  2420  009C49  02                 	db	2
  2421  009C4A  02                 	db	2
  2422  009C4B  02                 	db	2
  2423  009C4C  02                 	db	2
  2424  009C4D  02                 	db	2
  2425  009C4E  02                 	db	2
  2426  009C4F  02                 	db	2
  2427  009C50  02                 	db	2
  2428  009C51  02                 	db	2
  2429  009C52  02                 	db	2
  2430  009C53  02                 	db	2
  2431  009C54  02                 	db	2
  2432  009C55  02                 	db	2
  2433  009C56  02                 	db	2
  2434  009C57  02                 	db	2
  2435  009C58  02                 	db	2
  2436  009C59  02                 	db	2
  2437  009C5A  02                 	db	2
  2438  009C5B  02                 	db	2
  2439  009C5C  02                 	db	2
  2440  009C5D  02                 	db	2
  2441  009C5E  02                 	db	2
  2442  009C5F  02                 	db	2
  2443  009C60  02                 	db	2
  2444  009C61  02                 	db	2
  2445  009C62  02                 	db	2
  2446  009C63  02                 	db	2
  2447  009C64  02                 	db	2
  2448  009C65  02                 	db	2
  2449  009C66  02                 	db	2
  2450  009C67  02                 	db	2
  2451  009C68  02                 	db	2
  2452  009C69  02                 	db	2
  2453  009C6A  02                 	db	2
  2454  009C6B  02                 	db	2
  2455  009C6C  02                 	db	2
  2456  009C6D  02                 	db	2
  2457  009C6E  02                 	db	2
  2458  009C6F  02                 	db	2
  2459  009C70  02                 	db	2
  2460  009C71  02                 	db	2
  2461  009C72  02                 	db	2
  2462  009C73  02                 	db	2
  2463  009C74  02                 	db	2
  2464  009C75  02                 	db	2
  2465  009C76  02                 	db	2
  2466  009C77  02                 	db	2
  2467  009C78  02                 	db	2
  2468  009C79  02                 	db	2
  2469  009C7A  02                 	db	2
  2470  009C7B  02                 	db	2
  2471  009C7C  02                 	db	2
  2472  009C7D  02                 	db	2
  2473  009C7E  02                 	db	2
  2474  009C7F  02                 	db	2
  2475  009C80  02                 	db	2
  2476  009C81  02                 	db	2
  2477  009C82  02                 	db	2
  2478  009C83  02                 	db	2
  2479  009C84  02                 	db	2
  2480  009C85  02                 	db	2
  2481  009C86  02                 	db	2
  2482  009C87  02                 	db	2
  2483  009C88  02                 	db	2
  2484  009C89  02                 	db	2
  2485  009C8A  02                 	db	2
  2486  009C8B  02                 	db	2
  2487  009C8C  02                 	db	2
  2488  009C8D  02                 	db	2
  2489  009C8E  02                 	db	2
  2490  009C8F  02                 	db	2
  2491  009C90  02                 	db	2
  2492  009C91  02                 	db	2
  2493  009C92  02                 	db	2
  2494  009C93  02                 	db	2
  2495  009C94  02                 	db	2
  2496  009C95  02                 	db	2
  2497  009C96  02                 	db	2
  2498  009C97  02                 	db	2
  2499  009C98  02                 	db	2
  2500  009C99  02                 	db	2
  2501  009C9A  02                 	db	2
  2502  009C9B  02                 	db	2
  2503  009C9C  02                 	db	2
  2504  009C9D  02                 	db	2
  2505  009C9E  02                 	db	2
  2506  009C9F  02                 	db	2
  2507  009CA0  02                 	db	2
  2508  009CA1  02                 	db	2
  2509  009CA2  02                 	db	2
  2510  009CA3  02                 	db	2
  2511  009CA4  02                 	db	2
  2512  009CA5  02                 	db	2
  2513  009CA6  02                 	db	2
  2514  009CA7  02                 	db	2
  2515  009CA8  02                 	db	2
  2516  009CA9  02                 	db	2
  2517  009CAA  02                 	db	2
  2518  009CAB  02                 	db	2
  2519  009CAC  02                 	db	2
  2520  009CAD  02                 	db	2
  2521  009CAE  02                 	db	2
  2522  009CAF  02                 	db	2
  2523  009CB0  02                 	db	2
  2524  009CB1  02                 	db	2
  2525  009CB2  02                 	db	2
  2526  009CB3  02                 	db	2
  2527  009CB4  02                 	db	2
  2528  009CB5  02                 	db	2
  2529  009CB6  02                 	db	2
  2530  009CB7  02                 	db	2
  2531  009CB8  02                 	db	2
  2532  009CB9  02                 	db	2
  2533  009CBA  02                 	db	2
  2534  009CBB  02                 	db	2
  2535  009CBC  02                 	db	2
  2536  009CBD  02                 	db	2
  2537  009CBE  02                 	db	2
  2538  009CBF  02                 	db	2
  2539  009CC0  02                 	db	2
  2540  009CC1  02                 	db	2
  2541  009CC2  02                 	db	2
  2542  009CC3  02                 	db	2
  2543  009CC4  02                 	db	2
  2544  009CC5  02                 	db	2
  2545  009CC6  02                 	db	2
  2546  009CC7  02                 	db	2
  2547  009CC8  02                 	db	2
  2548  009CC9  02                 	db	2
  2549  009CCA  02                 	db	2
  2550  009CCB  02                 	db	2
  2551  009CCC  02                 	db	2
  2552  009CCD  02                 	db	2
  2553  009CCE  02                 	db	2
  2554  009CCF  02                 	db	2
  2555  009CD0  02                 	db	2
  2556  009CD1  02                 	db	2
  2557  009CD2  02                 	db	2
  2558  009CD3  02                 	db	2
  2559  009CD4  02                 	db	2
  2560  009CD5  02                 	db	2
  2561  009CD6  02                 	db	2
  2562  009CD7  02                 	db	2
  2563  009CD8  02                 	db	2
  2564  009CD9  02                 	db	2
  2565  009CDA  02                 	db	2
  2566  009CDB  02                 	db	2
  2567  009CDC  02                 	db	2
  2568  009CDD  02                 	db	2
  2569  009CDE  02                 	db	2
  2570  009CDF  02                 	db	2
  2571  009CE0  02                 	db	2
  2572  009CE1  02                 	db	2
  2573  009CE2  02                 	db	2
  2574  009CE3  02                 	db	2
  2575  009CE4  02                 	db	2
  2576  009CE5  02                 	db	2
  2577  009CE6  02                 	db	2
  2578  009CE7  02                 	db	2
  2579  009CE8  02                 	db	2
  2580  009CE9  02                 	db	2
  2581  009CEA  01                 	db	1
  2582  009CEB  01                 	db	1
  2583  009CEC  01                 	db	1
  2584  009CED  01                 	db	1
  2585  009CEE  01                 	db	1
  2586  009CEF  01                 	db	1
  2587  009CF0  01                 	db	1
  2588  009CF1  01                 	db	1
  2589  009CF2  01                 	db	1
  2590  009CF3  01                 	db	1
  2591  009CF4  01                 	db	1
  2592  009CF5  01                 	db	1
  2593  009CF6  01                 	db	1
  2594  009CF7  01                 	db	1
  2595  009CF8  01                 	db	1
  2596  009CF9  01                 	db	1
  2597  009CFA  01                 	db	1
  2598  009CFB  01                 	db	1
  2599  009CFC  01                 	db	1
  2600  009CFD  01                 	db	1
  2601  009CFE  01                 	db	1
  2602  009CFF  01                 	db	1
  2603  009D00  01                 	db	1
  2604  009D01  01                 	db	1
  2605  009D02  01                 	db	1
  2606  009D03  01                 	db	1
  2607  009D04  01                 	db	1
  2608  009D05  01                 	db	1
  2609  009D06  01                 	db	1
  2610  009D07  01                 	db	1
  2611  009D08  01                 	db	1
  2612  009D09  01                 	db	1
  2613  009D0A  01                 	db	1
  2614  009D0B  01                 	db	1
  2615  009D0C  01                 	db	1
  2616  009D0D  01                 	db	1
  2617  009D0E  01                 	db	1
  2618  009D0F  01                 	db	1
  2619  009D10  01                 	db	1
  2620  009D11  01                 	db	1
  2621  009D12  01                 	db	1
  2622  009D13  01                 	db	1
  2623  009D14  01                 	db	1
  2624  009D15  01                 	db	1
  2625  009D16  01                 	db	1
  2626  009D17  01                 	db	1
  2627  009D18  01                 	db	1
  2628  009D19  01                 	db	1
  2629  009D1A  01                 	db	1
  2630  009D1B  01                 	db	1
  2631  009D1C  01                 	db	1
  2632  009D1D  01                 	db	1
  2633  009D1E  01                 	db	1
  2634  009D1F  01                 	db	1
  2635  009D20  01                 	db	1
  2636  009D21  01                 	db	1
  2637  009D22  01                 	db	1
  2638  009D23  01                 	db	1
  2639  009D24  01                 	db	1
  2640  009D25  01                 	db	1
  2641  009D26  01                 	db	1
  2642  009D27  01                 	db	1
  2643  009D28  01                 	db	1
  2644  009D29  01                 	db	1
  2645  009D2A  01                 	db	1
  2646  009D2B  01                 	db	1
  2647  009D2C  01                 	db	1
  2648  009D2D  01                 	db	1
  2649  009D2E  01                 	db	1
  2650  009D2F  01                 	db	1
  2651  009D30  01                 	db	1
  2652  009D31  01                 	db	1
  2653  009D32  01                 	db	1
  2654  009D33  01                 	db	1
  2655  009D34  01                 	db	1
  2656  009D35  01                 	db	1
  2657  009D36  01                 	db	1
  2658  009D37  01                 	db	1
  2659  009D38  01                 	db	1
  2660  009D39  01                 	db	1
  2661  009D3A  01                 	db	1
  2662  009D3B  01                 	db	1
  2663  009D3C  01                 	db	1
  2664  009D3D  01                 	db	1
  2665  009D3E  01                 	db	1
  2666  009D3F  01                 	db	1
  2667  009D40  01                 	db	1
  2668  009D41  01                 	db	1
  2669  009D42  01                 	db	1
  2670  009D43  01                 	db	1
  2671  009D44  01                 	db	1
  2672  009D45  01                 	db	1
  2673  009D46  01                 	db	1
  2674  009D47  01                 	db	1
  2675  009D48  01                 	db	1
  2676  009D49  01                 	db	1
  2677  009D4A  01                 	db	1
  2678  009D4B  01                 	db	1
  2679  009D4C  01                 	db	1
  2680  009D4D  01                 	db	1
  2681  009D4E  01                 	db	1
  2682  009D4F  01                 	db	1
  2683  009D50  01                 	db	1
  2684  009D51  01                 	db	1
  2685  009D52  01                 	db	1
  2686  009D53  01                 	db	1
  2687  009D54  01                 	db	1
  2688  009D55  01                 	db	1
  2689  009D56  01                 	db	1
  2690  009D57  01                 	db	1
  2691  009D58  01                 	db	1
  2692  009D59  01                 	db	1
  2693  009D5A  01                 	db	1
  2694  009D5B  01                 	db	1
  2695  009D5C  01                 	db	1
  2696  009D5D  01                 	db	1
  2697  009D5E  01                 	db	1
  2698  009D5F  01                 	db	1
  2699  009D60  01                 	db	1
  2700  009D61  01                 	db	1
  2701  009D62  01                 	db	1
  2702  009D63  01                 	db	1
  2703  009D64  01                 	db	1
  2704  009D65  01                 	db	1
  2705  009D66  01                 	db	1
  2706  009D67  01                 	db	1
  2707  009D68  01                 	db	1
  2708  009D69  01                 	db	1
  2709  009D6A  01                 	db	1
  2710  009D6B  01                 	db	1
  2711  009D6C  01                 	db	1
  2712  009D6D  01                 	db	1
  2713  009D6E  01                 	db	1
  2714  009D6F  01                 	db	1
  2715  009D70  01                 	db	1
  2716  009D71  01                 	db	1
  2717  009D72  01                 	db	1
  2718  009D73  01                 	db	1
  2719  009D74  01                 	db	1
  2720  009D75  01                 	db	1
  2721  009D76  01                 	db	1
  2722  009D77  01                 	db	1
  2723  009D78  01                 	db	1
  2724  009D79  01                 	db	1
  2725  009D7A  01                 	db	1
  2726  009D7B  01                 	db	1
  2727  009D7C  01                 	db	1
  2728  009D7D  01                 	db	1
  2729  009D7E  01                 	db	1
  2730  009D7F  01                 	db	1
  2731  009D80  01                 	db	1
  2732  009D81  01                 	db	1
  2733  009D82  01                 	db	1
  2734  009D83  01                 	db	1
  2735  009D84  01                 	db	1
  2736  009D85  01                 	db	1
  2737  009D86  01                 	db	1
  2738  009D87  01                 	db	1
  2739  009D88  01                 	db	1
  2740  009D89  01                 	db	1
  2741  009D8A  01                 	db	1
  2742  009D8B  01                 	db	1
  2743  009D8C  01                 	db	1
  2744  009D8D  01                 	db	1
  2745  009D8E  01                 	db	1
  2746  009D8F  01                 	db	1
  2747  009D90  01                 	db	1
  2748  009D91  01                 	db	1
  2749  009D92  01                 	db	1
  2750  009D93  01                 	db	1
  2751  009D94  01                 	db	1
  2752  009D95  01                 	db	1
  2753  009D96  01                 	db	1
  2754  009D97  01                 	db	1
  2755  009D98  01                 	db	1
  2756  009D99  01                 	db	1
  2757  009D9A  01                 	db	1
  2758  009D9B  01                 	db	1
  2759  009D9C  01                 	db	1
  2760  009D9D  01                 	db	1
  2761  009D9E  01                 	db	1
  2762  009D9F  01                 	db	1
  2763  009DA0  01                 	db	1
  2764  009DA1  01                 	db	1
  2765  009DA2  01                 	db	1
  2766  009DA3  01                 	db	1
  2767  009DA4  01                 	db	1
  2768  009DA5  01                 	db	1
  2769  009DA6  01                 	db	1
  2770  009DA7  01                 	db	1
  2771  009DA8  01                 	db	1
  2772  009DA9  01                 	db	1
  2773  009DAA  01                 	db	1
  2774  009DAB  00                 	db	0
  2775  009DAC  00                 	db	0
  2776  009DAD  00                 	db	0
  2777  009DAE  00                 	db	0
  2778  009DAF  00                 	db	0
  2779  009DB0  00                 	db	0
  2780  009DB1  00                 	db	0
  2781  009DB2  00                 	db	0
  2782  009DB3  00                 	db	0
  2783  009DB4  00                 	db	0
  2784  009DB5  00                 	db	0
  2785  009DB6  00                 	db	0
  2786  009DB7  00                 	db	0
  2787  009DB8  00                 	db	0
  2788  009DB9  00                 	db	0
  2789  009DBA  00                 	db	0
  2790  009DBB  00                 	db	0
  2791  009DBC  00                 	db	0
  2792  009DBD  00                 	db	0
  2793  009DBE  00                 	db	0
  2794  009DBF  00                 	db	0
  2795  009DC0  00                 	db	0
  2796  009DC1  00                 	db	0
  2797  009DC2  00                 	db	0
  2798  009DC3  00                 	db	0
  2799  009DC4  00                 	db	0
  2800  009DC5  00                 	db	0
  2801  009DC6  00                 	db	0
  2802  009DC7  00                 	db	0
  2803  009DC8  00                 	db	0
  2804  009DC9  00                 	db	0
  2805  009DCA  00                 	db	0
  2806  009DCB  00                 	db	0
  2807  009DCC  00                 	db	0
  2808  009DCD  00                 	db	0
  2809  009DCE  00                 	db	0
  2810  009DCF  00                 	db	0
  2811  009DD0  00                 	db	0
  2812  009DD1  00                 	db	0
  2813  009DD2  00                 	db	0
  2814  009DD3  00                 	db	0
  2815  009DD4  00                 	db	0
  2816  009DD5  00                 	db	0
  2817  009DD6  00                 	db	0
  2818  009DD7  00                 	db	0
  2819  009DD8  00                 	db	0
  2820  009DD9  00                 	db	0
  2821  009DDA  00                 	db	0
  2822  009DDB  00                 	db	0
  2823  009DDC  00                 	db	0
  2824  009DDD  00                 	db	0
  2825  009DDE  00                 	db	0
  2826  009DDF  00                 	db	0
  2827  009DE0  00                 	db	0
  2828  009DE1  00                 	db	0
  2829  009DE2  00                 	db	0
  2830  009DE3  00                 	db	0
  2831  009DE4                     __end_of_motor_prescaler_lookup:
  2832                           	opt stack 0
  2833  009DE4                     _USB_SD_Ptr:
  2834                           	opt stack 0
  2835  009DE4  ED                 	db	low _sd000
  2836  009DE5  A1                 	db	high _sd000
  2837  009DE6  FE                 	db	low _sd001
  2838  009DE7  A0                 	db	high _sd001
  2839  009DE8  32                 	db	low _sd002
  2840  009DE9  A1                 	db	high _sd002
  2841  009DEA  A1                 	db	low _sd003
  2842  009DEB  A1                 	db	high _sd003
  2843  009DEC                     __end_of_USB_SD_Ptr:
  2844                           	opt stack 0
  2845  009DEC                     _USB_CD_Ptr:
  2846                           	opt stack 0
  2847  009DEC  BE                 	db	low _configDescriptor1
  2848  009DED  A0                 	db	high _configDescriptor1
  2849  009DEE                     __end_of_USB_CD_Ptr:
  2850                           	opt stack 0
  2851  009DEE                     _dc_manual:
  2852                           	opt stack 0
  2853  009DEE  4D                 	db	77
  2854  009DEF  61                 	db	97
  2855  009DF0  6E                 	db	110
  2856  009DF1  75                 	db	117
  2857  009DF2  61                 	db	97
  2858  009DF3  6C                 	db	108
  2859  009DF4  20                 	db	32
  2860  009DF5  4D                 	db	77
  2861  009DF6  6F                 	db	111
  2862  009DF7  64                 	db	100
  2863  009DF8  65                 	db	101
  2864  009DF9  20                 	db	32
  2865  009DFA  20                 	db	32
  2866  009DFB  20                 	db	32
  2867  009DFC  20                 	db	32
  2868  009DFD  20                 	db	32
  2869  009DFE  20                 	db	32
  2870  009DFF  20                 	db	32
  2871  009E00  20                 	db	32
  2872  009E01  20                 	db	32
  2873  009E02  43                 	db	67
  2874  009E03  75                 	db	117
  2875  009E04  72                 	db	114
  2876  009E05  72                 	db	114
  2877  009E06  65                 	db	101
  2878  009E07  6E                 	db	110
  2879  009E08  74                 	db	116
  2880  009E09  20                 	db	32
  2881  009E0A  70                 	db	112
  2882  009E0B  6F                 	db	111
  2883  009E0C  73                 	db	115
  2884  009E0D  3A                 	db	58
  2885  009E0E  20                 	db	32
  2886  009E0F  20                 	db	32
  2887  009E10  20                 	db	32
  2888  009E11  20                 	db	32
  2889  009E12  20                 	db	32
  2890  009E13  20                 	db	32
  2891  009E14  20                 	db	32
  2892  009E15  01                 	db	1
  2893  009E16  54                 	db	84
  2894  009E17  75                 	db	117
  2895  009E18  72                 	db	114
  2896  009E19  6E                 	db	110
  2897  009E1A  20                 	db	32
  2898  009E1B  43                 	db	67
  2899  009E1C  43                 	db	67
  2900  009E1D  57                 	db	87
  2901  009E1E  20                 	db	32
  2902  009E1F  00                 	db	0
  2903  009E20  20                 	db	32
  2904  009E21  53                 	db	83
  2905  009E22  70                 	db	112
  2906  009E23  65                 	db	101
  2907  009E24  65                 	db	101
  2908  009E25  64                 	db	100
  2909  009E26  20                 	db	32
  2910  009E27  20                 	db	32
  2911  009E28  20                 	db	32
  2912  009E29  20                 	db	32
  2913  009E2A  53                 	db	83
  2914  009E2B  74                 	db	116
  2915  009E2C  61                 	db	97
  2916  009E2D  72                 	db	114
  2917  009E2E  74                 	db	116
  2918  009E2F  20                 	db	32
  2919  009E30  20                 	db	32
  2920  009E31  20                 	db	32
  2921  009E32  20                 	db	32
  2922  009E33  00                 	db	0
  2923  009E34  20                 	db	32
  2924  009E35  20                 	db	32
  2925  009E36  20                 	db	32
  2926  009E37  20                 	db	32
  2927  009E38  20                 	db	32
  2928  009E39  20                 	db	32
  2929  009E3A  20                 	db	32
  2930  009E3B  20                 	db	32
  2931  009E3C  20                 	db	32
  2932  009E3D  20                 	db	32
  2933  009E3E                     __end_of_dc_manual:
  2934                           	opt stack 0
  2935  009E3E                     _dc_zero:
  2936                           	opt stack 0
  2937  009E3E  52                 	db	82
  2938  009E3F  65                 	db	101
  2939  009E40  74                 	db	116
  2940  009E41  75                 	db	117
  2941  009E42  72                 	db	114
  2942  009E43  6E                 	db	110
  2943  009E44  20                 	db	32
  2944  009E45  74                 	db	116
  2945  009E46  6F                 	db	111
  2946  009E47  20                 	db	32
  2947  009E48  5A                 	db	90
  2948  009E49  65                 	db	101
  2949  009E4A  72                 	db	114
  2950  009E4B  6F                 	db	111
  2951  009E4C  3F                 	db	63
  2952  009E4D  20                 	db	32
  2953  009E4E  20                 	db	32
  2954  009E4F  20                 	db	32
  2955  009E50  20                 	db	32
  2956  009E51  20                 	db	32
  2957  009E52  43                 	db	67
  2958  009E53  75                 	db	117
  2959  009E54  72                 	db	114
  2960  009E55  72                 	db	114
  2961  009E56  65                 	db	101
  2962  009E57  6E                 	db	110
  2963  009E58  74                 	db	116
  2964  009E59  20                 	db	32
  2965  009E5A  70                 	db	112
  2966  009E5B  6F                 	db	111
  2967  009E5C  73                 	db	115
  2968  009E5D  3A                 	db	58
  2969  009E5E  20                 	db	32
  2970  009E5F  20                 	db	32
  2971  009E60  20                 	db	32
  2972  009E61  20                 	db	32
  2973  009E62  20                 	db	32
  2974  009E63  20                 	db	32
  2975  009E64  20                 	db	32
  2976  009E65  20                 	db	32
  2977  009E66  20                 	db	32
  2978  009E67  20                 	db	32
  2979  009E68  20                 	db	32
  2980  009E69  20                 	db	32
  2981  009E6A  20                 	db	32
  2982  009E6B  20                 	db	32
  2983  009E6C  20                 	db	32
  2984  009E6D  20                 	db	32
  2985  009E6E  20                 	db	32
  2986  009E6F  20                 	db	32
  2987  009E70  20                 	db	32
  2988  009E71  20                 	db	32
  2989  009E72  20                 	db	32
  2990  009E73  20                 	db	32
  2991  009E74  20                 	db	32
  2992  009E75  20                 	db	32
  2993  009E76  20                 	db	32
  2994  009E77  20                 	db	32
  2995  009E78  20                 	db	32
  2996  009E79  20                 	db	32
  2997  009E7A  20                 	db	32
  2998  009E7B  59                 	db	89
  2999  009E7C  65                 	db	101
  3000  009E7D  73                 	db	115
  3001  009E7E  20                 	db	32
  3002  009E7F  20                 	db	32
  3003  009E80  20                 	db	32
  3004  009E81  20                 	db	32
  3005  009E82  20                 	db	32
  3006  009E83  20                 	db	32
  3007  009E84  20                 	db	32
  3008  009E85  20                 	db	32
  3009  009E86  20                 	db	32
  3010  009E87  20                 	db	32
  3011  009E88  20                 	db	32
  3012  009E89  20                 	db	32
  3013  009E8A  4E                 	db	78
  3014  009E8B  6F                 	db	111
  3015  009E8C  20                 	db	32
  3016  009E8D  20                 	db	32
  3017  009E8E                     __end_of_dc_zero:
  3018                           	opt stack 0
  3019  009E8E                     _dc_arc2:
  3020                           	opt stack 0
  3021  009E8E  41                 	db	65
  3022  009E8F  72                 	db	114
  3023  009E90  63                 	db	99
  3024  009E91  3A                 	db	58
  3025  009E92  20                 	db	32
  3026  009E93  53                 	db	83
  3027  009E94  69                 	db	105
  3028  009E95  7A                 	db	122
  3029  009E96  65                 	db	101
  3030  009E97  3D                 	db	61
  3031  009E98  20                 	db	32
  3032  009E99  20                 	db	32
  3033  009E9A  20                 	db	32
  3034  009E9B  20                 	db	32
  3035  009E9C  20                 	db	32
  3036  009E9D  20                 	db	32
  3037  009E9E  20                 	db	32
  3038  009E9F  20                 	db	32
  3039  009EA0  20                 	db	32
  3040  009EA1  20                 	db	32
  3041  009EA2  43                 	db	67
  3042  009EA3  75                 	db	117
  3043  009EA4  72                 	db	114
  3044  009EA5  72                 	db	114
  3045  009EA6  65                 	db	101
  3046  009EA7  6E                 	db	110
  3047  009EA8  74                 	db	116
  3048  009EA9  20                 	db	32
  3049  009EAA  70                 	db	112
  3050  009EAB  6F                 	db	111
  3051  009EAC  73                 	db	115
  3052  009EAD  3A                 	db	58
  3053  009EAE  20                 	db	32
  3054  009EAF  20                 	db	32
  3055  009EB0  20                 	db	32
  3056  009EB1  20                 	db	32
  3057  009EB2  20                 	db	32
  3058  009EB3  20                 	db	32
  3059  009EB4  20                 	db	32
  3060  009EB5  01                 	db	1
  3061  009EB6  54                 	db	84
  3062  009EB7  75                 	db	117
  3063  009EB8  72                 	db	114
  3064  009EB9  6E                 	db	110
  3065  009EBA  20                 	db	32
  3066  009EBB  43                 	db	67
  3067  009EBC  43                 	db	67
  3068  009EBD  57                 	db	87
  3069  009EBE  20                 	db	32
  3070  009EBF  00                 	db	0
  3071  009EC0  20                 	db	32
  3072  009EC1  53                 	db	83
  3073  009EC2  70                 	db	112
  3074  009EC3  65                 	db	101
  3075  009EC4  65                 	db	101
  3076  009EC5  64                 	db	100
  3077  009EC6  20                 	db	32
  3078  009EC7  20                 	db	32
  3079  009EC8  20                 	db	32
  3080  009EC9  20                 	db	32
  3081  009ECA  53                 	db	83
  3082  009ECB  74                 	db	116
  3083  009ECC  61                 	db	97
  3084  009ECD  72                 	db	114
  3085  009ECE  74                 	db	116
  3086  009ECF  20                 	db	32
  3087  009ED0  20                 	db	32
  3088  009ED1  20                 	db	32
  3089  009ED2  20                 	db	32
  3090  009ED3  00                 	db	0
  3091  009ED4  20                 	db	32
  3092  009ED5  20                 	db	32
  3093  009ED6  20                 	db	32
  3094  009ED7  20                 	db	32
  3095  009ED8  20                 	db	32
  3096  009ED9  20                 	db	32
  3097  009EDA  20                 	db	32
  3098  009EDB  20                 	db	32
  3099  009EDC  20                 	db	32
  3100  009EDD  20                 	db	32
  3101  009EDE                     __end_of_dc_arc2:
  3102                           	opt stack 0
  3103  009EDE                     _dc_arc1:
  3104                           	opt stack 0
  3105  009EDE  41                 	db	65
  3106  009EDF  72                 	db	114
  3107  009EE0  63                 	db	99
  3108  009EE1  3A                 	db	58
  3109  009EE2  20                 	db	32
  3110  009EE3  53                 	db	83
  3111  009EE4  65                 	db	101
  3112  009EE5  74                 	db	116
  3113  009EE6  20                 	db	32
  3114  009EE7  61                 	db	97
  3115  009EE8  72                 	db	114
  3116  009EE9  63                 	db	99
  3117  009EEA  20                 	db	32
  3118  009EEB  73                 	db	115
  3119  009EEC  69                 	db	105
  3120  009EED  7A                 	db	122
  3121  009EEE  65                 	db	101
  3122  009EEF  20                 	db	32
  3123  009EF0  20                 	db	32
  3124  009EF1  20                 	db	32
  3125  009EF2  41                 	db	65
  3126  009EF3  72                 	db	114
  3127  009EF4  63                 	db	99
  3128  009EF5  20                 	db	32
  3129  009EF6  73                 	db	115
  3130  009EF7  69                 	db	105
  3131  009EF8  7A                 	db	122
  3132  009EF9  65                 	db	101
  3133  009EFA  3A                 	db	58
  3134  009EFB  20                 	db	32
  3135  009EFC  20                 	db	32
  3136  009EFD  20                 	db	32
  3137  009EFE  20                 	db	32
  3138  009EFF  20                 	db	32
  3139  009F00  20                 	db	32
  3140  009F01  20                 	db	32
  3141  009F02  20                 	db	32
  3142  009F03  20                 	db	32
  3143  009F04  20                 	db	32
  3144  009F05  20                 	db	32
  3145  009F06  53                 	db	83
  3146  009F07  74                 	db	116
  3147  009F08  65                 	db	101
  3148  009F09  70                 	db	112
  3149  009F0A  20                 	db	32
  3150  009F0B  73                 	db	115
  3151  009F0C  69                 	db	105
  3152  009F0D  7A                 	db	122
  3153  009F0E  65                 	db	101
  3154  009F0F  20                 	db	32
  3155  009F10  00                 	db	0
  3156  009F11  20                 	db	32
  3157  009F12  20                 	db	32
  3158  009F13  43                 	db	67
  3159  009F14  6F                 	db	111
  3160  009F15  6E                 	db	110
  3161  009F16  66                 	db	102
  3162  009F17  69                 	db	105
  3163  009F18  72                 	db	114
  3164  009F19  6D                 	db	109
  3165  009F1A  20                 	db	32
  3166  009F1B  20                 	db	32
  3167  009F1C  20                 	db	32
  3168  009F1D  20                 	db	32
  3169  009F1E  20                 	db	32
  3170  009F1F  20                 	db	32
  3171  009F20  20                 	db	32
  3172  009F21  20                 	db	32
  3173  009F22  20                 	db	32
  3174  009F23  20                 	db	32
  3175  009F24  00                 	db	0
  3176  009F25  20                 	db	32
  3177  009F26  20                 	db	32
  3178  009F27  43                 	db	67
  3179  009F28  61                 	db	97
  3180  009F29  6E                 	db	110
  3181  009F2A  63                 	db	99
  3182  009F2B  65                 	db	101
  3183  009F2C  6C                 	db	108
  3184  009F2D  20                 	db	32
  3185  009F2E                     __end_of_dc_arc1:
  3186                           	opt stack 0
  3187  009F2E                     _dc_divide2:
  3188                           	opt stack 0
  3189  009F2E  44                 	db	68
  3190  009F2F  69                 	db	105
  3191  009F30  76                 	db	118
  3192  009F31  69                 	db	105
  3193  009F32  64                 	db	100
  3194  009F33  65                 	db	101
  3195  009F34  3A                 	db	58
  3196  009F35  20                 	db	32
  3197  009F36  20                 	db	32
  3198  009F37  20                 	db	32
  3199  009F38  20                 	db	32
  3200  009F39  20                 	db	32
  3201  009F3A  20                 	db	32
  3202  009F3B  20                 	db	32
  3203  009F3C  20                 	db	32
  3204  009F3D  20                 	db	32
  3205  009F3E  20                 	db	32
  3206  009F3F  20                 	db	32
  3207  009F40  20                 	db	32
  3208  009F41  20                 	db	32
  3209  009F42  50                 	db	80
  3210  009F43  6F                 	db	111
  3211  009F44  73                 	db	115
  3212  009F45  3A                 	db	58
  3213  009F46  20                 	db	32
  3214  009F47  20                 	db	32
  3215  009F48  20                 	db	32
  3216  009F49  20                 	db	32
  3217  009F4A  20                 	db	32
  3218  009F4B  20                 	db	32
  3219  009F4C  20                 	db	32
  3220  009F4D  20                 	db	32
  3221  009F4E  20                 	db	32
  3222  009F4F  20                 	db	32
  3223  009F50  20                 	db	32
  3224  009F51  20                 	db	32
  3225  009F52  20                 	db	32
  3226  009F53  20                 	db	32
  3227  009F54  20                 	db	32
  3228  009F55  20                 	db	32
  3229  009F56  4A                 	db	74
  3230  009F57  75                 	db	117
  3231  009F58  6D                 	db	109
  3232  009F59  70                 	db	112
  3233  009F5A  20                 	db	32
  3234  009F5B  73                 	db	115
  3235  009F5C  69                 	db	105
  3236  009F5D  7A                 	db	122
  3237  009F5E  65                 	db	101
  3238  009F5F  3A                 	db	58
  3239  009F60  20                 	db	32
  3240  009F61  20                 	db	32
  3241  009F62  20                 	db	32
  3242  009F63  20                 	db	32
  3243  009F64  20                 	db	32
  3244  009F65  20                 	db	32
  3245  009F66  20                 	db	32
  3246  009F67  20                 	db	32
  3247  009F68  20                 	db	32
  3248  009F69  20                 	db	32
  3249  009F6A  50                 	db	80
  3250  009F6B  72                 	db	114
  3251  009F6C  65                 	db	101
  3252  009F6D  73                 	db	115
  3253  009F6E  73                 	db	115
  3254  009F6F  54                 	db	84
  3255  009F70  6F                 	db	111
  3256  009F71  4A                 	db	74
  3257  009F72  75                 	db	117
  3258  009F73  6D                 	db	109
  3259  009F74  70                 	db	112
  3260  009F75  20                 	db	32
  3261  009F76  00                 	db	0
  3262  009F77  20                 	db	32
  3263  009F78  43                 	db	67
  3264  009F79  61                 	db	97
  3265  009F7A  6E                 	db	110
  3266  009F7B  63                 	db	99
  3267  009F7C  65                 	db	101
  3268  009F7D  6C                 	db	108
  3269  009F7E                     __end_of_dc_divide2:
  3270                           	opt stack 0
  3271  009F7E                     _dc_divide1:
  3272                           	opt stack 0
  3273  009F7E  44                 	db	68
  3274  009F7F  69                 	db	105
  3275  009F80  76                 	db	118
  3276  009F81  69                 	db	105
  3277  009F82  64                 	db	100
  3278  009F83  65                 	db	101
  3279  009F84  3A                 	db	58
  3280  009F85  20                 	db	32
  3281  009F86  53                 	db	83
  3282  009F87  65                 	db	101
  3283  009F88  74                 	db	116
  3284  009F89  20                 	db	32
  3285  009F8A  64                 	db	100
  3286  009F8B  69                 	db	105
  3287  009F8C  76                 	db	118
  3288  009F8D  69                 	db	105
  3289  009F8E  73                 	db	115
  3290  009F8F  69                 	db	105
  3291  009F90  6F                 	db	111
  3292  009F91  6E                 	db	110
  3293  009F92  20                 	db	32
  3294  009F93  20                 	db	32
  3295  009F94  20                 	db	32
  3296  009F95  20                 	db	32
  3297  009F96  20                 	db	32
  3298  009F97  20                 	db	32
  3299  009F98  20                 	db	32
  3300  009F99  20                 	db	32
  3301  009F9A  20                 	db	32
  3302  009F9B  20                 	db	32
  3303  009F9C  20                 	db	32
  3304  009F9D  20                 	db	32
  3305  009F9E  20                 	db	32
  3306  009F9F  20                 	db	32
  3307  009FA0  20                 	db	32
  3308  009FA1  20                 	db	32
  3309  009FA2  20                 	db	32
  3310  009FA3  20                 	db	32
  3311  009FA4  20                 	db	32
  3312  009FA5  20                 	db	32
  3313  009FA6  20                 	db	32
  3314  009FA7  20                 	db	32
  3315  009FA8  20                 	db	32
  3316  009FA9  2F                 	db	47
  3317  009FAA  73                 	db	115
  3318  009FAB  74                 	db	116
  3319  009FAC  65                 	db	101
  3320  009FAD  70                 	db	112
  3321  009FAE  20                 	db	32
  3322  009FAF  20                 	db	32
  3323  009FB0  00                 	db	0
  3324  009FB1  20                 	db	32
  3325  009FB2  20                 	db	32
  3326  009FB3  43                 	db	67
  3327  009FB4  6F                 	db	111
  3328  009FB5  6E                 	db	110
  3329  009FB6  66                 	db	102
  3330  009FB7  69                 	db	105
  3331  009FB8  72                 	db	114
  3332  009FB9  6D                 	db	109
  3333  009FBA  31                 	db	49
  3334  009FBB  32                 	db	50
  3335  009FBC  33                 	db	51
  3336  009FBD  34                 	db	52
  3337  009FBE  20                 	db	32
  3338  009FBF  20                 	db	32
  3339  009FC0  20                 	db	32
  3340  009FC1  20                 	db	32
  3341  009FC2  20                 	db	32
  3342  009FC3  20                 	db	32
  3343  009FC4  00                 	db	0
  3344  009FC5  20                 	db	32
  3345  009FC6  20                 	db	32
  3346  009FC7  43                 	db	67
  3347  009FC8  61                 	db	97
  3348  009FC9  6E                 	db	110
  3349  009FCA  63                 	db	99
  3350  009FCB  65                 	db	101
  3351  009FCC  6C                 	db	108
  3352  009FCD  20                 	db	32
  3353  009FCE                     __end_of_dc_divide1:
  3354                           	opt stack 0
  3355  009FCE                     _dc_setup2:
  3356                           	opt stack 0
  3357  009FCE  53                 	db	83
  3358  009FCF  65                 	db	101
  3359  009FD0  74                 	db	116
  3360  009FD1  75                 	db	117
  3361  009FD2  70                 	db	112
  3362  009FD3  3A                 	db	58
  3363  009FD4  20                 	db	32
  3364  009FD5  53                 	db	83
  3365  009FD6  65                 	db	101
  3366  009FD7  74                 	db	116
  3367  009FD8  20                 	db	32
  3368  009FD9  64                 	db	100
  3369  009FDA  69                 	db	105
  3370  009FDB  72                 	db	114
  3371  009FDC  65                 	db	101
  3372  009FDD  63                 	db	99
  3373  009FDE  74                 	db	116
  3374  009FDF  69                 	db	105
  3375  009FE0  6F                 	db	111
  3376  009FE1  6E                 	db	110
  3377  009FE2  20                 	db	32
  3378  009FE3  20                 	db	32
  3379  009FE4  20                 	db	32
  3380  009FE5  20                 	db	32
  3381  009FE6  20                 	db	32
  3382  009FE7  20                 	db	32
  3383  009FE8  20                 	db	32
  3384  009FE9  20                 	db	32
  3385  009FEA  20                 	db	32
  3386  009FEB  20                 	db	32
  3387  009FEC  20                 	db	32
  3388  009FED  20                 	db	32
  3389  009FEE  20                 	db	32
  3390  009FEF  20                 	db	32
  3391  009FF0  20                 	db	32
  3392  009FF1  20                 	db	32
  3393  009FF2  20                 	db	32
  3394  009FF3  20                 	db	32
  3395  009FF4  20                 	db	32
  3396  009FF5  20                 	db	32
  3397  009FF6  20                 	db	32
  3398  009FF7  43                 	db	67
  3399  009FF8  6F                 	db	111
  3400  009FF9  75                 	db	117
  3401  009FFA  6E                 	db	110
  3402  009FFB  74                 	db	116
  3403  009FFC  65                 	db	101
  3404  009FFD  72                 	db	114
  3405  009FFE  43                 	db	67
  3406  009FFF  6C                 	db	108
  3407  00A000  6F                 	db	111
  3408  00A001  63                 	db	99
  3409  00A002  6B                 	db	107
  3410  00A003  77                 	db	119
  3411  00A004  69                 	db	105
  3412  00A005  73                 	db	115
  3413  00A006  65                 	db	101
  3414  00A007  20                 	db	32
  3415  00A008  20                 	db	32
  3416  00A009  20                 	db	32
  3417  00A00A  20                 	db	32
  3418  00A00B  43                 	db	67
  3419  00A00C  6C                 	db	108
  3420  00A00D  6F                 	db	111
  3421  00A00E  63                 	db	99
  3422  00A00F  6B                 	db	107
  3423  00A010  77                 	db	119
  3424  00A011  69                 	db	105
  3425  00A012  73                 	db	115
  3426  00A013  65                 	db	101
  3427  00A014  20                 	db	32
  3428  00A015  20                 	db	32
  3429  00A016  20                 	db	32
  3430  00A017  20                 	db	32
  3431  00A018  20                 	db	32
  3432  00A019  20                 	db	32
  3433  00A01A  20                 	db	32
  3434  00A01B  20                 	db	32
  3435  00A01C  20                 	db	32
  3436  00A01D  20                 	db	32
  3437  00A01E                     __end_of_dc_setup2:
  3438                           	opt stack 0
  3439  00A01E                     _dc_setup1:
  3440                           	opt stack 0
  3441  00A01E  53                 	db	83
  3442  00A01F  65                 	db	101
  3443  00A020  74                 	db	116
  3444  00A021  75                 	db	117
  3445  00A022  70                 	db	112
  3446  00A023  3A                 	db	58
  3447  00A024  20                 	db	32
  3448  00A025  53                 	db	83
  3449  00A026  65                 	db	101
  3450  00A027  74                 	db	116
  3451  00A028  20                 	db	32
  3452  00A029  7A                 	db	122
  3453  00A02A  65                 	db	101
  3454  00A02B  72                 	db	114
  3455  00A02C  6F                 	db	111
  3456  00A02D  20                 	db	32
  3457  00A02E  70                 	db	112
  3458  00A02F  6F                 	db	111
  3459  00A030  73                 	db	115
  3460  00A031  2E                 	db	46
  3461  00A032  20                 	db	32
  3462  00A033  20                 	db	32
  3463  00A034  20                 	db	32
  3464  00A035  20                 	db	32
  3465  00A036  20                 	db	32
  3466  00A037  20                 	db	32
  3467  00A038  20                 	db	32
  3468  00A039  20                 	db	32
  3469  00A03A  20                 	db	32
  3470  00A03B  20                 	db	32
  3471  00A03C  20                 	db	32
  3472  00A03D  20                 	db	32
  3473  00A03E  20                 	db	32
  3474  00A03F  20                 	db	32
  3475  00A040  20                 	db	32
  3476  00A041  20                 	db	32
  3477  00A042  20                 	db	32
  3478  00A043  20                 	db	32
  3479  00A044  20                 	db	32
  3480  00A045  20                 	db	32
  3481  00A046  53                 	db	83
  3482  00A047  74                 	db	116
  3483  00A048  65                 	db	101
  3484  00A049  70                 	db	112
  3485  00A04A  20                 	db	32
  3486  00A04B  73                 	db	115
  3487  00A04C  69                 	db	105
  3488  00A04D  7A                 	db	122
  3489  00A04E  65                 	db	101
  3490  00A04F  20                 	db	32
  3491  00A050  00                 	db	0
  3492  00A051  20                 	db	32
  3493  00A052  20                 	db	32
  3494  00A053  43                 	db	67
  3495  00A054  6F                 	db	111
  3496  00A055  6E                 	db	110
  3497  00A056  66                 	db	102
  3498  00A057  69                 	db	105
  3499  00A058  72                 	db	114
  3500  00A059  6D                 	db	109
  3501  00A05A  20                 	db	32
  3502  00A05B  78                 	db	120
  3503  00A05C  2E                 	db	46
  3504  00A05D  78                 	db	120
  3505  00A05E  78                 	db	120
  3506  00A05F  01                 	db	1
  3507  00A060  20                 	db	32
  3508  00A061  20                 	db	32
  3509  00A062  20                 	db	32
  3510  00A063  20                 	db	32
  3511  00A064  00                 	db	0
  3512  00A065  20                 	db	32
  3513  00A066  20                 	db	32
  3514  00A067  43                 	db	67
  3515  00A068  61                 	db	97
  3516  00A069  6E                 	db	110
  3517  00A06A  63                 	db	99
  3518  00A06B  65                 	db	101
  3519  00A06C  6C                 	db	108
  3520  00A06D  20                 	db	32
  3521  00A06E                     __end_of_dc_setup1:
  3522                           	opt stack 0
  3523  00A06E                     _dc_main:
  3524                           	opt stack 0
  3525  00A06E  4D                 	db	77
  3526  00A06F  61                 	db	97
  3527  00A070  69                 	db	105
  3528  00A071  6E                 	db	110
  3529  00A072  20                 	db	32
  3530  00A073  4D                 	db	77
  3531  00A074  65                 	db	101
  3532  00A075  6E                 	db	110
  3533  00A076  75                 	db	117
  3534  00A077  3A                 	db	58
  3535  00A078  20                 	db	32
  3536  00A079  20                 	db	32
  3537  00A07A  20                 	db	32
  3538  00A07B  20                 	db	32
  3539  00A07C  20                 	db	32
  3540  00A07D  20                 	db	32
  3541  00A07E  20                 	db	32
  3542  00A07F  20                 	db	32
  3543  00A080  20                 	db	32
  3544  00A081  20                 	db	32
  3545  00A082  20                 	db	32
  3546  00A083  53                 	db	83
  3547  00A084  65                 	db	101
  3548  00A085  74                 	db	116
  3549  00A086  75                 	db	117
  3550  00A087  70                 	db	112
  3551  00A088  20                 	db	32
  3552  00A089  20                 	db	32
  3553  00A08A  20                 	db	32
  3554  00A08B  20                 	db	32
  3555  00A08C  44                 	db	68
  3556  00A08D  69                 	db	105
  3557  00A08E  76                 	db	118
  3558  00A08F  69                 	db	105
  3559  00A090  64                 	db	100
  3560  00A091  65                 	db	101
  3561  00A092  20                 	db	32
  3562  00A093  20                 	db	32
  3563  00A094  20                 	db	32
  3564  00A095  20                 	db	32
  3565  00A096  20                 	db	32
  3566  00A097  41                 	db	65
  3567  00A098  72                 	db	114
  3568  00A099  63                 	db	99
  3569  00A09A  20                 	db	32
  3570  00A09B  20                 	db	32
  3571  00A09C  20                 	db	32
  3572  00A09D  20                 	db	32
  3573  00A09E  20                 	db	32
  3574  00A09F  20                 	db	32
  3575  00A0A0  4D                 	db	77
  3576  00A0A1  61                 	db	97
  3577  00A0A2  6E                 	db	110
  3578  00A0A3  75                 	db	117
  3579  00A0A4  61                 	db	97
  3580  00A0A5  6C                 	db	108
  3581  00A0A6  20                 	db	32
  3582  00A0A7  20                 	db	32
  3583  00A0A8  20                 	db	32
  3584  00A0A9  20                 	db	32
  3585  00A0AA  20                 	db	32
  3586  00A0AB  47                 	db	71
  3587  00A0AC  6F                 	db	111
  3588  00A0AD  32                 	db	50
  3589  00A0AE  5A                 	db	90
  3590  00A0AF  65                 	db	101
  3591  00A0B0  72                 	db	114
  3592  00A0B1  6F                 	db	111
  3593  00A0B2  20                 	db	32
  3594  00A0B3  20                 	db	32
  3595  00A0B4  20                 	db	32
  3596  00A0B5  20                 	db	32
  3597  00A0B6  20                 	db	32
  3598  00A0B7  20                 	db	32
  3599  00A0B8  20                 	db	32
  3600  00A0B9  20                 	db	32
  3601  00A0BA  20                 	db	32
  3602  00A0BB  20                 	db	32
  3603  00A0BC  20                 	db	32
  3604  00A0BD  20                 	db	32
  3605  00A0BE                     __end_of_dc_main:
  3606                           	opt stack 0
  3607  00A0BE                     _configDescriptor1:
  3608                           	opt stack 0
  3609  00A0BE  09                 	db	9
  3610  00A0BF  02                 	db	2
  3611  00A0C0  40                 	db	64
  3612  00A0C1  00                 	db	0
  3613  00A0C2  02                 	db	2
  3614  00A0C3  01                 	db	1
  3615  00A0C4  00                 	db	0
  3616  00A0C5  C0                 	db	192
  3617  00A0C6  32                 	db	50
  3618  00A0C7  09                 	db	9
  3619  00A0C8  04                 	db	4
  3620  00A0C9  00                 	db	0
  3621  00A0CA  00                 	db	0
  3622  00A0CB  02                 	db	2
  3623  00A0CC  03                 	db	3
  3624  00A0CD  00                 	db	0
  3625  00A0CE  00                 	db	0
  3626  00A0CF  00                 	db	0
  3627  00A0D0  09                 	db	9
  3628  00A0D1  21                 	db	33
  3629  00A0D2  11                 	db	17
  3630  00A0D3  01                 	db	1
  3631  00A0D4  00                 	db	0
  3632  00A0D5  01                 	db	1
  3633  00A0D6  22                 	db	34
  3634  00A0D7  1D                 	db	29
  3635  00A0D8  00                 	db	0
  3636  00A0D9  07                 	db	7
  3637  00A0DA  05                 	db	5
  3638  00A0DB  81                 	db	129
  3639  00A0DC  03                 	db	3
  3640  00A0DD  40                 	db	64
  3641  00A0DE  00                 	db	0
  3642  00A0DF  01                 	db	1
  3643  00A0E0  07                 	db	7
  3644  00A0E1  05                 	db	5
  3645  00A0E2  01                 	db	1
  3646  00A0E3  03                 	db	3
  3647  00A0E4  40                 	db	64
  3648  00A0E5  00                 	db	0
  3649  00A0E6  01                 	db	1
  3650  00A0E7  09                 	db	9
  3651  00A0E8  04                 	db	4
  3652  00A0E9  01                 	db	1
  3653  00A0EA  00                 	db	0
  3654  00A0EB  02                 	db	2
  3655  00A0EC  08                 	db	8
  3656  00A0ED  06                 	db	6
  3657  00A0EE  50                 	db	80
  3658  00A0EF  00                 	db	0
  3659  00A0F0  07                 	db	7
  3660  00A0F1  05                 	db	5
  3661  00A0F2  82                 	db	130
  3662  00A0F3  02                 	db	2
  3663  00A0F4  40                 	db	64
  3664  00A0F5  00                 	db	0
  3665  00A0F6  01                 	db	1
  3666  00A0F7  07                 	db	7
  3667  00A0F8  05                 	db	5
  3668  00A0F9  02                 	db	2
  3669  00A0FA  02                 	db	2
  3670  00A0FB  40                 	db	64
  3671  00A0FC  00                 	db	0
  3672  00A0FD  01                 	db	1
  3673  00A0FE                     __end_of_configDescriptor1:
  3674                           	opt stack 0
  3675  00A0FE                     _sd001:
  3676                           	opt stack 0
  3677  00A0FE  34                 	db	52
  3678  00A0FF  03                 	db	3
  3679  00A100  0053               	dw	83
  3680  00A102  006F               	dw	111
  3681  00A104  006C               	dw	108
  3682  00A106  0064               	dw	100
  3683  00A108  0065               	dw	101
  3684  00A10A  0072               	dw	114
  3685  00A10C  006E               	dw	110
  3686  00A10E  0065               	dw	101
  3687  00A110  0072               	dw	114
  3688  00A112  0064               	dw	100
  3689  00A114  002E               	dw	46
  3690  00A116  0063               	dw	99
  3691  00A118  006F               	dw	111
  3692  00A11A  006D               	dw	109
  3693  00A11C  0020               	dw	32
  3694  00A11E  0020               	dw	32
  3695  00A120  0020               	dw	32
  3696  00A122  0020               	dw	32
  3697  00A124  0020               	dw	32
  3698  00A126  0020               	dw	32
  3699  00A128  0020               	dw	32
  3700  00A12A  0020               	dw	32
  3701  00A12C  0020               	dw	32
  3702  00A12E  0020               	dw	32
  3703  00A130  0020               	dw	32
  3704  00A132                     __end_of_sd001:
  3705                           	opt stack 0
  3706  00A132                     _sd002:
  3707                           	opt stack 0
  3708  00A132  2E                 	db	46
  3709  00A133  03                 	db	3
  3710  00A134  0053               	dw	83
  3711  00A136  0074               	dw	116
  3712  00A138  0065               	dw	101
  3713  00A13A  0070               	dw	112
  3714  00A13C  0070               	dw	112
  3715  00A13E  0065               	dw	101
  3716  00A140  0072               	dw	114
  3717  00A142  004D               	dw	77
  3718  00A144  006F               	dw	111
  3719  00A146  0074               	dw	116
  3720  00A148  006F               	dw	111
  3721  00A14A  0072               	dw	114
  3722  00A14C  0043               	dw	67
  3723  00A14E  006F               	dw	111
  3724  00A150  006E               	dw	110
  3725  00A152  0074               	dw	116
  3726  00A154  0072               	dw	114
  3727  00A156  006F               	dw	111
  3728  00A158  006C               	dw	108
  3729  00A15A  006C               	dw	108
  3730  00A15C  0065               	dw	101
  3731  00A15E  0072               	dw	114
  3732  00A160                     __end_of_sd002:
  3733                           	opt stack 0
  3734  00A160                     _inq_resp:
  3735                           	opt stack 0
  3736  00A160  00                 	db	0
  3737  00A161  80                 	db	128
  3738  00A162  04                 	db	4
  3739  00A163  02                 	db	2
  3740  00A164  20                 	db	32
  3741  00A165  00                 	db	0
  3742  00A166  00                 	db	0
  3743  00A167  00                 	db	0
  3744  00A168  4D                 	db	77
  3745  00A169  69                 	db	105
  3746  00A16A  63                 	db	99
  3747  00A16B  72                 	db	114
  3748  00A16C  6F                 	db	111
  3749  00A16D  63                 	db	99
  3750  00A16E  68                 	db	104
  3751  00A16F  70                 	db	112
  3752  00A170  4D                 	db	77
  3753  00A171  61                 	db	97
  3754  00A172  73                 	db	115
  3755  00A173  73                 	db	115
  3756  00A174  20                 	db	32
  3757  00A175  53                 	db	83
  3758  00A176  74                 	db	116
  3759  00A177  6F                 	db	111
  3760  00A178  72                 	db	114
  3761  00A179  61                 	db	97
  3762  00A17A  67                 	db	103
  3763  00A17B  65                 	db	101
  3764  00A17C  20                 	db	32
  3765  00A17D  20                 	db	32
  3766  00A17E  20                 	db	32
  3767  00A17F  20                 	db	32
  3768  00A180  30                 	db	48
  3769  00A181  30                 	db	48
  3770  00A182  30                 	db	48
  3771  00A183  31                 	db	49
  3772  00A184                     __end_of_inq_resp:
  3773                           	opt stack 0
  3774  00A184                     _hid_rpt01:
  3775                           	opt stack 0
  3776  00A184  06                 	db	6
  3777  00A185  00                 	db	0
  3778  00A186  FF                 	db	255
  3779  00A187  09                 	db	9
  3780  00A188  01                 	db	1
  3781  00A189  A1                 	db	161
  3782  00A18A  01                 	db	1
  3783  00A18B  19                 	db	25
  3784  00A18C  01                 	db	1
  3785  00A18D  29                 	db	41
  3786  00A18E  40                 	db	64
  3787  00A18F  15                 	db	21
  3788  00A190  00                 	db	0
  3789  00A191  26                 	db	38
  3790  00A192  FF                 	db	255
  3791  00A193  00                 	db	0
  3792  00A194  75                 	db	117
  3793  00A195  08                 	db	8
  3794  00A196  95                 	db	149
  3795  00A197  40                 	db	64
  3796  00A198  81                 	db	129
  3797  00A199  00                 	db	0
  3798  00A19A  19                 	db	25
  3799  00A19B  01                 	db	1
  3800  00A19C  29                 	db	41
  3801  00A19D  40                 	db	64
  3802  00A19E  91                 	db	145
  3803  00A19F  00                 	db	0
  3804  00A1A0  C0                 	db	192
  3805  00A1A1                     __end_of_hid_rpt01:
  3806                           	opt stack 0
  3807  00A1A1                     _sd003:
  3808                           	opt stack 0
  3809  00A1A1  1A                 	db	26
  3810  00A1A2  03                 	db	3
  3811  00A1A3  0031               	dw	49
  3812  00A1A5  0032               	dw	50
  3813  00A1A7  0033               	dw	51
  3814  00A1A9  0034               	dw	52
  3815  00A1AB  0035               	dw	53
  3816  00A1AD  0036               	dw	54
  3817  00A1AF  0037               	dw	55
  3818  00A1B1  0038               	dw	56
  3819  00A1B3  0039               	dw	57
  3820  00A1B5  0030               	dw	48
  3821  00A1B7  0039               	dw	57
  3822  00A1B9  0039               	dw	57
  3823  00A1BB                     __end_of_sd003:
  3824                           	opt stack 0
  3825  00A1BB                     _device_dsc:
  3826                           	opt stack 0
  3827  00A1BB  12                 	db	18
  3828  00A1BC  01                 	db	1
  3829  00A1BD  0200               	dw	512
  3830  00A1BF  00                 	db	0
  3831  00A1C0  00                 	db	0
  3832  00A1C1  00                 	db	0
  3833  00A1C2  08                 	db	8
  3834  00A1C3  04D8               	dw	1240
  3835  00A1C5  EDCF               	dw	60879
  3836  00A1C7  0100               	dw	256
  3837  00A1C9  01                 	db	1
  3838  00A1CA  02                 	db	2
  3839  00A1CB  00                 	db	0
  3840  00A1CC  01                 	db	1
  3841  00A1CD                     __end_of_device_dsc:
  3842                           	opt stack 0
  3843  00A1CD                     _bit_pattern_ae:
  3844                           	opt stack 0
  3845  00A1CD  0A                 	db	10
  3846  00A1CE  00                 	db	0
  3847  00A1CF  0E                 	db	14
  3848  00A1D0  01                 	db	1
  3849  00A1D1  0F                 	db	15
  3850  00A1D2  11                 	db	17
  3851  00A1D3  0F                 	db	15
  3852  00A1D4  00                 	db	0
  3853  00A1D5                     __end_of_bit_pattern_ae:
  3854                           	opt stack 0
  3855  00A1D5                     _bit_pattern_degree:
  3856                           	opt stack 0
  3857  00A1D5  18                 	db	24
  3858  00A1D6  18                 	db	24
  3859  00A1D7  00                 	db	0
  3860  00A1D8  00                 	db	0
  3861  00A1D9  00                 	db	0
  3862  00A1DA  00                 	db	0
  3863  00A1DB  00                 	db	0
  3864  00A1DC  00                 	db	0
  3865  00A1DD                     __end_of_bit_pattern_degree:
  3866                           	opt stack 0
  3867  00A1DD                     _bit_pattern_verticalbar:
  3868                           	opt stack 0
  3869  00A1DD  04                 	db	4
  3870  00A1DE  04                 	db	4
  3871  00A1DF  04                 	db	4
  3872  00A1E0  04                 	db	4
  3873  00A1E1  04                 	db	4
  3874  00A1E2  04                 	db	4
  3875  00A1E3  04                 	db	4
  3876  00A1E4  04                 	db	4
  3877  00A1E5                     __end_of_bit_pattern_verticalbar:
  3878                           	opt stack 0
  3879  00A1E5                     _flash_command_pagesize_528:
  3880                           	opt stack 0
  3881  00A1E5  3D                 	db	61
  3882  00A1E6  2A                 	db	42
  3883  00A1E7  80                 	db	128
  3884  00A1E8  A7                 	db	167
  3885  00A1E9                     __end_of_flash_command_pagesize_528:
  3886                           	opt stack 0
  3887  00A1E9                     _flash_command_pagesize_512:
  3888                           	opt stack 0
  3889  00A1E9  3D                 	db	61
  3890  00A1EA  2A                 	db	42
  3891  00A1EB  80                 	db	128
  3892  00A1EC  A6                 	db	166
  3893  00A1ED                     __end_of_flash_command_pagesize_512:
  3894                           	opt stack 0
  3895  00A1ED                     _sd000:
  3896                           	opt stack 0
  3897  00A1ED  04                 	db	4
  3898  00A1EE  03                 	db	3
  3899  00A1EF  0409               	dw	1033
  3900  00A1F1                     __end_of_sd000:
  3901                           	opt stack 0
  3902  0000                     _RPINR22	set	3837
  3903  0000                     _RPOR23	set	3799
  3904  0000                     _RPOR21	set	3797
  3905  0000                     _RPINR21	set	3836
  3906  0000                     _RPOR4	set	3780
  3907  0000                     _PPSCONbits	set	3775
  3908  0000                     _CCPTMRS0bits	set	3922
  3909  0000                     _ANCON0bits	set	3912
  3910  0000                     _ANCON1bits	set	3913
  3911  0000                     _UEP0bits	set	3878
  3912  0000                     _UIEbits	set	3894
  3913  0000                     _UADDR	set	3896
  3914  0000                     _UIE	set	3894
  3915  0000                     _UEIE	set	3895
  3916  0000                     _UCFG	set	3897
  3917  0000                     _UEP1	set	3879
  3918  0000                     _UEP0	set	3878
  3919  0000                     _PORTA	set	3968
  3920  0000                     _PORTE	set	3972
  3921  0000                     _TMR2	set	4044
  3922  0000                     _PIE1bits	set	3997
  3923  0000                     _CCPR1L	set	4027
  3924  0000                     _PR2	set	4043
  3925  0000                     _T2CONbits	set	4042
  3926  0000                     _CCP1CONbits	set	4026
  3927  0000                     _RXADDRL	set	3945
  3928  0000                     _RXADDRH	set	3944
  3929  0000                     _DMABCL	set	3943
  3930  0000                     _DMABCH	set	3942
  3931  0000                     _TXADDRL	set	3947
  3932  0000                     _TXADDRH	set	3946
  3933  0000                     _DMACON2bits	set	3974
  3934  0000                     _DMACON1bits	set	3976
  3935  0000                     _SSP2CON1bits	set	3954
  3936  0000                     _SSP2STATbits	set	3955
  3937  0000                     _PORTDbits	set	3971
  3938  0000                     _PORTEbits	set	3972
  3939  0000                     _SSP1BUF	set	4041
  3940  0000                     _SSP1CON2bits	set	4037
  3941  0000                     _SSP1CON1bits	set	4038
  3942  0000                     _SSP1ADD	set	4040
  3943  0000                     _SSP1STATbits	set	4039
  3944  0000                     _PORTAbits	set	3968
  3945  0000                     _T0CONbits	set	4053
  3946  0000                     _TRISEbits	set	3990
  3947  0000                     _EECON2	set	4007
  3948  0000                     _LATBbits	set	3978
  3949  0000                     _LATAbits	set	3977
  3950  0000                     _TRISAbits	set	3986
  3951  0000                     _LATCbits	set	3979
  3952  0000                     _TRISCbits	set	3988
  3953  0000                     _TRISBbits	set	3987
  3954  0000                     _LATDbits	set	3980
  3955  0000                     _TRISDbits	set	3989
  3956  0000                     _TMR0L	set	4054
  3957  0000                     _TMR0H	set	4055
  3958  0000                     _PIR1bits	set	3998
  3959  0000                     _OSCCON	set	4051
  3960  0000                     _OSCTUNEbits	set	3995
  3961  0000                     _INTCONbits	set	4082
  3962  0000                     _IPR2bits	set	4002
  3963  0000                     _RCONbits	set	4048
  3964  0000                     _UCON	set	3941
  3965  0000                     _USTAT	set	3940
  3966  0000                     _PIR2bits	set	4001
  3967  0000                     _UIRbits	set	3938
  3968  0000                     _UCONbits	set	3941
  3969  0000                     _UIR	set	3938
  3970  0000                     _UEIR	set	3939
  3971  0000                     _PIE2bits	set	4000
  3972  00A1F1                     STR_18:
  3973                           
  3974                           ; BSR set to: 1
  3975  00A1F1  68                 	db	104	;'h'
  3976  00A1F2  65                 	db	101	;'e'
  3977  00A1F3  6C                 	db	108	;'l'
  3978  00A1F4  6C                 	db	108	;'l'
  3979  00A1F5  6F                 	db	111	;'o'
  3980  00A1F6  20                 	db	32
  3981  00A1F7  77                 	db	119	;'w'
  3982  00A1F8  6F                 	db	111	;'o'
  3983  00A1F9  72                 	db	114	;'r'
  3984  00A1FA  6C                 	db	108	;'l'
  3985  00A1FB  64                 	db	100	;'d'
  3986  00A1FC  21                 	db	33
  3987  00A1FD  00                 	db	0
  3988  00A1FE                     STR_15:
  3989                           
  3990                           ; BSR set to: 1
  3991  00A1FE  53                 	db	83	;'S'
  3992  00A1FF  6F                 	db	111	;'o'
  3993  00A200  6C                 	db	108	;'l'
  3994  00A201  61                 	db	97	;'a'
  3995  00A202  72                 	db	114	;'r'
  3996  00A203  43                 	db	67	;'C'
  3997  00A204  68                 	db	104	;'h'
  3998  00A205  61                 	db	97	;'a'
  3999  00A206  72                 	db	114	;'r'
  4000  00A207  67                 	db	103	;'g'
  4001  00A208  72                 	db	114	;'r'
  4002  00A209  00                 	db	0
  4003  00A20A                     STR_16:
  4004                           
  4005                           ; BSR set to: 1
  4006  00A20A  46                 	db	70	;'F'
  4007  00A20B  49                 	db	73	;'I'
  4008  00A20C  4C                 	db	76	;'L'
  4009  00A20D  45                 	db	69	;'E'
  4010  00A20E  20                 	db	32
  4011  00A20F  20                 	db	32
  4012  00A210  20                 	db	32
  4013  00A211  20                 	db	32
  4014  00A212  00                 	db	0
  4015  00A213                     STR_7:
  4016                           
  4017                           ; BSR set to: 1
  4018  00A213  4D                 	db	77	;'M'
  4019  00A214  53                 	db	83	;'S'
  4020  00A215  44                 	db	68	;'D'
  4021  00A216  4F                 	db	79	;'O'
  4022  00A217  53                 	db	83	;'S'
  4023  00A218  35                 	db	53	;'5'
  4024  00A219  2E                 	db	46
  4025  00A21A  30                 	db	48	;'0'
  4026  00A21B  00                 	db	0
  4027  00A21C                     STR_1:
  4028                           
  4029                           ; BSR set to: 1
  4030  00A21C  20                 	db	32
  4031  00A21D  20                 	db	32
  4032  00A21E  20                 	db	32
  4033  00A21F  20                 	db	32
  4034  00A220  20                 	db	32
  4035  00A221  20                 	db	32
  4036  00A222  20                 	db	32
  4037  00A223  20                 	db	32
  4038  00A224  00                 	db	0
  4039  00A225                     STR_2:
  4040                           
  4041                           ; BSR set to: 1
  4042  00A225  43                 	db	67	;'C'
  4043  00A226  61                 	db	97	;'a'
  4044  00A227  6E                 	db	110	;'n'
  4045  00A228  63                 	db	99	;'c'
  4046  00A229  65                 	db	101	;'e'
  4047  00A22A  6C                 	db	108	;'l'
  4048  00A22B  00                 	db	0
  4049  00A22C                     STR_6:
  4050                           
  4051                           ; BSR set to: 1
  4052  00A22C  53                 	db	83	;'S'
  4053  00A22D  74                 	db	116	;'t'
  4054  00A22E  6F                 	db	111	;'o'
  4055  00A22F  70                 	db	112	;'p'
  4056  00A230  20                 	db	32
  4057  00A231  00                 	db	0
  4058  00A232                     STR_17:
  4059                           
  4060                           ; BSR set to: 1
  4061  00A232  54                 	db	84	;'T'
  4062  00A233  58                 	db	88	;'X'
  4063  00A234  54                 	db	84	;'T'
  4064  00A235  00                 	db	0
  4065  0000                     
  4066                           ; #config settings
  4067  00A236  00                 	db	0	; dummy byte at the end
  4068  0000                     
  4069                           	psect	cinit
  4070  0110A8                     __pcinit:
  4071                           	opt stack 0
  4072  0110A8                     start_initialization:
  4073                           	opt stack 0
  4074  0110A8                     __initialization:
  4075                           	opt stack 0
  4076                           
  4077                           ; Initialize objects allocated to BANK2 (80 bytes)
  4078                           ; load TBLPTR registers with __pidataBANK2
  4079  0110A8  0E3E               	movlw	low __pidataBANK2
  4080  0110AA  6EF6               	movwf	tblptrl,c
  4081  0110AC  0E1F               	movlw	high __pidataBANK2
  4082  0110AE  6EF7               	movwf	tblptrh,c
  4083  0110B0  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  4084  0110B2  6EF8               	movwf	tblptru,c
  4085  0110B4  EE02  F078         	lfsr	0,__pdataBANK2
  4086  0110B8  EE10 F050          	lfsr	1,80
  4087  0110BC                     copy_data0:
  4088  0110BC  0009               	tblrd		*+
  4089  0110BE  CFF5 FFEE          	movff	tablat,postinc0
  4090  0110C2  50E5               	movf	postdec1,w,c
  4091  0110C4  50E1               	movf	fsr1l,w,c
  4092  0110C6  E1FA               	bnz	copy_data0
  4093                           
  4094                           ; Initialize objects allocated to BANK1 (55 bytes)
  4095                           ; load TBLPTR registers with __pidataBANK1
  4096  0110C8  0E44               	movlw	low __pidataBANK1
  4097  0110CA  6EF6               	movwf	tblptrl,c
  4098  0110CC  0E24               	movlw	high __pidataBANK1
  4099  0110CE  6EF7               	movwf	tblptrh,c
  4100  0110D0  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  4101  0110D2  6EF8               	movwf	tblptru,c
  4102  0110D4  EE01  F09A         	lfsr	0,__pdataBANK1
  4103  0110D8  EE10 F037          	lfsr	1,55
  4104  0110DC                     copy_data1:
  4105  0110DC  0009               	tblrd		*+
  4106  0110DE  CFF5 FFEE          	movff	tablat,postinc0
  4107  0110E2  50E5               	movf	postdec1,w,c
  4108  0110E4  50E1               	movf	fsr1l,w,c
  4109  0110E6  E1FA               	bnz	copy_data1
  4110                           
  4111                           ; Clear objects allocated to BIGRAMll (512 bytes)
  4112  0110E8  EE08  F000         	lfsr	0,__pbssBIGRAMll
  4113  0110EC  EE12 F000          	lfsr	1,512
  4114  0110F0                     clear_0:
  4115  0110F0  6AEE               	clrf	postinc0,c
  4116  0110F2  50E5               	movf	postdec1,w,c
  4117  0110F4  50E1               	movf	fsr1l,w,c
  4118  0110F6  E1FC               	bnz	clear_0
  4119  0110F8  50E2               	movf	fsr1h,w,c
  4120  0110FA  E1FA               	bnz	clear_0
  4121                           
  4122                           ; Clear objects allocated to BANK3 (64 bytes)
  4123  0110FC  EE03  F000         	lfsr	0,__pbssBANK3
  4124  011100  0E40               	movlw	64
  4125  011102                     clear_1:
  4126  011102  6AEE               	clrf	postinc0,c
  4127  011104  06E8               	decf	wreg,f,c
  4128  011106  E1FD               	bnz	clear_1
  4129                           
  4130                           ; Clear objects allocated to BANK2 (120 bytes)
  4131  011108  EE02  F000         	lfsr	0,__pbssBANK2
  4132  01110C  0E78               	movlw	120
  4133  01110E                     clear_2:
  4134  01110E  6AEE               	clrf	postinc0,c
  4135  011110  06E8               	decf	wreg,f,c
  4136  011112  E1FD               	bnz	clear_2
  4137                           
  4138                           ; Clear objects allocated to BANK1 (154 bytes)
  4139  011114  EE01  F000         	lfsr	0,__pbssBANK1
  4140  011118  0E9A               	movlw	154
  4141  01111A                     clear_3:
  4142  01111A  6AEE               	clrf	postinc0,c
  4143  01111C  06E8               	decf	wreg,f,c
  4144  01111E  E1FD               	bnz	clear_3
  4145                           
  4146                           ; Clear objects allocated to BANK0 (52 bytes)
  4147  011120  EE00  F0CC         	lfsr	0,__pbssBANK0
  4148  011124  0E34               	movlw	52
  4149  011126                     clear_4:
  4150  011126  6AEE               	clrf	postinc0,c
  4151  011128  06E8               	decf	wreg,f,c
  4152  01112A  E1FD               	bnz	clear_4
  4153                           
  4154                           ; Clear objects allocated to COMRAM (45 bytes)
  4155  01112C  EE00  F001         	lfsr	0,__pbssCOMRAM
  4156  011130  0E2D               	movlw	45
  4157  011132                     clear_5:
  4158  011132  6AEE               	clrf	postinc0,c
  4159  011134  06E8               	decf	wreg,f,c
  4160  011136  E1FD               	bnz	clear_5
  4161  011138                     end_of_initialization:
  4162                           	opt stack 0
  4163  011138                     __end_of__initialization:
  4164                           	opt stack 0
  4165  011138  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4166  01113A  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4167  01113C  0100               	movlb	0
  4168  01113E  EFDC  F076         	goto	_main	;jump to C main() function
  4169                           tblptru	equ	0xFF8
  4170                           tblptrh	equ	0xFF7
  4171                           tblptrl	equ	0xFF6
  4172                           tablat	equ	0xFF5
  4173                           postinc0	equ	0xFEE
  4174                           wreg	equ	0xFE8
  4175                           postdec1	equ	0xFE5
  4176                           fsr1h	equ	0xFE2
  4177                           fsr1l	equ	0xFE1
  4178                           
  4179                           	psect	bssCOMRAM
  4180  000001                     __pbssCOMRAM:
  4181                           	opt stack 0
  4182  000001                     _outPipes:
  4183                           	opt stack 0
  4184  000001                     	ds	9
  4185  00000A                     _inPipes:
  4186                           	opt stack 0
  4187  00000A                     	ds	6
  4188  000010                     _pBDTEntryIn:
  4189                           	opt stack 0
  4190  000010                     	ds	6
  4191  000016                     _motor_current_stepcount:
  4192                           	opt stack 0
  4193  000016                     	ds	4
  4194  00001A                     _TransferLength:
  4195                           	opt stack 0
  4196  00001A                     	ds	2
  4197  00001C                     _pBDTEntryEP0OutNext:
  4198                           	opt stack 0
  4199  00001C                     	ds	2
  4200  00001E                     _pBDTEntryEP0OutCurrent:
  4201                           	opt stack 0
  4202  00001E                     	ds	2
  4203  000020                     _enc2:
  4204                           	opt stack 0
  4205  000020                     	ds	1
  4206  000021                     _enc1:
  4207                           	opt stack 0
  4208  000021                     	ds	1
  4209  000022                     _motor_cue_write_index:
  4210                           	opt stack 0
  4211  000022                     	ds	1
  4212  000023                     _motor_cue_read_index:
  4213                           	opt stack 0
  4214  000023                     	ds	1
  4215  000024                     _MSDHostNoData:
  4216                           	opt stack 0
  4217  000024                     	ds	1
  4218  000025                     _MSD_State:
  4219                           	opt stack 0
  4220  000025                     	ds	1
  4221  000026                     _USBDeferStatusStagePacket:
  4222                           	opt stack 0
  4223  000026                     	ds	1
  4224  000027                     _USBStatusStageTimeoutCounter:
  4225                           	opt stack 0
  4226  000027                     	ds	1
  4227  000028                     _endpoint_number:
  4228                           	opt stack 0
  4229  000028                     	ds	1
  4230  000029                     _controlTransferState:
  4231                           	opt stack 0
  4232  000029                     	ds	1
  4233  00002A                     _shortPacketStatus:
  4234                           	opt stack 0
  4235  00002A                     	ds	1
  4236  00002B                     _USBDeviceState:
  4237                           	opt stack 0
  4238  00002B                     	ds	1
  4239  00002C                     _USTATcopy:
  4240                           	opt stack 0
  4241  00002C                     	ds	1
  4242  00002D                     _USBActiveConfiguration:
  4243                           	opt stack 0
  4244  00002D                     	ds	1
  4245                           tblptru	equ	0xFF8
  4246                           tblptrh	equ	0xFF7
  4247                           tblptrl	equ	0xFF6
  4248                           tablat	equ	0xFF5
  4249                           postinc0	equ	0xFEE
  4250                           wreg	equ	0xFE8
  4251                           postdec1	equ	0xFE5
  4252                           fsr1h	equ	0xFE2
  4253                           fsr1l	equ	0xFE1
  4254                           
  4255                           	psect	bssBANK0
  4256  0000CC                     __pbssBANK0:
  4257                           	opt stack 0
  4258  0000CC                     _motor_current_speed:
  4259                           	opt stack 0
  4260  0000CC                     	ds	2
  4261  0000CE                     _USBMSDInHandle:
  4262                           	opt stack 0
  4263  0000CE                     	ds	2
  4264  0000D0                     _USBMSDOutHandle:
  4265                           	opt stack 0
  4266  0000D0                     	ds	2
  4267  0000D2                     _MSDCommandState:
  4268                           	opt stack 0
  4269  0000D2                     	ds	1
  4270  0000D3                     _os:
  4271                           	opt stack 0
  4272  0000D3                     	ds	45
  4273                           tblptru	equ	0xFF8
  4274                           tblptrh	equ	0xFF7
  4275                           tblptrl	equ	0xFF6
  4276                           tablat	equ	0xFF5
  4277                           postinc0	equ	0xFEE
  4278                           wreg	equ	0xFE8
  4279                           postdec1	equ	0xFE5
  4280                           fsr1h	equ	0xFE2
  4281                           fsr1l	equ	0xFE1
  4282                           
  4283                           	psect	bssBANK1
  4284  000100                     __pbssBANK1:
  4285                           	opt stack 0
  4286  000100                     _gblCBW:
  4287                           	opt stack 0
  4288  000100                     	ds	31
  4289  00011F                     _gblSenseData:
  4290                           	opt stack 0
  4291  00011F                     	ds	18
  4292  000131                     _pBDTEntryOut:
  4293                           	opt stack 0
  4294  000131                     	ds	6
  4295  000137                     _motor_next_speed_check:
  4296                           	opt stack 0
  4297  000137                     	ds	4
  4298  00013B                     _motor_final_stepcount:
  4299                           	opt stack 0
  4300  00013B                     	ds	4
  4301  00013F                     _gblBLKLen:
  4302                           	opt stack 0
  4303  00013F                     	ds	4
  4304  000143                     _gblNumBLKS:
  4305                           	opt stack 0
  4306  000143                     	ds	4
  4307  000147                     _LBA:
  4308                           	opt stack 0
  4309  000147                     	ds	4
  4310  00014B                     _USB1msTickCount:
  4311                           	opt stack 0
  4312  00014B                     	ds	4
  4313  00014F                     _config_external:
  4314                           	opt stack 0
  4315  00014F                     	ds	3
  4316  000152                     _config_internal:
  4317                           	opt stack 0
  4318  000152                     	ds	3
  4319  000155                     _ep_data_out:
  4320                           	opt stack 0
  4321  000155                     	ds	3
  4322  000158                     _ep_data_in:
  4323                           	opt stack 0
  4324  000158                     	ds	3
  4325  00015B                     _motor_maximum_speed:
  4326                           	opt stack 0
  4327  00015B                     	ds	2
  4328  00015D                     _USBInHandle:
  4329                           	opt stack 0
  4330  00015D                     	ds	2
  4331  00015F                     _USBOutHandle:
  4332                           	opt stack 0
  4333  00015F                     	ds	2
  4334  000161                     _gblMediaPresent:
  4335                           	opt stack 0
  4336  000161                     	ds	2
  4337  000163                     _MSBBufferIndex:
  4338                           	opt stack 0
  4339  000163                     	ds	2
  4340  000165                     _ptrNextData:
  4341                           	opt stack 0
  4342  000165                     	ds	2
  4343  000167                     _pDst:
  4344                           	opt stack 0
  4345  000167                     	ds	2
  4346  000169                     _motor_direction:
  4347                           	opt stack 0
  4348  000169                     	ds	1
  4349  00016A                     _motor_mode:
  4350                           	opt stack 0
  4351  00016A                     	ds	1
  4352  00016B                     _active_configuration:
  4353                           	opt stack 0
  4354  00016B                     	ds	1
  4355  00016C                     _power_state:
  4356                           	opt stack 0
  4357  00016C                     	ds	1
  4358  00016D                     _MSDCBWValid:
  4359                           	opt stack 0
  4360  00016D                     	ds	1
  4361  00016E                     _SoftDetach:
  4362                           	opt stack 0
  4363  00016E                     	ds	1
  4364  00016F                     _gblCBWLength:
  4365                           	opt stack 0
  4366  00016F                     	ds	1
  4367  000170                     _MSDRetryAttempt:
  4368                           	opt stack 0
  4369  000170                     	ds	1
  4370  000171                     _MSDWriteState:
  4371                           	opt stack 0
  4372  000171                     	ds	1
  4373  000172                     _MSDReadState:
  4374                           	opt stack 0
  4375  000172                     	ds	1
  4376  000173                     _USBTicksSinceSuspendEnd:
  4377                           	opt stack 0
  4378  000173                     	ds	1
  4379  000174                     _USBDeferOUTDataStagePackets:
  4380                           	opt stack 0
  4381  000174                     	ds	1
  4382  000175                     _USBDeferINDataStagePackets:
  4383                           	opt stack 0
  4384  000175                     	ds	1
  4385  000176                     _USBStatusStageEnabledFlag2:
  4386                           	opt stack 0
  4387  000176                     	ds	1
  4388  000177                     _USBStatusStageEnabledFlag1:
  4389                           	opt stack 0
  4390  000177                     	ds	1
  4391  000178                     _BothEP0OutUOWNsSet:
  4392                           	opt stack 0
  4393  000178                     	ds	1
  4394  000179                     _USBBusIsSuspended:
  4395                           	opt stack 0
  4396  000179                     	ds	1
  4397  00017A                     _RemoteWakeup:
  4398                           	opt stack 0
  4399  00017A                     	ds	1
  4400  00017B                     _config:
  4401                           	opt stack 0
  4402  00017B                     	ds	22
  4403  000191                     _mediaInformation:
  4404                           	opt stack 0
  4405  000191                     	ds	5
  4406  000196                     _USBAlternateInterface:
  4407                           	opt stack 0
  4408  000196                     	ds	2
  4409  000198                     _active_protocol:
  4410                           	opt stack 0
  4411  000198                     	ds	1
  4412  000199                     _idle_rate:
  4413                           	opt stack 0
  4414  000199                     	ds	1
  4415                           tblptru	equ	0xFF8
  4416                           tblptrh	equ	0xFF7
  4417                           tblptrl	equ	0xFF6
  4418                           tablat	equ	0xFF5
  4419                           postinc0	equ	0xFEE
  4420                           wreg	equ	0xFE8
  4421                           postdec1	equ	0xFE5
  4422                           fsr1h	equ	0xFE2
  4423                           fsr1l	equ	0xFE1
  4424                           
  4425                           	psect	dataBANK1
  4426  00019A                     __pdataBANK1:
  4427                           	opt stack 0
  4428  00019A                     _LUN:
  4429                           	opt stack 0
  4430  00019A                     	ds	29
  4431  0001B7                     i2c_display_init@F6901:
  4432                           	opt stack 0
  4433  0001B7                     	ds	9
  4434  0001C0                     __i2c_display_send_init_sequence@F6898:
  4435                           	opt stack 0
  4436  0001C0                     	ds	9
  4437  0001C9                     	ds	8
  4438                           tblptru	equ	0xFF8
  4439                           tblptrh	equ	0xFF7
  4440                           tblptrl	equ	0xFF6
  4441                           tablat	equ	0xFF5
  4442                           postinc0	equ	0xFEE
  4443                           wreg	equ	0xFE8
  4444                           postdec1	equ	0xFE5
  4445                           fsr1h	equ	0xFE2
  4446                           fsr1l	equ	0xFE1
  4447                           
  4448                           	psect	bssBANK2
  4449  000200                     __pbssBANK2:
  4450                           	opt stack 0
  4451  000200                     _motor_command_cue:
  4452                           	opt stack 0
  4453  000200                     	ds	56
  4454  000238                     _ReceivedDataBuffer:
  4455                           	opt stack 0
  4456  000238                     	ds	64
  4457                           tblptru	equ	0xFF8
  4458                           tblptrh	equ	0xFF7
  4459                           tblptrl	equ	0xFF6
  4460                           tablat	equ	0xFF5
  4461                           postinc0	equ	0xFEE
  4462                           wreg	equ	0xFE8
  4463                           postdec1	equ	0xFE5
  4464                           fsr1h	equ	0xFE2
  4465                           fsr1l	equ	0xFE1
  4466                           
  4467                           	psect	dataBANK2
  4468  000278                     __pdataBANK2:
  4469                           	opt stack 0
  4470  000278                     _display_content:
  4471                           	opt stack 0
  4472  000278                     	ds	80
  4473                           tblptru	equ	0xFF8
  4474                           tblptrh	equ	0xFF7
  4475                           tblptrl	equ	0xFF6
  4476                           tablat	equ	0xFF5
  4477                           postinc0	equ	0xFEE
  4478                           wreg	equ	0xFE8
  4479                           postdec1	equ	0xFE5
  4480                           fsr1h	equ	0xFE2
  4481                           fsr1l	equ	0xFE1
  4482                           
  4483                           	psect	bssBANK3
  4484  000300                     __pbssBANK3:
  4485                           	opt stack 0
  4486  000300                     _ToSendDataBuffer:
  4487                           	opt stack 0
  4488  000300                     	ds	64
  4489                           tblptru	equ	0xFF8
  4490                           tblptrh	equ	0xFF7
  4491                           tblptrl	equ	0xFF6
  4492                           tablat	equ	0xFF5
  4493                           postinc0	equ	0xFEE
  4494                           wreg	equ	0xFE8
  4495                           postdec1	equ	0xFE5
  4496                           fsr1h	equ	0xFE2
  4497                           fsr1l	equ	0xFE1
  4498                           
  4499                           	psect	bssBIGRAMll
  4500  000800                     __pbssBIGRAMll:
  4501                           	opt stack 0
  4502  000800                     _buffer:
  4503                           	opt stack 0
  4504  000800                     	ds	512
  4505                           tblptru	equ	0xFF8
  4506                           tblptrh	equ	0xFF7
  4507                           tblptrl	equ	0xFF6
  4508                           tablat	equ	0xFF5
  4509                           postinc0	equ	0xFEE
  4510                           wreg	equ	0xFE8
  4511                           postdec1	equ	0xFE5
  4512                           fsr1h	equ	0xFE2
  4513                           fsr1l	equ	0xFE1
  4514                           
  4515                           	psect	cstackBANK1
  4516  0001D1                     __pcstackBANK1:
  4517                           	opt stack 0
  4518  0001D1                     main@tmp:
  4519                           	opt stack 0
  4520                           
  4521                           ; 4 bytes @ 0x0
  4522  0001D1                     	ds	4
  4523                           tblptru	equ	0xFF8
  4524                           tblptrh	equ	0xFF7
  4525                           tblptrl	equ	0xFF6
  4526                           tablat	equ	0xFF5
  4527                           postinc0	equ	0xFEE
  4528                           wreg	equ	0xFE8
  4529                           postdec1	equ	0xFE5
  4530                           fsr1h	equ	0xFE2
  4531                           fsr1l	equ	0xFE1
  4532                           
  4533                           	psect	cstackBANK0
  4534  000060                     __pcstackBANK0:
  4535                           	opt stack 0
  4536  000060                     ??__i2c_wait_idle:
  4537  000060                     ??__display_clear:
  4538  000060                     ??_motor_stop:
  4539  000060                     ?_USBTransferOnePacket:
  4540                           	opt stack 0
  4541  000060                     ?_ExternalFlash_MediaInitialize:
  4542                           	opt stack 0
  4543  000060                     ?_ExternalFlash_SectorSizeRead:
  4544                           	opt stack 0
  4545  000060                     ?_strlen:
  4546                           	opt stack 0
  4547  000060                     ?_encoder_next_setup_stepsize:
  4548                           	opt stack 0
  4549  000060                     ?_encoder_next_arc_step_size:
  4550                           	opt stack 0
  4551  000060                     ?___lwdiv:
  4552                           	opt stack 0
  4553  000060                     ?___lwmod:
  4554                           	opt stack 0
  4555  000060                     ?_ExternalFlash_CapacityRead:
  4556                           	opt stack 0
  4557  000060                     ?___lmul:
  4558                           	opt stack 0
  4559  000060                     ?___aldiv:
  4560                           	opt stack 0
  4561  000060                     ?___almod:
  4562                           	opt stack 0
  4563  000060                     ?___fltol:
  4564                           	opt stack 0
  4565  000060                     ?___xxtofl:
  4566                           	opt stack 0
  4567  000060                     USBTransferOnePacket@dir:
  4568                           	opt stack 0
  4569  000060                     USBStallEndpoint@dir:
  4570                           	opt stack 0
  4571  000060                     SYSTEM_Initialize@state:
  4572                           	opt stack 0
  4573  000060                     __i2c_send@dat:
  4574                           	opt stack 0
  4575  000060                     display_get_character@position:
  4576                           	opt stack 0
  4577  000060                     encoder_next_divide_step_size@old_stepsize:
  4578                           	opt stack 0
  4579  000060                     MSDComputeDeviceInAndResidue@DiExpected:
  4580                           	opt stack 0
  4581  000060                     ExternalFlash_MediaInitialize@config:
  4582                           	opt stack 0
  4583  000060                     ExternalFlash_SectorSizeRead@config:
  4584                           	opt stack 0
  4585  000060                     ExternalFlash_CapacityRead@config:
  4586                           	opt stack 0
  4587  000060                     ExternalFlash_MediaDetect@config:
  4588                           	opt stack 0
  4589  000060                     ExternalFlash_WriteProtectStateGet@config:
  4590                           	opt stack 0
  4591  000060                     ExternalFlash_SectorWrite@config:
  4592                           	opt stack 0
  4593  000060                     __get_mbr@idx:
  4594                           	opt stack 0
  4595  000060                     __get_fbr@idx:
  4596                           	opt stack 0
  4597  000060                     __get_fat@idx:
  4598                           	opt stack 0
  4599  000060                     __get_root@idx:
  4600                           	opt stack 0
  4601  000060                     __get_data@idx:
  4602                           	opt stack 0
  4603  000060                     spi_tx@data:
  4604                           	opt stack 0
  4605  000060                     spi_tx_tx@command:
  4606                           	opt stack 0
  4607  000060                     spi_tx_rx@command:
  4608                           	opt stack 0
  4609  000060                     __fill_buffer_get_mode_details@outBuffer:
  4610                           	opt stack 0
  4611  000060                     motor_change_speed@new_speed:
  4612                           	opt stack 0
  4613  000060                     encoder_next_setup_stepsize@old_stepsize:
  4614                           	opt stack 0
  4615  000060                     encoder_next_arc_step_size@old_stepsize:
  4616                           	opt stack 0
  4617  000060                     ___lwdiv@dividend:
  4618                           	opt stack 0
  4619  000060                     ___lwmod@dividend:
  4620                           	opt stack 0
  4621  000060                     memcpy@d1:
  4622                           	opt stack 0
  4623  000060                     memset@p1:
  4624                           	opt stack 0
  4625  000060                     strlen@s:
  4626                           	opt stack 0
  4627  000060                     __spi_init@details:
  4628                           	opt stack 0
  4629  000060                     __motor_run@distance_in_steps:
  4630                           	opt stack 0
  4631  000060                     ___lmul@multiplier:
  4632                           	opt stack 0
  4633  000060                     ___aldiv@dividend:
  4634                           	opt stack 0
  4635  000060                     ___almod@dividend:
  4636                           	opt stack 0
  4637  000060                     ___fltol@f1:
  4638                           	opt stack 0
  4639  000060                     ___xxtofl@val:
  4640                           	opt stack 0
  4641                           
  4642                           ; 4 bytes @ 0x0
  4643  000060                     	ds	1
  4644  000061                     ??_USBStallEndpoint:
  4645  000061                     ??_display_get_character:
  4646  000061                     USBTransferOnePacket@data:
  4647                           	opt stack 0
  4648  000061                     SYSTEM_Initialize@pll_startup_counter:
  4649                           	opt stack 0
  4650                           
  4651                           ; 2 bytes @ 0x1
  4652  000061                     	ds	1
  4653  000062                     ??_MSDComputeDeviceInAndResidue:
  4654  000062                     ??_strlen:
  4655  000062                     ??__fill_buffer_get_mode_details:
  4656  000062                     ??_encoder_next_setup_stepsize:
  4657  000062                     ??_encoder_next_arc_step_size:
  4658  000062                     ??__get_mbr:
  4659  000062                     ??__get_fbr:
  4660  000062                     ??__get_fat:
  4661  000062                     ??__get_root:
  4662  000062                     __display_clear@row:
  4663                           	opt stack 0
  4664  000062                     spi_tx@length:
  4665                           	opt stack 0
  4666  000062                     spi_tx_tx@command_length:
  4667                           	opt stack 0
  4668  000062                     spi_tx_rx@command_length:
  4669                           	opt stack 0
  4670  000062                     ___lwdiv@divisor:
  4671                           	opt stack 0
  4672  000062                     ___lwmod@divisor:
  4673                           	opt stack 0
  4674  000062                     memcpy@s1:
  4675                           	opt stack 0
  4676  000062                     memset@c:
  4677                           	opt stack 0
  4678  000062                     ExternalFlash_SectorWrite@sector_addr:
  4679                           	opt stack 0
  4680                           
  4681                           ; 4 bytes @ 0x2
  4682  000062                     	ds	1
  4683  000063                     USBTransferOnePacket@len:
  4684                           	opt stack 0
  4685  000063                     __display_clear@col:
  4686                           	opt stack 0
  4687  000063                     display_get_character@line:
  4688                           	opt stack 0
  4689  000063                     spi_init@configuration:
  4690                           	opt stack 0
  4691  000063                     SYSTEM_Initialize@pll_startup_counter_3110:
  4692                           	opt stack 0
  4693                           
  4694                           ; 2 bytes @ 0x3
  4695  000063                     	ds	1
  4696  000064                     ??_USBTransferOnePacket:
  4697  000064                     ??_spi_tx:
  4698  000064                     ??___fltol:
  4699  000064                     ??___xxtofl:
  4700  000064                     ___lwdiv@counter:
  4701                           	opt stack 0
  4702  000064                     ___lwmod@counter:
  4703                           	opt stack 0
  4704  000064                     spi_tx_tx@data:
  4705                           	opt stack 0
  4706  000064                     spi_tx_rx@data:
  4707                           	opt stack 0
  4708  000064                     __fill_buffer_get_display@outBuffer:
  4709                           	opt stack 0
  4710  000064                     __motor_run@speed:
  4711                           	opt stack 0
  4712  000064                     memcpy@n:
  4713                           	opt stack 0
  4714  000064                     memset@n:
  4715                           	opt stack 0
  4716  000064                     strlen@cp:
  4717                           	opt stack 0
  4718  000064                     ___lmul@multiplicand:
  4719                           	opt stack 0
  4720  000064                     ___aldiv@divisor:
  4721                           	opt stack 0
  4722  000064                     ___almod@divisor:
  4723                           	opt stack 0
  4724                           
  4725                           ; 4 bytes @ 0x4
  4726  000064                     	ds	1
  4727  000065                     USBStallEndpoint@ep:
  4728                           	opt stack 0
  4729  000065                     __i2c_write@data:
  4730                           	opt stack 0
  4731  000065                     i2c_display_write_fixed@data:
  4732                           	opt stack 0
  4733  000065                     ___lwdiv@quotient:
  4734                           	opt stack 0
  4735                           
  4736                           ; 2 bytes @ 0x5
  4737  000065                     	ds	1
  4738  000066                     ??__motor_run:
  4739  000066                     __fill_buffer_get_display@secondHalf:
  4740                           	opt stack 0
  4741  000066                     memcpy@tmp:
  4742                           	opt stack 0
  4743  000066                     USBStallEndpoint@p:
  4744                           	opt stack 0
  4745  000066                     ExternalFlash_SectorWrite@buffer:
  4746                           	opt stack 0
  4747  000066                     spi_tx_tx@data_length:
  4748                           	opt stack 0
  4749  000066                     spi_tx_rx@data_length:
  4750                           	opt stack 0
  4751  000066                     memset@p:
  4752                           	opt stack 0
  4753                           
  4754                           ; 2 bytes @ 0x6
  4755  000066                     	ds	1
  4756  000067                     ??__fill_buffer_get_display:
  4757  000067                     __i2c_write@length:
  4758                           	opt stack 0
  4759  000067                     i2c_display_write_fixed@length:
  4760                           	opt stack 0
  4761  000067                     utoa@buf:
  4762                           	opt stack 0
  4763  000067                     memcpy@d:
  4764                           	opt stack 0
  4765                           
  4766                           ; 2 bytes @ 0x7
  4767  000067                     	ds	1
  4768  000068                     ??_spi_tx_rx:
  4769  000068                     ??_spi_tx_tx:
  4770  000068                     USBDeviceInit@i:
  4771                           	opt stack 0
  4772  000068                     USBTransferOnePacket@ep:
  4773                           	opt stack 0
  4774  000068                     MSDErrorHandler@ErrorCase:
  4775                           	opt stack 0
  4776  000068                     __i2c_write@slave_address:
  4777                           	opt stack 0
  4778  000068                     i2c_display_write_fixed@pos:
  4779                           	opt stack 0
  4780  000068                     __flash_wakeup@command:
  4781                           	opt stack 0
  4782  000068                     ExternalFlash_SectorWrite@allowWriteToZero:
  4783                           	opt stack 0
  4784  000068                     ___aldiv@counter:
  4785                           	opt stack 0
  4786  000068                     ___almod@counter:
  4787                           	opt stack 0
  4788  000068                     ___fltol@sign1:
  4789                           	opt stack 0
  4790  000068                     ___xxtofl@sign:
  4791                           	opt stack 0
  4792  000068                     ___lmul@product:
  4793                           	opt stack 0
  4794                           
  4795                           ; 4 bytes @ 0x8
  4796  000068                     	ds	1
  4797  000069                     MSDErrorHandler@OldMSD_State:
  4798                           	opt stack 0
  4799  000069                     __i2c_write@cntr:
  4800                           	opt stack 0
  4801  000069                     ___aldiv@sign:
  4802                           	opt stack 0
  4803  000069                     ___almod@sign:
  4804                           	opt stack 0
  4805  000069                     ___fltol@exp1:
  4806                           	opt stack 0
  4807  000069                     ___xxtofl@exp:
  4808                           	opt stack 0
  4809  000069                     USBTransferOnePacket@handle:
  4810                           	opt stack 0
  4811  000069                     utoa@val:
  4812                           	opt stack 0
  4813  000069                     memcpy@s:
  4814                           	opt stack 0
  4815                           
  4816                           ; 2 bytes @ 0x9
  4817  000069                     	ds	1
  4818  00006A                     ??_i2c_display_init:
  4819  00006A                     __ic2_display_set_ddram_address@address:
  4820                           	opt stack 0
  4821  00006A                     __motor_run@direction:
  4822                           	opt stack 0
  4823  00006A                     __ic2_display_set_cgram_address@data_array:
  4824                           	opt stack 0
  4825  00006A                     MSDCheckForErrorCases@DeviceBytes:
  4826                           	opt stack 0
  4827  00006A                     ___aldiv@quotient:
  4828                           	opt stack 0
  4829  00006A                     ___xxtofl@arg:
  4830                           	opt stack 0
  4831                           
  4832                           ; 4 bytes @ 0xA
  4833  00006A                     	ds	1
  4834  00006B                     __ic2_display_set_ddram_address@data_array:
  4835                           	opt stack 0
  4836  00006B                     __fill_buffer_get_status@outBuffer:
  4837                           	opt stack 0
  4838  00006B                     utoa@base:
  4839                           	opt stack 0
  4840  00006B                     i2c_display_init@init_sequence:
  4841                           	opt stack 0
  4842                           
  4843                           ; 9 bytes @ 0xB
  4844  00006B                     	ds	1
  4845  00006C                     ?__flash_get_status:
  4846                           	opt stack 0
  4847  00006C                     __fill_buffer_get_display@cntr:
  4848                           	opt stack 0
  4849                           
  4850                           ; 1 bytes @ 0xC
  4851  00006C                     	ds	1
  4852  00006D                     __ic2_display_set_cgram_address@address:
  4853                           	opt stack 0
  4854  00006D                     i2c_display_cursor@position:
  4855                           	opt stack 0
  4856  00006D                     __fill_buffer_get_display@line:
  4857                           	opt stack 0
  4858  00006D                     utoa@v:
  4859                           	opt stack 0
  4860                           
  4861                           ; 2 bytes @ 0xD
  4862  00006D                     	ds	1
  4863  00006E                     ?___fldiv:
  4864                           	opt stack 0
  4865  00006E                     ?___flmul:
  4866                           	opt stack 0
  4867  00006E                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  4868                           	opt stack 0
  4869  00006E                     i2c_display_cursor@line:
  4870                           	opt stack 0
  4871  00006E                     __flash_get_status@command:
  4872                           	opt stack 0
  4873  00006E                     __fill_buffer_get_display@start_line:
  4874                           	opt stack 0
  4875  00006E                     i2c_display_program_custom_character@bit_pattern:
  4876                           	opt stack 0
  4877  00006E                     ___fldiv@b:
  4878                           	opt stack 0
  4879  00006E                     ___flmul@b:
  4880                           	opt stack 0
  4881                           
  4882                           ; 4 bytes @ 0xE
  4883  00006E                     	ds	1
  4884  00006F                     MSDCheckForErrorCases@DeviceNoData:
  4885                           	opt stack 0
  4886  00006F                     i2c_display_cursor@address:
  4887                           	opt stack 0
  4888  00006F                     __fill_buffer_get_display@position:
  4889                           	opt stack 0
  4890  00006F                     utoa@c:
  4891                           	opt stack 0
  4892  00006F                     __flash_get_status@status:
  4893                           	opt stack 0
  4894                           
  4895                           ; 2 bytes @ 0xF
  4896  00006F                     	ds	1
  4897  000070                     ??_i2c_display_program_custom_character:
  4898  000070                     MSDCheckForErrorCases@MSDErrorCase:
  4899                           	opt stack 0
  4900  000070                     display_update@line:
  4901                           	opt stack 0
  4902  000070                     api_prepare@inBuffer:
  4903                           	opt stack 0
  4904  000070                     itoa@buf:
  4905                           	opt stack 0
  4906                           
  4907                           ; 2 bytes @ 0x10
  4908  000070                     	ds	1
  4909  000071                     ??_MSDWriteHandler:
  4910  000071                     __flash_is_busy@status:
  4911                           	opt stack 0
  4912                           
  4913                           ; 2 bytes @ 0x11
  4914  000071                     	ds	1
  4915  000072                     api_prepare@outBuffer:
  4916                           	opt stack 0
  4917  000072                     itoa@val:
  4918                           	opt stack 0
  4919  000072                     ___fldiv@a:
  4920                           	opt stack 0
  4921  000072                     ___flmul@a:
  4922                           	opt stack 0
  4923                           
  4924                           ; 4 bytes @ 0x12
  4925  000072                     	ds	1
  4926  000073                     __flash_compare_page_to_buffer@page:
  4927                           	opt stack 0
  4928  000073                     __flash_write_to_buffer@start:
  4929                           	opt stack 0
  4930  000073                     __flash_write_page_from_buffer@page:
  4931                           	opt stack 0
  4932  000073                     __flash_partial_read@page:
  4933                           	opt stack 0
  4934  000073                     __flash_set_page_size@command:
  4935                           	opt stack 0
  4936                           
  4937                           ; 4 bytes @ 0x13
  4938  000073                     	ds	1
  4939  000074                     api_prepare@command:
  4940                           	opt stack 0
  4941  000074                     itoa@base:
  4942                           	opt stack 0
  4943  000074                     i2c_display_program_custom_character@data_array:
  4944                           	opt stack 0
  4945                           
  4946                           ; 11 bytes @ 0x14
  4947  000074                     	ds	1
  4948  000075                     __flash_compare_page_to_buffer@buffer:
  4949                           	opt stack 0
  4950  000075                     __flash_write_page_from_buffer@buffer:
  4951                           	opt stack 0
  4952  000075                     __flash_write_to_buffer@data:
  4953                           	opt stack 0
  4954  000075                     __flash_partial_read@start:
  4955                           	opt stack 0
  4956                           
  4957                           ; 2 bytes @ 0x15
  4958  000075                     	ds	1
  4959  000076                     ??___fldiv:
  4960  000076                     ??___flmul:
  4961  000076                     ??__flash_compare_page_to_buffer:
  4962  000076                     ??__flash_write_page_from_buffer:
  4963  000076                     itoa@cp:
  4964                           	opt stack 0
  4965                           
  4966                           ; 2 bytes @ 0x16
  4967  000076                     	ds	1
  4968  000077                     __flash_set_page_size@size:
  4969                           	opt stack 0
  4970  000077                     __flash_write_to_buffer@data_length:
  4971                           	opt stack 0
  4972  000077                     __flash_partial_read@length:
  4973                           	opt stack 0
  4974                           
  4975                           ; 2 bytes @ 0x17
  4976  000077                     	ds	1
  4977  000078                     __display_padded_itoa@value:
  4978                           	opt stack 0
  4979                           
  4980                           ; 2 bytes @ 0x18
  4981  000078                     	ds	1
  4982  000079                     __flash_write_to_buffer@buffer:
  4983                           	opt stack 0
  4984  000079                     __flash_compare_page_to_buffer@status:
  4985                           	opt stack 0
  4986  000079                     __flash_partial_read@data:
  4987                           	opt stack 0
  4988  000079                     __flash_write_page_from_buffer@command:
  4989                           	opt stack 0
  4990                           
  4991                           ; 4 bytes @ 0x19
  4992  000079                     	ds	1
  4993  00007A                     __display_padded_itoa@length:
  4994                           	opt stack 0
  4995  00007A                     ___flmul@sign:
  4996                           	opt stack 0
  4997  00007A                     __flash_write_to_buffer@command:
  4998                           	opt stack 0
  4999  00007A                     ___fldiv@rem:
  5000                           	opt stack 0
  5001                           
  5002                           ; 4 bytes @ 0x1A
  5003  00007A                     	ds	1
  5004  00007B                     ??__flash_partial_read:
  5005  00007B                     ___flmul@aexp:
  5006                           	opt stack 0
  5007  00007B                     __display_padded_itoa@text:
  5008                           	opt stack 0
  5009  00007B                     __flash_compare_page_to_buffer@command:
  5010                           	opt stack 0
  5011                           
  5012                           ; 4 bytes @ 0x1B
  5013  00007B                     	ds	1
  5014  00007C                     ___flmul@grs:
  5015                           	opt stack 0
  5016                           
  5017                           ; 4 bytes @ 0x1C
  5018  00007C                     	ds	1
  5019  00007D                     ??__display_padded_itoa:
  5020                           
  5021                           ; 1 bytes @ 0x1D
  5022  00007D                     	ds	1
  5023  00007E                     ___fldiv@sign:
  5024                           	opt stack 0
  5025                           
  5026                           ; 1 bytes @ 0x1E
  5027  00007E                     	ds	1
  5028  00007F                     i2c_display_program_custom_character@address:
  5029                           	opt stack 0
  5030  00007F                     flash_sector_write@page:
  5031                           	opt stack 0
  5032  00007F                     ___fldiv@new_exp:
  5033                           	opt stack 0
  5034  00007F                     __flash_partial_read@command:
  5035                           	opt stack 0
  5036                           
  5037                           ; 4 bytes @ 0x1F
  5038  00007F                     	ds	1
  5039  000080                     i2c_display_program_custom_character@cntr:
  5040                           	opt stack 0
  5041  000080                     ___flmul@bexp:
  5042                           	opt stack 0
  5043                           
  5044                           ; 1 bytes @ 0x20
  5045  000080                     	ds	1
  5046  000081                     flash_sector_write@data:
  5047                           	opt stack 0
  5048  000081                     ___fldiv@grs:
  5049                           	opt stack 0
  5050  000081                     ___flmul@prod:
  5051                           	opt stack 0
  5052                           
  5053                           ; 4 bytes @ 0x21
  5054  000081                     	ds	1
  5055  000082                     __display_padded_itoa@tmp:
  5056                           	opt stack 0
  5057                           
  5058                           ; 10 bytes @ 0x22
  5059  000082                     	ds	1
  5060  000083                     flash_sector_write@match:
  5061                           	opt stack 0
  5062  000083                     __flash_partial_read@address:
  5063                           	opt stack 0
  5064                           
  5065                           ; 4 bytes @ 0x23
  5066  000083                     	ds	1
  5067  000084                     fat_format@cntr:
  5068                           	opt stack 0
  5069                           
  5070                           ; 2 bytes @ 0x24
  5071  000084                     	ds	1
  5072  000085                     ___fldiv@bexp:
  5073                           	opt stack 0
  5074  000085                     ___flmul@temp:
  5075                           	opt stack 0
  5076                           
  5077                           ; 2 bytes @ 0x25
  5078  000085                     	ds	1
  5079  000086                     ___fldiv@aexp:
  5080                           	opt stack 0
  5081                           
  5082                           ; 1 bytes @ 0x26
  5083  000086                     	ds	1
  5084  000087                     ?__motor_get_speed_in_degrees:
  5085                           	opt stack 0
  5086  000087                     ?_motor_steps_from_degrees:
  5087                           	opt stack 0
  5088  000087                     flash_sector_read@page:
  5089                           	opt stack 0
  5090  000087                     motor_steps_from_degrees@degrees:
  5091                           	opt stack 0
  5092  000087                     __motor_get_speed_in_degrees@speed_index:
  5093                           	opt stack 0
  5094                           
  5095                           ; 2 bytes @ 0x27
  5096  000087                     	ds	2
  5097  000089                     ??__motor_get_speed_in_degrees:
  5098  000089                     flash_sector_read@data:
  5099                           	opt stack 0
  5100                           
  5101                           ; 2 bytes @ 0x29
  5102  000089                     	ds	2
  5103  00008B                     ??_fat_get_format_status:
  5104  00008B                     ExternalFlash_SectorRead@config:
  5105                           	opt stack 0
  5106  00008B                     motor_steps_from_degrees@steps:
  5107                           	opt stack 0
  5108  00008B                     __motor_get_speed_in_degrees@speed:
  5109                           	opt stack 0
  5110                           
  5111                           ; 4 bytes @ 0x2B
  5112  00008B                     	ds	1
  5113  00008C                     __display_padded_itoa@len:
  5114                           	opt stack 0
  5115                           
  5116                           ; 1 bytes @ 0x2C
  5117  00008C                     	ds	1
  5118  00008D                     __display_padded_itoa@pos:
  5119                           	opt stack 0
  5120  00008D                     fat_get_format_status@cntr:
  5121                           	opt stack 0
  5122  00008D                     ExternalFlash_SectorRead@sector_addr:
  5123                           	opt stack 0
  5124                           
  5125                           ; 4 bytes @ 0x2D
  5126  00008D                     	ds	1
  5127  00008E                     __display_padded_itoa@padding:
  5128                           	opt stack 0
  5129                           
  5130                           ; 1 bytes @ 0x2E
  5131  00008E                     	ds	1
  5132  00008F                     ?_motor_nonzero_steps_from_degrees:
  5133                           	opt stack 0
  5134  00008F                     __display_signed_itoa@value:
  5135                           	opt stack 0
  5136  00008F                     motor_nonzero_steps_from_degrees@degrees:
  5137                           	opt stack 0
  5138  00008F                     __motor_get_speed_in_degrees@lookup:
  5139                           	opt stack 0
  5140                           
  5141                           ; 4 bytes @ 0x2F
  5142  00008F                     	ds	2
  5143  000091                     __display_signed_itoa@text:
  5144                           	opt stack 0
  5145  000091                     ExternalFlash_SectorRead@buffer:
  5146                           	opt stack 0
  5147                           
  5148                           ; 2 bytes @ 0x31
  5149  000091                     	ds	2
  5150  000093                     ?_motor_speed_from_index:
  5151                           	opt stack 0
  5152  000093                     ExternalFlash_SectorRead@page:
  5153                           	opt stack 0
  5154  000093                     motor_speed_from_index@speed_index:
  5155                           	opt stack 0
  5156  000093                     motor_nonzero_steps_from_degrees@steps:
  5157                           	opt stack 0
  5158                           
  5159                           ; 4 bytes @ 0x33
  5160  000093                     	ds	2
  5161  000095                     ??_MSDReadHandler:
  5162  000095                     __display_itoa@value:
  5163                           	opt stack 0
  5164                           
  5165                           ; 2 bytes @ 0x35
  5166  000095                     	ds	2
  5167  000097                     __display_itoa@decimals:
  5168                           	opt stack 0
  5169  000097                     motor_schedule_command@distance_in_steps:
  5170                           	opt stack 0
  5171                           
  5172                           ; 4 bytes @ 0x37
  5173  000097                     	ds	1
  5174  000098                     __display_itoa@text:
  5175                           	opt stack 0
  5176                           
  5177                           ; 2 bytes @ 0x38
  5178  000098                     	ds	1
  5179  000099                     ??_MSDProcessCommandMediaPresent:
  5180                           
  5181                           ; 1 bytes @ 0x39
  5182  000099                     	ds	1
  5183  00009A                     ??__display_itoa:
  5184                           
  5185                           ; 1 bytes @ 0x3A
  5186  00009A                     	ds	1
  5187  00009B                     _MSDProcessCommandMediaPresent$2606:
  5188                           	opt stack 0
  5189  00009B                     motor_schedule_command@speed:
  5190                           	opt stack 0
  5191                           
  5192                           ; 2 bytes @ 0x3B
  5193  00009B                     	ds	2
  5194  00009D                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  5195                           	opt stack 0
  5196  00009D                     motor_schedule_command@direction:
  5197                           	opt stack 0
  5198                           
  5199                           ; 1 bytes @ 0x3D
  5200  00009D                     	ds	1
  5201  00009E                     __parse_jump_steps@data:
  5202                           	opt stack 0
  5203  00009E                     MSDProcessCommandMediaPresent@sectorSize:
  5204                           	opt stack 0
  5205  00009E                     motor_go_to_steps_position@target_position:
  5206                           	opt stack 0
  5207                           
  5208                           ; 4 bytes @ 0x3E
  5209  00009E                     	ds	2
  5210  0000A0                     __parse_jump_steps@out_buffer:
  5211                           	opt stack 0
  5212  0000A0                     __display_itoa@tmp:
  5213                           	opt stack 0
  5214                           
  5215                           ; 10 bytes @ 0x40
  5216  0000A0                     	ds	2
  5217  0000A2                     ??_motor_go_to_steps_position:
  5218  0000A2                     __parse_jump_steps@out_idx_ptr:
  5219                           	opt stack 0
  5220  0000A2                     MSDProcessCommandMediaPresent@capacity:
  5221                           	opt stack 0
  5222                           
  5223                           ; 4 bytes @ 0x42
  5224  0000A2                     	ds	2
  5225  0000A4                     ??__parse_jump_steps:
  5226                           
  5227                           ; 1 bytes @ 0x44
  5228  0000A4                     	ds	1
  5229  0000A5                     __parse_jump_steps@return_value:
  5230                           	opt stack 0
  5231                           
  5232                           ; 1 bytes @ 0x45
  5233  0000A5                     	ds	1
  5234  0000A6                     MSDProcessCommandMediaPresent@i:
  5235                           	opt stack 0
  5236  0000A6                     __parse_jump_steps@number_of_steps:
  5237                           	opt stack 0
  5238                           
  5239                           ; 4 bytes @ 0x46
  5240  0000A6                     	ds	1
  5241  0000A7                     ??_MSDProcessCommand:
  5242  0000A7                     
  5243                           ; 1 bytes @ 0x47
  5244  0000A7                     	ds	3
  5245  0000AA                     __display_itoa@len:
  5246                           	opt stack 0
  5247  0000AA                     __parse_command_long@data:
  5248                           	opt stack 0
  5249  0000AA                     motor_go_to_steps_position@overhead_cw:
  5250                           	opt stack 0
  5251                           
  5252                           ; 4 bytes @ 0x4A
  5253  0000AA                     	ds	1
  5254  0000AB                     __display_itoa@missing:
  5255                           	opt stack 0
  5256                           
  5257                           ; 1 bytes @ 0x4B
  5258  0000AB                     	ds	1
  5259  0000AC                     ??_MSDTasks:
  5260  0000AC                     __display_itoa@pos:
  5261                           	opt stack 0
  5262  0000AC                     __parse_command_long@out_buffer:
  5263                           	opt stack 0
  5264                           
  5265                           ; 2 bytes @ 0x4C
  5266  0000AC                     	ds	1
  5267  0000AD                     _MSDTasks$2588:
  5268                           	opt stack 0
  5269  0000AD                     __display_itoa_long@value:
  5270                           	opt stack 0
  5271                           
  5272                           ; 4 bytes @ 0x4D
  5273  0000AD                     	ds	1
  5274  0000AE                     __parse_command_long@out_idx_ptr:
  5275                           	opt stack 0
  5276  0000AE                     motor_go_to_steps_position@overhead_ccw:
  5277                           	opt stack 0
  5278                           
  5279                           ; 4 bytes @ 0x4E
  5280  0000AE                     	ds	1
  5281  0000AF                     _MSDTasks$2589:
  5282                           	opt stack 0
  5283                           
  5284                           ; 2 bytes @ 0x4F
  5285  0000AF                     	ds	1
  5286  0000B0                     __parse_command_long@length:
  5287                           	opt stack 0
  5288                           
  5289                           ; 1 bytes @ 0x50
  5290  0000B0                     	ds	1
  5291  0000B1                     MSDTasks@i:
  5292                           	opt stack 0
  5293  0000B1                     __display_itoa_long@decimals:
  5294                           	opt stack 0
  5295                           
  5296                           ; 1 bytes @ 0x51
  5297  0000B1                     	ds	1
  5298  0000B2                     __display_itoa_long@text:
  5299                           	opt stack 0
  5300  0000B2                     motor_go_to_steps_position@distance_cw:
  5301                           	opt stack 0
  5302                           
  5303                           ; 4 bytes @ 0x52
  5304  0000B2                     	ds	2
  5305  0000B4                     ??__display_itoa_long:
  5306                           
  5307                           ; 1 bytes @ 0x54
  5308  0000B4                     	ds	2
  5309  0000B6                     motor_go_to_steps_position@distance_ccw:
  5310                           	opt stack 0
  5311                           
  5312                           ; 4 bytes @ 0x56
  5313  0000B6                     	ds	2
  5314  0000B8                     __display_itoa_long@length:
  5315                           	opt stack 0
  5316                           
  5317                           ; 1 bytes @ 0x58
  5318  0000B8                     	ds	1
  5319  0000B9                     __display_itoa_long@short_value:
  5320                           	opt stack 0
  5321                           
  5322                           ; 2 bytes @ 0x59
  5323  0000B9                     	ds	1
  5324  0000BA                     __parse_command_short@cmd:
  5325                           	opt stack 0
  5326  0000BA                     motor_go_to_degrees_position@target_position:
  5327                           	opt stack 0
  5328                           
  5329                           ; 4 bytes @ 0x5A
  5330  0000BA                     	ds	1
  5331  0000BB                     __display_itoa_long@last_digit:
  5332                           	opt stack 0
  5333  0000BB                     api_parse@inBuffer:
  5334                           	opt stack 0
  5335                           
  5336                           ; 2 bytes @ 0x5B
  5337  0000BB                     	ds	1
  5338  0000BC                     ??_display_prepare:
  5339                           
  5340                           ; 1 bytes @ 0x5C
  5341  0000BC                     	ds	1
  5342  0000BD                     api_parse@receivedDataLength:
  5343                           	opt stack 0
  5344                           
  5345                           ; 1 bytes @ 0x5D
  5346  0000BD                     	ds	1
  5347  0000BE                     ??_encoder_statemachine:
  5348  0000BE                     api_parse@outBuffer:
  5349                           	opt stack 0
  5350  0000BE                     display_prepare@temp:
  5351                           	opt stack 0
  5352                           
  5353                           ; 10 bytes @ 0x5E
  5354  0000BE                     	ds	2
  5355  0000C0                     ??_api_parse:
  5356                           
  5357                           ; 1 bytes @ 0x60
  5358  0000C0                     	ds	2
  5359  0000C2                     api_parse@out_idx_ptr:
  5360                           	opt stack 0
  5361                           
  5362                           ; 2 bytes @ 0x62
  5363  0000C2                     	ds	2
  5364  0000C4                     api_parse@out_idx:
  5365                           	opt stack 0
  5366                           
  5367                           ; 1 bytes @ 0x64
  5368  0000C4                     	ds	1
  5369  0000C5                     api_parse@in_idx:
  5370                           	opt stack 0
  5371                           
  5372                           ; 1 bytes @ 0x65
  5373  0000C5                     	ds	1
  5374  0000C6                     encoder_statemachine@target_divide_position:
  5375                           	opt stack 0
  5376                           
  5377                           ; 2 bytes @ 0x66
  5378  0000C6                     	ds	2
  5379  0000C8                     display_prepare@space:
  5380                           	opt stack 0
  5381  0000C8                     encoder_statemachine@tmp:
  5382                           	opt stack 0
  5383                           
  5384                           ; 4 bytes @ 0x68
  5385  0000C8                     	ds	1
  5386  0000C9                     display_prepare@cntr:
  5387                           	opt stack 0
  5388                           
  5389                           ; 1 bytes @ 0x69
  5390  0000C9                     	ds	3
  5391  0000CC                     tblptru	equ	0xFF8
  5392                           tblptrh	equ	0xFF7
  5393                           tblptrl	equ	0xFF6
  5394                           tablat	equ	0xFF5
  5395                           postinc0	equ	0xFEE
  5396                           wreg	equ	0xFE8
  5397                           postdec1	equ	0xFE5
  5398                           fsr1h	equ	0xFE2
  5399                           fsr1l	equ	0xFE1
  5400                           
  5401                           ; 1 bytes @ 0x6C
  5402                           
  5403                           	psect	cstackCOMRAM
  5404  00002E                     __pcstackCOMRAM:
  5405                           	opt stack 0
  5406  00002E                     ??_motor_isr:
  5407  00002E                     ??_USBStdGetDscHandler:
  5408  00002E                     ??_USBStdGetStatusHandler:
  5409  00002E                     ?i2_USBTransferOnePacket:
  5410                           	opt stack 0
  5411  00002E                     ?i2_ExternalFlash_MediaInitialize:
  5412                           	opt stack 0
  5413  00002E                     USBConfigureEndpoint@direction:
  5414                           	opt stack 0
  5415  00002E                     USBCtrlTrfTxService@byteToSend:
  5416                           	opt stack 0
  5417  00002E                     USBCtrlTrfRxService@i:
  5418                           	opt stack 0
  5419  00002E                     i2USBTransferOnePacket@dir:
  5420                           	opt stack 0
  5421  00002E                     i2USBStallEndpoint@dir:
  5422                           	opt stack 0
  5423  00002E                     i2SYSTEM_Initialize@pll_startup_counter:
  5424                           	opt stack 0
  5425  00002E                     i2ExternalFlash_MediaInitialize@config:
  5426                           	opt stack 0
  5427  00002E                     i2ExternalFlash_MediaDetect@config:
  5428                           	opt stack 0
  5429  00002E                     i2memcpy@d1:
  5430                           	opt stack 0
  5431  00002E                     i2memset@p1:
  5432                           	opt stack 0
  5433                           
  5434                           ; 2 bytes @ 0x0
  5435  00002E                     	ds	1
  5436  00002F                     ??_USBConfigureEndpoint:
  5437  00002F                     ??i2_USBStallEndpoint:
  5438  00002F                     USBCtrlTrfRxService@byteToRead:
  5439                           	opt stack 0
  5440  00002F                     USBCtrlTrfInHandler@lastDTS:
  5441                           	opt stack 0
  5442  00002F                     USBStdGetStatusHandler@p:
  5443                           	opt stack 0
  5444  00002F                     i2USBTransferOnePacket@data:
  5445                           	opt stack 0
  5446                           
  5447                           ; 2 bytes @ 0x1
  5448  00002F                     	ds	1
  5449  000030                     i2SYSTEM_Initialize@pll_startup_counter_3110:
  5450                           	opt stack 0
  5451  000030                     i2memcpy@s1:
  5452                           	opt stack 0
  5453  000030                     i2memset@c:
  5454                           	opt stack 0
  5455                           
  5456                           ; 2 bytes @ 0x2
  5457  000030                     	ds	1
  5458  000031                     i2USBTransferOnePacket@len:
  5459                           	opt stack 0
  5460                           
  5461                           ; 1 bytes @ 0x3
  5462  000031                     	ds	1
  5463  000032                     ??i2_USBTransferOnePacket:
  5464  000032                     i2SYSTEM_Initialize@state:
  5465                           	opt stack 0
  5466  000032                     i2memcpy@n:
  5467                           	opt stack 0
  5468  000032                     i2memset@n:
  5469                           	opt stack 0
  5470                           
  5471                           ; 2 bytes @ 0x4
  5472  000032                     	ds	1
  5473  000033                     USBConfigureEndpoint@EPNum:
  5474                           	opt stack 0
  5475  000033                     i2USBStallEndpoint@ep:
  5476                           	opt stack 0
  5477                           
  5478                           ; 1 bytes @ 0x5
  5479  000033                     	ds	1
  5480  000034                     USBConfigureEndpoint@handle:
  5481                           	opt stack 0
  5482  000034                     i2USBStallEndpoint@p:
  5483                           	opt stack 0
  5484  000034                     i2memcpy@d:
  5485                           	opt stack 0
  5486  000034                     i2memset@p:
  5487                           	opt stack 0
  5488                           
  5489                           ; 2 bytes @ 0x6
  5490  000034                     	ds	2
  5491  000036                     USBEnableEndpoint@options:
  5492                           	opt stack 0
  5493  000036                     i2USBDeviceInit@i:
  5494                           	opt stack 0
  5495  000036                     i2USBTransferOnePacket@ep:
  5496                           	opt stack 0
  5497  000036                     i2memcpy@s:
  5498                           	opt stack 0
  5499                           
  5500                           ; 2 bytes @ 0x8
  5501  000036                     	ds	1
  5502  000037                     USBEnableEndpoint@p:
  5503                           	opt stack 0
  5504  000037                     i2USBTransferOnePacket@handle:
  5505                           	opt stack 0
  5506                           
  5507                           ; 2 bytes @ 0x9
  5508  000037                     	ds	1
  5509  000038                     i2memcpy@tmp:
  5510                           	opt stack 0
  5511                           
  5512                           ; 1 bytes @ 0xA
  5513  000038                     	ds	1
  5514  000039                     ??_USBMSDInit:
  5515  000039                     USBEnableEndpoint@ep:
  5516                           	opt stack 0
  5517  000039                     _USBCheckMSDRequest$2534:
  5518                           	opt stack 0
  5519  000039                     MSDTransferTerminated@handle:
  5520                           	opt stack 0
  5521                           
  5522                           ; 2 bytes @ 0xB
  5523  000039                     	ds	1
  5524  00003A                     
  5525                           ; 1 bytes @ 0xC
  5526  00003A                     	ds	1
  5527  00003B                     _USBCheckMSDRequest$2535:
  5528                           	opt stack 0
  5529  00003B                     _MSDTransferTerminated$2623:
  5530                           	opt stack 0
  5531                           
  5532                           ; 2 bytes @ 0xD
  5533  00003B                     	ds	1
  5534  00003C                     
  5535                           ; 1 bytes @ 0xE
  5536  00003C                     	ds	1
  5537  00003D                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  5538                           	opt stack 0
  5539                           
  5540                           ; 2 bytes @ 0xF
  5541  00003D                     	ds	1
  5542  00003E                     motor_isr@steps_until_standstill:
  5543                           	opt stack 0
  5544                           
  5545                           ; 2 bytes @ 0x10
  5546  00003E                     	ds	1
  5547  00003F                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  5548                           	opt stack 0
  5549                           
  5550                           ; 2 bytes @ 0x11
  5551  00003F                     	ds	1
  5552  000040                     motor_isr@steps_until_standstill_if_accelerate:
  5553                           	opt stack 0
  5554                           
  5555                           ; 2 bytes @ 0x12
  5556  000040                     	ds	1
  5557  000041                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  5558                           	opt stack 0
  5559                           
  5560                           ; 2 bytes @ 0x13
  5561  000041                     	ds	1
  5562  000042                     motor_isr@steps_remaining:
  5563                           	opt stack 0
  5564                           
  5565                           ; 4 bytes @ 0x14
  5566  000042                     	ds	1
  5567  000043                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  5568                           
  5569                           ; 1 bytes @ 0x15
  5570  000043                     	ds	2
  5571  000045                     ??_USBStdFeatureReqHandler:
  5572  000045                     USBStdSetCfgHandler@i:
  5573                           	opt stack 0
  5574                           
  5575                           ; 1 bytes @ 0x17
  5576  000045                     	ds	1
  5577  000046                     USBStdFeatureReqHandler@pUEP:
  5578                           	opt stack 0
  5579                           
  5580                           ; 2 bytes @ 0x18
  5581  000046                     	ds	2
  5582  000048                     USBStdFeatureReqHandler@current_ep_data:
  5583                           	opt stack 0
  5584                           
  5585                           ; 1 bytes @ 0x1A
  5586  000048                     	ds	1
  5587  000049                     USBStdFeatureReqHandler@p:
  5588                           	opt stack 0
  5589                           
  5590                           ; 2 bytes @ 0x1B
  5591  000049                     	ds	2
  5592  00004B                     ??_USBCtrlEPService:
  5593  00004B                     
  5594                           ; 1 bytes @ 0x1D
  5595  00004B                     	ds	1
  5596  00004C                     USBDeviceTasks@i:
  5597                           	opt stack 0
  5598                           
  5599                           ; 1 bytes @ 0x1E
  5600  00004C                     	ds	1
  5601  00004D                     ??_SYS_InterruptHigh:
  5602                           
  5603                           ; 1 bytes @ 0x1F
  5604  00004D                     	ds	14
  5605                           tblptru	equ	0xFF8
  5606                           tblptrh	equ	0xFF7
  5607                           tblptrl	equ	0xFF6
  5608                           tablat	equ	0xFF5
  5609                           postinc0	equ	0xFEE
  5610                           wreg	equ	0xFE8
  5611                           postdec1	equ	0xFE5
  5612                           fsr1h	equ	0xFE2
  5613                           fsr1l	equ	0xFE1
  5614                           
  5615 ;;
  5616 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  5617 ;;
  5618 ;; *************** function _main *****************
  5619 ;; Defined at:
  5620 ;;		line 52 in file "main.c"
  5621 ;; Parameters:    Size  Location     Type
  5622 ;;		None
  5623 ;; Auto vars:     Size  Location     Type
  5624 ;;  tmp             4    0[BANK1 ] float 
  5625 ;;  startup_time    1    0        unsigned char 
  5626 ;; Return value:  Size  Location     Type
  5627 ;;                  1    wreg      void 
  5628 ;; Registers used:
  5629 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5630 ;; Tracked objects:
  5631 ;;		On entry : 0/0
  5632 ;;		On exit  : 0/0
  5633 ;;		Unchanged: 0/0
  5634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5636 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5638 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5639 ;;Total ram usage:        4 bytes
  5640 ;; Hardware stack levels required when called:   22
  5641 ;; This function calls:
  5642 ;;		_APP_DeviceCustomHIDTasks
  5643 ;;		_APP_DeviceMSDTasks
  5644 ;;		_SYSTEM_Initialize
  5645 ;;		_USBDeviceAttach
  5646 ;;		_USBDeviceInit
  5647 ;;		___fldiv
  5648 ;;		___flmul
  5649 ;;		___fltol
  5650 ;;		___xxtofl
  5651 ;;		_display_prepare
  5652 ;;		_display_update
  5653 ;;		_encoder_statemachine
  5654 ;;		_motor_process_cue
  5655 ;;		_system_init
  5656 ;; This function is called by:
  5657 ;;		Startup code after reset
  5658 ;; This function uses a non-reentrant model
  5659 ;;
  5660                           
  5661                           	psect	text0
  5662  00EDB8                     __ptext0:
  5663                           	opt stack 0
  5664  00EDB8                     _main:
  5665                           	opt stack 9
  5666                           
  5667                           ;main.c: 54: uint8_t startup_timer;;main.c: 55: float tmp;;main.c: 58: system_init();
  5668                           
  5669                           ;incstack = 0
  5670  00EDB8  EC8B  F07F         	call	_system_init	;wreg free
  5671                           
  5672                           ;main.c: 60: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  5673  00EDBC  0E00               	movlw	0
  5674  00EDBE  ECEF  F08D         	call	_SYSTEM_Initialize
  5675                           
  5676                           ;main.c: 62: USBDeviceInit();
  5677  00EDC2  EC51  F074         	call	_USBDeviceInit	;wreg free
  5678                           
  5679                           ;main.c: 63: USBDeviceAttach();
  5680  00EDC6  ECA7  F092         	call	_USBDeviceAttach	;wreg free
  5681  00EDCA                     
  5682                           ;main.c: 66: {;main.c: 68: APP_DeviceMSDTasks();
  5683  00EDCA  EC2E  F094         	call	_APP_DeviceMSDTasks	;wreg free
  5684                           
  5685                           ;main.c: 70: if(!os.done)
  5686  00EDCE  0100               	movlb	0	; () banked
  5687  00EDD0  51D5               	movf	(_os+2)& (0+255),w,b	;volatile
  5688  00EDD2  A4D8               	btfss	status,2,c
  5689  00EDD4  D7FA               	goto	l857
  5690                           
  5691                           ; BSR set to: 0
  5692  00EDD6  0004               	clrwdt		;# 
  5693                           
  5694                           ;main.c: 76: APP_DeviceCustomHIDTasks();
  5695  00EDD8  EC5C  F087         	call	_APP_DeviceCustomHIDTasks	;wreg free
  5696                           
  5697                           ;main.c: 79: encoder_statemachine();
  5698  00EDDC  EC1C  F051         	call	_encoder_statemachine	;wreg free
  5699                           
  5700                           ;main.c: 82: motor_process_cue();
  5701  00EDE0  EC5A  F08B         	call	_motor_process_cue	;wreg free
  5702                           
  5703                           ;main.c: 85: switch(os.timeSlot)
  5704  00EDE4  D073               	goto	l859
  5705  00EDE6                     
  5706                           ;main.c: 89: tmp = (float) os.current_position_in_steps;
  5707  00EDE6  C0DA  F060         	movff	_os+7,___xxtofl@val	;volatile
  5708  00EDEA  C0DB  F061         	movff	_os+8,___xxtofl@val+1	;volatile
  5709  00EDEE  C0DC  F062         	movff	_os+9,___xxtofl@val+2	;volatile
  5710  00EDF2  C0DD  F063         	movff	_os+10,___xxtofl@val+3	;volatile
  5711  00EDF6  0E00               	movlw	0
  5712  00EDF8  ECF6  F074         	call	___xxtofl
  5713  00EDFC  C060  F1D1         	movff	?___xxtofl,main@tmp
  5714  00EE00  C061  F1D2         	movff	?___xxtofl+1,main@tmp+1
  5715  00EE04  C062  F1D3         	movff	?___xxtofl+2,main@tmp+2
  5716  00EE08  C063  F1D4         	movff	?___xxtofl+3,main@tmp+3
  5717                           
  5718                           ;main.c: 90: tmp *= 36000;
  5719  00EE0C  C1D1  F06E         	movff	main@tmp,___flmul@b
  5720  00EE10  C1D2  F06F         	movff	main@tmp+1,___flmul@b+1
  5721  00EE14  C1D3  F070         	movff	main@tmp+2,___flmul@b+2
  5722  00EE18  C1D4  F071         	movff	main@tmp+3,___flmul@b+3
  5723  00EE1C  0E00               	movlw	0
  5724  00EE1E  0100               	movlb	0	; () banked
  5725  00EE20  6F72               	movwf	___flmul@a& (0+255),b
  5726  00EE22  0EA0               	movlw	160
  5727  00EE24  6F73               	movwf	(___flmul@a+1)& (0+255),b
  5728  00EE26  0E0C               	movlw	12
  5729  00EE28  6F74               	movwf	(___flmul@a+2)& (0+255),b
  5730  00EE2A  0E47               	movlw	71
  5731  00EE2C  6F75               	movwf	(___flmul@a+3)& (0+255),b
  5732  00EE2E  ECF8  F062         	call	___flmul	;wreg free
  5733  00EE32  C06E  F1D1         	movff	?___flmul,main@tmp
  5734  00EE36  C06F  F1D2         	movff	?___flmul+1,main@tmp+1
  5735  00EE3A  C070  F1D3         	movff	?___flmul+2,main@tmp+2
  5736  00EE3E  C071  F1D4         	movff	?___flmul+3,main@tmp+3
  5737                           
  5738                           ;main.c: 91: tmp /= config.full_circle_in_steps;
  5739  00EE42  C1D1  F06E         	movff	main@tmp,___fldiv@b
  5740  00EE46  C1D2  F06F         	movff	main@tmp+1,___fldiv@b+1
  5741  00EE4A  C1D3  F070         	movff	main@tmp+2,___fldiv@b+2
  5742  00EE4E  C1D4  F071         	movff	main@tmp+3,___fldiv@b+3
  5743  00EE52  C17B  F060         	movff	_config,___xxtofl@val
  5744  00EE56  C17C  F061         	movff	_config+1,___xxtofl@val+1
  5745  00EE5A  C17D  F062         	movff	_config+2,___xxtofl@val+2
  5746  00EE5E  C17E  F063         	movff	_config+3,___xxtofl@val+3
  5747  00EE62  0E00               	movlw	0
  5748  00EE64  ECF6  F074         	call	___xxtofl
  5749  00EE68  C060  F072         	movff	?___xxtofl,___fldiv@a
  5750  00EE6C  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
  5751  00EE70  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
  5752  00EE74  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
  5753  00EE78  EC76  F067         	call	___fldiv	;wreg free
  5754  00EE7C  C06E  F1D1         	movff	?___fldiv,main@tmp
  5755  00EE80  C06F  F1D2         	movff	?___fldiv+1,main@tmp+1
  5756  00EE84  C070  F1D3         	movff	?___fldiv+2,main@tmp+2
  5757  00EE88  C071  F1D4         	movff	?___fldiv+3,main@tmp+3
  5758                           
  5759                           ;main.c: 93: os.current_position_in_degrees = (uint16_t) tmp;
  5760  00EE8C  C1D1  F060         	movff	main@tmp,___fltol@f1
  5761  00EE90  C1D2  F061         	movff	main@tmp+1,___fltol@f1+1
  5762  00EE94  C1D3  F062         	movff	main@tmp+2,___fltol@f1+2
  5763  00EE98  C1D4  F063         	movff	main@tmp+3,___fltol@f1+3
  5764  00EE9C  EC73  F080         	call	___fltol	;wreg free
  5765  00EEA0  C060  F0DE         	movff	?___fltol,_os+11	;volatile
  5766  00EEA4  C061  F0DF         	movff	?___fltol+1,_os+12	;volatile
  5767                           
  5768                           ;main.c: 94: if(os.current_position_in_degrees==36000)
  5769  00EEA8  0EA0               	movlw	160
  5770  00EEAA  0100               	movlb	0	; () banked
  5771  00EEAC  19DE               	xorwf	(_os+11)& (0+255),w,b	;volatile
  5772  00EEAE  E108               	bnz	l21852
  5773  00EEB0  0E8C               	movlw	140
  5774  00EEB2  19DF               	xorwf	(_os+12)& (0+255),w,b	;volatile
  5775  00EEB4  A4D8               	btfss	status,2,c
  5776  00EEB6  D004               	goto	l861
  5777                           
  5778                           ; BSR set to: 0
  5779                           ;main.c: 95: {;main.c: 97: os.current_position_in_degrees = 0;
  5780  00EEB8  0E00               	movlw	0
  5781  00EEBA  6FDF               	movwf	(_os+12)& (0+255),b	;volatile
  5782  00EEBC  0E00               	movlw	0
  5783  00EEBE  6FDE               	movwf	(_os+11)& (0+255),b	;volatile
  5784  00EEC0                     l861:
  5785  00EEC0                     l21852:
  5786                           
  5787                           ; BSR set to: 0
  5788                           ;main.c: 101: display_prepare();
  5789  00EEC0  EC07  F058         	call	_display_prepare	;wreg free
  5790                           
  5791                           ;main.c: 102: break;
  5792  00EEC4  D014               	goto	l863
  5793  00EEC6                     
  5794                           ;main.c: 105: display_update();
  5795  00EEC6  ECEA  F091         	call	_display_update	;wreg free
  5796                           
  5797                           ;main.c: 115: }
  5798                           
  5799                           ;main.c: 114: break;
  5800                           
  5801                           ;main.c: 112: case 1:
  5802                           
  5803                           ;main.c: 110: break;
  5804                           
  5805                           ;main.c: 108: case 0:
  5806                           
  5807                           ;main.c: 106: break;
  5808  00EECA  D011               	goto	l863
  5809  00EECC                     l859:
  5810  00EECC  0100               	movlb	0	; () banked
  5811  00EECE  51D4               	movf	(_os+1)& (0+255),w,b	;volatile
  5812                           
  5813                           ; Switch size 1, requested type "space"
  5814                           ; Number of cases is 5, Range of values is 0 to 7
  5815                           ; switch strategies available:
  5816                           ; Name         Instructions Cycles
  5817                           ; simple_byte           16     9 (average)
  5818                           ;	Chosen strategy is simple_byte
  5819  00EED0  0A00               	xorlw	0	; case 0
  5820  00EED2  B4D8               	btfsc	status,2,c
  5821  00EED4  D00C               	goto	l863
  5822  00EED6  0A01               	xorlw	1	; case 1
  5823  00EED8  B4D8               	btfsc	status,2,c
  5824  00EEDA  D009               	goto	l863
  5825  00EEDC  0A04               	xorlw	4	; case 5
  5826  00EEDE  B4D8               	btfsc	status,2,c
  5827  00EEE0  D782               	goto	l860
  5828  00EEE2  0A03               	xorlw	3	; case 6
  5829  00EEE4  B4D8               	btfsc	status,2,c
  5830  00EEE6  D7EC               	goto	l861
  5831  00EEE8  0A01               	xorlw	1	; case 7
  5832  00EEEA  B4D8               	btfsc	status,2,c
  5833  00EEEC  D7EC               	goto	l864
  5834  00EEEE                     l863:
  5835                           
  5836                           ;main.c: 117: os.done = 1;
  5837                           
  5838                           ; BSR set to: 0
  5839  00EEEE  0E01               	movlw	1
  5840  00EEF0  0100               	movlb	0	; () banked
  5841  00EEF2  6FD5               	movwf	(_os+2)& (0+255),b	;volatile
  5842                           
  5843                           ; BSR set to: 0
  5844                           
  5845                           ; BSR set to: 0
  5846  00EEF4  D76A               	goto	l857
  5847  00EEF6                     __end_of_main:
  5848                           	opt stack 0
  5849                           tblptru	equ	0xFF8
  5850                           tblptrh	equ	0xFF7
  5851                           tblptrl	equ	0xFF6
  5852                           tablat	equ	0xFF5
  5853                           postinc0	equ	0xFEE
  5854                           wreg	equ	0xFE8
  5855                           postdec1	equ	0xFE5
  5856                           fsr1h	equ	0xFE2
  5857                           fsr1l	equ	0xFE1
  5858                           status	equ	0xFD8
  5859                           
  5860 ;; *************** function _system_init *****************
  5861 ;; Defined at:
  5862 ;;		line 191 in file "os.c"
  5863 ;; Parameters:    Size  Location     Type
  5864 ;;		None
  5865 ;; Auto vars:     Size  Location     Type
  5866 ;;		None
  5867 ;; Return value:  Size  Location     Type
  5868 ;;                  1    wreg      void 
  5869 ;; Registers used:
  5870 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5871 ;; Tracked objects:
  5872 ;;		On entry : 0/0
  5873 ;;		On exit  : 0/0
  5874 ;;		Unchanged: 0/0
  5875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5880 ;;Total ram usage:        0 bytes
  5881 ;; Hardware stack levels used:    1
  5882 ;; Hardware stack levels required when called:   17
  5883 ;; This function calls:
  5884 ;;		__backlight_init
  5885 ;;		__system_pin_setup
  5886 ;;		__system_timer0_init
  5887 ;;		_display_init
  5888 ;;		_display_update
  5889 ;;		_encoder_init
  5890 ;;		_fat_init
  5891 ;;		_flash_init
  5892 ;;		_i2c_init
  5893 ;;		_motor_init
  5894 ;; This function is called by:
  5895 ;;		_main
  5896 ;; This function uses a non-reentrant model
  5897 ;;
  5898                           
  5899                           	psect	text1
  5900  00FF16                     __ptext1:
  5901                           	opt stack 0
  5902  00FF16                     _system_init:
  5903                           	opt stack 13
  5904                           
  5905                           ;os.c: 194: _system_pin_setup();
  5906                           
  5907                           ; BSR set to: 0
  5908                           ;incstack = 0
  5909  00FF16  EC3B  F08C         	call	__system_pin_setup	;wreg free
  5910                           
  5911                           ;os.c: 197: flash_init();
  5912  00FF1A  EC47  F094         	call	_flash_init	;wreg free
  5913                           
  5914                           ;os.c: 200: fat_init();
  5915  00FF1E  EC37  F094         	call	_fat_init	;wreg free
  5916                           
  5917                           ;os.c: 203: encoder_init();
  5918  00FF22  EC88  F093         	call	_encoder_init	;wreg free
  5919                           
  5920                           ;os.c: 206: i2c_init();
  5921  00FF26  ECFE  F093         	call	_i2c_init	;wreg free
  5922                           
  5923                           ;os.c: 209: display_init();
  5924  00FF2A  EC3E  F092         	call	_display_init	;wreg free
  5925                           
  5926                           ;os.c: 210: display_update();
  5927  00FF2E  ECEA  F091         	call	_display_update	;wreg free
  5928                           
  5929                           ;os.c: 211: _backlight_init();
  5930  00FF32  EC70  F094         	call	__backlight_init	;wreg free
  5931                           
  5932                           ;os.c: 214: motor_init();
  5933  00FF36  ECF0  F093         	call	_motor_init	;wreg free
  5934                           
  5935                           ;os.c: 217: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  5936  00FF3A  0E01               	movlw	1
  5937  00FF3C  0100               	movlb	0	; () banked
  5938  00FF3E  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
  5939                           
  5940                           ; BSR set to: 0
  5941                           ;os.c: 218: os.busy = 0;
  5942  00FF40  0E00               	movlw	0
  5943  00FF42  6FE1               	movwf	(_os+14)& (0+255),b	;volatile
  5944                           
  5945                           ; BSR set to: 0
  5946                           ;os.c: 219: os.current_position_in_steps = 0;
  5947  00FF44  0E00               	movlw	0
  5948  00FF46  6FDA               	movwf	(_os+7)& (0+255),b	;volatile
  5949  00FF48  0E00               	movlw	0
  5950  00FF4A  6FDB               	movwf	(_os+8)& (0+255),b	;volatile
  5951  00FF4C  0E00               	movlw	0
  5952  00FF4E  6FDC               	movwf	(_os+9)& (0+255),b	;volatile
  5953  00FF50  0E00               	movlw	0
  5954  00FF52  6FDD               	movwf	(_os+10)& (0+255),b	;volatile
  5955                           
  5956                           ; BSR set to: 0
  5957                           ;os.c: 220: os.last_approach_direction = MOTOR_DIRECTION_CW;
  5958  00FF54  0E01               	movlw	1
  5959  00FF56  6FE2               	movwf	(_os+15)& (0+255),b	;volatile
  5960                           
  5961                           ; BSR set to: 0
  5962                           ;os.c: 221: os.setup_step_size = 1000;
  5963  00FF58  0E03               	movlw	3
  5964  00FF5A  6FE4               	movwf	(_os+17)& (0+255),b	;volatile
  5965  00FF5C  0EE8               	movlw	232
  5966  00FF5E  6FE3               	movwf	(_os+16)& (0+255),b	;volatile
  5967                           
  5968                           ; BSR set to: 0
  5969                           ;os.c: 222: os.approach_direction = MOTOR_DIRECTION_CW;
  5970  00FF60  0E01               	movlw	1
  5971  00FF62  6FE5               	movwf	(_os+18)& (0+255),b	;volatile
  5972                           
  5973                           ; BSR set to: 0
  5974                           ;os.c: 223: os.division = 36;
  5975  00FF64  0E00               	movlw	0
  5976  00FF66  6FE7               	movwf	(_os+20)& (0+255),b	;volatile
  5977  00FF68  0E24               	movlw	36
  5978  00FF6A  6FE6               	movwf	(_os+19)& (0+255),b	;volatile
  5979                           
  5980                           ; BSR set to: 0
  5981                           ;os.c: 224: os.divide_step_size = 10;
  5982  00FF6C  0E0A               	movlw	10
  5983  00FF6E  6FE8               	movwf	(_os+21)& (0+255),b	;volatile
  5984                           
  5985                           ; BSR set to: 0
  5986                           ;os.c: 225: os.divide_position = 0;
  5987  00FF70  0E00               	movlw	0
  5988  00FF72  6FEA               	movwf	(_os+23)& (0+255),b	;volatile
  5989  00FF74  0E00               	movlw	0
  5990  00FF76  6FE9               	movwf	(_os+22)& (0+255),b	;volatile
  5991                           
  5992                           ; BSR set to: 0
  5993                           ;os.c: 226: os.divide_jump_size = 1;
  5994  00FF78  0E00               	movlw	0
  5995  00FF7A  6FEC               	movwf	(_os+25)& (0+255),b	;volatile
  5996  00FF7C  0E01               	movlw	1
  5997  00FF7E  6FEB               	movwf	(_os+24)& (0+255),b	;volatile
  5998                           
  5999                           ; BSR set to: 0
  6000                           ;os.c: 227: os.arc_step_size = 1000;
  6001  00FF80  0E03               	movlw	3
  6002  00FF82  6FEE               	movwf	(_os+27)& (0+255),b	;volatile
  6003  00FF84  0EE8               	movlw	232
  6004  00FF86  6FED               	movwf	(_os+26)& (0+255),b	;volatile
  6005                           
  6006                           ; BSR set to: 0
  6007                           ;os.c: 228: os.arc_size = 1000;
  6008  00FF88  0EE8               	movlw	232
  6009  00FF8A  6FEF               	movwf	(_os+28)& (0+255),b	;volatile
  6010  00FF8C  0E03               	movlw	3
  6011  00FF8E  6FF0               	movwf	(_os+29)& (0+255),b	;volatile
  6012  00FF90  0E00               	movlw	0
  6013  00FF92  6FF1               	movwf	(_os+30)& (0+255),b	;volatile
  6014  00FF94  0E00               	movlw	0
  6015  00FF96  6FF2               	movwf	(_os+31)& (0+255),b	;volatile
  6016                           
  6017                           ; BSR set to: 0
  6018                           ;os.c: 229: os.arc_speed = 30;
  6019  00FF98  0E00               	movlw	0
  6020  00FF9A  6FF4               	movwf	(_os+33)& (0+255),b	;volatile
  6021  00FF9C  0E1E               	movlw	30
  6022  00FF9E  6FF3               	movwf	(_os+32)& (0+255),b	;volatile
  6023                           
  6024                           ; BSR set to: 0
  6025                           ;os.c: 230: os.arc_direction = MOTOR_DIRECTION_CW;
  6026  00FFA0  0E01               	movlw	1
  6027  00FFA2  6FF5               	movwf	(_os+34)& (0+255),b	;volatile
  6028                           
  6029                           ; BSR set to: 0
  6030                           ;os.c: 231: os.manual_speed = 30;
  6031  00FFA4  0E00               	movlw	0
  6032  00FFA6  6FF7               	movwf	(_os+36)& (0+255),b	;volatile
  6033  00FFA8  0E1E               	movlw	30
  6034  00FFAA  6FF6               	movwf	(_os+35)& (0+255),b	;volatile
  6035                           
  6036                           ; BSR set to: 0
  6037                           ;os.c: 232: os.manual_direction = MOTOR_DIRECTION_CW;
  6038  00FFAC  0E01               	movlw	1
  6039  00FFAE  6FF8               	movwf	(_os+37)& (0+255),b	;volatile
  6040                           
  6041                           ; BSR set to: 0
  6042                           ;os.c: 233: os.beep_count = 0;
  6043  00FFB0  0E00               	movlw	0
  6044  00FFB2  6FF9               	movwf	(_os+38)& (0+255),b	;volatile
  6045                           
  6046                           ; BSR set to: 0
  6047                           ;os.c: 235: config.full_circle_in_steps = 576000;
  6048  00FFB4  0E00               	movlw	0
  6049  00FFB6  0101               	movlb	1	; () banked
  6050  00FFB8  6F7B               	movwf	_config& (0+255),b
  6051  00FFBA  0ECA               	movlw	202
  6052  00FFBC  6F7C               	movwf	(_config+1)& (0+255),b
  6053  00FFBE  0E08               	movlw	8
  6054  00FFC0  6F7D               	movwf	(_config+2)& (0+255),b
  6055  00FFC2  0E00               	movlw	0
  6056  00FFC4  6F7E               	movwf	(_config+3)& (0+255),b
  6057                           
  6058                           ; BSR set to: 1
  6059                           ;os.c: 236: config.inverse_direction = 1;
  6060  00FFC6  0E01               	movlw	1
  6061  00FFC8  6F7F               	movwf	(_config+4)& (0+255),b
  6062                           
  6063                           ; BSR set to: 1
  6064                           ;os.c: 237: config.overshoot_in_steps = 6400;
  6065  00FFCA  0E19               	movlw	25
  6066  00FFCC  6F81               	movwf	(_config+6)& (0+255),b
  6067  00FFCE  0E00               	movlw	0
  6068  00FFD0  6F80               	movwf	(_config+5)& (0+255),b
  6069                           
  6070                           ; BSR set to: 1
  6071                           ;os.c: 238: config.overshoot_cost_in_steps = 3000;
  6072  00FFD2  0E0B               	movlw	11
  6073  00FFD4  6F83               	movwf	(_config+8)& (0+255),b
  6074  00FFD6  0EB8               	movlw	184
  6075  00FFD8  6F82               	movwf	(_config+7)& (0+255),b
  6076                           
  6077                           ; BSR set to: 1
  6078                           ;os.c: 239: config.minimum_speed = 1;
  6079  00FFDA  0E00               	movlw	0
  6080  00FFDC  6F85               	movwf	(_config+10)& (0+255),b
  6081  00FFDE  0E01               	movlw	1
  6082  00FFE0  6F84               	movwf	(_config+9)& (0+255),b
  6083                           
  6084                           ; BSR set to: 1
  6085                           ;os.c: 240: config.maximum_speed = 380;
  6086  00FFE2  0E01               	movlw	1
  6087  00FFE4  6F87               	movwf	(_config+12)& (0+255),b
  6088  00FFE6  0E7C               	movlw	124
  6089  00FFE8  6F86               	movwf	(_config+11)& (0+255),b
  6090                           
  6091                           ; BSR set to: 1
  6092                           ;os.c: 241: config.maximum_speed_arc = 305;
  6093  00FFEA  0E01               	movlw	1
  6094  00FFEC  6F8B               	movwf	(_config+16)& (0+255),b
  6095  00FFEE  0E31               	movlw	49
  6096  00FFF0  6F8A               	movwf	(_config+15)& (0+255),b
  6097                           
  6098                           ; BSR set to: 1
  6099                           ;os.c: 242: config.maximum_speed_manual = 305;
  6100  00FFF2  0E01               	movlw	1
  6101  00FFF4  6F8F               	movwf	(_config+20)& (0+255),b
  6102  00FFF6  0E31               	movlw	49
  6103  00FFF8  6F8E               	movwf	(_config+19)& (0+255),b
  6104                           
  6105                           ; BSR set to: 1
  6106                           ;os.c: 243: config.beep_duration = 10;
  6107  00FFFA  0E0A               	movlw	10
  6108  00FFFC  6F90               	movwf	(_config+21)& (0+255),b
  6109                           
  6110                           ; BSR set to: 1
  6111                           ;os.c: 246: _system_timer0_init();
  6112  00FFFE  EC1E  F093         	call	__system_timer0_init	;wreg free
  6113  010002  0012               	return		;funcret
  6114  010004                     __end_of_system_init:
  6115                           	opt stack 0
  6116                           tblptru	equ	0xFF8
  6117                           tblptrh	equ	0xFF7
  6118                           tblptrl	equ	0xFF6
  6119                           tablat	equ	0xFF5
  6120                           postinc0	equ	0xFEE
  6121                           wreg	equ	0xFE8
  6122                           postdec1	equ	0xFE5
  6123                           fsr1h	equ	0xFE2
  6124                           fsr1l	equ	0xFE1
  6125                           status	equ	0xFD8
  6126                           
  6127 ;; *************** function _motor_init *****************
  6128 ;; Defined at:
  6129 ;;		line 141 in file "motor.c"
  6130 ;; Parameters:    Size  Location     Type
  6131 ;;		None
  6132 ;; Auto vars:     Size  Location     Type
  6133 ;;		None
  6134 ;; Return value:  Size  Location     Type
  6135 ;;                  1    wreg      void 
  6136 ;; Registers used:
  6137 ;;		wreg, status,2
  6138 ;; Tracked objects:
  6139 ;;		On entry : 0/0
  6140 ;;		On exit  : 0/0
  6141 ;;		Unchanged: 0/0
  6142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6147 ;;Total ram usage:        0 bytes
  6148 ;; Hardware stack levels used:    1
  6149 ;; Hardware stack levels required when called:   10
  6150 ;; This function calls:
  6151 ;;		Nothing
  6152 ;; This function is called by:
  6153 ;;		_system_init
  6154 ;; This function uses a non-reentrant model
  6155 ;;
  6156                           
  6157                           	psect	text2
  6158  0127E0                     __ptext2:
  6159                           	opt stack 0
  6160  0127E0                     _motor_init:
  6161                           	opt stack 19
  6162                           
  6163                           ;motor.c: 144: motor_cue_read_index = 0;
  6164                           
  6165                           ;incstack = 0
  6166  0127E0  0E00               	movlw	0
  6167  0127E2  6E23               	movwf	_motor_cue_read_index,c
  6168                           
  6169                           ;motor.c: 145: motor_cue_write_index = 0;
  6170  0127E4  0E00               	movlw	0
  6171  0127E6  6E22               	movwf	_motor_cue_write_index,c
  6172                           
  6173                           ;motor.c: 151: CCPTMRS0bits.C2TSEL = 0b000;
  6174  0127E8  010F               	movlb	15	; () banked
  6175  0127EA  9752               	bcf	82,3,b	;volatile
  6176  0127EC  9952               	bcf	82,4,b	;volatile
  6177  0127EE  9B52               	bcf	82,5,b	;volatile
  6178                           
  6179                           ;motor.c: 156: CCP1CONbits.P1M = 0b00;
  6180  0127F0  0E3F               	movlw	-193
  6181  0127F2  16BA               	andwf	4026,f,c	;volatile
  6182                           
  6183                           ;motor.c: 159: CCP1CONbits.DC1B = 0b00;
  6184  0127F4  0ECF               	movlw	-49
  6185  0127F6  16BA               	andwf	4026,f,c	;volatile
  6186                           
  6187                           ; BSR set to: 15
  6188                           ;motor.c: 162: LATBbits.LB0 = 0;
  6189  0127F8  908A               	bcf	3978,0,c	;volatile
  6190                           
  6191                           ; BSR set to: 15
  6192  0127FA  0012               	return		;funcret
  6193  0127FC                     __end_of_motor_init:
  6194                           	opt stack 0
  6195                           tblptru	equ	0xFF8
  6196                           tblptrh	equ	0xFF7
  6197                           tblptrl	equ	0xFF6
  6198                           tablat	equ	0xFF5
  6199                           postinc0	equ	0xFEE
  6200                           wreg	equ	0xFE8
  6201                           postdec1	equ	0xFE5
  6202                           fsr1h	equ	0xFE2
  6203                           fsr1l	equ	0xFE1
  6204                           status	equ	0xFD8
  6205                           
  6206 ;; *************** function _i2c_init *****************
  6207 ;; Defined at:
  6208 ;;		line 24 in file "i2c.c"
  6209 ;; Parameters:    Size  Location     Type
  6210 ;;		None
  6211 ;; Auto vars:     Size  Location     Type
  6212 ;;		None
  6213 ;; Return value:  Size  Location     Type
  6214 ;;                  1    wreg      void 
  6215 ;; Registers used:
  6216 ;;		wreg, status,2
  6217 ;; Tracked objects:
  6218 ;;		On entry : 0/0
  6219 ;;		On exit  : 0/0
  6220 ;;		Unchanged: 0/0
  6221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6226 ;;Total ram usage:        0 bytes
  6227 ;; Hardware stack levels used:    1
  6228 ;; Hardware stack levels required when called:   10
  6229 ;; This function calls:
  6230 ;;		Nothing
  6231 ;; This function is called by:
  6232 ;;		_system_init
  6233 ;; This function uses a non-reentrant model
  6234 ;;
  6235                           
  6236                           	psect	text3
  6237  0127FC                     __ptext3:
  6238                           	opt stack 0
  6239  0127FC                     _i2c_init:
  6240                           	opt stack 19
  6241                           
  6242                           ;i2c.c: 26: TRISBbits.TRISB5 = 1;
  6243                           
  6244                           ; BSR set to: 15
  6245                           ;incstack = 0
  6246  0127FC  8A93               	bsf	3987,5,c	;volatile
  6247                           
  6248                           ;i2c.c: 27: TRISBbits.TRISB4 = 1;
  6249  0127FE  8893               	bsf	3987,4,c	;volatile
  6250                           
  6251                           ;i2c.c: 28: SSP1STATbits.SMP = 0;
  6252  012800  9EC7               	bcf	4039,7,c	;volatile
  6253                           
  6254                           ;i2c.c: 29: SSP1STATbits.CKE = 0;
  6255  012802  9CC7               	bcf	4039,6,c	;volatile
  6256                           
  6257                           ;i2c.c: 31: SSP1ADD = 119;
  6258  012804  0E77               	movlw	119
  6259  012806  6EC8               	movwf	4040,c	;volatile
  6260                           
  6261                           ;i2c.c: 33: SSP1CON1bits.WCOL = 0;
  6262  012808  9EC6               	bcf	4038,7,c	;volatile
  6263                           
  6264                           ;i2c.c: 34: SSP1CON1bits.SSPOV = 0;
  6265  01280A  9CC6               	bcf	4038,6,c	;volatile
  6266                           
  6267                           ;i2c.c: 35: SSP1CON1bits.SSPM = 0b1000;
  6268  01280C  50C6               	movf	4038,w,c	;volatile
  6269  01280E  0BF0               	andlw	-16
  6270  012810  0908               	iorlw	8
  6271  012812  6EC6               	movwf	4038,c	;volatile
  6272                           
  6273                           ;i2c.c: 36: SSP1CON1bits.SSPEN = 1;
  6274  012814  8AC6               	bsf	4038,5,c	;volatile
  6275  012816  0012               	return		;funcret
  6276  012818                     __end_of_i2c_init:
  6277                           	opt stack 0
  6278                           tblptru	equ	0xFF8
  6279                           tblptrh	equ	0xFF7
  6280                           tblptrl	equ	0xFF6
  6281                           tablat	equ	0xFF5
  6282                           postinc0	equ	0xFEE
  6283                           wreg	equ	0xFE8
  6284                           postdec1	equ	0xFE5
  6285                           fsr1h	equ	0xFE2
  6286                           fsr1l	equ	0xFE1
  6287                           status	equ	0xFD8
  6288                           
  6289 ;; *************** function _flash_init *****************
  6290 ;; Defined at:
  6291 ;;		line 361 in file "flash.c"
  6292 ;; Parameters:    Size  Location     Type
  6293 ;;		None
  6294 ;; Auto vars:     Size  Location     Type
  6295 ;;		None
  6296 ;; Return value:  Size  Location     Type
  6297 ;;                  1    wreg      void 
  6298 ;; Registers used:
  6299 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6300 ;; Tracked objects:
  6301 ;;		On entry : 0/0
  6302 ;;		On exit  : 0/0
  6303 ;;		Unchanged: 0/0
  6304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6309 ;;Total ram usage:        0 bytes
  6310 ;; Hardware stack levels used:    1
  6311 ;; Hardware stack levels required when called:   14
  6312 ;; This function calls:
  6313 ;;		__flash_set_page_size
  6314 ;;		_spi_init
  6315 ;; This function is called by:
  6316 ;;		_system_init
  6317 ;; This function uses a non-reentrant model
  6318 ;;
  6319                           
  6320                           	psect	text4
  6321  01288E                     __ptext4:
  6322                           	opt stack 0
  6323  01288E                     _flash_init:
  6324                           	opt stack 15
  6325                           
  6326                           ;flash.c: 364: spi_init(SPI_CONFIGURATION_INTERNAL);
  6327                           
  6328                           ;incstack = 0
  6329  01288E  0E00               	movlw	0
  6330  012890  EC35  F091         	call	_spi_init
  6331                           
  6332                           ;flash.c: 367: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  6333  012894  0E00               	movlw	0
  6334  012896  EC04  F08C         	call	__flash_set_page_size
  6335  01289A  0012               	return		;funcret
  6336  01289C                     __end_of_flash_init:
  6337                           	opt stack 0
  6338                           tblptru	equ	0xFF8
  6339                           tblptrh	equ	0xFF7
  6340                           tblptrl	equ	0xFF6
  6341                           tablat	equ	0xFF5
  6342                           postinc0	equ	0xFEE
  6343                           wreg	equ	0xFE8
  6344                           postdec1	equ	0xFE5
  6345                           fsr1h	equ	0xFE2
  6346                           fsr1l	equ	0xFE1
  6347                           status	equ	0xFD8
  6348                           
  6349 ;; *************** function _spi_init *****************
  6350 ;; Defined at:
  6351 ;;		line 89 in file "spi.c"
  6352 ;; Parameters:    Size  Location     Type
  6353 ;;  configuratio    1    wreg     enum E6795
  6354 ;; Auto vars:     Size  Location     Type
  6355 ;;  configuratio    1    3[BANK0 ] enum E6795
  6356 ;; Return value:  Size  Location     Type
  6357 ;;                  1    wreg      void 
  6358 ;; Registers used:
  6359 ;;		wreg, status,2, status,0, cstack
  6360 ;; Tracked objects:
  6361 ;;		On entry : 0/0
  6362 ;;		On exit  : 0/0
  6363 ;;		Unchanged: 0/0
  6364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6366 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6368 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6369 ;;Total ram usage:        1 bytes
  6370 ;; Hardware stack levels used:    1
  6371 ;; Hardware stack levels required when called:   11
  6372 ;; This function calls:
  6373 ;;		__spi_init
  6374 ;; This function is called by:
  6375 ;;		_flash_init
  6376 ;; This function uses a non-reentrant model
  6377 ;;
  6378                           
  6379                           	psect	text5
  6380  01226A                     __ptext5:
  6381                           	opt stack 0
  6382  01226A                     _spi_init:
  6383                           	opt stack 17
  6384                           
  6385                           ;incstack = 0
  6386                           ;spi_init@configuration stored from wreg
  6387  01226A  0100               	movlb	0	; () banked
  6388  01226C  6F63               	movwf	spi_init@configuration& (0+255),b
  6389                           
  6390                           ;spi.c: 91: switch(configuration)
  6391  01226E  D012               	goto	l2107
  6392  012270                     
  6393                           ;spi.c: 94: _spi_init(config_internal);
  6394  012270  C152  F060         	movff	_config_internal,__spi_init@details
  6395  012274  C153  F061         	movff	_config_internal+1,__spi_init@details+1
  6396  012278  C154  F062         	movff	_config_internal+2,__spi_init@details+2
  6397  01227C  ECCE  F091         	call	__spi_init	;wreg free
  6398                           
  6399                           ;spi.c: 95: break;
  6400  012280  D011               	goto	l2109
  6401  012282                     
  6402                           ;spi.c: 98: _spi_init(config_external);
  6403  012282  C14F  F060         	movff	_config_external,__spi_init@details
  6404  012286  C150  F061         	movff	_config_external+1,__spi_init@details+1
  6405  01228A  C151  F062         	movff	_config_external+2,__spi_init@details+2
  6406  01228E  ECCE  F091         	call	__spi_init	;wreg free
  6407                           
  6408                           ;spi.c: 100: }
  6409                           
  6410                           ;spi.c: 99: break;
  6411  012292  D008               	goto	l2109
  6412  012294                     l2107:
  6413  012294  0100               	movlb	0	; () banked
  6414  012296  5163               	movf	spi_init@configuration& (0+255),w,b
  6415                           
  6416                           ; Switch size 1, requested type "space"
  6417                           ; Number of cases is 2, Range of values is 0 to 1
  6418                           ; switch strategies available:
  6419                           ; Name         Instructions Cycles
  6420                           ; simple_byte            7     4 (average)
  6421                           ;	Chosen strategy is simple_byte
  6422  012298  0A00               	xorlw	0	; case 0
  6423  01229A  B4D8               	btfsc	status,2,c
  6424  01229C  D7E9               	goto	l2108
  6425  01229E  0A01               	xorlw	1	; case 1
  6426  0122A0  B4D8               	btfsc	status,2,c
  6427  0122A2  D7EF               	goto	l2110
  6428  0122A4                     l2109:
  6429                           
  6430                           ;spi.c: 102: active_configuration = configuration;
  6431  0122A4  C063  F16B         	movff	spi_init@configuration,_active_configuration
  6432  0122A8  0012               	return		;funcret
  6433  0122AA                     __end_of_spi_init:
  6434                           	opt stack 0
  6435                           tblptru	equ	0xFF8
  6436                           tblptrh	equ	0xFF7
  6437                           tblptrl	equ	0xFF6
  6438                           tablat	equ	0xFF5
  6439                           postinc0	equ	0xFEE
  6440                           wreg	equ	0xFE8
  6441                           postdec1	equ	0xFE5
  6442                           fsr1h	equ	0xFE2
  6443                           fsr1l	equ	0xFE1
  6444                           status	equ	0xFD8
  6445                           
  6446 ;; *************** function __spi_init *****************
  6447 ;; Defined at:
  6448 ;;		line 24 in file "spi.c"
  6449 ;; Parameters:    Size  Location     Type
  6450 ;;  details         3    0[BANK0 ] struct .
  6451 ;; Auto vars:     Size  Location     Type
  6452 ;;		None
  6453 ;; Return value:  Size  Location     Type
  6454 ;;                  1    wreg      void 
  6455 ;; Registers used:
  6456 ;;		wreg, status,2
  6457 ;; Tracked objects:
  6458 ;;		On entry : 0/0
  6459 ;;		On exit  : 0/0
  6460 ;;		Unchanged: 0/0
  6461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6462 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6465 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6466 ;;Total ram usage:        3 bytes
  6467 ;; Hardware stack levels used:    1
  6468 ;; Hardware stack levels required when called:   10
  6469 ;; This function calls:
  6470 ;;		Nothing
  6471 ;; This function is called by:
  6472 ;;		_spi_init
  6473 ;; This function uses a non-reentrant model
  6474 ;;
  6475                           
  6476                           	psect	text6
  6477  01239C                     __ptext6:
  6478                           	opt stack 0
  6479  01239C                     __spi_init:
  6480                           	opt stack 17
  6481                           
  6482                           ;spi.c: 30: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  6483                           
  6484                           ;incstack = 0
  6485  01239C  0E55               	movlw	85
  6486  01239E  6EA7               	movwf	4007,c	;volsfr
  6487  0123A0  0EAA               	movlw	170
  6488  0123A2  6EA7               	movwf	4007,c	;volsfr
  6489  0123A4  010E               	movlb	14	; () banked
  6490  0123A6  91BF               	bcf	191,0,b	;volatile
  6491                           
  6492                           ;spi.c: 31: RPINR21 = 22;
  6493  0123A8  0E16               	movlw	22
  6494  0123AA  6FFC               	movwf	252,b	;volatile
  6495                           
  6496                           ;spi.c: 32: RPOR21 = 10;
  6497  0123AC  0E0A               	movlw	10
  6498  0123AE  6FD5               	movwf	213,b	;volatile
  6499                           
  6500                           ;spi.c: 34: RPOR23 = 11;
  6501  0123B0  0E0B               	movlw	11
  6502  0123B2  6FD7               	movwf	215,b	;volatile
  6503                           
  6504                           ;spi.c: 35: RPINR22 = 23;
  6505  0123B4  0E17               	movlw	23
  6506  0123B6  6FFD               	movwf	253,b	;volatile
  6507                           
  6508                           ;spi.c: 36: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  6509  0123B8  0E55               	movlw	85
  6510  0123BA  6EA7               	movwf	4007,c	;volsfr
  6511  0123BC  0EAA               	movlw	170
  6512  0123BE  6EA7               	movwf	4007,c	;volsfr
  6513                           
  6514                           ; BSR set to: 14
  6515  0123C0  81BF               	bsf	191,0,b	;volatile
  6516                           
  6517                           ; BSR set to: 14
  6518                           ;spi.c: 39: SSP2STATbits.SMP = 1;
  6519  0123C2  8E73               	bsf	3955,7,c	;volatile
  6520                           
  6521                           ; BSR set to: 14
  6522                           ;spi.c: 40: SSP2STATbits.CKE = 1;
  6523  0123C4  8C73               	bsf	3955,6,c	;volatile
  6524                           
  6525                           ; BSR set to: 14
  6526                           ;spi.c: 41: SSP2CON1bits.CKP = 0;
  6527  0123C6  9872               	bcf	3954,4,c	;volatile
  6528                           
  6529                           ; BSR set to: 14
  6530                           ;spi.c: 42: SSP2CON1bits.SSPM =0b0000;
  6531  0123C8  9072               	bcf	3954,0,c	;volatile
  6532  0123CA  9272               	bcf	3954,1,c	;volatile
  6533  0123CC  9472               	bcf	3954,2,c	;volatile
  6534  0123CE  9672               	bcf	3954,3,c	;volatile
  6535                           
  6536                           ; BSR set to: 14
  6537                           ;spi.c: 43: SSP2CON1bits.SSPEN = 1;
  6538  0123D0  8A72               	bsf	3954,5,c	;volatile
  6539                           
  6540                           ; BSR set to: 14
  6541  0123D2  0012               	return		;funcret
  6542  0123D4                     __end_of__spi_init:
  6543                           	opt stack 0
  6544                           tblptru	equ	0xFF8
  6545                           tblptrh	equ	0xFF7
  6546                           tblptrl	equ	0xFF6
  6547                           tablat	equ	0xFF5
  6548                           postinc0	equ	0xFEE
  6549                           wreg	equ	0xFE8
  6550                           postdec1	equ	0xFE5
  6551                           fsr1h	equ	0xFE2
  6552                           fsr1l	equ	0xFE1
  6553                           status	equ	0xFD8
  6554                           
  6555 ;; *************** function __flash_set_page_size *****************
  6556 ;; Defined at:
  6557 ;;		line 99 in file "flash.c"
  6558 ;; Parameters:    Size  Location     Type
  6559 ;;  size            1    wreg     enum E6963
  6560 ;; Auto vars:     Size  Location     Type
  6561 ;;  size            1   23[BANK0 ] enum E6963
  6562 ;;  command         4   19[BANK0 ] unsigned char [4]
  6563 ;; Return value:  Size  Location     Type
  6564 ;;                  1    wreg      void 
  6565 ;; Registers used:
  6566 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6567 ;; Tracked objects:
  6568 ;;		On entry : 0/0
  6569 ;;		On exit  : 0/0
  6570 ;;		Unchanged: 0/0
  6571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6573 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6575 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6576 ;;Total ram usage:        5 bytes
  6577 ;; Hardware stack levels used:    1
  6578 ;; Hardware stack levels required when called:   13
  6579 ;; This function calls:
  6580 ;;		__flash_is_busy
  6581 ;;		_memcpy
  6582 ;;		_spi_tx
  6583 ;; This function is called by:
  6584 ;;		_flash_init
  6585 ;; This function uses a non-reentrant model
  6586 ;;
  6587                           
  6588                           	psect	text7
  6589  011808                     __ptext7:
  6590                           	opt stack 0
  6591  011808                     __flash_set_page_size:
  6592                           	opt stack 15
  6593                           
  6594                           ; BSR set to: 14
  6595                           ;incstack = 0
  6596                           ;__flash_set_page_size@size stored from wreg
  6597  011808  0100               	movlb	0	; () banked
  6598  01180A  6F77               	movwf	__flash_set_page_size@size& (0+255),b
  6599  01180C                     
  6600                           ;flash.c: 101: uint8_t command[4];;flash.c: 104: while(_flash_is_busy());
  6601  01180C  ECAC  F093         	call	__flash_is_busy	;wreg free
  6602  011810  0900               	iorlw	0
  6603  011812  A4D8               	btfss	status,2,c
  6604  011814  D7FB               	goto	l19294
  6605                           
  6606                           ;flash.c: 107: if(size==FLASH_PAGE_SIZE_512)
  6607  011816  0100               	movlb	0	; () banked
  6608  011818  5177               	movf	__flash_set_page_size@size& (0+255),w,b
  6609  01181A  A4D8               	btfss	status,2,c
  6610  01181C  D00E               	goto	l1468
  6611                           
  6612                           ; BSR set to: 0
  6613                           ;flash.c: 108: memcpy(command, flash_command_pagesize_512, 4);
  6614  01181E  0E73               	movlw	low __flash_set_page_size@command
  6615  011820  6F60               	movwf	memcpy@d1& (0+255),b
  6616  011822  0E00               	movlw	high __flash_set_page_size@command
  6617  011824  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  6618  011826  0EE9               	movlw	low _flash_command_pagesize_512
  6619  011828  6F62               	movwf	memcpy@s1& (0+255),b
  6620  01182A  0EA1               	movlw	high _flash_command_pagesize_512
  6621  01182C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  6622  01182E  0E00               	movlw	0
  6623  011830  6F65               	movwf	(memcpy@n+1)& (0+255),b
  6624  011832  0E04               	movlw	4
  6625  011834  6F64               	movwf	memcpy@n& (0+255),b
  6626  011836  EC35  F08D         	call	_memcpy	;wreg free
  6627  01183A                     l1468:
  6628                           
  6629                           ;flash.c: 109: if(size==FLASH_PAGE_SIZE_528)
  6630  01183A  0100               	movlb	0	; () banked
  6631  01183C  0577               	decf	__flash_set_page_size@size& (0+255),w,b
  6632  01183E  A4D8               	btfss	status,2,c
  6633  011840  D00E               	goto	l1469
  6634                           
  6635                           ; BSR set to: 0
  6636                           ;flash.c: 110: memcpy(command, flash_command_pagesize_528, 4);
  6637  011842  0E73               	movlw	low __flash_set_page_size@command
  6638  011844  6F60               	movwf	memcpy@d1& (0+255),b
  6639  011846  0E00               	movlw	high __flash_set_page_size@command
  6640  011848  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  6641  01184A  0EE5               	movlw	low _flash_command_pagesize_528
  6642  01184C  6F62               	movwf	memcpy@s1& (0+255),b
  6643  01184E  0EA1               	movlw	high _flash_command_pagesize_528
  6644  011850  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  6645  011852  0E00               	movlw	0
  6646  011854  6F65               	movwf	(memcpy@n+1)& (0+255),b
  6647  011856  0E04               	movlw	4
  6648  011858  6F64               	movwf	memcpy@n& (0+255),b
  6649  01185A  EC35  F08D         	call	_memcpy	;wreg free
  6650  01185E                     l1469:
  6651                           
  6652                           ;flash.c: 113: spi_tx(command, 4);
  6653  01185E  0E73               	movlw	low __flash_set_page_size@command
  6654  011860  0100               	movlb	0	; () banked
  6655  011862  6F60               	movwf	spi_tx@data& (0+255),b
  6656  011864  0E00               	movlw	high __flash_set_page_size@command
  6657  011866  6F61               	movwf	(spi_tx@data+1)& (0+255),b
  6658  011868  0E00               	movlw	0
  6659  01186A  6F63               	movwf	(spi_tx@length+1)& (0+255),b
  6660  01186C  0E04               	movlw	4
  6661  01186E  6F62               	movwf	spi_tx@length& (0+255),b
  6662  011870  EC1C  F08E         	call	_spi_tx	;wreg free
  6663  011874  0012               	return		;funcret
  6664  011876                     __end_of__flash_set_page_size:
  6665                           	opt stack 0
  6666                           tblptru	equ	0xFF8
  6667                           tblptrh	equ	0xFF7
  6668                           tblptrl	equ	0xFF6
  6669                           tablat	equ	0xFF5
  6670                           postinc0	equ	0xFEE
  6671                           wreg	equ	0xFE8
  6672                           postdec1	equ	0xFE5
  6673                           fsr1h	equ	0xFE2
  6674                           fsr1l	equ	0xFE1
  6675                           status	equ	0xFD8
  6676                           
  6677 ;; *************** function _fat_init *****************
  6678 ;; Defined at:
  6679 ;;		line 1382 in file "fat16.c"
  6680 ;; Parameters:    Size  Location     Type
  6681 ;;		None
  6682 ;; Auto vars:     Size  Location     Type
  6683 ;;		None
  6684 ;; Return value:  Size  Location     Type
  6685 ;;                  1    wreg      void 
  6686 ;; Registers used:
  6687 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6688 ;; Tracked objects:
  6689 ;;		On entry : 0/0
  6690 ;;		On exit  : 0/0
  6691 ;;		Unchanged: 0/0
  6692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6697 ;;Total ram usage:        0 bytes
  6698 ;; Hardware stack levels used:    1
  6699 ;; Hardware stack levels required when called:   16
  6700 ;; This function calls:
  6701 ;;		_fat_format
  6702 ;;		_fat_get_format_status
  6703 ;; This function is called by:
  6704 ;;		_system_init
  6705 ;; This function uses a non-reentrant model
  6706 ;;
  6707                           
  6708                           	psect	text8
  6709  01286E                     __ptext8:
  6710                           	opt stack 0
  6711  01286E                     _fat_init:
  6712                           	opt stack 13
  6713                           
  6714                           ;fat16.c: 1385: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  6715                           
  6716                           ;incstack = 0
  6717  01286E  EC04  F086         	call	_fat_get_format_status	;wreg free
  6718  012872  0900               	iorlw	0
  6719  012874  A4D8               	btfss	status,2,c
  6720  012876  0012               	return	
  6721                           
  6722                           ;fat16.c: 1386: {;fat16.c: 1387: fat_format();
  6723  012878  EC86  F06D         	call	_fat_format	;wreg free
  6724  01287C  0012               	return	
  6725  01287E                     __end_of_fat_init:
  6726                           	opt stack 0
  6727                           tblptru	equ	0xFF8
  6728                           tblptrh	equ	0xFF7
  6729                           tblptrl	equ	0xFF6
  6730                           tablat	equ	0xFF5
  6731                           postinc0	equ	0xFEE
  6732                           wreg	equ	0xFE8
  6733                           postdec1	equ	0xFE5
  6734                           fsr1h	equ	0xFE2
  6735                           fsr1l	equ	0xFE1
  6736                           status	equ	0xFD8
  6737                           
  6738 ;; *************** function _fat_get_format_status *****************
  6739 ;; Defined at:
  6740 ;;		line 1292 in file "fat16.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;		None
  6743 ;; Auto vars:     Size  Location     Type
  6744 ;;  cntr            2   45[BANK0 ] unsigned int 
  6745 ;; Return value:  Size  Location     Type
  6746 ;;                  1    wreg      enum E6937
  6747 ;; Registers used:
  6748 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6749 ;; Tracked objects:
  6750 ;;		On entry : 0/0
  6751 ;;		On exit  : 0/0
  6752 ;;		Unchanged: 0/0
  6753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6755 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6756 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6757 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6758 ;;Total ram usage:        4 bytes
  6759 ;; Hardware stack levels used:    1
  6760 ;; Hardware stack levels required when called:   15
  6761 ;; This function calls:
  6762 ;;		__get_fbr
  6763 ;;		__get_mbr
  6764 ;;		_flash_sector_read
  6765 ;; This function is called by:
  6766 ;;		_fat_init
  6767 ;; This function uses a non-reentrant model
  6768 ;;
  6769                           
  6770                           	psect	text9
  6771  010C08                     __ptext9:
  6772                           	opt stack 0
  6773  010C08                     _fat_get_format_status:
  6774                           	opt stack 13
  6775                           
  6776                           ;fat16.c: 1294: uint16_t cntr;;fat16.c: 1297: flash_sector_read(0, buffer);
  6777                           
  6778                           ;incstack = 0
  6779  010C08  0E00               	movlw	0
  6780  010C0A  0100               	movlb	0	; () banked
  6781  010C0C  6F88               	movwf	(flash_sector_read@page+1)& (0+255),b
  6782  010C0E  0E00               	movlw	0
  6783  010C10  6F87               	movwf	flash_sector_read@page& (0+255),b
  6784  010C12  0E00               	movlw	low _buffer
  6785  010C14  6F89               	movwf	flash_sector_read@data& (0+255),b
  6786  010C16  0E08               	movlw	high _buffer
  6787  010C18  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
  6788  010C1A  EC74  F093         	call	_flash_sector_read	;wreg free
  6789                           
  6790                           ;fat16.c: 1298: for(cntr=0; cntr<512; ++cntr)
  6791  010C1E  0E00               	movlw	0
  6792  010C20  0100               	movlb	0	; () banked
  6793  010C22  6F8E               	movwf	(fat_get_format_status@cntr+1)& (0+255),b
  6794  010C24  0E00               	movlw	0
  6795  010C26  6F8D               	movwf	fat_get_format_status@cntr& (0+255),b
  6796  010C28                     l19324:
  6797                           
  6798                           ; BSR set to: 0
  6799  010C28  0E02               	movlw	2
  6800  010C2A  5D8E               	subwf	(fat_get_format_status@cntr+1)& (0+255),w,b
  6801  010C2C  B0D8               	btfsc	status,0,c
  6802  010C2E  D017               	goto	u18880
  6803                           
  6804                           ; BSR set to: 0
  6805                           ;fat16.c: 1299: {;fat16.c: 1300: if(buffer[cntr] != _get_mbr(cntr))
  6806                           
  6807                           ; BSR set to: 0
  6808                           
  6809                           ; BSR set to: 0
  6810  010C30  0E00               	movlw	low _buffer
  6811  010C32  258D               	addwf	fat_get_format_status@cntr& (0+255),w,b
  6812  010C34  6ED9               	movwf	fsr2l,c
  6813  010C36  0E08               	movlw	high _buffer
  6814  010C38  218E               	addwfc	(fat_get_format_status@cntr+1)& (0+255),w,b
  6815  010C3A  6EDA               	movwf	fsr2h,c
  6816  010C3C  C08D  F060         	movff	fat_get_format_status@cntr,__get_mbr@idx
  6817  010C40  C08E  F061         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  6818  010C44  EC2B  F082         	call	__get_mbr	;wreg free
  6819  010C48  0100               	movlb	0	; () banked
  6820  010C4A  6F8C               	movwf	(??_fat_get_format_status+1)& (0+255),b
  6821  010C4C  50DE               	movf	postinc2,w,c
  6822  010C4E  198C               	xorwf	(??_fat_get_format_status+1)& (0+255),w,b
  6823  010C50  B4D8               	btfsc	status,2,c
  6824  010C52  D002               	goto	l1989
  6825                           
  6826                           ; BSR set to: 0
  6827                           ;fat16.c: 1301: {;fat16.c: 1302: return DRIVE_NOT_FORMATED;
  6828  010C54  0E00               	movlw	0
  6829                           
  6830                           ; BSR set to: 0
  6831  010C56  0012               	return	
  6832  010C58                     l1989:
  6833                           
  6834                           ; BSR set to: 0
  6835                           
  6836                           ; BSR set to: 0
  6837  010C58  4B8D               	infsnz	fat_get_format_status@cntr& (0+255),f,b
  6838  010C5A  2B8E               	incf	(fat_get_format_status@cntr+1)& (0+255),f,b
  6839  010C5C  D7E5               	goto	l19324
  6840  010C5E                     u18880:
  6841                           
  6842                           ; BSR set to: 0
  6843                           ;fat16.c: 1303: };fat16.c: 1304: };fat16.c: 1307: flash_sector_read(1, buffer);
  6844                           
  6845                           ; BSR set to: 0
  6846  010C5E  0E00               	movlw	0
  6847  010C60  6F88               	movwf	(flash_sector_read@page+1)& (0+255),b
  6848  010C62  0E01               	movlw	1
  6849  010C64  6F87               	movwf	flash_sector_read@page& (0+255),b
  6850  010C66  0E00               	movlw	low _buffer
  6851  010C68  6F89               	movwf	flash_sector_read@data& (0+255),b
  6852  010C6A  0E08               	movlw	high _buffer
  6853  010C6C  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
  6854  010C6E  EC74  F093         	call	_flash_sector_read	;wreg free
  6855                           
  6856                           ;fat16.c: 1308: for(cntr=0; cntr<512; ++cntr)
  6857  010C72  0E00               	movlw	0
  6858  010C74  0100               	movlb	0	; () banked
  6859  010C76  6F8E               	movwf	(fat_get_format_status@cntr+1)& (0+255),b
  6860  010C78  0E00               	movlw	0
  6861  010C7A  6F8D               	movwf	fat_get_format_status@cntr& (0+255),b
  6862  010C7C                     l19342:
  6863                           
  6864                           ; BSR set to: 0
  6865  010C7C  0E02               	movlw	2
  6866  010C7E  5D8E               	subwf	(fat_get_format_status@cntr+1)& (0+255),w,b
  6867  010C80  B0D8               	btfsc	status,0,c
  6868  010C82  D017               	goto	u18910
  6869                           
  6870                           ; BSR set to: 0
  6871                           ;fat16.c: 1309: {;fat16.c: 1310: if(buffer[cntr] != _get_fbr(cntr))
  6872                           
  6873                           ; BSR set to: 0
  6874                           
  6875                           ; BSR set to: 0
  6876  010C84  0E00               	movlw	low _buffer
  6877  010C86  258D               	addwf	fat_get_format_status@cntr& (0+255),w,b
  6878  010C88  6ED9               	movwf	fsr2l,c
  6879  010C8A  0E08               	movlw	high _buffer
  6880  010C8C  218E               	addwfc	(fat_get_format_status@cntr+1)& (0+255),w,b
  6881  010C8E  6EDA               	movwf	fsr2h,c
  6882  010C90  C08D  F060         	movff	fat_get_format_status@cntr,__get_fbr@idx
  6883  010C94  C08E  F061         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  6884  010C98  EC11  F06A         	call	__get_fbr	;wreg free
  6885  010C9C  0100               	movlb	0	; () banked
  6886  010C9E  6F8C               	movwf	(??_fat_get_format_status+1)& (0+255),b
  6887  010CA0  50DE               	movf	postinc2,w,c
  6888  010CA2  198C               	xorwf	(??_fat_get_format_status+1)& (0+255),w,b
  6889  010CA4  B4D8               	btfsc	status,2,c
  6890  010CA6  D002               	goto	l1993
  6891                           
  6892                           ; BSR set to: 0
  6893                           ;fat16.c: 1311: {;fat16.c: 1312: return DRIVE_NOT_FORMATED;
  6894  010CA8  0E00               	movlw	0
  6895                           
  6896                           ; BSR set to: 0
  6897  010CAA  0012               	return	
  6898  010CAC                     l1993:
  6899                           
  6900                           ; BSR set to: 0
  6901                           
  6902                           ; BSR set to: 0
  6903  010CAC  4B8D               	infsnz	fat_get_format_status@cntr& (0+255),f,b
  6904  010CAE  2B8E               	incf	(fat_get_format_status@cntr+1)& (0+255),f,b
  6905  010CB0  D7E5               	goto	l19342
  6906  010CB2                     u18910:
  6907                           
  6908                           ; BSR set to: 0
  6909                           ;fat16.c: 1313: };fat16.c: 1314: };fat16.c: 1317: return DRIVE_FORMATED;
  6910                           
  6911                           ; BSR set to: 0
  6912  010CB2  0E01               	movlw	1
  6913  010CB4  0012               	return	
  6914  010CB6                     __end_of_fat_get_format_status:
  6915                           	opt stack 0
  6916                           tblptru	equ	0xFF8
  6917                           tblptrh	equ	0xFF7
  6918                           tblptrl	equ	0xFF6
  6919                           tablat	equ	0xFF5
  6920                           postinc0	equ	0xFEE
  6921                           wreg	equ	0xFE8
  6922                           postdec1	equ	0xFE5
  6923                           fsr1h	equ	0xFE2
  6924                           fsr1l	equ	0xFE1
  6925                           postinc2	equ	0xFDE
  6926                           fsr2h	equ	0xFDA
  6927                           fsr2l	equ	0xFD9
  6928                           status	equ	0xFD8
  6929                           
  6930 ;; *************** function _fat_format *****************
  6931 ;; Defined at:
  6932 ;;		line 1320 in file "fat16.c"
  6933 ;; Parameters:    Size  Location     Type
  6934 ;;		None
  6935 ;; Auto vars:     Size  Location     Type
  6936 ;;  cntr            2   36[BANK0 ] unsigned int 
  6937 ;; Return value:  Size  Location     Type
  6938 ;;                  1    wreg      unsigned char 
  6939 ;; Registers used:
  6940 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6941 ;; Tracked objects:
  6942 ;;		On entry : 0/0
  6943 ;;		On exit  : 0/0
  6944 ;;		Unchanged: 0/0
  6945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6947 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6949 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6950 ;;Total ram usage:        2 bytes
  6951 ;; Hardware stack levels used:    1
  6952 ;; Hardware stack levels required when called:   15
  6953 ;; This function calls:
  6954 ;;		__get_data
  6955 ;;		__get_fat
  6956 ;;		__get_fbr
  6957 ;;		__get_mbr
  6958 ;;		__get_root
  6959 ;;		_flash_sector_write
  6960 ;; This function is called by:
  6961 ;;		_fat_init
  6962 ;; This function uses a non-reentrant model
  6963 ;;
  6964                           
  6965                           	psect	text10
  6966  00DB0C                     __ptext10:
  6967                           	opt stack 0
  6968  00DB0C                     _fat_format:
  6969                           	opt stack 13
  6970                           
  6971                           ;fat16.c: 1322: uint16_t cntr;;fat16.c: 1325: for(cntr=0; cntr<512; ++cntr)
  6972                           
  6973                           ; BSR set to: 0
  6974                           ;incstack = 0
  6975  00DB0C  0E00               	movlw	0
  6976  00DB0E  0100               	movlb	0	; () banked
  6977  00DB10  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  6978  00DB12  0E00               	movlw	0
  6979  00DB14  6F84               	movwf	fat_format@cntr& (0+255),b
  6980  00DB16                     l19362:
  6981                           
  6982                           ; BSR set to: 0
  6983  00DB16  0E02               	movlw	2
  6984  00DB18  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  6985  00DB1A  B0D8               	btfsc	status,0,c
  6986  00DB1C  D011               	goto	u18930
  6987                           
  6988                           ; BSR set to: 0
  6989                           ;fat16.c: 1326: {;fat16.c: 1327: buffer[cntr] = _get_mbr(cntr);
  6990                           
  6991                           ; BSR set to: 0
  6992                           
  6993                           ; BSR set to: 0
  6994  00DB1E  0E00               	movlw	low _buffer
  6995  00DB20  2584               	addwf	fat_format@cntr& (0+255),w,b
  6996  00DB22  6ED9               	movwf	fsr2l,c
  6997  00DB24  0E08               	movlw	high _buffer
  6998  00DB26  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  6999  00DB28  6EDA               	movwf	fsr2h,c
  7000  00DB2A  C084  F060         	movff	fat_format@cntr,__get_mbr@idx
  7001  00DB2E  C085  F061         	movff	fat_format@cntr+1,__get_mbr@idx+1
  7002  00DB32  EC2B  F082         	call	__get_mbr	;wreg free
  7003  00DB36  6EDF               	movwf	indf2,c
  7004  00DB38  0100               	movlb	0	; () banked
  7005  00DB3A  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  7006  00DB3C  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  7007  00DB3E  D7EB               	goto	l19362
  7008  00DB40                     u18930:
  7009                           
  7010                           ; BSR set to: 0
  7011                           ;fat16.c: 1328: };fat16.c: 1329: flash_sector_write(0, buffer);
  7012                           
  7013                           ; BSR set to: 0
  7014  00DB40  0E00               	movlw	0
  7015  00DB42  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  7016  00DB44  0E00               	movlw	0
  7017  00DB46  6F7F               	movwf	flash_sector_write@page& (0+255),b
  7018  00DB48  0E00               	movlw	low _buffer
  7019  00DB4A  6F81               	movwf	flash_sector_write@data& (0+255),b
  7020  00DB4C  0E08               	movlw	high _buffer
  7021  00DB4E  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  7022  00DB50  ECC7  F08F         	call	_flash_sector_write	;wreg free
  7023                           
  7024                           ;fat16.c: 1332: for(cntr=0; cntr<512; ++cntr)
  7025  00DB54  0E00               	movlw	0
  7026  00DB56  0100               	movlb	0	; () banked
  7027  00DB58  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  7028  00DB5A  0E00               	movlw	0
  7029  00DB5C  6F84               	movwf	fat_format@cntr& (0+255),b
  7030  00DB5E                     l19376:
  7031                           
  7032                           ; BSR set to: 0
  7033  00DB5E  0E02               	movlw	2
  7034  00DB60  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  7035  00DB62  B0D8               	btfsc	status,0,c
  7036  00DB64  D011               	goto	u18950
  7037                           
  7038                           ; BSR set to: 0
  7039                           ;fat16.c: 1333: {;fat16.c: 1334: buffer[cntr] = _get_fbr(cntr);
  7040                           
  7041                           ; BSR set to: 0
  7042                           
  7043                           ; BSR set to: 0
  7044  00DB66  0E00               	movlw	low _buffer
  7045  00DB68  2584               	addwf	fat_format@cntr& (0+255),w,b
  7046  00DB6A  6ED9               	movwf	fsr2l,c
  7047  00DB6C  0E08               	movlw	high _buffer
  7048  00DB6E  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  7049  00DB70  6EDA               	movwf	fsr2h,c
  7050  00DB72  C084  F060         	movff	fat_format@cntr,__get_fbr@idx
  7051  00DB76  C085  F061         	movff	fat_format@cntr+1,__get_fbr@idx+1
  7052  00DB7A  EC11  F06A         	call	__get_fbr	;wreg free
  7053  00DB7E  6EDF               	movwf	indf2,c
  7054  00DB80  0100               	movlb	0	; () banked
  7055  00DB82  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  7056  00DB84  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  7057  00DB86  D7EB               	goto	l19376
  7058  00DB88                     u18950:
  7059                           
  7060                           ; BSR set to: 0
  7061                           ;fat16.c: 1335: };fat16.c: 1336: flash_sector_write(1, buffer);
  7062                           
  7063                           ; BSR set to: 0
  7064  00DB88  0E00               	movlw	0
  7065  00DB8A  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  7066  00DB8C  0E01               	movlw	1
  7067  00DB8E  6F7F               	movwf	flash_sector_write@page& (0+255),b
  7068  00DB90  0E00               	movlw	low _buffer
  7069  00DB92  6F81               	movwf	flash_sector_write@data& (0+255),b
  7070  00DB94  0E08               	movlw	high _buffer
  7071  00DB96  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  7072  00DB98  ECC7  F08F         	call	_flash_sector_write	;wreg free
  7073                           
  7074                           ;fat16.c: 1339: for(cntr=0; cntr<512; ++cntr)
  7075  00DB9C  0E00               	movlw	0
  7076  00DB9E  0100               	movlb	0	; () banked
  7077  00DBA0  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  7078  00DBA2  0E00               	movlw	0
  7079  00DBA4  6F84               	movwf	fat_format@cntr& (0+255),b
  7080  00DBA6                     l19390:
  7081                           
  7082                           ; BSR set to: 0
  7083  00DBA6  0E02               	movlw	2
  7084  00DBA8  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  7085  00DBAA  B0D8               	btfsc	status,0,c
  7086  00DBAC  D011               	goto	u18970
  7087                           
  7088                           ; BSR set to: 0
  7089                           ;fat16.c: 1340: {;fat16.c: 1341: buffer[cntr] = _get_fat(cntr);
  7090                           
  7091                           ; BSR set to: 0
  7092                           
  7093                           ; BSR set to: 0
  7094  00DBAE  0E00               	movlw	low _buffer
  7095  00DBB0  2584               	addwf	fat_format@cntr& (0+255),w,b
  7096  00DBB2  6ED9               	movwf	fsr2l,c
  7097  00DBB4  0E08               	movlw	high _buffer
  7098  00DBB6  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  7099  00DBB8  6EDA               	movwf	fsr2h,c
  7100  00DBBA  C084  F060         	movff	fat_format@cntr,__get_fat@idx
  7101  00DBBE  C085  F061         	movff	fat_format@cntr+1,__get_fat@idx+1
  7102  00DBC2  EC49  F08E         	call	__get_fat	;wreg free
  7103  00DBC6  6EDF               	movwf	indf2,c
  7104  00DBC8  0100               	movlb	0	; () banked
  7105  00DBCA  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  7106  00DBCC  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  7107  00DBCE  D7EB               	goto	l19390
  7108  00DBD0                     u18970:
  7109                           
  7110                           ; BSR set to: 0
  7111                           ;fat16.c: 1342: };fat16.c: 1343: flash_sector_write(2, buffer);
  7112                           
  7113                           ; BSR set to: 0
  7114  00DBD0  0E00               	movlw	0
  7115  00DBD2  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  7116  00DBD4  0E02               	movlw	2
  7117  00DBD6  6F7F               	movwf	flash_sector_write@page& (0+255),b
  7118  00DBD8  0E00               	movlw	low _buffer
  7119  00DBDA  6F81               	movwf	flash_sector_write@data& (0+255),b
  7120  00DBDC  0E08               	movlw	high _buffer
  7121  00DBDE  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  7122  00DBE0  ECC7  F08F         	call	_flash_sector_write	;wreg free
  7123                           
  7124                           ;fat16.c: 1346: for(cntr=0; cntr<512; ++cntr)
  7125  00DBE4  0E00               	movlw	0
  7126  00DBE6  0100               	movlb	0	; () banked
  7127  00DBE8  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  7128  00DBEA  0E00               	movlw	0
  7129  00DBEC  6F84               	movwf	fat_format@cntr& (0+255),b
  7130  00DBEE                     l19404:
  7131                           
  7132                           ; BSR set to: 0
  7133  00DBEE  0E02               	movlw	2
  7134  00DBF0  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  7135  00DBF2  B0D8               	btfsc	status,0,c
  7136  00DBF4  D00B               	goto	u18990
  7137                           
  7138                           ; BSR set to: 0
  7139                           ;fat16.c: 1347: {;fat16.c: 1348: buffer[cntr] = 0x00;
  7140                           
  7141                           ; BSR set to: 0
  7142                           
  7143                           ; BSR set to: 0
  7144  00DBF6  0E00               	movlw	low _buffer
  7145  00DBF8  2584               	addwf	fat_format@cntr& (0+255),w,b
  7146  00DBFA  6ED9               	movwf	fsr2l,c
  7147  00DBFC  0E08               	movlw	high _buffer
  7148  00DBFE  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  7149  00DC00  6EDA               	movwf	fsr2h,c
  7150  00DC02  0E00               	movlw	0
  7151  00DC04  6EDF               	movwf	indf2,c
  7152                           
  7153                           ; BSR set to: 0
  7154  00DC06  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  7155  00DC08  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  7156  00DC0A  D7F1               	goto	l19404
  7157  00DC0C                     u18990:
  7158                           
  7159                           ; BSR set to: 0
  7160                           ;fat16.c: 1349: };fat16.c: 1350: for(cntr=2+1; cntr<=33; ++cntr)
  7161                           
  7162                           ; BSR set to: 0
  7163  00DC0C  0E00               	movlw	0
  7164  00DC0E  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  7165  00DC10  0E03               	movlw	3
  7166  00DC12  6F84               	movwf	fat_format@cntr& (0+255),b
  7167  00DC14                     l19416:
  7168                           
  7169                           ; BSR set to: 0
  7170  00DC14  5185               	movf	(fat_format@cntr+1)& (0+255),w,b
  7171  00DC16  E112               	bnz	l19426
  7172  00DC18  0E22               	movlw	34
  7173  00DC1A  5D84               	subwf	fat_format@cntr& (0+255),w,b
  7174  00DC1C  B0D8               	btfsc	status,0,c
  7175  00DC1E  D00E               	goto	u19010
  7176                           
  7177                           ; BSR set to: 0
  7178                           ;fat16.c: 1351: {;fat16.c: 1352: flash_sector_write(cntr, buffer);
  7179                           
  7180                           ; BSR set to: 0
  7181                           
  7182                           ; BSR set to: 0
  7183  00DC20  C084  F07F         	movff	fat_format@cntr,flash_sector_write@page
  7184  00DC24  C085  F080         	movff	fat_format@cntr+1,flash_sector_write@page+1
  7185  00DC28  0E00               	movlw	low _buffer
  7186  00DC2A  6F81               	movwf	flash_sector_write@data& (0+255),b
  7187  00DC2C  0E08               	movlw	high _buffer
  7188  00DC2E  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  7189  00DC30  ECC7  F08F         	call	_flash_sector_write	;wreg free
  7190  00DC34  0100               	movlb	0	; () banked
  7191  00DC36  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  7192  00DC38  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  7193  00DC3A  D7EC               	goto	l19416
  7194  00DC3C                     u19010:
  7195  00DC3C                     l19426:
  7196                           
  7197                           ; BSR set to: 0
  7198                           ;fat16.c: 1353: };fat16.c: 1356: for(cntr=0; cntr<512; ++cntr)
  7199  00DC3C  0E00               	movlw	0
  7200  00DC3E  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  7201  00DC40  0E00               	movlw	0
  7202  00DC42  6F84               	movwf	fat_format@cntr& (0+255),b
  7203  00DC44                     l19428:
  7204                           
  7205                           ; BSR set to: 0
  7206  00DC44  0E02               	movlw	2
  7207  00DC46  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  7208  00DC48  B0D8               	btfsc	status,0,c
  7209  00DC4A  D011               	goto	u19030
  7210                           
  7211                           ; BSR set to: 0
  7212                           ;fat16.c: 1357: {;fat16.c: 1358: buffer[cntr] = _get_root(cntr);
  7213                           
  7214                           ; BSR set to: 0
  7215                           
  7216                           ; BSR set to: 0
  7217  00DC4C  0E00               	movlw	low _buffer
  7218  00DC4E  2584               	addwf	fat_format@cntr& (0+255),w,b
  7219  00DC50  6ED9               	movwf	fsr2l,c
  7220  00DC52  0E08               	movlw	high _buffer
  7221  00DC54  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  7222  00DC56  6EDA               	movwf	fsr2h,c
  7223  00DC58  C084  F060         	movff	fat_format@cntr,__get_root@idx
  7224  00DC5C  C085  F061         	movff	fat_format@cntr+1,__get_root@idx+1
  7225  00DC60  EC63  F071         	call	__get_root	;wreg free
  7226  00DC64  6EDF               	movwf	indf2,c
  7227  00DC66  0100               	movlb	0	; () banked
  7228  00DC68  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  7229  00DC6A  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  7230  00DC6C  D7EB               	goto	l19428
  7231  00DC6E                     u19030:
  7232                           
  7233                           ; BSR set to: 0
  7234                           ;fat16.c: 1359: };fat16.c: 1360: flash_sector_write(34, buffer);
  7235                           
  7236                           ; BSR set to: 0
  7237  00DC6E  0E00               	movlw	0
  7238  00DC70  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  7239  00DC72  0E22               	movlw	34
  7240  00DC74  6F7F               	movwf	flash_sector_write@page& (0+255),b
  7241  00DC76  0E00               	movlw	low _buffer
  7242  00DC78  6F81               	movwf	flash_sector_write@data& (0+255),b
  7243  00DC7A  0E08               	movlw	high _buffer
  7244  00DC7C  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  7245  00DC7E  ECC7  F08F         	call	_flash_sector_write	;wreg free
  7246                           
  7247                           ;fat16.c: 1363: for(cntr=0; cntr<512; ++cntr)
  7248  00DC82  0E00               	movlw	0
  7249  00DC84  0100               	movlb	0	; () banked
  7250  00DC86  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  7251  00DC88  0E00               	movlw	0
  7252  00DC8A  6F84               	movwf	fat_format@cntr& (0+255),b
  7253  00DC8C                     l19442:
  7254                           
  7255                           ; BSR set to: 0
  7256  00DC8C  0E02               	movlw	2
  7257  00DC8E  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  7258  00DC90  B0D8               	btfsc	status,0,c
  7259  00DC92  D00B               	goto	u19050
  7260                           
  7261                           ; BSR set to: 0
  7262                           ;fat16.c: 1364: {;fat16.c: 1365: buffer[cntr] = 0x00;
  7263                           
  7264                           ; BSR set to: 0
  7265                           
  7266                           ; BSR set to: 0
  7267  00DC94  0E00               	movlw	low _buffer
  7268  00DC96  2584               	addwf	fat_format@cntr& (0+255),w,b
  7269  00DC98  6ED9               	movwf	fsr2l,c
  7270  00DC9A  0E08               	movlw	high _buffer
  7271  00DC9C  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  7272  00DC9E  6EDA               	movwf	fsr2h,c
  7273  00DCA0  0E00               	movlw	0
  7274  00DCA2  6EDF               	movwf	indf2,c
  7275                           
  7276                           ; BSR set to: 0
  7277  00DCA4  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  7278  00DCA6  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  7279  00DCA8  D7F1               	goto	l19442
  7280  00DCAA                     u19050:
  7281                           
  7282                           ; BSR set to: 0
  7283                           ;fat16.c: 1366: };fat16.c: 1367: for(cntr=34+1; cntr<=37; ++cntr)
  7284                           
  7285                           ; BSR set to: 0
  7286  00DCAA  0E00               	movlw	0
  7287  00DCAC  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  7288  00DCAE  0E23               	movlw	35
  7289  00DCB0  6F84               	movwf	fat_format@cntr& (0+255),b
  7290  00DCB2                     l19454:
  7291                           
  7292                           ; BSR set to: 0
  7293  00DCB2  5185               	movf	(fat_format@cntr+1)& (0+255),w,b
  7294  00DCB4  E112               	bnz	l19464
  7295  00DCB6  0E26               	movlw	38
  7296  00DCB8  5D84               	subwf	fat_format@cntr& (0+255),w,b
  7297  00DCBA  B0D8               	btfsc	status,0,c
  7298  00DCBC  D00E               	goto	u19070
  7299                           
  7300                           ; BSR set to: 0
  7301                           ;fat16.c: 1368: {;fat16.c: 1369: flash_sector_write(cntr, buffer);
  7302                           
  7303                           ; BSR set to: 0
  7304                           
  7305                           ; BSR set to: 0
  7306  00DCBE  C084  F07F         	movff	fat_format@cntr,flash_sector_write@page
  7307  00DCC2  C085  F080         	movff	fat_format@cntr+1,flash_sector_write@page+1
  7308  00DCC6  0E00               	movlw	low _buffer
  7309  00DCC8  6F81               	movwf	flash_sector_write@data& (0+255),b
  7310  00DCCA  0E08               	movlw	high _buffer
  7311  00DCCC  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  7312  00DCCE  ECC7  F08F         	call	_flash_sector_write	;wreg free
  7313  00DCD2  0100               	movlb	0	; () banked
  7314  00DCD4  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  7315  00DCD6  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  7316  00DCD8  D7EC               	goto	l19454
  7317  00DCDA                     u19070:
  7318  00DCDA                     l19464:
  7319                           
  7320                           ; BSR set to: 0
  7321                           ;fat16.c: 1370: };fat16.c: 1373: for(cntr=0; cntr<512; ++cntr)
  7322  00DCDA  0E00               	movlw	0
  7323  00DCDC  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  7324  00DCDE  0E00               	movlw	0
  7325  00DCE0  6F84               	movwf	fat_format@cntr& (0+255),b
  7326  00DCE2                     l19466:
  7327                           
  7328                           ; BSR set to: 0
  7329  00DCE2  0E02               	movlw	2
  7330  00DCE4  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  7331  00DCE6  B0D8               	btfsc	status,0,c
  7332  00DCE8  D011               	goto	u19090
  7333                           
  7334                           ; BSR set to: 0
  7335                           ;fat16.c: 1374: {;fat16.c: 1375: buffer[cntr] = _get_data(cntr);
  7336                           
  7337                           ; BSR set to: 0
  7338                           
  7339                           ; BSR set to: 0
  7340  00DCEA  0E00               	movlw	low _buffer
  7341  00DCEC  2584               	addwf	fat_format@cntr& (0+255),w,b
  7342  00DCEE  6ED9               	movwf	fsr2l,c
  7343  00DCF0  0E08               	movlw	high _buffer
  7344  00DCF2  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  7345  00DCF4  6EDA               	movwf	fsr2h,c
  7346  00DCF6  C084  F060         	movff	fat_format@cntr,__get_data@idx
  7347  00DCFA  C085  F061         	movff	fat_format@cntr+1,__get_data@idx+1
  7348  00DCFE  EC4A  F093         	call	__get_data	;wreg free
  7349  00DD02  6EDF               	movwf	indf2,c
  7350  00DD04  0100               	movlb	0	; () banked
  7351  00DD06  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  7352  00DD08  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  7353  00DD0A  D7EB               	goto	l19466
  7354  00DD0C                     u19090:
  7355                           
  7356                           ; BSR set to: 0
  7357                           ;fat16.c: 1376: };fat16.c: 1377: flash_sector_write(38, buffer);
  7358                           
  7359                           ; BSR set to: 0
  7360  00DD0C  0E00               	movlw	0
  7361  00DD0E  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  7362  00DD10  0E26               	movlw	38
  7363  00DD12  6F7F               	movwf	flash_sector_write@page& (0+255),b
  7364  00DD14  0E00               	movlw	low _buffer
  7365  00DD16  6F81               	movwf	flash_sector_write@data& (0+255),b
  7366  00DD18  0E08               	movlw	high _buffer
  7367  00DD1A  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  7368  00DD1C  ECC7  F08F         	call	_flash_sector_write	;wreg free
  7369  00DD20  0012               	return	
  7370  00DD22                     __end_of_fat_format:
  7371                           	opt stack 0
  7372                           tblptru	equ	0xFF8
  7373                           tblptrh	equ	0xFF7
  7374                           tblptrl	equ	0xFF6
  7375                           tablat	equ	0xFF5
  7376                           postinc0	equ	0xFEE
  7377                           wreg	equ	0xFE8
  7378                           postdec1	equ	0xFE5
  7379                           fsr1h	equ	0xFE2
  7380                           fsr1l	equ	0xFE1
  7381                           indf2	equ	0xFDF
  7382                           postinc2	equ	0xFDE
  7383                           fsr2h	equ	0xFDA
  7384                           fsr2l	equ	0xFD9
  7385                           status	equ	0xFD8
  7386                           
  7387 ;; *************** function _flash_sector_write *****************
  7388 ;; Defined at:
  7389 ;;		line 434 in file "flash.c"
  7390 ;; Parameters:    Size  Location     Type
  7391 ;;  page            2   31[BANK0 ] unsigned int 
  7392 ;;  data            2   33[BANK0 ] PTR unsigned char 
  7393 ;;		 -> buffer(512), 
  7394 ;; Auto vars:     Size  Location     Type
  7395 ;;  match           1   35[BANK0 ] enum E6971
  7396 ;; Return value:  Size  Location     Type
  7397 ;;                  1    wreg      void 
  7398 ;; Registers used:
  7399 ;;		wreg, status,2, status,0, cstack
  7400 ;; Tracked objects:
  7401 ;;		On entry : 0/0
  7402 ;;		On exit  : 0/0
  7403 ;;		Unchanged: 0/0
  7404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7405 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7406 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7408 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7409 ;;Total ram usage:        5 bytes
  7410 ;; Hardware stack levels used:    1
  7411 ;; Hardware stack levels required when called:   14
  7412 ;; This function calls:
  7413 ;;		__flash_compare_page_to_buffer
  7414 ;;		__flash_write_page_from_buffer
  7415 ;;		__flash_write_to_buffer
  7416 ;; This function is called by:
  7417 ;;		_fat_format
  7418 ;;		__make_cluster_chain
  7419 ;; This function uses a non-reentrant model
  7420 ;;
  7421                           
  7422                           	psect	text11
  7423  011F8E                     __ptext11:
  7424                           	opt stack 0
  7425  011F8E                     _flash_sector_write:
  7426                           	opt stack 13
  7427                           
  7428                           ;flash.c: 436: flashMatchResult_t match;;flash.c: 439: _flash_write_to_buffer(0, data, 5
      +                          12, FLASH_BUFFER_1);
  7429                           
  7430                           ;incstack = 0
  7431  011F8E  0E00               	movlw	0
  7432  011F90  0100               	movlb	0	; () banked
  7433  011F92  6F74               	movwf	(__flash_write_to_buffer@start+1)& (0+255),b
  7434  011F94  0E00               	movlw	0
  7435  011F96  6F73               	movwf	__flash_write_to_buffer@start& (0+255),b
  7436  011F98  C081  F075         	movff	flash_sector_write@data,__flash_write_to_buffer@data
  7437  011F9C  C082  F076         	movff	flash_sector_write@data+1,__flash_write_to_buffer@data+1
  7438  011FA0  0E02               	movlw	2
  7439  011FA2  6F78               	movwf	(__flash_write_to_buffer@data_length+1)& (0+255),b
  7440  011FA4  0E00               	movlw	0
  7441  011FA6  6F77               	movwf	__flash_write_to_buffer@data_length& (0+255),b
  7442  011FA8  0E00               	movlw	0
  7443  011FAA  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
  7444  011FAC  EC76  F08F         	call	__flash_write_to_buffer	;wreg free
  7445                           
  7446                           ;flash.c: 442: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
  7447  011FB0  C07F  F073         	movff	flash_sector_write@page,__flash_compare_page_to_buffer@page
  7448  011FB4  C080  F074         	movff	flash_sector_write@page+1,__flash_compare_page_to_buffer@page+1
  7449  011FB8  0E00               	movlw	0
  7450  011FBA  0100               	movlb	0	; () banked
  7451  011FBC  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
  7452  011FBE  ECA1  F08A         	call	__flash_compare_page_to_buffer	;wreg free
  7453  011FC2  0100               	movlb	0	; () banked
  7454  011FC4  6F83               	movwf	flash_sector_write@match& (0+255),b
  7455                           
  7456                           ; BSR set to: 0
  7457                           ;flash.c: 445: if(match==DATA_DOES_NOT_MATCH)
  7458  011FC6  0583               	decf	flash_sector_write@match& (0+255),w,b
  7459  011FC8  A4D8               	btfss	status,2,c
  7460  011FCA  0012               	return	
  7461                           
  7462                           ; BSR set to: 0
  7463                           ;flash.c: 446: {;flash.c: 447: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
  7464  011FCC  C07F  F073         	movff	flash_sector_write@page,__flash_write_page_from_buffer@page
  7465  011FD0  C080  F074         	movff	flash_sector_write@page+1,__flash_write_page_from_buffer@page+1
  7466  011FD4  0E00               	movlw	0
  7467  011FD6  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
  7468  011FD8  ECC2  F08D         	call	__flash_write_page_from_buffer	;wreg free
  7469  011FDC  0012               	return	
  7470  011FDE                     __end_of_flash_sector_write:
  7471                           	opt stack 0
  7472                           tblptru	equ	0xFF8
  7473                           tblptrh	equ	0xFF7
  7474                           tblptrl	equ	0xFF6
  7475                           tablat	equ	0xFF5
  7476                           postinc0	equ	0xFEE
  7477                           wreg	equ	0xFE8
  7478                           postdec1	equ	0xFE5
  7479                           fsr1h	equ	0xFE2
  7480                           fsr1l	equ	0xFE1
  7481                           indf2	equ	0xFDF
  7482                           postinc2	equ	0xFDE
  7483                           fsr2h	equ	0xFDA
  7484                           fsr2l	equ	0xFD9
  7485                           status	equ	0xFD8
  7486                           
  7487 ;; *************** function __flash_write_to_buffer *****************
  7488 ;; Defined at:
  7489 ;;		line 236 in file "flash.c"
  7490 ;; Parameters:    Size  Location     Type
  7491 ;;  start           2   19[BANK0 ] unsigned int 
  7492 ;;  data            2   21[BANK0 ] PTR unsigned char 
  7493 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), _delete_root@deleted_value(1
      +), 
  7494 ;;		 -> buffer(512), 
  7495 ;;  data_length     2   23[BANK0 ] unsigned int 
  7496 ;;  buffer          1   25[BANK0 ] enum E6967
  7497 ;; Auto vars:     Size  Location     Type
  7498 ;;  command         4   26[BANK0 ] unsigned char [4]
  7499 ;; Return value:  Size  Location     Type
  7500 ;;                  1    wreg      void 
  7501 ;; Registers used:
  7502 ;;		wreg, status,2, status,0, cstack
  7503 ;; Tracked objects:
  7504 ;;		On entry : 0/0
  7505 ;;		On exit  : 0/0
  7506 ;;		Unchanged: 0/0
  7507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7508 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7509 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7511 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7512 ;;Total ram usage:       11 bytes
  7513 ;; Hardware stack levels used:    1
  7514 ;; Hardware stack levels required when called:   13
  7515 ;; This function calls:
  7516 ;;		__flash_is_busy
  7517 ;;		_spi_tx_tx
  7518 ;; This function is called by:
  7519 ;;		_flash_sector_write
  7520 ;;		_flash_partial_write
  7521 ;;		_flash_write_to_buffer
  7522 ;; This function uses a non-reentrant model
  7523 ;;
  7524                           
  7525                           	psect	text12
  7526  011EEC                     __ptext12:
  7527                           	opt stack 0
  7528  011EEC                     __flash_write_to_buffer:
  7529                           	opt stack 13
  7530                           
  7531                           ;flash.c: 238: uint8_t command[4];;flash.c: 241: while(_flash_is_busy());
  7532                           
  7533                           ;incstack = 0
  7534  011EEC  ECAC  F093         	call	__flash_is_busy	;wreg free
  7535  011EF0  0900               	iorlw	0
  7536  011EF2  A4D8               	btfss	status,2,c
  7537  011EF4  D7FB               	goto	__flash_write_to_buffer
  7538                           
  7539                           ;flash.c: 244: if(buffer==FLASH_BUFFER_1)
  7540  011EF6  0100               	movlb	0	; () banked
  7541  011EF8  5179               	movf	__flash_write_to_buffer@buffer& (0+255),w,b
  7542  011EFA  A4D8               	btfss	status,2,c
  7543  011EFC  D002               	goto	l1513
  7544                           
  7545                           ; BSR set to: 0
  7546                           ;flash.c: 245: command[0] = 0x84;
  7547  011EFE  0E84               	movlw	132
  7548  011F00  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
  7549  011F02                     l1513:
  7550                           
  7551                           ; BSR set to: 0
  7552                           ;flash.c: 246: if(buffer==FLASH_BUFFER_2)
  7553                           
  7554                           ; BSR set to: 0
  7555  011F02  0579               	decf	__flash_write_to_buffer@buffer& (0+255),w,b
  7556  011F04  A4D8               	btfss	status,2,c
  7557  011F06  D002               	goto	l1514
  7558                           
  7559                           ; BSR set to: 0
  7560                           ;flash.c: 247: command[0] = 0x87;
  7561  011F08  0E87               	movlw	135
  7562  011F0A  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
  7563  011F0C                     l1514:
  7564                           
  7565                           ; BSR set to: 0
  7566                           ;flash.c: 249: command[1] = 0x00;
  7567  011F0C  0E00               	movlw	0
  7568  011F0E  6F7B               	movwf	(__flash_write_to_buffer@command+1)& (0+255),b
  7569                           
  7570                           ;flash.c: 250: command[2] = ((unsigned char)(((start)>>8)&0xFF));
  7571  011F10  5174               	movf	(__flash_write_to_buffer@start+1)& (0+255),w,b
  7572  011F12  6F7C               	movwf	(__flash_write_to_buffer@command+2)& (0+255),b
  7573                           
  7574                           ; BSR set to: 0
  7575                           ;flash.c: 251: command[3] = ((unsigned char)((start)&0xFF));
  7576  011F14  C073  F07D         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
  7577                           
  7578                           ; BSR set to: 0
  7579                           ;flash.c: 254: spi_tx_tx(command, 4, data, data_length);
  7580  011F18  0E7A               	movlw	low __flash_write_to_buffer@command
  7581  011F1A  6F60               	movwf	spi_tx_tx@command& (0+255),b
  7582  011F1C  0E00               	movlw	high __flash_write_to_buffer@command
  7583  011F1E  6F61               	movwf	(spi_tx_tx@command+1)& (0+255),b
  7584  011F20  0E00               	movlw	0
  7585  011F22  6F63               	movwf	(spi_tx_tx@command_length+1)& (0+255),b
  7586  011F24  0E04               	movlw	4
  7587  011F26  6F62               	movwf	spi_tx_tx@command_length& (0+255),b
  7588  011F28  C075  F064         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
  7589  011F2C  C076  F065         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
  7590  011F30  C077  F066         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
  7591  011F34  C078  F067         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
  7592  011F38  ECCE  F089         	call	_spi_tx_tx	;wreg free
  7593  011F3C  0012               	return		;funcret
  7594  011F3E                     __end_of__flash_write_to_buffer:
  7595                           	opt stack 0
  7596                           tblptru	equ	0xFF8
  7597                           tblptrh	equ	0xFF7
  7598                           tblptrl	equ	0xFF6
  7599                           tablat	equ	0xFF5
  7600                           postinc0	equ	0xFEE
  7601                           wreg	equ	0xFE8
  7602                           postdec1	equ	0xFE5
  7603                           fsr1h	equ	0xFE2
  7604                           fsr1l	equ	0xFE1
  7605                           indf2	equ	0xFDF
  7606                           postinc2	equ	0xFDE
  7607                           fsr2h	equ	0xFDA
  7608                           fsr2l	equ	0xFD9
  7609                           status	equ	0xFD8
  7610                           
  7611 ;; *************** function _spi_tx_tx *****************
  7612 ;; Defined at:
  7613 ;;		line 146 in file "spi.c"
  7614 ;; Parameters:    Size  Location     Type
  7615 ;;  command         2    0[BANK0 ] PTR unsigned char 
  7616 ;;		 -> _flash_write_to_buffer@command(4), 
  7617 ;;  command_leng    2    2[BANK0 ] unsigned int 
  7618 ;;  data            2    4[BANK0 ] PTR unsigned char 
  7619 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), _delete_root@deleted_value(1
      +), 
  7620 ;;		 -> buffer(512), 
  7621 ;;  data_length     2    6[BANK0 ] unsigned int 
  7622 ;; Auto vars:     Size  Location     Type
  7623 ;;		None
  7624 ;; Return value:  Size  Location     Type
  7625 ;;                  1    wreg      void 
  7626 ;; Registers used:
  7627 ;;		wreg, status,2, status,0
  7628 ;; Tracked objects:
  7629 ;;		On entry : 0/0
  7630 ;;		On exit  : 0/0
  7631 ;;		Unchanged: 0/0
  7632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7633 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7635 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7636 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7637 ;;Total ram usage:       12 bytes
  7638 ;; Hardware stack levels used:    1
  7639 ;; Hardware stack levels required when called:   10
  7640 ;; This function calls:
  7641 ;;		Nothing
  7642 ;; This function is called by:
  7643 ;;		__flash_write_to_buffer
  7644 ;; This function uses a non-reentrant model
  7645 ;;
  7646                           
  7647                           	psect	text13
  7648  01139C                     __ptext13:
  7649                           	opt stack 0
  7650  01139C                     _spi_tx_tx:
  7651                           	opt stack 15
  7652                           
  7653                           ;spi.c: 149: DMACON1bits.SSCON1 = 0;
  7654                           
  7655                           ;incstack = 0
  7656  01139C  9E88               	bcf	3976,7,c	;volatile
  7657                           
  7658                           ;spi.c: 150: DMACON1bits.SSCON0 = 0;
  7659  01139E  9C88               	bcf	3976,6,c	;volatile
  7660                           
  7661                           ;spi.c: 152: DMACON1bits.TXINC = 1;
  7662  0113A0  8A88               	bsf	3976,5,c	;volatile
  7663                           
  7664                           ;spi.c: 154: DMACON1bits.RXINC = 0;
  7665  0113A2  9888               	bcf	3976,4,c	;volatile
  7666                           
  7667                           ;spi.c: 156: DMACON1bits.DUPLEX1 = 0;
  7668  0113A4  9688               	bcf	3976,3,c	;volatile
  7669                           
  7670                           ;spi.c: 157: DMACON1bits.DUPLEX0 = 1;
  7671  0113A6  8488               	bsf	3976,2,c	;volatile
  7672                           
  7673                           ;spi.c: 159: DMACON1bits.DLYINTEN = 0;
  7674  0113A8  9288               	bcf	3976,1,c	;volatile
  7675                           
  7676                           ;spi.c: 161: DMACON2bits.DLYCYC = 0b0000;
  7677  0113AA  9886               	bcf	3974,4,c	;volatile
  7678  0113AC  9A86               	bcf	3974,5,c	;volatile
  7679  0113AE  9C86               	bcf	3974,6,c	;volatile
  7680  0113B0  9E86               	bcf	3974,7,c	;volatile
  7681                           
  7682                           ;spi.c: 163: DMACON2bits.INTLVL = 0b0000;
  7683  0113B2  9086               	bcf	3974,0,c	;volatile
  7684  0113B4  9286               	bcf	3974,1,c	;volatile
  7685  0113B6  9486               	bcf	3974,2,c	;volatile
  7686  0113B8  9686               	bcf	3974,3,c	;volatile
  7687                           
  7688                           ;spi.c: 166: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
  7689  0113BA  0100               	movlb	0	; () banked
  7690  0113BC  5161               	movf	(spi_tx_tx@command+1)& (0+255),w,b
  7691  0113BE  6E6A               	movwf	3946,c	;volatile
  7692                           
  7693                           ; BSR set to: 0
  7694                           ;spi.c: 167: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
  7695  0113C0  C060  FF6B         	movff	spi_tx_tx@command,3947	;volatile
  7696                           
  7697                           ; BSR set to: 0
  7698                           ;spi.c: 170: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
  7699  0113C4  0EFF               	movlw	255
  7700  0113C6  6F68               	movwf	??_spi_tx_tx& (0+255),b
  7701  0113C8  0EFF               	movlw	255
  7702  0113CA  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
  7703  0113CC  C062  F06A         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
  7704  0113D0  C063  F06B         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
  7705  0113D4  5168               	movf	??_spi_tx_tx& (0+255),w,b
  7706  0113D6  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
  7707  0113D8  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
  7708  0113DA  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
  7709  0113DC  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
  7710  0113E0  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
  7711  0113E2  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
  7712  0113E4  6E66               	movwf	3942,c	;volatile
  7713                           
  7714                           ; BSR set to: 0
  7715                           ;spi.c: 171: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
  7716  0113E6  0562               	decf	spi_tx_tx@command_length& (0+255),w,b
  7717  0113E8  6E67               	movwf	3943,c	;volatile
  7718                           
  7719                           ; BSR set to: 0
  7720                           ;spi.c: 174: LATDbits.LD7 = 0;
  7721  0113EA  9E8C               	bcf	3980,7,c	;volatile
  7722                           
  7723                           ; BSR set to: 0
  7724                           ;spi.c: 177: DMACON1bits.DMAEN = 1;
  7725  0113EC  8088               	bsf	3976,0,c	;volatile
  7726  0113EE                     
  7727                           ; BSR set to: 0
  7728  0113EE  B088               	btfsc	3976,0,c	;volatile
  7729  0113F0  D7FE               	goto	l2121
  7730                           
  7731                           ;spi.c: 181: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
  7732  0113F2  0100               	movlb	0	; () banked
  7733  0113F4  5165               	movf	(spi_tx_tx@data+1)& (0+255),w,b
  7734  0113F6  6E6A               	movwf	3946,c	;volatile
  7735                           
  7736                           ; BSR set to: 0
  7737                           ;spi.c: 182: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
  7738  0113F8  C064  FF6B         	movff	spi_tx_tx@data,3947	;volatile
  7739                           
  7740                           ; BSR set to: 0
  7741                           ;spi.c: 185: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
  7742  0113FC  0EFF               	movlw	255
  7743  0113FE  6F68               	movwf	??_spi_tx_tx& (0+255),b
  7744  011400  0EFF               	movlw	255
  7745  011402  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
  7746  011404  C066  F06A         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
  7747  011408  C067  F06B         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
  7748  01140C  5168               	movf	??_spi_tx_tx& (0+255),w,b
  7749  01140E  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
  7750  011410  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
  7751  011412  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
  7752  011414  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
  7753  011418  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
  7754  01141A  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
  7755  01141C  6E66               	movwf	3942,c	;volatile
  7756                           
  7757                           ; BSR set to: 0
  7758                           ;spi.c: 186: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
  7759  01141E  0566               	decf	spi_tx_tx@data_length& (0+255),w,b
  7760  011420  6E67               	movwf	3943,c	;volatile
  7761                           
  7762                           ; BSR set to: 0
  7763                           ;spi.c: 189: DMACON1bits.DMAEN = 1;
  7764  011422  8088               	bsf	3976,0,c	;volatile
  7765  011424                     
  7766                           ; BSR set to: 0
  7767  011424  B088               	btfsc	3976,0,c	;volatile
  7768  011426  D7FE               	goto	l2124
  7769                           
  7770                           ;spi.c: 193: LATDbits.LD7 = 1;
  7771  011428  8E8C               	bsf	3980,7,c	;volatile
  7772  01142A  0012               	return		;funcret
  7773  01142C                     __end_of_spi_tx_tx:
  7774                           	opt stack 0
  7775                           tblptru	equ	0xFF8
  7776                           tblptrh	equ	0xFF7
  7777                           tblptrl	equ	0xFF6
  7778                           tablat	equ	0xFF5
  7779                           postinc0	equ	0xFEE
  7780                           wreg	equ	0xFE8
  7781                           postdec1	equ	0xFE5
  7782                           fsr1h	equ	0xFE2
  7783                           fsr1l	equ	0xFE1
  7784                           indf2	equ	0xFDF
  7785                           postinc2	equ	0xFDE
  7786                           fsr2h	equ	0xFDA
  7787                           fsr2l	equ	0xFD9
  7788                           status	equ	0xFD8
  7789                           
  7790 ;; *************** function __flash_write_page_from_buffer *****************
  7791 ;; Defined at:
  7792 ;;		line 258 in file "flash.c"
  7793 ;; Parameters:    Size  Location     Type
  7794 ;;  page            2   19[BANK0 ] unsigned int 
  7795 ;;  buffer          1   21[BANK0 ] enum E6967
  7796 ;; Auto vars:     Size  Location     Type
  7797 ;;  command         4   25[BANK0 ] unsigned char [4]
  7798 ;; Return value:  Size  Location     Type
  7799 ;;                  1    wreg      void 
  7800 ;; Registers used:
  7801 ;;		wreg, status,2, status,0, cstack
  7802 ;; Tracked objects:
  7803 ;;		On entry : 0/0
  7804 ;;		On exit  : 0/0
  7805 ;;		Unchanged: 0/0
  7806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7807 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7808 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7809 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7810 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7811 ;;Total ram usage:       10 bytes
  7812 ;; Hardware stack levels used:    1
  7813 ;; Hardware stack levels required when called:   13
  7814 ;; This function calls:
  7815 ;;		__flash_is_busy
  7816 ;;		_spi_tx
  7817 ;; This function is called by:
  7818 ;;		_flash_sector_write
  7819 ;;		_flash_partial_write
  7820 ;;		_flash_write_page_from_buffer
  7821 ;; This function uses a non-reentrant model
  7822 ;;
  7823                           
  7824                           	psect	text14
  7825  011B84                     __ptext14:
  7826                           	opt stack 0
  7827  011B84                     __flash_write_page_from_buffer:
  7828                           	opt stack 13
  7829                           
  7830                           ;flash.c: 260: uint8_t command[4];;flash.c: 263: while(_flash_is_busy());
  7831                           
  7832                           ;incstack = 0
  7833  011B84  ECAC  F093         	call	__flash_is_busy	;wreg free
  7834  011B88  0900               	iorlw	0
  7835  011B8A  A4D8               	btfss	status,2,c
  7836  011B8C  D7FB               	goto	__flash_write_page_from_buffer
  7837                           
  7838                           ;flash.c: 266: if(buffer==FLASH_BUFFER_1)
  7839  011B8E  0100               	movlb	0	; () banked
  7840  011B90  5175               	movf	__flash_write_page_from_buffer@buffer& (0+255),w,b
  7841  011B92  A4D8               	btfss	status,2,c
  7842  011B94  D002               	goto	l1521
  7843                           
  7844                           ; BSR set to: 0
  7845                           ;flash.c: 267: command[0] = 0x83;
  7846  011B96  0E83               	movlw	131
  7847  011B98  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
  7848  011B9A                     l1521:
  7849                           
  7850                           ; BSR set to: 0
  7851                           ;flash.c: 268: if(buffer==FLASH_BUFFER_2)
  7852                           
  7853                           ; BSR set to: 0
  7854  011B9A  0575               	decf	__flash_write_page_from_buffer@buffer& (0+255),w,b
  7855  011B9C  A4D8               	btfss	status,2,c
  7856  011B9E  D002               	goto	l1522
  7857                           
  7858                           ; BSR set to: 0
  7859                           ;flash.c: 269: command[0] = 0x86;
  7860  011BA0  0E86               	movlw	134
  7861  011BA2  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
  7862  011BA4                     l1522:
  7863                           
  7864                           ; BSR set to: 0
  7865                           ;flash.c: 271: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
  7866                           
  7867                           ; BSR set to: 0
  7868  011BA4  C073  F076         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
  7869  011BA8  C074  F077         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
  7870  011BAC  0E07               	movlw	7
  7871  011BAE  6F78               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),b
  7872  011BB0                     u17665:
  7873  011BB0  90D8               	bcf	status,0,c
  7874  011BB2  3377               	rrcf	(??__flash_write_page_from_buffer+1)& (0+255),f,b
  7875  011BB4  3376               	rrcf	??__flash_write_page_from_buffer& (0+255),f,b
  7876  011BB6  2F78               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,b
  7877  011BB8  D7FB               	goto	u17665
  7878  011BBA  5176               	movf	??__flash_write_page_from_buffer& (0+255),w,b
  7879  011BBC  6F7A               	movwf	(__flash_write_page_from_buffer@command+1)& (0+255),b
  7880                           
  7881                           ; BSR set to: 0
  7882                           ;flash.c: 272: command[2] = ((unsigned char)((page<<1)&0xFF));
  7883  011BBE  5173               	movf	__flash_write_page_from_buffer@page& (0+255),w,b
  7884  011BC0  2573               	addwf	__flash_write_page_from_buffer@page& (0+255),w,b
  7885  011BC2  6F7B               	movwf	(__flash_write_page_from_buffer@command+2)& (0+255),b
  7886                           
  7887                           ;flash.c: 273: command[3] = 0x00;
  7888  011BC4  0E00               	movlw	0
  7889  011BC6  6F7C               	movwf	(__flash_write_page_from_buffer@command+3)& (0+255),b
  7890                           
  7891                           ; BSR set to: 0
  7892                           ;flash.c: 276: spi_tx(command, 4);
  7893  011BC8  0E79               	movlw	low __flash_write_page_from_buffer@command
  7894  011BCA  6F60               	movwf	spi_tx@data& (0+255),b
  7895  011BCC  0E00               	movlw	high __flash_write_page_from_buffer@command
  7896  011BCE  6F61               	movwf	(spi_tx@data+1)& (0+255),b
  7897  011BD0  0E00               	movlw	0
  7898  011BD2  6F63               	movwf	(spi_tx@length+1)& (0+255),b
  7899  011BD4  0E04               	movlw	4
  7900  011BD6  6F62               	movwf	spi_tx@length& (0+255),b
  7901  011BD8  EC1C  F08E         	call	_spi_tx	;wreg free
  7902  011BDC  0012               	return		;funcret
  7903  011BDE                     __end_of__flash_write_page_from_buffer:
  7904                           	opt stack 0
  7905                           tblptru	equ	0xFF8
  7906                           tblptrh	equ	0xFF7
  7907                           tblptrl	equ	0xFF6
  7908                           tablat	equ	0xFF5
  7909                           postinc0	equ	0xFEE
  7910                           wreg	equ	0xFE8
  7911                           postdec1	equ	0xFE5
  7912                           fsr1h	equ	0xFE2
  7913                           fsr1l	equ	0xFE1
  7914                           indf2	equ	0xFDF
  7915                           postinc2	equ	0xFDE
  7916                           fsr2h	equ	0xFDA
  7917                           fsr2l	equ	0xFD9
  7918                           status	equ	0xFD8
  7919                           
  7920 ;; *************** function __flash_compare_page_to_buffer *****************
  7921 ;; Defined at:
  7922 ;;		line 176 in file "flash.c"
  7923 ;; Parameters:    Size  Location     Type
  7924 ;;  page            2   19[BANK0 ] unsigned int 
  7925 ;;  buffer          1   21[BANK0 ] enum E6967
  7926 ;; Auto vars:     Size  Location     Type
  7927 ;;  command         4   27[BANK0 ] unsigned char [4]
  7928 ;;  status          2   25[BANK0 ] unsigned int 
  7929 ;; Return value:  Size  Location     Type
  7930 ;;                  1    wreg      enum E6971
  7931 ;; Registers used:
  7932 ;;		wreg, status,2, status,0, cstack
  7933 ;; Tracked objects:
  7934 ;;		On entry : 0/0
  7935 ;;		On exit  : 0/0
  7936 ;;		Unchanged: 0/0
  7937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7938 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7939 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7940 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7941 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7942 ;;Total ram usage:       12 bytes
  7943 ;; Hardware stack levels used:    1
  7944 ;; Hardware stack levels required when called:   13
  7945 ;; This function calls:
  7946 ;;		__flash_get_status
  7947 ;;		__flash_is_busy
  7948 ;;		_spi_tx
  7949 ;; This function is called by:
  7950 ;;		_flash_sector_write
  7951 ;;		_flash_partial_write
  7952 ;; This function uses a non-reentrant model
  7953 ;;
  7954                           
  7955                           	psect	text15
  7956  011542                     __ptext15:
  7957                           	opt stack 0
  7958  011542                     __flash_compare_page_to_buffer:
  7959                           	opt stack 13
  7960                           
  7961                           ;flash.c: 178: uint8_t command[4];;flash.c: 179: uint16_t status;;flash.c: 182: while(_f
      +                          lash_is_busy());
  7962                           
  7963                           ;incstack = 0
  7964  011542  ECAC  F093         	call	__flash_is_busy	;wreg free
  7965  011546  0900               	iorlw	0
  7966  011548  A4D8               	btfss	status,2,c
  7967  01154A  D7FB               	goto	__flash_compare_page_to_buffer
  7968                           
  7969                           ;flash.c: 185: if(buffer==FLASH_BUFFER_1)
  7970  01154C  0100               	movlb	0	; () banked
  7971  01154E  5175               	movf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
  7972  011550  A4D8               	btfss	status,2,c
  7973  011552  D002               	goto	l1494
  7974                           
  7975                           ; BSR set to: 0
  7976                           ;flash.c: 186: command[0] = 0x60;
  7977  011554  0E60               	movlw	96
  7978  011556  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
  7979  011558                     l1494:
  7980                           
  7981                           ; BSR set to: 0
  7982                           ;flash.c: 187: if(buffer==FLASH_BUFFER_2)
  7983                           
  7984                           ; BSR set to: 0
  7985  011558  0575               	decf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
  7986  01155A  A4D8               	btfss	status,2,c
  7987  01155C  D002               	goto	l1495
  7988                           
  7989                           ; BSR set to: 0
  7990                           ;flash.c: 188: command[0] = 0x60;
  7991  01155E  0E60               	movlw	96
  7992  011560  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
  7993  011562                     l1495:
  7994                           
  7995                           ; BSR set to: 0
  7996                           ;flash.c: 190: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
  7997                           
  7998                           ; BSR set to: 0
  7999  011562  C073  F076         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
  8000  011566  C074  F077         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
  8001  01156A  0E07               	movlw	7
  8002  01156C  6F78               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),b
  8003  01156E                     u17575:
  8004  01156E  90D8               	bcf	status,0,c
  8005  011570  3377               	rrcf	(??__flash_compare_page_to_buffer+1)& (0+255),f,b
  8006  011572  3376               	rrcf	??__flash_compare_page_to_buffer& (0+255),f,b
  8007  011574  2F78               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,b
  8008  011576  D7FB               	goto	u17575
  8009  011578  5176               	movf	??__flash_compare_page_to_buffer& (0+255),w,b
  8010  01157A  6F7C               	movwf	(__flash_compare_page_to_buffer@command+1)& (0+255),b
  8011                           
  8012                           ; BSR set to: 0
  8013                           ;flash.c: 191: command[2] = ((unsigned char)((page<<1)&0xFF));
  8014  01157C  5173               	movf	__flash_compare_page_to_buffer@page& (0+255),w,b
  8015  01157E  2573               	addwf	__flash_compare_page_to_buffer@page& (0+255),w,b
  8016  011580  6F7D               	movwf	(__flash_compare_page_to_buffer@command+2)& (0+255),b
  8017                           
  8018                           ;flash.c: 192: command[3] = 0x00;
  8019  011582  0E00               	movlw	0
  8020  011584  6F7E               	movwf	(__flash_compare_page_to_buffer@command+3)& (0+255),b
  8021                           
  8022                           ; BSR set to: 0
  8023                           ;flash.c: 195: spi_tx(command, 4);
  8024  011586  0E7B               	movlw	low __flash_compare_page_to_buffer@command
  8025  011588  6F60               	movwf	spi_tx@data& (0+255),b
  8026  01158A  0E00               	movlw	high __flash_compare_page_to_buffer@command
  8027  01158C  6F61               	movwf	(spi_tx@data+1)& (0+255),b
  8028  01158E  0E00               	movlw	0
  8029  011590  6F63               	movwf	(spi_tx@length+1)& (0+255),b
  8030  011592  0E04               	movlw	4
  8031  011594  6F62               	movwf	spi_tx@length& (0+255),b
  8032  011596  EC1C  F08E         	call	_spi_tx	;wreg free
  8033  01159A  ECAC  F093         	call	__flash_is_busy	;wreg free
  8034  01159E  0900               	iorlw	0
  8035  0115A0  A4D8               	btfss	status,2,c
  8036  0115A2  D7FB               	goto	l1497
  8037                           
  8038                           ;flash.c: 201: status = _flash_get_status();
  8039  0115A4  EC73  F092         	call	__flash_get_status	;wreg free
  8040  0115A8  C06C  F079         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
  8041  0115AC  C06D  F07A         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
  8042                           
  8043                           ;flash.c: 204: if(status & 0b0000000001000000)
  8044  0115B0  0100               	movlb	0	; () banked
  8045  0115B2  AD79               	btfss	__flash_compare_page_to_buffer@status& (0+255),6,b
  8046  0115B4  D002               	goto	l1499
  8047                           
  8048                           ; BSR set to: 0
  8049                           ;flash.c: 205: {;flash.c: 207: return DATA_DOES_NOT_MATCH;
  8050  0115B6  0E01               	movlw	1
  8051                           
  8052                           ; BSR set to: 0
  8053                           ;flash.c: 208: }
  8054                           
  8055                           ; BSR set to: 0
  8056  0115B8  0012               	return	
  8057  0115BA                     l1499:
  8058                           
  8059                           ; BSR set to: 0
  8060                           ;flash.c: 209: else;flash.c: 210: {;flash.c: 212: return DATA_DOES_MATCH;
  8061                           
  8062                           ; BSR set to: 0
  8063  0115BA  0E00               	movlw	0
  8064                           
  8065                           ; BSR set to: 0
  8066  0115BC  0012               	return	
  8067  0115BE                     __end_of__flash_compare_page_to_buffer:
  8068                           	opt stack 0
  8069                           tblptru	equ	0xFF8
  8070                           tblptrh	equ	0xFF7
  8071                           tblptrl	equ	0xFF6
  8072                           tablat	equ	0xFF5
  8073                           postinc0	equ	0xFEE
  8074                           wreg	equ	0xFE8
  8075                           postdec1	equ	0xFE5
  8076                           fsr1h	equ	0xFE2
  8077                           fsr1l	equ	0xFE1
  8078                           indf2	equ	0xFDF
  8079                           postinc2	equ	0xFDE
  8080                           fsr2h	equ	0xFDA
  8081                           fsr2l	equ	0xFD9
  8082                           status	equ	0xFD8
  8083                           
  8084 ;; *************** function __get_root *****************
  8085 ;; Defined at:
  8086 ;;		line 1210 in file "fat16.c"
  8087 ;; Parameters:    Size  Location     Type
  8088 ;;  idx             2    0[BANK0 ] unsigned int 
  8089 ;; Auto vars:     Size  Location     Type
  8090 ;;		None
  8091 ;; Return value:  Size  Location     Type
  8092 ;;                  1    wreg      unsigned char 
  8093 ;; Registers used:
  8094 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  8095 ;; Tracked objects:
  8096 ;;		On entry : 0/0
  8097 ;;		On exit  : 0/0
  8098 ;;		Unchanged: 0/0
  8099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8100 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8102 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8103 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8104 ;;Total ram usage:        6 bytes
  8105 ;; Hardware stack levels used:    1
  8106 ;; Hardware stack levels required when called:   10
  8107 ;; This function calls:
  8108 ;;		Nothing
  8109 ;; This function is called by:
  8110 ;;		_fat_format
  8111 ;; This function uses a non-reentrant model
  8112 ;;
  8113                           
  8114                           	psect	text16
  8115  00E2C6                     __ptext16:
  8116                           	opt stack 0
  8117  00E2C6                     __get_root:
  8118                           	opt stack 17
  8119                           
  8120                           ;fat16.c: 1212: if(idx < 0x20)
  8121                           
  8122                           ; BSR set to: 0
  8123                           ;incstack = 0
  8124  00E2C6  0100               	movlb	0	; () banked
  8125  00E2C8  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  8126  00E2CA  E11D               	bnz	l18518
  8127  00E2CC  0E20               	movlw	32
  8128  00E2CE  5D60               	subwf	__get_root@idx& (0+255),w,b
  8129  00E2D0  B0D8               	btfsc	status,0,c
  8130  00E2D2  D019               	goto	l1954
  8131                           
  8132                           ; BSR set to: 0
  8133                           ;fat16.c: 1213: {;fat16.c: 1214: if(idx < 11)
  8134  00E2D4  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  8135  00E2D6  E110               	bnz	l18512
  8136  00E2D8  0E0B               	movlw	11
  8137  00E2DA  5D60               	subwf	__get_root@idx& (0+255),w,b
  8138  00E2DC  B0D8               	btfsc	status,0,c
  8139  00E2DE  D00C               	goto	l1952
  8140                           
  8141                           ; BSR set to: 0
  8142                           ;fat16.c: 1215: {;fat16.c: 1216: return "SolarChargr"[idx];
  8143  00E2E0  0EFE               	movlw	low STR_15
  8144  00E2E2  2560               	addwf	__get_root@idx& (0+255),w,b
  8145  00E2E4  6EF6               	movwf	tblptrl,c
  8146  00E2E6  0EA1               	movlw	high STR_15
  8147  00E2E8  2161               	addwfc	(__get_root@idx+1)& (0+255),w,b
  8148  00E2EA  6EF7               	movwf	tblptrh,c
  8149  00E2EC                     	if	1	;There are 3 active tblptr bytes
  8150  00E2EC  6AF8               	clrf	tblptru,c
  8151  00E2EE  0E00               	movlw	low (__mediumconst shr (0+16))
  8152  00E2F0  22F8               	addwfc	tblptru,f,c
  8153  00E2F2                     	endif
  8154  00E2F2  0008               	tblrd		*
  8155  00E2F4  50F5               	movf	tablat,w,c
  8156                           
  8157                           ; BSR set to: 0
  8158  00E2F6  0012               	return	
  8159  00E2F8                     l1952:
  8160  00E2F8                     l18512:
  8161                           
  8162                           ; BSR set to: 0
  8163                           ;fat16.c: 1217: };fat16.c: 1218: if(idx==11)
  8164  00E2F8  0E0B               	movlw	11
  8165  00E2FA  1960               	xorwf	__get_root@idx& (0+255),w,b
  8166  00E2FC  1161               	iorwf	(__get_root@idx+1)& (0+255),w,b
  8167  00E2FE  A4D8               	btfss	status,2,c
  8168  00E300  D002               	goto	l1954
  8169                           
  8170                           ; BSR set to: 0
  8171                           ;fat16.c: 1219: {;fat16.c: 1220: return 0x08;
  8172  00E302  0E08               	movlw	8
  8173                           
  8174                           ; BSR set to: 0
  8175  00E304  0012               	return	
  8176  00E306                     l1954:
  8177  00E306                     l18518:
  8178                           
  8179                           ; BSR set to: 0
  8180                           ;fat16.c: 1221: };fat16.c: 1222: };fat16.c: 1223: if(idx < 0x40)
  8181  00E306  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  8182  00E308  E103               	bnz	u17801
  8183  00E30A  0E40               	movlw	64
  8184  00E30C  5D60               	subwf	__get_root@idx& (0+255),w,b
  8185  00E30E  B0D8               	btfsc	status,0,c
  8186  00E310                     u17801:
  8187  00E310  D0A4               	goto	l1980
  8188                           
  8189                           ; BSR set to: 0
  8190                           ;fat16.c: 1224: {;fat16.c: 1225: idx -= 0x20;
  8191  00E312  0E20               	movlw	32
  8192  00E314  5F60               	subwf	__get_root@idx& (0+255),f,b
  8193  00E316  0E00               	movlw	0
  8194  00E318  5B61               	subwfb	(__get_root@idx+1)& (0+255),f,b
  8195                           
  8196                           ;fat16.c: 1226: if(idx < 0+8)
  8197  00E31A  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  8198  00E31C  E110               	bnz	l18526
  8199  00E31E  0E08               	movlw	8
  8200  00E320  5D60               	subwf	__get_root@idx& (0+255),w,b
  8201  00E322  B0D8               	btfsc	status,0,c
  8202  00E324  D00C               	goto	l1956
  8203                           
  8204                           ; BSR set to: 0
  8205                           ;fat16.c: 1227: {;fat16.c: 1228: return "FILE    "[idx];
  8206  00E326  0E0A               	movlw	low STR_16
  8207  00E328  2560               	addwf	__get_root@idx& (0+255),w,b
  8208  00E32A  6EF6               	movwf	tblptrl,c
  8209  00E32C  0EA2               	movlw	high STR_16
  8210  00E32E  2161               	addwfc	(__get_root@idx+1)& (0+255),w,b
  8211  00E330  6EF7               	movwf	tblptrh,c
  8212  00E332                     	if	1	;There are 3 active tblptr bytes
  8213  00E332  6AF8               	clrf	tblptru,c
  8214  00E334  0E00               	movlw	low (__mediumconst shr (0+16))
  8215  00E336  22F8               	addwfc	tblptru,f,c
  8216  00E338                     	endif
  8217  00E338  0008               	tblrd		*
  8218  00E33A  50F5               	movf	tablat,w,c
  8219                           
  8220                           ; BSR set to: 0
  8221  00E33C  0012               	return	
  8222  00E33E                     l1956:
  8223  00E33E                     l18526:
  8224                           
  8225                           ; BSR set to: 0
  8226                           ;fat16.c: 1229: };fat16.c: 1230: if(idx < 11)
  8227  00E33E  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  8228  00E340  E146               	bnz	l18618
  8229  00E342  0E0B               	movlw	11
  8230  00E344  5D60               	subwf	__get_root@idx& (0+255),w,b
  8231  00E346  B0D8               	btfsc	status,0,c
  8232  00E348  D042               	goto	l1958
  8233                           
  8234                           ; BSR set to: 0
  8235                           ;fat16.c: 1231: {;fat16.c: 1232: return "TXT"[idx-8];
  8236  00E34A  0EF8               	movlw	248
  8237  00E34C  6F62               	movwf	??__get_root& (0+255),b
  8238  00E34E  0EFF               	movlw	255
  8239  00E350  6F63               	movwf	(??__get_root+1)& (0+255),b
  8240  00E352  C060  F064         	movff	__get_root@idx,??__get_root+2
  8241  00E356  C061  F065         	movff	__get_root@idx+1,??__get_root+3
  8242  00E35A  5162               	movf	??__get_root& (0+255),w,b
  8243  00E35C  2764               	addwf	(??__get_root+2)& (0+255),f,b
  8244  00E35E  5163               	movf	(??__get_root+1)& (0+255),w,b
  8245  00E360  2365               	addwfc	(??__get_root+3)& (0+255),f,b
  8246  00E362  0E32               	movlw	low STR_17
  8247  00E364  2564               	addwf	(??__get_root+2)& (0+255),w,b
  8248  00E366  6EF6               	movwf	tblptrl,c
  8249  00E368  0EA2               	movlw	high STR_17
  8250  00E36A  2165               	addwfc	(??__get_root+3)& (0+255),w,b
  8251  00E36C  6EF7               	movwf	tblptrh,c
  8252  00E36E                     	if	1	;There are 3 active tblptr bytes
  8253  00E36E  6AF8               	clrf	tblptru,c
  8254  00E370  0E00               	movlw	low (__mediumconst shr (0+16))
  8255  00E372  22F8               	addwfc	tblptru,f,c
  8256  00E374                     	endif
  8257  00E374  0008               	tblrd		*
  8258  00E376  50F5               	movf	tablat,w,c
  8259                           
  8260                           ; BSR set to: 0
  8261  00E378  0012               	return	
  8262  00E37A                     
  8263                           ; BSR set to: 0
  8264                           ;fat16.c: 1237: return 0x20;
  8265                           
  8266                           ; BSR set to: 0
  8267  00E37A  0E20               	movlw	32
  8268                           
  8269                           ; BSR set to: 0
  8270  00E37C  0012               	return	
  8271  00E37E                     
  8272                           ; BSR set to: 0
  8273                           ;fat16.c: 1239: return 0x06;
  8274                           
  8275                           ; BSR set to: 0
  8276  00E37E  0E06               	movlw	6
  8277                           
  8278                           ; BSR set to: 0
  8279  00E380  0012               	return	
  8280  00E382                     
  8281                           ; BSR set to: 0
  8282                           ;fat16.c: 1241: return 0x28;
  8283                           
  8284                           ; BSR set to: 0
  8285  00E382  0E28               	movlw	40
  8286                           
  8287                           ; BSR set to: 0
  8288  00E384  0012               	return	
  8289  00E386                     
  8290                           ; BSR set to: 0
  8291                           ;fat16.c: 1243: return 0x78;
  8292                           
  8293                           ; BSR set to: 0
  8294  00E386  0E78               	movlw	120
  8295                           
  8296                           ; BSR set to: 0
  8297  00E388  0012               	return	
  8298  00E38A                     
  8299                           ; BSR set to: 0
  8300                           ;fat16.c: 1245: return 0xDE;
  8301                           
  8302                           ; BSR set to: 0
  8303  00E38A  0EDE               	movlw	222
  8304                           
  8305                           ; BSR set to: 0
  8306  00E38C  0012               	return	
  8307  00E38E                     
  8308                           ; BSR set to: 0
  8309                           ;fat16.c: 1247: return 0x38;
  8310                           
  8311                           ; BSR set to: 0
  8312  00E38E  0E38               	movlw	56
  8313                           
  8314                           ; BSR set to: 0
  8315  00E390  0012               	return	
  8316  00E392                     
  8317                           ; BSR set to: 0
  8318                           ;fat16.c: 1249: return 0x5F;
  8319                           
  8320                           ; BSR set to: 0
  8321  00E392  0E5F               	movlw	95
  8322                           
  8323                           ; BSR set to: 0
  8324  00E394  0012               	return	
  8325  00E396                     
  8326                           ; BSR set to: 0
  8327                           ;fat16.c: 1251: return 0x4B;
  8328                           
  8329                           ; BSR set to: 0
  8330  00E396  0E4B               	movlw	75
  8331                           
  8332                           ; BSR set to: 0
  8333  00E398  0012               	return	
  8334  00E39A                     
  8335                           ; BSR set to: 0
  8336                           ;fat16.c: 1253: return 0x00;
  8337                           
  8338                           ; BSR set to: 0
  8339  00E39A  0E00               	movlw	0
  8340                           
  8341                           ; BSR set to: 0
  8342  00E39C  0012               	return	
  8343  00E39E                     
  8344                           ; BSR set to: 0
  8345                           ;fat16.c: 1255: return 0x00;
  8346                           
  8347                           ; BSR set to: 0
  8348  00E39E  0E00               	movlw	0
  8349                           
  8350                           ; BSR set to: 0
  8351  00E3A0  0012               	return	
  8352  00E3A2                     
  8353                           ; BSR set to: 0
  8354                           ;fat16.c: 1257: return 0x04;
  8355                           
  8356                           ; BSR set to: 0
  8357  00E3A2  0E04               	movlw	4
  8358                           
  8359                           ; BSR set to: 0
  8360  00E3A4  0012               	return	
  8361  00E3A6                     
  8362                           ; BSR set to: 0
  8363                           ;fat16.c: 1259: return 0x77;
  8364                           
  8365                           ; BSR set to: 0
  8366  00E3A6  0E77               	movlw	119
  8367                           
  8368                           ; BSR set to: 0
  8369  00E3A8  0012               	return	
  8370  00E3AA                     
  8371                           ; BSR set to: 0
  8372                           ;fat16.c: 1261: return 0xDE;
  8373                           
  8374                           ; BSR set to: 0
  8375  00E3AA  0EDE               	movlw	222
  8376                           
  8377                           ; BSR set to: 0
  8378  00E3AC  0012               	return	
  8379  00E3AE                     
  8380                           ; BSR set to: 0
  8381                           ;fat16.c: 1263: return 0x38;
  8382                           
  8383                           ; BSR set to: 0
  8384  00E3AE  0E38               	movlw	56
  8385                           
  8386                           ; BSR set to: 0
  8387  00E3B0  0012               	return	
  8388  00E3B2                     
  8389                           ; BSR set to: 0
  8390                           ;fat16.c: 1265: return ((unsigned char)((((uint16_t)2))&0xFF));
  8391                           
  8392                           ; BSR set to: 0
  8393  00E3B2  0E02               	movlw	2
  8394                           
  8395                           ; BSR set to: 0
  8396  00E3B4  0012               	return	
  8397  00E3B6                     
  8398                           ; BSR set to: 0
  8399                           ;fat16.c: 1267: return ((unsigned char)(((((uint16_t)2))>>8)&0xFF));
  8400                           
  8401                           ; BSR set to: 0
  8402  00E3B6  0E00               	movlw	0
  8403                           
  8404                           ; BSR set to: 0
  8405  00E3B8  0012               	return	
  8406  00E3BA                     
  8407                           ; BSR set to: 0
  8408                           ;fat16.c: 1269: return ((unsigned char)((((unsigned short)((((uint32_t)12))&0xFFFF)))&0x
      +                          FF));
  8409                           
  8410                           ; BSR set to: 0
  8411  00E3BA  0E0C               	movlw	12
  8412                           
  8413                           ; BSR set to: 0
  8414  00E3BC  0012               	return	
  8415  00E3BE                     
  8416                           ; BSR set to: 0
  8417                           ;fat16.c: 1271: return ((unsigned char)(((((unsigned short)((((uint32_t)12))&0xFFFF)))>>
      +                          8)&0xFF));
  8418                           
  8419                           ; BSR set to: 0
  8420  00E3BE  0E00               	movlw	0
  8421                           
  8422                           ; BSR set to: 0
  8423  00E3C0  0012               	return	
  8424  00E3C2                     
  8425                           ; BSR set to: 0
  8426                           ;fat16.c: 1273: return ((unsigned char)((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF
      +                          )))&0xFF));
  8427                           
  8428                           ; BSR set to: 0
  8429  00E3C2  0E00               	movlw	0
  8430                           
  8431                           ; BSR set to: 0
  8432  00E3C4  0012               	return	
  8433  00E3C6                     
  8434                           ; BSR set to: 0
  8435                           ;fat16.c: 1275: return ((unsigned char)(((((unsigned short)(((((uint32_t)12))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
  8436                           
  8437                           ; BSR set to: 0
  8438  00E3C6  0E00               	movlw	0
  8439                           
  8440                           ; BSR set to: 0
  8441  00E3C8  0012               	return	
  8442  00E3CA                     
  8443                           ; BSR set to: 0
  8444                           ;fat16.c: 1277: return 0x00;
  8445                           
  8446                           ; BSR set to: 0
  8447  00E3CA  0E00               	movlw	0
  8448                           
  8449                           ; BSR set to: 0
  8450  00E3CC  0012               	return	
  8451  00E3CE                     l1958:
  8452  00E3CE                     l18618:
  8453                           
  8454                           ; BSR set to: 0
  8455  00E3CE  C060  F062         	movff	__get_root@idx,??__get_root
  8456  00E3D2  C061  F063         	movff	__get_root@idx+1,??__get_root+1
  8457                           
  8458                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8459                           ; Switch size 1, requested type "space"
  8460                           ; Number of cases is 1, Range of values is 0 to 0
  8461                           ; switch strategies available:
  8462                           ; Name         Instructions Cycles
  8463                           ; simple_byte            4     3 (average)
  8464                           ;	Chosen strategy is simple_byte
  8465  00E3D6  5163               	movf	(??__get_root+1)& (0+255),w,b
  8466  00E3D8  0A00               	xorlw	0	; case 0
  8467  00E3DA  A4D8               	btfss	status,2,c
  8468  00E3DC  D7F6               	goto	l1979
  8469                           
  8470                           ; BSR set to: 0
  8471                           ; Switch size 1, requested type "space"
  8472                           ; Number of cases is 20, Range of values is 11 to 31
  8473                           ; switch strategies available:
  8474                           ; Name         Instructions Cycles
  8475                           ; simple_byte           61    31 (average)
  8476                           ;	Chosen strategy is simple_byte
  8477  00E3DE  5162               	movf	??__get_root& (0+255),w,b
  8478  00E3E0  0A0B               	xorlw	11	; case 11
  8479  00E3E2  B4D8               	btfsc	status,2,c
  8480  00E3E4  D7CA               	goto	l1959
  8481  00E3E6  0A06               	xorlw	6	; case 13
  8482  00E3E8  B4D8               	btfsc	status,2,c
  8483  00E3EA  D7C9               	goto	l1960
  8484  00E3EC  0A03               	xorlw	3	; case 14
  8485  00E3EE  B4D8               	btfsc	status,2,c
  8486  00E3F0  D7C8               	goto	l1961
  8487  00E3F2  0A01               	xorlw	1	; case 15
  8488  00E3F4  B4D8               	btfsc	status,2,c
  8489  00E3F6  D7C7               	goto	l1962
  8490  00E3F8  0A1F               	xorlw	31	; case 16
  8491  00E3FA  B4D8               	btfsc	status,2,c
  8492  00E3FC  D7C6               	goto	l1963
  8493  00E3FE  0A01               	xorlw	1	; case 17
  8494  00E400  B4D8               	btfsc	status,2,c
  8495  00E402  D7C5               	goto	l1964
  8496  00E404  0A03               	xorlw	3	; case 18
  8497  00E406  B4D8               	btfsc	status,2,c
  8498  00E408  D7C4               	goto	l1965
  8499  00E40A  0A01               	xorlw	1	; case 19
  8500  00E40C  B4D8               	btfsc	status,2,c
  8501  00E40E  D7C3               	goto	l1966
  8502  00E410  0A07               	xorlw	7	; case 20
  8503  00E412  B4D8               	btfsc	status,2,c
  8504  00E414  D7C2               	goto	l1967
  8505  00E416  0A01               	xorlw	1	; case 21
  8506  00E418  B4D8               	btfsc	status,2,c
  8507  00E41A  D7C1               	goto	l1968
  8508  00E41C  0A03               	xorlw	3	; case 22
  8509  00E41E  B4D8               	btfsc	status,2,c
  8510  00E420  D7C0               	goto	l1969
  8511  00E422  0A01               	xorlw	1	; case 23
  8512  00E424  B4D8               	btfsc	status,2,c
  8513  00E426  D7BF               	goto	l1970
  8514  00E428  0A0F               	xorlw	15	; case 24
  8515  00E42A  B4D8               	btfsc	status,2,c
  8516  00E42C  D7BE               	goto	l1971
  8517  00E42E  0A01               	xorlw	1	; case 25
  8518  00E430  B4D8               	btfsc	status,2,c
  8519  00E432  D7BD               	goto	l1972
  8520  00E434  0A03               	xorlw	3	; case 26
  8521  00E436  B4D8               	btfsc	status,2,c
  8522  00E438  D7BC               	goto	l1973
  8523  00E43A  0A01               	xorlw	1	; case 27
  8524  00E43C  B4D8               	btfsc	status,2,c
  8525  00E43E  D7BB               	goto	l1974
  8526  00E440  0A07               	xorlw	7	; case 28
  8527  00E442  B4D8               	btfsc	status,2,c
  8528  00E444  D7BA               	goto	l1975
  8529  00E446  0A01               	xorlw	1	; case 29
  8530  00E448  B4D8               	btfsc	status,2,c
  8531  00E44A  D7B9               	goto	l1976
  8532  00E44C  0A03               	xorlw	3	; case 30
  8533  00E44E  B4D8               	btfsc	status,2,c
  8534  00E450  D7B8               	goto	l1977
  8535  00E452  0A01               	xorlw	1	; case 31
  8536  00E454  B4D8               	btfsc	status,2,c
  8537  00E456  D7B7               	goto	l1978
  8538  00E458  D7B8               	goto	l1979
  8539  00E45A                     l1980:
  8540                           
  8541                           ; BSR set to: 0
  8542                           ;fat16.c: 1279: };fat16.c: 1280: return 0X00;
  8543                           
  8544                           ; BSR set to: 0
  8545                           
  8546                           ; BSR set to: 0
  8547  00E45A  0E00               	movlw	0
  8548  00E45C  0012               	return	
  8549  00E45E                     __end_of__get_root:
  8550                           	opt stack 0
  8551                           tblptru	equ	0xFF8
  8552                           tblptrh	equ	0xFF7
  8553                           tblptrl	equ	0xFF6
  8554                           tablat	equ	0xFF5
  8555                           postinc0	equ	0xFEE
  8556                           wreg	equ	0xFE8
  8557                           postdec1	equ	0xFE5
  8558                           fsr1h	equ	0xFE2
  8559                           fsr1l	equ	0xFE1
  8560                           indf2	equ	0xFDF
  8561                           postinc2	equ	0xFDE
  8562                           fsr2h	equ	0xFDA
  8563                           fsr2l	equ	0xFD9
  8564                           status	equ	0xFD8
  8565                           
  8566 ;; *************** function __get_mbr *****************
  8567 ;; Defined at:
  8568 ;;		line 1037 in file "fat16.c"
  8569 ;; Parameters:    Size  Location     Type
  8570 ;;  idx             2    0[BANK0 ] unsigned int 
  8571 ;; Auto vars:     Size  Location     Type
  8572 ;;		None
  8573 ;; Return value:  Size  Location     Type
  8574 ;;                  1    wreg      unsigned char 
  8575 ;; Registers used:
  8576 ;;		wreg, status,2, status,0
  8577 ;; Tracked objects:
  8578 ;;		On entry : 0/0
  8579 ;;		On exit  : 0/0
  8580 ;;		Unchanged: 0/0
  8581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8582 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8584 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8585 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8586 ;;Total ram usage:        4 bytes
  8587 ;; Hardware stack levels used:    1
  8588 ;; Hardware stack levels required when called:   10
  8589 ;; This function calls:
  8590 ;;		Nothing
  8591 ;; This function is called by:
  8592 ;;		_fat_get_format_status
  8593 ;;		_fat_format
  8594 ;; This function uses a non-reentrant model
  8595 ;;
  8596                           
  8597                           	psect	text17
  8598  010456                     __ptext17:
  8599                           	opt stack 0
  8600  010456                     __get_mbr:
  8601                           	opt stack 17
  8602                           
  8603                           ;fat16.c: 1039: switch (idx)
  8604                           
  8605                           ; BSR set to: 0
  8606                           ;incstack = 0
  8607  010456  D026               	goto	l1861
  8608  010458                     
  8609                           ;fat16.c: 1042: return 0x80;
  8610  010458  0E80               	movlw	128
  8611  01045A  0012               	return	
  8612  01045C                     
  8613                           ;fat16.c: 1044: return 0;
  8614  01045C  0E00               	movlw	0
  8615  01045E  0012               	return	
  8616  010460                     
  8617                           ;fat16.c: 1046: return 2;
  8618  010460  0E02               	movlw	2
  8619  010462  0012               	return	
  8620  010464                     
  8621                           ;fat16.c: 1048: return 0;
  8622  010464  0E00               	movlw	0
  8623  010466  0012               	return	
  8624  010468                     
  8625                           ;fat16.c: 1050: return 0x04;
  8626  010468  0E04               	movlw	4
  8627  01046A  0012               	return	
  8628  01046C                     
  8629                           ;fat16.c: 1052: return 2;
  8630  01046C  0E02               	movlw	2
  8631  01046E  0012               	return	
  8632  010470                     
  8633                           ;fat16.c: 1054: return 3;
  8634  010470  0E03               	movlw	3
  8635  010472  0012               	return	
  8636  010474                     
  8637                           ;fat16.c: 1056: return 8;
  8638  010474  0E08               	movlw	8
  8639  010476  0012               	return	
  8640  010478                     
  8641                           ;fat16.c: 1058: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xF
      +                          F));
  8642  010478  0E01               	movlw	1
  8643  01047A  0012               	return	
  8644  01047C                     
  8645                           ;fat16.c: 1060: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8
      +                          )&0xFF));
  8646  01047C  0E00               	movlw	0
  8647  01047E  0012               	return	
  8648  010480                     
  8649                           ;fat16.c: 1062: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))&0xFF));
  8650  010480  0E00               	movlw	0
  8651  010482  0012               	return	
  8652  010484                     
  8653                           ;fat16.c: 1064: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  8654  010484  0E00               	movlw	0
  8655  010486  0012               	return	
  8656  010488                     
  8657                           ;fat16.c: 1066: return ((unsigned char)((((unsigned short)((((uint32_t)8191))&0xFFFF)))&
      +                          0xFF));
  8658  010488  0EFF               	movlw	255
  8659  01048A  0012               	return	
  8660  01048C                     
  8661                           ;fat16.c: 1068: return ((unsigned char)(((((unsigned short)((((uint32_t)8191))&0xFFFF)))
      +                          >>8)&0xFF));
  8662  01048C  0E1F               	movlw	31
  8663  01048E  0012               	return	
  8664  010490                     
  8665                           ;fat16.c: 1070: return ((unsigned char)((((unsigned short)(((((uint32_t)8191))>>16)&0xFF
      +                          FF)))&0xFF));
  8666  010490  0E00               	movlw	0
  8667  010492  0012               	return	
  8668  010494                     
  8669                           ;fat16.c: 1072: return ((unsigned char)(((((unsigned short)(((((uint32_t)8191))>>16)&0xF
      +                          FFF)))>>8)&0xFF));
  8670  010494  0E00               	movlw	0
  8671  010496  0012               	return	
  8672  010498                     
  8673                           ;fat16.c: 1074: return ((unsigned char)((((uint16_t)0X55AA)>>8)&0xFF));
  8674  010498  0E55               	movlw	85
  8675  01049A  0012               	return	
  8676  01049C                     
  8677                           ;fat16.c: 1076: return ((unsigned char)(((uint16_t)0X55AA)&0xFF));
  8678  01049C  0EAA               	movlw	170
  8679  01049E  0012               	return	
  8680  0104A0                     
  8681                           ;fat16.c: 1078: return 0X00;
  8682  0104A0  0E00               	movlw	0
  8683                           
  8684                           ;fat16.c: 1079: }
  8685  0104A2  0012               	return	
  8686  0104A4                     l1861:
  8687  0104A4  C060  F062         	movff	__get_mbr@idx,??__get_mbr
  8688  0104A8  C061  F063         	movff	__get_mbr@idx+1,??__get_mbr+1
  8689                           
  8690                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8691                           ; Switch size 1, requested type "space"
  8692                           ; Number of cases is 1, Range of values is 1 to 1
  8693                           ; switch strategies available:
  8694                           ; Name         Instructions Cycles
  8695                           ; simple_byte            4     3 (average)
  8696                           ;	Chosen strategy is simple_byte
  8697  0104AC  0100               	movlb	0	; () banked
  8698  0104AE  5163               	movf	(??__get_mbr+1)& (0+255),w,b
  8699  0104B0  0A01               	xorlw	1	; case 1
  8700  0104B2  A4D8               	btfss	status,2,c
  8701  0104B4  D7F5               	goto	l1881
  8702                           
  8703                           ; BSR set to: 0
  8704                           ; Switch size 1, requested type "space"
  8705                           ; Number of cases is 18, Range of values is 190 to 255
  8706                           ; switch strategies available:
  8707                           ; Name         Instructions Cycles
  8708                           ; simple_byte           55    28 (average)
  8709                           ;	Chosen strategy is simple_byte
  8710  0104B6  5162               	movf	??__get_mbr& (0+255),w,b
  8711  0104B8  0ABE               	xorlw	190	; case 190
  8712  0104BA  B4D8               	btfsc	status,2,c
  8713  0104BC  D7CD               	goto	l1862
  8714  0104BE  0A01               	xorlw	1	; case 191
  8715  0104C0  B4D8               	btfsc	status,2,c
  8716  0104C2  D7CC               	goto	l1864
  8717  0104C4  0A7F               	xorlw	127	; case 192
  8718  0104C6  B4D8               	btfsc	status,2,c
  8719  0104C8  D7CB               	goto	l1865
  8720  0104CA  0A01               	xorlw	1	; case 193
  8721  0104CC  B4D8               	btfsc	status,2,c
  8722  0104CE  D7CA               	goto	l1866
  8723  0104D0  0A03               	xorlw	3	; case 194
  8724  0104D2  B4D8               	btfsc	status,2,c
  8725  0104D4  D7C9               	goto	l1867
  8726  0104D6  0A01               	xorlw	1	; case 195
  8727  0104D8  B4D8               	btfsc	status,2,c
  8728  0104DA  D7C8               	goto	l1868
  8729  0104DC  0A07               	xorlw	7	; case 196
  8730  0104DE  B4D8               	btfsc	status,2,c
  8731  0104E0  D7C7               	goto	l1869
  8732  0104E2  0A01               	xorlw	1	; case 197
  8733  0104E4  B4D8               	btfsc	status,2,c
  8734  0104E6  D7C6               	goto	l1870
  8735  0104E8  0A03               	xorlw	3	; case 198
  8736  0104EA  B4D8               	btfsc	status,2,c
  8737  0104EC  D7C5               	goto	l1871
  8738  0104EE  0A01               	xorlw	1	; case 199
  8739  0104F0  B4D8               	btfsc	status,2,c
  8740  0104F2  D7C4               	goto	l1872
  8741  0104F4  0A0F               	xorlw	15	; case 200
  8742  0104F6  B4D8               	btfsc	status,2,c
  8743  0104F8  D7C3               	goto	l1873
  8744  0104FA  0A01               	xorlw	1	; case 201
  8745  0104FC  B4D8               	btfsc	status,2,c
  8746  0104FE  D7C2               	goto	l1874
  8747  010500  0A03               	xorlw	3	; case 202
  8748  010502  B4D8               	btfsc	status,2,c
  8749  010504  D7C1               	goto	l1875
  8750  010506  0A01               	xorlw	1	; case 203
  8751  010508  B4D8               	btfsc	status,2,c
  8752  01050A  D7C0               	goto	l1876
  8753  01050C  0A07               	xorlw	7	; case 204
  8754  01050E  B4D8               	btfsc	status,2,c
  8755  010510  D7BF               	goto	l1877
  8756  010512  0A01               	xorlw	1	; case 205
  8757  010514  B4D8               	btfsc	status,2,c
  8758  010516  D7BE               	goto	l1878
  8759  010518  0A33               	xorlw	51	; case 254
  8760  01051A  B4D8               	btfsc	status,2,c
  8761  01051C  D7BD               	goto	l1879
  8762  01051E  0A01               	xorlw	1	; case 255
  8763  010520  B4D8               	btfsc	status,2,c
  8764  010522  D7BC               	goto	l1880
  8765  010524  D7BD               	goto	l1881
  8766  010526                     __end_of__get_mbr:
  8767                           	opt stack 0
  8768                           tblptru	equ	0xFF8
  8769                           tblptrh	equ	0xFF7
  8770                           tblptrl	equ	0xFF6
  8771                           tablat	equ	0xFF5
  8772                           postinc0	equ	0xFEE
  8773                           wreg	equ	0xFE8
  8774                           postdec1	equ	0xFE5
  8775                           fsr1h	equ	0xFE2
  8776                           fsr1l	equ	0xFE1
  8777                           indf2	equ	0xFDF
  8778                           postinc2	equ	0xFDE
  8779                           fsr2h	equ	0xFDA
  8780                           fsr2l	equ	0xFD9
  8781                           status	equ	0xFD8
  8782                           
  8783 ;; *************** function __get_fbr *****************
  8784 ;; Defined at:
  8785 ;;		line 1082 in file "fat16.c"
  8786 ;; Parameters:    Size  Location     Type
  8787 ;;  idx             2    0[BANK0 ] unsigned int 
  8788 ;; Auto vars:     Size  Location     Type
  8789 ;;		None
  8790 ;; Return value:  Size  Location     Type
  8791 ;;                  1    wreg      unsigned char 
  8792 ;; Registers used:
  8793 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  8794 ;; Tracked objects:
  8795 ;;		On entry : 0/0
  8796 ;;		On exit  : 0/0
  8797 ;;		Unchanged: 0/0
  8798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8799 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8801 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8802 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8803 ;;Total ram usage:        4 bytes
  8804 ;; Hardware stack levels used:    1
  8805 ;; Hardware stack levels required when called:   10
  8806 ;; This function calls:
  8807 ;;		Nothing
  8808 ;; This function is called by:
  8809 ;;		_fat_get_format_status
  8810 ;;		_fat_format
  8811 ;; This function uses a non-reentrant model
  8812 ;;
  8813                           
  8814                           	psect	text18
  8815  00D422                     __ptext18:
  8816                           	opt stack 0
  8817  00D422                     __get_fbr:
  8818                           	opt stack 17
  8819                           
  8820                           ;fat16.c: 1084: switch (idx)
  8821                           
  8822                           ;incstack = 0
  8823  00D422  D098               	goto	l1885
  8824  00D424                     
  8825                           ;fat16.c: 1087: return 0xEB;
  8826  00D424  0EEB               	movlw	235
  8827  00D426  0012               	return	
  8828  00D428                     
  8829                           ;fat16.c: 1089: return 0x3C;
  8830  00D428  0E3C               	movlw	60
  8831  00D42A  0012               	return	
  8832  00D42C                     
  8833                           ;fat16.c: 1091: return 0x90;
  8834  00D42C  0E90               	movlw	144
  8835  00D42E  0012               	return	
  8836  00D430                     
  8837                           ;fat16.c: 1093: return "MSDOS5.0"[0];
  8838  00D430  0E13               	movlw	low STR_7
  8839  00D432  6EF6               	movwf	tblptrl,c
  8840  00D434                     	if	1	;There is more than 1 active tblptr byte
  8841  00D434  0EA2               	movlw	high STR_7
  8842  00D436  6EF7               	movwf	tblptrh,c
  8843  00D438                     	endif
  8844  00D438                     	if	1	;There are 3 active tblptr bytes
  8845  00D438  0E00               	movlw	low (STR_7 shr (0+16))
  8846  00D43A  6EF8               	movwf	tblptru,c
  8847  00D43C                     	endif
  8848  00D43C  0008               	tblrd		*
  8849  00D43E  50F5               	movf	tablat,w,c
  8850  00D440  0012               	return	
  8851  00D442                     
  8852                           ;fat16.c: 1095: return "MSDOS5.0"[1];
  8853  00D442  0E14               	movlw	low (STR_7+1)
  8854  00D444  6EF6               	movwf	tblptrl,c
  8855  00D446  0EA2               	movlw	high (STR_7+1)
  8856  00D448  6EF7               	movwf	tblptrh,c
  8857  00D44A                     	if	0	;tblptru may be non-zero
  8858  00D44A                     	endif
  8859  00D44A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8860  00D44A  0E00               	movlw	low (__mediumconst shr (0+16))
  8861  00D44C  6EF8               	movwf	tblptru,c
  8862  00D44E                     	endif
  8863  00D44E  0008               	tblrd		*
  8864  00D450  50F5               	movf	tablat,w,c
  8865  00D452  0012               	return	
  8866  00D454                     
  8867                           ;fat16.c: 1097: return "MSDOS5.0"[2];
  8868  00D454  0E15               	movlw	low (STR_7+2)
  8869  00D456  6EF6               	movwf	tblptrl,c
  8870  00D458  0EA2               	movlw	high (STR_7+2)
  8871  00D45A  6EF7               	movwf	tblptrh,c
  8872  00D45C                     	if	0	;tblptru may be non-zero
  8873  00D45C                     	endif
  8874  00D45C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8875  00D45C  0E00               	movlw	low (__mediumconst shr (0+16))
  8876  00D45E  6EF8               	movwf	tblptru,c
  8877  00D460                     	endif
  8878  00D460  0008               	tblrd		*
  8879  00D462  50F5               	movf	tablat,w,c
  8880  00D464  0012               	return	
  8881  00D466                     
  8882                           ;fat16.c: 1099: return "MSDOS5.0"[3];
  8883  00D466  0E16               	movlw	low (STR_7+3)
  8884  00D468  6EF6               	movwf	tblptrl,c
  8885  00D46A  0EA2               	movlw	high (STR_7+3)
  8886  00D46C  6EF7               	movwf	tblptrh,c
  8887  00D46E                     	if	0	;tblptru may be non-zero
  8888  00D46E                     	endif
  8889  00D46E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8890  00D46E  0E00               	movlw	low (__mediumconst shr (0+16))
  8891  00D470  6EF8               	movwf	tblptru,c
  8892  00D472                     	endif
  8893  00D472  0008               	tblrd		*
  8894  00D474  50F5               	movf	tablat,w,c
  8895  00D476  0012               	return	
  8896  00D478                     
  8897                           ;fat16.c: 1101: return "MSDOS5.0"[4];
  8898  00D478  0E17               	movlw	low (STR_7+4)
  8899  00D47A  6EF6               	movwf	tblptrl,c
  8900  00D47C  0EA2               	movlw	high (STR_7+4)
  8901  00D47E  6EF7               	movwf	tblptrh,c
  8902  00D480                     	if	0	;tblptru may be non-zero
  8903  00D480                     	endif
  8904  00D480                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8905  00D480  0E00               	movlw	low (__mediumconst shr (0+16))
  8906  00D482  6EF8               	movwf	tblptru,c
  8907  00D484                     	endif
  8908  00D484  0008               	tblrd		*
  8909  00D486  50F5               	movf	tablat,w,c
  8910  00D488  0012               	return	
  8911  00D48A                     
  8912                           ;fat16.c: 1103: return "MSDOS5.0"[5];
  8913  00D48A  0E18               	movlw	low (STR_7+5)
  8914  00D48C  6EF6               	movwf	tblptrl,c
  8915  00D48E  0EA2               	movlw	high (STR_7+5)
  8916  00D490  6EF7               	movwf	tblptrh,c
  8917  00D492                     	if	0	;tblptru may be non-zero
  8918  00D492                     	endif
  8919  00D492                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8920  00D492  0E00               	movlw	low (__mediumconst shr (0+16))
  8921  00D494  6EF8               	movwf	tblptru,c
  8922  00D496                     	endif
  8923  00D496  0008               	tblrd		*
  8924  00D498  50F5               	movf	tablat,w,c
  8925  00D49A  0012               	return	
  8926  00D49C                     
  8927                           ;fat16.c: 1105: return "MSDOS5.0"[6];
  8928  00D49C  0E19               	movlw	low (STR_7+6)
  8929  00D49E  6EF6               	movwf	tblptrl,c
  8930  00D4A0  0EA2               	movlw	high (STR_7+6)
  8931  00D4A2  6EF7               	movwf	tblptrh,c
  8932  00D4A4                     	if	0	;tblptru may be non-zero
  8933  00D4A4                     	endif
  8934  00D4A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8935  00D4A4  0E00               	movlw	low (__mediumconst shr (0+16))
  8936  00D4A6  6EF8               	movwf	tblptru,c
  8937  00D4A8                     	endif
  8938  00D4A8  0008               	tblrd		*
  8939  00D4AA  50F5               	movf	tablat,w,c
  8940  00D4AC  0012               	return	
  8941  00D4AE                     
  8942                           ;fat16.c: 1107: return "MSDOS5.0"[7];
  8943  00D4AE  0E1A               	movlw	low (STR_7+7)
  8944  00D4B0  6EF6               	movwf	tblptrl,c
  8945  00D4B2  0EA2               	movlw	high (STR_7+7)
  8946  00D4B4  6EF7               	movwf	tblptrh,c
  8947  00D4B6                     	if	0	;tblptru may be non-zero
  8948  00D4B6                     	endif
  8949  00D4B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8950  00D4B6  0E00               	movlw	low (__mediumconst shr (0+16))
  8951  00D4B8  6EF8               	movwf	tblptru,c
  8952  00D4BA                     	endif
  8953  00D4BA  0008               	tblrd		*
  8954  00D4BC  50F5               	movf	tablat,w,c
  8955  00D4BE  0012               	return	
  8956  00D4C0                     
  8957                           ;fat16.c: 1109: return ((unsigned char)((((uint16_t)512))&0xFF));
  8958  00D4C0  0E00               	movlw	0
  8959  00D4C2  0012               	return	
  8960  00D4C4                     
  8961                           ;fat16.c: 1111: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
  8962  00D4C4  0E02               	movlw	2
  8963  00D4C6  0012               	return	
  8964  00D4C8                     
  8965                           ;fat16.c: 1113: return 1;
  8966  00D4C8  0E01               	movlw	1
  8967  00D4CA  0012               	return	
  8968  00D4CC                     
  8969                           ;fat16.c: 1115: return ((unsigned char)((((uint16_t)1))&0xFF));
  8970  00D4CC  0E01               	movlw	1
  8971  00D4CE  0012               	return	
  8972  00D4D0                     
  8973                           ;fat16.c: 1117: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
  8974  00D4D0  0E00               	movlw	0
  8975  00D4D2  0012               	return	
  8976  00D4D4                     
  8977                           ;fat16.c: 1119: return 1;
  8978  00D4D4  0E01               	movlw	1
  8979  00D4D6  0012               	return	
  8980  00D4D8                     
  8981                           ;fat16.c: 1121: return ((unsigned char)((((uint16_t)64))&0xFF));
  8982  00D4D8  0E40               	movlw	64
  8983  00D4DA  0012               	return	
  8984  00D4DC                     
  8985                           ;fat16.c: 1123: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
  8986  00D4DC  0E00               	movlw	0
  8987  00D4DE  0012               	return	
  8988  00D4E0                     
  8989                           ;fat16.c: 1125: return ((unsigned char)((((uint16_t)8191))&0xFF));
  8990  00D4E0  0EFF               	movlw	255
  8991  00D4E2  0012               	return	
  8992  00D4E4                     
  8993                           ;fat16.c: 1127: return ((unsigned char)(((((uint16_t)8191))>>8)&0xFF));
  8994  00D4E4  0E1F               	movlw	31
  8995  00D4E6  0012               	return	
  8996  00D4E8                     
  8997                           ;fat16.c: 1129: return 0XF8;
  8998  00D4E8  0EF8               	movlw	248
  8999  00D4EA  0012               	return	
  9000  00D4EC                     
  9001                           ;fat16.c: 1131: return ((unsigned char)((((uint16_t)32))&0xFF));
  9002  00D4EC  0E20               	movlw	32
  9003  00D4EE  0012               	return	
  9004  00D4F0                     
  9005                           ;fat16.c: 1133: return ((unsigned char)(((((uint16_t)32))>>8)&0xFF));
  9006  00D4F0  0E00               	movlw	0
  9007  00D4F2  0012               	return	
  9008  00D4F4                     
  9009                           ;fat16.c: 1135: return ((unsigned char)((((uint16_t)63))&0xFF));
  9010  00D4F4  0E3F               	movlw	63
  9011  00D4F6  0012               	return	
  9012  00D4F8                     
  9013                           ;fat16.c: 1137: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
  9014  00D4F8  0E00               	movlw	0
  9015  00D4FA  0012               	return	
  9016  00D4FC                     
  9017                           ;fat16.c: 1139: return ((unsigned char)((((uint16_t)16))&0xFF));
  9018  00D4FC  0E10               	movlw	16
  9019  00D4FE  0012               	return	
  9020  00D500                     
  9021                           ;fat16.c: 1141: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
  9022  00D500  0E00               	movlw	0
  9023  00D502  0012               	return	
  9024  00D504                     
  9025                           ;fat16.c: 1143: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xF
      +                          F));
  9026  00D504  0E00               	movlw	0
  9027  00D506  0012               	return	
  9028  00D508                     
  9029                           ;fat16.c: 1145: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8
      +                          )&0xFF));
  9030  00D508  0E00               	movlw	0
  9031  00D50A  0012               	return	
  9032  00D50C                     
  9033                           ;fat16.c: 1147: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))&0xFF));
  9034  00D50C  0E00               	movlw	0
  9035  00D50E  0012               	return	
  9036  00D510                     
  9037                           ;fat16.c: 1149: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  9038  00D510  0E00               	movlw	0
  9039  00D512  0012               	return	
  9040  00D514                     
  9041                           ;fat16.c: 1151: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
  9042  00D514  0E01               	movlw	1
  9043  00D516  0012               	return	
  9044  00D518                     
  9045                           ;fat16.c: 1153: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
  9046  00D518  0E00               	movlw	0
  9047  00D51A  0012               	return	
  9048  00D51C                     
  9049                           ;fat16.c: 1155: return ((unsigned char)((((unsigned short)((((uint32_t)34))&0xFFFF)))&0x
      +                          FF));
  9050  00D51C  0E22               	movlw	34
  9051  00D51E  0012               	return	
  9052  00D520                     
  9053                           ;fat16.c: 1157: return ((unsigned char)(((((unsigned short)((((uint32_t)34))&0xFFFF)))>>
      +                          8)&0xFF));
  9054  00D520  0E00               	movlw	0
  9055  00D522  0012               	return	
  9056  00D524                     
  9057                           ;fat16.c: 1161: return ((unsigned char)(((((unsigned short)(((((uint32_t)34))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
  9058                           
  9059                           ;fat16.c: 1160: case 0x2F:
  9060  00D524  0E00               	movlw	0
  9061  00D526  0012               	return	
  9062  00D528                     
  9063                           ;fat16.c: 1163: return 'F';
  9064  00D528  0E46               	movlw	70
  9065  00D52A  0012               	return	
  9066  00D52C                     
  9067                           ;fat16.c: 1165: return 'A';
  9068  00D52C  0E41               	movlw	65
  9069  00D52E  0012               	return	
  9070  00D530                     
  9071                           ;fat16.c: 1167: return 'T';
  9072  00D530  0E54               	movlw	84
  9073  00D532  0012               	return	
  9074  00D534                     
  9075                           ;fat16.c: 1169: return '1';
  9076  00D534  0E31               	movlw	49
  9077  00D536  0012               	return	
  9078  00D538                     
  9079                           ;fat16.c: 1171: return '6';
  9080  00D538  0E36               	movlw	54
  9081  00D53A  0012               	return	
  9082  00D53C                     
  9083                           ;fat16.c: 1173: return ' ';
  9084  00D53C  0E20               	movlw	32
  9085  00D53E  0012               	return	
  9086  00D540                     
  9087                           ;fat16.c: 1175: return ' ';
  9088  00D540  0E20               	movlw	32
  9089  00D542  0012               	return	
  9090  00D544                     
  9091                           ;fat16.c: 1177: return ' ';
  9092  00D544  0E20               	movlw	32
  9093  00D546  0012               	return	
  9094  00D548                     
  9095                           ;fat16.c: 1179: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
  9096  00D548  0E55               	movlw	85
  9097  00D54A  0012               	return	
  9098  00D54C                     
  9099                           ;fat16.c: 1181: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
  9100  00D54C  0EAA               	movlw	170
  9101  00D54E  0012               	return	
  9102  00D550                     
  9103                           ;fat16.c: 1183: return 0X00;
  9104  00D550  0E00               	movlw	0
  9105                           
  9106                           ;fat16.c: 1184: }
  9107  00D552  0012               	return	
  9108  00D554                     l1885:
  9109  00D554  C060  F062         	movff	__get_fbr@idx,??__get_fbr
  9110  00D558  C061  F063         	movff	__get_fbr@idx+1,??__get_fbr+1
  9111                           
  9112                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  9113                           ; Switch size 1, requested type "space"
  9114                           ; Number of cases is 2, Range of values is 0 to 1
  9115                           ; switch strategies available:
  9116                           ; Name         Instructions Cycles
  9117                           ; simple_byte            7     4 (average)
  9118                           ;	Chosen strategy is simple_byte
  9119  00D55C  0100               	movlb	0	; () banked
  9120  00D55E  5163               	movf	(??__get_fbr+1)& (0+255),w,b
  9121  00D560  0A00               	xorlw	0	; case 0
  9122  00D562  B4D8               	btfsc	status,2,c
  9123  00D564  D004               	goto	l22670
  9124  00D566  0A01               	xorlw	1	; case 1
  9125  00D568  B4D8               	btfsc	status,2,c
  9126  00D56A  D08D               	goto	l22672
  9127  00D56C  D7F1               	goto	l1935
  9128  00D56E                     l22670:
  9129                           
  9130                           ; BSR set to: 0
  9131                           ; Switch size 1, requested type "space"
  9132                           ; Number of cases is 46, Range of values is 0 to 61
  9133                           ; switch strategies available:
  9134                           ; Name         Instructions Cycles
  9135                           ; simple_byte          139    70 (average)
  9136                           ;	Chosen strategy is simple_byte
  9137  00D56E  5162               	movf	??__get_fbr& (0+255),w,b
  9138  00D570  0A00               	xorlw	0	; case 0
  9139  00D572  B4D8               	btfsc	status,2,c
  9140  00D574  D757               	goto	l1886
  9141  00D576  0A01               	xorlw	1	; case 1
  9142  00D578  B4D8               	btfsc	status,2,c
  9143  00D57A  D756               	goto	l1888
  9144  00D57C  0A03               	xorlw	3	; case 2
  9145  00D57E  B4D8               	btfsc	status,2,c
  9146  00D580  D755               	goto	l1889
  9147  00D582  0A01               	xorlw	1	; case 3
  9148  00D584  B4D8               	btfsc	status,2,c
  9149  00D586  D754               	goto	l1890
  9150  00D588  0A07               	xorlw	7	; case 4
  9151  00D58A  B4D8               	btfsc	status,2,c
  9152  00D58C  D75A               	goto	l1891
  9153  00D58E  0A01               	xorlw	1	; case 5
  9154  00D590  B4D8               	btfsc	status,2,c
  9155  00D592  D760               	goto	l1892
  9156  00D594  0A03               	xorlw	3	; case 6
  9157  00D596  B4D8               	btfsc	status,2,c
  9158  00D598  D766               	goto	l1893
  9159  00D59A  0A01               	xorlw	1	; case 7
  9160  00D59C  B4D8               	btfsc	status,2,c
  9161  00D59E  D76C               	goto	l1894
  9162  00D5A0  0A0F               	xorlw	15	; case 8
  9163  00D5A2  B4D8               	btfsc	status,2,c
  9164  00D5A4  D772               	goto	l1895
  9165  00D5A6  0A01               	xorlw	1	; case 9
  9166  00D5A8  B4D8               	btfsc	status,2,c
  9167  00D5AA  D778               	goto	l1896
  9168  00D5AC  0A03               	xorlw	3	; case 10
  9169  00D5AE  B4D8               	btfsc	status,2,c
  9170  00D5B0  D77E               	goto	l1897
  9171  00D5B2  0A01               	xorlw	1	; case 11
  9172  00D5B4  B4D8               	btfsc	status,2,c
  9173  00D5B6  D784               	goto	l1898
  9174  00D5B8  0A07               	xorlw	7	; case 12
  9175  00D5BA  B4D8               	btfsc	status,2,c
  9176  00D5BC  D783               	goto	l1899
  9177  00D5BE  0A01               	xorlw	1	; case 13
  9178  00D5C0  B4D8               	btfsc	status,2,c
  9179  00D5C2  D782               	goto	l1900
  9180  00D5C4  0A03               	xorlw	3	; case 14
  9181  00D5C6  B4D8               	btfsc	status,2,c
  9182  00D5C8  D781               	goto	l1901
  9183  00D5CA  0A01               	xorlw	1	; case 15
  9184  00D5CC  B4D8               	btfsc	status,2,c
  9185  00D5CE  D780               	goto	l1902
  9186  00D5D0  0A1F               	xorlw	31	; case 16
  9187  00D5D2  B4D8               	btfsc	status,2,c
  9188  00D5D4  D77F               	goto	l1903
  9189  00D5D6  0A01               	xorlw	1	; case 17
  9190  00D5D8  B4D8               	btfsc	status,2,c
  9191  00D5DA  D77E               	goto	l1904
  9192  00D5DC  0A03               	xorlw	3	; case 18
  9193  00D5DE  B4D8               	btfsc	status,2,c
  9194  00D5E0  D77D               	goto	l1905
  9195  00D5E2  0A01               	xorlw	1	; case 19
  9196  00D5E4  B4D8               	btfsc	status,2,c
  9197  00D5E6  D77C               	goto	l1906
  9198  00D5E8  0A07               	xorlw	7	; case 20
  9199  00D5EA  B4D8               	btfsc	status,2,c
  9200  00D5EC  D77B               	goto	l1907
  9201  00D5EE  0A01               	xorlw	1	; case 21
  9202  00D5F0  B4D8               	btfsc	status,2,c
  9203  00D5F2  D77A               	goto	l1908
  9204  00D5F4  0A03               	xorlw	3	; case 22
  9205  00D5F6  B4D8               	btfsc	status,2,c
  9206  00D5F8  D779               	goto	l1909
  9207  00D5FA  0A01               	xorlw	1	; case 23
  9208  00D5FC  B4D8               	btfsc	status,2,c
  9209  00D5FE  D778               	goto	l1910
  9210  00D600  0A0F               	xorlw	15	; case 24
  9211  00D602  B4D8               	btfsc	status,2,c
  9212  00D604  D777               	goto	l1911
  9213  00D606  0A01               	xorlw	1	; case 25
  9214  00D608  B4D8               	btfsc	status,2,c
  9215  00D60A  D776               	goto	l1912
  9216  00D60C  0A03               	xorlw	3	; case 26
  9217  00D60E  B4D8               	btfsc	status,2,c
  9218  00D610  D775               	goto	l1913
  9219  00D612  0A01               	xorlw	1	; case 27
  9220  00D614  B4D8               	btfsc	status,2,c
  9221  00D616  D774               	goto	l1914
  9222  00D618  0A07               	xorlw	7	; case 28
  9223  00D61A  B4D8               	btfsc	status,2,c
  9224  00D61C  D773               	goto	l1915
  9225  00D61E  0A01               	xorlw	1	; case 29
  9226  00D620  B4D8               	btfsc	status,2,c
  9227  00D622  D772               	goto	l1916
  9228  00D624  0A03               	xorlw	3	; case 30
  9229  00D626  B4D8               	btfsc	status,2,c
  9230  00D628  D771               	goto	l1917
  9231  00D62A  0A01               	xorlw	1	; case 31
  9232  00D62C  B4D8               	btfsc	status,2,c
  9233  00D62E  D770               	goto	l1918
  9234  00D630  0A37               	xorlw	55	; case 40
  9235  00D632  B4D8               	btfsc	status,2,c
  9236  00D634  D76F               	goto	l1919
  9237  00D636  0A01               	xorlw	1	; case 41
  9238  00D638  B4D8               	btfsc	status,2,c
  9239  00D63A  D76E               	goto	l1920
  9240  00D63C  0A05               	xorlw	5	; case 44
  9241  00D63E  B4D8               	btfsc	status,2,c
  9242  00D640  D76D               	goto	l1921
  9243  00D642  0A01               	xorlw	1	; case 45
  9244  00D644  B4D8               	btfsc	status,2,c
  9245  00D646  D76C               	goto	l1922
  9246  00D648  0A03               	xorlw	3	; case 46
  9247  00D64A  B4D8               	btfsc	status,2,c
  9248  00D64C  D76B               	goto	l1923
  9249  00D64E  0A01               	xorlw	1	; case 47
  9250  00D650  B4D8               	btfsc	status,2,c
  9251  00D652  D768               	goto	l1923
  9252  00D654  0A19               	xorlw	25	; case 54
  9253  00D656  B4D8               	btfsc	status,2,c
  9254  00D658  D767               	goto	l1925
  9255  00D65A  0A01               	xorlw	1	; case 55
  9256  00D65C  B4D8               	btfsc	status,2,c
  9257  00D65E  D766               	goto	l1926
  9258  00D660  0A0F               	xorlw	15	; case 56
  9259  00D662  B4D8               	btfsc	status,2,c
  9260  00D664  D765               	goto	l1927
  9261  00D666  0A01               	xorlw	1	; case 57
  9262  00D668  B4D8               	btfsc	status,2,c
  9263  00D66A  D764               	goto	l1928
  9264  00D66C  0A03               	xorlw	3	; case 58
  9265  00D66E  B4D8               	btfsc	status,2,c
  9266  00D670  D763               	goto	l1929
  9267  00D672  0A01               	xorlw	1	; case 59
  9268  00D674  B4D8               	btfsc	status,2,c
  9269  00D676  D762               	goto	l1930
  9270  00D678  0A07               	xorlw	7	; case 60
  9271  00D67A  B4D8               	btfsc	status,2,c
  9272  00D67C  D761               	goto	l1931
  9273  00D67E  0A01               	xorlw	1	; case 61
  9274  00D680  B4D8               	btfsc	status,2,c
  9275  00D682  D760               	goto	l1932
  9276  00D684  D765               	goto	l1935
  9277  00D686                     l22672:
  9278                           
  9279                           ; BSR set to: 0
  9280                           ; Switch size 1, requested type "space"
  9281                           ; Number of cases is 2, Range of values is 254 to 255
  9282                           ; switch strategies available:
  9283                           ; Name         Instructions Cycles
  9284                           ; simple_byte            7     4 (average)
  9285                           ;	Chosen strategy is simple_byte
  9286  00D686  5162               	movf	??__get_fbr& (0+255),w,b
  9287  00D688  0AFE               	xorlw	254	; case 254
  9288  00D68A  B4D8               	btfsc	status,2,c
  9289  00D68C  D75D               	goto	l1933
  9290  00D68E  0A01               	xorlw	1	; case 255
  9291  00D690  B4D8               	btfsc	status,2,c
  9292  00D692  D75C               	goto	l1934
  9293  00D694  D75D               	goto	l1935
  9294  00D696                     __end_of__get_fbr:
  9295                           	opt stack 0
  9296                           tblptru	equ	0xFF8
  9297                           tblptrh	equ	0xFF7
  9298                           tblptrl	equ	0xFF6
  9299                           tablat	equ	0xFF5
  9300                           postinc0	equ	0xFEE
  9301                           wreg	equ	0xFE8
  9302                           postdec1	equ	0xFE5
  9303                           fsr1h	equ	0xFE2
  9304                           fsr1l	equ	0xFE1
  9305                           indf2	equ	0xFDF
  9306                           postinc2	equ	0xFDE
  9307                           fsr2h	equ	0xFDA
  9308                           fsr2l	equ	0xFD9
  9309                           status	equ	0xFD8
  9310                           
  9311 ;; *************** function __get_fat *****************
  9312 ;; Defined at:
  9313 ;;		line 1187 in file "fat16.c"
  9314 ;; Parameters:    Size  Location     Type
  9315 ;;  idx             2    0[BANK0 ] unsigned int 
  9316 ;; Auto vars:     Size  Location     Type
  9317 ;;		None
  9318 ;; Return value:  Size  Location     Type
  9319 ;;                  1    wreg      unsigned char 
  9320 ;; Registers used:
  9321 ;;		wreg, status,2, status,0
  9322 ;; Tracked objects:
  9323 ;;		On entry : 0/0
  9324 ;;		On exit  : 0/0
  9325 ;;		Unchanged: 0/0
  9326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9327 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9329 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9330 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9331 ;;Total ram usage:        4 bytes
  9332 ;; Hardware stack levels used:    1
  9333 ;; Hardware stack levels required when called:   10
  9334 ;; This function calls:
  9335 ;;		Nothing
  9336 ;; This function is called by:
  9337 ;;		_fat_format
  9338 ;; This function uses a non-reentrant model
  9339 ;;
  9340                           
  9341                           	psect	text19
  9342  011C92                     __ptext19:
  9343                           	opt stack 0
  9344  011C92                     __get_fat:
  9345                           	opt stack 17
  9346                           
  9347                           ;fat16.c: 1189: switch (idx)
  9348                           
  9349                           ;incstack = 0
  9350  011C92  D00E               	goto	l1939
  9351  011C94                     
  9352                           ;fat16.c: 1193: return 0xF8;
  9353  011C94  0EF8               	movlw	248
  9354  011C96  0012               	return	
  9355  011C98                     
  9356                           ;fat16.c: 1195: return 0xFF;
  9357  011C98  0EFF               	movlw	255
  9358  011C9A  0012               	return	
  9359  011C9C                     
  9360                           ;fat16.c: 1197: return 0xFF;
  9361  011C9C  0EFF               	movlw	255
  9362  011C9E  0012               	return	
  9363  011CA0                     
  9364                           ;fat16.c: 1199: return 0xFF;
  9365  011CA0  0EFF               	movlw	255
  9366  011CA2  0012               	return	
  9367  011CA4                     
  9368                           ;fat16.c: 1202: return 0xFF;
  9369  011CA4  0EFF               	movlw	255
  9370  011CA6  0012               	return	
  9371  011CA8                     
  9372                           ;fat16.c: 1204: return 0xFF;
  9373  011CA8  0EFF               	movlw	255
  9374  011CAA  0012               	return	
  9375  011CAC                     
  9376                           ;fat16.c: 1206: return 0X00;
  9377  011CAC  0E00               	movlw	0
  9378                           
  9379                           ;fat16.c: 1207: }
  9380  011CAE  0012               	return	
  9381  011CB0                     l1939:
  9382  011CB0  C060  F062         	movff	__get_fat@idx,??__get_fat
  9383  011CB4  C061  F063         	movff	__get_fat@idx+1,??__get_fat+1
  9384                           
  9385                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9386                           ; Switch size 1, requested type "space"
  9387                           ; Number of cases is 1, Range of values is 0 to 0
  9388                           ; switch strategies available:
  9389                           ; Name         Instructions Cycles
  9390                           ; simple_byte            4     3 (average)
  9391                           ;	Chosen strategy is simple_byte
  9392  011CB8  0100               	movlb	0	; () banked
  9393  011CBA  5163               	movf	(??__get_fat+1)& (0+255),w,b
  9394  011CBC  0A00               	xorlw	0	; case 0
  9395  011CBE  A4D8               	btfss	status,2,c
  9396  011CC0  D7F5               	goto	l1947
  9397                           
  9398                           ; BSR set to: 0
  9399                           ; Switch size 1, requested type "space"
  9400                           ; Number of cases is 6, Range of values is 0 to 5
  9401                           ; switch strategies available:
  9402                           ; Name         Instructions Cycles
  9403                           ; simple_byte           19    10 (average)
  9404                           ;	Chosen strategy is simple_byte
  9405  011CC2  5162               	movf	??__get_fat& (0+255),w,b
  9406  011CC4  0A00               	xorlw	0	; case 0
  9407  011CC6  B4D8               	btfsc	status,2,c
  9408  011CC8  D7E5               	goto	l1940
  9409  011CCA  0A01               	xorlw	1	; case 1
  9410  011CCC  B4D8               	btfsc	status,2,c
  9411  011CCE  D7E4               	goto	l1942
  9412  011CD0  0A03               	xorlw	3	; case 2
  9413  011CD2  B4D8               	btfsc	status,2,c
  9414  011CD4  D7E3               	goto	l1943
  9415  011CD6  0A01               	xorlw	1	; case 3
  9416  011CD8  B4D8               	btfsc	status,2,c
  9417  011CDA  D7E2               	goto	l1944
  9418  011CDC  0A07               	xorlw	7	; case 4
  9419  011CDE  B4D8               	btfsc	status,2,c
  9420  011CE0  D7E1               	goto	l1945
  9421  011CE2  0A01               	xorlw	1	; case 5
  9422  011CE4  B4D8               	btfsc	status,2,c
  9423  011CE6  D7E0               	goto	l1946
  9424  011CE8  D7E1               	goto	l1947
  9425  011CEA                     __end_of__get_fat:
  9426                           	opt stack 0
  9427                           tblptru	equ	0xFF8
  9428                           tblptrh	equ	0xFF7
  9429                           tblptrl	equ	0xFF6
  9430                           tablat	equ	0xFF5
  9431                           postinc0	equ	0xFEE
  9432                           wreg	equ	0xFE8
  9433                           postdec1	equ	0xFE5
  9434                           fsr1h	equ	0xFE2
  9435                           fsr1l	equ	0xFE1
  9436                           indf2	equ	0xFDF
  9437                           postinc2	equ	0xFDE
  9438                           fsr2h	equ	0xFDA
  9439                           fsr2l	equ	0xFD9
  9440                           status	equ	0xFD8
  9441                           
  9442 ;; *************** function __get_data *****************
  9443 ;; Defined at:
  9444 ;;		line 1283 in file "fat16.c"
  9445 ;; Parameters:    Size  Location     Type
  9446 ;;  idx             2    0[BANK0 ] unsigned int 
  9447 ;; Auto vars:     Size  Location     Type
  9448 ;;		None
  9449 ;; Return value:  Size  Location     Type
  9450 ;;                  1    wreg      unsigned char 
  9451 ;; Registers used:
  9452 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  9453 ;; Tracked objects:
  9454 ;;		On entry : 0/0
  9455 ;;		On exit  : 0/0
  9456 ;;		Unchanged: 0/0
  9457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9458 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9461 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9462 ;;Total ram usage:        2 bytes
  9463 ;; Hardware stack levels used:    1
  9464 ;; Hardware stack levels required when called:   10
  9465 ;; This function calls:
  9466 ;;		Nothing
  9467 ;; This function is called by:
  9468 ;;		_fat_format
  9469 ;; This function uses a non-reentrant model
  9470 ;;
  9471                           
  9472                           	psect	text20
  9473  012694                     __ptext20:
  9474                           	opt stack 0
  9475  012694                     __get_data:
  9476                           	opt stack 17
  9477                           
  9478                           ;fat16.c: 1285: if(idx < 12)
  9479                           
  9480                           ;incstack = 0
  9481  012694  0100               	movlb	0	; () banked
  9482  012696  5161               	movf	(__get_data@idx+1)& (0+255),w,b
  9483  012698  E110               	bnz	l18636
  9484  01269A  0E0C               	movlw	12
  9485  01269C  5D60               	subwf	__get_data@idx& (0+255),w,b
  9486  01269E  B0D8               	btfsc	status,0,c
  9487  0126A0  D00C               	goto	l1983
  9488                           
  9489                           ; BSR set to: 0
  9490                           ;fat16.c: 1286: {;fat16.c: 1287: return "hello world!"[idx];
  9491  0126A2  0EF1               	movlw	low STR_18
  9492  0126A4  2560               	addwf	__get_data@idx& (0+255),w,b
  9493  0126A6  6EF6               	movwf	tblptrl,c
  9494  0126A8  0EA1               	movlw	high STR_18
  9495  0126AA  2161               	addwfc	(__get_data@idx+1)& (0+255),w,b
  9496  0126AC  6EF7               	movwf	tblptrh,c
  9497  0126AE                     	if	1	;There are 3 active tblptr bytes
  9498  0126AE  6AF8               	clrf	tblptru,c
  9499  0126B0  0E00               	movlw	low (__mediumconst shr (0+16))
  9500  0126B2  22F8               	addwfc	tblptru,f,c
  9501  0126B4                     	endif
  9502  0126B4  0008               	tblrd		*
  9503  0126B6  50F5               	movf	tablat,w,c
  9504                           
  9505                           ; BSR set to: 0
  9506  0126B8  0012               	return	
  9507  0126BA                     l1983:
  9508  0126BA                     l18636:
  9509                           
  9510                           ; BSR set to: 0
  9511                           ;fat16.c: 1288: };fat16.c: 1289: return 0X00;
  9512  0126BA  0E00               	movlw	0
  9513  0126BC  0012               	return	
  9514  0126BE                     __end_of__get_data:
  9515                           	opt stack 0
  9516                           tblptru	equ	0xFF8
  9517                           tblptrh	equ	0xFF7
  9518                           tblptrl	equ	0xFF6
  9519                           tablat	equ	0xFF5
  9520                           postinc0	equ	0xFEE
  9521                           wreg	equ	0xFE8
  9522                           postdec1	equ	0xFE5
  9523                           fsr1h	equ	0xFE2
  9524                           fsr1l	equ	0xFE1
  9525                           indf2	equ	0xFDF
  9526                           postinc2	equ	0xFDE
  9527                           fsr2h	equ	0xFDA
  9528                           fsr2l	equ	0xFD9
  9529                           status	equ	0xFD8
  9530                           
  9531 ;; *************** function _encoder_init *****************
  9532 ;; Defined at:
  9533 ;;		line 14 in file "encoder.c"
  9534 ;; Parameters:    Size  Location     Type
  9535 ;;		None
  9536 ;; Auto vars:     Size  Location     Type
  9537 ;;		None
  9538 ;; Return value:  Size  Location     Type
  9539 ;;                  1    wreg      void 
  9540 ;; Registers used:
  9541 ;;		wreg, status,2, status,0
  9542 ;; Tracked objects:
  9543 ;;		On entry : 0/0
  9544 ;;		On exit  : 0/0
  9545 ;;		Unchanged: 0/0
  9546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9551 ;;Total ram usage:        0 bytes
  9552 ;; Hardware stack levels used:    1
  9553 ;; Hardware stack levels required when called:   10
  9554 ;; This function calls:
  9555 ;;		Nothing
  9556 ;; This function is called by:
  9557 ;;		_system_init
  9558 ;; This function uses a non-reentrant model
  9559 ;;
  9560                           
  9561                           	psect	text21
  9562  012710                     __ptext21:
  9563                           	opt stack 0
  9564  012710                     _encoder_init:
  9565                           	opt stack 19
  9566                           
  9567                           ;encoder.c: 16: enc1 = PORTE & 0b00000111;
  9568                           
  9569                           ; BSR set to: 0
  9570                           ;incstack = 0
  9571  012710  5084               	movf	3972,w,c	;volatile
  9572  012712  0B07               	andlw	7
  9573  012714  6E21               	movwf	_enc1,c
  9574                           
  9575                           ;encoder.c: 17: enc2 = PORTA & 0b00000111;
  9576  012716  5080               	movf	3968,w,c	;volatile
  9577  012718  0B07               	andlw	7
  9578  01271A  6E20               	movwf	_enc2,c
  9579                           
  9580                           ;encoder.c: 18: os.encoder1Count = 0;
  9581  01271C  0E00               	movlw	0
  9582  01271E  0100               	movlb	0	; () banked
  9583  012720  6FD6               	movwf	(_os+3)& (0+255),b	;volatile
  9584                           
  9585                           ; BSR set to: 0
  9586                           ;encoder.c: 19: os.encoder2Count = 0;
  9587  012722  0E00               	movlw	0
  9588  012724  6FD8               	movwf	(_os+5)& (0+255),b	;volatile
  9589                           
  9590                           ; BSR set to: 0
  9591                           ;encoder.c: 20: os.button1 = 0;
  9592  012726  0E00               	movlw	0
  9593  012728  6FD7               	movwf	(_os+4)& (0+255),b	;volatile
  9594                           
  9595                           ; BSR set to: 0
  9596                           ;encoder.c: 21: os.button2 = 0;
  9597  01272A  0E00               	movlw	0
  9598  01272C  6FD9               	movwf	(_os+6)& (0+255),b	;volatile
  9599                           
  9600                           ; BSR set to: 0
  9601                           ;encoder.c: 22: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  9602  01272E  0E01               	movlw	1
  9603  012730  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
  9604                           
  9605                           ; BSR set to: 0
  9606  012732  0012               	return		;funcret
  9607  012734                     __end_of_encoder_init:
  9608                           	opt stack 0
  9609                           tblptru	equ	0xFF8
  9610                           tblptrh	equ	0xFF7
  9611                           tblptrl	equ	0xFF6
  9612                           tablat	equ	0xFF5
  9613                           postinc0	equ	0xFEE
  9614                           wreg	equ	0xFE8
  9615                           postdec1	equ	0xFE5
  9616                           fsr1h	equ	0xFE2
  9617                           fsr1l	equ	0xFE1
  9618                           indf2	equ	0xFDF
  9619                           postinc2	equ	0xFDE
  9620                           fsr2h	equ	0xFDA
  9621                           fsr2l	equ	0xFD9
  9622                           status	equ	0xFD8
  9623                           
  9624 ;; *************** function _display_update *****************
  9625 ;; Defined at:
  9626 ;;		line 570 in file "display.c"
  9627 ;; Parameters:    Size  Location     Type
  9628 ;;		None
  9629 ;; Auto vars:     Size  Location     Type
  9630 ;;  line            1   16[BANK0 ] unsigned char 
  9631 ;; Return value:  Size  Location     Type
  9632 ;;                  1    wreg      void 
  9633 ;; Registers used:
  9634 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9635 ;; Tracked objects:
  9636 ;;		On entry : 0/0
  9637 ;;		On exit  : 0/0
  9638 ;;		Unchanged: 0/0
  9639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9641 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9643 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9644 ;;Total ram usage:        1 bytes
  9645 ;; Hardware stack levels used:    1
  9646 ;; Hardware stack levels required when called:   14
  9647 ;; This function calls:
  9648 ;;		_i2c_display_cursor
  9649 ;;		_i2c_display_write_fixed
  9650 ;; This function is called by:
  9651 ;;		_main
  9652 ;;		_system_init
  9653 ;; This function uses a non-reentrant model
  9654 ;;
  9655                           
  9656                           	psect	text22
  9657  0123D4                     __ptext22:
  9658                           	opt stack 0
  9659  0123D4                     _display_update:
  9660                           	opt stack 15
  9661                           
  9662                           ;display.c: 572: uint8_t line;;display.c: 573: for(line=0; line<4; ++line)
  9663                           
  9664                           ; BSR set to: 0
  9665                           ;incstack = 0
  9666  0123D4  0E00               	movlw	0
  9667  0123D6  0100               	movlb	0	; () banked
  9668  0123D8  6F70               	movwf	display_update@line& (0+255),b
  9669  0123DA                     l19918:
  9670                           
  9671                           ; BSR set to: 0
  9672  0123DA  0E03               	movlw	3
  9673  0123DC  6570               	cpfsgt	display_update@line& (0+255),b
  9674  0123DE  D001               	goto	l1431
  9675  0123E0  0012               	return	
  9676  0123E2                     l1431:
  9677                           
  9678                           ; BSR set to: 0
  9679                           ;display.c: 574: {;display.c: 575: i2c_display_cursor(line, 0);
  9680                           
  9681                           ; BSR set to: 0
  9682  0123E2  0E00               	movlw	0
  9683  0123E4  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
  9684  0123E6  5170               	movf	display_update@line& (0+255),w,b
  9685  0123E8  ECBE  F093         	call	_i2c_display_cursor
  9686                           
  9687                           ;display.c: 576: i2c_display_write_fixed(display_content[line], 20);
  9688  0123EC  0100               	movlb	0	; () banked
  9689  0123EE  5170               	movf	display_update@line& (0+255),w,b
  9690  0123F0  0D14               	mullw	20
  9691  0123F2  0E78               	movlw	low _display_content
  9692  0123F4  24F3               	addwf	prodl,w,c
  9693  0123F6  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
  9694  0123F8  0E02               	movlw	high _display_content
  9695  0123FA  20F4               	addwfc	prodh,w,c
  9696  0123FC  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
  9697  0123FE  0E14               	movlw	20
  9698  012400  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
  9699  012402  ECF8  F08E         	call	_i2c_display_write_fixed	;wreg free
  9700  012406  0100               	movlb	0	; () banked
  9701  012408  2B70               	incf	display_update@line& (0+255),f,b
  9702  01240A  D7E7               	goto	l19918
  9703  01240C                     __end_of_display_update:
  9704                           	opt stack 0
  9705                           tblptru	equ	0xFF8
  9706                           tblptrh	equ	0xFF7
  9707                           tblptrl	equ	0xFF6
  9708                           tablat	equ	0xFF5
  9709                           prodh	equ	0xFF4
  9710                           prodl	equ	0xFF3
  9711                           postinc0	equ	0xFEE
  9712                           wreg	equ	0xFE8
  9713                           postdec1	equ	0xFE5
  9714                           fsr1h	equ	0xFE2
  9715                           fsr1l	equ	0xFE1
  9716                           indf2	equ	0xFDF
  9717                           postinc2	equ	0xFDE
  9718                           fsr2h	equ	0xFDA
  9719                           fsr2l	equ	0xFD9
  9720                           status	equ	0xFD8
  9721                           
  9722 ;; *************** function _i2c_display_write_fixed *****************
  9723 ;; Defined at:
  9724 ;;		line 395 in file "i2c.c"
  9725 ;; Parameters:    Size  Location     Type
  9726 ;;  data            2    5[BANK0 ] PTR unsigned char 
  9727 ;;		 -> display_content(80), 
  9728 ;;  length          1    7[BANK0 ] unsigned char 
  9729 ;; Auto vars:     Size  Location     Type
  9730 ;;  pos             1    8[BANK0 ] unsigned char 
  9731 ;; Return value:  Size  Location     Type
  9732 ;;                  1    wreg      void 
  9733 ;; Registers used:
  9734 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9735 ;; Tracked objects:
  9736 ;;		On entry : 0/0
  9737 ;;		On exit  : 0/0
  9738 ;;		Unchanged: 0/0
  9739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9740 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9741 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9743 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9744 ;;Total ram usage:        4 bytes
  9745 ;; Hardware stack levels used:    1
  9746 ;; Hardware stack levels required when called:   11
  9747 ;; This function calls:
  9748 ;;		__i2c_send
  9749 ;;		__i2c_start
  9750 ;;		__i2c_stop
  9751 ;;		__i2c_wait_idle
  9752 ;; This function is called by:
  9753 ;;		_display_update
  9754 ;; This function uses a non-reentrant model
  9755 ;;
  9756                           
  9757                           	psect	text23
  9758  011DF0                     __ptext23:
  9759                           	opt stack 0
  9760  011DF0                     _i2c_display_write_fixed:
  9761                           	opt stack 17
  9762                           
  9763                           ;i2c.c: 397: uint8_t pos;;i2c.c: 402: _i2c_wait_idle();
  9764                           
  9765                           ; BSR set to: 0
  9766                           ;incstack = 0
  9767  011DF0  EC70  F08C         	call	__i2c_wait_idle	;wreg free
  9768                           
  9769                           ;i2c.c: 403: _i2c_start();
  9770  011DF4  EC6C  F094         	call	__i2c_start	;wreg free
  9771                           
  9772                           ;i2c.c: 404: _i2c_wait_idle();
  9773  011DF8  EC70  F08C         	call	__i2c_wait_idle	;wreg free
  9774                           
  9775                           ;i2c.c: 405: _i2c_send(0b01111000);
  9776  011DFC  0E78               	movlw	120
  9777  011DFE  EC54  F094         	call	__i2c_send
  9778                           
  9779                           ;i2c.c: 406: _i2c_wait_idle();
  9780  011E02  EC70  F08C         	call	__i2c_wait_idle	;wreg free
  9781                           
  9782                           ;i2c.c: 407: _i2c_send(0b01000000);
  9783  011E06  0E40               	movlw	64
  9784  011E08  EC54  F094         	call	__i2c_send
  9785                           
  9786                           ;i2c.c: 408: _i2c_wait_idle();
  9787  011E0C  EC70  F08C         	call	__i2c_wait_idle	;wreg free
  9788                           
  9789                           ;i2c.c: 411: for(pos=0; pos<length; ++pos)
  9790  011E10  0E00               	movlw	0
  9791  011E12  0100               	movlb	0	; () banked
  9792  011E14  6F68               	movwf	i2c_display_write_fixed@pos& (0+255),b
  9793  011E16  D00F               	goto	l1207
  9794  011E18                     
  9795                           ; BSR set to: 0
  9796                           ;i2c.c: 412: {;i2c.c: 413: _i2c_send(data[pos]);
  9797                           
  9798                           ; BSR set to: 0
  9799  011E18  5168               	movf	i2c_display_write_fixed@pos& (0+255),w,b
  9800  011E1A  0D01               	mullw	1
  9801  011E1C  50F3               	movf	prodl,w,c
  9802  011E1E  2565               	addwf	i2c_display_write_fixed@data& (0+255),w,b
  9803  011E20  6ED9               	movwf	fsr2l,c
  9804  011E22  50F4               	movf	prodh,w,c
  9805  011E24  2166               	addwfc	(i2c_display_write_fixed@data+1)& (0+255),w,b
  9806  011E26  6EDA               	movwf	fsr2h,c
  9807  011E28  50DF               	movf	indf2,w,c
  9808  011E2A  EC54  F094         	call	__i2c_send
  9809                           
  9810                           ;i2c.c: 414: _i2c_wait_idle();
  9811  011E2E  EC70  F08C         	call	__i2c_wait_idle	;wreg free
  9812  011E32  0100               	movlb	0	; () banked
  9813  011E34  2B68               	incf	i2c_display_write_fixed@pos& (0+255),f,b
  9814  011E36                     l1207:
  9815                           
  9816                           ; BSR set to: 0
  9817                           
  9818                           ; BSR set to: 0
  9819  011E36  5167               	movf	i2c_display_write_fixed@length& (0+255),w,b
  9820  011E38  5D68               	subwf	i2c_display_write_fixed@pos& (0+255),w,b
  9821  011E3A  A0D8               	btfss	status,0,c
  9822  011E3C  D7ED               	goto	l1208
  9823                           
  9824                           ; BSR set to: 0
  9825                           ;i2c.c: 415: };i2c.c: 417: _i2c_stop();
  9826                           
  9827                           ; BSR set to: 0
  9828  011E3E  EC68  F094         	call	__i2c_stop	;wreg free
  9829  011E42  0012               	return		;funcret
  9830  011E44                     __end_of_i2c_display_write_fixed:
  9831                           	opt stack 0
  9832                           tblptru	equ	0xFF8
  9833                           tblptrh	equ	0xFF7
  9834                           tblptrl	equ	0xFF6
  9835                           tablat	equ	0xFF5
  9836                           prodh	equ	0xFF4
  9837                           prodl	equ	0xFF3
  9838                           postinc0	equ	0xFEE
  9839                           wreg	equ	0xFE8
  9840                           postdec1	equ	0xFE5
  9841                           fsr1h	equ	0xFE2
  9842                           fsr1l	equ	0xFE1
  9843                           indf2	equ	0xFDF
  9844                           postinc2	equ	0xFDE
  9845                           fsr2h	equ	0xFDA
  9846                           fsr2l	equ	0xFD9
  9847                           status	equ	0xFD8
  9848                           
  9849 ;; *************** function _i2c_display_cursor *****************
  9850 ;; Defined at:
  9851 ;;		line 355 in file "i2c.c"
  9852 ;; Parameters:    Size  Location     Type
  9853 ;;  line            1    wreg     unsigned char 
  9854 ;;  position        1   13[BANK0 ] unsigned char 
  9855 ;; Auto vars:     Size  Location     Type
  9856 ;;  line            1   14[BANK0 ] unsigned char 
  9857 ;;  address         1   15[BANK0 ] unsigned char 
  9858 ;; Return value:  Size  Location     Type
  9859 ;;                  1    wreg      void 
  9860 ;; Registers used:
  9861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9862 ;; Tracked objects:
  9863 ;;		On entry : 0/0
  9864 ;;		On exit  : 0/0
  9865 ;;		Unchanged: 0/0
  9866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9867 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9868 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9870 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9871 ;;Total ram usage:        3 bytes
  9872 ;; Hardware stack levels used:    1
  9873 ;; Hardware stack levels required when called:   13
  9874 ;; This function calls:
  9875 ;;		__ic2_display_set_ddram_address
  9876 ;; This function is called by:
  9877 ;;		_display_update
  9878 ;; This function uses a non-reentrant model
  9879 ;;
  9880                           
  9881                           	psect	text24
  9882  01277C                     __ptext24:
  9883                           	opt stack 0
  9884  01277C                     _i2c_display_cursor:
  9885                           	opt stack 15
  9886                           
  9887                           ;incstack = 0
  9888                           ;i2c_display_cursor@line stored from wreg
  9889  01277C  0100               	movlb	0	; () banked
  9890  01277E  6F6E               	movwf	i2c_display_cursor@line& (0+255),b
  9891                           
  9892                           ;i2c.c: 357: uint8_t address;;i2c.c: 360: line &= 0b11;
  9893  012780  0E03               	movlw	3
  9894  012782  0100               	movlb	0	; () banked
  9895  012784  176E               	andwf	i2c_display_cursor@line& (0+255),f,b
  9896                           
  9897                           ;i2c.c: 361: address = line<<5;
  9898  012786  396E               	swapf	i2c_display_cursor@line& (0+255),w,b
  9899  012788  46E8               	rlncf	wreg,f,c
  9900  01278A  0BE0               	andlw	224
  9901  01278C  6F6F               	movwf	i2c_display_cursor@address& (0+255),b
  9902                           
  9903                           ;i2c.c: 362: position &= 0b11111;
  9904  01278E  0E1F               	movlw	31
  9905  012790  176D               	andwf	i2c_display_cursor@position& (0+255),f,b
  9906                           
  9907                           ;i2c.c: 363: address |= position;
  9908  012792  516D               	movf	i2c_display_cursor@position& (0+255),w,b
  9909  012794  136F               	iorwf	i2c_display_cursor@address& (0+255),f,b
  9910                           
  9911                           ; BSR set to: 0
  9912                           ;i2c.c: 369: _ic2_display_set_ddram_address(address);
  9913  012796  516F               	movf	i2c_display_cursor@address& (0+255),w,b
  9914  012798  EC9A  F093         	call	__ic2_display_set_ddram_address
  9915  01279C  0012               	return		;funcret
  9916  01279E                     __end_of_i2c_display_cursor:
  9917                           	opt stack 0
  9918                           tblptru	equ	0xFF8
  9919                           tblptrh	equ	0xFF7
  9920                           tblptrl	equ	0xFF6
  9921                           tablat	equ	0xFF5
  9922                           prodh	equ	0xFF4
  9923                           prodl	equ	0xFF3
  9924                           postinc0	equ	0xFEE
  9925                           wreg	equ	0xFE8
  9926                           postdec1	equ	0xFE5
  9927                           fsr1h	equ	0xFE2
  9928                           fsr1l	equ	0xFE1
  9929                           indf2	equ	0xFDF
  9930                           postinc2	equ	0xFDE
  9931                           fsr2h	equ	0xFDA
  9932                           fsr2l	equ	0xFD9
  9933                           status	equ	0xFD8
  9934                           
  9935 ;; *************** function __ic2_display_set_ddram_address *****************
  9936 ;; Defined at:
  9937 ;;		line 326 in file "i2c.c"
  9938 ;; Parameters:    Size  Location     Type
  9939 ;;  address         1    wreg     unsigned char 
  9940 ;; Auto vars:     Size  Location     Type
  9941 ;;  address         1   10[BANK0 ] unsigned char 
  9942 ;;  data_array      2   11[BANK0 ] unsigned char [2]
  9943 ;; Return value:  Size  Location     Type
  9944 ;;                  1    wreg      void 
  9945 ;; Registers used:
  9946 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9947 ;; Tracked objects:
  9948 ;;		On entry : 0/0
  9949 ;;		On exit  : 0/0
  9950 ;;		Unchanged: 0/0
  9951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9953 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9955 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9956 ;;Total ram usage:        3 bytes
  9957 ;; Hardware stack levels used:    1
  9958 ;; Hardware stack levels required when called:   12
  9959 ;; This function calls:
  9960 ;;		__i2c_write
  9961 ;; This function is called by:
  9962 ;;		_i2c_display_cursor
  9963 ;; This function uses a non-reentrant model
  9964 ;;
  9965                           
  9966                           	psect	text25
  9967  012734                     __ptext25:
  9968                           	opt stack 0
  9969  012734                     __ic2_display_set_ddram_address:
  9970                           	opt stack 15
  9971                           
  9972                           ;incstack = 0
  9973                           ;__ic2_display_set_ddram_address@address stored from wreg
  9974  012734  0100               	movlb	0	; () banked
  9975  012736  6F6A               	movwf	__ic2_display_set_ddram_address@address& (0+255),b
  9976                           
  9977                           ;i2c.c: 328: uint8_t data_array[2];;i2c.c: 329: data_array[0] = 0b00000000;
  9978  012738  0E00               	movlw	0
  9979  01273A  0100               	movlb	0	; () banked
  9980  01273C  6F6B               	movwf	__ic2_display_set_ddram_address@data_array& (0+255),b
  9981                           
  9982                           ; BSR set to: 0
  9983                           ;i2c.c: 330: data_array[1] = 0b10000000 | address;
  9984  01273E  516A               	movf	__ic2_display_set_ddram_address@address& (0+255),w,b
  9985  012740  0980               	iorlw	128
  9986  012742  6F6C               	movwf	(__ic2_display_set_ddram_address@data_array+1)& (0+255),b
  9987                           
  9988                           ; BSR set to: 0
  9989                           ;i2c.c: 336: _i2c_write(0b01111000, &data_array[0], 2);
  9990  012744  0E6B               	movlw	low __ic2_display_set_ddram_address@data_array
  9991  012746  6F65               	movwf	__i2c_write@data& (0+255),b
  9992  012748  0E00               	movlw	high __ic2_display_set_ddram_address@data_array
  9993  01274A  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  9994  01274C  0E02               	movlw	2
  9995  01274E  6F67               	movwf	__i2c_write@length& (0+255),b
  9996  012750  0E78               	movlw	120
  9997  012752  EC17  F090         	call	__i2c_write
  9998  012756  0012               	return		;funcret
  9999  012758                     __end_of__ic2_display_set_ddram_address:
 10000                           	opt stack 0
 10001                           tblptru	equ	0xFF8
 10002                           tblptrh	equ	0xFF7
 10003                           tblptrl	equ	0xFF6
 10004                           tablat	equ	0xFF5
 10005                           prodh	equ	0xFF4
 10006                           prodl	equ	0xFF3
 10007                           postinc0	equ	0xFEE
 10008                           wreg	equ	0xFE8
 10009                           postdec1	equ	0xFE5
 10010                           fsr1h	equ	0xFE2
 10011                           fsr1l	equ	0xFE1
 10012                           indf2	equ	0xFDF
 10013                           postinc2	equ	0xFDE
 10014                           fsr2h	equ	0xFDA
 10015                           fsr2l	equ	0xFD9
 10016                           status	equ	0xFD8
 10017                           
 10018 ;; *************** function _display_init *****************
 10019 ;; Defined at:
 10020 ;;		line 222 in file "display.c"
 10021 ;; Parameters:    Size  Location     Type
 10022 ;;		None
 10023 ;; Auto vars:     Size  Location     Type
 10024 ;;		None
 10025 ;; Return value:  Size  Location     Type
 10026 ;;                  1    wreg      void 
 10027 ;; Registers used:
 10028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10029 ;; Tracked objects:
 10030 ;;		On entry : 0/0
 10031 ;;		On exit  : 0/0
 10032 ;;		Unchanged: 0/0
 10033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10038 ;;Total ram usage:        0 bytes
 10039 ;; Hardware stack levels used:    1
 10040 ;; Hardware stack levels required when called:   14
 10041 ;; This function calls:
 10042 ;;		_i2c_display_init
 10043 ;;		_i2c_display_program_custom_character
 10044 ;; This function is called by:
 10045 ;;		_system_init
 10046 ;; This function uses a non-reentrant model
 10047 ;;
 10048                           
 10049                           	psect	text26
 10050  01247C                     __ptext26:
 10051                           	opt stack 0
 10052  01247C                     _display_init:
 10053                           	opt stack 15
 10054                           
 10055                           ;display.c: 224: i2c_display_init();
 10056                           
 10057                           ;incstack = 0
 10058  01247C  ECEF  F08F         	call	_i2c_display_init	;wreg free
 10059                           
 10060                           ;display.c: 225: i2c_display_program_custom_character(0x00, bit_pattern_verticalbar);
 10061  012480  0EDD               	movlw	low _bit_pattern_verticalbar
 10062  012482  0100               	movlb	0	; () banked
 10063  012484  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 10064  012486  0EA1               	movlw	high _bit_pattern_verticalbar
 10065  012488  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 10066  01248A  0E00               	movlw	0
 10067  01248C  ECDF  F08A         	call	_i2c_display_program_custom_character
 10068                           
 10069                           ;display.c: 226: i2c_display_program_custom_character(0x01, bit_pattern_degree);
 10070  012490  0ED5               	movlw	low _bit_pattern_degree
 10071  012492  0100               	movlb	0	; () banked
 10072  012494  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 10073  012496  0EA1               	movlw	high _bit_pattern_degree
 10074  012498  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 10075  01249A  0E01               	movlw	1
 10076  01249C  ECDF  F08A         	call	_i2c_display_program_custom_character
 10077                           
 10078                           ;display.c: 227: i2c_display_program_custom_character(0x02, bit_pattern_ae);
 10079  0124A0  0ECD               	movlw	low _bit_pattern_ae
 10080  0124A2  0100               	movlb	0	; () banked
 10081  0124A4  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 10082  0124A6  0EA1               	movlw	high _bit_pattern_ae
 10083  0124A8  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 10084  0124AA  0E02               	movlw	2
 10085  0124AC  ECDF  F08A         	call	_i2c_display_program_custom_character
 10086  0124B0  0012               	return		;funcret
 10087  0124B2                     __end_of_display_init:
 10088                           	opt stack 0
 10089                           tblptru	equ	0xFF8
 10090                           tblptrh	equ	0xFF7
 10091                           tblptrl	equ	0xFF6
 10092                           tablat	equ	0xFF5
 10093                           prodh	equ	0xFF4
 10094                           prodl	equ	0xFF3
 10095                           postinc0	equ	0xFEE
 10096                           wreg	equ	0xFE8
 10097                           postdec1	equ	0xFE5
 10098                           fsr1h	equ	0xFE2
 10099                           fsr1l	equ	0xFE1
 10100                           indf2	equ	0xFDF
 10101                           postinc2	equ	0xFDE
 10102                           fsr2h	equ	0xFDA
 10103                           fsr2l	equ	0xFD9
 10104                           status	equ	0xFD8
 10105                           
 10106 ;; *************** function _i2c_display_program_custom_character *****************
 10107 ;; Defined at:
 10108 ;;		line 420 in file "i2c.c"
 10109 ;; Parameters:    Size  Location     Type
 10110 ;;  address         1    wreg     unsigned char 
 10111 ;;  bit_pattern     2   14[BANK0 ] PTR unsigned char 
 10112 ;;		 -> bit_pattern_ae(8), bit_pattern_degree(8), bit_pattern_verticalbar(8), 
 10113 ;; Auto vars:     Size  Location     Type
 10114 ;;  address         1   31[BANK0 ] unsigned char 
 10115 ;;  data_array     11   20[BANK0 ] unsigned char [11]
 10116 ;;  cntr            1   32[BANK0 ] unsigned char 
 10117 ;; Return value:  Size  Location     Type
 10118 ;;                  1    wreg      void 
 10119 ;; Registers used:
 10120 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10121 ;; Tracked objects:
 10122 ;;		On entry : 0/0
 10123 ;;		On exit  : 0/0
 10124 ;;		Unchanged: 0/0
 10125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10126 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10127 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10128 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10129 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10130 ;;Total ram usage:       19 bytes
 10131 ;; Hardware stack levels used:    1
 10132 ;; Hardware stack levels required when called:   13
 10133 ;; This function calls:
 10134 ;;		__i2c_write
 10135 ;;		__ic2_display_set_cgram_address
 10136 ;; This function is called by:
 10137 ;;		_display_init
 10138 ;; This function uses a non-reentrant model
 10139 ;;
 10140                           
 10141                           	psect	text27
 10142  0115BE                     __ptext27:
 10143                           	opt stack 0
 10144  0115BE                     _i2c_display_program_custom_character:
 10145                           	opt stack 15
 10146                           
 10147                           ;incstack = 0
 10148                           ;i2c_display_program_custom_character@address stored from wreg
 10149  0115BE  0100               	movlb	0	; () banked
 10150  0115C0  6F7F               	movwf	i2c_display_program_custom_character@address& (0+255),b
 10151                           
 10152                           ;i2c.c: 422: uint8_t cntr;;i2c.c: 423: uint8_t data_array[11];;i2c.c: 426: _ic2_display_
      +                          set_cgram_address(address<<3);
 10153  0115C2  0100               	movlb	0	; () banked
 10154  0115C4  397F               	swapf	i2c_display_program_custom_character@address& (0+255),w,b
 10155  0115C6  42E8               	rrncf	wreg,f,c
 10156  0115C8  0BF8               	andlw	248
 10157  0115CA  EC5F  F093         	call	__ic2_display_set_cgram_address
 10158                           
 10159                           ;i2c.c: 429: data_array[0] = 0b01000000;
 10160  0115CE  0E40               	movlw	64
 10161  0115D0  0100               	movlb	0	; () banked
 10162  0115D2  6F74               	movwf	i2c_display_program_custom_character@data_array& (0+255),b
 10163                           
 10164                           ; BSR set to: 0
 10165                           ;i2c.c: 430: for(cntr=0; cntr<8; ++cntr)
 10166  0115D4  0E00               	movlw	0
 10167  0115D6  6F80               	movwf	i2c_display_program_custom_character@cntr& (0+255),b
 10168  0115D8                     l19196:
 10169                           
 10170                           ; BSR set to: 0
 10171  0115D8  0E07               	movlw	7
 10172  0115DA  6580               	cpfsgt	i2c_display_program_custom_character@cntr& (0+255),b
 10173  0115DC  D001               	goto	l1213
 10174  0115DE  D023               	goto	u18680
 10175  0115E0                     l1213:
 10176                           
 10177                           ; BSR set to: 0
 10178                           ;i2c.c: 431: {;i2c.c: 432: data_array[cntr+1] = bit_pattern[cntr] & 0b00011111;
 10179                           
 10180                           ; BSR set to: 0
 10181  0115E0  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
 10182  0115E2  6F70               	movwf	??_i2c_display_program_custom_character& (0+255),b
 10183  0115E4  6B71               	clrf	(??_i2c_display_program_custom_character+1)& (0+255),b
 10184  0115E6  0E01               	movlw	1
 10185  0115E8  2770               	addwf	??_i2c_display_program_custom_character& (0+255),f,b
 10186  0115EA  0E00               	movlw	0
 10187  0115EC  2371               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),f,b
 10188  0115EE  0E74               	movlw	low i2c_display_program_custom_character@data_array
 10189  0115F0  2570               	addwf	??_i2c_display_program_custom_character& (0+255),w,b
 10190  0115F2  6ED9               	movwf	fsr2l,c
 10191  0115F4  0E00               	movlw	high i2c_display_program_custom_character@data_array
 10192  0115F6  2171               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),w,b
 10193  0115F8  6EDA               	movwf	fsr2h,c
 10194  0115FA  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
 10195  0115FC  0D01               	mullw	1
 10196  0115FE  C06E  F072         	movff	i2c_display_program_custom_character@bit_pattern,??_i2c_display_program_custom_ch
      +                          aracter+2
 10197  011602  C06F  F073         	movff	i2c_display_program_custom_character@bit_pattern+1,??_i2c_display_program_custom_
      +                          character+3
 10198  011606  50F3               	movf	prodl,w,c
 10199  011608  2772               	addwf	(??_i2c_display_program_custom_character+2)& (0+255),f,b
 10200  01160A  50F4               	movf	prodh,w,c
 10201  01160C  2373               	addwfc	(??_i2c_display_program_custom_character+3)& (0+255),f,b
 10202  01160E  C072  FFF6         	movff	??_i2c_display_program_custom_character+2,tblptrl
 10203  011612  C073  FFF7         	movff	??_i2c_display_program_custom_character+3,tblptrh
 10204  011616                     	if	0	;tblptru may be non-zero
 10205  011616                     	endif
 10206  011616                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10207  011616  0E00               	movlw	low (__mediumconst shr (0+16))
 10208  011618  6EF8               	movwf	tblptru,c
 10209  01161A                     	endif
 10210  01161A  0008               	tblrd		*
 10211  01161C  50F5               	movf	tablat,w,c
 10212  01161E  0B1F               	andlw	31
 10213  011620  6EDF               	movwf	indf2,c
 10214                           
 10215                           ; BSR set to: 0
 10216  011622  2B80               	incf	i2c_display_program_custom_character@cntr& (0+255),f,b
 10217  011624  D7D9               	goto	l19196
 10218  011626                     u18680:
 10219                           
 10220                           ; BSR set to: 0
 10221                           ;i2c.c: 433: };i2c.c: 434: _i2c_write(0b01111000, data_array, 9);
 10222                           
 10223                           ; BSR set to: 0
 10224  011626  0E74               	movlw	low i2c_display_program_custom_character@data_array
 10225  011628  6F65               	movwf	__i2c_write@data& (0+255),b
 10226  01162A  0E00               	movlw	high i2c_display_program_custom_character@data_array
 10227  01162C  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10228  01162E  0E09               	movlw	9
 10229  011630  6F67               	movwf	__i2c_write@length& (0+255),b
 10230  011632  0E78               	movlw	120
 10231  011634  EC17  F090         	call	__i2c_write
 10232  011638  0012               	return		;funcret
 10233  01163A                     __end_of_i2c_display_program_custom_character:
 10234                           	opt stack 0
 10235                           tblptru	equ	0xFF8
 10236                           tblptrh	equ	0xFF7
 10237                           tblptrl	equ	0xFF6
 10238                           tablat	equ	0xFF5
 10239                           prodh	equ	0xFF4
 10240                           prodl	equ	0xFF3
 10241                           postinc0	equ	0xFEE
 10242                           wreg	equ	0xFE8
 10243                           postdec1	equ	0xFE5
 10244                           fsr1h	equ	0xFE2
 10245                           fsr1l	equ	0xFE1
 10246                           indf2	equ	0xFDF
 10247                           postinc2	equ	0xFDE
 10248                           fsr2h	equ	0xFDA
 10249                           fsr2l	equ	0xFD9
 10250                           status	equ	0xFD8
 10251                           
 10252 ;; *************** function __ic2_display_set_cgram_address *****************
 10253 ;; Defined at:
 10254 ;;		line 339 in file "i2c.c"
 10255 ;; Parameters:    Size  Location     Type
 10256 ;;  address         1    wreg     unsigned char 
 10257 ;; Auto vars:     Size  Location     Type
 10258 ;;  address         1   13[BANK0 ] unsigned char 
 10259 ;;  data_array      3   10[BANK0 ] unsigned char [3]
 10260 ;; Return value:  Size  Location     Type
 10261 ;;                  1    wreg      void 
 10262 ;; Registers used:
 10263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10264 ;; Tracked objects:
 10265 ;;		On entry : 0/0
 10266 ;;		On exit  : 0/0
 10267 ;;		Unchanged: 0/0
 10268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10270 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10272 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10273 ;;Total ram usage:        4 bytes
 10274 ;; Hardware stack levels used:    1
 10275 ;; Hardware stack levels required when called:   12
 10276 ;; This function calls:
 10277 ;;		__i2c_write
 10278 ;; This function is called by:
 10279 ;;		_i2c_display_program_custom_character
 10280 ;; This function uses a non-reentrant model
 10281 ;;
 10282                           
 10283                           	psect	text28
 10284  0126BE                     __ptext28:
 10285                           	opt stack 0
 10286  0126BE                     __ic2_display_set_cgram_address:
 10287                           	opt stack 15
 10288                           
 10289                           ;incstack = 0
 10290                           ;__ic2_display_set_cgram_address@address stored from wreg
 10291  0126BE  0100               	movlb	0	; () banked
 10292  0126C0  6F6D               	movwf	__ic2_display_set_cgram_address@address& (0+255),b
 10293                           
 10294                           ;i2c.c: 341: uint8_t data_array[3];;i2c.c: 346: address &= 0b001111111;
 10295  0126C2  0100               	movlb	0	; () banked
 10296  0126C4  9F6D               	bcf	__ic2_display_set_cgram_address@address& (0+255),7,b
 10297                           
 10298                           ; BSR set to: 0
 10299                           ;i2c.c: 347: data_array[0] = 0b00000000;
 10300  0126C6  0E00               	movlw	0
 10301  0126C8  6F6A               	movwf	__ic2_display_set_cgram_address@data_array& (0+255),b
 10302                           
 10303                           ; BSR set to: 0
 10304                           ;i2c.c: 348: data_array[1] = 0b00111000;
 10305  0126CA  0E38               	movlw	56
 10306  0126CC  6F6B               	movwf	(__ic2_display_set_cgram_address@data_array+1)& (0+255),b
 10307                           
 10308                           ;i2c.c: 349: data_array[2] = 0b01000000 | address;
 10309  0126CE  516D               	movf	__ic2_display_set_cgram_address@address& (0+255),w,b
 10310  0126D0  0940               	iorlw	64
 10311  0126D2  6F6C               	movwf	(__ic2_display_set_cgram_address@data_array+2)& (0+255),b
 10312                           
 10313                           ; BSR set to: 0
 10314                           ;i2c.c: 352: _i2c_write(0b01111000, data_array, 3);
 10315  0126D4  0E6A               	movlw	low __ic2_display_set_cgram_address@data_array
 10316  0126D6  6F65               	movwf	__i2c_write@data& (0+255),b
 10317  0126D8  0E00               	movlw	high __ic2_display_set_cgram_address@data_array
 10318  0126DA  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10319  0126DC  0E03               	movlw	3
 10320  0126DE  6F67               	movwf	__i2c_write@length& (0+255),b
 10321  0126E0  0E78               	movlw	120
 10322  0126E2  EC17  F090         	call	__i2c_write
 10323  0126E6  0012               	return		;funcret
 10324  0126E8                     __end_of__ic2_display_set_cgram_address:
 10325                           	opt stack 0
 10326                           tblptru	equ	0xFF8
 10327                           tblptrh	equ	0xFF7
 10328                           tblptrl	equ	0xFF6
 10329                           tablat	equ	0xFF5
 10330                           prodh	equ	0xFF4
 10331                           prodl	equ	0xFF3
 10332                           postinc0	equ	0xFEE
 10333                           wreg	equ	0xFE8
 10334                           postdec1	equ	0xFE5
 10335                           fsr1h	equ	0xFE2
 10336                           fsr1l	equ	0xFE1
 10337                           indf2	equ	0xFDF
 10338                           postinc2	equ	0xFDE
 10339                           fsr2h	equ	0xFDA
 10340                           fsr2l	equ	0xFD9
 10341                           status	equ	0xFD8
 10342                           
 10343 ;; *************** function _i2c_display_init *****************
 10344 ;; Defined at:
 10345 ;;		line 297 in file "i2c.c"
 10346 ;; Parameters:    Size  Location     Type
 10347 ;;		None
 10348 ;; Auto vars:     Size  Location     Type
 10349 ;;  init_sequenc    9   11[BANK0 ] unsigned char [9]
 10350 ;; Return value:  Size  Location     Type
 10351 ;;                  1    wreg      void 
 10352 ;; Registers used:
 10353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10354 ;; Tracked objects:
 10355 ;;		On entry : 0/0
 10356 ;;		On exit  : 0/0
 10357 ;;		Unchanged: 0/0
 10358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10360 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10361 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10362 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10363 ;;Total ram usage:       10 bytes
 10364 ;; Hardware stack levels used:    1
 10365 ;; Hardware stack levels required when called:   12
 10366 ;; This function calls:
 10367 ;;		__i2c_write
 10368 ;; This function is called by:
 10369 ;;		_display_init
 10370 ;; This function uses a non-reentrant model
 10371 ;;
 10372                           
 10373                           	psect	text29
 10374  011FDE                     __ptext29:
 10375                           	opt stack 0
 10376  011FDE                     _i2c_display_init:
 10377                           	opt stack 16
 10378                           
 10379                           ;i2c.c: 299: uint8_t init_sequence[9] = {;i2c.c: 300: 0x3A,;i2c.c: 302: 0b00011110,;i2c.
      +                          c: 303: 0x39,;i2c.c: 305: 0b00001100,;i2c.c: 306: 0x74,;i2c.c: 307: 0b1011100,;i2c.c: 30
      +                          8: 0x6d,;i2c.c: 309: 0x0c,;i2c.c: 310: 0x01;i2c.c: 311: };
 10380                           
 10381                           ;incstack = 0
 10382  011FDE  EE21  F0B7         	lfsr	2,i2c_display_init@F6901
 10383  011FE2  EE10  F06B         	lfsr	1,i2c_display_init@init_sequence
 10384  011FE6  0E08               	movlw	8
 10385  011FE8                     u18651:
 10386  011FE8  CFDB FFE3          	movff	plusw2,plusw1
 10387  011FEC  06E8               	decf	wreg,f,c
 10388  011FEE  E2FC               	bc	u18651
 10389                           
 10390                           ;i2c.c: 314: LATAbits.LA3 = 0;
 10391  011FF0  9689               	bcf	3977,3,c	;volatile
 10392                           
 10393                           ;i2c.c: 315: _delay((unsigned long)((10)*(8000000/4000.0)));
 10394  011FF2  0E1A               	movlw	26
 10395  011FF4  0100               	movlb	0	; () banked
 10396  011FF6  6F6A               	movwf	??_i2c_display_init& (0+255),b
 10397  011FF8  0EF8               	movlw	248
 10398  011FFA                     u22737:
 10399  011FFA  2EE8               	decfsz	wreg,f,c
 10400  011FFC  D7FE               	bra	u22737
 10401  011FFE  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
 10402  012000  D7FC               	bra	u22737
 10403  012002  F000               	nop	
 10404                           
 10405                           ;i2c.c: 316: LATAbits.LA3 = 1;
 10406  012004  8689               	bsf	3977,3,c	;volatile
 10407                           
 10408                           ;i2c.c: 317: _delay((unsigned long)((50)*(8000000/4000.0)));
 10409  012006  0E82               	movlw	130
 10410  012008  0100               	movlb	0	; () banked
 10411  01200A  6F6A               	movwf	??_i2c_display_init& (0+255),b
 10412  01200C  0EDD               	movlw	221
 10413  01200E                     u22747:
 10414  01200E  2EE8               	decfsz	wreg,f,c
 10415  012010  D7FE               	bra	u22747
 10416  012012  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
 10417  012014  D7FC               	bra	u22747
 10418  012016  D000               	nop2	
 10419                           
 10420                           ;i2c.c: 323: _i2c_write(0b01111000, &init_sequence[0], 9);
 10421  012018  0E6B               	movlw	low i2c_display_init@init_sequence
 10422  01201A  0100               	movlb	0	; () banked
 10423  01201C  6F65               	movwf	__i2c_write@data& (0+255),b
 10424  01201E  0E00               	movlw	high i2c_display_init@init_sequence
 10425  012020  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10426  012022  0E09               	movlw	9
 10427  012024  6F67               	movwf	__i2c_write@length& (0+255),b
 10428  012026  0E78               	movlw	120
 10429  012028  EC17  F090         	call	__i2c_write
 10430  01202C  0012               	return		;funcret
 10431  01202E                     __end_of_i2c_display_init:
 10432                           	opt stack 0
 10433                           tblptru	equ	0xFF8
 10434                           tblptrh	equ	0xFF7
 10435                           tblptrl	equ	0xFF6
 10436                           tablat	equ	0xFF5
 10437                           prodh	equ	0xFF4
 10438                           prodl	equ	0xFF3
 10439                           postinc0	equ	0xFEE
 10440                           wreg	equ	0xFE8
 10441                           postdec1	equ	0xFE5
 10442                           plusw1	equ	0xFE3
 10443                           fsr1h	equ	0xFE2
 10444                           fsr1l	equ	0xFE1
 10445                           indf2	equ	0xFDF
 10446                           postinc2	equ	0xFDE
 10447                           plusw2	equ	0xFDB
 10448                           fsr2h	equ	0xFDA
 10449                           fsr2l	equ	0xFD9
 10450                           status	equ	0xFD8
 10451                           
 10452 ;; *************** function __i2c_write *****************
 10453 ;; Defined at:
 10454 ;;		line 83 in file "i2c.c"
 10455 ;; Parameters:    Size  Location     Type
 10456 ;;  slave_addres    1    wreg     unsigned char 
 10457 ;;  data            2    5[BANK0 ] PTR unsigned char 
 10458 ;;		 -> i2c_display_program_custom_character@data_array(11), _ic2_display_set_cgram_address@data_array(3), _ic2_display_
      +set_ddram_address@data_array(2), i2c_display_init@init_sequence(9), 
 10459 ;;		 -> _i2c_display_send_init_sequence@init_sequence(9), i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_
      +readByte@addr(1), 
 10460 ;;		 -> i2c_eeprom_writeByte@dat(2), i2c_adc_start@configuration_byte(1), 
 10461 ;;  length          1    7[BANK0 ] unsigned char 
 10462 ;; Auto vars:     Size  Location     Type
 10463 ;;  slave_addres    1    8[BANK0 ] unsigned char 
 10464 ;;  cntr            1    9[BANK0 ] unsigned char 
 10465 ;; Return value:  Size  Location     Type
 10466 ;;                  1    wreg      void 
 10467 ;; Registers used:
 10468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10469 ;; Tracked objects:
 10470 ;;		On entry : 0/0
 10471 ;;		On exit  : 0/0
 10472 ;;		Unchanged: 0/0
 10473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10474 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10475 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10477 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10478 ;;Total ram usage:        5 bytes
 10479 ;; Hardware stack levels used:    1
 10480 ;; Hardware stack levels required when called:   11
 10481 ;; This function calls:
 10482 ;;		__i2c_send
 10483 ;;		__i2c_start
 10484 ;;		__i2c_stop
 10485 ;;		__i2c_wait_idle
 10486 ;; This function is called by:
 10487 ;;		_i2c_display_init
 10488 ;;		__ic2_display_set_ddram_address
 10489 ;;		__ic2_display_set_cgram_address
 10490 ;;		_i2c_display_program_custom_character
 10491 ;;		_i2c_adc_start
 10492 ;;		_i2c_eeprom_writeByte
 10493 ;;		_i2c_eeprom_readByte
 10494 ;;		_i2c_eeprom_write
 10495 ;;		_i2c_eeprom_read
 10496 ;;		__i2c_display_send_init_sequence
 10497 ;; This function uses a non-reentrant model
 10498 ;;
 10499                           
 10500                           	psect	text30
 10501  01202E                     __ptext30:
 10502                           	opt stack 0
 10503  01202E                     __i2c_write:
 10504                           	opt stack 15
 10505                           
 10506                           ;incstack = 0
 10507                           ;__i2c_write@slave_address stored from wreg
 10508  01202E  0100               	movlb	0	; () banked
 10509  012030  6F68               	movwf	__i2c_write@slave_address& (0+255),b
 10510                           
 10511                           ;i2c.c: 85: uint8_t cntr;;i2c.c: 87: _i2c_wait_idle();
 10512  012032  EC70  F08C         	call	__i2c_wait_idle	;wreg free
 10513                           
 10514                           ;i2c.c: 88: _i2c_start();
 10515  012036  EC6C  F094         	call	__i2c_start	;wreg free
 10516                           
 10517                           ;i2c.c: 89: _i2c_wait_idle();
 10518  01203A  EC70  F08C         	call	__i2c_wait_idle	;wreg free
 10519                           
 10520                           ;i2c.c: 90: _i2c_send(slave_address);
 10521  01203E  0100               	movlb	0	; () banked
 10522  012040  5168               	movf	__i2c_write@slave_address& (0+255),w,b
 10523  012042  EC54  F094         	call	__i2c_send
 10524                           
 10525                           ;i2c.c: 91: _i2c_wait_idle();
 10526  012046  EC70  F08C         	call	__i2c_wait_idle	;wreg free
 10527                           
 10528                           ;i2c.c: 93: for(cntr=0; cntr<length; ++cntr)
 10529  01204A  0E00               	movlw	0
 10530  01204C  0100               	movlb	0	; () banked
 10531  01204E  6F69               	movwf	__i2c_write@cntr& (0+255),b
 10532  012050  D00F               	goto	l1134
 10533  012052                     
 10534                           ; BSR set to: 0
 10535                           ;i2c.c: 94: {;i2c.c: 95: _i2c_send(data[cntr]);
 10536                           
 10537                           ; BSR set to: 0
 10538  012052  5169               	movf	__i2c_write@cntr& (0+255),w,b
 10539  012054  0D01               	mullw	1
 10540  012056  50F3               	movf	prodl,w,c
 10541  012058  2565               	addwf	__i2c_write@data& (0+255),w,b
 10542  01205A  6ED9               	movwf	fsr2l,c
 10543  01205C  50F4               	movf	prodh,w,c
 10544  01205E  2166               	addwfc	(__i2c_write@data+1)& (0+255),w,b
 10545  012060  6EDA               	movwf	fsr2h,c
 10546  012062  50DF               	movf	indf2,w,c
 10547  012064  EC54  F094         	call	__i2c_send
 10548                           
 10549                           ;i2c.c: 96: _i2c_wait_idle();
 10550  012068  EC70  F08C         	call	__i2c_wait_idle	;wreg free
 10551  01206C  0100               	movlb	0	; () banked
 10552  01206E  2B69               	incf	__i2c_write@cntr& (0+255),f,b
 10553  012070                     l1134:
 10554                           
 10555                           ; BSR set to: 0
 10556                           
 10557                           ; BSR set to: 0
 10558  012070  5167               	movf	__i2c_write@length& (0+255),w,b
 10559  012072  5D69               	subwf	__i2c_write@cntr& (0+255),w,b
 10560  012074  A0D8               	btfss	status,0,c
 10561  012076  D7ED               	goto	l1135
 10562                           
 10563                           ; BSR set to: 0
 10564                           ;i2c.c: 97: };i2c.c: 99: _i2c_stop();
 10565                           
 10566                           ; BSR set to: 0
 10567  012078  EC68  F094         	call	__i2c_stop	;wreg free
 10568  01207C  0012               	return		;funcret
 10569  01207E                     __end_of__i2c_write:
 10570                           	opt stack 0
 10571                           tblptru	equ	0xFF8
 10572                           tblptrh	equ	0xFF7
 10573                           tblptrl	equ	0xFF6
 10574                           tablat	equ	0xFF5
 10575                           prodh	equ	0xFF4
 10576                           prodl	equ	0xFF3
 10577                           postinc0	equ	0xFEE
 10578                           wreg	equ	0xFE8
 10579                           postdec1	equ	0xFE5
 10580                           plusw1	equ	0xFE3
 10581                           fsr1h	equ	0xFE2
 10582                           fsr1l	equ	0xFE1
 10583                           indf2	equ	0xFDF
 10584                           postinc2	equ	0xFDE
 10585                           plusw2	equ	0xFDB
 10586                           fsr2h	equ	0xFDA
 10587                           fsr2l	equ	0xFD9
 10588                           status	equ	0xFD8
 10589                           
 10590 ;; *************** function __i2c_wait_idle *****************
 10591 ;; Defined at:
 10592 ;;		line 39 in file "i2c.c"
 10593 ;; Parameters:    Size  Location     Type
 10594 ;;		None
 10595 ;; Auto vars:     Size  Location     Type
 10596 ;;		None
 10597 ;; Return value:  Size  Location     Type
 10598 ;;                  1    wreg      void 
 10599 ;; Registers used:
 10600 ;;		wreg, status,2, status,0
 10601 ;; Tracked objects:
 10602 ;;		On entry : 0/0
 10603 ;;		On exit  : 0/0
 10604 ;;		Unchanged: 0/0
 10605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10608 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10609 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10610 ;;Total ram usage:        5 bytes
 10611 ;; Hardware stack levels used:    1
 10612 ;; Hardware stack levels required when called:   10
 10613 ;; This function calls:
 10614 ;;		Nothing
 10615 ;; This function is called by:
 10616 ;;		__i2c_write
 10617 ;;		_i2c_display_write_fixed
 10618 ;;		__i2c_read
 10619 ;;		_i2c_adc_read
 10620 ;;		__i2c_eeprom_busy
 10621 ;;		_i2c_display_write
 10622 ;; This function uses a non-reentrant model
 10623 ;;
 10624                           
 10625                           	psect	text31
 10626  0118E0                     __ptext31:
 10627                           	opt stack 0
 10628  0118E0                     __i2c_wait_idle:
 10629                           	opt stack 17
 10630                           
 10631                           ;i2c.c: 41: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 10632                           
 10633                           ;incstack = 0
 10634  0118E0  A4C7               	btfss	4039,2,c	;volatile
 10635  0118E2  D004               	goto	u16870
 10636  0118E4  0100               	movlb	0	; () banked
 10637  0118E6  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 10638  0118E8  2B60               	incf	??__i2c_wait_idle& (0+255),f,b
 10639  0118EA  D002               	goto	u16878
 10640  0118EC                     u16870:
 10641  0118EC  0100               	movlb	0	; () banked
 10642  0118EE  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 10643  0118F0                     u16878:
 10644  0118F0  A0C5               	btfss	4037,0,c	;volatile
 10645  0118F2  D003               	goto	u16880
 10646  0118F4  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 10647  0118F6  2B61               	incf	(??__i2c_wait_idle+1)& (0+255),f,b
 10648  0118F8  D002               	goto	u16888
 10649  0118FA                     u16880:
 10650  0118FA  0100               	movlb	0	; () banked
 10651  0118FC  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 10652  0118FE                     u16888:
 10653  0118FE  A2C5               	btfss	4037,1,c	;volatile
 10654  011900  D003               	goto	u16890
 10655  011902  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 10656  011904  2B62               	incf	(??__i2c_wait_idle+2)& (0+255),f,b
 10657  011906  D002               	goto	u16898
 10658  011908                     u16890:
 10659  011908  0100               	movlb	0	; () banked
 10660  01190A  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 10661  01190C                     u16898:
 10662  01190C  A4C5               	btfss	4037,2,c	;volatile
 10663  01190E  D003               	goto	u16900
 10664  011910  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 10665  011912  2B63               	incf	(??__i2c_wait_idle+3)& (0+255),f,b
 10666  011914  D002               	goto	u16908
 10667  011916                     u16900:
 10668  011916  0100               	movlb	0	; () banked
 10669  011918  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 10670  01191A                     u16908:
 10671  01191A  A6C5               	btfss	4037,3,c	;volatile
 10672  01191C  D003               	goto	u16910
 10673  01191E  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 10674  011920  2B64               	incf	(??__i2c_wait_idle+4)& (0+255),f,b
 10675  011922  D002               	goto	u16918
 10676  011924                     u16910:
 10677  011924  0100               	movlb	0	; () banked
 10678  011926  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 10679  011928                     u16918:
 10680  011928  A8C5               	btfss	4037,4,c	;volatile
 10681  01192A  D002               	goto	u16920
 10682  01192C  0E01               	movlw	1
 10683  01192E  D001               	goto	u16926
 10684  011930                     u16920:
 10685  011930  0E00               	movlw	0
 10686  011932                     u16926:
 10687  011932  1164               	iorwf	(??__i2c_wait_idle+4)& (0+255),w,b
 10688  011934  1163               	iorwf	(??__i2c_wait_idle+3)& (0+255),w,b
 10689  011936  1162               	iorwf	(??__i2c_wait_idle+2)& (0+255),w,b
 10690  011938  1161               	iorwf	(??__i2c_wait_idle+1)& (0+255),w,b
 10691  01193A  1160               	iorwf	??__i2c_wait_idle& (0+255),w,b
 10692  01193C  0900               	iorlw	0
 10693  01193E  B4D8               	btfsc	status,2,c
 10694  011940  0012               	return	
 10695  011942  D7CE               	goto	__i2c_wait_idle
 10696  011944                     __end_of__i2c_wait_idle:
 10697                           	opt stack 0
 10698                           tblptru	equ	0xFF8
 10699                           tblptrh	equ	0xFF7
 10700                           tblptrl	equ	0xFF6
 10701                           tablat	equ	0xFF5
 10702                           prodh	equ	0xFF4
 10703                           prodl	equ	0xFF3
 10704                           postinc0	equ	0xFEE
 10705                           wreg	equ	0xFE8
 10706                           postdec1	equ	0xFE5
 10707                           plusw1	equ	0xFE3
 10708                           fsr1h	equ	0xFE2
 10709                           fsr1l	equ	0xFE1
 10710                           indf2	equ	0xFDF
 10711                           postinc2	equ	0xFDE
 10712                           plusw2	equ	0xFDB
 10713                           fsr2h	equ	0xFDA
 10714                           fsr2l	equ	0xFD9
 10715                           status	equ	0xFD8
 10716                           
 10717 ;; *************** function __i2c_stop *****************
 10718 ;; Defined at:
 10719 ;;		line 62 in file "i2c.c"
 10720 ;; Parameters:    Size  Location     Type
 10721 ;;		None
 10722 ;; Auto vars:     Size  Location     Type
 10723 ;;		None
 10724 ;; Return value:  Size  Location     Type
 10725 ;;                  1    wreg      void 
 10726 ;; Registers used:
 10727 ;;		None
 10728 ;; Tracked objects:
 10729 ;;		On entry : 0/0
 10730 ;;		On exit  : 0/0
 10731 ;;		Unchanged: 0/0
 10732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10737 ;;Total ram usage:        0 bytes
 10738 ;; Hardware stack levels used:    1
 10739 ;; Hardware stack levels required when called:   10
 10740 ;; This function calls:
 10741 ;;		Nothing
 10742 ;; This function is called by:
 10743 ;;		__i2c_write
 10744 ;;		_i2c_display_write_fixed
 10745 ;;		__i2c_read
 10746 ;;		_i2c_adc_read
 10747 ;;		__i2c_eeprom_busy
 10748 ;;		_i2c_display_write
 10749 ;; This function uses a non-reentrant model
 10750 ;;
 10751                           
 10752                           	psect	text32
 10753  0128D0                     __ptext32:
 10754                           	opt stack 0
 10755  0128D0                     __i2c_stop:
 10756                           	opt stack 17
 10757                           
 10758                           ;i2c.c: 64: SSP1CON2bits.PEN = 1;
 10759                           
 10760                           ; BSR set to: 0
 10761                           ;incstack = 0
 10762  0128D0  84C5               	bsf	4037,2,c	;volatile
 10763  0128D2  A4C5               	btfss	4037,2,c	;volatile
 10764  0128D4  0012               	return	
 10765  0128D6  D7FD               	goto	l1117
 10766  0128D8                     __end_of__i2c_stop:
 10767                           	opt stack 0
 10768                           tblptru	equ	0xFF8
 10769                           tblptrh	equ	0xFF7
 10770                           tblptrl	equ	0xFF6
 10771                           tablat	equ	0xFF5
 10772                           prodh	equ	0xFF4
 10773                           prodl	equ	0xFF3
 10774                           postinc0	equ	0xFEE
 10775                           wreg	equ	0xFE8
 10776                           postdec1	equ	0xFE5
 10777                           plusw1	equ	0xFE3
 10778                           fsr1h	equ	0xFE2
 10779                           fsr1l	equ	0xFE1
 10780                           indf2	equ	0xFDF
 10781                           postinc2	equ	0xFDE
 10782                           plusw2	equ	0xFDB
 10783                           fsr2h	equ	0xFDA
 10784                           fsr2l	equ	0xFD9
 10785                           status	equ	0xFD8
 10786                           
 10787 ;; *************** function __i2c_start *****************
 10788 ;; Defined at:
 10789 ;;		line 44 in file "i2c.c"
 10790 ;; Parameters:    Size  Location     Type
 10791 ;;		None
 10792 ;; Auto vars:     Size  Location     Type
 10793 ;;		None
 10794 ;; Return value:  Size  Location     Type
 10795 ;;                  1    wreg      void 
 10796 ;; Registers used:
 10797 ;;		None
 10798 ;; Tracked objects:
 10799 ;;		On entry : 0/0
 10800 ;;		On exit  : 0/0
 10801 ;;		Unchanged: 0/0
 10802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10807 ;;Total ram usage:        0 bytes
 10808 ;; Hardware stack levels used:    1
 10809 ;; Hardware stack levels required when called:   10
 10810 ;; This function calls:
 10811 ;;		Nothing
 10812 ;; This function is called by:
 10813 ;;		__i2c_write
 10814 ;;		_i2c_display_write_fixed
 10815 ;;		__i2c_read
 10816 ;;		_i2c_adc_read
 10817 ;;		__i2c_eeprom_busy
 10818 ;;		_i2c_display_write
 10819 ;; This function uses a non-reentrant model
 10820 ;;
 10821                           
 10822                           	psect	text33
 10823  0128D8                     __ptext33:
 10824                           	opt stack 0
 10825  0128D8                     __i2c_start:
 10826                           	opt stack 17
 10827                           
 10828                           ;i2c.c: 46: SSP1CON2bits.SEN=1;
 10829                           
 10830                           ;incstack = 0
 10831  0128D8  80C5               	bsf	4037,0,c	;volatile
 10832  0128DA  A0C5               	btfss	4037,0,c	;volatile
 10833  0128DC  0012               	return	
 10834  0128DE  D7FD               	goto	l1102
 10835  0128E0                     __end_of__i2c_start:
 10836                           	opt stack 0
 10837                           tblptru	equ	0xFF8
 10838                           tblptrh	equ	0xFF7
 10839                           tblptrl	equ	0xFF6
 10840                           tablat	equ	0xFF5
 10841                           prodh	equ	0xFF4
 10842                           prodl	equ	0xFF3
 10843                           postinc0	equ	0xFEE
 10844                           wreg	equ	0xFE8
 10845                           postdec1	equ	0xFE5
 10846                           plusw1	equ	0xFE3
 10847                           fsr1h	equ	0xFE2
 10848                           fsr1l	equ	0xFE1
 10849                           indf2	equ	0xFDF
 10850                           postinc2	equ	0xFDE
 10851                           plusw2	equ	0xFDB
 10852                           fsr2h	equ	0xFDA
 10853                           fsr2l	equ	0xFD9
 10854                           status	equ	0xFD8
 10855                           
 10856 ;; *************** function __i2c_send *****************
 10857 ;; Defined at:
 10858 ;;		line 50 in file "i2c.c"
 10859 ;; Parameters:    Size  Location     Type
 10860 ;;  dat             1    wreg     unsigned char 
 10861 ;; Auto vars:     Size  Location     Type
 10862 ;;  dat             1    0[BANK0 ] unsigned char 
 10863 ;; Return value:  Size  Location     Type
 10864 ;;                  1    wreg      void 
 10865 ;; Registers used:
 10866 ;;		wreg
 10867 ;; Tracked objects:
 10868 ;;		On entry : 0/0
 10869 ;;		On exit  : 0/0
 10870 ;;		Unchanged: 0/0
 10871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10873 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10875 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10876 ;;Total ram usage:        1 bytes
 10877 ;; Hardware stack levels used:    1
 10878 ;; Hardware stack levels required when called:   10
 10879 ;; This function calls:
 10880 ;;		Nothing
 10881 ;; This function is called by:
 10882 ;;		__i2c_write
 10883 ;;		_i2c_display_write_fixed
 10884 ;;		__i2c_read
 10885 ;;		_i2c_adc_read
 10886 ;;		__i2c_eeprom_busy
 10887 ;;		_i2c_display_write
 10888 ;; This function uses a non-reentrant model
 10889 ;;
 10890                           
 10891                           	psect	text34
 10892  0128A8                     __ptext34:
 10893                           	opt stack 0
 10894  0128A8                     __i2c_send:
 10895                           	opt stack 17
 10896                           
 10897                           ;incstack = 0
 10898                           ;__i2c_send@dat stored from wreg
 10899  0128A8  0100               	movlb	0	; () banked
 10900  0128AA  6F60               	movwf	__i2c_send@dat& (0+255),b
 10901                           
 10902                           ;i2c.c: 52: SSP1BUF = dat;
 10903  0128AC  C060  FFC9         	movff	__i2c_send@dat,4041	;volatile
 10904  0128B0  0012               	return		;funcret
 10905  0128B2                     __end_of__i2c_send:
 10906                           	opt stack 0
 10907                           tblptru	equ	0xFF8
 10908                           tblptrh	equ	0xFF7
 10909                           tblptrl	equ	0xFF6
 10910                           tablat	equ	0xFF5
 10911                           prodh	equ	0xFF4
 10912                           prodl	equ	0xFF3
 10913                           postinc0	equ	0xFEE
 10914                           wreg	equ	0xFE8
 10915                           postdec1	equ	0xFE5
 10916                           plusw1	equ	0xFE3
 10917                           fsr1h	equ	0xFE2
 10918                           fsr1l	equ	0xFE1
 10919                           indf2	equ	0xFDF
 10920                           postinc2	equ	0xFDE
 10921                           plusw2	equ	0xFDB
 10922                           fsr2h	equ	0xFDA
 10923                           fsr2l	equ	0xFD9
 10924                           status	equ	0xFD8
 10925                           
 10926 ;; *************** function __system_timer0_init *****************
 10927 ;; Defined at:
 10928 ;;		line 121 in file "os.c"
 10929 ;; Parameters:    Size  Location     Type
 10930 ;;		None
 10931 ;; Auto vars:     Size  Location     Type
 10932 ;;		None
 10933 ;; Return value:  Size  Location     Type
 10934 ;;                  1    wreg      void 
 10935 ;; Registers used:
 10936 ;;		wreg, status,2
 10937 ;; Tracked objects:
 10938 ;;		On entry : 0/0
 10939 ;;		On exit  : 0/0
 10940 ;;		Unchanged: 0/0
 10941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10946 ;;Total ram usage:        0 bytes
 10947 ;; Hardware stack levels used:    1
 10948 ;; Hardware stack levels required when called:   10
 10949 ;; This function calls:
 10950 ;;		Nothing
 10951 ;; This function is called by:
 10952 ;;		_system_init
 10953 ;; This function uses a non-reentrant model
 10954 ;;
 10955                           
 10956                           	psect	text35
 10957  01263C                     __ptext35:
 10958                           	opt stack 0
 10959  01263C                     __system_timer0_init:
 10960                           	opt stack 19
 10961                           
 10962                           ;os.c: 126: T0CONbits.T0CS = 0;
 10963                           
 10964                           ;incstack = 0
 10965  01263C  9AD5               	bcf	4053,5,c	;volatile
 10966                           
 10967                           ;os.c: 128: T0CONbits.T08BIT = 0;
 10968  01263E  9CD5               	bcf	4053,6,c	;volatile
 10969                           
 10970                           ;os.c: 130: T0CONbits.T0PS2 = 0;
 10971  012640  94D5               	bcf	4053,2,c	;volatile
 10972                           
 10973                           ;os.c: 131: T0CONbits.T0PS1 = 1;
 10974  012642  82D5               	bsf	4053,1,c	;volatile
 10975                           
 10976                           ;os.c: 132: T0CONbits.T0PS0 = 0;
 10977  012644  90D5               	bcf	4053,0,c	;volatile
 10978                           
 10979                           ;os.c: 134: T0CONbits.PSA = 0;
 10980  012646  96D5               	bcf	4053,3,c	;volatile
 10981                           
 10982                           ;os.c: 136: TMR0H = 0xFA;
 10983  012648  0EFA               	movlw	250
 10984  01264A  6ED7               	movwf	4055,c	;volatile
 10985                           
 10986                           ;os.c: 137: TMR0L = 0x24;
 10987  01264C  0E24               	movlw	36
 10988  01264E  6ED6               	movwf	4054,c	;volatile
 10989                           
 10990                           ;os.c: 139: T0CONbits.TMR0ON = 1;
 10991  012650  8ED5               	bsf	4053,7,c	;volatile
 10992                           
 10993                           ;os.c: 142: INTCONbits.TMR0IF = 0;
 10994  012652  94F2               	bcf	intcon,2,c	;volatile
 10995                           
 10996                           ;os.c: 143: INTCONbits.TMR0IE = 1;
 10997  012654  8AF2               	bsf	intcon,5,c	;volatile
 10998                           
 10999                           ;os.c: 144: INTCONbits.GIE = 1;
 11000  012656  8EF2               	bsf	intcon,7,c	;volatile
 11001                           
 11002                           ;os.c: 147: os.subTimeSlot = 0;
 11003  012658  0E00               	movlw	0
 11004  01265A  0100               	movlb	0	; () banked
 11005  01265C  6FD3               	movwf	_os& (0+255),b	;volatile
 11006                           
 11007                           ;os.c: 148: os.timeSlot = 0;
 11008  01265E  0E00               	movlw	0
 11009  012660  6FD4               	movwf	(_os+1)& (0+255),b	;volatile
 11010                           
 11011                           ;os.c: 149: os.done = 0;
 11012  012662  0E00               	movlw	0
 11013  012664  6FD5               	movwf	(_os+2)& (0+255),b	;volatile
 11014                           
 11015                           ; BSR set to: 0
 11016  012666  0012               	return		;funcret
 11017  012668                     __end_of__system_timer0_init:
 11018                           	opt stack 0
 11019                           tblptru	equ	0xFF8
 11020                           tblptrh	equ	0xFF7
 11021                           tblptrl	equ	0xFF6
 11022                           tablat	equ	0xFF5
 11023                           prodh	equ	0xFF4
 11024                           prodl	equ	0xFF3
 11025                           intcon	equ	0xFF2
 11026                           postinc0	equ	0xFEE
 11027                           wreg	equ	0xFE8
 11028                           postdec1	equ	0xFE5
 11029                           plusw1	equ	0xFE3
 11030                           fsr1h	equ	0xFE2
 11031                           fsr1l	equ	0xFE1
 11032                           indf2	equ	0xFDF
 11033                           postinc2	equ	0xFDE
 11034                           plusw2	equ	0xFDB
 11035                           fsr2h	equ	0xFDA
 11036                           fsr2l	equ	0xFD9
 11037                           status	equ	0xFD8
 11038                           
 11039 ;; *************** function __system_pin_setup *****************
 11040 ;; Defined at:
 11041 ;;		line 55 in file "os.c"
 11042 ;; Parameters:    Size  Location     Type
 11043 ;;		None
 11044 ;; Auto vars:     Size  Location     Type
 11045 ;;		None
 11046 ;; Return value:  Size  Location     Type
 11047 ;;                  1    wreg      void 
 11048 ;; Registers used:
 11049 ;;		wreg, status,2
 11050 ;; Tracked objects:
 11051 ;;		On entry : 0/0
 11052 ;;		On exit  : 0/0
 11053 ;;		Unchanged: 0/0
 11054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11059 ;;Total ram usage:        0 bytes
 11060 ;; Hardware stack levels used:    1
 11061 ;; Hardware stack levels required when called:   10
 11062 ;; This function calls:
 11063 ;;		Nothing
 11064 ;; This function is called by:
 11065 ;;		_system_init
 11066 ;; This function uses a non-reentrant model
 11067 ;;
 11068                           
 11069                           	psect	text36
 11070  011876                     __ptext36:
 11071                           	opt stack 0
 11072  011876                     __system_pin_setup:
 11073                           	opt stack 19
 11074                           
 11075                           ;os.c: 58: TRISDbits.TRISD5 = 1;
 11076                           
 11077                           ; BSR set to: 0
 11078                           ;incstack = 0
 11079  011876  8A95               	bsf	3989,5,c	;volatile
 11080                           
 11081                           ;os.c: 59: TRISDbits.TRISD4 = 0;
 11082  011878  9895               	bcf	3989,4,c	;volatile
 11083                           
 11084                           ;os.c: 60: TRISDbits.TRISD6 = 0;
 11085  01187A  9C95               	bcf	3989,6,c	;volatile
 11086                           
 11087                           ;os.c: 61: TRISDbits.TRISD7 = 0;
 11088  01187C  9E95               	bcf	3989,7,c	;volatile
 11089                           
 11090                           ;os.c: 62: LATDbits.LD7 = 1;
 11091  01187E  8E8C               	bsf	3980,7,c	;volatile
 11092                           
 11093                           ;os.c: 64: TRISBbits.TRISB3 = 1;
 11094  011880  8693               	bsf	3987,3,c	;volatile
 11095                           
 11096                           ;os.c: 65: ANCON1bits.PCFG9 = 0;
 11097  011882  010F               	movlb	15	; () banked
 11098  011884  9349               	bcf	73,1,b	;volatile
 11099                           
 11100                           ;os.c: 67: TRISCbits.TRISC7 = 0;
 11101  011886  9E94               	bcf	3988,7,c	;volatile
 11102                           
 11103                           ;os.c: 68: LATCbits.LC7 = 0;
 11104  011888  9E8B               	bcf	3979,7,c	;volatile
 11105                           
 11106                           ;os.c: 70: TRISCbits.TRISC6 = 0;
 11107  01188A  9C94               	bcf	3988,6,c	;volatile
 11108                           
 11109                           ;os.c: 71: LATCbits.LC6 = 0;
 11110  01188C  9C8B               	bcf	3979,6,c	;volatile
 11111                           
 11112                           ;os.c: 73: TRISAbits.TRISA3 = 0;
 11113  01188E  9692               	bcf	3986,3,c	;volatile
 11114                           
 11115                           ;os.c: 74: LATAbits.LA3 = 0;
 11116  011890  9689               	bcf	3977,3,c	;volatile
 11117                           
 11118                           ;os.c: 76: TRISCbits.TRISC1 = 0;
 11119  011892  9294               	bcf	3988,1,c	;volatile
 11120                           
 11121                           ;os.c: 77: LATCbits.LC1 = 0;
 11122  011894  928B               	bcf	3979,1,c	;volatile
 11123                           
 11124                           ;os.c: 82: TRISBbits.TRISB5 = 1;
 11125  011896  8A93               	bsf	3987,5,c	;volatile
 11126                           
 11127                           ;os.c: 83: TRISBbits.TRISB4 = 1;
 11128  011898  8893               	bsf	3987,4,c	;volatile
 11129                           
 11130                           ;os.c: 85: TRISBbits.TRISB0 = 0;
 11131  01189A  9093               	bcf	3987,0,c	;volatile
 11132                           
 11133                           ;os.c: 86: LATBbits.LB0 = 1;
 11134  01189C  808A               	bsf	3978,0,c	;volatile
 11135                           
 11136                           ;os.c: 88: TRISBbits.TRISB2 = 0;
 11137  01189E  9493               	bcf	3987,2,c	;volatile
 11138                           
 11139                           ;os.c: 89: LATBbits.LB2 = 0;
 11140  0118A0  948A               	bcf	3978,2,c	;volatile
 11141                           
 11142                           ;os.c: 91: TRISBbits.TRISB1 = 0;
 11143  0118A2  9293               	bcf	3987,1,c	;volatile
 11144                           
 11145                           ;os.c: 92: ANCON1bits.PCFG10 = 1;
 11146  0118A4  8549               	bsf	73,2,b	;volatile
 11147                           
 11148                           ;os.c: 93: LATBbits.LB1 = 0;
 11149  0118A6  928A               	bcf	3978,1,c	;volatile
 11150                           
 11151                           ; BSR set to: 15
 11152                           ;os.c: 94: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 11153  0118A8  0E55               	movlw	85
 11154  0118AA  6EA7               	movwf	4007,c	;volsfr
 11155  0118AC  0EAA               	movlw	170
 11156  0118AE  6EA7               	movwf	4007,c	;volsfr
 11157                           
 11158                           ; BSR set to: 15
 11159  0118B0  010E               	movlb	14	; () banked
 11160  0118B2  91BF               	bcf	191,0,b	;volatile
 11161                           
 11162                           ;os.c: 95: RPOR4 = 14;
 11163  0118B4  0E0E               	movlw	14
 11164  0118B6  6FC4               	movwf	196,b	;volatile
 11165                           
 11166                           ;os.c: 96: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 11167  0118B8  0E55               	movlw	85
 11168  0118BA  6EA7               	movwf	4007,c	;volsfr
 11169  0118BC  0EAA               	movlw	170
 11170  0118BE  6EA7               	movwf	4007,c	;volsfr
 11171                           
 11172                           ; BSR set to: 14
 11173  0118C0  81BF               	bsf	191,0,b	;volatile
 11174                           
 11175                           ; BSR set to: 14
 11176                           ;os.c: 98: TRISDbits.TRISD2 = 1;
 11177  0118C2  8495               	bsf	3989,2,c	;volatile
 11178                           
 11179                           ; BSR set to: 14
 11180                           ;os.c: 100: TRISEbits.TRISE2 = 1;
 11181  0118C4  8496               	bsf	3990,2,c	;volatile
 11182                           
 11183                           ; BSR set to: 14
 11184                           ;os.c: 101: ANCON0bits.PCFG7 = 1;
 11185  0118C6  010F               	movlb	15	; () banked
 11186  0118C8  8F48               	bsf	72,7,b	;volatile
 11187                           
 11188                           ; BSR set to: 15
 11189                           ;os.c: 103: TRISEbits.TRISE0 = 1;
 11190  0118CA  8096               	bsf	3990,0,c	;volatile
 11191                           
 11192                           ; BSR set to: 15
 11193                           ;os.c: 104: ANCON0bits.PCFG5 = 1;
 11194  0118CC  8B48               	bsf	72,5,b	;volatile
 11195                           
 11196                           ; BSR set to: 15
 11197                           ;os.c: 106: TRISEbits.TRISE1 = 1;
 11198  0118CE  8296               	bsf	3990,1,c	;volatile
 11199                           
 11200                           ; BSR set to: 15
 11201                           ;os.c: 107: ANCON0bits.PCFG6 = 1;
 11202  0118D0  8D48               	bsf	72,6,b	;volatile
 11203                           
 11204                           ; BSR set to: 15
 11205                           ;os.c: 109: TRISAbits.TRISA0 = 1;
 11206  0118D2  8092               	bsf	3986,0,c	;volatile
 11207                           
 11208                           ; BSR set to: 15
 11209                           ;os.c: 110: ANCON0bits.PCFG0 = 1;
 11210  0118D4  8148               	bsf	72,0,b	;volatile
 11211                           
 11212                           ; BSR set to: 15
 11213                           ;os.c: 112: TRISAbits.TRISA2 = 1;
 11214  0118D6  8492               	bsf	3986,2,c	;volatile
 11215                           
 11216                           ; BSR set to: 15
 11217                           ;os.c: 113: ANCON0bits.PCFG2 = 1;
 11218  0118D8  8548               	bsf	72,2,b	;volatile
 11219                           
 11220                           ; BSR set to: 15
 11221                           ;os.c: 115: TRISAbits.TRISA1 = 1;
 11222  0118DA  8292               	bsf	3986,1,c	;volatile
 11223                           
 11224                           ; BSR set to: 15
 11225                           ;os.c: 116: ANCON0bits.PCFG1 = 1;
 11226  0118DC  8348               	bsf	72,1,b	;volatile
 11227                           
 11228                           ; BSR set to: 15
 11229  0118DE  0012               	return		;funcret
 11230  0118E0                     __end_of__system_pin_setup:
 11231                           	opt stack 0
 11232                           tblptru	equ	0xFF8
 11233                           tblptrh	equ	0xFF7
 11234                           tblptrl	equ	0xFF6
 11235                           tablat	equ	0xFF5
 11236                           prodh	equ	0xFF4
 11237                           prodl	equ	0xFF3
 11238                           intcon	equ	0xFF2
 11239                           postinc0	equ	0xFEE
 11240                           wreg	equ	0xFE8
 11241                           postdec1	equ	0xFE5
 11242                           plusw1	equ	0xFE3
 11243                           fsr1h	equ	0xFE2
 11244                           fsr1l	equ	0xFE1
 11245                           indf2	equ	0xFDF
 11246                           postinc2	equ	0xFDE
 11247                           plusw2	equ	0xFDB
 11248                           fsr2h	equ	0xFDA
 11249                           fsr2l	equ	0xFD9
 11250                           status	equ	0xFD8
 11251                           
 11252 ;; *************** function __backlight_init *****************
 11253 ;; Defined at:
 11254 ;;		line 154 in file "os.c"
 11255 ;; Parameters:    Size  Location     Type
 11256 ;;		None
 11257 ;; Auto vars:     Size  Location     Type
 11258 ;;		None
 11259 ;; Return value:  Size  Location     Type
 11260 ;;                  1    wreg      void 
 11261 ;; Registers used:
 11262 ;;		None
 11263 ;; Tracked objects:
 11264 ;;		On entry : 0/0
 11265 ;;		On exit  : 0/0
 11266 ;;		Unchanged: 0/0
 11267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11272 ;;Total ram usage:        0 bytes
 11273 ;; Hardware stack levels used:    1
 11274 ;; Hardware stack levels required when called:   10
 11275 ;; This function calls:
 11276 ;;		Nothing
 11277 ;; This function is called by:
 11278 ;;		_system_init
 11279 ;; This function uses a non-reentrant model
 11280 ;;
 11281                           
 11282                           	psect	text37
 11283  0128E0                     __ptext37:
 11284                           	opt stack 0
 11285  0128E0                     __backlight_init:
 11286                           	opt stack 19
 11287                           
 11288                           ;os.c: 156: LATCbits.LC1 = 1;
 11289                           
 11290                           ; BSR set to: 15
 11291                           ;incstack = 0
 11292  0128E0  828B               	bsf	3979,1,c	;volatile
 11293  0128E2  0012               	return		;funcret
 11294  0128E4                     __end_of__backlight_init:
 11295                           	opt stack 0
 11296                           tblptru	equ	0xFF8
 11297                           tblptrh	equ	0xFF7
 11298                           tblptrl	equ	0xFF6
 11299                           tablat	equ	0xFF5
 11300                           prodh	equ	0xFF4
 11301                           prodl	equ	0xFF3
 11302                           intcon	equ	0xFF2
 11303                           postinc0	equ	0xFEE
 11304                           wreg	equ	0xFE8
 11305                           postdec1	equ	0xFE5
 11306                           plusw1	equ	0xFE3
 11307                           fsr1h	equ	0xFE2
 11308                           fsr1l	equ	0xFE1
 11309                           indf2	equ	0xFDF
 11310                           postinc2	equ	0xFDE
 11311                           plusw2	equ	0xFDB
 11312                           fsr2h	equ	0xFDA
 11313                           fsr2l	equ	0xFD9
 11314                           status	equ	0xFD8
 11315                           
 11316 ;; *************** function _motor_process_cue *****************
 11317 ;; Defined at:
 11318 ;;		line 116 in file "motor.c"
 11319 ;; Parameters:    Size  Location     Type
 11320 ;;		None
 11321 ;; Auto vars:     Size  Location     Type
 11322 ;;		None
 11323 ;; Return value:  Size  Location     Type
 11324 ;;                  1    wreg      void 
 11325 ;; Registers used:
 11326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11327 ;; Tracked objects:
 11328 ;;		On entry : 0/0
 11329 ;;		On exit  : 0/0
 11330 ;;		Unchanged: 0/0
 11331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11336 ;;Total ram usage:        0 bytes
 11337 ;; Hardware stack levels used:    1
 11338 ;; Hardware stack levels required when called:   11
 11339 ;; This function calls:
 11340 ;;		__motor_run
 11341 ;;		_motor_items_in_cue
 11342 ;; This function is called by:
 11343 ;;		_main
 11344 ;; This function uses a non-reentrant model
 11345 ;;
 11346                           
 11347                           	psect	text38
 11348  0116B4                     __ptext38:
 11349                           	opt stack 0
 11350  0116B4                     _motor_process_cue:
 11351                           	opt stack 19
 11352                           
 11353                           ;motor.c: 118: if(motor_items_in_cue()==0)
 11354                           
 11355                           ;incstack = 0
 11356  0116B4  EC63  F094         	call	_motor_items_in_cue	;wreg free
 11357  0116B8  0900               	iorlw	0
 11358  0116BA  B4D8               	btfsc	status,2,c
 11359  0116BC  0012               	return	
 11360                           
 11361                           ;motor.c: 123: else if(os.busy)
 11362                           
 11363                           ;motor.c: 122: }
 11364                           
 11365                           ;motor.c: 119: {;motor.c: 121: return;
 11366  0116BE  0100               	movlb	0	; () banked
 11367  0116C0  51E1               	movf	(_os+14)& (0+255),w,b	;volatile
 11368  0116C2  A4D8               	btfss	status,2,c
 11369  0116C4  0012               	return	
 11370                           
 11371                           ; BSR set to: 0
 11372                           ;motor.c: 128: else;motor.c: 129: {;motor.c: 131: _motor_run(;motor.c: 132: motor_comman
      +                          d_cue[motor_cue_read_index].direction,;motor.c: 133: motor_command_cue[motor_cue_read_in
      +                          dex].distance,;motor.c: 134: motor_command_cue[motor_cue_read_index].speed;motor.c: 135:
      +                           );
 11373                           
 11374                           ; BSR set to: 0
 11375                           
 11376                           ; BSR set to: 0
 11377                           ;motor.c: 127: }
 11378                           
 11379                           ; BSR set to: 0
 11380                           ;motor.c: 124: {;motor.c: 126: return;
 11381  0116C6  5023               	movf	_motor_cue_read_index,w,c
 11382  0116C8  0D07               	mullw	7
 11383  0116CA  0E01               	movlw	1
 11384  0116CC  26F3               	addwf	prodl,f,c
 11385  0116CE  0E00               	movlw	0
 11386  0116D0  22F4               	addwfc	prodh,f,c
 11387  0116D2  0E00               	movlw	low _motor_command_cue
 11388  0116D4  24F3               	addwf	prodl,w,c
 11389  0116D6  6ED9               	movwf	fsr2l,c
 11390  0116D8  0E02               	movlw	high _motor_command_cue
 11391  0116DA  20F4               	addwfc	prodh,w,c
 11392  0116DC  6EDA               	movwf	fsr2h,c
 11393  0116DE  CFDE F060          	movff	postinc2,__motor_run@distance_in_steps
 11394  0116E2  CFDE F061          	movff	postinc2,__motor_run@distance_in_steps+1
 11395  0116E6  CFDE F062          	movff	postinc2,__motor_run@distance_in_steps+2
 11396  0116EA  CFDE F063          	movff	postinc2,__motor_run@distance_in_steps+3
 11397  0116EE  5023               	movf	_motor_cue_read_index,w,c
 11398  0116F0  0D07               	mullw	7
 11399  0116F2  0E05               	movlw	5
 11400  0116F4  26F3               	addwf	prodl,f,c
 11401  0116F6  0E00               	movlw	0
 11402  0116F8  22F4               	addwfc	prodh,f,c
 11403  0116FA  0E00               	movlw	low _motor_command_cue
 11404  0116FC  24F3               	addwf	prodl,w,c
 11405  0116FE  6ED9               	movwf	fsr2l,c
 11406  011700  0E02               	movlw	high _motor_command_cue
 11407  011702  20F4               	addwfc	prodh,w,c
 11408  011704  6EDA               	movwf	fsr2h,c
 11409  011706  CFDE F064          	movff	postinc2,__motor_run@speed
 11410  01170A  CFDD F065          	movff	postdec2,__motor_run@speed+1
 11411  01170E  5023               	movf	_motor_cue_read_index,w,c
 11412  011710  0D07               	mullw	7
 11413  011712  0E00               	movlw	low _motor_command_cue
 11414  011714  24F3               	addwf	prodl,w,c
 11415  011716  6ED9               	movwf	fsr2l,c
 11416  011718  0E02               	movlw	high _motor_command_cue
 11417  01171A  20F4               	addwfc	prodh,w,c
 11418  01171C  6EDA               	movwf	fsr2h,c
 11419  01171E  50DF               	movf	indf2,w,c
 11420  011720  EC91  F06E         	call	__motor_run
 11421                           
 11422                           ;motor.c: 137: ++motor_cue_read_index;
 11423  011724  2A23               	incf	_motor_cue_read_index,f,c
 11424  011726  0012               	return	
 11425  011728                     __end_of_motor_process_cue:
 11426                           	opt stack 0
 11427                           tblptru	equ	0xFF8
 11428                           tblptrh	equ	0xFF7
 11429                           tblptrl	equ	0xFF6
 11430                           tablat	equ	0xFF5
 11431                           prodh	equ	0xFF4
 11432                           prodl	equ	0xFF3
 11433                           intcon	equ	0xFF2
 11434                           postinc0	equ	0xFEE
 11435                           wreg	equ	0xFE8
 11436                           postdec1	equ	0xFE5
 11437                           plusw1	equ	0xFE3
 11438                           fsr1h	equ	0xFE2
 11439                           fsr1l	equ	0xFE1
 11440                           indf2	equ	0xFDF
 11441                           postinc2	equ	0xFDE
 11442                           postdec2	equ	0xFDD
 11443                           plusw2	equ	0xFDB
 11444                           fsr2h	equ	0xFDA
 11445                           fsr2l	equ	0xFD9
 11446                           status	equ	0xFD8
 11447                           
 11448 ;; *************** function _encoder_statemachine *****************
 11449 ;; Defined at:
 11450 ;;		line 132 in file "encoder.c"
 11451 ;; Parameters:    Size  Location     Type
 11452 ;;		None
 11453 ;; Auto vars:     Size  Location     Type
 11454 ;;  tmp             4  104[BANK0 ] float 
 11455 ;;  distance_to_    4    0        long 
 11456 ;;  target_posit    4    0        unsigned long 
 11457 ;;  target_divid    2  102[BANK0 ] unsigned int 
 11458 ;; Return value:  Size  Location     Type
 11459 ;;                  1    wreg      void 
 11460 ;; Registers used:
 11461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11462 ;; Tracked objects:
 11463 ;;		On entry : 0/0
 11464 ;;		On exit  : 0/0
 11465 ;;		Unchanged: 0/0
 11466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11468 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11469 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11470 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11471 ;;Total ram usage:       14 bytes
 11472 ;; Hardware stack levels used:    1
 11473 ;; Hardware stack levels required when called:   14
 11474 ;; This function calls:
 11475 ;;		___fldiv
 11476 ;;		___flmul
 11477 ;;		___fltol
 11478 ;;		___xxtofl
 11479 ;;		_encoder_next_arc_step_size
 11480 ;;		_encoder_next_divide_step_size
 11481 ;;		_encoder_next_setup_stepsize
 11482 ;;		_motor_change_speed
 11483 ;;		_motor_go_to_degrees_position
 11484 ;;		_motor_nonzero_steps_from_degrees
 11485 ;;		_motor_schedule_command
 11486 ;;		_motor_stop
 11487 ;; This function is called by:
 11488 ;;		_main
 11489 ;; This function uses a non-reentrant model
 11490 ;;
 11491                           
 11492                           	psect	text39
 11493  00A238                     __ptext39:
 11494                           	opt stack 0
 11495  00A238                     _encoder_statemachine:
 11496                           	opt stack 16
 11497                           
 11498                           ;encoder.c: 134: uint16_t target_divide_position;;encoder.c: 135: uint32_t target_positi
      +                          on_in_steps;;encoder.c: 136: int32_t distance_to_target_in_steps;;encoder.c: 137: float 
      +                          tmp;;encoder.c: 140: if(os.encoder1Count==0 && os.encoder2Count==0 && os.button1==0 && o
      +                          s.button2==0)
 11499                           
 11500                           ;incstack = 0
 11501  00A238  0100               	movlb	0	; () banked
 11502  00A23A  51D6               	movf	(_os+3)& (0+255),w,b	;volatile
 11503  00A23C  A4D8               	btfss	status,2,c
 11504  00A23E  EFD4  F057         	goto	l2485
 11505                           
 11506                           ; BSR set to: 0
 11507  00A242  51D8               	movf	(_os+5)& (0+255),w,b	;volatile
 11508  00A244  A4D8               	btfss	status,2,c
 11509  00A246  EFD4  F057         	goto	l2485
 11510                           
 11511                           ; BSR set to: 0
 11512  00A24A  51D7               	movf	(_os+4)& (0+255),w,b	;volatile
 11513  00A24C  A4D8               	btfss	status,2,c
 11514  00A24E  EFD4  F057         	goto	l2485
 11515                           
 11516                           ; BSR set to: 0
 11517  00A252  51D9               	movf	(_os+6)& (0+255),w,b	;volatile
 11518  00A254  B4D8               	btfsc	status,2,c
 11519  00A256  0012               	return	
 11520  00A258  EFD4  F057         	goto	l2485
 11521  00A25C                     
 11522                           ; BSR set to: 0
 11523                           ;encoder.c: 152: if(os.button1==1 || os.button2==1)
 11524                           
 11525                           ; BSR set to: 0
 11526  00A25C  05D7               	decf	(_os+4)& (0+255),w,b	;volatile
 11527  00A25E  B4D8               	btfsc	status,2,c
 11528  00A260  D003               	goto	u20450
 11529                           
 11530                           ; BSR set to: 0
 11531  00A262  05D9               	decf	(_os+6)& (0+255),w,b	;volatile
 11532  00A264  A4D8               	btfss	status,2,c
 11533  00A266  D002               	goto	l2489
 11534  00A268                     u20450:
 11535                           
 11536                           ; BSR set to: 0
 11537                           ;encoder.c: 153: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 11538                           
 11539                           ; BSR set to: 0
 11540  00A268  0E11               	movlw	17
 11541  00A26A  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 11542  00A26C                     l2489:
 11543                           
 11544                           ; BSR set to: 0
 11545                           ;encoder.c: 154: if(os.encoder1Count+os.encoder2Count>0)
 11546                           
 11547                           ; BSR set to: 0
 11548  00A26C  C0D8  F0BE         	movff	_os+5,??_encoder_statemachine	;volatile
 11549  00A270  6BBF               	clrf	(??_encoder_statemachine+1)& (0+255),b
 11550  00A272  BFBE               	btfsc	??_encoder_statemachine& (0+255),7,b
 11551  00A274  07BF               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 11552  00A276  C0D6  F0C0         	movff	_os+3,??_encoder_statemachine+2	;volatile
 11553  00A27A  6BC1               	clrf	(??_encoder_statemachine+3)& (0+255),b
 11554  00A27C  BFC0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 11555  00A27E  07C1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 11556  00A280  51BE               	movf	??_encoder_statemachine& (0+255),w,b
 11557  00A282  27C0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 11558  00A284  51BF               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 11559  00A286  23C1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 11560  00A288  BFC1               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 11561  00A28A  D007               	goto	l2492
 11562  00A28C  51C1               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 11563  00A28E  E103               	bnz	u20460
 11564  00A290  05C0               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 11565  00A292  A0D8               	btfss	status,0,c
 11566  00A294  D002               	goto	l2492
 11567  00A296                     u20460:
 11568                           
 11569                           ; BSR set to: 0
 11570                           ;encoder.c: 155: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 11571  00A296  0E02               	movlw	2
 11572  00A298  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 11573  00A29A                     l2492:
 11574                           
 11575                           ; BSR set to: 0
 11576                           ;encoder.c: 156: if(os.encoder1Count+os.encoder2Count<0)
 11577                           
 11578                           ; BSR set to: 0
 11579  00A29A  C0D8  F0BE         	movff	_os+5,??_encoder_statemachine	;volatile
 11580  00A29E  6BBF               	clrf	(??_encoder_statemachine+1)& (0+255),b
 11581  00A2A0  BFBE               	btfsc	??_encoder_statemachine& (0+255),7,b
 11582  00A2A2  07BF               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 11583  00A2A4  C0D6  F0C0         	movff	_os+3,??_encoder_statemachine+2	;volatile
 11584  00A2A8  6BC1               	clrf	(??_encoder_statemachine+3)& (0+255),b
 11585  00A2AA  BFC0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 11586  00A2AC  07C1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 11587  00A2AE  51BE               	movf	??_encoder_statemachine& (0+255),w,b
 11588  00A2B0  27C0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 11589  00A2B2  51BF               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 11590  00A2B4  23C1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 11591  00A2B6  AFC1               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 11592  00A2B8  EFFD  F057         	goto	l2520
 11593                           
 11594                           ; BSR set to: 0
 11595                           ;encoder.c: 157: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 11596  00A2BC  0E05               	movlw	5
 11597  00A2BE  EFC3  F057         	goto	L17
 11598  00A2C2                     
 11599                           ; BSR set to: 0
 11600                           ;encoder.c: 160: if(os.button1==1 || os.button2==1)
 11601                           
 11602                           ; BSR set to: 0
 11603  00A2C2  05D7               	decf	(_os+4)& (0+255),w,b	;volatile
 11604  00A2C4  B4D8               	btfsc	status,2,c
 11605  00A2C6  D003               	goto	u20490
 11606                           
 11607                           ; BSR set to: 0
 11608  00A2C8  05D9               	decf	(_os+6)& (0+255),w,b	;volatile
 11609  00A2CA  A4D8               	btfss	status,2,c
 11610  00A2CC  D002               	goto	l2496
 11611  00A2CE                     u20490:
 11612                           
 11613                           ; BSR set to: 0
 11614                           ;encoder.c: 161: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 11615                           
 11616                           ; BSR set to: 0
 11617  00A2CE  0E31               	movlw	49
 11618  00A2D0  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 11619  00A2D2                     l2496:
 11620                           
 11621                           ; BSR set to: 0
 11622                           ;encoder.c: 162: if(os.encoder1Count+os.encoder2Count>0)
 11623                           
 11624                           ; BSR set to: 0
 11625  00A2D2  C0D8  F0BE         	movff	_os+5,??_encoder_statemachine	;volatile
 11626  00A2D6  6BBF               	clrf	(??_encoder_statemachine+1)& (0+255),b
 11627  00A2D8  BFBE               	btfsc	??_encoder_statemachine& (0+255),7,b
 11628  00A2DA  07BF               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 11629  00A2DC  C0D6  F0C0         	movff	_os+3,??_encoder_statemachine+2	;volatile
 11630  00A2E0  6BC1               	clrf	(??_encoder_statemachine+3)& (0+255),b
 11631  00A2E2  BFC0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 11632  00A2E4  07C1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 11633  00A2E6  51BE               	movf	??_encoder_statemachine& (0+255),w,b
 11634  00A2E8  27C0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 11635  00A2EA  51BF               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 11636  00A2EC  23C1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 11637  00A2EE  BFC1               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 11638  00A2F0  D007               	goto	l2499
 11639  00A2F2  51C1               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 11640  00A2F4  E103               	bnz	u20500
 11641  00A2F6  05C0               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 11642  00A2F8  A0D8               	btfss	status,0,c
 11643  00A2FA  D002               	goto	l2499
 11644  00A2FC                     u20500:
 11645                           
 11646                           ; BSR set to: 0
 11647                           ;encoder.c: 163: os.displayState = DISPLAY_STATE_MAIN_ARC;
 11648  00A2FC  0E03               	movlw	3
 11649  00A2FE  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 11650  00A300                     l2499:
 11651                           
 11652                           ; BSR set to: 0
 11653                           ;encoder.c: 164: if(os.encoder1Count+os.encoder2Count<0)
 11654                           
 11655                           ; BSR set to: 0
 11656  00A300  C0D8  F0BE         	movff	_os+5,??_encoder_statemachine	;volatile
 11657  00A304  6BBF               	clrf	(??_encoder_statemachine+1)& (0+255),b
 11658  00A306  BFBE               	btfsc	??_encoder_statemachine& (0+255),7,b
 11659  00A308  07BF               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 11660  00A30A  C0D6  F0C0         	movff	_os+3,??_encoder_statemachine+2	;volatile
 11661  00A30E  6BC1               	clrf	(??_encoder_statemachine+3)& (0+255),b
 11662  00A310  BFC0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 11663  00A312  07C1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 11664  00A314  51BE               	movf	??_encoder_statemachine& (0+255),w,b
 11665  00A316  27C0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 11666  00A318  51BF               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 11667  00A31A  23C1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 11668  00A31C  AFC1               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 11669  00A31E  EFFD  F057         	goto	l2520
 11670                           
 11671                           ; BSR set to: 0
 11672                           ;encoder.c: 165: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 11673  00A322  0E01               	movlw	1
 11674  00A324  EFC3  F057         	goto	L17
 11675  00A328                     
 11676                           ; BSR set to: 0
 11677                           ;encoder.c: 168: if(os.button1==1 || os.button2==1)
 11678                           
 11679                           ; BSR set to: 0
 11680  00A328  05D7               	decf	(_os+4)& (0+255),w,b	;volatile
 11681  00A32A  B4D8               	btfsc	status,2,c
 11682  00A32C  D003               	goto	u20530
 11683                           
 11684                           ; BSR set to: 0
 11685  00A32E  05D9               	decf	(_os+6)& (0+255),w,b	;volatile
 11686  00A330  A4D8               	btfss	status,2,c
 11687  00A332  D002               	goto	l2502
 11688  00A334                     u20530:
 11689                           
 11690                           ; BSR set to: 0
 11691                           ;encoder.c: 169: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 11692                           
 11693                           ; BSR set to: 0
 11694  00A334  0E51               	movlw	81
 11695  00A336  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 11696  00A338                     l2502:
 11697                           
 11698                           ; BSR set to: 0
 11699                           ;encoder.c: 170: if(os.encoder1Count+os.encoder2Count>0)
 11700                           
 11701                           ; BSR set to: 0
 11702  00A338  C0D8  F0BE         	movff	_os+5,??_encoder_statemachine	;volatile
 11703  00A33C  6BBF               	clrf	(??_encoder_statemachine+1)& (0+255),b
 11704  00A33E  BFBE               	btfsc	??_encoder_statemachine& (0+255),7,b
 11705  00A340  07BF               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 11706  00A342  C0D6  F0C0         	movff	_os+3,??_encoder_statemachine+2	;volatile
 11707  00A346  6BC1               	clrf	(??_encoder_statemachine+3)& (0+255),b
 11708  00A348  BFC0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 11709  00A34A  07C1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 11710  00A34C  51BE               	movf	??_encoder_statemachine& (0+255),w,b
 11711  00A34E  27C0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 11712  00A350  51BF               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 11713  00A352  23C1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 11714  00A354  BFC1               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 11715  00A356  D007               	goto	l2505
 11716  00A358  51C1               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 11717  00A35A  E103               	bnz	u20540
 11718  00A35C  05C0               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 11719  00A35E  A0D8               	btfss	status,0,c
 11720  00A360  D002               	goto	l2505
 11721  00A362                     u20540:
 11722                           
 11723                           ; BSR set to: 0
 11724                           ;encoder.c: 171: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 11725  00A362  0E04               	movlw	4
 11726  00A364  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 11727  00A366                     l2505:
 11728                           
 11729                           ; BSR set to: 0
 11730                           ;encoder.c: 172: if(os.encoder1Count+os.encoder2Count<0)
 11731                           
 11732                           ; BSR set to: 0
 11733  00A366  C0D8  F0BE         	movff	_os+5,??_encoder_statemachine	;volatile
 11734  00A36A  6BBF               	clrf	(??_encoder_statemachine+1)& (0+255),b
 11735  00A36C  BFBE               	btfsc	??_encoder_statemachine& (0+255),7,b
 11736  00A36E  07BF               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 11737  00A370  C0D6  F0C0         	movff	_os+3,??_encoder_statemachine+2	;volatile
 11738  00A374  6BC1               	clrf	(??_encoder_statemachine+3)& (0+255),b
 11739  00A376  BFC0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 11740  00A378  07C1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 11741  00A37A  51BE               	movf	??_encoder_statemachine& (0+255),w,b
 11742  00A37C  27C0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 11743  00A37E  51BF               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 11744  00A380  23C1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 11745  00A382  AFC1               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 11746  00A384  EFFD  F057         	goto	l2520
 11747                           
 11748                           ; BSR set to: 0
 11749                           ;encoder.c: 173: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 11750  00A388  0E02               	movlw	2
 11751  00A38A  EFC3  F057         	goto	L17
 11752  00A38E                     
 11753                           ; BSR set to: 0
 11754                           ;encoder.c: 176: if(os.button1==1 || os.button2==1)
 11755                           
 11756                           ; BSR set to: 0
 11757  00A38E  05D7               	decf	(_os+4)& (0+255),w,b	;volatile
 11758  00A390  B4D8               	btfsc	status,2,c
 11759  00A392  D003               	goto	u20570
 11760                           
 11761                           ; BSR set to: 0
 11762  00A394  05D9               	decf	(_os+6)& (0+255),w,b	;volatile
 11763  00A396  A4D8               	btfss	status,2,c
 11764  00A398  D002               	goto	l2508
 11765  00A39A                     u20570:
 11766                           
 11767                           ; BSR set to: 0
 11768                           ;encoder.c: 177: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 11769                           
 11770                           ; BSR set to: 0
 11771  00A39A  0E82               	movlw	130
 11772  00A39C  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 11773  00A39E                     l2508:
 11774                           
 11775                           ; BSR set to: 0
 11776                           ;encoder.c: 178: if(os.encoder1Count+os.encoder2Count>0)
 11777                           
 11778                           ; BSR set to: 0
 11779  00A39E  C0D8  F0BE         	movff	_os+5,??_encoder_statemachine	;volatile
 11780  00A3A2  6BBF               	clrf	(??_encoder_statemachine+1)& (0+255),b
 11781  00A3A4  BFBE               	btfsc	??_encoder_statemachine& (0+255),7,b
 11782  00A3A6  07BF               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 11783  00A3A8  C0D6  F0C0         	movff	_os+3,??_encoder_statemachine+2	;volatile
 11784  00A3AC  6BC1               	clrf	(??_encoder_statemachine+3)& (0+255),b
 11785  00A3AE  BFC0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 11786  00A3B0  07C1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 11787  00A3B2  51BE               	movf	??_encoder_statemachine& (0+255),w,b
 11788  00A3B4  27C0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 11789  00A3B6  51BF               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 11790  00A3B8  23C1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 11791  00A3BA  BFC1               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 11792  00A3BC  D007               	goto	l2511
 11793  00A3BE  51C1               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 11794  00A3C0  E103               	bnz	u20580
 11795  00A3C2  05C0               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 11796  00A3C4  A0D8               	btfss	status,0,c
 11797  00A3C6  D002               	goto	l2511
 11798  00A3C8                     u20580:
 11799                           
 11800                           ; BSR set to: 0
 11801                           ;encoder.c: 179: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 11802  00A3C8  0E05               	movlw	5
 11803  00A3CA  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 11804  00A3CC                     l2511:
 11805                           
 11806                           ; BSR set to: 0
 11807                           ;encoder.c: 180: if(os.encoder1Count+os.encoder2Count<0)
 11808                           
 11809                           ; BSR set to: 0
 11810  00A3CC  C0D8  F0BE         	movff	_os+5,??_encoder_statemachine	;volatile
 11811  00A3D0  6BBF               	clrf	(??_encoder_statemachine+1)& (0+255),b
 11812  00A3D2  BFBE               	btfsc	??_encoder_statemachine& (0+255),7,b
 11813  00A3D4  07BF               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 11814  00A3D6  C0D6  F0C0         	movff	_os+3,??_encoder_statemachine+2	;volatile
 11815  00A3DA  6BC1               	clrf	(??_encoder_statemachine+3)& (0+255),b
 11816  00A3DC  BFC0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 11817  00A3DE  07C1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 11818  00A3E0  51BE               	movf	??_encoder_statemachine& (0+255),w,b
 11819  00A3E2  27C0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 11820  00A3E4  51BF               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 11821  00A3E6  23C1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 11822  00A3E8  AFC1               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 11823  00A3EA  EFFD  F057         	goto	l2520
 11824                           
 11825                           ; BSR set to: 0
 11826                           ;encoder.c: 181: os.displayState = DISPLAY_STATE_MAIN_ARC;
 11827  00A3EE  0E03               	movlw	3
 11828  00A3F0  EFC3  F057         	goto	L17
 11829  00A3F4                     
 11830                           ; BSR set to: 0
 11831                           ;encoder.c: 184: if(os.button1==1 || os.button2==1)
 11832                           
 11833                           ; BSR set to: 0
 11834  00A3F4  05D7               	decf	(_os+4)& (0+255),w,b	;volatile
 11835  00A3F6  B4D8               	btfsc	status,2,c
 11836  00A3F8  D003               	goto	u20610
 11837                           
 11838                           ; BSR set to: 0
 11839  00A3FA  05D9               	decf	(_os+6)& (0+255),w,b	;volatile
 11840  00A3FC  A4D8               	btfss	status,2,c
 11841  00A3FE  D002               	goto	l2514
 11842  00A400                     u20610:
 11843                           
 11844                           ; BSR set to: 0
 11845                           ;encoder.c: 185: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
 11846                           
 11847                           ; BSR set to: 0
 11848  00A400  0E71               	movlw	113
 11849  00A402  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 11850  00A404                     l2514:
 11851                           
 11852                           ; BSR set to: 0
 11853                           ;encoder.c: 186: if(os.encoder1Count+os.encoder2Count>0)
 11854                           
 11855                           ; BSR set to: 0
 11856  00A404  C0D8  F0BE         	movff	_os+5,??_encoder_statemachine	;volatile
 11857  00A408  6BBF               	clrf	(??_encoder_statemachine+1)& (0+255),b
 11858  00A40A  BFBE               	btfsc	??_encoder_statemachine& (0+255),7,b
 11859  00A40C  07BF               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 11860  00A40E  C0D6  F0C0         	movff	_os+3,??_encoder_statemachine+2	;volatile
 11861  00A412  6BC1               	clrf	(??_encoder_statemachine+3)& (0+255),b
 11862  00A414  BFC0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 11863  00A416  07C1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 11864  00A418  51BE               	movf	??_encoder_statemachine& (0+255),w,b
 11865  00A41A  27C0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 11866  00A41C  51BF               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 11867  00A41E  23C1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 11868  00A420  BFC1               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 11869  00A422  D007               	goto	l2517
 11870  00A424  51C1               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 11871  00A426  E103               	bnz	u20620
 11872  00A428  05C0               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 11873  00A42A  A0D8               	btfss	status,0,c
 11874  00A42C  D002               	goto	l2517
 11875  00A42E                     u20620:
 11876                           
 11877                           ; BSR set to: 0
 11878                           ;encoder.c: 187: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 11879  00A42E  0E01               	movlw	1
 11880  00A430  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 11881  00A432                     l2517:
 11882                           
 11883                           ; BSR set to: 0
 11884                           ;encoder.c: 188: if(os.encoder1Count+os.encoder2Count<0)
 11885                           
 11886                           ; BSR set to: 0
 11887  00A432  C0D8  F0BE         	movff	_os+5,??_encoder_statemachine	;volatile
 11888  00A436  6BBF               	clrf	(??_encoder_statemachine+1)& (0+255),b
 11889  00A438  BFBE               	btfsc	??_encoder_statemachine& (0+255),7,b
 11890  00A43A  07BF               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 11891  00A43C  C0D6  F0C0         	movff	_os+3,??_encoder_statemachine+2	;volatile
 11892  00A440  6BC1               	clrf	(??_encoder_statemachine+3)& (0+255),b
 11893  00A442  BFC0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 11894  00A444  07C1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 11895  00A446  51BE               	movf	??_encoder_statemachine& (0+255),w,b
 11896  00A448  27C0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 11897  00A44A  51BF               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 11898  00A44C  23C1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 11899  00A44E  AFC1               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 11900  00A450  EFFD  F057         	goto	l2520
 11901                           
 11902                           ; BSR set to: 0
 11903                           ;encoder.c: 189: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 11904  00A454  0E04               	movlw	4
 11905  00A456  EFC3  F057         	goto	L17
 11906  00A45A                     
 11907                           ; BSR set to: 0
 11908                           
 11909                           ; BSR set to: 0
 11910  00A45A  51E0               	movf	(_os+13)& (0+255),w,b	;volatile
 11911                           
 11912                           ; Switch size 1, requested type "space"
 11913                           ; Number of cases is 6, Range of values is 1 to 240
 11914                           ; switch strategies available:
 11915                           ; Name         Instructions Cycles
 11916                           ; simple_byte           19    10 (average)
 11917                           ;	Chosen strategy is simple_byte
 11918  00A45C  0A01               	xorlw	1	; case 1
 11919  00A45E  B4D8               	btfsc	status,2,c
 11920  00A460  D6FD               	goto	l2488
 11921  00A462  0A03               	xorlw	3	; case 2
 11922  00A464  B4D8               	btfsc	status,2,c
 11923  00A466  D72D               	goto	l2495
 11924  00A468  0A01               	xorlw	1	; case 3
 11925  00A46A  B4D8               	btfsc	status,2,c
 11926  00A46C  D75D               	goto	l2501
 11927  00A46E  0A07               	xorlw	7	; case 4
 11928  00A470  B4D8               	btfsc	status,2,c
 11929  00A472  D78D               	goto	l2507
 11930  00A474  0A01               	xorlw	1	; case 5
 11931  00A476  B4D8               	btfsc	status,2,c
 11932  00A478  D7BD               	goto	l2513
 11933  00A47A  0AF5               	xorlw	245	; case 240
 11934                           
 11935                           ; BSR set to: 0
 11936                           ;encoder.c: 195: break;
 11937  00A47C  EFFD  F057         	goto	l2520
 11938  00A480                     
 11939                           ; BSR set to: 0
 11940                           ;encoder.c: 201: if(os.button1==1)
 11941                           
 11942                           ; BSR set to: 0
 11943  00A480  05D7               	decf	(_os+4)& (0+255),w,b	;volatile
 11944  00A482  A4D8               	btfss	status,2,c
 11945  00A484  D00E               	goto	l2524
 11946                           
 11947                           ; BSR set to: 0
 11948                           ;encoder.c: 202: {;encoder.c: 203: os.current_position_in_steps = 0;
 11949  00A486  0E00               	movlw	0
 11950  00A488  6FDA               	movwf	(_os+7)& (0+255),b	;volatile
 11951  00A48A  0E00               	movlw	0
 11952  00A48C  6FDB               	movwf	(_os+8)& (0+255),b	;volatile
 11953  00A48E  0E00               	movlw	0
 11954  00A490  6FDC               	movwf	(_os+9)& (0+255),b	;volatile
 11955  00A492  0E00               	movlw	0
 11956  00A494  6FDD               	movwf	(_os+10)& (0+255),b	;volatile
 11957                           
 11958                           ;encoder.c: 204: os.divide_position = 0;
 11959  00A496  0E00               	movlw	0
 11960  00A498  6FEA               	movwf	(_os+23)& (0+255),b	;volatile
 11961  00A49A  0E00               	movlw	0
 11962  00A49C  6FE9               	movwf	(_os+22)& (0+255),b	;volatile
 11963                           
 11964                           ;encoder.c: 205: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 11965  00A49E  0E21               	movlw	33
 11966  00A4A0  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 11967  00A4A2                     l2524:
 11968                           
 11969                           ; BSR set to: 0
 11970                           ;encoder.c: 206: };encoder.c: 207: if(os.encoder1Count>0)
 11971                           
 11972                           ; BSR set to: 0
 11973  00A4A2  51D6               	movf	(_os+3)& (0+255),w,b	;volatile
 11974  00A4A4  0A80               	xorlw	128
 11975  00A4A6  0F7F               	addlw	-129
 11976  00A4A8  A0D8               	btfss	status,0,c
 11977  00A4AA  D002               	goto	l2525
 11978                           
 11979                           ; BSR set to: 0
 11980                           ;encoder.c: 208: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
 11981  00A4AC  0E12               	movlw	18
 11982  00A4AE  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 11983  00A4B0                     l2525:
 11984                           
 11985                           ; BSR set to: 0
 11986                           ;encoder.c: 209: if(os.encoder1Count<0)
 11987                           
 11988                           ; BSR set to: 0
 11989  00A4B0  AFD6               	btfss	(_os+3)& (0+255),7,b	;volatile
 11990  00A4B2  D01A               	goto	l2527
 11991                           
 11992                           ; BSR set to: 0
 11993                           ;encoder.c: 210: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
 11994  00A4B4  0E12               	movlw	18
 11995  00A4B6  D00F               	goto	L6
 11996  00A4B8                     
 11997                           ; BSR set to: 0
 11998                           ;encoder.c: 213: if(os.button1==1)
 11999                           
 12000                           ; BSR set to: 0
 12001  00A4B8  05D7               	decf	(_os+4)& (0+255),w,b	;volatile
 12002  00A4BA  A4D8               	btfss	status,2,c
 12003  00A4BC  D002               	goto	l2529
 12004                           
 12005                           ; BSR set to: 0
 12006                           ;encoder.c: 214: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 12007  00A4BE  0E01               	movlw	1
 12008  00A4C0  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12009  00A4C2                     l2529:
 12010                           
 12011                           ; BSR set to: 0
 12012                           ;encoder.c: 215: if(os.encoder1Count>0)
 12013                           
 12014                           ; BSR set to: 0
 12015  00A4C2  51D6               	movf	(_os+3)& (0+255),w,b	;volatile
 12016  00A4C4  0A80               	xorlw	128
 12017  00A4C6  0F7F               	addlw	-129
 12018  00A4C8  A0D8               	btfss	status,0,c
 12019  00A4CA  D002               	goto	l2530
 12020                           
 12021                           ; BSR set to: 0
 12022                           ;encoder.c: 216: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 12023  00A4CC  0E11               	movlw	17
 12024  00A4CE  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12025  00A4D0                     l2530:
 12026                           
 12027                           ; BSR set to: 0
 12028                           ;encoder.c: 217: if(os.encoder1Count<0)
 12029                           
 12030                           ; BSR set to: 0
 12031  00A4D0  AFD6               	btfss	(_os+3)& (0+255),7,b	;volatile
 12032  00A4D2  D00A               	goto	l2527
 12033                           
 12034                           ; BSR set to: 0
 12035                           ;encoder.c: 218: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 12036  00A4D4  0E11               	movlw	17
 12037  00A4D6                     L6:
 12038  00A4D6  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12039                           
 12040                           ; BSR set to: 0
 12041                           ;encoder.c: 220: }
 12042                           
 12043                           ; BSR set to: 0
 12044                           ;encoder.c: 219: break;
 12045  00A4D8  D007               	goto	l2527
 12046  00A4DA                     
 12047                           ; BSR set to: 0
 12048                           
 12049                           ; BSR set to: 0
 12050  00A4DA  51E0               	movf	(_os+13)& (0+255),w,b	;volatile
 12051                           
 12052                           ; Switch size 1, requested type "space"
 12053                           ; Number of cases is 2, Range of values is 17 to 18
 12054                           ; switch strategies available:
 12055                           ; Name         Instructions Cycles
 12056                           ; simple_byte            7     4 (average)
 12057                           ;	Chosen strategy is simple_byte
 12058  00A4DC  0A11               	xorlw	17	; case 17
 12059  00A4DE  B4D8               	btfsc	status,2,c
 12060  00A4E0  D7CF               	goto	l2523
 12061  00A4E2  0A03               	xorlw	3	; case 18
 12062  00A4E4  B4D8               	btfsc	status,2,c
 12063  00A4E6  D7E8               	goto	l2528
 12064  00A4E8                     l2527:
 12065                           
 12066                           ; BSR set to: 0
 12067                           ;encoder.c: 221: if(os.button2==1)
 12068                           
 12069                           ; BSR set to: 0
 12070  00A4E8  05D9               	decf	(_os+6)& (0+255),w,b	;volatile
 12071  00A4EA  A4D8               	btfss	status,2,c
 12072  00A4EC  D00A               	goto	l2532
 12073                           
 12074                           ; BSR set to: 0
 12075                           ;encoder.c: 222: {;encoder.c: 223: os.setup_step_size = encoder_next_setup_stepsize(os.s
      +                          etup_step_size);
 12076  00A4EE  C0E3  F060         	movff	_os+16,encoder_next_setup_stepsize@old_stepsize	;volatile
 12077  00A4F2  C0E4  F061         	movff	_os+17,encoder_next_setup_stepsize@old_stepsize+1	;volatile
 12078  00A4F6  EC94  F08B         	call	_encoder_next_setup_stepsize	;wreg free
 12079  00A4FA  C060  F0E3         	movff	?_encoder_next_setup_stepsize,_os+16	;volatile
 12080  00A4FE  C061  F0E4         	movff	?_encoder_next_setup_stepsize+1,_os+17	;volatile
 12081  00A502                     l2532:
 12082                           
 12083                           ;encoder.c: 224: };encoder.c: 225: if(os.encoder2Count>0)
 12084  00A502  0100               	movlb	0	; () banked
 12085  00A504  51D8               	movf	(_os+5)& (0+255),w,b	;volatile
 12086  00A506  0A80               	xorlw	128
 12087  00A508  0F7F               	addlw	-129
 12088  00A50A  A0D8               	btfss	status,0,c
 12089  00A50C  D019               	goto	l2534
 12090                           
 12091                           ; BSR set to: 0
 12092                           ;encoder.c: 226: {;encoder.c: 228: if(!os.busy)
 12093  00A50E  51E1               	movf	(_os+14)& (0+255),w,b	;volatile
 12094  00A510  A4D8               	btfss	status,2,c
 12095  00A512  D016               	goto	l2534
 12096                           
 12097                           ; BSR set to: 0
 12098                           ;encoder.c: 229: motor_schedule_command(MOTOR_DIRECTION_CW, motor_nonzero_steps_from_deg
      +                          rees(os.setup_step_size), 0);
 12099  00A514  C0E3  F08F         	movff	_os+16,motor_nonzero_steps_from_degrees@degrees	;volatile
 12100  00A518  C0E4  F090         	movff	_os+17,motor_nonzero_steps_from_degrees@degrees+1	;volatile
 12101  00A51C  EC3F  F090         	call	_motor_nonzero_steps_from_degrees	;wreg free
 12102  00A520  C08F  F097         	movff	?_motor_nonzero_steps_from_degrees,motor_schedule_command@distance_in_steps
 12103  00A524  C090  F098         	movff	?_motor_nonzero_steps_from_degrees+1,motor_schedule_command@distance_in_steps+1
 12104  00A528  C091  F099         	movff	?_motor_nonzero_steps_from_degrees+2,motor_schedule_command@distance_in_steps+2
 12105  00A52C  C092  F09A         	movff	?_motor_nonzero_steps_from_degrees+3,motor_schedule_command@distance_in_steps+3
 12106  00A530  0E00               	movlw	0
 12107  00A532  0100               	movlb	0	; () banked
 12108  00A534  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 12109  00A536  0E00               	movlw	0
 12110  00A538  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 12111  00A53A  0E01               	movlw	1
 12112  00A53C  ECB0  F087         	call	_motor_schedule_command
 12113  00A540                     l2534:
 12114                           
 12115                           ;encoder.c: 230: };encoder.c: 231: if(os.encoder2Count<0)
 12116  00A540  0100               	movlb	0	; () banked
 12117  00A542  AFD8               	btfss	(_os+5)& (0+255),7,b	;volatile
 12118  00A544  EFFD  F057         	goto	l2520
 12119                           
 12120                           ; BSR set to: 0
 12121                           ;encoder.c: 232: {;encoder.c: 234: if(!os.busy)
 12122  00A548  51E1               	movf	(_os+14)& (0+255),w,b	;volatile
 12123  00A54A  A4D8               	btfss	status,2,c
 12124  00A54C  EFFD  F057         	goto	l2520
 12125                           
 12126                           ; BSR set to: 0
 12127                           ;encoder.c: 235: motor_schedule_command(MOTOR_DIRECTION_CCW, motor_nonzero_steps_from_de
      +                          grees(os.setup_step_size), 0);
 12128  00A550  C0E3  F08F         	movff	_os+16,motor_nonzero_steps_from_degrees@degrees	;volatile
 12129  00A554  C0E4  F090         	movff	_os+17,motor_nonzero_steps_from_degrees@degrees+1	;volatile
 12130  00A558  EC3F  F090         	call	_motor_nonzero_steps_from_degrees	;wreg free
 12131  00A55C  C08F  F097         	movff	?_motor_nonzero_steps_from_degrees,motor_schedule_command@distance_in_steps
 12132  00A560  C090  F098         	movff	?_motor_nonzero_steps_from_degrees+1,motor_schedule_command@distance_in_steps+1
 12133  00A564  C091  F099         	movff	?_motor_nonzero_steps_from_degrees+2,motor_schedule_command@distance_in_steps+2
 12134  00A568  C092  F09A         	movff	?_motor_nonzero_steps_from_degrees+3,motor_schedule_command@distance_in_steps+3
 12135  00A56C  0E00               	movlw	0
 12136  00A56E  0100               	movlb	0	; () banked
 12137  00A570  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 12138  00A572  0E00               	movlw	0
 12139  00A574  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 12140  00A576  0EFF               	movlw	255
 12141  00A578  ECB0  F087         	call	_motor_schedule_command
 12142                           
 12143                           ;encoder.c: 236: };encoder.c: 237: break;
 12144  00A57C  EFFD  F057         	goto	l2520
 12145  00A580                     
 12146                           ;encoder.c: 243: if(os.button1==1 || os.button2==1)
 12147  00A580  0100               	movlb	0	; () banked
 12148  00A582  05D7               	decf	(_os+4)& (0+255),w,b	;volatile
 12149  00A584  B4D8               	btfsc	status,2,c
 12150  00A586  D003               	goto	u20760
 12151                           
 12152                           ; BSR set to: 0
 12153  00A588  05D9               	decf	(_os+6)& (0+255),w,b	;volatile
 12154  00A58A  A4D8               	btfss	status,2,c
 12155  00A58C  D01F               	goto	l2540
 12156  00A58E                     u20760:
 12157                           
 12158                           ; BSR set to: 0
 12159                           ;encoder.c: 244: {;encoder.c: 245: motor_schedule_command(MOTOR_DIRECTION_CW, config.ove
      +                          rshoot_in_steps, 0);
 12160                           
 12161                           ; BSR set to: 0
 12162  00A58E  C180  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
 12163  00A592  C181  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 12164  00A596  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 12165  00A598  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 12166  00A59A  0E00               	movlw	0
 12167  00A59C  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 12168  00A59E  0E00               	movlw	0
 12169  00A5A0  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 12170  00A5A2  0E01               	movlw	1
 12171  00A5A4  ECB0  F087         	call	_motor_schedule_command
 12172                           
 12173                           ;encoder.c: 246: motor_schedule_command(MOTOR_DIRECTION_CCW, config.overshoot_in_steps, 
      +                          0);
 12174  00A5A8  C180  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
 12175  00A5AC  C181  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 12176  00A5B0  0100               	movlb	0	; () banked
 12177  00A5B2  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 12178  00A5B4  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 12179  00A5B6  0E00               	movlw	0
 12180  00A5B8  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 12181  00A5BA  0E00               	movlw	0
 12182  00A5BC  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 12183  00A5BE  0EFF               	movlw	255
 12184  00A5C0  ECB0  F087         	call	_motor_schedule_command
 12185                           
 12186                           ;encoder.c: 247: os.approach_direction = MOTOR_DIRECTION_CCW;
 12187  00A5C4  0100               	movlb	0	; () banked
 12188  00A5C6  69E5               	setf	(_os+18)& (0+255),b	;volatile
 12189                           
 12190                           ; BSR set to: 0
 12191                           ;encoder.c: 248: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 12192  00A5C8  0E01               	movlw	1
 12193  00A5CA  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12194  00A5CC                     l2540:
 12195                           
 12196                           ; BSR set to: 0
 12197                           ;encoder.c: 249: };encoder.c: 250: if(os.encoder1Count+os.encoder2Count>0)
 12198                           
 12199                           ; BSR set to: 0
 12200  00A5CC  C0D8  F0BE         	movff	_os+5,??_encoder_statemachine	;volatile
 12201  00A5D0  6BBF               	clrf	(??_encoder_statemachine+1)& (0+255),b
 12202  00A5D2  BFBE               	btfsc	??_encoder_statemachine& (0+255),7,b
 12203  00A5D4  07BF               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 12204  00A5D6  C0D6  F0C0         	movff	_os+3,??_encoder_statemachine+2	;volatile
 12205  00A5DA  6BC1               	clrf	(??_encoder_statemachine+3)& (0+255),b
 12206  00A5DC  BFC0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 12207  00A5DE  07C1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 12208  00A5E0  51BE               	movf	??_encoder_statemachine& (0+255),w,b
 12209  00A5E2  27C0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 12210  00A5E4  51BF               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 12211  00A5E6  23C1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 12212  00A5E8  BFC1               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 12213  00A5EA  D007               	goto	l2543
 12214  00A5EC  51C1               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 12215  00A5EE  E103               	bnz	u20770
 12216  00A5F0  05C0               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 12217  00A5F2  A0D8               	btfss	status,0,c
 12218  00A5F4  D002               	goto	l2543
 12219  00A5F6                     u20770:
 12220                           
 12221                           ; BSR set to: 0
 12222                           ;encoder.c: 251: os.displayState = DISPLAY_STATE_SETUP2_CW;
 12223  00A5F6  0E22               	movlw	34
 12224  00A5F8  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12225  00A5FA                     l2543:
 12226                           
 12227                           ; BSR set to: 0
 12228                           ;encoder.c: 252: if(os.encoder1Count+os.encoder2Count<0)
 12229                           
 12230                           ; BSR set to: 0
 12231  00A5FA  C0D8  F0BE         	movff	_os+5,??_encoder_statemachine	;volatile
 12232  00A5FE  6BBF               	clrf	(??_encoder_statemachine+1)& (0+255),b
 12233  00A600  BFBE               	btfsc	??_encoder_statemachine& (0+255),7,b
 12234  00A602  07BF               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 12235  00A604  C0D6  F0C0         	movff	_os+3,??_encoder_statemachine+2	;volatile
 12236  00A608  6BC1               	clrf	(??_encoder_statemachine+3)& (0+255),b
 12237  00A60A  BFC0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 12238  00A60C  07C1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 12239  00A60E  51BE               	movf	??_encoder_statemachine& (0+255),w,b
 12240  00A610  27C0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 12241  00A612  51BF               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 12242  00A614  23C1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 12243  00A616  AFC1               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 12244  00A618  EFFD  F057         	goto	l2520
 12245                           
 12246                           ; BSR set to: 0
 12247                           ;encoder.c: 253: os.displayState = DISPLAY_STATE_SETUP2_CW;
 12248  00A61C  0E22               	movlw	34
 12249  00A61E  EFC3  F057         	goto	L17
 12250  00A622                     
 12251                           ; BSR set to: 0
 12252                           ;encoder.c: 256: if(os.button1==1 || os.button2==1)
 12253                           
 12254                           ; BSR set to: 0
 12255  00A622  05D7               	decf	(_os+4)& (0+255),w,b	;volatile
 12256  00A624  B4D8               	btfsc	status,2,c
 12257  00A626  D003               	goto	u20800
 12258                           
 12259                           ; BSR set to: 0
 12260  00A628  05D9               	decf	(_os+6)& (0+255),w,b	;volatile
 12261  00A62A  A4D8               	btfss	status,2,c
 12262  00A62C  D020               	goto	l2547
 12263  00A62E                     u20800:
 12264                           
 12265                           ; BSR set to: 0
 12266                           ;encoder.c: 257: {;encoder.c: 258: motor_schedule_command(MOTOR_DIRECTION_CCW, config.ov
      +                          ershoot_in_steps, 0);
 12267                           
 12268                           ; BSR set to: 0
 12269  00A62E  C180  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
 12270  00A632  C181  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 12271  00A636  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 12272  00A638  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 12273  00A63A  0E00               	movlw	0
 12274  00A63C  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 12275  00A63E  0E00               	movlw	0
 12276  00A640  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 12277  00A642  0EFF               	movlw	255
 12278  00A644  ECB0  F087         	call	_motor_schedule_command
 12279                           
 12280                           ;encoder.c: 259: motor_schedule_command(MOTOR_DIRECTION_CW, config.overshoot_in_steps, 0
      +                          );
 12281  00A648  C180  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
 12282  00A64C  C181  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 12283  00A650  0100               	movlb	0	; () banked
 12284  00A652  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 12285  00A654  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 12286  00A656  0E00               	movlw	0
 12287  00A658  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 12288  00A65A  0E00               	movlw	0
 12289  00A65C  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 12290  00A65E  0E01               	movlw	1
 12291  00A660  ECB0  F087         	call	_motor_schedule_command
 12292                           
 12293                           ;encoder.c: 260: os.approach_direction = MOTOR_DIRECTION_CW;
 12294  00A664  0E01               	movlw	1
 12295  00A666  0100               	movlb	0	; () banked
 12296  00A668  6FE5               	movwf	(_os+18)& (0+255),b	;volatile
 12297                           
 12298                           ; BSR set to: 0
 12299                           ;encoder.c: 261: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 12300  00A66A  0E01               	movlw	1
 12301  00A66C  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12302  00A66E                     l2547:
 12303                           
 12304                           ; BSR set to: 0
 12305                           ;encoder.c: 262: };encoder.c: 263: if(os.encoder1Count+os.encoder2Count>0)
 12306                           
 12307                           ; BSR set to: 0
 12308  00A66E  C0D8  F0BE         	movff	_os+5,??_encoder_statemachine	;volatile
 12309  00A672  6BBF               	clrf	(??_encoder_statemachine+1)& (0+255),b
 12310  00A674  BFBE               	btfsc	??_encoder_statemachine& (0+255),7,b
 12311  00A676  07BF               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 12312  00A678  C0D6  F0C0         	movff	_os+3,??_encoder_statemachine+2	;volatile
 12313  00A67C  6BC1               	clrf	(??_encoder_statemachine+3)& (0+255),b
 12314  00A67E  BFC0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 12315  00A680  07C1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 12316  00A682  51BE               	movf	??_encoder_statemachine& (0+255),w,b
 12317  00A684  27C0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 12318  00A686  51BF               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 12319  00A688  23C1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 12320  00A68A  BFC1               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 12321  00A68C  D007               	goto	l2550
 12322  00A68E  51C1               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 12323  00A690  E103               	bnz	u20810
 12324  00A692  05C0               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 12325  00A694  A0D8               	btfss	status,0,c
 12326  00A696  D002               	goto	l2550
 12327  00A698                     u20810:
 12328                           
 12329                           ; BSR set to: 0
 12330                           ;encoder.c: 264: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 12331  00A698  0E21               	movlw	33
 12332  00A69A  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12333  00A69C                     l2550:
 12334                           
 12335                           ; BSR set to: 0
 12336                           ;encoder.c: 265: if(os.encoder1Count+os.encoder2Count<0)
 12337                           
 12338                           ; BSR set to: 0
 12339  00A69C  C0D8  F0BE         	movff	_os+5,??_encoder_statemachine	;volatile
 12340  00A6A0  6BBF               	clrf	(??_encoder_statemachine+1)& (0+255),b
 12341  00A6A2  BFBE               	btfsc	??_encoder_statemachine& (0+255),7,b
 12342  00A6A4  07BF               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 12343  00A6A6  C0D6  F0C0         	movff	_os+3,??_encoder_statemachine+2	;volatile
 12344  00A6AA  6BC1               	clrf	(??_encoder_statemachine+3)& (0+255),b
 12345  00A6AC  BFC0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 12346  00A6AE  07C1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 12347  00A6B0  51BE               	movf	??_encoder_statemachine& (0+255),w,b
 12348  00A6B2  27C0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 12349  00A6B4  51BF               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 12350  00A6B6  23C1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 12351  00A6B8  AFC1               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 12352  00A6BA  EFFD  F057         	goto	l2520
 12353                           
 12354                           ; BSR set to: 0
 12355                           ;encoder.c: 266: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 12356  00A6BE  0E21               	movlw	33
 12357  00A6C0  EFC3  F057         	goto	L17
 12358  00A6C4                     
 12359                           ; BSR set to: 0
 12360  00A6C4  0100               	movlb	0	; () banked
 12361  00A6C6  51E0               	movf	(_os+13)& (0+255),w,b	;volatile
 12362                           
 12363                           ; Switch size 1, requested type "space"
 12364                           ; Number of cases is 2, Range of values is 33 to 34
 12365                           ; switch strategies available:
 12366                           ; Name         Instructions Cycles
 12367                           ; simple_byte            7     4 (average)
 12368                           ;	Chosen strategy is simple_byte
 12369  00A6C8  0A21               	xorlw	33	; case 33
 12370  00A6CA  B4D8               	btfsc	status,2,c
 12371  00A6CC  D759               	goto	l2539
 12372  00A6CE  0A03               	xorlw	3	; case 34
 12373  00A6D0  B4D8               	btfsc	status,2,c
 12374  00A6D2  D7A7               	goto	l2546
 12375                           
 12376                           ; BSR set to: 0
 12377                           ;encoder.c: 269: break;
 12378  00A6D4  EFFD  F057         	goto	l2520
 12379  00A6D8                     
 12380                           ; BSR set to: 0
 12381                           ;encoder.c: 275: if(os.button1==1)
 12382                           
 12383                           ; BSR set to: 0
 12384  00A6D8  05D7               	decf	(_os+4)& (0+255),w,b	;volatile
 12385  00A6DA  A4D8               	btfss	status,2,c
 12386  00A6DC  D002               	goto	l2555
 12387                           
 12388                           ; BSR set to: 0
 12389                           ;encoder.c: 276: {;encoder.c: 278: os.displayState = DISPLAY_STATE_DIVIDE2_NORMAL;
 12390  00A6DE  0E41               	movlw	65
 12391  00A6E0  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12392  00A6E2                     l2555:
 12393                           
 12394                           ; BSR set to: 0
 12395                           ;encoder.c: 279: };encoder.c: 280: if(os.encoder1Count>0)
 12396                           
 12397                           ; BSR set to: 0
 12398  00A6E2  51D6               	movf	(_os+3)& (0+255),w,b	;volatile
 12399  00A6E4  0A80               	xorlw	128
 12400  00A6E6  0F7F               	addlw	-129
 12401  00A6E8  A0D8               	btfss	status,0,c
 12402  00A6EA  D002               	goto	l2556
 12403                           
 12404                           ; BSR set to: 0
 12405                           ;encoder.c: 281: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
 12406  00A6EC  0E32               	movlw	50
 12407  00A6EE  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12408  00A6F0                     l2556:
 12409                           
 12410                           ; BSR set to: 0
 12411                           ;encoder.c: 282: if(os.encoder1Count<0)
 12412                           
 12413                           ; BSR set to: 0
 12414  00A6F0  AFD6               	btfss	(_os+3)& (0+255),7,b	;volatile
 12415  00A6F2  D01A               	goto	l2558
 12416                           
 12417                           ; BSR set to: 0
 12418                           ;encoder.c: 283: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
 12419  00A6F4  0E32               	movlw	50
 12420  00A6F6  D00F               	goto	L9
 12421  00A6F8                     
 12422                           ; BSR set to: 0
 12423                           ;encoder.c: 286: if(os.button1==1)
 12424                           
 12425                           ; BSR set to: 0
 12426  00A6F8  05D7               	decf	(_os+4)& (0+255),w,b	;volatile
 12427  00A6FA  A4D8               	btfss	status,2,c
 12428  00A6FC  D002               	goto	l2560
 12429                           
 12430                           ; BSR set to: 0
 12431                           ;encoder.c: 287: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 12432  00A6FE  0E02               	movlw	2
 12433  00A700  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12434  00A702                     l2560:
 12435                           
 12436                           ; BSR set to: 0
 12437                           ;encoder.c: 288: if(os.encoder1Count>0)
 12438                           
 12439                           ; BSR set to: 0
 12440  00A702  51D6               	movf	(_os+3)& (0+255),w,b	;volatile
 12441  00A704  0A80               	xorlw	128
 12442  00A706  0F7F               	addlw	-129
 12443  00A708  A0D8               	btfss	status,0,c
 12444  00A70A  D002               	goto	l2561
 12445                           
 12446                           ; BSR set to: 0
 12447                           ;encoder.c: 289: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 12448  00A70C  0E31               	movlw	49
 12449  00A70E  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12450  00A710                     l2561:
 12451                           
 12452                           ; BSR set to: 0
 12453                           ;encoder.c: 290: if(os.encoder1Count<0)
 12454                           
 12455                           ; BSR set to: 0
 12456  00A710  AFD6               	btfss	(_os+3)& (0+255),7,b	;volatile
 12457  00A712  D00A               	goto	l2558
 12458                           
 12459                           ; BSR set to: 0
 12460                           ;encoder.c: 291: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 12461  00A714  0E31               	movlw	49
 12462  00A716                     L9:
 12463  00A716  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12464                           
 12465                           ; BSR set to: 0
 12466                           ;encoder.c: 293: }
 12467                           
 12468                           ; BSR set to: 0
 12469                           ;encoder.c: 292: break;
 12470  00A718  D007               	goto	l2558
 12471  00A71A                     
 12472                           ; BSR set to: 0
 12473                           
 12474                           ; BSR set to: 0
 12475  00A71A  51E0               	movf	(_os+13)& (0+255),w,b	;volatile
 12476                           
 12477                           ; Switch size 1, requested type "space"
 12478                           ; Number of cases is 2, Range of values is 49 to 50
 12479                           ; switch strategies available:
 12480                           ; Name         Instructions Cycles
 12481                           ; simple_byte            7     4 (average)
 12482                           ;	Chosen strategy is simple_byte
 12483  00A71C  0A31               	xorlw	49	; case 49
 12484  00A71E  B4D8               	btfsc	status,2,c
 12485  00A720  D7DB               	goto	l2554
 12486  00A722  0A03               	xorlw	3	; case 50
 12487  00A724  B4D8               	btfsc	status,2,c
 12488  00A726  D7E8               	goto	l2559
 12489  00A728                     l2558:
 12490                           
 12491                           ; BSR set to: 0
 12492                           ;encoder.c: 294: if(os.button2==1)
 12493                           
 12494                           ; BSR set to: 0
 12495  00A728  05D9               	decf	(_os+6)& (0+255),w,b	;volatile
 12496  00A72A  A4D8               	btfss	status,2,c
 12497  00A72C  D005               	goto	l2563
 12498                           
 12499                           ; BSR set to: 0
 12500                           ;encoder.c: 295: {;encoder.c: 296: os.divide_step_size = encoder_next_divide_step_size(o
      +                          s.divide_step_size);
 12501  00A72E  51E8               	movf	(_os+21)& (0+255),w,b	;volatile
 12502  00A730  ECF0  F092         	call	_encoder_next_divide_step_size
 12503  00A734  0100               	movlb	0	; () banked
 12504  00A736  6FE8               	movwf	(_os+21)& (0+255),b	;volatile
 12505  00A738                     l2563:
 12506                           
 12507                           ; BSR set to: 0
 12508                           ;encoder.c: 297: };encoder.c: 298: if(os.encoder2Count>0)
 12509                           
 12510                           ; BSR set to: 0
 12511  00A738  51D8               	movf	(_os+5)& (0+255),w,b	;volatile
 12512  00A73A  0A80               	xorlw	128
 12513  00A73C  0F7F               	addlw	-129
 12514  00A73E  A0D8               	btfss	status,0,c
 12515  00A740  D004               	goto	l2564
 12516                           
 12517                           ; BSR set to: 0
 12518                           ;encoder.c: 299: {;encoder.c: 300: os.division += os.divide_step_size;
 12519  00A742  51E8               	movf	(_os+21)& (0+255),w,b	;volatile
 12520  00A744  27E6               	addwf	(_os+19)& (0+255),f,b	;volatile
 12521  00A746  0E00               	movlw	0
 12522  00A748  23E7               	addwfc	(_os+20)& (0+255),f,b	;volatile
 12523  00A74A                     l2564:
 12524                           
 12525                           ; BSR set to: 0
 12526                           ;encoder.c: 301: };encoder.c: 302: if(os.encoder2Count<0)
 12527  00A74A  AFD8               	btfss	(_os+5)& (0+255),7,b	;volatile
 12528  00A74C  EFFD  F057         	goto	l2520
 12529                           
 12530                           ; BSR set to: 0
 12531                           ;encoder.c: 303: {;encoder.c: 304: if(os.division>os.divide_step_size)
 12532  00A750  51E8               	movf	(_os+21)& (0+255),w,b	;volatile
 12533  00A752  6FBE               	movwf	??_encoder_statemachine& (0+255),b
 12534  00A754  6BBF               	clrf	(??_encoder_statemachine+1)& (0+255),b
 12535  00A756  51E6               	movf	(_os+19)& (0+255),w,b	;volatile
 12536  00A758  5DBE               	subwf	??_encoder_statemachine& (0+255),w,b
 12537  00A75A  51BF               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 12538  00A75C  0A80               	xorlw	128
 12539  00A75E  6FC0               	movwf	(??_encoder_statemachine+2)& (0+255),b
 12540  00A760  51E7               	movf	(_os+20)& (0+255),w,b	;volatile
 12541  00A762  0A80               	xorlw	128
 12542  00A764  59C0               	subwfb	(??_encoder_statemachine+2)& (0+255),w,b
 12543  00A766  B0D8               	btfsc	status,0,c
 12544  00A768  D006               	goto	l2566
 12545                           
 12546                           ; BSR set to: 0
 12547                           ;encoder.c: 305: {;encoder.c: 306: os.division -= os.divide_step_size;
 12548  00A76A  51E8               	movf	(_os+21)& (0+255),w,b	;volatile
 12549  00A76C  5FE6               	subwf	(_os+19)& (0+255),f,b	;volatile
 12550  00A76E  0E00               	movlw	0
 12551  00A770  5BE7               	subwfb	(_os+20)& (0+255),f,b	;volatile
 12552                           
 12553                           ;encoder.c: 307: }
 12554  00A772  EFFD  F057         	goto	l2520
 12555  00A776                     l2566:
 12556                           
 12557                           ; BSR set to: 0
 12558                           ;encoder.c: 308: else;encoder.c: 309: {;encoder.c: 310: os.division = 1;
 12559                           
 12560                           ; BSR set to: 0
 12561  00A776  0E00               	movlw	0
 12562  00A778  6FE7               	movwf	(_os+20)& (0+255),b	;volatile
 12563  00A77A  0E01               	movlw	1
 12564  00A77C  6FE6               	movwf	(_os+19)& (0+255),b	;volatile
 12565                           
 12566                           ; BSR set to: 0
 12567                           ;encoder.c: 311: };encoder.c: 312: };encoder.c: 313: break;
 12568                           
 12569                           ; BSR set to: 0
 12570  00A77E  EFFD  F057         	goto	l2520
 12571  00A782                     
 12572                           ; BSR set to: 0
 12573                           ;encoder.c: 316: if(os.button1==1)
 12574                           
 12575                           ; BSR set to: 0
 12576  00A782  05D7               	decf	(_os+4)& (0+255),w,b	;volatile
 12577  00A784  A4D8               	btfss	status,2,c
 12578  00A786  D002               	goto	l2569
 12579                           
 12580                           ; BSR set to: 0
 12581                           ;encoder.c: 317: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 12582  00A788  0E02               	movlw	2
 12583  00A78A  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12584  00A78C                     l2569:
 12585                           
 12586                           ; BSR set to: 0
 12587                           ;encoder.c: 318: if(os.button2==1)
 12588                           
 12589                           ; BSR set to: 0
 12590  00A78C  05D9               	decf	(_os+6)& (0+255),w,b	;volatile
 12591  00A78E  A4D8               	btfss	status,2,c
 12592  00A790  D08F               	goto	l2570
 12593                           
 12594                           ; BSR set to: 0
 12595                           ;encoder.c: 319: {;encoder.c: 321: if(os.divide_jump_size>0)
 12596  00A792  BFEC               	btfsc	(_os+25)& (0+255),7,b	;volatile
 12597  00A794  D018               	goto	l2571
 12598  00A796  51EC               	movf	(_os+25)& (0+255),w,b	;volatile
 12599  00A798  E103               	bnz	u20950
 12600  00A79A  05EB               	decf	(_os+24)& (0+255),w,b	;volatile
 12601  00A79C  A0D8               	btfss	status,0,c
 12602  00A79E  D013               	goto	l2571
 12603  00A7A0                     u20950:
 12604                           
 12605                           ; BSR set to: 0
 12606                           ;encoder.c: 322: {;encoder.c: 323: target_divide_position = os.divide_position + os.divi
      +                          de_jump_size;
 12607  00A7A0  51EB               	movf	(_os+24)& (0+255),w,b	;volatile
 12608  00A7A2  25E9               	addwf	(_os+22)& (0+255),w,b	;volatile
 12609  00A7A4  6FC6               	movwf	encoder_statemachine@target_divide_position& (0+255),b
 12610  00A7A6  51EC               	movf	(_os+25)& (0+255),w,b	;volatile
 12611  00A7A8  21EA               	addwfc	(_os+23)& (0+255),w,b	;volatile
 12612  00A7AA  6FC7               	movwf	(encoder_statemachine@target_divide_position+1)& (0+255),b
 12613                           
 12614                           ;encoder.c: 324: if(target_divide_position>=os.division)
 12615  00A7AC  51E6               	movf	(_os+19)& (0+255),w,b	;volatile
 12616  00A7AE  5DC6               	subwf	encoder_statemachine@target_divide_position& (0+255),w,b
 12617  00A7B0  51E7               	movf	(_os+20)& (0+255),w,b	;volatile
 12618  00A7B2  59C7               	subwfb	(encoder_statemachine@target_divide_position+1)& (0+255),w,b
 12619  00A7B4  A0D8               	btfss	status,0,c
 12620  00A7B6  D019               	goto	l2574
 12621                           
 12622                           ; BSR set to: 0
 12623                           ;encoder.c: 325: target_divide_position -= os.division;
 12624  00A7B8  EE20  F0E6         	lfsr	2,_os+19	;volatile
 12625  00A7BC  50DE               	movf	postinc2,w,c
 12626  00A7BE  5FC6               	subwf	encoder_statemachine@target_divide_position& (0+255),f,b
 12627  00A7C0  50DD               	movf	postdec2,w,c
 12628  00A7C2  5BC7               	subwfb	(encoder_statemachine@target_divide_position+1)& (0+255),f,b
 12629                           
 12630                           ; BSR set to: 0
 12631                           ;encoder.c: 326: }
 12632  00A7C4  D012               	goto	l2574
 12633  00A7C6                     l2571:
 12634                           
 12635                           ; BSR set to: 0
 12636                           ;encoder.c: 327: else;encoder.c: 328: {;encoder.c: 329: target_divide_position = os.divi
      +                          de_position + os.divide_jump_size;
 12637                           
 12638                           ; BSR set to: 0
 12639  00A7C6  51EB               	movf	(_os+24)& (0+255),w,b	;volatile
 12640  00A7C8  25E9               	addwf	(_os+22)& (0+255),w,b	;volatile
 12641  00A7CA  6FC6               	movwf	encoder_statemachine@target_divide_position& (0+255),b
 12642  00A7CC  51EC               	movf	(_os+25)& (0+255),w,b	;volatile
 12643  00A7CE  21EA               	addwfc	(_os+23)& (0+255),w,b	;volatile
 12644  00A7D0  6FC7               	movwf	(encoder_statemachine@target_divide_position+1)& (0+255),b
 12645                           
 12646                           ;encoder.c: 330: if(target_divide_position>=os.division)
 12647  00A7D2  51E6               	movf	(_os+19)& (0+255),w,b	;volatile
 12648  00A7D4  5DC6               	subwf	encoder_statemachine@target_divide_position& (0+255),w,b
 12649  00A7D6  51E7               	movf	(_os+20)& (0+255),w,b	;volatile
 12650  00A7D8  59C7               	subwfb	(encoder_statemachine@target_divide_position+1)& (0+255),w,b
 12651  00A7DA  A0D8               	btfss	status,0,c
 12652  00A7DC  D006               	goto	l2574
 12653                           
 12654                           ; BSR set to: 0
 12655                           ;encoder.c: 331: target_divide_position += os.division;
 12656  00A7DE  EE20  F0E6         	lfsr	2,_os+19	;volatile
 12657  00A7E2  50DE               	movf	postinc2,w,c
 12658  00A7E4  27C6               	addwf	encoder_statemachine@target_divide_position& (0+255),f,b
 12659  00A7E6  50DD               	movf	postdec2,w,c
 12660  00A7E8  23C7               	addwfc	(encoder_statemachine@target_divide_position+1)& (0+255),f,b
 12661  00A7EA                     l2574:
 12662                           
 12663                           ; BSR set to: 0
 12664                           ;encoder.c: 332: };encoder.c: 335: tmp = (float) target_divide_position;
 12665                           
 12666                           ; BSR set to: 0
 12667                           
 12668                           ; BSR set to: 0
 12669  00A7EA  C0C6  F060         	movff	encoder_statemachine@target_divide_position,___xxtofl@val
 12670  00A7EE  C0C7  F061         	movff	encoder_statemachine@target_divide_position+1,___xxtofl@val+1
 12671  00A7F2  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 12672  00A7F4  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 12673  00A7F6  0E00               	movlw	0
 12674  00A7F8  ECF6  F074         	call	___xxtofl
 12675  00A7FC  C060  F0C8         	movff	?___xxtofl,encoder_statemachine@tmp
 12676  00A800  C061  F0C9         	movff	?___xxtofl+1,encoder_statemachine@tmp+1
 12677  00A804  C062  F0CA         	movff	?___xxtofl+2,encoder_statemachine@tmp+2
 12678  00A808  C063  F0CB         	movff	?___xxtofl+3,encoder_statemachine@tmp+3
 12679                           
 12680                           ;encoder.c: 336: tmp *= 360.0;
 12681  00A80C  C0C8  F06E         	movff	encoder_statemachine@tmp,___flmul@b
 12682  00A810  C0C9  F06F         	movff	encoder_statemachine@tmp+1,___flmul@b+1
 12683  00A814  C0CA  F070         	movff	encoder_statemachine@tmp+2,___flmul@b+2
 12684  00A818  C0CB  F071         	movff	encoder_statemachine@tmp+3,___flmul@b+3
 12685  00A81C  0E00               	movlw	0
 12686  00A81E  0100               	movlb	0	; () banked
 12687  00A820  6F72               	movwf	___flmul@a& (0+255),b
 12688  00A822  0E00               	movlw	0
 12689  00A824  6F73               	movwf	(___flmul@a+1)& (0+255),b
 12690  00A826  0EB4               	movlw	180
 12691  00A828  6F74               	movwf	(___flmul@a+2)& (0+255),b
 12692  00A82A  0E43               	movlw	67
 12693  00A82C  6F75               	movwf	(___flmul@a+3)& (0+255),b
 12694  00A82E  ECF8  F062         	call	___flmul	;wreg free
 12695  00A832  C06E  F0C8         	movff	?___flmul,encoder_statemachine@tmp
 12696  00A836  C06F  F0C9         	movff	?___flmul+1,encoder_statemachine@tmp+1
 12697  00A83A  C070  F0CA         	movff	?___flmul+2,encoder_statemachine@tmp+2
 12698  00A83E  C071  F0CB         	movff	?___flmul+3,encoder_statemachine@tmp+3
 12699                           
 12700                           ;encoder.c: 337: tmp /= (float) os.division;
 12701  00A842  C0C8  F06E         	movff	encoder_statemachine@tmp,___fldiv@b
 12702  00A846  C0C9  F06F         	movff	encoder_statemachine@tmp+1,___fldiv@b+1
 12703  00A84A  C0CA  F070         	movff	encoder_statemachine@tmp+2,___fldiv@b+2
 12704  00A84E  C0CB  F071         	movff	encoder_statemachine@tmp+3,___fldiv@b+3
 12705  00A852  EE20  F0E6         	lfsr	2,_os+19	;volatile
 12706  00A856  CFDE F060          	movff	postinc2,___xxtofl@val
 12707  00A85A  CFDD F061          	movff	postdec2,___xxtofl@val+1
 12708  00A85E  0100               	movlb	0	; () banked
 12709  00A860  0E00               	movlw	0
 12710  00A862  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 12711  00A864  0EFF               	movlw	-1
 12712  00A866  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 12713  00A868  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 12714  00A86A  0E01               	movlw	1
 12715  00A86C  ECF6  F074         	call	___xxtofl
 12716  00A870  C060  F072         	movff	?___xxtofl,___fldiv@a
 12717  00A874  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
 12718  00A878  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
 12719  00A87C  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
 12720  00A880  EC76  F067         	call	___fldiv	;wreg free
 12721  00A884  C06E  F0C8         	movff	?___fldiv,encoder_statemachine@tmp
 12722  00A888  C06F  F0C9         	movff	?___fldiv+1,encoder_statemachine@tmp+1
 12723  00A88C  C070  F0CA         	movff	?___fldiv+2,encoder_statemachine@tmp+2
 12724  00A890  C071  F0CB         	movff	?___fldiv+3,encoder_statemachine@tmp+3
 12725                           
 12726                           ;encoder.c: 340: motor_go_to_degrees_position(tmp);
 12727  00A894  C0C8  F0BA         	movff	encoder_statemachine@tmp,motor_go_to_degrees_position@target_position
 12728  00A898  C0C9  F0BB         	movff	encoder_statemachine@tmp+1,motor_go_to_degrees_position@target_position+1
 12729  00A89C  C0CA  F0BC         	movff	encoder_statemachine@tmp+2,motor_go_to_degrees_position@target_position+2
 12730  00A8A0  C0CB  F0BD         	movff	encoder_statemachine@tmp+3,motor_go_to_degrees_position@target_position+3
 12731  00A8A4  ECB2  F086         	call	_motor_go_to_degrees_position	;wreg free
 12732                           
 12733                           ;encoder.c: 343: os.divide_position = target_divide_position;
 12734  00A8A8  C0C6  F0E9         	movff	encoder_statemachine@target_divide_position,_os+22	;volatile
 12735  00A8AC  C0C7  F0EA         	movff	encoder_statemachine@target_divide_position+1,_os+23	;volatile
 12736  00A8B0                     l2570:
 12737                           
 12738                           ;encoder.c: 407: };encoder.c: 408: if(os.encoder2Count>0)
 12739  00A8B0  0100               	movlb	0	; () banked
 12740  00A8B2  51D8               	movf	(_os+5)& (0+255),w,b	;volatile
 12741  00A8B4  0A80               	xorlw	128
 12742  00A8B6  0F7F               	addlw	-129
 12743  00A8B8  A0D8               	btfss	status,0,c
 12744  00A8BA  D01A               	goto	l2577
 12745                           
 12746                           ; BSR set to: 0
 12747                           ;encoder.c: 409: {;encoder.c: 410: ++os.divide_jump_size;
 12748  00A8BC  4BEB               	infsnz	(_os+24)& (0+255),f,b	;volatile
 12749  00A8BE  2BEC               	incf	(_os+25)& (0+255),f,b	;volatile
 12750                           
 12751                           ; BSR set to: 0
 12752                           ;encoder.c: 411: if(os.divide_jump_size==0)
 12753  00A8C0  51EB               	movf	(_os+24)& (0+255),w,b	;volatile
 12754  00A8C2  11EC               	iorwf	(_os+25)& (0+255),w,b	;volatile
 12755  00A8C4  A4D8               	btfss	status,2,c
 12756  00A8C6  D004               	goto	l2576
 12757                           
 12758                           ; BSR set to: 0
 12759                           ;encoder.c: 412: os.divide_jump_size = 1;
 12760  00A8C8  0E00               	movlw	0
 12761  00A8CA  6FEC               	movwf	(_os+25)& (0+255),b	;volatile
 12762  00A8CC  0E01               	movlw	1
 12763  00A8CE  6FEB               	movwf	(_os+24)& (0+255),b	;volatile
 12764  00A8D0                     l2576:
 12765                           
 12766                           ; BSR set to: 0
 12767                           ;encoder.c: 413: if(os.divide_jump_size>=os.division)
 12768                           
 12769                           ; BSR set to: 0
 12770  00A8D0  51E6               	movf	(_os+19)& (0+255),w,b	;volatile
 12771  00A8D2  5DEB               	subwf	(_os+24)& (0+255),w,b	;volatile
 12772  00A8D4  51EC               	movf	(_os+25)& (0+255),w,b	;volatile
 12773  00A8D6  0A80               	xorlw	128
 12774  00A8D8  6FBE               	movwf	??_encoder_statemachine& (0+255),b
 12775  00A8DA  51E7               	movf	(_os+20)& (0+255),w,b	;volatile
 12776  00A8DC  0A80               	xorlw	128
 12777  00A8DE  59BE               	subwfb	??_encoder_statemachine& (0+255),w,b
 12778  00A8E0  A0D8               	btfss	status,0,c
 12779  00A8E2  D006               	goto	l2577
 12780                           
 12781                           ; BSR set to: 0
 12782                           ;encoder.c: 414: os.divide_jump_size = os.division - 1;
 12783  00A8E4  0EFF               	movlw	255
 12784  00A8E6  25E6               	addwf	(_os+19)& (0+255),w,b	;volatile
 12785  00A8E8  6FEB               	movwf	(_os+24)& (0+255),b	;volatile
 12786  00A8EA  0EFF               	movlw	255
 12787  00A8EC  21E7               	addwfc	(_os+20)& (0+255),w,b	;volatile
 12788  00A8EE  6FEC               	movwf	(_os+25)& (0+255),b	;volatile
 12789  00A8F0                     l2577:
 12790                           
 12791                           ; BSR set to: 0
 12792                           ;encoder.c: 415: };encoder.c: 416: if(os.encoder2Count<0)
 12793                           
 12794                           ; BSR set to: 0
 12795  00A8F0  AFD8               	btfss	(_os+5)& (0+255),7,b	;volatile
 12796  00A8F2  D383               	goto	l2520
 12797                           
 12798                           ; BSR set to: 0
 12799                           ;encoder.c: 417: {;encoder.c: 418: --os.divide_jump_size;
 12800  00A8F4  07EB               	decf	(_os+24)& (0+255),f,b	;volatile
 12801  00A8F6  A0D8               	btfss	status,0,c
 12802  00A8F8  07EC               	decf	(_os+25)& (0+255),f,b	;volatile
 12803                           
 12804                           ; BSR set to: 0
 12805                           ;encoder.c: 419: if(os.divide_jump_size==0)
 12806  00A8FA  51EB               	movf	(_os+24)& (0+255),w,b	;volatile
 12807  00A8FC  11EC               	iorwf	(_os+25)& (0+255),w,b	;volatile
 12808  00A8FE  A4D8               	btfss	status,2,c
 12809  00A900  D002               	goto	l2579
 12810                           
 12811                           ; BSR set to: 0
 12812                           ;encoder.c: 420: os.divide_jump_size = -1;
 12813  00A902  69EB               	setf	(_os+24)& (0+255),b	;volatile
 12814  00A904  69EC               	setf	(_os+25)& (0+255),b	;volatile
 12815  00A906                     l2579:
 12816                           
 12817                           ; BSR set to: 0
 12818                           ;encoder.c: 421: if(os.divide_jump_size<=(-os.division))
 12819                           
 12820                           ; BSR set to: 0
 12821  00A906  EE20  F0E6         	lfsr	2,_os+19	;volatile
 12822  00A90A  CFDE F0BE          	movff	postinc2,??_encoder_statemachine
 12823  00A90E  CFDD F0BF          	movff	postdec2,??_encoder_statemachine+1
 12824  00A912  1FBE               	comf	??_encoder_statemachine& (0+255),f,b
 12825  00A914  1FBF               	comf	(??_encoder_statemachine+1)& (0+255),f,b
 12826  00A916  4BBE               	infsnz	??_encoder_statemachine& (0+255),f,b
 12827  00A918  2BBF               	incf	(??_encoder_statemachine+1)& (0+255),f,b
 12828  00A91A  51EB               	movf	(_os+24)& (0+255),w,b	;volatile
 12829  00A91C  5DBE               	subwf	??_encoder_statemachine& (0+255),w,b
 12830  00A91E  51BF               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 12831  00A920  0A80               	xorlw	128
 12832  00A922  6FC0               	movwf	(??_encoder_statemachine+2)& (0+255),b
 12833  00A924  51EC               	movf	(_os+25)& (0+255),w,b	;volatile
 12834  00A926  0A80               	xorlw	128
 12835  00A928  59C0               	subwfb	(??_encoder_statemachine+2)& (0+255),w,b
 12836  00A92A  A0D8               	btfss	status,0,c
 12837  00A92C  D366               	goto	l2520
 12838                           
 12839                           ; BSR set to: 0
 12840                           ;encoder.c: 422: os.divide_jump_size = 1 - os.division;
 12841  00A92E  EE20  F0E6         	lfsr	2,_os+19	;volatile
 12842  00A932  CFDE F0BE          	movff	postinc2,??_encoder_statemachine
 12843  00A936  CFDD F0BF          	movff	postdec2,??_encoder_statemachine+1
 12844  00A93A  1FBE               	comf	??_encoder_statemachine& (0+255),f,b
 12845  00A93C  1FBF               	comf	(??_encoder_statemachine+1)& (0+255),f,b
 12846  00A93E  4BBE               	infsnz	??_encoder_statemachine& (0+255),f,b
 12847  00A940  2BBF               	incf	(??_encoder_statemachine+1)& (0+255),f,b
 12848  00A942  0E01               	movlw	1
 12849  00A944  25BE               	addwf	??_encoder_statemachine& (0+255),w,b
 12850  00A946  6FEB               	movwf	(_os+24)& (0+255),b	;volatile
 12851  00A948  0E00               	movlw	0
 12852  00A94A  21BF               	addwfc	(??_encoder_statemachine+1)& (0+255),w,b
 12853  00A94C  6FEC               	movwf	(_os+25)& (0+255),b	;volatile
 12854                           
 12855                           ; BSR set to: 0
 12856                           ;encoder.c: 423: };encoder.c: 424: break;
 12857                           
 12858                           ; BSR set to: 0
 12859  00A94E  D355               	goto	l2520
 12860  00A950                     
 12861                           ; BSR set to: 0
 12862                           ;encoder.c: 430: if(os.button1==1)
 12863                           
 12864                           ; BSR set to: 0
 12865  00A950  05D7               	decf	(_os+4)& (0+255),w,b	;volatile
 12866  00A952  A4D8               	btfss	status,2,c
 12867  00A954  D002               	goto	l2584
 12868                           
 12869                           ; BSR set to: 0
 12870                           ;encoder.c: 431: {;encoder.c: 432: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 12871  00A956  0E62               	movlw	98
 12872  00A958  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12873  00A95A                     l2584:
 12874                           
 12875                           ; BSR set to: 0
 12876                           ;encoder.c: 433: };encoder.c: 434: if(os.encoder1Count>0)
 12877                           
 12878                           ; BSR set to: 0
 12879  00A95A  51D6               	movf	(_os+3)& (0+255),w,b	;volatile
 12880  00A95C  0A80               	xorlw	128
 12881  00A95E  0F7F               	addlw	-129
 12882  00A960  A0D8               	btfss	status,0,c
 12883  00A962  D002               	goto	l2585
 12884                           
 12885                           ; BSR set to: 0
 12886                           ;encoder.c: 435: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
 12887  00A964  0E52               	movlw	82
 12888  00A966  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12889  00A968                     l2585:
 12890                           
 12891                           ; BSR set to: 0
 12892                           ;encoder.c: 436: if(os.encoder1Count<0)
 12893                           
 12894                           ; BSR set to: 0
 12895  00A968  AFD6               	btfss	(_os+3)& (0+255),7,b	;volatile
 12896  00A96A  D01A               	goto	l2587
 12897                           
 12898                           ; BSR set to: 0
 12899                           ;encoder.c: 437: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
 12900  00A96C  0E52               	movlw	82
 12901  00A96E  D00F               	goto	L10
 12902  00A970                     
 12903                           ; BSR set to: 0
 12904                           ;encoder.c: 440: if(os.button1==1)
 12905                           
 12906                           ; BSR set to: 0
 12907  00A970  05D7               	decf	(_os+4)& (0+255),w,b	;volatile
 12908  00A972  A4D8               	btfss	status,2,c
 12909  00A974  D002               	goto	l2589
 12910                           
 12911                           ; BSR set to: 0
 12912                           ;encoder.c: 441: os.displayState = DISPLAY_STATE_MAIN_ARC;
 12913  00A976  0E03               	movlw	3
 12914  00A978  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12915  00A97A                     l2589:
 12916                           
 12917                           ; BSR set to: 0
 12918                           ;encoder.c: 442: if(os.encoder1Count>0)
 12919                           
 12920                           ; BSR set to: 0
 12921  00A97A  51D6               	movf	(_os+3)& (0+255),w,b	;volatile
 12922  00A97C  0A80               	xorlw	128
 12923  00A97E  0F7F               	addlw	-129
 12924  00A980  A0D8               	btfss	status,0,c
 12925  00A982  D002               	goto	l2590
 12926                           
 12927                           ; BSR set to: 0
 12928                           ;encoder.c: 443: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 12929  00A984  0E51               	movlw	81
 12930  00A986  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12931  00A988                     l2590:
 12932                           
 12933                           ; BSR set to: 0
 12934                           ;encoder.c: 444: if(os.encoder1Count<0)
 12935                           
 12936                           ; BSR set to: 0
 12937  00A988  AFD6               	btfss	(_os+3)& (0+255),7,b	;volatile
 12938  00A98A  D00A               	goto	l2587
 12939                           
 12940                           ; BSR set to: 0
 12941                           ;encoder.c: 445: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 12942  00A98C  0E51               	movlw	81
 12943  00A98E                     L10:
 12944  00A98E  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12945                           
 12946                           ; BSR set to: 0
 12947                           ;encoder.c: 447: }
 12948                           
 12949                           ; BSR set to: 0
 12950                           ;encoder.c: 446: break;
 12951  00A990  D007               	goto	l2587
 12952  00A992                     
 12953                           ; BSR set to: 0
 12954                           
 12955                           ; BSR set to: 0
 12956  00A992  51E0               	movf	(_os+13)& (0+255),w,b	;volatile
 12957                           
 12958                           ; Switch size 1, requested type "space"
 12959                           ; Number of cases is 2, Range of values is 81 to 82
 12960                           ; switch strategies available:
 12961                           ; Name         Instructions Cycles
 12962                           ; simple_byte            7     4 (average)
 12963                           ;	Chosen strategy is simple_byte
 12964  00A994  0A51               	xorlw	81	; case 81
 12965  00A996  B4D8               	btfsc	status,2,c
 12966  00A998  D7DB               	goto	l2583
 12967  00A99A  0A03               	xorlw	3	; case 82
 12968  00A99C  B4D8               	btfsc	status,2,c
 12969  00A99E  D7E8               	goto	l2588
 12970  00A9A0                     l2587:
 12971                           
 12972                           ; BSR set to: 0
 12973                           ;encoder.c: 448: if(os.button2==1)
 12974                           
 12975                           ; BSR set to: 0
 12976  00A9A0  05D9               	decf	(_os+6)& (0+255),w,b	;volatile
 12977  00A9A2  A4D8               	btfss	status,2,c
 12978  00A9A4  D00A               	goto	l2592
 12979                           
 12980                           ; BSR set to: 0
 12981                           ;encoder.c: 449: {;encoder.c: 450: os.arc_step_size = encoder_next_arc_step_size(os.arc_
      +                          step_size);
 12982  00A9A6  C0ED  F060         	movff	_os+26,encoder_next_arc_step_size@old_stepsize	;volatile
 12983  00A9AA  C0EE  F061         	movff	_os+27,encoder_next_arc_step_size@old_stepsize+1	;volatile
 12984  00A9AE  ECCC  F08B         	call	_encoder_next_arc_step_size	;wreg free
 12985  00A9B2  C060  F0ED         	movff	?_encoder_next_arc_step_size,_os+26	;volatile
 12986  00A9B6  C061  F0EE         	movff	?_encoder_next_arc_step_size+1,_os+27	;volatile
 12987  00A9BA                     l2592:
 12988                           
 12989                           ;encoder.c: 451: };encoder.c: 452: if(os.encoder2Count>0)
 12990  00A9BA  0100               	movlb	0	; () banked
 12991  00A9BC  51D8               	movf	(_os+5)& (0+255),w,b	;volatile
 12992  00A9BE  0A80               	xorlw	128
 12993  00A9C0  0F7F               	addlw	-129
 12994  00A9C2  A0D8               	btfss	status,0,c
 12995  00A9C4  D01C               	goto	l2594
 12996                           
 12997                           ; BSR set to: 0
 12998                           ;encoder.c: 453: {;encoder.c: 454: os.arc_size += os.arc_step_size;
 12999  00A9C6  51ED               	movf	(_os+26)& (0+255),w,b	;volatile
 13000  00A9C8  27EF               	addwf	(_os+28)& (0+255),f,b	;volatile
 13001  00A9CA  51EE               	movf	(_os+27)& (0+255),w,b	;volatile
 13002  00A9CC  23F0               	addwfc	(_os+29)& (0+255),f,b	;volatile
 13003  00A9CE  0E00               	movlw	0
 13004  00A9D0  23F1               	addwfc	(_os+30)& (0+255),f,b	;volatile
 13005  00A9D2  0E00               	movlw	0
 13006  00A9D4  23F2               	addwfc	(_os+31)& (0+255),f,b	;volatile
 13007                           
 13008                           ; BSR set to: 0
 13009                           ;encoder.c: 455: if(os.arc_size>100000)
 13010  00A9D6  BFF2               	btfsc	(_os+31)& (0+255),7,b	;volatile
 13011  00A9D8  D012               	goto	l2594
 13012  00A9DA  51F2               	movf	(_os+31)& (0+255),w,b	;volatile
 13013  00A9DC  E108               	bnz	u21120
 13014  00A9DE  0EA1               	movlw	161
 13015  00A9E0  5DEF               	subwf	(_os+28)& (0+255),w,b	;volatile
 13016  00A9E2  0E86               	movlw	134
 13017  00A9E4  59F0               	subwfb	(_os+29)& (0+255),w,b	;volatile
 13018  00A9E6  0E01               	movlw	1
 13019  00A9E8  59F1               	subwfb	(_os+30)& (0+255),w,b	;volatile
 13020  00A9EA  A0D8               	btfss	status,0,c
 13021  00A9EC  D008               	goto	l2594
 13022  00A9EE                     u21120:
 13023                           
 13024                           ; BSR set to: 0
 13025                           ;encoder.c: 456: os.arc_size = 100000;
 13026  00A9EE  0EA0               	movlw	160
 13027  00A9F0  6FEF               	movwf	(_os+28)& (0+255),b	;volatile
 13028  00A9F2  0E86               	movlw	134
 13029  00A9F4  6FF0               	movwf	(_os+29)& (0+255),b	;volatile
 13030  00A9F6  0E01               	movlw	1
 13031  00A9F8  6FF1               	movwf	(_os+30)& (0+255),b	;volatile
 13032  00A9FA  0E00               	movlw	0
 13033  00A9FC  6FF2               	movwf	(_os+31)& (0+255),b	;volatile
 13034  00A9FE                     l2594:
 13035                           
 13036                           ; BSR set to: 0
 13037                           ;encoder.c: 457: };encoder.c: 458: if(os.encoder2Count<0)
 13038                           
 13039                           ; BSR set to: 0
 13040                           
 13041                           ; BSR set to: 0
 13042  00A9FE  AFD8               	btfss	(_os+5)& (0+255),7,b	;volatile
 13043  00AA00  D2FC               	goto	l2520
 13044                           
 13045                           ; BSR set to: 0
 13046                           ;encoder.c: 459: {;encoder.c: 460: os.arc_size -= os.arc_step_size;
 13047  00AA02  51ED               	movf	(_os+26)& (0+255),w,b	;volatile
 13048  00AA04  6FBE               	movwf	??_encoder_statemachine& (0+255),b
 13049  00AA06  51EE               	movf	(_os+27)& (0+255),w,b	;volatile
 13050  00AA08  6FBF               	movwf	(??_encoder_statemachine+1)& (0+255),b
 13051  00AA0A  6BC0               	clrf	(??_encoder_statemachine+2)& (0+255),b
 13052  00AA0C  6BC1               	clrf	(??_encoder_statemachine+3)& (0+255),b
 13053  00AA0E  51BE               	movf	??_encoder_statemachine& (0+255),w,b
 13054  00AA10  5FEF               	subwf	(_os+28)& (0+255),f,b	;volatile
 13055  00AA12  51BF               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 13056  00AA14  5BF0               	subwfb	(_os+29)& (0+255),f,b	;volatile
 13057  00AA16  51C0               	movf	(??_encoder_statemachine+2)& (0+255),w,b
 13058  00AA18  5BF1               	subwfb	(_os+30)& (0+255),f,b	;volatile
 13059  00AA1A  51C1               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 13060  00AA1C  5BF2               	subwfb	(_os+31)& (0+255),f,b	;volatile
 13061                           
 13062                           ;encoder.c: 461: if(os.arc_size<1)
 13063  00AA1E  BFF2               	btfsc	(_os+31)& (0+255),7,b	;volatile
 13064  00AA20  D007               	goto	u21140
 13065  00AA22  51F2               	movf	(_os+31)& (0+255),w,b	;volatile
 13066  00AA24  11F1               	iorwf	(_os+30)& (0+255),w,b	;volatile
 13067  00AA26  11F0               	iorwf	(_os+29)& (0+255),w,b	;volatile
 13068  00AA28  E102               	bnz	u21141
 13069  00AA2A  05EF               	decf	(_os+28)& (0+255),w,b	;volatile
 13070  00AA2C  B0D8               	btfsc	status,0,c
 13071  00AA2E                     u21141:
 13072  00AA2E  D2E5               	goto	l2520
 13073  00AA30                     u21140:
 13074                           
 13075                           ; BSR set to: 0
 13076                           ;encoder.c: 462: os.arc_size = 1;
 13077  00AA30  0E01               	movlw	1
 13078  00AA32  6FEF               	movwf	(_os+28)& (0+255),b	;volatile
 13079  00AA34  0E00               	movlw	0
 13080  00AA36  6FF0               	movwf	(_os+29)& (0+255),b	;volatile
 13081  00AA38  0E00               	movlw	0
 13082  00AA3A  6FF1               	movwf	(_os+30)& (0+255),b	;volatile
 13083  00AA3C  0E00               	movlw	0
 13084  00AA3E  6FF2               	movwf	(_os+31)& (0+255),b	;volatile
 13085                           
 13086                           ; BSR set to: 0
 13087                           ;encoder.c: 463: };encoder.c: 464: break;
 13088                           
 13089                           ; BSR set to: 0
 13090  00AA40  D2DC               	goto	l2520
 13091  00AA42                     
 13092                           ; BSR set to: 0
 13093                           ;encoder.c: 467: if(os.encoder1Count>0)
 13094                           
 13095                           ; BSR set to: 0
 13096  00AA42  51D6               	movf	(_os+3)& (0+255),w,b	;volatile
 13097  00AA44  0A80               	xorlw	128
 13098  00AA46  0F7F               	addlw	-129
 13099  00AA48  A0D8               	btfss	status,0,c
 13100  00AA4A  D015               	goto	l2600
 13101                           
 13102                           ; BSR set to: 0
 13103                           ;encoder.c: 468: {;encoder.c: 469: if(os.arc_speed<config.maximum_speed_arc)
 13104  00AA4C  0101               	movlb	1	; () banked
 13105  00AA4E  518A               	movf	(_config+15)& (0+255),w,b
 13106  00AA50  0100               	movlb	0	; () banked
 13107  00AA52  5DF3               	subwf	(_os+32)& (0+255),w,b	;volatile
 13108  00AA54  0101               	movlb	1	; () banked
 13109  00AA56  518B               	movf	(_config+16)& (0+255),w,b
 13110  00AA58  0100               	movlb	0	; () banked
 13111  00AA5A  59F4               	subwfb	(_os+33)& (0+255),w,b	;volatile
 13112  00AA5C  B0D8               	btfsc	status,0,c
 13113  00AA5E  D002               	goto	l2599
 13114                           
 13115                           ; BSR set to: 0
 13116                           ;encoder.c: 470: ++os.arc_speed;
 13117  00AA60  4BF3               	infsnz	(_os+32)& (0+255),f,b	;volatile
 13118  00AA62  2BF4               	incf	(_os+33)& (0+255),f,b	;volatile
 13119  00AA64                     l2599:
 13120                           
 13121                           ; BSR set to: 0
 13122                           ;encoder.c: 471: if(os.busy)
 13123                           
 13124                           ; BSR set to: 0
 13125  00AA64  51E1               	movf	(_os+14)& (0+255),w,b	;volatile
 13126  00AA66  B4D8               	btfsc	status,2,c
 13127  00AA68  D006               	goto	l2600
 13128                           
 13129                           ; BSR set to: 0
 13130                           ;encoder.c: 472: motor_change_speed(os.arc_speed);
 13131  00AA6A  C0F3  F060         	movff	_os+32,motor_change_speed@new_speed	;volatile
 13132  00AA6E  C0F4  F061         	movff	_os+33,motor_change_speed@new_speed+1	;volatile
 13133  00AA72  EC59  F094         	call	_motor_change_speed	;wreg free
 13134  00AA76                     l2600:
 13135                           
 13136                           ;encoder.c: 473: };encoder.c: 474: if(os.encoder1Count<0)
 13137  00AA76  0100               	movlb	0	; () banked
 13138  00AA78  AFD6               	btfss	(_os+3)& (0+255),7,b	;volatile
 13139  00AA7A  D11D               	goto	l2604
 13140                           
 13141                           ; BSR set to: 0
 13142                           ;encoder.c: 475: {;encoder.c: 476: if(os.arc_speed>config.minimum_speed)
 13143  00AA7C  51F3               	movf	(_os+32)& (0+255),w,b	;volatile
 13144  00AA7E  0101               	movlb	1	; () banked
 13145  00AA80  5D84               	subwf	(_config+9)& (0+255),w,b
 13146  00AA82  0100               	movlb	0	; () banked
 13147  00AA84  51F4               	movf	(_os+33)& (0+255),w,b	;volatile
 13148  00AA86  0101               	movlb	1	; () banked
 13149  00AA88  5985               	subwfb	(_config+10)& (0+255),w,b
 13150  00AA8A  B0D8               	btfsc	status,0,c
 13151  00AA8C  D004               	goto	l2602
 13152                           
 13153                           ; BSR set to: 1
 13154                           ;encoder.c: 477: --os.arc_speed;
 13155  00AA8E  0100               	movlb	0	; () banked
 13156  00AA90  07F3               	decf	(_os+32)& (0+255),f,b	;volatile
 13157  00AA92  A0D8               	btfss	status,0,c
 13158  00AA94  07F4               	decf	(_os+33)& (0+255),f,b	;volatile
 13159  00AA96                     l2602:
 13160                           
 13161                           ;encoder.c: 478: if(os.busy)
 13162                           
 13163                           ; BSR set to: 0
 13164  00AA96  0100               	movlb	0	; () banked
 13165  00AA98  51E1               	movf	(_os+14)& (0+255),w,b	;volatile
 13166  00AA9A  B4D8               	btfsc	status,2,c
 13167  00AA9C  D10C               	goto	l2604
 13168                           
 13169                           ; BSR set to: 0
 13170                           ;encoder.c: 479: motor_change_speed(os.arc_speed);
 13171  00AA9E  C0F3  F060         	movff	_os+32,motor_change_speed@new_speed	;volatile
 13172  00AAA2  C0F4  F061         	movff	_os+33,motor_change_speed@new_speed+1	;volatile
 13173  00AAA6  EC59  F094         	call	_motor_change_speed	;wreg free
 13174                           
 13175                           ;encoder.c: 480: };encoder.c: 481: switch(os.displayState)
 13176  00AAAA  D105               	goto	l2604
 13177  00AAAC                     
 13178                           ;encoder.c: 484: if(os.button2==1)
 13179  00AAAC  0100               	movlb	0	; () banked
 13180  00AAAE  05D9               	decf	(_os+6)& (0+255),w,b	;volatile
 13181  00AAB0  A4D8               	btfss	status,2,c
 13182  00AAB2  D06F               	goto	l2606
 13183                           
 13184                           ; BSR set to: 0
 13185                           ;encoder.c: 485: {;encoder.c: 486: tmp = (float) os.arc_size;
 13186  00AAB4  C0EF  F060         	movff	_os+28,___xxtofl@val	;volatile
 13187  00AAB8  C0F0  F061         	movff	_os+29,___xxtofl@val+1	;volatile
 13188  00AABC  C0F1  F062         	movff	_os+30,___xxtofl@val+2	;volatile
 13189  00AAC0  C0F2  F063         	movff	_os+31,___xxtofl@val+3	;volatile
 13190  00AAC4  0E01               	movlw	1
 13191  00AAC6  ECF6  F074         	call	___xxtofl
 13192  00AACA  C060  F0C8         	movff	?___xxtofl,encoder_statemachine@tmp
 13193  00AACE  C061  F0C9         	movff	?___xxtofl+1,encoder_statemachine@tmp+1
 13194  00AAD2  C062  F0CA         	movff	?___xxtofl+2,encoder_statemachine@tmp+2
 13195  00AAD6  C063  F0CB         	movff	?___xxtofl+3,encoder_statemachine@tmp+3
 13196                           
 13197                           ;encoder.c: 487: tmp *= config.full_circle_in_steps;
 13198  00AADA  C0C8  F06E         	movff	encoder_statemachine@tmp,___flmul@b
 13199  00AADE  C0C9  F06F         	movff	encoder_statemachine@tmp+1,___flmul@b+1
 13200  00AAE2  C0CA  F070         	movff	encoder_statemachine@tmp+2,___flmul@b+2
 13201  00AAE6  C0CB  F071         	movff	encoder_statemachine@tmp+3,___flmul@b+3
 13202  00AAEA  C17B  F060         	movff	_config,___xxtofl@val
 13203  00AAEE  C17C  F061         	movff	_config+1,___xxtofl@val+1
 13204  00AAF2  C17D  F062         	movff	_config+2,___xxtofl@val+2
 13205  00AAF6  C17E  F063         	movff	_config+3,___xxtofl@val+3
 13206  00AAFA  0E00               	movlw	0
 13207  00AAFC  ECF6  F074         	call	___xxtofl
 13208  00AB00  C060  F072         	movff	?___xxtofl,___flmul@a
 13209  00AB04  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 13210  00AB08  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 13211  00AB0C  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 13212  00AB10  ECF8  F062         	call	___flmul	;wreg free
 13213  00AB14  C06E  F0C8         	movff	?___flmul,encoder_statemachine@tmp
 13214  00AB18  C06F  F0C9         	movff	?___flmul+1,encoder_statemachine@tmp+1
 13215  00AB1C  C070  F0CA         	movff	?___flmul+2,encoder_statemachine@tmp+2
 13216  00AB20  C071  F0CB         	movff	?___flmul+3,encoder_statemachine@tmp+3
 13217                           
 13218                           ;encoder.c: 488: tmp /= 36000;
 13219  00AB24  C0C8  F06E         	movff	encoder_statemachine@tmp,___fldiv@b
 13220  00AB28  C0C9  F06F         	movff	encoder_statemachine@tmp+1,___fldiv@b+1
 13221  00AB2C  C0CA  F070         	movff	encoder_statemachine@tmp+2,___fldiv@b+2
 13222  00AB30  C0CB  F071         	movff	encoder_statemachine@tmp+3,___fldiv@b+3
 13223  00AB34  0E00               	movlw	0
 13224  00AB36  0100               	movlb	0	; () banked
 13225  00AB38  6F72               	movwf	___fldiv@a& (0+255),b
 13226  00AB3A  0EA0               	movlw	160
 13227  00AB3C  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 13228  00AB3E  0E0C               	movlw	12
 13229  00AB40  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 13230  00AB42  0E47               	movlw	71
 13231  00AB44  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 13232  00AB46  EC76  F067         	call	___fldiv	;wreg free
 13233  00AB4A  C06E  F0C8         	movff	?___fldiv,encoder_statemachine@tmp
 13234  00AB4E  C06F  F0C9         	movff	?___fldiv+1,encoder_statemachine@tmp+1
 13235  00AB52  C070  F0CA         	movff	?___fldiv+2,encoder_statemachine@tmp+2
 13236  00AB56  C071  F0CB         	movff	?___fldiv+3,encoder_statemachine@tmp+3
 13237                           
 13238                           ;encoder.c: 489: motor_schedule_command(MOTOR_DIRECTION_CCW, (uint32_t ) tmp, os.arc_spe
      +                          ed);
 13239  00AB5A  C0C8  F060         	movff	encoder_statemachine@tmp,___fltol@f1
 13240  00AB5E  C0C9  F061         	movff	encoder_statemachine@tmp+1,___fltol@f1+1
 13241  00AB62  C0CA  F062         	movff	encoder_statemachine@tmp+2,___fltol@f1+2
 13242  00AB66  C0CB  F063         	movff	encoder_statemachine@tmp+3,___fltol@f1+3
 13243  00AB6A  EC73  F080         	call	___fltol	;wreg free
 13244  00AB6E  C060  F097         	movff	?___fltol,motor_schedule_command@distance_in_steps
 13245  00AB72  C061  F098         	movff	?___fltol+1,motor_schedule_command@distance_in_steps+1
 13246  00AB76  C062  F099         	movff	?___fltol+2,motor_schedule_command@distance_in_steps+2
 13247  00AB7A  C063  F09A         	movff	?___fltol+3,motor_schedule_command@distance_in_steps+3
 13248  00AB7E  C0F3  F09B         	movff	_os+32,motor_schedule_command@speed	;volatile
 13249  00AB82  C0F4  F09C         	movff	_os+33,motor_schedule_command@speed+1	;volatile
 13250  00AB86  0EFF               	movlw	255
 13251  00AB88  ECB0  F087         	call	_motor_schedule_command
 13252                           
 13253                           ;encoder.c: 490: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 13254  00AB8C  0E62               	movlw	98
 13255  00AB8E  0100               	movlb	0	; () banked
 13256  00AB90  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 13257  00AB92                     l2606:
 13258                           
 13259                           ; BSR set to: 0
 13260                           ;encoder.c: 491: };encoder.c: 492: if(os.encoder2Count>0)
 13261                           
 13262                           ; BSR set to: 0
 13263  00AB92  51D8               	movf	(_os+5)& (0+255),w,b	;volatile
 13264  00AB94  0A80               	xorlw	128
 13265  00AB96  0F7F               	addlw	-129
 13266  00AB98  A0D8               	btfss	status,0,c
 13267  00AB9A  D22F               	goto	l2520
 13268                           
 13269                           ; BSR set to: 0
 13270                           ;encoder.c: 493: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 13271  00AB9C  0E62               	movlw	98
 13272  00AB9E  D1F3               	goto	L17
 13273  00ABA0                     
 13274                           ; BSR set to: 0
 13275                           ;encoder.c: 496: if(os.button2==1)
 13276                           
 13277                           ; BSR set to: 0
 13278  00ABA0  05D9               	decf	(_os+6)& (0+255),w,b	;volatile
 13279  00ABA2  A4D8               	btfss	status,2,c
 13280  00ABA4  D007               	goto	l2610
 13281                           
 13282                           ; BSR set to: 0
 13283                           ;encoder.c: 497: {;encoder.c: 498: if(os.busy)
 13284  00ABA6  51E1               	movf	(_os+14)& (0+255),w,b	;volatile
 13285  00ABA8  A4D8               	btfss	status,2,c
 13286                           
 13287                           ; BSR set to: 0
 13288                           ;encoder.c: 499: motor_stop();
 13289  00ABAA  EC8A  F090         	call	_motor_stop	;wreg free
 13290                           
 13291                           ;encoder.c: 500: os.displayState = DISPLAY_STATE_MAIN_ARC;
 13292  00ABAE  0E03               	movlw	3
 13293  00ABB0  0100               	movlb	0	; () banked
 13294  00ABB2  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 13295  00ABB4                     l2610:
 13296                           
 13297                           ; BSR set to: 0
 13298                           ;encoder.c: 501: };encoder.c: 502: if(os.encoder2Count>0)
 13299                           
 13300                           ; BSR set to: 0
 13301  00ABB4  51D8               	movf	(_os+5)& (0+255),w,b	;volatile
 13302  00ABB6  0A80               	xorlw	128
 13303  00ABB8  0F7F               	addlw	-129
 13304  00ABBA  A0D8               	btfss	status,0,c
 13305  00ABBC  D002               	goto	l2612
 13306                           
 13307                           ; BSR set to: 0
 13308                           ;encoder.c: 503: os.displayState = DISPLAY_STATE_ARC2_CW;
 13309  00ABBE  0E63               	movlw	99
 13310  00ABC0  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 13311  00ABC2                     l2612:
 13312                           
 13313                           ; BSR set to: 0
 13314                           ;encoder.c: 504: if(os.encoder2Count<0)
 13315                           
 13316                           ; BSR set to: 0
 13317  00ABC2  AFD8               	btfss	(_os+5)& (0+255),7,b	;volatile
 13318  00ABC4  D21A               	goto	l2520
 13319                           
 13320                           ; BSR set to: 0
 13321                           ;encoder.c: 505: os.displayState = DISPLAY_STATE_ARC2_CCW;
 13322  00ABC6  0E61               	movlw	97
 13323  00ABC8  D1DE               	goto	L17
 13324  00ABCA                     
 13325                           ; BSR set to: 0
 13326                           ;encoder.c: 508: if(os.button2==1)
 13327                           
 13328                           ; BSR set to: 0
 13329  00ABCA  05D9               	decf	(_os+6)& (0+255),w,b	;volatile
 13330  00ABCC  A4D8               	btfss	status,2,c
 13331  00ABCE  D06F               	goto	l2615
 13332                           
 13333                           ; BSR set to: 0
 13334                           ;encoder.c: 509: {;encoder.c: 510: tmp = (float) os.arc_size;
 13335  00ABD0  C0EF  F060         	movff	_os+28,___xxtofl@val	;volatile
 13336  00ABD4  C0F0  F061         	movff	_os+29,___xxtofl@val+1	;volatile
 13337  00ABD8  C0F1  F062         	movff	_os+30,___xxtofl@val+2	;volatile
 13338  00ABDC  C0F2  F063         	movff	_os+31,___xxtofl@val+3	;volatile
 13339  00ABE0  0E01               	movlw	1
 13340  00ABE2  ECF6  F074         	call	___xxtofl
 13341  00ABE6  C060  F0C8         	movff	?___xxtofl,encoder_statemachine@tmp
 13342  00ABEA  C061  F0C9         	movff	?___xxtofl+1,encoder_statemachine@tmp+1
 13343  00ABEE  C062  F0CA         	movff	?___xxtofl+2,encoder_statemachine@tmp+2
 13344  00ABF2  C063  F0CB         	movff	?___xxtofl+3,encoder_statemachine@tmp+3
 13345                           
 13346                           ;encoder.c: 511: tmp *= config.full_circle_in_steps;
 13347  00ABF6  C0C8  F06E         	movff	encoder_statemachine@tmp,___flmul@b
 13348  00ABFA  C0C9  F06F         	movff	encoder_statemachine@tmp+1,___flmul@b+1
 13349  00ABFE  C0CA  F070         	movff	encoder_statemachine@tmp+2,___flmul@b+2
 13350  00AC02  C0CB  F071         	movff	encoder_statemachine@tmp+3,___flmul@b+3
 13351  00AC06  C17B  F060         	movff	_config,___xxtofl@val
 13352  00AC0A  C17C  F061         	movff	_config+1,___xxtofl@val+1
 13353  00AC0E  C17D  F062         	movff	_config+2,___xxtofl@val+2
 13354  00AC12  C17E  F063         	movff	_config+3,___xxtofl@val+3
 13355  00AC16  0E00               	movlw	0
 13356  00AC18  ECF6  F074         	call	___xxtofl
 13357  00AC1C  C060  F072         	movff	?___xxtofl,___flmul@a
 13358  00AC20  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 13359  00AC24  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 13360  00AC28  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 13361  00AC2C  ECF8  F062         	call	___flmul	;wreg free
 13362  00AC30  C06E  F0C8         	movff	?___flmul,encoder_statemachine@tmp
 13363  00AC34  C06F  F0C9         	movff	?___flmul+1,encoder_statemachine@tmp+1
 13364  00AC38  C070  F0CA         	movff	?___flmul+2,encoder_statemachine@tmp+2
 13365  00AC3C  C071  F0CB         	movff	?___flmul+3,encoder_statemachine@tmp+3
 13366                           
 13367                           ;encoder.c: 512: tmp /= 36000;
 13368  00AC40  C0C8  F06E         	movff	encoder_statemachine@tmp,___fldiv@b
 13369  00AC44  C0C9  F06F         	movff	encoder_statemachine@tmp+1,___fldiv@b+1
 13370  00AC48  C0CA  F070         	movff	encoder_statemachine@tmp+2,___fldiv@b+2
 13371  00AC4C  C0CB  F071         	movff	encoder_statemachine@tmp+3,___fldiv@b+3
 13372  00AC50  0E00               	movlw	0
 13373  00AC52  0100               	movlb	0	; () banked
 13374  00AC54  6F72               	movwf	___fldiv@a& (0+255),b
 13375  00AC56  0EA0               	movlw	160
 13376  00AC58  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 13377  00AC5A  0E0C               	movlw	12
 13378  00AC5C  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 13379  00AC5E  0E47               	movlw	71
 13380  00AC60  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 13381  00AC62  EC76  F067         	call	___fldiv	;wreg free
 13382  00AC66  C06E  F0C8         	movff	?___fldiv,encoder_statemachine@tmp
 13383  00AC6A  C06F  F0C9         	movff	?___fldiv+1,encoder_statemachine@tmp+1
 13384  00AC6E  C070  F0CA         	movff	?___fldiv+2,encoder_statemachine@tmp+2
 13385  00AC72  C071  F0CB         	movff	?___fldiv+3,encoder_statemachine@tmp+3
 13386                           
 13387                           ;encoder.c: 513: motor_schedule_command(MOTOR_DIRECTION_CW, (uint32_t ) tmp, os.arc_spee
      +                          d);
 13388  00AC76  C0C8  F060         	movff	encoder_statemachine@tmp,___fltol@f1
 13389  00AC7A  C0C9  F061         	movff	encoder_statemachine@tmp+1,___fltol@f1+1
 13390  00AC7E  C0CA  F062         	movff	encoder_statemachine@tmp+2,___fltol@f1+2
 13391  00AC82  C0CB  F063         	movff	encoder_statemachine@tmp+3,___fltol@f1+3
 13392  00AC86  EC73  F080         	call	___fltol	;wreg free
 13393  00AC8A  C060  F097         	movff	?___fltol,motor_schedule_command@distance_in_steps
 13394  00AC8E  C061  F098         	movff	?___fltol+1,motor_schedule_command@distance_in_steps+1
 13395  00AC92  C062  F099         	movff	?___fltol+2,motor_schedule_command@distance_in_steps+2
 13396  00AC96  C063  F09A         	movff	?___fltol+3,motor_schedule_command@distance_in_steps+3
 13397  00AC9A  C0F3  F09B         	movff	_os+32,motor_schedule_command@speed	;volatile
 13398  00AC9E  C0F4  F09C         	movff	_os+33,motor_schedule_command@speed+1	;volatile
 13399  00ACA2  0E01               	movlw	1
 13400  00ACA4  ECB0  F087         	call	_motor_schedule_command
 13401                           
 13402                           ;encoder.c: 514: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 13403  00ACA8  0E62               	movlw	98
 13404  00ACAA  0100               	movlb	0	; () banked
 13405  00ACAC  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 13406  00ACAE                     l2615:
 13407                           
 13408                           ; BSR set to: 0
 13409                           ;encoder.c: 515: };encoder.c: 516: if(os.encoder2Count<0)
 13410                           
 13411                           ; BSR set to: 0
 13412  00ACAE  AFD8               	btfss	(_os+5)& (0+255),7,b	;volatile
 13413  00ACB0  D1A4               	goto	l2520
 13414                           
 13415                           ; BSR set to: 0
 13416                           ;encoder.c: 517: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 13417  00ACB2  0E62               	movlw	98
 13418  00ACB4  D168               	goto	L17
 13419  00ACB6                     l2604:
 13420                           
 13421                           ; BSR set to: 0
 13422  00ACB6  0100               	movlb	0	; () banked
 13423  00ACB8  51E0               	movf	(_os+13)& (0+255),w,b	;volatile
 13424                           
 13425                           ; Switch size 1, requested type "space"
 13426                           ; Number of cases is 3, Range of values is 97 to 99
 13427                           ; switch strategies available:
 13428                           ; Name         Instructions Cycles
 13429                           ; simple_byte           10     6 (average)
 13430                           ;	Chosen strategy is simple_byte
 13431  00ACBA  0A61               	xorlw	97	; case 97
 13432  00ACBC  B4D8               	btfsc	status,2,c
 13433  00ACBE  D6F6               	goto	l2605
 13434  00ACC0  0A03               	xorlw	3	; case 98
 13435  00ACC2  B4D8               	btfsc	status,2,c
 13436  00ACC4  D76D               	goto	l2609
 13437  00ACC6  0A01               	xorlw	1	; case 99
 13438  00ACC8  B4D8               	btfsc	status,2,c
 13439  00ACCA  D77F               	goto	l2614
 13440                           
 13441                           ; BSR set to: 0
 13442                           ;encoder.c: 520: break;
 13443  00ACCC  D196               	goto	l2520
 13444  00ACCE                     
 13445                           ; BSR set to: 0
 13446                           ;encoder.c: 523: if(os.button2==1)
 13447                           
 13448                           ; BSR set to: 0
 13449  00ACCE  05D9               	decf	(_os+6)& (0+255),w,b	;volatile
 13450  00ACD0  A4D8               	btfss	status,2,c
 13451  00ACD2  D0D9               	goto	l2618
 13452                           
 13453                           ; BSR set to: 0
 13454                           ;encoder.c: 524: {;encoder.c: 526: if(os.current_position_in_steps==0)
 13455  00ACD4  51DA               	movf	(_os+7)& (0+255),w,b	;volatile
 13456  00ACD6  11DB               	iorwf	(_os+8)& (0+255),w,b	;volatile
 13457  00ACD8  11DC               	iorwf	(_os+9)& (0+255),w,b	;volatile
 13458  00ACDA  11DD               	iorwf	(_os+10)& (0+255),w,b	;volatile
 13459  00ACDC  B4D8               	btfsc	status,2,c
 13460  00ACDE  D0CC               	goto	l2626
 13461                           
 13462                           ; BSR set to: 0
 13463                           ;encoder.c: 530: else if(os.current_position_in_steps<=(config.full_circle_in_steps>>1))
 13464                           
 13465                           ; BSR set to: 0
 13466                           
 13467                           ; BSR set to: 0
 13468                           ;encoder.c: 527: {;encoder.c: 529: }
 13469  00ACE0  C17B  F0BE         	movff	_config,??_encoder_statemachine
 13470  00ACE4  C17C  F0BF         	movff	_config+1,??_encoder_statemachine+1
 13471  00ACE8  C17D  F0C0         	movff	_config+2,??_encoder_statemachine+2
 13472  00ACEC  C17E  F0C1         	movff	_config+3,??_encoder_statemachine+3
 13473  00ACF0  90D8               	bcf	status,0,c
 13474  00ACF2  33C1               	rrcf	(??_encoder_statemachine+3)& (0+255),f,b
 13475  00ACF4  33C0               	rrcf	(??_encoder_statemachine+2)& (0+255),f,b
 13476  00ACF6  33BF               	rrcf	(??_encoder_statemachine+1)& (0+255),f,b
 13477  00ACF8  33BE               	rrcf	??_encoder_statemachine& (0+255),f,b
 13478  00ACFA  51DA               	movf	(_os+7)& (0+255),w,b	;volatile
 13479  00ACFC  5DBE               	subwf	??_encoder_statemachine& (0+255),w,b
 13480  00ACFE  51DB               	movf	(_os+8)& (0+255),w,b	;volatile
 13481  00AD00  59BF               	subwfb	(??_encoder_statemachine+1)& (0+255),w,b
 13482  00AD02  51DC               	movf	(_os+9)& (0+255),w,b	;volatile
 13483  00AD04  59C0               	subwfb	(??_encoder_statemachine+2)& (0+255),w,b
 13484  00AD06  51DD               	movf	(_os+10)& (0+255),w,b	;volatile
 13485  00AD08  59C1               	subwfb	(??_encoder_statemachine+3)& (0+255),w,b
 13486  00AD0A  A0D8               	btfss	status,0,c
 13487  00AD0C  D039               	goto	l2621
 13488                           
 13489                           ; BSR set to: 0
 13490                           ;encoder.c: 531: {;encoder.c: 532: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 13491  00AD0E  29E5               	incf	(_os+18)& (0+255),w,b	;volatile
 13492  00AD10  A4D8               	btfss	status,2,c
 13493  00AD12  D010               	goto	l2622
 13494                           
 13495                           ; BSR set to: 0
 13496                           ;encoder.c: 533: {;encoder.c: 534: motor_schedule_command(MOTOR_DIRECTION_CCW, os.curren
      +                          t_position_in_steps, 0);
 13497  00AD14  C0DA  F097         	movff	_os+7,motor_schedule_command@distance_in_steps	;volatile
 13498  00AD18  C0DB  F098         	movff	_os+8,motor_schedule_command@distance_in_steps+1	;volatile
 13499  00AD1C  C0DC  F099         	movff	_os+9,motor_schedule_command@distance_in_steps+2	;volatile
 13500  00AD20  C0DD  F09A         	movff	_os+10,motor_schedule_command@distance_in_steps+3	;volatile
 13501  00AD24  0E00               	movlw	0
 13502  00AD26  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 13503  00AD28  0E00               	movlw	0
 13504  00AD2A  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 13505  00AD2C  0EFF               	movlw	255
 13506  00AD2E  ECB0  F087         	call	_motor_schedule_command
 13507                           
 13508                           ;encoder.c: 535: }
 13509  00AD32  D0A2               	goto	l2626
 13510  00AD34                     l2622:
 13511                           
 13512                           ;encoder.c: 536: else;encoder.c: 537: {;encoder.c: 538: motor_schedule_command(MOTOR_DIR
      +                          ECTION_CCW, os.current_position_in_steps+config.overshoot_in_steps, 0);
 13513  00AD34  0101               	movlb	1	; () banked
 13514  00AD36  5180               	movf	(_config+5)& (0+255),w,b
 13515  00AD38  0100               	movlb	0	; () banked
 13516  00AD3A  25DA               	addwf	(_os+7)& (0+255),w,b	;volatile
 13517  00AD3C  6F97               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 13518  00AD3E  0101               	movlb	1	; () banked
 13519  00AD40  5181               	movf	(_config+6)& (0+255),w,b
 13520  00AD42  0100               	movlb	0	; () banked
 13521  00AD44  21DB               	addwfc	(_os+8)& (0+255),w,b	;volatile
 13522  00AD46  6F98               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 13523  00AD48  0E00               	movlw	0
 13524  00AD4A  21DC               	addwfc	(_os+9)& (0+255),w,b	;volatile
 13525  00AD4C  6F99               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 13526  00AD4E  0E00               	movlw	0
 13527  00AD50  21DD               	addwfc	(_os+10)& (0+255),w,b	;volatile
 13528  00AD52  6F9A               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 13529  00AD54  0E00               	movlw	0
 13530  00AD56  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 13531  00AD58  0E00               	movlw	0
 13532  00AD5A  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 13533  00AD5C  0EFF               	movlw	255
 13534  00AD5E  ECB0  F087         	call	_motor_schedule_command
 13535                           
 13536                           ;encoder.c: 539: motor_schedule_command(MOTOR_DIRECTION_CW, config.overshoot_in_steps, 0
      +                          );
 13537  00AD62  C180  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
 13538  00AD66  C181  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 13539  00AD6A  0100               	movlb	0	; () banked
 13540  00AD6C  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 13541  00AD6E  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 13542  00AD70  0E00               	movlw	0
 13543  00AD72  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 13544  00AD74  0E00               	movlw	0
 13545  00AD76  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 13546  00AD78  0E01               	movlw	1
 13547  00AD7A  ECB0  F087         	call	_motor_schedule_command
 13548                           
 13549                           ;encoder.c: 540: };encoder.c: 541: }
 13550  00AD7E  D07C               	goto	l2626
 13551  00AD80                     l2621:
 13552                           
 13553                           ;encoder.c: 542: else;encoder.c: 543: {;encoder.c: 544: if(os.approach_direction==MOTOR_
      +                          DIRECTION_CW)
 13554  00AD80  0100               	movlb	0	; () banked
 13555  00AD82  05E5               	decf	(_os+18)& (0+255),w,b	;volatile
 13556  00AD84  A4D8               	btfss	status,2,c
 13557  00AD86  D02D               	goto	l2625
 13558                           
 13559                           ; BSR set to: 0
 13560                           ;encoder.c: 545: {;encoder.c: 546: motor_schedule_command(MOTOR_DIRECTION_CW, (config.fu
      +                          ll_circle_in_steps-os.current_position_in_steps), 0);
 13561  00AD88  C0DA  F0BE         	movff	_os+7,??_encoder_statemachine	;volatile
 13562  00AD8C  C0DB  F0BF         	movff	_os+8,??_encoder_statemachine+1	;volatile
 13563  00AD90  C0DC  F0C0         	movff	_os+9,??_encoder_statemachine+2	;volatile
 13564  00AD94  C0DD  F0C1         	movff	_os+10,??_encoder_statemachine+3	;volatile
 13565  00AD98  1FBE               	comf	??_encoder_statemachine& (0+255),f,b
 13566  00AD9A  1FBF               	comf	(??_encoder_statemachine+1)& (0+255),f,b
 13567  00AD9C  1FC0               	comf	(??_encoder_statemachine+2)& (0+255),f,b
 13568  00AD9E  1FC1               	comf	(??_encoder_statemachine+3)& (0+255),f,b
 13569  00ADA0  2BBE               	incf	??_encoder_statemachine& (0+255),f,b
 13570  00ADA2  0E00               	movlw	0
 13571  00ADA4  23BF               	addwfc	(??_encoder_statemachine+1)& (0+255),f,b
 13572  00ADA6  23C0               	addwfc	(??_encoder_statemachine+2)& (0+255),f,b
 13573  00ADA8  23C1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 13574  00ADAA  0101               	movlb	1	; () banked
 13575  00ADAC  517B               	movf	_config& (0+255),w,b
 13576  00ADAE  0100               	movlb	0	; () banked
 13577  00ADB0  25BE               	addwf	??_encoder_statemachine& (0+255),w,b
 13578  00ADB2  6F97               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 13579  00ADB4  0101               	movlb	1	; () banked
 13580  00ADB6  517C               	movf	(_config+1)& (0+255),w,b
 13581  00ADB8  0100               	movlb	0	; () banked
 13582  00ADBA  21BF               	addwfc	(??_encoder_statemachine+1)& (0+255),w,b
 13583  00ADBC  6F98               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 13584  00ADBE  0101               	movlb	1	; () banked
 13585  00ADC0  517D               	movf	(_config+2)& (0+255),w,b
 13586  00ADC2  0100               	movlb	0	; () banked
 13587  00ADC4  21C0               	addwfc	(??_encoder_statemachine+2)& (0+255),w,b
 13588  00ADC6  6F99               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 13589  00ADC8  0101               	movlb	1	; () banked
 13590  00ADCA  517E               	movf	(_config+3)& (0+255),w,b
 13591  00ADCC  0100               	movlb	0	; () banked
 13592  00ADCE  21C1               	addwfc	(??_encoder_statemachine+3)& (0+255),w,b
 13593  00ADD0  6F9A               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 13594  00ADD2  0E00               	movlw	0
 13595  00ADD4  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 13596  00ADD6  0E00               	movlw	0
 13597  00ADD8  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 13598  00ADDA  0E01               	movlw	1
 13599  00ADDC  ECB0  F087         	call	_motor_schedule_command
 13600                           
 13601                           ;encoder.c: 547: }
 13602  00ADE0  D04B               	goto	l2626
 13603  00ADE2                     l2625:
 13604                           
 13605                           ;encoder.c: 548: else;encoder.c: 549: {;encoder.c: 550: motor_schedule_command(MOTOR_DIR
      +                          ECTION_CW, (config.full_circle_in_steps-os.current_position_in_steps+config.overshoot_in
      +                          _steps), 0);
 13606  00ADE2  C0DA  F0BE         	movff	_os+7,??_encoder_statemachine	;volatile
 13607  00ADE6  C0DB  F0BF         	movff	_os+8,??_encoder_statemachine+1	;volatile
 13608  00ADEA  C0DC  F0C0         	movff	_os+9,??_encoder_statemachine+2	;volatile
 13609  00ADEE  C0DD  F0C1         	movff	_os+10,??_encoder_statemachine+3	;volatile
 13610  00ADF2  0100               	movlb	0	; () banked
 13611  00ADF4  1FBE               	comf	??_encoder_statemachine& (0+255),f,b
 13612  00ADF6  1FBF               	comf	(??_encoder_statemachine+1)& (0+255),f,b
 13613  00ADF8  1FC0               	comf	(??_encoder_statemachine+2)& (0+255),f,b
 13614  00ADFA  1FC1               	comf	(??_encoder_statemachine+3)& (0+255),f,b
 13615  00ADFC  2BBE               	incf	??_encoder_statemachine& (0+255),f,b
 13616  00ADFE  0E00               	movlw	0
 13617  00AE00  23BF               	addwfc	(??_encoder_statemachine+1)& (0+255),f,b
 13618  00AE02  23C0               	addwfc	(??_encoder_statemachine+2)& (0+255),f,b
 13619  00AE04  23C1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 13620  00AE06  0101               	movlb	1	; () banked
 13621  00AE08  5180               	movf	(_config+5)& (0+255),w,b
 13622  00AE0A  0100               	movlb	0	; () banked
 13623  00AE0C  25BE               	addwf	??_encoder_statemachine& (0+255),w,b
 13624  00AE0E  6FC2               	movwf	(??_encoder_statemachine+4)& (0+255),b
 13625  00AE10  0101               	movlb	1	; () banked
 13626  00AE12  5181               	movf	(_config+6)& (0+255),w,b
 13627  00AE14  0100               	movlb	0	; () banked
 13628  00AE16  21BF               	addwfc	(??_encoder_statemachine+1)& (0+255),w,b
 13629  00AE18  6FC3               	movwf	(??_encoder_statemachine+5)& (0+255),b
 13630  00AE1A  0E00               	movlw	0
 13631  00AE1C  21C0               	addwfc	(??_encoder_statemachine+2)& (0+255),w,b
 13632  00AE1E  6FC4               	movwf	(??_encoder_statemachine+6)& (0+255),b
 13633  00AE20  0E00               	movlw	0
 13634  00AE22  21C1               	addwfc	(??_encoder_statemachine+3)& (0+255),w,b
 13635  00AE24  6FC5               	movwf	(??_encoder_statemachine+7)& (0+255),b
 13636  00AE26  0101               	movlb	1	; () banked
 13637  00AE28  517B               	movf	_config& (0+255),w,b
 13638  00AE2A  0100               	movlb	0	; () banked
 13639  00AE2C  25C2               	addwf	(??_encoder_statemachine+4)& (0+255),w,b
 13640  00AE2E  6F97               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 13641  00AE30  0101               	movlb	1	; () banked
 13642  00AE32  517C               	movf	(_config+1)& (0+255),w,b
 13643  00AE34  0100               	movlb	0	; () banked
 13644  00AE36  21C3               	addwfc	(??_encoder_statemachine+5)& (0+255),w,b
 13645  00AE38  6F98               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 13646  00AE3A  0101               	movlb	1	; () banked
 13647  00AE3C  517D               	movf	(_config+2)& (0+255),w,b
 13648  00AE3E  0100               	movlb	0	; () banked
 13649  00AE40  21C4               	addwfc	(??_encoder_statemachine+6)& (0+255),w,b
 13650  00AE42  6F99               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 13651  00AE44  0101               	movlb	1	; () banked
 13652  00AE46  517E               	movf	(_config+3)& (0+255),w,b
 13653  00AE48  0100               	movlb	0	; () banked
 13654  00AE4A  21C5               	addwfc	(??_encoder_statemachine+7)& (0+255),w,b
 13655  00AE4C  6F9A               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 13656  00AE4E  0E00               	movlw	0
 13657  00AE50  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 13658  00AE52  0E00               	movlw	0
 13659  00AE54  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 13660  00AE56  0E01               	movlw	1
 13661  00AE58  ECB0  F087         	call	_motor_schedule_command
 13662                           
 13663                           ;encoder.c: 551: motor_schedule_command(MOTOR_DIRECTION_CCW, config.overshoot_in_steps, 
      +                          0);
 13664  00AE5C  C180  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
 13665  00AE60  C181  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 13666  00AE64  0100               	movlb	0	; () banked
 13667  00AE66  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 13668  00AE68  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 13669  00AE6A  0E00               	movlw	0
 13670  00AE6C  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 13671  00AE6E  0E00               	movlw	0
 13672  00AE70  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 13673  00AE72  0EFF               	movlw	255
 13674  00AE74  ECB0  F087         	call	_motor_schedule_command
 13675  00AE78                     l2626:
 13676                           
 13677                           ;encoder.c: 552: };encoder.c: 553: };encoder.c: 554: os.displayState = DISPLAY_STATE_MAI
      +                          N_ZERO;
 13678  00AE78  0E05               	movlw	5
 13679  00AE7A  0100               	movlb	0	; () banked
 13680  00AE7C  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 13681                           
 13682                           ; BSR set to: 0
 13683                           ;encoder.c: 555: os.divide_position = 0;
 13684  00AE7E  0E00               	movlw	0
 13685  00AE80  6FEA               	movwf	(_os+23)& (0+255),b	;volatile
 13686  00AE82  0E00               	movlw	0
 13687  00AE84  6FE9               	movwf	(_os+22)& (0+255),b	;volatile
 13688  00AE86                     l2618:
 13689                           
 13690                           ; BSR set to: 0
 13691                           ;encoder.c: 556: };encoder.c: 557: if(os.button1==1)
 13692                           
 13693                           ; BSR set to: 0
 13694  00AE86  05D7               	decf	(_os+4)& (0+255),w,b	;volatile
 13695  00AE88  A4D8               	btfss	status,2,c
 13696  00AE8A  D0B7               	goto	l2520
 13697                           
 13698                           ; BSR set to: 0
 13699                           ;encoder.c: 558: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 13700  00AE8C  0E05               	movlw	5
 13701  00AE8E  D07B               	goto	L17
 13702  00AE90                     
 13703                           ; BSR set to: 0
 13704                           ;encoder.c: 562: if(os.encoder1Count>0)
 13705                           
 13706                           ; BSR set to: 0
 13707  00AE90  51D6               	movf	(_os+3)& (0+255),w,b	;volatile
 13708  00AE92  0A80               	xorlw	128
 13709  00AE94  0F7F               	addlw	-129
 13710  00AE96  A0D8               	btfss	status,0,c
 13711  00AE98  D012               	goto	l2630
 13712                           
 13713                           ; BSR set to: 0
 13714                           ;encoder.c: 563: {;encoder.c: 564: if(os.manual_speed<config.maximum_speed_manual)
 13715  00AE9A  0101               	movlb	1	; () banked
 13716  00AE9C  518E               	movf	(_config+19)& (0+255),w,b
 13717  00AE9E  0100               	movlb	0	; () banked
 13718  00AEA0  5DF6               	subwf	(_os+35)& (0+255),w,b	;volatile
 13719  00AEA2  0101               	movlb	1	; () banked
 13720  00AEA4  518F               	movf	(_config+20)& (0+255),w,b
 13721  00AEA6  0100               	movlb	0	; () banked
 13722  00AEA8  59F7               	subwfb	(_os+36)& (0+255),w,b	;volatile
 13723  00AEAA  B0D8               	btfsc	status,0,c
 13724  00AEAC  D008               	goto	l2630
 13725                           
 13726                           ; BSR set to: 0
 13727                           ;encoder.c: 565: {;encoder.c: 566: ++os.manual_speed;
 13728  00AEAE  4BF6               	infsnz	(_os+35)& (0+255),f,b	;volatile
 13729  00AEB0  2BF7               	incf	(_os+36)& (0+255),f,b	;volatile
 13730                           
 13731                           ; BSR set to: 0
 13732                           ;encoder.c: 567: motor_change_speed(os.manual_speed);
 13733  00AEB2  C0F6  F060         	movff	_os+35,motor_change_speed@new_speed	;volatile
 13734  00AEB6  C0F7  F061         	movff	_os+36,motor_change_speed@new_speed+1	;volatile
 13735  00AEBA  EC59  F094         	call	_motor_change_speed	;wreg free
 13736  00AEBE                     l2630:
 13737                           
 13738                           ;encoder.c: 568: };encoder.c: 570: };encoder.c: 571: if(os.encoder1Count<0)
 13739  00AEBE  0100               	movlb	0	; () banked
 13740  00AEC0  AFD6               	btfss	(_os+3)& (0+255),7,b	;volatile
 13741  00AEC2  D063               	goto	l2633
 13742                           
 13743                           ; BSR set to: 0
 13744                           ;encoder.c: 572: {;encoder.c: 573: if(os.manual_speed>config.minimum_speed)
 13745  00AEC4  51F6               	movf	(_os+35)& (0+255),w,b	;volatile
 13746  00AEC6  0101               	movlb	1	; () banked
 13747  00AEC8  5D84               	subwf	(_config+9)& (0+255),w,b
 13748  00AECA  0100               	movlb	0	; () banked
 13749  00AECC  51F7               	movf	(_os+36)& (0+255),w,b	;volatile
 13750  00AECE  0101               	movlb	1	; () banked
 13751  00AED0  5985               	subwfb	(_config+10)& (0+255),w,b
 13752  00AED2  B0D8               	btfsc	status,0,c
 13753  00AED4  D05A               	goto	l2633
 13754                           
 13755                           ; BSR set to: 1
 13756                           ;encoder.c: 574: {;encoder.c: 575: --os.manual_speed;
 13757  00AED6  0100               	movlb	0	; () banked
 13758  00AED8  07F6               	decf	(_os+35)& (0+255),f,b	;volatile
 13759  00AEDA  A0D8               	btfss	status,0,c
 13760  00AEDC  07F7               	decf	(_os+36)& (0+255),f,b	;volatile
 13761                           
 13762                           ; BSR set to: 0
 13763                           ;encoder.c: 576: motor_change_speed(os.manual_speed);
 13764  00AEDE  C0F6  F060         	movff	_os+35,motor_change_speed@new_speed	;volatile
 13765  00AEE2  C0F7  F061         	movff	_os+36,motor_change_speed@new_speed+1	;volatile
 13766  00AEE6  EC59  F094         	call	_motor_change_speed	;wreg free
 13767                           
 13768                           ;encoder.c: 577: };encoder.c: 578: };encoder.c: 579: switch(os.displayState)
 13769  00AEEA  D04F               	goto	l2633
 13770  00AEEC                     
 13771                           ;encoder.c: 582: if(os.button2==1)
 13772  00AEEC  0100               	movlb	0	; () banked
 13773  00AEEE  05D9               	decf	(_os+6)& (0+255),w,b	;volatile
 13774  00AEF0  A4D8               	btfss	status,2,c
 13775  00AEF2  D012               	goto	l2635
 13776                           
 13777                           ; BSR set to: 0
 13778                           ;encoder.c: 583: {;encoder.c: 584: motor_schedule_command(MOTOR_DIRECTION_CCW, 0, os.man
      +                          ual_speed);
 13779  00AEF4  0E00               	movlw	0
 13780  00AEF6  6F97               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 13781  00AEF8  0E00               	movlw	0
 13782  00AEFA  6F98               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 13783  00AEFC  0E00               	movlw	0
 13784  00AEFE  6F99               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 13785  00AF00  0E00               	movlw	0
 13786  00AF02  6F9A               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 13787  00AF04  C0F6  F09B         	movff	_os+35,motor_schedule_command@speed	;volatile
 13788  00AF08  C0F7  F09C         	movff	_os+36,motor_schedule_command@speed+1	;volatile
 13789  00AF0C  0EFF               	movlw	255
 13790  00AF0E  ECB0  F087         	call	_motor_schedule_command
 13791                           
 13792                           ;encoder.c: 585: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 13793  00AF12  0E84               	movlw	132
 13794  00AF14  0100               	movlb	0	; () banked
 13795  00AF16  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 13796  00AF18                     l2635:
 13797                           
 13798                           ; BSR set to: 0
 13799                           ;encoder.c: 586: };encoder.c: 587: if(os.encoder2Count>0)
 13800                           
 13801                           ; BSR set to: 0
 13802  00AF18  51D8               	movf	(_os+5)& (0+255),w,b	;volatile
 13803  00AF1A  0A80               	xorlw	128
 13804  00AF1C  0F7F               	addlw	-129
 13805  00AF1E  A0D8               	btfss	status,0,c
 13806  00AF20  D06C               	goto	l2520
 13807                           
 13808                           ; BSR set to: 0
 13809                           ;encoder.c: 588: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 13810  00AF22  0E82               	movlw	130
 13811  00AF24  D030               	goto	L17
 13812  00AF26                     
 13813                           ; BSR set to: 0
 13814                           ;encoder.c: 591: if(os.button2==1)
 13815                           
 13816                           ; BSR set to: 0
 13817  00AF26  05D9               	decf	(_os+6)& (0+255),w,b	;volatile
 13818  00AF28  A4D8               	btfss	status,2,c
 13819  00AF2A  D002               	goto	l2639
 13820                           
 13821                           ; BSR set to: 0
 13822                           ;encoder.c: 592: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 13823  00AF2C  0E04               	movlw	4
 13824  00AF2E  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 13825  00AF30                     l2639:
 13826                           
 13827                           ; BSR set to: 0
 13828                           ;encoder.c: 593: if(os.encoder2Count>0)
 13829                           
 13830                           ; BSR set to: 0
 13831  00AF30  51D8               	movf	(_os+5)& (0+255),w,b	;volatile
 13832  00AF32  0A80               	xorlw	128
 13833  00AF34  0F7F               	addlw	-129
 13834  00AF36  A0D8               	btfss	status,0,c
 13835  00AF38  D002               	goto	l2640
 13836                           
 13837                           ; BSR set to: 0
 13838                           ;encoder.c: 594: os.displayState = DISPLAY_STATE_MANUAL_CW;
 13839  00AF3A  0E83               	movlw	131
 13840  00AF3C  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 13841  00AF3E                     l2640:
 13842                           
 13843                           ; BSR set to: 0
 13844                           ;encoder.c: 595: if(os.encoder2Count<0)
 13845                           
 13846                           ; BSR set to: 0
 13847  00AF3E  AFD8               	btfss	(_os+5)& (0+255),7,b	;volatile
 13848  00AF40  D05C               	goto	l2520
 13849                           
 13850                           ; BSR set to: 0
 13851                           ;encoder.c: 596: os.displayState = DISPLAY_STATE_MANUAL_CCW;
 13852  00AF42  0E81               	movlw	129
 13853  00AF44  D020               	goto	L17
 13854  00AF46                     
 13855                           ; BSR set to: 0
 13856                           ;encoder.c: 599: if(os.button2==1)
 13857                           
 13858                           ; BSR set to: 0
 13859  00AF46  05D9               	decf	(_os+6)& (0+255),w,b	;volatile
 13860  00AF48  A4D8               	btfss	status,2,c
 13861  00AF4A  D011               	goto	l2643
 13862                           
 13863                           ; BSR set to: 0
 13864                           ;encoder.c: 600: {;encoder.c: 601: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 13865  00AF4C  0E84               	movlw	132
 13866  00AF4E  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 13867                           
 13868                           ; BSR set to: 0
 13869                           ;encoder.c: 602: motor_schedule_command(MOTOR_DIRECTION_CW, 0, os.manual_speed);
 13870  00AF50  0E00               	movlw	0
 13871  00AF52  6F97               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 13872  00AF54  0E00               	movlw	0
 13873  00AF56  6F98               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 13874  00AF58  0E00               	movlw	0
 13875  00AF5A  6F99               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 13876  00AF5C  0E00               	movlw	0
 13877  00AF5E  6F9A               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 13878  00AF60  C0F6  F09B         	movff	_os+35,motor_schedule_command@speed	;volatile
 13879  00AF64  C0F7  F09C         	movff	_os+36,motor_schedule_command@speed+1	;volatile
 13880  00AF68  0E01               	movlw	1
 13881  00AF6A  ECB0  F087         	call	_motor_schedule_command
 13882  00AF6E                     l2643:
 13883                           
 13884                           ;encoder.c: 604: };encoder.c: 605: if(os.encoder2Count<0)
 13885  00AF6E  0100               	movlb	0	; () banked
 13886  00AF70  AFD8               	btfss	(_os+5)& (0+255),7,b	;volatile
 13887  00AF72  D043               	goto	l2520
 13888                           
 13889                           ; BSR set to: 0
 13890                           ;encoder.c: 606: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 13891  00AF74  0E82               	movlw	130
 13892  00AF76  D007               	goto	L17
 13893  00AF78                     
 13894                           ; BSR set to: 0
 13895                           ;encoder.c: 609: if(os.button2==1)
 13896                           
 13897                           ; BSR set to: 0
 13898  00AF78  05D9               	decf	(_os+6)& (0+255),w,b	;volatile
 13899  00AF7A  A4D8               	btfss	status,2,c
 13900  00AF7C  D03E               	goto	l2520
 13901                           
 13902                           ; BSR set to: 0
 13903                           ;encoder.c: 610: {;encoder.c: 611: motor_stop();
 13904  00AF7E  EC8A  F090         	call	_motor_stop	;wreg free
 13905                           
 13906                           ;encoder.c: 612: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 13907  00AF82  0E82               	movlw	130
 13908  00AF84  0100               	movlb	0	; () banked
 13909  00AF86                     L17:
 13910  00AF86  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 13911                           
 13912                           ; BSR set to: 0
 13913                           ;encoder.c: 615: }
 13914                           
 13915                           ; BSR set to: 0
 13916                           ;encoder.c: 613: };encoder.c: 614: break;
 13917  00AF88  D038               	goto	l2520
 13918  00AF8A                     l2633:
 13919                           
 13920                           ; BSR set to: 0
 13921  00AF8A  0100               	movlb	0	; () banked
 13922  00AF8C  51E0               	movf	(_os+13)& (0+255),w,b	;volatile
 13923                           
 13924                           ; Switch size 1, requested type "space"
 13925                           ; Number of cases is 4, Range of values is 129 to 132
 13926                           ; switch strategies available:
 13927                           ; Name         Instructions Cycles
 13928                           ; simple_byte           13     7 (average)
 13929                           ;	Chosen strategy is simple_byte
 13930  00AF8E  0A81               	xorlw	129	; case 129
 13931  00AF90  B4D8               	btfsc	status,2,c
 13932  00AF92  D7AC               	goto	l2634
 13933  00AF94  0A03               	xorlw	3	; case 130
 13934  00AF96  B4D8               	btfsc	status,2,c
 13935  00AF98  D7C6               	goto	l2638
 13936  00AF9A  0A01               	xorlw	1	; case 131
 13937  00AF9C  B4D8               	btfsc	status,2,c
 13938  00AF9E  D7D3               	goto	l2642
 13939  00AFA0  0A07               	xorlw	7	; case 132
 13940  00AFA2  B4D8               	btfsc	status,2,c
 13941  00AFA4  D7E9               	goto	l2645
 13942                           
 13943                           ; BSR set to: 0
 13944                           ;encoder.c: 617: }
 13945                           
 13946                           ; BSR set to: 0
 13947                           ;encoder.c: 616: break;
 13948  00AFA6  D029               	goto	l2520
 13949  00AFA8                     l2485:
 13950                           
 13951                           ; BSR set to: 0
 13952                           
 13953                           ; BSR set to: 0
 13954  00AFA8  51E0               	movf	(_os+13)& (0+255),w,b	;volatile
 13955  00AFAA  0BF0               	andlw	240
 13956  00AFAC  6FBE               	movwf	??_encoder_statemachine& (0+255),b
 13957  00AFAE  6BBF               	clrf	(??_encoder_statemachine+1)& (0+255),b
 13958                           
 13959                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13960                           ; Switch size 1, requested type "space"
 13961                           ; Number of cases is 1, Range of values is 0 to 0
 13962                           ; switch strategies available:
 13963                           ; Name         Instructions Cycles
 13964                           ; simple_byte            4     3 (average)
 13965                           ;	Chosen strategy is simple_byte
 13966  00AFB0  51BF               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 13967  00AFB2  0A00               	xorlw	0	; case 0
 13968  00AFB4  A4D8               	btfss	status,2,c
 13969  00AFB6  D021               	goto	l2520
 13970                           
 13971                           ; BSR set to: 0
 13972                           ; Switch size 1, requested type "space"
 13973                           ; Number of cases is 9, Range of values is 0 to 128
 13974                           ; switch strategies available:
 13975                           ; Name         Instructions Cycles
 13976                           ; simple_byte           28    15 (average)
 13977                           ;	Chosen strategy is simple_byte
 13978  00AFB8  51BE               	movf	??_encoder_statemachine& (0+255),w,b
 13979  00AFBA  0A00               	xorlw	0	; case 0
 13980  00AFBC  B4D8               	btfsc	status,2,c
 13981  00AFBE  EF2D  F052         	goto	l2487
 13982  00AFC2  0A10               	xorlw	16	; case 16
 13983  00AFC4  B4D8               	btfsc	status,2,c
 13984  00AFC6  EF6D  F052         	goto	l2522
 13985  00AFCA  0A30               	xorlw	48	; case 32
 13986  00AFCC  B4D8               	btfsc	status,2,c
 13987  00AFCE  EF62  F053         	goto	l2538
 13988  00AFD2  0A10               	xorlw	16	; case 48
 13989  00AFD4  B4D8               	btfsc	status,2,c
 13990  00AFD6  EF8D  F053         	goto	l2553
 13991  00AFDA  0A70               	xorlw	112	; case 64
 13992  00AFDC  B4D8               	btfsc	status,2,c
 13993  00AFDE  EFC1  F053         	goto	l2568
 13994  00AFE2  0A10               	xorlw	16	; case 80
 13995  00AFE4  B4D8               	btfsc	status,2,c
 13996  00AFE6  D4D5               	goto	l2582
 13997  00AFE8  0A30               	xorlw	48	; case 96
 13998  00AFEA  B4D8               	btfsc	status,2,c
 13999  00AFEC  D52A               	goto	l2597
 14000  00AFEE  0A10               	xorlw	16	; case 112
 14001  00AFF0  B4D8               	btfsc	status,2,c
 14002  00AFF2  D66D               	goto	l2617
 14003  00AFF4  0AF0               	xorlw	240	; case 128
 14004  00AFF6  B4D8               	btfsc	status,2,c
 14005  00AFF8  D74B               	goto	l2628
 14006  00AFFA                     l2520:
 14007                           
 14008                           ;encoder.c: 620: os.encoder1Count = 0;
 14009                           
 14010                           ; BSR set to: 0
 14011  00AFFA  0E00               	movlw	0
 14012  00AFFC  0100               	movlb	0	; () banked
 14013  00AFFE  6FD6               	movwf	(_os+3)& (0+255),b	;volatile
 14014                           
 14015                           ;encoder.c: 621: os.encoder2Count = 0;
 14016  00B000  0E00               	movlw	0
 14017  00B002  6FD8               	movwf	(_os+5)& (0+255),b	;volatile
 14018                           
 14019                           ;encoder.c: 622: os.button1 = 0;
 14020  00B004  0E00               	movlw	0
 14021  00B006  6FD7               	movwf	(_os+4)& (0+255),b	;volatile
 14022                           
 14023                           ;encoder.c: 623: os.button2 = 0;
 14024  00B008  0E00               	movlw	0
 14025  00B00A  6FD9               	movwf	(_os+6)& (0+255),b	;volatile
 14026                           
 14027                           ; BSR set to: 0
 14028  00B00C  0012               	return		;funcret
 14029  00B00E                     __end_of_encoder_statemachine:
 14030                           	opt stack 0
 14031                           tblptru	equ	0xFF8
 14032                           tblptrh	equ	0xFF7
 14033                           tblptrl	equ	0xFF6
 14034                           tablat	equ	0xFF5
 14035                           prodh	equ	0xFF4
 14036                           prodl	equ	0xFF3
 14037                           intcon	equ	0xFF2
 14038                           postinc0	equ	0xFEE
 14039                           wreg	equ	0xFE8
 14040                           postdec1	equ	0xFE5
 14041                           plusw1	equ	0xFE3
 14042                           fsr1h	equ	0xFE2
 14043                           fsr1l	equ	0xFE1
 14044                           indf2	equ	0xFDF
 14045                           postinc2	equ	0xFDE
 14046                           postdec2	equ	0xFDD
 14047                           plusw2	equ	0xFDB
 14048                           fsr2h	equ	0xFDA
 14049                           fsr2l	equ	0xFD9
 14050                           status	equ	0xFD8
 14051                           
 14052 ;; *************** function _motor_stop *****************
 14053 ;; Defined at:
 14054 ;;		line 421 in file "motor.c"
 14055 ;; Parameters:    Size  Location     Type
 14056 ;;		None
 14057 ;; Auto vars:     Size  Location     Type
 14058 ;;		None
 14059 ;; Return value:  Size  Location     Type
 14060 ;;                  1    wreg      void 
 14061 ;; Registers used:
 14062 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 14063 ;; Tracked objects:
 14064 ;;		On entry : 0/0
 14065 ;;		On exit  : 0/0
 14066 ;;		Unchanged: 0/0
 14067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14070 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14071 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14072 ;;Total ram usage:        2 bytes
 14073 ;; Hardware stack levels used:    1
 14074 ;; Hardware stack levels required when called:   10
 14075 ;; This function calls:
 14076 ;;		Nothing
 14077 ;; This function is called by:
 14078 ;;		_encoder_statemachine
 14079 ;; This function uses a non-reentrant model
 14080 ;;
 14081                           
 14082                           	psect	text40
 14083  012114                     __ptext40:
 14084                           	opt stack 0
 14085  012114                     _motor_stop:
 14086                           	opt stack 19
 14087                           
 14088                           ;motor.c: 423: motor_final_stepcount = motor_current_stepcount + motor_steps_lookup[moto
      +                          r_current_speed];
 14089                           
 14090                           ; BSR set to: 0
 14091                           ;incstack = 0
 14092  012114  90D8               	bcf	status,0,c
 14093  012116  0100               	movlb	0	; () banked
 14094  012118  35CC               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 14095  01211A  6EF6               	movwf	tblptrl,c
 14096  01211C  35CD               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 14097  01211E  6EF7               	movwf	tblptrh,c
 14098  012120  0E61               	movlw	low _motor_steps_lookup
 14099  012122  26F6               	addwf	tblptrl,f,c
 14100  012124  0E94               	movlw	high _motor_steps_lookup
 14101  012126  22F7               	addwfc	tblptrh,f,c
 14102  012128                     	if	1	;There are 3 active tblptr bytes
 14103  012128  6AF8               	clrf	tblptru,c
 14104  01212A  0E00               	movlw	low (__mediumconst shr (0+16))
 14105  01212C  22F8               	addwfc	tblptru,f,c
 14106  01212E                     	endif
 14107  01212E  0009               	tblrd		*+
 14108  012130  CFF5 F060          	movff	tablat,??_motor_stop
 14109  012134  0009               	tblrd		*+
 14110  012136  CFF5 F061          	movff	tablat,??_motor_stop+1
 14111  01213A  5160               	movf	??_motor_stop& (0+255),w,b
 14112  01213C  2416               	addwf	_motor_current_stepcount,w,c	;volatile
 14113  01213E  0101               	movlb	1	; () banked
 14114  012140  6F3B               	movwf	_motor_final_stepcount& (0+255),b	;volatile
 14115  012142  0100               	movlb	0	; () banked
 14116  012144  5161               	movf	(??_motor_stop+1)& (0+255),w,b
 14117  012146  2017               	addwfc	_motor_current_stepcount+1,w,c	;volatile
 14118  012148  0101               	movlb	1	; () banked
 14119  01214A  6F3C               	movwf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 14120  01214C  0E00               	movlw	0
 14121  01214E  2018               	addwfc	_motor_current_stepcount+2,w,c	;volatile
 14122  012150  6F3D               	movwf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 14123  012152  0E00               	movlw	0
 14124  012154  2019               	addwfc	_motor_current_stepcount+3,w,c	;volatile
 14125  012156  6F3E               	movwf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 14126                           
 14127                           ; BSR set to: 1
 14128  012158  0012               	return		;funcret
 14129  01215A                     __end_of_motor_stop:
 14130                           	opt stack 0
 14131                           tblptru	equ	0xFF8
 14132                           tblptrh	equ	0xFF7
 14133                           tblptrl	equ	0xFF6
 14134                           tablat	equ	0xFF5
 14135                           prodh	equ	0xFF4
 14136                           prodl	equ	0xFF3
 14137                           intcon	equ	0xFF2
 14138                           postinc0	equ	0xFEE
 14139                           wreg	equ	0xFE8
 14140                           postdec1	equ	0xFE5
 14141                           plusw1	equ	0xFE3
 14142                           fsr1h	equ	0xFE2
 14143                           fsr1l	equ	0xFE1
 14144                           indf2	equ	0xFDF
 14145                           postinc2	equ	0xFDE
 14146                           postdec2	equ	0xFDD
 14147                           plusw2	equ	0xFDB
 14148                           fsr2h	equ	0xFDA
 14149                           fsr2l	equ	0xFD9
 14150                           status	equ	0xFD8
 14151                           
 14152 ;; *************** function _motor_nonzero_steps_from_degrees *****************
 14153 ;; Defined at:
 14154 ;;		line 41 in file "motor.c"
 14155 ;; Parameters:    Size  Location     Type
 14156 ;;  degrees         2   47[BANK0 ] unsigned int 
 14157 ;; Auto vars:     Size  Location     Type
 14158 ;;  steps           4   51[BANK0 ] unsigned long 
 14159 ;; Return value:  Size  Location     Type
 14160 ;;                  4   47[BANK0 ] unsigned long 
 14161 ;; Registers used:
 14162 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14163 ;; Tracked objects:
 14164 ;;		On entry : 0/0
 14165 ;;		On exit  : 0/0
 14166 ;;		Unchanged: 0/0
 14167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14168 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14169 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14171 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14172 ;;Total ram usage:        8 bytes
 14173 ;; Hardware stack levels used:    1
 14174 ;; Hardware stack levels required when called:   12
 14175 ;; This function calls:
 14176 ;;		_motor_steps_from_degrees
 14177 ;; This function is called by:
 14178 ;;		_encoder_statemachine
 14179 ;; This function uses a non-reentrant model
 14180 ;;
 14181                           
 14182                           	psect	text41
 14183  01207E                     __ptext41:
 14184                           	opt stack 0
 14185  01207E                     _motor_nonzero_steps_from_degrees:
 14186                           	opt stack 17
 14187                           
 14188                           ;motor.c: 43: uint32_t steps;;motor.c: 44: steps = motor_steps_from_degrees(degrees);
 14189                           
 14190                           ; BSR set to: 1
 14191                           ;incstack = 0
 14192  01207E  C08F  F087         	movff	motor_nonzero_steps_from_degrees@degrees,motor_steps_from_degrees@degrees
 14193  012082  C090  F088         	movff	motor_nonzero_steps_from_degrees@degrees+1,motor_steps_from_degrees@degrees+1
 14194  012086  ECCA  F083         	call	_motor_steps_from_degrees	;wreg free
 14195  01208A  C087  F093         	movff	?_motor_steps_from_degrees,motor_nonzero_steps_from_degrees@steps
 14196  01208E  C088  F094         	movff	?_motor_steps_from_degrees+1,motor_nonzero_steps_from_degrees@steps+1
 14197  012092  C089  F095         	movff	?_motor_steps_from_degrees+2,motor_nonzero_steps_from_degrees@steps+2
 14198  012096  C08A  F096         	movff	?_motor_steps_from_degrees+3,motor_nonzero_steps_from_degrees@steps+3
 14199                           
 14200                           ;motor.c: 45: if(steps==0)
 14201  01209A  0100               	movlb	0	; () banked
 14202  01209C  5193               	movf	motor_nonzero_steps_from_degrees@steps& (0+255),w,b
 14203  01209E  1194               	iorwf	(motor_nonzero_steps_from_degrees@steps+1)& (0+255),w,b
 14204  0120A0  1195               	iorwf	(motor_nonzero_steps_from_degrees@steps+2)& (0+255),w,b
 14205  0120A2  1196               	iorwf	(motor_nonzero_steps_from_degrees@steps+3)& (0+255),w,b
 14206  0120A4  A4D8               	btfss	status,2,c
 14207  0120A6  D008               	goto	l2322
 14208                           
 14209                           ; BSR set to: 0
 14210                           ;motor.c: 46: steps = 1;
 14211  0120A8  0E01               	movlw	1
 14212  0120AA  6F93               	movwf	motor_nonzero_steps_from_degrees@steps& (0+255),b
 14213  0120AC  0E00               	movlw	0
 14214  0120AE  6F94               	movwf	(motor_nonzero_steps_from_degrees@steps+1)& (0+255),b
 14215  0120B0  0E00               	movlw	0
 14216  0120B2  6F95               	movwf	(motor_nonzero_steps_from_degrees@steps+2)& (0+255),b
 14217  0120B4  0E00               	movlw	0
 14218  0120B6  6F96               	movwf	(motor_nonzero_steps_from_degrees@steps+3)& (0+255),b
 14219  0120B8                     l2322:
 14220                           
 14221                           ; BSR set to: 0
 14222                           ;motor.c: 47: return steps;
 14223                           
 14224                           ; BSR set to: 0
 14225  0120B8  C093  F08F         	movff	motor_nonzero_steps_from_degrees@steps,?_motor_nonzero_steps_from_degrees
 14226  0120BC  C094  F090         	movff	motor_nonzero_steps_from_degrees@steps+1,?_motor_nonzero_steps_from_degrees+1
 14227  0120C0  C095  F091         	movff	motor_nonzero_steps_from_degrees@steps+2,?_motor_nonzero_steps_from_degrees+2
 14228  0120C4  C096  F092         	movff	motor_nonzero_steps_from_degrees@steps+3,?_motor_nonzero_steps_from_degrees+3
 14229  0120C8  0012               	return	
 14230  0120CA                     __end_of_motor_nonzero_steps_from_degrees:
 14231                           	opt stack 0
 14232                           tblptru	equ	0xFF8
 14233                           tblptrh	equ	0xFF7
 14234                           tblptrl	equ	0xFF6
 14235                           tablat	equ	0xFF5
 14236                           prodh	equ	0xFF4
 14237                           prodl	equ	0xFF3
 14238                           intcon	equ	0xFF2
 14239                           postinc0	equ	0xFEE
 14240                           wreg	equ	0xFE8
 14241                           postdec1	equ	0xFE5
 14242                           plusw1	equ	0xFE3
 14243                           fsr1h	equ	0xFE2
 14244                           fsr1l	equ	0xFE1
 14245                           indf2	equ	0xFDF
 14246                           postinc2	equ	0xFDE
 14247                           postdec2	equ	0xFDD
 14248                           plusw2	equ	0xFDB
 14249                           fsr2h	equ	0xFDA
 14250                           fsr2l	equ	0xFD9
 14251                           status	equ	0xFD8
 14252                           
 14253 ;; *************** function _motor_steps_from_degrees *****************
 14254 ;; Defined at:
 14255 ;;		line 30 in file "motor.c"
 14256 ;; Parameters:    Size  Location     Type
 14257 ;;  degrees         2   39[BANK0 ] unsigned int 
 14258 ;; Auto vars:     Size  Location     Type
 14259 ;;  steps           4   43[BANK0 ] float 
 14260 ;; Return value:  Size  Location     Type
 14261 ;;                  4   39[BANK0 ] unsigned long 
 14262 ;; Registers used:
 14263 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14264 ;; Tracked objects:
 14265 ;;		On entry : 0/0
 14266 ;;		On exit  : 0/0
 14267 ;;		Unchanged: 0/0
 14268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14269 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14270 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14272 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14273 ;;Total ram usage:        8 bytes
 14274 ;; Hardware stack levels used:    1
 14275 ;; Hardware stack levels required when called:   11
 14276 ;; This function calls:
 14277 ;;		___fldiv
 14278 ;;		___flmul
 14279 ;;		___fltol
 14280 ;;		___xxtofl
 14281 ;; This function is called by:
 14282 ;;		_motor_nonzero_steps_from_degrees
 14283 ;; This function uses a non-reentrant model
 14284 ;;
 14285                           
 14286                           	psect	text42
 14287  010794                     __ptext42:
 14288                           	opt stack 0
 14289  010794                     _motor_steps_from_degrees:
 14290                           	opt stack 17
 14291                           
 14292                           ;motor.c: 32: float steps;;motor.c: 33: steps = (float) degrees;
 14293                           
 14294                           ; BSR set to: 0
 14295                           ;incstack = 0
 14296  010794  C087  F060         	movff	motor_steps_from_degrees@degrees,___xxtofl@val
 14297  010798  C088  F061         	movff	motor_steps_from_degrees@degrees+1,___xxtofl@val+1
 14298  01079C  0100               	movlb	0	; () banked
 14299  01079E  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 14300  0107A0  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 14301  0107A2  0E00               	movlw	0
 14302  0107A4  ECF6  F074         	call	___xxtofl
 14303  0107A8  C060  F08B         	movff	?___xxtofl,motor_steps_from_degrees@steps
 14304  0107AC  C061  F08C         	movff	?___xxtofl+1,motor_steps_from_degrees@steps+1
 14305  0107B0  C062  F08D         	movff	?___xxtofl+2,motor_steps_from_degrees@steps+2
 14306  0107B4  C063  F08E         	movff	?___xxtofl+3,motor_steps_from_degrees@steps+3
 14307                           
 14308                           ;motor.c: 34: steps *= config.full_circle_in_steps;
 14309  0107B8  C08B  F06E         	movff	motor_steps_from_degrees@steps,___flmul@b
 14310  0107BC  C08C  F06F         	movff	motor_steps_from_degrees@steps+1,___flmul@b+1
 14311  0107C0  C08D  F070         	movff	motor_steps_from_degrees@steps+2,___flmul@b+2
 14312  0107C4  C08E  F071         	movff	motor_steps_from_degrees@steps+3,___flmul@b+3
 14313  0107C8  C17B  F060         	movff	_config,___xxtofl@val
 14314  0107CC  C17C  F061         	movff	_config+1,___xxtofl@val+1
 14315  0107D0  C17D  F062         	movff	_config+2,___xxtofl@val+2
 14316  0107D4  C17E  F063         	movff	_config+3,___xxtofl@val+3
 14317  0107D8  0E00               	movlw	0
 14318  0107DA  ECF6  F074         	call	___xxtofl
 14319  0107DE  C060  F072         	movff	?___xxtofl,___flmul@a
 14320  0107E2  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 14321  0107E6  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 14322  0107EA  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 14323  0107EE  ECF8  F062         	call	___flmul	;wreg free
 14324  0107F2  C06E  F08B         	movff	?___flmul,motor_steps_from_degrees@steps
 14325  0107F6  C06F  F08C         	movff	?___flmul+1,motor_steps_from_degrees@steps+1
 14326  0107FA  C070  F08D         	movff	?___flmul+2,motor_steps_from_degrees@steps+2
 14327  0107FE  C071  F08E         	movff	?___flmul+3,motor_steps_from_degrees@steps+3
 14328                           
 14329                           ;motor.c: 35: steps /= 36000;
 14330  010802  C08B  F06E         	movff	motor_steps_from_degrees@steps,___fldiv@b
 14331  010806  C08C  F06F         	movff	motor_steps_from_degrees@steps+1,___fldiv@b+1
 14332  01080A  C08D  F070         	movff	motor_steps_from_degrees@steps+2,___fldiv@b+2
 14333  01080E  C08E  F071         	movff	motor_steps_from_degrees@steps+3,___fldiv@b+3
 14334  010812  0E00               	movlw	0
 14335  010814  0100               	movlb	0	; () banked
 14336  010816  6F72               	movwf	___fldiv@a& (0+255),b
 14337  010818  0EA0               	movlw	160
 14338  01081A  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 14339  01081C  0E0C               	movlw	12
 14340  01081E  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 14341  010820  0E47               	movlw	71
 14342  010822  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 14343  010824  EC76  F067         	call	___fldiv	;wreg free
 14344  010828  C06E  F08B         	movff	?___fldiv,motor_steps_from_degrees@steps
 14345  01082C  C06F  F08C         	movff	?___fldiv+1,motor_steps_from_degrees@steps+1
 14346  010830  C070  F08D         	movff	?___fldiv+2,motor_steps_from_degrees@steps+2
 14347  010834  C071  F08E         	movff	?___fldiv+3,motor_steps_from_degrees@steps+3
 14348                           
 14349                           ;motor.c: 37: return (uint32_t) steps;
 14350  010838  C08B  F060         	movff	motor_steps_from_degrees@steps,___fltol@f1
 14351  01083C  C08C  F061         	movff	motor_steps_from_degrees@steps+1,___fltol@f1+1
 14352  010840  C08D  F062         	movff	motor_steps_from_degrees@steps+2,___fltol@f1+2
 14353  010844  C08E  F063         	movff	motor_steps_from_degrees@steps+3,___fltol@f1+3
 14354  010848  EC73  F080         	call	___fltol	;wreg free
 14355  01084C  C060  F087         	movff	?___fltol,?_motor_steps_from_degrees
 14356  010850  C061  F088         	movff	?___fltol+1,?_motor_steps_from_degrees+1
 14357  010854  C062  F089         	movff	?___fltol+2,?_motor_steps_from_degrees+2
 14358  010858  C063  F08A         	movff	?___fltol+3,?_motor_steps_from_degrees+3
 14359  01085C  0012               	return	
 14360  01085E                     __end_of_motor_steps_from_degrees:
 14361                           	opt stack 0
 14362                           tblptru	equ	0xFF8
 14363                           tblptrh	equ	0xFF7
 14364                           tblptrl	equ	0xFF6
 14365                           tablat	equ	0xFF5
 14366                           prodh	equ	0xFF4
 14367                           prodl	equ	0xFF3
 14368                           intcon	equ	0xFF2
 14369                           postinc0	equ	0xFEE
 14370                           wreg	equ	0xFE8
 14371                           postdec1	equ	0xFE5
 14372                           plusw1	equ	0xFE3
 14373                           fsr1h	equ	0xFE2
 14374                           fsr1l	equ	0xFE1
 14375                           indf2	equ	0xFDF
 14376                           postinc2	equ	0xFDE
 14377                           postdec2	equ	0xFDD
 14378                           plusw2	equ	0xFDB
 14379                           fsr2h	equ	0xFDA
 14380                           fsr2l	equ	0xFD9
 14381                           status	equ	0xFD8
 14382                           
 14383 ;; *************** function _motor_go_to_degrees_position *****************
 14384 ;; Defined at:
 14385 ;;		line 503 in file "motor.c"
 14386 ;; Parameters:    Size  Location     Type
 14387 ;;  target_posit    4   90[BANK0 ] float 
 14388 ;; Auto vars:     Size  Location     Type
 14389 ;;		None
 14390 ;; Return value:  Size  Location     Type
 14391 ;;                  1    wreg      void 
 14392 ;; Registers used:
 14393 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14394 ;; Tracked objects:
 14395 ;;		On entry : 0/0
 14396 ;;		On exit  : 0/0
 14397 ;;		Unchanged: 0/0
 14398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14399 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14402 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14403 ;;Total ram usage:        4 bytes
 14404 ;; Hardware stack levels used:    1
 14405 ;; Hardware stack levels required when called:   13
 14406 ;; This function calls:
 14407 ;;		___fldiv
 14408 ;;		___flmul
 14409 ;;		___fltol
 14410 ;;		___xxtofl
 14411 ;;		_motor_go_to_steps_position
 14412 ;; This function is called by:
 14413 ;;		_encoder_statemachine
 14414 ;; This function uses a non-reentrant model
 14415 ;;
 14416                           
 14417                           	psect	text43
 14418  010D64                     __ptext43:
 14419                           	opt stack 0
 14420  010D64                     _motor_go_to_degrees_position:
 14421                           	opt stack 16
 14422                           
 14423                           ;motor.c: 505: target_position *= (float) config.full_circle_in_steps;
 14424                           
 14425                           ;incstack = 0
 14426  010D64  C0BA  F06E         	movff	motor_go_to_degrees_position@target_position,___flmul@b
 14427  010D68  C0BB  F06F         	movff	motor_go_to_degrees_position@target_position+1,___flmul@b+1
 14428  010D6C  C0BC  F070         	movff	motor_go_to_degrees_position@target_position+2,___flmul@b+2
 14429  010D70  C0BD  F071         	movff	motor_go_to_degrees_position@target_position+3,___flmul@b+3
 14430  010D74  C17B  F060         	movff	_config,___xxtofl@val
 14431  010D78  C17C  F061         	movff	_config+1,___xxtofl@val+1
 14432  010D7C  C17D  F062         	movff	_config+2,___xxtofl@val+2
 14433  010D80  C17E  F063         	movff	_config+3,___xxtofl@val+3
 14434  010D84  0E00               	movlw	0
 14435  010D86  ECF6  F074         	call	___xxtofl
 14436  010D8A  C060  F072         	movff	?___xxtofl,___flmul@a
 14437  010D8E  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 14438  010D92  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 14439  010D96  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 14440  010D9A  ECF8  F062         	call	___flmul	;wreg free
 14441  010D9E  C06E  F0BA         	movff	?___flmul,motor_go_to_degrees_position@target_position
 14442  010DA2  C06F  F0BB         	movff	?___flmul+1,motor_go_to_degrees_position@target_position+1
 14443  010DA6  C070  F0BC         	movff	?___flmul+2,motor_go_to_degrees_position@target_position+2
 14444  010DAA  C071  F0BD         	movff	?___flmul+3,motor_go_to_degrees_position@target_position+3
 14445                           
 14446                           ;motor.c: 506: target_position /= 360.0;
 14447  010DAE  C0BA  F06E         	movff	motor_go_to_degrees_position@target_position,___fldiv@b
 14448  010DB2  C0BB  F06F         	movff	motor_go_to_degrees_position@target_position+1,___fldiv@b+1
 14449  010DB6  C0BC  F070         	movff	motor_go_to_degrees_position@target_position+2,___fldiv@b+2
 14450  010DBA  C0BD  F071         	movff	motor_go_to_degrees_position@target_position+3,___fldiv@b+3
 14451  010DBE  0E00               	movlw	0
 14452  010DC0  0100               	movlb	0	; () banked
 14453  010DC2  6F72               	movwf	___fldiv@a& (0+255),b
 14454  010DC4  0E00               	movlw	0
 14455  010DC6  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 14456  010DC8  0EB4               	movlw	180
 14457  010DCA  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 14458  010DCC  0E43               	movlw	67
 14459  010DCE  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 14460  010DD0  EC76  F067         	call	___fldiv	;wreg free
 14461  010DD4  C06E  F0BA         	movff	?___fldiv,motor_go_to_degrees_position@target_position
 14462  010DD8  C06F  F0BB         	movff	?___fldiv+1,motor_go_to_degrees_position@target_position+1
 14463  010DDC  C070  F0BC         	movff	?___fldiv+2,motor_go_to_degrees_position@target_position+2
 14464  010DE0  C071  F0BD         	movff	?___fldiv+3,motor_go_to_degrees_position@target_position+3
 14465                           
 14466                           ;motor.c: 507: motor_go_to_steps_position((uint32_t) target_position);
 14467  010DE4  C0BA  F060         	movff	motor_go_to_degrees_position@target_position,___fltol@f1
 14468  010DE8  C0BB  F061         	movff	motor_go_to_degrees_position@target_position+1,___fltol@f1+1
 14469  010DEC  C0BC  F062         	movff	motor_go_to_degrees_position@target_position+2,___fltol@f1+2
 14470  010DF0  C0BD  F063         	movff	motor_go_to_degrees_position@target_position+3,___fltol@f1+3
 14471  010DF4  EC73  F080         	call	___fltol	;wreg free
 14472  010DF8  C060  F09E         	movff	?___fltol,motor_go_to_steps_position@target_position
 14473  010DFC  C061  F09F         	movff	?___fltol+1,motor_go_to_steps_position@target_position+1
 14474  010E00  C062  F0A0         	movff	?___fltol+2,motor_go_to_steps_position@target_position+2
 14475  010E04  C063  F0A1         	movff	?___fltol+3,motor_go_to_steps_position@target_position+3
 14476  010E08  EC11  F066         	call	_motor_go_to_steps_position	;wreg free
 14477  010E0C  0012               	return		;funcret
 14478  010E0E                     __end_of_motor_go_to_degrees_position:
 14479                           	opt stack 0
 14480                           tblptru	equ	0xFF8
 14481                           tblptrh	equ	0xFF7
 14482                           tblptrl	equ	0xFF6
 14483                           tablat	equ	0xFF5
 14484                           prodh	equ	0xFF4
 14485                           prodl	equ	0xFF3
 14486                           intcon	equ	0xFF2
 14487                           postinc0	equ	0xFEE
 14488                           wreg	equ	0xFE8
 14489                           postdec1	equ	0xFE5
 14490                           plusw1	equ	0xFE3
 14491                           fsr1h	equ	0xFE2
 14492                           fsr1l	equ	0xFE1
 14493                           indf2	equ	0xFDF
 14494                           postinc2	equ	0xFDE
 14495                           postdec2	equ	0xFDD
 14496                           plusw2	equ	0xFDB
 14497                           fsr2h	equ	0xFDA
 14498                           fsr2l	equ	0xFD9
 14499                           status	equ	0xFD8
 14500                           
 14501 ;; *************** function ___flmul *****************
 14502 ;; Defined at:
 14503 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
 14504 ;; Parameters:    Size  Location     Type
 14505 ;;  b               4   14[BANK0 ] void 
 14506 ;;  a               4   18[BANK0 ] void 
 14507 ;; Auto vars:     Size  Location     Type
 14508 ;;  prod            4   33[BANK0 ] struct .
 14509 ;;  grs             4   28[BANK0 ] unsigned long 
 14510 ;;  temp            2   37[BANK0 ] struct .
 14511 ;;  bexp            1   32[BANK0 ] unsigned char 
 14512 ;;  aexp            1   27[BANK0 ] unsigned char 
 14513 ;;  sign            1   26[BANK0 ] unsigned char 
 14514 ;; Return value:  Size  Location     Type
 14515 ;;                  4   14[BANK0 ] unsigned char 
 14516 ;; Registers used:
 14517 ;;		wreg, status,2, status,0, prodl, prodh
 14518 ;; Tracked objects:
 14519 ;;		On entry : 0/0
 14520 ;;		On exit  : 0/0
 14521 ;;		Unchanged: 0/0
 14522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14523 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14524 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14525 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14526 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14527 ;;Total ram usage:       25 bytes
 14528 ;; Hardware stack levels used:    1
 14529 ;; Hardware stack levels required when called:   10
 14530 ;; This function calls:
 14531 ;;		Nothing
 14532 ;; This function is called by:
 14533 ;;		_main
 14534 ;;		_motor_steps_from_degrees
 14535 ;;		_motor_go_to_degrees_position
 14536 ;;		_encoder_statemachine
 14537 ;; This function uses a non-reentrant model
 14538 ;;
 14539                           
 14540                           	psect	text44
 14541  00C5F0                     __ptext44:
 14542                           	opt stack 0
 14543  00C5F0                     ___flmul:
 14544                           	opt stack 17
 14545                           
 14546                           ;incstack = 0
 14547  00C5F0  0100               	movlb	0	; () banked
 14548  00C5F2  5171               	movf	(___flmul@b+3)& (0+255),w,b
 14549  00C5F4  0B80               	andlw	128
 14550  00C5F6  6F7A               	movwf	___flmul@sign& (0+255),b
 14551  00C5F8  5171               	movf	(___flmul@b+3)& (0+255),w,b
 14552  00C5FA  2571               	addwf	(___flmul@b+3)& (0+255),w,b
 14553  00C5FC  6F80               	movwf	___flmul@bexp& (0+255),b
 14554                           
 14555                           ; BSR set to: 0
 14556  00C5FE  BF70               	btfsc	(___flmul@b+2)& (0+255),7,b
 14557                           
 14558                           ; BSR set to: 0
 14559  00C600  8180               	bsf	___flmul@bexp& (0+255),0,b
 14560                           
 14561                           ; BSR set to: 0
 14562                           
 14563                           ; BSR set to: 0
 14564  00C602  5180               	movf	___flmul@bexp& (0+255),w,b
 14565  00C604  B4D8               	btfsc	status,2,c
 14566  00C606  D00D               	goto	l3274
 14567                           
 14568                           ; BSR set to: 0
 14569  00C608  2980               	incf	___flmul@bexp& (0+255),w,b
 14570  00C60A  A4D8               	btfss	status,2,c
 14571  00C60C  D008               	goto	l3275
 14572                           
 14573                           ; BSR set to: 0
 14574  00C60E  0E00               	movlw	0
 14575  00C610  6F6E               	movwf	___flmul@b& (0+255),b
 14576  00C612  0E00               	movlw	0
 14577  00C614  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 14578  00C616  0E00               	movlw	0
 14579  00C618  6F70               	movwf	(___flmul@b+2)& (0+255),b
 14580  00C61A  0E00               	movlw	0
 14581  00C61C  6F71               	movwf	(___flmul@b+3)& (0+255),b
 14582  00C61E                     l3275:
 14583                           
 14584                           ; BSR set to: 0
 14585                           
 14586                           ; BSR set to: 0
 14587  00C61E  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
 14588  00C620  D008               	goto	l3276
 14589  00C622                     l3274:
 14590                           
 14591                           ; BSR set to: 0
 14592                           
 14593                           ; BSR set to: 0
 14594  00C622  0E00               	movlw	0
 14595  00C624  6F6E               	movwf	___flmul@b& (0+255),b
 14596  00C626  0E00               	movlw	0
 14597  00C628  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 14598  00C62A  0E00               	movlw	0
 14599  00C62C  6F70               	movwf	(___flmul@b+2)& (0+255),b
 14600  00C62E  0E00               	movlw	0
 14601  00C630  6F71               	movwf	(___flmul@b+3)& (0+255),b
 14602  00C632                     l3276:
 14603                           
 14604                           ; BSR set to: 0
 14605                           
 14606                           ; BSR set to: 0
 14607  00C632  5175               	movf	(___flmul@a+3)& (0+255),w,b
 14608  00C634  0B80               	andlw	128
 14609  00C636  1B7A               	xorwf	___flmul@sign& (0+255),f,b
 14610                           
 14611                           ; BSR set to: 0
 14612  00C638  5175               	movf	(___flmul@a+3)& (0+255),w,b
 14613  00C63A  2575               	addwf	(___flmul@a+3)& (0+255),w,b
 14614  00C63C  6F7B               	movwf	___flmul@aexp& (0+255),b
 14615                           
 14616                           ; BSR set to: 0
 14617  00C63E  BF74               	btfsc	(___flmul@a+2)& (0+255),7,b
 14618                           
 14619                           ; BSR set to: 0
 14620  00C640  817B               	bsf	___flmul@aexp& (0+255),0,b
 14621                           
 14622                           ; BSR set to: 0
 14623                           
 14624                           ; BSR set to: 0
 14625  00C642  517B               	movf	___flmul@aexp& (0+255),w,b
 14626  00C644  B4D8               	btfsc	status,2,c
 14627  00C646  D00D               	goto	l3278
 14628                           
 14629                           ; BSR set to: 0
 14630  00C648  297B               	incf	___flmul@aexp& (0+255),w,b
 14631  00C64A  A4D8               	btfss	status,2,c
 14632  00C64C  D008               	goto	l3279
 14633                           
 14634                           ; BSR set to: 0
 14635  00C64E  0E00               	movlw	0
 14636  00C650  6F72               	movwf	___flmul@a& (0+255),b
 14637  00C652  0E00               	movlw	0
 14638  00C654  6F73               	movwf	(___flmul@a+1)& (0+255),b
 14639  00C656  0E00               	movlw	0
 14640  00C658  6F74               	movwf	(___flmul@a+2)& (0+255),b
 14641  00C65A  0E00               	movlw	0
 14642  00C65C  6F75               	movwf	(___flmul@a+3)& (0+255),b
 14643  00C65E                     l3279:
 14644                           
 14645                           ; BSR set to: 0
 14646                           
 14647                           ; BSR set to: 0
 14648  00C65E  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
 14649  00C660  D008               	goto	l3280
 14650  00C662                     l3278:
 14651                           
 14652                           ; BSR set to: 0
 14653                           
 14654                           ; BSR set to: 0
 14655  00C662  0E00               	movlw	0
 14656  00C664  6F72               	movwf	___flmul@a& (0+255),b
 14657  00C666  0E00               	movlw	0
 14658  00C668  6F73               	movwf	(___flmul@a+1)& (0+255),b
 14659  00C66A  0E00               	movlw	0
 14660  00C66C  6F74               	movwf	(___flmul@a+2)& (0+255),b
 14661  00C66E  0E00               	movlw	0
 14662  00C670  6F75               	movwf	(___flmul@a+3)& (0+255),b
 14663  00C672                     l3280:
 14664                           
 14665                           ; BSR set to: 0
 14666  00C672  517B               	movf	___flmul@aexp& (0+255),w,b
 14667  00C674  B4D8               	btfsc	status,2,c
 14668  00C676  D003               	goto	u18270
 14669                           
 14670                           ; BSR set to: 0
 14671  00C678  5180               	movf	___flmul@bexp& (0+255),w,b
 14672  00C67A  A4D8               	btfss	status,2,c
 14673  00C67C  D009               	goto	l3281
 14674  00C67E                     u18270:
 14675                           
 14676                           ; BSR set to: 0
 14677                           
 14678                           ; BSR set to: 0
 14679  00C67E  0E00               	movlw	0
 14680  00C680  6F6E               	movwf	?___flmul& (0+255),b
 14681  00C682  0E00               	movlw	0
 14682  00C684  6F6F               	movwf	(?___flmul+1)& (0+255),b
 14683  00C686  0E00               	movlw	0
 14684  00C688  6F70               	movwf	(?___flmul+2)& (0+255),b
 14685  00C68A  0E00               	movlw	0
 14686  00C68C  6F71               	movwf	(?___flmul+3)& (0+255),b
 14687                           
 14688                           ; BSR set to: 0
 14689  00C68E  0012               	return	
 14690  00C690                     l3281:
 14691                           
 14692                           ; BSR set to: 0
 14693                           
 14694                           ; BSR set to: 0
 14695  00C690  5174               	movf	(___flmul@a+2)& (0+255),w,b
 14696  00C692  036E               	mulwf	___flmul@b& (0+255),b
 14697  00C694  CFF3 F085          	movff	prodl,___flmul@temp
 14698  00C698  CFF4 F086          	movff	prodh,___flmul@temp+1
 14699                           
 14700                           ; BSR set to: 0
 14701  00C69C  5185               	movf	___flmul@temp& (0+255),w,b
 14702  00C69E  6F7C               	movwf	___flmul@grs& (0+255),b
 14703  00C6A0  6B7D               	clrf	(___flmul@grs+1)& (0+255),b
 14704  00C6A2  6B7E               	clrf	(___flmul@grs+2)& (0+255),b
 14705  00C6A4  6B7F               	clrf	(___flmul@grs+3)& (0+255),b
 14706                           
 14707                           ; BSR set to: 0
 14708  00C6A6  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 14709  00C6A8  6F81               	movwf	___flmul@prod& (0+255),b
 14710  00C6AA  6B82               	clrf	(___flmul@prod+1)& (0+255),b
 14711  00C6AC  6B83               	clrf	(___flmul@prod+2)& (0+255),b
 14712  00C6AE  6B84               	clrf	(___flmul@prod+3)& (0+255),b
 14713  00C6B0  5173               	movf	(___flmul@a+1)& (0+255),w,b
 14714  00C6B2  036F               	mulwf	(___flmul@b+1)& (0+255),b
 14715  00C6B4  CFF3 F085          	movff	prodl,___flmul@temp
 14716  00C6B8  CFF4 F086          	movff	prodh,___flmul@temp+1
 14717                           
 14718                           ; BSR set to: 0
 14719  00C6BC  5185               	movf	___flmul@temp& (0+255),w,b
 14720  00C6BE  277C               	addwf	___flmul@grs& (0+255),f,b
 14721  00C6C0  0E00               	movlw	0
 14722  00C6C2  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14723  00C6C4  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14724  00C6C6  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14725                           
 14726                           ; BSR set to: 0
 14727  00C6C8  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 14728  00C6CA  2781               	addwf	___flmul@prod& (0+255),f,b
 14729  00C6CC  0E00               	movlw	0
 14730  00C6CE  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14731  00C6D0  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14732  00C6D2  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14733  00C6D4  5172               	movf	___flmul@a& (0+255),w,b
 14734  00C6D6  0370               	mulwf	(___flmul@b+2)& (0+255),b
 14735  00C6D8  CFF3 F085          	movff	prodl,___flmul@temp
 14736  00C6DC  CFF4 F086          	movff	prodh,___flmul@temp+1
 14737                           
 14738                           ; BSR set to: 0
 14739  00C6E0  5185               	movf	___flmul@temp& (0+255),w,b
 14740  00C6E2  277C               	addwf	___flmul@grs& (0+255),f,b
 14741  00C6E4  0E00               	movlw	0
 14742  00C6E6  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14743  00C6E8  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14744  00C6EA  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14745                           
 14746                           ; BSR set to: 0
 14747  00C6EC  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 14748  00C6EE  2781               	addwf	___flmul@prod& (0+255),f,b
 14749  00C6F0  0E00               	movlw	0
 14750  00C6F2  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14751  00C6F4  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14752  00C6F6  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14753                           
 14754                           ; BSR set to: 0
 14755  00C6F8  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
 14756  00C6FC  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
 14757  00C700  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
 14758  00C704  6B7C               	clrf	___flmul@grs& (0+255),b
 14759                           
 14760                           ; BSR set to: 0
 14761  00C706  5172               	movf	___flmul@a& (0+255),w,b
 14762  00C708  036F               	mulwf	(___flmul@b+1)& (0+255),b
 14763  00C70A  CFF3 F085          	movff	prodl,___flmul@temp
 14764  00C70E  CFF4 F086          	movff	prodh,___flmul@temp+1
 14765                           
 14766                           ; BSR set to: 0
 14767  00C712  5185               	movf	___flmul@temp& (0+255),w,b
 14768  00C714  277C               	addwf	___flmul@grs& (0+255),f,b
 14769  00C716  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 14770  00C718  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14771  00C71A  0E00               	movlw	0
 14772  00C71C  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14773  00C71E  0E00               	movlw	0
 14774  00C720  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14775                           
 14776                           ; BSR set to: 0
 14777  00C722  5173               	movf	(___flmul@a+1)& (0+255),w,b
 14778  00C724  036E               	mulwf	___flmul@b& (0+255),b
 14779  00C726  CFF3 F085          	movff	prodl,___flmul@temp
 14780  00C72A  CFF4 F086          	movff	prodh,___flmul@temp+1
 14781                           
 14782                           ; BSR set to: 0
 14783  00C72E  5185               	movf	___flmul@temp& (0+255),w,b
 14784  00C730  277C               	addwf	___flmul@grs& (0+255),f,b
 14785  00C732  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 14786  00C734  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14787  00C736  0E00               	movlw	0
 14788  00C738  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14789  00C73A  0E00               	movlw	0
 14790  00C73C  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14791                           
 14792                           ; BSR set to: 0
 14793  00C73E  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
 14794  00C742  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
 14795  00C746  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
 14796  00C74A  6B7C               	clrf	___flmul@grs& (0+255),b
 14797  00C74C  5172               	movf	___flmul@a& (0+255),w,b
 14798  00C74E  036E               	mulwf	___flmul@b& (0+255),b
 14799  00C750  CFF3 F085          	movff	prodl,___flmul@temp
 14800  00C754  CFF4 F086          	movff	prodh,___flmul@temp+1
 14801                           
 14802                           ; BSR set to: 0
 14803  00C758  5185               	movf	___flmul@temp& (0+255),w,b
 14804  00C75A  277C               	addwf	___flmul@grs& (0+255),f,b
 14805  00C75C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 14806  00C75E  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14807  00C760  0E00               	movlw	0
 14808  00C762  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14809  00C764  0E00               	movlw	0
 14810  00C766  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14811                           
 14812                           ; BSR set to: 0
 14813  00C768  5174               	movf	(___flmul@a+2)& (0+255),w,b
 14814  00C76A  036F               	mulwf	(___flmul@b+1)& (0+255),b
 14815  00C76C  CFF3 F085          	movff	prodl,___flmul@temp
 14816  00C770  CFF4 F086          	movff	prodh,___flmul@temp+1
 14817  00C774  5185               	movf	___flmul@temp& (0+255),w,b
 14818  00C776  2781               	addwf	___flmul@prod& (0+255),f,b
 14819  00C778  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 14820  00C77A  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14821  00C77C  0E00               	movlw	0
 14822  00C77E  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14823  00C780  0E00               	movlw	0
 14824  00C782  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14825                           
 14826                           ; BSR set to: 0
 14827  00C784  5173               	movf	(___flmul@a+1)& (0+255),w,b
 14828  00C786  0370               	mulwf	(___flmul@b+2)& (0+255),b
 14829  00C788  CFF3 F085          	movff	prodl,___flmul@temp
 14830  00C78C  CFF4 F086          	movff	prodh,___flmul@temp+1
 14831                           
 14832                           ; BSR set to: 0
 14833  00C790  5185               	movf	___flmul@temp& (0+255),w,b
 14834  00C792  2781               	addwf	___flmul@prod& (0+255),f,b
 14835  00C794  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 14836  00C796  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14837  00C798  0E00               	movlw	0
 14838  00C79A  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14839  00C79C  0E00               	movlw	0
 14840  00C79E  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14841  00C7A0  5174               	movf	(___flmul@a+2)& (0+255),w,b
 14842  00C7A2  0370               	mulwf	(___flmul@b+2)& (0+255),b
 14843  00C7A4  CFF3 F085          	movff	prodl,___flmul@temp
 14844  00C7A8  CFF4 F086          	movff	prodh,___flmul@temp+1
 14845                           
 14846                           ; BSR set to: 0
 14847  00C7AC  5185               	movf	___flmul@temp& (0+255),w,b
 14848  00C7AE  6F76               	movwf	??___flmul& (0+255),b
 14849  00C7B0  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 14850  00C7B2  6F77               	movwf	(??___flmul+1)& (0+255),b
 14851  00C7B4  6B78               	clrf	(??___flmul+2)& (0+255),b
 14852  00C7B6  6B79               	clrf	(??___flmul+3)& (0+255),b
 14853  00C7B8  C078  F079         	movff	??___flmul+2,??___flmul+3
 14854  00C7BC  C077  F078         	movff	??___flmul+1,??___flmul+2
 14855  00C7C0  C076  F077         	movff	??___flmul,??___flmul+1
 14856  00C7C4  6B76               	clrf	??___flmul& (0+255),b
 14857  00C7C6  5176               	movf	??___flmul& (0+255),w,b
 14858  00C7C8  2781               	addwf	___flmul@prod& (0+255),f,b
 14859  00C7CA  5177               	movf	(??___flmul+1)& (0+255),w,b
 14860  00C7CC  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14861  00C7CE  5178               	movf	(??___flmul+2)& (0+255),w,b
 14862  00C7D0  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14863  00C7D2  5179               	movf	(??___flmul+3)& (0+255),w,b
 14864  00C7D4  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14865                           
 14866                           ; BSR set to: 0
 14867  00C7D6  C07C  F076         	movff	___flmul@grs,??___flmul
 14868  00C7DA  C07D  F077         	movff	___flmul@grs+1,??___flmul+1
 14869  00C7DE  C07E  F078         	movff	___flmul@grs+2,??___flmul+2
 14870  00C7E2  C07F  F079         	movff	___flmul@grs+3,??___flmul+3
 14871  00C7E6  0E19               	movlw	25
 14872  00C7E8  D005               	goto	u18280
 14873  00C7EA                     u18285:
 14874  00C7EA  90D8               	bcf	status,0,c
 14875  00C7EC  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 14876  00C7EE  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 14877  00C7F0  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 14878  00C7F2  3376               	rrcf	??___flmul& (0+255),f,b
 14879  00C7F4                     u18280:
 14880  00C7F4  2EE8               	decfsz	wreg,f,c
 14881  00C7F6  D7F9               	goto	u18285
 14882  00C7F8  5176               	movf	??___flmul& (0+255),w,b
 14883  00C7FA  2781               	addwf	___flmul@prod& (0+255),f,b
 14884  00C7FC  5177               	movf	(??___flmul+1)& (0+255),w,b
 14885  00C7FE  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14886  00C800  5178               	movf	(??___flmul+2)& (0+255),w,b
 14887  00C802  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14888  00C804  5179               	movf	(??___flmul+3)& (0+255),w,b
 14889  00C806  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14890                           
 14891                           ; BSR set to: 0
 14892  00C808  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
 14893  00C80C  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
 14894  00C810  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
 14895  00C814  6B7C               	clrf	___flmul@grs& (0+255),b
 14896                           
 14897                           ; BSR set to: 0
 14898  00C816  517B               	movf	___flmul@aexp& (0+255),w,b
 14899  00C818  C080  F076         	movff	___flmul@bexp,??___flmul
 14900  00C81C  6B77               	clrf	(??___flmul+1)& (0+255),b
 14901  00C81E  2776               	addwf	??___flmul& (0+255),f,b
 14902  00C820  0E00               	movlw	0
 14903  00C822  2377               	addwfc	(??___flmul+1)& (0+255),f,b
 14904  00C824  0E82               	movlw	130
 14905  00C826  2576               	addwf	??___flmul& (0+255),w,b
 14906  00C828  6F85               	movwf	___flmul@temp& (0+255),b
 14907  00C82A  0EFF               	movlw	255
 14908  00C82C  2177               	addwfc	(??___flmul+1)& (0+255),w,b
 14909  00C82E  6F86               	movwf	(___flmul@temp+1)& (0+255),b
 14910  00C830  D00F               	goto	l3285
 14911  00C832                     
 14912                           ; BSR set to: 0
 14913                           
 14914                           ; BSR set to: 0
 14915  00C832  90D8               	bcf	status,0,c
 14916  00C834  3781               	rlcf	___flmul@prod& (0+255),f,b
 14917  00C836  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
 14918  00C838  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
 14919  00C83A  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
 14920                           
 14921                           ; BSR set to: 0
 14922  00C83C  BF7F               	btfsc	(___flmul@grs+3)& (0+255),7,b
 14923                           
 14924                           ; BSR set to: 0
 14925  00C83E  8181               	bsf	___flmul@prod& (0+255),0,b
 14926                           
 14927                           ; BSR set to: 0
 14928  00C840  90D8               	bcf	status,0,c
 14929  00C842  377C               	rlcf	___flmul@grs& (0+255),f,b
 14930  00C844  377D               	rlcf	(___flmul@grs+1)& (0+255),f,b
 14931  00C846  377E               	rlcf	(___flmul@grs+2)& (0+255),f,b
 14932  00C848  377F               	rlcf	(___flmul@grs+3)& (0+255),f,b
 14933  00C84A  0785               	decf	___flmul@temp& (0+255),f,b
 14934  00C84C  A0D8               	btfss	status,0,c
 14935  00C84E  0786               	decf	(___flmul@temp+1)& (0+255),f,b
 14936  00C850                     l3285:
 14937                           
 14938                           ; BSR set to: 0
 14939                           
 14940                           ; BSR set to: 0
 14941  00C850  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
 14942  00C852  D7EF               	goto	l3286
 14943                           
 14944                           ; BSR set to: 0
 14945                           
 14946                           ; BSR set to: 0
 14947  00C854  0E00               	movlw	0
 14948  00C856  6F7B               	movwf	___flmul@aexp& (0+255),b
 14949                           
 14950                           ; BSR set to: 0
 14951  00C858  AF7F               	btfss	(___flmul@grs+3)& (0+255),7,b
 14952  00C85A  D016               	goto	l3292
 14953                           
 14954                           ; BSR set to: 0
 14955  00C85C  0EFF               	movlw	255
 14956  00C85E  157C               	andwf	___flmul@grs& (0+255),w,b
 14957  00C860  6F76               	movwf	??___flmul& (0+255),b
 14958  00C862  0EFF               	movlw	255
 14959  00C864  157D               	andwf	(___flmul@grs+1)& (0+255),w,b
 14960  00C866  6F77               	movwf	(??___flmul+1)& (0+255),b
 14961  00C868  0EFF               	movlw	255
 14962  00C86A  157E               	andwf	(___flmul@grs+2)& (0+255),w,b
 14963  00C86C  6F78               	movwf	(??___flmul+2)& (0+255),b
 14964  00C86E  0E7F               	movlw	127
 14965  00C870  157F               	andwf	(___flmul@grs+3)& (0+255),w,b
 14966  00C872  6F79               	movwf	(??___flmul+3)& (0+255),b
 14967  00C874  5176               	movf	??___flmul& (0+255),w,b
 14968  00C876  1177               	iorwf	(??___flmul+1)& (0+255),w,b
 14969  00C878  1178               	iorwf	(??___flmul+2)& (0+255),w,b
 14970  00C87A  1179               	iorwf	(??___flmul+3)& (0+255),w,b
 14971  00C87C  A4D8               	btfss	status,2,c
 14972  00C87E  D002               	goto	u18330
 14973                           
 14974                           ; BSR set to: 0
 14975                           
 14976                           ; BSR set to: 0
 14977  00C880  A181               	btfss	___flmul@prod& (0+255),0,b
 14978  00C882  D002               	goto	l3292
 14979  00C884                     u18330:
 14980                           
 14981                           ; BSR set to: 0
 14982  00C884  0E01               	movlw	1
 14983  00C886  6F7B               	movwf	___flmul@aexp& (0+255),b
 14984  00C888                     l3292:
 14985                           
 14986                           ; BSR set to: 0
 14987                           
 14988                           ; BSR set to: 0
 14989                           
 14990                           ; BSR set to: 0
 14991  00C888  517B               	movf	___flmul@aexp& (0+255),w,b
 14992  00C88A  B4D8               	btfsc	status,2,c
 14993  00C88C  D01F               	goto	l3294
 14994                           
 14995                           ; BSR set to: 0
 14996  00C88E  0E01               	movlw	1
 14997  00C890  2781               	addwf	___flmul@prod& (0+255),f,b
 14998  00C892  0E00               	movlw	0
 14999  00C894  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15000  00C896  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15001  00C898  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15002                           
 15003                           ; BSR set to: 0
 15004  00C89A  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
 15005  00C89C  D017               	goto	l3294
 15006                           
 15007                           ; BSR set to: 0
 15008  00C89E  C081  F076         	movff	___flmul@prod,??___flmul
 15009  00C8A2  C082  F077         	movff	___flmul@prod+1,??___flmul+1
 15010  00C8A6  C083  F078         	movff	___flmul@prod+2,??___flmul+2
 15011  00C8AA  C084  F079         	movff	___flmul@prod+3,??___flmul+3
 15012  00C8AE  3579               	rlcf	(??___flmul+3)& (0+255),w,b
 15013  00C8B0  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 15014  00C8B2  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 15015  00C8B4  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 15016  00C8B6  3376               	rrcf	??___flmul& (0+255),f,b
 15017  00C8B8  C076  F081         	movff	??___flmul,___flmul@prod
 15018  00C8BC  C077  F082         	movff	??___flmul+1,___flmul@prod+1
 15019  00C8C0  C078  F083         	movff	??___flmul+2,___flmul@prod+2
 15020  00C8C4  C079  F084         	movff	??___flmul+3,___flmul@prod+3
 15021                           
 15022                           ; BSR set to: 0
 15023  00C8C8  4B85               	infsnz	___flmul@temp& (0+255),f,b
 15024  00C8CA  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
 15025  00C8CC                     l3294:
 15026                           
 15027                           ; BSR set to: 0
 15028                           
 15029                           ; BSR set to: 0
 15030                           
 15031                           ; BSR set to: 0
 15032  00C8CC  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 15033  00C8CE  D00D               	goto	l3295
 15034  00C8D0  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 15035  00C8D2  E103               	bnz	u18360
 15036  00C8D4  2985               	incf	___flmul@temp& (0+255),w,b
 15037  00C8D6  A0D8               	btfss	status,0,c
 15038  00C8D8  D008               	goto	l3295
 15039  00C8DA                     u18360:
 15040                           
 15041                           ; BSR set to: 0
 15042  00C8DA  0E00               	movlw	0
 15043  00C8DC  6F81               	movwf	___flmul@prod& (0+255),b
 15044  00C8DE  0E00               	movlw	0
 15045  00C8E0  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 15046  00C8E2  0E80               	movlw	128
 15047  00C8E4  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 15048  00C8E6  0E7F               	movlw	127
 15049  00C8E8  D020               	goto	L18
 15050  00C8EA                     l3295:
 15051                           
 15052                           ; BSR set to: 0
 15053                           
 15054                           ; BSR set to: 0
 15055  00C8EA  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 15056  00C8EC  D005               	goto	u18370
 15057  00C8EE  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 15058  00C8F0  E10E               	bnz	l3297
 15059  00C8F2  0585               	decf	___flmul@temp& (0+255),w,b
 15060  00C8F4  B0D8               	btfsc	status,0,c
 15061  00C8F6  D00B               	goto	l3297
 15062  00C8F8                     u18370:
 15063                           
 15064                           ; BSR set to: 0
 15065  00C8F8  0E00               	movlw	0
 15066  00C8FA  6F81               	movwf	___flmul@prod& (0+255),b
 15067  00C8FC  0E00               	movlw	0
 15068  00C8FE  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 15069  00C900  0E00               	movlw	0
 15070  00C902  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 15071  00C904  0E00               	movlw	0
 15072  00C906  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 15073  00C908  0E00               	movlw	0
 15074  00C90A  6F7A               	movwf	___flmul@sign& (0+255),b
 15075  00C90C  D00F               	goto	l3298
 15076  00C90E                     l3297:
 15077                           
 15078                           ; BSR set to: 0
 15079  00C90E  C085  F080         	movff	___flmul@temp,___flmul@bexp
 15080                           
 15081                           ; BSR set to: 0
 15082  00C912  0EFF               	movlw	255
 15083  00C914  1781               	andwf	___flmul@prod& (0+255),f,b
 15084  00C916  0EFF               	movlw	255
 15085  00C918  1782               	andwf	(___flmul@prod+1)& (0+255),f,b
 15086  00C91A  0E7F               	movlw	127
 15087  00C91C  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
 15088  00C91E  0E00               	movlw	0
 15089  00C920  1784               	andwf	(___flmul@prod+3)& (0+255),f,b
 15090                           
 15091                           ; BSR set to: 0
 15092  00C922  B180               	btfsc	___flmul@bexp& (0+255),0,b
 15093                           
 15094                           ; BSR set to: 0
 15095  00C924  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
 15096                           
 15097                           ; BSR set to: 0
 15098                           
 15099                           ; BSR set to: 0
 15100  00C926  90D8               	bcf	status,0,c
 15101  00C928  3180               	rrcf	___flmul@bexp& (0+255),w,b
 15102  00C92A                     L18:
 15103  00C92A  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 15104  00C92C                     l3298:
 15105                           
 15106                           ; BSR set to: 0
 15107                           
 15108                           ; BSR set to: 0
 15109                           
 15110                           ; BSR set to: 0
 15111  00C92C  517A               	movf	___flmul@sign& (0+255),w,b
 15112  00C92E  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
 15113                           
 15114                           ; BSR set to: 0
 15115  00C930  C081  F06E         	movff	___flmul@prod,?___flmul
 15116  00C934  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
 15117  00C938  C083  F070         	movff	___flmul@prod+2,?___flmul+2
 15118  00C93C  C084  F071         	movff	___flmul@prod+3,?___flmul+3
 15119  00C940  0012               	return	
 15120  00C942                     __end_of___flmul:
 15121                           	opt stack 0
 15122                           tblptru	equ	0xFF8
 15123                           tblptrh	equ	0xFF7
 15124                           tblptrl	equ	0xFF6
 15125                           tablat	equ	0xFF5
 15126                           prodh	equ	0xFF4
 15127                           prodl	equ	0xFF3
 15128                           intcon	equ	0xFF2
 15129                           postinc0	equ	0xFEE
 15130                           wreg	equ	0xFE8
 15131                           postdec1	equ	0xFE5
 15132                           plusw1	equ	0xFE3
 15133                           fsr1h	equ	0xFE2
 15134                           fsr1l	equ	0xFE1
 15135                           indf2	equ	0xFDF
 15136                           postinc2	equ	0xFDE
 15137                           postdec2	equ	0xFDD
 15138                           plusw2	equ	0xFDB
 15139                           fsr2h	equ	0xFDA
 15140                           fsr2l	equ	0xFD9
 15141                           status	equ	0xFD8
 15142                           
 15143 ;; *************** function _motor_change_speed *****************
 15144 ;; Defined at:
 15145 ;;		line 426 in file "motor.c"
 15146 ;; Parameters:    Size  Location     Type
 15147 ;;  new_speed       2    0[BANK0 ] unsigned int 
 15148 ;; Auto vars:     Size  Location     Type
 15149 ;;		None
 15150 ;; Return value:  Size  Location     Type
 15151 ;;                  1    wreg      void 
 15152 ;; Registers used:
 15153 ;;		None
 15154 ;; Tracked objects:
 15155 ;;		On entry : 0/0
 15156 ;;		On exit  : 0/0
 15157 ;;		Unchanged: 0/0
 15158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15159 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15162 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15163 ;;Total ram usage:        2 bytes
 15164 ;; Hardware stack levels used:    1
 15165 ;; Hardware stack levels required when called:   10
 15166 ;; This function calls:
 15167 ;;		Nothing
 15168 ;; This function is called by:
 15169 ;;		_encoder_statemachine
 15170 ;; This function uses a non-reentrant model
 15171 ;;
 15172                           
 15173                           	psect	text45
 15174  0128B2                     __ptext45:
 15175                           	opt stack 0
 15176  0128B2                     _motor_change_speed:
 15177                           	opt stack 19
 15178                           
 15179                           ;motor.c: 428: motor_maximum_speed = new_speed;
 15180                           
 15181                           ; BSR set to: 0
 15182                           ;incstack = 0
 15183  0128B2  C060  F15B         	movff	motor_change_speed@new_speed,_motor_maximum_speed
 15184  0128B6  C061  F15C         	movff	motor_change_speed@new_speed+1,_motor_maximum_speed+1
 15185  0128BA  0012               	return		;funcret
 15186  0128BC                     __end_of_motor_change_speed:
 15187                           	opt stack 0
 15188                           tblptru	equ	0xFF8
 15189                           tblptrh	equ	0xFF7
 15190                           tblptrl	equ	0xFF6
 15191                           tablat	equ	0xFF5
 15192                           prodh	equ	0xFF4
 15193                           prodl	equ	0xFF3
 15194                           intcon	equ	0xFF2
 15195                           postinc0	equ	0xFEE
 15196                           wreg	equ	0xFE8
 15197                           postdec1	equ	0xFE5
 15198                           plusw1	equ	0xFE3
 15199                           fsr1h	equ	0xFE2
 15200                           fsr1l	equ	0xFE1
 15201                           indf2	equ	0xFDF
 15202                           postinc2	equ	0xFDE
 15203                           postdec2	equ	0xFDD
 15204                           plusw2	equ	0xFDB
 15205                           fsr2h	equ	0xFDA
 15206                           fsr2l	equ	0xFD9
 15207                           status	equ	0xFD8
 15208                           
 15209 ;; *************** function _encoder_next_setup_stepsize *****************
 15210 ;; Defined at:
 15211 ;;		line 627 in file "encoder.c"
 15212 ;; Parameters:    Size  Location     Type
 15213 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 15214 ;; Auto vars:     Size  Location     Type
 15215 ;;		None
 15216 ;; Return value:  Size  Location     Type
 15217 ;;                  2    0[BANK0 ] unsigned int 
 15218 ;; Registers used:
 15219 ;;		wreg, status,2, status,0
 15220 ;; Tracked objects:
 15221 ;;		On entry : 0/0
 15222 ;;		On exit  : 0/0
 15223 ;;		Unchanged: 0/0
 15224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15225 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15227 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15228 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15229 ;;Total ram usage:        4 bytes
 15230 ;; Hardware stack levels used:    1
 15231 ;; Hardware stack levels required when called:   10
 15232 ;; This function calls:
 15233 ;;		Nothing
 15234 ;; This function is called by:
 15235 ;;		_encoder_statemachine
 15236 ;; This function uses a non-reentrant model
 15237 ;;
 15238                           
 15239                           	psect	text46
 15240  011728                     __ptext46:
 15241                           	opt stack 0
 15242  011728                     _encoder_next_setup_stepsize:
 15243                           	opt stack 19
 15244                           
 15245                           ;encoder.c: 629: switch(old_stepsize)
 15246                           
 15247                           ;incstack = 0
 15248  011728  D01A               	goto	l2649
 15249  01172A                     
 15250                           ;encoder.c: 632: return 100;
 15251  01172A  0E00               	movlw	0
 15252  01172C  0100               	movlb	0	; () banked
 15253  01172E  6F61               	movwf	(?_encoder_next_setup_stepsize+1)& (0+255),b
 15254  011730  0E64               	movlw	100
 15255  011732  6F60               	movwf	?_encoder_next_setup_stepsize& (0+255),b
 15256                           
 15257                           ; BSR set to: 0
 15258  011734  0012               	return	
 15259  011736                     
 15260                           ; BSR set to: 0
 15261                           ;encoder.c: 634: return 10;
 15262                           
 15263                           ; BSR set to: 0
 15264  011736  0E00               	movlw	0
 15265  011738  6F61               	movwf	(?_encoder_next_setup_stepsize+1)& (0+255),b
 15266  01173A  0E0A               	movlw	10
 15267  01173C  6F60               	movwf	?_encoder_next_setup_stepsize& (0+255),b
 15268                           
 15269                           ; BSR set to: 0
 15270  01173E  0012               	return	
 15271  011740                     
 15272                           ; BSR set to: 0
 15273                           ;encoder.c: 636: return 1;
 15274                           
 15275                           ; BSR set to: 0
 15276  011740  0E00               	movlw	0
 15277  011742  6F61               	movwf	(?_encoder_next_setup_stepsize+1)& (0+255),b
 15278  011744  0E01               	movlw	1
 15279  011746  6F60               	movwf	?_encoder_next_setup_stepsize& (0+255),b
 15280                           
 15281                           ; BSR set to: 0
 15282  011748  0012               	return	
 15283  01174A                     
 15284                           ; BSR set to: 0
 15285                           ;encoder.c: 638: return 1000;
 15286                           
 15287                           ; BSR set to: 0
 15288  01174A  0E03               	movlw	3
 15289  01174C  6F61               	movwf	(?_encoder_next_setup_stepsize+1)& (0+255),b
 15290  01174E  0EE8               	movlw	232
 15291  011750  6F60               	movwf	?_encoder_next_setup_stepsize& (0+255),b
 15292                           
 15293                           ; BSR set to: 0
 15294  011752  0012               	return	
 15295  011754                     
 15296                           ; BSR set to: 0
 15297                           ;encoder.c: 640: return 100;
 15298                           
 15299                           ; BSR set to: 0
 15300  011754  0E00               	movlw	0
 15301  011756  6F61               	movwf	(?_encoder_next_setup_stepsize+1)& (0+255),b
 15302  011758  0E64               	movlw	100
 15303  01175A  6F60               	movwf	?_encoder_next_setup_stepsize& (0+255),b
 15304                           
 15305                           ; BSR set to: 0
 15306                           ;encoder.c: 641: }
 15307                           
 15308                           ; BSR set to: 0
 15309  01175C  0012               	return	
 15310  01175E                     l2649:
 15311                           
 15312                           ; BSR set to: 0
 15313  01175E  C060  F062         	movff	encoder_next_setup_stepsize@old_stepsize,??_encoder_next_setup_stepsize
 15314  011762  C061  F063         	movff	encoder_next_setup_stepsize@old_stepsize+1,??_encoder_next_setup_stepsize+1
 15315                           
 15316                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 15317                           ; Switch size 1, requested type "space"
 15318                           ; Number of cases is 2, Range of values is 0 to 3
 15319                           ; switch strategies available:
 15320                           ; Name         Instructions Cycles
 15321                           ; simple_byte            7     4 (average)
 15322                           ;	Chosen strategy is simple_byte
 15323  011766  0100               	movlb	0	; () banked
 15324  011768  5163               	movf	(??_encoder_next_setup_stepsize+1)& (0+255),w,b
 15325  01176A  0A00               	xorlw	0	; case 0
 15326  01176C  B4D8               	btfsc	status,2,c
 15327  01176E  D004               	goto	l22678
 15328  011770  0A03               	xorlw	3	; case 3
 15329  011772  B4D8               	btfsc	status,2,c
 15330  011774  D00C               	goto	l22680
 15331  011776  D7EE               	goto	l2655
 15332  011778                     l22678:
 15333                           
 15334                           ; BSR set to: 0
 15335                           ; Switch size 1, requested type "space"
 15336                           ; Number of cases is 3, Range of values is 1 to 100
 15337                           ; switch strategies available:
 15338                           ; Name         Instructions Cycles
 15339                           ; simple_byte           10     6 (average)
 15340                           ;	Chosen strategy is simple_byte
 15341  011778  5162               	movf	??_encoder_next_setup_stepsize& (0+255),w,b
 15342  01177A  0A01               	xorlw	1	; case 1
 15343  01177C  B4D8               	btfsc	status,2,c
 15344  01177E  D7E5               	goto	l2654
 15345  011780  0A0B               	xorlw	11	; case 10
 15346  011782  B4D8               	btfsc	status,2,c
 15347  011784  D7DD               	goto	l2653
 15348  011786  0A6E               	xorlw	110	; case 100
 15349  011788  B4D8               	btfsc	status,2,c
 15350  01178A  D7D5               	goto	l2652
 15351  01178C  D7E3               	goto	l2655
 15352  01178E                     l22680:
 15353                           
 15354                           ; BSR set to: 0
 15355                           ; Switch size 1, requested type "space"
 15356                           ; Number of cases is 1, Range of values is 232 to 232
 15357                           ; switch strategies available:
 15358                           ; Name         Instructions Cycles
 15359                           ; simple_byte            4     3 (average)
 15360                           ;	Chosen strategy is simple_byte
 15361  01178E  5162               	movf	??_encoder_next_setup_stepsize& (0+255),w,b
 15362  011790  0AE8               	xorlw	232	; case 232
 15363  011792  B4D8               	btfsc	status,2,c
 15364  011794  D7CA               	goto	l2650
 15365  011796  D7DE               	goto	l2655
 15366  011798                     __end_of_encoder_next_setup_stepsize:
 15367                           	opt stack 0
 15368                           tblptru	equ	0xFF8
 15369                           tblptrh	equ	0xFF7
 15370                           tblptrl	equ	0xFF6
 15371                           tablat	equ	0xFF5
 15372                           prodh	equ	0xFF4
 15373                           prodl	equ	0xFF3
 15374                           intcon	equ	0xFF2
 15375                           postinc0	equ	0xFEE
 15376                           wreg	equ	0xFE8
 15377                           postdec1	equ	0xFE5
 15378                           plusw1	equ	0xFE3
 15379                           fsr1h	equ	0xFE2
 15380                           fsr1l	equ	0xFE1
 15381                           indf2	equ	0xFDF
 15382                           postinc2	equ	0xFDE
 15383                           postdec2	equ	0xFDD
 15384                           plusw2	equ	0xFDB
 15385                           fsr2h	equ	0xFDA
 15386                           fsr2l	equ	0xFD9
 15387                           status	equ	0xFD8
 15388                           
 15389 ;; *************** function _encoder_next_divide_step_size *****************
 15390 ;; Defined at:
 15391 ;;		line 644 in file "encoder.c"
 15392 ;; Parameters:    Size  Location     Type
 15393 ;;  old_stepsize    1    wreg     unsigned char 
 15394 ;; Auto vars:     Size  Location     Type
 15395 ;;  old_stepsize    1    0[BANK0 ] unsigned char 
 15396 ;; Return value:  Size  Location     Type
 15397 ;;                  1    wreg      unsigned char 
 15398 ;; Registers used:
 15399 ;;		wreg, status,2, status,0
 15400 ;; Tracked objects:
 15401 ;;		On entry : 0/0
 15402 ;;		On exit  : 0/0
 15403 ;;		Unchanged: 0/0
 15404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15406 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15408 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15409 ;;Total ram usage:        1 bytes
 15410 ;; Hardware stack levels used:    1
 15411 ;; Hardware stack levels required when called:   10
 15412 ;; This function calls:
 15413 ;;		Nothing
 15414 ;; This function is called by:
 15415 ;;		_encoder_statemachine
 15416 ;; This function uses a non-reentrant model
 15417 ;;
 15418                           
 15419                           	psect	text47
 15420  0125E0                     __ptext47:
 15421                           	opt stack 0
 15422  0125E0                     _encoder_next_divide_step_size:
 15423                           	opt stack 19
 15424                           
 15425                           ; BSR set to: 0
 15426                           ;incstack = 0
 15427                           ;encoder_next_divide_step_size@old_stepsize stored from wreg
 15428  0125E0  0100               	movlb	0	; () banked
 15429  0125E2  6F60               	movwf	encoder_next_divide_step_size@old_stepsize& (0+255),b
 15430                           
 15431                           ;encoder.c: 646: switch(old_stepsize)
 15432  0125E4  D008               	goto	l2659
 15433  0125E6                     
 15434                           ;encoder.c: 649: return 10;
 15435  0125E6  0E0A               	movlw	10
 15436  0125E8  0012               	return	
 15437  0125EA                     
 15438                           ;encoder.c: 651: return 1;
 15439  0125EA  0E01               	movlw	1
 15440  0125EC  0012               	return	
 15441  0125EE                     
 15442                           ;encoder.c: 653: return 100;
 15443  0125EE  0E64               	movlw	100
 15444  0125F0  0012               	return	
 15445  0125F2                     
 15446                           ;encoder.c: 655: return 1;
 15447  0125F2  0E01               	movlw	1
 15448                           
 15449                           ;encoder.c: 656: }
 15450  0125F4  0012               	return	
 15451  0125F6                     l2659:
 15452  0125F6  0100               	movlb	0	; () banked
 15453  0125F8  5160               	movf	encoder_next_divide_step_size@old_stepsize& (0+255),w,b
 15454                           
 15455                           ; Switch size 1, requested type "space"
 15456                           ; Number of cases is 3, Range of values is 1 to 100
 15457                           ; switch strategies available:
 15458                           ; Name         Instructions Cycles
 15459                           ; simple_byte           10     6 (average)
 15460                           ;	Chosen strategy is simple_byte
 15461  0125FA  0A01               	xorlw	1	; case 1
 15462  0125FC  B4D8               	btfsc	status,2,c
 15463  0125FE  D7F7               	goto	l2663
 15464  012600  0A0B               	xorlw	11	; case 10
 15465  012602  B4D8               	btfsc	status,2,c
 15466  012604  D7F2               	goto	l2662
 15467  012606  0A6E               	xorlw	110	; case 100
 15468  012608  B4D8               	btfsc	status,2,c
 15469  01260A  D7ED               	goto	l2660
 15470  01260C  D7F2               	goto	l2664
 15471  01260E                     __end_of_encoder_next_divide_step_size:
 15472                           	opt stack 0
 15473                           tblptru	equ	0xFF8
 15474                           tblptrh	equ	0xFF7
 15475                           tblptrl	equ	0xFF6
 15476                           tablat	equ	0xFF5
 15477                           prodh	equ	0xFF4
 15478                           prodl	equ	0xFF3
 15479                           intcon	equ	0xFF2
 15480                           postinc0	equ	0xFEE
 15481                           wreg	equ	0xFE8
 15482                           postdec1	equ	0xFE5
 15483                           plusw1	equ	0xFE3
 15484                           fsr1h	equ	0xFE2
 15485                           fsr1l	equ	0xFE1
 15486                           indf2	equ	0xFDF
 15487                           postinc2	equ	0xFDE
 15488                           postdec2	equ	0xFDD
 15489                           plusw2	equ	0xFDB
 15490                           fsr2h	equ	0xFDA
 15491                           fsr2l	equ	0xFD9
 15492                           status	equ	0xFD8
 15493                           
 15494 ;; *************** function _encoder_next_arc_step_size *****************
 15495 ;; Defined at:
 15496 ;;		line 659 in file "encoder.c"
 15497 ;; Parameters:    Size  Location     Type
 15498 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 15499 ;; Auto vars:     Size  Location     Type
 15500 ;;		None
 15501 ;; Return value:  Size  Location     Type
 15502 ;;                  2    0[BANK0 ] unsigned int 
 15503 ;; Registers used:
 15504 ;;		wreg, status,2, status,0
 15505 ;; Tracked objects:
 15506 ;;		On entry : 0/0
 15507 ;;		On exit  : 0/0
 15508 ;;		Unchanged: 0/0
 15509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15510 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15512 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15513 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15514 ;;Total ram usage:        4 bytes
 15515 ;; Hardware stack levels used:    1
 15516 ;; Hardware stack levels required when called:   10
 15517 ;; This function calls:
 15518 ;;		Nothing
 15519 ;; This function is called by:
 15520 ;;		_encoder_statemachine
 15521 ;; This function uses a non-reentrant model
 15522 ;;
 15523                           
 15524                           	psect	text48
 15525  011798                     __ptext48:
 15526                           	opt stack 0
 15527  011798                     _encoder_next_arc_step_size:
 15528                           	opt stack 19
 15529                           
 15530                           ;encoder.c: 661: switch(old_stepsize)
 15531                           
 15532                           ;incstack = 0
 15533  011798  D01A               	goto	l2668
 15534  01179A                     
 15535                           ;encoder.c: 664: return 100;
 15536  01179A  0E00               	movlw	0
 15537  01179C  0100               	movlb	0	; () banked
 15538  01179E  6F61               	movwf	(?_encoder_next_arc_step_size+1)& (0+255),b
 15539  0117A0  0E64               	movlw	100
 15540  0117A2  6F60               	movwf	?_encoder_next_arc_step_size& (0+255),b
 15541                           
 15542                           ; BSR set to: 0
 15543  0117A4  0012               	return	
 15544  0117A6                     
 15545                           ; BSR set to: 0
 15546                           ;encoder.c: 666: return 10;
 15547                           
 15548                           ; BSR set to: 0
 15549  0117A6  0E00               	movlw	0
 15550  0117A8  6F61               	movwf	(?_encoder_next_arc_step_size+1)& (0+255),b
 15551  0117AA  0E0A               	movlw	10
 15552  0117AC  6F60               	movwf	?_encoder_next_arc_step_size& (0+255),b
 15553                           
 15554                           ; BSR set to: 0
 15555  0117AE  0012               	return	
 15556  0117B0                     
 15557                           ; BSR set to: 0
 15558                           ;encoder.c: 668: return 1;
 15559                           
 15560                           ; BSR set to: 0
 15561  0117B0  0E00               	movlw	0
 15562  0117B2  6F61               	movwf	(?_encoder_next_arc_step_size+1)& (0+255),b
 15563  0117B4  0E01               	movlw	1
 15564  0117B6  6F60               	movwf	?_encoder_next_arc_step_size& (0+255),b
 15565                           
 15566                           ; BSR set to: 0
 15567  0117B8  0012               	return	
 15568  0117BA                     
 15569                           ; BSR set to: 0
 15570                           ;encoder.c: 670: return 1000;
 15571                           
 15572                           ; BSR set to: 0
 15573  0117BA  0E03               	movlw	3
 15574  0117BC  6F61               	movwf	(?_encoder_next_arc_step_size+1)& (0+255),b
 15575  0117BE  0EE8               	movlw	232
 15576  0117C0  6F60               	movwf	?_encoder_next_arc_step_size& (0+255),b
 15577                           
 15578                           ; BSR set to: 0
 15579  0117C2  0012               	return	
 15580  0117C4                     
 15581                           ; BSR set to: 0
 15582                           ;encoder.c: 672: return 100;
 15583                           
 15584                           ; BSR set to: 0
 15585  0117C4  0E00               	movlw	0
 15586  0117C6  6F61               	movwf	(?_encoder_next_arc_step_size+1)& (0+255),b
 15587  0117C8  0E64               	movlw	100
 15588  0117CA  6F60               	movwf	?_encoder_next_arc_step_size& (0+255),b
 15589                           
 15590                           ; BSR set to: 0
 15591                           ;encoder.c: 673: }
 15592                           
 15593                           ; BSR set to: 0
 15594  0117CC  0012               	return	
 15595  0117CE                     l2668:
 15596                           
 15597                           ; BSR set to: 0
 15598  0117CE  C060  F062         	movff	encoder_next_arc_step_size@old_stepsize,??_encoder_next_arc_step_size
 15599  0117D2  C061  F063         	movff	encoder_next_arc_step_size@old_stepsize+1,??_encoder_next_arc_step_size+1
 15600                           
 15601                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 15602                           ; Switch size 1, requested type "space"
 15603                           ; Number of cases is 2, Range of values is 0 to 3
 15604                           ; switch strategies available:
 15605                           ; Name         Instructions Cycles
 15606                           ; simple_byte            7     4 (average)
 15607                           ;	Chosen strategy is simple_byte
 15608  0117D6  0100               	movlb	0	; () banked
 15609  0117D8  5163               	movf	(??_encoder_next_arc_step_size+1)& (0+255),w,b
 15610  0117DA  0A00               	xorlw	0	; case 0
 15611  0117DC  B4D8               	btfsc	status,2,c
 15612  0117DE  D004               	goto	l22682
 15613  0117E0  0A03               	xorlw	3	; case 3
 15614  0117E2  B4D8               	btfsc	status,2,c
 15615  0117E4  D00C               	goto	l22684
 15616  0117E6  D7EE               	goto	l2674
 15617  0117E8                     l22682:
 15618                           
 15619                           ; BSR set to: 0
 15620                           ; Switch size 1, requested type "space"
 15621                           ; Number of cases is 3, Range of values is 1 to 100
 15622                           ; switch strategies available:
 15623                           ; Name         Instructions Cycles
 15624                           ; simple_byte           10     6 (average)
 15625                           ;	Chosen strategy is simple_byte
 15626  0117E8  5162               	movf	??_encoder_next_arc_step_size& (0+255),w,b
 15627  0117EA  0A01               	xorlw	1	; case 1
 15628  0117EC  B4D8               	btfsc	status,2,c
 15629  0117EE  D7E5               	goto	l2673
 15630  0117F0  0A0B               	xorlw	11	; case 10
 15631  0117F2  B4D8               	btfsc	status,2,c
 15632  0117F4  D7DD               	goto	l2672
 15633  0117F6  0A6E               	xorlw	110	; case 100
 15634  0117F8  B4D8               	btfsc	status,2,c
 15635  0117FA  D7D5               	goto	l2671
 15636  0117FC  D7E3               	goto	l2674
 15637  0117FE                     l22684:
 15638                           
 15639                           ; BSR set to: 0
 15640                           ; Switch size 1, requested type "space"
 15641                           ; Number of cases is 1, Range of values is 232 to 232
 15642                           ; switch strategies available:
 15643                           ; Name         Instructions Cycles
 15644                           ; simple_byte            4     3 (average)
 15645                           ;	Chosen strategy is simple_byte
 15646  0117FE  5162               	movf	??_encoder_next_arc_step_size& (0+255),w,b
 15647  011800  0AE8               	xorlw	232	; case 232
 15648  011802  B4D8               	btfsc	status,2,c
 15649  011804  D7CA               	goto	l2669
 15650  011806  D7DE               	goto	l2674
 15651  011808                     __end_of_encoder_next_arc_step_size:
 15652                           	opt stack 0
 15653                           tblptru	equ	0xFF8
 15654                           tblptrh	equ	0xFF7
 15655                           tblptrl	equ	0xFF6
 15656                           tablat	equ	0xFF5
 15657                           prodh	equ	0xFF4
 15658                           prodl	equ	0xFF3
 15659                           intcon	equ	0xFF2
 15660                           postinc0	equ	0xFEE
 15661                           wreg	equ	0xFE8
 15662                           postdec1	equ	0xFE5
 15663                           plusw1	equ	0xFE3
 15664                           fsr1h	equ	0xFE2
 15665                           fsr1l	equ	0xFE1
 15666                           indf2	equ	0xFDF
 15667                           postinc2	equ	0xFDE
 15668                           postdec2	equ	0xFDD
 15669                           plusw2	equ	0xFDB
 15670                           fsr2h	equ	0xFDA
 15671                           fsr2l	equ	0xFD9
 15672                           status	equ	0xFD8
 15673                           
 15674 ;; *************** function _display_prepare *****************
 15675 ;; Defined at:
 15676 ;;		line 230 in file "display.c"
 15677 ;; Parameters:    Size  Location     Type
 15678 ;;		None
 15679 ;; Auto vars:     Size  Location     Type
 15680 ;;  temp           10   94[BANK0 ] unsigned char [10]
 15681 ;;  cntr            1  105[BANK0 ] unsigned char 
 15682 ;;  space           1  104[BANK0 ] unsigned char 
 15683 ;; Return value:  Size  Location     Type
 15684 ;;                  1    wreg      void 
 15685 ;; Registers used:
 15686 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15687 ;; Tracked objects:
 15688 ;;		On entry : 0/0
 15689 ;;		On exit  : 0/0
 15690 ;;		Unchanged: 0/0
 15691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15693 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15694 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15695 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15696 ;;Total ram usage:       14 bytes
 15697 ;; Hardware stack levels used:    1
 15698 ;; Hardware stack levels required when called:   15
 15699 ;; This function calls:
 15700 ;;		__display_clear
 15701 ;;		__display_itoa
 15702 ;;		__display_itoa_long
 15703 ;;		__display_padded_itoa
 15704 ;;		__display_signed_itoa
 15705 ;;		_memcpy
 15706 ;;		_motor_speed_from_index
 15707 ;;		_strlen
 15708 ;; This function is called by:
 15709 ;;		_main
 15710 ;; This function uses a non-reentrant model
 15711 ;;
 15712                           
 15713                           	psect	text49
 15714  00B00E                     __ptext49:
 15715                           	opt stack 0
 15716  00B00E                     _display_prepare:
 15717                           	opt stack 15
 15718                           
 15719                           ;display.c: 232: uint8_t cntr;;display.c: 233: uint8_t space;;display.c: 234: char temp[
      +                          10];;display.c: 236: switch(os.displayState & 0xF0)
 15720                           
 15721                           ; BSR set to: 0
 15722                           ;incstack = 0
 15723  00B00E  EFF0  F05D         	goto	l1322
 15724  00B012                     
 15725                           ;display.c: 240: memcpy(display_content, dc_main, sizeof display_content);
 15726  00B012  0E78               	movlw	low _display_content
 15727  00B014  0100               	movlb	0	; () banked
 15728  00B016  6F60               	movwf	memcpy@d1& (0+255),b
 15729  00B018  0E02               	movlw	high _display_content
 15730  00B01A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 15731  00B01C  0E6E               	movlw	low _dc_main
 15732  00B01E  6F62               	movwf	memcpy@s1& (0+255),b
 15733  00B020  0EA0               	movlw	high _dc_main
 15734  00B022  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 15735  00B024  0E00               	movlw	0
 15736  00B026  6F65               	movwf	(memcpy@n+1)& (0+255),b
 15737  00B028  0E50               	movlw	80
 15738  00B02A  6F64               	movwf	memcpy@n& (0+255),b
 15739  00B02C  EC35  F08D         	call	_memcpy	;wreg free
 15740                           
 15741                           ;display.c: 241: switch(os.displayState)
 15742  00B030  D00F               	goto	l1324
 15743  00B032                     
 15744                           ;display.c: 244: display_content[1][0] = '>';
 15745  00B032  0E3E               	movlw	62
 15746  00B034  0102               	movlb	2	; () banked
 15747  00B036  6F8C               	movwf	(_display_content+20)& (0+255),b
 15748                           
 15749                           ;display.c: 245: break;
 15750  00B038  EF1D  F05E         	goto	l1331
 15751  00B03C                     
 15752                           ;display.c: 247: display_content[1][9] = '>';
 15753                           
 15754                           ; BSR set to: 2
 15755  00B03C  0E3E               	movlw	62
 15756  00B03E  0102               	movlb	2	; () banked
 15757  00B040  6F95               	movwf	(_display_content+29)& (0+255),b
 15758                           
 15759                           ;display.c: 248: break;
 15760  00B042  EF1D  F05E         	goto	l1331
 15761  00B046                     
 15762                           ;display.c: 253: display_content[2][9] = '>';
 15763                           
 15764                           ; BSR set to: 2
 15765  00B046  0E3E               	movlw	62
 15766  00B048  0102               	movlb	2	; () banked
 15767  00B04A  6FA9               	movwf	(_display_content+49)& (0+255),b
 15768                           
 15769                           ;display.c: 254: break;
 15770  00B04C  EF1D  F05E         	goto	l1331
 15771  00B050                     l1324:
 15772                           
 15773                           ; BSR set to: 2
 15774  00B050  0100               	movlb	0	; () banked
 15775  00B052  51E0               	movf	(_os+13)& (0+255),w,b	;volatile
 15776                           
 15777                           ; Switch size 1, requested type "space"
 15778                           ; Number of cases is 5, Range of values is 1 to 5
 15779                           ; switch strategies available:
 15780                           ; Name         Instructions Cycles
 15781                           ; simple_byte           16     9 (average)
 15782                           ;	Chosen strategy is simple_byte
 15783  00B054  0A01               	xorlw	1	; case 1
 15784  00B056  B4D8               	btfsc	status,2,c
 15785  00B058  D7EC               	goto	l1325
 15786  00B05A  0A03               	xorlw	3	; case 2
 15787  00B05C  B4D8               	btfsc	status,2,c
 15788  00B05E  D7EE               	goto	l1327
 15789  00B060  0A01               	xorlw	1	; case 3
 15790  00B062  B4D8               	btfsc	status,2,c
 15791  00B064  D064               	goto	l1344
 15792  00B066  0A07               	xorlw	7	; case 4
 15793  00B068  B4D8               	btfsc	status,2,c
 15794  00B06A  D7ED               	goto	l1329
 15795  00B06C  0A01               	xorlw	1	; case 5
 15796  00B06E  D06F               	goto	L77
 15797  00B070                     
 15798                           ; BSR set to: 0
 15799                           ;display.c: 262: memcpy(display_content, dc_setup1, sizeof display_content);
 15800                           
 15801                           ; BSR set to: 0
 15802  00B070  0E78               	movlw	low _display_content
 15803  00B072  6F60               	movwf	memcpy@d1& (0+255),b
 15804  00B074  0E02               	movlw	high _display_content
 15805  00B076  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 15806  00B078  0E1E               	movlw	low _dc_setup1
 15807  00B07A  6F62               	movwf	memcpy@s1& (0+255),b
 15808  00B07C  0EA0               	movlw	high _dc_setup1
 15809  00B07E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 15810  00B080  0E00               	movlw	0
 15811  00B082  6F65               	movwf	(memcpy@n+1)& (0+255),b
 15812  00B084  0E50               	movlw	80
 15813  00B086  6F64               	movwf	memcpy@n& (0+255),b
 15814  00B088  EC35  F08D         	call	_memcpy	;wreg free
 15815                           
 15816                           ;display.c: 263: _display_itoa(os.setup_step_size, 2, temp);
 15817  00B08C  C0E3  F095         	movff	_os+16,__display_itoa@value	;volatile
 15818  00B090  C0E4  F096         	movff	_os+17,__display_itoa@value+1	;volatile
 15819  00B094  0E02               	movlw	2
 15820  00B096  0100               	movlb	0	; () banked
 15821  00B098  6F97               	movwf	__display_itoa@decimals& (0+255),b
 15822  00B09A  0EBE               	movlw	low display_prepare@temp
 15823  00B09C  6F98               	movwf	__display_itoa@text& (0+255),b
 15824  00B09E  0E00               	movlw	high display_prepare@temp
 15825  00B0A0  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 15826  00B0A2  EC74  F06C         	call	__display_itoa	;wreg free
 15827                           
 15828                           ;display.c: 264: if(os.setup_step_size>999)
 15829  00B0A6  0EE8               	movlw	232
 15830  00B0A8  0100               	movlb	0	; () banked
 15831  00B0AA  5DE3               	subwf	(_os+16)& (0+255),w,b	;volatile
 15832  00B0AC  0E03               	movlw	3
 15833  00B0AE  59E4               	subwfb	(_os+17)& (0+255),w,b	;volatile
 15834  00B0B0  A0D8               	btfss	status,0,c
 15835  00B0B2  D002               	goto	l1333
 15836                           
 15837                           ; BSR set to: 0
 15838                           ;display.c: 265: space = 0;
 15839  00B0B4  0E00               	movlw	0
 15840  00B0B6  D001               	goto	L19
 15841  00B0B8                     l1333:
 15842                           
 15843                           ; BSR set to: 0
 15844                           ;display.c: 266: else;display.c: 267: space = 1;
 15845                           
 15846                           ; BSR set to: 0
 15847  00B0B8  0E01               	movlw	1
 15848  00B0BA                     L19:
 15849  00B0BA  6FC8               	movwf	display_prepare@space& (0+255),b
 15850                           
 15851                           ; BSR set to: 0
 15852                           ;display.c: 268: for(cntr=0; temp[cntr]; ++cntr)
 15853  00B0BC  0E00               	movlw	0
 15854  00B0BE  6FC9               	movwf	display_prepare@cntr& (0+255),b
 15855  00B0C0  D018               	goto	l1335
 15856  00B0C2                     
 15857                           ; BSR set to: 0
 15858                           ;display.c: 269: {;display.c: 270: display_content[3][space+cntr] = temp[cntr];
 15859                           
 15860                           ; BSR set to: 0
 15861  00B0C2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 15862  00B0C4  0D01               	mullw	1
 15863  00B0C6  0EBE               	movlw	low display_prepare@temp
 15864  00B0C8  24F3               	addwf	prodl,w,c
 15865  00B0CA  6ED9               	movwf	fsr2l,c
 15866  00B0CC  0E00               	movlw	high display_prepare@temp
 15867  00B0CE  20F4               	addwfc	prodh,w,c
 15868  00B0D0  6EDA               	movwf	fsr2h,c
 15869  00B0D2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 15870  00B0D4  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 15871  00B0D8  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 15872  00B0DA  27BC               	addwf	??_display_prepare& (0+255),f,b
 15873  00B0DC  0E00               	movlw	0
 15874  00B0DE  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 15875  00B0E0  0EB4               	movlw	low (_display_content+60)
 15876  00B0E2  25BC               	addwf	??_display_prepare& (0+255),w,b
 15877  00B0E4  6EE1               	movwf	fsr1l,c
 15878  00B0E6  0E02               	movlw	high (_display_content+60)
 15879  00B0E8  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 15880  00B0EA  6EE2               	movwf	fsr1h,c
 15881  00B0EC  CFDF FFE7          	movff	indf2,indf1
 15882                           
 15883                           ; BSR set to: 0
 15884  00B0F0  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 15885  00B0F2                     l1335:
 15886                           
 15887                           ; BSR set to: 0
 15888                           
 15889                           ; BSR set to: 0
 15890  00B0F2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 15891  00B0F4  0D01               	mullw	1
 15892  00B0F6  0EBE               	movlw	low display_prepare@temp
 15893  00B0F8  24F3               	addwf	prodl,w,c
 15894  00B0FA  6ED9               	movwf	fsr2l,c
 15895  00B0FC  0E00               	movlw	high display_prepare@temp
 15896  00B0FE  20F4               	addwfc	prodh,w,c
 15897  00B100  6EDA               	movwf	fsr2h,c
 15898  00B102  50DF               	movf	indf2,w,c
 15899  00B104  A4D8               	btfss	status,2,c
 15900  00B106  D7DD               	goto	l1336
 15901                           
 15902                           ; BSR set to: 2
 15903                           
 15904                           ; BSR set to: 2
 15905                           ;display.c: 280: }
 15906                           
 15907                           ;display.c: 279: break;
 15908                           
 15909                           ;display.c: 278: display_content[3][12] = '>';
 15910                           
 15911                           ; BSR set to: 2
 15912                           
 15913                           ;display.c: 277: case DISPLAY_STATE_SETUP1_CANCEL:
 15914                           
 15915                           ;display.c: 276: break;
 15916                           
 15917                           ; BSR set to: 0
 15918                           ;display.c: 275: display_content[2][12] = '>';
 15919                           
 15920                           ; BSR set to: 0
 15921                           
 15922                           ;display.c: 273: {;display.c: 274: case DISPLAY_STATE_SETUP1_CONFIRM:
 15923                           
 15924                           ; BSR set to: 0
 15925                           ;display.c: 271: };display.c: 272: switch(os.displayState)
 15926  00B108  0100               	movlb	0	; () banked
 15927  00B10A  51E0               	movf	(_os+13)& (0+255),w,b	;volatile
 15928                           
 15929                           ; Switch size 1, requested type "space"
 15930                           ; Number of cases is 2, Range of values is 17 to 18
 15931                           ; switch strategies available:
 15932                           ; Name         Instructions Cycles
 15933                           ; simple_byte            7     4 (average)
 15934                           ;	Chosen strategy is simple_byte
 15935  00B10C  0A11               	xorlw	17	; case 17
 15936  00B10E  D08C               	goto	L25
 15937  00B110                     
 15938                           ; BSR set to: 0
 15939                           ;display.c: 284: memcpy(display_content, dc_setup2, sizeof display_content);
 15940                           
 15941                           ; BSR set to: 0
 15942  00B110  0E78               	movlw	low _display_content
 15943  00B112  6F60               	movwf	memcpy@d1& (0+255),b
 15944  00B114  0E02               	movlw	high _display_content
 15945  00B116  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 15946  00B118  0ECE               	movlw	low _dc_setup2
 15947  00B11A  6F62               	movwf	memcpy@s1& (0+255),b
 15948  00B11C  0E9F               	movlw	high _dc_setup2
 15949  00B11E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 15950  00B120  0E00               	movlw	0
 15951  00B122  6F65               	movwf	(memcpy@n+1)& (0+255),b
 15952  00B124  0E50               	movlw	80
 15953  00B126  6F64               	movwf	memcpy@n& (0+255),b
 15954  00B128  EC35  F08D         	call	_memcpy	;wreg free
 15955                           
 15956                           ;display.c: 285: switch(os.displayState)
 15957  00B12C  D00A               	goto	l1343
 15958  00B12E                     l1344:
 15959                           
 15960                           ;display.c: 288: display_content[2][0] = '>';
 15961  00B12E  0E3E               	movlw	62
 15962  00B130  0102               	movlb	2	; () banked
 15963  00B132  6FA0               	movwf	(_display_content+40)& (0+255),b
 15964                           
 15965                           ;display.c: 289: break;
 15966  00B134  EF1D  F05E         	goto	l1331
 15967  00B138                     l1346:
 15968                           
 15969                           ;display.c: 291: display_content[3][0] = '>';
 15970                           
 15971                           ; BSR set to: 2
 15972  00B138  0E3E               	movlw	62
 15973  00B13A  0102               	movlb	2	; () banked
 15974  00B13C  6FB4               	movwf	(_display_content+60)& (0+255),b
 15975                           
 15976                           ; BSR set to: 2
 15977                           ;display.c: 293: }
 15978                           
 15979                           ;display.c: 292: break;
 15980  00B13E  EF1D  F05E         	goto	l1331
 15981  00B142                     l1343:
 15982                           
 15983                           ; BSR set to: 2
 15984  00B142  0100               	movlb	0	; () banked
 15985  00B144  51E0               	movf	(_os+13)& (0+255),w,b	;volatile
 15986                           
 15987                           ; Switch size 1, requested type "space"
 15988                           ; Number of cases is 2, Range of values is 33 to 34
 15989                           ; switch strategies available:
 15990                           ; Name         Instructions Cycles
 15991                           ; simple_byte            7     4 (average)
 15992                           ;	Chosen strategy is simple_byte
 15993  00B146  0A21               	xorlw	33	; case 33
 15994  00B148  B4D8               	btfsc	status,2,c
 15995  00B14A  D7F1               	goto	l1344
 15996  00B14C  0A03               	xorlw	3	; case 34
 15997  00B14E                     L77:
 15998  00B14E  B4D8               	btfsc	status,2,c
 15999  00B150  D7F3               	goto	l1346
 16000                           
 16001                           ; BSR set to: 0
 16002                           ;display.c: 294: break;
 16003  00B152  EF1D  F05E         	goto	l1331
 16004  00B156                     
 16005                           ; BSR set to: 0
 16006                           ;display.c: 297: memcpy(display_content, dc_divide1, sizeof display_content);
 16007                           
 16008                           ; BSR set to: 0
 16009  00B156  0E78               	movlw	low _display_content
 16010  00B158  6F60               	movwf	memcpy@d1& (0+255),b
 16011  00B15A  0E02               	movlw	high _display_content
 16012  00B15C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 16013  00B15E  0E7E               	movlw	low _dc_divide1
 16014  00B160  6F62               	movwf	memcpy@s1& (0+255),b
 16015  00B162  0E9F               	movlw	high _dc_divide1
 16016  00B164  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 16017  00B166  0E00               	movlw	0
 16018  00B168  6F65               	movwf	(memcpy@n+1)& (0+255),b
 16019  00B16A  0E50               	movlw	80
 16020  00B16C  6F64               	movwf	memcpy@n& (0+255),b
 16021  00B16E  EC35  F08D         	call	_memcpy	;wreg free
 16022                           
 16023                           ;display.c: 299: _display_padded_itoa(os.divide_step_size, 3, temp);
 16024  00B172  C0E8  F078         	movff	_os+21,__display_padded_itoa@value	;volatile
 16025  00B176  0100               	movlb	0	; () banked
 16026  00B178  6B79               	clrf	(__display_padded_itoa@value+1)& (0+255),b
 16027  00B17A  0E03               	movlw	3
 16028  00B17C  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 16029  00B17E  0EBE               	movlw	low display_prepare@temp
 16030  00B180  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 16031  00B182  0E00               	movlw	high display_prepare@temp
 16032  00B184  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 16033  00B186  EC02  F080         	call	__display_padded_itoa	;wreg free
 16034                           
 16035                           ;display.c: 300: for(cntr=0; cntr<3; ++cntr)
 16036  00B18A  0E00               	movlw	0
 16037  00B18C  0100               	movlb	0	; () banked
 16038  00B18E  6FC9               	movwf	display_prepare@cntr& (0+255),b
 16039  00B190                     l21282:
 16040                           
 16041                           ; BSR set to: 0
 16042  00B190  0E02               	movlw	2
 16043  00B192  65C9               	cpfsgt	display_prepare@cntr& (0+255),b
 16044  00B194  D001               	goto	l1348
 16045  00B196  D014               	goto	u21520
 16046  00B198                     l1348:
 16047                           
 16048                           ; BSR set to: 0
 16049                           ;display.c: 301: {;display.c: 302: display_content[2][cntr] = temp[cntr];
 16050                           
 16051                           ; BSR set to: 0
 16052  00B198  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16053  00B19A  0D01               	mullw	1
 16054  00B19C  0EBE               	movlw	low display_prepare@temp
 16055  00B19E  24F3               	addwf	prodl,w,c
 16056  00B1A0  6ED9               	movwf	fsr2l,c
 16057  00B1A2  0E00               	movlw	high display_prepare@temp
 16058  00B1A4  20F4               	addwfc	prodh,w,c
 16059  00B1A6  6EDA               	movwf	fsr2h,c
 16060  00B1A8  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16061  00B1AA  0D01               	mullw	1
 16062  00B1AC  0EA0               	movlw	low (_display_content+40)
 16063  00B1AE  24F3               	addwf	prodl,w,c
 16064  00B1B0  6EE1               	movwf	fsr1l,c
 16065  00B1B2  0E02               	movlw	high (_display_content+40)
 16066  00B1B4  20F4               	addwfc	prodh,w,c
 16067  00B1B6  6EE2               	movwf	fsr1h,c
 16068  00B1B8  CFDF FFE7          	movff	indf2,indf1
 16069                           
 16070                           ; BSR set to: 0
 16071  00B1BC  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 16072  00B1BE  D7E8               	goto	l21282
 16073  00B1C0                     u21520:
 16074                           
 16075                           ; BSR set to: 0
 16076                           ;display.c: 303: };display.c: 305: _display_padded_itoa(os.division, 4, temp);
 16077                           
 16078                           ; BSR set to: 0
 16079  00B1C0  C0E6  F078         	movff	_os+19,__display_padded_itoa@value	;volatile
 16080  00B1C4  C0E7  F079         	movff	_os+20,__display_padded_itoa@value+1	;volatile
 16081  00B1C8  0E04               	movlw	4
 16082  00B1CA  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 16083  00B1CC  0EBE               	movlw	low display_prepare@temp
 16084  00B1CE  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 16085  00B1D0  0E00               	movlw	high display_prepare@temp
 16086  00B1D2  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 16087  00B1D4  EC02  F080         	call	__display_padded_itoa	;wreg free
 16088                           
 16089                           ;display.c: 306: for(cntr=0; cntr<4; ++cntr)
 16090  00B1D8  0E00               	movlw	0
 16091  00B1DA  0100               	movlb	0	; () banked
 16092  00B1DC  6FC9               	movwf	display_prepare@cntr& (0+255),b
 16093  00B1DE                     l21296:
 16094                           
 16095                           ; BSR set to: 0
 16096  00B1DE  0E03               	movlw	3
 16097  00B1E0  65C9               	cpfsgt	display_prepare@cntr& (0+255),b
 16098  00B1E2  D001               	goto	l1350
 16099  00B1E4  D01E               	goto	l1352
 16100  00B1E6                     l1350:
 16101                           
 16102                           ; BSR set to: 0
 16103                           ;display.c: 307: {;display.c: 308: display_content[3][cntr] = temp[cntr];
 16104                           
 16105                           ; BSR set to: 0
 16106  00B1E6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16107  00B1E8  0D01               	mullw	1
 16108  00B1EA  0EBE               	movlw	low display_prepare@temp
 16109  00B1EC  24F3               	addwf	prodl,w,c
 16110  00B1EE  6ED9               	movwf	fsr2l,c
 16111  00B1F0  0E00               	movlw	high display_prepare@temp
 16112  00B1F2  20F4               	addwfc	prodh,w,c
 16113  00B1F4  6EDA               	movwf	fsr2h,c
 16114  00B1F6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16115  00B1F8  0D01               	mullw	1
 16116  00B1FA  0EB4               	movlw	low (_display_content+60)
 16117  00B1FC  24F3               	addwf	prodl,w,c
 16118  00B1FE  6EE1               	movwf	fsr1l,c
 16119  00B200  0E02               	movlw	high (_display_content+60)
 16120  00B202  20F4               	addwfc	prodh,w,c
 16121  00B204  6EE2               	movwf	fsr1h,c
 16122  00B206  CFDF FFE7          	movff	indf2,indf1
 16123                           
 16124                           ; BSR set to: 0
 16125  00B20A  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 16126  00B20C  D7E8               	goto	l21296
 16127  00B20E                     
 16128                           ; BSR set to: 0
 16129                           ;display.c: 313: display_content[2][12] = '>';
 16130                           
 16131                           ; BSR set to: 0
 16132  00B20E  0E3E               	movlw	62
 16133  00B210  0102               	movlb	2	; () banked
 16134  00B212  6FAC               	movwf	(_display_content+52)& (0+255),b
 16135                           
 16136                           ;display.c: 314: break;
 16137  00B214  EF1D  F05E         	goto	l1331
 16138  00B218                     
 16139                           ;display.c: 316: display_content[3][12] = '>';
 16140                           
 16141                           ; BSR set to: 2
 16142  00B218  0E3E               	movlw	62
 16143  00B21A  0102               	movlb	2	; () banked
 16144  00B21C  6FC0               	movwf	(_display_content+72)& (0+255),b
 16145                           
 16146                           ; BSR set to: 2
 16147                           ;display.c: 318: }
 16148                           
 16149                           ;display.c: 317: break;
 16150  00B21E  EF1D  F05E         	goto	l1331
 16151  00B222                     l1352:
 16152                           
 16153                           ; BSR set to: 2
 16154  00B222  0100               	movlb	0	; () banked
 16155  00B224  51E0               	movf	(_os+13)& (0+255),w,b	;volatile
 16156                           
 16157                           ; Switch size 1, requested type "space"
 16158                           ; Number of cases is 2, Range of values is 49 to 50
 16159                           ; switch strategies available:
 16160                           ; Name         Instructions Cycles
 16161                           ; simple_byte            7     4 (average)
 16162                           ;	Chosen strategy is simple_byte
 16163  00B226  0A31               	xorlw	49	; case 49
 16164  00B228                     L25:
 16165  00B228  B4D8               	btfsc	status,2,c
 16166  00B22A  D7F1               	goto	l1353
 16167  00B22C  0A03               	xorlw	3	; case 50
 16168  00B22E  B4D8               	btfsc	status,2,c
 16169  00B230  D7F3               	goto	l1355
 16170                           
 16171                           ; BSR set to: 0
 16172                           ;display.c: 319: break;
 16173  00B232  EF1D  F05E         	goto	l1331
 16174  00B236                     
 16175                           ; BSR set to: 0
 16176                           ;display.c: 322: memcpy(display_content, dc_divide2, sizeof display_content);
 16177                           
 16178                           ; BSR set to: 0
 16179  00B236  0E78               	movlw	low _display_content
 16180  00B238  6F60               	movwf	memcpy@d1& (0+255),b
 16181  00B23A  0E02               	movlw	high _display_content
 16182  00B23C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 16183  00B23E  0E2E               	movlw	low _dc_divide2
 16184  00B240  6F62               	movwf	memcpy@s1& (0+255),b
 16185  00B242  0E9F               	movlw	high _dc_divide2
 16186  00B244  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 16187  00B246  0E00               	movlw	0
 16188  00B248  6F65               	movwf	(memcpy@n+1)& (0+255),b
 16189  00B24A  0E50               	movlw	80
 16190  00B24C  6F64               	movwf	memcpy@n& (0+255),b
 16191  00B24E  EC35  F08D         	call	_memcpy	;wreg free
 16192                           
 16193                           ;display.c: 324: _display_padded_itoa(os.division, 0, temp);
 16194  00B252  C0E6  F078         	movff	_os+19,__display_padded_itoa@value	;volatile
 16195  00B256  C0E7  F079         	movff	_os+20,__display_padded_itoa@value+1	;volatile
 16196  00B25A  0E00               	movlw	0
 16197  00B25C  0100               	movlb	0	; () banked
 16198  00B25E  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 16199  00B260  0EBE               	movlw	low display_prepare@temp
 16200  00B262  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 16201  00B264  0E00               	movlw	high display_prepare@temp
 16202  00B266  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 16203  00B268  EC02  F080         	call	__display_padded_itoa	;wreg free
 16204                           
 16205                           ;display.c: 325: for(cntr=0; temp[cntr]; ++cntr)
 16206  00B26C  0E00               	movlw	0
 16207  00B26E  0100               	movlb	0	; () banked
 16208  00B270  6FC9               	movwf	display_prepare@cntr& (0+255),b
 16209  00B272  D018               	goto	l1357
 16210  00B274                     
 16211                           ; BSR set to: 0
 16212                           ;display.c: 326: {;display.c: 327: display_content[0][cntr+8] = temp[cntr];
 16213                           
 16214                           ; BSR set to: 0
 16215  00B274  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16216  00B276  0D01               	mullw	1
 16217  00B278  0EBE               	movlw	low display_prepare@temp
 16218  00B27A  24F3               	addwf	prodl,w,c
 16219  00B27C  6ED9               	movwf	fsr2l,c
 16220  00B27E  0E00               	movlw	high display_prepare@temp
 16221  00B280  20F4               	addwfc	prodh,w,c
 16222  00B282  6EDA               	movwf	fsr2h,c
 16223  00B284  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16224  00B286  6FBC               	movwf	??_display_prepare& (0+255),b
 16225  00B288  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 16226  00B28A  0E08               	movlw	8
 16227  00B28C  27BC               	addwf	??_display_prepare& (0+255),f,b
 16228  00B28E  0E00               	movlw	0
 16229  00B290  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 16230  00B292  0E78               	movlw	low _display_content
 16231  00B294  25BC               	addwf	??_display_prepare& (0+255),w,b
 16232  00B296  6EE1               	movwf	fsr1l,c
 16233  00B298  0E02               	movlw	high _display_content
 16234  00B29A  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 16235  00B29C  6EE2               	movwf	fsr1h,c
 16236  00B29E  CFDF FFE7          	movff	indf2,indf1
 16237                           
 16238                           ; BSR set to: 0
 16239  00B2A2  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 16240  00B2A4                     l1357:
 16241                           
 16242                           ; BSR set to: 0
 16243                           
 16244                           ; BSR set to: 0
 16245  00B2A4  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16246  00B2A6  0D01               	mullw	1
 16247  00B2A8  0EBE               	movlw	low display_prepare@temp
 16248  00B2AA  24F3               	addwf	prodl,w,c
 16249  00B2AC  6ED9               	movwf	fsr2l,c
 16250  00B2AE  0E00               	movlw	high display_prepare@temp
 16251  00B2B0  20F4               	addwfc	prodh,w,c
 16252  00B2B2  6EDA               	movwf	fsr2h,c
 16253  00B2B4  50DF               	movf	indf2,w,c
 16254  00B2B6  A4D8               	btfss	status,2,c
 16255  00B2B8  D7DD               	goto	l1358
 16256                           
 16257                           ; BSR set to: 0
 16258                           ;display.c: 328: };display.c: 330: display_content[0][cntr+8] = ',';
 16259                           
 16260                           ; BSR set to: 0
 16261  00B2BA  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16262  00B2BC  6FBC               	movwf	??_display_prepare& (0+255),b
 16263  00B2BE  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 16264  00B2C0  0E08               	movlw	8
 16265  00B2C2  27BC               	addwf	??_display_prepare& (0+255),f,b
 16266  00B2C4  0E00               	movlw	0
 16267  00B2C6  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 16268  00B2C8  0E78               	movlw	low _display_content
 16269  00B2CA  25BC               	addwf	??_display_prepare& (0+255),w,b
 16270  00B2CC  6ED9               	movwf	fsr2l,c
 16271  00B2CE  0E02               	movlw	high _display_content
 16272  00B2D0  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 16273  00B2D2  6EDA               	movwf	fsr2h,c
 16274  00B2D4  0E2C               	movlw	44
 16275  00B2D6  6EDF               	movwf	indf2,c
 16276                           
 16277                           ; BSR set to: 0
 16278                           ;display.c: 331: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 16279  00B2D8  29E5               	incf	(_os+18)& (0+255),w,b	;volatile
 16280  00B2DA  A4D8               	btfss	status,2,c
 16281  00B2DC  D023               	goto	l1360
 16282                           
 16283                           ; BSR set to: 0
 16284                           ;display.c: 332: {;display.c: 333: display_content[0][cntr+10] = 'C';
 16285  00B2DE  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16286  00B2E0  6FBC               	movwf	??_display_prepare& (0+255),b
 16287  00B2E2  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 16288  00B2E4  0E0A               	movlw	10
 16289  00B2E6  27BC               	addwf	??_display_prepare& (0+255),f,b
 16290  00B2E8  0E00               	movlw	0
 16291  00B2EA  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 16292  00B2EC  0E78               	movlw	low _display_content
 16293  00B2EE  25BC               	addwf	??_display_prepare& (0+255),w,b
 16294  00B2F0  6ED9               	movwf	fsr2l,c
 16295  00B2F2  0E02               	movlw	high _display_content
 16296  00B2F4  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 16297  00B2F6  6EDA               	movwf	fsr2h,c
 16298  00B2F8  0E43               	movlw	67
 16299  00B2FA  6EDF               	movwf	indf2,c
 16300                           
 16301                           ;display.c: 334: display_content[0][cntr+11] = 'C';
 16302  00B2FC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16303  00B2FE  6FBC               	movwf	??_display_prepare& (0+255),b
 16304  00B300  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 16305  00B302  0E0B               	movlw	11
 16306  00B304  27BC               	addwf	??_display_prepare& (0+255),f,b
 16307  00B306  0E00               	movlw	0
 16308  00B308  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 16309  00B30A  0E78               	movlw	low _display_content
 16310  00B30C  25BC               	addwf	??_display_prepare& (0+255),w,b
 16311  00B30E  6ED9               	movwf	fsr2l,c
 16312  00B310  0E02               	movlw	high _display_content
 16313  00B312  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 16314  00B314  6EDA               	movwf	fsr2h,c
 16315  00B316  0E43               	movlw	67
 16316  00B318  6EDF               	movwf	indf2,c
 16317                           
 16318                           ;display.c: 335: display_content[0][cntr+12] = 'W';
 16319  00B31A  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16320  00B31C  6FBC               	movwf	??_display_prepare& (0+255),b
 16321  00B31E  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 16322  00B320  0E0C               	movlw	12
 16323  00B322  D013               	goto	L26
 16324  00B324                     l1360:
 16325                           
 16326                           ; BSR set to: 0
 16327                           ;display.c: 337: else;display.c: 338: {;display.c: 339: display_content[0][cntr+10] = 'C
      +                          ';
 16328                           
 16329                           ; BSR set to: 0
 16330  00B324  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16331  00B326  6FBC               	movwf	??_display_prepare& (0+255),b
 16332  00B328  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 16333  00B32A  0E0A               	movlw	10
 16334  00B32C  27BC               	addwf	??_display_prepare& (0+255),f,b
 16335  00B32E  0E00               	movlw	0
 16336  00B330  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 16337  00B332  0E78               	movlw	low _display_content
 16338  00B334  25BC               	addwf	??_display_prepare& (0+255),w,b
 16339  00B336  6ED9               	movwf	fsr2l,c
 16340  00B338  0E02               	movlw	high _display_content
 16341  00B33A  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 16342  00B33C  6EDA               	movwf	fsr2h,c
 16343  00B33E  0E43               	movlw	67
 16344  00B340  6EDF               	movwf	indf2,c
 16345                           
 16346                           ;display.c: 340: display_content[0][cntr+11] = 'W';
 16347  00B342  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16348  00B344  6FBC               	movwf	??_display_prepare& (0+255),b
 16349  00B346  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 16350  00B348  0E0B               	movlw	11
 16351  00B34A                     L26:
 16352  00B34A  27BC               	addwf	??_display_prepare& (0+255),f,b
 16353  00B34C  0E00               	movlw	0
 16354  00B34E  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 16355  00B350  0E78               	movlw	low _display_content
 16356  00B352  25BC               	addwf	??_display_prepare& (0+255),w,b
 16357  00B354  6ED9               	movwf	fsr2l,c
 16358  00B356  0E02               	movlw	high _display_content
 16359  00B358  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 16360  00B35A  6EDA               	movwf	fsr2h,c
 16361  00B35C  0E57               	movlw	87
 16362  00B35E  6EDF               	movwf	indf2,c
 16363                           
 16364                           ; BSR set to: 0
 16365                           ;display.c: 341: };display.c: 343: _display_padded_itoa(os.divide_position, 0, temp);
 16366                           
 16367                           ; BSR set to: 0
 16368  00B360  C0E9  F078         	movff	_os+22,__display_padded_itoa@value	;volatile
 16369  00B364  C0EA  F079         	movff	_os+23,__display_padded_itoa@value+1	;volatile
 16370  00B368  0E00               	movlw	0
 16371  00B36A  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 16372  00B36C  0EBE               	movlw	low display_prepare@temp
 16373  00B36E  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 16374  00B370  0E00               	movlw	high display_prepare@temp
 16375  00B372  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 16376  00B374  EC02  F080         	call	__display_padded_itoa	;wreg free
 16377                           
 16378                           ;display.c: 344: for(cntr=0; temp[cntr]; ++cntr)
 16379  00B378  0E00               	movlw	0
 16380  00B37A  0100               	movlb	0	; () banked
 16381  00B37C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 16382  00B37E  D018               	goto	l1362
 16383  00B380                     
 16384                           ; BSR set to: 0
 16385                           ;display.c: 345: {;display.c: 346: display_content[1][cntr+5] = temp[cntr];
 16386                           
 16387                           ; BSR set to: 0
 16388  00B380  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16389  00B382  0D01               	mullw	1
 16390  00B384  0EBE               	movlw	low display_prepare@temp
 16391  00B386  24F3               	addwf	prodl,w,c
 16392  00B388  6ED9               	movwf	fsr2l,c
 16393  00B38A  0E00               	movlw	high display_prepare@temp
 16394  00B38C  20F4               	addwfc	prodh,w,c
 16395  00B38E  6EDA               	movwf	fsr2h,c
 16396  00B390  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16397  00B392  6FBC               	movwf	??_display_prepare& (0+255),b
 16398  00B394  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 16399  00B396  0E05               	movlw	5
 16400  00B398  27BC               	addwf	??_display_prepare& (0+255),f,b
 16401  00B39A  0E00               	movlw	0
 16402  00B39C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 16403  00B39E  0E8C               	movlw	low (_display_content+20)
 16404  00B3A0  25BC               	addwf	??_display_prepare& (0+255),w,b
 16405  00B3A2  6EE1               	movwf	fsr1l,c
 16406  00B3A4  0E02               	movlw	high (_display_content+20)
 16407  00B3A6  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 16408  00B3A8  6EE2               	movwf	fsr1h,c
 16409  00B3AA  CFDF FFE7          	movff	indf2,indf1
 16410                           
 16411                           ; BSR set to: 0
 16412  00B3AE  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 16413  00B3B0                     l1362:
 16414                           
 16415                           ; BSR set to: 0
 16416                           
 16417                           ; BSR set to: 0
 16418  00B3B0  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16419  00B3B2  0D01               	mullw	1
 16420  00B3B4  0EBE               	movlw	low display_prepare@temp
 16421  00B3B6  24F3               	addwf	prodl,w,c
 16422  00B3B8  6ED9               	movwf	fsr2l,c
 16423  00B3BA  0E00               	movlw	high display_prepare@temp
 16424  00B3BC  20F4               	addwfc	prodh,w,c
 16425  00B3BE  6EDA               	movwf	fsr2h,c
 16426  00B3C0  50DF               	movf	indf2,w,c
 16427  00B3C2  A4D8               	btfss	status,2,c
 16428  00B3C4  D7DD               	goto	l1363
 16429                           
 16430                           ; BSR set to: 0
 16431                           ;display.c: 347: };display.c: 349: display_content[1][cntr+6] = '(';
 16432                           
 16433                           ; BSR set to: 0
 16434  00B3C6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16435  00B3C8  6FBC               	movwf	??_display_prepare& (0+255),b
 16436  00B3CA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 16437  00B3CC  0E06               	movlw	6
 16438  00B3CE  27BC               	addwf	??_display_prepare& (0+255),f,b
 16439  00B3D0  0E00               	movlw	0
 16440  00B3D2  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 16441  00B3D4  0E8C               	movlw	low (_display_content+20)
 16442  00B3D6  25BC               	addwf	??_display_prepare& (0+255),w,b
 16443  00B3D8  6ED9               	movwf	fsr2l,c
 16444  00B3DA  0E02               	movlw	high (_display_content+20)
 16445  00B3DC  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 16446  00B3DE  6EDA               	movwf	fsr2h,c
 16447  00B3E0  0E28               	movlw	40
 16448  00B3E2  6EDF               	movwf	indf2,c
 16449                           
 16450                           ; BSR set to: 0
 16451                           ;display.c: 350: space = cntr + 7;
 16452  00B3E4  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16453  00B3E6  0F07               	addlw	7
 16454  00B3E8  6FC8               	movwf	display_prepare@space& (0+255),b
 16455                           
 16456                           ; BSR set to: 0
 16457                           ;display.c: 351: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 16458  00B3EA  C0DE  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 16459  00B3EE  C0DF  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 16460  00B3F2  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 16461  00B3F4  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 16462  00B3F6  0E02               	movlw	2
 16463  00B3F8  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 16464  00B3FA  0EBE               	movlw	low display_prepare@temp
 16465  00B3FC  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 16466  00B3FE  0E00               	movlw	high display_prepare@temp
 16467  00B400  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 16468  00B402  ECF1  F07A         	call	__display_itoa_long	;wreg free
 16469                           
 16470                           ;display.c: 352: for(cntr=0; temp[cntr]; ++cntr)
 16471  00B406  0E00               	movlw	0
 16472  00B408  0100               	movlb	0	; () banked
 16473  00B40A  6FC9               	movwf	display_prepare@cntr& (0+255),b
 16474  00B40C  D018               	goto	l1365
 16475  00B40E                     
 16476                           ; BSR set to: 0
 16477                           ;display.c: 353: {;display.c: 354: display_content[1][cntr+space] = temp[cntr];
 16478                           
 16479                           ; BSR set to: 0
 16480  00B40E  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16481  00B410  0D01               	mullw	1
 16482  00B412  0EBE               	movlw	low display_prepare@temp
 16483  00B414  24F3               	addwf	prodl,w,c
 16484  00B416  6ED9               	movwf	fsr2l,c
 16485  00B418  0E00               	movlw	high display_prepare@temp
 16486  00B41A  20F4               	addwfc	prodh,w,c
 16487  00B41C  6EDA               	movwf	fsr2h,c
 16488  00B41E  51C8               	movf	display_prepare@space& (0+255),w,b
 16489  00B420  C0C9  F0BC         	movff	display_prepare@cntr,??_display_prepare
 16490  00B424  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 16491  00B426  27BC               	addwf	??_display_prepare& (0+255),f,b
 16492  00B428  0E00               	movlw	0
 16493  00B42A  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 16494  00B42C  0E8C               	movlw	low (_display_content+20)
 16495  00B42E  25BC               	addwf	??_display_prepare& (0+255),w,b
 16496  00B430  6EE1               	movwf	fsr1l,c
 16497  00B432  0E02               	movlw	high (_display_content+20)
 16498  00B434  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 16499  00B436  6EE2               	movwf	fsr1h,c
 16500  00B438  CFDF FFE7          	movff	indf2,indf1
 16501                           
 16502                           ; BSR set to: 0
 16503  00B43C  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 16504  00B43E                     l1365:
 16505                           
 16506                           ; BSR set to: 0
 16507                           
 16508                           ; BSR set to: 0
 16509  00B43E  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16510  00B440  0D01               	mullw	1
 16511  00B442  0EBE               	movlw	low display_prepare@temp
 16512  00B444  24F3               	addwf	prodl,w,c
 16513  00B446  6ED9               	movwf	fsr2l,c
 16514  00B448  0E00               	movlw	high display_prepare@temp
 16515  00B44A  20F4               	addwfc	prodh,w,c
 16516  00B44C  6EDA               	movwf	fsr2h,c
 16517  00B44E  50DF               	movf	indf2,w,c
 16518  00B450  A4D8               	btfss	status,2,c
 16519  00B452  D7DD               	goto	l1366
 16520                           
 16521                           ; BSR set to: 0
 16522                           ;display.c: 355: };display.c: 356: display_content[1][cntr+space] = 0x01;
 16523                           
 16524                           ; BSR set to: 0
 16525  00B454  51C8               	movf	display_prepare@space& (0+255),w,b
 16526  00B456  C0C9  F0BC         	movff	display_prepare@cntr,??_display_prepare
 16527  00B45A  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 16528  00B45C  27BC               	addwf	??_display_prepare& (0+255),f,b
 16529  00B45E  0E00               	movlw	0
 16530  00B460  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 16531  00B462  0E8C               	movlw	low (_display_content+20)
 16532  00B464  25BC               	addwf	??_display_prepare& (0+255),w,b
 16533  00B466  6ED9               	movwf	fsr2l,c
 16534  00B468  0E02               	movlw	high (_display_content+20)
 16535  00B46A  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 16536  00B46C  6EDA               	movwf	fsr2h,c
 16537  00B46E  0E01               	movlw	1
 16538  00B470  6EDF               	movwf	indf2,c
 16539                           
 16540                           ;display.c: 357: display_content[1][cntr+space+1] = ')';
 16541  00B472  51C8               	movf	display_prepare@space& (0+255),w,b
 16542  00B474  C0C9  F0BC         	movff	display_prepare@cntr,??_display_prepare
 16543  00B478  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 16544  00B47A  27BC               	addwf	??_display_prepare& (0+255),f,b
 16545  00B47C  0E00               	movlw	0
 16546  00B47E  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 16547  00B480  0E01               	movlw	1
 16548  00B482  27BC               	addwf	??_display_prepare& (0+255),f,b
 16549  00B484  0E00               	movlw	0
 16550  00B486  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 16551  00B488  0E8C               	movlw	low (_display_content+20)
 16552  00B48A  25BC               	addwf	??_display_prepare& (0+255),w,b
 16553  00B48C  6ED9               	movwf	fsr2l,c
 16554  00B48E  0E02               	movlw	high (_display_content+20)
 16555  00B490  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 16556  00B492  6EDA               	movwf	fsr2h,c
 16557  00B494  0E29               	movlw	41
 16558  00B496  6EDF               	movwf	indf2,c
 16559                           
 16560                           ; BSR set to: 0
 16561                           ;display.c: 359: _display_signed_itoa(os.divide_jump_size, temp);
 16562  00B498  C0EB  F08F         	movff	_os+24,__display_signed_itoa@value	;volatile
 16563  00B49C  C0EC  F090         	movff	_os+25,__display_signed_itoa@value+1	;volatile
 16564  00B4A0  0EBE               	movlw	low display_prepare@temp
 16565  00B4A2  6F91               	movwf	__display_signed_itoa@text& (0+255),b
 16566  00B4A4  0E00               	movlw	high display_prepare@temp
 16567  00B4A6  6F92               	movwf	(__display_signed_itoa@text+1)& (0+255),b
 16568  00B4A8  ECAD  F090         	call	__display_signed_itoa	;wreg free
 16569                           
 16570                           ;display.c: 360: for(cntr=0; temp[cntr]; ++cntr)
 16571  00B4AC  0E00               	movlw	0
 16572  00B4AE  0100               	movlb	0	; () banked
 16573  00B4B0  6FC9               	movwf	display_prepare@cntr& (0+255),b
 16574  00B4B2  D018               	goto	l1368
 16575  00B4B4                     
 16576                           ; BSR set to: 0
 16577                           ;display.c: 361: {;display.c: 362: display_content[2][cntr+11] = temp[cntr];
 16578                           
 16579                           ; BSR set to: 0
 16580  00B4B4  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16581  00B4B6  0D01               	mullw	1
 16582  00B4B8  0EBE               	movlw	low display_prepare@temp
 16583  00B4BA  24F3               	addwf	prodl,w,c
 16584  00B4BC  6ED9               	movwf	fsr2l,c
 16585  00B4BE  0E00               	movlw	high display_prepare@temp
 16586  00B4C0  20F4               	addwfc	prodh,w,c
 16587  00B4C2  6EDA               	movwf	fsr2h,c
 16588  00B4C4  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16589  00B4C6  6FBC               	movwf	??_display_prepare& (0+255),b
 16590  00B4C8  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 16591  00B4CA  0E0B               	movlw	11
 16592  00B4CC  27BC               	addwf	??_display_prepare& (0+255),f,b
 16593  00B4CE  0E00               	movlw	0
 16594  00B4D0  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 16595  00B4D2  0EA0               	movlw	low (_display_content+40)
 16596  00B4D4  25BC               	addwf	??_display_prepare& (0+255),w,b
 16597  00B4D6  6EE1               	movwf	fsr1l,c
 16598  00B4D8  0E02               	movlw	high (_display_content+40)
 16599  00B4DA  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 16600  00B4DC  6EE2               	movwf	fsr1h,c
 16601  00B4DE  CFDF FFE7          	movff	indf2,indf1
 16602                           
 16603                           ; BSR set to: 0
 16604  00B4E2  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 16605  00B4E4                     l1368:
 16606                           
 16607                           ; BSR set to: 0
 16608                           
 16609                           ; BSR set to: 0
 16610  00B4E4  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16611  00B4E6  0D01               	mullw	1
 16612  00B4E8  0EBE               	movlw	low display_prepare@temp
 16613  00B4EA  24F3               	addwf	prodl,w,c
 16614  00B4EC  6ED9               	movwf	fsr2l,c
 16615  00B4EE  0E00               	movlw	high display_prepare@temp
 16616  00B4F0  20F4               	addwfc	prodh,w,c
 16617  00B4F2  6EDA               	movwf	fsr2h,c
 16618  00B4F4  50DF               	movf	indf2,w,c
 16619  00B4F6  B4D8               	btfsc	status,2,c
 16620  00B4F8  D3A0               	goto	l1331
 16621  00B4FA  D7DC               	goto	l1369
 16622  00B4FC                     
 16623                           ; BSR set to: 0
 16624                           ;display.c: 367: memcpy(display_content, dc_arc1, sizeof display_content);
 16625                           
 16626                           ; BSR set to: 0
 16627  00B4FC  0E78               	movlw	low _display_content
 16628  00B4FE  6F60               	movwf	memcpy@d1& (0+255),b
 16629  00B500  0E02               	movlw	high _display_content
 16630  00B502  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 16631  00B504  0EDE               	movlw	low _dc_arc1
 16632  00B506  6F62               	movwf	memcpy@s1& (0+255),b
 16633  00B508  0E9E               	movlw	high _dc_arc1
 16634  00B50A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 16635  00B50C  0E00               	movlw	0
 16636  00B50E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 16637  00B510  0E50               	movlw	80
 16638  00B512  6F64               	movwf	memcpy@n& (0+255),b
 16639  00B514  EC35  F08D         	call	_memcpy	;wreg free
 16640                           
 16641                           ;display.c: 368: switch(os.displayState)
 16642  00B518  D008               	goto	l1372
 16643  00B51A                     
 16644                           ;display.c: 371: display_content[2][12] = '>';
 16645  00B51A  0E3E               	movlw	62
 16646  00B51C  0102               	movlb	2	; () banked
 16647  00B51E  6FAC               	movwf	(_display_content+52)& (0+255),b
 16648                           
 16649                           ;display.c: 372: break;
 16650  00B520  D00C               	goto	l1374
 16651  00B522                     
 16652                           ;display.c: 374: display_content[3][12] = '>';
 16653                           
 16654                           ; BSR set to: 2
 16655  00B522  0E3E               	movlw	62
 16656  00B524  0102               	movlb	2	; () banked
 16657  00B526  6FC0               	movwf	(_display_content+72)& (0+255),b
 16658                           
 16659                           ; BSR set to: 2
 16660                           ;display.c: 376: }
 16661                           
 16662                           ;display.c: 375: break;
 16663  00B528  D008               	goto	l1374
 16664  00B52A                     l1372:
 16665                           
 16666                           ; BSR set to: 2
 16667  00B52A  0100               	movlb	0	; () banked
 16668  00B52C  51E0               	movf	(_os+13)& (0+255),w,b	;volatile
 16669                           
 16670                           ; Switch size 1, requested type "space"
 16671                           ; Number of cases is 2, Range of values is 81 to 82
 16672                           ; switch strategies available:
 16673                           ; Name         Instructions Cycles
 16674                           ; simple_byte            7     4 (average)
 16675                           ;	Chosen strategy is simple_byte
 16676  00B52E  0A51               	xorlw	81	; case 81
 16677  00B530  B4D8               	btfsc	status,2,c
 16678  00B532  D7F3               	goto	l1373
 16679  00B534  0A03               	xorlw	3	; case 82
 16680  00B536  B4D8               	btfsc	status,2,c
 16681  00B538  D7F4               	goto	l1375
 16682  00B53A                     l1374:
 16683                           
 16684                           ;display.c: 379: _display_itoa_long(os.arc_size, 2, temp);
 16685                           
 16686                           ; BSR set to: 0
 16687  00B53A  C0EF  F0AD         	movff	_os+28,__display_itoa_long@value	;volatile
 16688  00B53E  C0F0  F0AE         	movff	_os+29,__display_itoa_long@value+1	;volatile
 16689  00B542  C0F1  F0AF         	movff	_os+30,__display_itoa_long@value+2	;volatile
 16690  00B546  C0F2  F0B0         	movff	_os+31,__display_itoa_long@value+3	;volatile
 16691  00B54A  0E02               	movlw	2
 16692  00B54C  0100               	movlb	0	; () banked
 16693  00B54E  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 16694  00B550  0EBE               	movlw	low display_prepare@temp
 16695  00B552  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 16696  00B554  0E00               	movlw	high display_prepare@temp
 16697  00B556  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 16698  00B558  ECF1  F07A         	call	__display_itoa_long	;wreg free
 16699                           
 16700                           ;display.c: 380: for(cntr=0; temp[cntr]; ++cntr)
 16701  00B55C  0E00               	movlw	0
 16702  00B55E  0100               	movlb	0	; () banked
 16703  00B560  6FC9               	movwf	display_prepare@cntr& (0+255),b
 16704  00B562  D018               	goto	l1376
 16705  00B564                     
 16706                           ; BSR set to: 0
 16707                           ;display.c: 381: {;display.c: 382: display_content[1][10+cntr] = temp[cntr];
 16708                           
 16709                           ; BSR set to: 0
 16710  00B564  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16711  00B566  0D01               	mullw	1
 16712  00B568  0EBE               	movlw	low display_prepare@temp
 16713  00B56A  24F3               	addwf	prodl,w,c
 16714  00B56C  6ED9               	movwf	fsr2l,c
 16715  00B56E  0E00               	movlw	high display_prepare@temp
 16716  00B570  20F4               	addwfc	prodh,w,c
 16717  00B572  6EDA               	movwf	fsr2h,c
 16718  00B574  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16719  00B576  6FBC               	movwf	??_display_prepare& (0+255),b
 16720  00B578  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 16721  00B57A  0E0A               	movlw	10
 16722  00B57C  27BC               	addwf	??_display_prepare& (0+255),f,b
 16723  00B57E  0E00               	movlw	0
 16724  00B580  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 16725  00B582  0E8C               	movlw	low (_display_content+20)
 16726  00B584  25BC               	addwf	??_display_prepare& (0+255),w,b
 16727  00B586  6EE1               	movwf	fsr1l,c
 16728  00B588  0E02               	movlw	high (_display_content+20)
 16729  00B58A  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 16730  00B58C  6EE2               	movwf	fsr1h,c
 16731  00B58E  CFDF FFE7          	movff	indf2,indf1
 16732                           
 16733                           ; BSR set to: 0
 16734  00B592  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 16735  00B594                     l1376:
 16736                           
 16737                           ; BSR set to: 0
 16738                           
 16739                           ; BSR set to: 0
 16740  00B594  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16741  00B596  0D01               	mullw	1
 16742  00B598  0EBE               	movlw	low display_prepare@temp
 16743  00B59A  24F3               	addwf	prodl,w,c
 16744  00B59C  6ED9               	movwf	fsr2l,c
 16745  00B59E  0E00               	movlw	high display_prepare@temp
 16746  00B5A0  20F4               	addwfc	prodh,w,c
 16747  00B5A2  6EDA               	movwf	fsr2h,c
 16748  00B5A4  50DF               	movf	indf2,w,c
 16749  00B5A6  A4D8               	btfss	status,2,c
 16750  00B5A8  D7DD               	goto	l1377
 16751                           
 16752                           ; BSR set to: 0
 16753                           ;display.c: 383: };display.c: 384: display_content[1][10+cntr] = 0x01;
 16754                           
 16755                           ; BSR set to: 0
 16756  00B5AA  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16757  00B5AC  6FBC               	movwf	??_display_prepare& (0+255),b
 16758  00B5AE  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 16759  00B5B0  0E0A               	movlw	10
 16760  00B5B2  27BC               	addwf	??_display_prepare& (0+255),f,b
 16761  00B5B4  0E00               	movlw	0
 16762  00B5B6  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 16763  00B5B8  0E8C               	movlw	low (_display_content+20)
 16764  00B5BA  25BC               	addwf	??_display_prepare& (0+255),w,b
 16765  00B5BC  6ED9               	movwf	fsr2l,c
 16766  00B5BE  0E02               	movlw	high (_display_content+20)
 16767  00B5C0  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 16768  00B5C2  6EDA               	movwf	fsr2h,c
 16769  00B5C4  0E01               	movlw	1
 16770  00B5C6  6EDF               	movwf	indf2,c
 16771                           
 16772                           ; BSR set to: 0
 16773                           ;display.c: 387: _display_itoa(os.arc_step_size, 2, temp);
 16774  00B5C8  C0ED  F095         	movff	_os+26,__display_itoa@value	;volatile
 16775  00B5CC  C0EE  F096         	movff	_os+27,__display_itoa@value+1	;volatile
 16776  00B5D0  0E02               	movlw	2
 16777  00B5D2  6F97               	movwf	__display_itoa@decimals& (0+255),b
 16778  00B5D4  0EBE               	movlw	low display_prepare@temp
 16779  00B5D6  6F98               	movwf	__display_itoa@text& (0+255),b
 16780  00B5D8  0E00               	movlw	high display_prepare@temp
 16781  00B5DA  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 16782  00B5DC  EC74  F06C         	call	__display_itoa	;wreg free
 16783                           
 16784                           ;display.c: 388: if(os.arc_step_size>999)
 16785  00B5E0  0EE8               	movlw	232
 16786  00B5E2  0100               	movlb	0	; () banked
 16787  00B5E4  5DED               	subwf	(_os+26)& (0+255),w,b	;volatile
 16788  00B5E6  0E03               	movlw	3
 16789  00B5E8  59EE               	subwfb	(_os+27)& (0+255),w,b	;volatile
 16790  00B5EA  A0D8               	btfss	status,0,c
 16791  00B5EC  D002               	goto	l1379
 16792                           
 16793                           ; BSR set to: 0
 16794                           ;display.c: 389: space = 0;
 16795  00B5EE  0E00               	movlw	0
 16796  00B5F0  D001               	goto	L20
 16797  00B5F2                     l1379:
 16798                           
 16799                           ; BSR set to: 0
 16800                           ;display.c: 390: else;display.c: 391: space = 1;
 16801                           
 16802                           ; BSR set to: 0
 16803  00B5F2  0E01               	movlw	1
 16804  00B5F4                     L20:
 16805  00B5F4  6FC8               	movwf	display_prepare@space& (0+255),b
 16806                           
 16807                           ; BSR set to: 0
 16808                           ;display.c: 392: for(cntr=0; temp[cntr]; ++cntr)
 16809  00B5F6  0E00               	movlw	0
 16810  00B5F8  6FC9               	movwf	display_prepare@cntr& (0+255),b
 16811  00B5FA  D018               	goto	l1381
 16812  00B5FC                     
 16813                           ; BSR set to: 0
 16814                           ;display.c: 393: {;display.c: 394: display_content[3][space+cntr] = temp[cntr];
 16815                           
 16816                           ; BSR set to: 0
 16817  00B5FC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16818  00B5FE  0D01               	mullw	1
 16819  00B600  0EBE               	movlw	low display_prepare@temp
 16820  00B602  24F3               	addwf	prodl,w,c
 16821  00B604  6ED9               	movwf	fsr2l,c
 16822  00B606  0E00               	movlw	high display_prepare@temp
 16823  00B608  20F4               	addwfc	prodh,w,c
 16824  00B60A  6EDA               	movwf	fsr2h,c
 16825  00B60C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16826  00B60E  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 16827  00B612  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 16828  00B614  27BC               	addwf	??_display_prepare& (0+255),f,b
 16829  00B616  0E00               	movlw	0
 16830  00B618  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 16831  00B61A  0EB4               	movlw	low (_display_content+60)
 16832  00B61C  25BC               	addwf	??_display_prepare& (0+255),w,b
 16833  00B61E  6EE1               	movwf	fsr1l,c
 16834  00B620  0E02               	movlw	high (_display_content+60)
 16835  00B622  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 16836  00B624  6EE2               	movwf	fsr1h,c
 16837  00B626  CFDF FFE7          	movff	indf2,indf1
 16838                           
 16839                           ; BSR set to: 0
 16840  00B62A  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 16841  00B62C                     l1381:
 16842                           
 16843                           ; BSR set to: 0
 16844                           
 16845                           ; BSR set to: 0
 16846  00B62C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16847  00B62E  0D01               	mullw	1
 16848  00B630  0EBE               	movlw	low display_prepare@temp
 16849  00B632  24F3               	addwf	prodl,w,c
 16850  00B634  6ED9               	movwf	fsr2l,c
 16851  00B636  0E00               	movlw	high display_prepare@temp
 16852  00B638  20F4               	addwfc	prodh,w,c
 16853  00B63A  6EDA               	movwf	fsr2h,c
 16854  00B63C  50DF               	movf	indf2,w,c
 16855  00B63E  A4D8               	btfss	status,2,c
 16856  00B640  D7DD               	goto	l1382
 16857                           
 16858                           ; BSR set to: 0
 16859                           ;display.c: 395: };display.c: 396: display_content[3][space+cntr] = 0x01 ;
 16860                           
 16861                           ; BSR set to: 0
 16862  00B642  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16863  00B644  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 16864  00B648  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 16865  00B64A  27BC               	addwf	??_display_prepare& (0+255),f,b
 16866  00B64C  0E00               	movlw	0
 16867  00B64E  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 16868  00B650  0EB4               	movlw	low (_display_content+60)
 16869  00B652  25BC               	addwf	??_display_prepare& (0+255),w,b
 16870  00B654  6ED9               	movwf	fsr2l,c
 16871  00B656  0E02               	movlw	high (_display_content+60)
 16872  00B658  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 16873  00B65A  6EDA               	movwf	fsr2h,c
 16874  00B65C  0E01               	movlw	1
 16875  00B65E  D25B               	goto	L23
 16876  00B660                     
 16877                           ; BSR set to: 0
 16878                           ;display.c: 401: memcpy(display_content, dc_arc2, sizeof display_content);
 16879                           
 16880                           ; BSR set to: 0
 16881  00B660  0E78               	movlw	low _display_content
 16882  00B662  6F60               	movwf	memcpy@d1& (0+255),b
 16883  00B664  0E02               	movlw	high _display_content
 16884  00B666  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 16885  00B668  0E8E               	movlw	low _dc_arc2
 16886  00B66A  6F62               	movwf	memcpy@s1& (0+255),b
 16887  00B66C  0E9E               	movlw	high _dc_arc2
 16888  00B66E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 16889  00B670  0E00               	movlw	0
 16890  00B672  6F65               	movwf	(memcpy@n+1)& (0+255),b
 16891  00B674  0E50               	movlw	80
 16892  00B676  6F64               	movwf	memcpy@n& (0+255),b
 16893  00B678  EC35  F08D         	call	_memcpy	;wreg free
 16894                           
 16895                           ;display.c: 402: switch(os.displayState)
 16896  00B67C  D025               	goto	l1385
 16897  00B67E                     
 16898                           ;display.c: 405: display_content[2][6] = 'W';
 16899  00B67E  0E57               	movlw	87
 16900  00B680  0102               	movlb	2	; () banked
 16901  00B682  6FA6               	movwf	(_display_content+46)& (0+255),b
 16902                           
 16903                           ;display.c: 406: display_content[2][7] = ' ';
 16904  00B684  0E20               	movlw	32
 16905  00B686  6FA7               	movwf	(_display_content+47)& (0+255),b
 16906                           
 16907                           ;display.c: 407: break;
 16908  00B688  D027               	goto	l1387
 16909  00B68A                     
 16910                           ;display.c: 409: memcpy(display_content[2], "        ", 8);
 16911                           
 16912                           ; BSR set to: 2
 16913  00B68A  0EA0               	movlw	low (_display_content+40)
 16914  00B68C  0100               	movlb	0	; () banked
 16915  00B68E  6F60               	movwf	memcpy@d1& (0+255),b
 16916  00B690  0E02               	movlw	high (_display_content+40)
 16917  00B692  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 16918  00B694  0E1C               	movlw	low STR_1
 16919  00B696  6F62               	movwf	memcpy@s1& (0+255),b
 16920  00B698  0EA2               	movlw	high STR_1
 16921  00B69A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 16922  00B69C  0E00               	movlw	0
 16923  00B69E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 16924  00B6A0  0E08               	movlw	8
 16925  00B6A2  6F64               	movwf	memcpy@n& (0+255),b
 16926  00B6A4  EC35  F08D         	call	_memcpy	;wreg free
 16927                           
 16928                           ;display.c: 410: memcpy(display_content[3], "Cancel", 6);
 16929  00B6A8  0EB4               	movlw	low (_display_content+60)
 16930  00B6AA  0100               	movlb	0	; () banked
 16931  00B6AC  6F60               	movwf	memcpy@d1& (0+255),b
 16932  00B6AE  0E02               	movlw	high (_display_content+60)
 16933  00B6B0  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 16934  00B6B2  0E25               	movlw	low STR_2
 16935  00B6B4  6F62               	movwf	memcpy@s1& (0+255),b
 16936  00B6B6  0EA2               	movlw	high STR_2
 16937  00B6B8  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 16938  00B6BA  0E00               	movlw	0
 16939  00B6BC  6F65               	movwf	(memcpy@n+1)& (0+255),b
 16940  00B6BE  0E06               	movlw	6
 16941  00B6C0  6F64               	movwf	memcpy@n& (0+255),b
 16942  00B6C2  EC35  F08D         	call	_memcpy	;wreg free
 16943                           
 16944                           ;display.c: 412: }
 16945                           
 16946                           ;display.c: 411: break;
 16947  00B6C6  D008               	goto	l1387
 16948  00B6C8                     l1385:
 16949  00B6C8  0100               	movlb	0	; () banked
 16950  00B6CA  51E0               	movf	(_os+13)& (0+255),w,b	;volatile
 16951                           
 16952                           ; Switch size 1, requested type "space"
 16953                           ; Number of cases is 2, Range of values is 98 to 99
 16954                           ; switch strategies available:
 16955                           ; Name         Instructions Cycles
 16956                           ; simple_byte            7     4 (average)
 16957                           ;	Chosen strategy is simple_byte
 16958  00B6CC  0A62               	xorlw	98	; case 98
 16959  00B6CE  B4D8               	btfsc	status,2,c
 16960  00B6D0  D7DC               	goto	l1388
 16961  00B6D2  0A01               	xorlw	1	; case 99
 16962  00B6D4  B4D8               	btfsc	status,2,c
 16963  00B6D6  D7D3               	goto	l1386
 16964  00B6D8                     l1387:
 16965                           
 16966                           ;display.c: 415: _display_itoa_long(os.arc_size, 2, temp);
 16967                           
 16968                           ; BSR set to: 0
 16969  00B6D8  C0EF  F0AD         	movff	_os+28,__display_itoa_long@value	;volatile
 16970  00B6DC  C0F0  F0AE         	movff	_os+29,__display_itoa_long@value+1	;volatile
 16971  00B6E0  C0F1  F0AF         	movff	_os+30,__display_itoa_long@value+2	;volatile
 16972  00B6E4  C0F2  F0B0         	movff	_os+31,__display_itoa_long@value+3	;volatile
 16973  00B6E8  0E02               	movlw	2
 16974  00B6EA  0100               	movlb	0	; () banked
 16975  00B6EC  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 16976  00B6EE  0EBE               	movlw	low display_prepare@temp
 16977  00B6F0  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 16978  00B6F2  0E00               	movlw	high display_prepare@temp
 16979  00B6F4  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 16980  00B6F6  ECF1  F07A         	call	__display_itoa_long	;wreg free
 16981                           
 16982                           ;display.c: 416: for(cntr=0; temp[cntr]; ++cntr)
 16983  00B6FA  0E00               	movlw	0
 16984  00B6FC  0100               	movlb	0	; () banked
 16985  00B6FE  6FC9               	movwf	display_prepare@cntr& (0+255),b
 16986  00B700  D018               	goto	l1389
 16987  00B702                     
 16988                           ; BSR set to: 0
 16989                           ;display.c: 417: {;display.c: 418: display_content[0][10+cntr] = temp[cntr];
 16990                           
 16991                           ; BSR set to: 0
 16992  00B702  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16993  00B704  0D01               	mullw	1
 16994  00B706  0EBE               	movlw	low display_prepare@temp
 16995  00B708  24F3               	addwf	prodl,w,c
 16996  00B70A  6ED9               	movwf	fsr2l,c
 16997  00B70C  0E00               	movlw	high display_prepare@temp
 16998  00B70E  20F4               	addwfc	prodh,w,c
 16999  00B710  6EDA               	movwf	fsr2h,c
 17000  00B712  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17001  00B714  6FBC               	movwf	??_display_prepare& (0+255),b
 17002  00B716  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 17003  00B718  0E0A               	movlw	10
 17004  00B71A  27BC               	addwf	??_display_prepare& (0+255),f,b
 17005  00B71C  0E00               	movlw	0
 17006  00B71E  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 17007  00B720  0E78               	movlw	low _display_content
 17008  00B722  25BC               	addwf	??_display_prepare& (0+255),w,b
 17009  00B724  6EE1               	movwf	fsr1l,c
 17010  00B726  0E02               	movlw	high _display_content
 17011  00B728  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 17012  00B72A  6EE2               	movwf	fsr1h,c
 17013  00B72C  CFDF FFE7          	movff	indf2,indf1
 17014                           
 17015                           ; BSR set to: 0
 17016  00B730  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 17017  00B732                     l1389:
 17018                           
 17019                           ; BSR set to: 0
 17020                           
 17021                           ; BSR set to: 0
 17022  00B732  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17023  00B734  0D01               	mullw	1
 17024  00B736  0EBE               	movlw	low display_prepare@temp
 17025  00B738  24F3               	addwf	prodl,w,c
 17026  00B73A  6ED9               	movwf	fsr2l,c
 17027  00B73C  0E00               	movlw	high display_prepare@temp
 17028  00B73E  20F4               	addwfc	prodh,w,c
 17029  00B740  6EDA               	movwf	fsr2h,c
 17030  00B742  50DF               	movf	indf2,w,c
 17031  00B744  A4D8               	btfss	status,2,c
 17032  00B746  D7DD               	goto	l1390
 17033                           
 17034                           ; BSR set to: 0
 17035                           ;display.c: 419: };display.c: 420: display_content[0][10+cntr] = 0x01;
 17036                           
 17037                           ; BSR set to: 0
 17038  00B748  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17039  00B74A  6FBC               	movwf	??_display_prepare& (0+255),b
 17040  00B74C  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 17041  00B74E  0E0A               	movlw	10
 17042  00B750  27BC               	addwf	??_display_prepare& (0+255),f,b
 17043  00B752  0E00               	movlw	0
 17044  00B754  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 17045  00B756  0E78               	movlw	low _display_content
 17046  00B758  25BC               	addwf	??_display_prepare& (0+255),w,b
 17047  00B75A  6ED9               	movwf	fsr2l,c
 17048  00B75C  0E02               	movlw	high _display_content
 17049  00B75E  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 17050  00B760  6EDA               	movwf	fsr2h,c
 17051  00B762  0E01               	movlw	1
 17052  00B764  6EDF               	movwf	indf2,c
 17053                           
 17054                           ; BSR set to: 0
 17055                           ;display.c: 423: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 17056  00B766  C0DE  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 17057  00B76A  C0DF  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 17058  00B76E  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 17059  00B770  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 17060  00B772  0E02               	movlw	2
 17061  00B774  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 17062  00B776  0EBE               	movlw	low display_prepare@temp
 17063  00B778  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 17064  00B77A  0E00               	movlw	high display_prepare@temp
 17065  00B77C  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 17066  00B77E  ECF1  F07A         	call	__display_itoa_long	;wreg free
 17067                           
 17068                           ;display.c: 424: space = 6-strlen(temp);
 17069  00B782  0EBE               	movlw	low display_prepare@temp
 17070  00B784  0100               	movlb	0	; () banked
 17071  00B786  6F60               	movwf	strlen@s& (0+255),b
 17072  00B788  0E00               	movlw	high display_prepare@temp
 17073  00B78A  6F61               	movwf	(strlen@s+1)& (0+255),b
 17074  00B78C  EC55  F091         	call	_strlen	;wreg free
 17075  00B790  0100               	movlb	0	; () banked
 17076  00B792  5160               	movf	?_strlen& (0+255),w,b
 17077  00B794  0800               	sublw	0
 17078  00B796  0F06               	addlw	6
 17079  00B798  6FC8               	movwf	display_prepare@space& (0+255),b
 17080                           
 17081                           ; BSR set to: 0
 17082                           ;display.c: 425: for(cntr=0; temp[cntr]; ++cntr)
 17083  00B79A  0E00               	movlw	0
 17084  00B79C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 17085  00B79E  D01C               	goto	l1392
 17086  00B7A0                     
 17087                           ; BSR set to: 0
 17088                           ;display.c: 426: {;display.c: 427: display_content[1][13+space+cntr] = temp[cntr];
 17089                           
 17090                           ; BSR set to: 0
 17091  00B7A0  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17092  00B7A2  0D01               	mullw	1
 17093  00B7A4  0EBE               	movlw	low display_prepare@temp
 17094  00B7A6  24F3               	addwf	prodl,w,c
 17095  00B7A8  6ED9               	movwf	fsr2l,c
 17096  00B7AA  0E00               	movlw	high display_prepare@temp
 17097  00B7AC  20F4               	addwfc	prodh,w,c
 17098  00B7AE  6EDA               	movwf	fsr2h,c
 17099  00B7B0  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17100  00B7B2  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 17101  00B7B6  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 17102  00B7B8  27BC               	addwf	??_display_prepare& (0+255),f,b
 17103  00B7BA  0E00               	movlw	0
 17104  00B7BC  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 17105  00B7BE  0E0D               	movlw	13
 17106  00B7C0  27BC               	addwf	??_display_prepare& (0+255),f,b
 17107  00B7C2  0E00               	movlw	0
 17108  00B7C4  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 17109  00B7C6  0E8C               	movlw	low (_display_content+20)
 17110  00B7C8  25BC               	addwf	??_display_prepare& (0+255),w,b
 17111  00B7CA  6EE1               	movwf	fsr1l,c
 17112  00B7CC  0E02               	movlw	high (_display_content+20)
 17113  00B7CE  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 17114  00B7D0  6EE2               	movwf	fsr1h,c
 17115  00B7D2  CFDF FFE7          	movff	indf2,indf1
 17116                           
 17117                           ; BSR set to: 0
 17118  00B7D6  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 17119  00B7D8                     l1392:
 17120                           
 17121                           ; BSR set to: 0
 17122                           
 17123                           ; BSR set to: 0
 17124  00B7D8  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17125  00B7DA  0D01               	mullw	1
 17126  00B7DC  0EBE               	movlw	low display_prepare@temp
 17127  00B7DE  24F3               	addwf	prodl,w,c
 17128  00B7E0  6ED9               	movwf	fsr2l,c
 17129  00B7E2  0E00               	movlw	high display_prepare@temp
 17130  00B7E4  20F4               	addwfc	prodh,w,c
 17131  00B7E6  6EDA               	movwf	fsr2h,c
 17132  00B7E8  50DF               	movf	indf2,w,c
 17133  00B7EA  A4D8               	btfss	status,2,c
 17134  00B7EC  D7D9               	goto	l1393
 17135                           
 17136                           ; BSR set to: 0
 17137                           ;display.c: 428: };display.c: 431: _display_itoa(motor_speed_from_index(os.arc_speed), 2
      +                          , temp);
 17138                           
 17139                           ; BSR set to: 0
 17140  00B7EE  C0F3  F093         	movff	_os+32,motor_speed_from_index@speed_index	;volatile
 17141  00B7F2  C0F4  F094         	movff	_os+33,motor_speed_from_index@speed_index+1	;volatile
 17142  00B7F6  EC19  F094         	call	_motor_speed_from_index	;wreg free
 17143  00B7FA  C093  F095         	movff	?_motor_speed_from_index,__display_itoa@value
 17144  00B7FE  C094  F096         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 17145  00B802  0E02               	movlw	2
 17146  00B804  0100               	movlb	0	; () banked
 17147  00B806  6F97               	movwf	__display_itoa@decimals& (0+255),b
 17148  00B808  0EBE               	movlw	low display_prepare@temp
 17149  00B80A  6F98               	movwf	__display_itoa@text& (0+255),b
 17150  00B80C  0E00               	movlw	high display_prepare@temp
 17151  00B80E  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 17152  00B810  EC74  F06C         	call	__display_itoa	;wreg free
 17153                           
 17154                           ;display.c: 432: for(cntr=0; temp[cntr]; ++cntr)
 17155  00B814  0E00               	movlw	0
 17156  00B816  0100               	movlb	0	; () banked
 17157  00B818  6FC9               	movwf	display_prepare@cntr& (0+255),b
 17158  00B81A  D018               	goto	l1395
 17159  00B81C                     
 17160                           ; BSR set to: 0
 17161                           ;display.c: 433: {;display.c: 434: display_content[3][11+cntr] = temp[cntr];
 17162                           
 17163                           ; BSR set to: 0
 17164  00B81C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17165  00B81E  0D01               	mullw	1
 17166  00B820  0EBE               	movlw	low display_prepare@temp
 17167  00B822  24F3               	addwf	prodl,w,c
 17168  00B824  6ED9               	movwf	fsr2l,c
 17169  00B826  0E00               	movlw	high display_prepare@temp
 17170  00B828  20F4               	addwfc	prodh,w,c
 17171  00B82A  6EDA               	movwf	fsr2h,c
 17172  00B82C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17173  00B82E  6FBC               	movwf	??_display_prepare& (0+255),b
 17174  00B830  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 17175  00B832  0E0B               	movlw	11
 17176  00B834  27BC               	addwf	??_display_prepare& (0+255),f,b
 17177  00B836  0E00               	movlw	0
 17178  00B838  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 17179  00B83A  0EB4               	movlw	low (_display_content+60)
 17180  00B83C  25BC               	addwf	??_display_prepare& (0+255),w,b
 17181  00B83E  6EE1               	movwf	fsr1l,c
 17182  00B840  0E02               	movlw	high (_display_content+60)
 17183  00B842  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 17184  00B844  6EE2               	movwf	fsr1h,c
 17185  00B846  CFDF FFE7          	movff	indf2,indf1
 17186                           
 17187                           ; BSR set to: 0
 17188  00B84A  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 17189  00B84C                     l1395:
 17190                           
 17191                           ; BSR set to: 0
 17192                           
 17193                           ; BSR set to: 0
 17194  00B84C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17195  00B84E  0D01               	mullw	1
 17196  00B850  0EBE               	movlw	low display_prepare@temp
 17197  00B852  24F3               	addwf	prodl,w,c
 17198  00B854  6ED9               	movwf	fsr2l,c
 17199  00B856  0E00               	movlw	high display_prepare@temp
 17200  00B858  20F4               	addwfc	prodh,w,c
 17201  00B85A  6EDA               	movwf	fsr2h,c
 17202  00B85C  50DF               	movf	indf2,w,c
 17203  00B85E  A4D8               	btfss	status,2,c
 17204  00B860  D7DD               	goto	l1396
 17205  00B862  D12D               	goto	L78
 17206  00B864                     
 17207                           ; BSR set to: 0
 17208                           ;display.c: 447: memcpy(display_content, dc_zero, sizeof display_content);
 17209                           
 17210                           ; BSR set to: 0
 17211  00B864  0E78               	movlw	low _display_content
 17212  00B866  6F60               	movwf	memcpy@d1& (0+255),b
 17213  00B868  0E02               	movlw	high _display_content
 17214  00B86A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 17215  00B86C  0E3E               	movlw	low _dc_zero
 17216  00B86E  6F62               	movwf	memcpy@s1& (0+255),b
 17217  00B870  0E9E               	movlw	high _dc_zero
 17218  00B872  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 17219  00B874  0E00               	movlw	0
 17220  00B876  6F65               	movwf	(memcpy@n+1)& (0+255),b
 17221  00B878  0E50               	movlw	80
 17222  00B87A  6F64               	movwf	memcpy@n& (0+255),b
 17223  00B87C  EC35  F08D         	call	_memcpy	;wreg free
 17224                           
 17225                           ;display.c: 450: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 17226  00B880  C0DE  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 17227  00B884  C0DF  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 17228  00B888  0100               	movlb	0	; () banked
 17229  00B88A  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 17230  00B88C  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 17231  00B88E  0E02               	movlw	2
 17232  00B890  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 17233  00B892  0EBE               	movlw	low display_prepare@temp
 17234  00B894  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 17235  00B896  0E00               	movlw	high display_prepare@temp
 17236  00B898  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 17237  00B89A  ECF1  F07A         	call	__display_itoa_long	;wreg free
 17238                           
 17239                           ;display.c: 451: for(cntr=0; temp[cntr]; ++cntr)
 17240  00B89E  0E00               	movlw	0
 17241  00B8A0  0100               	movlb	0	; () banked
 17242  00B8A2  6FC9               	movwf	display_prepare@cntr& (0+255),b
 17243  00B8A4  D018               	goto	l1399
 17244  00B8A6                     
 17245                           ; BSR set to: 0
 17246                           ;display.c: 452: {;display.c: 453: display_content[1][13+cntr] = temp[cntr];
 17247                           
 17248                           ; BSR set to: 0
 17249  00B8A6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17250  00B8A8  0D01               	mullw	1
 17251  00B8AA  0EBE               	movlw	low display_prepare@temp
 17252  00B8AC  24F3               	addwf	prodl,w,c
 17253  00B8AE  6ED9               	movwf	fsr2l,c
 17254  00B8B0  0E00               	movlw	high display_prepare@temp
 17255  00B8B2  20F4               	addwfc	prodh,w,c
 17256  00B8B4  6EDA               	movwf	fsr2h,c
 17257  00B8B6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17258  00B8B8  6FBC               	movwf	??_display_prepare& (0+255),b
 17259  00B8BA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 17260  00B8BC  0E0D               	movlw	13
 17261  00B8BE  27BC               	addwf	??_display_prepare& (0+255),f,b
 17262  00B8C0  0E00               	movlw	0
 17263  00B8C2  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 17264  00B8C4  0E8C               	movlw	low (_display_content+20)
 17265  00B8C6  25BC               	addwf	??_display_prepare& (0+255),w,b
 17266  00B8C8  6EE1               	movwf	fsr1l,c
 17267  00B8CA  0E02               	movlw	high (_display_content+20)
 17268  00B8CC  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 17269  00B8CE  6EE2               	movwf	fsr1h,c
 17270  00B8D0  CFDF FFE7          	movff	indf2,indf1
 17271                           
 17272                           ; BSR set to: 0
 17273  00B8D4  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 17274  00B8D6                     l1399:
 17275                           
 17276                           ; BSR set to: 0
 17277                           
 17278                           ; BSR set to: 0
 17279  00B8D6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17280  00B8D8  0D01               	mullw	1
 17281  00B8DA  0EBE               	movlw	low display_prepare@temp
 17282  00B8DC  24F3               	addwf	prodl,w,c
 17283  00B8DE  6ED9               	movwf	fsr2l,c
 17284  00B8E0  0E00               	movlw	high display_prepare@temp
 17285  00B8E2  20F4               	addwfc	prodh,w,c
 17286  00B8E4  6EDA               	movwf	fsr2h,c
 17287  00B8E6  50DF               	movf	indf2,w,c
 17288  00B8E8  A4D8               	btfss	status,2,c
 17289  00B8EA  D7DD               	goto	l1400
 17290                           
 17291                           ; BSR set to: 0
 17292                           ;display.c: 454: };display.c: 455: display_content[1][13+cntr] = 0x01;
 17293                           
 17294                           ; BSR set to: 0
 17295  00B8EC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17296  00B8EE  6FBC               	movwf	??_display_prepare& (0+255),b
 17297  00B8F0  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 17298  00B8F2  0E0D               	movlw	13
 17299  00B8F4  27BC               	addwf	??_display_prepare& (0+255),f,b
 17300  00B8F6  0E00               	movlw	0
 17301  00B8F8  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 17302  00B8FA  0E8C               	movlw	low (_display_content+20)
 17303  00B8FC  25BC               	addwf	??_display_prepare& (0+255),w,b
 17304  00B8FE  6ED9               	movwf	fsr2l,c
 17305  00B900  0E02               	movlw	high (_display_content+20)
 17306  00B902  D6AA               	goto	L32
 17307  00B904                     
 17308                           ; BSR set to: 0
 17309                           ;display.c: 460: memcpy(display_content, dc_manual, sizeof display_content);
 17310                           
 17311                           ; BSR set to: 0
 17312  00B904  0E78               	movlw	low _display_content
 17313  00B906  6F60               	movwf	memcpy@d1& (0+255),b
 17314  00B908  0E02               	movlw	high _display_content
 17315  00B90A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 17316  00B90C  0EEE               	movlw	low _dc_manual
 17317  00B90E  6F62               	movwf	memcpy@s1& (0+255),b
 17318  00B910  0E9D               	movlw	high _dc_manual
 17319  00B912  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 17320  00B914  0E00               	movlw	0
 17321  00B916  6F65               	movwf	(memcpy@n+1)& (0+255),b
 17322  00B918  0E50               	movlw	80
 17323  00B91A  6F64               	movwf	memcpy@n& (0+255),b
 17324  00B91C  EC35  F08D         	call	_memcpy	;wreg free
 17325                           
 17326                           ;display.c: 461: switch(os.displayState)
 17327  00B920  D044               	goto	l1403
 17328  00B922                     
 17329                           ;display.c: 464: display_content[2][6] = 'W';
 17330  00B922  0E57               	movlw	87
 17331  00B924  0102               	movlb	2	; () banked
 17332  00B926  6FA6               	movwf	(_display_content+46)& (0+255),b
 17333                           
 17334                           ;display.c: 465: display_content[2][7] = ' ';
 17335  00B928  0E20               	movlw	32
 17336  00B92A  6FA7               	movwf	(_display_content+47)& (0+255),b
 17337                           
 17338                           ;display.c: 466: break;
 17339  00B92C  D049               	goto	l1405
 17340  00B92E                     
 17341                           ;display.c: 468: memcpy(display_content[2], "        ", 8);
 17342                           
 17343                           ; BSR set to: 2
 17344  00B92E  0EA0               	movlw	low (_display_content+40)
 17345  00B930  0100               	movlb	0	; () banked
 17346  00B932  6F60               	movwf	memcpy@d1& (0+255),b
 17347  00B934  0E02               	movlw	high (_display_content+40)
 17348  00B936  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 17349  00B938  0E1C               	movlw	low STR_1
 17350  00B93A  6F62               	movwf	memcpy@s1& (0+255),b
 17351  00B93C  0EA2               	movlw	high STR_1
 17352  00B93E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 17353  00B940  0E00               	movlw	0
 17354  00B942  6F65               	movwf	(memcpy@n+1)& (0+255),b
 17355  00B944  0E08               	movlw	8
 17356  00B946  6F64               	movwf	memcpy@n& (0+255),b
 17357  00B948  EC35  F08D         	call	_memcpy	;wreg free
 17358                           
 17359                           ;display.c: 469: memcpy(display_content[3], "Cancel", 6);
 17360  00B94C  0EB4               	movlw	low (_display_content+60)
 17361  00B94E  0100               	movlb	0	; () banked
 17362  00B950  6F60               	movwf	memcpy@d1& (0+255),b
 17363  00B952  0E02               	movlw	high (_display_content+60)
 17364  00B954  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 17365  00B956  0E25               	movlw	low STR_2
 17366  00B958  6F62               	movwf	memcpy@s1& (0+255),b
 17367  00B95A  0EA2               	movlw	high STR_2
 17368  00B95C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 17369  00B95E  0E00               	movlw	0
 17370  00B960  6F65               	movwf	(memcpy@n+1)& (0+255),b
 17371  00B962  0E06               	movlw	6
 17372  00B964  6F64               	movwf	memcpy@n& (0+255),b
 17373  00B966  EC35  F08D         	call	_memcpy	;wreg free
 17374                           
 17375                           ;display.c: 470: break;
 17376  00B96A  D02A               	goto	l1405
 17377  00B96C                     
 17378                           ;display.c: 472: memcpy(&display_content[2][0], "        ", 8);
 17379  00B96C  0EA0               	movlw	low (_display_content+40)
 17380  00B96E  0100               	movlb	0	; () banked
 17381  00B970  6F60               	movwf	memcpy@d1& (0+255),b
 17382  00B972  0E02               	movlw	high (_display_content+40)
 17383  00B974  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 17384  00B976  0E1C               	movlw	low STR_1
 17385  00B978  6F62               	movwf	memcpy@s1& (0+255),b
 17386  00B97A  0EA2               	movlw	high STR_1
 17387  00B97C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 17388  00B97E  0E00               	movlw	0
 17389  00B980  6F65               	movwf	(memcpy@n+1)& (0+255),b
 17390  00B982  0E08               	movlw	8
 17391  00B984  6F64               	movwf	memcpy@n& (0+255),b
 17392  00B986  EC35  F08D         	call	_memcpy	;wreg free
 17393                           
 17394                           ;display.c: 473: memcpy(&display_content[3][0], "Stop ", 5);
 17395  00B98A  0EB4               	movlw	low (_display_content+60)
 17396  00B98C  0100               	movlb	0	; () banked
 17397  00B98E  6F60               	movwf	memcpy@d1& (0+255),b
 17398  00B990  0E02               	movlw	high (_display_content+60)
 17399  00B992  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 17400  00B994  0E2C               	movlw	low STR_6
 17401  00B996  6F62               	movwf	memcpy@s1& (0+255),b
 17402  00B998  0EA2               	movlw	high STR_6
 17403  00B99A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 17404  00B99C  0E00               	movlw	0
 17405  00B99E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 17406  00B9A0  0E05               	movlw	5
 17407  00B9A2  6F64               	movwf	memcpy@n& (0+255),b
 17408  00B9A4  EC35  F08D         	call	_memcpy	;wreg free
 17409                           
 17410                           ;display.c: 475: }
 17411                           
 17412                           ;display.c: 474: break;
 17413  00B9A8  D00B               	goto	l1405
 17414  00B9AA                     l1403:
 17415  00B9AA  0100               	movlb	0	; () banked
 17416  00B9AC  51E0               	movf	(_os+13)& (0+255),w,b	;volatile
 17417                           
 17418                           ; Switch size 1, requested type "space"
 17419                           ; Number of cases is 3, Range of values is 130 to 132
 17420                           ; switch strategies available:
 17421                           ; Name         Instructions Cycles
 17422                           ; simple_byte           10     6 (average)
 17423                           ;	Chosen strategy is simple_byte
 17424  00B9AE  0A82               	xorlw	130	; case 130
 17425  00B9B0  B4D8               	btfsc	status,2,c
 17426  00B9B2  D7BD               	goto	l1406
 17427  00B9B4  0A01               	xorlw	1	; case 131
 17428  00B9B6  B4D8               	btfsc	status,2,c
 17429  00B9B8  D7B4               	goto	l1404
 17430  00B9BA  0A07               	xorlw	7	; case 132
 17431  00B9BC  B4D8               	btfsc	status,2,c
 17432  00B9BE  D7D6               	goto	l1407
 17433  00B9C0                     l1405:
 17434                           
 17435                           ;display.c: 478: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 17436                           
 17437                           ; BSR set to: 0
 17438  00B9C0  C0DE  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 17439  00B9C4  C0DF  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 17440  00B9C8  0100               	movlb	0	; () banked
 17441  00B9CA  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 17442  00B9CC  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 17443  00B9CE  0E02               	movlw	2
 17444  00B9D0  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 17445  00B9D2  0EBE               	movlw	low display_prepare@temp
 17446  00B9D4  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 17447  00B9D6  0E00               	movlw	high display_prepare@temp
 17448  00B9D8  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 17449  00B9DA  ECF1  F07A         	call	__display_itoa_long	;wreg free
 17450                           
 17451                           ;display.c: 479: space = 7-strlen(temp);
 17452  00B9DE  0EBE               	movlw	low display_prepare@temp
 17453  00B9E0  0100               	movlb	0	; () banked
 17454  00B9E2  6F60               	movwf	strlen@s& (0+255),b
 17455  00B9E4  0E00               	movlw	high display_prepare@temp
 17456  00B9E6  6F61               	movwf	(strlen@s+1)& (0+255),b
 17457  00B9E8  EC55  F091         	call	_strlen	;wreg free
 17458  00B9EC  0100               	movlb	0	; () banked
 17459  00B9EE  5160               	movf	?_strlen& (0+255),w,b
 17460  00B9F0  0800               	sublw	0
 17461  00B9F2  0F07               	addlw	7
 17462  00B9F4  6FC8               	movwf	display_prepare@space& (0+255),b
 17463                           
 17464                           ; BSR set to: 0
 17465                           ;display.c: 480: for(cntr=0; temp[cntr]; ++cntr)
 17466  00B9F6  0E00               	movlw	0
 17467  00B9F8  6FC9               	movwf	display_prepare@cntr& (0+255),b
 17468  00B9FA  D01C               	goto	l1408
 17469  00B9FC                     
 17470                           ; BSR set to: 0
 17471                           ;display.c: 481: {;display.c: 482: display_content[1][12+space+cntr] = temp[cntr];
 17472                           
 17473                           ; BSR set to: 0
 17474  00B9FC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17475  00B9FE  0D01               	mullw	1
 17476  00BA00  0EBE               	movlw	low display_prepare@temp
 17477  00BA02  24F3               	addwf	prodl,w,c
 17478  00BA04  6ED9               	movwf	fsr2l,c
 17479  00BA06  0E00               	movlw	high display_prepare@temp
 17480  00BA08  20F4               	addwfc	prodh,w,c
 17481  00BA0A  6EDA               	movwf	fsr2h,c
 17482  00BA0C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17483  00BA0E  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 17484  00BA12  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 17485  00BA14  27BC               	addwf	??_display_prepare& (0+255),f,b
 17486  00BA16  0E00               	movlw	0
 17487  00BA18  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 17488  00BA1A  0E0C               	movlw	12
 17489  00BA1C  27BC               	addwf	??_display_prepare& (0+255),f,b
 17490  00BA1E  0E00               	movlw	0
 17491  00BA20  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 17492  00BA22  0E8C               	movlw	low (_display_content+20)
 17493  00BA24  25BC               	addwf	??_display_prepare& (0+255),w,b
 17494  00BA26  6EE1               	movwf	fsr1l,c
 17495  00BA28  0E02               	movlw	high (_display_content+20)
 17496  00BA2A  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 17497  00BA2C  6EE2               	movwf	fsr1h,c
 17498  00BA2E  CFDF FFE7          	movff	indf2,indf1
 17499                           
 17500                           ; BSR set to: 0
 17501  00BA32  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 17502  00BA34                     l1408:
 17503                           
 17504                           ; BSR set to: 0
 17505                           
 17506                           ; BSR set to: 0
 17507  00BA34  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17508  00BA36  0D01               	mullw	1
 17509  00BA38  0EBE               	movlw	low display_prepare@temp
 17510  00BA3A  24F3               	addwf	prodl,w,c
 17511  00BA3C  6ED9               	movwf	fsr2l,c
 17512  00BA3E  0E00               	movlw	high display_prepare@temp
 17513  00BA40  20F4               	addwfc	prodh,w,c
 17514  00BA42  6EDA               	movwf	fsr2h,c
 17515  00BA44  50DF               	movf	indf2,w,c
 17516  00BA46  A4D8               	btfss	status,2,c
 17517  00BA48  D7D9               	goto	l1409
 17518                           
 17519                           ; BSR set to: 0
 17520                           ;display.c: 483: };display.c: 486: _display_itoa(motor_speed_from_index(os.manual_speed)
      +                          , 2, temp);
 17521                           
 17522                           ; BSR set to: 0
 17523  00BA4A  C0F6  F093         	movff	_os+35,motor_speed_from_index@speed_index	;volatile
 17524  00BA4E  C0F7  F094         	movff	_os+36,motor_speed_from_index@speed_index+1	;volatile
 17525  00BA52  EC19  F094         	call	_motor_speed_from_index	;wreg free
 17526  00BA56  C093  F095         	movff	?_motor_speed_from_index,__display_itoa@value
 17527  00BA5A  C094  F096         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 17528  00BA5E  0E02               	movlw	2
 17529  00BA60  0100               	movlb	0	; () banked
 17530  00BA62  6F97               	movwf	__display_itoa@decimals& (0+255),b
 17531  00BA64  0EBE               	movlw	low display_prepare@temp
 17532  00BA66  6F98               	movwf	__display_itoa@text& (0+255),b
 17533  00BA68  0E00               	movlw	high display_prepare@temp
 17534  00BA6A  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 17535  00BA6C  EC74  F06C         	call	__display_itoa	;wreg free
 17536                           
 17537                           ;display.c: 487: for(cntr=0; temp[cntr]; ++cntr)
 17538  00BA70  0E00               	movlw	0
 17539  00BA72  0100               	movlb	0	; () banked
 17540  00BA74  6FC9               	movwf	display_prepare@cntr& (0+255),b
 17541  00BA76  D018               	goto	l1411
 17542  00BA78                     
 17543                           ; BSR set to: 0
 17544                           ;display.c: 488: {;display.c: 489: display_content[3][11+cntr] = temp[cntr];
 17545                           
 17546                           ; BSR set to: 0
 17547  00BA78  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17548  00BA7A  0D01               	mullw	1
 17549  00BA7C  0EBE               	movlw	low display_prepare@temp
 17550  00BA7E  24F3               	addwf	prodl,w,c
 17551  00BA80  6ED9               	movwf	fsr2l,c
 17552  00BA82  0E00               	movlw	high display_prepare@temp
 17553  00BA84  20F4               	addwfc	prodh,w,c
 17554  00BA86  6EDA               	movwf	fsr2h,c
 17555  00BA88  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17556  00BA8A  6FBC               	movwf	??_display_prepare& (0+255),b
 17557  00BA8C  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 17558  00BA8E  0E0B               	movlw	11
 17559  00BA90  27BC               	addwf	??_display_prepare& (0+255),f,b
 17560  00BA92  0E00               	movlw	0
 17561  00BA94  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 17562  00BA96  0EB4               	movlw	low (_display_content+60)
 17563  00BA98  25BC               	addwf	??_display_prepare& (0+255),w,b
 17564  00BA9A  6EE1               	movwf	fsr1l,c
 17565  00BA9C  0E02               	movlw	high (_display_content+60)
 17566  00BA9E  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 17567  00BAA0  6EE2               	movwf	fsr1h,c
 17568  00BAA2  CFDF FFE7          	movff	indf2,indf1
 17569                           
 17570                           ; BSR set to: 0
 17571  00BAA6  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 17572  00BAA8                     l1411:
 17573                           
 17574                           ; BSR set to: 0
 17575                           
 17576                           ; BSR set to: 0
 17577  00BAA8  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17578  00BAAA  0D01               	mullw	1
 17579  00BAAC  0EBE               	movlw	low display_prepare@temp
 17580  00BAAE  24F3               	addwf	prodl,w,c
 17581  00BAB0  6ED9               	movwf	fsr2l,c
 17582  00BAB2  0E00               	movlw	high display_prepare@temp
 17583  00BAB4  20F4               	addwfc	prodh,w,c
 17584  00BAB6  6EDA               	movwf	fsr2h,c
 17585  00BAB8  50DF               	movf	indf2,w,c
 17586  00BABA  A4D8               	btfss	status,2,c
 17587  00BABC  D7DD               	goto	l1412
 17588  00BABE                     L78:
 17589                           
 17590                           ; BSR set to: 0
 17591                           ;display.c: 490: };display.c: 491: display_content[3][11+cntr] = 0x01;
 17592                           
 17593                           ; BSR set to: 0
 17594  00BABE  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17595  00BAC0  6FBC               	movwf	??_display_prepare& (0+255),b
 17596  00BAC2  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 17597  00BAC4  0E0B               	movlw	11
 17598  00BAC6  27BC               	addwf	??_display_prepare& (0+255),f,b
 17599  00BAC8  0E00               	movlw	0
 17600  00BACA  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 17601  00BACC  0EB4               	movlw	low (_display_content+60)
 17602  00BACE  25BC               	addwf	??_display_prepare& (0+255),w,b
 17603  00BAD0  6ED9               	movwf	fsr2l,c
 17604  00BAD2  0E02               	movlw	high (_display_content+60)
 17605  00BAD4  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 17606  00BAD6  6EDA               	movwf	fsr2h,c
 17607  00BAD8  0E01               	movlw	1
 17608  00BADA  6EDF               	movwf	indf2,c
 17609                           
 17610                           ;display.c: 492: display_content[3][12+cntr] = '/';
 17611  00BADC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17612  00BADE  6FBC               	movwf	??_display_prepare& (0+255),b
 17613  00BAE0  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 17614  00BAE2  0E0C               	movlw	12
 17615  00BAE4  27BC               	addwf	??_display_prepare& (0+255),f,b
 17616  00BAE6  0E00               	movlw	0
 17617  00BAE8  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 17618  00BAEA  0EB4               	movlw	low (_display_content+60)
 17619  00BAEC  25BC               	addwf	??_display_prepare& (0+255),w,b
 17620  00BAEE  6ED9               	movwf	fsr2l,c
 17621  00BAF0  0E02               	movlw	high (_display_content+60)
 17622  00BAF2  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 17623  00BAF4  6EDA               	movwf	fsr2h,c
 17624  00BAF6  0E2F               	movlw	47
 17625  00BAF8  6EDF               	movwf	indf2,c
 17626                           
 17627                           ;display.c: 493: display_content[3][13+cntr] = 's';
 17628  00BAFA  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17629  00BAFC  6FBC               	movwf	??_display_prepare& (0+255),b
 17630  00BAFE  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 17631  00BB00  0E0D               	movlw	13
 17632  00BB02  27BC               	addwf	??_display_prepare& (0+255),f,b
 17633  00BB04  0E00               	movlw	0
 17634  00BB06  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 17635  00BB08  0EB4               	movlw	low (_display_content+60)
 17636  00BB0A  25BC               	addwf	??_display_prepare& (0+255),w,b
 17637  00BB0C  6ED9               	movwf	fsr2l,c
 17638  00BB0E  0E02               	movlw	high (_display_content+60)
 17639  00BB10  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 17640  00BB12  6EDA               	movwf	fsr2h,c
 17641  00BB14  0E73               	movlw	115
 17642  00BB16                     L23:
 17643  00BB16  6EDF               	movwf	indf2,c
 17644                           
 17645                           ;display.c: 494: break;
 17646  00BB18  D090               	goto	l1331
 17647  00BB1A                     
 17648                           ; BSR set to: 0
 17649                           ;display.c: 497: _display_clear();
 17650                           
 17651                           ; BSR set to: 0
 17652  00BB1A  EC65  F090         	call	__display_clear	;wreg free
 17653                           
 17654                           ;display.c: 498: _display_itoa((int16_t) (os.encoder1Count), 0, display_content[0]);
 17655  00BB1E  0100               	movlb	0	; () banked
 17656  00BB20  51D6               	movf	(_os+3)& (0+255),w,b	;volatile
 17657  00BB22  6F95               	movwf	__display_itoa@value& (0+255),b
 17658  00BB24  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 17659  00BB26  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 17660  00BB28  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 17661  00BB2A  0E00               	movlw	0
 17662  00BB2C  6F97               	movwf	__display_itoa@decimals& (0+255),b
 17663  00BB2E  0E78               	movlw	low _display_content
 17664  00BB30  6F98               	movwf	__display_itoa@text& (0+255),b
 17665  00BB32  0E02               	movlw	high _display_content
 17666  00BB34  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 17667  00BB36  EC74  F06C         	call	__display_itoa	;wreg free
 17668                           
 17669                           ;display.c: 499: if(PORTEbits.RE2)
 17670  00BB3A  A484               	btfss	3972,2,c	;volatile
 17671  00BB3C  D002               	goto	l1415
 17672                           
 17673                           ;display.c: 500: display_content[0][8] = 'H';
 17674  00BB3E  0E48               	movlw	72
 17675  00BB40  D001               	goto	L27
 17676  00BB42                     l1415:
 17677                           
 17678                           ;display.c: 501: else;display.c: 502: display_content[0][8] = 'L';
 17679                           
 17680                           ; BSR set to: 2
 17681  00BB42  0E4C               	movlw	76
 17682  00BB44                     L27:
 17683  00BB44  0102               	movlb	2	; () banked
 17684  00BB46  6F80               	movwf	(_display_content+8)& (0+255),b
 17685                           
 17686                           ; BSR set to: 2
 17687                           ;display.c: 503: if(PORTEbits.RE0)
 17688                           
 17689                           ; BSR set to: 2
 17690  00BB48  A084               	btfss	3972,0,c	;volatile
 17691  00BB4A  D002               	goto	l1417
 17692                           
 17693                           ; BSR set to: 2
 17694                           ;display.c: 504: display_content[0][9] = 'H';
 17695  00BB4C  0E48               	movlw	72
 17696  00BB4E  D001               	goto	L28
 17697  00BB50                     l1417:
 17698                           
 17699                           ; BSR set to: 2
 17700                           ;display.c: 505: else;display.c: 506: display_content[0][9] = 'L';
 17701                           
 17702                           ; BSR set to: 2
 17703  00BB50  0E4C               	movlw	76
 17704  00BB52                     L28:
 17705  00BB52  6F81               	movwf	(_display_content+9)& (0+255),b
 17706                           
 17707                           ; BSR set to: 2
 17708                           ;display.c: 507: _display_itoa((int16_t) (os.button1), 0, display_content[1]);
 17709                           
 17710                           ; BSR set to: 2
 17711  00BB54  0100               	movlb	0	; () banked
 17712  00BB56  51D7               	movf	(_os+4)& (0+255),w,b	;volatile
 17713  00BB58  6F95               	movwf	__display_itoa@value& (0+255),b
 17714  00BB5A  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 17715  00BB5C  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 17716  00BB5E  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 17717  00BB60  0E00               	movlw	0
 17718  00BB62  6F97               	movwf	__display_itoa@decimals& (0+255),b
 17719  00BB64  0E8C               	movlw	low (_display_content+20)
 17720  00BB66  6F98               	movwf	__display_itoa@text& (0+255),b
 17721  00BB68  0E02               	movlw	high (_display_content+20)
 17722  00BB6A  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 17723  00BB6C  EC74  F06C         	call	__display_itoa	;wreg free
 17724                           
 17725                           ;display.c: 508: if(PORTEbits.RE1)
 17726  00BB70  A284               	btfss	3972,1,c	;volatile
 17727  00BB72  D002               	goto	l1419
 17728                           
 17729                           ;display.c: 509: display_content[1][8] = 'H';
 17730  00BB74  0E48               	movlw	72
 17731  00BB76  D001               	goto	L29
 17732  00BB78                     l1419:
 17733                           
 17734                           ;display.c: 510: else;display.c: 511: display_content[1][8] = 'L';
 17735                           
 17736                           ; BSR set to: 2
 17737  00BB78  0E4C               	movlw	76
 17738  00BB7A                     L29:
 17739  00BB7A  0102               	movlb	2	; () banked
 17740  00BB7C  6F94               	movwf	(_display_content+28)& (0+255),b
 17741                           
 17742                           ; BSR set to: 2
 17743                           ;display.c: 512: _display_itoa((int16_t) (os.encoder2Count), 0, display_content[2]);
 17744                           
 17745                           ; BSR set to: 2
 17746  00BB7E  0100               	movlb	0	; () banked
 17747  00BB80  51D8               	movf	(_os+5)& (0+255),w,b	;volatile
 17748  00BB82  6F95               	movwf	__display_itoa@value& (0+255),b
 17749  00BB84  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 17750  00BB86  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 17751  00BB88  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 17752  00BB8A  0E00               	movlw	0
 17753  00BB8C  6F97               	movwf	__display_itoa@decimals& (0+255),b
 17754  00BB8E  0EA0               	movlw	low (_display_content+40)
 17755  00BB90  6F98               	movwf	__display_itoa@text& (0+255),b
 17756  00BB92  0E02               	movlw	high (_display_content+40)
 17757  00BB94  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 17758  00BB96  EC74  F06C         	call	__display_itoa	;wreg free
 17759                           
 17760                           ;display.c: 513: if(PORTAbits.RA0)
 17761  00BB9A  A080               	btfss	3968,0,c	;volatile
 17762  00BB9C  D002               	goto	l1421
 17763                           
 17764                           ;display.c: 514: display_content[2][8] = 'H';
 17765  00BB9E  0E48               	movlw	72
 17766  00BBA0  D001               	goto	L30
 17767  00BBA2                     l1421:
 17768                           
 17769                           ;display.c: 515: else;display.c: 516: display_content[2][8] = 'L';
 17770                           
 17771                           ; BSR set to: 2
 17772  00BBA2  0E4C               	movlw	76
 17773  00BBA4                     L30:
 17774  00BBA4  0102               	movlb	2	; () banked
 17775  00BBA6  6FA8               	movwf	(_display_content+48)& (0+255),b
 17776                           
 17777                           ; BSR set to: 2
 17778                           ;display.c: 517: if(PORTAbits.RA2)
 17779                           
 17780                           ; BSR set to: 2
 17781  00BBA8  A480               	btfss	3968,2,c	;volatile
 17782  00BBAA  D002               	goto	l1423
 17783                           
 17784                           ; BSR set to: 2
 17785                           ;display.c: 518: display_content[2][9] = 'H';
 17786  00BBAC  0E48               	movlw	72
 17787  00BBAE  D001               	goto	L31
 17788  00BBB0                     l1423:
 17789                           
 17790                           ; BSR set to: 2
 17791                           ;display.c: 519: else;display.c: 520: display_content[2][9] = 'L';
 17792                           
 17793                           ; BSR set to: 2
 17794  00BBB0  0E4C               	movlw	76
 17795  00BBB2                     L31:
 17796  00BBB2  6FA9               	movwf	(_display_content+49)& (0+255),b
 17797                           
 17798                           ; BSR set to: 2
 17799                           ;display.c: 521: _display_itoa((int16_t) (os.button2), 0, display_content[3]);
 17800                           
 17801                           ; BSR set to: 2
 17802  00BBB4  0100               	movlb	0	; () banked
 17803  00BBB6  51D9               	movf	(_os+6)& (0+255),w,b	;volatile
 17804  00BBB8  6F95               	movwf	__display_itoa@value& (0+255),b
 17805  00BBBA  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 17806  00BBBC  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 17807  00BBBE  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 17808  00BBC0  0E00               	movlw	0
 17809  00BBC2  6F97               	movwf	__display_itoa@decimals& (0+255),b
 17810  00BBC4  0EB4               	movlw	low (_display_content+60)
 17811  00BBC6  6F98               	movwf	__display_itoa@text& (0+255),b
 17812  00BBC8  0E02               	movlw	high (_display_content+60)
 17813  00BBCA  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 17814  00BBCC  EC74  F06C         	call	__display_itoa	;wreg free
 17815                           
 17816                           ;display.c: 522: if(PORTAbits.RA1)
 17817  00BBD0  A280               	btfss	3968,1,c	;volatile
 17818  00BBD2  D002               	goto	l1425
 17819                           
 17820                           ;display.c: 523: display_content[3][8] = 'H';
 17821  00BBD4  0E48               	movlw	72
 17822  00BBD6  D001               	goto	L24
 17823  00BBD8                     l1425:
 17824                           
 17825                           ;display.c: 524: else;display.c: 525: display_content[3][8] = 'L';
 17826                           
 17827                           ; BSR set to: 2
 17828  00BBD8  0E4C               	movlw	76
 17829  00BBDA                     L24:
 17830  00BBDA  0102               	movlb	2	; () banked
 17831  00BBDC  6FBC               	movwf	(_display_content+68)& (0+255),b
 17832                           
 17833                           ; BSR set to: 2
 17834                           ;display.c: 527: }
 17835                           
 17836                           ; BSR set to: 2
 17837                           ;display.c: 526: break;
 17838  00BBDE  D02D               	goto	l1331
 17839  00BBE0                     l1322:
 17840                           
 17841                           ; BSR set to: 2
 17842  00BBE0  0100               	movlb	0	; () banked
 17843  00BBE2  51E0               	movf	(_os+13)& (0+255),w,b	;volatile
 17844  00BBE4  0BF0               	andlw	240
 17845  00BBE6  6FBC               	movwf	??_display_prepare& (0+255),b
 17846  00BBE8  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 17847                           
 17848                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17849                           ; Switch size 1, requested type "space"
 17850                           ; Number of cases is 1, Range of values is 0 to 0
 17851                           ; switch strategies available:
 17852                           ; Name         Instructions Cycles
 17853                           ; simple_byte            4     3 (average)
 17854                           ;	Chosen strategy is simple_byte
 17855  00BBEA  51BD               	movf	(??_display_prepare+1)& (0+255),w,b
 17856  00BBEC  0A00               	xorlw	0	; case 0
 17857  00BBEE  A4D8               	btfss	status,2,c
 17858  00BBF0  D024               	goto	l1331
 17859                           
 17860                           ; BSR set to: 0
 17861                           ; Switch size 1, requested type "space"
 17862                           ; Number of cases is 10, Range of values is 0 to 240
 17863                           ; switch strategies available:
 17864                           ; Name         Instructions Cycles
 17865                           ; simple_byte           31    16 (average)
 17866                           ;	Chosen strategy is simple_byte
 17867  00BBF2  51BC               	movf	??_display_prepare& (0+255),w,b
 17868  00BBF4  0A00               	xorlw	0	; case 0
 17869  00BBF6  B4D8               	btfsc	status,2,c
 17870  00BBF8  EF09  F058         	goto	l1323
 17871  00BBFC  0A10               	xorlw	16	; case 16
 17872  00BBFE  B4D8               	btfsc	status,2,c
 17873  00BC00  EF38  F058         	goto	l1332
 17874  00BC04  0A30               	xorlw	48	; case 32
 17875  00BC06  B4D8               	btfsc	status,2,c
 17876  00BC08  EF88  F058         	goto	l1342
 17877  00BC0C  0A10               	xorlw	16	; case 48
 17878  00BC0E  B4D8               	btfsc	status,2,c
 17879  00BC10  EFAB  F058         	goto	l1347
 17880  00BC14  0A70               	xorlw	112	; case 64
 17881  00BC16  B4D8               	btfsc	status,2,c
 17882  00BC18  EF1B  F059         	goto	l1356
 17883  00BC1C  0A10               	xorlw	16	; case 80
 17884  00BC1E  B4D8               	btfsc	status,2,c
 17885  00BC20  D46D               	goto	l1371
 17886  00BC22  0A30               	xorlw	48	; case 96
 17887  00BC24  B4D8               	btfsc	status,2,c
 17888  00BC26  D51C               	goto	l1384
 17889  00BC28  0A10               	xorlw	16	; case 112
 17890  00BC2A  B4D8               	btfsc	status,2,c
 17891  00BC2C  D61B               	goto	l1398
 17892  00BC2E  0AF0               	xorlw	240	; case 128
 17893  00BC30  B4D8               	btfsc	status,2,c
 17894  00BC32  D668               	goto	l1402
 17895  00BC34  0A70               	xorlw	112	; case 240
 17896  00BC36  B4D8               	btfsc	status,2,c
 17897  00BC38  D770               	goto	l1414
 17898  00BC3A                     l1331:
 17899                           
 17900                           ;display.c: 529: if(!PORTDbits.RD2)
 17901  00BC3A  B483               	btfsc	3971,2,c	;volatile
 17902  00BC3C  0012               	return	
 17903                           
 17904                           ;display.c: 530: {;display.c: 531: display_content[0][0] = 'E';
 17905  00BC3E  0E45               	movlw	69
 17906  00BC40  0102               	movlb	2	; () banked
 17907  00BC42  6F78               	movwf	_display_content& (0+255),b
 17908                           
 17909                           ;display.c: 532: display_content[0][1] = 'R';
 17910  00BC44  0E52               	movlw	82
 17911  00BC46  6F79               	movwf	(_display_content+1)& (0+255),b
 17912                           
 17913                           ;display.c: 533: display_content[0][2] = 'R';
 17914  00BC48  0E52               	movlw	82
 17915  00BC4A  6F7A               	movwf	(_display_content+2)& (0+255),b
 17916                           
 17917                           ;display.c: 534: display_content[0][3] = 'O';
 17918  00BC4C  0E4F               	movlw	79
 17919  00BC4E  6F7B               	movwf	(_display_content+3)& (0+255),b
 17920                           
 17921                           ;display.c: 535: display_content[0][4] = 'R';
 17922  00BC50  0E52               	movlw	82
 17923  00BC52  6F7C               	movwf	(_display_content+4)& (0+255),b
 17924  00BC54  0012               	return	
 17925  00BC56                     __end_of_display_prepare:
 17926                           	opt stack 0
 17927                           tblptru	equ	0xFF8
 17928                           tblptrh	equ	0xFF7
 17929                           tblptrl	equ	0xFF6
 17930                           tablat	equ	0xFF5
 17931                           prodh	equ	0xFF4
 17932                           prodl	equ	0xFF3
 17933                           intcon	equ	0xFF2
 17934                           postinc0	equ	0xFEE
 17935                           wreg	equ	0xFE8
 17936                           indf1	equ	0xFE7
 17937                           postdec1	equ	0xFE5
 17938                           plusw1	equ	0xFE3
 17939                           fsr1h	equ	0xFE2
 17940                           fsr1l	equ	0xFE1
 17941                           indf2	equ	0xFDF
 17942                           postinc2	equ	0xFDE
 17943                           postdec2	equ	0xFDD
 17944                           plusw2	equ	0xFDB
 17945                           fsr2h	equ	0xFDA
 17946                           fsr2l	equ	0xFD9
 17947                           status	equ	0xFD8
 17948                           
 17949 ;; *************** function _motor_speed_from_index *****************
 17950 ;; Defined at:
 17951 ;;		line 77 in file "motor.c"
 17952 ;; Parameters:    Size  Location     Type
 17953 ;;  speed_index     2   51[BANK0 ] unsigned int 
 17954 ;; Auto vars:     Size  Location     Type
 17955 ;;		None
 17956 ;; Return value:  Size  Location     Type
 17957 ;;                  2   51[BANK0 ] unsigned int 
 17958 ;; Registers used:
 17959 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17960 ;; Tracked objects:
 17961 ;;		On entry : 0/0
 17962 ;;		On exit  : 0/0
 17963 ;;		Unchanged: 0/0
 17964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17965 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17968 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17969 ;;Total ram usage:        2 bytes
 17970 ;; Hardware stack levels used:    1
 17971 ;; Hardware stack levels required when called:   12
 17972 ;; This function calls:
 17973 ;;		__motor_get_speed_in_degrees
 17974 ;; This function is called by:
 17975 ;;		_display_prepare
 17976 ;; This function uses a non-reentrant model
 17977 ;;
 17978                           
 17979                           	psect	text50
 17980  012832                     __ptext50:
 17981                           	opt stack 0
 17982  012832                     _motor_speed_from_index:
 17983                           	opt stack 17
 17984                           
 17985                           ;motor.c: 79: return _motor_get_speed_in_degrees(speed_index);
 17986                           
 17987                           ;incstack = 0
 17988  012832  C093  F087         	movff	motor_speed_from_index@speed_index,__motor_get_speed_in_degrees@speed_index
 17989  012836  C094  F088         	movff	motor_speed_from_index@speed_index+1,__motor_get_speed_in_degrees@speed_index+1
 17990  01283A  EC7B  F077         	call	__motor_get_speed_in_degrees	;wreg free
 17991  01283E  C087  F093         	movff	?__motor_get_speed_in_degrees,?_motor_speed_from_index
 17992  012842  C088  F094         	movff	?__motor_get_speed_in_degrees+1,?_motor_speed_from_index+1
 17993  012846  0012               	return	
 17994  012848                     __end_of_motor_speed_from_index:
 17995                           	opt stack 0
 17996                           tblptru	equ	0xFF8
 17997                           tblptrh	equ	0xFF7
 17998                           tblptrl	equ	0xFF6
 17999                           tablat	equ	0xFF5
 18000                           prodh	equ	0xFF4
 18001                           prodl	equ	0xFF3
 18002                           intcon	equ	0xFF2
 18003                           postinc0	equ	0xFEE
 18004                           wreg	equ	0xFE8
 18005                           indf1	equ	0xFE7
 18006                           postdec1	equ	0xFE5
 18007                           plusw1	equ	0xFE3
 18008                           fsr1h	equ	0xFE2
 18009                           fsr1l	equ	0xFE1
 18010                           indf2	equ	0xFDF
 18011                           postinc2	equ	0xFDE
 18012                           postdec2	equ	0xFDD
 18013                           plusw2	equ	0xFDB
 18014                           fsr2h	equ	0xFDA
 18015                           fsr2l	equ	0xFD9
 18016                           status	equ	0xFD8
 18017                           
 18018 ;; *************** function __motor_get_speed_in_degrees *****************
 18019 ;; Defined at:
 18020 ;;		line 50 in file "motor.c"
 18021 ;; Parameters:    Size  Location     Type
 18022 ;;  speed_index     2   39[BANK0 ] unsigned int 
 18023 ;; Auto vars:     Size  Location     Type
 18024 ;;  lookup          4   47[BANK0 ] unsigned long 
 18025 ;;  speed           4   43[BANK0 ] float 
 18026 ;; Return value:  Size  Location     Type
 18027 ;;                  2   39[BANK0 ] unsigned int 
 18028 ;; Registers used:
 18029 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18030 ;; Tracked objects:
 18031 ;;		On entry : 0/0
 18032 ;;		On exit  : 0/0
 18033 ;;		Unchanged: 0/0
 18034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18035 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18036 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18037 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18038 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18039 ;;Total ram usage:       12 bytes
 18040 ;; Hardware stack levels used:    1
 18041 ;; Hardware stack levels required when called:   11
 18042 ;; This function calls:
 18043 ;;		___fldiv
 18044 ;;		___fltol
 18045 ;;		___lmul
 18046 ;;		___xxtofl
 18047 ;; This function is called by:
 18048 ;;		_motor_speed_from_index
 18049 ;;		_motor_get_maximum_speed
 18050 ;;		_motor_get_current_speed
 18051 ;; This function uses a non-reentrant model
 18052 ;;
 18053                           
 18054                           	psect	text51
 18055  00EEF6                     __ptext51:
 18056                           	opt stack 0
 18057  00EEF6                     __motor_get_speed_in_degrees:
 18058                           	opt stack 17
 18059                           
 18060                           ;motor.c: 52: uint32_t lookup;;motor.c: 53: float speed;;motor.c: 55: lookup = motor_spe
      +                          ed_lookup[speed_index];
 18061                           
 18062                           ;incstack = 0
 18063  00EEF6  90D8               	bcf	status,0,c
 18064  00EEF8  0100               	movlb	0	; () banked
 18065  00EEFA  3587               	rlcf	__motor_get_speed_in_degrees@speed_index& (0+255),w,b
 18066  00EEFC  6EF6               	movwf	tblptrl,c
 18067  00EEFE  3588               	rlcf	(__motor_get_speed_in_degrees@speed_index+1)& (0+255),w,b
 18068  00EF00  6EF7               	movwf	tblptrh,c
 18069  00EF02  0E93               	movlw	low _motor_speed_lookup
 18070  00EF04  26F6               	addwf	tblptrl,f,c
 18071  00EF06  0E90               	movlw	high _motor_speed_lookup
 18072  00EF08  22F7               	addwfc	tblptrh,f,c
 18073  00EF0A                     	if	1	;There are 3 active tblptr bytes
 18074  00EF0A  6AF8               	clrf	tblptru,c
 18075  00EF0C  0E00               	movlw	low (__mediumconst shr (0+16))
 18076  00EF0E  22F8               	addwfc	tblptru,f,c
 18077  00EF10                     	endif
 18078  00EF10  0009               	tblrd		*+
 18079  00EF12  CFF5 F089          	movff	tablat,??__motor_get_speed_in_degrees
 18080  00EF16  0009               	tblrd		*+
 18081  00EF18  CFF5 F08A          	movff	tablat,??__motor_get_speed_in_degrees+1
 18082  00EF1C  C089  F08F         	movff	??__motor_get_speed_in_degrees,__motor_get_speed_in_degrees@lookup
 18083  00EF20  C08A  F090         	movff	??__motor_get_speed_in_degrees+1,__motor_get_speed_in_degrees@lookup+1
 18084  00EF24  6B91               	clrf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),b
 18085  00EF26  6B92               	clrf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),b
 18086                           
 18087                           ; BSR set to: 0
 18088                           ;motor.c: 56: lookup *= 16;
 18089  00EF28  0E04               	movlw	4
 18090  00EF2A                     u19155:
 18091  00EF2A  90D8               	bcf	status,0,c
 18092  00EF2C  378F               	rlcf	__motor_get_speed_in_degrees@lookup& (0+255),f,b
 18093  00EF2E  3790               	rlcf	(__motor_get_speed_in_degrees@lookup+1)& (0+255),f,b
 18094  00EF30  3791               	rlcf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),f,b
 18095  00EF32  3792               	rlcf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),f,b
 18096  00EF34  2EE8               	decfsz	wreg,f,c
 18097  00EF36  D7F9               	goto	u19155
 18098                           
 18099                           ; BSR set to: 0
 18100                           ;motor.c: 57: lookup *= 360;
 18101  00EF38  C08F  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 18102  00EF3C  C090  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 18103  00EF40  C091  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 18104  00EF44  C092  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 18105  00EF48  0E68               	movlw	104
 18106  00EF4A  6F64               	movwf	___lmul@multiplicand& (0+255),b
 18107  00EF4C  0E01               	movlw	1
 18108  00EF4E  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 18109  00EF50  0E00               	movlw	0
 18110  00EF52  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 18111  00EF54  0E00               	movlw	0
 18112  00EF56  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 18113  00EF58  EC75  F08E         	call	___lmul	;wreg free
 18114  00EF5C  C060  F08F         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 18115  00EF60  C061  F090         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 18116  00EF64  C062  F091         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 18117  00EF68  C063  F092         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 18118                           
 18119                           ;motor.c: 58: lookup *= 100;
 18120  00EF6C  C08F  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 18121  00EF70  C090  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 18122  00EF74  C091  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 18123  00EF78  C092  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 18124  00EF7C  0E64               	movlw	100
 18125  00EF7E  0100               	movlb	0	; () banked
 18126  00EF80  6F64               	movwf	___lmul@multiplicand& (0+255),b
 18127  00EF82  0E00               	movlw	0
 18128  00EF84  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 18129  00EF86  0E00               	movlw	0
 18130  00EF88  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 18131  00EF8A  0E00               	movlw	0
 18132  00EF8C  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 18133  00EF8E  EC75  F08E         	call	___lmul	;wreg free
 18134  00EF92  C060  F08F         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 18135  00EF96  C061  F090         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 18136  00EF9A  C062  F091         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 18137  00EF9E  C063  F092         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 18138                           
 18139                           ;motor.c: 60: speed = (float) lookup;
 18140  00EFA2  C08F  F060         	movff	__motor_get_speed_in_degrees@lookup,___xxtofl@val
 18141  00EFA6  C090  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___xxtofl@val+1
 18142  00EFAA  C091  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___xxtofl@val+2
 18143  00EFAE  C092  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___xxtofl@val+3
 18144  00EFB2  0E00               	movlw	0
 18145  00EFB4  ECF6  F074         	call	___xxtofl
 18146  00EFB8  C060  F08B         	movff	?___xxtofl,__motor_get_speed_in_degrees@speed
 18147  00EFBC  C061  F08C         	movff	?___xxtofl+1,__motor_get_speed_in_degrees@speed+1
 18148  00EFC0  C062  F08D         	movff	?___xxtofl+2,__motor_get_speed_in_degrees@speed+2
 18149  00EFC4  C063  F08E         	movff	?___xxtofl+3,__motor_get_speed_in_degrees@speed+3
 18150                           
 18151                           ;motor.c: 61: speed /= config.full_circle_in_steps;
 18152  00EFC8  C08B  F06E         	movff	__motor_get_speed_in_degrees@speed,___fldiv@b
 18153  00EFCC  C08C  F06F         	movff	__motor_get_speed_in_degrees@speed+1,___fldiv@b+1
 18154  00EFD0  C08D  F070         	movff	__motor_get_speed_in_degrees@speed+2,___fldiv@b+2
 18155  00EFD4  C08E  F071         	movff	__motor_get_speed_in_degrees@speed+3,___fldiv@b+3
 18156  00EFD8  C17B  F060         	movff	_config,___xxtofl@val
 18157  00EFDC  C17C  F061         	movff	_config+1,___xxtofl@val+1
 18158  00EFE0  C17D  F062         	movff	_config+2,___xxtofl@val+2
 18159  00EFE4  C17E  F063         	movff	_config+3,___xxtofl@val+3
 18160  00EFE8  0E00               	movlw	0
 18161  00EFEA  ECF6  F074         	call	___xxtofl
 18162  00EFEE  C060  F072         	movff	?___xxtofl,___fldiv@a
 18163  00EFF2  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
 18164  00EFF6  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
 18165  00EFFA  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
 18166  00EFFE  EC76  F067         	call	___fldiv	;wreg free
 18167  00F002  C06E  F08B         	movff	?___fldiv,__motor_get_speed_in_degrees@speed
 18168  00F006  C06F  F08C         	movff	?___fldiv+1,__motor_get_speed_in_degrees@speed+1
 18169  00F00A  C070  F08D         	movff	?___fldiv+2,__motor_get_speed_in_degrees@speed+2
 18170  00F00E  C071  F08E         	movff	?___fldiv+3,__motor_get_speed_in_degrees@speed+3
 18171                           
 18172                           ;motor.c: 64: return (uint16_t) speed;
 18173  00F012  C08B  F060         	movff	__motor_get_speed_in_degrees@speed,___fltol@f1
 18174  00F016  C08C  F061         	movff	__motor_get_speed_in_degrees@speed+1,___fltol@f1+1
 18175  00F01A  C08D  F062         	movff	__motor_get_speed_in_degrees@speed+2,___fltol@f1+2
 18176  00F01E  C08E  F063         	movff	__motor_get_speed_in_degrees@speed+3,___fltol@f1+3
 18177  00F022  EC73  F080         	call	___fltol	;wreg free
 18178  00F026  C060  F087         	movff	?___fltol,?__motor_get_speed_in_degrees
 18179  00F02A  C061  F088         	movff	?___fltol+1,?__motor_get_speed_in_degrees+1
 18180  00F02E  0012               	return	
 18181  00F030                     __end_of__motor_get_speed_in_degrees:
 18182                           	opt stack 0
 18183                           tblptru	equ	0xFF8
 18184                           tblptrh	equ	0xFF7
 18185                           tblptrl	equ	0xFF6
 18186                           tablat	equ	0xFF5
 18187                           prodh	equ	0xFF4
 18188                           prodl	equ	0xFF3
 18189                           intcon	equ	0xFF2
 18190                           postinc0	equ	0xFEE
 18191                           wreg	equ	0xFE8
 18192                           indf1	equ	0xFE7
 18193                           postdec1	equ	0xFE5
 18194                           plusw1	equ	0xFE3
 18195                           fsr1h	equ	0xFE2
 18196                           fsr1l	equ	0xFE1
 18197                           indf2	equ	0xFDF
 18198                           postinc2	equ	0xFDE
 18199                           postdec2	equ	0xFDD
 18200                           plusw2	equ	0xFDB
 18201                           fsr2h	equ	0xFDA
 18202                           fsr2l	equ	0xFD9
 18203                           status	equ	0xFD8
 18204                           
 18205 ;; *************** function ___xxtofl *****************
 18206 ;; Defined at:
 18207 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
 18208 ;; Parameters:    Size  Location     Type
 18209 ;;  sign            1    wreg     unsigned char 
 18210 ;;  val             4    0[BANK0 ] long 
 18211 ;; Auto vars:     Size  Location     Type
 18212 ;;  sign            1    8[BANK0 ] unsigned char 
 18213 ;;  arg             4   10[BANK0 ] unsigned long 
 18214 ;;  exp             1    9[BANK0 ] unsigned char 
 18215 ;; Return value:  Size  Location     Type
 18216 ;;                  4    0[BANK0 ] unsigned char 
 18217 ;; Registers used:
 18218 ;;		wreg, status,2, status,0
 18219 ;; Tracked objects:
 18220 ;;		On entry : 0/0
 18221 ;;		On exit  : 0/0
 18222 ;;		Unchanged: 0/0
 18223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18224 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18225 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18226 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18227 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18228 ;;Total ram usage:       14 bytes
 18229 ;; Hardware stack levels used:    1
 18230 ;; Hardware stack levels required when called:   10
 18231 ;; This function calls:
 18232 ;;		Nothing
 18233 ;; This function is called by:
 18234 ;;		_main
 18235 ;;		_motor_steps_from_degrees
 18236 ;;		__motor_get_speed_in_degrees
 18237 ;;		_motor_go_to_degrees_position
 18238 ;;		_encoder_statemachine
 18239 ;; This function uses a non-reentrant model
 18240 ;;
 18241                           
 18242                           	psect	text52
 18243  00E9EC                     __ptext52:
 18244                           	opt stack 0
 18245  00E9EC                     ___xxtofl:
 18246                           	opt stack 17
 18247                           
 18248                           ;incstack = 0
 18249                           ;___xxtofl@sign stored from wreg
 18250  00E9EC  0100               	movlb	0	; () banked
 18251  00E9EE  6F68               	movwf	___xxtofl@sign& (0+255),b
 18252  00E9F0  0100               	movlb	0	; () banked
 18253  00E9F2  5168               	movf	___xxtofl@sign& (0+255),w,b
 18254  00E9F4  A4D8               	btfss	status,2,c
 18255                           
 18256                           ; BSR set to: 0
 18257  00E9F6  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 18258  00E9F8  D01A               	goto	l3321
 18259                           
 18260                           ; BSR set to: 0
 18261  00E9FA  C060  F064         	movff	___xxtofl@val,??___xxtofl
 18262  00E9FE  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
 18263  00EA02  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
 18264  00EA06  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
 18265  00EA0A  1F64               	comf	??___xxtofl& (0+255),f,b
 18266  00EA0C  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
 18267  00EA0E  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
 18268  00EA10  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
 18269  00EA12  2B64               	incf	??___xxtofl& (0+255),f,b
 18270  00EA14  0E00               	movlw	0
 18271  00EA16  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
 18272  00EA18  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
 18273  00EA1A  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
 18274  00EA1C  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
 18275  00EA20  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
 18276  00EA24  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
 18277  00EA28  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
 18278  00EA2C  D008               	goto	l3322
 18279  00EA2E                     l3321:
 18280                           
 18281                           ; BSR set to: 0
 18282  00EA2E  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
 18283  00EA32  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 18284  00EA36  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 18285  00EA3A  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 18286  00EA3E                     l3322:
 18287                           
 18288                           ; BSR set to: 0
 18289                           
 18290                           ; BSR set to: 0
 18291  00EA3E  5160               	movf	___xxtofl@val& (0+255),w,b
 18292  00EA40  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 18293  00EA42  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 18294  00EA44  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 18295  00EA46  A4D8               	btfss	status,2,c
 18296  00EA48  D009               	goto	l3323
 18297                           
 18298                           ; BSR set to: 0
 18299  00EA4A  0E00               	movlw	0
 18300  00EA4C  6F60               	movwf	?___xxtofl& (0+255),b
 18301  00EA4E  0E00               	movlw	0
 18302  00EA50  6F61               	movwf	(?___xxtofl+1)& (0+255),b
 18303  00EA52  0E00               	movlw	0
 18304  00EA54  6F62               	movwf	(?___xxtofl+2)& (0+255),b
 18305  00EA56  0E00               	movlw	0
 18306  00EA58  6F63               	movwf	(?___xxtofl+3)& (0+255),b
 18307                           
 18308                           ; BSR set to: 0
 18309  00EA5A  0012               	return	
 18310  00EA5C                     l3323:
 18311                           
 18312                           ; BSR set to: 0
 18313                           
 18314                           ; BSR set to: 0
 18315  00EA5C  0E96               	movlw	150
 18316  00EA5E  6F69               	movwf	___xxtofl@exp& (0+255),b
 18317  00EA60  D006               	goto	l3325
 18318  00EA62                     
 18319                           ; BSR set to: 0
 18320                           
 18321                           ; BSR set to: 0
 18322  00EA62  2B69               	incf	___xxtofl@exp& (0+255),f,b
 18323  00EA64  90D8               	bcf	status,0,c
 18324  00EA66  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 18325  00EA68  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 18326  00EA6A  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 18327  00EA6C  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 18328  00EA6E                     l3325:
 18329                           
 18330                           ; BSR set to: 0
 18331                           
 18332                           ; BSR set to: 0
 18333  00EA6E  0E00               	movlw	0
 18334  00EA70  156A               	andwf	___xxtofl@arg& (0+255),w,b
 18335  00EA72  6F64               	movwf	??___xxtofl& (0+255),b
 18336  00EA74  0E00               	movlw	0
 18337  00EA76  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 18338  00EA78  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 18339  00EA7A  0E00               	movlw	0
 18340  00EA7C  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 18341  00EA7E  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 18342  00EA80  0EFE               	movlw	254
 18343  00EA82  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 18344  00EA84  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 18345  00EA86  5164               	movf	??___xxtofl& (0+255),w,b
 18346  00EA88  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 18347  00EA8A  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 18348  00EA8C  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 18349  00EA8E  B4D8               	btfsc	status,2,c
 18350  00EA90  D00D               	goto	l3328
 18351  00EA92  D7E7               	goto	l3326
 18352  00EA94                     
 18353                           ; BSR set to: 0
 18354                           
 18355                           ; BSR set to: 0
 18356  00EA94  2B69               	incf	___xxtofl@exp& (0+255),f,b
 18357                           
 18358                           ; BSR set to: 0
 18359  00EA96  0E01               	movlw	1
 18360  00EA98  276A               	addwf	___xxtofl@arg& (0+255),f,b
 18361  00EA9A  0E00               	movlw	0
 18362  00EA9C  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 18363  00EA9E  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 18364  00EAA0  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 18365                           
 18366                           ; BSR set to: 0
 18367  00EAA2  90D8               	bcf	status,0,c
 18368  00EAA4  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 18369  00EAA6  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 18370  00EAA8  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 18371  00EAAA  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 18372  00EAAC                     l3328:
 18373                           
 18374                           ; BSR set to: 0
 18375  00EAAC  0E00               	movlw	0
 18376  00EAAE  156A               	andwf	___xxtofl@arg& (0+255),w,b
 18377  00EAB0  6F64               	movwf	??___xxtofl& (0+255),b
 18378  00EAB2  0E00               	movlw	0
 18379  00EAB4  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 18380  00EAB6  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 18381  00EAB8  0E00               	movlw	0
 18382  00EABA  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 18383  00EABC  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 18384  00EABE  0EFF               	movlw	255
 18385  00EAC0  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 18386  00EAC2  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 18387  00EAC4  5164               	movf	??___xxtofl& (0+255),w,b
 18388  00EAC6  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 18389  00EAC8  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 18390  00EACA  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 18391  00EACC  B4D8               	btfsc	status,2,c
 18392  00EACE  D007               	goto	l3331
 18393  00EAD0  D7E1               	goto	l3329
 18394  00EAD2                     
 18395                           ; BSR set to: 0
 18396                           
 18397                           ; BSR set to: 0
 18398  00EAD2  0769               	decf	___xxtofl@exp& (0+255),f,b
 18399  00EAD4  90D8               	bcf	status,0,c
 18400  00EAD6  376A               	rlcf	___xxtofl@arg& (0+255),f,b
 18401  00EAD8  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 18402  00EADA  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 18403  00EADC  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 18404  00EADE                     l3331:
 18405                           
 18406                           ; BSR set to: 0
 18407                           
 18408                           ; BSR set to: 0
 18409  00EADE  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 18410  00EAE0  D003               	goto	u18520
 18411                           
 18412                           ; BSR set to: 0
 18413  00EAE2  0E02               	movlw	2
 18414  00EAE4  6169               	cpfslt	___xxtofl@exp& (0+255),b
 18415  00EAE6  D7F5               	goto	l3332
 18416  00EAE8                     u18520:
 18417                           
 18418                           ; BSR set to: 0
 18419                           
 18420                           ; BSR set to: 0
 18421  00EAE8  A169               	btfss	___xxtofl@exp& (0+255),0,b
 18422                           
 18423                           ; BSR set to: 0
 18424  00EAEA  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 18425                           
 18426                           ; BSR set to: 0
 18427                           
 18428                           ; BSR set to: 0
 18429  00EAEC  90D8               	bcf	status,0,c
 18430  00EAEE  3369               	rrcf	___xxtofl@exp& (0+255),f,b
 18431                           
 18432                           ; BSR set to: 0
 18433  00EAF0  C069  F064         	movff	___xxtofl@exp,??___xxtofl
 18434  00EAF4  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 18435  00EAF6  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 18436  00EAF8  6B67               	clrf	(??___xxtofl+3)& (0+255),b
 18437  00EAFA  C064  F067         	movff	??___xxtofl,??___xxtofl+3
 18438  00EAFE  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 18439  00EB00  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 18440  00EB02  6B64               	clrf	??___xxtofl& (0+255),b
 18441  00EB04  5164               	movf	??___xxtofl& (0+255),w,b
 18442  00EB06  136A               	iorwf	___xxtofl@arg& (0+255),f,b
 18443  00EB08  5165               	movf	(??___xxtofl+1)& (0+255),w,b
 18444  00EB0A  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 18445  00EB0C  5166               	movf	(??___xxtofl+2)& (0+255),w,b
 18446  00EB0E  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 18447  00EB10  5167               	movf	(??___xxtofl+3)& (0+255),w,b
 18448  00EB12  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 18449                           
 18450                           ; BSR set to: 0
 18451  00EB14  5168               	movf	___xxtofl@sign& (0+255),w,b
 18452  00EB16  A4D8               	btfss	status,2,c
 18453                           
 18454                           ; BSR set to: 0
 18455  00EB18  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 18456  00EB1A  D001               	goto	l3337
 18457                           
 18458                           ; BSR set to: 0
 18459  00EB1C  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 18460  00EB1E                     l3337:
 18461                           
 18462                           ; BSR set to: 0
 18463                           
 18464                           ; BSR set to: 0
 18465  00EB1E  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
 18466  00EB22  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
 18467  00EB26  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
 18468  00EB2A  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
 18469  00EB2E  0012               	return	
 18470  00EB30                     __end_of___xxtofl:
 18471                           	opt stack 0
 18472                           tblptru	equ	0xFF8
 18473                           tblptrh	equ	0xFF7
 18474                           tblptrl	equ	0xFF6
 18475                           tablat	equ	0xFF5
 18476                           prodh	equ	0xFF4
 18477                           prodl	equ	0xFF3
 18478                           intcon	equ	0xFF2
 18479                           postinc0	equ	0xFEE
 18480                           wreg	equ	0xFE8
 18481                           indf1	equ	0xFE7
 18482                           postdec1	equ	0xFE5
 18483                           plusw1	equ	0xFE3
 18484                           fsr1h	equ	0xFE2
 18485                           fsr1l	equ	0xFE1
 18486                           indf2	equ	0xFDF
 18487                           postinc2	equ	0xFDE
 18488                           postdec2	equ	0xFDD
 18489                           plusw2	equ	0xFDB
 18490                           fsr2h	equ	0xFDA
 18491                           fsr2l	equ	0xFD9
 18492                           status	equ	0xFD8
 18493                           
 18494 ;; *************** function ___lmul *****************
 18495 ;; Defined at:
 18496 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
 18497 ;; Parameters:    Size  Location     Type
 18498 ;;  multiplier      4    0[BANK0 ] unsigned long 
 18499 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 18500 ;; Auto vars:     Size  Location     Type
 18501 ;;  product         4    8[BANK0 ] unsigned long 
 18502 ;; Return value:  Size  Location     Type
 18503 ;;                  4    0[BANK0 ] unsigned long 
 18504 ;; Registers used:
 18505 ;;		wreg, status,2, status,0
 18506 ;; Tracked objects:
 18507 ;;		On entry : 0/0
 18508 ;;		On exit  : 0/0
 18509 ;;		Unchanged: 0/0
 18510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18511 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18512 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18514 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18515 ;;Total ram usage:       12 bytes
 18516 ;; Hardware stack levels used:    1
 18517 ;; Hardware stack levels required when called:   10
 18518 ;; This function calls:
 18519 ;;		Nothing
 18520 ;; This function is called by:
 18521 ;;		__motor_get_speed_in_degrees
 18522 ;; This function uses a non-reentrant model
 18523 ;;
 18524                           
 18525                           	psect	text53
 18526  011CEA                     __ptext53:
 18527                           	opt stack 0
 18528  011CEA                     ___lmul:
 18529                           	opt stack 17
 18530                           
 18531                           ; BSR set to: 0
 18532                           ;incstack = 0
 18533  011CEA  0E00               	movlw	0
 18534  011CEC  0100               	movlb	0	; () banked
 18535  011CEE  6F68               	movwf	___lmul@product& (0+255),b
 18536  011CF0  0E00               	movlw	0
 18537  011CF2  6F69               	movwf	(___lmul@product+1)& (0+255),b
 18538  011CF4  0E00               	movlw	0
 18539  011CF6  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 18540  011CF8  0E00               	movlw	0
 18541  011CFA  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 18542  011CFC                     
 18543                           ; BSR set to: 0
 18544                           
 18545                           ; BSR set to: 0
 18546  011CFC  A160               	btfss	___lmul@multiplier& (0+255),0,b
 18547  011CFE  D008               	goto	l2688
 18548                           
 18549                           ; BSR set to: 0
 18550  011D00  5164               	movf	___lmul@multiplicand& (0+255),w,b
 18551  011D02  2768               	addwf	___lmul@product& (0+255),f,b
 18552  011D04  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 18553  011D06  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 18554  011D08  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 18555  011D0A  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 18556  011D0C  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 18557  011D0E  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 18558  011D10                     l2688:
 18559                           
 18560                           ; BSR set to: 0
 18561                           
 18562                           ; BSR set to: 0
 18563  011D10  90D8               	bcf	status,0,c
 18564  011D12  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 18565  011D14  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 18566  011D16  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 18567  011D18  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 18568                           
 18569                           ; BSR set to: 0
 18570  011D1A  90D8               	bcf	status,0,c
 18571  011D1C  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 18572  011D1E  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 18573  011D20  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 18574  011D22  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 18575  011D24  5160               	movf	___lmul@multiplier& (0+255),w,b
 18576  011D26  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 18577  011D28  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 18578  011D2A  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 18579  011D2C  A4D8               	btfss	status,2,c
 18580  011D2E  D7E6               	goto	l2687
 18581                           
 18582                           ; BSR set to: 0
 18583  011D30  C068  F060         	movff	___lmul@product,?___lmul
 18584  011D34  C069  F061         	movff	___lmul@product+1,?___lmul+1
 18585  011D38  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 18586  011D3C  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 18587                           
 18588                           ; BSR set to: 0
 18589  011D40  0012               	return		;funcret
 18590  011D42                     __end_of___lmul:
 18591                           	opt stack 0
 18592                           tblptru	equ	0xFF8
 18593                           tblptrh	equ	0xFF7
 18594                           tblptrl	equ	0xFF6
 18595                           tablat	equ	0xFF5
 18596                           prodh	equ	0xFF4
 18597                           prodl	equ	0xFF3
 18598                           intcon	equ	0xFF2
 18599                           postinc0	equ	0xFEE
 18600                           wreg	equ	0xFE8
 18601                           indf1	equ	0xFE7
 18602                           postdec1	equ	0xFE5
 18603                           plusw1	equ	0xFE3
 18604                           fsr1h	equ	0xFE2
 18605                           fsr1l	equ	0xFE1
 18606                           indf2	equ	0xFDF
 18607                           postinc2	equ	0xFDE
 18608                           postdec2	equ	0xFDD
 18609                           plusw2	equ	0xFDB
 18610                           fsr2h	equ	0xFDA
 18611                           fsr2l	equ	0xFD9
 18612                           status	equ	0xFD8
 18613                           
 18614 ;; *************** function ___fltol *****************
 18615 ;; Defined at:
 18616 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
 18617 ;; Parameters:    Size  Location     Type
 18618 ;;  f1              4    0[BANK0 ] unsigned long 
 18619 ;; Auto vars:     Size  Location     Type
 18620 ;;  exp1            1    9[BANK0 ] unsigned char 
 18621 ;;  sign1           1    8[BANK0 ] unsigned char 
 18622 ;; Return value:  Size  Location     Type
 18623 ;;                  4    0[BANK0 ] long 
 18624 ;; Registers used:
 18625 ;;		wreg, status,2, status,0
 18626 ;; Tracked objects:
 18627 ;;		On entry : 0/0
 18628 ;;		On exit  : 0/0
 18629 ;;		Unchanged: 0/0
 18630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18631 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18632 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18633 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18634 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18635 ;;Total ram usage:       10 bytes
 18636 ;; Hardware stack levels used:    1
 18637 ;; Hardware stack levels required when called:   10
 18638 ;; This function calls:
 18639 ;;		Nothing
 18640 ;; This function is called by:
 18641 ;;		_main
 18642 ;;		_motor_steps_from_degrees
 18643 ;;		__motor_get_speed_in_degrees
 18644 ;;		_motor_go_to_degrees_position
 18645 ;;		_encoder_statemachine
 18646 ;; This function uses a non-reentrant model
 18647 ;;
 18648                           
 18649                           	psect	text54
 18650  0100E6                     __ptext54:
 18651                           	opt stack 0
 18652  0100E6                     ___fltol:
 18653                           	opt stack 17
 18654                           
 18655                           ; BSR set to: 0
 18656                           ;incstack = 0
 18657  0100E6  0100               	movlb	0	; () banked
 18658  0100E8  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
 18659  0100EA  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
 18660  0100EC  6F69               	movwf	___fltol@exp1& (0+255),b
 18661  0100EE  5169               	movf	___fltol@exp1& (0+255),w,b
 18662  0100F0  A4D8               	btfss	status,2,c
 18663  0100F2  D009               	goto	l2966
 18664                           
 18665                           ; BSR set to: 0
 18666  0100F4  0E00               	movlw	0
 18667  0100F6  6F60               	movwf	?___fltol& (0+255),b
 18668  0100F8  0E00               	movlw	0
 18669  0100FA  6F61               	movwf	(?___fltol+1)& (0+255),b
 18670  0100FC  0E00               	movlw	0
 18671  0100FE  6F62               	movwf	(?___fltol+2)& (0+255),b
 18672  010100  0E00               	movlw	0
 18673  010102  6F63               	movwf	(?___fltol+3)& (0+255),b
 18674                           
 18675                           ; BSR set to: 0
 18676  010104  0012               	return	
 18677  010106                     l2966:
 18678                           
 18679                           ; BSR set to: 0
 18680                           
 18681                           ; BSR set to: 0
 18682  010106  C060  F064         	movff	___fltol@f1,??___fltol
 18683  01010A  C061  F065         	movff	___fltol@f1+1,??___fltol+1
 18684  01010E  C062  F066         	movff	___fltol@f1+2,??___fltol+2
 18685  010112  C063  F067         	movff	___fltol@f1+3,??___fltol+3
 18686  010116  0E20               	movlw	32
 18687  010118  D005               	goto	u18400
 18688  01011A                     u18405:
 18689  01011A  90D8               	bcf	status,0,c
 18690  01011C  3367               	rrcf	(??___fltol+3)& (0+255),f,b
 18691  01011E  3366               	rrcf	(??___fltol+2)& (0+255),f,b
 18692  010120  3365               	rrcf	(??___fltol+1)& (0+255),f,b
 18693  010122  3364               	rrcf	??___fltol& (0+255),f,b
 18694  010124                     u18400:
 18695  010124  2EE8               	decfsz	wreg,f,c
 18696  010126  D7F9               	goto	u18405
 18697  010128  5164               	movf	??___fltol& (0+255),w,b
 18698  01012A  6F68               	movwf	___fltol@sign1& (0+255),b
 18699                           
 18700                           ; BSR set to: 0
 18701  01012C  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
 18702                           
 18703                           ; BSR set to: 0
 18704  01012E  0EFF               	movlw	255
 18705  010130  1760               	andwf	___fltol@f1& (0+255),f,b
 18706  010132  0EFF               	movlw	255
 18707  010134  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
 18708  010136  0EFF               	movlw	255
 18709  010138  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
 18710  01013A  0E00               	movlw	0
 18711  01013C  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
 18712                           
 18713                           ; BSR set to: 0
 18714  01013E  0E96               	movlw	150
 18715  010140  5F69               	subwf	___fltol@exp1& (0+255),f,b
 18716                           
 18717                           ; BSR set to: 0
 18718  010142  AF69               	btfss	___fltol@exp1& (0+255),7,b
 18719  010144  D016               	goto	l2968
 18720                           
 18721                           ; BSR set to: 0
 18722  010146  5169               	movf	___fltol@exp1& (0+255),w,b
 18723  010148  0A80               	xorlw	128
 18724  01014A  0F97               	addlw	151
 18725  01014C  B0D8               	btfsc	status,0,c
 18726  01014E  D009               	goto	l2969
 18727                           
 18728                           ; BSR set to: 0
 18729  010150  0E00               	movlw	0
 18730  010152  6F60               	movwf	?___fltol& (0+255),b
 18731  010154  0E00               	movlw	0
 18732  010156  6F61               	movwf	(?___fltol+1)& (0+255),b
 18733  010158  0E00               	movlw	0
 18734  01015A  6F62               	movwf	(?___fltol+2)& (0+255),b
 18735  01015C  0E00               	movlw	0
 18736  01015E  6F63               	movwf	(?___fltol+3)& (0+255),b
 18737                           
 18738                           ; BSR set to: 0
 18739  010160  0012               	return	
 18740  010162                     l2969:
 18741                           
 18742                           ; BSR set to: 0
 18743                           
 18744                           ; BSR set to: 0
 18745                           
 18746                           ; BSR set to: 0
 18747  010162  90D8               	bcf	status,0,c
 18748  010164  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
 18749  010166  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
 18750  010168  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
 18751  01016A  3360               	rrcf	___fltol@f1& (0+255),f,b
 18752                           
 18753                           ; BSR set to: 0
 18754  01016C  3F69               	incfsz	___fltol@exp1& (0+255),f,b
 18755  01016E  D7F9               	goto	l2969
 18756                           
 18757                           ; BSR set to: 0
 18758  010170  D015               	goto	u18440
 18759  010172                     l2968:
 18760                           
 18761                           ; BSR set to: 0
 18762                           
 18763                           ; BSR set to: 0
 18764  010172  0E1F               	movlw	31
 18765  010174  6569               	cpfsgt	___fltol@exp1& (0+255),b
 18766  010176  D00F               	goto	l2974
 18767                           
 18768                           ; BSR set to: 0
 18769  010178  0E00               	movlw	0
 18770  01017A  6F60               	movwf	?___fltol& (0+255),b
 18771  01017C  0E00               	movlw	0
 18772  01017E  6F61               	movwf	(?___fltol+1)& (0+255),b
 18773  010180  0E00               	movlw	0
 18774  010182  6F62               	movwf	(?___fltol+2)& (0+255),b
 18775  010184  0E00               	movlw	0
 18776  010186  6F63               	movwf	(?___fltol+3)& (0+255),b
 18777                           
 18778                           ; BSR set to: 0
 18779  010188  0012               	return	
 18780  01018A                     
 18781                           ; BSR set to: 0
 18782                           
 18783                           ; BSR set to: 0
 18784  01018A  90D8               	bcf	status,0,c
 18785  01018C  3760               	rlcf	___fltol@f1& (0+255),f,b
 18786  01018E  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
 18787  010190  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
 18788  010192  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
 18789  010194  0769               	decf	___fltol@exp1& (0+255),f,b
 18790  010196                     l2974:
 18791                           
 18792                           ; BSR set to: 0
 18793                           
 18794                           ; BSR set to: 0
 18795  010196  5169               	movf	___fltol@exp1& (0+255),w,b
 18796  010198  A4D8               	btfss	status,2,c
 18797  01019A  D7F7               	goto	l2975
 18798  01019C                     u18440:
 18799                           
 18800                           ; BSR set to: 0
 18801                           
 18802                           ; BSR set to: 0
 18803                           
 18804                           ; BSR set to: 0
 18805  01019C  5168               	movf	___fltol@sign1& (0+255),w,b
 18806  01019E  B4D8               	btfsc	status,2,c
 18807  0101A0  D008               	goto	l2977
 18808                           
 18809                           ; BSR set to: 0
 18810  0101A2  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
 18811  0101A4  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
 18812  0101A6  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
 18813  0101A8  6D60               	negf	___fltol@f1& (0+255),b
 18814  0101AA  0E00               	movlw	0
 18815  0101AC  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
 18816  0101AE  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
 18817  0101B0  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
 18818  0101B2                     l2977:
 18819                           
 18820                           ; BSR set to: 0
 18821                           
 18822                           ; BSR set to: 0
 18823  0101B2  C060  F060         	movff	___fltol@f1,?___fltol
 18824  0101B6  C061  F061         	movff	___fltol@f1+1,?___fltol+1
 18825  0101BA  C062  F062         	movff	___fltol@f1+2,?___fltol+2
 18826  0101BE  C063  F063         	movff	___fltol@f1+3,?___fltol+3
 18827  0101C2  0012               	return	
 18828  0101C4                     __end_of___fltol:
 18829                           	opt stack 0
 18830                           tblptru	equ	0xFF8
 18831                           tblptrh	equ	0xFF7
 18832                           tblptrl	equ	0xFF6
 18833                           tablat	equ	0xFF5
 18834                           prodh	equ	0xFF4
 18835                           prodl	equ	0xFF3
 18836                           intcon	equ	0xFF2
 18837                           postinc0	equ	0xFEE
 18838                           wreg	equ	0xFE8
 18839                           indf1	equ	0xFE7
 18840                           postdec1	equ	0xFE5
 18841                           plusw1	equ	0xFE3
 18842                           fsr1h	equ	0xFE2
 18843                           fsr1l	equ	0xFE1
 18844                           indf2	equ	0xFDF
 18845                           postinc2	equ	0xFDE
 18846                           postdec2	equ	0xFDD
 18847                           plusw2	equ	0xFDB
 18848                           fsr2h	equ	0xFDA
 18849                           fsr2l	equ	0xFD9
 18850                           status	equ	0xFD8
 18851                           
 18852 ;; *************** function ___fldiv *****************
 18853 ;; Defined at:
 18854 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
 18855 ;; Parameters:    Size  Location     Type
 18856 ;;  b               4   14[BANK0 ] long 
 18857 ;;  a               4   18[BANK0 ] long 
 18858 ;; Auto vars:     Size  Location     Type
 18859 ;;  grs             4   33[BANK0 ] unsigned long 
 18860 ;;  rem             4   26[BANK0 ] unsigned long 
 18861 ;;  new_exp         2   31[BANK0 ] int 
 18862 ;;  aexp            1   38[BANK0 ] unsigned char 
 18863 ;;  bexp            1   37[BANK0 ] unsigned char 
 18864 ;;  sign            1   30[BANK0 ] unsigned char 
 18865 ;; Return value:  Size  Location     Type
 18866 ;;                  4   14[BANK0 ] unsigned char 
 18867 ;; Registers used:
 18868 ;;		wreg, status,2, status,0
 18869 ;; Tracked objects:
 18870 ;;		On entry : 0/0
 18871 ;;		On exit  : 0/0
 18872 ;;		Unchanged: 0/0
 18873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18874 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18875 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18876 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18877 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18878 ;;Total ram usage:       25 bytes
 18879 ;; Hardware stack levels used:    1
 18880 ;; Hardware stack levels required when called:   10
 18881 ;; This function calls:
 18882 ;;		Nothing
 18883 ;; This function is called by:
 18884 ;;		_main
 18885 ;;		_motor_steps_from_degrees
 18886 ;;		__motor_get_speed_in_degrees
 18887 ;;		_motor_go_to_degrees_position
 18888 ;;		_encoder_statemachine
 18889 ;; This function uses a non-reentrant model
 18890 ;;
 18891                           
 18892                           	psect	text55
 18893  00CEEC                     __ptext55:
 18894                           	opt stack 0
 18895  00CEEC                     ___fldiv:
 18896                           	opt stack 17
 18897                           
 18898                           ; BSR set to: 0
 18899                           ;incstack = 0
 18900  00CEEC  0100               	movlb	0	; () banked
 18901  00CEEE  5171               	movf	(___fldiv@b+3)& (0+255),w,b
 18902  00CEF0  0B80               	andlw	128
 18903  00CEF2  6F7E               	movwf	___fldiv@sign& (0+255),b
 18904  00CEF4  5171               	movf	(___fldiv@b+3)& (0+255),w,b
 18905  00CEF6  2571               	addwf	(___fldiv@b+3)& (0+255),w,b
 18906  00CEF8  6F85               	movwf	___fldiv@bexp& (0+255),b
 18907                           
 18908                           ; BSR set to: 0
 18909  00CEFA  BF70               	btfsc	(___fldiv@b+2)& (0+255),7,b
 18910                           
 18911                           ; BSR set to: 0
 18912  00CEFC  8185               	bsf	___fldiv@bexp& (0+255),0,b
 18913                           
 18914                           ; BSR set to: 0
 18915                           
 18916                           ; BSR set to: 0
 18917  00CEFE  5185               	movf	___fldiv@bexp& (0+255),w,b
 18918  00CF00  B4D8               	btfsc	status,2,c
 18919  00CF02  D00D               	goto	l3240
 18920                           
 18921                           ; BSR set to: 0
 18922  00CF04  2985               	incf	___fldiv@bexp& (0+255),w,b
 18923  00CF06  A4D8               	btfss	status,2,c
 18924  00CF08  D008               	goto	l3241
 18925                           
 18926                           ; BSR set to: 0
 18927  00CF0A  0E00               	movlw	0
 18928  00CF0C  6F6E               	movwf	___fldiv@b& (0+255),b
 18929  00CF0E  0E00               	movlw	0
 18930  00CF10  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 18931  00CF12  0E00               	movlw	0
 18932  00CF14  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 18933  00CF16  0E00               	movlw	0
 18934  00CF18  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 18935  00CF1A                     l3241:
 18936                           
 18937                           ; BSR set to: 0
 18938                           
 18939                           ; BSR set to: 0
 18940  00CF1A  8F70               	bsf	(___fldiv@b+2)& (0+255),7,b
 18941  00CF1C  D006               	goto	L33
 18942  00CF1E                     l3240:
 18943                           
 18944                           ; BSR set to: 0
 18945                           
 18946                           ; BSR set to: 0
 18947  00CF1E  0E00               	movlw	0
 18948  00CF20  6F6E               	movwf	___fldiv@b& (0+255),b
 18949  00CF22  0E00               	movlw	0
 18950  00CF24  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 18951  00CF26  0E00               	movlw	0
 18952  00CF28  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 18953  00CF2A                     L33:
 18954  00CF2A  0E00               	movlw	0
 18955  00CF2C  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 18956                           
 18957                           ; BSR set to: 0
 18958                           
 18959                           ; BSR set to: 0
 18960  00CF2E  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 18961  00CF30  0B80               	andlw	128
 18962  00CF32  1B7E               	xorwf	___fldiv@sign& (0+255),f,b
 18963                           
 18964                           ; BSR set to: 0
 18965  00CF34  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 18966  00CF36  2575               	addwf	(___fldiv@a+3)& (0+255),w,b
 18967  00CF38  6F86               	movwf	___fldiv@aexp& (0+255),b
 18968                           
 18969                           ; BSR set to: 0
 18970  00CF3A  BF74               	btfsc	(___fldiv@a+2)& (0+255),7,b
 18971                           
 18972                           ; BSR set to: 0
 18973  00CF3C  8186               	bsf	___fldiv@aexp& (0+255),0,b
 18974                           
 18975                           ; BSR set to: 0
 18976                           
 18977                           ; BSR set to: 0
 18978  00CF3E  5186               	movf	___fldiv@aexp& (0+255),w,b
 18979  00CF40  B4D8               	btfsc	status,2,c
 18980  00CF42  D00D               	goto	l3244
 18981                           
 18982                           ; BSR set to: 0
 18983  00CF44  2986               	incf	___fldiv@aexp& (0+255),w,b
 18984  00CF46  A4D8               	btfss	status,2,c
 18985  00CF48  D008               	goto	l3245
 18986                           
 18987                           ; BSR set to: 0
 18988  00CF4A  0E00               	movlw	0
 18989  00CF4C  6F72               	movwf	___fldiv@a& (0+255),b
 18990  00CF4E  0E00               	movlw	0
 18991  00CF50  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 18992  00CF52  0E00               	movlw	0
 18993  00CF54  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 18994  00CF56  0E00               	movlw	0
 18995  00CF58  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 18996  00CF5A                     l3245:
 18997                           
 18998                           ; BSR set to: 0
 18999                           
 19000                           ; BSR set to: 0
 19001  00CF5A  8F74               	bsf	(___fldiv@a+2)& (0+255),7,b
 19002  00CF5C  D006               	goto	L34
 19003  00CF5E                     l3244:
 19004                           
 19005                           ; BSR set to: 0
 19006                           
 19007                           ; BSR set to: 0
 19008  00CF5E  0E00               	movlw	0
 19009  00CF60  6F72               	movwf	___fldiv@a& (0+255),b
 19010  00CF62  0E00               	movlw	0
 19011  00CF64  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 19012  00CF66  0E00               	movlw	0
 19013  00CF68  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 19014  00CF6A                     L34:
 19015  00CF6A  0E00               	movlw	0
 19016  00CF6C  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 19017                           
 19018                           ; BSR set to: 0
 19019                           
 19020                           ; BSR set to: 0
 19021  00CF6E  5172               	movf	___fldiv@a& (0+255),w,b
 19022  00CF70  1173               	iorwf	(___fldiv@a+1)& (0+255),w,b
 19023  00CF72  1174               	iorwf	(___fldiv@a+2)& (0+255),w,b
 19024  00CF74  1175               	iorwf	(___fldiv@a+3)& (0+255),w,b
 19025  00CF76  A4D8               	btfss	status,2,c
 19026  00CF78  D017               	goto	l3247
 19027                           
 19028                           ; BSR set to: 0
 19029  00CF7A  0E00               	movlw	0
 19030  00CF7C  6F6E               	movwf	___fldiv@b& (0+255),b
 19031  00CF7E  0E00               	movlw	0
 19032  00CF80  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 19033  00CF82  0E00               	movlw	0
 19034  00CF84  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 19035  00CF86  0E00               	movlw	0
 19036  00CF88  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 19037                           
 19038                           ; BSR set to: 0
 19039  00CF8A  0E80               	movlw	128
 19040  00CF8C  1370               	iorwf	(___fldiv@b+2)& (0+255),f,b
 19041  00CF8E  0E7F               	movlw	127
 19042  00CF90  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 19043                           
 19044                           ; BSR set to: 0
 19045  00CF92  517E               	movf	___fldiv@sign& (0+255),w,b
 19046  00CF94  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 19047                           
 19048                           ; BSR set to: 0
 19049  00CF96  C06E  F06E         	movff	___fldiv@b,?___fldiv
 19050  00CF9A  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 19051  00CF9E  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 19052  00CFA2  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 19053                           
 19054                           ; BSR set to: 0
 19055  00CFA6  0012               	return	
 19056  00CFA8                     l3247:
 19057                           
 19058                           ; BSR set to: 0
 19059                           
 19060                           ; BSR set to: 0
 19061  00CFA8  5185               	movf	___fldiv@bexp& (0+255),w,b
 19062  00CFAA  A4D8               	btfss	status,2,c
 19063  00CFAC  D011               	goto	l3249
 19064                           
 19065                           ; BSR set to: 0
 19066  00CFAE  0E00               	movlw	0
 19067  00CFB0  6F6E               	movwf	___fldiv@b& (0+255),b
 19068  00CFB2  0E00               	movlw	0
 19069  00CFB4  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 19070  00CFB6  0E00               	movlw	0
 19071  00CFB8  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 19072  00CFBA  0E00               	movlw	0
 19073  00CFBC  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 19074                           
 19075                           ; BSR set to: 0
 19076  00CFBE  C06E  F06E         	movff	___fldiv@b,?___fldiv
 19077  00CFC2  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 19078  00CFC6  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 19079  00CFCA  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 19080                           
 19081                           ; BSR set to: 0
 19082  00CFCE  0012               	return	
 19083  00CFD0                     l3249:
 19084                           
 19085                           ; BSR set to: 0
 19086                           
 19087                           ; BSR set to: 0
 19088  00CFD0  5186               	movf	___fldiv@aexp& (0+255),w,b
 19089  00CFD2  6F76               	movwf	??___fldiv& (0+255),b
 19090  00CFD4  6B77               	clrf	(??___fldiv+1)& (0+255),b
 19091  00CFD6  1F76               	comf	??___fldiv& (0+255),f,b
 19092  00CFD8  1F77               	comf	(??___fldiv+1)& (0+255),f,b
 19093  00CFDA  4B76               	infsnz	??___fldiv& (0+255),f,b
 19094  00CFDC  2B77               	incf	(??___fldiv+1)& (0+255),f,b
 19095  00CFDE  5185               	movf	___fldiv@bexp& (0+255),w,b
 19096  00CFE0  6F78               	movwf	(??___fldiv+2)& (0+255),b
 19097  00CFE2  6B79               	clrf	(??___fldiv+3)& (0+255),b
 19098  00CFE4  5176               	movf	??___fldiv& (0+255),w,b
 19099  00CFE6  2778               	addwf	(??___fldiv+2)& (0+255),f,b
 19100  00CFE8  5177               	movf	(??___fldiv+1)& (0+255),w,b
 19101  00CFEA  2379               	addwfc	(??___fldiv+3)& (0+255),f,b
 19102  00CFEC  0E7F               	movlw	127
 19103  00CFEE  2578               	addwf	(??___fldiv+2)& (0+255),w,b
 19104  00CFF0  6F7F               	movwf	___fldiv@new_exp& (0+255),b
 19105  00CFF2  0E00               	movlw	0
 19106  00CFF4  2179               	addwfc	(??___fldiv+3)& (0+255),w,b
 19107  00CFF6  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 19108                           
 19109                           ; BSR set to: 0
 19110  00CFF8  C06E  F07A         	movff	___fldiv@b,___fldiv@rem
 19111  00CFFC  C06F  F07B         	movff	___fldiv@b+1,___fldiv@rem+1
 19112  00D000  C070  F07C         	movff	___fldiv@b+2,___fldiv@rem+2
 19113  00D004  C071  F07D         	movff	___fldiv@b+3,___fldiv@rem+3
 19114                           
 19115                           ; BSR set to: 0
 19116  00D008  0E00               	movlw	0
 19117  00D00A  6F6E               	movwf	___fldiv@b& (0+255),b
 19118  00D00C  0E00               	movlw	0
 19119  00D00E  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 19120  00D010  0E00               	movlw	0
 19121  00D012  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 19122  00D014  0E00               	movlw	0
 19123  00D016  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 19124                           
 19125                           ; BSR set to: 0
 19126  00D018  0E00               	movlw	0
 19127  00D01A  6F81               	movwf	___fldiv@grs& (0+255),b
 19128  00D01C  0E00               	movlw	0
 19129  00D01E  6F82               	movwf	(___fldiv@grs+1)& (0+255),b
 19130  00D020  0E00               	movlw	0
 19131  00D022  6F83               	movwf	(___fldiv@grs+2)& (0+255),b
 19132  00D024  0E00               	movlw	0
 19133  00D026  6F84               	movwf	(___fldiv@grs+3)& (0+255),b
 19134                           
 19135                           ; BSR set to: 0
 19136  00D028  0E00               	movlw	0
 19137  00D02A  6F86               	movwf	___fldiv@aexp& (0+255),b
 19138  00D02C  D028               	goto	l3250
 19139  00D02E                     
 19140                           ; BSR set to: 0
 19141                           
 19142                           ; BSR set to: 0
 19143  00D02E  5186               	movf	___fldiv@aexp& (0+255),w,b
 19144  00D030  B4D8               	btfsc	status,2,c
 19145  00D032  D011               	goto	l3252
 19146                           
 19147                           ; BSR set to: 0
 19148  00D034  90D8               	bcf	status,0,c
 19149  00D036  377A               	rlcf	___fldiv@rem& (0+255),f,b
 19150  00D038  377B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 19151  00D03A  377C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 19152  00D03C  377D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 19153  00D03E  90D8               	bcf	status,0,c
 19154  00D040  376E               	rlcf	___fldiv@b& (0+255),f,b
 19155  00D042  376F               	rlcf	(___fldiv@b+1)& (0+255),f,b
 19156  00D044  3770               	rlcf	(___fldiv@b+2)& (0+255),f,b
 19157  00D046  3771               	rlcf	(___fldiv@b+3)& (0+255),f,b
 19158                           
 19159                           ; BSR set to: 0
 19160  00D048  BF84               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 19161                           
 19162                           ; BSR set to: 0
 19163  00D04A  816E               	bsf	___fldiv@b& (0+255),0,b
 19164                           
 19165                           ; BSR set to: 0
 19166  00D04C  90D8               	bcf	status,0,c
 19167  00D04E  3781               	rlcf	___fldiv@grs& (0+255),f,b
 19168  00D050  3782               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 19169  00D052  3783               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 19170  00D054  3784               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 19171  00D056                     l3252:
 19172                           
 19173                           ; BSR set to: 0
 19174                           
 19175                           ; BSR set to: 0
 19176  00D056  5172               	movf	___fldiv@a& (0+255),w,b
 19177  00D058  5D7A               	subwf	___fldiv@rem& (0+255),w,b
 19178  00D05A  5173               	movf	(___fldiv@a+1)& (0+255),w,b
 19179  00D05C  597B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 19180  00D05E  5174               	movf	(___fldiv@a+2)& (0+255),w,b
 19181  00D060  597C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 19182  00D062  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 19183  00D064  597D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 19184  00D066  A0D8               	btfss	status,0,c
 19185  00D068  D009               	goto	l3254
 19186                           
 19187                           ; BSR set to: 0
 19188  00D06A  8D84               	bsf	(___fldiv@grs+3)& (0+255),6,b
 19189                           
 19190                           ; BSR set to: 0
 19191  00D06C  5172               	movf	___fldiv@a& (0+255),w,b
 19192  00D06E  5F7A               	subwf	___fldiv@rem& (0+255),f,b
 19193  00D070  5173               	movf	(___fldiv@a+1)& (0+255),w,b
 19194  00D072  5B7B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 19195  00D074  5174               	movf	(___fldiv@a+2)& (0+255),w,b
 19196  00D076  5B7C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 19197  00D078  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 19198  00D07A  5B7D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 19199  00D07C                     l3254:
 19200                           
 19201                           ; BSR set to: 0
 19202                           
 19203                           ; BSR set to: 0
 19204  00D07C  2B86               	incf	___fldiv@aexp& (0+255),f,b
 19205  00D07E                     l3250:
 19206                           
 19207                           ; BSR set to: 0
 19208  00D07E  0E19               	movlw	25
 19209  00D080  6586               	cpfsgt	___fldiv@aexp& (0+255),b
 19210  00D082  D7D5               	goto	l3251
 19211                           
 19212                           ; BSR set to: 0
 19213                           
 19214                           ; BSR set to: 0
 19215  00D084  517A               	movf	___fldiv@rem& (0+255),w,b
 19216  00D086  117B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 19217  00D088  117C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 19218  00D08A  117D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 19219  00D08C  B4D8               	btfsc	status,2,c
 19220  00D08E  D011               	goto	l3257
 19221                           
 19222                           ; BSR set to: 0
 19223  00D090  8181               	bsf	___fldiv@grs& (0+255),0,b
 19224                           
 19225                           ; BSR set to: 0
 19226  00D092  D00F               	goto	l3257
 19227  00D094                     
 19228                           ; BSR set to: 0
 19229                           
 19230                           ; BSR set to: 0
 19231  00D094  90D8               	bcf	status,0,c
 19232  00D096  376E               	rlcf	___fldiv@b& (0+255),f,b
 19233  00D098  376F               	rlcf	(___fldiv@b+1)& (0+255),f,b
 19234  00D09A  3770               	rlcf	(___fldiv@b+2)& (0+255),f,b
 19235  00D09C  3771               	rlcf	(___fldiv@b+3)& (0+255),f,b
 19236                           
 19237                           ; BSR set to: 0
 19238  00D09E  BF84               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 19239                           
 19240                           ; BSR set to: 0
 19241  00D0A0  816E               	bsf	___fldiv@b& (0+255),0,b
 19242                           
 19243                           ; BSR set to: 0
 19244  00D0A2  90D8               	bcf	status,0,c
 19245  00D0A4  3781               	rlcf	___fldiv@grs& (0+255),f,b
 19246  00D0A6  3782               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 19247  00D0A8  3783               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 19248  00D0AA  3784               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 19249  00D0AC  077F               	decf	___fldiv@new_exp& (0+255),f,b
 19250  00D0AE  A0D8               	btfss	status,0,c
 19251  00D0B0  0780               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 19252  00D0B2                     l3257:
 19253                           
 19254                           ; BSR set to: 0
 19255                           
 19256                           ; BSR set to: 0
 19257  00D0B2  AF70               	btfss	(___fldiv@b+2)& (0+255),7,b
 19258  00D0B4  D7EF               	goto	l3258
 19259                           
 19260                           ; BSR set to: 0
 19261                           
 19262                           ; BSR set to: 0
 19263  00D0B6  0E00               	movlw	0
 19264  00D0B8  6F86               	movwf	___fldiv@aexp& (0+255),b
 19265                           
 19266                           ; BSR set to: 0
 19267  00D0BA  AF84               	btfss	(___fldiv@grs+3)& (0+255),7,b
 19268  00D0BC  D016               	goto	l3264
 19269                           
 19270                           ; BSR set to: 0
 19271  00D0BE  0EFF               	movlw	255
 19272  00D0C0  1581               	andwf	___fldiv@grs& (0+255),w,b
 19273  00D0C2  6F76               	movwf	??___fldiv& (0+255),b
 19274  00D0C4  0EFF               	movlw	255
 19275  00D0C6  1582               	andwf	(___fldiv@grs+1)& (0+255),w,b
 19276  00D0C8  6F77               	movwf	(??___fldiv+1)& (0+255),b
 19277  00D0CA  0EFF               	movlw	255
 19278  00D0CC  1583               	andwf	(___fldiv@grs+2)& (0+255),w,b
 19279  00D0CE  6F78               	movwf	(??___fldiv+2)& (0+255),b
 19280  00D0D0  0E7F               	movlw	127
 19281  00D0D2  1584               	andwf	(___fldiv@grs+3)& (0+255),w,b
 19282  00D0D4  6F79               	movwf	(??___fldiv+3)& (0+255),b
 19283  00D0D6  5176               	movf	??___fldiv& (0+255),w,b
 19284  00D0D8  1177               	iorwf	(??___fldiv+1)& (0+255),w,b
 19285  00D0DA  1178               	iorwf	(??___fldiv+2)& (0+255),w,b
 19286  00D0DC  1179               	iorwf	(??___fldiv+3)& (0+255),w,b
 19287  00D0DE  A4D8               	btfss	status,2,c
 19288  00D0E0  D002               	goto	u18140
 19289                           
 19290                           ; BSR set to: 0
 19291                           
 19292                           ; BSR set to: 0
 19293  00D0E2  A16E               	btfss	___fldiv@b& (0+255),0,b
 19294  00D0E4  D002               	goto	l3264
 19295  00D0E6                     u18140:
 19296                           
 19297                           ; BSR set to: 0
 19298  00D0E6  0E01               	movlw	1
 19299  00D0E8  6F86               	movwf	___fldiv@aexp& (0+255),b
 19300  00D0EA                     l3264:
 19301                           
 19302                           ; BSR set to: 0
 19303                           
 19304                           ; BSR set to: 0
 19305                           
 19306                           ; BSR set to: 0
 19307  00D0EA  5186               	movf	___fldiv@aexp& (0+255),w,b
 19308  00D0EC  B4D8               	btfsc	status,2,c
 19309  00D0EE  D01F               	goto	l3266
 19310                           
 19311                           ; BSR set to: 0
 19312  00D0F0  0E01               	movlw	1
 19313  00D0F2  276E               	addwf	___fldiv@b& (0+255),f,b
 19314  00D0F4  0E00               	movlw	0
 19315  00D0F6  236F               	addwfc	(___fldiv@b+1)& (0+255),f,b
 19316  00D0F8  2370               	addwfc	(___fldiv@b+2)& (0+255),f,b
 19317  00D0FA  2371               	addwfc	(___fldiv@b+3)& (0+255),f,b
 19318                           
 19319                           ; BSR set to: 0
 19320  00D0FC  A171               	btfss	(___fldiv@b+3)& (0+255),0,b
 19321  00D0FE  D017               	goto	l3266
 19322                           
 19323                           ; BSR set to: 0
 19324  00D100  C06E  F076         	movff	___fldiv@b,??___fldiv
 19325  00D104  C06F  F077         	movff	___fldiv@b+1,??___fldiv+1
 19326  00D108  C070  F078         	movff	___fldiv@b+2,??___fldiv+2
 19327  00D10C  C071  F079         	movff	___fldiv@b+3,??___fldiv+3
 19328  00D110  3579               	rlcf	(??___fldiv+3)& (0+255),w,b
 19329  00D112  3379               	rrcf	(??___fldiv+3)& (0+255),f,b
 19330  00D114  3378               	rrcf	(??___fldiv+2)& (0+255),f,b
 19331  00D116  3377               	rrcf	(??___fldiv+1)& (0+255),f,b
 19332  00D118  3376               	rrcf	??___fldiv& (0+255),f,b
 19333  00D11A  C076  F06E         	movff	??___fldiv,___fldiv@b
 19334  00D11E  C077  F06F         	movff	??___fldiv+1,___fldiv@b+1
 19335  00D122  C078  F070         	movff	??___fldiv+2,___fldiv@b+2
 19336  00D126  C079  F071         	movff	??___fldiv+3,___fldiv@b+3
 19337                           
 19338                           ; BSR set to: 0
 19339  00D12A  4B7F               	infsnz	___fldiv@new_exp& (0+255),f,b
 19340  00D12C  2B80               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 19341  00D12E                     l3266:
 19342                           
 19343                           ; BSR set to: 0
 19344                           
 19345                           ; BSR set to: 0
 19346                           
 19347                           ; BSR set to: 0
 19348  00D12E  BF80               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 19349  00D130  D010               	goto	l3267
 19350  00D132  5180               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 19351  00D134  E103               	bnz	u18170
 19352  00D136  297F               	incf	___fldiv@new_exp& (0+255),w,b
 19353  00D138  A0D8               	btfss	status,0,c
 19354  00D13A  D00B               	goto	l3267
 19355  00D13C                     u18170:
 19356                           
 19357                           ; BSR set to: 0
 19358  00D13C  0E00               	movlw	0
 19359  00D13E  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 19360  00D140  697F               	setf	___fldiv@new_exp& (0+255),b
 19361  00D142  0E00               	movlw	0
 19362  00D144  6F6E               	movwf	___fldiv@b& (0+255),b
 19363  00D146  0E00               	movlw	0
 19364  00D148  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 19365  00D14A  0E00               	movlw	0
 19366  00D14C  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 19367  00D14E  0E00               	movlw	0
 19368  00D150  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 19369  00D152                     l3267:
 19370                           
 19371                           ; BSR set to: 0
 19372                           
 19373                           ; BSR set to: 0
 19374  00D152  BF80               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 19375  00D154  D005               	goto	u18180
 19376  00D156  5180               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 19377  00D158  E111               	bnz	l18854
 19378  00D15A  057F               	decf	___fldiv@new_exp& (0+255),w,b
 19379  00D15C  B0D8               	btfsc	status,0,c
 19380  00D15E  D00E               	goto	l3268
 19381  00D160                     u18180:
 19382                           
 19383                           ; BSR set to: 0
 19384  00D160  0E00               	movlw	0
 19385  00D162  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 19386  00D164  0E00               	movlw	0
 19387  00D166  6F7F               	movwf	___fldiv@new_exp& (0+255),b
 19388  00D168  0E00               	movlw	0
 19389  00D16A  6F6E               	movwf	___fldiv@b& (0+255),b
 19390  00D16C  0E00               	movlw	0
 19391  00D16E  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 19392  00D170  0E00               	movlw	0
 19393  00D172  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 19394  00D174  0E00               	movlw	0
 19395  00D176  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 19396  00D178  0E00               	movlw	0
 19397  00D17A  6F7E               	movwf	___fldiv@sign& (0+255),b
 19398  00D17C                     l3268:
 19399  00D17C                     l18854:
 19400                           
 19401                           ; BSR set to: 0
 19402  00D17C  C07F  F085         	movff	___fldiv@new_exp,___fldiv@bexp
 19403                           
 19404                           ; BSR set to: 0
 19405  00D180  A185               	btfss	___fldiv@bexp& (0+255),0,b
 19406  00D182  D002               	goto	l3269
 19407                           
 19408                           ; BSR set to: 0
 19409  00D184  8F70               	bsf	(___fldiv@b+2)& (0+255),7,b
 19410  00D186  D001               	goto	l3270
 19411  00D188                     l3269:
 19412                           
 19413                           ; BSR set to: 0
 19414                           
 19415                           ; BSR set to: 0
 19416  00D188  9F70               	bcf	(___fldiv@b+2)& (0+255),7,b
 19417  00D18A                     l3270:
 19418                           
 19419                           ; BSR set to: 0
 19420                           
 19421                           ; BSR set to: 0
 19422  00D18A  90D8               	bcf	status,0,c
 19423  00D18C  3185               	rrcf	___fldiv@bexp& (0+255),w,b
 19424  00D18E  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 19425                           
 19426                           ; BSR set to: 0
 19427  00D190  517E               	movf	___fldiv@sign& (0+255),w,b
 19428  00D192  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 19429                           
 19430                           ; BSR set to: 0
 19431  00D194  C06E  F06E         	movff	___fldiv@b,?___fldiv
 19432  00D198  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 19433  00D19C  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 19434  00D1A0  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 19435  00D1A4  0012               	return	
 19436  00D1A6                     __end_of___fldiv:
 19437                           	opt stack 0
 19438                           tblptru	equ	0xFF8
 19439                           tblptrh	equ	0xFF7
 19440                           tblptrl	equ	0xFF6
 19441                           tablat	equ	0xFF5
 19442                           prodh	equ	0xFF4
 19443                           prodl	equ	0xFF3
 19444                           intcon	equ	0xFF2
 19445                           postinc0	equ	0xFEE
 19446                           wreg	equ	0xFE8
 19447                           indf1	equ	0xFE7
 19448                           postdec1	equ	0xFE5
 19449                           plusw1	equ	0xFE3
 19450                           fsr1h	equ	0xFE2
 19451                           fsr1l	equ	0xFE1
 19452                           indf2	equ	0xFDF
 19453                           postinc2	equ	0xFDE
 19454                           postdec2	equ	0xFDD
 19455                           plusw2	equ	0xFDB
 19456                           fsr2h	equ	0xFDA
 19457                           fsr2l	equ	0xFD9
 19458                           status	equ	0xFD8
 19459                           
 19460 ;; *************** function __display_signed_itoa *****************
 19461 ;; Defined at:
 19462 ;;		line 116 in file "display.c"
 19463 ;; Parameters:    Size  Location     Type
 19464 ;;  value           2   47[BANK0 ] int 
 19465 ;;  text            2   49[BANK0 ] PTR unsigned char 
 19466 ;;		 -> display_prepare@temp(10), 
 19467 ;; Auto vars:     Size  Location     Type
 19468 ;;		None
 19469 ;; Return value:  Size  Location     Type
 19470 ;;                  1    wreg      void 
 19471 ;; Registers used:
 19472 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19473 ;; Tracked objects:
 19474 ;;		On entry : 0/0
 19475 ;;		On exit  : 0/0
 19476 ;;		Unchanged: 0/0
 19477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19478 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19481 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19482 ;;Total ram usage:        4 bytes
 19483 ;; Hardware stack levels used:    1
 19484 ;; Hardware stack levels required when called:   14
 19485 ;; This function calls:
 19486 ;;		__display_padded_itoa
 19487 ;; This function is called by:
 19488 ;;		_display_prepare
 19489 ;; This function uses a non-reentrant model
 19490 ;;
 19491                           
 19492                           	psect	text56
 19493  01215A                     __ptext56:
 19494                           	opt stack 0
 19495  01215A                     __display_signed_itoa:
 19496                           	opt stack 15
 19497                           
 19498                           ;display.c: 118: if(value<0)
 19499                           
 19500                           ; BSR set to: 0
 19501                           ;incstack = 0
 19502  01215A  0100               	movlb	0	; () banked
 19503  01215C  AF90               	btfss	(__display_signed_itoa@value+1)& (0+255),7,b
 19504  01215E  D00A               	goto	l1286
 19505                           
 19506                           ; BSR set to: 0
 19507                           ;display.c: 119: {;display.c: 120: value = -value;
 19508  012160  6D8F               	negf	__display_signed_itoa@value& (0+255),b
 19509  012162  1F90               	comf	(__display_signed_itoa@value+1)& (0+255),f,b
 19510  012164  B0D8               	btfsc	status,0,c
 19511  012166  2B90               	incf	(__display_signed_itoa@value+1)& (0+255),f,b
 19512                           
 19513                           ; BSR set to: 0
 19514                           ;display.c: 121: text[0] = '-';
 19515  012168  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 19516  01216C  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 19517  012170  0E2D               	movlw	45
 19518  012172  D005               	goto	L35
 19519  012174                     l1286:
 19520                           
 19521                           ; BSR set to: 0
 19522                           ;display.c: 123: else;display.c: 124: {;display.c: 125: text[0] = '+';
 19523                           
 19524                           ; BSR set to: 0
 19525  012174  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 19526  012178  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 19527  01217C  0E2B               	movlw	43
 19528  01217E                     L35:
 19529  01217E  6EDF               	movwf	indf2,c
 19530                           
 19531                           ; BSR set to: 0
 19532                           ;display.c: 126: };display.c: 127: _display_padded_itoa(value, 0, &text[1]);
 19533                           
 19534                           ; BSR set to: 0
 19535  012180  C08F  F078         	movff	__display_signed_itoa@value,__display_padded_itoa@value
 19536  012184  C090  F079         	movff	__display_signed_itoa@value+1,__display_padded_itoa@value+1
 19537  012188  0E00               	movlw	0
 19538  01218A  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 19539  01218C  0E01               	movlw	1
 19540  01218E  2591               	addwf	__display_signed_itoa@text& (0+255),w,b
 19541  012190  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 19542  012192  0E00               	movlw	0
 19543  012194  2192               	addwfc	(__display_signed_itoa@text+1)& (0+255),w,b
 19544  012196  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 19545  012198  EC02  F080         	call	__display_padded_itoa	;wreg free
 19546  01219C  0012               	return		;funcret
 19547  01219E                     __end_of__display_signed_itoa:
 19548                           	opt stack 0
 19549                           tblptru	equ	0xFF8
 19550                           tblptrh	equ	0xFF7
 19551                           tblptrl	equ	0xFF6
 19552                           tablat	equ	0xFF5
 19553                           prodh	equ	0xFF4
 19554                           prodl	equ	0xFF3
 19555                           intcon	equ	0xFF2
 19556                           postinc0	equ	0xFEE
 19557                           wreg	equ	0xFE8
 19558                           indf1	equ	0xFE7
 19559                           postdec1	equ	0xFE5
 19560                           plusw1	equ	0xFE3
 19561                           fsr1h	equ	0xFE2
 19562                           fsr1l	equ	0xFE1
 19563                           indf2	equ	0xFDF
 19564                           postinc2	equ	0xFDE
 19565                           postdec2	equ	0xFDD
 19566                           plusw2	equ	0xFDB
 19567                           fsr2h	equ	0xFDA
 19568                           fsr2l	equ	0xFD9
 19569                           status	equ	0xFD8
 19570                           
 19571 ;; *************** function __display_padded_itoa *****************
 19572 ;; Defined at:
 19573 ;;		line 94 in file "display.c"
 19574 ;; Parameters:    Size  Location     Type
 19575 ;;  value           2   24[BANK0 ] int 
 19576 ;;  length          1   26[BANK0 ] unsigned char 
 19577 ;;  text            2   27[BANK0 ] PTR unsigned char 
 19578 ;;		 -> display_prepare@temp(10), 
 19579 ;; Auto vars:     Size  Location     Type
 19580 ;;  tmp            10   34[BANK0 ] unsigned char [10]
 19581 ;;  padding         1   46[BANK0 ] unsigned char 
 19582 ;;  pos             1   45[BANK0 ] unsigned char 
 19583 ;;  len             1   44[BANK0 ] unsigned char 
 19584 ;; Return value:  Size  Location     Type
 19585 ;;                  1    wreg      void 
 19586 ;; Registers used:
 19587 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19588 ;; Tracked objects:
 19589 ;;		On entry : 0/0
 19590 ;;		On exit  : 0/0
 19591 ;;		Unchanged: 0/0
 19592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19593 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19594 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19595 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19596 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19597 ;;Total ram usage:       23 bytes
 19598 ;; Hardware stack levels used:    1
 19599 ;; Hardware stack levels required when called:   13
 19600 ;; This function calls:
 19601 ;;		_itoa
 19602 ;;		_strlen
 19603 ;; This function is called by:
 19604 ;;		__display_signed_itoa
 19605 ;;		_display_prepare
 19606 ;; This function uses a non-reentrant model
 19607 ;;
 19608                           
 19609                           	psect	text57
 19610  010004                     __ptext57:
 19611                           	opt stack 0
 19612  010004                     __display_padded_itoa:
 19613                           	opt stack 15
 19614                           
 19615                           ;display.c: 96: uint8_t pos;;display.c: 97: uint8_t padding;;display.c: 99: uint8_t len;
      +                          ;display.c: 100: char tmp[10];;display.c: 101: itoa(tmp, value, 10);
 19616                           
 19617                           ;incstack = 0
 19618  010004  0E82               	movlw	low __display_padded_itoa@tmp
 19619  010006  0100               	movlb	0	; () banked
 19620  010008  6F70               	movwf	itoa@buf& (0+255),b
 19621  01000A  0E00               	movlw	high __display_padded_itoa@tmp
 19622  01000C  6F71               	movwf	(itoa@buf+1)& (0+255),b
 19623  01000E  C078  F072         	movff	__display_padded_itoa@value,itoa@val
 19624  010012  C079  F073         	movff	__display_padded_itoa@value+1,itoa@val+1
 19625  010016  0E00               	movlw	0
 19626  010018  6F75               	movwf	(itoa@base+1)& (0+255),b
 19627  01001A  0E0A               	movlw	10
 19628  01001C  6F74               	movwf	itoa@base& (0+255),b
 19629  01001E  ECCF  F090         	call	_itoa	;wreg free
 19630                           
 19631                           ;display.c: 102: len = strlen(tmp);
 19632  010022  0E82               	movlw	low __display_padded_itoa@tmp
 19633  010024  0100               	movlb	0	; () banked
 19634  010026  6F60               	movwf	strlen@s& (0+255),b
 19635  010028  0E00               	movlw	high __display_padded_itoa@tmp
 19636  01002A  6F61               	movwf	(strlen@s+1)& (0+255),b
 19637  01002C  EC55  F091         	call	_strlen	;wreg free
 19638  010030  0100               	movlb	0	; () banked
 19639  010032  5160               	movf	?_strlen& (0+255),w,b
 19640  010034  6F8C               	movwf	__display_padded_itoa@len& (0+255),b
 19641                           
 19642                           ; BSR set to: 0
 19643                           ;display.c: 103: padding = 0;
 19644  010036  0E00               	movlw	0
 19645  010038  6F8E               	movwf	__display_padded_itoa@padding& (0+255),b
 19646                           
 19647                           ;display.c: 104: while((padding+len)<length)
 19648  01003A  D00B               	goto	l1277
 19649  01003C                     
 19650                           ; BSR set to: 0
 19651                           ;display.c: 105: {;display.c: 106: text[padding] = ' ';
 19652                           
 19653                           ; BSR set to: 0
 19654  01003C  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 19655  01003E  0D01               	mullw	1
 19656  010040  50F3               	movf	prodl,w,c
 19657  010042  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 19658  010044  6ED9               	movwf	fsr2l,c
 19659  010046  50F4               	movf	prodh,w,c
 19660  010048  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 19661  01004A  6EDA               	movwf	fsr2h,c
 19662  01004C  0E20               	movlw	32
 19663  01004E  6EDF               	movwf	indf2,c
 19664                           
 19665                           ; BSR set to: 0
 19666                           ;display.c: 107: ++padding;
 19667  010050  2B8E               	incf	__display_padded_itoa@padding& (0+255),f,b
 19668  010052                     l1277:
 19669                           
 19670                           ; BSR set to: 0
 19671                           
 19672                           ; BSR set to: 0
 19673  010052  517A               	movf	__display_padded_itoa@length& (0+255),w,b
 19674  010054  6F7D               	movwf	??__display_padded_itoa& (0+255),b
 19675  010056  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 19676  010058  518C               	movf	__display_padded_itoa@len& (0+255),w,b
 19677  01005A  C08E  F07F         	movff	__display_padded_itoa@padding,??__display_padded_itoa+2
 19678  01005E  6B80               	clrf	(??__display_padded_itoa+3)& (0+255),b
 19679  010060  277F               	addwf	(??__display_padded_itoa+2)& (0+255),f,b
 19680  010062  0E00               	movlw	0
 19681  010064  2380               	addwfc	(??__display_padded_itoa+3)& (0+255),f,b
 19682  010066  517D               	movf	??__display_padded_itoa& (0+255),w,b
 19683  010068  5D7F               	subwf	(??__display_padded_itoa+2)& (0+255),w,b
 19684  01006A  5180               	movf	(??__display_padded_itoa+3)& (0+255),w,b
 19685  01006C  0A80               	xorlw	128
 19686  01006E  6F81               	movwf	(??__display_padded_itoa+4)& (0+255),b
 19687  010070  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 19688  010072  0A80               	xorlw	128
 19689  010074  5981               	subwfb	(??__display_padded_itoa+4)& (0+255),w,b
 19690  010076  A0D8               	btfss	status,0,c
 19691  010078  D7E1               	goto	l1278
 19692                           
 19693                           ; BSR set to: 0
 19694                           ;display.c: 108: };display.c: 109: for(pos=0; tmp[pos]; ++pos)
 19695                           
 19696                           ; BSR set to: 0
 19697  01007A  0E00               	movlw	0
 19698  01007C  6F8D               	movwf	__display_padded_itoa@pos& (0+255),b
 19699  01007E  D018               	goto	l1280
 19700  010080                     
 19701                           ; BSR set to: 0
 19702                           ;display.c: 110: {;display.c: 111: text[pos+padding] = tmp[pos];
 19703                           
 19704                           ; BSR set to: 0
 19705  010080  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 19706  010082  0D01               	mullw	1
 19707  010084  0E82               	movlw	low __display_padded_itoa@tmp
 19708  010086  24F3               	addwf	prodl,w,c
 19709  010088  6ED9               	movwf	fsr2l,c
 19710  01008A  0E00               	movlw	high __display_padded_itoa@tmp
 19711  01008C  20F4               	addwfc	prodh,w,c
 19712  01008E  6EDA               	movwf	fsr2h,c
 19713  010090  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 19714  010092  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 19715  010096  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 19716  010098  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 19717  01009A  0E00               	movlw	0
 19718  01009C  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 19719  01009E  517D               	movf	??__display_padded_itoa& (0+255),w,b
 19720  0100A0  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 19721  0100A2  6EE1               	movwf	fsr1l,c
 19722  0100A4  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 19723  0100A6  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 19724  0100A8  6EE2               	movwf	fsr1h,c
 19725  0100AA  CFDF FFE7          	movff	indf2,indf1
 19726                           
 19727                           ; BSR set to: 0
 19728  0100AE  2B8D               	incf	__display_padded_itoa@pos& (0+255),f,b
 19729  0100B0                     l1280:
 19730                           
 19731                           ; BSR set to: 0
 19732                           
 19733                           ; BSR set to: 0
 19734  0100B0  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 19735  0100B2  0D01               	mullw	1
 19736  0100B4  0E82               	movlw	low __display_padded_itoa@tmp
 19737  0100B6  24F3               	addwf	prodl,w,c
 19738  0100B8  6ED9               	movwf	fsr2l,c
 19739  0100BA  0E00               	movlw	high __display_padded_itoa@tmp
 19740  0100BC  20F4               	addwfc	prodh,w,c
 19741  0100BE  6EDA               	movwf	fsr2h,c
 19742  0100C0  50DF               	movf	indf2,w,c
 19743  0100C2  A4D8               	btfss	status,2,c
 19744  0100C4  D7DD               	goto	l1281
 19745                           
 19746                           ; BSR set to: 0
 19747                           ;display.c: 112: };display.c: 113: text[pos+padding] = 0x00;
 19748                           
 19749                           ; BSR set to: 0
 19750  0100C6  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 19751  0100C8  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 19752  0100CC  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 19753  0100CE  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 19754  0100D0  0E00               	movlw	0
 19755  0100D2  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 19756  0100D4  517D               	movf	??__display_padded_itoa& (0+255),w,b
 19757  0100D6  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 19758  0100D8  6ED9               	movwf	fsr2l,c
 19759  0100DA  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 19760  0100DC  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 19761  0100DE  6EDA               	movwf	fsr2h,c
 19762  0100E0  0E00               	movlw	0
 19763  0100E2  6EDF               	movwf	indf2,c
 19764                           
 19765                           ; BSR set to: 0
 19766  0100E4  0012               	return		;funcret
 19767  0100E6                     __end_of__display_padded_itoa:
 19768                           	opt stack 0
 19769                           tblptru	equ	0xFF8
 19770                           tblptrh	equ	0xFF7
 19771                           tblptrl	equ	0xFF6
 19772                           tablat	equ	0xFF5
 19773                           prodh	equ	0xFF4
 19774                           prodl	equ	0xFF3
 19775                           intcon	equ	0xFF2
 19776                           postinc0	equ	0xFEE
 19777                           wreg	equ	0xFE8
 19778                           indf1	equ	0xFE7
 19779                           postdec1	equ	0xFE5
 19780                           plusw1	equ	0xFE3
 19781                           fsr1h	equ	0xFE2
 19782                           fsr1l	equ	0xFE1
 19783                           indf2	equ	0xFDF
 19784                           postinc2	equ	0xFDE
 19785                           postdec2	equ	0xFDD
 19786                           plusw2	equ	0xFDB
 19787                           fsr2h	equ	0xFDA
 19788                           fsr2l	equ	0xFD9
 19789                           status	equ	0xFD8
 19790                           
 19791 ;; *************** function __display_itoa_long *****************
 19792 ;; Defined at:
 19793 ;;		line 198 in file "display.c"
 19794 ;; Parameters:    Size  Location     Type
 19795 ;;  value           4   77[BANK0 ] long 
 19796 ;;  decimals        1   81[BANK0 ] unsigned char 
 19797 ;;  text            2   82[BANK0 ] PTR unsigned char 
 19798 ;;		 -> display_prepare@temp(10), 
 19799 ;; Auto vars:     Size  Location     Type
 19800 ;;  short_value     2   89[BANK0 ] int 
 19801 ;;  last_digit      1   91[BANK0 ] char 
 19802 ;;  length          1   88[BANK0 ] unsigned char 
 19803 ;; Return value:  Size  Location     Type
 19804 ;;                  1    wreg      void 
 19805 ;; Registers used:
 19806 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19807 ;; Tracked objects:
 19808 ;;		On entry : 0/0
 19809 ;;		On exit  : 0/0
 19810 ;;		Unchanged: 0/0
 19811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19812 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19813 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19814 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19815 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19816 ;;Total ram usage:       15 bytes
 19817 ;; Hardware stack levels used:    1
 19818 ;; Hardware stack levels required when called:   14
 19819 ;; This function calls:
 19820 ;;		___aldiv
 19821 ;;		___almod
 19822 ;;		__display_itoa
 19823 ;;		_strlen
 19824 ;; This function is called by:
 19825 ;;		_display_prepare
 19826 ;; This function uses a non-reentrant model
 19827 ;;
 19828                           
 19829                           	psect	text58
 19830  00F5E2                     __ptext58:
 19831                           	opt stack 0
 19832  00F5E2                     __display_itoa_long:
 19833                           	opt stack 15
 19834                           
 19835                           ;display.c: 200: int16_t short_value;;display.c: 201: int8_t last_digit;;display.c: 202:
      +                           uint8_t length;;display.c: 204: short_value = (int16_t) value;
 19836                           
 19837                           ; BSR set to: 0
 19838                           ;incstack = 0
 19839  00F5E2  C0AD  F0B9         	movff	__display_itoa_long@value,__display_itoa_long@short_value
 19840  00F5E6  C0AE  F0BA         	movff	__display_itoa_long@value+1,__display_itoa_long@short_value+1
 19841                           
 19842                           ;display.c: 205: if(short_value==value)
 19843  00F5EA  C0B9  F0B4         	movff	__display_itoa_long@short_value,??__display_itoa_long
 19844  00F5EE  C0BA  F0B5         	movff	__display_itoa_long@short_value+1,??__display_itoa_long+1
 19845  00F5F2  0E00               	movlw	0
 19846  00F5F4  0100               	movlb	0	; () banked
 19847  00F5F6  BFB5               	btfsc	(??__display_itoa_long+1)& (0+255),7,b
 19848  00F5F8  0EFF               	movlw	255
 19849  00F5FA  6FB6               	movwf	(??__display_itoa_long+2)& (0+255),b
 19850  00F5FC  6FB7               	movwf	(??__display_itoa_long+3)& (0+255),b
 19851  00F5FE  51AD               	movf	__display_itoa_long@value& (0+255),w,b
 19852  00F600  19B4               	xorwf	??__display_itoa_long& (0+255),w,b
 19853  00F602  E117               	bnz	l20132
 19854  00F604  51AE               	movf	(__display_itoa_long@value+1)& (0+255),w,b
 19855  00F606  19B5               	xorwf	(??__display_itoa_long+1)& (0+255),w,b
 19856  00F608  E114               	bnz	l20132
 19857  00F60A  51AF               	movf	(__display_itoa_long@value+2)& (0+255),w,b
 19858  00F60C  19B6               	xorwf	(??__display_itoa_long+2)& (0+255),w,b
 19859  00F60E  E111               	bnz	l20132
 19860  00F610  51B0               	movf	(__display_itoa_long@value+3)& (0+255),w,b
 19861  00F612  19B7               	xorwf	(??__display_itoa_long+3)& (0+255),w,b
 19862  00F614  A4D8               	btfss	status,2,c
 19863  00F616  D00D               	goto	l1313
 19864                           
 19865                           ; BSR set to: 0
 19866                           ;display.c: 206: {;display.c: 207: _display_itoa(short_value, decimals, text);
 19867  00F618  C0B9  F095         	movff	__display_itoa_long@short_value,__display_itoa@value
 19868  00F61C  C0BA  F096         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 19869  00F620  C0B1  F097         	movff	__display_itoa_long@decimals,__display_itoa@decimals
 19870  00F624  C0B2  F098         	movff	__display_itoa_long@text,__display_itoa@text
 19871  00F628  C0B3  F099         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 19872  00F62C  EC74  F06C         	call	__display_itoa	;wreg free
 19873                           
 19874                           ;display.c: 208: }
 19875  00F630  0012               	return	
 19876  00F632                     l1313:
 19877  00F632                     l20132:
 19878                           
 19879                           ;display.c: 209: else;display.c: 210: {;display.c: 211: short_value = value / 10;
 19880  00F632  C0AD  F060         	movff	__display_itoa_long@value,___aldiv@dividend
 19881  00F636  C0AE  F061         	movff	__display_itoa_long@value+1,___aldiv@dividend+1
 19882  00F63A  C0AF  F062         	movff	__display_itoa_long@value+2,___aldiv@dividend+2
 19883  00F63E  C0B0  F063         	movff	__display_itoa_long@value+3,___aldiv@dividend+3
 19884  00F642  0E0A               	movlw	10
 19885  00F644  0100               	movlb	0	; () banked
 19886  00F646  6F64               	movwf	___aldiv@divisor& (0+255),b
 19887  00F648  0E00               	movlw	0
 19888  00F64A  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 19889  00F64C  0E00               	movlw	0
 19890  00F64E  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 19891  00F650  0E00               	movlw	0
 19892  00F652  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 19893  00F654  EC63  F083         	call	___aldiv	;wreg free
 19894  00F658  C060  F0B9         	movff	?___aldiv,__display_itoa_long@short_value
 19895  00F65C  C061  F0BA         	movff	?___aldiv+1,__display_itoa_long@short_value+1
 19896                           
 19897                           ;display.c: 212: _display_itoa(short_value, decimals-1, text);
 19898  00F660  C0B9  F095         	movff	__display_itoa_long@short_value,__display_itoa@value
 19899  00F664  C0BA  F096         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 19900  00F668  0100               	movlb	0	; () banked
 19901  00F66A  05B1               	decf	__display_itoa_long@decimals& (0+255),w,b
 19902  00F66C  6F97               	movwf	__display_itoa@decimals& (0+255),b
 19903  00F66E  C0B2  F098         	movff	__display_itoa_long@text,__display_itoa@text
 19904  00F672  C0B3  F099         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 19905  00F676  EC74  F06C         	call	__display_itoa	;wreg free
 19906                           
 19907                           ;display.c: 213: length = strlen(text);
 19908  00F67A  C0B2  F060         	movff	__display_itoa_long@text,strlen@s
 19909  00F67E  C0B3  F061         	movff	__display_itoa_long@text+1,strlen@s+1
 19910  00F682  EC55  F091         	call	_strlen	;wreg free
 19911  00F686  0100               	movlb	0	; () banked
 19912  00F688  5160               	movf	?_strlen& (0+255),w,b
 19913  00F68A  6FB8               	movwf	__display_itoa_long@length& (0+255),b
 19914                           
 19915                           ; BSR set to: 0
 19916                           ;display.c: 214: last_digit = value % 10;
 19917  00F68C  C0AD  F060         	movff	__display_itoa_long@value,___almod@dividend
 19918  00F690  C0AE  F061         	movff	__display_itoa_long@value+1,___almod@dividend+1
 19919  00F694  C0AF  F062         	movff	__display_itoa_long@value+2,___almod@dividend+2
 19920  00F698  C0B0  F063         	movff	__display_itoa_long@value+3,___almod@dividend+3
 19921  00F69C  0E0A               	movlw	10
 19922  00F69E  6F64               	movwf	___almod@divisor& (0+255),b
 19923  00F6A0  0E00               	movlw	0
 19924  00F6A2  6F65               	movwf	(___almod@divisor+1)& (0+255),b
 19925  00F6A4  0E00               	movlw	0
 19926  00F6A6  6F66               	movwf	(___almod@divisor+2)& (0+255),b
 19927  00F6A8  0E00               	movlw	0
 19928  00F6AA  6F67               	movwf	(___almod@divisor+3)& (0+255),b
 19929  00F6AC  EC5B  F086         	call	___almod	;wreg free
 19930  00F6B0  0100               	movlb	0	; () banked
 19931  00F6B2  5160               	movf	?___almod& (0+255),w,b
 19932  00F6B4  6FBB               	movwf	__display_itoa_long@last_digit& (0+255),b
 19933                           
 19934                           ; BSR set to: 0
 19935                           ;display.c: 215: if(last_digit<0)
 19936  00F6B6  BFBB               	btfsc	__display_itoa_long@last_digit& (0+255),7,b
 19937                           
 19938                           ; BSR set to: 0
 19939                           ;display.c: 216: last_digit = -last_digit;
 19940  00F6B8  6DBB               	negf	__display_itoa_long@last_digit& (0+255),b
 19941                           
 19942                           ; BSR set to: 0
 19943                           ;display.c: 217: text[length] = last_digit + 0x30;
 19944                           
 19945                           ; BSR set to: 0
 19946  00F6BA  51B8               	movf	__display_itoa_long@length& (0+255),w,b
 19947  00F6BC  0D01               	mullw	1
 19948  00F6BE  50F3               	movf	prodl,w,c
 19949  00F6C0  25B2               	addwf	__display_itoa_long@text& (0+255),w,b
 19950  00F6C2  6ED9               	movwf	fsr2l,c
 19951  00F6C4  50F4               	movf	prodh,w,c
 19952  00F6C6  21B3               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 19953  00F6C8  6EDA               	movwf	fsr2h,c
 19954  00F6CA  51BB               	movf	__display_itoa_long@last_digit& (0+255),w,b
 19955  00F6CC  0F30               	addlw	48
 19956  00F6CE  6EDF               	movwf	indf2,c
 19957                           
 19958                           ; BSR set to: 0
 19959                           ;display.c: 218: text[length+1] = 0x00;
 19960  00F6D0  51B8               	movf	__display_itoa_long@length& (0+255),w,b
 19961  00F6D2  6FB4               	movwf	??__display_itoa_long& (0+255),b
 19962  00F6D4  6BB5               	clrf	(??__display_itoa_long+1)& (0+255),b
 19963  00F6D6  0E01               	movlw	1
 19964  00F6D8  27B4               	addwf	??__display_itoa_long& (0+255),f,b
 19965  00F6DA  0E00               	movlw	0
 19966  00F6DC  23B5               	addwfc	(??__display_itoa_long+1)& (0+255),f,b
 19967  00F6DE  51B4               	movf	??__display_itoa_long& (0+255),w,b
 19968  00F6E0  25B2               	addwf	__display_itoa_long@text& (0+255),w,b
 19969  00F6E2  6ED9               	movwf	fsr2l,c
 19970  00F6E4  51B5               	movf	(??__display_itoa_long+1)& (0+255),w,b
 19971  00F6E6  21B3               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 19972  00F6E8  6EDA               	movwf	fsr2h,c
 19973  00F6EA  0E00               	movlw	0
 19974  00F6EC  6EDF               	movwf	indf2,c
 19975  00F6EE  0012               	return	
 19976  00F6F0                     __end_of__display_itoa_long:
 19977                           	opt stack 0
 19978                           tblptru	equ	0xFF8
 19979                           tblptrh	equ	0xFF7
 19980                           tblptrl	equ	0xFF6
 19981                           tablat	equ	0xFF5
 19982                           prodh	equ	0xFF4
 19983                           prodl	equ	0xFF3
 19984                           intcon	equ	0xFF2
 19985                           postinc0	equ	0xFEE
 19986                           wreg	equ	0xFE8
 19987                           indf1	equ	0xFE7
 19988                           postdec1	equ	0xFE5
 19989                           plusw1	equ	0xFE3
 19990                           fsr1h	equ	0xFE2
 19991                           fsr1l	equ	0xFE1
 19992                           indf2	equ	0xFDF
 19993                           postinc2	equ	0xFDE
 19994                           postdec2	equ	0xFDD
 19995                           plusw2	equ	0xFDB
 19996                           fsr2h	equ	0xFDA
 19997                           fsr2l	equ	0xFD9
 19998                           status	equ	0xFD8
 19999                           
 20000 ;; *************** function __display_itoa *****************
 20001 ;; Defined at:
 20002 ;;		line 130 in file "display.c"
 20003 ;; Parameters:    Size  Location     Type
 20004 ;;  value           2   53[BANK0 ] int 
 20005 ;;  decimals        1   55[BANK0 ] unsigned char 
 20006 ;;  text            2   56[BANK0 ] PTR unsigned char 
 20007 ;;		 -> display_prepare@temp(10), display_content(80), 
 20008 ;; Auto vars:     Size  Location     Type
 20009 ;;  tmp            10   64[BANK0 ] unsigned char [10]
 20010 ;;  pos             1   76[BANK0 ] unsigned char 
 20011 ;;  missing         1   75[BANK0 ] char 
 20012 ;;  len             1   74[BANK0 ] unsigned char 
 20013 ;; Return value:  Size  Location     Type
 20014 ;;                  1    wreg      void 
 20015 ;; Registers used:
 20016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20017 ;; Tracked objects:
 20018 ;;		On entry : 0/0
 20019 ;;		On exit  : 0/0
 20020 ;;		Unchanged: 0/0
 20021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20022 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20023 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20024 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20025 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20026 ;;Total ram usage:       24 bytes
 20027 ;; Hardware stack levels used:    1
 20028 ;; Hardware stack levels required when called:   13
 20029 ;; This function calls:
 20030 ;;		_itoa
 20031 ;;		_strlen
 20032 ;; This function is called by:
 20033 ;;		__display_itoa_long
 20034 ;;		_display_prepare
 20035 ;; This function uses a non-reentrant model
 20036 ;;
 20037                           
 20038                           	psect	text59
 20039  00D8E8                     __ptext59:
 20040                           	opt stack 0
 20041  00D8E8                     __display_itoa:
 20042                           	opt stack 15
 20043                           
 20044                           ;display.c: 132: uint8_t pos;;display.c: 133: uint8_t len;;display.c: 134: int8_t missin
      +                          g;;display.c: 135: char tmp[10];;display.c: 136: itoa(tmp, value, 10);
 20045                           
 20046                           ;incstack = 0
 20047  00D8E8  0EA0               	movlw	low __display_itoa@tmp
 20048  00D8EA  0100               	movlb	0	; () banked
 20049  00D8EC  6F70               	movwf	itoa@buf& (0+255),b
 20050  00D8EE  0E00               	movlw	high __display_itoa@tmp
 20051  00D8F0  6F71               	movwf	(itoa@buf+1)& (0+255),b
 20052  00D8F2  C095  F072         	movff	__display_itoa@value,itoa@val
 20053  00D8F6  C096  F073         	movff	__display_itoa@value+1,itoa@val+1
 20054  00D8FA  0E00               	movlw	0
 20055  00D8FC  6F75               	movwf	(itoa@base+1)& (0+255),b
 20056  00D8FE  0E0A               	movlw	10
 20057  00D900  6F74               	movwf	itoa@base& (0+255),b
 20058  00D902  ECCF  F090         	call	_itoa	;wreg free
 20059                           
 20060                           ;display.c: 137: len = strlen(tmp);
 20061  00D906  0EA0               	movlw	low __display_itoa@tmp
 20062  00D908  0100               	movlb	0	; () banked
 20063  00D90A  6F60               	movwf	strlen@s& (0+255),b
 20064  00D90C  0E00               	movlw	high __display_itoa@tmp
 20065  00D90E  6F61               	movwf	(strlen@s+1)& (0+255),b
 20066  00D910  EC55  F091         	call	_strlen	;wreg free
 20067  00D914  0100               	movlb	0	; () banked
 20068  00D916  5160               	movf	?_strlen& (0+255),w,b
 20069  00D918  6FAA               	movwf	__display_itoa@len& (0+255),b
 20070                           
 20071                           ; BSR set to: 0
 20072                           ;display.c: 139: if(value<0)
 20073  00D91A  AF96               	btfss	(__display_itoa@value+1)& (0+255),7,b
 20074  00D91C  D054               	goto	l1291
 20075                           
 20076                           ; BSR set to: 0
 20077                           ;display.c: 140: {;display.c: 141: missing = decimals + 2 - len;
 20078  00D91E  51AA               	movf	__display_itoa@len& (0+255),w,b
 20079  00D920  0800               	sublw	0
 20080  00D922  2597               	addwf	__display_itoa@decimals& (0+255),w,b
 20081  00D924  0F02               	addlw	2
 20082  00D926  6FAB               	movwf	__display_itoa@missing& (0+255),b
 20083                           
 20084                           ;display.c: 142: if(missing>0)
 20085  00D928  51AB               	movf	__display_itoa@missing& (0+255),w,b
 20086  00D92A  0A80               	xorlw	128
 20087  00D92C  0F7F               	addlw	-129
 20088  00D92E  A0D8               	btfss	status,0,c
 20089  00D930  D090               	goto	l1298
 20090                           
 20091                           ; BSR set to: 0
 20092                           ;display.c: 143: {;display.c: 144: for(pos=decimals;pos!=0xFF;--pos)
 20093  00D932  C097  F0AC         	movff	__display_itoa@decimals,__display_itoa@pos
 20094  00D936                     l19236:
 20095                           
 20096                           ; BSR set to: 0
 20097  00D936  29AC               	incf	__display_itoa@pos& (0+255),w,b
 20098  00D938  B4D8               	btfsc	status,2,c
 20099  00D93A  D042               	goto	u18750
 20100                           
 20101                           ; BSR set to: 0
 20102                           ;display.c: 145: {;display.c: 146: if(pos>=missing)
 20103                           
 20104                           ; BSR set to: 0
 20105                           
 20106                           ; BSR set to: 0
 20107  00D93C  51AC               	movf	__display_itoa@pos& (0+255),w,b
 20108  00D93E  BFAB               	btfsc	__display_itoa@missing& (0+255),7,b
 20109  00D940  D004               	goto	u18740
 20110  00D942  0AFF               	xorlw	255
 20111  00D944  25AB               	addwf	__display_itoa@missing& (0+255),w,b
 20112  00D946  B0D8               	btfsc	status,0,c
 20113  00D948  D02A               	goto	l1295
 20114  00D94A                     u18740:
 20115                           
 20116                           ; BSR set to: 0
 20117                           ;display.c: 147: {;display.c: 148: tmp[pos+1] = tmp[pos+1-missing];
 20118  00D94A  C0AB  F09A         	movff	__display_itoa@missing,??__display_itoa
 20119  00D94E  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 20120  00D950  BF9A               	btfsc	??__display_itoa& (0+255),7,b
 20121  00D952  079B               	decf	(??__display_itoa+1)& (0+255),f,b
 20122  00D954  1F9A               	comf	??__display_itoa& (0+255),f,b
 20123  00D956  1F9B               	comf	(??__display_itoa+1)& (0+255),f,b
 20124  00D958  4B9A               	infsnz	??__display_itoa& (0+255),f,b
 20125  00D95A  2B9B               	incf	(??__display_itoa+1)& (0+255),f,b
 20126  00D95C  51AC               	movf	__display_itoa@pos& (0+255),w,b
 20127  00D95E  6F9C               	movwf	(??__display_itoa+2)& (0+255),b
 20128  00D960  6B9D               	clrf	(??__display_itoa+3)& (0+255),b
 20129  00D962  519A               	movf	??__display_itoa& (0+255),w,b
 20130  00D964  279C               	addwf	(??__display_itoa+2)& (0+255),f,b
 20131  00D966  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 20132  00D968  239D               	addwfc	(??__display_itoa+3)& (0+255),f,b
 20133  00D96A  0E01               	movlw	1
 20134  00D96C  279C               	addwf	(??__display_itoa+2)& (0+255),f,b
 20135  00D96E  0E00               	movlw	0
 20136  00D970  239D               	addwfc	(??__display_itoa+3)& (0+255),f,b
 20137  00D972  0EA0               	movlw	low __display_itoa@tmp
 20138  00D974  259C               	addwf	(??__display_itoa+2)& (0+255),w,b
 20139  00D976  6ED9               	movwf	fsr2l,c
 20140  00D978  0E00               	movlw	high __display_itoa@tmp
 20141  00D97A  219D               	addwfc	(??__display_itoa+3)& (0+255),w,b
 20142  00D97C  6EDA               	movwf	fsr2h,c
 20143  00D97E  51AC               	movf	__display_itoa@pos& (0+255),w,b
 20144  00D980  6F9E               	movwf	(??__display_itoa+4)& (0+255),b
 20145  00D982  6B9F               	clrf	(??__display_itoa+5)& (0+255),b
 20146  00D984  0E01               	movlw	1
 20147  00D986  279E               	addwf	(??__display_itoa+4)& (0+255),f,b
 20148  00D988  0E00               	movlw	0
 20149  00D98A  239F               	addwfc	(??__display_itoa+5)& (0+255),f,b
 20150  00D98C  0EA0               	movlw	low __display_itoa@tmp
 20151  00D98E  259E               	addwf	(??__display_itoa+4)& (0+255),w,b
 20152  00D990  6EE1               	movwf	fsr1l,c
 20153  00D992  0E00               	movlw	high __display_itoa@tmp
 20154  00D994  219F               	addwfc	(??__display_itoa+5)& (0+255),w,b
 20155  00D996  6EE2               	movwf	fsr1h,c
 20156  00D998  CFDF FFE7          	movff	indf2,indf1
 20157                           
 20158                           ;display.c: 149: }
 20159  00D99C  D00F               	goto	l1296
 20160  00D99E                     l1295:
 20161                           
 20162                           ; BSR set to: 0
 20163                           ;display.c: 150: else;display.c: 151: {;display.c: 152: tmp[pos+1] = '0';
 20164                           
 20165                           ; BSR set to: 0
 20166  00D99E  51AC               	movf	__display_itoa@pos& (0+255),w,b
 20167  00D9A0  6F9A               	movwf	??__display_itoa& (0+255),b
 20168  00D9A2  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 20169  00D9A4  0E01               	movlw	1
 20170  00D9A6  279A               	addwf	??__display_itoa& (0+255),f,b
 20171  00D9A8  0E00               	movlw	0
 20172  00D9AA  239B               	addwfc	(??__display_itoa+1)& (0+255),f,b
 20173  00D9AC  0EA0               	movlw	low __display_itoa@tmp
 20174  00D9AE  259A               	addwf	??__display_itoa& (0+255),w,b
 20175  00D9B0  6ED9               	movwf	fsr2l,c
 20176  00D9B2  0E00               	movlw	high __display_itoa@tmp
 20177  00D9B4  219B               	addwfc	(??__display_itoa+1)& (0+255),w,b
 20178  00D9B6  6EDA               	movwf	fsr2h,c
 20179  00D9B8  0E30               	movlw	48
 20180  00D9BA  6EDF               	movwf	indf2,c
 20181  00D9BC                     l1296:
 20182                           
 20183                           ; BSR set to: 0
 20184                           
 20185                           ; BSR set to: 0
 20186  00D9BC  07AC               	decf	__display_itoa@pos& (0+255),f,b
 20187  00D9BE  D7BB               	goto	l19236
 20188  00D9C0                     u18750:
 20189                           
 20190                           ; BSR set to: 0
 20191                           ;display.c: 153: };display.c: 154: };display.c: 155: len = decimals + 2;
 20192                           
 20193                           ; BSR set to: 0
 20194  00D9C0  5197               	movf	__display_itoa@decimals& (0+255),w,b
 20195  00D9C2  0F02               	addlw	2
 20196  00D9C4  D045               	goto	L36
 20197  00D9C6                     l1291:
 20198                           
 20199                           ; BSR set to: 0
 20200                           ;display.c: 158: else;display.c: 159: {;display.c: 160: missing = decimals + 1 - len;
 20201                           
 20202                           ; BSR set to: 0
 20203  00D9C6  51AA               	movf	__display_itoa@len& (0+255),w,b
 20204  00D9C8  0800               	sublw	0
 20205  00D9CA  2597               	addwf	__display_itoa@decimals& (0+255),w,b
 20206  00D9CC  6F9A               	movwf	??__display_itoa& (0+255),b
 20207  00D9CE  299A               	incf	??__display_itoa& (0+255),w,b
 20208  00D9D0  6FAB               	movwf	__display_itoa@missing& (0+255),b
 20209                           
 20210                           ;display.c: 161: if(missing>0)
 20211  00D9D2  51AB               	movf	__display_itoa@missing& (0+255),w,b
 20212  00D9D4  0A80               	xorlw	128
 20213  00D9D6  0F7F               	addlw	-129
 20214  00D9D8  A0D8               	btfss	status,0,c
 20215  00D9DA  D03B               	goto	l1298
 20216                           
 20217                           ; BSR set to: 0
 20218                           ;display.c: 162: {;display.c: 163: for(pos=decimals;pos!=0xFF;--pos)
 20219  00D9DC  C097  F0AC         	movff	__display_itoa@decimals,__display_itoa@pos
 20220  00D9E0                     l19256:
 20221                           
 20222                           ; BSR set to: 0
 20223  00D9E0  29AC               	incf	__display_itoa@pos& (0+255),w,b
 20224  00D9E2  B4D8               	btfsc	status,2,c
 20225  00D9E4  D034               	goto	u18790
 20226                           
 20227                           ; BSR set to: 0
 20228                           ;display.c: 164: {;display.c: 165: if(pos>=missing)
 20229                           
 20230                           ; BSR set to: 0
 20231                           
 20232                           ; BSR set to: 0
 20233  00D9E6  51AC               	movf	__display_itoa@pos& (0+255),w,b
 20234  00D9E8  BFAB               	btfsc	__display_itoa@missing& (0+255),7,b
 20235  00D9EA  D004               	goto	u18780
 20236  00D9EC  0AFF               	xorlw	255
 20237  00D9EE  25AB               	addwf	__display_itoa@missing& (0+255),w,b
 20238  00D9F0  B0D8               	btfsc	status,0,c
 20239  00D9F2  D021               	goto	l1301
 20240  00D9F4                     u18780:
 20241                           
 20242                           ; BSR set to: 0
 20243                           ;display.c: 166: {;display.c: 167: tmp[pos] = tmp[pos-missing];
 20244  00D9F4  C0AB  F09A         	movff	__display_itoa@missing,??__display_itoa
 20245  00D9F8  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 20246  00D9FA  BF9A               	btfsc	??__display_itoa& (0+255),7,b
 20247  00D9FC  079B               	decf	(??__display_itoa+1)& (0+255),f,b
 20248  00D9FE  1F9A               	comf	??__display_itoa& (0+255),f,b
 20249  00DA00  1F9B               	comf	(??__display_itoa+1)& (0+255),f,b
 20250  00DA02  4B9A               	infsnz	??__display_itoa& (0+255),f,b
 20251  00DA04  2B9B               	incf	(??__display_itoa+1)& (0+255),f,b
 20252  00DA06  51AC               	movf	__display_itoa@pos& (0+255),w,b
 20253  00DA08  6F9C               	movwf	(??__display_itoa+2)& (0+255),b
 20254  00DA0A  6B9D               	clrf	(??__display_itoa+3)& (0+255),b
 20255  00DA0C  519A               	movf	??__display_itoa& (0+255),w,b
 20256  00DA0E  279C               	addwf	(??__display_itoa+2)& (0+255),f,b
 20257  00DA10  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 20258  00DA12  239D               	addwfc	(??__display_itoa+3)& (0+255),f,b
 20259  00DA14  0EA0               	movlw	low __display_itoa@tmp
 20260  00DA16  259C               	addwf	(??__display_itoa+2)& (0+255),w,b
 20261  00DA18  6ED9               	movwf	fsr2l,c
 20262  00DA1A  0E00               	movlw	high __display_itoa@tmp
 20263  00DA1C  219D               	addwfc	(??__display_itoa+3)& (0+255),w,b
 20264  00DA1E  6EDA               	movwf	fsr2h,c
 20265  00DA20  51AC               	movf	__display_itoa@pos& (0+255),w,b
 20266  00DA22  0D01               	mullw	1
 20267  00DA24  0EA0               	movlw	low __display_itoa@tmp
 20268  00DA26  24F3               	addwf	prodl,w,c
 20269  00DA28  6EE1               	movwf	fsr1l,c
 20270  00DA2A  0E00               	movlw	high __display_itoa@tmp
 20271  00DA2C  20F4               	addwfc	prodh,w,c
 20272  00DA2E  6EE2               	movwf	fsr1h,c
 20273  00DA30  CFDF FFE7          	movff	indf2,indf1
 20274                           
 20275                           ;display.c: 168: }
 20276  00DA34  D00A               	goto	l1302
 20277  00DA36                     l1301:
 20278                           
 20279                           ; BSR set to: 0
 20280                           ;display.c: 169: else;display.c: 170: {;display.c: 171: tmp[pos] = '0';
 20281                           
 20282                           ; BSR set to: 0
 20283  00DA36  51AC               	movf	__display_itoa@pos& (0+255),w,b
 20284  00DA38  0D01               	mullw	1
 20285  00DA3A  0EA0               	movlw	low __display_itoa@tmp
 20286  00DA3C  24F3               	addwf	prodl,w,c
 20287  00DA3E  6ED9               	movwf	fsr2l,c
 20288  00DA40  0E00               	movlw	high __display_itoa@tmp
 20289  00DA42  20F4               	addwfc	prodh,w,c
 20290  00DA44  6EDA               	movwf	fsr2h,c
 20291  00DA46  0E30               	movlw	48
 20292  00DA48  6EDF               	movwf	indf2,c
 20293  00DA4A                     l1302:
 20294                           
 20295                           ; BSR set to: 0
 20296                           
 20297                           ; BSR set to: 0
 20298  00DA4A  07AC               	decf	__display_itoa@pos& (0+255),f,b
 20299  00DA4C  D7C9               	goto	l19256
 20300  00DA4E                     u18790:
 20301                           
 20302                           ; BSR set to: 0
 20303                           ;display.c: 172: };display.c: 173: };display.c: 174: len = decimals + 1;
 20304                           
 20305                           ; BSR set to: 0
 20306  00DA4E  2997               	incf	__display_itoa@decimals& (0+255),w,b
 20307  00DA50                     L36:
 20308  00DA50  6FAA               	movwf	__display_itoa@len& (0+255),b
 20309  00DA52                     l1298:
 20310                           
 20311                           ; BSR set to: 0
 20312                           ;display.c: 175: };display.c: 176: };display.c: 178: decimals = len - decimals - 1;
 20313                           
 20314                           ; BSR set to: 0
 20315  00DA52  5197               	movf	__display_itoa@decimals& (0+255),w,b
 20316  00DA54  0800               	sublw	0
 20317  00DA56  25AA               	addwf	__display_itoa@len& (0+255),w,b
 20318  00DA58  6F9A               	movwf	??__display_itoa& (0+255),b
 20319  00DA5A  059A               	decf	??__display_itoa& (0+255),w,b
 20320  00DA5C  6F97               	movwf	__display_itoa@decimals& (0+255),b
 20321                           
 20322                           ; BSR set to: 0
 20323                           ;display.c: 180: for(pos=0;pos<len;++pos)
 20324  00DA5E  0E00               	movlw	0
 20325  00DA60  6FAC               	movwf	__display_itoa@pos& (0+255),b
 20326  00DA62  D023               	goto	l1303
 20327  00DA64                     
 20328                           ; BSR set to: 0
 20329                           ;display.c: 181: {;display.c: 182: text[pos] = tmp[pos];
 20330                           
 20331                           ; BSR set to: 0
 20332  00DA64  51AC               	movf	__display_itoa@pos& (0+255),w,b
 20333  00DA66  0D01               	mullw	1
 20334  00DA68  0EA0               	movlw	low __display_itoa@tmp
 20335  00DA6A  24F3               	addwf	prodl,w,c
 20336  00DA6C  6ED9               	movwf	fsr2l,c
 20337  00DA6E  0E00               	movlw	high __display_itoa@tmp
 20338  00DA70  20F4               	addwfc	prodh,w,c
 20339  00DA72  6EDA               	movwf	fsr2h,c
 20340  00DA74  51AC               	movf	__display_itoa@pos& (0+255),w,b
 20341  00DA76  0D01               	mullw	1
 20342  00DA78  50F3               	movf	prodl,w,c
 20343  00DA7A  2598               	addwf	__display_itoa@text& (0+255),w,b
 20344  00DA7C  6EE1               	movwf	fsr1l,c
 20345  00DA7E  50F4               	movf	prodh,w,c
 20346  00DA80  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 20347  00DA82  6EE2               	movwf	fsr1h,c
 20348  00DA84  CFDF FFE7          	movff	indf2,indf1
 20349                           
 20350                           ; BSR set to: 0
 20351                           ;display.c: 183: if(pos==decimals)
 20352  00DA88  5197               	movf	__display_itoa@decimals& (0+255),w,b
 20353  00DA8A  19AC               	xorwf	__display_itoa@pos& (0+255),w,b
 20354  00DA8C  A4D8               	btfss	status,2,c
 20355  00DA8E  D00C               	goto	l1305
 20356                           
 20357                           ; BSR set to: 0
 20358                           ;display.c: 184: {;display.c: 186: ++pos;
 20359  00DA90  2BAC               	incf	__display_itoa@pos& (0+255),f,b
 20360                           
 20361                           ; BSR set to: 0
 20362                           ;display.c: 187: text[pos] = '.';
 20363  00DA92  51AC               	movf	__display_itoa@pos& (0+255),w,b
 20364  00DA94  0D01               	mullw	1
 20365  00DA96  50F3               	movf	prodl,w,c
 20366  00DA98  2598               	addwf	__display_itoa@text& (0+255),w,b
 20367  00DA9A  6ED9               	movwf	fsr2l,c
 20368  00DA9C  50F4               	movf	prodh,w,c
 20369  00DA9E  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 20370  00DAA0  6EDA               	movwf	fsr2h,c
 20371  00DAA2  0E2E               	movlw	46
 20372  00DAA4  6EDF               	movwf	indf2,c
 20373                           
 20374                           ;display.c: 188: break;
 20375  00DAA6  D01E               	goto	l1307
 20376  00DAA8                     l1305:
 20377                           
 20378                           ; BSR set to: 0
 20379                           
 20380                           ; BSR set to: 0
 20381  00DAA8  2BAC               	incf	__display_itoa@pos& (0+255),f,b
 20382  00DAAA                     l1303:
 20383                           
 20384                           ; BSR set to: 0
 20385                           
 20386                           ; BSR set to: 0
 20387  00DAAA  51AA               	movf	__display_itoa@len& (0+255),w,b
 20388  00DAAC  5DAC               	subwf	__display_itoa@pos& (0+255),w,b
 20389  00DAAE  B0D8               	btfsc	status,0,c
 20390  00DAB0  D019               	goto	l1307
 20391  00DAB2  D7D8               	goto	l1304
 20392  00DAB4                     
 20393                           ; BSR set to: 0
 20394                           ;display.c: 192: {;display.c: 193: text[pos+1] = tmp[pos];
 20395                           
 20396                           ; BSR set to: 0
 20397  00DAB4  51AC               	movf	__display_itoa@pos& (0+255),w,b
 20398  00DAB6  0D01               	mullw	1
 20399  00DAB8  0EA0               	movlw	low __display_itoa@tmp
 20400  00DABA  24F3               	addwf	prodl,w,c
 20401  00DABC  6ED9               	movwf	fsr2l,c
 20402  00DABE  0E00               	movlw	high __display_itoa@tmp
 20403  00DAC0  20F4               	addwfc	prodh,w,c
 20404  00DAC2  6EDA               	movwf	fsr2h,c
 20405  00DAC4  51AC               	movf	__display_itoa@pos& (0+255),w,b
 20406  00DAC6  6F9A               	movwf	??__display_itoa& (0+255),b
 20407  00DAC8  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 20408  00DACA  0E01               	movlw	1
 20409  00DACC  279A               	addwf	??__display_itoa& (0+255),f,b
 20410  00DACE  0E00               	movlw	0
 20411  00DAD0  239B               	addwfc	(??__display_itoa+1)& (0+255),f,b
 20412  00DAD2  519A               	movf	??__display_itoa& (0+255),w,b
 20413  00DAD4  2598               	addwf	__display_itoa@text& (0+255),w,b
 20414  00DAD6  6EE1               	movwf	fsr1l,c
 20415  00DAD8  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 20416  00DADA  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 20417  00DADC  6EE2               	movwf	fsr1h,c
 20418  00DADE  CFDF FFE7          	movff	indf2,indf1
 20419                           
 20420                           ; BSR set to: 0
 20421  00DAE2  2BAC               	incf	__display_itoa@pos& (0+255),f,b
 20422  00DAE4                     l1307:
 20423                           
 20424                           ; BSR set to: 0
 20425                           
 20426                           ; BSR set to: 0
 20427  00DAE4  51AA               	movf	__display_itoa@len& (0+255),w,b
 20428  00DAE6  5DAC               	subwf	__display_itoa@pos& (0+255),w,b
 20429  00DAE8  A0D8               	btfss	status,0,c
 20430  00DAEA  D7E4               	goto	l1308
 20431                           
 20432                           ; BSR set to: 0
 20433                           ;display.c: 194: };display.c: 195: text[pos+1] = 0;
 20434                           
 20435                           ; BSR set to: 0
 20436  00DAEC  51AC               	movf	__display_itoa@pos& (0+255),w,b
 20437  00DAEE  6F9A               	movwf	??__display_itoa& (0+255),b
 20438  00DAF0  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 20439  00DAF2  0E01               	movlw	1
 20440  00DAF4  279A               	addwf	??__display_itoa& (0+255),f,b
 20441  00DAF6  0E00               	movlw	0
 20442  00DAF8  239B               	addwfc	(??__display_itoa+1)& (0+255),f,b
 20443  00DAFA  519A               	movf	??__display_itoa& (0+255),w,b
 20444  00DAFC  2598               	addwf	__display_itoa@text& (0+255),w,b
 20445  00DAFE  6ED9               	movwf	fsr2l,c
 20446  00DB00  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 20447  00DB02  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 20448  00DB04  6EDA               	movwf	fsr2h,c
 20449  00DB06  0E00               	movlw	0
 20450  00DB08  6EDF               	movwf	indf2,c
 20451                           
 20452                           ; BSR set to: 0
 20453  00DB0A  0012               	return		;funcret
 20454  00DB0C                     __end_of__display_itoa:
 20455                           	opt stack 0
 20456                           tblptru	equ	0xFF8
 20457                           tblptrh	equ	0xFF7
 20458                           tblptrl	equ	0xFF6
 20459                           tablat	equ	0xFF5
 20460                           prodh	equ	0xFF4
 20461                           prodl	equ	0xFF3
 20462                           intcon	equ	0xFF2
 20463                           postinc0	equ	0xFEE
 20464                           wreg	equ	0xFE8
 20465                           indf1	equ	0xFE7
 20466                           postdec1	equ	0xFE5
 20467                           plusw1	equ	0xFE3
 20468                           fsr1h	equ	0xFE2
 20469                           fsr1l	equ	0xFE1
 20470                           indf2	equ	0xFDF
 20471                           postinc2	equ	0xFDE
 20472                           postdec2	equ	0xFDD
 20473                           plusw2	equ	0xFDB
 20474                           fsr2h	equ	0xFDA
 20475                           fsr2l	equ	0xFD9
 20476                           status	equ	0xFD8
 20477                           
 20478 ;; *************** function _strlen *****************
 20479 ;; Defined at:
 20480 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
 20481 ;; Parameters:    Size  Location     Type
 20482 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 20483 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 20484 ;; Auto vars:     Size  Location     Type
 20485 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 20486 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 20487 ;; Return value:  Size  Location     Type
 20488 ;;                  2    0[BANK0 ] unsigned int 
 20489 ;; Registers used:
 20490 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20491 ;; Tracked objects:
 20492 ;;		On entry : 0/0
 20493 ;;		On exit  : 0/0
 20494 ;;		Unchanged: 0/0
 20495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20496 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20497 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20498 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20499 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20500 ;;Total ram usage:        6 bytes
 20501 ;; Hardware stack levels used:    1
 20502 ;; Hardware stack levels required when called:   10
 20503 ;; This function calls:
 20504 ;;		Nothing
 20505 ;; This function is called by:
 20506 ;;		__display_padded_itoa
 20507 ;;		__display_itoa
 20508 ;;		__display_itoa_long
 20509 ;;		_display_prepare
 20510 ;; This function uses a non-reentrant model
 20511 ;;
 20512                           
 20513                           	psect	text60
 20514  0122AA                     __ptext60:
 20515                           	opt stack 0
 20516  0122AA                     _strlen:
 20517                           	opt stack 19
 20518                           
 20519                           ; BSR set to: 0
 20520                           ;incstack = 0
 20521  0122AA  C060  F064         	movff	strlen@s,strlen@cp
 20522  0122AE  C061  F065         	movff	strlen@s+1,strlen@cp+1
 20523  0122B2  D003               	goto	l3366
 20524  0122B4  0100               	movlb	0	; () banked
 20525  0122B6  4B64               	infsnz	strlen@cp& (0+255),f,b
 20526  0122B8  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 20527  0122BA                     l3366:
 20528                           
 20529                           ; BSR set to: 0
 20530  0122BA  C064  FFD9         	movff	strlen@cp,fsr2l
 20531  0122BE  C065  FFDA         	movff	strlen@cp+1,fsr2h
 20532  0122C2  50DF               	movf	indf2,w,c
 20533  0122C4  A4D8               	btfss	status,2,c
 20534  0122C6  D7F6               	goto	l3367
 20535  0122C8  C060  F062         	movff	strlen@s,??_strlen
 20536  0122CC  C061  F063         	movff	strlen@s+1,??_strlen+1
 20537  0122D0  0100               	movlb	0	; () banked
 20538  0122D2  1F62               	comf	??_strlen& (0+255),f,b
 20539  0122D4  1F63               	comf	(??_strlen+1)& (0+255),f,b
 20540  0122D6  4B62               	infsnz	??_strlen& (0+255),f,b
 20541  0122D8  2B63               	incf	(??_strlen+1)& (0+255),f,b
 20542  0122DA  5164               	movf	strlen@cp& (0+255),w,b
 20543  0122DC  2562               	addwf	??_strlen& (0+255),w,b
 20544  0122DE  6F60               	movwf	?_strlen& (0+255),b
 20545  0122E0  5165               	movf	(strlen@cp+1)& (0+255),w,b
 20546  0122E2  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 20547  0122E4  6F61               	movwf	(?_strlen+1)& (0+255),b
 20548  0122E6  0012               	return	
 20549  0122E8                     __end_of_strlen:
 20550                           	opt stack 0
 20551                           tblptru	equ	0xFF8
 20552                           tblptrh	equ	0xFF7
 20553                           tblptrl	equ	0xFF6
 20554                           tablat	equ	0xFF5
 20555                           prodh	equ	0xFF4
 20556                           prodl	equ	0xFF3
 20557                           intcon	equ	0xFF2
 20558                           postinc0	equ	0xFEE
 20559                           wreg	equ	0xFE8
 20560                           indf1	equ	0xFE7
 20561                           postdec1	equ	0xFE5
 20562                           plusw1	equ	0xFE3
 20563                           fsr1h	equ	0xFE2
 20564                           fsr1l	equ	0xFE1
 20565                           indf2	equ	0xFDF
 20566                           postinc2	equ	0xFDE
 20567                           postdec2	equ	0xFDD
 20568                           plusw2	equ	0xFDB
 20569                           fsr2h	equ	0xFDA
 20570                           fsr2l	equ	0xFD9
 20571                           status	equ	0xFD8
 20572                           
 20573 ;; *************** function _itoa *****************
 20574 ;; Defined at:
 20575 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 20576 ;; Parameters:    Size  Location     Type
 20577 ;;  buf             2   16[BANK0 ] PTR unsigned char 
 20578 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 20579 ;;  val             2   18[BANK0 ] int 
 20580 ;;  base            2   20[BANK0 ] int 
 20581 ;; Auto vars:     Size  Location     Type
 20582 ;;  cp              2   22[BANK0 ] PTR unsigned char 
 20583 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 20584 ;; Return value:  Size  Location     Type
 20585 ;;                  2   16[BANK0 ] PTR unsigned char 
 20586 ;; Registers used:
 20587 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20588 ;; Tracked objects:
 20589 ;;		On entry : 0/0
 20590 ;;		On exit  : 0/0
 20591 ;;		Unchanged: 0/0
 20592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20593 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20594 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20596 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20597 ;;Total ram usage:        8 bytes
 20598 ;; Hardware stack levels used:    1
 20599 ;; Hardware stack levels required when called:   12
 20600 ;; This function calls:
 20601 ;;		_utoa
 20602 ;; This function is called by:
 20603 ;;		__display_padded_itoa
 20604 ;;		__display_itoa
 20605 ;; This function uses a non-reentrant model
 20606 ;;
 20607                           
 20608                           	psect	text61
 20609  01219E                     __ptext61:
 20610                           	opt stack 0
 20611  01219E                     _itoa:
 20612                           	opt stack 15
 20613                           
 20614                           ; BSR set to: 0
 20615                           ;incstack = 0
 20616  01219E  C070  F076         	movff	itoa@buf,itoa@cp
 20617  0121A2  C071  F077         	movff	itoa@buf+1,itoa@cp+1
 20618  0121A6  0100               	movlb	0	; () banked
 20619  0121A8  AF73               	btfss	(itoa@val+1)& (0+255),7,b
 20620  0121AA  D00C               	goto	l3342
 20621                           
 20622                           ; BSR set to: 0
 20623  0121AC  C070  FFD9         	movff	itoa@buf,fsr2l
 20624  0121B0  C071  FFDA         	movff	itoa@buf+1,fsr2h
 20625  0121B4  0E2D               	movlw	45
 20626  0121B6  6EDF               	movwf	indf2,c
 20627                           
 20628                           ; BSR set to: 0
 20629  0121B8  4B70               	infsnz	itoa@buf& (0+255),f,b
 20630  0121BA  2B71               	incf	(itoa@buf+1)& (0+255),f,b
 20631                           
 20632                           ; BSR set to: 0
 20633  0121BC  6D72               	negf	itoa@val& (0+255),b
 20634  0121BE  1F73               	comf	(itoa@val+1)& (0+255),f,b
 20635  0121C0  B0D8               	btfsc	status,0,c
 20636  0121C2  2B73               	incf	(itoa@val+1)& (0+255),f,b
 20637  0121C4                     l3342:
 20638                           
 20639                           ; BSR set to: 0
 20640                           
 20641                           ; BSR set to: 0
 20642  0121C4  C070  F067         	movff	itoa@buf,utoa@buf
 20643  0121C8  C071  F068         	movff	itoa@buf+1,utoa@buf+1
 20644  0121CC  C072  F069         	movff	itoa@val,utoa@val
 20645  0121D0  C073  F06A         	movff	itoa@val+1,utoa@val+1
 20646  0121D4  C074  F06B         	movff	itoa@base,utoa@base
 20647  0121D8  C075  F06C         	movff	itoa@base+1,utoa@base+1
 20648  0121DC  EC07  F087         	call	_utoa	;wreg free
 20649  0121E0  0012               	return	
 20650  0121E2                     __end_of_itoa:
 20651                           	opt stack 0
 20652                           tblptru	equ	0xFF8
 20653                           tblptrh	equ	0xFF7
 20654                           tblptrl	equ	0xFF6
 20655                           tablat	equ	0xFF5
 20656                           prodh	equ	0xFF4
 20657                           prodl	equ	0xFF3
 20658                           intcon	equ	0xFF2
 20659                           postinc0	equ	0xFEE
 20660                           wreg	equ	0xFE8
 20661                           indf1	equ	0xFE7
 20662                           postdec1	equ	0xFE5
 20663                           plusw1	equ	0xFE3
 20664                           fsr1h	equ	0xFE2
 20665                           fsr1l	equ	0xFE1
 20666                           indf2	equ	0xFDF
 20667                           postinc2	equ	0xFDE
 20668                           postdec2	equ	0xFDD
 20669                           plusw2	equ	0xFDB
 20670                           fsr2h	equ	0xFDA
 20671                           fsr2l	equ	0xFD9
 20672                           status	equ	0xFD8
 20673                           
 20674 ;; *************** function _utoa *****************
 20675 ;; Defined at:
 20676 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 20677 ;; Parameters:    Size  Location     Type
 20678 ;;  buf             2    7[BANK0 ] PTR unsigned char 
 20679 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 20680 ;;  val             2    9[BANK0 ] unsigned int 
 20681 ;;  base            2   11[BANK0 ] int 
 20682 ;; Auto vars:     Size  Location     Type
 20683 ;;  v               2   13[BANK0 ] unsigned int 
 20684 ;;  c               1   15[BANK0 ] unsigned char 
 20685 ;; Return value:  Size  Location     Type
 20686 ;;                  2    7[BANK0 ] PTR unsigned char 
 20687 ;; Registers used:
 20688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20689 ;; Tracked objects:
 20690 ;;		On entry : 0/0
 20691 ;;		On exit  : 0/0
 20692 ;;		Unchanged: 0/0
 20693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20694 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20695 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20697 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20698 ;;Total ram usage:        9 bytes
 20699 ;; Hardware stack levels used:    1
 20700 ;; Hardware stack levels required when called:   11
 20701 ;; This function calls:
 20702 ;;		___lwdiv
 20703 ;;		___lwmod
 20704 ;; This function is called by:
 20705 ;;		_itoa
 20706 ;; This function uses a non-reentrant model
 20707 ;;
 20708                           
 20709                           	psect	text62
 20710  010E0E                     __ptext62:
 20711                           	opt stack 0
 20712  010E0E                     _utoa:
 20713                           	opt stack 15
 20714                           
 20715                           ;incstack = 0
 20716  010E0E  C069  F06D         	movff	utoa@val,utoa@v
 20717  010E12  C06A  F06E         	movff	utoa@val+1,utoa@v+1
 20718  010E16  C06D  F060         	movff	utoa@v,___lwdiv@dividend
 20719  010E1A  C06E  F061         	movff	utoa@v+1,___lwdiv@dividend+1
 20720  010E1E  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 20721  010E22  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 20722  010E26  EC22  F08F         	call	___lwdiv	;wreg free
 20723  010E2A  C060  F06D         	movff	?___lwdiv,utoa@v
 20724  010E2E  C061  F06E         	movff	?___lwdiv+1,utoa@v+1
 20725  010E32  0100               	movlb	0	; () banked
 20726  010E34  4B67               	infsnz	utoa@buf& (0+255),f,b
 20727  010E36  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 20728                           
 20729                           ; BSR set to: 0
 20730  010E38  516D               	movf	utoa@v& (0+255),w,b
 20731  010E3A  116E               	iorwf	(utoa@v+1)& (0+255),w,b
 20732  010E3C  A4D8               	btfss	status,2,c
 20733  010E3E  D7EB               	goto	l3346
 20734                           
 20735                           ; BSR set to: 0
 20736                           
 20737                           ; BSR set to: 0
 20738  010E40  C067  FFD9         	movff	utoa@buf,fsr2l
 20739  010E44  C068  FFDA         	movff	utoa@buf+1,fsr2h
 20740  010E48  0E00               	movlw	0
 20741  010E4A  6EDF               	movwf	indf2,c
 20742                           
 20743                           ; BSR set to: 0
 20744  010E4C  0767               	decf	utoa@buf& (0+255),f,b
 20745  010E4E  A0D8               	btfss	status,0,c
 20746  010E50  0768               	decf	(utoa@buf+1)& (0+255),f,b
 20747  010E52                     
 20748                           ; BSR set to: 0
 20749                           
 20750                           ; BSR set to: 0
 20751  010E52  C069  F060         	movff	utoa@val,___lwmod@dividend
 20752  010E56  C06A  F061         	movff	utoa@val+1,___lwmod@dividend+1
 20753  010E5A  C06B  F062         	movff	utoa@base,___lwmod@divisor
 20754  010E5E  C06C  F063         	movff	utoa@base+1,___lwmod@divisor+1
 20755  010E62  ECF1  F090         	call	___lwmod	;wreg free
 20756  010E66  0100               	movlb	0	; () banked
 20757  010E68  5160               	movf	?___lwmod& (0+255),w,b
 20758  010E6A  6F6F               	movwf	utoa@c& (0+255),b
 20759                           
 20760                           ; BSR set to: 0
 20761  010E6C  C069  F060         	movff	utoa@val,___lwdiv@dividend
 20762  010E70  C06A  F061         	movff	utoa@val+1,___lwdiv@dividend+1
 20763  010E74  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 20764  010E78  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 20765  010E7C  EC22  F08F         	call	___lwdiv	;wreg free
 20766  010E80  C060  F069         	movff	?___lwdiv,utoa@val
 20767  010E84  C061  F06A         	movff	?___lwdiv+1,utoa@val+1
 20768  010E88  0E09               	movlw	9
 20769  010E8A  0100               	movlb	0	; () banked
 20770  010E8C  656F               	cpfsgt	utoa@c& (0+255),b
 20771  010E8E  D002               	goto	l3349
 20772                           
 20773                           ; BSR set to: 0
 20774  010E90  0E07               	movlw	7
 20775  010E92  276F               	addwf	utoa@c& (0+255),f,b
 20776  010E94                     l3349:
 20777                           
 20778                           ; BSR set to: 0
 20779  010E94  0E30               	movlw	48
 20780  010E96  276F               	addwf	utoa@c& (0+255),f,b
 20781                           
 20782                           ; BSR set to: 0
 20783  010E98  C067  FFD9         	movff	utoa@buf,fsr2l
 20784  010E9C  C068  FFDA         	movff	utoa@buf+1,fsr2h
 20785  010EA0  C06F  FFDF         	movff	utoa@c,indf2
 20786                           
 20787                           ; BSR set to: 0
 20788  010EA4  0767               	decf	utoa@buf& (0+255),f,b
 20789  010EA6  A0D8               	btfss	status,0,c
 20790  010EA8  0768               	decf	(utoa@buf+1)& (0+255),f,b
 20791                           
 20792                           ; BSR set to: 0
 20793  010EAA  5169               	movf	utoa@val& (0+255),w,b
 20794  010EAC  116A               	iorwf	(utoa@val+1)& (0+255),w,b
 20795  010EAE  A4D8               	btfss	status,2,c
 20796  010EB0  D7D0               	goto	l3348
 20797                           
 20798                           ; BSR set to: 0
 20799                           ;	Return value of _utoa is never used
 20800                           
 20801                           ; BSR set to: 0
 20802  010EB2  4B67               	infsnz	utoa@buf& (0+255),f,b
 20803  010EB4  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 20804  010EB6  0012               	return	
 20805  010EB8                     __end_of_utoa:
 20806                           	opt stack 0
 20807                           tblptru	equ	0xFF8
 20808                           tblptrh	equ	0xFF7
 20809                           tblptrl	equ	0xFF6
 20810                           tablat	equ	0xFF5
 20811                           prodh	equ	0xFF4
 20812                           prodl	equ	0xFF3
 20813                           intcon	equ	0xFF2
 20814                           postinc0	equ	0xFEE
 20815                           wreg	equ	0xFE8
 20816                           indf1	equ	0xFE7
 20817                           postdec1	equ	0xFE5
 20818                           plusw1	equ	0xFE3
 20819                           fsr1h	equ	0xFE2
 20820                           fsr1l	equ	0xFE1
 20821                           indf2	equ	0xFDF
 20822                           postinc2	equ	0xFDE
 20823                           postdec2	equ	0xFDD
 20824                           plusw2	equ	0xFDB
 20825                           fsr2h	equ	0xFDA
 20826                           fsr2l	equ	0xFD9
 20827                           status	equ	0xFD8
 20828                           
 20829 ;; *************** function ___lwmod *****************
 20830 ;; Defined at:
 20831 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 20832 ;; Parameters:    Size  Location     Type
 20833 ;;  dividend        2    0[BANK0 ] unsigned int 
 20834 ;;  divisor         2    2[BANK0 ] unsigned int 
 20835 ;; Auto vars:     Size  Location     Type
 20836 ;;  counter         1    4[BANK0 ] unsigned char 
 20837 ;; Return value:  Size  Location     Type
 20838 ;;                  2    0[BANK0 ] unsigned int 
 20839 ;; Registers used:
 20840 ;;		wreg, status,2, status,0
 20841 ;; Tracked objects:
 20842 ;;		On entry : 0/0
 20843 ;;		On exit  : 0/0
 20844 ;;		Unchanged: 0/0
 20845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20846 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20847 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20849 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20850 ;;Total ram usage:        5 bytes
 20851 ;; Hardware stack levels used:    1
 20852 ;; Hardware stack levels required when called:   10
 20853 ;; This function calls:
 20854 ;;		Nothing
 20855 ;; This function is called by:
 20856 ;;		_utoa
 20857 ;; This function uses a non-reentrant model
 20858 ;;
 20859                           
 20860                           	psect	text63
 20861  0121E2                     __ptext63:
 20862                           	opt stack 0
 20863  0121E2                     ___lwmod:
 20864                           	opt stack 15
 20865                           
 20866                           ; BSR set to: 0
 20867                           ;incstack = 0
 20868  0121E2  0100               	movlb	0	; () banked
 20869  0121E4  5162               	movf	___lwmod@divisor& (0+255),w,b
 20870  0121E6  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 20871  0121E8  B4D8               	btfsc	status,2,c
 20872  0121EA  D018               	goto	l3173
 20873                           
 20874                           ; BSR set to: 0
 20875  0121EC  0E01               	movlw	1
 20876  0121EE  6F64               	movwf	___lwmod@counter& (0+255),b
 20877  0121F0  D004               	goto	l3168
 20878  0121F2                     
 20879                           ; BSR set to: 0
 20880                           
 20881                           ; BSR set to: 0
 20882  0121F2  90D8               	bcf	status,0,c
 20883  0121F4  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 20884  0121F6  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 20885  0121F8  2B64               	incf	___lwmod@counter& (0+255),f,b
 20886  0121FA                     l3168:
 20887                           
 20888                           ; BSR set to: 0
 20889                           
 20890                           ; BSR set to: 0
 20891  0121FA  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 20892  0121FC  D7FA               	goto	l3169
 20893  0121FE                     u17090:
 20894                           
 20895                           ; BSR set to: 0
 20896                           
 20897                           ; BSR set to: 0
 20898                           
 20899                           ; BSR set to: 0
 20900  0121FE  5162               	movf	___lwmod@divisor& (0+255),w,b
 20901  012200  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 20902  012202  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 20903  012204  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 20904  012206  A0D8               	btfss	status,0,c
 20905  012208  D004               	goto	l3172
 20906                           
 20907                           ; BSR set to: 0
 20908  01220A  5162               	movf	___lwmod@divisor& (0+255),w,b
 20909  01220C  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 20910  01220E  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 20911  012210  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 20912  012212                     l3172:
 20913                           
 20914                           ; BSR set to: 0
 20915                           
 20916                           ; BSR set to: 0
 20917  012212  90D8               	bcf	status,0,c
 20918  012214  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 20919  012216  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 20920                           
 20921                           ; BSR set to: 0
 20922  012218  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 20923  01221A  D7F1               	goto	u17090
 20924  01221C                     l3173:
 20925                           
 20926                           ; BSR set to: 0
 20927                           
 20928                           ; BSR set to: 0
 20929  01221C  C060  F060         	movff	___lwmod@dividend,?___lwmod
 20930  012220  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 20931                           
 20932                           ; BSR set to: 0
 20933  012224  0012               	return		;funcret
 20934  012226                     __end_of___lwmod:
 20935                           	opt stack 0
 20936                           tblptru	equ	0xFF8
 20937                           tblptrh	equ	0xFF7
 20938                           tblptrl	equ	0xFF6
 20939                           tablat	equ	0xFF5
 20940                           prodh	equ	0xFF4
 20941                           prodl	equ	0xFF3
 20942                           intcon	equ	0xFF2
 20943                           postinc0	equ	0xFEE
 20944                           wreg	equ	0xFE8
 20945                           indf1	equ	0xFE7
 20946                           postdec1	equ	0xFE5
 20947                           plusw1	equ	0xFE3
 20948                           fsr1h	equ	0xFE2
 20949                           fsr1l	equ	0xFE1
 20950                           indf2	equ	0xFDF
 20951                           postinc2	equ	0xFDE
 20952                           postdec2	equ	0xFDD
 20953                           plusw2	equ	0xFDB
 20954                           fsr2h	equ	0xFDA
 20955                           fsr2l	equ	0xFD9
 20956                           status	equ	0xFD8
 20957                           
 20958 ;; *************** function ___lwdiv *****************
 20959 ;; Defined at:
 20960 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 20961 ;; Parameters:    Size  Location     Type
 20962 ;;  dividend        2    0[BANK0 ] unsigned int 
 20963 ;;  divisor         2    2[BANK0 ] unsigned int 
 20964 ;; Auto vars:     Size  Location     Type
 20965 ;;  quotient        2    5[BANK0 ] unsigned int 
 20966 ;;  counter         1    4[BANK0 ] unsigned char 
 20967 ;; Return value:  Size  Location     Type
 20968 ;;                  2    0[BANK0 ] unsigned int 
 20969 ;; Registers used:
 20970 ;;		wreg, status,2, status,0
 20971 ;; Tracked objects:
 20972 ;;		On entry : 0/0
 20973 ;;		On exit  : 0/0
 20974 ;;		Unchanged: 0/0
 20975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20976 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20977 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20979 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20980 ;;Total ram usage:        7 bytes
 20981 ;; Hardware stack levels used:    1
 20982 ;; Hardware stack levels required when called:   10
 20983 ;; This function calls:
 20984 ;;		Nothing
 20985 ;; This function is called by:
 20986 ;;		_utoa
 20987 ;; This function uses a non-reentrant model
 20988 ;;
 20989                           
 20990                           	psect	text64
 20991  011E44                     __ptext64:
 20992                           	opt stack 0
 20993  011E44                     ___lwdiv:
 20994                           	opt stack 15
 20995                           
 20996                           ; BSR set to: 0
 20997                           ;incstack = 0
 20998  011E44  0E00               	movlw	0
 20999  011E46  0100               	movlb	0	; () banked
 21000  011E48  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 21001  011E4A  0E00               	movlw	0
 21002  011E4C  6F65               	movwf	___lwdiv@quotient& (0+255),b
 21003                           
 21004                           ; BSR set to: 0
 21005  011E4E  5162               	movf	___lwdiv@divisor& (0+255),w,b
 21006  011E50  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 21007  011E52  B4D8               	btfsc	status,2,c
 21008  011E54  D01C               	goto	l3163
 21009                           
 21010                           ; BSR set to: 0
 21011  011E56  0E01               	movlw	1
 21012  011E58  6F64               	movwf	___lwdiv@counter& (0+255),b
 21013  011E5A  D004               	goto	l3158
 21014  011E5C                     
 21015                           ; BSR set to: 0
 21016                           
 21017                           ; BSR set to: 0
 21018  011E5C  90D8               	bcf	status,0,c
 21019  011E5E  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 21020  011E60  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 21021  011E62  2B64               	incf	___lwdiv@counter& (0+255),f,b
 21022  011E64                     l3158:
 21023                           
 21024                           ; BSR set to: 0
 21025                           
 21026                           ; BSR set to: 0
 21027  011E64  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 21028  011E66  D7FA               	goto	l3159
 21029  011E68                     u17060:
 21030                           
 21031                           ; BSR set to: 0
 21032                           
 21033                           ; BSR set to: 0
 21034                           
 21035                           ; BSR set to: 0
 21036  011E68  90D8               	bcf	status,0,c
 21037  011E6A  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 21038  011E6C  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 21039                           
 21040                           ; BSR set to: 0
 21041  011E6E  5162               	movf	___lwdiv@divisor& (0+255),w,b
 21042  011E70  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 21043  011E72  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 21044  011E74  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 21045  011E76  A0D8               	btfss	status,0,c
 21046  011E78  D005               	goto	l3162
 21047                           
 21048                           ; BSR set to: 0
 21049  011E7A  5162               	movf	___lwdiv@divisor& (0+255),w,b
 21050  011E7C  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 21051  011E7E  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 21052  011E80  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 21053                           
 21054                           ; BSR set to: 0
 21055  011E82  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 21056  011E84                     l3162:
 21057                           
 21058                           ; BSR set to: 0
 21059                           
 21060                           ; BSR set to: 0
 21061  011E84  90D8               	bcf	status,0,c
 21062  011E86  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 21063  011E88  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 21064                           
 21065                           ; BSR set to: 0
 21066  011E8A  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 21067  011E8C  D7ED               	goto	u17060
 21068  011E8E                     l3163:
 21069                           
 21070                           ; BSR set to: 0
 21071                           
 21072                           ; BSR set to: 0
 21073  011E8E  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 21074  011E92  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 21075                           
 21076                           ; BSR set to: 0
 21077  011E96  0012               	return		;funcret
 21078  011E98                     __end_of___lwdiv:
 21079                           	opt stack 0
 21080                           tblptru	equ	0xFF8
 21081                           tblptrh	equ	0xFF7
 21082                           tblptrl	equ	0xFF6
 21083                           tablat	equ	0xFF5
 21084                           prodh	equ	0xFF4
 21085                           prodl	equ	0xFF3
 21086                           intcon	equ	0xFF2
 21087                           postinc0	equ	0xFEE
 21088                           wreg	equ	0xFE8
 21089                           indf1	equ	0xFE7
 21090                           postdec1	equ	0xFE5
 21091                           plusw1	equ	0xFE3
 21092                           fsr1h	equ	0xFE2
 21093                           fsr1l	equ	0xFE1
 21094                           indf2	equ	0xFDF
 21095                           postinc2	equ	0xFDE
 21096                           postdec2	equ	0xFDD
 21097                           plusw2	equ	0xFDB
 21098                           fsr2h	equ	0xFDA
 21099                           fsr2l	equ	0xFD9
 21100                           status	equ	0xFD8
 21101                           
 21102 ;; *************** function ___almod *****************
 21103 ;; Defined at:
 21104 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\almod.c"
 21105 ;; Parameters:    Size  Location     Type
 21106 ;;  dividend        4    0[BANK0 ] long 
 21107 ;;  divisor         4    4[BANK0 ] long 
 21108 ;; Auto vars:     Size  Location     Type
 21109 ;;  sign            1    9[BANK0 ] unsigned char 
 21110 ;;  counter         1    8[BANK0 ] unsigned char 
 21111 ;; Return value:  Size  Location     Type
 21112 ;;                  4    0[BANK0 ] long 
 21113 ;; Registers used:
 21114 ;;		wreg, status,2, status,0
 21115 ;; Tracked objects:
 21116 ;;		On entry : 0/0
 21117 ;;		On exit  : 0/0
 21118 ;;		Unchanged: 0/0
 21119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21120 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21121 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21123 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21124 ;;Total ram usage:       10 bytes
 21125 ;; Hardware stack levels used:    1
 21126 ;; Hardware stack levels required when called:   10
 21127 ;; This function calls:
 21128 ;;		Nothing
 21129 ;; This function is called by:
 21130 ;;		__display_itoa_long
 21131 ;; This function uses a non-reentrant model
 21132 ;;
 21133                           
 21134                           	psect	text65
 21135  010CB6                     __ptext65:
 21136                           	opt stack 0
 21137  010CB6                     ___almod:
 21138                           	opt stack 18
 21139                           
 21140                           ; BSR set to: 0
 21141                           ;incstack = 0
 21142  010CB6  0E00               	movlw	0
 21143  010CB8  0100               	movlb	0	; () banked
 21144  010CBA  6F69               	movwf	___almod@sign& (0+255),b
 21145                           
 21146                           ; BSR set to: 0
 21147  010CBC  AF63               	btfss	(___almod@dividend+3)& (0+255),7,b
 21148  010CBE  D00A               	goto	l2760
 21149                           
 21150                           ; BSR set to: 0
 21151  010CC0  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 21152  010CC2  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 21153  010CC4  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 21154  010CC6  6D60               	negf	___almod@dividend& (0+255),b
 21155  010CC8  0E00               	movlw	0
 21156  010CCA  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 21157  010CCC  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 21158  010CCE  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 21159                           
 21160                           ; BSR set to: 0
 21161  010CD0  0E01               	movlw	1
 21162  010CD2  6F69               	movwf	___almod@sign& (0+255),b
 21163  010CD4                     l2760:
 21164                           
 21165                           ; BSR set to: 0
 21166                           
 21167                           ; BSR set to: 0
 21168  010CD4  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 21169  010CD6  D008               	goto	l2761
 21170                           
 21171                           ; BSR set to: 0
 21172  010CD8  1F67               	comf	(___almod@divisor+3)& (0+255),f,b
 21173  010CDA  1F66               	comf	(___almod@divisor+2)& (0+255),f,b
 21174  010CDC  1F65               	comf	(___almod@divisor+1)& (0+255),f,b
 21175  010CDE  6D64               	negf	___almod@divisor& (0+255),b
 21176  010CE0  0E00               	movlw	0
 21177  010CE2  2365               	addwfc	(___almod@divisor+1)& (0+255),f,b
 21178  010CE4  2366               	addwfc	(___almod@divisor+2)& (0+255),f,b
 21179  010CE6  2367               	addwfc	(___almod@divisor+3)& (0+255),f,b
 21180  010CE8                     l2761:
 21181                           
 21182                           ; BSR set to: 0
 21183                           
 21184                           ; BSR set to: 0
 21185  010CE8  5164               	movf	___almod@divisor& (0+255),w,b
 21186  010CEA  1165               	iorwf	(___almod@divisor+1)& (0+255),w,b
 21187  010CEC  1166               	iorwf	(___almod@divisor+2)& (0+255),w,b
 21188  010CEE  1167               	iorwf	(___almod@divisor+3)& (0+255),w,b
 21189  010CF0  B4D8               	btfsc	status,2,c
 21190  010CF2  D024               	goto	l2768
 21191                           
 21192                           ; BSR set to: 0
 21193  010CF4  0E01               	movlw	1
 21194  010CF6  6F68               	movwf	___almod@counter& (0+255),b
 21195  010CF8  D006               	goto	l2763
 21196  010CFA                     
 21197                           ; BSR set to: 0
 21198                           
 21199                           ; BSR set to: 0
 21200  010CFA  90D8               	bcf	status,0,c
 21201  010CFC  3764               	rlcf	___almod@divisor& (0+255),f,b
 21202  010CFE  3765               	rlcf	(___almod@divisor+1)& (0+255),f,b
 21203  010D00  3766               	rlcf	(___almod@divisor+2)& (0+255),f,b
 21204  010D02  3767               	rlcf	(___almod@divisor+3)& (0+255),f,b
 21205  010D04  2B68               	incf	___almod@counter& (0+255),f,b
 21206  010D06                     l2763:
 21207                           
 21208                           ; BSR set to: 0
 21209                           
 21210                           ; BSR set to: 0
 21211  010D06  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 21212  010D08  D7F8               	goto	l2764
 21213  010D0A                     u19250:
 21214                           
 21215                           ; BSR set to: 0
 21216                           
 21217                           ; BSR set to: 0
 21218                           
 21219                           ; BSR set to: 0
 21220  010D0A  5164               	movf	___almod@divisor& (0+255),w,b
 21221  010D0C  5D60               	subwf	___almod@dividend& (0+255),w,b
 21222  010D0E  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 21223  010D10  5961               	subwfb	(___almod@dividend+1)& (0+255),w,b
 21224  010D12  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 21225  010D14  5962               	subwfb	(___almod@dividend+2)& (0+255),w,b
 21226  010D16  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 21227  010D18  5963               	subwfb	(___almod@dividend+3)& (0+255),w,b
 21228  010D1A  A0D8               	btfss	status,0,c
 21229  010D1C  D008               	goto	l2767
 21230                           
 21231                           ; BSR set to: 0
 21232  010D1E  5164               	movf	___almod@divisor& (0+255),w,b
 21233  010D20  5F60               	subwf	___almod@dividend& (0+255),f,b
 21234  010D22  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 21235  010D24  5B61               	subwfb	(___almod@dividend+1)& (0+255),f,b
 21236  010D26  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 21237  010D28  5B62               	subwfb	(___almod@dividend+2)& (0+255),f,b
 21238  010D2A  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 21239  010D2C  5B63               	subwfb	(___almod@dividend+3)& (0+255),f,b
 21240  010D2E                     l2767:
 21241                           
 21242                           ; BSR set to: 0
 21243                           
 21244                           ; BSR set to: 0
 21245  010D2E  90D8               	bcf	status,0,c
 21246  010D30  3367               	rrcf	(___almod@divisor+3)& (0+255),f,b
 21247  010D32  3366               	rrcf	(___almod@divisor+2)& (0+255),f,b
 21248  010D34  3365               	rrcf	(___almod@divisor+1)& (0+255),f,b
 21249  010D36  3364               	rrcf	___almod@divisor& (0+255),f,b
 21250                           
 21251                           ; BSR set to: 0
 21252  010D38  2F68               	decfsz	___almod@counter& (0+255),f,b
 21253  010D3A  D7E7               	goto	u19250
 21254  010D3C                     l2768:
 21255                           
 21256                           ; BSR set to: 0
 21257                           
 21258                           ; BSR set to: 0
 21259                           
 21260                           ; BSR set to: 0
 21261  010D3C  5169               	movf	___almod@sign& (0+255),w,b
 21262  010D3E  B4D8               	btfsc	status,2,c
 21263  010D40  D008               	goto	l2769
 21264                           
 21265                           ; BSR set to: 0
 21266  010D42  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 21267  010D44  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 21268  010D46  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 21269  010D48  6D60               	negf	___almod@dividend& (0+255),b
 21270  010D4A  0E00               	movlw	0
 21271  010D4C  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 21272  010D4E  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 21273  010D50  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 21274  010D52                     l2769:
 21275                           
 21276                           ; BSR set to: 0
 21277                           
 21278                           ; BSR set to: 0
 21279  010D52  C060  F060         	movff	___almod@dividend,?___almod
 21280  010D56  C061  F061         	movff	___almod@dividend+1,?___almod+1
 21281  010D5A  C062  F062         	movff	___almod@dividend+2,?___almod+2
 21282  010D5E  C063  F063         	movff	___almod@dividend+3,?___almod+3
 21283  010D62  0012               	return	
 21284  010D64                     __end_of___almod:
 21285                           	opt stack 0
 21286                           tblptru	equ	0xFF8
 21287                           tblptrh	equ	0xFF7
 21288                           tblptrl	equ	0xFF6
 21289                           tablat	equ	0xFF5
 21290                           prodh	equ	0xFF4
 21291                           prodl	equ	0xFF3
 21292                           intcon	equ	0xFF2
 21293                           postinc0	equ	0xFEE
 21294                           wreg	equ	0xFE8
 21295                           indf1	equ	0xFE7
 21296                           postdec1	equ	0xFE5
 21297                           plusw1	equ	0xFE3
 21298                           fsr1h	equ	0xFE2
 21299                           fsr1l	equ	0xFE1
 21300                           indf2	equ	0xFDF
 21301                           postinc2	equ	0xFDE
 21302                           postdec2	equ	0xFDD
 21303                           plusw2	equ	0xFDB
 21304                           fsr2h	equ	0xFDA
 21305                           fsr2l	equ	0xFD9
 21306                           status	equ	0xFD8
 21307                           
 21308 ;; *************** function ___aldiv *****************
 21309 ;; Defined at:
 21310 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
 21311 ;; Parameters:    Size  Location     Type
 21312 ;;  dividend        4    0[BANK0 ] long 
 21313 ;;  divisor         4    4[BANK0 ] long 
 21314 ;; Auto vars:     Size  Location     Type
 21315 ;;  quotient        4   10[BANK0 ] long 
 21316 ;;  sign            1    9[BANK0 ] unsigned char 
 21317 ;;  counter         1    8[BANK0 ] unsigned char 
 21318 ;; Return value:  Size  Location     Type
 21319 ;;                  4    0[BANK0 ] long 
 21320 ;; Registers used:
 21321 ;;		wreg, status,2, status,0
 21322 ;; Tracked objects:
 21323 ;;		On entry : 0/0
 21324 ;;		On exit  : 0/0
 21325 ;;		Unchanged: 0/0
 21326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21327 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21328 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21330 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21331 ;;Total ram usage:       14 bytes
 21332 ;; Hardware stack levels used:    1
 21333 ;; Hardware stack levels required when called:   10
 21334 ;; This function calls:
 21335 ;;		Nothing
 21336 ;; This function is called by:
 21337 ;;		__display_itoa_long
 21338 ;; This function uses a non-reentrant model
 21339 ;;
 21340                           
 21341                           	psect	text66
 21342  0106C6                     __ptext66:
 21343                           	opt stack 0
 21344  0106C6                     ___aldiv:
 21345                           	opt stack 18
 21346                           
 21347                           ; BSR set to: 0
 21348                           ;incstack = 0
 21349  0106C6  0E00               	movlw	0
 21350  0106C8  0100               	movlb	0	; () banked
 21351  0106CA  6F69               	movwf	___aldiv@sign& (0+255),b
 21352                           
 21353                           ; BSR set to: 0
 21354  0106CC  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 21355  0106CE  D00A               	goto	l2747
 21356                           
 21357                           ; BSR set to: 0
 21358  0106D0  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
 21359  0106D2  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
 21360  0106D4  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
 21361  0106D6  6D64               	negf	___aldiv@divisor& (0+255),b
 21362  0106D8  0E00               	movlw	0
 21363  0106DA  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 21364  0106DC  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 21365  0106DE  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 21366                           
 21367                           ; BSR set to: 0
 21368  0106E0  0E01               	movlw	1
 21369  0106E2  6F69               	movwf	___aldiv@sign& (0+255),b
 21370  0106E4                     l2747:
 21371                           
 21372                           ; BSR set to: 0
 21373                           
 21374                           ; BSR set to: 0
 21375  0106E4  AF63               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 21376  0106E6  D00A               	goto	l2748
 21377                           
 21378                           ; BSR set to: 0
 21379  0106E8  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
 21380  0106EA  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
 21381  0106EC  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
 21382  0106EE  6D60               	negf	___aldiv@dividend& (0+255),b
 21383  0106F0  0E00               	movlw	0
 21384  0106F2  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 21385  0106F4  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 21386  0106F6  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 21387                           
 21388                           ; BSR set to: 0
 21389  0106F8  0E01               	movlw	1
 21390  0106FA  1B69               	xorwf	___aldiv@sign& (0+255),f,b
 21391  0106FC                     l2748:
 21392                           
 21393                           ; BSR set to: 0
 21394                           
 21395                           ; BSR set to: 0
 21396  0106FC  0E00               	movlw	0
 21397  0106FE  6F6A               	movwf	___aldiv@quotient& (0+255),b
 21398  010700  0E00               	movlw	0
 21399  010702  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
 21400  010704  0E00               	movlw	0
 21401  010706  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
 21402  010708  0E00               	movlw	0
 21403  01070A  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
 21404                           
 21405                           ; BSR set to: 0
 21406  01070C  5164               	movf	___aldiv@divisor& (0+255),w,b
 21407  01070E  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 21408  010710  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 21409  010712  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 21410  010714  B4D8               	btfsc	status,2,c
 21411  010716  D02A               	goto	l2755
 21412                           
 21413                           ; BSR set to: 0
 21414  010718  0E01               	movlw	1
 21415  01071A  6F68               	movwf	___aldiv@counter& (0+255),b
 21416  01071C  D006               	goto	l2750
 21417  01071E                     
 21418                           ; BSR set to: 0
 21419                           
 21420                           ; BSR set to: 0
 21421  01071E  90D8               	bcf	status,0,c
 21422  010720  3764               	rlcf	___aldiv@divisor& (0+255),f,b
 21423  010722  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 21424  010724  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 21425  010726  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 21426  010728  2B68               	incf	___aldiv@counter& (0+255),f,b
 21427  01072A                     l2750:
 21428                           
 21429                           ; BSR set to: 0
 21430                           
 21431                           ; BSR set to: 0
 21432  01072A  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 21433  01072C  D7F8               	goto	l2751
 21434  01072E                     u19190:
 21435                           
 21436                           ; BSR set to: 0
 21437                           
 21438                           ; BSR set to: 0
 21439                           
 21440                           ; BSR set to: 0
 21441  01072E  90D8               	bcf	status,0,c
 21442  010730  376A               	rlcf	___aldiv@quotient& (0+255),f,b
 21443  010732  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 21444  010734  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 21445  010736  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 21446                           
 21447                           ; BSR set to: 0
 21448  010738  5164               	movf	___aldiv@divisor& (0+255),w,b
 21449  01073A  5D60               	subwf	___aldiv@dividend& (0+255),w,b
 21450  01073C  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 21451  01073E  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 21452  010740  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 21453  010742  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 21454  010744  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 21455  010746  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 21456  010748  A0D8               	btfss	status,0,c
 21457  01074A  D009               	goto	l2754
 21458                           
 21459                           ; BSR set to: 0
 21460  01074C  5164               	movf	___aldiv@divisor& (0+255),w,b
 21461  01074E  5F60               	subwf	___aldiv@dividend& (0+255),f,b
 21462  010750  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 21463  010752  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 21464  010754  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 21465  010756  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 21466  010758  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 21467  01075A  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 21468                           
 21469                           ; BSR set to: 0
 21470  01075C  816A               	bsf	___aldiv@quotient& (0+255),0,b
 21471  01075E                     l2754:
 21472                           
 21473                           ; BSR set to: 0
 21474                           
 21475                           ; BSR set to: 0
 21476  01075E  90D8               	bcf	status,0,c
 21477  010760  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 21478  010762  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 21479  010764  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 21480  010766  3364               	rrcf	___aldiv@divisor& (0+255),f,b
 21481                           
 21482                           ; BSR set to: 0
 21483  010768  2F68               	decfsz	___aldiv@counter& (0+255),f,b
 21484  01076A  D7E1               	goto	u19190
 21485  01076C                     l2755:
 21486                           
 21487                           ; BSR set to: 0
 21488                           
 21489                           ; BSR set to: 0
 21490                           
 21491                           ; BSR set to: 0
 21492  01076C  5169               	movf	___aldiv@sign& (0+255),w,b
 21493  01076E  B4D8               	btfsc	status,2,c
 21494  010770  D008               	goto	l2756
 21495                           
 21496                           ; BSR set to: 0
 21497  010772  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
 21498  010774  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
 21499  010776  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
 21500  010778  6D6A               	negf	___aldiv@quotient& (0+255),b
 21501  01077A  0E00               	movlw	0
 21502  01077C  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 21503  01077E  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 21504  010780  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 21505  010782                     l2756:
 21506                           
 21507                           ; BSR set to: 0
 21508                           
 21509                           ; BSR set to: 0
 21510  010782  C06A  F060         	movff	___aldiv@quotient,?___aldiv
 21511  010786  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
 21512  01078A  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
 21513  01078E  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
 21514  010792  0012               	return	
 21515  010794                     __end_of___aldiv:
 21516                           	opt stack 0
 21517                           tblptru	equ	0xFF8
 21518                           tblptrh	equ	0xFF7
 21519                           tblptrl	equ	0xFF6
 21520                           tablat	equ	0xFF5
 21521                           prodh	equ	0xFF4
 21522                           prodl	equ	0xFF3
 21523                           intcon	equ	0xFF2
 21524                           postinc0	equ	0xFEE
 21525                           wreg	equ	0xFE8
 21526                           indf1	equ	0xFE7
 21527                           postdec1	equ	0xFE5
 21528                           plusw1	equ	0xFE3
 21529                           fsr1h	equ	0xFE2
 21530                           fsr1l	equ	0xFE1
 21531                           indf2	equ	0xFDF
 21532                           postinc2	equ	0xFDE
 21533                           postdec2	equ	0xFDD
 21534                           plusw2	equ	0xFDB
 21535                           fsr2h	equ	0xFDA
 21536                           fsr2l	equ	0xFD9
 21537                           status	equ	0xFD8
 21538                           
 21539 ;; *************** function __display_clear *****************
 21540 ;; Defined at:
 21541 ;;		line 81 in file "display.c"
 21542 ;; Parameters:    Size  Location     Type
 21543 ;;		None
 21544 ;; Auto vars:     Size  Location     Type
 21545 ;;  col             1    3[BANK0 ] unsigned char 
 21546 ;;  row             1    2[BANK0 ] unsigned char 
 21547 ;; Return value:  Size  Location     Type
 21548 ;;                  1    wreg      void 
 21549 ;; Registers used:
 21550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21551 ;; Tracked objects:
 21552 ;;		On entry : 0/0
 21553 ;;		On exit  : 0/0
 21554 ;;		Unchanged: 0/0
 21555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21557 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21558 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21559 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21560 ;;Total ram usage:        4 bytes
 21561 ;; Hardware stack levels used:    1
 21562 ;; Hardware stack levels required when called:   10
 21563 ;; This function calls:
 21564 ;;		Nothing
 21565 ;; This function is called by:
 21566 ;;		_display_prepare
 21567 ;; This function uses a non-reentrant model
 21568 ;;
 21569                           
 21570                           	psect	text67
 21571  0120CA                     __ptext67:
 21572                           	opt stack 0
 21573  0120CA                     __display_clear:
 21574                           	opt stack 19
 21575                           
 21576                           ;display.c: 83: uint8_t row;;display.c: 84: uint8_t col;;display.c: 85: for(row=0;row<4;
      +                          ++row)
 21577                           
 21578                           ; BSR set to: 0
 21579                           ;incstack = 0
 21580  0120CA  0E00               	movlw	0
 21581  0120CC  0100               	movlb	0	; () banked
 21582  0120CE  6F62               	movwf	__display_clear@row& (0+255),b
 21583  0120D0                     l20096:
 21584                           
 21585                           ; BSR set to: 0
 21586  0120D0  0E03               	movlw	3
 21587  0120D2  6562               	cpfsgt	__display_clear@row& (0+255),b
 21588  0120D4  D001               	goto	l1270
 21589  0120D6  0012               	return	
 21590  0120D8                     l1270:
 21591                           
 21592                           ; BSR set to: 0
 21593                           ;display.c: 86: {;display.c: 87: for(col=0;col<20;++col)
 21594                           
 21595                           ; BSR set to: 0
 21596  0120D8  0E00               	movlw	0
 21597  0120DA  6F63               	movwf	__display_clear@col& (0+255),b
 21598  0120DC                     l20102:
 21599                           
 21600                           ; BSR set to: 0
 21601  0120DC  0E13               	movlw	19
 21602  0120DE  6563               	cpfsgt	__display_clear@col& (0+255),b
 21603  0120E0  D001               	goto	l1272
 21604  0120E2  D016               	goto	u19660
 21605  0120E4                     l1272:
 21606                           
 21607                           ; BSR set to: 0
 21608                           ;display.c: 88: {;display.c: 89: display_content[row][col] = ' ';
 21609                           
 21610                           ; BSR set to: 0
 21611  0120E4  5162               	movf	__display_clear@row& (0+255),w,b
 21612  0120E6  0D14               	mullw	20
 21613  0120E8  0E78               	movlw	low _display_content
 21614  0120EA  6F60               	movwf	??__display_clear& (0+255),b
 21615  0120EC  0E02               	movlw	high _display_content
 21616  0120EE  6F61               	movwf	(??__display_clear+1)& (0+255),b
 21617  0120F0  50F3               	movf	prodl,w,c
 21618  0120F2  2760               	addwf	??__display_clear& (0+255),f,b
 21619  0120F4  50F4               	movf	prodh,w,c
 21620  0120F6  2361               	addwfc	(??__display_clear+1)& (0+255),f,b
 21621  0120F8  5163               	movf	__display_clear@col& (0+255),w,b
 21622  0120FA  0D01               	mullw	1
 21623  0120FC  50F3               	movf	prodl,w,c
 21624  0120FE  2560               	addwf	??__display_clear& (0+255),w,b
 21625  012100  6ED9               	movwf	fsr2l,c
 21626  012102  50F4               	movf	prodh,w,c
 21627  012104  2161               	addwfc	(??__display_clear+1)& (0+255),w,b
 21628  012106  6EDA               	movwf	fsr2h,c
 21629  012108  0E20               	movlw	32
 21630  01210A  6EDF               	movwf	indf2,c
 21631                           
 21632                           ; BSR set to: 0
 21633  01210C  2B63               	incf	__display_clear@col& (0+255),f,b
 21634  01210E  D7E6               	goto	l20102
 21635  012110                     u19660:
 21636                           
 21637                           ; BSR set to: 0
 21638                           
 21639                           ; BSR set to: 0
 21640  012110  2B62               	incf	__display_clear@row& (0+255),f,b
 21641  012112  D7DE               	goto	l20096
 21642  012114                     __end_of__display_clear:
 21643                           	opt stack 0
 21644                           tblptru	equ	0xFF8
 21645                           tblptrh	equ	0xFF7
 21646                           tblptrl	equ	0xFF6
 21647                           tablat	equ	0xFF5
 21648                           prodh	equ	0xFF4
 21649                           prodl	equ	0xFF3
 21650                           intcon	equ	0xFF2
 21651                           postinc0	equ	0xFEE
 21652                           wreg	equ	0xFE8
 21653                           indf1	equ	0xFE7
 21654                           postdec1	equ	0xFE5
 21655                           plusw1	equ	0xFE3
 21656                           fsr1h	equ	0xFE2
 21657                           fsr1l	equ	0xFE1
 21658                           indf2	equ	0xFDF
 21659                           postinc2	equ	0xFDE
 21660                           postdec2	equ	0xFDD
 21661                           plusw2	equ	0xFDB
 21662                           fsr2h	equ	0xFDA
 21663                           fsr2l	equ	0xFD9
 21664                           status	equ	0xFD8
 21665                           
 21666 ;; *************** function _USBDeviceInit *****************
 21667 ;; Defined at:
 21668 ;;		line 277 in file "usb_device.c"
 21669 ;; Parameters:    Size  Location     Type
 21670 ;;		None
 21671 ;; Auto vars:     Size  Location     Type
 21672 ;;  i               1    8[BANK0 ] unsigned char 
 21673 ;; Return value:  Size  Location     Type
 21674 ;;                  1    wreg      void 
 21675 ;; Registers used:
 21676 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21677 ;; Tracked objects:
 21678 ;;		On entry : 0/0
 21679 ;;		On exit  : 0/0
 21680 ;;		Unchanged: 0/0
 21681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21683 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21685 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21686 ;;Total ram usage:        1 bytes
 21687 ;; Hardware stack levels used:    1
 21688 ;; Hardware stack levels required when called:   11
 21689 ;; This function calls:
 21690 ;;		_memset
 21691 ;; This function is called by:
 21692 ;;		_main
 21693 ;; This function uses a non-reentrant model
 21694 ;;
 21695                           
 21696                           	psect	text68
 21697  00E8A2                     __ptext68:
 21698                           	opt stack 0
 21699  00E8A2                     _USBDeviceInit:
 21700                           	opt stack 19
 21701                           
 21702                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 21703                           
 21704                           ; BSR set to: 0
 21705                           ;incstack = 0
 21706  00E8A2  98A0               	bcf	4000,4,c	;volatile
 21707                           
 21708                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 21709  00E8A4  0E00               	movlw	0
 21710  00E8A6  6E63               	movwf	3939,c	;volatile
 21711                           
 21712                           ;usb_device.c: 291: {UIR = 0;};
 21713  00E8A8  0E00               	movlw	0
 21714  00E8AA  6E62               	movwf	3938,c	;volatile
 21715                           
 21716                           ;usb_device.c: 294: UEP0 = 0;
 21717  00E8AC  0E00               	movlw	0
 21718  00E8AE  010F               	movlb	15	; () banked
 21719  00E8B0  6F26               	movwf	38,b	;volatile
 21720                           
 21721                           ; BSR set to: 15
 21722                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 21723  00E8B2  0E27               	movlw	39
 21724  00E8B4  0100               	movlb	0	; () banked
 21725  00E8B6  6F60               	movwf	memset@p1& (0+255),b
 21726  00E8B8  0E0F               	movlw	15
 21727  00E8BA  6F61               	movwf	(memset@p1+1)& (0+255),b
 21728  00E8BC  0E00               	movlw	0
 21729  00E8BE  6F63               	movwf	(memset@c+1)& (0+255),b
 21730  00E8C0  0E00               	movlw	0
 21731  00E8C2  6F62               	movwf	memset@c& (0+255),b
 21732  00E8C4  0E00               	movlw	0
 21733  00E8C6  6F65               	movwf	(memset@n+1)& (0+255),b
 21734  00E8C8  0E02               	movlw	2
 21735  00E8CA  6F64               	movwf	memset@n& (0+255),b
 21736  00E8CC  ECC0  F092         	call	_memset	;wreg free
 21737                           
 21738                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 21739  00E8D0  0E16               	movlw	22
 21740  00E8D2  010F               	movlb	15	; () banked
 21741  00E8D4  6F39               	movwf	57,b	;volatile
 21742                           
 21743                           ; BSR set to: 15
 21744  00E8D6  0E9F               	movlw	159
 21745  00E8D8  6F37               	movwf	55,b	;volatile
 21746                           
 21747                           ; BSR set to: 15
 21748  00E8DA  0E7B               	movlw	123
 21749  00E8DC  6F36               	movwf	54,b	;volatile
 21750                           
 21751                           ; BSR set to: 15
 21752                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 21753  00E8DE  0E00               	movlw	0
 21754  00E8E0  0100               	movlb	0	; () banked
 21755  00E8E2  6F68               	movwf	USBDeviceInit@i& (0+255),b
 21756  00E8E4                     l20444:
 21757                           
 21758                           ; BSR set to: 0
 21759  00E8E4  0E0B               	movlw	11
 21760  00E8E6  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 21761  00E8E8  D001               	goto	l145
 21762  00E8EA  D00E               	goto	u20000
 21763  00E8EC                     l145:
 21764                           
 21765                           ; BSR set to: 0
 21766                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 21767                           
 21768                           ; BSR set to: 0
 21769  00E8EC  5168               	movf	USBDeviceInit@i& (0+255),w,b
 21770  00E8EE  0D04               	mullw	4
 21771  00E8F0  0E00               	movlw	0
 21772  00E8F2  24F3               	addwf	prodl,w,c
 21773  00E8F4  6ED9               	movwf	fsr2l,c
 21774  00E8F6  0E0D               	movlw	13
 21775  00E8F8  20F4               	addwfc	prodh,w,c
 21776  00E8FA  6EDA               	movwf	fsr2h,c
 21777  00E8FC  6ADE               	clrf	postinc2,c
 21778  00E8FE  6ADE               	clrf	postinc2,c
 21779  00E900  6ADE               	clrf	postinc2,c
 21780  00E902  6ADD               	clrf	postdec2,c
 21781                           
 21782                           ; BSR set to: 0
 21783  00E904  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 21784  00E906  D7EE               	goto	l20444
 21785  00E908                     u20000:
 21786                           
 21787                           ; BSR set to: 0
 21788                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 21789  00E908  8C65               	bsf	3941,6,c	;volatile
 21790                           
 21791                           ; BSR set to: 0
 21792                           ;usb_device.c: 316: UADDR = 0x00;
 21793  00E90A  0E00               	movlw	0
 21794  00E90C  010F               	movlb	15	; () banked
 21795  00E90E  6F38               	movwf	56,b	;volatile
 21796                           
 21797                           ; BSR set to: 15
 21798                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 21799  00E910  9865               	bcf	3941,4,c	;volatile
 21800                           
 21801                           ; BSR set to: 15
 21802                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 21803  00E912  9C65               	bcf	3941,6,c	;volatile
 21804  00E914                     
 21805                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 21806                           
 21807                           ; BSR set to: 15
 21808  00E914  9662               	bcf	3938,3,c	;volatile
 21809                           
 21810                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 21811  00E916  0E00               	movlw	0
 21812  00E918  6E0D               	movwf	_inPipes+3,c	;volatile
 21813                           
 21814                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 21815  00E91A  0E00               	movlw	0
 21816  00E91C  6E04               	movwf	_outPipes+3,c	;volatile
 21817                           
 21818                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 21819  00E91E  0E00               	movlw	0
 21820  00E920  6E06               	movwf	_outPipes+5,c	;volatile
 21821  00E922  0E00               	movlw	0
 21822  00E924  6E05               	movwf	_outPipes+4,c	;volatile
 21823                           
 21824                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 21825  00E926  B662               	btfsc	3938,3,c	;volatile
 21826  00E928  D7F5               	goto	l147
 21827                           
 21828                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 21829  00E92A  0E01               	movlw	1
 21830  00E92C  0101               	movlb	1	; () banked
 21831  00E92E  6F77               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 21832                           
 21833                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 21834  00E930  0E01               	movlw	1
 21835  00E932  6F76               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 21836                           
 21837                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 21838  00E934  0E00               	movlw	0
 21839  00E936  6F75               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 21840                           
 21841                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 21842  00E938  0E00               	movlw	0
 21843  00E93A  6F74               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 21844                           
 21845                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 21846  00E93C  0E00               	movlw	0
 21847  00E93E  6F79               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 21848                           
 21849                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 21850  00E940  0E00               	movlw	0
 21851  00E942  0100               	movlb	0	; () banked
 21852  00E944  6F68               	movwf	USBDeviceInit@i& (0+255),b
 21853  00E946                     l20472:
 21854                           
 21855                           ; BSR set to: 0
 21856  00E946  0E02               	movlw	2
 21857  00E948  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 21858  00E94A  D001               	goto	l149
 21859  00E94C  D02E               	goto	u20030
 21860  00E94E                     l149:
 21861                           
 21862                           ; BSR set to: 0
 21863                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 21864                           
 21865                           ; BSR set to: 0
 21866  00E94E  5168               	movf	USBDeviceInit@i& (0+255),w,b
 21867  00E950  0D02               	mullw	2
 21868  00E952  0E10               	movlw	low _pBDTEntryIn
 21869  00E954  24F3               	addwf	prodl,w,c
 21870  00E956  6ED9               	movwf	fsr2l,c
 21871  00E958  0E00               	movlw	high _pBDTEntryIn
 21872  00E95A  20F4               	addwfc	prodh,w,c
 21873  00E95C  6EDA               	movwf	fsr2h,c
 21874  00E95E  0E00               	movlw	0
 21875  00E960  6EDE               	movwf	postinc2,c
 21876  00E962  0E00               	movlw	0
 21877  00E964  6EDD               	movwf	postdec2,c
 21878                           
 21879                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 21880  00E966  5168               	movf	USBDeviceInit@i& (0+255),w,b
 21881  00E968  0D02               	mullw	2
 21882  00E96A  0E31               	movlw	low _pBDTEntryOut
 21883  00E96C  24F3               	addwf	prodl,w,c
 21884  00E96E  6ED9               	movwf	fsr2l,c
 21885  00E970  0E01               	movlw	high _pBDTEntryOut
 21886  00E972  20F4               	addwfc	prodh,w,c
 21887  00E974  6EDA               	movwf	fsr2h,c
 21888  00E976  0E00               	movlw	0
 21889  00E978  6EDE               	movwf	postinc2,c
 21890  00E97A  0E00               	movlw	0
 21891  00E97C  6EDD               	movwf	postdec2,c
 21892                           
 21893                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 21894  00E97E  5168               	movf	USBDeviceInit@i& (0+255),w,b
 21895  00E980  0D01               	mullw	1
 21896  00E982  0E58               	movlw	low _ep_data_in
 21897  00E984  24F3               	addwf	prodl,w,c
 21898  00E986  6ED9               	movwf	fsr2l,c
 21899  00E988  0E01               	movlw	high _ep_data_in
 21900  00E98A  20F4               	addwfc	prodh,w,c
 21901  00E98C  6EDA               	movwf	fsr2h,c
 21902  00E98E  0E00               	movlw	0
 21903  00E990  6EDF               	movwf	indf2,c
 21904                           
 21905                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 21906  00E992  5168               	movf	USBDeviceInit@i& (0+255),w,b
 21907  00E994  0D01               	mullw	1
 21908  00E996  0E55               	movlw	low _ep_data_out
 21909  00E998  24F3               	addwf	prodl,w,c
 21910  00E99A  6ED9               	movwf	fsr2l,c
 21911  00E99C  0E01               	movlw	high _ep_data_out
 21912  00E99E  20F4               	addwfc	prodh,w,c
 21913  00E9A0  6EDA               	movwf	fsr2h,c
 21914  00E9A2  0E00               	movlw	0
 21915  00E9A4  6EDF               	movwf	indf2,c
 21916                           
 21917                           ; BSR set to: 0
 21918  00E9A6  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 21919  00E9A8  D7CE               	goto	l20472
 21920  00E9AA                     u20030:
 21921                           
 21922                           ; BSR set to: 0
 21923                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 21924                           
 21925                           ; BSR set to: 0
 21926  00E9AA  0E08               	movlw	8
 21927  00E9AC  6E10               	movwf	_pBDTEntryIn,c
 21928  00E9AE  0E0D               	movlw	13
 21929  00E9B0  6E11               	movwf	_pBDTEntryIn+1,c
 21930                           
 21931                           ; BSR set to: 0
 21932                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 21933  00E9B2  0E16               	movlw	22
 21934  00E9B4  010F               	movlb	15	; () banked
 21935  00E9B6  6F26               	movwf	38,b	;volatile
 21936                           
 21937                           ; BSR set to: 15
 21938                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 21939  00E9B8  0E0D               	movlw	13
 21940  00E9BA  010D               	movlb	13	; () banked
 21941  00E9BC  6F03               	movwf	3,b	;volatile
 21942  00E9BE  0E30               	movlw	48
 21943  00E9C0  6F02               	movwf	2,b	;volatile
 21944                           
 21945                           ; BSR set to: 13
 21946                           ;usb_device.c: 359: BDT[0].CNT = 8;
 21947  00E9C2  0E08               	movlw	8
 21948  00E9C4  6F01               	movwf	1,b	;volatile
 21949                           
 21950                           ; BSR set to: 13
 21951                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 21952  00E9C6  0E04               	movlw	4
 21953  00E9C8  6F00               	movwf	0,b	;volatile
 21954                           
 21955                           ; BSR set to: 13
 21956                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 21957  00E9CA  8F00               	bsf	0,7,b	;volatile
 21958                           
 21959                           ; BSR set to: 13
 21960                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 21961  00E9CC  0E00               	movlw	0
 21962  00E9CE  6E2D               	movwf	_USBActiveConfiguration,c	;volatile
 21963                           
 21964                           ; BSR set to: 13
 21965                           ;usb_device.c: 366: USB1msTickCount = 0;
 21966  00E9D0  0E00               	movlw	0
 21967  00E9D2  0101               	movlb	1	; () banked
 21968  00E9D4  6F4B               	movwf	_USB1msTickCount& (0+255),b	;volatile
 21969  00E9D6  0E00               	movlw	0
 21970  00E9D8  6F4C               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 21971  00E9DA  0E00               	movlw	0
 21972  00E9DC  6F4D               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 21973  00E9DE  0E00               	movlw	0
 21974  00E9E0  6F4E               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 21975                           
 21976                           ; BSR set to: 1
 21977                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 21978  00E9E2  0E00               	movlw	0
 21979  00E9E4  6F73               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 21980                           
 21981                           ; BSR set to: 1
 21982                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 21983  00E9E6  0E00               	movlw	0
 21984  00E9E8  6E2B               	movwf	_USBDeviceState,c	;volatile
 21985                           
 21986                           ; BSR set to: 1
 21987  00E9EA  0012               	return		;funcret
 21988  00E9EC                     __end_of_USBDeviceInit:
 21989                           	opt stack 0
 21990                           tblptru	equ	0xFF8
 21991                           tblptrh	equ	0xFF7
 21992                           tblptrl	equ	0xFF6
 21993                           tablat	equ	0xFF5
 21994                           prodh	equ	0xFF4
 21995                           prodl	equ	0xFF3
 21996                           intcon	equ	0xFF2
 21997                           postinc0	equ	0xFEE
 21998                           wreg	equ	0xFE8
 21999                           indf1	equ	0xFE7
 22000                           postdec1	equ	0xFE5
 22001                           plusw1	equ	0xFE3
 22002                           fsr1h	equ	0xFE2
 22003                           fsr1l	equ	0xFE1
 22004                           indf2	equ	0xFDF
 22005                           postinc2	equ	0xFDE
 22006                           postdec2	equ	0xFDD
 22007                           plusw2	equ	0xFDB
 22008                           fsr2h	equ	0xFDA
 22009                           fsr2l	equ	0xFD9
 22010                           status	equ	0xFD8
 22011                           
 22012 ;; *************** function _memset *****************
 22013 ;; Defined at:
 22014 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 22015 ;; Parameters:    Size  Location     Type
 22016 ;;  p1              2    0[BANK0 ] PTR void 
 22017 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 22018 ;;  c               2    2[BANK0 ] int 
 22019 ;;  n               2    4[BANK0 ] unsigned int 
 22020 ;; Auto vars:     Size  Location     Type
 22021 ;;  p               2    6[BANK0 ] PTR unsigned char 
 22022 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 22023 ;; Return value:  Size  Location     Type
 22024 ;;                  2    0[BANK0 ] PTR void 
 22025 ;; Registers used:
 22026 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22027 ;; Tracked objects:
 22028 ;;		On entry : 0/0
 22029 ;;		On exit  : 0/0
 22030 ;;		Unchanged: 0/0
 22031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22032 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22033 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22035 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22036 ;;Total ram usage:        8 bytes
 22037 ;; Hardware stack levels used:    1
 22038 ;; Hardware stack levels required when called:   10
 22039 ;; This function calls:
 22040 ;;		Nothing
 22041 ;; This function is called by:
 22042 ;;		_USBDeviceInit
 22043 ;; This function uses a non-reentrant model
 22044 ;;
 22045                           
 22046                           	psect	text69
 22047  012580                     __ptext69:
 22048                           	opt stack 0
 22049  012580                     _memset:
 22050                           	opt stack 19
 22051                           
 22052                           ; BSR set to: 1
 22053                           ;incstack = 0
 22054  012580  C060  F066         	movff	memset@p1,memset@p
 22055  012584  C061  F067         	movff	memset@p1+1,memset@p+1
 22056  012588  D009               	goto	l3360
 22057  01258A                     l19758:
 22058  01258A  C066  FFD9         	movff	memset@p,fsr2l
 22059  01258E  C067  FFDA         	movff	memset@p+1,fsr2h
 22060  012592  C062  FFDF         	movff	memset@c,indf2
 22061  012596  0100               	movlb	0	; () banked
 22062  012598  4B66               	infsnz	memset@p& (0+255),f,b
 22063  01259A  2B67               	incf	(memset@p+1)& (0+255),f,b
 22064  01259C                     l3360:
 22065                           
 22066                           ; BSR set to: 0
 22067  01259C  0100               	movlb	0	; () banked
 22068  01259E  0764               	decf	memset@n& (0+255),f,b
 22069  0125A0  A0D8               	btfss	status,0,c
 22070  0125A2  0765               	decf	(memset@n+1)& (0+255),f,b
 22071  0125A4  2964               	incf	memset@n& (0+255),w,b
 22072  0125A6  E1F1               	bnz	l19758
 22073  0125A8  2965               	incf	(memset@n+1)& (0+255),w,b
 22074  0125AA  B4D8               	btfsc	status,2,c
 22075  0125AC  0012               	return	
 22076  0125AE  D7ED               	goto	l3361
 22077  0125B0                     __end_of_memset:
 22078                           	opt stack 0
 22079                           tblptru	equ	0xFF8
 22080                           tblptrh	equ	0xFF7
 22081                           tblptrl	equ	0xFF6
 22082                           tablat	equ	0xFF5
 22083                           prodh	equ	0xFF4
 22084                           prodl	equ	0xFF3
 22085                           intcon	equ	0xFF2
 22086                           postinc0	equ	0xFEE
 22087                           wreg	equ	0xFE8
 22088                           indf1	equ	0xFE7
 22089                           postdec1	equ	0xFE5
 22090                           plusw1	equ	0xFE3
 22091                           fsr1h	equ	0xFE2
 22092                           fsr1l	equ	0xFE1
 22093                           indf2	equ	0xFDF
 22094                           postinc2	equ	0xFDE
 22095                           postdec2	equ	0xFDD
 22096                           plusw2	equ	0xFDB
 22097                           fsr2h	equ	0xFDA
 22098                           fsr2l	equ	0xFD9
 22099                           status	equ	0xFD8
 22100                           
 22101 ;; *************** function _USBDeviceAttach *****************
 22102 ;; Defined at:
 22103 ;;		line 1354 in file "usb_device.c"
 22104 ;; Parameters:    Size  Location     Type
 22105 ;;		None
 22106 ;; Auto vars:     Size  Location     Type
 22107 ;;		None
 22108 ;; Return value:  Size  Location     Type
 22109 ;;                  1    wreg      void 
 22110 ;; Registers used:
 22111 ;;		wreg, status,2
 22112 ;; Tracked objects:
 22113 ;;		On entry : 0/0
 22114 ;;		On exit  : 0/0
 22115 ;;		Unchanged: 0/0
 22116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22121 ;;Total ram usage:        0 bytes
 22122 ;; Hardware stack levels used:    1
 22123 ;; Hardware stack levels required when called:   10
 22124 ;; This function calls:
 22125 ;;		Nothing
 22126 ;; This function is called by:
 22127 ;;		_main
 22128 ;; This function uses a non-reentrant model
 22129 ;;
 22130                           
 22131                           	psect	text70
 22132  01254E                     __ptext70:
 22133                           	opt stack 0
 22134  01254E                     _USBDeviceAttach:
 22135                           	opt stack 20
 22136                           
 22137                           ;usb_device.c: 1358: {;usb_device.c: 1359: if(1 == 1)
 22138                           
 22139                           ; BSR set to: 0
 22140                           ;incstack = 0
 22141  01254E  502B               	movf	_USBDeviceState,w,c	;volatile
 22142  012550  A4D8               	btfss	status,2,c
 22143  012552  0012               	return	
 22144                           
 22145                           ;usb_device.c: 1360: {;usb_device.c: 1362: UCON = 0;
 22146  012554  0E00               	movlw	0
 22147  012556  6E65               	movwf	3941,c	;volatile
 22148                           
 22149                           ;usb_device.c: 1365: UIE = 0;
 22150  012558  0E00               	movlw	0
 22151  01255A  010F               	movlb	15	; () banked
 22152  01255C  6F36               	movwf	54,b	;volatile
 22153                           
 22154                           ;usb_device.c: 1369: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 22155  01255E  0E16               	movlw	22
 22156  012560  6F39               	movwf	57,b	;volatile
 22157  012562  0E9F               	movlw	159
 22158  012564  6F37               	movwf	55,b	;volatile
 22159  012566  0E7B               	movlw	123
 22160  012568  6F36               	movwf	54,b	;volatile
 22161                           
 22162                           ; BSR set to: 15
 22163                           ;usb_device.c: 1371: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 22164  01256A  8ED0               	bsf	4048,7,c	;volatile
 22165                           
 22166                           ; BSR set to: 15
 22167  01256C  88A2               	bsf	4002,4,c	;volatile
 22168                           
 22169                           ; BSR set to: 15
 22170  01256E  88A0               	bsf	4000,4,c	;volatile
 22171                           
 22172                           ; BSR set to: 15
 22173  012570  8EF2               	bsf	intcon,7,c	;volatile
 22174                           
 22175                           ;usb_device.c: 1374: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 22176  012572  D001               	goto	l206
 22177  012574                     l207:
 22178  012574  8665               	bsf	3941,3,c	;volatile
 22179  012576                     l206:
 22180  012576  A665               	btfss	3941,3,c	;volatile
 22181  012578  D7FD               	goto	l207
 22182                           
 22183                           ;usb_device.c: 1377: USBDeviceState = ATTACHED_STATE;
 22184  01257A  0E01               	movlw	1
 22185  01257C  6E2B               	movwf	_USBDeviceState,c	;volatile
 22186  01257E  0012               	return	
 22187  012580                     __end_of_USBDeviceAttach:
 22188                           	opt stack 0
 22189                           tblptru	equ	0xFF8
 22190                           tblptrh	equ	0xFF7
 22191                           tblptrl	equ	0xFF6
 22192                           tablat	equ	0xFF5
 22193                           prodh	equ	0xFF4
 22194                           prodl	equ	0xFF3
 22195                           intcon	equ	0xFF2
 22196                           postinc0	equ	0xFEE
 22197                           wreg	equ	0xFE8
 22198                           indf1	equ	0xFE7
 22199                           postdec1	equ	0xFE5
 22200                           plusw1	equ	0xFE3
 22201                           fsr1h	equ	0xFE2
 22202                           fsr1l	equ	0xFE1
 22203                           indf2	equ	0xFDF
 22204                           postinc2	equ	0xFDE
 22205                           postdec2	equ	0xFDD
 22206                           plusw2	equ	0xFDB
 22207                           fsr2h	equ	0xFDA
 22208                           fsr2l	equ	0xFD9
 22209                           status	equ	0xFD8
 22210                           
 22211 ;; *************** function _SYSTEM_Initialize *****************
 22212 ;; Defined at:
 22213 ;;		line 39 in file "system.c"
 22214 ;; Parameters:    Size  Location     Type
 22215 ;;  state           1    wreg     enum E6623
 22216 ;; Auto vars:     Size  Location     Type
 22217 ;;  state           1    0[BANK0 ] enum E6623
 22218 ;;  pll_startup_    2    3[BANK0 ] unsigned int 
 22219 ;;  pll_startup_    2    1[BANK0 ] unsigned int 
 22220 ;; Return value:  Size  Location     Type
 22221 ;;                  1    wreg      void 
 22222 ;; Registers used:
 22223 ;;		wreg, status,2, status,0
 22224 ;; Tracked objects:
 22225 ;;		On entry : 0/0
 22226 ;;		On exit  : 0/0
 22227 ;;		Unchanged: 0/0
 22228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22230 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22232 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22233 ;;Total ram usage:        5 bytes
 22234 ;; Hardware stack levels used:    1
 22235 ;; Hardware stack levels required when called:   10
 22236 ;; This function calls:
 22237 ;;		Nothing
 22238 ;; This function is called by:
 22239 ;;		_main
 22240 ;; This function uses a non-reentrant model
 22241 ;;
 22242                           
 22243                           	psect	text71
 22244  011BDE                     __ptext71:
 22245                           	opt stack 0
 22246  011BDE                     _SYSTEM_Initialize:
 22247                           	opt stack 20
 22248                           
 22249                           ;incstack = 0
 22250                           ;SYSTEM_Initialize@state stored from wreg
 22251  011BDE  0100               	movlb	0	; () banked
 22252  011BE0  6F60               	movwf	SYSTEM_Initialize@state& (0+255),b
 22253                           
 22254                           ;system.c: 41: switch(state)
 22255  011BE2  D01E               	goto	l890
 22256  011BE4                     
 22257                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 22258  011BE4  0E02               	movlw	2
 22259  011BE6  0100               	movlb	0	; () banked
 22260  011BE8  6F62               	movwf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),b
 22261  011BEA  0E58               	movlw	88
 22262  011BEC  6F61               	movwf	SYSTEM_Initialize@pll_startup_counter& (0+255),b
 22263                           
 22264                           ; BSR set to: 0
 22265                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 22266  011BEE  8C9B               	bsf	3995,6,c	;volatile
 22267  011BF0                     l20624:
 22268                           
 22269                           ; BSR set to: 0
 22270  011BF0  0761               	decf	SYSTEM_Initialize@pll_startup_counter& (0+255),f,b
 22271  011BF2  A0D8               	btfss	status,0,c
 22272  011BF4  0762               	decf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),f,b
 22273  011BF6  2961               	incf	SYSTEM_Initialize@pll_startup_counter& (0+255),w,b
 22274  011BF8  E1FB               	bnz	l20624
 22275  011BFA  2962               	incf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),w,b
 22276  011BFC  B4D8               	btfsc	status,2,c
 22277  011BFE  0012               	return	
 22278  011C00  D7F7               	goto	l893
 22279  011C02                     
 22280                           ; BSR set to: 0
 22281                           ;system.c: 78: OSCCON = 0x70;
 22282                           
 22283                           ; BSR set to: 0
 22284  011C02  0E70               	movlw	112
 22285  011C04  6ED3               	movwf	4051,c	;volatile
 22286                           
 22287                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 22288  011C06  0E03               	movlw	3
 22289  011C08  6F64               	movwf	(SYSTEM_Initialize@pll_startup_counter_3110+1)& (0+255),b
 22290  011C0A  0E20               	movlw	32
 22291  011C0C  6F63               	movwf	SYSTEM_Initialize@pll_startup_counter_3110& (0+255),b
 22292  011C0E                     l20628:
 22293                           
 22294                           ; BSR set to: 0
 22295  011C0E  0763               	decf	SYSTEM_Initialize@pll_startup_counter_3110& (0+255),f,b
 22296  011C10  A0D8               	btfss	status,0,c
 22297  011C12  0764               	decf	(SYSTEM_Initialize@pll_startup_counter_3110+1)& (0+255),f,b
 22298  011C14  2963               	incf	SYSTEM_Initialize@pll_startup_counter_3110& (0+255),w,b
 22299  011C16  E1FB               	bnz	l20628
 22300  011C18  2964               	incf	(SYSTEM_Initialize@pll_startup_counter_3110+1)& (0+255),w,b
 22301  011C1A  B4D8               	btfsc	status,2,c
 22302  011C1C  0012               	return	
 22303  011C1E  D7F7               	goto	l899
 22304  011C20                     l890:
 22305                           
 22306                           ; BSR set to: 0
 22307  011C20  0100               	movlb	0	; () banked
 22308  011C22  5160               	movf	SYSTEM_Initialize@state& (0+255),w,b
 22309                           
 22310                           ; Switch size 1, requested type "space"
 22311                           ; Number of cases is 3, Range of values is 0 to 2
 22312                           ; switch strategies available:
 22313                           ; Name         Instructions Cycles
 22314                           ; simple_byte           10     6 (average)
 22315                           ;	Chosen strategy is simple_byte
 22316  011C24  0A00               	xorlw	0	; case 0
 22317  011C26  B4D8               	btfsc	status,2,c
 22318  011C28  D7DD               	goto	l891
 22319  011C2A  0A01               	xorlw	1	; case 1
 22320  011C2C  B4D8               	btfsc	status,2,c
 22321  011C2E  0012               	return	
 22322  011C30  0A03               	xorlw	3	; case 2
 22323  011C32  A4D8               	btfss	status,2,c
 22324  011C34  0012               	return	
 22325  011C36  D7E5               	goto	l897
 22326  011C38                     __end_of_SYSTEM_Initialize:
 22327                           	opt stack 0
 22328                           tblptru	equ	0xFF8
 22329                           tblptrh	equ	0xFF7
 22330                           tblptrl	equ	0xFF6
 22331                           tablat	equ	0xFF5
 22332                           prodh	equ	0xFF4
 22333                           prodl	equ	0xFF3
 22334                           intcon	equ	0xFF2
 22335                           postinc0	equ	0xFEE
 22336                           wreg	equ	0xFE8
 22337                           indf1	equ	0xFE7
 22338                           postdec1	equ	0xFE5
 22339                           plusw1	equ	0xFE3
 22340                           fsr1h	equ	0xFE2
 22341                           fsr1l	equ	0xFE1
 22342                           indf2	equ	0xFDF
 22343                           postinc2	equ	0xFDE
 22344                           postdec2	equ	0xFDD
 22345                           plusw2	equ	0xFDB
 22346                           fsr2h	equ	0xFDA
 22347                           fsr2l	equ	0xFD9
 22348                           status	equ	0xFD8
 22349                           
 22350 ;; *************** function _APP_DeviceMSDTasks *****************
 22351 ;; Defined at:
 22352 ;;		line 110 in file "app_device_msd.c"
 22353 ;; Parameters:    Size  Location     Type
 22354 ;;		None
 22355 ;; Auto vars:     Size  Location     Type
 22356 ;;		None
 22357 ;; Return value:  Size  Location     Type
 22358 ;;                  1    wreg      void 
 22359 ;; Registers used:
 22360 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 22361 ;; Tracked objects:
 22362 ;;		On entry : 0/0
 22363 ;;		On exit  : 0/0
 22364 ;;		Unchanged: 0/0
 22365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22370 ;;Total ram usage:        0 bytes
 22371 ;; Hardware stack levels used:    1
 22372 ;; Hardware stack levels required when called:   21
 22373 ;; This function calls:
 22374 ;;		_MSDTasks
 22375 ;; This function is called by:
 22376 ;;		_main
 22377 ;; This function uses a non-reentrant model
 22378 ;;
 22379                           
 22380                           	psect	text72
 22381  01285C                     __ptext72:
 22382                           	opt stack 0
 22383  01285C                     _APP_DeviceMSDTasks:
 22384                           	opt stack 9
 22385                           
 22386                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 22387                           
 22388                           ; BSR set to: 0
 22389                           ;incstack = 0
 22390  01285C  0E20               	movlw	32
 22391  01285E  602B               	cpfslt	_USBDeviceState,c	;volatile
 22392  012860  D001               	goto	l979
 22393  012862  0012               	return	
 22394  012864                     l979:
 22395                           
 22396                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 22397  012864  B265               	btfsc	3941,1,c	;volatile
 22398  012866  0012               	return	
 22399                           
 22400                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 22401                           
 22402                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 22403  012868  EC4B  F06B         	call	_MSDTasks	;wreg free
 22404  01286C  0012               	return		;funcret
 22405  01286E                     __end_of_APP_DeviceMSDTasks:
 22406                           	opt stack 0
 22407                           tblptru	equ	0xFF8
 22408                           tblptrh	equ	0xFF7
 22409                           tblptrl	equ	0xFF6
 22410                           tablat	equ	0xFF5
 22411                           prodh	equ	0xFF4
 22412                           prodl	equ	0xFF3
 22413                           intcon	equ	0xFF2
 22414                           postinc0	equ	0xFEE
 22415                           wreg	equ	0xFE8
 22416                           indf1	equ	0xFE7
 22417                           postdec1	equ	0xFE5
 22418                           plusw1	equ	0xFE3
 22419                           fsr1h	equ	0xFE2
 22420                           fsr1l	equ	0xFE1
 22421                           indf2	equ	0xFDF
 22422                           postinc2	equ	0xFDE
 22423                           postdec2	equ	0xFDD
 22424                           plusw2	equ	0xFDB
 22425                           fsr2h	equ	0xFDA
 22426                           fsr2l	equ	0xFD9
 22427                           status	equ	0xFD8
 22428                           
 22429 ;; *************** function _MSDTasks *****************
 22430 ;; Defined at:
 22431 ;;		line 335 in file "usb_device_msd.c"
 22432 ;; Parameters:    Size  Location     Type
 22433 ;;		None
 22434 ;; Auto vars:     Size  Location     Type
 22435 ;;  i               1   81[BANK0 ] unsigned char 
 22436 ;; Return value:  Size  Location     Type
 22437 ;;                  1    wreg      unsigned char 
 22438 ;; Registers used:
 22439 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 22440 ;; Tracked objects:
 22441 ;;		On entry : 0/0
 22442 ;;		On exit  : 0/0
 22443 ;;		Unchanged: 0/0
 22444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22446 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22447 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22448 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22449 ;;Total ram usage:        6 bytes
 22450 ;; Hardware stack levels used:    1
 22451 ;; Hardware stack levels required when called:   20
 22452 ;; This function calls:
 22453 ;;		_MSDProcessCommand
 22454 ;;		_USBStallEndpoint
 22455 ;;		_USBTransferOnePacket
 22456 ;; This function is called by:
 22457 ;;		_APP_DeviceMSDTasks
 22458 ;; This function uses a non-reentrant model
 22459 ;;
 22460                           
 22461                           	psect	text73
 22462  00D696                     __ptext73:
 22463                           	opt stack 0
 22464  00D696                     _MSDTasks:
 22465                           	opt stack 9
 22466                           
 22467                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 22468                           
 22469                           ;incstack = 0
 22470  00D696  0E20               	movlw	32
 22471  00D698  182B               	xorwf	_USBDeviceState,w,c	;volatile
 22472  00D69A  A4D8               	btfss	status,2,c
 22473  00D69C  0012               	return	
 22474                           
 22475                           ;usb_device_msd.c: 345: };usb_device_msd.c: 353: {PIE2bits.USBIE = 0;};
 22476                           
 22477                           ;usb_device_msd.c: 343: {;usb_device_msd.c: 344: return 0x00;;	Return value of _MSDTasks
      +                           is never used
 22478  00D69E  98A0               	bcf	4000,4,c	;volatile
 22479                           
 22480                           ;usb_device_msd.c: 357: switch(MSD_State)
 22481  00D6A0  D113               	goto	l570
 22482  00D6A2                     
 22483                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 22484  00D6A2  0100               	movlb	0	; () banked
 22485  00D6A4  51D0               	movf	_USBMSDOutHandle& (0+255),w,b
 22486  00D6A6  11D1               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 22487  00D6A8  B4D8               	btfsc	status,2,c
 22488  00D6AA  D006               	goto	u19350
 22489                           
 22490                           ; BSR set to: 0
 22491  00D6AC  C0D0  FFD9         	movff	_USBMSDOutHandle,fsr2l
 22492  00D6B0  C0D1  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 22493  00D6B4  BEDF               	btfsc	indf2,7,c
 22494  00D6B6  D116               	goto	l586
 22495  00D6B8                     u19350:
 22496                           
 22497                           ; BSR set to: 0
 22498                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 22499                           
 22500                           ; BSR set to: 0
 22501  00D6B8  0E00               	movlw	0
 22502  00D6BA  6FB1               	movwf	MSDTasks@i& (0+255),b
 22503  00D6BC                     l19822:
 22504                           
 22505                           ; BSR set to: 0
 22506  00D6BC  0E1E               	movlw	30
 22507  00D6BE  65B1               	cpfsgt	MSDTasks@i& (0+255),b
 22508  00D6C0  D001               	goto	l575
 22509  00D6C2  D014               	goto	u19370
 22510  00D6C4                     l575:
 22511                           
 22512                           ; BSR set to: 0
 22513                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 22514                           
 22515                           ; BSR set to: 0
 22516  00D6C4  51B1               	movf	MSDTasks@i& (0+255),w,b
 22517  00D6C6  0D01               	mullw	1
 22518  00D6C8  0E40               	movlw	64
 22519  00D6CA  24F3               	addwf	prodl,w,c
 22520  00D6CC  6ED9               	movwf	fsr2l,c
 22521  00D6CE  0E0D               	movlw	13
 22522  00D6D0  20F4               	addwfc	prodh,w,c
 22523  00D6D2  6EDA               	movwf	fsr2h,c
 22524  00D6D4  51B1               	movf	MSDTasks@i& (0+255),w,b
 22525  00D6D6  0D01               	mullw	1
 22526  00D6D8  0E00               	movlw	low _gblCBW
 22527  00D6DA  24F3               	addwf	prodl,w,c
 22528  00D6DC  6EE1               	movwf	fsr1l,c
 22529  00D6DE  0E01               	movlw	high _gblCBW
 22530  00D6E0  20F4               	addwfc	prodh,w,c
 22531  00D6E2  6EE2               	movwf	fsr1h,c
 22532  00D6E4  CFDF FFE7          	movff	indf2,indf1
 22533                           
 22534                           ; BSR set to: 0
 22535  00D6E8  2BB1               	incf	MSDTasks@i& (0+255),f,b
 22536  00D6EA  D7E8               	goto	l19822
 22537  00D6EC                     u19370:
 22538                           
 22539                           ; BSR set to: 0
 22540                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 22541                           
 22542                           ; BSR set to: 0
 22543  00D6EC  EE20 F001          	lfsr	2,1
 22544  00D6F0  51D0               	movf	_USBMSDOutHandle& (0+255),w,b
 22545  00D6F2  26D9               	addwf	fsr2l,f,c
 22546  00D6F4  51D1               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 22547  00D6F6  22DA               	addwfc	fsr2h,f,c
 22548  00D6F8  0E1F               	movlw	31
 22549  00D6FA  18DE               	xorwf	postinc2,w,c
 22550  00D6FC  A4D8               	btfss	status,2,c
 22551  00D6FE  D070               	goto	l577
 22552                           
 22553                           ; BSR set to: 0
 22554  00D700  0E55               	movlw	85
 22555  00D702  0101               	movlb	1	; () banked
 22556  00D704  1900               	xorwf	_gblCBW& (0+255),w,b
 22557  00D706  E16C               	bnz	l577
 22558  00D708  0E53               	movlw	83
 22559  00D70A  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 22560  00D70C  E169               	bnz	l19872
 22561  00D70E  0E42               	movlw	66
 22562  00D710  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 22563  00D712  E166               	bnz	l19872
 22564  00D714  0E43               	movlw	67
 22565  00D716  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 22566  00D718  A4D8               	btfss	status,2,c
 22567  00D71A  D062               	goto	l577
 22568                           
 22569                           ; BSR set to: 1
 22570                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 22571  00D71C  0E01               	movlw	1
 22572  00D71E  6F6D               	movwf	_MSDCBWValid& (0+255),b
 22573                           
 22574                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 22575  00D720  510D               	movf	(_gblCBW+13)& (0+255),w,b
 22576  00D722  A4D8               	btfss	status,2,c
 22577  00D724  D050               	goto	l578
 22578                           
 22579                           ; BSR set to: 1
 22580  00D726  0E11               	movlw	17
 22581  00D728  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 22582  00D72A  D04D               	goto	l578
 22583                           
 22584                           ; BSR set to: 1
 22585  00D72C  510E               	movf	(_gblCBW+14)& (0+255),w,b
 22586  00D72E  B4D8               	btfsc	status,2,c
 22587  00D730  D04A               	goto	l578
 22588                           
 22589                           ; BSR set to: 1
 22590  00D732  C10C  F0AC         	movff	_gblCBW+12,??_MSDTasks
 22591  00D736  0E3F               	movlw	63
 22592  00D738  0100               	movlb	0	; () banked
 22593  00D73A  17AC               	andwf	??_MSDTasks& (0+255),f,b
 22594  00D73C  A4D8               	btfss	status,2,c
 22595  00D73E  D043               	goto	l578
 22596                           
 22597                           ; BSR set to: 0
 22598                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 22599  00D740  0E55               	movlw	85
 22600  00D742  010D               	movlb	13	; () banked
 22601  00D744  6F80               	movwf	128,b	;volatile
 22602  00D746  0E53               	movlw	83
 22603  00D748  6F81               	movwf	129,b	;volatile
 22604  00D74A  0E42               	movlw	66
 22605  00D74C  6F82               	movwf	130,b	;volatile
 22606  00D74E  0E53               	movlw	83
 22607  00D750  6F83               	movwf	131,b	;volatile
 22608                           
 22609                           ; BSR set to: 13
 22610                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 22611  00D752  C104  FD84         	movff	_gblCBW+4,3460	;volatile
 22612  00D756  C105  FD85         	movff	_gblCBW+5,3461	;volatile
 22613  00D75A  C106  FD86         	movff	_gblCBW+6,3462	;volatile
 22614  00D75E  C107  FD87         	movff	_gblCBW+7,3463	;volatile
 22615                           
 22616                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 22617  00D762  0E00               	movlw	0
 22618  00D764  6F88               	movwf	136,b	;volatile
 22619  00D766  0E00               	movlw	0
 22620  00D768  6F89               	movwf	137,b	;volatile
 22621  00D76A  0E00               	movlw	0
 22622  00D76C  6F8A               	movwf	138,b	;volatile
 22623  00D76E  0E00               	movlw	0
 22624  00D770  6F8B               	movwf	139,b	;volatile
 22625                           
 22626                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 22627  00D772  0E00               	movlw	0
 22628  00D774  6F8C               	movwf	140,b	;volatile
 22629                           
 22630                           ; BSR set to: 13
 22631                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 22632  00D776  0100               	movlb	0	; () banked
 22633  00D778  69D2               	setf	_MSDCommandState& (0+255),b
 22634                           
 22635                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 22636  00D77A  0E00               	movlw	0
 22637  00D77C  0101               	movlb	1	; () banked
 22638  00D77E  6F72               	movwf	_MSDReadState& (0+255),b
 22639                           
 22640                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 22641  00D780  0E00               	movlw	0
 22642  00D782  6F71               	movwf	_MSDWriteState& (0+255),b
 22643                           
 22644                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 22645  00D784  0E00               	movlw	0
 22646  00D786  6F70               	movwf	_MSDRetryAttempt& (0+255),b
 22647                           
 22648                           ; BSR set to: 1
 22649                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 22650  00D788  0E03               	movlw	3
 22651  00D78A  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 22652  00D78C  B4D8               	btfsc	status,2,c
 22653  00D78E  D008               	goto	l579
 22654                           
 22655                           ; BSR set to: 1
 22656                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 22657  00D790  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 22658  00D792  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 22659  00D794  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 22660  00D796  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 22661                           
 22662                           ; BSR set to: 1
 22663                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 22664  00D798  0E00               	movlw	0
 22665  00D79A  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 22666                           
 22667                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 22668  00D79C  0E00               	movlw	0
 22669  00D79E  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 22670  00D7A0                     l579:
 22671                           
 22672                           ; BSR set to: 1
 22673                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 22674                           
 22675                           ; BSR set to: 1
 22676  00D7A0  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 22677  00D7A2  D002               	goto	l580
 22678                           
 22679                           ; BSR set to: 1
 22680                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 22681  00D7A4  0E01               	movlw	1
 22682  00D7A6  D001               	goto	L38
 22683  00D7A8                     l580:
 22684                           
 22685                           ; BSR set to: 1
 22686                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 22687                           
 22688                           ; BSR set to: 1
 22689  00D7A8  0E02               	movlw	2
 22690  00D7AA                     L38:
 22691  00D7AA  6E25               	movwf	_MSD_State,c
 22692                           
 22693                           ; BSR set to: 1
 22694                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 22695                           
 22696                           ; BSR set to: 1
 22697  00D7AC  5108               	movf	(_gblCBW+8)& (0+255),w,b
 22698  00D7AE  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 22699  00D7B0  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 22700  00D7B2  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 22701  00D7B4  B4D8               	btfsc	status,2,c
 22702  00D7B6  D002               	goto	l582
 22703                           
 22704                           ; BSR set to: 1
 22705                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 22706  00D7B8  0E00               	movlw	0
 22707  00D7BA  D001               	goto	L39
 22708  00D7BC                     l582:
 22709                           
 22710                           ; BSR set to: 1
 22711                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 22712                           
 22713                           ; BSR set to: 1
 22714  00D7BC  0E01               	movlw	1
 22715  00D7BE                     L39:
 22716  00D7BE  6E24               	movwf	_MSDHostNoData,c
 22717                           
 22718                           ; BSR set to: 1
 22719                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 22720                           
 22721                           ; BSR set to: 1
 22722  00D7C0  C10F  F0D2         	movff	_gblCBW+15,_MSDCommandState
 22723                           
 22724                           ;usb_device_msd.c: 454: }
 22725  00D7C4  D08F               	goto	l586
 22726  00D7C6                     l578:
 22727                           
 22728                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 22729                           
 22730                           ; BSR set to: 1
 22731  00D7C6  0E01               	movlw	1
 22732  00D7C8  0100               	movlb	0	; () banked
 22733  00D7CA  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 22734  00D7CC  0E02               	movlw	2
 22735  00D7CE  ECFE  F07B         	call	_USBStallEndpoint
 22736                           
 22737                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 22738  00D7D2  0E00               	movlw	0
 22739  00D7D4  0100               	movlb	0	; () banked
 22740  00D7D6  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 22741  00D7D8  0E02               	movlw	2
 22742  00D7DA  ECFE  F07B         	call	_USBStallEndpoint
 22743                           
 22744                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 22745  00D7DE  D082               	goto	l586
 22746  00D7E0                     l577:
 22747  00D7E0                     l19872:
 22748                           
 22749                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 22750  00D7E0  0E01               	movlw	1
 22751  00D7E2  0100               	movlb	0	; () banked
 22752  00D7E4  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 22753  00D7E6  0E02               	movlw	2
 22754  00D7E8  ECFE  F07B         	call	_USBStallEndpoint
 22755                           
 22756                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 22757  00D7EC  0E00               	movlw	0
 22758  00D7EE  0100               	movlb	0	; () banked
 22759  00D7F0  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 22760  00D7F2  0E02               	movlw	2
 22761  00D7F4  ECFE  F07B         	call	_USBStallEndpoint
 22762                           
 22763                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 22764  00D7F8  0E00               	movlw	0
 22765  00D7FA  0101               	movlb	1	; () banked
 22766  00D7FC  6F6D               	movwf	_MSDCBWValid& (0+255),b
 22767                           
 22768                           ; BSR set to: 1
 22769                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 22770                           
 22771                           ; BSR set to: 1
 22772  00D7FE  D072               	goto	l586
 22773  00D800                     
 22774                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 22775                           
 22776                           ; BSR set to: 1
 22777  00D800  EC18  F078         	call	_MSDProcessCommand	;wreg free
 22778  00D804  0AFF               	xorlw	255
 22779  00D806  A4D8               	btfss	status,2,c
 22780  00D808  D06D               	goto	l586
 22781  00D80A  D011               	goto	l591
 22782  00D80C                     
 22783                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 22784  00D80C  EC18  F078         	call	_MSDProcessCommand	;wreg free
 22785  00D810  0AFF               	xorlw	255
 22786  00D812  A4D8               	btfss	status,2,c
 22787  00D814  D067               	goto	l586
 22788                           
 22789                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 22790  00D816  010D               	movlb	13	; () banked
 22791  00D818  518C               	movf	140,w,b	;volatile
 22792  00D81A  A4D8               	btfss	status,2,c
 22793  00D81C  D008               	goto	l591
 22794                           
 22795                           ; BSR set to: 13
 22796  00D81E  5188               	movf	136,w,b	;volatile
 22797  00D820  1189               	iorwf	137,w,b	;volatile
 22798  00D822  118A               	iorwf	138,w,b	;volatile
 22799  00D824  118B               	iorwf	139,w,b	;volatile
 22800  00D826  B4D8               	btfsc	status,2,c
 22801  00D828  D002               	goto	l591
 22802                           
 22803                           ; BSR set to: 13
 22804                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 22805  00D82A  0E02               	movlw	2
 22806  00D82C  6F8C               	movwf	140,b	;volatile
 22807  00D82E                     l591:
 22808                           
 22809                           ; BSR set to: 13
 22810                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 22811  00D82E  0E03               	movlw	3
 22812  00D830  D03D               	goto	L37
 22813  00D832                     
 22814                           ; BSR set to: 13
 22815  00D832  C014  F0AD         	movff	_pBDTEntryIn+4,_MSDTasks$2588
 22816  00D836  C015  F0AE         	movff	_pBDTEntryIn+5,_MSDTasks$2588+1
 22817  00D83A  0100               	movlb	0	; () banked
 22818  00D83C  51AD               	movf	_MSDTasks$2588& (0+255),w,b
 22819  00D83E  11AE               	iorwf	(_MSDTasks$2588+1)& (0+255),w,b
 22820  00D840  B4D8               	btfsc	status,2,c
 22821  00D842  D00A               	goto	l593
 22822                           
 22823                           ; BSR set to: 0
 22824  00D844  C014  F0AF         	movff	_pBDTEntryIn+4,_MSDTasks$2589
 22825  00D848  C015  F0B0         	movff	_pBDTEntryIn+5,_MSDTasks$2589+1
 22826                           
 22827                           ; BSR set to: 0
 22828                           
 22829                           ; BSR set to: 0
 22830                           
 22831                           ; BSR set to: 0
 22832                           
 22833                           ; BSR set to: 0
 22834  00D84C  C0AF  FFD9         	movff	_MSDTasks$2589,fsr2l
 22835  00D850  C0B0  FFDA         	movff	_MSDTasks$2589+1,fsr2h
 22836  00D854  BEDF               	btfsc	indf2,7,c
 22837  00D856  D046               	goto	l586
 22838  00D858                     l593:
 22839                           
 22840                           ; BSR set to: 0
 22841                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 22842                           
 22843                           ; BSR set to: 0
 22844  00D858  0E01               	movlw	1
 22845  00D85A  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 22846  00D85C  0E80               	movlw	128
 22847  00D85E  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 22848  00D860  0E0D               	movlw	13
 22849  00D862  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 22850  00D864  0E0D               	movlw	13
 22851  00D866  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 22852  00D868  0E02               	movlw	2
 22853  00D86A  EC08  F07D         	call	_USBTransferOnePacket
 22854  00D86E  C060  F0CE         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 22855  00D872  C061  F0CF         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 22856                           
 22857                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 22858  00D876  0100               	movlb	0	; () banked
 22859  00D878  51D0               	movf	_USBMSDOutHandle& (0+255),w,b
 22860  00D87A  11D1               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 22861  00D87C  B4D8               	btfsc	status,2,c
 22862  00D87E  D006               	goto	u19540
 22863                           
 22864                           ; BSR set to: 0
 22865  00D880  C0D0  FFD9         	movff	_USBMSDOutHandle,fsr2l
 22866  00D884  C0D1  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 22867  00D888  BEDF               	btfsc	indf2,7,c
 22868  00D88A  D00F               	goto	l602
 22869  00D88C                     u19540:
 22870                           
 22871                           ; BSR set to: 0
 22872                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 22873                           
 22874                           ; BSR set to: 0
 22875  00D88C  0E00               	movlw	0
 22876  00D88E  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 22877  00D890  0E40               	movlw	64
 22878  00D892  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 22879  00D894  0E0D               	movlw	13
 22880  00D896  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 22881  00D898  0E40               	movlw	64
 22882  00D89A  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 22883  00D89C  0E02               	movlw	2
 22884  00D89E  EC08  F07D         	call	_USBTransferOnePacket
 22885  00D8A2  C060  F0D0         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 22886  00D8A6  C061  F0D1         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 22887  00D8AA                     l602:
 22888                           
 22889                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 22890  00D8AA  0E00               	movlw	0
 22891  00D8AC                     L37:
 22892  00D8AC  6E25               	movwf	_MSD_State,c
 22893                           
 22894                           ;usb_device_msd.c: 513: break;
 22895  00D8AE  D01A               	goto	l586
 22896  00D8B0                     
 22897                           ;usb_device_msd.c: 518: MSD_State=0x00;
 22898  00D8B0  0E00               	movlw	0
 22899  00D8B2  6E25               	movwf	_MSD_State,c
 22900                           
 22901                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 22902  00D8B4  0E02               	movlw	2
 22903  00D8B6  010D               	movlb	13	; () banked
 22904  00D8B8  6F8C               	movwf	140,b	;volatile
 22905                           
 22906                           ; BSR set to: 13
 22907                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 22908  00D8BA  0E00               	movlw	0
 22909  00D8BC  0100               	movlb	0	; () banked
 22910  00D8BE  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 22911  00D8C0  0E02               	movlw	2
 22912  00D8C2  ECFE  F07B         	call	_USBStallEndpoint
 22913                           
 22914                           ;usb_device_msd.c: 521: }
 22915  00D8C6  D00E               	goto	l586
 22916  00D8C8                     l570:
 22917  00D8C8  5025               	movf	_MSD_State,w,c
 22918                           
 22919                           ; Switch size 1, requested type "space"
 22920                           ; Number of cases is 4, Range of values is 0 to 3
 22921                           ; switch strategies available:
 22922                           ; Name         Instructions Cycles
 22923                           ; simple_byte           13     7 (average)
 22924                           ;	Chosen strategy is simple_byte
 22925  00D8CA  0A00               	xorlw	0	; case 0
 22926  00D8CC  B4D8               	btfsc	status,2,c
 22927  00D8CE  D6E9               	goto	l571
 22928  00D8D0  0A01               	xorlw	1	; case 1
 22929  00D8D2  B4D8               	btfsc	status,2,c
 22930  00D8D4  D795               	goto	l587
 22931  00D8D6  0A03               	xorlw	3	; case 2
 22932  00D8D8  B4D8               	btfsc	status,2,c
 22933  00D8DA  D798               	goto	l589
 22934  00D8DC  0A01               	xorlw	1	; case 3
 22935  00D8DE  B4D8               	btfsc	status,2,c
 22936  00D8E0  D7A8               	goto	l592
 22937  00D8E2  D7E6               	goto	l605
 22938  00D8E4                     l586:
 22939                           
 22940                           ;usb_device_msd.c: 524: {PIE2bits.USBIE = 1;};
 22941  00D8E4  88A0               	bsf	4000,4,c	;volatile
 22942                           
 22943                           ;usb_device_msd.c: 526: return MSD_State;;	Return value of _MSDTasks is never used
 22944  00D8E6  0012               	return		;funcret
 22945  00D8E8                     __end_of_MSDTasks:
 22946                           	opt stack 0
 22947                           tblptru	equ	0xFF8
 22948                           tblptrh	equ	0xFF7
 22949                           tblptrl	equ	0xFF6
 22950                           tablat	equ	0xFF5
 22951                           prodh	equ	0xFF4
 22952                           prodl	equ	0xFF3
 22953                           intcon	equ	0xFF2
 22954                           postinc0	equ	0xFEE
 22955                           wreg	equ	0xFE8
 22956                           indf1	equ	0xFE7
 22957                           postdec1	equ	0xFE5
 22958                           plusw1	equ	0xFE3
 22959                           fsr1h	equ	0xFE2
 22960                           fsr1l	equ	0xFE1
 22961                           indf2	equ	0xFDF
 22962                           postinc2	equ	0xFDE
 22963                           postdec2	equ	0xFDD
 22964                           plusw2	equ	0xFDB
 22965                           fsr2h	equ	0xFDA
 22966                           fsr2l	equ	0xFD9
 22967                           status	equ	0xFD8
 22968                           
 22969 ;; *************** function _MSDProcessCommand *****************
 22970 ;; Defined at:
 22971 ;;		line 553 in file "usb_device_msd.c"
 22972 ;; Parameters:    Size  Location     Type
 22973 ;;		None
 22974 ;; Auto vars:     Size  Location     Type
 22975 ;;		None
 22976 ;; Return value:  Size  Location     Type
 22977 ;;                  1    wreg      unsigned char 
 22978 ;; Registers used:
 22979 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 22980 ;; Tracked objects:
 22981 ;;		On entry : 0/0
 22982 ;;		On exit  : 0/0
 22983 ;;		Unchanged: 0/0
 22984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22987 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22988 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22989 ;;Total ram usage:        5 bytes
 22990 ;; Hardware stack levels used:    1
 22991 ;; Hardware stack levels required when called:   19
 22992 ;; This function calls:
 22993 ;;		_ExternalFlash_MediaDetect
 22994 ;;		_ExternalFlash_MediaInitialize
 22995 ;;		_MSDProcessCommandMediaAbsent
 22996 ;;		_MSDProcessCommandMediaPresent
 22997 ;; This function is called by:
 22998 ;;		_MSDTasks
 22999 ;; This function uses a non-reentrant model
 23000 ;;
 23001                           
 23002                           	psect	text74
 23003  00F030                     __ptext74:
 23004                           	opt stack 0
 23005  00F030                     _MSDProcessCommand:
 23006                           	opt stack 9
 23007                           
 23008                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 23009                           
 23010                           ;incstack = 0
 23011  00F030  C1AF  F060         	movff	_LUN+21,ExternalFlash_MediaDetect@config
 23012  00F034  C1B0  F061         	movff	_LUN+22,ExternalFlash_MediaDetect@config+1
 23013  00F038  EE21  F0A3         	lfsr	2,_LUN+9
 23014  00F03C  D801               	call	u18568
 23015  00F03E  D00A               	goto	u18569
 23016  00F040                     u18568:
 23017  00F040  0005               	push	
 23018  00F042  6EFA               	movwf	pclath,c
 23019  00F044  50DE               	movf	postinc2,w,c
 23020  00F046  6EFD               	movwf	tosl,c
 23021  00F048  50DE               	movf	postinc2,w,c
 23022  00F04A  6EFE               	movwf	tosh,c
 23023  00F04C  50DE               	movf	postinc2,w,c
 23024  00F04E  6EFF               	movwf	tosu,c
 23025  00F050  50FA               	movf	pclath,w,c
 23026  00F052  0012               	return		;indir
 23027  00F054                     u18569:
 23028  00F054  0900               	iorlw	0
 23029  00F056  B4D8               	btfsc	status,2,c
 23030  00F058  D00C               	goto	u18580
 23031  00F05A  0101               	movlb	1	; () banked
 23032  00F05C  510D               	movf	(_gblCBW+13)& (0+255),w,b
 23033  00F05E  0D01               	mullw	1
 23034  00F060  0E6E               	movlw	low _SoftDetach
 23035  00F062  24F3               	addwf	prodl,w,c
 23036  00F064  6ED9               	movwf	fsr2l,c
 23037  00F066  0E01               	movlw	high _SoftDetach
 23038  00F068  20F4               	addwfc	prodh,w,c
 23039  00F06A  6EDA               	movwf	fsr2h,c
 23040  00F06C  04DE               	decf	postinc2,w,c
 23041  00F06E  A4D8               	btfss	status,2,c
 23042  00F070  D01D               	goto	l608
 23043  00F072                     u18580:
 23044                           
 23045                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 23046                           
 23047                           ; BSR set to: 1
 23048  00F072  C10D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 23049  00F076  0E01               	movlw	1
 23050  00F078  0100               	movlb	0	; () banked
 23051  00F07A  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 23052  00F07C  0E00               	movlw	0
 23053  00F07E  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 23054  00F080  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 23055  00F082  D003               	goto	u18594
 23056  00F084                     u18595:
 23057  00F084  90D8               	bcf	status,0,c
 23058  00F086  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 23059  00F088  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 23060  00F08A                     u18594:
 23061  00F08A  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 23062  00F08C  D7FB               	goto	u18595
 23063  00F08E  0100               	movlb	0	; () banked
 23064  00F090  1DA8               	comf	(??_MSDProcessCommand+1)& (0+255),w,b
 23065  00F092  6FAA               	movwf	(??_MSDProcessCommand+3)& (0+255),b
 23066  00F094  1DA9               	comf	(??_MSDProcessCommand+2)& (0+255),w,b
 23067  00F096  6FAB               	movwf	(??_MSDProcessCommand+4)& (0+255),b
 23068  00F098  51AA               	movf	(??_MSDProcessCommand+3)& (0+255),w,b
 23069  00F09A  0101               	movlb	1	; () banked
 23070  00F09C  1761               	andwf	_gblMediaPresent& (0+255),f,b
 23071  00F09E  0100               	movlb	0	; () banked
 23072  00F0A0  51AB               	movf	(??_MSDProcessCommand+4)& (0+255),w,b
 23073  00F0A2  0101               	movlb	1	; () banked
 23074  00F0A4  1762               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 23075                           
 23076                           ; BSR set to: 1
 23077                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 23078  00F0A6  ECA2  F08C         	call	_MSDProcessCommandMediaAbsent	;wreg free
 23079                           
 23080                           ;usb_device_msd.c: 563: }
 23081  00F0AA  D058               	goto	l615
 23082  00F0AC                     l608:
 23083                           
 23084                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 23085  00F0AC  C10D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 23086  00F0B0  0E01               	movlw	1
 23087  00F0B2  0100               	movlb	0	; () banked
 23088  00F0B4  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 23089  00F0B6  0E00               	movlw	0
 23090  00F0B8  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 23091  00F0BA  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 23092  00F0BC  D003               	goto	u18604
 23093  00F0BE                     u18605:
 23094  00F0BE  90D8               	bcf	status,0,c
 23095  00F0C0  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 23096  00F0C2  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 23097  00F0C4                     u18604:
 23098  00F0C4  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 23099  00F0C6  D7FB               	goto	u18605
 23100  00F0C8  0101               	movlb	1	; () banked
 23101  00F0CA  5161               	movf	_gblMediaPresent& (0+255),w,b
 23102  00F0CC  0100               	movlb	0	; () banked
 23103  00F0CE  17A8               	andwf	(??_MSDProcessCommand+1)& (0+255),f,b
 23104  00F0D0  0101               	movlb	1	; () banked
 23105  00F0D2  5162               	movf	(_gblMediaPresent+1)& (0+255),w,b
 23106  00F0D4  0100               	movlb	0	; () banked
 23107  00F0D6  17A9               	andwf	(??_MSDProcessCommand+2)& (0+255),f,b
 23108  00F0D8  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 23109  00F0DA  11A9               	iorwf	(??_MSDProcessCommand+2)& (0+255),w,b
 23110  00F0DC  A4D8               	btfss	status,2,c
 23111  00F0DE  D03C               	goto	l612
 23112                           
 23113                           ; BSR set to: 0
 23114                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 23115  00F0E0  C1AF  F060         	movff	_LUN+21,ExternalFlash_MediaInitialize@config
 23116  00F0E4  C1B0  F061         	movff	_LUN+22,ExternalFlash_MediaInitialize@config+1
 23117  00F0E8  D801               	call	u18628
 23118  00F0EA  D00B               	goto	u18629
 23119  00F0EC                     u18628:
 23120  00F0EC  0005               	push	
 23121  00F0EE  6EFA               	movwf	pclath,c
 23122  00F0F0  0101               	movlb	1	; () banked
 23123  00F0F2  519A               	movf	_LUN& (0+255),w,b
 23124  00F0F4  6EFD               	movwf	tosl,c
 23125  00F0F6  519B               	movf	(_LUN+1)& (0+255),w,b
 23126  00F0F8  6EFE               	movwf	tosh,c
 23127  00F0FA  519C               	movf	(_LUN+2)& (0+255),w,b
 23128  00F0FC  6EFF               	movwf	tosu,c
 23129  00F0FE  50FA               	movf	pclath,w,c
 23130  00F100  0012               	return		;indir
 23131  00F102                     u18629:
 23132  00F102  0100               	movlb	0	; () banked
 23133  00F104  5160               	movf	?_ExternalFlash_MediaInitialize& (0+255),w,b
 23134  00F106  1161               	iorwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),w,b
 23135  00F108  B4D8               	btfsc	status,2,c
 23136  00F10A  D023               	goto	l613
 23137                           
 23138                           ; BSR set to: 0
 23139                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 23140  00F10C  C10D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 23141  00F110  0E01               	movlw	1
 23142  00F112  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 23143  00F114  0E00               	movlw	0
 23144  00F116  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 23145  00F118  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 23146  00F11A  D003               	goto	u18644
 23147  00F11C                     u18645:
 23148  00F11C  90D8               	bcf	status,0,c
 23149  00F11E  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 23150  00F120  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 23151  00F122                     u18644:
 23152  00F122  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 23153  00F124  D7FB               	goto	u18645
 23154  00F126  0100               	movlb	0	; () banked
 23155  00F128  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 23156  00F12A  0101               	movlb	1	; () banked
 23157  00F12C  1361               	iorwf	_gblMediaPresent& (0+255),f,b
 23158  00F12E  0100               	movlb	0	; () banked
 23159  00F130  51A9               	movf	(??_MSDProcessCommand+2)& (0+255),w,b
 23160  00F132  0101               	movlb	1	; () banked
 23161  00F134  1362               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 23162                           
 23163                           ; BSR set to: 1
 23164                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 23165  00F136  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 23166  00F138  0BF0               	andlw	-16
 23167  00F13A  0906               	iorlw	6
 23168  00F13C  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 23169                           
 23170                           ; BSR set to: 1
 23171                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 23172  00F13E  0E28               	movlw	40
 23173  00F140  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 23174                           
 23175                           ; BSR set to: 1
 23176                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 23177  00F142  0E00               	movlw	0
 23178  00F144  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 23179                           
 23180                           ; BSR set to: 1
 23181                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 23182  00F146  0E01               	movlw	1
 23183  00F148  010D               	movlb	13	; () banked
 23184  00F14A  6F8C               	movwf	140,b	;volatile
 23185                           
 23186                           ; BSR set to: 13
 23187                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 23188  00F14C  EC13  F061         	call	_MSDProcessCommandMediaPresent	;wreg free
 23189                           
 23190                           ;usb_device_msd.c: 589: }
 23191  00F150  D005               	goto	l615
 23192  00F152                     l613:
 23193                           
 23194                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 23195  00F152  ECA2  F08C         	call	_MSDProcessCommandMediaAbsent	;wreg free
 23196                           
 23197                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 23198  00F156  D002               	goto	l615
 23199  00F158                     l612:
 23200                           
 23201                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 23202  00F158  EC13  F061         	call	_MSDProcessCommandMediaPresent	;wreg free
 23203  00F15C                     l615:
 23204                           
 23205                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 23206  00F15C  0100               	movlb	0	; () banked
 23207  00F15E  51D2               	movf	_MSDCommandState& (0+255),w,b
 23208  00F160  0012               	return	
 23209  00F162                     __end_of_MSDProcessCommand:
 23210                           	opt stack 0
 23211                           tosu	equ	0xFFF
 23212                           tosh	equ	0xFFE
 23213                           tosl	equ	0xFFD
 23214                           pclath	equ	0xFFA
 23215                           tblptru	equ	0xFF8
 23216                           tblptrh	equ	0xFF7
 23217                           tblptrl	equ	0xFF6
 23218                           tablat	equ	0xFF5
 23219                           prodh	equ	0xFF4
 23220                           prodl	equ	0xFF3
 23221                           intcon	equ	0xFF2
 23222                           postinc0	equ	0xFEE
 23223                           wreg	equ	0xFE8
 23224                           indf1	equ	0xFE7
 23225                           postdec1	equ	0xFE5
 23226                           plusw1	equ	0xFE3
 23227                           fsr1h	equ	0xFE2
 23228                           fsr1l	equ	0xFE1
 23229                           indf2	equ	0xFDF
 23230                           postinc2	equ	0xFDE
 23231                           postdec2	equ	0xFDD
 23232                           plusw2	equ	0xFDB
 23233                           fsr2h	equ	0xFDA
 23234                           fsr2l	equ	0xFD9
 23235                           status	equ	0xFD8
 23236                           
 23237 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 23238 ;; Defined at:
 23239 ;;		line 635 in file "usb_device_msd.c"
 23240 ;; Parameters:    Size  Location     Type
 23241 ;;		None
 23242 ;; Auto vars:     Size  Location     Type
 23243 ;;		None
 23244 ;; Return value:  Size  Location     Type
 23245 ;;                  1    wreg      void 
 23246 ;; Registers used:
 23247 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 23248 ;; Tracked objects:
 23249 ;;		On entry : 0/0
 23250 ;;		On exit  : 0/0
 23251 ;;		Unchanged: 0/0
 23252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23257 ;;Total ram usage:        0 bytes
 23258 ;; Hardware stack levels used:    1
 23259 ;; Hardware stack levels required when called:   18
 23260 ;; This function calls:
 23261 ;;		_MSDErrorHandler
 23262 ;;		_MSDProcessCommandMediaPresent
 23263 ;;		_ResetSenseData
 23264 ;; This function is called by:
 23265 ;;		_MSDProcessCommand
 23266 ;; This function uses a non-reentrant model
 23267 ;;
 23268                           
 23269                           	psect	text75
 23270  011944                     __ptext75:
 23271                           	opt stack 0
 23272  011944                     _MSDProcessCommandMediaAbsent:
 23273                           	opt stack 9
 23274                           
 23275                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 23276                           
 23277                           ; BSR set to: 0
 23278                           ;incstack = 0
 23279  011944  D01E               	goto	l619
 23280  011946                     
 23281                           ;usb_device_msd.c: 646: ResetSenseData();
 23282  011946  ECD3  F08C         	call	_ResetSenseData	;wreg free
 23283                           
 23284                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 23285  01194A  0101               	movlb	1	; () banked
 23286  01194C  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 23287  01194E  0BF0               	andlw	-16
 23288  011950  0902               	iorlw	2
 23289  011952  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 23290                           
 23291                           ; BSR set to: 1
 23292                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 23293  011954  0E3A               	movlw	58
 23294  011956  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 23295                           
 23296                           ; BSR set to: 1
 23297                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 23298  011958  0E00               	movlw	0
 23299  01195A  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 23300                           
 23301                           ; BSR set to: 1
 23302                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 23303  01195C  EC13  F061         	call	_MSDProcessCommandMediaPresent	;wreg free
 23304                           
 23305                           ;usb_device_msd.c: 655: break;
 23306  011960  0012               	return	
 23307  011962                     
 23308                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 23309  011962  0E01               	movlw	1
 23310  011964  010D               	movlb	13	; () banked
 23311  011966  6F8C               	movwf	140,b	;volatile
 23312                           
 23313                           ; BSR set to: 13
 23314                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 23315  011968  0100               	movlb	0	; () banked
 23316  01196A  69D2               	setf	_MSDCommandState& (0+255),b
 23317                           
 23318                           ;usb_device_msd.c: 665: break;
 23319  01196C  0012               	return	
 23320  01196E                     
 23321                           ; BSR set to: 0
 23322                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 23323                           
 23324                           ; BSR set to: 0
 23325  01196E  EC13  F061         	call	_MSDProcessCommandMediaPresent	;wreg free
 23326                           
 23327                           ;usb_device_msd.c: 671: break;
 23328  011972  0012               	return	
 23329  011974                     
 23330                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 23331  011974  EC13  F061         	call	_MSDProcessCommandMediaPresent	;wreg free
 23332                           
 23333                           ;usb_device_msd.c: 677: break;
 23334  011978  0012               	return	
 23335  01197A                     
 23336                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 23337  01197A  0E7F               	movlw	127
 23338  01197C  ECDC  F079         	call	_MSDErrorHandler
 23339                           
 23340                           ;usb_device_msd.c: 685: }
 23341                           
 23342                           ;usb_device_msd.c: 684: break;
 23343  011980  0012               	return	
 23344  011982                     l619:
 23345  011982  0100               	movlb	0	; () banked
 23346  011984  51D2               	movf	_MSDCommandState& (0+255),w,b
 23347                           
 23348                           ; Switch size 1, requested type "space"
 23349                           ; Number of cases is 5, Range of values is 0 to 253
 23350                           ; switch strategies available:
 23351                           ; Name         Instructions Cycles
 23352                           ; simple_byte           16     9 (average)
 23353                           ;	Chosen strategy is simple_byte
 23354  011986  0A00               	xorlw	0	; case 0
 23355  011988  B4D8               	btfsc	status,2,c
 23356  01198A  D7EB               	goto	l622
 23357  01198C  0A03               	xorlw	3	; case 3
 23358  01198E  B4D8               	btfsc	status,2,c
 23359  011990  D7DA               	goto	l620
 23360  011992  0A11               	xorlw	17	; case 18
 23361  011994  B4D8               	btfsc	status,2,c
 23362  011996  D7EB               	goto	l624
 23363  011998  0A0C               	xorlw	12	; case 30
 23364  01199A  B4D8               	btfsc	status,2,c
 23365  01199C  D7E2               	goto	l622
 23366  01199E  0AE3               	xorlw	227	; case 253
 23367  0119A0  B4D8               	btfsc	status,2,c
 23368  0119A2  D7E8               	goto	l625
 23369  0119A4  D7EA               	goto	l626
 23370  0119A6                     __end_of_MSDProcessCommandMediaAbsent:
 23371                           	opt stack 0
 23372                           tosu	equ	0xFFF
 23373                           tosh	equ	0xFFE
 23374                           tosl	equ	0xFFD
 23375                           pclath	equ	0xFFA
 23376                           tblptru	equ	0xFF8
 23377                           tblptrh	equ	0xFF7
 23378                           tblptrl	equ	0xFF6
 23379                           tablat	equ	0xFF5
 23380                           prodh	equ	0xFF4
 23381                           prodl	equ	0xFF3
 23382                           intcon	equ	0xFF2
 23383                           postinc0	equ	0xFEE
 23384                           wreg	equ	0xFE8
 23385                           indf1	equ	0xFE7
 23386                           postdec1	equ	0xFE5
 23387                           plusw1	equ	0xFE3
 23388                           fsr1h	equ	0xFE2
 23389                           fsr1l	equ	0xFE1
 23390                           indf2	equ	0xFDF
 23391                           postinc2	equ	0xFDE
 23392                           postdec2	equ	0xFDD
 23393                           plusw2	equ	0xFDB
 23394                           fsr2h	equ	0xFDA
 23395                           fsr2l	equ	0xFD9
 23396                           status	equ	0xFD8
 23397                           
 23398 ;; *************** function _MSDProcessCommandMediaPresent *****************
 23399 ;; Defined at:
 23400 ;;		line 712 in file "usb_device_msd.c"
 23401 ;; Parameters:    Size  Location     Type
 23402 ;;		None
 23403 ;; Auto vars:     Size  Location     Type
 23404 ;;  capacity        4   66[BANK0 ] struct .
 23405 ;;  sectorSize      4   62[BANK0 ] struct .
 23406 ;;  i               1   70[BANK0 ] unsigned char 
 23407 ;;  NumBytesInPa    1   61[BANK0 ] unsigned char 
 23408 ;; Return value:  Size  Location     Type
 23409 ;;                  1    wreg      void 
 23410 ;; Registers used:
 23411 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 23412 ;; Tracked objects:
 23413 ;;		On entry : 0/0
 23414 ;;		On exit  : 0/0
 23415 ;;		Unchanged: 0/0
 23416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23418 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23419 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23420 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23421 ;;Total ram usage:       14 bytes
 23422 ;; Hardware stack levels used:    1
 23423 ;; Hardware stack levels required when called:   17
 23424 ;; This function calls:
 23425 ;;		_ExternalFlash_CapacityRead
 23426 ;;		_ExternalFlash_SectorSizeRead
 23427 ;;		_ExternalFlash_WriteProtectStateGet
 23428 ;;		_MSDCheckForErrorCases
 23429 ;;		_MSDComputeDeviceInAndResidue
 23430 ;;		_MSDErrorHandler
 23431 ;;		_MSDReadHandler
 23432 ;;		_MSDWriteHandler
 23433 ;;		_ResetSenseData
 23434 ;;		_USBTransferOnePacket
 23435 ;;		_memcpy
 23436 ;; This function is called by:
 23437 ;;		_MSDProcessCommand
 23438 ;;		_MSDProcessCommandMediaAbsent
 23439 ;; This function uses a non-reentrant model
 23440 ;;
 23441                           
 23442                           	psect	text76
 23443  00C226                     __ptext76:
 23444                           	opt stack 0
 23445  00C226                     _MSDProcessCommandMediaPresent:
 23446                           	opt stack 10
 23447                           
 23448                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 23449                           
 23450                           ;incstack = 0
 23451  00C226  D1BF               	goto	l630
 23452  00C228                     
 23453                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 23454  00C228  EC8F  F06F         	call	_MSDReadHandler	;wreg free
 23455  00C22C  0900               	iorlw	0
 23456  00C22E  A4D8               	btfss	status,2,c
 23457  00C230  0012               	return	
 23458                           
 23459                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 23460  00C232  0100               	movlb	0	; () banked
 23461  00C234  69D2               	setf	_MSDCommandState& (0+255),b
 23462                           
 23463                           ; BSR set to: 0
 23464                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 23465  00C236  0012               	return	
 23466  00C238                     
 23467                           ; BSR set to: 0
 23468                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 23469                           
 23470                           ; BSR set to: 0
 23471  00C238  ECA1  F064         	call	_MSDWriteHandler	;wreg free
 23472  00C23C  0900               	iorlw	0
 23473  00C23E  A4D8               	btfss	status,2,c
 23474  00C240  0012               	return	
 23475                           
 23476                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 23477  00C242  0100               	movlb	0	; () banked
 23478  00C244  69D2               	setf	_MSDCommandState& (0+255),b
 23479                           
 23480                           ; BSR set to: 0
 23481                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 23482  00C246  0012               	return	
 23483  00C248                     
 23484                           ; BSR set to: 0
 23485                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 23486                           
 23487                           ; BSR set to: 0
 23488  00C248  0424               	decf	_MSDHostNoData,w,c
 23489  00C24A  A4D8               	btfss	status,2,c
 23490  00C24C  D002               	goto	l637
 23491                           
 23492                           ; BSR set to: 0
 23493                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 23494  00C24E  69D2               	setf	_MSDCommandState& (0+255),b
 23495                           
 23496                           ;usb_device_msd.c: 751: break;
 23497  00C250  0012               	return	
 23498  00C252                     l637:
 23499                           
 23500                           ; BSR set to: 0
 23501                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 23502  00C252  C112  F01B         	movff	_gblCBW+18,_TransferLength+1
 23503                           
 23504                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 23505  00C256  C113  F01A         	movff	_gblCBW+19,_TransferLength
 23506                           
 23507                           ; BSR set to: 0
 23508                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 23509  00C25A  C01A  F06A         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 23510  00C25E  C01B  F06B         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 23511  00C262  6B6C               	clrf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 23512  00C264  6B6D               	clrf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 23513  00C266  EC8F  F07E         	call	_MSDCheckForErrorCases	;wreg free
 23514  00C26A  0900               	iorlw	0
 23515  00C26C  A4D8               	btfss	status,2,c
 23516  00C26E  0012               	return	
 23517                           
 23518                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 23519                           
 23520                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 23521  00C270  0E00               	movlw	0
 23522  00C272  0100               	movlb	0	; () banked
 23523  00C274  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 23524  00C276  0E24               	movlw	36
 23525  00C278  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 23526  00C27A  ECAB  F085         	call	_MSDComputeDeviceInAndResidue	;wreg free
 23527                           
 23528                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 23529  00C27E  0E00               	movlw	0
 23530  00C280  0100               	movlb	0	; () banked
 23531  00C282  6F60               	movwf	memcpy@d1& (0+255),b
 23532  00C284  0E06               	movlw	6
 23533  00C286  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 23534  00C288  0E60               	movlw	low _inq_resp
 23535  00C28A  6F62               	movwf	memcpy@s1& (0+255),b
 23536  00C28C  0EA1               	movlw	high _inq_resp
 23537  00C28E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 23538  00C290  0E00               	movlw	0
 23539  00C292  6F65               	movwf	(memcpy@n+1)& (0+255),b
 23540  00C294  0E24               	movlw	36
 23541  00C296  6F64               	movwf	memcpy@n& (0+255),b
 23542  00C298  EC35  F08D         	call	_memcpy	;wreg free
 23543                           
 23544                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 23545  00C29C  0EFD               	movlw	253
 23546  00C29E  0100               	movlb	0	; () banked
 23547  00C2A0  6FD2               	movwf	_MSDCommandState& (0+255),b
 23548                           
 23549                           ;usb_device_msd.c: 773: break;
 23550  00C2A2  0012               	return	
 23551  00C2A4                     
 23552                           ; BSR set to: 0
 23553                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 23554                           
 23555                           ; BSR set to: 0
 23556  00C2A4  C1AF  F060         	movff	_LUN+21,ExternalFlash_CapacityRead@config
 23557  00C2A8  C1B0  F061         	movff	_LUN+22,ExternalFlash_CapacityRead@config+1
 23558  00C2AC  EE21  F09D         	lfsr	2,_LUN+3
 23559  00C2B0  D801               	call	u17368
 23560  00C2B2  D00A               	goto	u17369
 23561  00C2B4                     u17368:
 23562  00C2B4  0005               	push	
 23563  00C2B6  6EFA               	movwf	pclath,c
 23564  00C2B8  50DE               	movf	postinc2,w,c
 23565  00C2BA  6EFD               	movwf	tosl,c
 23566  00C2BC  50DE               	movf	postinc2,w,c
 23567  00C2BE  6EFE               	movwf	tosh,c
 23568  00C2C0  50DE               	movf	postinc2,w,c
 23569  00C2C2  6EFF               	movwf	tosu,c
 23570  00C2C4  50FA               	movf	pclath,w,c
 23571  00C2C6  0012               	return		;indir
 23572  00C2C8                     u17369:
 23573  00C2C8  C060  F0A2         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 23574  00C2CC  C061  F0A3         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 23575  00C2D0  C062  F0A4         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 23576  00C2D4  C063  F0A5         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 23577                           
 23578                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 23579  00C2D8  C1AF  F060         	movff	_LUN+21,ExternalFlash_SectorSizeRead@config
 23580  00C2DC  C1B0  F061         	movff	_LUN+22,ExternalFlash_SectorSizeRead@config+1
 23581  00C2E0  EE21  F0A0         	lfsr	2,_LUN+6
 23582  00C2E4  D801               	call	u17378
 23583  00C2E6  D00A               	goto	u17379
 23584  00C2E8                     u17378:
 23585  00C2E8  0005               	push	
 23586  00C2EA  6EFA               	movwf	pclath,c
 23587  00C2EC  50DE               	movf	postinc2,w,c
 23588  00C2EE  6EFD               	movwf	tosl,c
 23589  00C2F0  50DE               	movf	postinc2,w,c
 23590  00C2F2  6EFE               	movwf	tosh,c
 23591  00C2F4  50DE               	movf	postinc2,w,c
 23592  00C2F6  6EFF               	movwf	tosu,c
 23593  00C2F8  50FA               	movf	pclath,w,c
 23594  00C2FA  0012               	return		;indir
 23595  00C2FC                     u17379:
 23596  00C2FC  0100               	movlb	0	; () banked
 23597  00C2FE  C060  F09E         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 23598  00C302  C061  F09F         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 23599  00C306  6BA0               	clrf	(MSDProcessCommandMediaPresent@sectorSize+2)& (0+255),b
 23600  00C308  6BA1               	clrf	(MSDProcessCommandMediaPresent@sectorSize+3)& (0+255),b
 23601                           
 23602                           ; BSR set to: 0
 23603                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 23604  00C30A  EE26 F000          	lfsr	2,1536
 23605  00C30E  C0A5  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 23606                           
 23607                           ; BSR set to: 0
 23608                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 23609  00C312  EE26 F001          	lfsr	2,1537	;volatile
 23610  00C316  C0A4  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 23611                           
 23612                           ; BSR set to: 0
 23613                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 23614  00C31A  EE26 F002          	lfsr	2,1538	;volatile
 23615  00C31E  C0A3  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 23616                           
 23617                           ; BSR set to: 0
 23618                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 23619  00C322  EE26 F003          	lfsr	2,1539	;volatile
 23620  00C326  C0A2  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 23621                           
 23622                           ; BSR set to: 0
 23623                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 23624  00C32A  EE26 F004          	lfsr	2,1540	;volatile
 23625  00C32E  C0A1  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 23626                           
 23627                           ; BSR set to: 0
 23628                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 23629  00C332  EE26 F005          	lfsr	2,1541	;volatile
 23630  00C336  C0A0  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 23631                           
 23632                           ; BSR set to: 0
 23633                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 23634  00C33A  EE26 F006          	lfsr	2,1542	;volatile
 23635  00C33E  C09F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 23636                           
 23637                           ; BSR set to: 0
 23638                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 23639  00C342  EE26 F007          	lfsr	2,1543	;volatile
 23640  00C346  C09E  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 23641                           
 23642                           ; BSR set to: 0
 23643                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 23644  00C34A  0E00               	movlw	0
 23645  00C34C  6E1B               	movwf	_TransferLength+1,c
 23646  00C34E  0E08               	movlw	8
 23647  00C350  6E1A               	movwf	_TransferLength,c
 23648                           
 23649                           ; BSR set to: 0
 23650                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 23651  00C352  0E00               	movlw	0
 23652  00C354  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 23653  00C356  0E08               	movlw	8
 23654  00C358  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 23655  00C35A  ECAB  F085         	call	_MSDComputeDeviceInAndResidue	;wreg free
 23656                           
 23657                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 23658  00C35E  0EFD               	movlw	253
 23659  00C360  0100               	movlb	0	; () banked
 23660  00C362  6FD2               	movwf	_MSDCommandState& (0+255),b
 23661                           
 23662                           ;usb_device_msd.c: 802: break;
 23663  00C364  0012               	return	
 23664  00C366                     
 23665                           ; BSR set to: 0
 23666                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 23667                           
 23668                           ; BSR set to: 0
 23669  00C366  0424               	decf	_MSDHostNoData,w,c
 23670  00C368  A4D8               	btfss	status,2,c
 23671  00C36A  D002               	goto	l641
 23672                           
 23673                           ; BSR set to: 0
 23674                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 23675  00C36C  69D2               	setf	_MSDCommandState& (0+255),b
 23676                           
 23677                           ;usb_device_msd.c: 814: break;
 23678  00C36E  0012               	return	
 23679  00C370                     l641:
 23680                           
 23681                           ; BSR set to: 0
 23682                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 23683                           
 23684                           ; BSR set to: 0
 23685  00C370  0E00               	movlw	0
 23686  00C372  6E1B               	movwf	_TransferLength+1,c
 23687  00C374  0E12               	movlw	18
 23688  00C376  6E1A               	movwf	_TransferLength,c
 23689                           
 23690                           ; BSR set to: 0
 23691                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 23692  00C378  0E00               	movlw	0
 23693  00C37A  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 23694  00C37C  0E12               	movlw	18
 23695  00C37E  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 23696  00C380  ECAB  F085         	call	_MSDComputeDeviceInAndResidue	;wreg free
 23697                           
 23698                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 23699  00C384  0E00               	movlw	0
 23700  00C386  0100               	movlb	0	; () banked
 23701  00C388  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 23702  00C38A                     l17814:
 23703                           
 23704                           ; BSR set to: 0
 23705  00C38A  0E11               	movlw	17
 23706  00C38C  65A6               	cpfsgt	MSDProcessCommandMediaPresent@i& (0+255),b
 23707  00C38E  D001               	goto	l642
 23708  00C390  D014               	goto	u17400
 23709  00C392                     l642:
 23710                           
 23711                           ; BSR set to: 0
 23712                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 23713                           
 23714                           ; BSR set to: 0
 23715  00C392  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 23716  00C394  0D01               	mullw	1
 23717  00C396  0E1F               	movlw	low _gblSenseData
 23718  00C398  24F3               	addwf	prodl,w,c
 23719  00C39A  6ED9               	movwf	fsr2l,c
 23720  00C39C  0E01               	movlw	high _gblSenseData
 23721  00C39E  20F4               	addwfc	prodh,w,c
 23722  00C3A0  6EDA               	movwf	fsr2h,c
 23723  00C3A2  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 23724  00C3A4  0D01               	mullw	1
 23725  00C3A6  0E00               	movlw	0
 23726  00C3A8  24F3               	addwf	prodl,w,c
 23727  00C3AA  6EE1               	movwf	fsr1l,c
 23728  00C3AC  0E06               	movlw	6
 23729  00C3AE  20F4               	addwfc	prodh,w,c
 23730  00C3B0  6EE2               	movwf	fsr1h,c
 23731  00C3B2  CFDF FFE7          	movff	indf2,indf1
 23732                           
 23733                           ; BSR set to: 0
 23734  00C3B6  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 23735  00C3B8  D7E8               	goto	l17814
 23736  00C3BA                     u17400:
 23737                           
 23738                           ; BSR set to: 0
 23739                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 23740                           
 23741                           ; BSR set to: 0
 23742  00C3BA  0EFD               	movlw	253
 23743  00C3BC  6FD2               	movwf	_MSDCommandState& (0+255),b
 23744                           
 23745                           ;usb_device_msd.c: 827: break;
 23746  00C3BE  0012               	return	
 23747  00C3C0                     l644:
 23748                           
 23749                           ; BSR set to: 0
 23750                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 23751  00C3C0  0E03               	movlw	3
 23752  00C3C2  CFE8 F600          	movff	wreg,1536
 23753                           
 23754                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 23755  00C3C6  0E00               	movlw	0
 23756  00C3C8  CFE8 F601          	movff	wreg,1537	;volatile
 23757                           
 23758                           ; BSR set to: 0
 23759                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 23760  00C3CC  C1AF  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 23761  00C3D0  C1B0  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 23762  00C3D4  EE21  F0A9         	lfsr	2,_LUN+15
 23763  00C3D8  D801               	call	u17418
 23764  00C3DA  D00A               	goto	u17419
 23765  00C3DC                     u17418:
 23766  00C3DC  0005               	push	
 23767  00C3DE  6EFA               	movwf	pclath,c
 23768  00C3E0  50DE               	movf	postinc2,w,c
 23769  00C3E2  6EFD               	movwf	tosl,c
 23770  00C3E4  50DE               	movf	postinc2,w,c
 23771  00C3E6  6EFE               	movwf	tosh,c
 23772  00C3E8  50DE               	movf	postinc2,w,c
 23773  00C3EA  6EFF               	movwf	tosu,c
 23774  00C3EC  50FA               	movf	pclath,w,c
 23775  00C3EE  0012               	return		;indir
 23776  00C3F0                     u17419:
 23777  00C3F0  0900               	iorlw	0
 23778  00C3F2  A4D8               	btfss	status,2,c
 23779  00C3F4  D005               	goto	l646
 23780  00C3F6  0E00               	movlw	0
 23781  00C3F8  0100               	movlb	0	; () banked
 23782  00C3FA  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2606+1)& (0+255),b
 23783  00C3FC  0E00               	movlw	0
 23784  00C3FE  D004               	goto	L40
 23785  00C400                     l646:
 23786                           
 23787                           ; BSR set to: 0
 23788  00C400  0E00               	movlw	0
 23789  00C402  0100               	movlb	0	; () banked
 23790  00C404  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2606+1)& (0+255),b
 23791  00C406  0E80               	movlw	128
 23792  00C408                     L40:
 23793  00C408  6F9B               	movwf	_MSDProcessCommandMediaPresent$2606& (0+255),b
 23794                           
 23795                           ; BSR set to: 0
 23796                           
 23797                           ; BSR set to: 0
 23798  00C40A  EE26 F002          	lfsr	2,1538	;volatile
 23799  00C40E  C09B  FFDF         	movff	_MSDProcessCommandMediaPresent$2606,indf2
 23800                           
 23801                           ; BSR set to: 0
 23802                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 23803  00C412  0E00               	movlw	0
 23804  00C414  CFE8 F603          	movff	wreg,1539	;volatile
 23805                           
 23806                           ; BSR set to: 0
 23807                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 23808  00C418  0E00               	movlw	0
 23809  00C41A  6E1B               	movwf	_TransferLength+1,c
 23810  00C41C  0E04               	movlw	4
 23811  00C41E  6E1A               	movwf	_TransferLength,c
 23812                           
 23813                           ; BSR set to: 0
 23814                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 23815  00C420  0E00               	movlw	0
 23816  00C422  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 23817  00C424  0E04               	movlw	4
 23818  00C426  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 23819  00C428  ECAB  F085         	call	_MSDComputeDeviceInAndResidue	;wreg free
 23820                           
 23821                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 23822  00C42C  0EFD               	movlw	253
 23823  00C42E  0100               	movlb	0	; () banked
 23824  00C430  6FD2               	movwf	_MSDCommandState& (0+255),b
 23825                           
 23826                           ;usb_device_msd.c: 839: break;
 23827  00C432  0012               	return	
 23828  00C434                     
 23829                           ; BSR set to: 0
 23830                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 23831                           
 23832                           ; BSR set to: 0
 23833  00C434  0101               	movlb	1	; () banked
 23834  00C436  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 23835  00C438  0BF0               	andlw	-16
 23836  00C43A  0905               	iorlw	5
 23837  00C43C  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 23838                           
 23839                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 23840  00C43E  0E20               	movlw	32
 23841  00C440  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 23842                           
 23843                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 23844  00C442  0E00               	movlw	0
 23845  00C444  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 23846                           
 23847                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 23848  00C446  0E01               	movlw	1
 23849  00C448  010D               	movlb	13	; () banked
 23850  00C44A  6F8C               	movwf	140,b	;volatile
 23851                           
 23852                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 23853  00C44C  0E00               	movlw	0
 23854  00C44E  6F88               	movwf	136,b	;volatile
 23855  00C450  0E00               	movlw	0
 23856  00C452  6F89               	movwf	137,b	;volatile
 23857  00C454  0E00               	movlw	0
 23858  00C456  6F8A               	movwf	138,b	;volatile
 23859  00C458  0E00               	movlw	0
 23860  00C45A  6F8B               	movwf	139,b	;volatile
 23861                           
 23862                           ; BSR set to: 13
 23863                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 23864  00C45C  0100               	movlb	0	; () banked
 23865  00C45E  69D2               	setf	_MSDCommandState& (0+255),b
 23866                           
 23867                           ;usb_device_msd.c: 848: break;
 23868  00C460  0012               	return	
 23869  00C462                     
 23870                           ; BSR set to: 0
 23871                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 23872                           
 23873                           ; BSR set to: 0
 23874  00C462  0E00               	movlw	0
 23875  00C464  6F6A               	movwf	MSDCheckForErrorCases@DeviceBytes& (0+255),b
 23876  00C466  0E00               	movlw	0
 23877  00C468  6F6B               	movwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),b
 23878  00C46A  0E00               	movlw	0
 23879  00C46C  6F6C               	movwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 23880  00C46E  0E00               	movlw	0
 23881  00C470  6F6D               	movwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 23882  00C472  EC8F  F07E         	call	_MSDCheckForErrorCases	;wreg free
 23883  00C476  0900               	iorlw	0
 23884  00C478  A4D8               	btfss	status,2,c
 23885  00C47A  0012               	return	
 23886                           
 23887                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 23888                           
 23889                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 23890  00C47C  0101               	movlb	1	; () banked
 23891  00C47E  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 23892  00C480  0B0F               	andlw	15
 23893  00C482  0A06               	xorlw	6
 23894  00C484  A4D8               	btfss	status,2,c
 23895  00C486  D007               	goto	l652
 23896                           
 23897                           ; BSR set to: 1
 23898  00C488  010D               	movlb	13	; () banked
 23899  00C48A  058C               	decf	140,w,b	;volatile
 23900  00C48C  A4D8               	btfss	status,2,c
 23901  00C48E  D003               	goto	l652
 23902                           
 23903                           ; BSR set to: 13
 23904                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 23905  00C490  0100               	movlb	0	; () banked
 23906  00C492  69D2               	setf	_MSDCommandState& (0+255),b
 23907                           
 23908                           ;usb_device_msd.c: 870: }
 23909  00C494  0012               	return	
 23910  00C496                     l652:
 23911                           
 23912                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 23913                           
 23914                           ; BSR set to: 0
 23915  00C496  ECD3  F08C         	call	_ResetSenseData	;wreg free
 23916                           
 23917                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 23918  00C49A  0E00               	movlw	0
 23919  00C49C  010D               	movlb	13	; () banked
 23920  00C49E  6F88               	movwf	136,b	;volatile
 23921  00C4A0  0E00               	movlw	0
 23922  00C4A2  6F89               	movwf	137,b	;volatile
 23923  00C4A4  0E00               	movlw	0
 23924  00C4A6  6F8A               	movwf	138,b	;volatile
 23925  00C4A8  0E00               	movlw	0
 23926  00C4AA  6F8B               	movwf	139,b	;volatile
 23927                           
 23928                           ; BSR set to: 13
 23929                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 23930  00C4AC  0100               	movlb	0	; () banked
 23931  00C4AE  69D2               	setf	_MSDCommandState& (0+255),b
 23932                           
 23933                           ; BSR set to: 0
 23934                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 23935  00C4B0  0012               	return	
 23936  00C4B2                     
 23937                           ; BSR set to: 0
 23938                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 23939                           
 23940                           ; BSR set to: 0
 23941                           
 23942                           ; BSR set to: 0
 23943  00C4B2  0E00               	movlw	0
 23944  00C4B4  010D               	movlb	13	; () banked
 23945  00C4B6  6F88               	movwf	136,b	;volatile
 23946  00C4B8  0E00               	movlw	0
 23947  00C4BA  6F89               	movwf	137,b	;volatile
 23948  00C4BC  0E00               	movlw	0
 23949  00C4BE  6F8A               	movwf	138,b	;volatile
 23950  00C4C0  0E00               	movlw	0
 23951  00C4C2  6F8B               	movwf	139,b	;volatile
 23952                           
 23953                           ; BSR set to: 13
 23954                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 23955  00C4C4  0100               	movlb	0	; () banked
 23956  00C4C6  69D2               	setf	_MSDCommandState& (0+255),b
 23957                           
 23958                           ;usb_device_msd.c: 885: break;
 23959  00C4C8  0012               	return	
 23960  00C4CA                     
 23961                           ; BSR set to: 0
 23962                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 23963                           
 23964                           ; BSR set to: 0
 23965  00C4CA  51CE               	movf	_USBMSDInHandle& (0+255),w,b
 23966  00C4CC  11CF               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 23967  00C4CE  B4D8               	btfsc	status,2,c
 23968  00C4D0  D006               	goto	u17470
 23969                           
 23970                           ; BSR set to: 0
 23971  00C4D2  C0CE  FFD9         	movff	_USBMSDInHandle,fsr2l
 23972  00C4D6  C0CF  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 23973  00C4DA  BEDF               	btfsc	indf2,7,c
 23974  00C4DC  0012               	return	
 23975  00C4DE                     u17470:
 23976                           
 23977                           ; BSR set to: 0
 23978                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 23979                           
 23980                           ; BSR set to: 0
 23981  00C4DE  0101               	movlb	1	; () banked
 23982  00C4E0  510B               	movf	(_gblCBW+11)& (0+255),w,b
 23983  00C4E2  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 23984  00C4E4  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 23985  00C4E6  E104               	bnz	u17480
 23986  00C4E8  0E40               	movlw	64
 23987  00C4EA  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 23988  00C4EC  A0D8               	btfss	status,0,c
 23989  00C4EE  D00B               	goto	l660
 23990  00C4F0                     u17480:
 23991                           
 23992                           ; BSR set to: 1
 23993                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 23994  00C4F0  0E40               	movlw	64
 23995  00C4F2  0100               	movlb	0	; () banked
 23996  00C4F4  6F9D               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),b
 23997                           
 23998                           ; BSR set to: 0
 23999                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 24000  00C4F6  0E40               	movlw	64
 24001  00C4F8  0101               	movlb	1	; () banked
 24002  00C4FA  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 24003  00C4FC  0E00               	movlw	0
 24004  00C4FE  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 24005  00C500  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 24006  00C502  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 24007                           
 24008                           ;usb_device_msd.c: 900: }
 24009  00C504  D00A               	goto	l661
 24010  00C506                     l660:
 24011                           
 24012                           ; BSR set to: 1
 24013                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 24014  00C506  C108  F09D         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 24015                           
 24016                           ; BSR set to: 1
 24017                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 24018  00C50A  0E00               	movlw	0
 24019  00C50C  6F08               	movwf	(_gblCBW+8)& (0+255),b
 24020  00C50E  0E00               	movlw	0
 24021  00C510  6F09               	movwf	(_gblCBW+9)& (0+255),b
 24022  00C512  0E00               	movlw	0
 24023  00C514  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 24024  00C516  0E00               	movlw	0
 24025  00C518  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 24026  00C51A                     l661:
 24027                           
 24028                           ; BSR set to: 1
 24029                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 24030                           
 24031                           ; BSR set to: 1
 24032  00C51A  0100               	movlb	0	; () banked
 24033  00C51C  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 24034  00C51E  6F99               	movwf	??_MSDProcessCommandMediaPresent& (0+255),b
 24035  00C520  6B9A               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),b
 24036  00C522  5199               	movf	??_MSDProcessCommandMediaPresent& (0+255),w,b
 24037  00C524  5C1A               	subwf	_TransferLength,w,c
 24038  00C526  519A               	movf	(??_MSDProcessCommandMediaPresent+1)& (0+255),w,b
 24039  00C528  581B               	subwfb	_TransferLength+1,w,c
 24040  00C52A  A0D8               	btfss	status,0,c
 24041  00C52C  D005               	goto	l662
 24042                           
 24043                           ; BSR set to: 0
 24044                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 24045  00C52E  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 24046  00C530  5E1A               	subwf	_TransferLength,f,c
 24047  00C532  0E00               	movlw	0
 24048  00C534  5A1B               	subwfb	_TransferLength+1,f,c
 24049                           
 24050                           ;usb_device_msd.c: 918: }
 24051  00C536  D01A               	goto	u17510
 24052  00C538                     l662:
 24053                           
 24054                           ; BSR set to: 0
 24055                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 24056                           
 24057                           ; BSR set to: 0
 24058  00C538  0E00               	movlw	0
 24059  00C53A  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 24060  00C53C  D013               	goto	l664
 24061  00C53E                     
 24062                           ; BSR set to: 0
 24063                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 24064                           
 24065                           ; BSR set to: 0
 24066  00C53E  501A               	movf	_TransferLength,w,c
 24067  00C540  101B               	iorwf	_TransferLength+1,w,c
 24068  00C542  B4D8               	btfsc	status,2,c
 24069  00C544  D004               	goto	l666
 24070                           
 24071                           ; BSR set to: 0
 24072                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 24073  00C546  061A               	decf	_TransferLength,f,c
 24074  00C548  A0D8               	btfss	status,0,c
 24075  00C54A  061B               	decf	_TransferLength+1,f,c
 24076                           
 24077                           ;usb_device_msd.c: 932: }
 24078  00C54C  D00A               	goto	l667
 24079  00C54E                     l666:
 24080                           
 24081                           ; BSR set to: 0
 24082                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 24083                           
 24084                           ; BSR set to: 0
 24085  00C54E  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 24086  00C550  0D01               	mullw	1
 24087  00C552  0E00               	movlw	0
 24088  00C554  24F3               	addwf	prodl,w,c
 24089  00C556  6ED9               	movwf	fsr2l,c
 24090  00C558  0E06               	movlw	6
 24091  00C55A  20F4               	addwfc	prodh,w,c
 24092  00C55C  6EDA               	movwf	fsr2h,c
 24093  00C55E  0E00               	movlw	0
 24094  00C560  6EDF               	movwf	indf2,c
 24095  00C562                     l667:
 24096                           
 24097                           ; BSR set to: 0
 24098                           
 24099                           ; BSR set to: 0
 24100  00C562  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 24101  00C564                     l664:
 24102                           
 24103                           ; BSR set to: 0
 24104                           
 24105                           ; BSR set to: 0
 24106  00C564  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 24107  00C566  5DA6               	subwf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 24108  00C568  A0D8               	btfss	status,0,c
 24109  00C56A  D7E9               	goto	l665
 24110  00C56C                     u17510:
 24111                           
 24112                           ; BSR set to: 0
 24113                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 24114                           
 24115                           ; BSR set to: 0
 24116                           
 24117                           ; BSR set to: 0
 24118  00C56C  0E01               	movlw	1
 24119  00C56E  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 24120  00C570  0E00               	movlw	0
 24121  00C572  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 24122  00C574  0E06               	movlw	6
 24123  00C576  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 24124  00C578  C09D  F063         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 24125  00C57C  0E02               	movlw	2
 24126  00C57E  EC08  F07D         	call	_USBTransferOnePacket
 24127  00C582  C060  F0CE         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 24128  00C586  C061  F0CF         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 24129                           
 24130                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 24131  00C58A  0101               	movlb	1	; () banked
 24132  00C58C  5108               	movf	(_gblCBW+8)& (0+255),w,b
 24133  00C58E  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 24134  00C590  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 24135  00C592  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 24136  00C594  A4D8               	btfss	status,2,c
 24137  00C596  0012               	return	
 24138                           
 24139                           ; BSR set to: 1
 24140                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 24141  00C598  0100               	movlb	0	; () banked
 24142  00C59A  69D2               	setf	_MSDCommandState& (0+255),b
 24143                           
 24144                           ; BSR set to: 0
 24145                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 24146                           
 24147                           ; BSR set to: 0
 24148                           
 24149                           ;usb_device_msd.c: 949: break;
 24150  00C59C  0012               	return	
 24151  00C59E                     
 24152                           ; BSR set to: 0
 24153                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 24154                           
 24155                           ; BSR set to: 0
 24156                           
 24157                           ;usb_device_msd.c: 954: default:
 24158                           
 24159                           ; BSR set to: 0
 24160  00C59E  0E7F               	movlw	127
 24161  00C5A0  ECDC  F079         	call	_MSDErrorHandler
 24162                           
 24163                           ;usb_device_msd.c: 960: }
 24164                           
 24165                           ;usb_device_msd.c: 959: break;
 24166  00C5A4  0012               	return	
 24167  00C5A6                     l630:
 24168  00C5A6  0100               	movlb	0	; () banked
 24169  00C5A8  51D2               	movf	_MSDCommandState& (0+255),w,b
 24170                           
 24171                           ; Switch size 1, requested type "space"
 24172                           ; Number of cases is 12, Range of values is 0 to 254
 24173                           ; switch strategies available:
 24174                           ; Name         Instructions Cycles
 24175                           ; simple_byte           37    19 (average)
 24176                           ;	Chosen strategy is simple_byte
 24177  00C5AA  0A00               	xorlw	0	; case 0
 24178  00C5AC  B4D8               	btfsc	status,2,c
 24179  00C5AE  D759               	goto	l650
 24180  00C5B0  0A03               	xorlw	3	; case 3
 24181  00C5B2  B4D8               	btfsc	status,2,c
 24182  00C5B4  D6D8               	goto	l640
 24183  00C5B6  0A11               	xorlw	17	; case 18
 24184  00C5B8  B4D8               	btfsc	status,2,c
 24185  00C5BA  D646               	goto	l636
 24186  00C5BC  0A08               	xorlw	8	; case 26
 24187  00C5BE  B4D8               	btfsc	status,2,c
 24188  00C5C0  D6FF               	goto	l644
 24189  00C5C2  0A01               	xorlw	1	; case 27
 24190  00C5C4  B4D8               	btfsc	status,2,c
 24191  00C5C6  D775               	goto	l654
 24192  00C5C8  0A05               	xorlw	5	; case 30
 24193  00C5CA  B4D8               	btfsc	status,2,c
 24194  00C5CC  D733               	goto	l649
 24195  00C5CE  0A3B               	xorlw	59	; case 37
 24196  00C5D0  B4D8               	btfsc	status,2,c
 24197  00C5D2  D668               	goto	l639
 24198  00C5D4  0A0D               	xorlw	13	; case 40
 24199  00C5D6  B4D8               	btfsc	status,2,c
 24200  00C5D8  D627               	goto	l631
 24201  00C5DA  0A02               	xorlw	2	; case 42
 24202  00C5DC  B4D8               	btfsc	status,2,c
 24203  00C5DE  D62C               	goto	l634
 24204  00C5E0  0A05               	xorlw	5	; case 47
 24205  00C5E2  B4D8               	btfsc	status,2,c
 24206  00C5E4  D766               	goto	l654
 24207  00C5E6  0AD2               	xorlw	210	; case 253
 24208  00C5E8  B4D8               	btfsc	status,2,c
 24209  00C5EA  D76F               	goto	l656
 24210  00C5EC  0A03               	xorlw	3	; case 254
 24211  00C5EE  D7D7               	goto	l670
 24212  00C5F0                     __end_of_MSDProcessCommandMediaPresent:
 24213                           	opt stack 0
 24214                           tosu	equ	0xFFF
 24215                           tosh	equ	0xFFE
 24216                           tosl	equ	0xFFD
 24217                           pclath	equ	0xFFA
 24218                           tblptru	equ	0xFF8
 24219                           tblptrh	equ	0xFF7
 24220                           tblptrl	equ	0xFF6
 24221                           tablat	equ	0xFF5
 24222                           prodh	equ	0xFF4
 24223                           prodl	equ	0xFF3
 24224                           intcon	equ	0xFF2
 24225                           postinc0	equ	0xFEE
 24226                           wreg	equ	0xFE8
 24227                           indf1	equ	0xFE7
 24228                           postdec1	equ	0xFE5
 24229                           plusw1	equ	0xFE3
 24230                           fsr1h	equ	0xFE2
 24231                           fsr1l	equ	0xFE1
 24232                           indf2	equ	0xFDF
 24233                           postinc2	equ	0xFDE
 24234                           postdec2	equ	0xFDD
 24235                           plusw2	equ	0xFDB
 24236                           fsr2h	equ	0xFDA
 24237                           fsr2l	equ	0xFD9
 24238                           status	equ	0xFD8
 24239                           
 24240 ;; *************** function _MSDWriteHandler *****************
 24241 ;; Defined at:
 24242 ;;		line 1188 in file "usb_device_msd.c"
 24243 ;; Parameters:    Size  Location     Type
 24244 ;;		None
 24245 ;; Auto vars:     Size  Location     Type
 24246 ;;		None
 24247 ;; Return value:  Size  Location     Type
 24248 ;;                  1    wreg      unsigned char 
 24249 ;; Registers used:
 24250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 24251 ;; Tracked objects:
 24252 ;;		On entry : 0/0
 24253 ;;		On exit  : 0/0
 24254 ;;		Unchanged: 0/0
 24255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24258 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24259 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24260 ;;Total ram usage:        5 bytes
 24261 ;; Hardware stack levels used:    1
 24262 ;; Hardware stack levels required when called:   13
 24263 ;; This function calls:
 24264 ;;		_ExternalFlash_SectorWrite
 24265 ;;		_ExternalFlash_WriteProtectStateGet
 24266 ;;		_MSDCheckForErrorCases
 24267 ;;		_USBStallEndpoint
 24268 ;;		_USBTransferOnePacket
 24269 ;; This function is called by:
 24270 ;;		_MSDProcessCommandMediaPresent
 24271 ;; This function uses a non-reentrant model
 24272 ;;
 24273                           
 24274                           	psect	text77
 24275  00C942                     __ptext77:
 24276                           	opt stack 0
 24277  00C942                     _MSDWriteHandler:
 24278                           	opt stack 13
 24279                           
 24280                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 24281                           
 24282                           ;incstack = 0
 24283  00C942  D15A               	goto	l700
 24284  00C944                     l701:
 24285                           
 24286                           ; BSR set to: 1
 24287                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 24288  00C944  C111  F14A         	movff	_gblCBW+17,_LBA+3
 24289                           
 24290                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 24291  00C948  C112  F149         	movff	_gblCBW+18,_LBA+2
 24292                           
 24293                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 24294  00C94C  C113  F148         	movff	_gblCBW+19,_LBA+1
 24295                           
 24296                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 24297  00C950  C114  F147         	movff	_gblCBW+20,_LBA
 24298                           
 24299                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 24300  00C954  C116  F01B         	movff	_gblCBW+22,_TransferLength+1
 24301                           
 24302                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 24303  00C958  C117  F01A         	movff	_gblCBW+23,_TransferLength
 24304                           
 24305                           ; BSR set to: 1
 24306                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 24307  00C95C  501A               	movf	_TransferLength,w,c
 24308  00C95E  0100               	movlb	0	; () banked
 24309  00C960  6F71               	movwf	??_MSDWriteHandler& (0+255),b
 24310  00C962  501B               	movf	_TransferLength+1,w,c
 24311  00C964  6F72               	movwf	(??_MSDWriteHandler+1)& (0+255),b
 24312  00C966  6B73               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 24313  00C968  6B74               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 24314  00C96A  0E09               	movlw	9
 24315  00C96C                     u16675:
 24316  00C96C  90D8               	bcf	status,0,c
 24317  00C96E  3771               	rlcf	??_MSDWriteHandler& (0+255),f,b
 24318  00C970  3772               	rlcf	(??_MSDWriteHandler+1)& (0+255),f,b
 24319  00C972  3773               	rlcf	(??_MSDWriteHandler+2)& (0+255),f,b
 24320  00C974  3774               	rlcf	(??_MSDWriteHandler+3)& (0+255),f,b
 24321  00C976  2EE8               	decfsz	wreg,f,c
 24322  00C978  D7F9               	goto	u16675
 24323  00C97A  C071  F06A         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 24324  00C97E  C072  F06B         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 24325  00C982  C073  F06C         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 24326  00C986  C074  F06D         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 24327  00C98A  EC8F  F07E         	call	_MSDCheckForErrorCases	;wreg free
 24328  00C98E  0900               	iorlw	0
 24329  00C990  A4D8               	btfss	status,2,c
 24330  00C992  D144               	goto	l703
 24331                           
 24332                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 24333                           
 24334                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 24335  00C994  C1AF  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 24336  00C998  C1B0  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 24337  00C99C  EE21  F0A9         	lfsr	2,_LUN+15
 24338  00C9A0  D801               	call	u16698
 24339  00C9A2  D00A               	goto	u16699
 24340  00C9A4                     u16698:
 24341  00C9A4  0005               	push	
 24342  00C9A6  6EFA               	movwf	pclath,c
 24343  00C9A8  50DE               	movf	postinc2,w,c
 24344  00C9AA  6EFD               	movwf	tosl,c
 24345  00C9AC  50DE               	movf	postinc2,w,c
 24346  00C9AE  6EFE               	movwf	tosh,c
 24347  00C9B0  50DE               	movf	postinc2,w,c
 24348  00C9B2  6EFF               	movwf	tosu,c
 24349  00C9B4  50FA               	movf	pclath,w,c
 24350  00C9B6  0012               	return		;indir
 24351  00C9B8                     u16699:
 24352  00C9B8  0900               	iorlw	0
 24353  00C9BA  B4D8               	btfsc	status,2,c
 24354  00C9BC  D017               	goto	l704
 24355                           
 24356                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 24357  00C9BE  0E01               	movlw	1
 24358  00C9C0  010D               	movlb	13	; () banked
 24359  00C9C2  6F8C               	movwf	140,b	;volatile
 24360                           
 24361                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 24362  00C9C4  0101               	movlb	1	; () banked
 24363  00C9C6  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 24364  00C9C8  0BF0               	andlw	-16
 24365  00C9CA  0907               	iorlw	7
 24366  00C9CC  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 24367                           
 24368                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 24369  00C9CE  0E27               	movlw	39
 24370  00C9D0  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 24371                           
 24372                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 24373  00C9D2  0E00               	movlw	0
 24374  00C9D4  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 24375                           
 24376                           ; BSR set to: 1
 24377                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 24378  00C9D6  0E00               	movlw	0
 24379  00C9D8  0100               	movlb	0	; () banked
 24380  00C9DA  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 24381  00C9DC  0E02               	movlw	2
 24382  00C9DE  ECFE  F07B         	call	_USBStallEndpoint
 24383                           
 24384                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 24385  00C9E2  0E00               	movlw	0
 24386  00C9E4  0101               	movlb	1	; () banked
 24387  00C9E6  6F71               	movwf	_MSDWriteState& (0+255),b
 24388                           
 24389                           ; BSR set to: 1
 24390                           ;usb_device_msd.c: 1228: return MSDWriteState;
 24391  00C9E8  5171               	movf	_MSDWriteState& (0+255),w,b
 24392                           
 24393                           ; BSR set to: 1
 24394  00C9EA  0012               	return	
 24395  00C9EC                     l704:
 24396                           
 24397                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 24398                           
 24399                           ; BSR set to: 1
 24400  00C9EC  0E01               	movlw	1
 24401  00C9EE  6E25               	movwf	_MSD_State,c
 24402  00C9F0                     
 24403                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 24404  00C9F0  501A               	movf	_TransferLength,w,c
 24405  00C9F2  101B               	iorwf	_TransferLength+1,w,c
 24406  00C9F4  B4D8               	btfsc	status,2,c
 24407  00C9F6  D0FC               	goto	l17458
 24408                           
 24409                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 24410                           
 24411                           ; BSR set to: 1
 24412                           
 24413                           ;usb_device_msd.c: 1238: break;
 24414                           
 24415                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 24416  00C9F8  0E03               	movlw	3
 24417  00C9FA  0101               	movlb	1	; () banked
 24418  00C9FC  6F71               	movwf	_MSDWriteState& (0+255),b
 24419                           
 24420                           ; BSR set to: 1
 24421                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 24422  00C9FE  0E00               	movlw	0
 24423  00CA00  6F65               	movwf	_ptrNextData& (0+255),b
 24424  00CA02  0E06               	movlw	6
 24425  00CA04  6F66               	movwf	(_ptrNextData+1)& (0+255),b
 24426                           
 24427                           ; BSR set to: 1
 24428                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 24429  00CA06  0E00               	movlw	0
 24430  00CA08  010D               	movlb	13	; () banked
 24431  00CA0A  6F88               	movwf	136,b	;volatile
 24432  00CA0C  0E02               	movlw	2
 24433  00CA0E  6F89               	movwf	137,b	;volatile
 24434  00CA10  0E00               	movlw	0
 24435  00CA12  6F8A               	movwf	138,b	;volatile
 24436  00CA14  0E00               	movlw	0
 24437  00CA16  6F8B               	movwf	139,b	;volatile
 24438  00CA18                     l708:
 24439                           
 24440                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 24441  00CA18  010D               	movlb	13	; () banked
 24442  00CA1A  5188               	movf	136,w,b	;volatile
 24443  00CA1C  1189               	iorwf	137,w,b	;volatile
 24444  00CA1E  118A               	iorwf	138,w,b	;volatile
 24445  00CA20  118B               	iorwf	139,w,b	;volatile
 24446  00CA22  B4D8               	btfsc	status,2,c
 24447  00CA24  D01E               	goto	l709
 24448                           
 24449                           ; BSR set to: 13
 24450                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 24451  00CA26  0100               	movlb	0	; () banked
 24452  00CA28  51D0               	movf	_USBMSDOutHandle& (0+255),w,b
 24453  00CA2A  11D1               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 24454  00CA2C  B4D8               	btfsc	status,2,c
 24455  00CA2E  D006               	goto	l710
 24456                           
 24457                           ; BSR set to: 0
 24458  00CA30  C0D0  FFD9         	movff	_USBMSDOutHandle,fsr2l
 24459  00CA34  C0D1  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 24460  00CA38  BEDF               	btfsc	indf2,7,c
 24461  00CA3A  D0F0               	goto	l703
 24462  00CA3C                     l710:
 24463                           
 24464                           ; BSR set to: 0
 24465                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 24466                           
 24467                           ; BSR set to: 0
 24468  00CA3C  0E00               	movlw	0
 24469  00CA3E  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 24470  00CA40  C165  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 24471  00CA44  C166  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 24472  00CA48  0E40               	movlw	64
 24473  00CA4A  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 24474  00CA4C  0E02               	movlw	2
 24475  00CA4E  EC08  F07D         	call	_USBTransferOnePacket
 24476  00CA52  C060  F0D0         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 24477  00CA56  C061  F0D1         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 24478                           
 24479                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 24480  00CA5A  0E04               	movlw	4
 24481  00CA5C  0101               	movlb	1	; () banked
 24482  00CA5E  6F71               	movwf	_MSDWriteState& (0+255),b
 24483                           
 24484                           ;usb_device_msd.c: 1260: }
 24485  00CA60  D023               	goto	l711
 24486  00CA62                     l709:
 24487                           
 24488                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 24489                           
 24490                           ; BSR set to: 1
 24491  00CA62  C1AF  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 24492  00CA66  C1B0  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 24493  00CA6A  EE21  F0A9         	lfsr	2,_LUN+15
 24494  00CA6E  D801               	call	u16758
 24495  00CA70  D00A               	goto	u16759
 24496  00CA72                     u16758:
 24497  00CA72  0005               	push	
 24498  00CA74  6EFA               	movwf	pclath,c
 24499  00CA76  50DE               	movf	postinc2,w,c
 24500  00CA78  6EFD               	movwf	tosl,c
 24501  00CA7A  50DE               	movf	postinc2,w,c
 24502  00CA7C  6EFE               	movwf	tosh,c
 24503  00CA7E  50DE               	movf	postinc2,w,c
 24504  00CA80  6EFF               	movwf	tosu,c
 24505  00CA82  50FA               	movf	pclath,w,c
 24506  00CA84  0012               	return		;indir
 24507  00CA86                     u16759:
 24508  00CA86  0900               	iorlw	0
 24509  00CA88  B4D8               	btfsc	status,2,c
 24510  00CA8A  D00C               	goto	l712
 24511                           
 24512                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 24513  00CA8C  0E01               	movlw	1
 24514  00CA8E  010D               	movlb	13	; () banked
 24515  00CA90  6F8C               	movwf	140,b	;volatile
 24516                           
 24517                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 24518  00CA92  0101               	movlb	1	; () banked
 24519  00CA94  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 24520  00CA96  0BF0               	andlw	-16
 24521  00CA98  0902               	iorlw	2
 24522  00CA9A  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 24523                           
 24524                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 24525  00CA9C  0E27               	movlw	39
 24526  00CA9E  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 24527                           
 24528                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 24529  00CAA0  0E00               	movlw	0
 24530  00CAA2  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 24531  00CAA4                     l712:
 24532                           
 24533                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 24534  00CAA4  0E02               	movlw	2
 24535  00CAA6  D0A5               	goto	L45
 24536  00CAA8                     l711:
 24537                           
 24538                           ; BSR set to: 1
 24539                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 24540                           
 24541                           ; BSR set to: 1
 24542                           
 24543                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 24544                           
 24545                           ; BSR set to: 1
 24546  00CAA8  0100               	movlb	0	; () banked
 24547  00CAAA  51D0               	movf	_USBMSDOutHandle& (0+255),w,b
 24548  00CAAC  11D1               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 24549  00CAAE  B4D8               	btfsc	status,2,c
 24550  00CAB0  D006               	goto	l714
 24551                           
 24552                           ; BSR set to: 0
 24553  00CAB2  C0D0  FFD9         	movff	_USBMSDOutHandle,fsr2l
 24554  00CAB6  C0D1  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 24555  00CABA  BEDF               	btfsc	indf2,7,c
 24556  00CABC  D0AF               	goto	l703
 24557  00CABE                     l714:
 24558                           
 24559                           ; BSR set to: 0
 24560                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 24561                           
 24562                           ; BSR set to: 0
 24563  00CABE  EE20 F001          	lfsr	2,1
 24564  00CAC2  51D0               	movf	_USBMSDOutHandle& (0+255),w,b
 24565  00CAC4  26D9               	addwf	fsr2l,f,c
 24566  00CAC6  51D1               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 24567  00CAC8  22DA               	addwfc	fsr2h,f,c
 24568  00CACA  50DF               	movf	indf2,w,c
 24569  00CACC  6F71               	movwf	??_MSDWriteHandler& (0+255),b
 24570  00CACE  C071  F072         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 24571  00CAD2  6B73               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 24572  00CAD4  6B74               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 24573  00CAD6  6B75               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 24574  00CAD8  5172               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 24575  00CADA  0101               	movlb	1	; () banked
 24576  00CADC  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 24577  00CADE  0100               	movlb	0	; () banked
 24578  00CAE0  5173               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 24579  00CAE2  0101               	movlb	1	; () banked
 24580  00CAE4  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 24581  00CAE6  0100               	movlb	0	; () banked
 24582  00CAE8  5174               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 24583  00CAEA  0101               	movlb	1	; () banked
 24584  00CAEC  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 24585  00CAEE  0100               	movlb	0	; () banked
 24586  00CAF0  5175               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 24587  00CAF2  0101               	movlb	1	; () banked
 24588  00CAF4  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 24589                           
 24590                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 24591  00CAF6  0100               	movlb	0	; () banked
 24592  00CAF8  EE20 F001          	lfsr	2,1
 24593  00CAFC  51D0               	movf	_USBMSDOutHandle& (0+255),w,b
 24594  00CAFE  26D9               	addwf	fsr2l,f,c
 24595  00CB00  51D1               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 24596  00CB02  22DA               	addwfc	fsr2h,f,c
 24597  00CB04  50DF               	movf	indf2,w,c
 24598  00CB06  6F71               	movwf	??_MSDWriteHandler& (0+255),b
 24599  00CB08  C071  F072         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 24600  00CB0C  6B73               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 24601  00CB0E  6B74               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 24602  00CB10  6B75               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 24603  00CB12  5172               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 24604  00CB14  010D               	movlb	13	; () banked
 24605  00CB16  5F88               	subwf	136,f,b	;volatile
 24606  00CB18  0100               	movlb	0	; () banked
 24607  00CB1A  5173               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 24608  00CB1C  010D               	movlb	13	; () banked
 24609  00CB1E  5B89               	subwfb	137,f,b	;volatile
 24610  00CB20  0100               	movlb	0	; () banked
 24611  00CB22  5174               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 24612  00CB24  010D               	movlb	13	; () banked
 24613  00CB26  5B8A               	subwfb	138,f,b	;volatile
 24614  00CB28  0100               	movlb	0	; () banked
 24615  00CB2A  5175               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 24616  00CB2C  010D               	movlb	13	; () banked
 24617  00CB2E  5B8B               	subwfb	139,f,b	;volatile
 24618                           
 24619                           ; BSR set to: 13
 24620                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 24621  00CB30  0E40               	movlw	64
 24622  00CB32  0101               	movlb	1	; () banked
 24623  00CB34  2765               	addwf	_ptrNextData& (0+255),f,b
 24624  00CB36  0E00               	movlw	0
 24625  00CB38  2366               	addwfc	(_ptrNextData+1)& (0+255),f,b
 24626                           
 24627                           ; BSR set to: 1
 24628                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 24629  00CB3A  0E03               	movlw	3
 24630  00CB3C  D05B               	goto	L44
 24631  00CB3E                     
 24632                           ; BSR set to: 1
 24633                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 24634                           
 24635                           ; BSR set to: 1
 24636  00CB3E  010D               	movlb	13	; () banked
 24637  00CB40  518C               	movf	140,w,b	;volatile
 24638  00CB42  A4D8               	btfss	status,2,c
 24639  00CB44  D040               	goto	l719
 24640                           
 24641                           ; BSR set to: 13
 24642                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 24643  00CB46  C1AF  F060         	movff	_LUN+21,ExternalFlash_SectorWrite@config
 24644  00CB4A  C1B0  F061         	movff	_LUN+22,ExternalFlash_SectorWrite@config+1
 24645  00CB4E  C147  F062         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 24646  00CB52  C148  F063         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 24647  00CB56  C149  F064         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 24648  00CB5A  C14A  F065         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 24649  00CB5E  0E00               	movlw	0
 24650  00CB60  0100               	movlb	0	; () banked
 24651  00CB62  6F66               	movwf	ExternalFlash_SectorWrite@buffer& (0+255),b
 24652  00CB64  0E06               	movlw	6
 24653  00CB66  6F67               	movwf	(ExternalFlash_SectorWrite@buffer+1)& (0+255),b
 24654  00CB68  0101               	movlb	1	; () banked
 24655  00CB6A  5147               	movf	_LBA& (0+255),w,b
 24656  00CB6C  1148               	iorwf	(_LBA+1)& (0+255),w,b
 24657  00CB6E  1149               	iorwf	(_LBA+2)& (0+255),w,b
 24658  00CB70  114A               	iorwf	(_LBA+3)& (0+255),w,b
 24659  00CB72  A4D8               	btfss	status,2,c
 24660  00CB74  D002               	goto	u16800
 24661  00CB76  0E01               	movlw	1
 24662  00CB78  D001               	goto	u16810
 24663  00CB7A                     u16800:
 24664  00CB7A  0E00               	movlw	0
 24665  00CB7C                     u16810:
 24666  00CB7C  0100               	movlb	0	; () banked
 24667  00CB7E  6F68               	movwf	ExternalFlash_SectorWrite@allowWriteToZero& (0+255),b
 24668  00CB80  EE21  F0AC         	lfsr	2,_LUN+18
 24669  00CB84  D801               	call	u16828
 24670  00CB86  D00A               	goto	u16829
 24671  00CB88                     u16828:
 24672  00CB88  0005               	push	
 24673  00CB8A  6EFA               	movwf	pclath,c
 24674  00CB8C  50DE               	movf	postinc2,w,c
 24675  00CB8E  6EFD               	movwf	tosl,c
 24676  00CB90  50DE               	movf	postinc2,w,c
 24677  00CB92  6EFE               	movwf	tosh,c
 24678  00CB94  50DE               	movf	postinc2,w,c
 24679  00CB96  6EFF               	movwf	tosu,c
 24680  00CB98  50FA               	movf	pclath,w,c
 24681  00CB9A  0012               	return		;indir
 24682  00CB9C                     u16829:
 24683  00CB9C  06E8               	decf	wreg,f,c
 24684  00CB9E  B4D8               	btfsc	status,2,c
 24685  00CBA0  D012               	goto	l719
 24686                           
 24687                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 24688  00CBA2  0E64               	movlw	100
 24689  00CBA4  0101               	movlb	1	; () banked
 24690  00CBA6  6170               	cpfslt	_MSDRetryAttempt& (0+255),b
 24691  00CBA8  D002               	goto	l718
 24692                           
 24693                           ; BSR set to: 1
 24694                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 24695  00CBAA  2B70               	incf	_MSDRetryAttempt& (0+255),f,b
 24696                           
 24697                           ;usb_device_msd.c: 1314: break;
 24698  00CBAC  D037               	goto	l703
 24699  00CBAE                     l718:
 24700                           
 24701                           ; BSR set to: 1
 24702                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 24703                           
 24704                           ; BSR set to: 1
 24705  00CBAE  0E01               	movlw	1
 24706  00CBB0  010D               	movlb	13	; () banked
 24707  00CBB2  6F8C               	movwf	140,b	;volatile
 24708                           
 24709                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 24710  00CBB4  0101               	movlb	1	; () banked
 24711  00CBB6  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 24712  00CBB8  0BF0               	andlw	-16
 24713  00CBBA  0903               	iorlw	3
 24714  00CBBC  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 24715                           
 24716                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 24717  00CBBE  0E00               	movlw	0
 24718  00CBC0  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 24719                           
 24720                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 24721  00CBC2  0E00               	movlw	0
 24722  00CBC4  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 24723  00CBC6                     l719:
 24724                           
 24725                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 24726                           
 24727                           ; BSR set to: 1
 24728                           
 24729                           ; BSR set to: 1
 24730                           
 24731                           ; BSR set to: 1
 24732  00CBC6  0E01               	movlw	1
 24733  00CBC8  0101               	movlb	1	; () banked
 24734  00CBCA  2747               	addwf	_LBA& (0+255),f,b
 24735  00CBCC  0E00               	movlw	0
 24736  00CBCE  2348               	addwfc	(_LBA+1)& (0+255),f,b
 24737  00CBD0  2349               	addwfc	(_LBA+2)& (0+255),f,b
 24738  00CBD2  234A               	addwfc	(_LBA+3)& (0+255),f,b
 24739                           
 24740                           ; BSR set to: 1
 24741                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 24742  00CBD4  061A               	decf	_TransferLength,f,c
 24743  00CBD6  A0D8               	btfss	status,0,c
 24744  00CBD8  061B               	decf	_TransferLength+1,f,c
 24745                           
 24746                           ; BSR set to: 1
 24747                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 24748  00CBDA  0E01               	movlw	1
 24749  00CBDC  D00B               	goto	L44
 24750  00CBDE                     
 24751                           ; BSR set to: 1
 24752                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 24753                           
 24754                           ; BSR set to: 1
 24755  00CBDE  0E02               	movlw	2
 24756  00CBE0  010D               	movlb	13	; () banked
 24757  00CBE2  6F8C               	movwf	140,b	;volatile
 24758                           
 24759                           ; BSR set to: 13
 24760                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 24761  00CBE4  0E00               	movlw	0
 24762  00CBE6  0100               	movlb	0	; () banked
 24763  00CBE8  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 24764  00CBEA  0E02               	movlw	2
 24765  00CBEC  ECFE  F07B         	call	_USBStallEndpoint
 24766  00CBF0                     l17458:
 24767                           
 24768                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 24769  00CBF0  0E00               	movlw	0
 24770  00CBF2                     L45:
 24771  00CBF2  0101               	movlb	1	; () banked
 24772  00CBF4                     L44:
 24773  00CBF4  6F71               	movwf	_MSDWriteState& (0+255),b
 24774                           
 24775                           ; BSR set to: 1
 24776                           ;usb_device_msd.c: 1345: }
 24777                           
 24778                           ;usb_device_msd.c: 1344: break;
 24779  00CBF6  D012               	goto	l703
 24780  00CBF8                     l700:
 24781                           
 24782                           ; BSR set to: 1
 24783  00CBF8  0101               	movlb	1	; () banked
 24784  00CBFA  5171               	movf	_MSDWriteState& (0+255),w,b
 24785                           
 24786                           ; Switch size 1, requested type "space"
 24787                           ; Number of cases is 5, Range of values is 0 to 4
 24788                           ; switch strategies available:
 24789                           ; Name         Instructions Cycles
 24790                           ; simple_byte           16     9 (average)
 24791                           ;	Chosen strategy is simple_byte
 24792  00CBFC  0A00               	xorlw	0	; case 0
 24793  00CBFE  B4D8               	btfsc	status,2,c
 24794  00CC00  D6A1               	goto	l701
 24795  00CC02  0A01               	xorlw	1	; case 1
 24796  00CC04  B4D8               	btfsc	status,2,c
 24797  00CC06  D6F4               	goto	l706
 24798  00CC08  0A03               	xorlw	3	; case 2
 24799  00CC0A  B4D8               	btfsc	status,2,c
 24800  00CC0C  D798               	goto	l715
 24801  00CC0E  0A01               	xorlw	1	; case 3
 24802  00CC10  B4D8               	btfsc	status,2,c
 24803  00CC12  D702               	goto	l708
 24804  00CC14  0A07               	xorlw	7	; case 4
 24805  00CC16  B4D8               	btfsc	status,2,c
 24806  00CC18  D747               	goto	l711
 24807  00CC1A  D7E1               	goto	l720
 24808  00CC1C                     l703:
 24809                           
 24810                           ;usb_device_msd.c: 1347: return MSDWriteState;
 24811                           
 24812                           ; BSR set to: 1
 24813  00CC1C  0101               	movlb	1	; () banked
 24814  00CC1E  5171               	movf	_MSDWriteState& (0+255),w,b
 24815  00CC20  0012               	return	
 24816  00CC22                     __end_of_MSDWriteHandler:
 24817                           	opt stack 0
 24818                           tosu	equ	0xFFF
 24819                           tosh	equ	0xFFE
 24820                           tosl	equ	0xFFD
 24821                           pclath	equ	0xFFA
 24822                           tblptru	equ	0xFF8
 24823                           tblptrh	equ	0xFF7
 24824                           tblptrl	equ	0xFF6
 24825                           tablat	equ	0xFF5
 24826                           prodh	equ	0xFF4
 24827                           prodl	equ	0xFF3
 24828                           intcon	equ	0xFF2
 24829                           postinc0	equ	0xFEE
 24830                           wreg	equ	0xFE8
 24831                           indf1	equ	0xFE7
 24832                           postdec1	equ	0xFE5
 24833                           plusw1	equ	0xFE3
 24834                           fsr1h	equ	0xFE2
 24835                           fsr1l	equ	0xFE1
 24836                           indf2	equ	0xFDF
 24837                           postinc2	equ	0xFDE
 24838                           postdec2	equ	0xFDD
 24839                           plusw2	equ	0xFDB
 24840                           fsr2h	equ	0xFDA
 24841                           fsr2l	equ	0xFD9
 24842                           status	equ	0xFD8
 24843                           
 24844 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 24845 ;; Defined at:
 24846 ;;		line 34 in file "external_flash.c"
 24847 ;; Parameters:    Size  Location     Type
 24848 ;;  config          2    0[BANK0 ] PTR void 
 24849 ;;		 -> NULL(0), 
 24850 ;; Auto vars:     Size  Location     Type
 24851 ;;		None
 24852 ;; Return value:  Size  Location     Type
 24853 ;;                  1    wreg      unsigned char 
 24854 ;; Registers used:
 24855 ;;		wreg
 24856 ;; Tracked objects:
 24857 ;;		On entry : 0/0
 24858 ;;		On exit  : 0/0
 24859 ;;		Unchanged: 0/0
 24860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24861 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24864 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24865 ;;Total ram usage:        2 bytes
 24866 ;; Hardware stack levels used:    1
 24867 ;; Hardware stack levels required when called:   10
 24868 ;; This function calls:
 24869 ;;		Nothing
 24870 ;; This function is called by:
 24871 ;;		_MSDWriteHandler
 24872 ;;		_MSDProcessCommandMediaPresent
 24873 ;; This function uses a non-reentrant model
 24874 ;;
 24875                           
 24876                           	psect	text78
 24877  0128E4                     __ptext78:
 24878                           	opt stack 0
 24879  0128E4                     _ExternalFlash_WriteProtectStateGet:
 24880                           	opt stack 15
 24881                           
 24882                           ;external_flash.c: 37: return 0;
 24883                           
 24884                           ; BSR set to: 1
 24885                           ;incstack = 0
 24886  0128E4  0E00               	movlw	0
 24887  0128E6  0012               	return	
 24888  0128E8                     __end_of_ExternalFlash_WriteProtectStateGet:
 24889                           	opt stack 0
 24890                           tosu	equ	0xFFF
 24891                           tosh	equ	0xFFE
 24892                           tosl	equ	0xFFD
 24893                           pclath	equ	0xFFA
 24894                           tblptru	equ	0xFF8
 24895                           tblptrh	equ	0xFF7
 24896                           tblptrl	equ	0xFF6
 24897                           tablat	equ	0xFF5
 24898                           prodh	equ	0xFF4
 24899                           prodl	equ	0xFF3
 24900                           intcon	equ	0xFF2
 24901                           postinc0	equ	0xFEE
 24902                           wreg	equ	0xFE8
 24903                           indf1	equ	0xFE7
 24904                           postdec1	equ	0xFE5
 24905                           plusw1	equ	0xFE3
 24906                           fsr1h	equ	0xFE2
 24907                           fsr1l	equ	0xFE1
 24908                           indf2	equ	0xFDF
 24909                           postinc2	equ	0xFDE
 24910                           postdec2	equ	0xFDD
 24911                           plusw2	equ	0xFDB
 24912                           fsr2h	equ	0xFDA
 24913                           fsr2l	equ	0xFD9
 24914                           status	equ	0xFD8
 24915                           
 24916 ;; *************** function _ExternalFlash_SectorWrite *****************
 24917 ;; Defined at:
 24918 ;;		line 56 in file "external_flash.c"
 24919 ;; Parameters:    Size  Location     Type
 24920 ;;  config          2    0[BANK0 ] PTR void 
 24921 ;;		 -> NULL(0), 
 24922 ;;  sector_addr     4    2[BANK0 ] unsigned long 
 24923 ;;  buffer          2    6[BANK0 ] PTR unsigned char 
 24924 ;;		 -> msd_buffer(512), 
 24925 ;;  allowWriteTo    1    8[BANK0 ] unsigned char 
 24926 ;; Auto vars:     Size  Location     Type
 24927 ;;		None
 24928 ;; Return value:  Size  Location     Type
 24929 ;;                  1    wreg      unsigned char 
 24930 ;; Registers used:
 24931 ;;		wreg
 24932 ;; Tracked objects:
 24933 ;;		On entry : 0/0
 24934 ;;		On exit  : 0/0
 24935 ;;		Unchanged: 0/0
 24936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24937 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24940 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24941 ;;Total ram usage:        9 bytes
 24942 ;; Hardware stack levels used:    1
 24943 ;; Hardware stack levels required when called:   10
 24944 ;; This function calls:
 24945 ;;		Nothing
 24946 ;; This function is called by:
 24947 ;;		_MSDWriteHandler
 24948 ;; This function uses a non-reentrant model
 24949 ;;
 24950                           
 24951                           	psect	text79
 24952  0128E8                     __ptext79:
 24953                           	opt stack 0
 24954  0128E8                     _ExternalFlash_SectorWrite:
 24955                           	opt stack 15
 24956                           
 24957                           ;external_flash.c: 69: return 1;
 24958                           
 24959                           ;incstack = 0
 24960  0128E8  0E01               	movlw	1
 24961  0128EA  0012               	return	
 24962  0128EC                     __end_of_ExternalFlash_SectorWrite:
 24963                           	opt stack 0
 24964                           tosu	equ	0xFFF
 24965                           tosh	equ	0xFFE
 24966                           tosl	equ	0xFFD
 24967                           pclath	equ	0xFFA
 24968                           tblptru	equ	0xFF8
 24969                           tblptrh	equ	0xFF7
 24970                           tblptrl	equ	0xFF6
 24971                           tablat	equ	0xFF5
 24972                           prodh	equ	0xFF4
 24973                           prodl	equ	0xFF3
 24974                           intcon	equ	0xFF2
 24975                           postinc0	equ	0xFEE
 24976                           wreg	equ	0xFE8
 24977                           indf1	equ	0xFE7
 24978                           postdec1	equ	0xFE5
 24979                           plusw1	equ	0xFE3
 24980                           fsr1h	equ	0xFE2
 24981                           fsr1l	equ	0xFE1
 24982                           indf2	equ	0xFDF
 24983                           postinc2	equ	0xFDE
 24984                           postdec2	equ	0xFDD
 24985                           plusw2	equ	0xFDB
 24986                           fsr2h	equ	0xFDA
 24987                           fsr2l	equ	0xFD9
 24988                           status	equ	0xFD8
 24989                           
 24990 ;; *************** function _MSDReadHandler *****************
 24991 ;; Defined at:
 24992 ;;		line 1038 in file "usb_device_msd.c"
 24993 ;; Parameters:    Size  Location     Type
 24994 ;;		None
 24995 ;; Auto vars:     Size  Location     Type
 24996 ;;		None
 24997 ;; Return value:  Size  Location     Type
 24998 ;;                  1    wreg      unsigned char 
 24999 ;; Registers used:
 25000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 25001 ;; Tracked objects:
 25002 ;;		On entry : 0/0
 25003 ;;		On exit  : 0/0
 25004 ;;		Unchanged: 0/0
 25005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25008 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25009 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25010 ;;Total ram usage:        4 bytes
 25011 ;; Hardware stack levels used:    1
 25012 ;; Hardware stack levels required when called:   16
 25013 ;; This function calls:
 25014 ;;		_ExternalFlash_SectorRead
 25015 ;;		_MSDCheckForErrorCases
 25016 ;;		_USBStallEndpoint
 25017 ;;		_USBTransferOnePacket
 25018 ;; This function is called by:
 25019 ;;		_MSDProcessCommandMediaPresent
 25020 ;; This function uses a non-reentrant model
 25021 ;;
 25022                           
 25023                           	psect	text80
 25024  00DF1E                     __ptext80:
 25025                           	opt stack 0
 25026  00DF1E                     _MSDReadHandler:
 25027                           	opt stack 10
 25028                           
 25029                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 25030                           
 25031                           ;incstack = 0
 25032  00DF1E  D0DC               	goto	l681
 25033  00DF20                     l682:
 25034                           
 25035                           ; BSR set to: 1
 25036                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 25037  00DF20  C111  F14A         	movff	_gblCBW+17,_LBA+3
 25038                           
 25039                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 25040  00DF24  C112  F149         	movff	_gblCBW+18,_LBA+2
 25041                           
 25042                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 25043  00DF28  C113  F148         	movff	_gblCBW+19,_LBA+1
 25044                           
 25045                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 25046  00DF2C  C114  F147         	movff	_gblCBW+20,_LBA
 25047                           
 25048                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 25049  00DF30  C116  F01B         	movff	_gblCBW+22,_TransferLength+1
 25050                           
 25051                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 25052  00DF34  C117  F01A         	movff	_gblCBW+23,_TransferLength
 25053                           
 25054                           ; BSR set to: 1
 25055                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 25056  00DF38  501A               	movf	_TransferLength,w,c
 25057  00DF3A  0100               	movlb	0	; () banked
 25058  00DF3C  6F95               	movwf	??_MSDReadHandler& (0+255),b
 25059  00DF3E  501B               	movf	_TransferLength+1,w,c
 25060  00DF40  6F96               	movwf	(??_MSDReadHandler+1)& (0+255),b
 25061  00DF42  6B97               	clrf	(??_MSDReadHandler+2)& (0+255),b
 25062  00DF44  6B98               	clrf	(??_MSDReadHandler+3)& (0+255),b
 25063  00DF46  0E09               	movlw	9
 25064  00DF48                     u16565:
 25065  00DF48  90D8               	bcf	status,0,c
 25066  00DF4A  3795               	rlcf	??_MSDReadHandler& (0+255),f,b
 25067  00DF4C  3796               	rlcf	(??_MSDReadHandler+1)& (0+255),f,b
 25068  00DF4E  3797               	rlcf	(??_MSDReadHandler+2)& (0+255),f,b
 25069  00DF50  3798               	rlcf	(??_MSDReadHandler+3)& (0+255),f,b
 25070  00DF52  2EE8               	decfsz	wreg,f,c
 25071  00DF54  D7F9               	goto	u16565
 25072  00DF56  C095  F06A         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 25073  00DF5A  C096  F06B         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 25074  00DF5E  C097  F06C         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 25075  00DF62  C098  F06D         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 25076  00DF66  EC8F  F07E         	call	_MSDCheckForErrorCases	;wreg free
 25077  00DF6A  0900               	iorlw	0
 25078  00DF6C  A4D8               	btfss	status,2,c
 25079  00DF6E  D0C6               	goto	l684
 25080                           
 25081                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 25082                           
 25083                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 25084  00DF70  0E01               	movlw	1
 25085  00DF72  0101               	movlb	1	; () banked
 25086  00DF74  6F72               	movwf	_MSDReadState& (0+255),b
 25087  00DF76                     
 25088                           ; BSR set to: 1
 25089                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 25090                           
 25091                           ; BSR set to: 1
 25092  00DF76  501A               	movf	_TransferLength,w,c
 25093  00DF78  101B               	iorwf	_TransferLength+1,w,c
 25094  00DF7A  A4D8               	btfss	status,2,c
 25095  00DF7C  D002               	goto	l686
 25096                           
 25097                           ; BSR set to: 1
 25098                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 25099  00DF7E  0E00               	movlw	0
 25100  00DF80  D04A               	goto	L46
 25101  00DF82                     l686:
 25102                           
 25103                           ; BSR set to: 1
 25104                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 25105                           
 25106                           ; BSR set to: 1
 25107  00DF82  061A               	decf	_TransferLength,f,c
 25108  00DF84  A0D8               	btfss	status,0,c
 25109  00DF86  061B               	decf	_TransferLength+1,f,c
 25110                           
 25111                           ; BSR set to: 1
 25112                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 25113  00DF88  0E02               	movlw	2
 25114  00DF8A  6F72               	movwf	_MSDReadState& (0+255),b
 25115  00DF8C                     
 25116                           ; BSR set to: 1
 25117                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 25118                           
 25119                           ; BSR set to: 1
 25120  00DF8C  0100               	movlb	0	; () banked
 25121  00DF8E  51CE               	movf	_USBMSDInHandle& (0+255),w,b
 25122  00DF90  11CF               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 25123  00DF92  B4D8               	btfsc	status,2,c
 25124  00DF94  D006               	goto	l688
 25125                           
 25126                           ; BSR set to: 0
 25127  00DF96  C0CE  FFD9         	movff	_USBMSDInHandle,fsr2l
 25128  00DF9A  C0CF  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 25129  00DF9E  BEDF               	btfsc	indf2,7,c
 25130  00DFA0  D0AD               	goto	l684
 25131  00DFA2                     l688:
 25132                           
 25133                           ; BSR set to: 0
 25134                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 25135                           
 25136                           ; BSR set to: 0
 25137  00DFA2  C1AF  F08B         	movff	_LUN+21,ExternalFlash_SectorRead@config
 25138  00DFA6  C1B0  F08C         	movff	_LUN+22,ExternalFlash_SectorRead@config+1
 25139  00DFAA  C147  F08D         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 25140  00DFAE  C148  F08E         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 25141  00DFB2  C149  F08F         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 25142  00DFB6  C14A  F090         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 25143  00DFBA  0E00               	movlw	0
 25144  00DFBC  6F91               	movwf	ExternalFlash_SectorRead@buffer& (0+255),b
 25145  00DFBE  0E06               	movlw	6
 25146  00DFC0  6F92               	movwf	(ExternalFlash_SectorRead@buffer+1)& (0+255),b
 25147  00DFC2  EE21  F0A6         	lfsr	2,_LUN+12
 25148  00DFC6  D801               	call	u16618
 25149  00DFC8  D00A               	goto	u16619
 25150  00DFCA                     u16618:
 25151  00DFCA  0005               	push	
 25152  00DFCC  6EFA               	movwf	pclath,c
 25153  00DFCE  50DE               	movf	postinc2,w,c
 25154  00DFD0  6EFD               	movwf	tosl,c
 25155  00DFD2  50DE               	movf	postinc2,w,c
 25156  00DFD4  6EFE               	movwf	tosh,c
 25157  00DFD6  50DE               	movf	postinc2,w,c
 25158  00DFD8  6EFF               	movwf	tosu,c
 25159  00DFDA  50FA               	movf	pclath,w,c
 25160  00DFDC  0012               	return		;indir
 25161  00DFDE                     u16619:
 25162  00DFDE  06E8               	decf	wreg,f,c
 25163  00DFE0  B4D8               	btfsc	status,2,c
 25164  00DFE2  D01B               	goto	l691
 25165                           
 25166                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 25167  00DFE4  0E64               	movlw	100
 25168  00DFE6  0101               	movlb	1	; () banked
 25169  00DFE8  6170               	cpfslt	_MSDRetryAttempt& (0+255),b
 25170  00DFEA  D002               	goto	l690
 25171                           
 25172                           ; BSR set to: 1
 25173                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 25174  00DFEC  2B70               	incf	_MSDRetryAttempt& (0+255),f,b
 25175                           
 25176                           ;usb_device_msd.c: 1088: break;
 25177  00DFEE  D086               	goto	l684
 25178  00DFF0                     l690:
 25179                           
 25180                           ; BSR set to: 1
 25181                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 25182                           
 25183                           ; BSR set to: 1
 25184  00DFF0  0E02               	movlw	2
 25185  00DFF2  010D               	movlb	13	; () banked
 25186  00DFF4  6F8C               	movwf	140,b	;volatile
 25187                           
 25188                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 25189  00DFF6  0101               	movlb	1	; () banked
 25190  00DFF8  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 25191  00DFFA  0BF0               	andlw	-16
 25192  00DFFC  0903               	iorlw	3
 25193  00DFFE  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 25194                           
 25195                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 25196  00E000  0E00               	movlw	0
 25197  00E002  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 25198                           
 25199                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 25200  00E004  0E00               	movlw	0
 25201  00E006  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 25202                           
 25203                           ; BSR set to: 1
 25204                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 25205  00E008  0E01               	movlw	1
 25206  00E00A  0100               	movlb	0	; () banked
 25207  00E00C  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 25208  00E00E  0E02               	movlw	2
 25209  00E010  ECFE  F07B         	call	_USBStallEndpoint
 25210  00E014  D05E               	goto	l17370
 25211  00E016                     L46:
 25212  00E016  6F72               	movwf	_MSDReadState& (0+255),b
 25213                           
 25214                           ;usb_device_msd.c: 1109: break;
 25215  00E018  D071               	goto	l684
 25216  00E01A                     l691:
 25217                           
 25218                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 25219                           
 25220                           ; BSR set to: 1
 25221                           
 25222                           ; BSR set to: 1
 25223  00E01A  0E01               	movlw	1
 25224  00E01C  0101               	movlb	1	; () banked
 25225  00E01E  2747               	addwf	_LBA& (0+255),f,b
 25226  00E020  0E00               	movlw	0
 25227  00E022  2348               	addwfc	(_LBA+1)& (0+255),f,b
 25228  00E024  2349               	addwfc	(_LBA+2)& (0+255),f,b
 25229  00E026  234A               	addwfc	(_LBA+3)& (0+255),f,b
 25230                           
 25231                           ; BSR set to: 1
 25232                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 25233  00E028  0E00               	movlw	0
 25234  00E02A  010D               	movlb	13	; () banked
 25235  00E02C  6F88               	movwf	136,b	;volatile
 25236  00E02E  0E02               	movlw	2
 25237  00E030  6F89               	movwf	137,b	;volatile
 25238  00E032  0E00               	movlw	0
 25239  00E034  6F8A               	movwf	138,b	;volatile
 25240  00E036  0E00               	movlw	0
 25241  00E038  6F8B               	movwf	139,b	;volatile
 25242                           
 25243                           ; BSR set to: 13
 25244                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 25245  00E03A  0E00               	movlw	0
 25246  00E03C  0101               	movlb	1	; () banked
 25247  00E03E  6F65               	movwf	_ptrNextData& (0+255),b
 25248  00E040  0E06               	movlw	6
 25249  00E042  6F66               	movwf	(_ptrNextData+1)& (0+255),b
 25250                           
 25251                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 25252  00E044  0E03               	movlw	3
 25253  00E046  6F72               	movwf	_MSDReadState& (0+255),b
 25254  00E048                     
 25255                           ; BSR set to: 1
 25256                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 25257                           
 25258                           ; BSR set to: 1
 25259  00E048  010D               	movlb	13	; () banked
 25260  00E04A  5188               	movf	136,w,b	;volatile
 25261  00E04C  1189               	iorwf	137,w,b	;volatile
 25262  00E04E  118A               	iorwf	138,w,b	;volatile
 25263  00E050  118B               	iorwf	139,w,b	;volatile
 25264  00E052  A4D8               	btfss	status,2,c
 25265  00E054  D002               	goto	l693
 25266                           
 25267                           ; BSR set to: 13
 25268                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 25269  00E056  0E01               	movlw	1
 25270  00E058  D03D               	goto	L48
 25271  00E05A                     l693:
 25272                           
 25273                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 25274                           
 25275                           ; BSR set to: 1
 25276  00E05A  0E04               	movlw	4
 25277  00E05C  0101               	movlb	1	; () banked
 25278  00E05E  6F72               	movwf	_MSDReadState& (0+255),b
 25279  00E060                     
 25280                           ; BSR set to: 1
 25281                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 25282                           
 25283                           ; BSR set to: 1
 25284  00E060  0100               	movlb	0	; () banked
 25285  00E062  51CE               	movf	_USBMSDInHandle& (0+255),w,b
 25286  00E064  11CF               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 25287  00E066  B4D8               	btfsc	status,2,c
 25288  00E068  D006               	goto	l695
 25289                           
 25290                           ; BSR set to: 0
 25291  00E06A  C0CE  FFD9         	movff	_USBMSDInHandle,fsr2l
 25292  00E06E  C0CF  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 25293  00E072  BEDF               	btfsc	indf2,7,c
 25294  00E074  D043               	goto	l684
 25295  00E076                     l695:
 25296                           
 25297                           ; BSR set to: 0
 25298                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 25299                           
 25300                           ; BSR set to: 0
 25301  00E076  0E01               	movlw	1
 25302  00E078  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 25303  00E07A  C165  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 25304  00E07E  C166  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 25305  00E082  0E40               	movlw	64
 25306  00E084  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 25307  00E086  0E02               	movlw	2
 25308  00E088  EC08  F07D         	call	_USBTransferOnePacket
 25309  00E08C  C060  F0CE         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 25310  00E090  C061  F0CF         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 25311                           
 25312                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 25313  00E094  0E03               	movlw	3
 25314  00E096  0101               	movlb	1	; () banked
 25315  00E098  6F72               	movwf	_MSDReadState& (0+255),b
 25316                           
 25317                           ; BSR set to: 1
 25318                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 25319  00E09A  0E40               	movlw	64
 25320  00E09C  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 25321  00E09E  0E00               	movlw	0
 25322  00E0A0  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 25323  00E0A2  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 25324  00E0A4  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 25325                           
 25326                           ; BSR set to: 1
 25327                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 25328  00E0A6  0E40               	movlw	64
 25329  00E0A8  010D               	movlb	13	; () banked
 25330  00E0AA  5F88               	subwf	136,f,b	;volatile
 25331  00E0AC  0E00               	movlw	0
 25332  00E0AE  5B89               	subwfb	137,f,b	;volatile
 25333  00E0B0  5B8A               	subwfb	138,f,b	;volatile
 25334  00E0B2  5B8B               	subwfb	139,f,b	;volatile
 25335                           
 25336                           ; BSR set to: 13
 25337                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 25338  00E0B4  0E40               	movlw	64
 25339  00E0B6  0101               	movlb	1	; () banked
 25340  00E0B8  2765               	addwf	_ptrNextData& (0+255),f,b
 25341  00E0BA  0E00               	movlw	0
 25342  00E0BC  2366               	addwfc	(_ptrNextData+1)& (0+255),f,b
 25343                           
 25344                           ;usb_device_msd.c: 1149: break;
 25345  00E0BE  D01E               	goto	l684
 25346  00E0C0                     
 25347                           ; BSR set to: 1
 25348                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 25349                           
 25350                           ; BSR set to: 1
 25351  00E0C0  0E02               	movlw	2
 25352  00E0C2  010D               	movlb	13	; () banked
 25353  00E0C4  6F8C               	movwf	140,b	;volatile
 25354                           
 25355                           ; BSR set to: 13
 25356                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 25357  00E0C6  0E01               	movlw	1
 25358  00E0C8  0100               	movlb	0	; () banked
 25359  00E0CA  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 25360  00E0CC  0E02               	movlw	2
 25361  00E0CE  ECFE  F07B         	call	_USBStallEndpoint
 25362  00E0D2                     l17370:
 25363                           
 25364                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 25365  00E0D2  0E00               	movlw	0
 25366  00E0D4                     L48:
 25367  00E0D4  0101               	movlb	1	; () banked
 25368  00E0D6  D79F               	goto	L46
 25369  00E0D8                     l681:
 25370                           
 25371                           ; BSR set to: 1
 25372  00E0D8  0101               	movlb	1	; () banked
 25373  00E0DA  5172               	movf	_MSDReadState& (0+255),w,b
 25374                           
 25375                           ; Switch size 1, requested type "space"
 25376                           ; Number of cases is 5, Range of values is 0 to 4
 25377                           ; switch strategies available:
 25378                           ; Name         Instructions Cycles
 25379                           ; simple_byte           16     9 (average)
 25380                           ;	Chosen strategy is simple_byte
 25381  00E0DC  0A00               	xorlw	0	; case 0
 25382  00E0DE  B4D8               	btfsc	status,2,c
 25383  00E0E0  D71F               	goto	l682
 25384  00E0E2  0A01               	xorlw	1	; case 1
 25385  00E0E4  B4D8               	btfsc	status,2,c
 25386  00E0E6  D747               	goto	l685
 25387  00E0E8  0A03               	xorlw	3	; case 2
 25388  00E0EA  B4D8               	btfsc	status,2,c
 25389  00E0EC  D74F               	goto	l687
 25390  00E0EE  0A01               	xorlw	1	; case 3
 25391  00E0F0  B4D8               	btfsc	status,2,c
 25392  00E0F2  D7AA               	goto	l692
 25393  00E0F4  0A07               	xorlw	7	; case 4
 25394  00E0F6  B4D8               	btfsc	status,2,c
 25395  00E0F8  D7B3               	goto	l694
 25396  00E0FA  D7E2               	goto	l696
 25397  00E0FC                     l684:
 25398                           
 25399                           ;usb_device_msd.c: 1161: return MSDReadState;
 25400                           
 25401                           ; BSR set to: 1
 25402  00E0FC  0101               	movlb	1	; () banked
 25403  00E0FE  5172               	movf	_MSDReadState& (0+255),w,b
 25404  00E100  0012               	return	
 25405  00E102                     __end_of_MSDReadHandler:
 25406                           	opt stack 0
 25407                           tosu	equ	0xFFF
 25408                           tosh	equ	0xFFE
 25409                           tosl	equ	0xFFD
 25410                           pclath	equ	0xFFA
 25411                           tblptru	equ	0xFF8
 25412                           tblptrh	equ	0xFF7
 25413                           tblptrl	equ	0xFF6
 25414                           tablat	equ	0xFF5
 25415                           prodh	equ	0xFF4
 25416                           prodl	equ	0xFF3
 25417                           intcon	equ	0xFF2
 25418                           postinc0	equ	0xFEE
 25419                           wreg	equ	0xFE8
 25420                           indf1	equ	0xFE7
 25421                           postdec1	equ	0xFE5
 25422                           plusw1	equ	0xFE3
 25423                           fsr1h	equ	0xFE2
 25424                           fsr1l	equ	0xFE1
 25425                           indf2	equ	0xFDF
 25426                           postinc2	equ	0xFDE
 25427                           postdec2	equ	0xFDD
 25428                           plusw2	equ	0xFDB
 25429                           fsr2h	equ	0xFDA
 25430                           fsr2l	equ	0xFD9
 25431                           status	equ	0xFD8
 25432                           
 25433 ;; *************** function _MSDCheckForErrorCases *****************
 25434 ;; Defined at:
 25435 ;;		line 1434 in file "usb_device_msd.c"
 25436 ;; Parameters:    Size  Location     Type
 25437 ;;  DeviceBytes     4   10[BANK0 ] unsigned long 
 25438 ;; Auto vars:     Size  Location     Type
 25439 ;;  MSDErrorCase    1   16[BANK0 ] unsigned char 
 25440 ;;  DeviceNoData    1   15[BANK0 ] unsigned char 
 25441 ;;  HostMoreData    1   14[BANK0 ] unsigned char 
 25442 ;; Return value:  Size  Location     Type
 25443 ;;                  1    wreg      unsigned char 
 25444 ;; Registers used:
 25445 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25446 ;; Tracked objects:
 25447 ;;		On entry : 0/0
 25448 ;;		On exit  : 0/0
 25449 ;;		Unchanged: 0/0
 25450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25451 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25452 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25454 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25455 ;;Total ram usage:        7 bytes
 25456 ;; Hardware stack levels used:    1
 25457 ;; Hardware stack levels required when called:   12
 25458 ;; This function calls:
 25459 ;;		_MSDErrorHandler
 25460 ;; This function is called by:
 25461 ;;		_MSDProcessCommandMediaPresent
 25462 ;;		_MSDReadHandler
 25463 ;;		_MSDWriteHandler
 25464 ;; This function uses a non-reentrant model
 25465 ;;
 25466                           
 25467                           	psect	text81
 25468  00FD1E                     __ptext81:
 25469                           	opt stack 0
 25470  00FD1E                     _MSDCheckForErrorCases:
 25471                           	opt stack 13
 25472                           
 25473                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 25474                           
 25475                           ; BSR set to: 1
 25476                           ;incstack = 0
 25477  00FD1E  0100               	movlb	0	; () banked
 25478  00FD20  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 25479  00FD22  116B               	iorwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 25480  00FD24  116C               	iorwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 25481  00FD26  116D               	iorwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 25482  00FD28  A4D8               	btfss	status,2,c
 25483  00FD2A  D002               	goto	l726
 25484                           
 25485                           ; BSR set to: 0
 25486                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 25487  00FD2C  0E01               	movlw	1
 25488  00FD2E  D001               	goto	L49
 25489  00FD30                     l726:
 25490                           
 25491                           ; BSR set to: 0
 25492                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 25493                           
 25494                           ; BSR set to: 0
 25495  00FD30  0E00               	movlw	0
 25496  00FD32                     L49:
 25497  00FD32  6F6F               	movwf	MSDCheckForErrorCases@DeviceNoData& (0+255),b
 25498                           
 25499                           ; BSR set to: 0
 25500                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 25501                           
 25502                           ; BSR set to: 0
 25503  00FD34  0424               	decf	_MSDHostNoData,w,c
 25504  00FD36  A4D8               	btfss	status,2,c
 25505  00FD38  D005               	goto	l728
 25506                           
 25507                           ; BSR set to: 0
 25508  00FD3A  056F               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 25509  00FD3C  A4D8               	btfss	status,2,c
 25510  00FD3E  D002               	goto	l728
 25511                           
 25512                           ; BSR set to: 0
 25513                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 25514  00FD40  0E00               	movlw	0
 25515                           
 25516                           ; BSR set to: 0
 25517  00FD42  0012               	return	
 25518  00FD44                     l728:
 25519                           
 25520                           ; BSR set to: 0
 25521                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 25522                           
 25523                           ; BSR set to: 0
 25524  00FD44  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 25525  00FD46  0101               	movlb	1	; () banked
 25526  00FD48  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 25527  00FD4A  E121               	bnz	l17184
 25528  00FD4C  0100               	movlb	0	; () banked
 25529  00FD4E  516B               	movf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 25530  00FD50  0101               	movlb	1	; () banked
 25531  00FD52  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 25532  00FD54  E11C               	bnz	l17184
 25533  00FD56  0100               	movlb	0	; () banked
 25534  00FD58  516C               	movf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 25535  00FD5A  0101               	movlb	1	; () banked
 25536  00FD5C  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 25537  00FD5E  E117               	bnz	l17184
 25538  00FD60  0100               	movlb	0	; () banked
 25539  00FD62  516D               	movf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 25540  00FD64  0101               	movlb	1	; () banked
 25541  00FD66  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 25542  00FD68  A4D8               	btfss	status,2,c
 25543  00FD6A  D011               	goto	l734
 25544                           
 25545                           ; BSR set to: 1
 25546                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 25547  00FD6C  0425               	decf	_MSD_State,w,c
 25548  00FD6E  A4D8               	btfss	status,2,c
 25549  00FD70  D007               	goto	l731
 25550                           
 25551                           ; BSR set to: 1
 25552                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 25553  00FD72  0E2A               	movlw	42
 25554  00FD74  0100               	movlb	0	; () banked
 25555  00FD76  19D2               	xorwf	_MSDCommandState& (0+255),w,b
 25556  00FD78  B4D8               	btfsc	status,2,c
 25557  00FD7A  D009               	goto	l734
 25558                           
 25559                           ; BSR set to: 0
 25560                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 25561  00FD7C  0E00               	movlw	0
 25562                           
 25563                           ; BSR set to: 0
 25564  00FD7E  0012               	return	
 25565  00FD80                     l731:
 25566                           
 25567                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 25568                           
 25569                           ; BSR set to: 0
 25570  00FD80  0E2A               	movlw	42
 25571  00FD82  0100               	movlb	0	; () banked
 25572  00FD84  19D2               	xorwf	_MSDCommandState& (0+255),w,b
 25573  00FD86  A4D8               	btfss	status,2,c
 25574  00FD88  D002               	goto	l734
 25575                           
 25576                           ; BSR set to: 0
 25577                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 25578  00FD8A  0E00               	movlw	0
 25579                           
 25580                           ; BSR set to: 0
 25581  00FD8C  0012               	return	
 25582  00FD8E                     l734:
 25583  00FD8E                     l17184:
 25584                           
 25585                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 25586  00FD8E  0101               	movlb	1	; () banked
 25587  00FD90  5108               	movf	(_gblCBW+8)& (0+255),w,b
 25588  00FD92  0100               	movlb	0	; () banked
 25589  00FD94  5D6A               	subwf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 25590  00FD96  0101               	movlb	1	; () banked
 25591  00FD98  5109               	movf	(_gblCBW+9)& (0+255),w,b
 25592  00FD9A  0100               	movlb	0	; () banked
 25593  00FD9C  596B               	subwfb	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 25594  00FD9E  0101               	movlb	1	; () banked
 25595  00FDA0  510A               	movf	(_gblCBW+10)& (0+255),w,b
 25596  00FDA2  0100               	movlb	0	; () banked
 25597  00FDA4  596C               	subwfb	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 25598  00FDA6  0101               	movlb	1	; () banked
 25599  00FDA8  510B               	movf	(_gblCBW+11)& (0+255),w,b
 25600  00FDAA  0100               	movlb	0	; () banked
 25601  00FDAC  596D               	subwfb	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 25602  00FDAE  B0D8               	btfsc	status,0,c
 25603  00FDB0  D002               	goto	l735
 25604                           
 25605                           ; BSR set to: 0
 25606                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 25607  00FDB2  0E01               	movlw	1
 25608  00FDB4  D001               	goto	L50
 25609  00FDB6                     l735:
 25610                           
 25611                           ; BSR set to: 0
 25612                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 25613                           
 25614                           ; BSR set to: 0
 25615  00FDB6  0E00               	movlw	0
 25616  00FDB8                     L50:
 25617  00FDB8  6F6E               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),b
 25618                           
 25619                           ; BSR set to: 0
 25620                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 25621                           
 25622                           ; BSR set to: 0
 25623  00FDBA  0E02               	movlw	2
 25624  00FDBC  1825               	xorwf	_MSD_State,w,c
 25625  00FDBE  A4D8               	btfss	status,2,c
 25626  00FDC0  D014               	goto	l737
 25627                           
 25628                           ; BSR set to: 0
 25629                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 25630  00FDC2  0E2A               	movlw	42
 25631  00FDC4  19D2               	xorwf	_MSDCommandState& (0+255),w,b
 25632  00FDC6  B4D8               	btfsc	status,2,c
 25633  00FDC8  D005               	goto	l738
 25634                           
 25635                           ; BSR set to: 0
 25636  00FDCA  516F               	movf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 25637  00FDCC  A4D8               	btfss	status,2,c
 25638  00FDCE  D002               	goto	l738
 25639  00FDD0                     u16450:
 25640                           
 25641                           ; BSR set to: 0
 25642                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 25643  00FDD0  0E05               	movlw	5
 25644  00FDD2  D01D               	goto	L53
 25645  00FDD4                     l738:
 25646                           
 25647                           ; BSR set to: 0
 25648                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 25649                           
 25650                           ; BSR set to: 0
 25651  00FDD4  0424               	decf	_MSDHostNoData,w,c
 25652  00FDD6  B4D8               	btfsc	status,2,c
 25653  00FDD8  D00F               	goto	u16500
 25654                           
 25655                           ; BSR set to: 0
 25656                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 25657                           
 25658                           ; BSR set to: 0
 25659                           
 25660                           ; BSR set to: 0
 25661                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 25662  00FDDA  056F               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 25663  00FDDC  B4D8               	btfsc	status,2,c
 25664  00FDDE  D003               	goto	u16480
 25665                           
 25666                           ; BSR set to: 0
 25667                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 25668                           
 25669                           ; BSR set to: 0
 25670                           
 25671                           ; BSR set to: 0
 25672                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 25673  00FDE0  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 25674  00FDE2  A4D8               	btfss	status,2,c
 25675  00FDE4  D7F5               	goto	u16450
 25676  00FDE6                     u16480:
 25677                           
 25678                           ; BSR set to: 0
 25679                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 25680  00FDE6  0E04               	movlw	4
 25681  00FDE8  D012               	goto	L53
 25682  00FDEA                     l737:
 25683                           
 25684                           ; BSR set to: 0
 25685                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 25686                           
 25687                           ; BSR set to: 0
 25688  00FDEA  0E2A               	movlw	42
 25689  00FDEC  19D2               	xorwf	_MSDCommandState& (0+255),w,b
 25690  00FDEE  B4D8               	btfsc	status,2,c
 25691  00FDF0  D00D               	goto	l753
 25692                           
 25693                           ; BSR set to: 0
 25694                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 25695                           
 25696                           ; BSR set to: 0
 25697                           
 25698                           ; BSR set to: 0
 25699                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 25700  00FDF2  0424               	decf	_MSDHostNoData,w,c
 25701  00FDF4  A4D8               	btfss	status,2,c
 25702  00FDF6  D002               	goto	l749
 25703  00FDF8                     u16500:
 25704                           
 25705                           ; BSR set to: 0
 25706                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 25707  00FDF8  0E01               	movlw	1
 25708  00FDFA  D009               	goto	L53
 25709  00FDFC                     l749:
 25710                           
 25711                           ; BSR set to: 0
 25712                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 25713                           
 25714                           ; BSR set to: 0
 25715  00FDFC  056F               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 25716  00FDFE  B4D8               	btfsc	status,2,c
 25717  00FE00  D003               	goto	u16520
 25718                           
 25719                           ; BSR set to: 0
 25720                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 25721                           
 25722                           ; BSR set to: 0
 25723                           
 25724                           ; BSR set to: 0
 25725                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 25726  00FE02  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 25727  00FE04  A4D8               	btfss	status,2,c
 25728  00FE06  D002               	goto	l753
 25729  00FE08                     u16520:
 25730                           
 25731                           ; BSR set to: 0
 25732                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 25733  00FE08  0E02               	movlw	2
 25734  00FE0A  D001               	goto	L53
 25735  00FE0C                     l753:
 25736                           
 25737                           ; BSR set to: 0
 25738                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 25739                           
 25740                           ; BSR set to: 0
 25741  00FE0C  0E03               	movlw	3
 25742  00FE0E                     L53:
 25743  00FE0E  6F70               	movwf	MSDCheckForErrorCases@MSDErrorCase& (0+255),b
 25744                           
 25745                           ; BSR set to: 0
 25746                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 25747                           
 25748                           ; BSR set to: 0
 25749                           
 25750                           ; BSR set to: 0
 25751                           
 25752                           ; BSR set to: 0
 25753                           
 25754                           ; BSR set to: 0
 25755                           
 25756                           ; BSR set to: 0
 25757  00FE10  5170               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 25758  00FE12  ECDC  F079         	call	_MSDErrorHandler
 25759                           
 25760                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 25761  00FE16  0100               	movlb	0	; () banked
 25762  00FE18  5170               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 25763  00FE1A  0012               	return	
 25764  00FE1C                     __end_of_MSDCheckForErrorCases:
 25765                           	opt stack 0
 25766                           tosu	equ	0xFFF
 25767                           tosh	equ	0xFFE
 25768                           tosl	equ	0xFFD
 25769                           pclath	equ	0xFFA
 25770                           tblptru	equ	0xFF8
 25771                           tblptrh	equ	0xFF7
 25772                           tblptrl	equ	0xFF6
 25773                           tablat	equ	0xFF5
 25774                           prodh	equ	0xFF4
 25775                           prodl	equ	0xFF3
 25776                           intcon	equ	0xFF2
 25777                           postinc0	equ	0xFEE
 25778                           wreg	equ	0xFE8
 25779                           indf1	equ	0xFE7
 25780                           postdec1	equ	0xFE5
 25781                           plusw1	equ	0xFE3
 25782                           fsr1h	equ	0xFE2
 25783                           fsr1l	equ	0xFE1
 25784                           indf2	equ	0xFDF
 25785                           postinc2	equ	0xFDE
 25786                           postdec2	equ	0xFDD
 25787                           plusw2	equ	0xFDB
 25788                           fsr2h	equ	0xFDA
 25789                           fsr2l	equ	0xFD9
 25790                           status	equ	0xFD8
 25791                           
 25792 ;; *************** function _MSDErrorHandler *****************
 25793 ;; Defined at:
 25794 ;;		line 1577 in file "usb_device_msd.c"
 25795 ;; Parameters:    Size  Location     Type
 25796 ;;  ErrorCase       1    wreg     unsigned char 
 25797 ;; Auto vars:     Size  Location     Type
 25798 ;;  ErrorCase       1    8[BANK0 ] unsigned char 
 25799 ;;  OldMSD_State    1    9[BANK0 ] unsigned char 
 25800 ;; Return value:  Size  Location     Type
 25801 ;;                  1    wreg      void 
 25802 ;; Registers used:
 25803 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25804 ;; Tracked objects:
 25805 ;;		On entry : 0/0
 25806 ;;		On exit  : 0/0
 25807 ;;		Unchanged: 0/0
 25808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25810 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25812 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25813 ;;Total ram usage:        2 bytes
 25814 ;; Hardware stack levels used:    1
 25815 ;; Hardware stack levels required when called:   11
 25816 ;; This function calls:
 25817 ;;		_ResetSenseData
 25818 ;;		_USBStallEndpoint
 25819 ;; This function is called by:
 25820 ;;		_MSDProcessCommandMediaAbsent
 25821 ;;		_MSDProcessCommandMediaPresent
 25822 ;;		_MSDCheckForErrorCases
 25823 ;; This function uses a non-reentrant model
 25824 ;;
 25825                           
 25826                           	psect	text82
 25827  00F3B8                     __ptext82:
 25828                           	opt stack 0
 25829  00F3B8                     _MSDErrorHandler:
 25830                           	opt stack 13
 25831                           
 25832                           ; BSR set to: 0
 25833                           ;incstack = 0
 25834                           ;MSDErrorHandler@ErrorCase stored from wreg
 25835  00F3B8  0100               	movlb	0	; () banked
 25836  00F3BA  6F68               	movwf	MSDErrorHandler@ErrorCase& (0+255),b
 25837                           
 25838                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 25839  00F3BC  0100               	movlb	0	; () banked
 25840  00F3BE  51CE               	movf	_USBMSDInHandle& (0+255),w,b
 25841  00F3C0  11CF               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 25842  00F3C2  B4D8               	btfsc	status,2,c
 25843  00F3C4  D006               	goto	u16270
 25844                           
 25845                           ; BSR set to: 0
 25846  00F3C6  C0CE  FFD9         	movff	_USBMSDInHandle,fsr2l
 25847  00F3CA  C0CF  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 25848  00F3CE  BEDF               	btfsc	indf2,7,c
 25849  00F3D0  0012               	return	
 25850  00F3D2                     u16270:
 25851                           
 25852                           ; BSR set to: 0
 25853                           
 25854                           ; BSR set to: 0
 25855  00F3D2  51D0               	movf	_USBMSDOutHandle& (0+255),w,b
 25856  00F3D4  11D1               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 25857  00F3D6  B4D8               	btfsc	status,2,c
 25858  00F3D8  D006               	goto	l757
 25859                           
 25860                           ; BSR set to: 0
 25861  00F3DA  C0D0  FFD9         	movff	_USBMSDOutHandle,fsr2l
 25862  00F3DE  C0D1  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 25863  00F3E2  BEDF               	btfsc	indf2,7,c
 25864  00F3E4  0012               	return	
 25865  00F3E6                     l757:
 25866                           
 25867                           ; BSR set to: 0
 25868                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 25869  00F3E6  C025  F069         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 25870                           
 25871                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 25872  00F3EA  69D2               	setf	_MSDCommandState& (0+255),b
 25873                           
 25874                           ; BSR set to: 0
 25875                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 25876  00F3EC  0E00               	movlw	0
 25877  00F3EE  0101               	movlb	1	; () banked
 25878  00F3F0  6F72               	movwf	_MSDReadState& (0+255),b
 25879                           
 25880                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 25881  00F3F2  0E00               	movlw	0
 25882  00F3F4  6F71               	movwf	_MSDWriteState& (0+255),b
 25883                           
 25884                           ; BSR set to: 1
 25885                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 25886  00F3F6  C108  FD88         	movff	_gblCBW+8,3464	;volatile
 25887  00F3FA  C109  FD89         	movff	_gblCBW+9,3465	;volatile
 25888  00F3FE  C10A  FD8A         	movff	_gblCBW+10,3466	;volatile
 25889  00F402  C10B  FD8B         	movff	_gblCBW+11,3467	;volatile
 25890                           
 25891                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 25892  00F406  0E01               	movlw	1
 25893  00F408  010D               	movlb	13	; () banked
 25894  00F40A  6F8C               	movwf	140,b	;volatile
 25895                           
 25896                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 25897  00F40C  0E03               	movlw	3
 25898  00F40E  6E25               	movwf	_MSD_State,c
 25899                           
 25900                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 25901  00F410  D04B               	goto	l763
 25902  00F412                     
 25903                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 25904                           
 25905                           ; BSR set to: 13
 25906  00F412  0E02               	movlw	2
 25907  00F414  010D               	movlb	13	; () banked
 25908  00F416  6F8C               	movwf	140,b	;volatile
 25909                           
 25910                           ;usb_device_msd.c: 1607: break;
 25911  00F418  0012               	return	
 25912  00F41A                     
 25913                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 25914                           
 25915                           ; BSR set to: 13
 25916  00F41A  0E01               	movlw	1
 25917  00F41C  0100               	movlb	0	; () banked
 25918  00F41E  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 25919  00F420  0E02               	movlw	2
 25920  00F422  ECFE  F07B         	call	_USBStallEndpoint
 25921                           
 25922                           ;usb_device_msd.c: 1611: break;
 25923  00F426  0012               	return	
 25924  00F428                     
 25925                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 25926  00F428  0E02               	movlw	2
 25927  00F42A  010D               	movlb	13	; () banked
 25928  00F42C  6F8C               	movwf	140,b	;volatile
 25929                           
 25930                           ; BSR set to: 13
 25931                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 25932  00F42E  0E01               	movlw	1
 25933  00F430  0100               	movlb	0	; () banked
 25934  00F432  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 25935  00F434  0E02               	movlw	2
 25936  00F436  ECFE  F07B         	call	_USBStallEndpoint
 25937                           
 25938                           ;usb_device_msd.c: 1616: break;
 25939  00F43A  0012               	return	
 25940  00F43C                     
 25941                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 25942  00F43C  0E00               	movlw	0
 25943  00F43E  0100               	movlb	0	; () banked
 25944  00F440  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 25945  00F442  0E02               	movlw	2
 25946  00F444  ECFE  F07B         	call	_USBStallEndpoint
 25947                           
 25948                           ;usb_device_msd.c: 1620: break;
 25949  00F448  0012               	return	
 25950  00F44A                     
 25951                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 25952  00F44A  0E02               	movlw	2
 25953  00F44C  010D               	movlb	13	; () banked
 25954  00F44E  6F8C               	movwf	140,b	;volatile
 25955                           
 25956                           ; BSR set to: 13
 25957                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 25958  00F450  0E00               	movlw	0
 25959  00F452  0100               	movlb	0	; () banked
 25960  00F454  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 25961  00F456  0E02               	movlw	2
 25962  00F458  ECFE  F07B         	call	_USBStallEndpoint
 25963                           
 25964                           ;usb_device_msd.c: 1625: break;
 25965  00F45C  0012               	return	
 25966  00F45E                     
 25967                           ;usb_device_msd.c: 1628: ResetSenseData();
 25968  00F45E  ECD3  F08C         	call	_ResetSenseData	;wreg free
 25969                           
 25970                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 25971  00F462  0101               	movlb	1	; () banked
 25972  00F464  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 25973  00F466  0BF0               	andlw	-16
 25974  00F468  0905               	iorlw	5
 25975  00F46A  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 25976                           
 25977                           ; BSR set to: 1
 25978                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 25979  00F46C  0E20               	movlw	32
 25980  00F46E  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 25981                           
 25982                           ; BSR set to: 1
 25983                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 25984  00F470  0E00               	movlw	0
 25985  00F472  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 25986                           
 25987                           ; BSR set to: 1
 25988                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 25989  00F474  0E02               	movlw	2
 25990  00F476  0100               	movlb	0	; () banked
 25991  00F478  1969               	xorwf	MSDErrorHandler@OldMSD_State& (0+255),w,b
 25992  00F47A  A4D8               	btfss	status,2,c
 25993  00F47C  D00E               	goto	l771
 25994                           
 25995                           ; BSR set to: 0
 25996  00F47E  0101               	movlb	1	; () banked
 25997  00F480  5108               	movf	(_gblCBW+8)& (0+255),w,b
 25998  00F482  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 25999  00F484  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 26000  00F486  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 26001  00F488  B4D8               	btfsc	status,2,c
 26002  00F48A  D007               	goto	l771
 26003                           
 26004                           ; BSR set to: 1
 26005                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 26006  00F48C  0E00               	movlw	0
 26007  00F48E  0100               	movlb	0	; () banked
 26008  00F490  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 26009  00F492  0E02               	movlw	2
 26010  00F494  ECFE  F07B         	call	_USBStallEndpoint
 26011                           
 26012                           ;usb_device_msd.c: 1636: }
 26013  00F498  0012               	return	
 26014  00F49A                     l771:
 26015                           
 26016                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 26017  00F49A  0E01               	movlw	1
 26018  00F49C  0100               	movlb	0	; () banked
 26019  00F49E  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 26020  00F4A0  0E02               	movlw	2
 26021  00F4A2  ECFE  F07B         	call	_USBStallEndpoint
 26022                           
 26023                           ;usb_device_msd.c: 1644: }
 26024                           
 26025                           ;usb_device_msd.c: 1643: break;
 26026                           
 26027                           ;usb_device_msd.c: 1642: default:
 26028                           
 26029                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 26030  00F4A6  0012               	return	
 26031  00F4A8                     l763:
 26032  00F4A8  0100               	movlb	0	; () banked
 26033  00F4AA  5168               	movf	MSDErrorHandler@ErrorCase& (0+255),w,b
 26034                           
 26035                           ; Switch size 1, requested type "space"
 26036                           ; Number of cases is 6, Range of values is 1 to 127
 26037                           ; switch strategies available:
 26038                           ; Name         Instructions Cycles
 26039                           ; simple_byte           19    10 (average)
 26040                           ;	Chosen strategy is simple_byte
 26041  00F4AC  0A01               	xorlw	1	; case 1
 26042  00F4AE  B4D8               	btfsc	status,2,c
 26043  00F4B0  D7B0               	goto	l764
 26044  00F4B2  0A03               	xorlw	3	; case 2
 26045  00F4B4  B4D8               	btfsc	status,2,c
 26046  00F4B6  D7B1               	goto	l766
 26047  00F4B8  0A01               	xorlw	1	; case 3
 26048  00F4BA  B4D8               	btfsc	status,2,c
 26049  00F4BC  D7B5               	goto	l767
 26050  00F4BE  0A07               	xorlw	7	; case 4
 26051  00F4C0  B4D8               	btfsc	status,2,c
 26052  00F4C2  D7BC               	goto	l768
 26053  00F4C4  0A01               	xorlw	1	; case 5
 26054  00F4C6  B4D8               	btfsc	status,2,c
 26055  00F4C8  D7C0               	goto	l769
 26056  00F4CA  0A7A               	xorlw	122	; case 127
 26057  00F4CC  A4D8               	btfss	status,2,c
 26058  00F4CE  0012               	return	
 26059  00F4D0  D7C6               	goto	l770
 26060  00F4D2                     __end_of_MSDErrorHandler:
 26061                           	opt stack 0
 26062                           tosu	equ	0xFFF
 26063                           tosh	equ	0xFFE
 26064                           tosl	equ	0xFFD
 26065                           pclath	equ	0xFFA
 26066                           tblptru	equ	0xFF8
 26067                           tblptrh	equ	0xFF7
 26068                           tblptrl	equ	0xFF6
 26069                           tablat	equ	0xFF5
 26070                           prodh	equ	0xFF4
 26071                           prodl	equ	0xFF3
 26072                           intcon	equ	0xFF2
 26073                           postinc0	equ	0xFEE
 26074                           wreg	equ	0xFE8
 26075                           indf1	equ	0xFE7
 26076                           postdec1	equ	0xFE5
 26077                           plusw1	equ	0xFE3
 26078                           fsr1h	equ	0xFE2
 26079                           fsr1l	equ	0xFE1
 26080                           indf2	equ	0xFDF
 26081                           postinc2	equ	0xFDE
 26082                           postdec2	equ	0xFDD
 26083                           plusw2	equ	0xFDB
 26084                           fsr2h	equ	0xFDA
 26085                           fsr2l	equ	0xFD9
 26086                           status	equ	0xFD8
 26087                           
 26088 ;; *************** function _USBStallEndpoint *****************
 26089 ;; Defined at:
 26090 ;;		line 1073 in file "usb_device.c"
 26091 ;; Parameters:    Size  Location     Type
 26092 ;;  ep              1    wreg     unsigned char 
 26093 ;;  dir             1    0[BANK0 ] unsigned char 
 26094 ;; Auto vars:     Size  Location     Type
 26095 ;;  ep              1    5[BANK0 ] unsigned char 
 26096 ;;  p               2    6[BANK0 ] PTR struct __BDT
 26097 ;;		 -> BDT(48), 
 26098 ;; Return value:  Size  Location     Type
 26099 ;;                  1    wreg      void 
 26100 ;; Registers used:
 26101 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26102 ;; Tracked objects:
 26103 ;;		On entry : 0/0
 26104 ;;		On exit  : 0/0
 26105 ;;		Unchanged: 0/0
 26106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26107 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26108 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26109 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26110 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26111 ;;Total ram usage:        8 bytes
 26112 ;; Hardware stack levels used:    1
 26113 ;; Hardware stack levels required when called:   10
 26114 ;; This function calls:
 26115 ;;		Nothing
 26116 ;; This function is called by:
 26117 ;;		_MSDTasks
 26118 ;;		_MSDReadHandler
 26119 ;;		_MSDWriteHandler
 26120 ;;		_MSDErrorHandler
 26121 ;; This function uses a non-reentrant model
 26122 ;;
 26123                           
 26124                           	psect	text83
 26125  00F7FC                     __ptext83:
 26126                           	opt stack 0
 26127  00F7FC                     _USBStallEndpoint:
 26128                           	opt stack 18
 26129                           
 26130                           ;incstack = 0
 26131                           ;USBStallEndpoint@ep stored from wreg
 26132  00F7FC  0100               	movlb	0	; () banked
 26133  00F7FE  6F65               	movwf	USBStallEndpoint@ep& (0+255),b
 26134                           
 26135                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 26136  00F800  0100               	movlb	0	; () banked
 26137  00F802  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 26138  00F804  A4D8               	btfss	status,2,c
 26139  00F806  D02B               	goto	l192
 26140                           
 26141                           ; BSR set to: 0
 26142                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 26143  00F808  EE20 F001          	lfsr	2,1
 26144  00F80C  501C               	movf	_pBDTEntryEP0OutNext,w,c
 26145  00F80E  26D9               	addwf	fsr2l,f,c
 26146  00F810  501D               	movf	_pBDTEntryEP0OutNext+1,w,c
 26147  00F812  22DA               	addwfc	fsr2h,f,c
 26148  00F814  0E08               	movlw	8
 26149  00F816  6EDF               	movwf	indf2,c
 26150                           
 26151                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 26152  00F818  EE20 F002          	lfsr	2,2
 26153  00F81C  501C               	movf	_pBDTEntryEP0OutNext,w,c
 26154  00F81E  26D9               	addwf	fsr2l,f,c
 26155  00F820  501D               	movf	_pBDTEntryEP0OutNext+1,w,c
 26156  00F822  22DA               	addwfc	fsr2h,f,c
 26157  00F824  0E30               	movlw	48
 26158  00F826  6EDE               	movwf	postinc2,c
 26159  00F828  0E0D               	movlw	13
 26160  00F82A  6EDD               	movwf	postdec2,c
 26161                           
 26162                           ; BSR set to: 0
 26163                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 26164  00F82C  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26165  00F830  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26166  00F834  0E0C               	movlw	12
 26167  00F836  6EDF               	movwf	indf2,c
 26168                           
 26169                           ; BSR set to: 0
 26170                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26171  00F838  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26172  00F83C  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26173  00F840  0E00               	movlw	0
 26174  00F842  8EDB               	bsf	plusw2,7,c
 26175                           
 26176                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 26177  00F844  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 26178  00F848  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26179  00F84C  0E04               	movlw	4
 26180  00F84E  6EDF               	movwf	indf2,c
 26181                           
 26182                           ; BSR set to: 0
 26183                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 26184  00F850  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 26185  00F854  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26186  00F858  0E00               	movlw	0
 26187  00F85A  8EDB               	bsf	plusw2,7,c
 26188                           
 26189                           ;usb_device.c: 1089: }
 26190  00F85C  0012               	return	
 26191  00F85E                     l192:
 26192                           
 26193                           ; BSR set to: 0
 26194                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 26195                           
 26196                           ; BSR set to: 0
 26197  00F85E  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 26198  00F860  6F61               	movwf	??_USBStallEndpoint& (0+255),b
 26199  00F862  6B62               	clrf	(??_USBStallEndpoint+1)& (0+255),b
 26200  00F864  90D8               	bcf	status,0,c
 26201  00F866  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 26202  00F868  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 26203  00F86A  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 26204  00F86C  6F63               	movwf	(??_USBStallEndpoint+2)& (0+255),b
 26205  00F86E  6B64               	clrf	(??_USBStallEndpoint+3)& (0+255),b
 26206  00F870  90D8               	bcf	status,0,c
 26207  00F872  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 26208  00F874  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 26209  00F876  90D8               	bcf	status,0,c
 26210  00F878  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 26211  00F87A  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 26212  00F87C  5161               	movf	??_USBStallEndpoint& (0+255),w,b
 26213  00F87E  2763               	addwf	(??_USBStallEndpoint+2)& (0+255),f,b
 26214  00F880  5162               	movf	(??_USBStallEndpoint+1)& (0+255),w,b
 26215  00F882  2364               	addwfc	(??_USBStallEndpoint+3)& (0+255),f,b
 26216  00F884  90D8               	bcf	status,0,c
 26217  00F886  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 26218  00F888  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 26219  00F88A  90D8               	bcf	status,0,c
 26220  00F88C  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 26221  00F88E  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 26222  00F890  0E00               	movlw	0
 26223  00F892  2563               	addwf	(??_USBStallEndpoint+2)& (0+255),w,b
 26224  00F894  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 26225  00F896  0E0D               	movlw	13
 26226  00F898  2164               	addwfc	(??_USBStallEndpoint+3)& (0+255),w,b
 26227  00F89A  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 26228                           
 26229                           ; BSR set to: 0
 26230                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 26231  00F89C  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 26232  00F8A0  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 26233  00F8A4  0E00               	movlw	0
 26234  00F8A6  84DB               	bsf	plusw2,2,c
 26235                           
 26236                           ; BSR set to: 0
 26237                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 26238  00F8A8  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 26239  00F8AC  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 26240  00F8B0  0E00               	movlw	0
 26241  00F8B2  8EDB               	bsf	plusw2,7,c
 26242                           
 26243                           ; BSR set to: 0
 26244                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 26245  00F8B4  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 26246  00F8B6  0D04               	mullw	4
 26247  00F8B8  CFF3 F061          	movff	prodl,??_USBStallEndpoint
 26248  00F8BC  CFF4 F062          	movff	prodh,??_USBStallEndpoint+1
 26249  00F8C0  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 26250  00F8C2  0D02               	mullw	2
 26251  00F8C4  50F3               	movf	prodl,w,c
 26252  00F8C6  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 26253  00F8C8  50F4               	movf	prodh,w,c
 26254  00F8CA  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 26255  00F8CC  90D8               	bcf	status,0,c
 26256  00F8CE  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 26257  00F8D0  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 26258  00F8D2  90D8               	bcf	status,0,c
 26259  00F8D4  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 26260  00F8D6  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 26261  00F8D8  0E04               	movlw	4
 26262  00F8DA  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 26263  00F8DC  0E00               	movlw	0
 26264  00F8DE  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 26265  00F8E0  0E00               	movlw	0
 26266  00F8E2  2561               	addwf	??_USBStallEndpoint& (0+255),w,b
 26267  00F8E4  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 26268  00F8E6  0E0D               	movlw	13
 26269  00F8E8  2162               	addwfc	(??_USBStallEndpoint+1)& (0+255),w,b
 26270  00F8EA  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 26271                           
 26272                           ; BSR set to: 0
 26273                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 26274  00F8EC  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 26275  00F8F0  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 26276  00F8F4  0E00               	movlw	0
 26277  00F8F6  84DB               	bsf	plusw2,2,c
 26278                           
 26279                           ; BSR set to: 0
 26280                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 26281  00F8F8  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 26282  00F8FC  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 26283  00F900  0E00               	movlw	0
 26284  00F902  8EDB               	bsf	plusw2,7,c
 26285  00F904  0012               	return	
 26286  00F906                     __end_of_USBStallEndpoint:
 26287                           	opt stack 0
 26288                           tosu	equ	0xFFF
 26289                           tosh	equ	0xFFE
 26290                           tosl	equ	0xFFD
 26291                           pclath	equ	0xFFA
 26292                           tblptru	equ	0xFF8
 26293                           tblptrh	equ	0xFF7
 26294                           tblptrl	equ	0xFF6
 26295                           tablat	equ	0xFF5
 26296                           prodh	equ	0xFF4
 26297                           prodl	equ	0xFF3
 26298                           intcon	equ	0xFF2
 26299                           postinc0	equ	0xFEE
 26300                           wreg	equ	0xFE8
 26301                           indf1	equ	0xFE7
 26302                           postdec1	equ	0xFE5
 26303                           plusw1	equ	0xFE3
 26304                           fsr1h	equ	0xFE2
 26305                           fsr1l	equ	0xFE1
 26306                           indf2	equ	0xFDF
 26307                           postinc2	equ	0xFDE
 26308                           postdec2	equ	0xFDD
 26309                           plusw2	equ	0xFDB
 26310                           fsr2h	equ	0xFDA
 26311                           fsr2l	equ	0xFD9
 26312                           status	equ	0xFD8
 26313                           
 26314 ;; *************** function _ResetSenseData *****************
 26315 ;; Defined at:
 26316 ;;		line 1373 in file "usb_device_msd.c"
 26317 ;; Parameters:    Size  Location     Type
 26318 ;;		None
 26319 ;; Auto vars:     Size  Location     Type
 26320 ;;		None
 26321 ;; Return value:  Size  Location     Type
 26322 ;;                  1    wreg      void 
 26323 ;; Registers used:
 26324 ;;		wreg, status,2
 26325 ;; Tracked objects:
 26326 ;;		On entry : 0/0
 26327 ;;		On exit  : 0/0
 26328 ;;		Unchanged: 0/0
 26329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26334 ;;Total ram usage:        0 bytes
 26335 ;; Hardware stack levels used:    1
 26336 ;; Hardware stack levels required when called:   10
 26337 ;; This function calls:
 26338 ;;		Nothing
 26339 ;; This function is called by:
 26340 ;;		_MSDProcessCommandMediaAbsent
 26341 ;;		_MSDProcessCommandMediaPresent
 26342 ;;		_MSDErrorHandler
 26343 ;; This function uses a non-reentrant model
 26344 ;;
 26345                           
 26346                           	psect	text84
 26347  0119A6                     __ptext84:
 26348                           	opt stack 0
 26349  0119A6                     _ResetSenseData:
 26350                           	opt stack 16
 26351                           
 26352                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 26353                           
 26354                           ; BSR set to: 0
 26355                           ;incstack = 0
 26356  0119A6  0101               	movlb	1	; () banked
 26357  0119A8  911F               	bcf	_gblSenseData& (0+255),0,b
 26358  0119AA  931F               	bcf	_gblSenseData& (0+255),1,b
 26359  0119AC  951F               	bcf	_gblSenseData& (0+255),2,b
 26360  0119AE  971F               	bcf	_gblSenseData& (0+255),3,b
 26361  0119B0  891F               	bsf	_gblSenseData& (0+255),4,b
 26362  0119B2  8B1F               	bsf	_gblSenseData& (0+255),5,b
 26363  0119B4  8D1F               	bsf	_gblSenseData& (0+255),6,b
 26364                           
 26365                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 26366  0119B6  9F1F               	bcf	_gblSenseData& (0+255),7,b
 26367                           
 26368                           ; BSR set to: 1
 26369                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 26370  0119B8  0E00               	movlw	0
 26371  0119BA  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 26372                           
 26373                           ; BSR set to: 1
 26374                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 26375  0119BC  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 26376  0119BE  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 26377  0119C0  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 26378  0119C2  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 26379                           
 26380                           ; BSR set to: 1
 26381                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 26382  0119C4  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 26383                           
 26384                           ; BSR set to: 1
 26385                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 26386  0119C6  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 26387                           
 26388                           ; BSR set to: 1
 26389                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 26390  0119C8  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 26391                           
 26392                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 26393  0119CA  0E00               	movlw	0
 26394  0119CC  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 26395                           
 26396                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 26397  0119CE  0E00               	movlw	0
 26398  0119D0  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 26399                           
 26400                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 26401  0119D2  0E00               	movlw	0
 26402  0119D4  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 26403                           
 26404                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 26405  0119D6  0E00               	movlw	0
 26406  0119D8  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 26407                           
 26408                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 26409  0119DA  0E0A               	movlw	10
 26410  0119DC  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 26411                           
 26412                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 26413  0119DE  0E00               	movlw	0
 26414  0119E0  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 26415  0119E2  0E00               	movlw	0
 26416  0119E4  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 26417  0119E6  0E00               	movlw	0
 26418  0119E8  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 26419  0119EA  0E00               	movlw	0
 26420  0119EC  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 26421                           
 26422                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 26423  0119EE  0E00               	movlw	0
 26424  0119F0  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 26425                           
 26426                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 26427  0119F2  0E00               	movlw	0
 26428  0119F4  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 26429                           
 26430                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 26431  0119F6  0E00               	movlw	0
 26432  0119F8  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 26433                           
 26434                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 26435  0119FA  0E00               	movlw	0
 26436  0119FC  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 26437                           
 26438                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 26439  0119FE  0E00               	movlw	0
 26440  011A00  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 26441                           
 26442                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 26443  011A02  0E00               	movlw	0
 26444  011A04  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 26445                           
 26446                           ; BSR set to: 1
 26447  011A06  0012               	return		;funcret
 26448  011A08                     __end_of_ResetSenseData:
 26449                           	opt stack 0
 26450                           tosu	equ	0xFFF
 26451                           tosh	equ	0xFFE
 26452                           tosl	equ	0xFFD
 26453                           pclath	equ	0xFFA
 26454                           tblptru	equ	0xFF8
 26455                           tblptrh	equ	0xFF7
 26456                           tblptrl	equ	0xFF6
 26457                           tablat	equ	0xFF5
 26458                           prodh	equ	0xFF4
 26459                           prodl	equ	0xFF3
 26460                           intcon	equ	0xFF2
 26461                           postinc0	equ	0xFEE
 26462                           wreg	equ	0xFE8
 26463                           indf1	equ	0xFE7
 26464                           postdec1	equ	0xFE5
 26465                           plusw1	equ	0xFE3
 26466                           fsr1h	equ	0xFE2
 26467                           fsr1l	equ	0xFE1
 26468                           indf2	equ	0xFDF
 26469                           postinc2	equ	0xFDE
 26470                           postdec2	equ	0xFDD
 26471                           plusw2	equ	0xFDB
 26472                           fsr2h	equ	0xFDA
 26473                           fsr2l	equ	0xFD9
 26474                           status	equ	0xFD8
 26475                           
 26476 ;; *************** function _ExternalFlash_SectorRead *****************
 26477 ;; Defined at:
 26478 ;;		line 40 in file "external_flash.c"
 26479 ;; Parameters:    Size  Location     Type
 26480 ;;  config          2   43[BANK0 ] PTR void 
 26481 ;;		 -> NULL(0), 
 26482 ;;  sector_addr     4   45[BANK0 ] unsigned long 
 26483 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 26484 ;;		 -> msd_buffer(512), 
 26485 ;; Auto vars:     Size  Location     Type
 26486 ;;  page            2   51[BANK0 ] unsigned int 
 26487 ;; Return value:  Size  Location     Type
 26488 ;;                  1    wreg      unsigned char 
 26489 ;; Registers used:
 26490 ;;		wreg, status,2, status,0, cstack
 26491 ;; Tracked objects:
 26492 ;;		On entry : 0/0
 26493 ;;		On exit  : 0/0
 26494 ;;		Unchanged: 0/0
 26495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26496 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26497 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26499 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26500 ;;Total ram usage:       10 bytes
 26501 ;; Hardware stack levels used:    1
 26502 ;; Hardware stack levels required when called:   15
 26503 ;; This function calls:
 26504 ;;		_flash_sector_read
 26505 ;; This function is called by:
 26506 ;;		_MSDReadHandler
 26507 ;; This function uses a non-reentrant model
 26508 ;;
 26509                           
 26510                           	psect	text85
 26511  0124B2                     __ptext85:
 26512                           	opt stack 0
 26513  0124B2                     _ExternalFlash_SectorRead:
 26514                           	opt stack 10
 26515                           
 26516                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 26517                           
 26518                           ; BSR set to: 1
 26519                           ;incstack = 0
 26520  0124B2  C08D  F093         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 26521  0124B6  C08E  F094         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 26522                           
 26523                           ;external_flash.c: 45: if(sector_addr >= 8192)
 26524  0124BA  0100               	movlb	0	; () banked
 26525  0124BC  5190               	movf	(ExternalFlash_SectorRead@sector_addr+3)& (0+255),w,b
 26526  0124BE  118F               	iorwf	(ExternalFlash_SectorRead@sector_addr+2)& (0+255),w,b
 26527  0124C0  E104               	bnz	u16530
 26528  0124C2  0E20               	movlw	32
 26529  0124C4  5D8E               	subwf	(ExternalFlash_SectorRead@sector_addr+1)& (0+255),w,b
 26530  0124C6  A0D8               	btfss	status,0,c
 26531  0124C8  D002               	goto	l1621
 26532  0124CA                     u16530:
 26533                           
 26534                           ; BSR set to: 0
 26535                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 26536  0124CA  0E00               	movlw	0
 26537                           
 26538                           ; BSR set to: 0
 26539  0124CC  0012               	return	
 26540  0124CE                     l1621:
 26541                           
 26542                           ; BSR set to: 0
 26543                           ;external_flash.c: 48: };external_flash.c: 51: flash_sector_read(page, buffer);
 26544                           
 26545                           ; BSR set to: 0
 26546  0124CE  C093  F087         	movff	ExternalFlash_SectorRead@page,flash_sector_read@page
 26547  0124D2  C094  F088         	movff	ExternalFlash_SectorRead@page+1,flash_sector_read@page+1
 26548  0124D6  C091  F089         	movff	ExternalFlash_SectorRead@buffer,flash_sector_read@data
 26549  0124DA  C092  F08A         	movff	ExternalFlash_SectorRead@buffer+1,flash_sector_read@data+1
 26550  0124DE  EC74  F093         	call	_flash_sector_read	;wreg free
 26551                           
 26552                           ;external_flash.c: 53: return 1;
 26553  0124E2  0E01               	movlw	1
 26554  0124E4  0012               	return	
 26555  0124E6                     __end_of_ExternalFlash_SectorRead:
 26556                           	opt stack 0
 26557                           tosu	equ	0xFFF
 26558                           tosh	equ	0xFFE
 26559                           tosl	equ	0xFFD
 26560                           pclath	equ	0xFFA
 26561                           tblptru	equ	0xFF8
 26562                           tblptrh	equ	0xFF7
 26563                           tblptrl	equ	0xFF6
 26564                           tablat	equ	0xFF5
 26565                           prodh	equ	0xFF4
 26566                           prodl	equ	0xFF3
 26567                           intcon	equ	0xFF2
 26568                           postinc0	equ	0xFEE
 26569                           wreg	equ	0xFE8
 26570                           indf1	equ	0xFE7
 26571                           postdec1	equ	0xFE5
 26572                           plusw1	equ	0xFE3
 26573                           fsr1h	equ	0xFE2
 26574                           fsr1l	equ	0xFE1
 26575                           indf2	equ	0xFDF
 26576                           postinc2	equ	0xFDE
 26577                           postdec2	equ	0xFDD
 26578                           plusw2	equ	0xFDB
 26579                           fsr2h	equ	0xFDA
 26580                           fsr2l	equ	0xFD9
 26581                           status	equ	0xFD8
 26582                           
 26583 ;; *************** function _flash_sector_read *****************
 26584 ;; Defined at:
 26585 ;;		line 426 in file "flash.c"
 26586 ;; Parameters:    Size  Location     Type
 26587 ;;  page            2   39[BANK0 ] unsigned int 
 26588 ;;  data            2   41[BANK0 ] PTR unsigned char 
 26589 ;;		 -> buffer(512), msd_buffer(512), 
 26590 ;; Auto vars:     Size  Location     Type
 26591 ;;		None
 26592 ;; Return value:  Size  Location     Type
 26593 ;;                  1    wreg      void 
 26594 ;; Registers used:
 26595 ;;		wreg, status,2, status,0, cstack
 26596 ;; Tracked objects:
 26597 ;;		On entry : 0/0
 26598 ;;		On exit  : 0/0
 26599 ;;		Unchanged: 0/0
 26600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26601 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26604 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26605 ;;Total ram usage:        4 bytes
 26606 ;; Hardware stack levels used:    1
 26607 ;; Hardware stack levels required when called:   14
 26608 ;; This function calls:
 26609 ;;		__flash_partial_read
 26610 ;; This function is called by:
 26611 ;;		_ExternalFlash_SectorRead
 26612 ;;		_fat_get_format_status
 26613 ;;		__get_available_cluster
 26614 ;;		__find_nth_cluster
 26615 ;;		__make_cluster_chain
 26616 ;;		_fat_find_file
 26617 ;; This function uses a non-reentrant model
 26618 ;;
 26619                           
 26620                           	psect	text86
 26621  0126E8                     __ptext86:
 26622                           	opt stack 0
 26623  0126E8                     _flash_sector_read:
 26624                           	opt stack 13
 26625                           
 26626                           ;flash.c: 429: _flash_partial_read(page, 0, 512, data);
 26627                           
 26628                           ;incstack = 0
 26629  0126E8  C087  F073         	movff	flash_sector_read@page,__flash_partial_read@page
 26630  0126EC  C088  F074         	movff	flash_sector_read@page+1,__flash_partial_read@page+1
 26631  0126F0  0E00               	movlw	0
 26632  0126F2  0100               	movlb	0	; () banked
 26633  0126F4  6F76               	movwf	(__flash_partial_read@start+1)& (0+255),b
 26634  0126F6  0E00               	movlw	0
 26635  0126F8  6F75               	movwf	__flash_partial_read@start& (0+255),b
 26636  0126FA  0E02               	movlw	2
 26637  0126FC  6F78               	movwf	(__flash_partial_read@length+1)& (0+255),b
 26638  0126FE  0E00               	movlw	0
 26639  012700  6F77               	movwf	__flash_partial_read@length& (0+255),b
 26640  012702  C089  F079         	movff	flash_sector_read@data,__flash_partial_read@data
 26641  012706  C08A  F07A         	movff	flash_sector_read@data+1,__flash_partial_read@data+1
 26642  01270A  EC1D  F08B         	call	__flash_partial_read	;wreg free
 26643  01270E  0012               	return		;funcret
 26644  012710                     __end_of_flash_sector_read:
 26645                           	opt stack 0
 26646                           tosu	equ	0xFFF
 26647                           tosh	equ	0xFFE
 26648                           tosl	equ	0xFFD
 26649                           pclath	equ	0xFFA
 26650                           tblptru	equ	0xFF8
 26651                           tblptrh	equ	0xFF7
 26652                           tblptrl	equ	0xFF6
 26653                           tablat	equ	0xFF5
 26654                           prodh	equ	0xFF4
 26655                           prodl	equ	0xFF3
 26656                           intcon	equ	0xFF2
 26657                           postinc0	equ	0xFEE
 26658                           wreg	equ	0xFE8
 26659                           indf1	equ	0xFE7
 26660                           postdec1	equ	0xFE5
 26661                           plusw1	equ	0xFE3
 26662                           fsr1h	equ	0xFE2
 26663                           fsr1l	equ	0xFE1
 26664                           indf2	equ	0xFDF
 26665                           postinc2	equ	0xFDE
 26666                           postdec2	equ	0xFDD
 26667                           plusw2	equ	0xFDB
 26668                           fsr2h	equ	0xFDA
 26669                           fsr2l	equ	0xFD9
 26670                           status	equ	0xFD8
 26671                           
 26672 ;; *************** function __flash_partial_read *****************
 26673 ;; Defined at:
 26674 ;;		line 309 in file "flash.c"
 26675 ;; Parameters:    Size  Location     Type
 26676 ;;  page            2   19[BANK0 ] unsigned int 
 26677 ;;  start           2   21[BANK0 ] unsigned int 
 26678 ;;  length          2   23[BANK0 ] unsigned int 
 26679 ;;  data            2   25[BANK0 ] PTR unsigned char 
 26680 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 26681 ;;		 -> fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@firs
      +t_byte(1), 
 26682 ;;		 -> buffer(512), msd_buffer(512), 
 26683 ;; Auto vars:     Size  Location     Type
 26684 ;;  command         4   31[BANK0 ] unsigned char [4]
 26685 ;;  address         4   35[BANK0 ] unsigned long 
 26686 ;; Return value:  Size  Location     Type
 26687 ;;                  1    wreg      void 
 26688 ;; Registers used:
 26689 ;;		wreg, status,2, status,0, cstack
 26690 ;; Tracked objects:
 26691 ;;		On entry : 0/0
 26692 ;;		On exit  : 0/0
 26693 ;;		Unchanged: 0/0
 26694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26695 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26696 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26697 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26698 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26699 ;;Total ram usage:       20 bytes
 26700 ;; Hardware stack levels used:    1
 26701 ;; Hardware stack levels required when called:   13
 26702 ;; This function calls:
 26703 ;;		__flash_is_busy
 26704 ;;		_spi_tx_rx
 26705 ;; This function is called by:
 26706 ;;		_flash_sector_read
 26707 ;;		_flash_partial_read
 26708 ;; This function uses a non-reentrant model
 26709 ;;
 26710                           
 26711                           	psect	text87
 26712  01163A                     __ptext87:
 26713                           	opt stack 0
 26714  01163A                     __flash_partial_read:
 26715                           	opt stack 13
 26716                           
 26717                           ;flash.c: 311: uint32_t address;;flash.c: 312: uint8_t command[4];;flash.c: 315: while(_
      +                          flash_is_busy());
 26718                           
 26719                           ;incstack = 0
 26720  01163A  ECAC  F093         	call	__flash_is_busy	;wreg free
 26721  01163E  0900               	iorlw	0
 26722  011640  A4D8               	btfss	status,2,c
 26723  011642  D7FB               	goto	__flash_partial_read
 26724                           
 26725                           ;flash.c: 318: address = page;
 26726  011644  C073  F083         	movff	__flash_partial_read@page,__flash_partial_read@address
 26727  011648  C074  F084         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 26728  01164C  0100               	movlb	0	; () banked
 26729  01164E  6B85               	clrf	(__flash_partial_read@address+2)& (0+255),b
 26730  011650  6B86               	clrf	(__flash_partial_read@address+3)& (0+255),b
 26731                           
 26732                           ; BSR set to: 0
 26733                           ;flash.c: 319: address <<= 9;
 26734  011652  0E09               	movlw	9
 26735  011654                     u16195:
 26736  011654  90D8               	bcf	status,0,c
 26737  011656  3783               	rlcf	__flash_partial_read@address& (0+255),f,b
 26738  011658  3784               	rlcf	(__flash_partial_read@address+1)& (0+255),f,b
 26739  01165A  3785               	rlcf	(__flash_partial_read@address+2)& (0+255),f,b
 26740  01165C  3786               	rlcf	(__flash_partial_read@address+3)& (0+255),f,b
 26741  01165E  2EE8               	decfsz	wreg,f,c
 26742  011660  D7F9               	goto	u16195
 26743                           
 26744                           ; BSR set to: 0
 26745                           ;flash.c: 320: address |= start;
 26746  011662  5175               	movf	__flash_partial_read@start& (0+255),w,b
 26747  011664  6F7B               	movwf	??__flash_partial_read& (0+255),b
 26748  011666  5176               	movf	(__flash_partial_read@start+1)& (0+255),w,b
 26749  011668  6F7C               	movwf	(??__flash_partial_read+1)& (0+255),b
 26750  01166A  6B7D               	clrf	(??__flash_partial_read+2)& (0+255),b
 26751  01166C  6B7E               	clrf	(??__flash_partial_read+3)& (0+255),b
 26752  01166E  517B               	movf	??__flash_partial_read& (0+255),w,b
 26753  011670  1383               	iorwf	__flash_partial_read@address& (0+255),f,b
 26754  011672  517C               	movf	(??__flash_partial_read+1)& (0+255),w,b
 26755  011674  1384               	iorwf	(__flash_partial_read@address+1)& (0+255),f,b
 26756  011676  517D               	movf	(??__flash_partial_read+2)& (0+255),w,b
 26757  011678  1385               	iorwf	(__flash_partial_read@address+2)& (0+255),f,b
 26758  01167A  517E               	movf	(??__flash_partial_read+3)& (0+255),w,b
 26759  01167C  1386               	iorwf	(__flash_partial_read@address+3)& (0+255),f,b
 26760                           
 26761                           ; BSR set to: 0
 26762                           ;flash.c: 323: command[0] = 0x03;
 26763  01167E  0E03               	movlw	3
 26764  011680  6F7F               	movwf	__flash_partial_read@command& (0+255),b
 26765                           
 26766                           ; BSR set to: 0
 26767                           ;flash.c: 324: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 26768  011682  C085  F080         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 26769                           
 26770                           ; BSR set to: 0
 26771                           ;flash.c: 325: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 26772  011686  5184               	movf	(__flash_partial_read@address+1)& (0+255),w,b
 26773  011688  6F81               	movwf	(__flash_partial_read@command+2)& (0+255),b
 26774                           
 26775                           ; BSR set to: 0
 26776                           ;flash.c: 326: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 26777  01168A  C083  F082         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 26778                           
 26779                           ; BSR set to: 0
 26780                           ;flash.c: 329: spi_tx_rx(command, 4, data, length);
 26781  01168E  0E7F               	movlw	low __flash_partial_read@command
 26782  011690  6F60               	movwf	spi_tx_rx@command& (0+255),b
 26783  011692  0E00               	movlw	high __flash_partial_read@command
 26784  011694  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 26785  011696  0E00               	movlw	0
 26786  011698  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 26787  01169A  0E04               	movlw	4
 26788  01169C  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 26789  01169E  C079  F064         	movff	__flash_partial_read@data,spi_tx_rx@data
 26790  0116A2  C07A  F065         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 26791  0116A6  C077  F066         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 26792  0116AA  C078  F067         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 26793  0116AE  ECA1  F088         	call	_spi_tx_rx	;wreg free
 26794  0116B2  0012               	return		;funcret
 26795  0116B4                     __end_of__flash_partial_read:
 26796                           	opt stack 0
 26797                           tosu	equ	0xFFF
 26798                           tosh	equ	0xFFE
 26799                           tosl	equ	0xFFD
 26800                           pclath	equ	0xFFA
 26801                           tblptru	equ	0xFF8
 26802                           tblptrh	equ	0xFF7
 26803                           tblptrl	equ	0xFF6
 26804                           tablat	equ	0xFF5
 26805                           prodh	equ	0xFF4
 26806                           prodl	equ	0xFF3
 26807                           intcon	equ	0xFF2
 26808                           postinc0	equ	0xFEE
 26809                           wreg	equ	0xFE8
 26810                           indf1	equ	0xFE7
 26811                           postdec1	equ	0xFE5
 26812                           plusw1	equ	0xFE3
 26813                           fsr1h	equ	0xFE2
 26814                           fsr1l	equ	0xFE1
 26815                           indf2	equ	0xFDF
 26816                           postinc2	equ	0xFDE
 26817                           postdec2	equ	0xFDD
 26818                           plusw2	equ	0xFDB
 26819                           fsr2h	equ	0xFDA
 26820                           fsr2l	equ	0xFD9
 26821                           status	equ	0xFD8
 26822                           
 26823 ;; *************** function __flash_is_busy *****************
 26824 ;; Defined at:
 26825 ;;		line 281 in file "flash.c"
 26826 ;; Parameters:    Size  Location     Type
 26827 ;;		None
 26828 ;; Auto vars:     Size  Location     Type
 26829 ;;  status          2   17[BANK0 ] unsigned int 
 26830 ;; Return value:  Size  Location     Type
 26831 ;;                  1    wreg      unsigned char 
 26832 ;; Registers used:
 26833 ;;		wreg, status,2, status,0, cstack
 26834 ;; Tracked objects:
 26835 ;;		On entry : 0/0
 26836 ;;		On exit  : 0/0
 26837 ;;		Unchanged: 0/0
 26838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26840 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26842 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26843 ;;Total ram usage:        2 bytes
 26844 ;; Hardware stack levels used:    1
 26845 ;; Hardware stack levels required when called:   12
 26846 ;; This function calls:
 26847 ;;		__flash_get_status
 26848 ;;		__flash_wakeup
 26849 ;; This function is called by:
 26850 ;;		__flash_set_page_size
 26851 ;;		__flash_compare_page_to_buffer
 26852 ;;		__flash_write_to_buffer
 26853 ;;		__flash_write_page_from_buffer
 26854 ;;		__flash_partial_read
 26855 ;;		__flash_copy_page_to_buffer
 26856 ;;		__flash_erase_page
 26857 ;;		__flash_buffer_read
 26858 ;;		_flash_is_busy
 26859 ;;		_flash_set_power_state
 26860 ;;		_flash_partial_write
 26861 ;; This function uses a non-reentrant model
 26862 ;;
 26863                           
 26864                           	psect	text88
 26865  012758                     __ptext88:
 26866                           	opt stack 0
 26867  012758                     __flash_is_busy:
 26868                           	opt stack 15
 26869                           
 26870                           ;flash.c: 283: uint16_t status;;flash.c: 286: if(power_state!=FLASH_POWER_STATE_NORMAL)
 26871                           
 26872                           ;incstack = 0
 26873  012758  0101               	movlb	1	; () banked
 26874  01275A  516C               	movf	_power_state& (0+255),w,b
 26875  01275C  A4D8               	btfss	status,2,c
 26876                           
 26877                           ; BSR set to: 1
 26878                           ;flash.c: 287: {;flash.c: 288: _flash_wakeup();
 26879  01275E  ECA1  F08E         	call	__flash_wakeup	;wreg free
 26880                           
 26881                           ;flash.c: 289: };flash.c: 292: status = _flash_get_status();
 26882  012762  EC73  F092         	call	__flash_get_status	;wreg free
 26883  012766  C06C  F071         	movff	?__flash_get_status,__flash_is_busy@status
 26884  01276A  C06D  F072         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 26885                           
 26886                           ;flash.c: 295: if(status & 0b0000000010000000)
 26887  01276E  0100               	movlb	0	; () banked
 26888  012770  AF71               	btfss	__flash_is_busy@status& (0+255),7,b
 26889  012772  D002               	goto	l1527
 26890                           
 26891                           ; BSR set to: 0
 26892                           ;flash.c: 296: {;flash.c: 298: return 0;
 26893  012774  0E00               	movlw	0
 26894                           
 26895                           ; BSR set to: 0
 26896                           ;flash.c: 299: }
 26897                           
 26898                           ; BSR set to: 0
 26899  012776  0012               	return	
 26900  012778                     l1527:
 26901                           
 26902                           ; BSR set to: 0
 26903                           ;flash.c: 300: else;flash.c: 301: {;flash.c: 303: return 1;
 26904                           
 26905                           ; BSR set to: 0
 26906  012778  0E01               	movlw	1
 26907                           
 26908                           ; BSR set to: 0
 26909  01277A  0012               	return	
 26910  01277C                     __end_of__flash_is_busy:
 26911                           	opt stack 0
 26912                           tosu	equ	0xFFF
 26913                           tosh	equ	0xFFE
 26914                           tosl	equ	0xFFD
 26915                           pclath	equ	0xFFA
 26916                           tblptru	equ	0xFF8
 26917                           tblptrh	equ	0xFF7
 26918                           tblptrl	equ	0xFF6
 26919                           tablat	equ	0xFF5
 26920                           prodh	equ	0xFF4
 26921                           prodl	equ	0xFF3
 26922                           intcon	equ	0xFF2
 26923                           postinc0	equ	0xFEE
 26924                           wreg	equ	0xFE8
 26925                           indf1	equ	0xFE7
 26926                           postdec1	equ	0xFE5
 26927                           plusw1	equ	0xFE3
 26928                           fsr1h	equ	0xFE2
 26929                           fsr1l	equ	0xFE1
 26930                           indf2	equ	0xFDF
 26931                           postinc2	equ	0xFDE
 26932                           postdec2	equ	0xFDD
 26933                           plusw2	equ	0xFDB
 26934                           fsr2h	equ	0xFDA
 26935                           fsr2l	equ	0xFD9
 26936                           status	equ	0xFD8
 26937                           
 26938 ;; *************** function __flash_wakeup *****************
 26939 ;; Defined at:
 26940 ;;		line 128 in file "flash.c"
 26941 ;; Parameters:    Size  Location     Type
 26942 ;;		None
 26943 ;; Auto vars:     Size  Location     Type
 26944 ;;  command         1    8[BANK0 ] unsigned char 
 26945 ;; Return value:  Size  Location     Type
 26946 ;;                  1    wreg      void 
 26947 ;; Registers used:
 26948 ;;		wreg, status,2, status,0, cstack
 26949 ;; Tracked objects:
 26950 ;;		On entry : 0/0
 26951 ;;		On exit  : 0/0
 26952 ;;		Unchanged: 0/0
 26953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26955 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26957 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26958 ;;Total ram usage:        1 bytes
 26959 ;; Hardware stack levels used:    1
 26960 ;; Hardware stack levels required when called:   11
 26961 ;; This function calls:
 26962 ;;		_spi_tx
 26963 ;; This function is called by:
 26964 ;;		__flash_is_busy
 26965 ;;		_flash_set_power_state
 26966 ;; This function uses a non-reentrant model
 26967 ;;
 26968                           
 26969                           	psect	text89
 26970  011D42                     __ptext89:
 26971                           	opt stack 0
 26972  011D42                     __flash_wakeup:
 26973                           	opt stack 15
 26974                           
 26975                           ;flash.c: 130: uint8_t command;;flash.c: 132: switch(power_state)
 26976                           
 26977                           ; BSR set to: 0
 26978                           ;incstack = 0
 26979  011D42  D022               	goto	l1476
 26980  011D44                     
 26981                           ;flash.c: 135: command = 0xAB;
 26982  011D44  0EAB               	movlw	171
 26983  011D46  0100               	movlb	0	; () banked
 26984  011D48  6F68               	movwf	__flash_wakeup@command& (0+255),b
 26985                           
 26986                           ; BSR set to: 0
 26987                           ;flash.c: 136: spi_tx(&command, 1);
 26988  011D4A  0E68               	movlw	low __flash_wakeup@command
 26989  011D4C  6F60               	movwf	spi_tx@data& (0+255),b
 26990  011D4E  0E00               	movlw	high __flash_wakeup@command
 26991  011D50  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 26992  011D52  0E00               	movlw	0
 26993  011D54  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 26994  011D56  0E01               	movlw	1
 26995  011D58  6F62               	movwf	spi_tx@length& (0+255),b
 26996  011D5A  EC1C  F08E         	call	_spi_tx	;wreg free
 26997                           
 26998                           ;flash.c: 137: _delay((unsigned long)((35)*(8000000/4000000.0)));
 26999  011D5E  0E17               	movlw	23
 27000  011D60                     u22757:
 27001  011D60  2EE8               	decfsz	wreg,f,c
 27002  011D62  D7FE               	bra	u22757
 27003  011D64  F000               	nop	
 27004                           
 27005                           ;flash.c: 138: power_state = FLASH_POWER_STATE_NORMAL;
 27006  011D66  0E00               	movlw	0
 27007  011D68  0101               	movlb	1	; () banked
 27008  011D6A  6F6C               	movwf	_power_state& (0+255),b
 27009                           
 27010                           ;flash.c: 139: break;
 27011  011D6C  0012               	return	
 27012  011D6E                     l1479:
 27013                           
 27014                           ; BSR set to: 1
 27015                           ;flash.c: 144: LATDbits.LD7 = 0;
 27016  011D6E  9E8C               	bcf	3980,7,c	;volatile
 27017                           
 27018                           ; BSR set to: 1
 27019                           ;flash.c: 145: _delay((unsigned long)((20)*(8000000/4000000.0)));
 27020  011D70  0E0D               	movlw	13
 27021  011D72                     u22767:
 27022  011D72  2EE8               	decfsz	wreg,f,c
 27023  011D74  D7FE               	bra	u22767
 27024  011D76  F000               	nop	
 27025                           
 27026                           ;flash.c: 146: LATDbits.LD7 = 1;
 27027  011D78  8E8C               	bsf	3980,7,c	;volatile
 27028                           
 27029                           ;flash.c: 147: _delay((unsigned long)((120)*(8000000/4000000.0)));
 27030  011D7A  0E50               	movlw	80
 27031  011D7C                     u22777:
 27032  011D7C  2EE8               	decfsz	wreg,f,c
 27033  011D7E  D7FE               	bra	u22777
 27034                           
 27035                           ;flash.c: 148: power_state = FLASH_POWER_STATE_NORMAL;
 27036  011D80  0E00               	movlw	0
 27037  011D82  0101               	movlb	1	; () banked
 27038  011D84  6F6C               	movwf	_power_state& (0+255),b
 27039                           
 27040                           ; BSR set to: 1
 27041                           ;flash.c: 150: }
 27042                           
 27043                           ;flash.c: 149: break;
 27044  011D86  0012               	return	
 27045  011D88                     l1476:
 27046                           
 27047                           ; BSR set to: 1
 27048  011D88  0101               	movlb	1	; () banked
 27049  011D8A  516C               	movf	_power_state& (0+255),w,b
 27050                           
 27051                           ; Switch size 1, requested type "space"
 27052                           ; Number of cases is 2, Range of values is 1 to 2
 27053                           ; switch strategies available:
 27054                           ; Name         Instructions Cycles
 27055                           ; simple_byte            7     4 (average)
 27056                           ;	Chosen strategy is simple_byte
 27057  011D8C  0A01               	xorlw	1	; case 1
 27058  011D8E  B4D8               	btfsc	status,2,c
 27059  011D90  D7D9               	goto	l1477
 27060  011D92  0A03               	xorlw	3	; case 2
 27061  011D94  A4D8               	btfss	status,2,c
 27062  011D96  0012               	return	
 27063  011D98  D7EA               	goto	l1479
 27064  011D9A                     __end_of__flash_wakeup:
 27065                           	opt stack 0
 27066                           tosu	equ	0xFFF
 27067                           tosh	equ	0xFFE
 27068                           tosl	equ	0xFFD
 27069                           pclath	equ	0xFFA
 27070                           tblptru	equ	0xFF8
 27071                           tblptrh	equ	0xFF7
 27072                           tblptrl	equ	0xFF6
 27073                           tablat	equ	0xFF5
 27074                           prodh	equ	0xFF4
 27075                           prodl	equ	0xFF3
 27076                           intcon	equ	0xFF2
 27077                           postinc0	equ	0xFEE
 27078                           wreg	equ	0xFE8
 27079                           indf1	equ	0xFE7
 27080                           postdec1	equ	0xFE5
 27081                           plusw1	equ	0xFE3
 27082                           fsr1h	equ	0xFE2
 27083                           fsr1l	equ	0xFE1
 27084                           indf2	equ	0xFDF
 27085                           postinc2	equ	0xFDE
 27086                           postdec2	equ	0xFDD
 27087                           plusw2	equ	0xFDB
 27088                           fsr2h	equ	0xFDA
 27089                           fsr2l	equ	0xFD9
 27090                           status	equ	0xFD8
 27091                           
 27092 ;; *************** function _spi_tx *****************
 27093 ;; Defined at:
 27094 ;;		line 108 in file "spi.c"
 27095 ;; Parameters:    Size  Location     Type
 27096 ;;  data            2    0[BANK0 ] PTR unsigned char 
 27097 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 27098 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 27099 ;;  length          2    2[BANK0 ] unsigned int 
 27100 ;; Auto vars:     Size  Location     Type
 27101 ;;		None
 27102 ;; Return value:  Size  Location     Type
 27103 ;;                  1    wreg      void 
 27104 ;; Registers used:
 27105 ;;		wreg, status,2, status,0
 27106 ;; Tracked objects:
 27107 ;;		On entry : 0/0
 27108 ;;		On exit  : 0/0
 27109 ;;		Unchanged: 0/0
 27110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27111 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27113 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27114 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27115 ;;Total ram usage:        8 bytes
 27116 ;; Hardware stack levels used:    1
 27117 ;; Hardware stack levels required when called:   10
 27118 ;; This function calls:
 27119 ;;		Nothing
 27120 ;; This function is called by:
 27121 ;;		__flash_set_page_size
 27122 ;;		__flash_wakeup
 27123 ;;		__flash_compare_page_to_buffer
 27124 ;;		__flash_write_page_from_buffer
 27125 ;;		__flash_copy_page_to_buffer
 27126 ;;		__flash_erase_page
 27127 ;;		_flash_set_power_state
 27128 ;; This function uses a non-reentrant model
 27129 ;;
 27130                           
 27131                           	psect	text90
 27132  011C38                     __ptext90:
 27133                           	opt stack 0
 27134  011C38                     _spi_tx:
 27135                           	opt stack 17
 27136                           
 27137                           ;spi.c: 111: DMACON1bits.SSCON1 = 0;
 27138                           
 27139                           ; BSR set to: 1
 27140                           ;incstack = 0
 27141  011C38  9E88               	bcf	3976,7,c	;volatile
 27142                           
 27143                           ;spi.c: 112: DMACON1bits.SSCON0 = 0;
 27144  011C3A  9C88               	bcf	3976,6,c	;volatile
 27145                           
 27146                           ;spi.c: 114: DMACON1bits.TXINC = 1;
 27147  011C3C  8A88               	bsf	3976,5,c	;volatile
 27148                           
 27149                           ;spi.c: 116: DMACON1bits.RXINC = 0;
 27150  011C3E  9888               	bcf	3976,4,c	;volatile
 27151                           
 27152                           ;spi.c: 118: DMACON1bits.DUPLEX1 = 0;
 27153  011C40  9688               	bcf	3976,3,c	;volatile
 27154                           
 27155                           ;spi.c: 119: DMACON1bits.DUPLEX0 = 1;
 27156  011C42  8488               	bsf	3976,2,c	;volatile
 27157                           
 27158                           ;spi.c: 121: DMACON1bits.DLYINTEN = 0;
 27159  011C44  9288               	bcf	3976,1,c	;volatile
 27160                           
 27161                           ;spi.c: 123: DMACON2bits.DLYCYC = 0b0000;
 27162  011C46  9886               	bcf	3974,4,c	;volatile
 27163  011C48  9A86               	bcf	3974,5,c	;volatile
 27164  011C4A  9C86               	bcf	3974,6,c	;volatile
 27165  011C4C  9E86               	bcf	3974,7,c	;volatile
 27166                           
 27167                           ;spi.c: 125: DMACON2bits.INTLVL = 0b0000;
 27168  011C4E  9086               	bcf	3974,0,c	;volatile
 27169  011C50  9286               	bcf	3974,1,c	;volatile
 27170  011C52  9486               	bcf	3974,2,c	;volatile
 27171  011C54  9686               	bcf	3974,3,c	;volatile
 27172                           
 27173                           ;spi.c: 128: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 27174  011C56  0100               	movlb	0	; () banked
 27175  011C58  5161               	movf	(spi_tx@data+1)& (0+255),w,b
 27176  011C5A  6E6A               	movwf	3946,c	;volatile
 27177                           
 27178                           ; BSR set to: 0
 27179                           ;spi.c: 129: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 27180  011C5C  C060  FF6B         	movff	spi_tx@data,3947	;volatile
 27181                           
 27182                           ; BSR set to: 0
 27183                           ;spi.c: 132: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 27184  011C60  0EFF               	movlw	255
 27185  011C62  6F64               	movwf	??_spi_tx& (0+255),b
 27186  011C64  0EFF               	movlw	255
 27187  011C66  6F65               	movwf	(??_spi_tx+1)& (0+255),b
 27188  011C68  C062  F066         	movff	spi_tx@length,??_spi_tx+2
 27189  011C6C  C063  F067         	movff	spi_tx@length+1,??_spi_tx+3
 27190  011C70  5164               	movf	??_spi_tx& (0+255),w,b
 27191  011C72  2766               	addwf	(??_spi_tx+2)& (0+255),f,b
 27192  011C74  5165               	movf	(??_spi_tx+1)& (0+255),w,b
 27193  011C76  2367               	addwfc	(??_spi_tx+3)& (0+255),f,b
 27194  011C78  C067  F066         	movff	??_spi_tx+3,??_spi_tx+2
 27195  011C7C  6B67               	clrf	(??_spi_tx+3)& (0+255),b
 27196  011C7E  5166               	movf	(??_spi_tx+2)& (0+255),w,b
 27197  011C80  6E66               	movwf	3942,c	;volatile
 27198                           
 27199                           ; BSR set to: 0
 27200                           ;spi.c: 133: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 27201  011C82  0562               	decf	spi_tx@length& (0+255),w,b
 27202  011C84  6E67               	movwf	3943,c	;volatile
 27203                           
 27204                           ; BSR set to: 0
 27205                           ;spi.c: 136: LATDbits.LD7 = 0;
 27206  011C86  9E8C               	bcf	3980,7,c	;volatile
 27207                           
 27208                           ; BSR set to: 0
 27209                           ;spi.c: 137: DMACON1bits.DMAEN = 1;
 27210  011C88  8088               	bsf	3976,0,c	;volatile
 27211  011C8A                     
 27212                           ; BSR set to: 0
 27213  011C8A  B088               	btfsc	3976,0,c	;volatile
 27214  011C8C  D7FE               	goto	l2115
 27215                           
 27216                           ;spi.c: 139: LATDbits.LD7 = 1;
 27217  011C8E  8E8C               	bsf	3980,7,c	;volatile
 27218  011C90  0012               	return		;funcret
 27219  011C92                     __end_of_spi_tx:
 27220                           	opt stack 0
 27221                           tosu	equ	0xFFF
 27222                           tosh	equ	0xFFE
 27223                           tosl	equ	0xFFD
 27224                           pclath	equ	0xFFA
 27225                           tblptru	equ	0xFF8
 27226                           tblptrh	equ	0xFF7
 27227                           tblptrl	equ	0xFF6
 27228                           tablat	equ	0xFF5
 27229                           prodh	equ	0xFF4
 27230                           prodl	equ	0xFF3
 27231                           intcon	equ	0xFF2
 27232                           postinc0	equ	0xFEE
 27233                           wreg	equ	0xFE8
 27234                           indf1	equ	0xFE7
 27235                           postdec1	equ	0xFE5
 27236                           plusw1	equ	0xFE3
 27237                           fsr1h	equ	0xFE2
 27238                           fsr1l	equ	0xFE1
 27239                           indf2	equ	0xFDF
 27240                           postinc2	equ	0xFDE
 27241                           postdec2	equ	0xFDD
 27242                           plusw2	equ	0xFDB
 27243                           fsr2h	equ	0xFDA
 27244                           fsr2l	equ	0xFD9
 27245                           status	equ	0xFD8
 27246                           
 27247 ;; *************** function __flash_get_status *****************
 27248 ;; Defined at:
 27249 ;;		line 117 in file "flash.c"
 27250 ;; Parameters:    Size  Location     Type
 27251 ;;		None
 27252 ;; Auto vars:     Size  Location     Type
 27253 ;;  status          2   15[BANK0 ] unsigned int 
 27254 ;;  command         1   14[BANK0 ] unsigned char 
 27255 ;; Return value:  Size  Location     Type
 27256 ;;                  2   12[BANK0 ] unsigned int 
 27257 ;; Registers used:
 27258 ;;		wreg, status,2, status,0, cstack
 27259 ;; Tracked objects:
 27260 ;;		On entry : 0/0
 27261 ;;		On exit  : 0/0
 27262 ;;		Unchanged: 0/0
 27263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27264 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27265 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27267 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27268 ;;Total ram usage:        5 bytes
 27269 ;; Hardware stack levels used:    1
 27270 ;; Hardware stack levels required when called:   11
 27271 ;; This function calls:
 27272 ;;		_spi_tx_rx
 27273 ;; This function is called by:
 27274 ;;		__flash_compare_page_to_buffer
 27275 ;;		__flash_is_busy
 27276 ;; This function uses a non-reentrant model
 27277 ;;
 27278                           
 27279                           	psect	text91
 27280  0124E6                     __ptext91:
 27281                           	opt stack 0
 27282  0124E6                     __flash_get_status:
 27283                           	opt stack 15
 27284                           
 27285                           ;flash.c: 121: uint8_t command = 0xD7;
 27286                           
 27287                           ;incstack = 0
 27288  0124E6  0ED7               	movlw	215
 27289  0124E8  0100               	movlb	0	; () banked
 27290  0124EA  6F6E               	movwf	__flash_get_status@command& (0+255),b
 27291                           
 27292                           ; BSR set to: 0
 27293                           ;flash.c: 122: uint16_t status;;flash.c: 123: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 27294  0124EC  0E6E               	movlw	low __flash_get_status@command
 27295  0124EE  6F60               	movwf	spi_tx_rx@command& (0+255),b
 27296  0124F0  0E00               	movlw	high __flash_get_status@command
 27297  0124F2  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 27298  0124F4  0E00               	movlw	0
 27299  0124F6  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 27300  0124F8  0E01               	movlw	1
 27301  0124FA  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 27302  0124FC  0E6F               	movlw	low __flash_get_status@status
 27303  0124FE  6F64               	movwf	spi_tx_rx@data& (0+255),b
 27304  012500  0E00               	movlw	high __flash_get_status@status
 27305  012502  6F65               	movwf	(spi_tx_rx@data+1)& (0+255),b
 27306  012504  0E00               	movlw	0
 27307  012506  6F67               	movwf	(spi_tx_rx@data_length+1)& (0+255),b
 27308  012508  0E02               	movlw	2
 27309  01250A  6F66               	movwf	spi_tx_rx@data_length& (0+255),b
 27310  01250C  ECA1  F088         	call	_spi_tx_rx	;wreg free
 27311                           
 27312                           ;flash.c: 124: return status;
 27313  012510  C06F  F06C         	movff	__flash_get_status@status,?__flash_get_status
 27314  012514  C070  F06D         	movff	__flash_get_status@status+1,?__flash_get_status+1
 27315  012518  0012               	return	
 27316  01251A                     __end_of__flash_get_status:
 27317                           	opt stack 0
 27318                           tosu	equ	0xFFF
 27319                           tosh	equ	0xFFE
 27320                           tosl	equ	0xFFD
 27321                           pclath	equ	0xFFA
 27322                           tblptru	equ	0xFF8
 27323                           tblptrh	equ	0xFF7
 27324                           tblptrl	equ	0xFF6
 27325                           tablat	equ	0xFF5
 27326                           prodh	equ	0xFF4
 27327                           prodl	equ	0xFF3
 27328                           intcon	equ	0xFF2
 27329                           postinc0	equ	0xFEE
 27330                           wreg	equ	0xFE8
 27331                           indf1	equ	0xFE7
 27332                           postdec1	equ	0xFE5
 27333                           plusw1	equ	0xFE3
 27334                           fsr1h	equ	0xFE2
 27335                           fsr1l	equ	0xFE1
 27336                           indf2	equ	0xFDF
 27337                           postinc2	equ	0xFDE
 27338                           postdec2	equ	0xFDD
 27339                           plusw2	equ	0xFDB
 27340                           fsr2h	equ	0xFDA
 27341                           fsr2l	equ	0xFD9
 27342                           status	equ	0xFD8
 27343                           
 27344 ;; *************** function _spi_tx_rx *****************
 27345 ;; Defined at:
 27346 ;;		line 199 in file "spi.c"
 27347 ;; Parameters:    Size  Location     Type
 27348 ;;  command         2    0[BANK0 ] PTR unsigned char 
 27349 ;;		 -> _flash_buffer_read@command(4), _flash_partial_read@command(4), _flash_get_status@command(1), 
 27350 ;;  command_leng    2    2[BANK0 ] unsigned int 
 27351 ;;  data            2    4[BANK0 ] PTR unsigned char 
 27352 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 27353 ;;		 -> fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@firs
      +t_byte(1), 
 27354 ;;		 -> buffer(512), _flash_get_status@status(2), msd_buffer(512), 
 27355 ;;  data_length     2    6[BANK0 ] unsigned int 
 27356 ;; Auto vars:     Size  Location     Type
 27357 ;;		None
 27358 ;; Return value:  Size  Location     Type
 27359 ;;                  1    wreg      void 
 27360 ;; Registers used:
 27361 ;;		wreg, status,2, status,0
 27362 ;; Tracked objects:
 27363 ;;		On entry : 0/0
 27364 ;;		On exit  : 0/0
 27365 ;;		Unchanged: 0/0
 27366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27367 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27369 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27370 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27371 ;;Total ram usage:       12 bytes
 27372 ;; Hardware stack levels used:    1
 27373 ;; Hardware stack levels required when called:   10
 27374 ;; This function calls:
 27375 ;;		Nothing
 27376 ;; This function is called by:
 27377 ;;		__flash_get_status
 27378 ;;		__flash_partial_read
 27379 ;;		__flash_buffer_read
 27380 ;; This function uses a non-reentrant model
 27381 ;;
 27382                           
 27383                           	psect	text92
 27384  011142                     __ptext92:
 27385                           	opt stack 0
 27386  011142                     _spi_tx_rx:
 27387                           	opt stack 15
 27388                           
 27389                           ;spi.c: 202: DMACON1bits.SSCON1 = 0;
 27390                           
 27391                           ;incstack = 0
 27392  011142  9E88               	bcf	3976,7,c	;volatile
 27393                           
 27394                           ;spi.c: 203: DMACON1bits.SSCON0 = 0;
 27395  011144  9C88               	bcf	3976,6,c	;volatile
 27396                           
 27397                           ;spi.c: 205: DMACON1bits.TXINC = 1;
 27398  011146  8A88               	bsf	3976,5,c	;volatile
 27399                           
 27400                           ;spi.c: 207: DMACON1bits.RXINC = 0;
 27401  011148  9888               	bcf	3976,4,c	;volatile
 27402                           
 27403                           ;spi.c: 209: DMACON1bits.DUPLEX1 = 0;
 27404  01114A  9688               	bcf	3976,3,c	;volatile
 27405                           
 27406                           ;spi.c: 210: DMACON1bits.DUPLEX0 = 1;
 27407  01114C  8488               	bsf	3976,2,c	;volatile
 27408                           
 27409                           ;spi.c: 212: DMACON1bits.DLYINTEN = 0;
 27410  01114E  9288               	bcf	3976,1,c	;volatile
 27411                           
 27412                           ;spi.c: 214: DMACON2bits.DLYCYC = 0b0000;
 27413  011150  9886               	bcf	3974,4,c	;volatile
 27414  011152  9A86               	bcf	3974,5,c	;volatile
 27415  011154  9C86               	bcf	3974,6,c	;volatile
 27416  011156  9E86               	bcf	3974,7,c	;volatile
 27417                           
 27418                           ;spi.c: 216: DMACON2bits.INTLVL = 0b0000;
 27419  011158  9086               	bcf	3974,0,c	;volatile
 27420  01115A  9286               	bcf	3974,1,c	;volatile
 27421  01115C  9486               	bcf	3974,2,c	;volatile
 27422  01115E  9686               	bcf	3974,3,c	;volatile
 27423                           
 27424                           ;spi.c: 219: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 27425  011160  0100               	movlb	0	; () banked
 27426  011162  5161               	movf	(spi_tx_rx@command+1)& (0+255),w,b
 27427  011164  6E6A               	movwf	3946,c	;volatile
 27428                           
 27429                           ; BSR set to: 0
 27430                           ;spi.c: 220: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 27431  011166  C060  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 27432                           
 27433                           ; BSR set to: 0
 27434                           ;spi.c: 223: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 27435  01116A  0EFF               	movlw	255
 27436  01116C  6F68               	movwf	??_spi_tx_rx& (0+255),b
 27437  01116E  0EFF               	movlw	255
 27438  011170  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 27439  011172  C062  F06A         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 27440  011176  C063  F06B         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 27441  01117A  5168               	movf	??_spi_tx_rx& (0+255),w,b
 27442  01117C  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 27443  01117E  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 27444  011180  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 27445  011182  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 27446  011186  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 27447  011188  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 27448  01118A  6E66               	movwf	3942,c	;volatile
 27449                           
 27450                           ; BSR set to: 0
 27451                           ;spi.c: 224: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 27452  01118C  0562               	decf	spi_tx_rx@command_length& (0+255),w,b
 27453  01118E  6E67               	movwf	3943,c	;volatile
 27454                           
 27455                           ; BSR set to: 0
 27456                           ;spi.c: 227: LATDbits.LD7 = 0;
 27457  011190  9E8C               	bcf	3980,7,c	;volatile
 27458                           
 27459                           ; BSR set to: 0
 27460                           ;spi.c: 230: DMACON1bits.DMAEN = 1;
 27461  011192  8088               	bsf	3976,0,c	;volatile
 27462  011194                     
 27463                           ; BSR set to: 0
 27464  011194  B088               	btfsc	3976,0,c	;volatile
 27465  011196  D7FE               	goto	l2130
 27466                           
 27467                           ;spi.c: 234: DMACON1bits.TXINC = 0;
 27468  011198  9A88               	bcf	3976,5,c	;volatile
 27469                           
 27470                           ;spi.c: 236: DMACON1bits.RXINC = 1;
 27471  01119A  8888               	bsf	3976,4,c	;volatile
 27472                           
 27473                           ;spi.c: 238: DMACON1bits.DUPLEX1 = 0;
 27474  01119C  9688               	bcf	3976,3,c	;volatile
 27475                           
 27476                           ;spi.c: 239: DMACON1bits.DUPLEX0 = 0;
 27477  01119E  9488               	bcf	3976,2,c	;volatile
 27478                           
 27479                           ;spi.c: 242: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 27480  0111A0  0100               	movlb	0	; () banked
 27481  0111A2  5165               	movf	(spi_tx_rx@data+1)& (0+255),w,b
 27482  0111A4  6E68               	movwf	3944,c	;volatile
 27483                           
 27484                           ; BSR set to: 0
 27485                           ;spi.c: 243: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 27486  0111A6  C064  FF69         	movff	spi_tx_rx@data,3945	;volatile
 27487                           
 27488                           ; BSR set to: 0
 27489                           ;spi.c: 246: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 27490  0111AA  0EFF               	movlw	255
 27491  0111AC  6F68               	movwf	??_spi_tx_rx& (0+255),b
 27492  0111AE  0EFF               	movlw	255
 27493  0111B0  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 27494  0111B2  C066  F06A         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 27495  0111B6  C067  F06B         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 27496  0111BA  5168               	movf	??_spi_tx_rx& (0+255),w,b
 27497  0111BC  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 27498  0111BE  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 27499  0111C0  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 27500  0111C2  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 27501  0111C6  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 27502  0111C8  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 27503  0111CA  6E66               	movwf	3942,c	;volatile
 27504                           
 27505                           ; BSR set to: 0
 27506                           ;spi.c: 247: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 27507  0111CC  0566               	decf	spi_tx_rx@data_length& (0+255),w,b
 27508  0111CE  6E67               	movwf	3943,c	;volatile
 27509                           
 27510                           ; BSR set to: 0
 27511                           ;spi.c: 250: DMACON1bits.DMAEN = 1;
 27512  0111D0  8088               	bsf	3976,0,c	;volatile
 27513  0111D2                     
 27514                           ; BSR set to: 0
 27515  0111D2  B088               	btfsc	3976,0,c	;volatile
 27516  0111D4  D7FE               	goto	l2133
 27517                           
 27518                           ;spi.c: 254: LATDbits.LD7 = 1;
 27519  0111D6  8E8C               	bsf	3980,7,c	;volatile
 27520  0111D8  0012               	return		;funcret
 27521  0111DA                     __end_of_spi_tx_rx:
 27522                           	opt stack 0
 27523                           tosu	equ	0xFFF
 27524                           tosh	equ	0xFFE
 27525                           tosl	equ	0xFFD
 27526                           pclath	equ	0xFFA
 27527                           tblptru	equ	0xFF8
 27528                           tblptrh	equ	0xFF7
 27529                           tblptrl	equ	0xFF6
 27530                           tablat	equ	0xFF5
 27531                           prodh	equ	0xFF4
 27532                           prodl	equ	0xFF3
 27533                           intcon	equ	0xFF2
 27534                           postinc0	equ	0xFEE
 27535                           wreg	equ	0xFE8
 27536                           indf1	equ	0xFE7
 27537                           postdec1	equ	0xFE5
 27538                           plusw1	equ	0xFE3
 27539                           fsr1h	equ	0xFE2
 27540                           fsr1l	equ	0xFE1
 27541                           indf2	equ	0xFDF
 27542                           postinc2	equ	0xFDE
 27543                           postdec2	equ	0xFDD
 27544                           plusw2	equ	0xFDB
 27545                           fsr2h	equ	0xFDA
 27546                           fsr2l	equ	0xFD9
 27547                           status	equ	0xFD8
 27548                           
 27549 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 27550 ;; Defined at:
 27551 ;;		line 993 in file "usb_device_msd.c"
 27552 ;; Parameters:    Size  Location     Type
 27553 ;;  DiExpected      2    0[BANK0 ] unsigned int 
 27554 ;; Auto vars:     Size  Location     Type
 27555 ;;		None
 27556 ;; Return value:  Size  Location     Type
 27557 ;;                  1    wreg      void 
 27558 ;; Registers used:
 27559 ;;		wreg, status,2, status,0
 27560 ;; Tracked objects:
 27561 ;;		On entry : 0/0
 27562 ;;		On exit  : 0/0
 27563 ;;		Unchanged: 0/0
 27564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27565 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27567 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27568 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27569 ;;Total ram usage:        6 bytes
 27570 ;; Hardware stack levels used:    1
 27571 ;; Hardware stack levels required when called:   10
 27572 ;; This function calls:
 27573 ;;		Nothing
 27574 ;; This function is called by:
 27575 ;;		_MSDProcessCommandMediaPresent
 27576 ;; This function uses a non-reentrant model
 27577 ;;
 27578                           
 27579                           	psect	text93
 27580  010B56                     __ptext93:
 27581                           	opt stack 0
 27582  010B56                     _MSDComputeDeviceInAndResidue:
 27583                           	opt stack 16
 27584                           
 27585                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 27586                           
 27587                           ;incstack = 0
 27588  010B56  0100               	movlb	0	; () banked
 27589  010B58  5160               	movf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 27590  010B5A  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 27591  010B5C  5161               	movf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 27592  010B5E  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 27593  010B60  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 27594  010B62  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 27595  010B64  5162               	movf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 27596  010B66  0101               	movlb	1	; () banked
 27597  010B68  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 27598  010B6A  0100               	movlb	0	; () banked
 27599  010B6C  5163               	movf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 27600  010B6E  0101               	movlb	1	; () banked
 27601  010B70  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 27602  010B72  0100               	movlb	0	; () banked
 27603  010B74  5164               	movf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 27604  010B76  0101               	movlb	1	; () banked
 27605  010B78  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 27606  010B7A  0100               	movlb	0	; () banked
 27607  010B7C  5165               	movf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 27608  010B7E  0101               	movlb	1	; () banked
 27609  010B80  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 27610  010B82  B0D8               	btfsc	status,0,c
 27611  010B84  D00E               	goto	l675
 27612                           
 27613                           ; BSR set to: 1
 27614                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 27615  010B86  0E00               	movlw	0
 27616  010B88  010D               	movlb	13	; () banked
 27617  010B8A  6F88               	movwf	136,b	;volatile
 27618  010B8C  0E00               	movlw	0
 27619  010B8E  6F89               	movwf	137,b	;volatile
 27620  010B90  0E00               	movlw	0
 27621  010B92  6F8A               	movwf	138,b	;volatile
 27622  010B94  0E00               	movlw	0
 27623  010B96  6F8B               	movwf	139,b	;volatile
 27624                           
 27625                           ; BSR set to: 13
 27626                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 27627  010B98  C108  F01A         	movff	_gblCBW+8,_TransferLength
 27628  010B9C  C109  F01B         	movff	_gblCBW+9,_TransferLength+1
 27629                           
 27630                           ;usb_device_msd.c: 1002: }
 27631  010BA0  0012               	return	
 27632  010BA2                     l675:
 27633                           
 27634                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 27635                           
 27636                           ; BSR set to: 13
 27637  010BA2  501A               	movf	_TransferLength,w,c
 27638  010BA4  0100               	movlb	0	; () banked
 27639  010BA6  5D60               	subwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 27640  010BA8  501B               	movf	_TransferLength+1,w,c
 27641  010BAA  5961               	subwfb	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 27642  010BAC  B0D8               	btfsc	status,0,c
 27643  010BAE  D004               	goto	l677
 27644                           
 27645                           ; BSR set to: 0
 27646                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 27647  010BB0  C060  F01A         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 27648  010BB4  C061  F01B         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 27649  010BB8                     l677:
 27650                           
 27651                           ; BSR set to: 0
 27652                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 27653                           
 27654                           ; BSR set to: 0
 27655  010BB8  501A               	movf	_TransferLength,w,c
 27656  010BBA  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 27657  010BBC  501B               	movf	_TransferLength+1,w,c
 27658  010BBE  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 27659  010BC0  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 27660  010BC2  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 27661  010BC4  1F62               	comf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 27662  010BC6  1F63               	comf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 27663  010BC8  1F64               	comf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 27664  010BCA  1F65               	comf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 27665  010BCC  2B62               	incf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 27666  010BCE  0E00               	movlw	0
 27667  010BD0  2363               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 27668  010BD2  2364               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 27669  010BD4  2365               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 27670  010BD6  0101               	movlb	1	; () banked
 27671  010BD8  5108               	movf	(_gblCBW+8)& (0+255),w,b
 27672  010BDA  0100               	movlb	0	; () banked
 27673  010BDC  2562               	addwf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 27674  010BDE  010D               	movlb	13	; () banked
 27675  010BE0  6F88               	movwf	136,b	;volatile
 27676  010BE2  0101               	movlb	1	; () banked
 27677  010BE4  5109               	movf	(_gblCBW+9)& (0+255),w,b
 27678  010BE6  0100               	movlb	0	; () banked
 27679  010BE8  2163               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 27680  010BEA  010D               	movlb	13	; () banked
 27681  010BEC  6F89               	movwf	137,b	;volatile
 27682  010BEE  0101               	movlb	1	; () banked
 27683  010BF0  510A               	movf	(_gblCBW+10)& (0+255),w,b
 27684  010BF2  0100               	movlb	0	; () banked
 27685  010BF4  2164               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 27686  010BF6  010D               	movlb	13	; () banked
 27687  010BF8  6F8A               	movwf	138,b	;volatile
 27688  010BFA  0101               	movlb	1	; () banked
 27689  010BFC  510B               	movf	(_gblCBW+11)& (0+255),w,b
 27690  010BFE  0100               	movlb	0	; () banked
 27691  010C00  2165               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 27692  010C02  010D               	movlb	13	; () banked
 27693  010C04  6F8B               	movwf	139,b	;volatile
 27694  010C06  0012               	return	
 27695  010C08                     __end_of_MSDComputeDeviceInAndResidue:
 27696                           	opt stack 0
 27697                           tosu	equ	0xFFF
 27698                           tosh	equ	0xFFE
 27699                           tosl	equ	0xFFD
 27700                           pclath	equ	0xFFA
 27701                           tblptru	equ	0xFF8
 27702                           tblptrh	equ	0xFF7
 27703                           tblptrl	equ	0xFF6
 27704                           tablat	equ	0xFF5
 27705                           prodh	equ	0xFF4
 27706                           prodl	equ	0xFF3
 27707                           intcon	equ	0xFF2
 27708                           postinc0	equ	0xFEE
 27709                           wreg	equ	0xFE8
 27710                           indf1	equ	0xFE7
 27711                           postdec1	equ	0xFE5
 27712                           plusw1	equ	0xFE3
 27713                           fsr1h	equ	0xFE2
 27714                           fsr1l	equ	0xFE1
 27715                           indf2	equ	0xFDF
 27716                           postinc2	equ	0xFDE
 27717                           postdec2	equ	0xFDD
 27718                           plusw2	equ	0xFDB
 27719                           fsr2h	equ	0xFDA
 27720                           fsr2l	equ	0xFD9
 27721                           status	equ	0xFD8
 27722                           
 27723 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 27724 ;; Defined at:
 27725 ;;		line 18 in file "external_flash.c"
 27726 ;; Parameters:    Size  Location     Type
 27727 ;;  config          2    0[BANK0 ] PTR void 
 27728 ;;		 -> NULL(0), 
 27729 ;; Auto vars:     Size  Location     Type
 27730 ;;		None
 27731 ;; Return value:  Size  Location     Type
 27732 ;;                  2    0[BANK0 ] unsigned int 
 27733 ;; Registers used:
 27734 ;;		wreg, status,2
 27735 ;; Tracked objects:
 27736 ;;		On entry : 0/0
 27737 ;;		On exit  : 0/0
 27738 ;;		Unchanged: 0/0
 27739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27740 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27743 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27744 ;;Total ram usage:        2 bytes
 27745 ;; Hardware stack levels used:    1
 27746 ;; Hardware stack levels required when called:   10
 27747 ;; This function calls:
 27748 ;;		Nothing
 27749 ;; This function is called by:
 27750 ;;		_MSDProcessCommandMediaPresent
 27751 ;; This function uses a non-reentrant model
 27752 ;;
 27753                           
 27754                           	psect	text94
 27755  01289C                     __ptext94:
 27756                           	opt stack 0
 27757  01289C                     _ExternalFlash_SectorSizeRead:
 27758                           	opt stack 16
 27759                           
 27760                           ;external_flash.c: 20: return 512;
 27761                           
 27762                           ; BSR set to: 13
 27763                           ;incstack = 0
 27764  01289C  0E02               	movlw	2
 27765  01289E  0100               	movlb	0	; () banked
 27766  0128A0  6F61               	movwf	(?_ExternalFlash_SectorSizeRead+1)& (0+255),b
 27767  0128A2  0E00               	movlw	0
 27768  0128A4  6F60               	movwf	?_ExternalFlash_SectorSizeRead& (0+255),b
 27769  0128A6  0012               	return	
 27770  0128A8                     __end_of_ExternalFlash_SectorSizeRead:
 27771                           	opt stack 0
 27772                           tosu	equ	0xFFF
 27773                           tosh	equ	0xFFE
 27774                           tosl	equ	0xFFD
 27775                           pclath	equ	0xFFA
 27776                           tblptru	equ	0xFF8
 27777                           tblptrh	equ	0xFF7
 27778                           tblptrl	equ	0xFF6
 27779                           tablat	equ	0xFF5
 27780                           prodh	equ	0xFF4
 27781                           prodl	equ	0xFF3
 27782                           intcon	equ	0xFF2
 27783                           postinc0	equ	0xFEE
 27784                           wreg	equ	0xFE8
 27785                           indf1	equ	0xFE7
 27786                           postdec1	equ	0xFE5
 27787                           plusw1	equ	0xFE3
 27788                           fsr1h	equ	0xFE2
 27789                           fsr1l	equ	0xFE1
 27790                           indf2	equ	0xFDF
 27791                           postinc2	equ	0xFDE
 27792                           postdec2	equ	0xFDD
 27793                           plusw2	equ	0xFDB
 27794                           fsr2h	equ	0xFDA
 27795                           fsr2l	equ	0xFD9
 27796                           status	equ	0xFD8
 27797                           
 27798 ;; *************** function _ExternalFlash_CapacityRead *****************
 27799 ;; Defined at:
 27800 ;;		line 23 in file "external_flash.c"
 27801 ;; Parameters:    Size  Location     Type
 27802 ;;  config          2    0[BANK0 ] PTR void 
 27803 ;;		 -> NULL(0), 
 27804 ;; Auto vars:     Size  Location     Type
 27805 ;;		None
 27806 ;; Return value:  Size  Location     Type
 27807 ;;                  4    0[BANK0 ] unsigned long 
 27808 ;; Registers used:
 27809 ;;		wreg, status,2
 27810 ;; Tracked objects:
 27811 ;;		On entry : 0/0
 27812 ;;		On exit  : 0/0
 27813 ;;		Unchanged: 0/0
 27814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27815 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27818 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27819 ;;Total ram usage:        4 bytes
 27820 ;; Hardware stack levels used:    1
 27821 ;; Hardware stack levels required when called:   10
 27822 ;; This function calls:
 27823 ;;		Nothing
 27824 ;; This function is called by:
 27825 ;;		_MSDProcessCommandMediaPresent
 27826 ;; This function uses a non-reentrant model
 27827 ;;
 27828                           
 27829                           	psect	text95
 27830  012848                     __ptext95:
 27831                           	opt stack 0
 27832  012848                     _ExternalFlash_CapacityRead:
 27833                           	opt stack 16
 27834                           
 27835                           ;external_flash.c: 26: return ((uint32_t) 8192 - 1);
 27836                           
 27837                           ; BSR set to: 0
 27838                           ;incstack = 0
 27839  012848  0EFF               	movlw	255
 27840  01284A  0100               	movlb	0	; () banked
 27841  01284C  6F60               	movwf	?_ExternalFlash_CapacityRead& (0+255),b
 27842  01284E  0E1F               	movlw	31
 27843  012850  6F61               	movwf	(?_ExternalFlash_CapacityRead+1)& (0+255),b
 27844  012852  0E00               	movlw	0
 27845  012854  6F62               	movwf	(?_ExternalFlash_CapacityRead+2)& (0+255),b
 27846  012856  0E00               	movlw	0
 27847  012858  6F63               	movwf	(?_ExternalFlash_CapacityRead+3)& (0+255),b
 27848  01285A  0012               	return	
 27849  01285C                     __end_of_ExternalFlash_CapacityRead:
 27850                           	opt stack 0
 27851                           tosu	equ	0xFFF
 27852                           tosh	equ	0xFFE
 27853                           tosl	equ	0xFFD
 27854                           pclath	equ	0xFFA
 27855                           tblptru	equ	0xFF8
 27856                           tblptrh	equ	0xFF7
 27857                           tblptrl	equ	0xFF6
 27858                           tablat	equ	0xFF5
 27859                           prodh	equ	0xFF4
 27860                           prodl	equ	0xFF3
 27861                           intcon	equ	0xFF2
 27862                           postinc0	equ	0xFEE
 27863                           wreg	equ	0xFE8
 27864                           indf1	equ	0xFE7
 27865                           postdec1	equ	0xFE5
 27866                           plusw1	equ	0xFE3
 27867                           fsr1h	equ	0xFE2
 27868                           fsr1l	equ	0xFE1
 27869                           indf2	equ	0xFDF
 27870                           postinc2	equ	0xFDE
 27871                           postdec2	equ	0xFDD
 27872                           plusw2	equ	0xFDB
 27873                           fsr2h	equ	0xFDA
 27874                           fsr2l	equ	0xFD9
 27875                           status	equ	0xFD8
 27876                           
 27877 ;; *************** function _ExternalFlash_MediaInitialize *****************
 27878 ;; Defined at:
 27879 ;;		line 10 in file "external_flash.c"
 27880 ;; Parameters:    Size  Location     Type
 27881 ;;  config          2    0[BANK0 ] PTR void 
 27882 ;;		 -> NULL(0), 
 27883 ;; Auto vars:     Size  Location     Type
 27884 ;;		None
 27885 ;; Return value:  Size  Location     Type
 27886 ;;                  2    0[BANK0 ] PTR struct .
 27887 ;; Registers used:
 27888 ;;		wreg, status,2, status,0
 27889 ;; Tracked objects:
 27890 ;;		On entry : 0/0
 27891 ;;		On exit  : 0/0
 27892 ;;		Unchanged: 0/0
 27893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27894 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27897 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27898 ;;Total ram usage:        2 bytes
 27899 ;; Hardware stack levels used:    1
 27900 ;; Hardware stack levels required when called:   10
 27901 ;; This function calls:
 27902 ;;		Nothing
 27903 ;; This function is called by:
 27904 ;;		_USBMSDInit
 27905 ;;		_MSDProcessCommand
 27906 ;; This function uses a non-reentrant model
 27907 ;;
 27908                           
 27909                           	psect	text96
 27910  01279E                     __ptext96:
 27911                           	opt stack 0
 27912  01279E                     _ExternalFlash_MediaInitialize:
 27913                           	opt stack 0
 27914                           
 27915                           ; BSR set to: 0
 27916                           ;Skip over the trampoline to the duplicate function for level 2
 27917  01279E  B25B               	btfsc	btemp,1,c
 27918  0127A0  EF0C  F094         	goto	i2_ExternalFlash_MediaInitialize
 27919  0127A4                     _ExternalFlash_MediaInitialize$intlevel0:
 27920                           	opt stack 17
 27921                           
 27922                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 27923                           
 27924                           ;incstack = 0
 27925  0127A4  0101               	movlb	1	; () banked
 27926  0127A6  8192               	bsf	(_mediaInformation+1)& (0+255),0,b
 27927                           
 27928                           ; BSR set to: 1
 27929                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 27930  0127A8  0E02               	movlw	2
 27931  0127AA  6F94               	movwf	(_mediaInformation+3)& (0+255),b
 27932  0127AC  0E00               	movlw	0
 27933  0127AE  6F93               	movwf	(_mediaInformation+2)& (0+255),b
 27934                           
 27935                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 27936  0127B0  0E00               	movlw	0
 27937  0127B2  6F91               	movwf	_mediaInformation& (0+255),b
 27938                           
 27939                           ; BSR set to: 1
 27940                           ;external_flash.c: 15: return &mediaInformation;
 27941  0127B4  0E91               	movlw	low _mediaInformation
 27942  0127B6  0100               	movlb	0	; () banked
 27943  0127B8  6F60               	movwf	?_ExternalFlash_MediaInitialize& (0+255),b
 27944  0127BA  0E01               	movlw	high _mediaInformation
 27945  0127BC  6F61               	movwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),b
 27946  0127BE  0012               	return	
 27947  0127C0                     __end_of_ExternalFlash_MediaInitialize:
 27948                           	opt stack 0
 27949                           tosu	equ	0xFFF
 27950                           tosh	equ	0xFFE
 27951                           tosl	equ	0xFFD
 27952                           pclath	equ	0xFFA
 27953                           tblptru	equ	0xFF8
 27954                           tblptrh	equ	0xFF7
 27955                           tblptrl	equ	0xFF6
 27956                           tablat	equ	0xFF5
 27957                           prodh	equ	0xFF4
 27958                           prodl	equ	0xFF3
 27959                           intcon	equ	0xFF2
 27960                           postinc0	equ	0xFEE
 27961                           wreg	equ	0xFE8
 27962                           indf1	equ	0xFE7
 27963                           postdec1	equ	0xFE5
 27964                           plusw1	equ	0xFE3
 27965                           fsr1h	equ	0xFE2
 27966                           fsr1l	equ	0xFE1
 27967                           indf2	equ	0xFDF
 27968                           postinc2	equ	0xFDE
 27969                           postdec2	equ	0xFDD
 27970                           plusw2	equ	0xFDB
 27971                           fsr2h	equ	0xFDA
 27972                           fsr2l	equ	0xFD9
 27973                           status	equ	0xFD8
 27974                           
 27975 ;; *************** function _ExternalFlash_MediaDetect *****************
 27976 ;; Defined at:
 27977 ;;		line 29 in file "external_flash.c"
 27978 ;; Parameters:    Size  Location     Type
 27979 ;;  config          2    0[BANK0 ] PTR void 
 27980 ;;		 -> NULL(0), 
 27981 ;; Auto vars:     Size  Location     Type
 27982 ;;		None
 27983 ;; Return value:  Size  Location     Type
 27984 ;;                  1    wreg      unsigned char 
 27985 ;; Registers used:
 27986 ;;		wreg
 27987 ;; Tracked objects:
 27988 ;;		On entry : 0/0
 27989 ;;		On exit  : 0/0
 27990 ;;		Unchanged: 0/0
 27991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27992 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27995 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27996 ;;Total ram usage:        2 bytes
 27997 ;; Hardware stack levels used:    1
 27998 ;; Hardware stack levels required when called:   10
 27999 ;; This function calls:
 28000 ;;		Nothing
 28001 ;; This function is called by:
 28002 ;;		_USBMSDInit
 28003 ;;		_MSDProcessCommand
 28004 ;; This function uses a non-reentrant model
 28005 ;;
 28006                           
 28007                           	psect	text97
 28008  0128BC                     __ptext97:
 28009                           	opt stack 0
 28010  0128BC                     _ExternalFlash_MediaDetect:
 28011                           	opt stack 0
 28012                           
 28013                           ; BSR set to: 0
 28014                           ;Skip over the trampoline to the duplicate function for level 2
 28015  0128BC  B25B               	btfsc	btemp,1,c
 28016  0128BE  EF76  F094         	goto	i2_ExternalFlash_MediaDetect
 28017  0128C2                     _ExternalFlash_MediaDetect$intlevel0:
 28018                           	opt stack 17
 28019                           
 28020                           ;external_flash.c: 31: return 1;
 28021                           
 28022                           ;incstack = 0
 28023  0128C2  0E01               	movlw	1
 28024  0128C4  0012               	return	
 28025  0128C6                     __end_of_ExternalFlash_MediaDetect:
 28026                           	opt stack 0
 28027                           tosu	equ	0xFFF
 28028                           tosh	equ	0xFFE
 28029                           tosl	equ	0xFFD
 28030                           pclath	equ	0xFFA
 28031                           tblptru	equ	0xFF8
 28032                           tblptrh	equ	0xFF7
 28033                           tblptrl	equ	0xFF6
 28034                           tablat	equ	0xFF5
 28035                           prodh	equ	0xFF4
 28036                           prodl	equ	0xFF3
 28037                           intcon	equ	0xFF2
 28038                           postinc0	equ	0xFEE
 28039                           wreg	equ	0xFE8
 28040                           indf1	equ	0xFE7
 28041                           postdec1	equ	0xFE5
 28042                           plusw1	equ	0xFE3
 28043                           fsr1h	equ	0xFE2
 28044                           fsr1l	equ	0xFE1
 28045                           indf2	equ	0xFDF
 28046                           postinc2	equ	0xFDE
 28047                           postdec2	equ	0xFDD
 28048                           plusw2	equ	0xFDB
 28049                           fsr2h	equ	0xFDA
 28050                           fsr2l	equ	0xFD9
 28051                           status	equ	0xFD8
 28052                           
 28053 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 28054 ;; Defined at:
 28055 ;;		line 73 in file "app_device_custom_hid.c"
 28056 ;; Parameters:    Size  Location     Type
 28057 ;;		None
 28058 ;; Auto vars:     Size  Location     Type
 28059 ;;  idx             1    0        unsigned char 
 28060 ;; Return value:  Size  Location     Type
 28061 ;;                  1    wreg      void 
 28062 ;; Registers used:
 28063 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28064 ;; Tracked objects:
 28065 ;;		On entry : 0/0
 28066 ;;		On exit  : 0/0
 28067 ;;		Unchanged: 0/0
 28068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28073 ;;Total ram usage:        0 bytes
 28074 ;; Hardware stack levels used:    1
 28075 ;; Hardware stack levels required when called:   15
 28076 ;; This function calls:
 28077 ;;		_USBTransferOnePacket
 28078 ;;		_api_parse
 28079 ;;		_api_prepare
 28080 ;; This function is called by:
 28081 ;;		_main
 28082 ;; This function uses a non-reentrant model
 28083 ;;
 28084                           
 28085                           	psect	text98
 28086  010EB8                     __ptext98:
 28087                           	opt stack 0
 28088  010EB8                     _APP_DeviceCustomHIDTasks:
 28089                           	opt stack 15
 28090                           
 28091                           ;app_device_custom_hid.c: 75: uint8_t idx;;app_device_custom_hid.c: 80: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 28092                           
 28093                           ;incstack = 0
 28094  010EB8  0E20               	movlw	32
 28095  010EBA  602B               	cpfslt	_USBDeviceState,c	;volatile
 28096  010EBC  D001               	goto	l937
 28097  010EBE  0012               	return	
 28098  010EC0                     l937:
 28099                           
 28100                           ;app_device_custom_hid.c: 83: };app_device_custom_hid.c: 89: if( UCONbits.SUSPND== 1 )
 28101  010EC0  B265               	btfsc	3941,1,c	;volatile
 28102  010EC2  0012               	return	
 28103                           
 28104                           ;app_device_custom_hid.c: 92: };app_device_custom_hid.c: 95: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 28105                           
 28106                           ;app_device_custom_hid.c: 90: {;app_device_custom_hid.c: 91: return;
 28107  010EC4  0101               	movlb	1	; () banked
 28108  010EC6  515F               	movf	_USBOutHandle& (0+255),w,b
 28109  010EC8  1160               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 28110  010ECA  B4D8               	btfsc	status,2,c
 28111  010ECC  D006               	goto	u20370
 28112                           
 28113                           ; BSR set to: 1
 28114  010ECE  C15F  FFD9         	movff	_USBOutHandle,fsr2l
 28115  010ED2  C160  FFDA         	movff	_USBOutHandle+1,fsr2h
 28116  010ED6  BEDF               	btfsc	indf2,7,c
 28117  010ED8  0012               	return	
 28118  010EDA                     u20370:
 28119                           
 28120                           ; BSR set to: 1
 28121                           ;app_device_custom_hid.c: 96: {;app_device_custom_hid.c: 101: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 28122                           
 28123                           ; BSR set to: 1
 28124  010EDA  515D               	movf	_USBInHandle& (0+255),w,b
 28125  010EDC  115E               	iorwf	(_USBInHandle+1)& (0+255),w,b
 28126  010EDE  B4D8               	btfsc	status,2,c
 28127  010EE0  D006               	goto	u20390
 28128                           
 28129                           ; BSR set to: 1
 28130  010EE2  C15D  FFD9         	movff	_USBInHandle,fsr2l
 28131  010EE6  C15E  FFDA         	movff	_USBInHandle+1,fsr2h
 28132  010EEA  BEDF               	btfsc	indf2,7,c
 28133  010EEC  D01B               	goto	l943
 28134  010EEE                     u20390:
 28135                           
 28136                           ; BSR set to: 1
 28137                           ;app_device_custom_hid.c: 102: {;app_device_custom_hid.c: 104: api_prepare((uint8_t*) Re
      +                          ceivedDataBuffer, (uint8_t*) ToSendDataBuffer);
 28138                           
 28139                           ; BSR set to: 1
 28140  010EEE  0E38               	movlw	low _ReceivedDataBuffer
 28141  010EF0  0100               	movlb	0	; () banked
 28142  010EF2  6F70               	movwf	api_prepare@inBuffer& (0+255),b
 28143  010EF4  0E02               	movlw	high _ReceivedDataBuffer
 28144  010EF6  6F71               	movwf	(api_prepare@inBuffer+1)& (0+255),b
 28145  010EF8  0E00               	movlw	low _ToSendDataBuffer
 28146  010EFA  6F72               	movwf	api_prepare@outBuffer& (0+255),b
 28147  010EFC  0E03               	movlw	high _ToSendDataBuffer
 28148  010EFE  6F73               	movwf	(api_prepare@outBuffer+1)& (0+255),b
 28149  010F00  ECE2  F080         	call	_api_prepare	;wreg free
 28150                           
 28151                           ;app_device_custom_hid.c: 106: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 28152  010F04  0E01               	movlw	1
 28153  010F06  0100               	movlb	0	; () banked
 28154  010F08  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 28155  010F0A  0E00               	movlw	low _ToSendDataBuffer
 28156  010F0C  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 28157  010F0E  0E03               	movlw	high _ToSendDataBuffer
 28158  010F10  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 28159  010F12  0E40               	movlw	64
 28160  010F14  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 28161  010F16  0E01               	movlw	1
 28162  010F18  EC08  F07D         	call	_USBTransferOnePacket
 28163  010F1C  C060  F15D         	movff	?_USBTransferOnePacket,_USBInHandle
 28164  010F20  C061  F15E         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 28165  010F24                     l943:
 28166                           
 28167                           ;app_device_custom_hid.c: 107: };app_device_custom_hid.c: 110: api_parse(ReceivedDataBuf
      +                          fer, 64, ToSendDataBuffer);
 28168  010F24  0E38               	movlw	low _ReceivedDataBuffer
 28169  010F26  0100               	movlb	0	; () banked
 28170  010F28  6FBB               	movwf	api_parse@inBuffer& (0+255),b
 28171  010F2A  0E02               	movlw	high _ReceivedDataBuffer
 28172  010F2C  6FBC               	movwf	(api_parse@inBuffer+1)& (0+255),b
 28173  010F2E  0E40               	movlw	64
 28174  010F30  6FBD               	movwf	api_parse@receivedDataLength& (0+255),b
 28175  010F32  0E00               	movlw	low _ToSendDataBuffer
 28176  010F34  6FBE               	movwf	api_parse@outBuffer& (0+255),b
 28177  010F36  0E03               	movlw	high _ToSendDataBuffer
 28178  010F38  6FBF               	movwf	(api_parse@outBuffer+1)& (0+255),b
 28179  010F3A  EC47  F079         	call	_api_parse	;wreg free
 28180                           
 28181                           ;app_device_custom_hid.c: 114: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 28182  010F3E  0E00               	movlw	0
 28183  010F40  0100               	movlb	0	; () banked
 28184  010F42  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 28185  010F44  0E38               	movlw	low _ReceivedDataBuffer
 28186  010F46  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 28187  010F48  0E02               	movlw	high _ReceivedDataBuffer
 28188  010F4A  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 28189  010F4C  0E40               	movlw	64
 28190  010F4E  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 28191  010F50  0E01               	movlw	1
 28192  010F52  EC08  F07D         	call	_USBTransferOnePacket
 28193  010F56  C060  F15F         	movff	?_USBTransferOnePacket,_USBOutHandle
 28194  010F5A  C061  F160         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 28195  010F5E  0012               	return	
 28196  010F60                     __end_of_APP_DeviceCustomHIDTasks:
 28197                           	opt stack 0
 28198                           tosu	equ	0xFFF
 28199                           tosh	equ	0xFFE
 28200                           tosl	equ	0xFFD
 28201                           pclath	equ	0xFFA
 28202                           tblptru	equ	0xFF8
 28203                           tblptrh	equ	0xFF7
 28204                           tblptrl	equ	0xFF6
 28205                           tablat	equ	0xFF5
 28206                           prodh	equ	0xFF4
 28207                           prodl	equ	0xFF3
 28208                           intcon	equ	0xFF2
 28209                           postinc0	equ	0xFEE
 28210                           wreg	equ	0xFE8
 28211                           indf1	equ	0xFE7
 28212                           postdec1	equ	0xFE5
 28213                           plusw1	equ	0xFE3
 28214                           fsr1h	equ	0xFE2
 28215                           fsr1l	equ	0xFE1
 28216                           indf2	equ	0xFDF
 28217                           postinc2	equ	0xFDE
 28218                           postdec2	equ	0xFDD
 28219                           plusw2	equ	0xFDB
 28220                           fsr2h	equ	0xFDA
 28221                           fsr2l	equ	0xFD9
 28222                           status	equ	0xFD8
 28223                           
 28224 ;; *************** function _api_prepare *****************
 28225 ;; Defined at:
 28226 ;;		line 35 in file "api.c"
 28227 ;; Parameters:    Size  Location     Type
 28228 ;;  inBuffer        2   16[BANK0 ] PTR unsigned char 
 28229 ;;		 -> ReceivedDataBuffer(64), 
 28230 ;;  outBuffer       2   18[BANK0 ] PTR unsigned char 
 28231 ;;		 -> ToSendDataBuffer(64), 
 28232 ;; Auto vars:     Size  Location     Type
 28233 ;;  command         1   20[BANK0 ] enum E6715
 28234 ;; Return value:  Size  Location     Type
 28235 ;;                  1    wreg      void 
 28236 ;; Registers used:
 28237 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28238 ;; Tracked objects:
 28239 ;;		On entry : 0/0
 28240 ;;		On exit  : 0/0
 28241 ;;		Unchanged: 0/0
 28242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28243 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28244 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28246 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28247 ;;Total ram usage:        5 bytes
 28248 ;; Hardware stack levels used:    1
 28249 ;; Hardware stack levels required when called:   12
 28250 ;; This function calls:
 28251 ;;		__fill_buffer_get_display
 28252 ;;		__fill_buffer_get_mode_details
 28253 ;;		__fill_buffer_get_status
 28254 ;;		_memcpy
 28255 ;; This function is called by:
 28256 ;;		_APP_DeviceCustomHIDTasks
 28257 ;; This function uses a non-reentrant model
 28258 ;;
 28259                           
 28260                           	psect	text99
 28261  0101C4                     __ptext99:
 28262                           	opt stack 0
 28263  0101C4                     _api_prepare:
 28264                           	opt stack 17
 28265                           
 28266                           ;api.c: 37: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 28267                           
 28268                           ;incstack = 0
 28269  0101C4  C070  FFD9         	movff	api_prepare@inBuffer,fsr2l
 28270  0101C8  C071  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 28271  0101CC  50DF               	movf	indf2,w,c
 28272  0101CE  0100               	movlb	0	; () banked
 28273  0101D0  6F74               	movwf	api_prepare@command& (0+255),b
 28274                           
 28275                           ; BSR set to: 0
 28276                           ;api.c: 39: if(command>0x7F)
 28277  0101D2  0E7F               	movlw	127
 28278  0101D4  6574               	cpfsgt	api_prepare@command& (0+255),b
 28279  0101D6  D051               	goto	l2167
 28280                           
 28281                           ; BSR set to: 0
 28282                           ;api.c: 46: outBuffer[0] = 0x99;
 28283                           
 28284                           ; BSR set to: 0
 28285                           
 28286                           ;api.c: 42: {;api.c: 45: default:
 28287                           
 28288                           ; BSR set to: 0
 28289                           ;api.c: 40: {;api.c: 41: switch(command)
 28290  0101D8  C072  FFD9         	movff	api_prepare@outBuffer,fsr2l
 28291  0101DC  C073  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 28292  0101E0  0E99               	movlw	153
 28293  0101E2  6EDF               	movwf	indf2,c
 28294                           
 28295                           ; BSR set to: 0
 28296                           ;api.c: 47: outBuffer[1] = 0x99;
 28297  0101E4  EE20 F001          	lfsr	2,1
 28298  0101E8  5172               	movf	api_prepare@outBuffer& (0+255),w,b
 28299  0101EA  26D9               	addwf	fsr2l,f,c
 28300  0101EC  5173               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 28301  0101EE  22DA               	addwfc	fsr2h,f,c
 28302  0101F0  0E99               	movlw	153
 28303  0101F2  6EDF               	movwf	indf2,c
 28304                           
 28305                           ;api.c: 48: }
 28306  0101F4  0012               	return	
 28307  0101F6                     
 28308                           ; BSR set to: 0
 28309                           ;api.c: 61: _fill_buffer_get_status(outBuffer);
 28310                           
 28311                           ; BSR set to: 0
 28312  0101F6  C072  F06B         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 28313  0101FA  C073  F06C         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 28314  0101FE  EC81  F070         	call	__fill_buffer_get_status	;wreg free
 28315                           
 28316                           ;api.c: 62: break;
 28317  010202  0012               	return	
 28318  010204                     
 28319                           ;api.c: 66: _fill_buffer_get_display(outBuffer, 0);
 28320  010204  C072  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 28321  010208  C073  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 28322  01020C  0E00               	movlw	0
 28323  01020E  0100               	movlb	0	; () banked
 28324  010210  6F66               	movwf	__fill_buffer_get_display@secondHalf& (0+255),b
 28325  010212  EC4F  F085         	call	__fill_buffer_get_display	;wreg free
 28326                           
 28327                           ;api.c: 67: break;
 28328  010216  0012               	return	
 28329  010218                     
 28330                           ;api.c: 71: _fill_buffer_get_display(outBuffer, 1);
 28331  010218  C072  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 28332  01021C  C073  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 28333  010220  0E01               	movlw	1
 28334  010222  0100               	movlb	0	; () banked
 28335  010224  6F66               	movwf	__fill_buffer_get_display@secondHalf& (0+255),b
 28336  010226  EC4F  F085         	call	__fill_buffer_get_display	;wreg free
 28337                           
 28338                           ;api.c: 72: break;
 28339  01022A  0012               	return	
 28340  01022C                     
 28341                           ;api.c: 76: _fill_buffer_get_mode_details(outBuffer);
 28342  01022C  C072  F060         	movff	api_prepare@outBuffer,__fill_buffer_get_mode_details@outBuffer
 28343  010230  C073  F061         	movff	api_prepare@outBuffer+1,__fill_buffer_get_mode_details@outBuffer+1
 28344  010234  EC2F  F072         	call	__fill_buffer_get_mode_details	;wreg free
 28345                           
 28346                           ;api.c: 77: break;
 28347  010238  0012               	return	
 28348  01023A                     
 28349                           ;api.c: 81: memcpy(outBuffer, inBuffer, 64);
 28350  01023A  C072  F060         	movff	api_prepare@outBuffer,memcpy@d1
 28351  01023E  C073  F061         	movff	api_prepare@outBuffer+1,memcpy@d1+1
 28352  010242  C070  F062         	movff	api_prepare@inBuffer,memcpy@s1
 28353  010246  C071  F063         	movff	api_prepare@inBuffer+1,memcpy@s1+1
 28354  01024A  0E00               	movlw	0
 28355  01024C  0100               	movlb	0	; () banked
 28356  01024E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 28357  010250  0E40               	movlw	64
 28358  010252  6F64               	movwf	memcpy@n& (0+255),b
 28359  010254  EC35  F08D         	call	_memcpy	;wreg free
 28360                           
 28361                           ;api.c: 82: break;
 28362  010258  0012               	return	
 28363  01025A                     
 28364                           ;api.c: 85: outBuffer[0] = 0x99;
 28365  01025A  C072  FFD9         	movff	api_prepare@outBuffer,fsr2l
 28366  01025E  C073  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 28367  010262  0E99               	movlw	153
 28368  010264  6EDF               	movwf	indf2,c
 28369                           
 28370                           ;api.c: 86: outBuffer[1] = 0x99;
 28371  010266  0100               	movlb	0	; () banked
 28372  010268  EE20 F001          	lfsr	2,1
 28373  01026C  5172               	movf	api_prepare@outBuffer& (0+255),w,b
 28374  01026E  26D9               	addwf	fsr2l,f,c
 28375  010270  5173               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 28376  010272  22DA               	addwfc	fsr2h,f,c
 28377  010274  0E99               	movlw	153
 28378  010276  6EDF               	movwf	indf2,c
 28379                           
 28380                           ;api.c: 87: }
 28381  010278  0012               	return	
 28382  01027A                     l2167:
 28383                           
 28384                           ; BSR set to: 0
 28385                           
 28386                           ; BSR set to: 0
 28387  01027A  5174               	movf	api_prepare@command& (0+255),w,b
 28388                           
 28389                           ; Switch size 1, requested type "space"
 28390                           ; Number of cases is 6, Range of values is 0 to 32
 28391                           ; switch strategies available:
 28392                           ; Name         Instructions Cycles
 28393                           ; simple_byte           19    10 (average)
 28394                           ;	Chosen strategy is simple_byte
 28395  01027C  0A00               	xorlw	0	; case 0
 28396  01027E  B4D8               	btfsc	status,2,c
 28397  010280  0012               	return	
 28398  010282  0A10               	xorlw	16	; case 16
 28399  010284  B4D8               	btfsc	status,2,c
 28400  010286  D7B7               	goto	l2170
 28401  010288  0A01               	xorlw	1	; case 17
 28402  01028A  B4D8               	btfsc	status,2,c
 28403  01028C  D7BB               	goto	l2171
 28404  01028E  0A03               	xorlw	3	; case 18
 28405  010290  B4D8               	btfsc	status,2,c
 28406  010292  D7C2               	goto	l2172
 28407  010294  0A01               	xorlw	1	; case 19
 28408  010296  B4D8               	btfsc	status,2,c
 28409  010298  D7C9               	goto	l2173
 28410  01029A  0A33               	xorlw	51	; case 32
 28411  01029C  B4D8               	btfsc	status,2,c
 28412  01029E  D7CD               	goto	l2174
 28413  0102A0  D7DC               	goto	l2175
 28414  0102A2                     __end_of_api_prepare:
 28415                           	opt stack 0
 28416                           tosu	equ	0xFFF
 28417                           tosh	equ	0xFFE
 28418                           tosl	equ	0xFFD
 28419                           pclath	equ	0xFFA
 28420                           tblptru	equ	0xFF8
 28421                           tblptrh	equ	0xFF7
 28422                           tblptrl	equ	0xFF6
 28423                           tablat	equ	0xFF5
 28424                           prodh	equ	0xFF4
 28425                           prodl	equ	0xFF3
 28426                           intcon	equ	0xFF2
 28427                           postinc0	equ	0xFEE
 28428                           wreg	equ	0xFE8
 28429                           indf1	equ	0xFE7
 28430                           postdec1	equ	0xFE5
 28431                           plusw1	equ	0xFE3
 28432                           fsr1h	equ	0xFE2
 28433                           fsr1l	equ	0xFE1
 28434                           indf2	equ	0xFDF
 28435                           postinc2	equ	0xFDE
 28436                           postdec2	equ	0xFDD
 28437                           plusw2	equ	0xFDB
 28438                           fsr2h	equ	0xFDA
 28439                           fsr2l	equ	0xFD9
 28440                           status	equ	0xFD8
 28441                           
 28442 ;; *************** function __fill_buffer_get_status *****************
 28443 ;; Defined at:
 28444 ;;		line 168 in file "api.c"
 28445 ;; Parameters:    Size  Location     Type
 28446 ;;  outBuffer       2   11[BANK0 ] PTR unsigned char 
 28447 ;;		 -> ToSendDataBuffer(64), 
 28448 ;; Auto vars:     Size  Location     Type
 28449 ;;		None
 28450 ;; Return value:  Size  Location     Type
 28451 ;;                  1    wreg      void 
 28452 ;; Registers used:
 28453 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28454 ;; Tracked objects:
 28455 ;;		On entry : 0/0
 28456 ;;		On exit  : 0/0
 28457 ;;		Unchanged: 0/0
 28458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28459 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28462 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28463 ;;Total ram usage:        2 bytes
 28464 ;; Hardware stack levels used:    1
 28465 ;; Hardware stack levels required when called:   11
 28466 ;; This function calls:
 28467 ;;		_memcpy
 28468 ;; This function is called by:
 28469 ;;		_api_prepare
 28470 ;; This function uses a non-reentrant model
 28471 ;;
 28472                           
 28473                           	psect	text100
 28474  00E102                     __ptext100:
 28475                           	opt stack 0
 28476  00E102                     __fill_buffer_get_status:
 28477                           	opt stack 17
 28478                           
 28479                           ;api.c: 171: outBuffer[0] = DATAREQUEST_GET_STATUS;
 28480                           
 28481                           ;incstack = 0
 28482  00E102  C06B  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 28483  00E106  C06C  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 28484  00E10A  0E10               	movlw	16
 28485  00E10C  6EDF               	movwf	indf2,c
 28486                           
 28487                           ;api.c: 174: outBuffer[1] = ((unsigned char)((0x62A1)&0xFF));
 28488  00E10E  0100               	movlb	0	; () banked
 28489  00E110  EE20 F001          	lfsr	2,1
 28490  00E114  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 28491  00E116  26D9               	addwf	fsr2l,f,c
 28492  00E118  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 28493  00E11A  22DA               	addwfc	fsr2h,f,c
 28494  00E11C  0EA1               	movlw	161
 28495  00E11E  6EDF               	movwf	indf2,c
 28496                           
 28497                           ; BSR set to: 0
 28498                           ;api.c: 175: outBuffer[2] = ((unsigned char)(((0x62A1)>>8)&0xFF));
 28499  00E120  EE20 F002          	lfsr	2,2
 28500  00E124  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 28501  00E126  26D9               	addwf	fsr2l,f,c
 28502  00E128  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 28503  00E12A  22DA               	addwfc	fsr2h,f,c
 28504  00E12C  0E62               	movlw	98
 28505  00E12E  6EDF               	movwf	indf2,c
 28506                           
 28507                           ; BSR set to: 0
 28508                           ;api.c: 178: outBuffer[3] = 0x00;
 28509  00E130  EE20 F003          	lfsr	2,3
 28510  00E134  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 28511  00E136  26D9               	addwf	fsr2l,f,c
 28512  00E138  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 28513  00E13A  22DA               	addwfc	fsr2h,f,c
 28514  00E13C  0E00               	movlw	0
 28515  00E13E  6EDF               	movwf	indf2,c
 28516                           
 28517                           ; BSR set to: 0
 28518                           ;api.c: 179: outBuffer[4] = 0x02;
 28519  00E140  EE20 F004          	lfsr	2,4
 28520  00E144  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 28521  00E146  26D9               	addwf	fsr2l,f,c
 28522  00E148  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 28523  00E14A  22DA               	addwfc	fsr2h,f,c
 28524  00E14C  0E02               	movlw	2
 28525  00E14E  6EDF               	movwf	indf2,c
 28526                           
 28527                           ; BSR set to: 0
 28528                           ;api.c: 180: outBuffer[5] = 0x00;
 28529  00E150  EE20 F005          	lfsr	2,5
 28530  00E154  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 28531  00E156  26D9               	addwf	fsr2l,f,c
 28532  00E158  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 28533  00E15A  22DA               	addwfc	fsr2h,f,c
 28534  00E15C  0E00               	movlw	0
 28535  00E15E  6EDF               	movwf	indf2,c
 28536                           
 28537                           ; BSR set to: 0
 28538                           ;api.c: 183: outBuffer[6] = os.subTimeSlot;
 28539  00E160  EE20 F006          	lfsr	2,6
 28540  00E164  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 28541  00E166  26D9               	addwf	fsr2l,f,c
 28542  00E168  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 28543  00E16A  22DA               	addwfc	fsr2h,f,c
 28544  00E16C  C0D3  FFDF         	movff	_os,indf2	;volatile
 28545                           
 28546                           ; BSR set to: 0
 28547                           ;api.c: 184: outBuffer[7] = os.timeSlot;
 28548  00E170  EE20 F007          	lfsr	2,7
 28549  00E174  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 28550  00E176  26D9               	addwf	fsr2l,f,c
 28551  00E178  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 28552  00E17A  22DA               	addwfc	fsr2h,f,c
 28553  00E17C  C0D4  FFDF         	movff	_os+1,indf2	;volatile
 28554                           
 28555                           ; BSR set to: 0
 28556                           ;api.c: 185: outBuffer[8] = os.done;
 28557  00E180  EE20 F008          	lfsr	2,8
 28558  00E184  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 28559  00E186  26D9               	addwf	fsr2l,f,c
 28560  00E188  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 28561  00E18A  22DA               	addwfc	fsr2h,f,c
 28562  00E18C  C0D5  FFDF         	movff	_os+2,indf2	;volatile
 28563                           
 28564                           ; BSR set to: 0
 28565                           ;api.c: 186: outBuffer[9] = os.encoder1Count;
 28566  00E190  EE20 F009          	lfsr	2,9
 28567  00E194  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 28568  00E196  26D9               	addwf	fsr2l,f,c
 28569  00E198  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 28570  00E19A  22DA               	addwfc	fsr2h,f,c
 28571  00E19C  C0D6  FFDF         	movff	_os+3,indf2	;volatile
 28572                           
 28573                           ; BSR set to: 0
 28574                           ;api.c: 187: outBuffer[10] = os.button1;
 28575  00E1A0  EE20 F00A          	lfsr	2,10
 28576  00E1A4  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 28577  00E1A6  26D9               	addwf	fsr2l,f,c
 28578  00E1A8  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 28579  00E1AA  22DA               	addwfc	fsr2h,f,c
 28580  00E1AC  C0D7  FFDF         	movff	_os+4,indf2	;volatile
 28581                           
 28582                           ; BSR set to: 0
 28583                           ;api.c: 188: outBuffer[11] = os.encoder2Count;
 28584  00E1B0  EE20 F00B          	lfsr	2,11
 28585  00E1B4  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 28586  00E1B6  26D9               	addwf	fsr2l,f,c
 28587  00E1B8  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 28588  00E1BA  22DA               	addwfc	fsr2h,f,c
 28589  00E1BC  C0D8  FFDF         	movff	_os+5,indf2	;volatile
 28590                           
 28591                           ; BSR set to: 0
 28592                           ;api.c: 189: outBuffer[12] = os.button2;
 28593  00E1C0  EE20 F00C          	lfsr	2,12
 28594  00E1C4  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 28595  00E1C6  26D9               	addwf	fsr2l,f,c
 28596  00E1C8  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 28597  00E1CA  22DA               	addwfc	fsr2h,f,c
 28598  00E1CC  C0D9  FFDF         	movff	_os+6,indf2	;volatile
 28599                           
 28600                           ; BSR set to: 0
 28601                           ;api.c: 190: memcpy(&outBuffer[13], &os.current_position_in_steps, 4);
 28602  00E1D0  0E0D               	movlw	13
 28603  00E1D2  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 28604  00E1D4  6F60               	movwf	memcpy@d1& (0+255),b
 28605  00E1D6  0E00               	movlw	0
 28606  00E1D8  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 28607  00E1DA  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 28608  00E1DC  0EDA               	movlw	low (_os+7)
 28609  00E1DE  6F62               	movwf	memcpy@s1& (0+255),b
 28610  00E1E0  0E00               	movlw	high (_os+7)
 28611  00E1E2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 28612  00E1E4  0E00               	movlw	0
 28613  00E1E6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 28614  00E1E8  0E04               	movlw	4
 28615  00E1EA  6F64               	movwf	memcpy@n& (0+255),b
 28616  00E1EC  EC35  F08D         	call	_memcpy	;wreg free
 28617                           
 28618                           ;api.c: 195: memcpy(&outBuffer[17], &os.current_position_in_degrees, 4);
 28619  00E1F0  0E11               	movlw	17
 28620  00E1F2  0100               	movlb	0	; () banked
 28621  00E1F4  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 28622  00E1F6  6F60               	movwf	memcpy@d1& (0+255),b
 28623  00E1F8  0E00               	movlw	0
 28624  00E1FA  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 28625  00E1FC  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 28626  00E1FE  0EDE               	movlw	low (_os+11)
 28627  00E200  6F62               	movwf	memcpy@s1& (0+255),b
 28628  00E202  0E00               	movlw	high (_os+11)
 28629  00E204  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 28630  00E206  0E00               	movlw	0
 28631  00E208  6F65               	movwf	(memcpy@n+1)& (0+255),b
 28632  00E20A  0E04               	movlw	4
 28633  00E20C  6F64               	movwf	memcpy@n& (0+255),b
 28634  00E20E  EC35  F08D         	call	_memcpy	;wreg free
 28635                           
 28636                           ;api.c: 200: outBuffer[21] = os.displayState;
 28637  00E212  0100               	movlb	0	; () banked
 28638  00E214  EE20 F015          	lfsr	2,21
 28639  00E218  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 28640  00E21A  26D9               	addwf	fsr2l,f,c
 28641  00E21C  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 28642  00E21E  22DA               	addwfc	fsr2h,f,c
 28643  00E220  C0E0  FFDF         	movff	_os+13,indf2	;volatile
 28644                           
 28645                           ; BSR set to: 0
 28646                           ;api.c: 201: outBuffer[22] = os.beep_count;
 28647  00E224  EE20 F016          	lfsr	2,22
 28648  00E228  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 28649  00E22A  26D9               	addwf	fsr2l,f,c
 28650  00E22C  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 28651  00E22E  22DA               	addwfc	fsr2h,f,c
 28652  00E230  C0F9  FFDF         	movff	_os+38,indf2	;volatile
 28653                           
 28654                           ; BSR set to: 0
 28655                           ;api.c: 202: outBuffer[23] = ((unsigned char)((os.internal_temperature)&0xFF));
 28656  00E234  EE20 F017          	lfsr	2,23
 28657  00E238  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 28658  00E23A  26D9               	addwf	fsr2l,f,c
 28659  00E23C  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 28660  00E23E  22DA               	addwfc	fsr2h,f,c
 28661  00E240  C0FA  FFDF         	movff	_os+39,indf2	;volatile
 28662                           
 28663                           ; BSR set to: 0
 28664                           ;api.c: 203: outBuffer[24] = ((unsigned char)(((os.internal_temperature)>>8)&0xFF));
 28665  00E244  EE20 F018          	lfsr	2,24
 28666  00E248  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 28667  00E24A  26D9               	addwf	fsr2l,f,c
 28668  00E24C  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 28669  00E24E  22DA               	addwfc	fsr2h,f,c
 28670  00E250  51FB               	movf	(_os+40)& (0+255),w,b	;volatile
 28671  00E252  6EDF               	movwf	indf2,c
 28672                           
 28673                           ; BSR set to: 0
 28674                           ;api.c: 204: outBuffer[25] = ((unsigned char)((os.external_temperature)&0xFF));
 28675  00E254  EE20 F019          	lfsr	2,25
 28676  00E258  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 28677  00E25A  26D9               	addwf	fsr2l,f,c
 28678  00E25C  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 28679  00E25E  22DA               	addwfc	fsr2h,f,c
 28680  00E260  C0FC  FFDF         	movff	_os+41,indf2	;volatile
 28681                           
 28682                           ; BSR set to: 0
 28683                           ;api.c: 205: outBuffer[26] = ((unsigned char)(((os.external_temperature)>>8)&0xFF));
 28684  00E264  EE20 F01A          	lfsr	2,26
 28685  00E268  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 28686  00E26A  26D9               	addwf	fsr2l,f,c
 28687  00E26C  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 28688  00E26E  22DA               	addwfc	fsr2h,f,c
 28689  00E270  51FD               	movf	(_os+42)& (0+255),w,b	;volatile
 28690  00E272  6EDF               	movwf	indf2,c
 28691                           
 28692                           ; BSR set to: 0
 28693                           ;api.c: 206: outBuffer[27] = os.fan_on;
 28694  00E274  EE20 F01B          	lfsr	2,27
 28695  00E278  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 28696  00E27A  26D9               	addwf	fsr2l,f,c
 28697  00E27C  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 28698  00E27E  22DA               	addwfc	fsr2h,f,c
 28699  00E280  C0FE  FFDF         	movff	_os+43,indf2	;volatile
 28700                           
 28701                           ; BSR set to: 0
 28702                           ;api.c: 207: outBuffer[28] = os.brake_on;
 28703  00E284  EE20 F01C          	lfsr	2,28
 28704  00E288  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 28705  00E28A  26D9               	addwf	fsr2l,f,c
 28706  00E28C  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 28707  00E28E  22DA               	addwfc	fsr2h,f,c
 28708  00E290  C0FF  FFDF         	movff	_os+44,indf2	;volatile
 28709                           
 28710                           ; BSR set to: 0
 28711                           ;api.c: 208: outBuffer[29] = os.busy;
 28712  00E294  EE20 F01D          	lfsr	2,29
 28713  00E298  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 28714  00E29A  26D9               	addwf	fsr2l,f,c
 28715  00E29C  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 28716  00E29E  22DA               	addwfc	fsr2h,f,c
 28717  00E2A0  C0E1  FFDF         	movff	_os+14,indf2	;volatile
 28718                           
 28719                           ; BSR set to: 0
 28720                           ;api.c: 222: memcpy(&outBuffer[42], &config, 22);
 28721  00E2A4  0E2A               	movlw	42
 28722  00E2A6  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 28723  00E2A8  6F60               	movwf	memcpy@d1& (0+255),b
 28724  00E2AA  0E00               	movlw	0
 28725  00E2AC  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 28726  00E2AE  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 28727  00E2B0  0E7B               	movlw	low _config
 28728  00E2B2  6F62               	movwf	memcpy@s1& (0+255),b
 28729  00E2B4  0E01               	movlw	high _config
 28730  00E2B6  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 28731  00E2B8  0E00               	movlw	0
 28732  00E2BA  6F65               	movwf	(memcpy@n+1)& (0+255),b
 28733  00E2BC  0E16               	movlw	22
 28734  00E2BE  6F64               	movwf	memcpy@n& (0+255),b
 28735  00E2C0  EC35  F08D         	call	_memcpy	;wreg free
 28736  00E2C4  0012               	return		;funcret
 28737  00E2C6                     __end_of__fill_buffer_get_status:
 28738                           	opt stack 0
 28739                           tosu	equ	0xFFF
 28740                           tosh	equ	0xFFE
 28741                           tosl	equ	0xFFD
 28742                           pclath	equ	0xFFA
 28743                           tblptru	equ	0xFF8
 28744                           tblptrh	equ	0xFF7
 28745                           tblptrl	equ	0xFF6
 28746                           tablat	equ	0xFF5
 28747                           prodh	equ	0xFF4
 28748                           prodl	equ	0xFF3
 28749                           intcon	equ	0xFF2
 28750                           postinc0	equ	0xFEE
 28751                           wreg	equ	0xFE8
 28752                           indf1	equ	0xFE7
 28753                           postdec1	equ	0xFE5
 28754                           plusw1	equ	0xFE3
 28755                           fsr1h	equ	0xFE2
 28756                           fsr1l	equ	0xFE1
 28757                           indf2	equ	0xFDF
 28758                           postinc2	equ	0xFDE
 28759                           postdec2	equ	0xFDD
 28760                           plusw2	equ	0xFDB
 28761                           fsr2h	equ	0xFDA
 28762                           fsr2l	equ	0xFD9
 28763                           status	equ	0xFD8
 28764                           
 28765 ;; *************** function _memcpy *****************
 28766 ;; Defined at:
 28767 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 28768 ;; Parameters:    Size  Location     Type
 28769 ;;  d1              2    0[BANK0 ] PTR void 
 28770 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 28771 ;;		 -> msd_buffer(512), SetupPkt(8), 
 28772 ;;  s1              2    2[BANK0 ] PTR const void 
 28773 ;;		 -> flash_command_pagesize_528(4), flash_command_pagesize_512(4), STR_6(6), STR_5(9), 
 28774 ;;		 -> STR_4(7), STR_3(9), dc_manual(80), dc_zero(80), 
 28775 ;;		 -> STR_2(7), STR_1(9), dc_arc2(80), dc_arc1(80), 
 28776 ;;		 -> dc_divide2(80), dc_divide1(80), dc_setup2(80), dc_setup1(80), 
 28777 ;;		 -> dc_main(80), ReceivedDataBuffer(64), os.current_position_in_degrees(2), config(22), 
 28778 ;;		 -> os.current_position_in_steps(4), os(45), inq_resp(36), RAM(3759), 
 28779 ;;  n               2    4[BANK0 ] unsigned int 
 28780 ;; Auto vars:     Size  Location     Type
 28781 ;;  s               2    9[BANK0 ] PTR const unsigned char 
 28782 ;;		 -> flash_command_pagesize_528(4), flash_command_pagesize_512(4), STR_6(6), STR_5(9), 
 28783 ;;		 -> STR_4(7), STR_3(9), dc_manual(80), dc_zero(80), 
 28784 ;;		 -> STR_2(7), STR_1(9), dc_arc2(80), dc_arc1(80), 
 28785 ;;		 -> dc_divide2(80), dc_divide1(80), dc_setup2(80), dc_setup1(80), 
 28786 ;;		 -> dc_main(80), ReceivedDataBuffer(64), os.current_position_in_degrees(2), config(22), 
 28787 ;;		 -> os.current_position_in_steps(4), os(45), inq_resp(36), RAM(3759), 
 28788 ;;  d               2    7[BANK0 ] PTR unsigned char 
 28789 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 28790 ;;		 -> msd_buffer(512), SetupPkt(8), 
 28791 ;;  tmp             1    6[BANK0 ] unsigned char 
 28792 ;; Return value:  Size  Location     Type
 28793 ;;                  2    0[BANK0 ] PTR void 
 28794 ;; Registers used:
 28795 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 28796 ;; Tracked objects:
 28797 ;;		On entry : 0/0
 28798 ;;		On exit  : 0/0
 28799 ;;		Unchanged: 0/0
 28800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28801 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28802 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28804 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28805 ;;Total ram usage:       11 bytes
 28806 ;; Hardware stack levels used:    1
 28807 ;; Hardware stack levels required when called:   10
 28808 ;; This function calls:
 28809 ;;		Nothing
 28810 ;; This function is called by:
 28811 ;;		_MSDProcessCommandMediaPresent
 28812 ;;		_display_prepare
 28813 ;;		__flash_set_page_size
 28814 ;;		_api_prepare
 28815 ;;		__fill_buffer_get_status
 28816 ;;		_fat_create_file
 28817 ;; This function uses a non-reentrant model
 28818 ;;
 28819                           
 28820                           	psect	text101
 28821  011A6A                     __ptext101:
 28822                           	opt stack 0
 28823  011A6A                     _memcpy:
 28824                           	opt stack 17
 28825                           
 28826                           ;incstack = 0
 28827  011A6A  C062  F069         	movff	memcpy@s1,memcpy@s
 28828  011A6E  C063  F06A         	movff	memcpy@s1+1,memcpy@s+1
 28829  011A72  C060  F067         	movff	memcpy@d1,memcpy@d
 28830  011A76  C061  F068         	movff	memcpy@d1+1,memcpy@d+1
 28831  011A7A  D01D               	goto	l3354
 28832  011A7C                     l17292:
 28833  011A7C  C069  FFF6         	movff	memcpy@s,tblptrl
 28834  011A80  C06A  FFF7         	movff	memcpy@s+1,tblptrh
 28835  011A84  0E00               	movlw	low (__mediumconst shr (0+16))
 28836  011A86  6EF8               	movwf	tblptru,c
 28837  011A88  0E0E               	movlw	(high __ramtop+-1)
 28838  011A8A  64F7               	cpfsgt	tblptrh,c
 28839  011A8C  D003               	bra	u16547
 28840  011A8E  0008               	tblrd		*
 28841  011A90  50F5               	movf	tablat,w,c
 28842  011A92  D005               	bra	u16540
 28843  011A94                     u16547:
 28844  011A94  CFF6 FFE9          	movff	tblptrl,fsr0l
 28845  011A98  CFF7 FFEA          	movff	tblptrh,fsr0h
 28846  011A9C  50EF               	movf	indf0,w,c
 28847  011A9E                     u16540:
 28848  011A9E  0100               	movlb	0	; () banked
 28849  011AA0  6F66               	movwf	memcpy@tmp& (0+255),b
 28850                           
 28851                           ; BSR set to: 0
 28852  011AA2  4B69               	infsnz	memcpy@s& (0+255),f,b
 28853  011AA4  2B6A               	incf	(memcpy@s+1)& (0+255),f,b
 28854                           
 28855                           ; BSR set to: 0
 28856  011AA6  C067  FFD9         	movff	memcpy@d,fsr2l
 28857  011AAA  C068  FFDA         	movff	memcpy@d+1,fsr2h
 28858  011AAE  C066  FFDF         	movff	memcpy@tmp,indf2
 28859                           
 28860                           ; BSR set to: 0
 28861  011AB2  4B67               	infsnz	memcpy@d& (0+255),f,b
 28862  011AB4  2B68               	incf	(memcpy@d+1)& (0+255),f,b
 28863  011AB6                     l3354:
 28864                           
 28865                           ; BSR set to: 0
 28866  011AB6  0100               	movlb	0	; () banked
 28867  011AB8  0764               	decf	memcpy@n& (0+255),f,b
 28868  011ABA  A0D8               	btfss	status,0,c
 28869  011ABC  0765               	decf	(memcpy@n+1)& (0+255),f,b
 28870  011ABE  2964               	incf	memcpy@n& (0+255),w,b
 28871  011AC0  E1DD               	bnz	l17292
 28872  011AC2  2965               	incf	(memcpy@n+1)& (0+255),w,b
 28873  011AC4  B4D8               	btfsc	status,2,c
 28874  011AC6  0012               	return	
 28875  011AC8  D7D9               	goto	l3355
 28876  011ACA                     __end_of_memcpy:
 28877                           	opt stack 0
 28878                           tosu	equ	0xFFF
 28879                           tosh	equ	0xFFE
 28880                           tosl	equ	0xFFD
 28881                           pclath	equ	0xFFA
 28882                           tblptru	equ	0xFF8
 28883                           tblptrh	equ	0xFF7
 28884                           tblptrl	equ	0xFF6
 28885                           tablat	equ	0xFF5
 28886                           prodh	equ	0xFF4
 28887                           prodl	equ	0xFF3
 28888                           intcon	equ	0xFF2
 28889                           indf0	equ	0xFEF
 28890                           postinc0	equ	0xFEE
 28891                           fsr0h	equ	0xFEA
 28892                           fsr0l	equ	0xFE9
 28893                           wreg	equ	0xFE8
 28894                           indf1	equ	0xFE7
 28895                           postdec1	equ	0xFE5
 28896                           plusw1	equ	0xFE3
 28897                           fsr1h	equ	0xFE2
 28898                           fsr1l	equ	0xFE1
 28899                           indf2	equ	0xFDF
 28900                           postinc2	equ	0xFDE
 28901                           postdec2	equ	0xFDD
 28902                           plusw2	equ	0xFDB
 28903                           fsr2h	equ	0xFDA
 28904                           fsr2l	equ	0xFD9
 28905                           status	equ	0xFD8
 28906                           
 28907 ;; *************** function __fill_buffer_get_mode_details *****************
 28908 ;; Defined at:
 28909 ;;		line 267 in file "api.c"
 28910 ;; Parameters:    Size  Location     Type
 28911 ;;  outBuffer       2    0[BANK0 ] PTR unsigned char 
 28912 ;;		 -> ToSendDataBuffer(64), 
 28913 ;; Auto vars:     Size  Location     Type
 28914 ;;		None
 28915 ;; Return value:  Size  Location     Type
 28916 ;;                  1    wreg      void 
 28917 ;; Registers used:
 28918 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28919 ;; Tracked objects:
 28920 ;;		On entry : 0/0
 28921 ;;		On exit  : 0/0
 28922 ;;		Unchanged: 0/0
 28923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28924 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28926 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28927 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28928 ;;Total ram usage:        4 bytes
 28929 ;; Hardware stack levels used:    1
 28930 ;; Hardware stack levels required when called:   10
 28931 ;; This function calls:
 28932 ;;		Nothing
 28933 ;; This function is called by:
 28934 ;;		_api_prepare
 28935 ;; This function uses a non-reentrant model
 28936 ;;
 28937                           
 28938                           	psect	text102
 28939  00E45E                     __ptext102:
 28940                           	opt stack 0
 28941  00E45E                     __fill_buffer_get_mode_details:
 28942                           	opt stack 18
 28943                           
 28944                           ;api.c: 270: outBuffer[0] = DATAREQUEST_GET_MODE_DETAILS;
 28945                           
 28946                           ; BSR set to: 0
 28947                           ;incstack = 0
 28948  00E45E  C060  FFD9         	movff	__fill_buffer_get_mode_details@outBuffer,fsr2l
 28949  00E462  C061  FFDA         	movff	__fill_buffer_get_mode_details@outBuffer+1,fsr2h
 28950  00E466  0E13               	movlw	19
 28951  00E468  6EDF               	movwf	indf2,c
 28952                           
 28953                           ;api.c: 273: outBuffer[1] = ((unsigned char)((0x62A1)&0xFF));
 28954  00E46A  0100               	movlb	0	; () banked
 28955  00E46C  EE20 F001          	lfsr	2,1
 28956  00E470  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 28957  00E472  26D9               	addwf	fsr2l,f,c
 28958  00E474  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 28959  00E476  22DA               	addwfc	fsr2h,f,c
 28960  00E478  0EA1               	movlw	161
 28961  00E47A  6EDF               	movwf	indf2,c
 28962                           
 28963                           ; BSR set to: 0
 28964                           ;api.c: 274: outBuffer[2] = ((unsigned char)(((0x62A1)>>8)&0xFF));
 28965  00E47C  EE20 F002          	lfsr	2,2
 28966  00E480  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 28967  00E482  26D9               	addwf	fsr2l,f,c
 28968  00E484  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 28969  00E486  22DA               	addwfc	fsr2h,f,c
 28970  00E488  0E62               	movlw	98
 28971  00E48A  6EDF               	movwf	indf2,c
 28972                           
 28973                           ; BSR set to: 0
 28974                           ;api.c: 277: outBuffer[3] = os.displayState;
 28975  00E48C  EE20 F003          	lfsr	2,3
 28976  00E490  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 28977  00E492  26D9               	addwf	fsr2l,f,c
 28978  00E494  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 28979  00E496  22DA               	addwfc	fsr2h,f,c
 28980  00E498  C0E0  FFDF         	movff	_os+13,indf2	;volatile
 28981                           
 28982                           ;api.c: 279: switch(os.displayState & 0x0F)
 28983  00E49C  D084               	goto	l2210
 28984  00E49E                     
 28985                           ; BSR set to: 0
 28986                           ;api.c: 285: case DISPLAY_STATE_SETUP2:;api.c: 286: outBuffer[4] = os.setup_step_size;
 28987                           
 28988                           ; BSR set to: 0
 28989                           
 28990                           ; BSR set to: 0
 28991  00E49E  EE20 F004          	lfsr	2,4
 28992  00E4A2  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 28993  00E4A4  26D9               	addwf	fsr2l,f,c
 28994  00E4A6  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 28995  00E4A8  22DA               	addwfc	fsr2h,f,c
 28996  00E4AA  C0E3  FFDF         	movff	_os+16,indf2	;volatile
 28997                           
 28998                           ;api.c: 287: break;
 28999  00E4AE  0012               	return	
 29000  00E4B0                     
 29001                           ; BSR set to: 0
 29002                           ;api.c: 290: case DISPLAY_STATE_DIVIDE2:;api.c: 292: outBuffer[4] = os.divide_step_size;
 29003                           
 29004                           ; BSR set to: 0
 29005                           
 29006                           ; BSR set to: 0
 29007  00E4B0  EE20 F004          	lfsr	2,4
 29008  00E4B4  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 29009  00E4B6  26D9               	addwf	fsr2l,f,c
 29010  00E4B8  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 29011  00E4BA  22DA               	addwfc	fsr2h,f,c
 29012  00E4BC  C0E8  FFDF         	movff	_os+21,indf2	;volatile
 29013                           
 29014                           ;api.c: 293: outBuffer[5] = ((unsigned char)(((os.division)>>8)&0xFF));
 29015  00E4C0  EE20 F005          	lfsr	2,5
 29016  00E4C4  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 29017  00E4C6  26D9               	addwf	fsr2l,f,c
 29018  00E4C8  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 29019  00E4CA  22DA               	addwfc	fsr2h,f,c
 29020  00E4CC  51E7               	movf	(_os+20)& (0+255),w,b	;volatile
 29021  00E4CE  6EDF               	movwf	indf2,c
 29022                           
 29023                           ;api.c: 294: outBuffer[6] = ((unsigned char)((os.division)&0xFF));
 29024  00E4D0  EE20 F006          	lfsr	2,6
 29025  00E4D4  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 29026  00E4D6  26D9               	addwf	fsr2l,f,c
 29027  00E4D8  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 29028  00E4DA  22DA               	addwfc	fsr2h,f,c
 29029  00E4DC  C0E6  FFDF         	movff	_os+19,indf2	;volatile
 29030                           
 29031                           ;api.c: 295: outBuffer[7] = ((unsigned char)(((os.divide_jump_size)>>8)&0xFF));
 29032  00E4E0  EE20 F007          	lfsr	2,7
 29033  00E4E4  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 29034  00E4E6  26D9               	addwf	fsr2l,f,c
 29035  00E4E8  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 29036  00E4EA  22DA               	addwfc	fsr2h,f,c
 29037  00E4EC  51EC               	movf	(_os+25)& (0+255),w,b	;volatile
 29038  00E4EE  6EDF               	movwf	indf2,c
 29039                           
 29040                           ;api.c: 296: outBuffer[8] = ((unsigned char)((os.divide_jump_size)&0xFF));
 29041  00E4F0  EE20 F008          	lfsr	2,8
 29042  00E4F4  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 29043  00E4F6  26D9               	addwf	fsr2l,f,c
 29044  00E4F8  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 29045  00E4FA  22DA               	addwfc	fsr2h,f,c
 29046  00E4FC  C0EB  FFDF         	movff	_os+24,indf2	;volatile
 29047                           
 29048                           ;api.c: 297: outBuffer[9] = ((unsigned char)(((os.divide_position)>>8)&0xFF));
 29049  00E500  EE20 F009          	lfsr	2,9
 29050  00E504  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 29051  00E506  26D9               	addwf	fsr2l,f,c
 29052  00E508  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 29053  00E50A  22DA               	addwfc	fsr2h,f,c
 29054  00E50C  51EA               	movf	(_os+23)& (0+255),w,b	;volatile
 29055  00E50E  6EDF               	movwf	indf2,c
 29056                           
 29057                           ;api.c: 298: outBuffer[10] = ((unsigned char)((os.divide_position)&0xFF));
 29058  00E510  EE20 F00A          	lfsr	2,10
 29059  00E514  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 29060  00E516  26D9               	addwf	fsr2l,f,c
 29061  00E518  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 29062  00E51A  22DA               	addwfc	fsr2h,f,c
 29063  00E51C  C0E9  FFDF         	movff	_os+22,indf2	;volatile
 29064                           
 29065                           ;api.c: 299: break;
 29066  00E520  0012               	return	
 29067  00E522                     
 29068                           ; BSR set to: 0
 29069                           ;api.c: 302: case DISPLAY_STATE_ARC2:;api.c: 303: outBuffer[4] = ((unsigned char)(((os.a
      +                          rc_step_size)>>8)&0xFF));
 29070                           
 29071                           ; BSR set to: 0
 29072                           
 29073                           ; BSR set to: 0
 29074  00E522  EE20 F004          	lfsr	2,4
 29075  00E526  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 29076  00E528  26D9               	addwf	fsr2l,f,c
 29077  00E52A  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 29078  00E52C  22DA               	addwfc	fsr2h,f,c
 29079  00E52E  51EE               	movf	(_os+27)& (0+255),w,b	;volatile
 29080  00E530  6EDF               	movwf	indf2,c
 29081                           
 29082                           ;api.c: 304: outBuffer[5] = ((unsigned char)((os.arc_step_size)&0xFF));
 29083  00E532  EE20 F005          	lfsr	2,5
 29084  00E536  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 29085  00E538  26D9               	addwf	fsr2l,f,c
 29086  00E53A  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 29087  00E53C  22DA               	addwfc	fsr2h,f,c
 29088  00E53E  C0ED  FFDF         	movff	_os+26,indf2	;volatile
 29089                           
 29090                           ;api.c: 305: outBuffer[6] = os.arc_direction;
 29091  00E542  EE20 F006          	lfsr	2,6
 29092  00E546  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 29093  00E548  26D9               	addwf	fsr2l,f,c
 29094  00E54A  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 29095  00E54C  22DA               	addwfc	fsr2h,f,c
 29096  00E54E  C0F5  FFDF         	movff	_os+34,indf2	;volatile
 29097                           
 29098                           ;api.c: 306: outBuffer[7] = ((unsigned char)(((os.arc_speed)>>8)&0xFF));
 29099  00E552  EE20 F007          	lfsr	2,7
 29100  00E556  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 29101  00E558  26D9               	addwf	fsr2l,f,c
 29102  00E55A  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 29103  00E55C  22DA               	addwfc	fsr2h,f,c
 29104  00E55E  51F4               	movf	(_os+33)& (0+255),w,b	;volatile
 29105  00E560  6EDF               	movwf	indf2,c
 29106                           
 29107                           ;api.c: 307: outBuffer[8] = ((unsigned char)((os.arc_speed)&0xFF));
 29108  00E562  EE20 F008          	lfsr	2,8
 29109  00E566  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 29110  00E568  26D9               	addwf	fsr2l,f,c
 29111  00E56A  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 29112  00E56C  22DA               	addwfc	fsr2h,f,c
 29113  00E56E  C0F3  FFDF         	movff	_os+32,indf2	;volatile
 29114                           
 29115                           ; BSR set to: 0
 29116                           ;api.c: 311: break;
 29117                           
 29118                           ;api.c: 310: case DISPLAY_STATE_ZERO:
 29119                           
 29120                           ;api.c: 308: break;
 29121  00E572  0012               	return	
 29122  00E574                     
 29123                           ; BSR set to: 0
 29124                           ;api.c: 314: outBuffer[4] = os.manual_direction;
 29125                           
 29126                           ; BSR set to: 0
 29127  00E574  EE20 F004          	lfsr	2,4
 29128  00E578  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 29129  00E57A  26D9               	addwf	fsr2l,f,c
 29130  00E57C  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 29131  00E57E  22DA               	addwfc	fsr2h,f,c
 29132  00E580  C0F8  FFDF         	movff	_os+37,indf2	;volatile
 29133                           
 29134                           ;api.c: 315: outBuffer[5] = ((unsigned char)(((os.manual_speed)>>8)&0xFF));
 29135  00E584  EE20 F005          	lfsr	2,5
 29136  00E588  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 29137  00E58A  26D9               	addwf	fsr2l,f,c
 29138  00E58C  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 29139  00E58E  22DA               	addwfc	fsr2h,f,c
 29140  00E590  51F7               	movf	(_os+36)& (0+255),w,b	;volatile
 29141  00E592  6EDF               	movwf	indf2,c
 29142                           
 29143                           ;api.c: 316: outBuffer[6] = ((unsigned char)((os.manual_speed)&0xFF));
 29144  00E594  EE20 F006          	lfsr	2,6
 29145  00E598  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 29146  00E59A  26D9               	addwf	fsr2l,f,c
 29147  00E59C  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 29148  00E59E  22DA               	addwfc	fsr2h,f,c
 29149  00E5A0  C0F6  FFDF         	movff	_os+35,indf2	;volatile
 29150                           
 29151                           ; BSR set to: 0
 29152                           ;api.c: 318: }
 29153                           
 29154                           ;api.c: 317: break;
 29155  00E5A4  0012               	return	
 29156  00E5A6                     l2210:
 29157                           
 29158                           ; BSR set to: 0
 29159                           
 29160                           ; BSR set to: 0
 29161  00E5A6  51E0               	movf	(_os+13)& (0+255),w,b	;volatile
 29162  00E5A8  0B0F               	andlw	15
 29163  00E5AA  6F62               	movwf	??__fill_buffer_get_mode_details& (0+255),b
 29164  00E5AC  6B63               	clrf	(??__fill_buffer_get_mode_details+1)& (0+255),b
 29165                           
 29166                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 29167                           ; Switch size 1, requested type "space"
 29168                           ; Number of cases is 1, Range of values is 0 to 0
 29169                           ; switch strategies available:
 29170                           ; Name         Instructions Cycles
 29171                           ; simple_byte            4     3 (average)
 29172                           ;	Chosen strategy is simple_byte
 29173  00E5AE  5163               	movf	(??__fill_buffer_get_mode_details+1)& (0+255),w,b
 29174  00E5B0  0A00               	xorlw	0	; case 0
 29175  00E5B2  A4D8               	btfss	status,2,c
 29176  00E5B4  0012               	return	
 29177                           
 29178                           ; BSR set to: 0
 29179                           ; Switch size 1, requested type "space"
 29180                           ; Number of cases is 9, Range of values is 0 to 128
 29181                           ; switch strategies available:
 29182                           ; Name         Instructions Cycles
 29183                           ; simple_byte           28    15 (average)
 29184                           ;	Chosen strategy is simple_byte
 29185  00E5B6  5162               	movf	??__fill_buffer_get_mode_details& (0+255),w,b
 29186  00E5B8  0A00               	xorlw	0	; case 0
 29187  00E5BA  B4D8               	btfsc	status,2,c
 29188  00E5BC  0012               	return	
 29189  00E5BE  0A10               	xorlw	16	; case 16
 29190  00E5C0  B4D8               	btfsc	status,2,c
 29191  00E5C2  D76D               	goto	l2213
 29192  00E5C4  0A30               	xorlw	48	; case 32
 29193  00E5C6  B4D8               	btfsc	status,2,c
 29194  00E5C8  D76A               	goto	l2213
 29195  00E5CA  0A10               	xorlw	16	; case 48
 29196  00E5CC  B4D8               	btfsc	status,2,c
 29197  00E5CE  D770               	goto	l2215
 29198  00E5D0  0A70               	xorlw	112	; case 64
 29199  00E5D2  B4D8               	btfsc	status,2,c
 29200  00E5D4  D76D               	goto	l2215
 29201  00E5D6  0A10               	xorlw	16	; case 80
 29202  00E5D8  B4D8               	btfsc	status,2,c
 29203  00E5DA  D7A3               	goto	l2217
 29204  00E5DC  0A30               	xorlw	48	; case 96
 29205  00E5DE  B4D8               	btfsc	status,2,c
 29206  00E5E0  D7A0               	goto	l2217
 29207  00E5E2  0A10               	xorlw	16	; case 112
 29208  00E5E4  B4D8               	btfsc	status,2,c
 29209  00E5E6  0012               	return	
 29210  00E5E8  0AF0               	xorlw	240	; case 128
 29211  00E5EA  A4D8               	btfss	status,2,c
 29212  00E5EC  0012               	return	
 29213  00E5EE  D7C2               	goto	l2220
 29214  00E5F0                     __end_of__fill_buffer_get_mode_details:
 29215                           	opt stack 0
 29216                           tosu	equ	0xFFF
 29217                           tosh	equ	0xFFE
 29218                           tosl	equ	0xFFD
 29219                           pclath	equ	0xFFA
 29220                           tblptru	equ	0xFF8
 29221                           tblptrh	equ	0xFF7
 29222                           tblptrl	equ	0xFF6
 29223                           tablat	equ	0xFF5
 29224                           prodh	equ	0xFF4
 29225                           prodl	equ	0xFF3
 29226                           intcon	equ	0xFF2
 29227                           indf0	equ	0xFEF
 29228                           postinc0	equ	0xFEE
 29229                           fsr0h	equ	0xFEA
 29230                           fsr0l	equ	0xFE9
 29231                           wreg	equ	0xFE8
 29232                           indf1	equ	0xFE7
 29233                           postdec1	equ	0xFE5
 29234                           plusw1	equ	0xFE3
 29235                           fsr1h	equ	0xFE2
 29236                           fsr1l	equ	0xFE1
 29237                           indf2	equ	0xFDF
 29238                           postinc2	equ	0xFDE
 29239                           postdec2	equ	0xFDD
 29240                           plusw2	equ	0xFDB
 29241                           fsr2h	equ	0xFDA
 29242                           fsr2l	equ	0xFD9
 29243                           status	equ	0xFD8
 29244                           
 29245 ;; *************** function __fill_buffer_get_display *****************
 29246 ;; Defined at:
 29247 ;;		line 226 in file "api.c"
 29248 ;; Parameters:    Size  Location     Type
 29249 ;;  outBuffer       2    4[BANK0 ] PTR unsigned char 
 29250 ;;		 -> ToSendDataBuffer(64), 
 29251 ;;  secondHalf      1    6[BANK0 ] unsigned char 
 29252 ;; Auto vars:     Size  Location     Type
 29253 ;;  position        1   15[BANK0 ] unsigned char 
 29254 ;;  start_line      1   14[BANK0 ] unsigned char 
 29255 ;;  line            1   13[BANK0 ] unsigned char 
 29256 ;;  cntr            1   12[BANK0 ] unsigned char 
 29257 ;; Return value:  Size  Location     Type
 29258 ;;                  1    wreg      void 
 29259 ;; Registers used:
 29260 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29261 ;; Tracked objects:
 29262 ;;		On entry : 0/0
 29263 ;;		On exit  : 0/0
 29264 ;;		Unchanged: 0/0
 29265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29266 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29267 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29268 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29269 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29270 ;;Total ram usage:       12 bytes
 29271 ;; Hardware stack levels used:    1
 29272 ;; Hardware stack levels required when called:   11
 29273 ;; This function calls:
 29274 ;;		_display_get_character
 29275 ;; This function is called by:
 29276 ;;		_api_prepare
 29277 ;; This function uses a non-reentrant model
 29278 ;;
 29279                           
 29280                           	psect	text103
 29281  010A9E                     __ptext103:
 29282                           	opt stack 0
 29283  010A9E                     __fill_buffer_get_display:
 29284                           	opt stack 17
 29285                           
 29286                           ;api.c: 228: uint8_t cntr;;api.c: 229: uint8_t line;;api.c: 230: uint8_t start_line;;api
      +                          .c: 231: uint8_t position;;api.c: 234: if(secondHalf)
 29287                           
 29288                           ; BSR set to: 0
 29289                           ;incstack = 0
 29290  010A9E  0100               	movlb	0	; () banked
 29291  010AA0  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 29292  010AA2  B4D8               	btfsc	status,2,c
 29293  010AA4  D006               	goto	l2198
 29294                           
 29295                           ; BSR set to: 0
 29296                           ;api.c: 235: {;api.c: 236: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 29297  010AA6  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 29298  010AAA  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 29299  010AAE  0E12               	movlw	18
 29300  010AB0  D005               	goto	L54
 29301  010AB2                     l2198:
 29302                           
 29303                           ; BSR set to: 0
 29304                           ;api.c: 238: else;api.c: 239: {;api.c: 240: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 29305                           
 29306                           ; BSR set to: 0
 29307  010AB2  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 29308  010AB6  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 29309  010ABA  0E11               	movlw	17
 29310  010ABC                     L54:
 29311  010ABC  6EDF               	movwf	indf2,c
 29312                           
 29313                           ; BSR set to: 0
 29314                           ;api.c: 241: };api.c: 244: outBuffer[1] = ((unsigned char)((0x62A1)&0xFF));
 29315                           
 29316                           ; BSR set to: 0
 29317  010ABE  EE20 F001          	lfsr	2,1
 29318  010AC2  5164               	movf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 29319  010AC4  26D9               	addwf	fsr2l,f,c
 29320  010AC6  5165               	movf	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 29321  010AC8  22DA               	addwfc	fsr2h,f,c
 29322  010ACA  0EA1               	movlw	161
 29323  010ACC  6EDF               	movwf	indf2,c
 29324                           
 29325                           ; BSR set to: 0
 29326                           ;api.c: 245: outBuffer[2] = ((unsigned char)(((0x62A1)>>8)&0xFF));
 29327  010ACE  EE20 F002          	lfsr	2,2
 29328  010AD2  5164               	movf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 29329  010AD4  26D9               	addwf	fsr2l,f,c
 29330  010AD6  5165               	movf	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 29331  010AD8  22DA               	addwfc	fsr2h,f,c
 29332  010ADA  0E62               	movlw	98
 29333  010ADC  6EDF               	movwf	indf2,c
 29334                           
 29335                           ; BSR set to: 0
 29336                           ;api.c: 248: cntr = 3;
 29337  010ADE  0E03               	movlw	3
 29338  010AE0  6F6C               	movwf	__fill_buffer_get_display@cntr& (0+255),b
 29339                           
 29340                           ; BSR set to: 0
 29341                           ;api.c: 249: if(secondHalf)
 29342  010AE2  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 29343  010AE4  B4D8               	btfsc	status,2,c
 29344  010AE6  D002               	goto	l2200
 29345                           
 29346                           ; BSR set to: 0
 29347                           ;api.c: 250: {;api.c: 251: start_line = 2;
 29348  010AE8  0E02               	movlw	2
 29349  010AEA  D001               	goto	L55
 29350  010AEC                     l2200:
 29351                           
 29352                           ; BSR set to: 0
 29353                           ;api.c: 253: else;api.c: 254: {;api.c: 255: start_line = 0;
 29354                           
 29355                           ; BSR set to: 0
 29356  010AEC  0E00               	movlw	0
 29357  010AEE                     L55:
 29358  010AEE  6F6E               	movwf	__fill_buffer_get_display@start_line& (0+255),b
 29359                           
 29360                           ; BSR set to: 0
 29361                           ;api.c: 256: };api.c: 257: for(line=start_line; line<start_line+2; ++line)
 29362                           
 29363                           ; BSR set to: 0
 29364  010AF0  C06E  F06D         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 29365  010AF4  D01B               	goto	l2202
 29366  010AF6                     
 29367                           ; BSR set to: 0
 29368                           ;api.c: 258: {;api.c: 259: for(position=0; position<20; ++position)
 29369                           
 29370                           ; BSR set to: 0
 29371  010AF6  0E00               	movlw	0
 29372  010AF8  6F6F               	movwf	__fill_buffer_get_display@position& (0+255),b
 29373  010AFA                     l19552:
 29374                           
 29375                           ; BSR set to: 0
 29376  010AFA  0E13               	movlw	19
 29377  010AFC  656F               	cpfsgt	__fill_buffer_get_display@position& (0+255),b
 29378  010AFE  D001               	goto	l2204
 29379  010B00  D014               	goto	u19130
 29380  010B02                     l2204:
 29381                           
 29382                           ; BSR set to: 0
 29383                           ;api.c: 260: {;api.c: 261: outBuffer[cntr] = (uint8_t) display_get_character(line, posit
      +                          ion);
 29384                           
 29385                           ; BSR set to: 0
 29386  010B02  C06F  F060         	movff	__fill_buffer_get_display@position,display_get_character@position
 29387  010B06  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 29388  010B08  EC07  F093         	call	_display_get_character
 29389  010B0C  0100               	movlb	0	; () banked
 29390  010B0E  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 29391  010B10  516C               	movf	__fill_buffer_get_display@cntr& (0+255),w,b
 29392  010B12  0D01               	mullw	1
 29393  010B14  50F3               	movf	prodl,w,c
 29394  010B16  2564               	addwf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 29395  010B18  6ED9               	movwf	fsr2l,c
 29396  010B1A  50F4               	movf	prodh,w,c
 29397  010B1C  2165               	addwfc	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 29398  010B1E  6EDA               	movwf	fsr2h,c
 29399  010B20  C067  FFDF         	movff	??__fill_buffer_get_display,indf2
 29400                           
 29401                           ; BSR set to: 0
 29402                           ;api.c: 262: ++cntr;
 29403  010B24  2B6C               	incf	__fill_buffer_get_display@cntr& (0+255),f,b
 29404                           
 29405                           ; BSR set to: 0
 29406  010B26  2B6F               	incf	__fill_buffer_get_display@position& (0+255),f,b
 29407  010B28  D7E8               	goto	l19552
 29408  010B2A                     u19130:
 29409                           
 29410                           ; BSR set to: 0
 29411                           
 29412                           ; BSR set to: 0
 29413  010B2A  2B6D               	incf	__fill_buffer_get_display@line& (0+255),f,b
 29414  010B2C                     l2202:
 29415                           
 29416                           ; BSR set to: 0
 29417                           
 29418                           ; BSR set to: 0
 29419  010B2C  516E               	movf	__fill_buffer_get_display@start_line& (0+255),w,b
 29420  010B2E  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 29421  010B30  6B68               	clrf	(??__fill_buffer_get_display+1)& (0+255),b
 29422  010B32  0E02               	movlw	2
 29423  010B34  2767               	addwf	??__fill_buffer_get_display& (0+255),f,b
 29424  010B36  0E00               	movlw	0
 29425  010B38  2368               	addwfc	(??__fill_buffer_get_display+1)& (0+255),f,b
 29426  010B3A  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 29427  010B3C  6F69               	movwf	(??__fill_buffer_get_display+2)& (0+255),b
 29428  010B3E  6B6A               	clrf	(??__fill_buffer_get_display+3)& (0+255),b
 29429  010B40  5167               	movf	??__fill_buffer_get_display& (0+255),w,b
 29430  010B42  5D69               	subwf	(??__fill_buffer_get_display+2)& (0+255),w,b
 29431  010B44  516A               	movf	(??__fill_buffer_get_display+3)& (0+255),w,b
 29432  010B46  0A80               	xorlw	128
 29433  010B48  6F6B               	movwf	(??__fill_buffer_get_display+4)& (0+255),b
 29434  010B4A  5168               	movf	(??__fill_buffer_get_display+1)& (0+255),w,b
 29435  010B4C  0A80               	xorlw	128
 29436  010B4E  596B               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,b
 29437  010B50  B0D8               	btfsc	status,0,c
 29438  010B52  0012               	return	
 29439  010B54  D7D0               	goto	l2203
 29440  010B56                     __end_of__fill_buffer_get_display:
 29441                           	opt stack 0
 29442                           tosu	equ	0xFFF
 29443                           tosh	equ	0xFFE
 29444                           tosl	equ	0xFFD
 29445                           pclath	equ	0xFFA
 29446                           tblptru	equ	0xFF8
 29447                           tblptrh	equ	0xFF7
 29448                           tblptrl	equ	0xFF6
 29449                           tablat	equ	0xFF5
 29450                           prodh	equ	0xFF4
 29451                           prodl	equ	0xFF3
 29452                           intcon	equ	0xFF2
 29453                           indf0	equ	0xFEF
 29454                           postinc0	equ	0xFEE
 29455                           fsr0h	equ	0xFEA
 29456                           fsr0l	equ	0xFE9
 29457                           wreg	equ	0xFE8
 29458                           indf1	equ	0xFE7
 29459                           postdec1	equ	0xFE5
 29460                           plusw1	equ	0xFE3
 29461                           fsr1h	equ	0xFE2
 29462                           fsr1l	equ	0xFE1
 29463                           indf2	equ	0xFDF
 29464                           postinc2	equ	0xFDE
 29465                           postdec2	equ	0xFDD
 29466                           plusw2	equ	0xFDB
 29467                           fsr2h	equ	0xFDA
 29468                           fsr2l	equ	0xFD9
 29469                           status	equ	0xFD8
 29470                           
 29471 ;; *************** function _display_get_character *****************
 29472 ;; Defined at:
 29473 ;;		line 580 in file "display.c"
 29474 ;; Parameters:    Size  Location     Type
 29475 ;;  line            1    wreg     unsigned char 
 29476 ;;  position        1    0[BANK0 ] unsigned char 
 29477 ;; Auto vars:     Size  Location     Type
 29478 ;;  line            1    3[BANK0 ] unsigned char 
 29479 ;; Return value:  Size  Location     Type
 29480 ;;                  1    wreg      unsigned char 
 29481 ;; Registers used:
 29482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29483 ;; Tracked objects:
 29484 ;;		On entry : 0/0
 29485 ;;		On exit  : 0/0
 29486 ;;		Unchanged: 0/0
 29487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29488 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29489 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29490 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29491 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29492 ;;Total ram usage:        4 bytes
 29493 ;; Hardware stack levels used:    1
 29494 ;; Hardware stack levels required when called:   10
 29495 ;; This function calls:
 29496 ;;		Nothing
 29497 ;; This function is called by:
 29498 ;;		__fill_buffer_get_display
 29499 ;; This function uses a non-reentrant model
 29500 ;;
 29501                           
 29502                           	psect	text104
 29503  01260E                     __ptext104:
 29504                           	opt stack 0
 29505  01260E                     _display_get_character:
 29506                           	opt stack 17
 29507                           
 29508                           ; BSR set to: 0
 29509                           ;incstack = 0
 29510                           ;display_get_character@line stored from wreg
 29511  01260E  0100               	movlb	0	; () banked
 29512  012610  6F63               	movwf	display_get_character@line& (0+255),b
 29513                           
 29514                           ;display.c: 582: return display_content[line][position];
 29515  012612  0100               	movlb	0	; () banked
 29516  012614  5163               	movf	display_get_character@line& (0+255),w,b
 29517  012616  0D14               	mullw	20
 29518  012618  0E78               	movlw	low _display_content
 29519  01261A  6F61               	movwf	??_display_get_character& (0+255),b
 29520  01261C  0E02               	movlw	high _display_content
 29521  01261E  6F62               	movwf	(??_display_get_character+1)& (0+255),b
 29522  012620  50F3               	movf	prodl,w,c
 29523  012622  2761               	addwf	??_display_get_character& (0+255),f,b
 29524  012624  50F4               	movf	prodh,w,c
 29525  012626  2362               	addwfc	(??_display_get_character+1)& (0+255),f,b
 29526  012628  5160               	movf	display_get_character@position& (0+255),w,b
 29527  01262A  0D01               	mullw	1
 29528  01262C  50F3               	movf	prodl,w,c
 29529  01262E  2561               	addwf	??_display_get_character& (0+255),w,b
 29530  012630  6ED9               	movwf	fsr2l,c
 29531  012632  50F4               	movf	prodh,w,c
 29532  012634  2162               	addwfc	(??_display_get_character+1)& (0+255),w,b
 29533  012636  6EDA               	movwf	fsr2h,c
 29534  012638  50DF               	movf	indf2,w,c
 29535  01263A  0012               	return	
 29536  01263C                     __end_of_display_get_character:
 29537                           	opt stack 0
 29538                           tosu	equ	0xFFF
 29539                           tosh	equ	0xFFE
 29540                           tosl	equ	0xFFD
 29541                           pclath	equ	0xFFA
 29542                           tblptru	equ	0xFF8
 29543                           tblptrh	equ	0xFF7
 29544                           tblptrl	equ	0xFF6
 29545                           tablat	equ	0xFF5
 29546                           prodh	equ	0xFF4
 29547                           prodl	equ	0xFF3
 29548                           intcon	equ	0xFF2
 29549                           indf0	equ	0xFEF
 29550                           postinc0	equ	0xFEE
 29551                           fsr0h	equ	0xFEA
 29552                           fsr0l	equ	0xFE9
 29553                           wreg	equ	0xFE8
 29554                           indf1	equ	0xFE7
 29555                           postdec1	equ	0xFE5
 29556                           plusw1	equ	0xFE3
 29557                           fsr1h	equ	0xFE2
 29558                           fsr1l	equ	0xFE1
 29559                           indf2	equ	0xFDF
 29560                           postinc2	equ	0xFDE
 29561                           postdec2	equ	0xFDD
 29562                           plusw2	equ	0xFDB
 29563                           fsr2h	equ	0xFDA
 29564                           fsr2l	equ	0xFD9
 29565                           status	equ	0xFD8
 29566                           
 29567 ;; *************** function _api_parse *****************
 29568 ;; Defined at:
 29569 ;;		line 91 in file "api.c"
 29570 ;; Parameters:    Size  Location     Type
 29571 ;;  inBuffer        2   91[BANK0 ] PTR unsigned char 
 29572 ;;		 -> ReceivedDataBuffer(64), 
 29573 ;;  receivedData    1   93[BANK0 ] unsigned char 
 29574 ;;  outBuffer       2   94[BANK0 ] PTR unsigned char 
 29575 ;;		 -> ToSendDataBuffer(64), 
 29576 ;; Auto vars:     Size  Location     Type
 29577 ;;  out_idx_ptr     2   98[BANK0 ] PTR unsigned char 
 29578 ;;		 -> api_parse@out_idx(1), 
 29579 ;;  in_idx          1  101[BANK0 ] unsigned char 
 29580 ;;  out_idx         1  100[BANK0 ] unsigned char 
 29581 ;; Return value:  Size  Location     Type
 29582 ;;                  1    wreg      void 
 29583 ;; Registers used:
 29584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29585 ;; Tracked objects:
 29586 ;;		On entry : 0/0
 29587 ;;		On exit  : 0/0
 29588 ;;		Unchanged: 0/0
 29589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29590 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29591 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29592 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29593 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29594 ;;Total ram usage:       11 bytes
 29595 ;; Hardware stack levels used:    1
 29596 ;; Hardware stack levels required when called:   14
 29597 ;; This function calls:
 29598 ;;		__parse_command_long
 29599 ;;		__parse_command_short
 29600 ;; This function is called by:
 29601 ;;		_APP_DeviceCustomHIDTasks
 29602 ;; This function uses a non-reentrant model
 29603 ;;
 29604                           
 29605                           	psect	text105
 29606  00F28E                     __ptext105:
 29607                           	opt stack 0
 29608  00F28E                     _api_parse:
 29609                           	opt stack 15
 29610                           
 29611                           ;api.c: 95: uint8_t in_idx;;api.c: 96: uint8_t out_idx;;api.c: 97: uint8_t *out_idx_ptr;
      +                          ;api.c: 99: out_idx = 0;
 29612                           
 29613                           ; BSR set to: 0
 29614                           ;incstack = 0
 29615  00F28E  0E00               	movlw	0
 29616  00F290  0100               	movlb	0	; () banked
 29617  00F292  6FC4               	movwf	api_parse@out_idx& (0+255),b
 29618                           
 29619                           ; BSR set to: 0
 29620                           ;api.c: 100: out_idx_ptr = &out_idx;
 29621  00F294  0EC4               	movlw	low api_parse@out_idx
 29622  00F296  6FC2               	movwf	api_parse@out_idx_ptr& (0+255),b
 29623  00F298  0E00               	movlw	high api_parse@out_idx
 29624  00F29A  6FC3               	movwf	(api_parse@out_idx_ptr+1)& (0+255),b
 29625                           
 29626                           ; BSR set to: 0
 29627                           ;api.c: 102: if(inBuffer[0]>0x7F)
 29628  00F29C  C0BB  FFD9         	movff	api_parse@inBuffer,fsr2l
 29629  00F2A0  C0BC  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 29630  00F2A4  0E7F               	movlw	127
 29631  00F2A6  64DF               	cpfsgt	indf2,c
 29632  00F2A8  D001               	goto	l2179
 29633  00F2AA  0012               	return	
 29634  00F2AC                     l2179:
 29635                           
 29636                           ; BSR set to: 0
 29637                           ;api.c: 107: };api.c: 109: if(inBuffer[0]==DATAREQUEST_GET_ECHO)
 29638                           
 29639                           ; BSR set to: 0
 29640  00F2AC  C0BB  FFD9         	movff	api_parse@inBuffer,fsr2l
 29641  00F2B0  C0BC  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 29642  00F2B4  0E20               	movlw	32
 29643  00F2B6  18DE               	xorwf	postinc2,w,c
 29644  00F2B8  B4D8               	btfsc	status,2,c
 29645  00F2BA  0012               	return	
 29646                           
 29647                           ; BSR set to: 0
 29648                           ;api.c: 114: };api.c: 116: if(inBuffer[0]==DATAREQUEST_GET_COMMAND_RESPONSE)
 29649                           
 29650                           ; BSR set to: 0
 29651                           
 29652                           ; BSR set to: 0
 29653                           ;api.c: 110: {;api.c: 113: return;
 29654  00F2BC  C0BB  FFD9         	movff	api_parse@inBuffer,fsr2l
 29655  00F2C0  C0BC  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 29656  00F2C4  50DF               	movf	indf2,w,c
 29657  00F2C6  A4D8               	btfss	status,2,c
 29658  00F2C8  D018               	goto	l2182
 29659                           
 29660                           ; BSR set to: 0
 29661                           ;api.c: 117: {;api.c: 119: outBuffer[0] = DATAREQUEST_GET_COMMAND_RESPONSE;
 29662  00F2CA  C0BE  FFD9         	movff	api_parse@outBuffer,fsr2l
 29663  00F2CE  C0BF  FFDA         	movff	api_parse@outBuffer+1,fsr2h
 29664  00F2D2  0E00               	movlw	0
 29665  00F2D4  6EDF               	movwf	indf2,c
 29666                           
 29667                           ; BSR set to: 0
 29668                           ;api.c: 122: outBuffer[1] = ((unsigned char)((0x62A1)&0xFF));
 29669  00F2D6  EE20 F001          	lfsr	2,1
 29670  00F2DA  51BE               	movf	api_parse@outBuffer& (0+255),w,b
 29671  00F2DC  26D9               	addwf	fsr2l,f,c
 29672  00F2DE  51BF               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 29673  00F2E0  22DA               	addwfc	fsr2h,f,c
 29674  00F2E2  0EA1               	movlw	161
 29675  00F2E4  6EDF               	movwf	indf2,c
 29676                           
 29677                           ; BSR set to: 0
 29678                           ;api.c: 123: outBuffer[2] = ((unsigned char)(((0x62A1)>>8)&0xFF));
 29679  00F2E6  EE20 F002          	lfsr	2,2
 29680  00F2EA  51BE               	movf	api_parse@outBuffer& (0+255),w,b
 29681  00F2EC  26D9               	addwf	fsr2l,f,c
 29682  00F2EE  51BF               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 29683  00F2F0  22DA               	addwfc	fsr2h,f,c
 29684  00F2F2  0E62               	movlw	98
 29685  00F2F4  6EDF               	movwf	indf2,c
 29686                           
 29687                           ; BSR set to: 0
 29688                           ;api.c: 126: out_idx = 3;
 29689  00F2F6  0E03               	movlw	3
 29690  00F2F8  6FC4               	movwf	api_parse@out_idx& (0+255),b
 29691  00F2FA                     l2182:
 29692                           
 29693                           ; BSR set to: 0
 29694                           ;api.c: 127: };api.c: 129: in_idx = 1;
 29695                           
 29696                           ; BSR set to: 0
 29697  00F2FA  0E01               	movlw	1
 29698  00F2FC  6FC5               	movwf	api_parse@in_idx& (0+255),b
 29699                           
 29700                           ;api.c: 130: while(in_idx<receivedDataLength)
 29701  00F2FE  D057               	goto	l2188
 29702  00F300                     
 29703                           ; BSR set to: 0
 29704                           ;api.c: 131: {;api.c: 133: if(inBuffer[in_idx]==COMMAND_STOP_PARSING)
 29705                           
 29706                           ; BSR set to: 0
 29707  00F300  51C5               	movf	api_parse@in_idx& (0+255),w,b
 29708  00F302  0D01               	mullw	1
 29709  00F304  50F3               	movf	prodl,w,c
 29710  00F306  25BB               	addwf	api_parse@inBuffer& (0+255),w,b
 29711  00F308  6ED9               	movwf	fsr2l,c
 29712  00F30A  50F4               	movf	prodh,w,c
 29713  00F30C  21BC               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 29714  00F30E  6EDA               	movwf	fsr2h,c
 29715  00F310  0E99               	movlw	153
 29716  00F312  18DE               	xorwf	postinc2,w,c
 29717  00F314  B4D8               	btfsc	status,2,c
 29718  00F316  0012               	return	
 29719  00F318  D02F               	goto	l2186
 29720  00F31A                     
 29721                           ; BSR set to: 0
 29722                           ;api.c: 141: _parse_command_short(inBuffer[in_idx]);
 29723                           
 29724                           ; BSR set to: 0
 29725  00F31A  51C5               	movf	api_parse@in_idx& (0+255),w,b
 29726  00F31C  0D01               	mullw	1
 29727  00F31E  50F3               	movf	prodl,w,c
 29728  00F320  25BB               	addwf	api_parse@inBuffer& (0+255),w,b
 29729  00F322  6ED9               	movwf	fsr2l,c
 29730  00F324  50F4               	movf	prodh,w,c
 29731  00F326  21BC               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 29732  00F328  6EDA               	movwf	fsr2h,c
 29733  00F32A  50DF               	movf	indf2,w,c
 29734  00F32C  ECF8  F072         	call	__parse_command_short
 29735  00F330  D00B               	goto	l19988
 29736  00F332                     
 29737                           ; BSR set to: 0
 29738                           ;api.c: 146: _parse_command_short(inBuffer[in_idx]);
 29739                           
 29740                           ; BSR set to: 0
 29741  00F332  51C5               	movf	api_parse@in_idx& (0+255),w,b
 29742  00F334  0D01               	mullw	1
 29743  00F336  50F3               	movf	prodl,w,c
 29744  00F338  25BB               	addwf	api_parse@inBuffer& (0+255),w,b
 29745  00F33A  6ED9               	movwf	fsr2l,c
 29746  00F33C  50F4               	movf	prodh,w,c
 29747  00F33E  21BC               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 29748  00F340  6EDA               	movwf	fsr2h,c
 29749  00F342  50DF               	movf	indf2,w,c
 29750  00F344  ECF8  F072         	call	__parse_command_short
 29751  00F348                     l19988:
 29752                           
 29753                           ;api.c: 147: ++in_idx;
 29754  00F348  0100               	movlb	0	; () banked
 29755  00F34A  2BC5               	incf	api_parse@in_idx& (0+255),f,b
 29756                           
 29757                           ;api.c: 148: break;
 29758  00F34C  D030               	goto	l2188
 29759  00F34E                     
 29760                           ; BSR set to: 0
 29761                           ;api.c: 151: in_idx += _parse_command_long(&inBuffer[in_idx], outBuffer, out_idx_ptr);
 29762                           
 29763                           ; BSR set to: 0
 29764  00F34E  51C5               	movf	api_parse@in_idx& (0+255),w,b
 29765  00F350  0D01               	mullw	1
 29766  00F352  50F3               	movf	prodl,w,c
 29767  00F354  25BB               	addwf	api_parse@inBuffer& (0+255),w,b
 29768  00F356  6FAA               	movwf	__parse_command_long@data& (0+255),b
 29769  00F358  50F4               	movf	prodh,w,c
 29770  00F35A  21BC               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 29771  00F35C  6FAB               	movwf	(__parse_command_long@data+1)& (0+255),b
 29772  00F35E  C0BE  F0AC         	movff	api_parse@outBuffer,__parse_command_long@out_buffer
 29773  00F362  C0BF  F0AD         	movff	api_parse@outBuffer+1,__parse_command_long@out_buffer+1
 29774  00F366  C0C2  F0AE         	movff	api_parse@out_idx_ptr,__parse_command_long@out_idx_ptr
 29775  00F36A  C0C3  F0AF         	movff	api_parse@out_idx_ptr+1,__parse_command_long@out_idx_ptr+1
 29776  00F36E  EC74  F091         	call	__parse_command_long	;wreg free
 29777  00F372  0100               	movlb	0	; () banked
 29778  00F374  27C5               	addwf	api_parse@in_idx& (0+255),f,b
 29779                           
 29780                           ;api.c: 152: break;
 29781  00F376  D01B               	goto	l2188
 29782  00F378                     l2186:
 29783                           
 29784                           ; BSR set to: 0
 29785                           
 29786                           ; BSR set to: 0
 29787  00F378  51C5               	movf	api_parse@in_idx& (0+255),w,b
 29788  00F37A  0D01               	mullw	1
 29789  00F37C  50F3               	movf	prodl,w,c
 29790  00F37E  25BB               	addwf	api_parse@inBuffer& (0+255),w,b
 29791  00F380  6ED9               	movwf	fsr2l,c
 29792  00F382  50F4               	movf	prodh,w,c
 29793  00F384  21BC               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 29794  00F386  6EDA               	movwf	fsr2h,c
 29795  00F388  50DF               	movf	indf2,w,c
 29796  00F38A  0BF0               	andlw	240
 29797  00F38C  6FC0               	movwf	??_api_parse& (0+255),b
 29798  00F38E  6BC1               	clrf	(??_api_parse+1)& (0+255),b
 29799                           
 29800                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 29801                           ; Switch size 1, requested type "space"
 29802                           ; Number of cases is 1, Range of values is 0 to 0
 29803                           ; switch strategies available:
 29804                           ; Name         Instructions Cycles
 29805                           ; simple_byte            4     3 (average)
 29806                           ;	Chosen strategy is simple_byte
 29807  00F390  51C1               	movf	(??_api_parse+1)& (0+255),w,b
 29808  00F392  0A00               	xorlw	0	; case 0
 29809  00F394  A4D8               	btfss	status,2,c
 29810  00F396  0012               	return	
 29811                           
 29812                           ; BSR set to: 0
 29813                           ; Switch size 1, requested type "space"
 29814                           ; Number of cases is 3, Range of values is 32 to 144
 29815                           ; switch strategies available:
 29816                           ; Name         Instructions Cycles
 29817                           ; simple_byte           10     6 (average)
 29818                           ;	Chosen strategy is simple_byte
 29819  00F398  51C0               	movf	??_api_parse& (0+255),w,b
 29820  00F39A  0A20               	xorlw	32	; case 32
 29821  00F39C  B4D8               	btfsc	status,2,c
 29822  00F39E  D7BD               	goto	l2187
 29823  00F3A0  0A10               	xorlw	16	; case 48
 29824  00F3A2  B4D8               	btfsc	status,2,c
 29825  00F3A4  D7C6               	goto	l2189
 29826  00F3A6  0AA0               	xorlw	160	; case 144
 29827  00F3A8  A4D8               	btfss	status,2,c
 29828  00F3AA  0012               	return	
 29829  00F3AC  D7D0               	goto	l2190
 29830  00F3AE                     l2188:
 29831                           
 29832                           ; BSR set to: 0
 29833                           
 29834                           ; BSR set to: 0
 29835                           
 29836                           ; BSR set to: 0
 29837  00F3AE  51BD               	movf	api_parse@receivedDataLength& (0+255),w,b
 29838  00F3B0  5DC5               	subwf	api_parse@in_idx& (0+255),w,b
 29839  00F3B2  B0D8               	btfsc	status,0,c
 29840  00F3B4  0012               	return	
 29841  00F3B6  D7A4               	goto	l2184
 29842  00F3B8                     __end_of_api_parse:
 29843                           	opt stack 0
 29844                           tosu	equ	0xFFF
 29845                           tosh	equ	0xFFE
 29846                           tosl	equ	0xFFD
 29847                           pclath	equ	0xFFA
 29848                           tblptru	equ	0xFF8
 29849                           tblptrh	equ	0xFF7
 29850                           tblptrl	equ	0xFF6
 29851                           tablat	equ	0xFF5
 29852                           prodh	equ	0xFF4
 29853                           prodl	equ	0xFF3
 29854                           intcon	equ	0xFF2
 29855                           indf0	equ	0xFEF
 29856                           postinc0	equ	0xFEE
 29857                           fsr0h	equ	0xFEA
 29858                           fsr0l	equ	0xFE9
 29859                           wreg	equ	0xFE8
 29860                           indf1	equ	0xFE7
 29861                           postdec1	equ	0xFE5
 29862                           plusw1	equ	0xFE3
 29863                           fsr1h	equ	0xFE2
 29864                           fsr1l	equ	0xFE1
 29865                           indf2	equ	0xFDF
 29866                           postinc2	equ	0xFDE
 29867                           postdec2	equ	0xFDD
 29868                           plusw2	equ	0xFDB
 29869                           fsr2h	equ	0xFDA
 29870                           fsr2l	equ	0xFD9
 29871                           status	equ	0xFD8
 29872                           
 29873 ;; *************** function __parse_command_short *****************
 29874 ;; Defined at:
 29875 ;;		line 321 in file "api.c"
 29876 ;; Parameters:    Size  Location     Type
 29877 ;;  cmd             1    wreg     unsigned char 
 29878 ;; Auto vars:     Size  Location     Type
 29879 ;;  cmd             1   90[BANK0 ] unsigned char 
 29880 ;; Return value:  Size  Location     Type
 29881 ;;                  1    wreg      void 
 29882 ;; Registers used:
 29883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29884 ;; Tracked objects:
 29885 ;;		On entry : 0/0
 29886 ;;		On exit  : 0/0
 29887 ;;		Unchanged: 0/0
 29888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29890 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29892 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29893 ;;Total ram usage:        1 bytes
 29894 ;; Hardware stack levels used:    1
 29895 ;; Hardware stack levels required when called:   13
 29896 ;; This function calls:
 29897 ;;		_motor_go_to_steps_position
 29898 ;;		_motor_schedule_command
 29899 ;; This function is called by:
 29900 ;;		_api_parse
 29901 ;; This function uses a non-reentrant model
 29902 ;;
 29903                           
 29904                           	psect	text106
 29905  00E5F0                     __ptext106:
 29906                           	opt stack 0
 29907  00E5F0                     __parse_command_short:
 29908                           	opt stack 15
 29909                           
 29910                           ; BSR set to: 0
 29911                           ;incstack = 0
 29912                           ;__parse_command_short@cmd stored from wreg
 29913  00E5F0  0100               	movlb	0	; () banked
 29914  00E5F2  6FBA               	movwf	__parse_command_short@cmd& (0+255),b
 29915                           
 29916                           ;api.c: 323: switch(cmd)
 29917  00E5F4  D07F               	goto	l2224
 29918  00E5F6                     
 29919                           ;api.c: 341: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 29920  00E5F6  0E01               	movlw	1
 29921  00E5F8  0100               	movlb	0	; () banked
 29922  00E5FA  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 29923                           
 29924                           ;api.c: 342: break;
 29925  00E5FC  0012               	return	
 29926  00E5FE                     
 29927                           ; BSR set to: 0
 29928                           ;api.c: 345: os.displayState = DISPLAY_STATE_SETUP1;
 29929                           
 29930                           ; BSR set to: 0
 29931  00E5FE  0E10               	movlw	16
 29932  00E600  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 29933                           
 29934                           ;api.c: 346: break;
 29935  00E602  0012               	return	
 29936  00E604                     
 29937                           ; BSR set to: 0
 29938                           ;api.c: 349: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 29939                           
 29940                           ; BSR set to: 0
 29941  00E604  0E31               	movlw	49
 29942  00E606  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 29943                           
 29944                           ;api.c: 350: break;
 29945  00E608  0012               	return	
 29946  00E60A                     
 29947                           ; BSR set to: 0
 29948                           ;api.c: 353: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 29949                           
 29950                           ; BSR set to: 0
 29951  00E60A  0E51               	movlw	81
 29952  00E60C  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 29953                           
 29954                           ;api.c: 354: break;
 29955  00E60E  0012               	return	
 29956  00E610                     
 29957                           ; BSR set to: 0
 29958                           ;api.c: 357: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 29959                           
 29960                           ; BSR set to: 0
 29961  00E610  0E82               	movlw	130
 29962  00E612  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 29963                           
 29964                           ;api.c: 358: break;
 29965  00E614  0012               	return	
 29966  00E616                     
 29967                           ; BSR set to: 0
 29968                           ;api.c: 361: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
 29969                           
 29970                           ; BSR set to: 0
 29971  00E616  0E71               	movlw	113
 29972  00E618  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 29973                           
 29974                           ;api.c: 362: break;
 29975  00E61A  0012               	return	
 29976  00E61C                     
 29977                           ; BSR set to: 0
 29978                           ;api.c: 365: os.current_position_in_steps = 0;
 29979                           
 29980                           ; BSR set to: 0
 29981  00E61C  0E00               	movlw	0
 29982  00E61E  6FDA               	movwf	(_os+7)& (0+255),b	;volatile
 29983  00E620  0E00               	movlw	0
 29984  00E622  6FDB               	movwf	(_os+8)& (0+255),b	;volatile
 29985  00E624  0E00               	movlw	0
 29986  00E626  6FDC               	movwf	(_os+9)& (0+255),b	;volatile
 29987  00E628  0E00               	movlw	0
 29988  00E62A  6FDD               	movwf	(_os+10)& (0+255),b	;volatile
 29989                           
 29990                           ;api.c: 366: os.divide_position = 0;
 29991  00E62C  0E00               	movlw	0
 29992  00E62E  6FEA               	movwf	(_os+23)& (0+255),b	;volatile
 29993  00E630  0E00               	movlw	0
 29994  00E632  6FE9               	movwf	(_os+22)& (0+255),b	;volatile
 29995                           
 29996                           ; BSR set to: 0
 29997                           ;api.c: 367: motor_schedule_command(MOTOR_DIRECTION_CW, config.overshoot_in_steps, 0);
 29998  00E634  C180  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
 29999  00E638  C181  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 30000  00E63C  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 30001  00E63E  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 30002  00E640  0E00               	movlw	0
 30003  00E642  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 30004  00E644  0E00               	movlw	0
 30005  00E646  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 30006  00E648  0E01               	movlw	1
 30007  00E64A  ECB0  F087         	call	_motor_schedule_command
 30008                           
 30009                           ;api.c: 368: motor_schedule_command(MOTOR_DIRECTION_CCW, config.overshoot_in_steps, 0);
 30010  00E64E  C180  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
 30011  00E652  C181  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 30012  00E656  0100               	movlb	0	; () banked
 30013  00E658  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 30014  00E65A  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 30015  00E65C  0E00               	movlw	0
 30016  00E65E  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 30017  00E660  0E00               	movlw	0
 30018  00E662  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 30019  00E664  0EFF               	movlw	255
 30020  00E666  ECB0  F087         	call	_motor_schedule_command
 30021                           
 30022                           ;api.c: 369: os.approach_direction = MOTOR_DIRECTION_CCW;
 30023  00E66A  0100               	movlb	0	; () banked
 30024  00E66C  69E5               	setf	(_os+18)& (0+255),b	;volatile
 30025                           
 30026                           ;api.c: 370: break;
 30027  00E66E  0012               	return	
 30028  00E670                     
 30029                           ; BSR set to: 0
 30030                           ;api.c: 373: os.current_position_in_steps = 0;
 30031                           
 30032                           ; BSR set to: 0
 30033  00E670  0E00               	movlw	0
 30034  00E672  6FDA               	movwf	(_os+7)& (0+255),b	;volatile
 30035  00E674  0E00               	movlw	0
 30036  00E676  6FDB               	movwf	(_os+8)& (0+255),b	;volatile
 30037  00E678  0E00               	movlw	0
 30038  00E67A  6FDC               	movwf	(_os+9)& (0+255),b	;volatile
 30039  00E67C  0E00               	movlw	0
 30040  00E67E  6FDD               	movwf	(_os+10)& (0+255),b	;volatile
 30041                           
 30042                           ;api.c: 374: os.divide_position = 0;
 30043  00E680  0E00               	movlw	0
 30044  00E682  6FEA               	movwf	(_os+23)& (0+255),b	;volatile
 30045  00E684  0E00               	movlw	0
 30046  00E686  6FE9               	movwf	(_os+22)& (0+255),b	;volatile
 30047                           
 30048                           ; BSR set to: 0
 30049                           ;api.c: 375: motor_schedule_command(MOTOR_DIRECTION_CCW, config.overshoot_in_steps, 0);
 30050  00E688  C180  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
 30051  00E68C  C181  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 30052  00E690  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 30053  00E692  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 30054  00E694  0E00               	movlw	0
 30055  00E696  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 30056  00E698  0E00               	movlw	0
 30057  00E69A  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 30058  00E69C  0EFF               	movlw	255
 30059  00E69E  ECB0  F087         	call	_motor_schedule_command
 30060                           
 30061                           ;api.c: 376: motor_schedule_command(MOTOR_DIRECTION_CW, config.overshoot_in_steps, 0);
 30062  00E6A2  C180  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
 30063  00E6A6  C181  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 30064  00E6AA  0100               	movlb	0	; () banked
 30065  00E6AC  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 30066  00E6AE  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 30067  00E6B0  0E00               	movlw	0
 30068  00E6B2  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 30069  00E6B4  0E00               	movlw	0
 30070  00E6B6  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 30071  00E6B8  0E01               	movlw	1
 30072  00E6BA  ECB0  F087         	call	_motor_schedule_command
 30073                           
 30074                           ;api.c: 377: os.approach_direction = MOTOR_DIRECTION_CW;
 30075  00E6BE  0E01               	movlw	1
 30076  00E6C0  0100               	movlb	0	; () banked
 30077  00E6C2  6FE5               	movwf	(_os+18)& (0+255),b	;volatile
 30078                           
 30079                           ;api.c: 378: break;
 30080  00E6C4  0012               	return	
 30081  00E6C6                     
 30082                           ; BSR set to: 0
 30083                           ;api.c: 381: motor_go_to_steps_position(0);
 30084                           
 30085                           ; BSR set to: 0
 30086  00E6C6  0E00               	movlw	0
 30087  00E6C8  6F9E               	movwf	motor_go_to_steps_position@target_position& (0+255),b
 30088  00E6CA  0E00               	movlw	0
 30089  00E6CC  6F9F               	movwf	(motor_go_to_steps_position@target_position+1)& (0+255),b
 30090  00E6CE  0E00               	movlw	0
 30091  00E6D0  6FA0               	movwf	(motor_go_to_steps_position@target_position+2)& (0+255),b
 30092  00E6D2  0E00               	movlw	0
 30093  00E6D4  6FA1               	movwf	(motor_go_to_steps_position@target_position+3)& (0+255),b
 30094  00E6D6  EC11  F066         	call	_motor_go_to_steps_position	;wreg free
 30095  00E6DA                     
 30096                           ;api.c: 384: --os.encoder2Count;
 30097  00E6DA  0100               	movlb	0	; () banked
 30098  00E6DC  07D8               	decf	(_os+5)& (0+255),f,b	;volatile
 30099                           
 30100                           ;api.c: 385: break;
 30101  00E6DE  0012               	return	
 30102  00E6E0                     
 30103                           ; BSR set to: 0
 30104                           ;api.c: 388: ++os.encoder2Count;
 30105                           
 30106                           ; BSR set to: 0
 30107  00E6E0  2BD8               	incf	(_os+5)& (0+255),f,b	;volatile
 30108                           
 30109                           ;api.c: 389: break;
 30110  00E6E2  0012               	return	
 30111  00E6E4                     
 30112                           ; BSR set to: 0
 30113                           ;api.c: 392: ++os.button2;
 30114                           
 30115                           ; BSR set to: 0
 30116  00E6E4  2BD9               	incf	(_os+6)& (0+255),f,b	;volatile
 30117                           
 30118                           ;api.c: 393: break;
 30119  00E6E6  0012               	return	
 30120  00E6E8                     
 30121                           ; BSR set to: 0
 30122                           ;api.c: 396: --os.encoder1Count;
 30123                           
 30124                           ; BSR set to: 0
 30125  00E6E8  07D6               	decf	(_os+3)& (0+255),f,b	;volatile
 30126                           
 30127                           ;api.c: 397: break;
 30128  00E6EA  0012               	return	
 30129  00E6EC                     
 30130                           ; BSR set to: 0
 30131                           ;api.c: 400: ++os.encoder1Count;
 30132                           
 30133                           ; BSR set to: 0
 30134  00E6EC  2BD6               	incf	(_os+3)& (0+255),f,b	;volatile
 30135                           
 30136                           ;api.c: 401: break;
 30137  00E6EE  0012               	return	
 30138  00E6F0                     
 30139                           ; BSR set to: 0
 30140                           ;api.c: 404: ++os.button1;
 30141                           
 30142                           ; BSR set to: 0
 30143  00E6F0  2BD7               	incf	(_os+4)& (0+255),f,b	;volatile
 30144                           
 30145                           ; BSR set to: 0
 30146                           ;api.c: 406: }
 30147                           
 30148                           ;api.c: 405: break;
 30149  00E6F2  0012               	return	
 30150  00E6F4                     l2224:
 30151                           
 30152                           ; BSR set to: 0
 30153  00E6F4  0100               	movlb	0	; () banked
 30154  00E6F6  51BA               	movf	__parse_command_short@cmd& (0+255),w,b
 30155                           
 30156                           ; Switch size 1, requested type "space"
 30157                           ; Number of cases is 15, Range of values is 32 to 53
 30158                           ; switch strategies available:
 30159                           ; Name         Instructions Cycles
 30160                           ; simple_byte           46    24 (average)
 30161                           ;	Chosen strategy is simple_byte
 30162  00E6F8  0A20               	xorlw	32	; case 32
 30163  00E6FA  B4D8               	btfsc	status,2,c
 30164  00E6FC  D77C               	goto	l2225
 30165  00E6FE  0A01               	xorlw	1	; case 33
 30166  00E700  B4D8               	btfsc	status,2,c
 30167  00E702  D77D               	goto	l2227
 30168  00E704  0A03               	xorlw	3	; case 34
 30169  00E706  B4D8               	btfsc	status,2,c
 30170  00E708  D77D               	goto	l2228
 30171  00E70A  0A01               	xorlw	1	; case 35
 30172  00E70C  B4D8               	btfsc	status,2,c
 30173  00E70E  D77D               	goto	l2229
 30174  00E710  0A07               	xorlw	7	; case 36
 30175  00E712  B4D8               	btfsc	status,2,c
 30176  00E714  D77D               	goto	l2230
 30177  00E716  0A01               	xorlw	1	; case 37
 30178  00E718  B4D8               	btfsc	status,2,c
 30179  00E71A  D77D               	goto	l2231
 30180  00E71C  0A03               	xorlw	3	; case 38
 30181  00E71E  B4D8               	btfsc	status,2,c
 30182  00E720  D77D               	goto	l2232
 30183  00E722  0A01               	xorlw	1	; case 39
 30184  00E724  B4D8               	btfsc	status,2,c
 30185  00E726  D7A4               	goto	l2233
 30186  00E728  0A0F               	xorlw	15	; case 40
 30187  00E72A  B4D8               	btfsc	status,2,c
 30188  00E72C  D7CC               	goto	l2234
 30189  00E72E  0A18               	xorlw	24	; case 48
 30190  00E730  B4D8               	btfsc	status,2,c
 30191  00E732  D7D3               	goto	l2235
 30192  00E734  0A01               	xorlw	1	; case 49
 30193  00E736  B4D8               	btfsc	status,2,c
 30194  00E738  D7D3               	goto	l2236
 30195  00E73A  0A03               	xorlw	3	; case 50
 30196  00E73C  B4D8               	btfsc	status,2,c
 30197  00E73E  D7D2               	goto	l2237
 30198  00E740  0A01               	xorlw	1	; case 51
 30199  00E742  B4D8               	btfsc	status,2,c
 30200  00E744  D7D1               	goto	l2238
 30201  00E746  0A07               	xorlw	7	; case 52
 30202  00E748  B4D8               	btfsc	status,2,c
 30203  00E74A  D7D0               	goto	l2239
 30204  00E74C  0A01               	xorlw	1	; case 53
 30205  00E74E  A4D8               	btfss	status,2,c
 30206  00E750  0012               	return	
 30207  00E752  D7CE               	goto	l2240
 30208  00E754                     __end_of__parse_command_short:
 30209                           	opt stack 0
 30210                           tosu	equ	0xFFF
 30211                           tosh	equ	0xFFE
 30212                           tosl	equ	0xFFD
 30213                           pclath	equ	0xFFA
 30214                           tblptru	equ	0xFF8
 30215                           tblptrh	equ	0xFF7
 30216                           tblptrl	equ	0xFF6
 30217                           tablat	equ	0xFF5
 30218                           prodh	equ	0xFF4
 30219                           prodl	equ	0xFF3
 30220                           intcon	equ	0xFF2
 30221                           indf0	equ	0xFEF
 30222                           postinc0	equ	0xFEE
 30223                           fsr0h	equ	0xFEA
 30224                           fsr0l	equ	0xFE9
 30225                           wreg	equ	0xFE8
 30226                           indf1	equ	0xFE7
 30227                           postdec1	equ	0xFE5
 30228                           plusw1	equ	0xFE3
 30229                           fsr1h	equ	0xFE2
 30230                           fsr1l	equ	0xFE1
 30231                           indf2	equ	0xFDF
 30232                           postinc2	equ	0xFDE
 30233                           postdec2	equ	0xFDD
 30234                           plusw2	equ	0xFDB
 30235                           fsr2h	equ	0xFDA
 30236                           fsr2l	equ	0xFD9
 30237                           status	equ	0xFD8
 30238                           
 30239 ;; *************** function _motor_go_to_steps_position *****************
 30240 ;; Defined at:
 30241 ;;		line 431 in file "motor.c"
 30242 ;; Parameters:    Size  Location     Type
 30243 ;;  target_posit    4   62[BANK0 ] unsigned long 
 30244 ;; Auto vars:     Size  Location     Type
 30245 ;;  distance_ccw    4   86[BANK0 ] unsigned long 
 30246 ;;  distance_cw     4   82[BANK0 ] unsigned long 
 30247 ;;  overhead_ccw    4   78[BANK0 ] unsigned long 
 30248 ;;  overhead_cw     4   74[BANK0 ] unsigned long 
 30249 ;; Return value:  Size  Location     Type
 30250 ;;                  1    wreg      void 
 30251 ;; Registers used:
 30252 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30253 ;; Tracked objects:
 30254 ;;		On entry : 0/0
 30255 ;;		On exit  : 0/0
 30256 ;;		Unchanged: 0/0
 30257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30258 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30259 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30260 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30261 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30262 ;;Total ram usage:       28 bytes
 30263 ;; Hardware stack levels used:    1
 30264 ;; Hardware stack levels required when called:   12
 30265 ;; This function calls:
 30266 ;;		_motor_schedule_command
 30267 ;; This function is called by:
 30268 ;;		__parse_command_short
 30269 ;;		_motor_go_to_degrees_position
 30270 ;; This function uses a non-reentrant model
 30271 ;;
 30272                           
 30273                           	psect	text107
 30274  00CC22                     __ptext107:
 30275                           	opt stack 0
 30276  00CC22                     _motor_go_to_steps_position:
 30277                           	opt stack 16
 30278                           
 30279                           ;motor.c: 433: uint32_t distance_cw;;motor.c: 434: uint32_t overhead_cw;;motor.c: 435: u
      +                          int32_t distance_ccw;;motor.c: 436: uint32_t overhead_ccw;;motor.c: 439: if(os.busy)
 30280                           
 30281                           ; BSR set to: 0
 30282                           ;incstack = 0
 30283  00CC22  0100               	movlb	0	; () banked
 30284  00CC24  51E1               	movf	(_os+14)& (0+255),w,b	;volatile
 30285  00CC26  A4D8               	btfss	status,2,c
 30286  00CC28  0012               	return	
 30287                           
 30288                           ; BSR set to: 0
 30289                           ;motor.c: 442: };motor.c: 445: overhead_cw = 0;
 30290                           
 30291                           ; BSR set to: 0
 30292                           
 30293                           ; BSR set to: 0
 30294                           ;motor.c: 440: {;motor.c: 441: return;
 30295  00CC2A  0E00               	movlw	0
 30296  00CC2C  6FAA               	movwf	motor_go_to_steps_position@overhead_cw& (0+255),b
 30297  00CC2E  0E00               	movlw	0
 30298  00CC30  6FAB               	movwf	(motor_go_to_steps_position@overhead_cw+1)& (0+255),b
 30299  00CC32  0E00               	movlw	0
 30300  00CC34  6FAC               	movwf	(motor_go_to_steps_position@overhead_cw+2)& (0+255),b
 30301  00CC36  0E00               	movlw	0
 30302  00CC38  6FAD               	movwf	(motor_go_to_steps_position@overhead_cw+3)& (0+255),b
 30303                           
 30304                           ; BSR set to: 0
 30305                           ;motor.c: 446: distance_cw = target_position - os.current_position_in_steps;
 30306  00CC3A  C0DA  F0A2         	movff	_os+7,??_motor_go_to_steps_position	;volatile
 30307  00CC3E  C0DB  F0A3         	movff	_os+8,??_motor_go_to_steps_position+1	;volatile
 30308  00CC42  C0DC  F0A4         	movff	_os+9,??_motor_go_to_steps_position+2	;volatile
 30309  00CC46  C0DD  F0A5         	movff	_os+10,??_motor_go_to_steps_position+3	;volatile
 30310  00CC4A  1FA2               	comf	??_motor_go_to_steps_position& (0+255),f,b
 30311  00CC4C  1FA3               	comf	(??_motor_go_to_steps_position+1)& (0+255),f,b
 30312  00CC4E  1FA4               	comf	(??_motor_go_to_steps_position+2)& (0+255),f,b
 30313  00CC50  1FA5               	comf	(??_motor_go_to_steps_position+3)& (0+255),f,b
 30314  00CC52  2BA2               	incf	??_motor_go_to_steps_position& (0+255),f,b
 30315  00CC54  0E00               	movlw	0
 30316  00CC56  23A3               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),f,b
 30317  00CC58  23A4               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),f,b
 30318  00CC5A  23A5               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),f,b
 30319  00CC5C  519E               	movf	motor_go_to_steps_position@target_position& (0+255),w,b
 30320  00CC5E  25A2               	addwf	??_motor_go_to_steps_position& (0+255),w,b
 30321  00CC60  6FB2               	movwf	motor_go_to_steps_position@distance_cw& (0+255),b
 30322  00CC62  519F               	movf	(motor_go_to_steps_position@target_position+1)& (0+255),w,b
 30323  00CC64  21A3               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),w,b
 30324  00CC66  6FB3               	movwf	(motor_go_to_steps_position@distance_cw+1)& (0+255),b
 30325  00CC68  51A0               	movf	(motor_go_to_steps_position@target_position+2)& (0+255),w,b
 30326  00CC6A  21A4               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),w,b
 30327  00CC6C  6FB4               	movwf	(motor_go_to_steps_position@distance_cw+2)& (0+255),b
 30328  00CC6E  51A1               	movf	(motor_go_to_steps_position@target_position+3)& (0+255),w,b
 30329  00CC70  21A5               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),w,b
 30330  00CC72  6FB5               	movwf	(motor_go_to_steps_position@distance_cw+3)& (0+255),b
 30331                           
 30332                           ; BSR set to: 0
 30333                           ;motor.c: 447: if(distance_cw>config.full_circle_in_steps)
 30334  00CC74  51B2               	movf	motor_go_to_steps_position@distance_cw& (0+255),w,b
 30335  00CC76  0101               	movlb	1	; () banked
 30336  00CC78  5D7B               	subwf	_config& (0+255),w,b
 30337  00CC7A  0100               	movlb	0	; () banked
 30338  00CC7C  51B3               	movf	(motor_go_to_steps_position@distance_cw+1)& (0+255),w,b
 30339  00CC7E  0101               	movlb	1	; () banked
 30340  00CC80  597C               	subwfb	(_config+1)& (0+255),w,b
 30341  00CC82  0100               	movlb	0	; () banked
 30342  00CC84  51B4               	movf	(motor_go_to_steps_position@distance_cw+2)& (0+255),w,b
 30343  00CC86  0101               	movlb	1	; () banked
 30344  00CC88  597D               	subwfb	(_config+2)& (0+255),w,b
 30345  00CC8A  0100               	movlb	0	; () banked
 30346  00CC8C  51B5               	movf	(motor_go_to_steps_position@distance_cw+3)& (0+255),w,b
 30347  00CC8E  0101               	movlb	1	; () banked
 30348  00CC90  597E               	subwfb	(_config+3)& (0+255),w,b
 30349  00CC92  B0D8               	btfsc	status,0,c
 30350  00CC94  D00F               	goto	l2406
 30351                           
 30352                           ; BSR set to: 1
 30353                           ;motor.c: 448: {;motor.c: 449: distance_cw += config.full_circle_in_steps;
 30354  00CC96  517B               	movf	_config& (0+255),w,b
 30355  00CC98  0100               	movlb	0	; () banked
 30356  00CC9A  27B2               	addwf	motor_go_to_steps_position@distance_cw& (0+255),f,b
 30357  00CC9C  0101               	movlb	1	; () banked
 30358  00CC9E  517C               	movf	(_config+1)& (0+255),w,b
 30359  00CCA0  0100               	movlb	0	; () banked
 30360  00CCA2  23B3               	addwfc	(motor_go_to_steps_position@distance_cw+1)& (0+255),f,b
 30361  00CCA4  0101               	movlb	1	; () banked
 30362  00CCA6  517D               	movf	(_config+2)& (0+255),w,b
 30363  00CCA8  0100               	movlb	0	; () banked
 30364  00CCAA  23B4               	addwfc	(motor_go_to_steps_position@distance_cw+2)& (0+255),f,b
 30365  00CCAC  0101               	movlb	1	; () banked
 30366  00CCAE  517E               	movf	(_config+3)& (0+255),w,b
 30367  00CCB0  0100               	movlb	0	; () banked
 30368  00CCB2  23B5               	addwfc	(motor_go_to_steps_position@distance_cw+3)& (0+255),f,b
 30369  00CCB4                     l2406:
 30370                           
 30371                           ;motor.c: 450: };motor.c: 451: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 30372  00CCB4  0100               	movlb	0	; () banked
 30373  00CCB6  29E5               	incf	(_os+18)& (0+255),w,b	;volatile
 30374  00CCB8  A4D8               	btfss	status,2,c
 30375  00CCBA  D024               	goto	l2407
 30376                           
 30377                           ; BSR set to: 0
 30378                           ;motor.c: 452: {;motor.c: 453: distance_cw += config.overshoot_in_steps;
 30379  00CCBC  0101               	movlb	1	; () banked
 30380  00CCBE  5180               	movf	(_config+5)& (0+255),w,b
 30381  00CCC0  0100               	movlb	0	; () banked
 30382  00CCC2  27B2               	addwf	motor_go_to_steps_position@distance_cw& (0+255),f,b
 30383  00CCC4  0101               	movlb	1	; () banked
 30384  00CCC6  5181               	movf	(_config+6)& (0+255),w,b
 30385  00CCC8  0100               	movlb	0	; () banked
 30386  00CCCA  23B3               	addwfc	(motor_go_to_steps_position@distance_cw+1)& (0+255),f,b
 30387  00CCCC  0E00               	movlw	0
 30388  00CCCE  23B4               	addwfc	(motor_go_to_steps_position@distance_cw+2)& (0+255),f,b
 30389  00CCD0  0E00               	movlw	0
 30390  00CCD2  23B5               	addwfc	(motor_go_to_steps_position@distance_cw+3)& (0+255),f,b
 30391                           
 30392                           ;motor.c: 454: overhead_cw += config.overshoot_in_steps;
 30393  00CCD4  0101               	movlb	1	; () banked
 30394  00CCD6  5180               	movf	(_config+5)& (0+255),w,b
 30395  00CCD8  0100               	movlb	0	; () banked
 30396  00CCDA  27AA               	addwf	motor_go_to_steps_position@overhead_cw& (0+255),f,b
 30397  00CCDC  0101               	movlb	1	; () banked
 30398  00CCDE  5181               	movf	(_config+6)& (0+255),w,b
 30399  00CCE0  0100               	movlb	0	; () banked
 30400  00CCE2  23AB               	addwfc	(motor_go_to_steps_position@overhead_cw+1)& (0+255),f,b
 30401  00CCE4  0E00               	movlw	0
 30402  00CCE6  23AC               	addwfc	(motor_go_to_steps_position@overhead_cw+2)& (0+255),f,b
 30403  00CCE8  0E00               	movlw	0
 30404  00CCEA  23AD               	addwfc	(motor_go_to_steps_position@overhead_cw+3)& (0+255),f,b
 30405                           
 30406                           ;motor.c: 455: overhead_cw += config.overshoot_cost_in_steps;
 30407  00CCEC  0101               	movlb	1	; () banked
 30408  00CCEE  5182               	movf	(_config+7)& (0+255),w,b
 30409  00CCF0  0100               	movlb	0	; () banked
 30410  00CCF2  27AA               	addwf	motor_go_to_steps_position@overhead_cw& (0+255),f,b
 30411  00CCF4  0101               	movlb	1	; () banked
 30412  00CCF6  5183               	movf	(_config+8)& (0+255),w,b
 30413  00CCF8  0100               	movlb	0	; () banked
 30414  00CCFA  23AB               	addwfc	(motor_go_to_steps_position@overhead_cw+1)& (0+255),f,b
 30415  00CCFC  0E00               	movlw	0
 30416  00CCFE  23AC               	addwfc	(motor_go_to_steps_position@overhead_cw+2)& (0+255),f,b
 30417  00CD00  0E00               	movlw	0
 30418  00CD02  23AD               	addwfc	(motor_go_to_steps_position@overhead_cw+3)& (0+255),f,b
 30419  00CD04                     l2407:
 30420                           
 30421                           ; BSR set to: 0
 30422                           ;motor.c: 456: };motor.c: 459: overhead_ccw = 0;
 30423                           
 30424                           ; BSR set to: 0
 30425  00CD04  0E00               	movlw	0
 30426  00CD06  6FAE               	movwf	motor_go_to_steps_position@overhead_ccw& (0+255),b
 30427  00CD08  0E00               	movlw	0
 30428  00CD0A  6FAF               	movwf	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),b
 30429  00CD0C  0E00               	movlw	0
 30430  00CD0E  6FB0               	movwf	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),b
 30431  00CD10  0E00               	movlw	0
 30432  00CD12  6FB1               	movwf	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),b
 30433                           
 30434                           ; BSR set to: 0
 30435                           ;motor.c: 460: distance_ccw = os.current_position_in_steps - target_position;
 30436  00CD14  C09E  F0A2         	movff	motor_go_to_steps_position@target_position,??_motor_go_to_steps_position
 30437  00CD18  C09F  F0A3         	movff	motor_go_to_steps_position@target_position+1,??_motor_go_to_steps_position+1
 30438  00CD1C  C0A0  F0A4         	movff	motor_go_to_steps_position@target_position+2,??_motor_go_to_steps_position+2
 30439  00CD20  C0A1  F0A5         	movff	motor_go_to_steps_position@target_position+3,??_motor_go_to_steps_position+3
 30440  00CD24  1FA2               	comf	??_motor_go_to_steps_position& (0+255),f,b
 30441  00CD26  1FA3               	comf	(??_motor_go_to_steps_position+1)& (0+255),f,b
 30442  00CD28  1FA4               	comf	(??_motor_go_to_steps_position+2)& (0+255),f,b
 30443  00CD2A  1FA5               	comf	(??_motor_go_to_steps_position+3)& (0+255),f,b
 30444  00CD2C  2BA2               	incf	??_motor_go_to_steps_position& (0+255),f,b
 30445  00CD2E  0E00               	movlw	0
 30446  00CD30  23A3               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),f,b
 30447  00CD32  23A4               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),f,b
 30448  00CD34  23A5               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),f,b
 30449  00CD36  51DA               	movf	(_os+7)& (0+255),w,b	;volatile
 30450  00CD38  25A2               	addwf	??_motor_go_to_steps_position& (0+255),w,b
 30451  00CD3A  6FB6               	movwf	motor_go_to_steps_position@distance_ccw& (0+255),b
 30452  00CD3C  51DB               	movf	(_os+8)& (0+255),w,b	;volatile
 30453  00CD3E  21A3               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),w,b
 30454  00CD40  6FB7               	movwf	(motor_go_to_steps_position@distance_ccw+1)& (0+255),b
 30455  00CD42  51DC               	movf	(_os+9)& (0+255),w,b	;volatile
 30456  00CD44  21A4               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),w,b
 30457  00CD46  6FB8               	movwf	(motor_go_to_steps_position@distance_ccw+2)& (0+255),b
 30458  00CD48  51DD               	movf	(_os+10)& (0+255),w,b	;volatile
 30459  00CD4A  21A5               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),w,b
 30460  00CD4C  6FB9               	movwf	(motor_go_to_steps_position@distance_ccw+3)& (0+255),b
 30461                           
 30462                           ; BSR set to: 0
 30463                           ;motor.c: 461: if(distance_ccw>config.full_circle_in_steps)
 30464  00CD4E  51B6               	movf	motor_go_to_steps_position@distance_ccw& (0+255),w,b
 30465  00CD50  0101               	movlb	1	; () banked
 30466  00CD52  5D7B               	subwf	_config& (0+255),w,b
 30467  00CD54  0100               	movlb	0	; () banked
 30468  00CD56  51B7               	movf	(motor_go_to_steps_position@distance_ccw+1)& (0+255),w,b
 30469  00CD58  0101               	movlb	1	; () banked
 30470  00CD5A  597C               	subwfb	(_config+1)& (0+255),w,b
 30471  00CD5C  0100               	movlb	0	; () banked
 30472  00CD5E  51B8               	movf	(motor_go_to_steps_position@distance_ccw+2)& (0+255),w,b
 30473  00CD60  0101               	movlb	1	; () banked
 30474  00CD62  597D               	subwfb	(_config+2)& (0+255),w,b
 30475  00CD64  0100               	movlb	0	; () banked
 30476  00CD66  51B9               	movf	(motor_go_to_steps_position@distance_ccw+3)& (0+255),w,b
 30477  00CD68  0101               	movlb	1	; () banked
 30478  00CD6A  597E               	subwfb	(_config+3)& (0+255),w,b
 30479  00CD6C  B0D8               	btfsc	status,0,c
 30480  00CD6E  D00F               	goto	l2408
 30481                           
 30482                           ; BSR set to: 1
 30483                           ;motor.c: 462: {;motor.c: 463: distance_ccw += config.full_circle_in_steps;
 30484  00CD70  517B               	movf	_config& (0+255),w,b
 30485  00CD72  0100               	movlb	0	; () banked
 30486  00CD74  27B6               	addwf	motor_go_to_steps_position@distance_ccw& (0+255),f,b
 30487  00CD76  0101               	movlb	1	; () banked
 30488  00CD78  517C               	movf	(_config+1)& (0+255),w,b
 30489  00CD7A  0100               	movlb	0	; () banked
 30490  00CD7C  23B7               	addwfc	(motor_go_to_steps_position@distance_ccw+1)& (0+255),f,b
 30491  00CD7E  0101               	movlb	1	; () banked
 30492  00CD80  517D               	movf	(_config+2)& (0+255),w,b
 30493  00CD82  0100               	movlb	0	; () banked
 30494  00CD84  23B8               	addwfc	(motor_go_to_steps_position@distance_ccw+2)& (0+255),f,b
 30495  00CD86  0101               	movlb	1	; () banked
 30496  00CD88  517E               	movf	(_config+3)& (0+255),w,b
 30497  00CD8A  0100               	movlb	0	; () banked
 30498  00CD8C  23B9               	addwfc	(motor_go_to_steps_position@distance_ccw+3)& (0+255),f,b
 30499  00CD8E                     l2408:
 30500                           
 30501                           ;motor.c: 464: };motor.c: 465: if(os.approach_direction==MOTOR_DIRECTION_CW)
 30502  00CD8E  0100               	movlb	0	; () banked
 30503  00CD90  05E5               	decf	(_os+18)& (0+255),w,b	;volatile
 30504  00CD92  A4D8               	btfss	status,2,c
 30505  00CD94  D024               	goto	l2409
 30506                           
 30507                           ; BSR set to: 0
 30508                           ;motor.c: 466: {;motor.c: 467: distance_ccw += config.overshoot_in_steps;
 30509  00CD96  0101               	movlb	1	; () banked
 30510  00CD98  5180               	movf	(_config+5)& (0+255),w,b
 30511  00CD9A  0100               	movlb	0	; () banked
 30512  00CD9C  27B6               	addwf	motor_go_to_steps_position@distance_ccw& (0+255),f,b
 30513  00CD9E  0101               	movlb	1	; () banked
 30514  00CDA0  5181               	movf	(_config+6)& (0+255),w,b
 30515  00CDA2  0100               	movlb	0	; () banked
 30516  00CDA4  23B7               	addwfc	(motor_go_to_steps_position@distance_ccw+1)& (0+255),f,b
 30517  00CDA6  0E00               	movlw	0
 30518  00CDA8  23B8               	addwfc	(motor_go_to_steps_position@distance_ccw+2)& (0+255),f,b
 30519  00CDAA  0E00               	movlw	0
 30520  00CDAC  23B9               	addwfc	(motor_go_to_steps_position@distance_ccw+3)& (0+255),f,b
 30521                           
 30522                           ;motor.c: 468: overhead_ccw += config.overshoot_in_steps;
 30523  00CDAE  0101               	movlb	1	; () banked
 30524  00CDB0  5180               	movf	(_config+5)& (0+255),w,b
 30525  00CDB2  0100               	movlb	0	; () banked
 30526  00CDB4  27AE               	addwf	motor_go_to_steps_position@overhead_ccw& (0+255),f,b
 30527  00CDB6  0101               	movlb	1	; () banked
 30528  00CDB8  5181               	movf	(_config+6)& (0+255),w,b
 30529  00CDBA  0100               	movlb	0	; () banked
 30530  00CDBC  23AF               	addwfc	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),f,b
 30531  00CDBE  0E00               	movlw	0
 30532  00CDC0  23B0               	addwfc	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),f,b
 30533  00CDC2  0E00               	movlw	0
 30534  00CDC4  23B1               	addwfc	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),f,b
 30535                           
 30536                           ;motor.c: 469: overhead_ccw += config.overshoot_cost_in_steps;
 30537  00CDC6  0101               	movlb	1	; () banked
 30538  00CDC8  5182               	movf	(_config+7)& (0+255),w,b
 30539  00CDCA  0100               	movlb	0	; () banked
 30540  00CDCC  27AE               	addwf	motor_go_to_steps_position@overhead_ccw& (0+255),f,b
 30541  00CDCE  0101               	movlb	1	; () banked
 30542  00CDD0  5183               	movf	(_config+8)& (0+255),w,b
 30543  00CDD2  0100               	movlb	0	; () banked
 30544  00CDD4  23AF               	addwfc	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),f,b
 30545  00CDD6  0E00               	movlw	0
 30546  00CDD8  23B0               	addwfc	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),f,b
 30547  00CDDA  0E00               	movlw	0
 30548  00CDDC  23B1               	addwfc	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),f,b
 30549  00CDDE                     l2409:
 30550                           
 30551                           ; BSR set to: 0
 30552                           ;motor.c: 470: };motor.c: 473: if((distance_cw+overhead_cw) < (distance_ccw+overhead_ccw
      +                          ))
 30553                           
 30554                           ; BSR set to: 0
 30555  00CDDE  51AE               	movf	motor_go_to_steps_position@overhead_ccw& (0+255),w,b
 30556  00CDE0  25B6               	addwf	motor_go_to_steps_position@distance_ccw& (0+255),w,b
 30557  00CDE2  6FA2               	movwf	??_motor_go_to_steps_position& (0+255),b
 30558  00CDE4  51AF               	movf	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),w,b
 30559  00CDE6  21B7               	addwfc	(motor_go_to_steps_position@distance_ccw+1)& (0+255),w,b
 30560  00CDE8  6FA3               	movwf	(??_motor_go_to_steps_position+1)& (0+255),b
 30561  00CDEA  51B0               	movf	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),w,b
 30562  00CDEC  21B8               	addwfc	(motor_go_to_steps_position@distance_ccw+2)& (0+255),w,b
 30563  00CDEE  6FA4               	movwf	(??_motor_go_to_steps_position+2)& (0+255),b
 30564  00CDF0  51B1               	movf	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),w,b
 30565  00CDF2  21B9               	addwfc	(motor_go_to_steps_position@distance_ccw+3)& (0+255),w,b
 30566  00CDF4  6FA5               	movwf	(??_motor_go_to_steps_position+3)& (0+255),b
 30567  00CDF6  51AA               	movf	motor_go_to_steps_position@overhead_cw& (0+255),w,b
 30568  00CDF8  25B2               	addwf	motor_go_to_steps_position@distance_cw& (0+255),w,b
 30569  00CDFA  6FA6               	movwf	(??_motor_go_to_steps_position+4)& (0+255),b
 30570  00CDFC  51AB               	movf	(motor_go_to_steps_position@overhead_cw+1)& (0+255),w,b
 30571  00CDFE  21B3               	addwfc	(motor_go_to_steps_position@distance_cw+1)& (0+255),w,b
 30572  00CE00  6FA7               	movwf	(??_motor_go_to_steps_position+5)& (0+255),b
 30573  00CE02  51AC               	movf	(motor_go_to_steps_position@overhead_cw+2)& (0+255),w,b
 30574  00CE04  21B4               	addwfc	(motor_go_to_steps_position@distance_cw+2)& (0+255),w,b
 30575  00CE06  6FA8               	movwf	(??_motor_go_to_steps_position+6)& (0+255),b
 30576  00CE08  51AD               	movf	(motor_go_to_steps_position@overhead_cw+3)& (0+255),w,b
 30577  00CE0A  21B5               	addwfc	(motor_go_to_steps_position@distance_cw+3)& (0+255),w,b
 30578  00CE0C  6FA9               	movwf	(??_motor_go_to_steps_position+7)& (0+255),b
 30579  00CE0E  51A2               	movf	??_motor_go_to_steps_position& (0+255),w,b
 30580  00CE10  5DA6               	subwf	(??_motor_go_to_steps_position+4)& (0+255),w,b
 30581  00CE12  51A3               	movf	(??_motor_go_to_steps_position+1)& (0+255),w,b
 30582  00CE14  59A7               	subwfb	(??_motor_go_to_steps_position+5)& (0+255),w,b
 30583  00CE16  51A4               	movf	(??_motor_go_to_steps_position+2)& (0+255),w,b
 30584  00CE18  59A8               	subwfb	(??_motor_go_to_steps_position+6)& (0+255),w,b
 30585  00CE1A  51A5               	movf	(??_motor_go_to_steps_position+3)& (0+255),w,b
 30586  00CE1C  59A9               	subwfb	(??_motor_go_to_steps_position+7)& (0+255),w,b
 30587  00CE1E  B0D8               	btfsc	status,0,c
 30588  00CE20  D032               	goto	l2410
 30589                           
 30590                           ; BSR set to: 0
 30591                           ;motor.c: 474: {;motor.c: 475: if(os.approach_direction==MOTOR_DIRECTION_CW)
 30592  00CE22  05E5               	decf	(_os+18)& (0+255),w,b	;volatile
 30593  00CE24  A4D8               	btfss	status,2,c
 30594  00CE26  D010               	goto	l2411
 30595                           
 30596                           ; BSR set to: 0
 30597                           ;motor.c: 476: {;motor.c: 478: motor_schedule_command(MOTOR_DIRECTION_CW, distance_cw, 0
      +                          );
 30598  00CE28  C0B2  F097         	movff	motor_go_to_steps_position@distance_cw,motor_schedule_command@distance_in_steps
 30599  00CE2C  C0B3  F098         	movff	motor_go_to_steps_position@distance_cw+1,motor_schedule_command@distance_in_steps
      +                          +1
 30600  00CE30  C0B4  F099         	movff	motor_go_to_steps_position@distance_cw+2,motor_schedule_command@distance_in_steps
      +                          +2
 30601  00CE34  C0B5  F09A         	movff	motor_go_to_steps_position@distance_cw+3,motor_schedule_command@distance_in_steps
      +                          +3
 30602  00CE38  0E00               	movlw	0
 30603  00CE3A  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 30604  00CE3C  0E00               	movlw	0
 30605  00CE3E  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 30606  00CE40  0E01               	movlw	1
 30607  00CE42  ECB0  F087         	call	_motor_schedule_command
 30608                           
 30609                           ;motor.c: 479: }
 30610  00CE46  0012               	return	
 30611  00CE48                     l2411:
 30612                           
 30613                           ;motor.c: 480: else;motor.c: 481: {;motor.c: 483: motor_schedule_command(MOTOR_DIRECTION
      +                          _CW, distance_cw, 0);
 30614  00CE48  C0B2  F097         	movff	motor_go_to_steps_position@distance_cw,motor_schedule_command@distance_in_steps
 30615  00CE4C  C0B3  F098         	movff	motor_go_to_steps_position@distance_cw+1,motor_schedule_command@distance_in_steps
      +                          +1
 30616  00CE50  C0B4  F099         	movff	motor_go_to_steps_position@distance_cw+2,motor_schedule_command@distance_in_steps
      +                          +2
 30617  00CE54  C0B5  F09A         	movff	motor_go_to_steps_position@distance_cw+3,motor_schedule_command@distance_in_steps
      +                          +3
 30618  00CE58  0E00               	movlw	0
 30619  00CE5A  0100               	movlb	0	; () banked
 30620  00CE5C  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 30621  00CE5E  0E00               	movlw	0
 30622  00CE60  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 30623  00CE62  0E01               	movlw	1
 30624  00CE64  ECB0  F087         	call	_motor_schedule_command
 30625                           
 30626                           ;motor.c: 484: motor_schedule_command(MOTOR_DIRECTION_CCW, config.overshoot_in_steps, 0)
      +                          ;
 30627  00CE68  C180  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
 30628  00CE6C  C181  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 30629  00CE70  0100               	movlb	0	; () banked
 30630  00CE72  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 30631  00CE74  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 30632  00CE76  0E00               	movlw	0
 30633  00CE78  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 30634  00CE7A  0E00               	movlw	0
 30635  00CE7C  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 30636  00CE7E  0EFF               	movlw	255
 30637  00CE80  ECB0  F087         	call	_motor_schedule_command
 30638                           
 30639                           ;motor.c: 485: };motor.c: 486: }
 30640  00CE84  0012               	return	
 30641  00CE86                     l2410:
 30642                           
 30643                           ;motor.c: 487: else;motor.c: 488: {;motor.c: 489: if(os.approach_direction==MOTOR_DIRECT
      +                          ION_CCW)
 30644  00CE86  0100               	movlb	0	; () banked
 30645  00CE88  29E5               	incf	(_os+18)& (0+255),w,b	;volatile
 30646  00CE8A  A4D8               	btfss	status,2,c
 30647  00CE8C  D010               	goto	l2414
 30648                           
 30649                           ; BSR set to: 0
 30650                           ;motor.c: 490: {;motor.c: 492: motor_schedule_command(MOTOR_DIRECTION_CCW, distance_ccw,
      +                           0);
 30651  00CE8E  C0B6  F097         	movff	motor_go_to_steps_position@distance_ccw,motor_schedule_command@distance_in_steps
 30652  00CE92  C0B7  F098         	movff	motor_go_to_steps_position@distance_ccw+1,motor_schedule_command@distance_in_step
      +                          s+1
 30653  00CE96  C0B8  F099         	movff	motor_go_to_steps_position@distance_ccw+2,motor_schedule_command@distance_in_step
      +                          s+2
 30654  00CE9A  C0B9  F09A         	movff	motor_go_to_steps_position@distance_ccw+3,motor_schedule_command@distance_in_step
      +                          s+3
 30655  00CE9E  0E00               	movlw	0
 30656  00CEA0  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 30657  00CEA2  0E00               	movlw	0
 30658  00CEA4  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 30659  00CEA6  0EFF               	movlw	255
 30660  00CEA8  ECB0  F087         	call	_motor_schedule_command
 30661                           
 30662                           ;motor.c: 493: }
 30663  00CEAC  0012               	return	
 30664  00CEAE                     l2414:
 30665                           
 30666                           ;motor.c: 494: else;motor.c: 495: {;motor.c: 497: motor_schedule_command(MOTOR_DIRECTION
      +                          _CCW, distance_ccw, 0);
 30667  00CEAE  C0B6  F097         	movff	motor_go_to_steps_position@distance_ccw,motor_schedule_command@distance_in_steps
 30668  00CEB2  C0B7  F098         	movff	motor_go_to_steps_position@distance_ccw+1,motor_schedule_command@distance_in_step
      +                          s+1
 30669  00CEB6  C0B8  F099         	movff	motor_go_to_steps_position@distance_ccw+2,motor_schedule_command@distance_in_step
      +                          s+2
 30670  00CEBA  C0B9  F09A         	movff	motor_go_to_steps_position@distance_ccw+3,motor_schedule_command@distance_in_step
      +                          s+3
 30671  00CEBE  0E00               	movlw	0
 30672  00CEC0  0100               	movlb	0	; () banked
 30673  00CEC2  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 30674  00CEC4  0E00               	movlw	0
 30675  00CEC6  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 30676  00CEC8  0EFF               	movlw	255
 30677  00CECA  ECB0  F087         	call	_motor_schedule_command
 30678                           
 30679                           ;motor.c: 498: motor_schedule_command(MOTOR_DIRECTION_CW, config.overshoot_in_steps, 0);
 30680  00CECE  C180  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
 30681  00CED2  C181  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 30682  00CED6  0100               	movlb	0	; () banked
 30683  00CED8  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 30684  00CEDA  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 30685  00CEDC  0E00               	movlw	0
 30686  00CEDE  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 30687  00CEE0  0E00               	movlw	0
 30688  00CEE2  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 30689  00CEE4  0E01               	movlw	1
 30690  00CEE6  ECB0  F087         	call	_motor_schedule_command
 30691  00CEEA  0012               	return	
 30692  00CEEC                     __end_of_motor_go_to_steps_position:
 30693                           	opt stack 0
 30694                           tosu	equ	0xFFF
 30695                           tosh	equ	0xFFE
 30696                           tosl	equ	0xFFD
 30697                           pclath	equ	0xFFA
 30698                           tblptru	equ	0xFF8
 30699                           tblptrh	equ	0xFF7
 30700                           tblptrl	equ	0xFF6
 30701                           tablat	equ	0xFF5
 30702                           prodh	equ	0xFF4
 30703                           prodl	equ	0xFF3
 30704                           intcon	equ	0xFF2
 30705                           indf0	equ	0xFEF
 30706                           postinc0	equ	0xFEE
 30707                           fsr0h	equ	0xFEA
 30708                           fsr0l	equ	0xFE9
 30709                           wreg	equ	0xFE8
 30710                           indf1	equ	0xFE7
 30711                           postdec1	equ	0xFE5
 30712                           plusw1	equ	0xFE3
 30713                           fsr1h	equ	0xFE2
 30714                           fsr1l	equ	0xFE1
 30715                           indf2	equ	0xFDF
 30716                           postinc2	equ	0xFDE
 30717                           postdec2	equ	0xFDD
 30718                           plusw2	equ	0xFDB
 30719                           fsr2h	equ	0xFDA
 30720                           fsr2l	equ	0xFD9
 30721                           status	equ	0xFD8
 30722                           
 30723 ;; *************** function __parse_command_long *****************
 30724 ;; Defined at:
 30725 ;;		line 409 in file "api.c"
 30726 ;; Parameters:    Size  Location     Type
 30727 ;;  data            2   74[BANK0 ] PTR unsigned char 
 30728 ;;		 -> ReceivedDataBuffer(64), 
 30729 ;;  out_buffer      2   76[BANK0 ] PTR unsigned char 
 30730 ;;		 -> ToSendDataBuffer(64), 
 30731 ;;  out_idx_ptr     2   78[BANK0 ] PTR unsigned char 
 30732 ;;		 -> api_parse@out_idx(1), 
 30733 ;; Auto vars:     Size  Location     Type
 30734 ;;  length          1   80[BANK0 ] unsigned char 
 30735 ;; Return value:  Size  Location     Type
 30736 ;;                  1    wreg      unsigned char 
 30737 ;; Registers used:
 30738 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30739 ;; Tracked objects:
 30740 ;;		On entry : 0/0
 30741 ;;		On exit  : 0/0
 30742 ;;		Unchanged: 0/0
 30743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30744 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30745 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30747 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30748 ;;Total ram usage:        7 bytes
 30749 ;; Hardware stack levels used:    1
 30750 ;; Hardware stack levels required when called:   13
 30751 ;; This function calls:
 30752 ;;		__parse_jump_steps
 30753 ;; This function is called by:
 30754 ;;		_api_parse
 30755 ;; This function uses a non-reentrant model
 30756 ;;
 30757                           
 30758                           	psect	text108
 30759  0122E8                     __ptext108:
 30760                           	opt stack 0
 30761  0122E8                     __parse_command_long:
 30762                           	opt stack 15
 30763                           
 30764                           ;api.c: 411: uint8_t length = 65;
 30765                           
 30766                           ;incstack = 0
 30767  0122E8  0E41               	movlw	65
 30768  0122EA  0100               	movlb	0	; () banked
 30769  0122EC  6FB0               	movwf	__parse_command_long@length& (0+255),b
 30770                           
 30771                           ;api.c: 413: switch(data[0])
 30772  0122EE  D011               	goto	l2244
 30773  0122F0                     
 30774                           ; BSR set to: 0
 30775                           ;api.c: 420: length = _parse_jump_steps(data, out_buffer, out_idx_ptr);
 30776                           
 30777                           ; BSR set to: 0
 30778  0122F0  C0AA  F09E         	movff	__parse_command_long@data,__parse_jump_steps@data
 30779  0122F4  C0AB  F09F         	movff	__parse_command_long@data+1,__parse_jump_steps@data+1
 30780  0122F8  C0AC  F0A0         	movff	__parse_command_long@out_buffer,__parse_jump_steps@out_buffer
 30781  0122FC  C0AD  F0A1         	movff	__parse_command_long@out_buffer+1,__parse_jump_steps@out_buffer+1
 30782  012300  C0AE  F0A2         	movff	__parse_command_long@out_idx_ptr,__parse_jump_steps@out_idx_ptr
 30783  012304  C0AF  F0A3         	movff	__parse_command_long@out_idx_ptr+1,__parse_jump_steps@out_idx_ptr+1
 30784  012308  ECAA  F073         	call	__parse_jump_steps	;wreg free
 30785  01230C  0100               	movlb	0	; () banked
 30786  01230E  6FB0               	movwf	__parse_command_long@length& (0+255),b
 30787                           
 30788                           ; BSR set to: 0
 30789                           ;api.c: 422: }
 30790                           
 30791                           ;api.c: 421: break;
 30792  012310  D008               	goto	l2246
 30793  012312                     l2244:
 30794                           
 30795                           ; BSR set to: 0
 30796                           
 30797                           ; BSR set to: 0
 30798  012312  C0AA  FFD9         	movff	__parse_command_long@data,fsr2l
 30799  012316  C0AB  FFDA         	movff	__parse_command_long@data+1,fsr2h
 30800  01231A  50DF               	movf	indf2,w,c
 30801                           
 30802                           ; Switch size 1, requested type "space"
 30803                           ; Number of cases is 1, Range of values is 144 to 144
 30804                           ; switch strategies available:
 30805                           ; Name         Instructions Cycles
 30806                           ; simple_byte            4     3 (average)
 30807                           ;	Chosen strategy is simple_byte
 30808  01231C  0A90               	xorlw	144	; case 144
 30809  01231E  B4D8               	btfsc	status,2,c
 30810  012320  D7E7               	goto	l2245
 30811  012322                     l2246:
 30812                           
 30813                           ; BSR set to: 0
 30814                           ;api.c: 426: return length;
 30815                           
 30816                           ; BSR set to: 0
 30817  012322  51B0               	movf	__parse_command_long@length& (0+255),w,b
 30818  012324  0012               	return	
 30819  012326                     __end_of__parse_command_long:
 30820                           	opt stack 0
 30821                           tosu	equ	0xFFF
 30822                           tosh	equ	0xFFE
 30823                           tosl	equ	0xFFD
 30824                           pclath	equ	0xFFA
 30825                           tblptru	equ	0xFF8
 30826                           tblptrh	equ	0xFF7
 30827                           tblptrl	equ	0xFF6
 30828                           tablat	equ	0xFF5
 30829                           prodh	equ	0xFF4
 30830                           prodl	equ	0xFF3
 30831                           intcon	equ	0xFF2
 30832                           indf0	equ	0xFEF
 30833                           postinc0	equ	0xFEE
 30834                           fsr0h	equ	0xFEA
 30835                           fsr0l	equ	0xFE9
 30836                           wreg	equ	0xFE8
 30837                           indf1	equ	0xFE7
 30838                           postdec1	equ	0xFE5
 30839                           plusw1	equ	0xFE3
 30840                           fsr1h	equ	0xFE2
 30841                           fsr1l	equ	0xFE1
 30842                           indf2	equ	0xFDF
 30843                           postinc2	equ	0xFDE
 30844                           postdec2	equ	0xFDD
 30845                           plusw2	equ	0xFDB
 30846                           fsr2h	equ	0xFDA
 30847                           fsr2l	equ	0xFD9
 30848                           status	equ	0xFD8
 30849                           
 30850 ;; *************** function __parse_jump_steps *****************
 30851 ;; Defined at:
 30852 ;;		line 452 in file "api.c"
 30853 ;; Parameters:    Size  Location     Type
 30854 ;;  data            2   62[BANK0 ] PTR unsigned char 
 30855 ;;		 -> ReceivedDataBuffer(64), 
 30856 ;;  out_buffer      2   64[BANK0 ] PTR unsigned char 
 30857 ;;		 -> ToSendDataBuffer(64), 
 30858 ;;  out_idx_ptr     2   66[BANK0 ] PTR unsigned char 
 30859 ;;		 -> api_parse@out_idx(1), 
 30860 ;; Auto vars:     Size  Location     Type
 30861 ;;  number_of_st    4   70[BANK0 ] long 
 30862 ;;  return_value    1   69[BANK0 ] unsigned char 
 30863 ;; Return value:  Size  Location     Type
 30864 ;;                  1    wreg      unsigned char 
 30865 ;; Registers used:
 30866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30867 ;; Tracked objects:
 30868 ;;		On entry : 0/0
 30869 ;;		On exit  : 0/0
 30870 ;;		Unchanged: 0/0
 30871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30872 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30873 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30874 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30875 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30876 ;;Total ram usage:       12 bytes
 30877 ;; Hardware stack levels used:    1
 30878 ;; Hardware stack levels required when called:   12
 30879 ;; This function calls:
 30880 ;;		_motor_schedule_command
 30881 ;; This function is called by:
 30882 ;;		__parse_command_long
 30883 ;; This function uses a non-reentrant model
 30884 ;;
 30885                           
 30886                           	psect	text109
 30887  00E754                     __ptext109:
 30888                           	opt stack 0
 30889  00E754                     __parse_jump_steps:
 30890                           	opt stack 15
 30891                           
 30892                           ;api.c: 456: uint8_t return_value;;api.c: 457: int32_t number_of_steps;;api.c: 459: numb
      +                          er_of_steps = data[1];
 30893                           
 30894                           ; BSR set to: 0
 30895                           ;incstack = 0
 30896  00E754  0100               	movlb	0	; () banked
 30897  00E756  EE20 F001          	lfsr	2,1
 30898  00E75A  519E               	movf	__parse_jump_steps@data& (0+255),w,b
 30899  00E75C  26D9               	addwf	fsr2l,f,c
 30900  00E75E  519F               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 30901  00E760  22DA               	addwfc	fsr2h,f,c
 30902  00E762  50DF               	movf	indf2,w,c
 30903  00E764  6FA4               	movwf	??__parse_jump_steps& (0+255),b
 30904  00E766  51A4               	movf	??__parse_jump_steps& (0+255),w,b
 30905  00E768  6FA6               	movwf	__parse_jump_steps@number_of_steps& (0+255),b
 30906  00E76A  6BA7               	clrf	(__parse_jump_steps@number_of_steps+1)& (0+255),b
 30907  00E76C  6BA8               	clrf	(__parse_jump_steps@number_of_steps+2)& (0+255),b
 30908  00E76E  6BA9               	clrf	(__parse_jump_steps@number_of_steps+3)& (0+255),b
 30909                           
 30910                           ; BSR set to: 0
 30911                           ;api.c: 460: number_of_steps <<= 8;
 30912  00E770  C0A8  F0A9         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 30913  00E774  C0A7  F0A8         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 30914  00E778  C0A6  F0A7         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 30915  00E77C  6BA6               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 30916                           
 30917                           ; BSR set to: 0
 30918                           ;api.c: 461: number_of_steps |= data[2];
 30919  00E77E  EE20 F002          	lfsr	2,2
 30920  00E782  519E               	movf	__parse_jump_steps@data& (0+255),w,b
 30921  00E784  26D9               	addwf	fsr2l,f,c
 30922  00E786  519F               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 30923  00E788  22DA               	addwfc	fsr2h,f,c
 30924  00E78A  50DF               	movf	indf2,w,c
 30925  00E78C  6FA4               	movwf	??__parse_jump_steps& (0+255),b
 30926  00E78E  51A4               	movf	??__parse_jump_steps& (0+255),w,b
 30927  00E790  13A6               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 30928                           
 30929                           ;api.c: 462: number_of_steps <<= 8;
 30930  00E792  C0A8  F0A9         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 30931  00E796  C0A7  F0A8         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 30932  00E79A  C0A6  F0A7         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 30933  00E79E  6BA6               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 30934                           
 30935                           ; BSR set to: 0
 30936                           ;api.c: 463: number_of_steps |= data[3];
 30937  00E7A0  EE20 F003          	lfsr	2,3
 30938  00E7A4  519E               	movf	__parse_jump_steps@data& (0+255),w,b
 30939  00E7A6  26D9               	addwf	fsr2l,f,c
 30940  00E7A8  519F               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 30941  00E7AA  22DA               	addwfc	fsr2h,f,c
 30942  00E7AC  50DF               	movf	indf2,w,c
 30943  00E7AE  6FA4               	movwf	??__parse_jump_steps& (0+255),b
 30944  00E7B0  51A4               	movf	??__parse_jump_steps& (0+255),w,b
 30945  00E7B2  13A6               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 30946                           
 30947                           ; BSR set to: 0
 30948                           ;api.c: 464: number_of_steps <<= 8;
 30949  00E7B4  C0A8  F0A9         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 30950  00E7B8  C0A7  F0A8         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 30951  00E7BC  C0A6  F0A7         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 30952  00E7C0  6BA6               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 30953                           
 30954                           ;api.c: 465: number_of_steps |= data[4];
 30955  00E7C2  EE20 F004          	lfsr	2,4
 30956  00E7C6  519E               	movf	__parse_jump_steps@data& (0+255),w,b
 30957  00E7C8  26D9               	addwf	fsr2l,f,c
 30958  00E7CA  519F               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 30959  00E7CC  22DA               	addwfc	fsr2h,f,c
 30960  00E7CE  50DF               	movf	indf2,w,c
 30961  00E7D0  6FA4               	movwf	??__parse_jump_steps& (0+255),b
 30962  00E7D2  51A4               	movf	??__parse_jump_steps& (0+255),w,b
 30963  00E7D4  13A6               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 30964                           
 30965                           ; BSR set to: 0
 30966                           ;api.c: 467: if(number_of_steps>0)
 30967  00E7D6  BFA9               	btfsc	(__parse_jump_steps@number_of_steps+3)& (0+255),7,b
 30968  00E7D8  D017               	goto	l2250
 30969  00E7DA  51A9               	movf	(__parse_jump_steps@number_of_steps+3)& (0+255),w,b
 30970  00E7DC  11A8               	iorwf	(__parse_jump_steps@number_of_steps+2)& (0+255),w,b
 30971  00E7DE  11A7               	iorwf	(__parse_jump_steps@number_of_steps+1)& (0+255),w,b
 30972  00E7E0  E103               	bnz	u17920
 30973  00E7E2  05A6               	decf	__parse_jump_steps@number_of_steps& (0+255),w,b
 30974  00E7E4  A0D8               	btfss	status,0,c
 30975  00E7E6  D010               	goto	l2250
 30976  00E7E8                     u17920:
 30977                           
 30978                           ; BSR set to: 0
 30979                           ;api.c: 468: {;api.c: 469: return_value = motor_schedule_command(MOTOR_DIRECTION_CW, (ui
      +                          nt32_t) number_of_steps, 0);
 30980  00E7E8  C0A6  F097         	movff	__parse_jump_steps@number_of_steps,motor_schedule_command@distance_in_steps
 30981  00E7EC  C0A7  F098         	movff	__parse_jump_steps@number_of_steps+1,motor_schedule_command@distance_in_steps+1
 30982  00E7F0  C0A8  F099         	movff	__parse_jump_steps@number_of_steps+2,motor_schedule_command@distance_in_steps+2
 30983  00E7F4  C0A9  F09A         	movff	__parse_jump_steps@number_of_steps+3,motor_schedule_command@distance_in_steps+3
 30984  00E7F8  0E00               	movlw	0
 30985  00E7FA  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 30986  00E7FC  0E00               	movlw	0
 30987  00E7FE  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 30988  00E800  0E01               	movlw	1
 30989  00E802  ECB0  F087         	call	_motor_schedule_command
 30990  00E806  D017               	goto	L56
 30991  00E808                     l2250:
 30992                           
 30993                           ; BSR set to: 0
 30994                           ;api.c: 471: else;api.c: 472: {;api.c: 473: number_of_steps = -number_of_steps;
 30995                           
 30996                           ; BSR set to: 0
 30997  00E808  1FA9               	comf	(__parse_jump_steps@number_of_steps+3)& (0+255),f,b
 30998  00E80A  1FA8               	comf	(__parse_jump_steps@number_of_steps+2)& (0+255),f,b
 30999  00E80C  1FA7               	comf	(__parse_jump_steps@number_of_steps+1)& (0+255),f,b
 31000  00E80E  6DA6               	negf	__parse_jump_steps@number_of_steps& (0+255),b
 31001  00E810  0E00               	movlw	0
 31002  00E812  23A7               	addwfc	(__parse_jump_steps@number_of_steps+1)& (0+255),f,b
 31003  00E814  23A8               	addwfc	(__parse_jump_steps@number_of_steps+2)& (0+255),f,b
 31004  00E816  23A9               	addwfc	(__parse_jump_steps@number_of_steps+3)& (0+255),f,b
 31005                           
 31006                           ; BSR set to: 0
 31007                           ;api.c: 474: return_value = motor_schedule_command(MOTOR_DIRECTION_CCW, (uint32_t) numbe
      +                          r_of_steps, 0);
 31008  00E818  C0A6  F097         	movff	__parse_jump_steps@number_of_steps,motor_schedule_command@distance_in_steps
 31009  00E81C  C0A7  F098         	movff	__parse_jump_steps@number_of_steps+1,motor_schedule_command@distance_in_steps+1
 31010  00E820  C0A8  F099         	movff	__parse_jump_steps@number_of_steps+2,motor_schedule_command@distance_in_steps+2
 31011  00E824  C0A9  F09A         	movff	__parse_jump_steps@number_of_steps+3,motor_schedule_command@distance_in_steps+3
 31012  00E828  0E00               	movlw	0
 31013  00E82A  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 31014  00E82C  0E00               	movlw	0
 31015  00E82E  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 31016  00E830  0EFF               	movlw	255
 31017  00E832  ECB0  F087         	call	_motor_schedule_command
 31018  00E836                     L56:
 31019  00E836  0100               	movlb	0	; () banked
 31020  00E838  6FA5               	movwf	__parse_jump_steps@return_value& (0+255),b
 31021                           
 31022                           ; BSR set to: 0
 31023                           ;api.c: 475: };api.c: 478: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 31024                           
 31025                           ; BSR set to: 0
 31026  00E83A  C0A2  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 31027  00E83E  C0A3  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 31028  00E842  50DF               	movf	indf2,w,c
 31029  00E844  B4D8               	btfsc	status,2,c
 31030  00E846  D02B               	goto	l2252
 31031                           
 31032                           ; BSR set to: 0
 31033  00E848  C0A2  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 31034  00E84C  C0A3  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 31035  00E850  0E3F               	movlw	63
 31036  00E852  60DF               	cpfslt	indf2,c
 31037  00E854  D024               	goto	l2252
 31038                           
 31039                           ; BSR set to: 0
 31040                           ;api.c: 479: {;api.c: 480: out_buffer[(*out_idx_ptr)++] = COMMAND_JUMP_STEPS;
 31041  00E856  C0A2  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 31042  00E85A  C0A3  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 31043  00E85E  CFDF F0A4          	movff	indf2,??__parse_jump_steps
 31044  00E862  0E01               	movlw	1
 31045  00E864  26DF               	addwf	indf2,f,c
 31046  00E866  51A4               	movf	??__parse_jump_steps& (0+255),w,b
 31047  00E868  0D01               	mullw	1
 31048  00E86A  50F3               	movf	prodl,w,c
 31049  00E86C  25A0               	addwf	__parse_jump_steps@out_buffer& (0+255),w,b
 31050  00E86E  6ED9               	movwf	fsr2l,c
 31051  00E870  50F4               	movf	prodh,w,c
 31052  00E872  21A1               	addwfc	(__parse_jump_steps@out_buffer+1)& (0+255),w,b
 31053  00E874  6EDA               	movwf	fsr2h,c
 31054  00E876  0E90               	movlw	144
 31055  00E878  6EDF               	movwf	indf2,c
 31056                           
 31057                           ;api.c: 481: out_buffer[(*out_idx_ptr)++] = return_value;
 31058  00E87A  C0A2  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 31059  00E87E  C0A3  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 31060  00E882  CFDF F0A4          	movff	indf2,??__parse_jump_steps
 31061  00E886  0E01               	movlw	1
 31062  00E888  26DF               	addwf	indf2,f,c
 31063  00E88A  51A4               	movf	??__parse_jump_steps& (0+255),w,b
 31064  00E88C  0D01               	mullw	1
 31065  00E88E  50F3               	movf	prodl,w,c
 31066  00E890  25A0               	addwf	__parse_jump_steps@out_buffer& (0+255),w,b
 31067  00E892  6ED9               	movwf	fsr2l,c
 31068  00E894  50F4               	movf	prodh,w,c
 31069  00E896  21A1               	addwfc	(__parse_jump_steps@out_buffer+1)& (0+255),w,b
 31070  00E898  6EDA               	movwf	fsr2h,c
 31071  00E89A  C0A5  FFDF         	movff	__parse_jump_steps@return_value,indf2
 31072  00E89E                     l2252:
 31073                           
 31074                           ; BSR set to: 0
 31075                           ;api.c: 482: };api.c: 484: return 5;
 31076                           
 31077                           ; BSR set to: 0
 31078  00E89E  0E05               	movlw	5
 31079  00E8A0  0012               	return	
 31080  00E8A2                     __end_of__parse_jump_steps:
 31081                           	opt stack 0
 31082                           tosu	equ	0xFFF
 31083                           tosh	equ	0xFFE
 31084                           tosl	equ	0xFFD
 31085                           pclath	equ	0xFFA
 31086                           tblptru	equ	0xFF8
 31087                           tblptrh	equ	0xFF7
 31088                           tblptrl	equ	0xFF6
 31089                           tablat	equ	0xFF5
 31090                           prodh	equ	0xFF4
 31091                           prodl	equ	0xFF3
 31092                           intcon	equ	0xFF2
 31093                           indf0	equ	0xFEF
 31094                           postinc0	equ	0xFEE
 31095                           fsr0h	equ	0xFEA
 31096                           fsr0l	equ	0xFE9
 31097                           wreg	equ	0xFE8
 31098                           indf1	equ	0xFE7
 31099                           postdec1	equ	0xFE5
 31100                           plusw1	equ	0xFE3
 31101                           fsr1h	equ	0xFE2
 31102                           fsr1l	equ	0xFE1
 31103                           indf2	equ	0xFDF
 31104                           postinc2	equ	0xFDE
 31105                           postdec2	equ	0xFDD
 31106                           plusw2	equ	0xFDB
 31107                           fsr2h	equ	0xFDA
 31108                           fsr2l	equ	0xFD9
 31109                           status	equ	0xFD8
 31110                           
 31111 ;; *************** function _motor_schedule_command *****************
 31112 ;; Defined at:
 31113 ;;		line 87 in file "motor.c"
 31114 ;; Parameters:    Size  Location     Type
 31115 ;;  direction       1    wreg     enum E6622
 31116 ;;  distance_in_    4   55[BANK0 ] unsigned long 
 31117 ;;  speed           2   59[BANK0 ] unsigned int 
 31118 ;; Auto vars:     Size  Location     Type
 31119 ;;  direction       1   61[BANK0 ] enum E6622
 31120 ;; Return value:  Size  Location     Type
 31121 ;;                  1    wreg      unsigned char 
 31122 ;; Registers used:
 31123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31124 ;; Tracked objects:
 31125 ;;		On entry : 0/0
 31126 ;;		On exit  : 0/0
 31127 ;;		Unchanged: 0/0
 31128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31129 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31130 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31132 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31133 ;;Total ram usage:        7 bytes
 31134 ;; Hardware stack levels used:    1
 31135 ;; Hardware stack levels required when called:   11
 31136 ;; This function calls:
 31137 ;;		__motor_run
 31138 ;;		_motor_items_in_cue
 31139 ;; This function is called by:
 31140 ;;		__parse_command_short
 31141 ;;		__parse_jump_steps
 31142 ;;		_motor_go_to_steps_position
 31143 ;;		_encoder_statemachine
 31144 ;; This function uses a non-reentrant model
 31145 ;;
 31146                           
 31147                           	psect	text110
 31148  010F60                     __ptext110:
 31149                           	opt stack 0
 31150  010F60                     _motor_schedule_command:
 31151                           	opt stack 18
 31152                           
 31153                           ; BSR set to: 0
 31154                           ;incstack = 0
 31155                           ;motor_schedule_command@direction stored from wreg
 31156  010F60  0100               	movlb	0	; () banked
 31157  010F62  6F9D               	movwf	motor_schedule_command@direction& (0+255),b
 31158                           
 31159                           ;motor.c: 89: if((motor_items_in_cue()==0) && (os.busy==0))
 31160  010F64  EC63  F094         	call	_motor_items_in_cue	;wreg free
 31161  010F68  0900               	iorlw	0
 31162  010F6A  A4D8               	btfss	status,2,c
 31163  010F6C  D015               	goto	l2341
 31164  010F6E  0100               	movlb	0	; () banked
 31165  010F70  51E1               	movf	(_os+14)& (0+255),w,b	;volatile
 31166  010F72  A4D8               	btfss	status,2,c
 31167  010F74  D011               	goto	l2341
 31168                           
 31169                           ; BSR set to: 0
 31170                           ;motor.c: 90: {;motor.c: 93: _motor_run(direction, distance_in_steps, speed);
 31171  010F76  C097  F060         	movff	motor_schedule_command@distance_in_steps,__motor_run@distance_in_steps
 31172  010F7A  C098  F061         	movff	motor_schedule_command@distance_in_steps+1,__motor_run@distance_in_steps+1
 31173  010F7E  C099  F062         	movff	motor_schedule_command@distance_in_steps+2,__motor_run@distance_in_steps+2
 31174  010F82  C09A  F063         	movff	motor_schedule_command@distance_in_steps+3,__motor_run@distance_in_steps+3
 31175  010F86  C09B  F064         	movff	motor_schedule_command@speed,__motor_run@speed
 31176  010F8A  C09C  F065         	movff	motor_schedule_command@speed+1,__motor_run@speed+1
 31177  010F8E  519D               	movf	motor_schedule_command@direction& (0+255),w,b
 31178  010F90  EC91  F06E         	call	__motor_run
 31179                           
 31180                           ;motor.c: 95: return 1;
 31181  010F94  0E01               	movlw	1
 31182  010F96  0012               	return	
 31183  010F98                     l2341:
 31184                           
 31185                           ;motor.c: 96: };motor.c: 97: if(motor_items_in_cue()==8-1)
 31186  010F98  EC63  F094         	call	_motor_items_in_cue	;wreg free
 31187  010F9C  0A07               	xorlw	7
 31188  010F9E  A4D8               	btfss	status,2,c
 31189  010FA0  D002               	goto	l2343
 31190                           
 31191                           ;motor.c: 98: {;motor.c: 101: return 0;
 31192  010FA2  0E00               	movlw	0
 31193                           
 31194                           ;motor.c: 102: }
 31195  010FA4  0012               	return	
 31196  010FA6                     l2343:
 31197                           
 31198                           ;motor.c: 103: else;motor.c: 104: {;motor.c: 106: motor_command_cue[motor_cue_write_inde
      +                          x].direction = direction;
 31199  010FA6  5022               	movf	_motor_cue_write_index,w,c
 31200  010FA8  0D07               	mullw	7
 31201  010FAA  0E00               	movlw	low _motor_command_cue
 31202  010FAC  24F3               	addwf	prodl,w,c
 31203  010FAE  6ED9               	movwf	fsr2l,c
 31204  010FB0  0E02               	movlw	high _motor_command_cue
 31205  010FB2  20F4               	addwfc	prodh,w,c
 31206  010FB4  6EDA               	movwf	fsr2h,c
 31207  010FB6  C09D  FFDF         	movff	motor_schedule_command@direction,indf2
 31208                           
 31209                           ;motor.c: 107: motor_command_cue[motor_cue_write_index].distance = distance_in_steps;
 31210  010FBA  5022               	movf	_motor_cue_write_index,w,c
 31211  010FBC  0D07               	mullw	7
 31212  010FBE  0E01               	movlw	1
 31213  010FC0  26F3               	addwf	prodl,f,c
 31214  010FC2  0E00               	movlw	0
 31215  010FC4  22F4               	addwfc	prodh,f,c
 31216  010FC6  0E00               	movlw	low _motor_command_cue
 31217  010FC8  24F3               	addwf	prodl,w,c
 31218  010FCA  6ED9               	movwf	fsr2l,c
 31219  010FCC  0E02               	movlw	high _motor_command_cue
 31220  010FCE  20F4               	addwfc	prodh,w,c
 31221  010FD0  6EDA               	movwf	fsr2h,c
 31222  010FD2  C097  FFDE         	movff	motor_schedule_command@distance_in_steps,postinc2
 31223  010FD6  C098  FFDE         	movff	motor_schedule_command@distance_in_steps+1,postinc2
 31224  010FDA  C099  FFDE         	movff	motor_schedule_command@distance_in_steps+2,postinc2
 31225  010FDE  C09A  FFDE         	movff	motor_schedule_command@distance_in_steps+3,postinc2
 31226                           
 31227                           ;motor.c: 108: motor_command_cue[motor_cue_write_index].speed = speed;
 31228  010FE2  5022               	movf	_motor_cue_write_index,w,c
 31229  010FE4  0D07               	mullw	7
 31230  010FE6  0E05               	movlw	5
 31231  010FE8  26F3               	addwf	prodl,f,c
 31232  010FEA  0E00               	movlw	0
 31233  010FEC  22F4               	addwfc	prodh,f,c
 31234  010FEE  0E00               	movlw	low _motor_command_cue
 31235  010FF0  24F3               	addwf	prodl,w,c
 31236  010FF2  6ED9               	movwf	fsr2l,c
 31237  010FF4  0E02               	movlw	high _motor_command_cue
 31238  010FF6  20F4               	addwfc	prodh,w,c
 31239  010FF8  6EDA               	movwf	fsr2h,c
 31240  010FFA  C09B  FFDE         	movff	motor_schedule_command@speed,postinc2
 31241  010FFE  C09C  FFDD         	movff	motor_schedule_command@speed+1,postdec2
 31242                           
 31243                           ;motor.c: 110: ++motor_cue_write_index;
 31244  011002  2A22               	incf	_motor_cue_write_index,f,c
 31245                           
 31246                           ;motor.c: 112: return 1;
 31247  011004  0E01               	movlw	1
 31248  011006  0012               	return	
 31249  011008                     __end_of_motor_schedule_command:
 31250                           	opt stack 0
 31251                           tosu	equ	0xFFF
 31252                           tosh	equ	0xFFE
 31253                           tosl	equ	0xFFD
 31254                           pclath	equ	0xFFA
 31255                           tblptru	equ	0xFF8
 31256                           tblptrh	equ	0xFF7
 31257                           tblptrl	equ	0xFF6
 31258                           tablat	equ	0xFF5
 31259                           prodh	equ	0xFF4
 31260                           prodl	equ	0xFF3
 31261                           intcon	equ	0xFF2
 31262                           indf0	equ	0xFEF
 31263                           postinc0	equ	0xFEE
 31264                           fsr0h	equ	0xFEA
 31265                           fsr0l	equ	0xFE9
 31266                           wreg	equ	0xFE8
 31267                           indf1	equ	0xFE7
 31268                           postdec1	equ	0xFE5
 31269                           plusw1	equ	0xFE3
 31270                           fsr1h	equ	0xFE2
 31271                           fsr1l	equ	0xFE1
 31272                           indf2	equ	0xFDF
 31273                           postinc2	equ	0xFDE
 31274                           postdec2	equ	0xFDD
 31275                           plusw2	equ	0xFDB
 31276                           fsr2h	equ	0xFDA
 31277                           fsr2l	equ	0xFD9
 31278                           status	equ	0xFD8
 31279                           
 31280 ;; *************** function _motor_items_in_cue *****************
 31281 ;; Defined at:
 31282 ;;		line 82 in file "motor.c"
 31283 ;; Parameters:    Size  Location     Type
 31284 ;;		None
 31285 ;; Auto vars:     Size  Location     Type
 31286 ;;		None
 31287 ;; Return value:  Size  Location     Type
 31288 ;;                  1    wreg      unsigned char 
 31289 ;; Registers used:
 31290 ;;		wreg, status,2, status,0
 31291 ;; Tracked objects:
 31292 ;;		On entry : 0/0
 31293 ;;		On exit  : 0/0
 31294 ;;		Unchanged: 0/0
 31295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31300 ;;Total ram usage:        0 bytes
 31301 ;; Hardware stack levels used:    1
 31302 ;; Hardware stack levels required when called:   10
 31303 ;; This function calls:
 31304 ;;		Nothing
 31305 ;; This function is called by:
 31306 ;;		_motor_schedule_command
 31307 ;;		_motor_process_cue
 31308 ;; This function uses a non-reentrant model
 31309 ;;
 31310                           
 31311                           	psect	text111
 31312  0128C6                     __ptext111:
 31313                           	opt stack 0
 31314  0128C6                     _motor_items_in_cue:
 31315                           	opt stack 19
 31316                           
 31317                           ;motor.c: 84: return ((motor_cue_write_index-motor_cue_read_index) & 0b111);
 31318                           
 31319                           ;incstack = 0
 31320  0128C6  5023               	movf	_motor_cue_read_index,w,c
 31321  0128C8  0800               	sublw	0
 31322  0128CA  2422               	addwf	_motor_cue_write_index,w,c
 31323  0128CC  0B07               	andlw	7
 31324  0128CE  0012               	return	
 31325  0128D0                     __end_of_motor_items_in_cue:
 31326                           	opt stack 0
 31327                           tosu	equ	0xFFF
 31328                           tosh	equ	0xFFE
 31329                           tosl	equ	0xFFD
 31330                           pclath	equ	0xFFA
 31331                           tblptru	equ	0xFF8
 31332                           tblptrh	equ	0xFF7
 31333                           tblptrl	equ	0xFF6
 31334                           tablat	equ	0xFF5
 31335                           prodh	equ	0xFF4
 31336                           prodl	equ	0xFF3
 31337                           intcon	equ	0xFF2
 31338                           indf0	equ	0xFEF
 31339                           postinc0	equ	0xFEE
 31340                           fsr0h	equ	0xFEA
 31341                           fsr0l	equ	0xFE9
 31342                           wreg	equ	0xFE8
 31343                           indf1	equ	0xFE7
 31344                           postdec1	equ	0xFE5
 31345                           plusw1	equ	0xFE3
 31346                           fsr1h	equ	0xFE2
 31347                           fsr1l	equ	0xFE1
 31348                           indf2	equ	0xFDF
 31349                           postinc2	equ	0xFDE
 31350                           postdec2	equ	0xFDD
 31351                           plusw2	equ	0xFDB
 31352                           fsr2h	equ	0xFDA
 31353                           fsr2l	equ	0xFD9
 31354                           status	equ	0xFD8
 31355                           
 31356 ;; *************** function __motor_run *****************
 31357 ;; Defined at:
 31358 ;;		line 165 in file "motor.c"
 31359 ;; Parameters:    Size  Location     Type
 31360 ;;  direction       1    wreg     enum E6622
 31361 ;;  distance_in_    4    0[BANK0 ] unsigned long 
 31362 ;;  speed           2    4[BANK0 ] unsigned int 
 31363 ;; Auto vars:     Size  Location     Type
 31364 ;;  direction       1   10[BANK0 ] enum E6622
 31365 ;; Return value:  Size  Location     Type
 31366 ;;                  1    wreg      void 
 31367 ;; Registers used:
 31368 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 31369 ;; Tracked objects:
 31370 ;;		On entry : 0/0
 31371 ;;		On exit  : 0/0
 31372 ;;		Unchanged: 0/0
 31373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31374 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31375 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31376 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31377 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31378 ;;Total ram usage:       11 bytes
 31379 ;; Hardware stack levels used:    1
 31380 ;; Hardware stack levels required when called:   10
 31381 ;; This function calls:
 31382 ;;		Nothing
 31383 ;; This function is called by:
 31384 ;;		_motor_schedule_command
 31385 ;;		_motor_process_cue
 31386 ;; This function uses a non-reentrant model
 31387 ;;
 31388                           
 31389                           	psect	text112
 31390  00DD22                     __ptext112:
 31391                           	opt stack 0
 31392  00DD22                     __motor_run:
 31393                           	opt stack 19
 31394                           
 31395                           ;incstack = 0
 31396                           ;__motor_run@direction stored from wreg
 31397  00DD22  0100               	movlb	0	; () banked
 31398  00DD24  6F6A               	movwf	__motor_run@direction& (0+255),b
 31399                           
 31400                           ;motor.c: 168: motor_direction = direction;
 31401  00DD26  C06A  F169         	movff	__motor_run@direction,_motor_direction
 31402                           
 31403                           ;motor.c: 171: if(distance_in_steps==0)
 31404  00DD2A  0100               	movlb	0	; () banked
 31405  00DD2C  5160               	movf	__motor_run@distance_in_steps& (0+255),w,b
 31406  00DD2E  1161               	iorwf	(__motor_run@distance_in_steps+1)& (0+255),w,b
 31407  00DD30  1162               	iorwf	(__motor_run@distance_in_steps+2)& (0+255),w,b
 31408  00DD32  1163               	iorwf	(__motor_run@distance_in_steps+3)& (0+255),w,b
 31409  00DD34  A4D8               	btfss	status,2,c
 31410  00DD36  D00A               	goto	l2357
 31411                           
 31412                           ; BSR set to: 0
 31413                           ;motor.c: 172: {;motor.c: 174: motor_final_stepcount = 0xFFFFFF00;
 31414  00DD38  0E00               	movlw	0
 31415  00DD3A  0101               	movlb	1	; () banked
 31416  00DD3C  6F3B               	movwf	_motor_final_stepcount& (0+255),b	;volatile
 31417  00DD3E  0EFF               	movlw	255
 31418  00DD40  6F3C               	movwf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 31419  00DD42  0EFF               	movlw	255
 31420  00DD44  6F3D               	movwf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 31421  00DD46  0EFF               	movlw	255
 31422  00DD48  6F3E               	movwf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 31423                           
 31424                           ;motor.c: 175: }
 31425  00DD4A  D008               	goto	l2358
 31426  00DD4C                     l2357:
 31427                           
 31428                           ; BSR set to: 0
 31429                           ;motor.c: 176: else;motor.c: 177: {;motor.c: 178: motor_final_stepcount = distance_in_st
      +                          eps;
 31430  00DD4C  C060  F13B         	movff	__motor_run@distance_in_steps,_motor_final_stepcount	;volatile
 31431  00DD50  C061  F13C         	movff	__motor_run@distance_in_steps+1,_motor_final_stepcount+1	;volatile
 31432  00DD54  C062  F13D         	movff	__motor_run@distance_in_steps+2,_motor_final_stepcount+2	;volatile
 31433  00DD58  C063  F13E         	movff	__motor_run@distance_in_steps+3,_motor_final_stepcount+3	;volatile
 31434  00DD5C                     l2358:
 31435                           
 31436                           ;motor.c: 180: };motor.c: 183: if(speed==0)
 31437                           
 31438                           ; BSR set to: 0
 31439  00DD5C  0100               	movlb	0	; () banked
 31440  00DD5E  5164               	movf	__motor_run@speed& (0+255),w,b
 31441  00DD60  1165               	iorwf	(__motor_run@speed+1)& (0+255),w,b
 31442  00DD62  A4D8               	btfss	status,2,c
 31443  00DD64  D005               	goto	l2359
 31444                           
 31445                           ; BSR set to: 0
 31446                           ;motor.c: 184: {;motor.c: 185: motor_maximum_speed = config.maximum_speed;
 31447  00DD66  C186  F15B         	movff	_config+11,_motor_maximum_speed
 31448  00DD6A  C187  F15C         	movff	_config+12,_motor_maximum_speed+1
 31449                           
 31450                           ;motor.c: 186: }
 31451  00DD6E  D004               	goto	l2360
 31452  00DD70                     l2359:
 31453                           
 31454                           ; BSR set to: 0
 31455                           ;motor.c: 187: else;motor.c: 188: {;motor.c: 189: motor_maximum_speed = speed;
 31456  00DD70  C064  F15B         	movff	__motor_run@speed,_motor_maximum_speed
 31457  00DD74  C065  F15C         	movff	__motor_run@speed+1,_motor_maximum_speed+1
 31458  00DD78                     l2360:
 31459                           
 31460                           ; BSR set to: 0
 31461                           ;motor.c: 190: };motor.c: 193: motor_current_speed = 0;
 31462                           
 31463                           ; BSR set to: 0
 31464  00DD78  0E00               	movlw	0
 31465  00DD7A  6FCD               	movwf	(_motor_current_speed+1)& (0+255),b	;volatile
 31466  00DD7C  0E00               	movlw	0
 31467  00DD7E  6FCC               	movwf	_motor_current_speed& (0+255),b	;volatile
 31468                           
 31469                           ;motor.c: 194: motor_current_stepcount = 0;
 31470  00DD80  0E00               	movlw	0
 31471  00DD82  6E16               	movwf	_motor_current_stepcount,c	;volatile
 31472  00DD84  0E00               	movlw	0
 31473  00DD86  6E17               	movwf	_motor_current_stepcount+1,c	;volatile
 31474  00DD88  0E00               	movlw	0
 31475  00DD8A  6E18               	movwf	_motor_current_stepcount+2,c	;volatile
 31476  00DD8C  0E00               	movlw	0
 31477  00DD8E  6E19               	movwf	_motor_current_stepcount+3,c	;volatile
 31478                           
 31479                           ; BSR set to: 0
 31480                           ;motor.c: 196: motor_next_speed_check = motor_steps_lookup[1];
 31481  00DD90  0E63               	movlw	low (_motor_steps_lookup+2)
 31482  00DD92  6EF6               	movwf	tblptrl,c
 31483  00DD94  0E94               	movlw	high (_motor_steps_lookup+2)
 31484  00DD96  6EF7               	movwf	tblptrh,c
 31485  00DD98                     	if	0	;tblptru may be non-zero
 31486  00DD98                     	endif
 31487  00DD98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 31488  00DD98  0E00               	movlw	low (__mediumconst shr (0+16))
 31489  00DD9A  6EF8               	movwf	tblptru,c
 31490  00DD9C                     	endif
 31491  00DD9C  0009               	tblrd		*+
 31492  00DD9E  CFF5 F066          	movff	tablat,??__motor_run
 31493  00DDA2  0009               	tblrd		*+
 31494  00DDA4  CFF5 F067          	movff	tablat,??__motor_run+1
 31495  00DDA8  C066  F137         	movff	??__motor_run,_motor_next_speed_check	;volatile
 31496  00DDAC  C067  F138         	movff	??__motor_run+1,_motor_next_speed_check+1	;volatile
 31497  00DDB0  0101               	movlb	1	; () banked
 31498  00DDB2  6B39               	clrf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 31499  00DDB4  6B3A               	clrf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 31500                           
 31501                           ; BSR set to: 1
 31502                           ;motor.c: 199: CCP1CONbits.CCP1M = 0b0000;
 31503  00DDB6  90BA               	bcf	4026,0,c	;volatile
 31504  00DDB8  92BA               	bcf	4026,1,c	;volatile
 31505  00DDBA  94BA               	bcf	4026,2,c	;volatile
 31506  00DDBC  96BA               	bcf	4026,3,c	;volatile
 31507                           
 31508                           ; BSR set to: 1
 31509                           ;motor.c: 202: LATBbits.LB0 = 0;
 31510  00DDBE  908A               	bcf	3978,0,c	;volatile
 31511                           
 31512                           ; BSR set to: 1
 31513                           ;motor.c: 203: if(direction==MOTOR_DIRECTION_CCW)
 31514  00DDC0  0100               	movlb	0	; () banked
 31515  00DDC2  296A               	incf	__motor_run@direction& (0+255),w,b
 31516  00DDC4  A4D8               	btfss	status,2,c
 31517  00DDC6  D005               	goto	l2361
 31518                           
 31519                           ; BSR set to: 0
 31520                           ;motor.c: 204: {;motor.c: 205: if(config.inverse_direction)
 31521  00DDC8  0101               	movlb	1	; () banked
 31522  00DDCA  517F               	movf	(_config+4)& (0+255),w,b
 31523  00DDCC  B4D8               	btfsc	status,2,c
 31524  00DDCE  D005               	goto	u17020
 31525  00DDD0  D006               	goto	l2365
 31526  00DDD2                     l2361:
 31527                           
 31528                           ;motor.c: 210: else;motor.c: 211: {;motor.c: 212: if(config.inverse_direction)
 31529                           
 31530                           ; BSR set to: 1
 31531  00DDD2  0101               	movlb	1	; () banked
 31532  00DDD4  517F               	movf	(_config+4)& (0+255),w,b
 31533  00DDD6  B4D8               	btfsc	status,2,c
 31534  00DDD8  D002               	goto	l2365
 31535  00DDDA                     u17020:
 31536                           
 31537                           ; BSR set to: 1
 31538                           ;motor.c: 213: LATBbits.LB2 = 0;
 31539  00DDDA  948A               	bcf	3978,2,c	;volatile
 31540  00DDDC  D001               	goto	l2366
 31541  00DDDE                     l2365:
 31542                           
 31543                           ; BSR set to: 1
 31544                           ;motor.c: 214: else;motor.c: 215: LATBbits.LB2 = 1;
 31545  00DDDE  848A               	bsf	3978,2,c	;volatile
 31546  00DDE0                     l2366:
 31547                           
 31548                           ; BSR set to: 1
 31549                           ;motor.c: 216: };motor.c: 219: LATBbits.LB1 = 1;
 31550                           
 31551                           ; BSR set to: 1
 31552  00DDE0  828A               	bsf	3978,1,c	;volatile
 31553                           
 31554                           ; BSR set to: 1
 31555                           ;motor.c: 222: ++motor_current_stepcount;
 31556  00DDE2  0E01               	movlw	1
 31557  00DDE4  2616               	addwf	_motor_current_stepcount,f,c	;volatile
 31558  00DDE6  0E00               	movlw	0
 31559  00DDE8  2217               	addwfc	_motor_current_stepcount+1,f,c	;volatile
 31560  00DDEA  2218               	addwfc	_motor_current_stepcount+2,f,c	;volatile
 31561  00DDEC  2219               	addwfc	_motor_current_stepcount+3,f,c	;volatile
 31562                           
 31563                           ;motor.c: 225: os.current_position_in_steps += motor_direction;
 31564  00DDEE  5169               	movf	_motor_direction& (0+255),w,b
 31565  00DDF0  0100               	movlb	0	; () banked
 31566  00DDF2  6F66               	movwf	??__motor_run& (0+255),b
 31567  00DDF4  0E00               	movlw	0
 31568  00DDF6  BF66               	btfsc	??__motor_run& (0+255),7,b
 31569  00DDF8  0EFF               	movlw	255
 31570  00DDFA  6F67               	movwf	(??__motor_run+1)& (0+255),b
 31571  00DDFC  6F68               	movwf	(??__motor_run+2)& (0+255),b
 31572  00DDFE  6F69               	movwf	(??__motor_run+3)& (0+255),b
 31573  00DE00  5166               	movf	??__motor_run& (0+255),w,b
 31574  00DE02  27DA               	addwf	(_os+7)& (0+255),f,b	;volatile
 31575  00DE04  5167               	movf	(??__motor_run+1)& (0+255),w,b
 31576  00DE06  23DB               	addwfc	(_os+8)& (0+255),f,b	;volatile
 31577  00DE08  5168               	movf	(??__motor_run+2)& (0+255),w,b
 31578  00DE0A  23DC               	addwfc	(_os+9)& (0+255),f,b	;volatile
 31579  00DE0C  5169               	movf	(??__motor_run+3)& (0+255),w,b
 31580  00DE0E  23DD               	addwfc	(_os+10)& (0+255),f,b	;volatile
 31581                           
 31582                           ;motor.c: 226: if(os.current_position_in_steps==config.full_circle_in_steps)
 31583  00DE10  0101               	movlb	1	; () banked
 31584  00DE12  517B               	movf	_config& (0+255),w,b
 31585  00DE14  0100               	movlb	0	; () banked
 31586  00DE16  19DA               	xorwf	(_os+7)& (0+255),w,b	;volatile
 31587  00DE18  E118               	bnz	l17558
 31588  00DE1A  0101               	movlb	1	; () banked
 31589  00DE1C  517C               	movf	(_config+1)& (0+255),w,b
 31590  00DE1E  0100               	movlb	0	; () banked
 31591  00DE20  19DB               	xorwf	(_os+8)& (0+255),w,b	;volatile
 31592  00DE22  E113               	bnz	l17558
 31593  00DE24  0101               	movlb	1	; () banked
 31594  00DE26  517D               	movf	(_config+2)& (0+255),w,b
 31595  00DE28  0100               	movlb	0	; () banked
 31596  00DE2A  19DC               	xorwf	(_os+9)& (0+255),w,b	;volatile
 31597  00DE2C  E10E               	bnz	l17558
 31598  00DE2E  0101               	movlb	1	; () banked
 31599  00DE30  517E               	movf	(_config+3)& (0+255),w,b
 31600  00DE32  0100               	movlb	0	; () banked
 31601  00DE34  19DD               	xorwf	(_os+10)& (0+255),w,b	;volatile
 31602  00DE36  A4D8               	btfss	status,2,c
 31603  00DE38  D008               	goto	l2367
 31604                           
 31605                           ; BSR set to: 0
 31606                           ;motor.c: 227: os.current_position_in_steps = 0;
 31607  00DE3A  0E00               	movlw	0
 31608  00DE3C  6FDA               	movwf	(_os+7)& (0+255),b	;volatile
 31609  00DE3E  0E00               	movlw	0
 31610  00DE40  6FDB               	movwf	(_os+8)& (0+255),b	;volatile
 31611  00DE42  0E00               	movlw	0
 31612  00DE44  6FDC               	movwf	(_os+9)& (0+255),b	;volatile
 31613  00DE46  0E00               	movlw	0
 31614  00DE48  6FDD               	movwf	(_os+10)& (0+255),b	;volatile
 31615  00DE4A                     l2367:
 31616  00DE4A                     l17558:
 31617                           
 31618                           ; BSR set to: 0
 31619                           ;motor.c: 228: if(os.current_position_in_steps==0xFFFFFFFF)
 31620  00DE4A  29DA               	incf	(_os+7)& (0+255),w,b	;volatile
 31621  00DE4C  E11B               	bnz	l17562
 31622  00DE4E  29DB               	incf	(_os+8)& (0+255),w,b	;volatile
 31623  00DE50  E119               	bnz	l17562
 31624  00DE52  29DC               	incf	(_os+9)& (0+255),w,b	;volatile
 31625  00DE54  E117               	bnz	l17562
 31626  00DE56  29DD               	incf	(_os+10)& (0+255),w,b	;volatile
 31627  00DE58  A4D8               	btfss	status,2,c
 31628  00DE5A  D014               	goto	l2368
 31629                           
 31630                           ; BSR set to: 0
 31631                           ;motor.c: 229: os.current_position_in_steps = (config.full_circle_in_steps-1);
 31632  00DE5C  0EFF               	movlw	255
 31633  00DE5E  0101               	movlb	1	; () banked
 31634  00DE60  257B               	addwf	_config& (0+255),w,b
 31635  00DE62  0100               	movlb	0	; () banked
 31636  00DE64  6FDA               	movwf	(_os+7)& (0+255),b	;volatile
 31637  00DE66  0EFF               	movlw	255
 31638  00DE68  0101               	movlb	1	; () banked
 31639  00DE6A  217C               	addwfc	(_config+1)& (0+255),w,b
 31640  00DE6C  0100               	movlb	0	; () banked
 31641  00DE6E  6FDB               	movwf	(_os+8)& (0+255),b	;volatile
 31642  00DE70  0EFF               	movlw	255
 31643  00DE72  0101               	movlb	1	; () banked
 31644  00DE74  217D               	addwfc	(_config+2)& (0+255),w,b
 31645  00DE76  0100               	movlb	0	; () banked
 31646  00DE78  6FDC               	movwf	(_os+9)& (0+255),b	;volatile
 31647  00DE7A  0EFF               	movlw	255
 31648  00DE7C  0101               	movlb	1	; () banked
 31649  00DE7E  217E               	addwfc	(_config+3)& (0+255),w,b
 31650  00DE80  0100               	movlb	0	; () banked
 31651  00DE82  6FDD               	movwf	(_os+10)& (0+255),b	;volatile
 31652  00DE84                     l2368:
 31653  00DE84                     l17562:
 31654                           
 31655                           ; BSR set to: 0
 31656                           ;motor.c: 232: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 31657  00DE84  0E55               	movlw	85
 31658  00DE86  6EA7               	movwf	4007,c	;volsfr
 31659                           
 31660                           ; BSR set to: 0
 31661  00DE88  0EAA               	movlw	170
 31662  00DE8A  6EA7               	movwf	4007,c	;volsfr
 31663                           
 31664                           ; BSR set to: 0
 31665  00DE8C  010E               	movlb	14	; () banked
 31666  00DE8E  91BF               	bcf	191,0,b	;volatile
 31667                           
 31668                           ; BSR set to: 14
 31669                           ;motor.c: 233: RPOR4 = 0;
 31670  00DE90  0E00               	movlw	0
 31671  00DE92  6FC4               	movwf	196,b	;volatile
 31672                           
 31673                           ; BSR set to: 14
 31674                           ;motor.c: 234: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 31675  00DE94  0E55               	movlw	85
 31676  00DE96  6EA7               	movwf	4007,c	;volsfr
 31677                           
 31678                           ; BSR set to: 14
 31679  00DE98  0EAA               	movlw	170
 31680  00DE9A  6EA7               	movwf	4007,c	;volsfr
 31681                           
 31682                           ; BSR set to: 14
 31683  00DE9C  81BF               	bsf	191,0,b	;volatile
 31684                           
 31685                           ; BSR set to: 14
 31686                           ;motor.c: 237: motor_mode = MOTOR_MODE_MANUAL;
 31687  00DE9E  0E00               	movlw	0
 31688  00DEA0  0101               	movlb	1	; () banked
 31689  00DEA2  6F6A               	movwf	_motor_mode& (0+255),b
 31690                           
 31691                           ; BSR set to: 1
 31692                           ;motor.c: 241: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_speed];
 31693  00DEA4  0EFD               	movlw	low _motor_prescaler_lookup
 31694  00DEA6  0100               	movlb	0	; () banked
 31695  00DEA8  25CC               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 31696  00DEAA  6EF6               	movwf	tblptrl,c
 31697  00DEAC  0E9B               	movlw	high _motor_prescaler_lookup
 31698  00DEAE  21CD               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 31699  00DEB0  6EF7               	movwf	tblptrh,c
 31700  00DEB2                     	if	1	;There are 3 active tblptr bytes
 31701  00DEB2  6AF8               	clrf	tblptru,c
 31702  00DEB4  0E00               	movlw	low (__mediumconst shr (0+16))
 31703  00DEB6  22F8               	addwfc	tblptru,f,c
 31704  00DEB8                     	endif
 31705  00DEB8  0008               	tblrd		*
 31706  00DEBA  CFF5 F066          	movff	tablat,??__motor_run
 31707  00DEBE  50CA               	movf	4042,w,c	;volatile
 31708  00DEC0  1966               	xorwf	??__motor_run& (0+255),w,b
 31709  00DEC2  0BFC               	andlw	-4
 31710  00DEC4  1966               	xorwf	??__motor_run& (0+255),w,b
 31711  00DEC6  6ECA               	movwf	4042,c	;volatile
 31712                           
 31713                           ; BSR set to: 0
 31714                           ;motor.c: 243: PR2 = motor_period_lookup[motor_current_speed];
 31715  00DEC8  0E16               	movlw	low _motor_period_lookup
 31716  00DECA  25CC               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 31717  00DECC  6EF6               	movwf	tblptrl,c
 31718  00DECE  0E9A               	movlw	high _motor_period_lookup
 31719  00DED0  21CD               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 31720  00DED2  6EF7               	movwf	tblptrh,c
 31721  00DED4                     	if	1	;There are 3 active tblptr bytes
 31722  00DED4  6AF8               	clrf	tblptru,c
 31723  00DED6  0E00               	movlw	low (__mediumconst shr (0+16))
 31724  00DED8  22F8               	addwfc	tblptru,f,c
 31725  00DEDA                     	endif
 31726  00DEDA  0008               	tblrd		*
 31727  00DEDC  CFF5 FFCB          	movff	tablat,4043	;volatile
 31728                           
 31729                           ; BSR set to: 0
 31730                           ;motor.c: 245: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 31731  00DEE0  0E2F               	movlw	low _motor_postscaler_lookup
 31732  00DEE2  25CC               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 31733  00DEE4  6EF6               	movwf	tblptrl,c
 31734  00DEE6  0E98               	movlw	high _motor_postscaler_lookup
 31735  00DEE8  21CD               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 31736  00DEEA  6EF7               	movwf	tblptrh,c
 31737  00DEEC                     	if	1	;There are 3 active tblptr bytes
 31738  00DEEC  6AF8               	clrf	tblptru,c
 31739  00DEEE  0E00               	movlw	low (__mediumconst shr (0+16))
 31740  00DEF0  22F8               	addwfc	tblptru,f,c
 31741  00DEF2                     	endif
 31742  00DEF2  0008               	tblrd		*
 31743  00DEF4  CFF5 F066          	movff	tablat,??__motor_run
 31744  00DEF8  4766               	rlncf	??__motor_run& (0+255),f,b
 31745  00DEFA  4766               	rlncf	??__motor_run& (0+255),f,b
 31746  00DEFC  4766               	rlncf	??__motor_run& (0+255),f,b
 31747  00DEFE  50CA               	movf	4042,w,c	;volatile
 31748  00DF00  1966               	xorwf	??__motor_run& (0+255),w,b
 31749  00DF02  0B87               	andlw	-121
 31750  00DF04  1966               	xorwf	??__motor_run& (0+255),w,b
 31751  00DF06  6ECA               	movwf	4042,c	;volatile
 31752                           
 31753                           ; BSR set to: 0
 31754                           ;motor.c: 247: CCPR1L = PR2>>1;
 31755  00DF08  90D8               	bcf	status,0,c
 31756  00DF0A  30CB               	rrcf	4043,w,c	;volatile
 31757  00DF0C  6EBB               	movwf	4027,c	;volatile
 31758                           
 31759                           ; BSR set to: 0
 31760                           ;motor.c: 250: PIR1bits.TMR2IF = 0;
 31761  00DF0E  929E               	bcf	3998,1,c	;volatile
 31762                           
 31763                           ; BSR set to: 0
 31764                           ;motor.c: 251: PIE1bits.TMR2IE = 1;
 31765  00DF10  829D               	bsf	3997,1,c	;volatile
 31766                           
 31767                           ; BSR set to: 0
 31768                           ;motor.c: 254: TMR2 = 0;
 31769  00DF12  0E00               	movlw	0
 31770  00DF14  6ECC               	movwf	4044,c	;volatile
 31771                           
 31772                           ; BSR set to: 0
 31773                           ;motor.c: 255: T2CONbits.TMR2ON = 1;
 31774  00DF16  84CA               	bsf	4042,2,c	;volatile
 31775                           
 31776                           ; BSR set to: 0
 31777                           ;motor.c: 258: os.busy = 1;
 31778  00DF18  0E01               	movlw	1
 31779  00DF1A  6FE1               	movwf	(_os+14)& (0+255),b	;volatile
 31780                           
 31781                           ; BSR set to: 0
 31782  00DF1C  0012               	return		;funcret
 31783  00DF1E                     __end_of__motor_run:
 31784                           	opt stack 0
 31785                           tosu	equ	0xFFF
 31786                           tosh	equ	0xFFE
 31787                           tosl	equ	0xFFD
 31788                           pclath	equ	0xFFA
 31789                           tblptru	equ	0xFF8
 31790                           tblptrh	equ	0xFF7
 31791                           tblptrl	equ	0xFF6
 31792                           tablat	equ	0xFF5
 31793                           prodh	equ	0xFF4
 31794                           prodl	equ	0xFF3
 31795                           intcon	equ	0xFF2
 31796                           indf0	equ	0xFEF
 31797                           postinc0	equ	0xFEE
 31798                           fsr0h	equ	0xFEA
 31799                           fsr0l	equ	0xFE9
 31800                           wreg	equ	0xFE8
 31801                           indf1	equ	0xFE7
 31802                           postdec1	equ	0xFE5
 31803                           plusw1	equ	0xFE3
 31804                           fsr1h	equ	0xFE2
 31805                           fsr1l	equ	0xFE1
 31806                           indf2	equ	0xFDF
 31807                           postinc2	equ	0xFDE
 31808                           postdec2	equ	0xFDD
 31809                           plusw2	equ	0xFDB
 31810                           fsr2h	equ	0xFDA
 31811                           fsr2l	equ	0xFD9
 31812                           status	equ	0xFD8
 31813                           
 31814 ;; *************** function _USBTransferOnePacket *****************
 31815 ;; Defined at:
 31816 ;;		line 995 in file "usb_device.c"
 31817 ;; Parameters:    Size  Location     Type
 31818 ;;  ep              1    wreg     unsigned char 
 31819 ;;  dir             1    0[BANK0 ] unsigned char 
 31820 ;;  data            2    1[BANK0 ] PTR unsigned char 
 31821 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 31822 ;;		 -> msd_cbw(31), NULL(0), 
 31823 ;;  len             1    3[BANK0 ] unsigned char 
 31824 ;; Auto vars:     Size  Location     Type
 31825 ;;  ep              1    8[BANK0 ] unsigned char 
 31826 ;;  handle          2    9[BANK0 ] PTR volatile struct __BD
 31827 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 31828 ;; Return value:  Size  Location     Type
 31829 ;;                  2    0[BANK0 ] PTR void 
 31830 ;; Registers used:
 31831 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31832 ;; Tracked objects:
 31833 ;;		On entry : 0/0
 31834 ;;		On exit  : 0/0
 31835 ;;		Unchanged: 0/0
 31836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31837 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31838 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31839 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31840 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31841 ;;Total ram usage:       11 bytes
 31842 ;; Hardware stack levels used:    1
 31843 ;; Hardware stack levels required when called:   10
 31844 ;; This function calls:
 31845 ;;		Nothing
 31846 ;; This function is called by:
 31847 ;;		_MSDTasks
 31848 ;;		_MSDProcessCommandMediaPresent
 31849 ;;		_MSDReadHandler
 31850 ;;		_MSDWriteHandler
 31851 ;;		_APP_DeviceCustomHIDTasks
 31852 ;; This function uses a non-reentrant model
 31853 ;;
 31854                           
 31855                           	psect	text113
 31856  00FA10                     __ptext113:
 31857                           	opt stack 0
 31858  00FA10                     _USBTransferOnePacket:
 31859                           	opt stack 18
 31860                           
 31861                           ; BSR set to: 0
 31862                           ;incstack = 0
 31863                           ;USBTransferOnePacket@ep stored from wreg
 31864  00FA10  0100               	movlb	0	; () banked
 31865  00FA12  6F68               	movwf	USBTransferOnePacket@ep& (0+255),b
 31866                           
 31867                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 31868  00FA14  0100               	movlb	0	; () banked
 31869  00FA16  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 31870  00FA18  B4D8               	btfsc	status,2,c
 31871  00FA1A  D007               	goto	l184
 31872                           
 31873                           ; BSR set to: 0
 31874                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 31875  00FA1C  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 31876  00FA1E  0D02               	mullw	2
 31877  00FA20  0E10               	movlw	low _pBDTEntryIn
 31878  00FA22  24F3               	addwf	prodl,w,c
 31879  00FA24  6ED9               	movwf	fsr2l,c
 31880  00FA26  0E00               	movlw	high _pBDTEntryIn
 31881  00FA28  D006               	goto	L57
 31882  00FA2A                     l184:
 31883                           
 31884                           ; BSR set to: 0
 31885                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 31886                           
 31887                           ; BSR set to: 0
 31888  00FA2A  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 31889  00FA2C  0D02               	mullw	2
 31890  00FA2E  0E31               	movlw	low _pBDTEntryOut
 31891  00FA30  24F3               	addwf	prodl,w,c
 31892  00FA32  6ED9               	movwf	fsr2l,c
 31893  00FA34  0E01               	movlw	high _pBDTEntryOut
 31894  00FA36                     L57:
 31895  00FA36  20F4               	addwfc	prodh,w,c
 31896  00FA38  6EDA               	movwf	fsr2h,c
 31897  00FA3A  CFDE F069          	movff	postinc2,USBTransferOnePacket@handle
 31898  00FA3E  CFDD F06A          	movff	postdec2,USBTransferOnePacket@handle+1
 31899                           
 31900                           ; BSR set to: 0
 31901                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 31902                           
 31903                           ; BSR set to: 0
 31904  00FA42  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 31905  00FA44  116A               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 31906  00FA46  A4D8               	btfss	status,2,c
 31907  00FA48  D005               	goto	l186
 31908                           
 31909                           ; BSR set to: 0
 31910                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 31911  00FA4A  0E00               	movlw	0
 31912  00FA4C  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 31913  00FA4E  0E00               	movlw	0
 31914  00FA50  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 31915                           
 31916                           ; BSR set to: 0
 31917  00FA52  0012               	return	
 31918  00FA54                     l186:
 31919                           
 31920                           ; BSR set to: 0
 31921                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 31922                           
 31923                           ; BSR set to: 0
 31924  00FA54  EE20 F002          	lfsr	2,2
 31925  00FA58  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 31926  00FA5A  26D9               	addwf	fsr2l,f,c
 31927  00FA5C  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 31928  00FA5E  22DA               	addwfc	fsr2h,f,c
 31929  00FA60  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 31930  00FA64  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 31931                           
 31932                           ;usb_device.c: 1030: handle->CNT = len;
 31933  00FA68  EE20 F001          	lfsr	2,1
 31934  00FA6C  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 31935  00FA6E  26D9               	addwf	fsr2l,f,c
 31936  00FA70  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 31937  00FA72  22DA               	addwfc	fsr2h,f,c
 31938  00FA74  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 31939                           
 31940                           ; BSR set to: 0
 31941                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 31942  00FA78  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 31943  00FA7C  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 31944  00FA80  0E40               	movlw	64
 31945  00FA82  16DF               	andwf	indf2,f,c
 31946                           
 31947                           ; BSR set to: 0
 31948                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 31949  00FA84  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 31950  00FA88  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 31951  00FA8C  0E00               	movlw	0
 31952  00FA8E  86DB               	bsf	plusw2,3,c
 31953                           
 31954                           ; BSR set to: 0
 31955                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 31956  00FA90  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 31957  00FA94  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 31958  00FA98  0E00               	movlw	0
 31959  00FA9A  8EDB               	bsf	plusw2,7,c
 31960                           
 31961                           ; BSR set to: 0
 31962                           ;usb_device.c: 1036: if(dir != 0)
 31963  00FA9C  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 31964  00FA9E  B4D8               	btfsc	status,2,c
 31965  00FAA0  D018               	goto	l188
 31966                           
 31967                           ; BSR set to: 0
 31968                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 31969  00FAA2  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 31970  00FAA4  0D02               	mullw	2
 31971  00FAA6  0E10               	movlw	low _pBDTEntryIn
 31972  00FAA8  24F3               	addwf	prodl,w,c
 31973  00FAAA  6ED9               	movwf	fsr2l,c
 31974  00FAAC  0E00               	movlw	high _pBDTEntryIn
 31975  00FAAE  20F4               	addwfc	prodh,w,c
 31976  00FAB0  6EDA               	movwf	fsr2h,c
 31977  00FAB2  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 31978  00FAB6  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 31979  00FABA  0E04               	movlw	4
 31980  00FABC  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 31981  00FABE  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 31982  00FAC0  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 31983  00FAC2  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 31984  00FAC4  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 31985  00FAC6  0D02               	mullw	2
 31986  00FAC8  0E10               	movlw	low _pBDTEntryIn
 31987  00FACA  24F3               	addwf	prodl,w,c
 31988  00FACC  6ED9               	movwf	fsr2l,c
 31989  00FACE  0E00               	movlw	high _pBDTEntryIn
 31990  00FAD0  D017               	goto	L58
 31991  00FAD2                     l188:
 31992                           
 31993                           ; BSR set to: 0
 31994                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 31995                           
 31996                           ; BSR set to: 0
 31997  00FAD2  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 31998  00FAD4  0D02               	mullw	2
 31999  00FAD6  0E31               	movlw	low _pBDTEntryOut
 32000  00FAD8  24F3               	addwf	prodl,w,c
 32001  00FADA  6ED9               	movwf	fsr2l,c
 32002  00FADC  0E01               	movlw	high _pBDTEntryOut
 32003  00FADE  20F4               	addwfc	prodh,w,c
 32004  00FAE0  6EDA               	movwf	fsr2h,c
 32005  00FAE2  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 32006  00FAE6  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 32007  00FAEA  0E04               	movlw	4
 32008  00FAEC  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 32009  00FAEE  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 32010  00FAF0  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 32011  00FAF2  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 32012  00FAF4  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 32013  00FAF6  0D02               	mullw	2
 32014  00FAF8  0E31               	movlw	low _pBDTEntryOut
 32015  00FAFA  24F3               	addwf	prodl,w,c
 32016  00FAFC  6ED9               	movwf	fsr2l,c
 32017  00FAFE  0E01               	movlw	high _pBDTEntryOut
 32018  00FB00                     L58:
 32019  00FB00  20F4               	addwfc	prodh,w,c
 32020  00FB02  6EDA               	movwf	fsr2h,c
 32021  00FB04  C066  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 32022  00FB08  C067  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 32023                           
 32024                           ; BSR set to: 0
 32025                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 32026                           
 32027                           ; BSR set to: 0
 32028  00FB0C  C069  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 32029  00FB10  C06A  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 32030  00FB14  0012               	return	
 32031  00FB16                     __end_of_USBTransferOnePacket:
 32032                           	opt stack 0
 32033                           tosu	equ	0xFFF
 32034                           tosh	equ	0xFFE
 32035                           tosl	equ	0xFFD
 32036                           pclath	equ	0xFFA
 32037                           tblptru	equ	0xFF8
 32038                           tblptrh	equ	0xFF7
 32039                           tblptrl	equ	0xFF6
 32040                           tablat	equ	0xFF5
 32041                           prodh	equ	0xFF4
 32042                           prodl	equ	0xFF3
 32043                           intcon	equ	0xFF2
 32044                           indf0	equ	0xFEF
 32045                           postinc0	equ	0xFEE
 32046                           fsr0h	equ	0xFEA
 32047                           fsr0l	equ	0xFE9
 32048                           wreg	equ	0xFE8
 32049                           indf1	equ	0xFE7
 32050                           postdec1	equ	0xFE5
 32051                           plusw1	equ	0xFE3
 32052                           fsr1h	equ	0xFE2
 32053                           fsr1l	equ	0xFE1
 32054                           indf2	equ	0xFDF
 32055                           postinc2	equ	0xFDE
 32056                           postdec2	equ	0xFDD
 32057                           plusw2	equ	0xFDB
 32058                           fsr2h	equ	0xFDA
 32059                           fsr2l	equ	0xFD9
 32060                           status	equ	0xFD8
 32061                           
 32062 ;; *************** function _SYS_InterruptHigh *****************
 32063 ;; Defined at:
 32064 ;;		line 162 in file "system.c"
 32065 ;; Parameters:    Size  Location     Type
 32066 ;;		None
 32067 ;; Auto vars:     Size  Location     Type
 32068 ;;		None
 32069 ;; Return value:  Size  Location     Type
 32070 ;;                  1    wreg      void 
 32071 ;; Registers used:
 32072 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 32073 ;; Tracked objects:
 32074 ;;		On entry : 0/0
 32075 ;;		On exit  : 0/0
 32076 ;;		Unchanged: 0/0
 32077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32080 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32081 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32082 ;;Total ram usage:       14 bytes
 32083 ;; Hardware stack levels used:    1
 32084 ;; Hardware stack levels required when called:    9
 32085 ;; This function calls:
 32086 ;;		_USBDeviceTasks
 32087 ;;		_motor_isr
 32088 ;;		_tmr0_isr
 32089 ;; This function is called by:
 32090 ;;		Interrupt level 2
 32091 ;; This function uses a non-reentrant model
 32092 ;;
 32093                           
 32094                           	psect	intcode
 32095  009008                     __pintcode:
 32096                           	opt stack 0
 32097  009008                     _SYS_InterruptHigh:
 32098                           	opt stack 9
 32099                           
 32100                           ; BSR set to: 0
 32101                           ;incstack = 0
 32102  009008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 32103  00900A  CFFA F04D          	movff	pclath,??_SYS_InterruptHigh
 32104  00900E  CFFB F04E          	movff	pclatu,??_SYS_InterruptHigh+1
 32105  009012  CFE9 F04F          	movff	fsr0l,??_SYS_InterruptHigh+2
 32106  009016  CFEA F050          	movff	fsr0h,??_SYS_InterruptHigh+3
 32107  00901A  CFE1 F051          	movff	fsr1l,??_SYS_InterruptHigh+4
 32108  00901E  CFE2 F052          	movff	fsr1h,??_SYS_InterruptHigh+5
 32109  009022  CFD9 F053          	movff	fsr2l,??_SYS_InterruptHigh+6
 32110  009026  CFDA F054          	movff	fsr2h,??_SYS_InterruptHigh+7
 32111  00902A  CFF3 F055          	movff	prodl,??_SYS_InterruptHigh+8
 32112  00902E  CFF4 F056          	movff	prodh,??_SYS_InterruptHigh+9
 32113  009032  CFF6 F057          	movff	tblptrl,??_SYS_InterruptHigh+10
 32114  009036  CFF7 F058          	movff	tblptrh,??_SYS_InterruptHigh+11
 32115  00903A  CFF8 F059          	movff	tblptru,??_SYS_InterruptHigh+12
 32116  00903E  CFF5 F05A          	movff	tablat,??_SYS_InterruptHigh+13
 32117                           
 32118                           ;system.c: 165: USBDeviceTasks();
 32119  009042  EC98  F075         	call	_USBDeviceTasks	;wreg free
 32120                           
 32121                           ;system.c: 169: if(PIR1bits.TMR2IF)
 32122  009046  B29E               	btfsc	3998,1,c	;volatile
 32123                           
 32124                           ;system.c: 170: {;system.c: 171: motor_isr();
 32125  009048  EC2B  F05E         	call	_motor_isr	;wreg free
 32126                           
 32127                           ;system.c: 172: };system.c: 174: if(INTCONbits.T0IF)
 32128  00904C  B4F2               	btfsc	intcon,2,c	;volatile
 32129                           
 32130                           ;system.c: 175: {;system.c: 176: tmr0_isr();
 32131  00904E  ECB1  F091         	call	_tmr0_isr	;wreg free
 32132  009052  C05A  FFF5         	movff	??_SYS_InterruptHigh+13,tablat
 32133  009056  C059  FFF8         	movff	??_SYS_InterruptHigh+12,tblptru
 32134  00905A  C058  FFF7         	movff	??_SYS_InterruptHigh+11,tblptrh
 32135  00905E  C057  FFF6         	movff	??_SYS_InterruptHigh+10,tblptrl
 32136  009062  C056  FFF4         	movff	??_SYS_InterruptHigh+9,prodh
 32137  009066  C055  FFF3         	movff	??_SYS_InterruptHigh+8,prodl
 32138  00906A  C054  FFDA         	movff	??_SYS_InterruptHigh+7,fsr2h
 32139  00906E  C053  FFD9         	movff	??_SYS_InterruptHigh+6,fsr2l
 32140  009072  C052  FFE2         	movff	??_SYS_InterruptHigh+5,fsr1h
 32141  009076  C051  FFE1         	movff	??_SYS_InterruptHigh+4,fsr1l
 32142  00907A  C050  FFEA         	movff	??_SYS_InterruptHigh+3,fsr0h
 32143  00907E  C04F  FFE9         	movff	??_SYS_InterruptHigh+2,fsr0l
 32144  009082  C04E  FFFB         	movff	??_SYS_InterruptHigh+1,pclatu
 32145  009086  C04D  FFFA         	movff	??_SYS_InterruptHigh,pclath
 32146  00908A  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 32147  00908C  0011               	retfie		f
 32148  00908E                     __end_of_SYS_InterruptHigh:
 32149                           	opt stack 0
 32150                           tosu	equ	0xFFF
 32151                           tosh	equ	0xFFE
 32152                           tosl	equ	0xFFD
 32153                           pclatu	equ	0xFFB
 32154                           pclath	equ	0xFFA
 32155                           tblptru	equ	0xFF8
 32156                           tblptrh	equ	0xFF7
 32157                           tblptrl	equ	0xFF6
 32158                           tablat	equ	0xFF5
 32159                           prodh	equ	0xFF4
 32160                           prodl	equ	0xFF3
 32161                           intcon	equ	0xFF2
 32162                           indf0	equ	0xFEF
 32163                           postinc0	equ	0xFEE
 32164                           fsr0h	equ	0xFEA
 32165                           fsr0l	equ	0xFE9
 32166                           wreg	equ	0xFE8
 32167                           indf1	equ	0xFE7
 32168                           postdec1	equ	0xFE5
 32169                           plusw1	equ	0xFE3
 32170                           fsr1h	equ	0xFE2
 32171                           fsr1l	equ	0xFE1
 32172                           indf2	equ	0xFDF
 32173                           postinc2	equ	0xFDE
 32174                           postdec2	equ	0xFDD
 32175                           plusw2	equ	0xFDB
 32176                           fsr2h	equ	0xFDA
 32177                           fsr2l	equ	0xFD9
 32178                           status	equ	0xFD8
 32179                           
 32180 ;; *************** function _tmr0_isr *****************
 32181 ;; Defined at:
 32182 ;;		line 20 in file "os.c"
 32183 ;; Parameters:    Size  Location     Type
 32184 ;;		None
 32185 ;; Auto vars:     Size  Location     Type
 32186 ;;		None
 32187 ;; Return value:  Size  Location     Type
 32188 ;;                  1    wreg      void 
 32189 ;; Registers used:
 32190 ;;		wreg, status,2, status,0, cstack
 32191 ;; Tracked objects:
 32192 ;;		On entry : 0/0
 32193 ;;		On exit  : 0/0
 32194 ;;		Unchanged: 0/0
 32195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32200 ;;Total ram usage:        0 bytes
 32201 ;; Hardware stack levels used:    1
 32202 ;; Hardware stack levels required when called:    1
 32203 ;; This function calls:
 32204 ;;		_encoder_run
 32205 ;; This function is called by:
 32206 ;;		_SYS_InterruptHigh
 32207 ;; This function uses a non-reentrant model
 32208 ;;
 32209                           
 32210                           	psect	text115
 32211  012362                     __ptext115:
 32212                           	opt stack 0
 32213  012362                     _tmr0_isr:
 32214                           	opt stack 16
 32215                           
 32216                           ;os.c: 23: if(INTCONbits.T0IF)
 32217                           
 32218                           ;incstack = 0
 32219  012362  A4F2               	btfss	intcon,2,c	;volatile
 32220  012364  0012               	return	
 32221                           
 32222                           ;os.c: 24: {;os.c: 26: TMR0H = 0xFA;
 32223  012366  0EFA               	movlw	250
 32224  012368  6ED7               	movwf	4055,c	;volatile
 32225                           
 32226                           ;os.c: 27: TMR0L = 0x24;
 32227  01236A  0E24               	movlw	36
 32228  01236C  6ED6               	movwf	4054,c	;volatile
 32229                           
 32230                           ;os.c: 30: INTCONbits.T0IF = 0;
 32231  01236E  94F2               	bcf	intcon,2,c	;volatile
 32232                           
 32233                           ;os.c: 33: encoder_run();
 32234  012370  EC69  F07A         	call	_encoder_run	;wreg free
 32235                           
 32236                           ;os.c: 36: ++os.subTimeSlot;
 32237  012374  0100               	movlb	0	; () banked
 32238  012376  2BD3               	incf	_os& (0+255),f,b	;volatile
 32239                           
 32240                           ; BSR set to: 0
 32241                           ;os.c: 37: if(os.subTimeSlot>=10)
 32242  012378  0E09               	movlw	9
 32243  01237A  65D3               	cpfsgt	_os& (0+255),b	;volatile
 32244  01237C  0012               	return	
 32245                           
 32246                           ; BSR set to: 0
 32247                           ;os.c: 38: {;os.c: 39: if(os.done)
 32248  01237E  51D5               	movf	(_os+2)& (0+255),w,b	;volatile
 32249  012380  B4D8               	btfsc	status,2,c
 32250  012382  0012               	return	
 32251                           
 32252                           ; BSR set to: 0
 32253                           ;os.c: 40: {;os.c: 41: ++os.timeSlot;
 32254  012384  2BD4               	incf	(_os+1)& (0+255),f,b	;volatile
 32255                           
 32256                           ; BSR set to: 0
 32257                           ;os.c: 42: if(os.timeSlot==16)
 32258  012386  0E10               	movlw	16
 32259  012388  19D4               	xorwf	(_os+1)& (0+255),w,b	;volatile
 32260  01238A  A4D8               	btfss	status,2,c
 32261  01238C  D002               	goto	i2l1047
 32262                           
 32263                           ; BSR set to: 0
 32264                           ;os.c: 43: {;os.c: 44: os.timeSlot = 0;
 32265  01238E  0E00               	movlw	0
 32266  012390  6FD4               	movwf	(_os+1)& (0+255),b	;volatile
 32267  012392                     i2l1047:
 32268                           
 32269                           ; BSR set to: 0
 32270                           ;os.c: 45: };os.c: 46: os.subTimeSlot = 0;
 32271  012392  0E00               	movlw	0
 32272  012394  6FD3               	movwf	_os& (0+255),b	;volatile
 32273                           
 32274                           ;os.c: 47: os.done = 0;
 32275  012396  0E00               	movlw	0
 32276  012398  6FD5               	movwf	(_os+2)& (0+255),b	;volatile
 32277                           
 32278                           ; BSR set to: 0
 32279                           
 32280                           ; BSR set to: 0
 32281  01239A  0012               	return	
 32282  01239C                     __end_of_tmr0_isr:
 32283                           	opt stack 0
 32284                           tosu	equ	0xFFF
 32285                           tosh	equ	0xFFE
 32286                           tosl	equ	0xFFD
 32287                           pclatu	equ	0xFFB
 32288                           pclath	equ	0xFFA
 32289                           tblptru	equ	0xFF8
 32290                           tblptrh	equ	0xFF7
 32291                           tblptrl	equ	0xFF6
 32292                           tablat	equ	0xFF5
 32293                           prodh	equ	0xFF4
 32294                           prodl	equ	0xFF3
 32295                           intcon	equ	0xFF2
 32296                           indf0	equ	0xFEF
 32297                           postinc0	equ	0xFEE
 32298                           fsr0h	equ	0xFEA
 32299                           fsr0l	equ	0xFE9
 32300                           wreg	equ	0xFE8
 32301                           indf1	equ	0xFE7
 32302                           postdec1	equ	0xFE5
 32303                           plusw1	equ	0xFE3
 32304                           fsr1h	equ	0xFE2
 32305                           fsr1l	equ	0xFE1
 32306                           indf2	equ	0xFDF
 32307                           postinc2	equ	0xFDE
 32308                           postdec2	equ	0xFDD
 32309                           plusw2	equ	0xFDB
 32310                           fsr2h	equ	0xFDA
 32311                           fsr2l	equ	0xFD9
 32312                           status	equ	0xFD8
 32313                           
 32314 ;; *************** function _encoder_run *****************
 32315 ;; Defined at:
 32316 ;;		line 25 in file "encoder.c"
 32317 ;; Parameters:    Size  Location     Type
 32318 ;;		None
 32319 ;; Auto vars:     Size  Location     Type
 32320 ;;		None
 32321 ;; Return value:  Size  Location     Type
 32322 ;;                  1    wreg      void 
 32323 ;; Registers used:
 32324 ;;		wreg, status,2, status,0
 32325 ;; Tracked objects:
 32326 ;;		On entry : 0/0
 32327 ;;		On exit  : 0/0
 32328 ;;		Unchanged: 0/0
 32329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32334 ;;Total ram usage:        0 bytes
 32335 ;; Hardware stack levels used:    1
 32336 ;; This function calls:
 32337 ;;		Nothing
 32338 ;; This function is called by:
 32339 ;;		_tmr0_isr
 32340 ;; This function uses a non-reentrant model
 32341 ;;
 32342                           
 32343                           	psect	text116
 32344  00F4D2                     __ptext116:
 32345                           	opt stack 0
 32346  00F4D2                     _encoder_run:
 32347                           	opt stack 16
 32348                           
 32349                           ;encoder.c: 27: if(enc1 != (PORTE&0b00000111))
 32350                           
 32351                           ;incstack = 0
 32352  00F4D2  5084               	movf	3972,w,c	;volatile
 32353  00F4D4  0B07               	andlw	7
 32354  00F4D6  1821               	xorwf	_enc1,w,c
 32355  00F4D8  B4D8               	btfsc	status,2,c
 32356  00F4DA  D03A               	goto	i2l2458
 32357                           
 32358                           ;encoder.c: 28: {;encoder.c: 30: if(PORTEbits.RE0 && PORTEbits.RE2 && (!(enc1&0b00000001
      +                          )))
 32359  00F4DC  B084               	btfsc	3972,0,c	;volatile
 32360  00F4DE  A484               	btfss	3972,2,c	;volatile
 32361  00F4E0  D00F               	goto	i2l2461
 32362  00F4E2  B021               	btfsc	_enc1,0,c
 32363  00F4E4  D00D               	goto	i2l2461
 32364                           
 32365                           ;encoder.c: 31: {;encoder.c: 32: if(os.encoder1Count<127)
 32366  00F4E6  0E7F               	movlw	127
 32367  00F4E8  0100               	movlb	0	; () banked
 32368  00F4EA  19D6               	xorwf	(_os+3)& (0+255),w,b	;volatile
 32369  00F4EC  B4D8               	btfsc	status,2,c
 32370  00F4EE  D008               	goto	i2l2461
 32371                           
 32372                           ; BSR set to: 0
 32373                           ;encoder.c: 33: {;encoder.c: 34: ++os.encoder1Count;
 32374  00F4F0  2BD6               	incf	(_os+3)& (0+255),f,b	;volatile
 32375                           
 32376                           ; BSR set to: 0
 32377                           ;encoder.c: 35: if(config.beep_duration)
 32378  00F4F2  0101               	movlb	1	; () banked
 32379  00F4F4  5190               	movf	(_config+21)& (0+255),w,b
 32380  00F4F6  B4D8               	btfsc	status,2,c
 32381  00F4F8  D003               	goto	i2l2461
 32382                           
 32383                           ; BSR set to: 1
 32384                           ;encoder.c: 36: {;encoder.c: 37: LATCbits.LC7 = 1;
 32385  00F4FA  8E8B               	bsf	3979,7,c	;volatile
 32386                           
 32387                           ;encoder.c: 38: os.beep_count = config.beep_duration;
 32388  00F4FC  C190  F0F9         	movff	_config+21,_os+38	;volatile
 32389  00F500                     i2l2461:
 32390                           
 32391                           ;encoder.c: 39: };encoder.c: 40: };encoder.c: 41: };encoder.c: 43: if(PORTEbits.RE2 && P
      +                          ORTEbits.RE0 && (!(enc1&0b00000100)))
 32392                           
 32393                           ; BSR set to: 1
 32394                           
 32395                           ; BSR set to: 1
 32396  00F500  B484               	btfsc	3972,2,c	;volatile
 32397  00F502  A084               	btfss	3972,0,c	;volatile
 32398  00F504  D010               	goto	i2l2464
 32399  00F506  B421               	btfsc	_enc1,2,c
 32400  00F508  D00E               	goto	i2l2464
 32401                           
 32402                           ;encoder.c: 44: {;encoder.c: 45: if(os.encoder1Count>-128)
 32403  00F50A  0100               	movlb	0	; () banked
 32404  00F50C  51D6               	movf	(_os+3)& (0+255),w,b	;volatile
 32405  00F50E  0A80               	xorlw	128
 32406  00F510  0FFF               	addlw	255
 32407  00F512  A0D8               	btfss	status,0,c
 32408  00F514  D008               	goto	i2l2464
 32409                           
 32410                           ; BSR set to: 0
 32411                           ;encoder.c: 46: {;encoder.c: 47: --os.encoder1Count;
 32412  00F516  07D6               	decf	(_os+3)& (0+255),f,b	;volatile
 32413                           
 32414                           ; BSR set to: 0
 32415                           ;encoder.c: 48: if(config.beep_duration)
 32416  00F518  0101               	movlb	1	; () banked
 32417  00F51A  5190               	movf	(_config+21)& (0+255),w,b
 32418  00F51C  B4D8               	btfsc	status,2,c
 32419  00F51E  D003               	goto	i2l2464
 32420                           
 32421                           ; BSR set to: 1
 32422                           ;encoder.c: 49: {;encoder.c: 50: LATCbits.LC7 = 1;
 32423  00F520  8E8B               	bsf	3979,7,c	;volatile
 32424                           
 32425                           ;encoder.c: 51: os.beep_count = config.beep_duration;
 32426  00F522  C190  F0F9         	movff	_config+21,_os+38	;volatile
 32427  00F526                     i2l2464:
 32428                           
 32429                           ;encoder.c: 52: };encoder.c: 53: };encoder.c: 54: };encoder.c: 56: if(PORTEbits.RE1 && (
      +                          !(enc1&0b00000010)))
 32430                           
 32431                           ; BSR set to: 1
 32432                           
 32433                           ; BSR set to: 1
 32434  00F526  B284               	btfsc	3972,1,c	;volatile
 32435  00F528  B221               	btfsc	_enc1,1,c
 32436  00F52A  D00A               	goto	i2l2466
 32437                           
 32438                           ;encoder.c: 57: {;encoder.c: 58: os.button1 = 1;
 32439  00F52C  0E01               	movlw	1
 32440  00F52E  0100               	movlb	0	; () banked
 32441  00F530  6FD7               	movwf	(_os+4)& (0+255),b	;volatile
 32442                           
 32443                           ;encoder.c: 59: if(config.beep_duration)
 32444  00F532  0101               	movlb	1	; () banked
 32445  00F534  5190               	movf	(_config+21)& (0+255),w,b
 32446  00F536  B4D8               	btfsc	status,2,c
 32447  00F538  D003               	goto	i2l2466
 32448                           
 32449                           ; BSR set to: 1
 32450                           ;encoder.c: 60: {;encoder.c: 61: LATCbits.LC7 = 1;
 32451  00F53A  8E8B               	bsf	3979,7,c	;volatile
 32452                           
 32453                           ;encoder.c: 62: os.beep_count = config.beep_duration;
 32454  00F53C  C190  F0F9         	movff	_config+21,_os+38	;volatile
 32455  00F540                     i2l2466:
 32456                           
 32457                           ;encoder.c: 63: };encoder.c: 64: };encoder.c: 66: if((!PORTEbits.RE1) && (enc1&0b0000001
      +                          0))
 32458                           
 32459                           ; BSR set to: 1
 32460  00F540  A284               	btfss	3972,1,c	;volatile
 32461  00F542  A221               	btfss	_enc1,1,c
 32462  00F544  D002               	goto	i2l2467
 32463                           
 32464                           ;encoder.c: 67: {;encoder.c: 68: os.button1 = -1;
 32465  00F546  0100               	movlb	0	; () banked
 32466  00F548  69D7               	setf	(_os+4)& (0+255),b	;volatile
 32467  00F54A                     i2l2467:
 32468                           
 32469                           ;encoder.c: 69: };encoder.c: 71: enc1 = PORTE & 0b00000111;
 32470                           
 32471                           ; BSR set to: 0
 32472  00F54A  5084               	movf	3972,w,c	;volatile
 32473  00F54C  0B07               	andlw	7
 32474  00F54E  6E21               	movwf	_enc1,c
 32475  00F550                     i2l2458:
 32476                           
 32477                           ;encoder.c: 72: };encoder.c: 74: if(enc2 != (PORTA&0b00000111))
 32478  00F550  5080               	movf	3968,w,c	;volatile
 32479  00F552  0B07               	andlw	7
 32480  00F554  1820               	xorwf	_enc2,w,c
 32481  00F556  B4D8               	btfsc	status,2,c
 32482  00F558  D03A               	goto	i2l2468
 32483                           
 32484                           ;encoder.c: 75: {;encoder.c: 77: if(PORTAbits.RA2 && PORTAbits.RA0 && (!(enc2&0b00000100
      +                          )))
 32485  00F55A  B480               	btfsc	3968,2,c	;volatile
 32486  00F55C  A080               	btfss	3968,0,c	;volatile
 32487  00F55E  D00F               	goto	i2l2471
 32488  00F560  B420               	btfsc	_enc2,2,c
 32489  00F562  D00D               	goto	i2l2471
 32490                           
 32491                           ;encoder.c: 78: {;encoder.c: 79: if(os.encoder2Count<127)
 32492  00F564  0E7F               	movlw	127
 32493  00F566  0100               	movlb	0	; () banked
 32494  00F568  19D8               	xorwf	(_os+5)& (0+255),w,b	;volatile
 32495  00F56A  B4D8               	btfsc	status,2,c
 32496  00F56C  D008               	goto	i2l2471
 32497                           
 32498                           ; BSR set to: 0
 32499                           ;encoder.c: 80: {;encoder.c: 81: ++os.encoder2Count;
 32500  00F56E  2BD8               	incf	(_os+5)& (0+255),f,b	;volatile
 32501                           
 32502                           ; BSR set to: 0
 32503                           ;encoder.c: 82: if(config.beep_duration)
 32504  00F570  0101               	movlb	1	; () banked
 32505  00F572  5190               	movf	(_config+21)& (0+255),w,b
 32506  00F574  B4D8               	btfsc	status,2,c
 32507  00F576  D003               	goto	i2l2471
 32508                           
 32509                           ; BSR set to: 1
 32510                           ;encoder.c: 83: {;encoder.c: 84: LATCbits.LC7 = 1;
 32511  00F578  8E8B               	bsf	3979,7,c	;volatile
 32512                           
 32513                           ;encoder.c: 85: os.beep_count = config.beep_duration;
 32514  00F57A  C190  F0F9         	movff	_config+21,_os+38	;volatile
 32515  00F57E                     i2l2471:
 32516                           
 32517                           ;encoder.c: 86: };encoder.c: 87: };encoder.c: 88: };encoder.c: 90: if(PORTAbits.RA0 && P
      +                          ORTAbits.RA2 && (!(enc2&0b00000001)))
 32518                           
 32519                           ; BSR set to: 1
 32520                           
 32521                           ; BSR set to: 1
 32522  00F57E  B080               	btfsc	3968,0,c	;volatile
 32523  00F580  A480               	btfss	3968,2,c	;volatile
 32524  00F582  D010               	goto	i2l2474
 32525  00F584  B020               	btfsc	_enc2,0,c
 32526  00F586  D00E               	goto	i2l2474
 32527                           
 32528                           ;encoder.c: 91: {;encoder.c: 92: if(os.encoder2Count>-128)
 32529  00F588  0100               	movlb	0	; () banked
 32530  00F58A  51D8               	movf	(_os+5)& (0+255),w,b	;volatile
 32531  00F58C  0A80               	xorlw	128
 32532  00F58E  0FFF               	addlw	255
 32533  00F590  A0D8               	btfss	status,0,c
 32534  00F592  D008               	goto	i2l2474
 32535                           
 32536                           ; BSR set to: 0
 32537                           ;encoder.c: 93: {;encoder.c: 94: --os.encoder2Count;
 32538  00F594  07D8               	decf	(_os+5)& (0+255),f,b	;volatile
 32539                           
 32540                           ; BSR set to: 0
 32541                           ;encoder.c: 95: if(config.beep_duration)
 32542  00F596  0101               	movlb	1	; () banked
 32543  00F598  5190               	movf	(_config+21)& (0+255),w,b
 32544  00F59A  B4D8               	btfsc	status,2,c
 32545  00F59C  D003               	goto	i2l2474
 32546                           
 32547                           ; BSR set to: 1
 32548                           ;encoder.c: 96: {;encoder.c: 97: LATCbits.LC7 = 1;
 32549  00F59E  8E8B               	bsf	3979,7,c	;volatile
 32550                           
 32551                           ;encoder.c: 98: os.beep_count = config.beep_duration;
 32552  00F5A0  C190  F0F9         	movff	_config+21,_os+38	;volatile
 32553  00F5A4                     i2l2474:
 32554                           
 32555                           ;encoder.c: 99: };encoder.c: 100: };encoder.c: 101: };encoder.c: 103: if(PORTAbits.RA1 &
      +                          & (!(enc2&0b00000010)))
 32556                           
 32557                           ; BSR set to: 1
 32558                           
 32559                           ; BSR set to: 1
 32560  00F5A4  B280               	btfsc	3968,1,c	;volatile
 32561  00F5A6  B220               	btfsc	_enc2,1,c
 32562  00F5A8  D00A               	goto	i2l2476
 32563                           
 32564                           ;encoder.c: 104: {;encoder.c: 105: os.button2 = 1;
 32565  00F5AA  0E01               	movlw	1
 32566  00F5AC  0100               	movlb	0	; () banked
 32567  00F5AE  6FD9               	movwf	(_os+6)& (0+255),b	;volatile
 32568                           
 32569                           ;encoder.c: 106: if(config.beep_duration)
 32570  00F5B0  0101               	movlb	1	; () banked
 32571  00F5B2  5190               	movf	(_config+21)& (0+255),w,b
 32572  00F5B4  B4D8               	btfsc	status,2,c
 32573  00F5B6  D003               	goto	i2l2476
 32574                           
 32575                           ; BSR set to: 1
 32576                           ;encoder.c: 107: {;encoder.c: 108: LATCbits.LC7 = 1;
 32577  00F5B8  8E8B               	bsf	3979,7,c	;volatile
 32578                           
 32579                           ;encoder.c: 109: os.beep_count = config.beep_duration;
 32580  00F5BA  C190  F0F9         	movff	_config+21,_os+38	;volatile
 32581  00F5BE                     i2l2476:
 32582                           
 32583                           ;encoder.c: 110: };encoder.c: 111: };encoder.c: 113: if((!PORTAbits.RA1) && (enc2&0b0000
      +                          0010))
 32584                           
 32585                           ; BSR set to: 1
 32586  00F5BE  A280               	btfss	3968,1,c	;volatile
 32587  00F5C0  A220               	btfss	_enc2,1,c
 32588  00F5C2  D002               	goto	i2l2477
 32589                           
 32590                           ;encoder.c: 114: {;encoder.c: 115: os.button2 = -1;
 32591  00F5C4  0100               	movlb	0	; () banked
 32592  00F5C6  69D9               	setf	(_os+6)& (0+255),b	;volatile
 32593  00F5C8                     i2l2477:
 32594                           
 32595                           ;encoder.c: 116: };encoder.c: 118: enc2 = PORTA & 0b00000111;
 32596                           
 32597                           ; BSR set to: 0
 32598  00F5C8  5080               	movf	3968,w,c	;volatile
 32599  00F5CA  0B07               	andlw	7
 32600  00F5CC  6E20               	movwf	_enc2,c
 32601  00F5CE                     i2l2468:
 32602                           
 32603                           ;encoder.c: 119: };encoder.c: 122: if(os.beep_count)
 32604  00F5CE  0100               	movlb	0	; () banked
 32605  00F5D0  51F9               	movf	(_os+38)& (0+255),w,b	;volatile
 32606  00F5D2  B4D8               	btfsc	status,2,c
 32607  00F5D4  0012               	return	
 32608                           
 32609                           ; BSR set to: 0
 32610                           ;encoder.c: 123: {;encoder.c: 124: --os.beep_count;
 32611  00F5D6  07F9               	decf	(_os+38)& (0+255),f,b	;volatile
 32612                           
 32613                           ; BSR set to: 0
 32614                           ;encoder.c: 125: if(!os.beep_count)
 32615  00F5D8  51F9               	movf	(_os+38)& (0+255),w,b	;volatile
 32616  00F5DA  A4D8               	btfss	status,2,c
 32617  00F5DC  0012               	return	
 32618                           
 32619                           ; BSR set to: 0
 32620                           ;encoder.c: 126: {;encoder.c: 127: LATCbits.LC7 = 0;
 32621  00F5DE  9E8B               	bcf	3979,7,c	;volatile
 32622                           
 32623                           ; BSR set to: 0
 32624  00F5E0  0012               	return	
 32625  00F5E2                     __end_of_encoder_run:
 32626                           	opt stack 0
 32627                           tosu	equ	0xFFF
 32628                           tosh	equ	0xFFE
 32629                           tosl	equ	0xFFD
 32630                           pclatu	equ	0xFFB
 32631                           pclath	equ	0xFFA
 32632                           tblptru	equ	0xFF8
 32633                           tblptrh	equ	0xFF7
 32634                           tblptrl	equ	0xFF6
 32635                           tablat	equ	0xFF5
 32636                           prodh	equ	0xFF4
 32637                           prodl	equ	0xFF3
 32638                           intcon	equ	0xFF2
 32639                           indf0	equ	0xFEF
 32640                           postinc0	equ	0xFEE
 32641                           fsr0h	equ	0xFEA
 32642                           fsr0l	equ	0xFE9
 32643                           wreg	equ	0xFE8
 32644                           indf1	equ	0xFE7
 32645                           postdec1	equ	0xFE5
 32646                           plusw1	equ	0xFE3
 32647                           fsr1h	equ	0xFE2
 32648                           fsr1l	equ	0xFE1
 32649                           indf2	equ	0xFDF
 32650                           postinc2	equ	0xFDE
 32651                           postdec2	equ	0xFDD
 32652                           plusw2	equ	0xFDB
 32653                           fsr2h	equ	0xFDA
 32654                           fsr2l	equ	0xFD9
 32655                           status	equ	0xFD8
 32656                           
 32657 ;; *************** function _motor_isr *****************
 32658 ;; Defined at:
 32659 ;;		line 261 in file "motor.c"
 32660 ;; Parameters:    Size  Location     Type
 32661 ;;		None
 32662 ;; Auto vars:     Size  Location     Type
 32663 ;;  steps_remain    4   20[COMRAM] unsigned long 
 32664 ;;  steps_until_    2   18[COMRAM] unsigned int 
 32665 ;;  steps_until_    2   16[COMRAM] unsigned int 
 32666 ;; Return value:  Size  Location     Type
 32667 ;;                  1    wreg      void 
 32668 ;; Registers used:
 32669 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 32670 ;; Tracked objects:
 32671 ;;		On entry : 0/0
 32672 ;;		On exit  : 0/0
 32673 ;;		Unchanged: 0/0
 32674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32676 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32677 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32678 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32679 ;;Total ram usage:       24 bytes
 32680 ;; Hardware stack levels used:    1
 32681 ;; This function calls:
 32682 ;;		Nothing
 32683 ;; This function is called by:
 32684 ;;		_SYS_InterruptHigh
 32685 ;; This function uses a non-reentrant model
 32686 ;;
 32687                           
 32688                           	psect	text117
 32689  00BC56                     __ptext117:
 32690                           	opt stack 0
 32691  00BC56                     _motor_isr:
 32692                           	opt stack 17
 32693                           
 32694                           ;motor.c: 263: uint32_t steps_remaining;;motor.c: 264: uint16_t steps_until_standstill;;
      +                          motor.c: 265: uint16_t steps_until_standstill_if_accelerate;;motor.c: 268: PIR1bits.TMR2
      +                          IF = 0;
 32695                           
 32696                           ; BSR set to: 0
 32697                           ;incstack = 0
 32698  00BC56  929E               	bcf	3998,1,c	;volatile
 32699                           
 32700                           ;motor.c: 270: if(motor_mode==MOTOR_MODE_MANUAL)
 32701  00BC58  0101               	movlb	1	; () banked
 32702  00BC5A  516A               	movf	_motor_mode& (0+255),w,b
 32703  00BC5C  A4D8               	btfss	status,2,c
 32704  00BC5E  D018               	goto	i2l2376
 32705                           
 32706                           ; BSR set to: 1
 32707                           ;motor.c: 271: {;motor.c: 273: if(LATBbits.LB1)
 32708  00BC60  A28A               	btfss	3978,1,c	;volatile
 32709  00BC62  D015               	goto	i2l2373
 32710                           
 32711                           ; BSR set to: 1
 32712                           ;motor.c: 274: {;motor.c: 276: LATBbits.LB1 = 0;
 32713  00BC64  928A               	bcf	3978,1,c	;volatile
 32714                           
 32715                           ; BSR set to: 1
 32716                           ;motor.c: 279: if(motor_current_stepcount==motor_final_stepcount)
 32717  00BC66  513B               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 32718  00BC68  1816               	xorwf	_motor_current_stepcount,w,c	;volatile
 32719  00BC6A  E109               	bnz	i2u1493_41
 32720  00BC6C  513C               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 32721  00BC6E  1817               	xorwf	_motor_current_stepcount+1,w,c	;volatile
 32722  00BC70  E106               	bnz	i2u1493_41
 32723  00BC72  513D               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 32724  00BC74  1818               	xorwf	_motor_current_stepcount+2,w,c	;volatile
 32725  00BC76  E103               	bnz	i2u1493_41
 32726  00BC78  513E               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 32727  00BC7A  1819               	xorwf	_motor_current_stepcount+3,w,c	;volatile
 32728  00BC7C  A4D8               	btfss	status,2,c
 32729  00BC7E                     i2u1493_41:
 32730  00BC7E  0012               	return	
 32731                           
 32732                           ; BSR set to: 1
 32733                           ;motor.c: 280: {;motor.c: 283: T2CONbits.TMR2ON = 0;
 32734  00BC80  94CA               	bcf	4042,2,c	;volatile
 32735                           
 32736                           ;motor.c: 285: PIR1bits.TMR2IF = 0;
 32737  00BC82  929E               	bcf	3998,1,c	;volatile
 32738                           
 32739                           ;motor.c: 286: PIE1bits.TMR2IE = 0;
 32740  00BC84  929D               	bcf	3997,1,c	;volatile
 32741                           
 32742                           ; BSR set to: 1
 32743                           ;motor.c: 287: os.busy = 0;
 32744  00BC86  0E00               	movlw	0
 32745  00BC88  0100               	movlb	0	; () banked
 32746  00BC8A  6FE1               	movwf	(_os+14)& (0+255),b	;volatile
 32747                           
 32748                           ; BSR set to: 0
 32749                           ;motor.c: 288: };motor.c: 291: return;
 32750                           
 32751                           ; BSR set to: 0
 32752  00BC8C  0012               	return	
 32753  00BC8E                     i2l2373:
 32754                           
 32755                           ; BSR set to: 1
 32756                           ;motor.c: 293: else;motor.c: 294: {;motor.c: 296: LATBbits.LB1 = 1;
 32757  00BC8E  828A               	bsf	3978,1,c	;volatile
 32758  00BC90                     i2l2376:
 32759                           
 32760                           ;motor.c: 297: };motor.c: 298: };motor.c: 300: ++motor_current_stepcount;
 32761                           
 32762                           ; BSR set to: 1
 32763                           
 32764                           ; BSR set to: 1
 32765  00BC90  0E01               	movlw	1
 32766  00BC92  2616               	addwf	_motor_current_stepcount,f,c	;volatile
 32767  00BC94  0E00               	movlw	0
 32768  00BC96  2217               	addwfc	_motor_current_stepcount+1,f,c	;volatile
 32769  00BC98  2218               	addwfc	_motor_current_stepcount+2,f,c	;volatile
 32770  00BC9A  2219               	addwfc	_motor_current_stepcount+3,f,c	;volatile
 32771                           
 32772                           ;motor.c: 303: os.current_position_in_steps += motor_direction;
 32773  00BC9C  0101               	movlb	1	; () banked
 32774  00BC9E  5169               	movf	_motor_direction& (0+255),w,b
 32775  00BCA0  6E2E               	movwf	??_motor_isr& (0+255),c
 32776  00BCA2  0E00               	movlw	0
 32777  00BCA4  BE2E               	btfsc	??_motor_isr& (0+255),7,c
 32778  00BCA6  0EFF               	movlw	255
 32779  00BCA8  6E2F               	movwf	(??_motor_isr+1)& (0+255),c
 32780  00BCAA  6E30               	movwf	(??_motor_isr+2)& (0+255),c
 32781  00BCAC  6E31               	movwf	(??_motor_isr+3)& (0+255),c
 32782  00BCAE  502E               	movf	??_motor_isr,w,c
 32783  00BCB0  0100               	movlb	0	; () banked
 32784  00BCB2  27DA               	addwf	(_os+7)& (0+255),f,b	;volatile
 32785  00BCB4  502F               	movf	??_motor_isr+1,w,c
 32786  00BCB6  23DB               	addwfc	(_os+8)& (0+255),f,b	;volatile
 32787  00BCB8  5030               	movf	??_motor_isr+2,w,c
 32788  00BCBA  23DC               	addwfc	(_os+9)& (0+255),f,b	;volatile
 32789  00BCBC  5031               	movf	??_motor_isr+3,w,c
 32790  00BCBE  23DD               	addwfc	(_os+10)& (0+255),f,b	;volatile
 32791                           
 32792                           ;motor.c: 304: if(os.current_position_in_steps==config.full_circle_in_steps)
 32793  00BCC0  0101               	movlb	1	; () banked
 32794  00BCC2  517B               	movf	_config& (0+255),w,b
 32795  00BCC4  0100               	movlb	0	; () banked
 32796  00BCC6  19DA               	xorwf	(_os+7)& (0+255),w,b	;volatile
 32797  00BCC8  E118               	bnz	i2l15676
 32798  00BCCA  0101               	movlb	1	; () banked
 32799  00BCCC  517C               	movf	(_config+1)& (0+255),w,b
 32800  00BCCE  0100               	movlb	0	; () banked
 32801  00BCD0  19DB               	xorwf	(_os+8)& (0+255),w,b	;volatile
 32802  00BCD2  E113               	bnz	i2l15676
 32803  00BCD4  0101               	movlb	1	; () banked
 32804  00BCD6  517D               	movf	(_config+2)& (0+255),w,b
 32805  00BCD8  0100               	movlb	0	; () banked
 32806  00BCDA  19DC               	xorwf	(_os+9)& (0+255),w,b	;volatile
 32807  00BCDC  E10E               	bnz	i2l15676
 32808  00BCDE  0101               	movlb	1	; () banked
 32809  00BCE0  517E               	movf	(_config+3)& (0+255),w,b
 32810  00BCE2  0100               	movlb	0	; () banked
 32811  00BCE4  19DD               	xorwf	(_os+10)& (0+255),w,b	;volatile
 32812  00BCE6  A4D8               	btfss	status,2,c
 32813  00BCE8  D008               	goto	i2l2377
 32814                           
 32815                           ; BSR set to: 0
 32816                           ;motor.c: 305: os.current_position_in_steps = 0;
 32817  00BCEA  0E00               	movlw	0
 32818  00BCEC  6FDA               	movwf	(_os+7)& (0+255),b	;volatile
 32819  00BCEE  0E00               	movlw	0
 32820  00BCF0  6FDB               	movwf	(_os+8)& (0+255),b	;volatile
 32821  00BCF2  0E00               	movlw	0
 32822  00BCF4  6FDC               	movwf	(_os+9)& (0+255),b	;volatile
 32823  00BCF6  0E00               	movlw	0
 32824  00BCF8  6FDD               	movwf	(_os+10)& (0+255),b	;volatile
 32825  00BCFA                     i2l2377:
 32826  00BCFA                     i2l15676:
 32827                           
 32828                           ; BSR set to: 0
 32829                           ;motor.c: 306: if(os.current_position_in_steps==0xFFFFFFFF)
 32830  00BCFA  29DA               	incf	(_os+7)& (0+255),w,b	;volatile
 32831  00BCFC  E11B               	bnz	i2l2378
 32832  00BCFE  29DB               	incf	(_os+8)& (0+255),w,b	;volatile
 32833  00BD00  E119               	bnz	i2l2378
 32834  00BD02  29DC               	incf	(_os+9)& (0+255),w,b	;volatile
 32835  00BD04  E117               	bnz	i2l2378
 32836  00BD06  29DD               	incf	(_os+10)& (0+255),w,b	;volatile
 32837  00BD08  A4D8               	btfss	status,2,c
 32838  00BD0A  D014               	goto	i2l2378
 32839                           
 32840                           ; BSR set to: 0
 32841                           ;motor.c: 307: os.current_position_in_steps = (config.full_circle_in_steps-1);
 32842  00BD0C  0EFF               	movlw	255
 32843  00BD0E  0101               	movlb	1	; () banked
 32844  00BD10  257B               	addwf	_config& (0+255),w,b
 32845  00BD12  0100               	movlb	0	; () banked
 32846  00BD14  6FDA               	movwf	(_os+7)& (0+255),b	;volatile
 32847  00BD16  0EFF               	movlw	255
 32848  00BD18  0101               	movlb	1	; () banked
 32849  00BD1A  217C               	addwfc	(_config+1)& (0+255),w,b
 32850  00BD1C  0100               	movlb	0	; () banked
 32851  00BD1E  6FDB               	movwf	(_os+8)& (0+255),b	;volatile
 32852  00BD20  0EFF               	movlw	255
 32853  00BD22  0101               	movlb	1	; () banked
 32854  00BD24  217D               	addwfc	(_config+2)& (0+255),w,b
 32855  00BD26  0100               	movlb	0	; () banked
 32856  00BD28  6FDC               	movwf	(_os+9)& (0+255),b	;volatile
 32857  00BD2A  0EFF               	movlw	255
 32858  00BD2C  0101               	movlb	1	; () banked
 32859  00BD2E  217E               	addwfc	(_config+3)& (0+255),w,b
 32860  00BD30  0100               	movlb	0	; () banked
 32861  00BD32  6FDD               	movwf	(_os+10)& (0+255),b	;volatile
 32862  00BD34                     i2l2378:
 32863                           
 32864                           ; BSR set to: 0
 32865                           ;motor.c: 310: if(motor_current_stepcount==motor_next_speed_check)
 32866  00BD34  0101               	movlb	1	; () banked
 32867  00BD36  5137               	movf	_motor_next_speed_check& (0+255),w,b	;volatile
 32868  00BD38  1816               	xorwf	_motor_current_stepcount,w,c	;volatile
 32869  00BD3A  E109               	bnz	i2u1496_41
 32870  00BD3C  5138               	movf	(_motor_next_speed_check+1)& (0+255),w,b	;volatile
 32871  00BD3E  1817               	xorwf	_motor_current_stepcount+1,w,c	;volatile
 32872  00BD40  E106               	bnz	i2u1496_41
 32873  00BD42  5139               	movf	(_motor_next_speed_check+2)& (0+255),w,b	;volatile
 32874  00BD44  1818               	xorwf	_motor_current_stepcount+2,w,c	;volatile
 32875  00BD46  E103               	bnz	i2u1496_41
 32876  00BD48  513A               	movf	(_motor_next_speed_check+3)& (0+255),w,b	;volatile
 32877  00BD4A  1819               	xorwf	_motor_current_stepcount+3,w,c	;volatile
 32878  00BD4C  A4D8               	btfss	status,2,c
 32879  00BD4E                     i2u1496_41:
 32880  00BD4E  D215               	goto	i2l2391
 32881                           
 32882                           ; BSR set to: 1
 32883                           ;motor.c: 311: {;motor.c: 313: steps_remaining = motor_final_stepcount - motor_current_s
      +                          tepcount;
 32884  00BD50  C016  F02E         	movff	_motor_current_stepcount,??_motor_isr	;volatile
 32885  00BD54  C017  F02F         	movff	_motor_current_stepcount+1,??_motor_isr+1	;volatile
 32886  00BD58  C018  F030         	movff	_motor_current_stepcount+2,??_motor_isr+2	;volatile
 32887  00BD5C  C019  F031         	movff	_motor_current_stepcount+3,??_motor_isr+3	;volatile
 32888  00BD60  1E2E               	comf	??_motor_isr,f,c
 32889  00BD62  1E2F               	comf	??_motor_isr+1,f,c
 32890  00BD64  1E30               	comf	??_motor_isr+2,f,c
 32891  00BD66  1E31               	comf	??_motor_isr+3,f,c
 32892  00BD68  2A2E               	incf	??_motor_isr,f,c
 32893  00BD6A  0E00               	movlw	0
 32894  00BD6C  222F               	addwfc	??_motor_isr+1,f,c
 32895  00BD6E  2230               	addwfc	??_motor_isr+2,f,c
 32896  00BD70  2231               	addwfc	??_motor_isr+3,f,c
 32897  00BD72  513B               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 32898  00BD74  242E               	addwf	??_motor_isr,w,c
 32899  00BD76  6E42               	movwf	motor_isr@steps_remaining,c
 32900  00BD78  513C               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 32901  00BD7A  202F               	addwfc	??_motor_isr+1,w,c
 32902  00BD7C  6E43               	movwf	motor_isr@steps_remaining+1,c
 32903  00BD7E  513D               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 32904  00BD80  2030               	addwfc	??_motor_isr+2,w,c
 32905  00BD82  6E44               	movwf	motor_isr@steps_remaining+2,c
 32906  00BD84  513E               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 32907  00BD86  2031               	addwfc	??_motor_isr+3,w,c
 32908  00BD88  6E45               	movwf	motor_isr@steps_remaining+3,c
 32909                           
 32910                           ; BSR set to: 1
 32911                           ;motor.c: 314: steps_until_standstill = motor_steps_lookup[motor_current_speed];
 32912  00BD8A  90D8               	bcf	status,0,c
 32913  00BD8C  0100               	movlb	0	; () banked
 32914  00BD8E  35CC               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 32915  00BD90  6EF6               	movwf	tblptrl,c
 32916  00BD92  35CD               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 32917  00BD94  6EF7               	movwf	tblptrh,c
 32918  00BD96  0E61               	movlw	low _motor_steps_lookup
 32919  00BD98  26F6               	addwf	tblptrl,f,c
 32920  00BD9A  0E94               	movlw	high _motor_steps_lookup
 32921  00BD9C  22F7               	addwfc	tblptrh,f,c
 32922  00BD9E                     	if	1	;There are 3 active tblptr bytes
 32923  00BD9E  6AF8               	clrf	tblptru,c
 32924  00BDA0  0E00               	movlw	low (__mediumconst shr (0+16))
 32925  00BDA2  22F8               	addwfc	tblptru,f,c
 32926  00BDA4                     	endif
 32927  00BDA4  0009               	tblrd		*+
 32928  00BDA6  CFF5 F03E          	movff	tablat,motor_isr@steps_until_standstill
 32929  00BDAA  000A               	tblrd		*-
 32930  00BDAC  CFF5 F03F          	movff	tablat,motor_isr@steps_until_standstill+1
 32931                           
 32932                           ; BSR set to: 0
 32933                           ;motor.c: 315: steps_until_standstill_if_accelerate = motor_steps_lookup[motor_current_s
      +                          peed+2];
 32934  00BDB0  C0CC  F02E         	movff	_motor_current_speed,??_motor_isr	;volatile
 32935  00BDB4  C0CD  F02F         	movff	_motor_current_speed+1,??_motor_isr+1	;volatile
 32936  00BDB8  90D8               	bcf	status,0,c
 32937  00BDBA  362E               	rlcf	??_motor_isr,f,c
 32938  00BDBC  362F               	rlcf	??_motor_isr+1,f,c
 32939  00BDBE  0E04               	movlw	4
 32940  00BDC0  262E               	addwf	??_motor_isr,f,c
 32941  00BDC2  0E00               	movlw	0
 32942  00BDC4  222F               	addwfc	??_motor_isr+1,f,c
 32943  00BDC6  0E61               	movlw	low _motor_steps_lookup
 32944  00BDC8  242E               	addwf	??_motor_isr,w,c
 32945  00BDCA  6EF6               	movwf	tblptrl,c
 32946  00BDCC  0E94               	movlw	high _motor_steps_lookup
 32947  00BDCE  202F               	addwfc	??_motor_isr+1,w,c
 32948  00BDD0  6EF7               	movwf	tblptrh,c
 32949  00BDD2                     	if	1	;There are 3 active tblptr bytes
 32950  00BDD2  6AF8               	clrf	tblptru,c
 32951  00BDD4  0E00               	movlw	low (__mediumconst shr (0+16))
 32952  00BDD6  22F8               	addwfc	tblptru,f,c
 32953  00BDD8                     	endif
 32954  00BDD8  0009               	tblrd		*+
 32955  00BDDA  CFF5 F040          	movff	tablat,motor_isr@steps_until_standstill_if_accelerate
 32956  00BDDE  000A               	tblrd		*-
 32957  00BDE0  CFF5 F041          	movff	tablat,motor_isr@steps_until_standstill_if_accelerate+1
 32958                           
 32959                           ;motor.c: 317: if((motor_current_speed>motor_maximum_speed) || (steps_until_standstill>=
      +                          steps_remaining))
 32960  00BDE4  51CC               	movf	_motor_current_speed& (0+255),w,b	;volatile
 32961  00BDE6  0101               	movlb	1	; () banked
 32962  00BDE8  5D5B               	subwf	_motor_maximum_speed& (0+255),w,b
 32963  00BDEA  0100               	movlb	0	; () banked
 32964  00BDEC  51CD               	movf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 32965  00BDEE  0101               	movlb	1	; () banked
 32966  00BDF0  595C               	subwfb	(_motor_maximum_speed+1)& (0+255),w,b
 32967  00BDF2  A0D8               	btfss	status,0,c
 32968  00BDF4  D010               	goto	i2u1498_40
 32969                           
 32970                           ; BSR set to: 1
 32971  00BDF6  503E               	movf	motor_isr@steps_until_standstill,w,c
 32972  00BDF8  6E2E               	movwf	??_motor_isr& (0+255),c
 32973  00BDFA  503F               	movf	motor_isr@steps_until_standstill+1,w,c
 32974  00BDFC  6E2F               	movwf	(??_motor_isr+1)& (0+255),c
 32975  00BDFE  6A30               	clrf	(??_motor_isr+2)& (0+255),c
 32976  00BE00  6A31               	clrf	(??_motor_isr+3)& (0+255),c
 32977  00BE02  5042               	movf	motor_isr@steps_remaining,w,c
 32978  00BE04  5C2E               	subwf	??_motor_isr,w,c
 32979  00BE06  5043               	movf	motor_isr@steps_remaining+1,w,c
 32980  00BE08  582F               	subwfb	??_motor_isr+1,w,c
 32981  00BE0A  5044               	movf	motor_isr@steps_remaining+2,w,c
 32982  00BE0C  5830               	subwfb	??_motor_isr+2,w,c
 32983  00BE0E  5045               	movf	motor_isr@steps_remaining+3,w,c
 32984  00BE10  5831               	subwfb	??_motor_isr+3,w,c
 32985  00BE12  A0D8               	btfss	status,0,c
 32986  00BE14  D0E3               	goto	i2l2380
 32987  00BE16                     i2u1498_40:
 32988                           
 32989                           ; BSR set to: 1
 32990                           ;motor.c: 318: {;motor.c: 320: if(motor_current_speed>0)
 32991                           
 32992                           ; BSR set to: 1
 32993  00BE16  0100               	movlb	0	; () banked
 32994  00BE18  51CC               	movf	_motor_current_speed& (0+255),w,b	;volatile
 32995  00BE1A  11CD               	iorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 32996  00BE1C  B4D8               	btfsc	status,2,c
 32997  00BE1E  D003               	goto	i2l2383
 32998                           
 32999                           ; BSR set to: 0
 33000                           ;motor.c: 321: {;motor.c: 322: --motor_current_speed;
 33001  00BE20  07CC               	decf	_motor_current_speed& (0+255),f,b	;volatile
 33002  00BE22  A0D8               	btfss	status,0,c
 33003  00BE24  07CD               	decf	(_motor_current_speed+1)& (0+255),f,b	;volatile
 33004  00BE26                     i2l2383:
 33005                           
 33006                           ; BSR set to: 0
 33007                           ;motor.c: 323: };motor.c: 326: if((motor_mode==MOTOR_MODE_PWM) && (motor_postscaler_look
      +                          up[motor_current_speed]>0))
 33008                           
 33009                           ; BSR set to: 0
 33010  00BE26  0101               	movlb	1	; () banked
 33011  00BE28  056A               	decf	_motor_mode& (0+255),w,b
 33012  00BE2A  A4D8               	btfss	status,2,c
 33013  00BE2C  D026               	goto	i2l2384
 33014                           
 33015                           ; BSR set to: 1
 33016  00BE2E  0E2F               	movlw	low _motor_postscaler_lookup
 33017  00BE30  0100               	movlb	0	; () banked
 33018  00BE32  25CC               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 33019  00BE34  6EF6               	movwf	tblptrl,c
 33020  00BE36  0E98               	movlw	high _motor_postscaler_lookup
 33021  00BE38  21CD               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 33022  00BE3A  6EF7               	movwf	tblptrh,c
 33023  00BE3C                     	if	1	;There are 3 active tblptr bytes
 33024  00BE3C  6AF8               	clrf	tblptru,c
 33025  00BE3E  0E00               	movlw	low (__mediumconst shr (0+16))
 33026  00BE40  22F8               	addwfc	tblptru,f,c
 33027  00BE42                     	endif
 33028  00BE42  0008               	tblrd		*
 33029  00BE44  50F5               	movf	tablat,w,c
 33030  00BE46  0900               	iorlw	0
 33031  00BE48  B4D8               	btfsc	status,2,c
 33032  00BE4A  D017               	goto	i2l2384
 33033                           
 33034                           ; BSR set to: 0
 33035                           ;motor.c: 327: {;motor.c: 329: motor_mode = MOTOR_MODE_MANUAL;
 33036  00BE4C  0E00               	movlw	0
 33037  00BE4E  0101               	movlb	1	; () banked
 33038  00BE50  6F6A               	movwf	_motor_mode& (0+255),b
 33039                           
 33040                           ; BSR set to: 1
 33041                           ;motor.c: 332: LATBbits.LB1 = 1;
 33042  00BE52  828A               	bsf	3978,1,c	;volatile
 33043                           
 33044                           ;motor.c: 333: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 33045  00BE54  0E55               	movlw	85
 33046  00BE56  6EA7               	movwf	4007,c	;volsfr
 33047  00BE58  0EAA               	movlw	170
 33048  00BE5A  6EA7               	movwf	4007,c	;volsfr
 33049                           
 33050                           ; BSR set to: 1
 33051  00BE5C  010E               	movlb	14	; () banked
 33052  00BE5E  91BF               	bcf	191,0,b	;volatile
 33053                           
 33054                           ;motor.c: 334: RPOR4 = 0;
 33055  00BE60  0E00               	movlw	0
 33056  00BE62  6FC4               	movwf	196,b	;volatile
 33057                           
 33058                           ;motor.c: 335: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 33059  00BE64  0E55               	movlw	85
 33060  00BE66  6EA7               	movwf	4007,c	;volsfr
 33061  00BE68  0EAA               	movlw	170
 33062  00BE6A  6EA7               	movwf	4007,c	;volsfr
 33063                           
 33064                           ; BSR set to: 14
 33065  00BE6C  81BF               	bsf	191,0,b	;volatile
 33066                           
 33067                           ;motor.c: 338: TMR2 = 0;
 33068  00BE6E  0E00               	movlw	0
 33069  00BE70  6ECC               	movwf	4044,c	;volatile
 33070                           
 33071                           ; BSR set to: 14
 33072                           ;motor.c: 341: CCP1CONbits.CCP1M = 0b0000;
 33073  00BE72  90BA               	bcf	4026,0,c	;volatile
 33074  00BE74  92BA               	bcf	4026,1,c	;volatile
 33075  00BE76  94BA               	bcf	4026,2,c	;volatile
 33076  00BE78  96BA               	bcf	4026,3,c	;volatile
 33077  00BE7A                     i2l2384:
 33078                           
 33079                           ;motor.c: 342: };motor.c: 346: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_s
      +                          peed];
 33080                           
 33081                           ; BSR set to: 14
 33082  00BE7A  0EFD               	movlw	low _motor_prescaler_lookup
 33083  00BE7C  0100               	movlb	0	; () banked
 33084  00BE7E  25CC               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 33085  00BE80  6EF6               	movwf	tblptrl,c
 33086  00BE82  0E9B               	movlw	high _motor_prescaler_lookup
 33087  00BE84  21CD               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 33088  00BE86  6EF7               	movwf	tblptrh,c
 33089  00BE88                     	if	1	;There are 3 active tblptr bytes
 33090  00BE88  6AF8               	clrf	tblptru,c
 33091  00BE8A  0E00               	movlw	low (__mediumconst shr (0+16))
 33092  00BE8C  22F8               	addwfc	tblptru,f,c
 33093  00BE8E                     	endif
 33094  00BE8E  0008               	tblrd		*
 33095  00BE90  CFF5 F02E          	movff	tablat,??_motor_isr
 33096  00BE94  50CA               	movf	4042,w,c	;volatile
 33097  00BE96  182E               	xorwf	??_motor_isr,w,c
 33098  00BE98  0BFC               	andlw	-4
 33099  00BE9A  182E               	xorwf	??_motor_isr,w,c
 33100  00BE9C  6ECA               	movwf	4042,c	;volatile
 33101                           
 33102                           ; BSR set to: 0
 33103                           ;motor.c: 348: PR2 = motor_period_lookup[motor_current_speed];
 33104  00BE9E  0E16               	movlw	low _motor_period_lookup
 33105  00BEA0  25CC               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 33106  00BEA2  6EF6               	movwf	tblptrl,c
 33107  00BEA4  0E9A               	movlw	high _motor_period_lookup
 33108  00BEA6  21CD               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 33109  00BEA8  6EF7               	movwf	tblptrh,c
 33110  00BEAA                     	if	1	;There are 3 active tblptr bytes
 33111  00BEAA  6AF8               	clrf	tblptru,c
 33112  00BEAC  0E00               	movlw	low (__mediumconst shr (0+16))
 33113  00BEAE  22F8               	addwfc	tblptru,f,c
 33114  00BEB0                     	endif
 33115  00BEB0  0008               	tblrd		*
 33116  00BEB2  CFF5 FFCB          	movff	tablat,4043	;volatile
 33117                           
 33118                           ; BSR set to: 0
 33119                           ;motor.c: 350: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 33120  00BEB6  0E2F               	movlw	low _motor_postscaler_lookup
 33121  00BEB8  25CC               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 33122  00BEBA  6EF6               	movwf	tblptrl,c
 33123  00BEBC  0E98               	movlw	high _motor_postscaler_lookup
 33124  00BEBE  21CD               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 33125  00BEC0  6EF7               	movwf	tblptrh,c
 33126  00BEC2                     	if	1	;There are 3 active tblptr bytes
 33127  00BEC2  6AF8               	clrf	tblptru,c
 33128  00BEC4  0E00               	movlw	low (__mediumconst shr (0+16))
 33129  00BEC6  22F8               	addwfc	tblptru,f,c
 33130  00BEC8                     	endif
 33131  00BEC8  0008               	tblrd		*
 33132  00BECA  CFF5 F02E          	movff	tablat,??_motor_isr
 33133  00BECE  462E               	rlncf	??_motor_isr,f,c
 33134  00BED0  462E               	rlncf	??_motor_isr,f,c
 33135  00BED2  462E               	rlncf	??_motor_isr,f,c
 33136  00BED4  50CA               	movf	4042,w,c	;volatile
 33137  00BED6  182E               	xorwf	??_motor_isr,w,c
 33138  00BED8  0B87               	andlw	-121
 33139  00BEDA  182E               	xorwf	??_motor_isr,w,c
 33140  00BEDC  6ECA               	movwf	4042,c	;volatile
 33141                           
 33142                           ; BSR set to: 0
 33143                           ;motor.c: 352: CCPR1L = PR2>>1;
 33144  00BEDE  90D8               	bcf	status,0,c
 33145  00BEE0  30CB               	rrcf	4043,w,c	;volatile
 33146  00BEE2  6EBB               	movwf	4027,c	;volatile
 33147                           
 33148                           ; BSR set to: 0
 33149                           ;motor.c: 355: if(motor_current_speed>0)
 33150  00BEE4  51CC               	movf	_motor_current_speed& (0+255),w,b	;volatile
 33151  00BEE6  11CD               	iorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 33152  00BEE8  B4D8               	btfsc	status,2,c
 33153  00BEEA  D058               	goto	i2l2385
 33154                           
 33155                           ; BSR set to: 0
 33156                           ;motor.c: 356: {;motor.c: 357: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed] - motor_steps_lookup[motor_current_speed-1];
 33157  00BEEC  0EFE               	movlw	254
 33158  00BEEE  6E2E               	movwf	??_motor_isr& (0+255),c
 33159  00BEF0  0EFF               	movlw	255
 33160  00BEF2  6E2F               	movwf	(??_motor_isr+1)& (0+255),c
 33161  00BEF4  C0CC  F030         	movff	_motor_current_speed,??_motor_isr+2	;volatile
 33162  00BEF8  C0CD  F031         	movff	_motor_current_speed+1,??_motor_isr+3	;volatile
 33163  00BEFC  90D8               	bcf	status,0,c
 33164  00BEFE  3630               	rlcf	??_motor_isr+2,f,c
 33165  00BF00  3631               	rlcf	??_motor_isr+3,f,c
 33166  00BF02  502E               	movf	??_motor_isr,w,c
 33167  00BF04  2630               	addwf	??_motor_isr+2,f,c
 33168  00BF06  502F               	movf	??_motor_isr+1,w,c
 33169  00BF08  2231               	addwfc	??_motor_isr+3,f,c
 33170  00BF0A  0E61               	movlw	low _motor_steps_lookup
 33171  00BF0C  2430               	addwf	??_motor_isr+2,w,c
 33172  00BF0E  6EF6               	movwf	tblptrl,c
 33173  00BF10  0E94               	movlw	high _motor_steps_lookup
 33174  00BF12  2031               	addwfc	??_motor_isr+3,w,c
 33175  00BF14  6EF7               	movwf	tblptrh,c
 33176  00BF16                     	if	1	;There are 3 active tblptr bytes
 33177  00BF16  6AF8               	clrf	tblptru,c
 33178  00BF18  0E00               	movlw	low (__mediumconst shr (0+16))
 33179  00BF1A  22F8               	addwfc	tblptru,f,c
 33180  00BF1C                     	endif
 33181  00BF1C  0009               	tblrd		*+
 33182  00BF1E  CFF5 F032          	movff	tablat,??_motor_isr+4
 33183  00BF22  0009               	tblrd		*+
 33184  00BF24  CFF5 F033          	movff	tablat,??_motor_isr+5
 33185  00BF28  5032               	movf	??_motor_isr+4,w,c
 33186  00BF2A  6E34               	movwf	(??_motor_isr+6)& (0+255),c
 33187  00BF2C  5033               	movf	??_motor_isr+5,w,c
 33188  00BF2E  6E35               	movwf	(??_motor_isr+7)& (0+255),c
 33189  00BF30  6A36               	clrf	(??_motor_isr+8)& (0+255),c
 33190  00BF32  6A37               	clrf	(??_motor_isr+9)& (0+255),c
 33191  00BF34  1E34               	comf	??_motor_isr+6,f,c
 33192  00BF36  1E35               	comf	??_motor_isr+7,f,c
 33193  00BF38  1E36               	comf	??_motor_isr+8,f,c
 33194  00BF3A  1E37               	comf	??_motor_isr+9,f,c
 33195  00BF3C  2A34               	incf	??_motor_isr+6,f,c
 33196  00BF3E  0E00               	movlw	0
 33197  00BF40  2235               	addwfc	??_motor_isr+7,f,c
 33198  00BF42  2236               	addwfc	??_motor_isr+8,f,c
 33199  00BF44  2237               	addwfc	??_motor_isr+9,f,c
 33200  00BF46  90D8               	bcf	status,0,c
 33201  00BF48  35CC               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 33202  00BF4A  6EF6               	movwf	tblptrl,c
 33203  00BF4C  35CD               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 33204  00BF4E  6EF7               	movwf	tblptrh,c
 33205  00BF50  0E61               	movlw	low _motor_steps_lookup
 33206  00BF52  26F6               	addwf	tblptrl,f,c
 33207  00BF54  0E94               	movlw	high _motor_steps_lookup
 33208  00BF56  22F7               	addwfc	tblptrh,f,c
 33209  00BF58                     	if	1	;There are 3 active tblptr bytes
 33210  00BF58  6AF8               	clrf	tblptru,c
 33211  00BF5A  0E00               	movlw	low (__mediumconst shr (0+16))
 33212  00BF5C  22F8               	addwfc	tblptru,f,c
 33213  00BF5E                     	endif
 33214  00BF5E  0009               	tblrd		*+
 33215  00BF60  CFF5 F038          	movff	tablat,??_motor_isr+10
 33216  00BF64  0009               	tblrd		*+
 33217  00BF66  CFF5 F039          	movff	tablat,??_motor_isr+11
 33218  00BF6A  5038               	movf	??_motor_isr+10,w,c
 33219  00BF6C  2434               	addwf	??_motor_isr+6,w,c
 33220  00BF6E  6E3A               	movwf	(??_motor_isr+12)& (0+255),c
 33221  00BF70  5039               	movf	??_motor_isr+11,w,c
 33222  00BF72  2035               	addwfc	??_motor_isr+7,w,c
 33223  00BF74  6E3B               	movwf	(??_motor_isr+13)& (0+255),c
 33224  00BF76  0E00               	movlw	0
 33225  00BF78  2036               	addwfc	??_motor_isr+8,w,c
 33226  00BF7A  6E3C               	movwf	(??_motor_isr+14)& (0+255),c
 33227  00BF7C  0E00               	movlw	0
 33228  00BF7E  2037               	addwfc	??_motor_isr+9,w,c
 33229  00BF80  6E3D               	movwf	(??_motor_isr+15)& (0+255),c
 33230  00BF82  5016               	movf	_motor_current_stepcount,w,c	;volatile
 33231  00BF84  243A               	addwf	??_motor_isr+12,w,c
 33232  00BF86  0101               	movlb	1	; () banked
 33233  00BF88  6F37               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 33234  00BF8A  5017               	movf	_motor_current_stepcount+1,w,c	;volatile
 33235  00BF8C  203B               	addwfc	??_motor_isr+13,w,c
 33236  00BF8E  6F38               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 33237  00BF90  5018               	movf	_motor_current_stepcount+2,w,c	;volatile
 33238  00BF92  203C               	addwfc	??_motor_isr+14,w,c
 33239  00BF94  6F39               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 33240  00BF96  5019               	movf	_motor_current_stepcount+3,w,c	;volatile
 33241  00BF98  203D               	addwfc	??_motor_isr+15,w,c
 33242  00BF9A  D0EE               	goto	L62
 33243  00BF9C                     i2l2385:
 33244                           
 33245                           ;motor.c: 359: else;motor.c: 360: {;motor.c: 361: motor_next_speed_check = motor_current
      +                          _stepcount + motor_steps_lookup[motor_current_speed];
 33246                           
 33247                           ; BSR set to: 1
 33248  00BF9C  90D8               	bcf	status,0,c
 33249  00BF9E  0100               	movlb	0	; () banked
 33250  00BFA0  35CC               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 33251  00BFA2  6EF6               	movwf	tblptrl,c
 33252  00BFA4  35CD               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 33253  00BFA6  6EF7               	movwf	tblptrh,c
 33254  00BFA8  0E61               	movlw	low _motor_steps_lookup
 33255  00BFAA  26F6               	addwf	tblptrl,f,c
 33256  00BFAC  0E94               	movlw	high _motor_steps_lookup
 33257  00BFAE  22F7               	addwfc	tblptrh,f,c
 33258  00BFB0                     	if	1	;There are 3 active tblptr bytes
 33259  00BFB0  6AF8               	clrf	tblptru,c
 33260  00BFB2  0E00               	movlw	low (__mediumconst shr (0+16))
 33261  00BFB4  22F8               	addwfc	tblptru,f,c
 33262  00BFB6                     	endif
 33263  00BFB6  0009               	tblrd		*+
 33264  00BFB8  CFF5 F02E          	movff	tablat,??_motor_isr
 33265  00BFBC  0009               	tblrd		*+
 33266  00BFBE  CFF5 F02F          	movff	tablat,??_motor_isr+1
 33267  00BFC2  502E               	movf	??_motor_isr,w,c
 33268  00BFC4  2416               	addwf	_motor_current_stepcount,w,c	;volatile
 33269  00BFC6  0101               	movlb	1	; () banked
 33270  00BFC8  6F37               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 33271  00BFCA  502F               	movf	??_motor_isr+1,w,c
 33272  00BFCC  2017               	addwfc	_motor_current_stepcount+1,w,c	;volatile
 33273  00BFCE  6F38               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 33274  00BFD0  0E00               	movlw	0
 33275  00BFD2  2018               	addwfc	_motor_current_stepcount+2,w,c	;volatile
 33276  00BFD4  6F39               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 33277  00BFD6  0E00               	movlw	0
 33278  00BFD8  2019               	addwfc	_motor_current_stepcount+3,w,c	;volatile
 33279  00BFDA  D0CE               	goto	L62
 33280  00BFDC                     i2l2380:
 33281                           
 33282                           ; BSR set to: 1
 33283                           ;motor.c: 364: else if((motor_current_speed==motor_maximum_speed) || (steps_until_stands
      +                          till_if_accelerate>=steps_remaining))
 33284                           
 33285                           ; BSR set to: 1
 33286  00BFDC  515B               	movf	_motor_maximum_speed& (0+255),w,b
 33287  00BFDE  0100               	movlb	0	; () banked
 33288  00BFE0  19CC               	xorwf	_motor_current_speed& (0+255),w,b	;volatile
 33289  00BFE2  E106               	bnz	i2u1503_40
 33290  00BFE4  0101               	movlb	1	; () banked
 33291  00BFE6  515C               	movf	(_motor_maximum_speed+1)& (0+255),w,b
 33292  00BFE8  0100               	movlb	0	; () banked
 33293  00BFEA  19CD               	xorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 33294  00BFEC  B4D8               	btfsc	status,2,c
 33295  00BFEE  D010               	goto	i2u1504_40
 33296  00BFF0                     i2u1503_40:
 33297                           
 33298                           ; BSR set to: 0
 33299  00BFF0  5040               	movf	motor_isr@steps_until_standstill_if_accelerate,w,c
 33300  00BFF2  6E2E               	movwf	??_motor_isr& (0+255),c
 33301  00BFF4  5041               	movf	motor_isr@steps_until_standstill_if_accelerate+1,w,c
 33302  00BFF6  6E2F               	movwf	(??_motor_isr+1)& (0+255),c
 33303  00BFF8  6A30               	clrf	(??_motor_isr+2)& (0+255),c
 33304  00BFFA  6A31               	clrf	(??_motor_isr+3)& (0+255),c
 33305  00BFFC  5042               	movf	motor_isr@steps_remaining,w,c
 33306  00BFFE  5C2E               	subwf	??_motor_isr,w,c
 33307  00C000  5043               	movf	motor_isr@steps_remaining+1,w,c
 33308  00C002  582F               	subwfb	??_motor_isr+1,w,c
 33309  00C004  5044               	movf	motor_isr@steps_remaining+2,w,c
 33310  00C006  5830               	subwfb	??_motor_isr+2,w,c
 33311  00C008  5045               	movf	motor_isr@steps_remaining+3,w,c
 33312  00C00A  5831               	subwfb	??_motor_isr+3,w,c
 33313  00C00C  A0D8               	btfss	status,0,c
 33314  00C00E  D002               	goto	i2l2388
 33315  00C010                     i2u1504_40:
 33316                           
 33317                           ; BSR set to: 0
 33318                           ;motor.c: 365: {;motor.c: 368: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed+1] - motor_steps_lookup[motor_current_speed];
 33319                           
 33320                           ; BSR set to: 0
 33321  00C010  90D8               	bcf	status,0,c
 33322  00C012  D060               	goto	L61
 33323  00C014                     i2l2388:
 33324                           
 33325                           ;motor.c: 370: else;motor.c: 371: {;motor.c: 373: ++motor_current_speed;
 33326                           
 33327                           ; BSR set to: 1
 33328  00C014  0100               	movlb	0	; () banked
 33329  00C016  4BCC               	infsnz	_motor_current_speed& (0+255),f,b	;volatile
 33330  00C018  2BCD               	incf	(_motor_current_speed+1)& (0+255),f,b	;volatile
 33331                           
 33332                           ; BSR set to: 0
 33333                           ;motor.c: 377: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_speed];
 33334  00C01A  0EFD               	movlw	low _motor_prescaler_lookup
 33335  00C01C  25CC               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 33336  00C01E  6EF6               	movwf	tblptrl,c
 33337  00C020  0E9B               	movlw	high _motor_prescaler_lookup
 33338  00C022  21CD               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 33339  00C024  6EF7               	movwf	tblptrh,c
 33340  00C026                     	if	1	;There are 3 active tblptr bytes
 33341  00C026  6AF8               	clrf	tblptru,c
 33342  00C028  0E00               	movlw	low (__mediumconst shr (0+16))
 33343  00C02A  22F8               	addwfc	tblptru,f,c
 33344  00C02C                     	endif
 33345  00C02C  0008               	tblrd		*
 33346  00C02E  CFF5 F02E          	movff	tablat,??_motor_isr
 33347  00C032  50CA               	movf	4042,w,c	;volatile
 33348  00C034  182E               	xorwf	??_motor_isr,w,c
 33349  00C036  0BFC               	andlw	-4
 33350  00C038  182E               	xorwf	??_motor_isr,w,c
 33351  00C03A  6ECA               	movwf	4042,c	;volatile
 33352                           
 33353                           ; BSR set to: 0
 33354                           ;motor.c: 379: PR2 = motor_period_lookup[motor_current_speed];
 33355  00C03C  0E16               	movlw	low _motor_period_lookup
 33356  00C03E  25CC               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 33357  00C040  6EF6               	movwf	tblptrl,c
 33358  00C042  0E9A               	movlw	high _motor_period_lookup
 33359  00C044  21CD               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 33360  00C046  6EF7               	movwf	tblptrh,c
 33361  00C048                     	if	1	;There are 3 active tblptr bytes
 33362  00C048  6AF8               	clrf	tblptru,c
 33363  00C04A  0E00               	movlw	low (__mediumconst shr (0+16))
 33364  00C04C  22F8               	addwfc	tblptru,f,c
 33365  00C04E                     	endif
 33366  00C04E  0008               	tblrd		*
 33367  00C050  CFF5 FFCB          	movff	tablat,4043	;volatile
 33368                           
 33369                           ; BSR set to: 0
 33370                           ;motor.c: 381: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 33371  00C054  0E2F               	movlw	low _motor_postscaler_lookup
 33372  00C056  25CC               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 33373  00C058  6EF6               	movwf	tblptrl,c
 33374  00C05A  0E98               	movlw	high _motor_postscaler_lookup
 33375  00C05C  21CD               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 33376  00C05E  6EF7               	movwf	tblptrh,c
 33377  00C060                     	if	1	;There are 3 active tblptr bytes
 33378  00C060  6AF8               	clrf	tblptru,c
 33379  00C062  0E00               	movlw	low (__mediumconst shr (0+16))
 33380  00C064  22F8               	addwfc	tblptru,f,c
 33381  00C066                     	endif
 33382  00C066  0008               	tblrd		*
 33383  00C068  CFF5 F02E          	movff	tablat,??_motor_isr
 33384  00C06C  462E               	rlncf	??_motor_isr,f,c
 33385  00C06E  462E               	rlncf	??_motor_isr,f,c
 33386  00C070  462E               	rlncf	??_motor_isr,f,c
 33387  00C072  50CA               	movf	4042,w,c	;volatile
 33388  00C074  182E               	xorwf	??_motor_isr,w,c
 33389  00C076  0B87               	andlw	-121
 33390  00C078  182E               	xorwf	??_motor_isr,w,c
 33391  00C07A  6ECA               	movwf	4042,c	;volatile
 33392                           
 33393                           ; BSR set to: 0
 33394                           ;motor.c: 383: CCPR1L = PR2>>1;
 33395  00C07C  90D8               	bcf	status,0,c
 33396  00C07E  30CB               	rrcf	4043,w,c	;volatile
 33397  00C080  6EBB               	movwf	4027,c	;volatile
 33398                           
 33399                           ; BSR set to: 0
 33400                           ;motor.c: 385: if((motor_mode==MOTOR_MODE_MANUAL) && (motor_postscaler_lookup[motor_curr
      +                          ent_speed]==0))
 33401  00C082  0101               	movlb	1	; () banked
 33402  00C084  516A               	movf	_motor_mode& (0+255),w,b
 33403  00C086  A4D8               	btfss	status,2,c
 33404  00C088  D023               	goto	i2l2392
 33405                           
 33406                           ; BSR set to: 1
 33407  00C08A  0E2F               	movlw	low _motor_postscaler_lookup
 33408  00C08C  0100               	movlb	0	; () banked
 33409  00C08E  25CC               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 33410  00C090  6EF6               	movwf	tblptrl,c
 33411  00C092  0E98               	movlw	high _motor_postscaler_lookup
 33412  00C094  21CD               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 33413  00C096  6EF7               	movwf	tblptrh,c
 33414  00C098                     	if	1	;There are 3 active tblptr bytes
 33415  00C098  6AF8               	clrf	tblptru,c
 33416  00C09A  0E00               	movlw	low (__mediumconst shr (0+16))
 33417  00C09C  22F8               	addwfc	tblptru,f,c
 33418  00C09E                     	endif
 33419  00C09E  0008               	tblrd		*
 33420  00C0A0  50F5               	movf	tablat,w,c
 33421  00C0A2  0900               	iorlw	0
 33422  00C0A4  A4D8               	btfss	status,2,c
 33423  00C0A6  D014               	goto	i2l2392
 33424                           
 33425                           ; BSR set to: 0
 33426                           ;motor.c: 386: {;motor.c: 388: motor_mode = MOTOR_MODE_PWM;
 33427  00C0A8  0E01               	movlw	1
 33428  00C0AA  0101               	movlb	1	; () banked
 33429  00C0AC  6F6A               	movwf	_motor_mode& (0+255),b
 33430                           
 33431                           ;motor.c: 391: CCP1CONbits.CCP1M = 0b1100;
 33432  00C0AE  50BA               	movf	4026,w,c	;volatile
 33433  00C0B0  0BF0               	andlw	-16
 33434  00C0B2  090C               	iorlw	12
 33435  00C0B4  6EBA               	movwf	4026,c	;volatile
 33436                           
 33437                           ;motor.c: 394: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 33438  00C0B6  0E55               	movlw	85
 33439  00C0B8  6EA7               	movwf	4007,c	;volsfr
 33440  00C0BA  0EAA               	movlw	170
 33441  00C0BC  6EA7               	movwf	4007,c	;volsfr
 33442                           
 33443                           ; BSR set to: 1
 33444  00C0BE  010E               	movlb	14	; () banked
 33445  00C0C0  91BF               	bcf	191,0,b	;volatile
 33446                           
 33447                           ;motor.c: 395: RPOR4 = 14;
 33448  00C0C2  0E0E               	movlw	14
 33449  00C0C4  6FC4               	movwf	196,b	;volatile
 33450                           
 33451                           ;motor.c: 396: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 33452  00C0C6  0E55               	movlw	85
 33453  00C0C8  6EA7               	movwf	4007,c	;volsfr
 33454  00C0CA  0EAA               	movlw	170
 33455  00C0CC  6EA7               	movwf	4007,c	;volsfr
 33456                           
 33457                           ; BSR set to: 14
 33458  00C0CE  81BF               	bsf	191,0,b	;volatile
 33459  00C0D0                     i2l2392:
 33460                           
 33461                           ;motor.c: 397: };motor.c: 400: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed+1] - motor_steps_lookup[motor_current_speed];
 33462                           
 33463                           ; BSR set to: 14
 33464  00C0D0  90D8               	bcf	status,0,c
 33465  00C0D2  0100               	movlb	0	; () banked
 33466  00C0D4                     L61:
 33467  00C0D4  35CC               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 33468  00C0D6  6EF6               	movwf	tblptrl,c
 33469  00C0D8  35CD               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 33470  00C0DA  6EF7               	movwf	tblptrh,c
 33471  00C0DC  0E61               	movlw	low _motor_steps_lookup
 33472  00C0DE  26F6               	addwf	tblptrl,f,c
 33473  00C0E0  0E94               	movlw	high _motor_steps_lookup
 33474  00C0E2  22F7               	addwfc	tblptrh,f,c
 33475  00C0E4                     	if	1	;There are 3 active tblptr bytes
 33476  00C0E4  6AF8               	clrf	tblptru,c
 33477  00C0E6  0E00               	movlw	low (__mediumconst shr (0+16))
 33478  00C0E8  22F8               	addwfc	tblptru,f,c
 33479  00C0EA                     	endif
 33480  00C0EA  0009               	tblrd		*+
 33481  00C0EC  CFF5 F02E          	movff	tablat,??_motor_isr
 33482  00C0F0  0009               	tblrd		*+
 33483  00C0F2  CFF5 F02F          	movff	tablat,??_motor_isr+1
 33484  00C0F6  502E               	movf	??_motor_isr,w,c
 33485  00C0F8  6E30               	movwf	(??_motor_isr+2)& (0+255),c
 33486  00C0FA  502F               	movf	??_motor_isr+1,w,c
 33487  00C0FC  6E31               	movwf	(??_motor_isr+3)& (0+255),c
 33488  00C0FE  6A32               	clrf	(??_motor_isr+4)& (0+255),c
 33489  00C100  6A33               	clrf	(??_motor_isr+5)& (0+255),c
 33490  00C102  1E30               	comf	??_motor_isr+2,f,c
 33491  00C104  1E31               	comf	??_motor_isr+3,f,c
 33492  00C106  1E32               	comf	??_motor_isr+4,f,c
 33493  00C108  1E33               	comf	??_motor_isr+5,f,c
 33494  00C10A  2A30               	incf	??_motor_isr+2,f,c
 33495  00C10C  0E00               	movlw	0
 33496  00C10E  2231               	addwfc	??_motor_isr+3,f,c
 33497  00C110  2232               	addwfc	??_motor_isr+4,f,c
 33498  00C112  2233               	addwfc	??_motor_isr+5,f,c
 33499  00C114  C0CC  F034         	movff	_motor_current_speed,??_motor_isr+6	;volatile
 33500  00C118  C0CD  F035         	movff	_motor_current_speed+1,??_motor_isr+7	;volatile
 33501  00C11C  90D8               	bcf	status,0,c
 33502  00C11E  3634               	rlcf	??_motor_isr+6,f,c
 33503  00C120  3635               	rlcf	??_motor_isr+7,f,c
 33504  00C122  0E02               	movlw	2
 33505  00C124  2634               	addwf	??_motor_isr+6,f,c
 33506  00C126  0E00               	movlw	0
 33507  00C128  2235               	addwfc	??_motor_isr+7,f,c
 33508  00C12A  0E61               	movlw	low _motor_steps_lookup
 33509  00C12C  2434               	addwf	??_motor_isr+6,w,c
 33510  00C12E  6EF6               	movwf	tblptrl,c
 33511  00C130  0E94               	movlw	high _motor_steps_lookup
 33512  00C132  2035               	addwfc	??_motor_isr+7,w,c
 33513  00C134  6EF7               	movwf	tblptrh,c
 33514  00C136                     	if	1	;There are 3 active tblptr bytes
 33515  00C136  6AF8               	clrf	tblptru,c
 33516  00C138  0E00               	movlw	low (__mediumconst shr (0+16))
 33517  00C13A  22F8               	addwfc	tblptru,f,c
 33518  00C13C                     	endif
 33519  00C13C  0009               	tblrd		*+
 33520  00C13E  CFF5 F036          	movff	tablat,??_motor_isr+8
 33521  00C142  0009               	tblrd		*+
 33522  00C144  CFF5 F037          	movff	tablat,??_motor_isr+9
 33523  00C148  5036               	movf	??_motor_isr+8,w,c
 33524  00C14A  2430               	addwf	??_motor_isr+2,w,c
 33525  00C14C  6E38               	movwf	(??_motor_isr+10)& (0+255),c
 33526  00C14E  5037               	movf	??_motor_isr+9,w,c
 33527  00C150  2031               	addwfc	??_motor_isr+3,w,c
 33528  00C152  6E39               	movwf	(??_motor_isr+11)& (0+255),c
 33529  00C154  0E00               	movlw	0
 33530  00C156  2032               	addwfc	??_motor_isr+4,w,c
 33531  00C158  6E3A               	movwf	(??_motor_isr+12)& (0+255),c
 33532  00C15A  0E00               	movlw	0
 33533  00C15C  2033               	addwfc	??_motor_isr+5,w,c
 33534  00C15E  6E3B               	movwf	(??_motor_isr+13)& (0+255),c
 33535  00C160  5016               	movf	_motor_current_stepcount,w,c	;volatile
 33536  00C162  2438               	addwf	??_motor_isr+10,w,c
 33537  00C164  0101               	movlb	1	; () banked
 33538  00C166  6F37               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 33539  00C168  5017               	movf	_motor_current_stepcount+1,w,c	;volatile
 33540  00C16A  2039               	addwfc	??_motor_isr+11,w,c
 33541  00C16C  6F38               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 33542  00C16E  5018               	movf	_motor_current_stepcount+2,w,c	;volatile
 33543  00C170  203A               	addwfc	??_motor_isr+12,w,c
 33544  00C172  6F39               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 33545  00C174  5019               	movf	_motor_current_stepcount+3,w,c	;volatile
 33546  00C176  203B               	addwfc	??_motor_isr+13,w,c
 33547  00C178                     L62:
 33548  00C178  6F3A               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 33549  00C17A                     i2l2391:
 33550                           
 33551                           ; BSR set to: 1
 33552                           ;motor.c: 401: };motor.c: 402: };motor.c: 405: if(PIR1bits.TMR2IF)
 33553                           
 33554                           ; BSR set to: 1
 33555                           
 33556                           ; BSR set to: 1
 33557                           
 33558                           ; BSR set to: 1
 33559  00C17A  A29E               	btfss	3998,1,c	;volatile
 33560  00C17C  0012               	return	
 33561                           
 33562                           ; BSR set to: 1
 33563                           ;motor.c: 406: {;motor.c: 408: PIR1bits.TMR2IF = 0;
 33564  00C17E  929E               	bcf	3998,1,c	;volatile
 33565                           
 33566                           ; BSR set to: 1
 33567                           ;motor.c: 410: ++motor_current_stepcount;
 33568  00C180  0E01               	movlw	1
 33569  00C182  2616               	addwf	_motor_current_stepcount,f,c	;volatile
 33570  00C184  0E00               	movlw	0
 33571  00C186  2217               	addwfc	_motor_current_stepcount+1,f,c	;volatile
 33572  00C188  2218               	addwfc	_motor_current_stepcount+2,f,c	;volatile
 33573  00C18A  2219               	addwfc	_motor_current_stepcount+3,f,c	;volatile
 33574                           
 33575                           ;motor.c: 413: os.current_position_in_steps += motor_direction;
 33576  00C18C  5169               	movf	_motor_direction& (0+255),w,b
 33577  00C18E  6E2E               	movwf	??_motor_isr& (0+255),c
 33578  00C190  0E00               	movlw	0
 33579  00C192  BE2E               	btfsc	??_motor_isr& (0+255),7,c
 33580  00C194  0EFF               	movlw	255
 33581  00C196  6E2F               	movwf	(??_motor_isr+1)& (0+255),c
 33582  00C198  6E30               	movwf	(??_motor_isr+2)& (0+255),c
 33583  00C19A  6E31               	movwf	(??_motor_isr+3)& (0+255),c
 33584  00C19C  502E               	movf	??_motor_isr,w,c
 33585  00C19E  0100               	movlb	0	; () banked
 33586  00C1A0  27DA               	addwf	(_os+7)& (0+255),f,b	;volatile
 33587  00C1A2  502F               	movf	??_motor_isr+1,w,c
 33588  00C1A4  23DB               	addwfc	(_os+8)& (0+255),f,b	;volatile
 33589  00C1A6  5030               	movf	??_motor_isr+2,w,c
 33590  00C1A8  23DC               	addwfc	(_os+9)& (0+255),f,b	;volatile
 33591  00C1AA  5031               	movf	??_motor_isr+3,w,c
 33592  00C1AC  23DD               	addwfc	(_os+10)& (0+255),f,b	;volatile
 33593                           
 33594                           ;motor.c: 414: if(os.current_position_in_steps==config.full_circle_in_steps)
 33595  00C1AE  0101               	movlb	1	; () banked
 33596  00C1B0  517B               	movf	_config& (0+255),w,b
 33597  00C1B2  0100               	movlb	0	; () banked
 33598  00C1B4  19DA               	xorwf	(_os+7)& (0+255),w,b	;volatile
 33599  00C1B6  E118               	bnz	i2l15756
 33600  00C1B8  0101               	movlb	1	; () banked
 33601  00C1BA  517C               	movf	(_config+1)& (0+255),w,b
 33602  00C1BC  0100               	movlb	0	; () banked
 33603  00C1BE  19DB               	xorwf	(_os+8)& (0+255),w,b	;volatile
 33604  00C1C0  E113               	bnz	i2l15756
 33605  00C1C2  0101               	movlb	1	; () banked
 33606  00C1C4  517D               	movf	(_config+2)& (0+255),w,b
 33607  00C1C6  0100               	movlb	0	; () banked
 33608  00C1C8  19DC               	xorwf	(_os+9)& (0+255),w,b	;volatile
 33609  00C1CA  E10E               	bnz	i2l15756
 33610  00C1CC  0101               	movlb	1	; () banked
 33611  00C1CE  517E               	movf	(_config+3)& (0+255),w,b
 33612  00C1D0  0100               	movlb	0	; () banked
 33613  00C1D2  19DD               	xorwf	(_os+10)& (0+255),w,b	;volatile
 33614  00C1D4  A4D8               	btfss	status,2,c
 33615  00C1D6  D008               	goto	i2l2394
 33616                           
 33617                           ; BSR set to: 0
 33618                           ;motor.c: 415: os.current_position_in_steps = 0;
 33619  00C1D8  0E00               	movlw	0
 33620  00C1DA  6FDA               	movwf	(_os+7)& (0+255),b	;volatile
 33621  00C1DC  0E00               	movlw	0
 33622  00C1DE  6FDB               	movwf	(_os+8)& (0+255),b	;volatile
 33623  00C1E0  0E00               	movlw	0
 33624  00C1E2  6FDC               	movwf	(_os+9)& (0+255),b	;volatile
 33625  00C1E4  0E00               	movlw	0
 33626  00C1E6  6FDD               	movwf	(_os+10)& (0+255),b	;volatile
 33627  00C1E8                     i2l2394:
 33628  00C1E8                     i2l15756:
 33629                           
 33630                           ; BSR set to: 0
 33631                           ;motor.c: 416: if(os.current_position_in_steps==0xFFFFFFFF)
 33632  00C1E8  29DA               	incf	(_os+7)& (0+255),w,b	;volatile
 33633  00C1EA  E11C               	bnz	i2l2375
 33634  00C1EC  29DB               	incf	(_os+8)& (0+255),w,b	;volatile
 33635  00C1EE  E11A               	bnz	i2l2375
 33636  00C1F0  29DC               	incf	(_os+9)& (0+255),w,b	;volatile
 33637  00C1F2  E118               	bnz	i2l2375
 33638  00C1F4  29DD               	incf	(_os+10)& (0+255),w,b	;volatile
 33639  00C1F6  A4D8               	btfss	status,2,c
 33640  00C1F8  0012               	return	
 33641                           
 33642                           ; BSR set to: 0
 33643                           ;motor.c: 417: os.current_position_in_steps = (config.full_circle_in_steps-1);
 33644  00C1FA  0EFF               	movlw	255
 33645  00C1FC  0101               	movlb	1	; () banked
 33646  00C1FE  257B               	addwf	_config& (0+255),w,b
 33647  00C200  0100               	movlb	0	; () banked
 33648  00C202  6FDA               	movwf	(_os+7)& (0+255),b	;volatile
 33649  00C204  0EFF               	movlw	255
 33650  00C206  0101               	movlb	1	; () banked
 33651  00C208  217C               	addwfc	(_config+1)& (0+255),w,b
 33652  00C20A  0100               	movlb	0	; () banked
 33653  00C20C  6FDB               	movwf	(_os+8)& (0+255),b	;volatile
 33654  00C20E  0EFF               	movlw	255
 33655  00C210  0101               	movlb	1	; () banked
 33656  00C212  217D               	addwfc	(_config+2)& (0+255),w,b
 33657  00C214  0100               	movlb	0	; () banked
 33658  00C216  6FDC               	movwf	(_os+9)& (0+255),b	;volatile
 33659  00C218  0EFF               	movlw	255
 33660  00C21A  0101               	movlb	1	; () banked
 33661  00C21C  217E               	addwfc	(_config+3)& (0+255),w,b
 33662  00C21E  0100               	movlb	0	; () banked
 33663  00C220  6FDD               	movwf	(_os+10)& (0+255),b	;volatile
 33664                           
 33665                           ; BSR set to: 0
 33666  00C222  0012               	return	
 33667  00C224                     i2l2375:
 33668  00C224  0012               	return		;funcret
 33669  00C226                     __end_of_motor_isr:
 33670                           	opt stack 0
 33671                           tosu	equ	0xFFF
 33672                           tosh	equ	0xFFE
 33673                           tosl	equ	0xFFD
 33674                           pclatu	equ	0xFFB
 33675                           pclath	equ	0xFFA
 33676                           tblptru	equ	0xFF8
 33677                           tblptrh	equ	0xFF7
 33678                           tblptrl	equ	0xFF6
 33679                           tablat	equ	0xFF5
 33680                           prodh	equ	0xFF4
 33681                           prodl	equ	0xFF3
 33682                           intcon	equ	0xFF2
 33683                           indf0	equ	0xFEF
 33684                           postinc0	equ	0xFEE
 33685                           fsr0h	equ	0xFEA
 33686                           fsr0l	equ	0xFE9
 33687                           wreg	equ	0xFE8
 33688                           indf1	equ	0xFE7
 33689                           postdec1	equ	0xFE5
 33690                           plusw1	equ	0xFE3
 33691                           fsr1h	equ	0xFE2
 33692                           fsr1l	equ	0xFE1
 33693                           indf2	equ	0xFDF
 33694                           postinc2	equ	0xFDE
 33695                           postdec2	equ	0xFDD
 33696                           plusw2	equ	0xFDB
 33697                           fsr2h	equ	0xFDA
 33698                           fsr2l	equ	0xFD9
 33699                           status	equ	0xFD8
 33700                           
 33701 ;; *************** function _USBDeviceTasks *****************
 33702 ;; Defined at:
 33703 ;;		line 477 in file "usb_device.c"
 33704 ;; Parameters:    Size  Location     Type
 33705 ;;		None
 33706 ;; Auto vars:     Size  Location     Type
 33707 ;;  i               1   30[COMRAM] unsigned char 
 33708 ;; Return value:  Size  Location     Type
 33709 ;;                  1    wreg      void 
 33710 ;; Registers used:
 33711 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 33712 ;; Tracked objects:
 33713 ;;		On entry : 0/0
 33714 ;;		On exit  : 0/0
 33715 ;;		Unchanged: 0/0
 33716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33718 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33720 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33721 ;;Total ram usage:        1 bytes
 33722 ;; Hardware stack levels used:    1
 33723 ;; Hardware stack levels required when called:    8
 33724 ;; This function calls:
 33725 ;;		_USBCtrlEPAllowStatusStage
 33726 ;;		_USBCtrlEPService
 33727 ;;		_USBIncrement1msInternalTimers
 33728 ;;		_USBStallHandler
 33729 ;;		_USBSuspend
 33730 ;;		_USBWakeFromSuspend
 33731 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 33732 ;;		i2_USBDeviceInit
 33733 ;; This function is called by:
 33734 ;;		_SYS_InterruptHigh
 33735 ;; This function uses a non-reentrant model
 33736 ;;
 33737                           
 33738                           	psect	text118
 33739  00EB30                     __ptext118:
 33740                           	opt stack 0
 33741  00EB30                     _USBDeviceTasks:
 33742                           	opt stack 9
 33743                           
 33744                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 33745                           
 33746                           ;incstack = 0
 33747  00EB30  042B               	decf	_USBDeviceState,w,c	;volatile
 33748  00EB32  B4D8               	btfsc	status,2,c
 33749                           
 33750                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 33751  00EB34  BA65               	btfsc	3941,5,c	;volatile
 33752  00EB36  D007               	goto	i2l155
 33753                           
 33754                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 33755  00EB38  0E00               	movlw	0
 33756  00EB3A  6E62               	movwf	3938,c	;volatile
 33757                           
 33758                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 33759  00EB3C  010F               	movlb	15	; () banked
 33760  00EB3E  8136               	bsf	54,0,b	;volatile
 33761                           
 33762                           ; BSR set to: 15
 33763                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 33764  00EB40  8936               	bsf	54,4,b	;volatile
 33765                           
 33766                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 33767  00EB42  0E02               	movlw	2
 33768  00EB44  6E2B               	movwf	_USBDeviceState,c	;volatile
 33769  00EB46                     i2l155:
 33770                           
 33771                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 33772                           
 33773                           ; BSR set to: 15
 33774                           
 33775                           ; BSR set to: 15
 33776  00EB46  A462               	btfss	3938,2,c	;volatile
 33777  00EB48  D006               	goto	i2l156
 33778  00EB4A  010F               	movlb	15	; () banked
 33779  00EB4C  A536               	btfss	54,2,b	;volatile
 33780  00EB4E  D003               	goto	i2l156
 33781                           
 33782                           ; BSR set to: 15
 33783                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 33784  00EB50  9462               	bcf	3938,2,c	;volatile
 33785                           
 33786                           ; BSR set to: 15
 33787                           ;usb_device.c: 640: USBWakeFromSuspend();
 33788  00EB52  EC06  F092         	call	_USBWakeFromSuspend	;wreg free
 33789  00EB56                     i2l156:
 33790                           
 33791                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 33792  00EB56  A265               	btfss	3941,1,c	;volatile
 33793  00EB58  D002               	goto	i2l157
 33794                           
 33795                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 33796  00EB5A  98A1               	bcf	4001,4,c	;volatile
 33797                           
 33798                           ;usb_device.c: 650: return;
 33799  00EB5C  0012               	return	
 33800  00EB5E                     i2l157:
 33801                           
 33802                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 33803  00EB5E  A062               	btfss	3938,0,c	;volatile
 33804  00EB60  D009               	goto	i2l159
 33805  00EB62  010F               	movlb	15	; () banked
 33806  00EB64  A136               	btfss	54,0,b	;volatile
 33807  00EB66  D006               	goto	i2l159
 33808                           
 33809                           ; BSR set to: 15
 33810                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 33811  00EB68  EC3A  F076         	call	i2_USBDeviceInit	;wreg free
 33812                           
 33813                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 33814  00EB6C  88A0               	bsf	4000,4,c	;volatile
 33815                           
 33816                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 33817  00EB6E  0E04               	movlw	4
 33818  00EB70  6E2B               	movwf	_USBDeviceState,c	;volatile
 33819                           
 33820                           ;usb_device.c: 681: (UIR &= 0xFE);
 33821  00EB72  9062               	bcf	3938,0,c	;volatile
 33822  00EB74                     i2l159:
 33823                           
 33824                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 33825  00EB74  A862               	btfss	3938,4,c	;volatile
 33826  00EB76  D004               	goto	i2l160
 33827  00EB78  010F               	movlb	15	; () banked
 33828  00EB7A  B936               	btfsc	54,4,b	;volatile
 33829                           
 33830                           ; BSR set to: 15
 33831                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 33832  00EB7C  ECD8  F092         	call	_USBSuspend	;wreg free
 33833  00EB80                     i2l160:
 33834                           
 33835                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 33836  00EB80  AC62               	btfss	3938,6,c	;volatile
 33837  00EB82  D01B               	goto	i2l164
 33838                           
 33839                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 33840  00EB84  010F               	movlb	15	; () banked
 33841  00EB86  AD36               	btfss	54,6,b	;volatile
 33842  00EB88  D00E               	goto	i2l162
 33843                           
 33844                           ; BSR set to: 15
 33845                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 33846  00EB8A  0E00               	movlw	0
 33847  00EB8C  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 33848  00EB8E  0E73               	movlw	115
 33849  00EB90  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 33850  00EB92  0E00               	movlw	0
 33851  00EB94  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 33852  00EB96  0E00               	movlw	0
 33853  00EB98  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 33854  00EB9A  0E00               	movlw	0
 33855  00EB9C  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 33856  00EB9E  0E01               	movlw	1
 33857  00EBA0  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 33858  00EBA2  EC5E  F08A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 33859  00EBA6                     i2l162:
 33860                           
 33861                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 33862  00EBA6  9C62               	bcf	3938,6,c	;volatile
 33863                           
 33864                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 33865  00EBA8  ECE0  F093         	call	_USBIncrement1msInternalTimers	;wreg free
 33866                           
 33867                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 33868  00EBAC  5027               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 33869  00EBAE  A4D8               	btfss	status,2,c
 33870                           
 33871                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 33872  00EBB0  0627               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 33873                           
 33874                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 33875  00EBB2  5027               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 33876  00EBB4  B4D8               	btfsc	status,2,c
 33877                           
 33878                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 33879  00EBB6  EC2F  F084         	call	_USBCtrlEPAllowStatusStage	;wreg free
 33880  00EBBA                     i2l164:
 33881                           
 33882                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 33883  00EBBA  AA62               	btfss	3938,5,c	;volatile
 33884  00EBBC  D004               	goto	i2l165
 33885  00EBBE  010F               	movlb	15	; () banked
 33886  00EBC0  BB36               	btfsc	54,5,b	;volatile
 33887                           
 33888                           ; BSR set to: 15
 33889                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 33890  00EBC2  EC13  F091         	call	_USBStallHandler	;wreg free
 33891  00EBC6                     i2l165:
 33892                           
 33893                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 33894  00EBC6  A262               	btfss	3938,1,c	;volatile
 33895  00EBC8  D012               	goto	i2l166
 33896  00EBCA  010F               	movlb	15	; () banked
 33897  00EBCC  A336               	btfss	54,1,b	;volatile
 33898  00EBCE  D00F               	goto	i2l166
 33899                           
 33900                           ; BSR set to: 15
 33901                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 33902  00EBD0  0E7F               	movlw	127
 33903  00EBD2  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 33904  00EBD4  683D               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 33905  00EBD6  0E00               	movlw	0
 33906  00EBD8  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 33907  00EBDA  0E00               	movlw	0
 33908  00EBDC  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 33909  00EBDE  0E00               	movlw	0
 33910  00EBE0  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 33911  00EBE2  0E01               	movlw	1
 33912  00EBE4  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 33913  00EBE6  EC5E  F08A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 33914                           
 33915                           ;usb_device.c: 759: {UEIR = 0;};
 33916  00EBEA  0E00               	movlw	0
 33917  00EBEC  6E63               	movwf	3939,c	;volatile
 33918  00EBEE                     i2l166:
 33919                           
 33920                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 33921  00EBEE  0E04               	movlw	4
 33922  00EBF0  602B               	cpfslt	_USBDeviceState,c	;volatile
 33923  00EBF2  D002               	goto	i2l167
 33924                           
 33925                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 33926  00EBF4  98A1               	bcf	4001,4,c	;volatile
 33927                           
 33928                           ;usb_device.c: 777: return;
 33929  00EBF6  0012               	return	
 33930  00EBF8                     i2l167:
 33931                           
 33932                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 33933  00EBF8  010F               	movlb	15	; () banked
 33934  00EBFA  A736               	btfss	54,3,b	;volatile
 33935  00EBFC  D039               	goto	i2u2027_40
 33936                           
 33937                           ; BSR set to: 15
 33938                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 33939  00EBFE  0E00               	movlw	0
 33940  00EC00  6E4C               	movwf	USBDeviceTasks@i,c
 33941  00EC02                     i2l20578:
 33942                           
 33943                           ; BSR set to: 15
 33944  00EC02  0E03               	movlw	3
 33945  00EC04  644C               	cpfsgt	USBDeviceTasks@i,c
 33946  00EC06  D001               	goto	i2l169
 33947  00EC08  D033               	goto	i2u2027_40
 33948  00EC0A                     i2l169:
 33949                           
 33950                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 33951  00EC0A  A662               	btfss	3938,3,c	;volatile
 33952  00EC0C  D031               	goto	i2u2027_40
 33953                           
 33954                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 33955  00EC0E  CF64 F02C          	movff	3940,_USTATcopy	;volatile
 33956                           
 33957                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 33958  00EC12  302C               	rrcf	_USTATcopy,w,c	;volatile
 33959  00EC14  32E8               	rrcf	wreg,f,c
 33960  00EC16  32E8               	rrcf	wreg,f,c
 33961  00EC18  0B0F               	andlw	15
 33962  00EC1A  6E28               	movwf	_endpoint_number,c	;volatile
 33963                           
 33964                           ;usb_device.c: 793: (UIR &= 0xF7);
 33965  00EC1C  9662               	bcf	3938,3,c	;volatile
 33966                           
 33967                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 33968  00EC1E  B42C               	btfsc	_USTATcopy,2,c	;volatile
 33969  00EC20  D007               	goto	i2l172
 33970                           
 33971                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 33972  00EC22  5028               	movf	_endpoint_number,w,c	;volatile
 33973  00EC24  0D01               	mullw	1
 33974  00EC26  0E55               	movlw	low _ep_data_out
 33975  00EC28  24F3               	addwf	prodl,w,c
 33976  00EC2A  6ED9               	movwf	fsr2l,c
 33977  00EC2C  0E01               	movlw	high _ep_data_out
 33978  00EC2E  D006               	goto	L63
 33979  00EC30                     i2l172:
 33980                           
 33981                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 33982                           
 33983                           ; BSR set to: 1
 33984  00EC30  5028               	movf	_endpoint_number,w,c	;volatile
 33985  00EC32  0D01               	mullw	1
 33986  00EC34  0E58               	movlw	low _ep_data_in
 33987  00EC36  24F3               	addwf	prodl,w,c
 33988  00EC38  6ED9               	movwf	fsr2l,c
 33989  00EC3A  0E01               	movlw	high _ep_data_in
 33990  00EC3C                     L63:
 33991  00EC3C  20F4               	addwfc	prodh,w,c
 33992  00EC3E  6EDA               	movwf	fsr2h,c
 33993  00EC40  0101               	movlb	1	; () banked
 33994  00EC42  70DF               	btg	indf2,0,c
 33995                           
 33996                           ; BSR set to: 1
 33997                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 33998                           
 33999                           ; BSR set to: 1
 34000  00EC44  5028               	movf	_endpoint_number,w,c	;volatile
 34001  00EC46  A4D8               	btfss	status,2,c
 34002  00EC48  D003               	goto	i2l174
 34003                           
 34004                           ; BSR set to: 1
 34005                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 34006  00EC4A  EC39  F089         	call	_USBCtrlEPService	;wreg free
 34007                           
 34008                           ;usb_device.c: 813: }
 34009  00EC4E  D00E               	goto	i2l176
 34010  00EC50                     i2l174:
 34011                           
 34012                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 34013  00EC50  0E00               	movlw	0
 34014  00EC52  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 34015  00EC54  0E72               	movlw	114
 34016  00EC56  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 34017  00EC58  0E2C               	movlw	low _USTATcopy
 34018  00EC5A  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 34019  00EC5C  0E00               	movlw	high _USTATcopy
 34020  00EC5E  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 34021  00EC60  0E00               	movlw	0
 34022  00EC62  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 34023  00EC64  0E00               	movlw	0
 34024  00EC66  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 34025  00EC68  EC5E  F08A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 34026  00EC6C                     i2l176:
 34027  00EC6C  2A4C               	incf	USBDeviceTasks@i,f,c
 34028  00EC6E  D7C9               	goto	i2l20578
 34029  00EC70                     i2u2027_40:
 34030                           
 34031                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 34032  00EC70  98A1               	bcf	4001,4,c	;volatile
 34033  00EC72  0012               	return		;funcret
 34034  00EC74                     __end_of_USBDeviceTasks:
 34035                           	opt stack 0
 34036                           tosu	equ	0xFFF
 34037                           tosh	equ	0xFFE
 34038                           tosl	equ	0xFFD
 34039                           pclatu	equ	0xFFB
 34040                           pclath	equ	0xFFA
 34041                           tblptru	equ	0xFF8
 34042                           tblptrh	equ	0xFF7
 34043                           tblptrl	equ	0xFF6
 34044                           tablat	equ	0xFF5
 34045                           prodh	equ	0xFF4
 34046                           prodl	equ	0xFF3
 34047                           intcon	equ	0xFF2
 34048                           indf0	equ	0xFEF
 34049                           postinc0	equ	0xFEE
 34050                           fsr0h	equ	0xFEA
 34051                           fsr0l	equ	0xFE9
 34052                           wreg	equ	0xFE8
 34053                           indf1	equ	0xFE7
 34054                           postdec1	equ	0xFE5
 34055                           plusw1	equ	0xFE3
 34056                           fsr1h	equ	0xFE2
 34057                           fsr1l	equ	0xFE1
 34058                           indf2	equ	0xFDF
 34059                           postinc2	equ	0xFDE
 34060                           postdec2	equ	0xFDD
 34061                           plusw2	equ	0xFDB
 34062                           fsr2h	equ	0xFDA
 34063                           fsr2l	equ	0xFD9
 34064                           status	equ	0xFD8
 34065                           
 34066 ;; *************** function i2_USBDeviceInit *****************
 34067 ;; Defined at:
 34068 ;;		line 277 in file "usb_device.c"
 34069 ;; Parameters:    Size  Location     Type
 34070 ;;		None
 34071 ;; Auto vars:     Size  Location     Type
 34072 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 34073 ;; Return value:  Size  Location     Type
 34074 ;;                  1    wreg      void 
 34075 ;; Registers used:
 34076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34077 ;; Tracked objects:
 34078 ;;		On entry : 0/0
 34079 ;;		On exit  : 0/0
 34080 ;;		Unchanged: 0/0
 34081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34083 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34085 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34086 ;;Total ram usage:        1 bytes
 34087 ;; Hardware stack levels used:    1
 34088 ;; Hardware stack levels required when called:    1
 34089 ;; This function calls:
 34090 ;;		i2_memset
 34091 ;; This function is called by:
 34092 ;;		_USBDeviceTasks
 34093 ;; This function uses a non-reentrant model
 34094 ;;
 34095                           
 34096                           	psect	text119
 34097  00EC74                     __ptext119:
 34098                           	opt stack 0
 34099  00EC74                     i2_USBDeviceInit:
 34100                           	opt stack 15
 34101                           
 34102                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 34103                           
 34104                           ;incstack = 0
 34105  00EC74  98A0               	bcf	4000,4,c	;volatile
 34106                           
 34107                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 34108  00EC76  0E00               	movlw	0
 34109  00EC78  6E63               	movwf	3939,c	;volatile
 34110                           
 34111                           ;usb_device.c: 291: {UIR = 0;};
 34112  00EC7A  0E00               	movlw	0
 34113  00EC7C  6E62               	movwf	3938,c	;volatile
 34114                           
 34115                           ;usb_device.c: 294: UEP0 = 0;
 34116  00EC7E  0E00               	movlw	0
 34117  00EC80  010F               	movlb	15	; () banked
 34118  00EC82  6F26               	movwf	38,b	;volatile
 34119                           
 34120                           ; BSR set to: 15
 34121                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 34122  00EC84  0E27               	movlw	39
 34123  00EC86  6E2E               	movwf	i2memset@p1,c
 34124  00EC88  0E0F               	movlw	15
 34125  00EC8A  6E2F               	movwf	i2memset@p1+1,c
 34126  00EC8C  0E00               	movlw	0
 34127  00EC8E  6E31               	movwf	i2memset@c+1,c
 34128  00EC90  0E00               	movlw	0
 34129  00EC92  6E30               	movwf	i2memset@c,c
 34130  00EC94  0E00               	movlw	0
 34131  00EC96  6E33               	movwf	i2memset@n+1,c
 34132  00EC98  0E02               	movlw	2
 34133  00EC9A  6E32               	movwf	i2memset@n,c
 34134  00EC9C  EC34  F093         	call	i2_memset	;wreg free
 34135                           
 34136                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 34137  00ECA0  0E16               	movlw	22
 34138  00ECA2  010F               	movlb	15	; () banked
 34139  00ECA4  6F39               	movwf	57,b	;volatile
 34140                           
 34141                           ; BSR set to: 15
 34142  00ECA6  0E9F               	movlw	159
 34143  00ECA8  6F37               	movwf	55,b	;volatile
 34144                           
 34145                           ; BSR set to: 15
 34146  00ECAA  0E7B               	movlw	123
 34147  00ECAC  6F36               	movwf	54,b	;volatile
 34148                           
 34149                           ; BSR set to: 15
 34150                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 34151  00ECAE  0E00               	movlw	0
 34152  00ECB0  6E36               	movwf	i2USBDeviceInit@i,c
 34153  00ECB2                     i2l14466:
 34154                           
 34155                           ; BSR set to: 15
 34156  00ECB2  0E0B               	movlw	11
 34157  00ECB4  6436               	cpfsgt	i2USBDeviceInit@i,c
 34158  00ECB6  D001               	goto	i2l145
 34159  00ECB8  D00E               	goto	i2u1310_40
 34160  00ECBA                     i2l145:
 34161                           
 34162                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 34163                           
 34164                           ; BSR set to: 15
 34165  00ECBA  5036               	movf	i2USBDeviceInit@i,w,c
 34166  00ECBC  0D04               	mullw	4
 34167  00ECBE  0E00               	movlw	0
 34168  00ECC0  24F3               	addwf	prodl,w,c
 34169  00ECC2  6ED9               	movwf	fsr2l,c
 34170  00ECC4  0E0D               	movlw	13
 34171  00ECC6  20F4               	addwfc	prodh,w,c
 34172  00ECC8  6EDA               	movwf	fsr2h,c
 34173  00ECCA  6ADE               	clrf	postinc2,c
 34174  00ECCC  6ADE               	clrf	postinc2,c
 34175  00ECCE  6ADE               	clrf	postinc2,c
 34176  00ECD0  6ADD               	clrf	postdec2,c
 34177  00ECD2  2A36               	incf	i2USBDeviceInit@i,f,c
 34178  00ECD4  D7EE               	goto	i2l14466
 34179  00ECD6                     i2u1310_40:
 34180                           
 34181                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 34182  00ECD6  8C65               	bsf	3941,6,c	;volatile
 34183                           
 34184                           ;usb_device.c: 316: UADDR = 0x00;
 34185  00ECD8  0E00               	movlw	0
 34186  00ECDA  010F               	movlb	15	; () banked
 34187  00ECDC  6F38               	movwf	56,b	;volatile
 34188                           
 34189                           ; BSR set to: 15
 34190                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 34191  00ECDE  9865               	bcf	3941,4,c	;volatile
 34192                           
 34193                           ; BSR set to: 15
 34194                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 34195  00ECE0  9C65               	bcf	3941,6,c	;volatile
 34196  00ECE2                     
 34197                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 34198                           
 34199                           ; BSR set to: 15
 34200  00ECE2  9662               	bcf	3938,3,c	;volatile
 34201                           
 34202                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 34203  00ECE4  0E00               	movlw	0
 34204  00ECE6  6E0D               	movwf	_inPipes+3,c	;volatile
 34205                           
 34206                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 34207  00ECE8  0E00               	movlw	0
 34208  00ECEA  6E04               	movwf	_outPipes+3,c	;volatile
 34209                           
 34210                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 34211  00ECEC  0E00               	movlw	0
 34212  00ECEE  6E06               	movwf	_outPipes+5,c	;volatile
 34213  00ECF0  0E00               	movlw	0
 34214  00ECF2  6E05               	movwf	_outPipes+4,c	;volatile
 34215                           
 34216                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 34217  00ECF4  B662               	btfsc	3938,3,c	;volatile
 34218  00ECF6  D7F5               	goto	i2l147
 34219                           
 34220                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 34221  00ECF8  0E01               	movlw	1
 34222  00ECFA  0101               	movlb	1	; () banked
 34223  00ECFC  6F77               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 34224                           
 34225                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 34226  00ECFE  0E01               	movlw	1
 34227  00ED00  6F76               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 34228                           
 34229                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 34230  00ED02  0E00               	movlw	0
 34231  00ED04  6F75               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 34232                           
 34233                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 34234  00ED06  0E00               	movlw	0
 34235  00ED08  6F74               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 34236                           
 34237                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 34238  00ED0A  0E00               	movlw	0
 34239  00ED0C  6F79               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 34240                           
 34241                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 34242  00ED0E  0E00               	movlw	0
 34243  00ED10  6E36               	movwf	i2USBDeviceInit@i,c
 34244  00ED12                     i2l14494:
 34245                           
 34246                           ; BSR set to: 1
 34247  00ED12  0E02               	movlw	2
 34248  00ED14  6436               	cpfsgt	i2USBDeviceInit@i,c
 34249  00ED16  D001               	goto	i2l149
 34250  00ED18  D02E               	goto	i2u1313_40
 34251  00ED1A                     i2l149:
 34252                           
 34253                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 34254                           
 34255                           ; BSR set to: 1
 34256  00ED1A  5036               	movf	i2USBDeviceInit@i,w,c
 34257  00ED1C  0D02               	mullw	2
 34258  00ED1E  0E10               	movlw	low _pBDTEntryIn
 34259  00ED20  24F3               	addwf	prodl,w,c
 34260  00ED22  6ED9               	movwf	fsr2l,c
 34261  00ED24  0E00               	movlw	high _pBDTEntryIn
 34262  00ED26  20F4               	addwfc	prodh,w,c
 34263  00ED28  6EDA               	movwf	fsr2h,c
 34264  00ED2A  0E00               	movlw	0
 34265  00ED2C  6EDE               	movwf	postinc2,c
 34266  00ED2E  0E00               	movlw	0
 34267  00ED30  6EDD               	movwf	postdec2,c
 34268                           
 34269                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 34270  00ED32  5036               	movf	i2USBDeviceInit@i,w,c
 34271  00ED34  0D02               	mullw	2
 34272  00ED36  0E31               	movlw	low _pBDTEntryOut
 34273  00ED38  24F3               	addwf	prodl,w,c
 34274  00ED3A  6ED9               	movwf	fsr2l,c
 34275  00ED3C  0E01               	movlw	high _pBDTEntryOut
 34276  00ED3E  20F4               	addwfc	prodh,w,c
 34277  00ED40  6EDA               	movwf	fsr2h,c
 34278  00ED42  0E00               	movlw	0
 34279  00ED44  6EDE               	movwf	postinc2,c
 34280  00ED46  0E00               	movlw	0
 34281  00ED48  6EDD               	movwf	postdec2,c
 34282                           
 34283                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 34284  00ED4A  5036               	movf	i2USBDeviceInit@i,w,c
 34285  00ED4C  0D01               	mullw	1
 34286  00ED4E  0E58               	movlw	low _ep_data_in
 34287  00ED50  24F3               	addwf	prodl,w,c
 34288  00ED52  6ED9               	movwf	fsr2l,c
 34289  00ED54  0E01               	movlw	high _ep_data_in
 34290  00ED56  20F4               	addwfc	prodh,w,c
 34291  00ED58  6EDA               	movwf	fsr2h,c
 34292  00ED5A  0E00               	movlw	0
 34293  00ED5C  6EDF               	movwf	indf2,c
 34294                           
 34295                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 34296  00ED5E  5036               	movf	i2USBDeviceInit@i,w,c
 34297  00ED60  0D01               	mullw	1
 34298  00ED62  0E55               	movlw	low _ep_data_out
 34299  00ED64  24F3               	addwf	prodl,w,c
 34300  00ED66  6ED9               	movwf	fsr2l,c
 34301  00ED68  0E01               	movlw	high _ep_data_out
 34302  00ED6A  20F4               	addwfc	prodh,w,c
 34303  00ED6C  6EDA               	movwf	fsr2h,c
 34304  00ED6E  0E00               	movlw	0
 34305  00ED70  6EDF               	movwf	indf2,c
 34306  00ED72  2A36               	incf	i2USBDeviceInit@i,f,c
 34307  00ED74  D7CE               	goto	i2l14494
 34308  00ED76                     i2u1313_40:
 34309                           
 34310                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 34311  00ED76  0E08               	movlw	8
 34312  00ED78  6E10               	movwf	_pBDTEntryIn,c
 34313  00ED7A  0E0D               	movlw	13
 34314  00ED7C  6E11               	movwf	_pBDTEntryIn+1,c
 34315                           
 34316                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 34317  00ED7E  0E16               	movlw	22
 34318  00ED80  010F               	movlb	15	; () banked
 34319  00ED82  6F26               	movwf	38,b	;volatile
 34320                           
 34321                           ; BSR set to: 15
 34322                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 34323  00ED84  0E0D               	movlw	13
 34324  00ED86  010D               	movlb	13	; () banked
 34325  00ED88  6F03               	movwf	3,b	;volatile
 34326  00ED8A  0E30               	movlw	48
 34327  00ED8C  6F02               	movwf	2,b	;volatile
 34328                           
 34329                           ; BSR set to: 13
 34330                           ;usb_device.c: 359: BDT[0].CNT = 8;
 34331  00ED8E  0E08               	movlw	8
 34332  00ED90  6F01               	movwf	1,b	;volatile
 34333                           
 34334                           ; BSR set to: 13
 34335                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 34336  00ED92  0E04               	movlw	4
 34337  00ED94  6F00               	movwf	0,b	;volatile
 34338                           
 34339                           ; BSR set to: 13
 34340                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 34341  00ED96  8F00               	bsf	0,7,b	;volatile
 34342                           
 34343                           ; BSR set to: 13
 34344                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 34345  00ED98  0E00               	movlw	0
 34346  00ED9A  6E2D               	movwf	_USBActiveConfiguration,c	;volatile
 34347                           
 34348                           ; BSR set to: 13
 34349                           ;usb_device.c: 366: USB1msTickCount = 0;
 34350  00ED9C  0E00               	movlw	0
 34351  00ED9E  0101               	movlb	1	; () banked
 34352  00EDA0  6F4B               	movwf	_USB1msTickCount& (0+255),b	;volatile
 34353  00EDA2  0E00               	movlw	0
 34354  00EDA4  6F4C               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 34355  00EDA6  0E00               	movlw	0
 34356  00EDA8  6F4D               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 34357  00EDAA  0E00               	movlw	0
 34358  00EDAC  6F4E               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 34359                           
 34360                           ; BSR set to: 1
 34361                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 34362  00EDAE  0E00               	movlw	0
 34363  00EDB0  6F73               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 34364                           
 34365                           ; BSR set to: 1
 34366                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 34367  00EDB2  0E00               	movlw	0
 34368  00EDB4  6E2B               	movwf	_USBDeviceState,c	;volatile
 34369                           
 34370                           ; BSR set to: 1
 34371  00EDB6  0012               	return		;funcret
 34372  00EDB8                     __end_ofi2_USBDeviceInit:
 34373                           	opt stack 0
 34374                           tosu	equ	0xFFF
 34375                           tosh	equ	0xFFE
 34376                           tosl	equ	0xFFD
 34377                           pclatu	equ	0xFFB
 34378                           pclath	equ	0xFFA
 34379                           tblptru	equ	0xFF8
 34380                           tblptrh	equ	0xFF7
 34381                           tblptrl	equ	0xFF6
 34382                           tablat	equ	0xFF5
 34383                           prodh	equ	0xFF4
 34384                           prodl	equ	0xFF3
 34385                           intcon	equ	0xFF2
 34386                           indf0	equ	0xFEF
 34387                           postinc0	equ	0xFEE
 34388                           fsr0h	equ	0xFEA
 34389                           fsr0l	equ	0xFE9
 34390                           wreg	equ	0xFE8
 34391                           indf1	equ	0xFE7
 34392                           postdec1	equ	0xFE5
 34393                           plusw1	equ	0xFE3
 34394                           fsr1h	equ	0xFE2
 34395                           fsr1l	equ	0xFE1
 34396                           indf2	equ	0xFDF
 34397                           postinc2	equ	0xFDE
 34398                           postdec2	equ	0xFDD
 34399                           plusw2	equ	0xFDB
 34400                           fsr2h	equ	0xFDA
 34401                           fsr2l	equ	0xFD9
 34402                           status	equ	0xFD8
 34403                           
 34404 ;; *************** function _USBWakeFromSuspend *****************
 34405 ;; Defined at:
 34406 ;;		line 2305 in file "usb_device.c"
 34407 ;; Parameters:    Size  Location     Type
 34408 ;;		None
 34409 ;; Auto vars:     Size  Location     Type
 34410 ;;		None
 34411 ;; Return value:  Size  Location     Type
 34412 ;;                  1    wreg      void 
 34413 ;; Registers used:
 34414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 34415 ;; Tracked objects:
 34416 ;;		On entry : 0/0
 34417 ;;		On exit  : 0/0
 34418 ;;		Unchanged: 0/0
 34419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34424 ;;Total ram usage:        0 bytes
 34425 ;; Hardware stack levels used:    1
 34426 ;; Hardware stack levels required when called:    4
 34427 ;; This function calls:
 34428 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 34429 ;; This function is called by:
 34430 ;;		_USBDeviceTasks
 34431 ;; This function uses a non-reentrant model
 34432 ;;
 34433                           
 34434                           	psect	text120
 34435  01240C                     __ptext120:
 34436                           	opt stack 0
 34437  01240C                     _USBWakeFromSuspend:
 34438                           	opt stack 12
 34439                           
 34440                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 34441                           
 34442                           ; BSR set to: 1
 34443                           ;incstack = 0
 34444  01240C  0E00               	movlw	0
 34445  01240E  0101               	movlb	1	; () banked
 34446  012410  6F79               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 34447                           
 34448                           ; BSR set to: 1
 34449                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 34450  012412  0E00               	movlw	0
 34451  012414  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 34452  012416  0E74               	movlw	116
 34453  012418  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 34454  01241A  0E00               	movlw	0
 34455  01241C  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 34456  01241E  0E00               	movlw	0
 34457  012420  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 34458  012422  0E00               	movlw	0
 34459  012424  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 34460  012426  0E00               	movlw	0
 34461  012428  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 34462  01242A  EC5E  F08A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 34463                           
 34464                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 34465  01242E  9265               	bcf	3941,1,c	;volatile
 34466                           
 34467                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 34468  012430  010F               	movlb	15	; () banked
 34469  012432  9536               	bcf	54,2,b	;volatile
 34470                           
 34471                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 34472  012434  D001               	goto	i2l315
 34473  012436                     
 34474                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 34475                           
 34476                           ; BSR set to: 15
 34477  012436  9462               	bcf	3938,2,c	;volatile
 34478  012438                     i2l315:
 34479  012438  B462               	btfsc	3938,2,c	;volatile
 34480  01243A  D7FD               	goto	i2l316
 34481                           
 34482                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 34483  01243C  0E00               	movlw	0
 34484  01243E  0101               	movlb	1	; () banked
 34485  012440  6F73               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 34486                           
 34487                           ; BSR set to: 1
 34488  012442  0012               	return		;funcret
 34489  012444                     __end_of_USBWakeFromSuspend:
 34490                           	opt stack 0
 34491                           tosu	equ	0xFFF
 34492                           tosh	equ	0xFFE
 34493                           tosl	equ	0xFFD
 34494                           pclatu	equ	0xFFB
 34495                           pclath	equ	0xFFA
 34496                           tblptru	equ	0xFF8
 34497                           tblptrh	equ	0xFF7
 34498                           tblptrl	equ	0xFF6
 34499                           tablat	equ	0xFF5
 34500                           prodh	equ	0xFF4
 34501                           prodl	equ	0xFF3
 34502                           intcon	equ	0xFF2
 34503                           indf0	equ	0xFEF
 34504                           postinc0	equ	0xFEE
 34505                           fsr0h	equ	0xFEA
 34506                           fsr0l	equ	0xFE9
 34507                           wreg	equ	0xFE8
 34508                           indf1	equ	0xFE7
 34509                           postdec1	equ	0xFE5
 34510                           plusw1	equ	0xFE3
 34511                           fsr1h	equ	0xFE2
 34512                           fsr1l	equ	0xFE1
 34513                           indf2	equ	0xFDF
 34514                           postinc2	equ	0xFDE
 34515                           postdec2	equ	0xFDD
 34516                           plusw2	equ	0xFDB
 34517                           fsr2h	equ	0xFDA
 34518                           fsr2l	equ	0xFD9
 34519                           status	equ	0xFD8
 34520                           
 34521 ;; *************** function _USBSuspend *****************
 34522 ;; Defined at:
 34523 ;;		line 2247 in file "usb_device.c"
 34524 ;; Parameters:    Size  Location     Type
 34525 ;;		None
 34526 ;; Auto vars:     Size  Location     Type
 34527 ;;		None
 34528 ;; Return value:  Size  Location     Type
 34529 ;;                  1    wreg      void 
 34530 ;; Registers used:
 34531 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 34532 ;; Tracked objects:
 34533 ;;		On entry : 0/0
 34534 ;;		On exit  : 0/0
 34535 ;;		Unchanged: 0/0
 34536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34541 ;;Total ram usage:        0 bytes
 34542 ;; Hardware stack levels used:    1
 34543 ;; Hardware stack levels required when called:    4
 34544 ;; This function calls:
 34545 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 34546 ;; This function is called by:
 34547 ;;		_USBDeviceTasks
 34548 ;; This function uses a non-reentrant model
 34549 ;;
 34550                           
 34551                           	psect	text121
 34552  0125B0                     __ptext121:
 34553                           	opt stack 0
 34554  0125B0                     _USBSuspend:
 34555                           	opt stack 12
 34556                           
 34557                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 34558                           
 34559                           ; BSR set to: 1
 34560                           ;incstack = 0
 34561  0125B0  010F               	movlb	15	; () banked
 34562  0125B2  8536               	bsf	54,2,b	;volatile
 34563                           
 34564                           ; BSR set to: 15
 34565                           ;usb_device.c: 2273: (UIR &= 0xEF);
 34566  0125B4  9862               	bcf	3938,4,c	;volatile
 34567                           
 34568                           ; BSR set to: 15
 34569                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 34570  0125B6  8265               	bsf	3941,1,c	;volatile
 34571                           
 34572                           ; BSR set to: 15
 34573                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 34574  0125B8  0E01               	movlw	1
 34575  0125BA  0101               	movlb	1	; () banked
 34576  0125BC  6F79               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 34577                           
 34578                           ; BSR set to: 1
 34579                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 34580  0125BE  0E00               	movlw	0
 34581  0125C0  6F73               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 34582                           
 34583                           ; BSR set to: 1
 34584                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 34585  0125C2  0E00               	movlw	0
 34586  0125C4  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 34587  0125C6  0E75               	movlw	117
 34588  0125C8  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 34589  0125CA  0E00               	movlw	0
 34590  0125CC  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 34591  0125CE  0E00               	movlw	0
 34592  0125D0  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 34593  0125D2  0E00               	movlw	0
 34594  0125D4  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 34595  0125D6  0E00               	movlw	0
 34596  0125D8  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 34597  0125DA  EC5E  F08A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 34598  0125DE  0012               	return		;funcret
 34599  0125E0                     __end_of_USBSuspend:
 34600                           	opt stack 0
 34601                           tosu	equ	0xFFF
 34602                           tosh	equ	0xFFE
 34603                           tosl	equ	0xFFD
 34604                           pclatu	equ	0xFFB
 34605                           pclath	equ	0xFFA
 34606                           tblptru	equ	0xFF8
 34607                           tblptrh	equ	0xFF7
 34608                           tblptrl	equ	0xFF6
 34609                           tablat	equ	0xFF5
 34610                           prodh	equ	0xFF4
 34611                           prodl	equ	0xFF3
 34612                           intcon	equ	0xFF2
 34613                           indf0	equ	0xFEF
 34614                           postinc0	equ	0xFEE
 34615                           fsr0h	equ	0xFEA
 34616                           fsr0l	equ	0xFE9
 34617                           wreg	equ	0xFE8
 34618                           indf1	equ	0xFE7
 34619                           postdec1	equ	0xFE5
 34620                           plusw1	equ	0xFE3
 34621                           fsr1h	equ	0xFE2
 34622                           fsr1l	equ	0xFE1
 34623                           indf2	equ	0xFDF
 34624                           postinc2	equ	0xFDE
 34625                           postdec2	equ	0xFDD
 34626                           plusw2	equ	0xFDB
 34627                           fsr2h	equ	0xFDA
 34628                           fsr2l	equ	0xFD9
 34629                           status	equ	0xFD8
 34630                           
 34631 ;; *************** function _USBStallHandler *****************
 34632 ;; Defined at:
 34633 ;;		line 2204 in file "usb_device.c"
 34634 ;; Parameters:    Size  Location     Type
 34635 ;;		None
 34636 ;; Auto vars:     Size  Location     Type
 34637 ;;		None
 34638 ;; Return value:  Size  Location     Type
 34639 ;;                  1    wreg      void 
 34640 ;; Registers used:
 34641 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34642 ;; Tracked objects:
 34643 ;;		On entry : 0/0
 34644 ;;		On exit  : 0/0
 34645 ;;		Unchanged: 0/0
 34646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34649 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34650 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34651 ;;Total ram usage:        1 bytes
 34652 ;; Hardware stack levels used:    1
 34653 ;; This function calls:
 34654 ;;		Nothing
 34655 ;; This function is called by:
 34656 ;;		_USBDeviceTasks
 34657 ;; This function uses a non-reentrant model
 34658 ;;
 34659                           
 34660                           	psect	text122
 34661  012226                     __ptext122:
 34662                           	opt stack 0
 34663  012226                     _USBStallHandler:
 34664                           	opt stack 16
 34665                           
 34666                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 34667                           
 34668                           ;incstack = 0
 34669  012226  010F               	movlb	15	; () banked
 34670  012228  A126               	btfss	38,0,b	;volatile
 34671  01222A  D01D               	goto	i2l307
 34672                           
 34673                           ; BSR set to: 15
 34674                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 34675  01222C  C01E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 34676  012230  C01F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 34677  012234  0E80               	movlw	128
 34678  012236  18DE               	xorwf	postinc2,w,c
 34679  012238  A4D8               	btfss	status,2,c
 34680  01223A  D014               	goto	i2l308
 34681                           
 34682                           ; BSR set to: 15
 34683  01223C  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 34684  012240  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 34685  012244  0E84               	movlw	132
 34686  012246  18DE               	xorwf	postinc2,w,c
 34687  012248  A4D8               	btfss	status,2,c
 34688  01224A  D00C               	goto	i2l308
 34689                           
 34690                           ; BSR set to: 15
 34691                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 34692  01224C  C01E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 34693  012250  C01F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 34694  012254  0E0C               	movlw	12
 34695  012256  6EDF               	movwf	indf2,c
 34696                           
 34697                           ; BSR set to: 15
 34698                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 34699  012258  C01E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 34700  01225C  C01F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 34701  012260  0E00               	movlw	0
 34702  012262  8EDB               	bsf	plusw2,7,c
 34703  012264                     i2l308:
 34704                           
 34705                           ; BSR set to: 15
 34706                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 34707                           
 34708                           ; BSR set to: 15
 34709  012264  9126               	bcf	38,0,b	;volatile
 34710  012266                     i2l307:
 34711                           
 34712                           ; BSR set to: 15
 34713                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 34714  012266  9A62               	bcf	3938,5,c	;volatile
 34715                           
 34716                           ; BSR set to: 15
 34717  012268  0012               	return		;funcret
 34718  01226A                     __end_of_USBStallHandler:
 34719                           	opt stack 0
 34720                           tosu	equ	0xFFF
 34721                           tosh	equ	0xFFE
 34722                           tosl	equ	0xFFD
 34723                           pclatu	equ	0xFFB
 34724                           pclath	equ	0xFFA
 34725                           tblptru	equ	0xFF8
 34726                           tblptrh	equ	0xFF7
 34727                           tblptrl	equ	0xFF6
 34728                           tablat	equ	0xFF5
 34729                           prodh	equ	0xFF4
 34730                           prodl	equ	0xFF3
 34731                           intcon	equ	0xFF2
 34732                           indf0	equ	0xFEF
 34733                           postinc0	equ	0xFEE
 34734                           fsr0h	equ	0xFEA
 34735                           fsr0l	equ	0xFE9
 34736                           wreg	equ	0xFE8
 34737                           indf1	equ	0xFE7
 34738                           postdec1	equ	0xFE5
 34739                           plusw1	equ	0xFE3
 34740                           fsr1h	equ	0xFE2
 34741                           fsr1l	equ	0xFE1
 34742                           indf2	equ	0xFDF
 34743                           postinc2	equ	0xFDE
 34744                           postdec2	equ	0xFDD
 34745                           plusw2	equ	0xFDB
 34746                           fsr2h	equ	0xFDA
 34747                           fsr2l	equ	0xFD9
 34748                           status	equ	0xFD8
 34749                           
 34750 ;; *************** function _USBIncrement1msInternalTimers *****************
 34751 ;; Defined at:
 34752 ;;		line 3027 in file "usb_device.c"
 34753 ;; Parameters:    Size  Location     Type
 34754 ;;		None
 34755 ;; Auto vars:     Size  Location     Type
 34756 ;;		None
 34757 ;; Return value:  Size  Location     Type
 34758 ;;                  1    wreg      void 
 34759 ;; Registers used:
 34760 ;;		wreg, status,2, status,0
 34761 ;; Tracked objects:
 34762 ;;		On entry : 0/0
 34763 ;;		On exit  : 0/0
 34764 ;;		Unchanged: 0/0
 34765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34770 ;;Total ram usage:        0 bytes
 34771 ;; Hardware stack levels used:    1
 34772 ;; This function calls:
 34773 ;;		Nothing
 34774 ;; This function is called by:
 34775 ;;		_USBDeviceTasks
 34776 ;; This function uses a non-reentrant model
 34777 ;;
 34778                           
 34779                           	psect	text123
 34780  0127C0                     __ptext123:
 34781                           	opt stack 0
 34782  0127C0                     _USBIncrement1msInternalTimers:
 34783                           	opt stack 16
 34784                           
 34785                           ;usb_device.c: 3035: USB1msTickCount++;
 34786                           
 34787                           ; BSR set to: 15
 34788                           ;incstack = 0
 34789  0127C0  0E01               	movlw	1
 34790  0127C2  0101               	movlb	1	; () banked
 34791  0127C4  274B               	addwf	_USB1msTickCount& (0+255),f,b	;volatile
 34792  0127C6  0E00               	movlw	0
 34793  0127C8  234C               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
 34794  0127CA  234D               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
 34795  0127CC  234E               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
 34796                           
 34797                           ; BSR set to: 1
 34798                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 34799  0127CE  5179               	movf	_USBBusIsSuspended& (0+255),w,b	;volatile
 34800  0127D0  A4D8               	btfss	status,2,c
 34801  0127D2  0012               	return	
 34802                           
 34803                           ; BSR set to: 1
 34804                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 34805  0127D4  2B73               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
 34806                           
 34807                           ; BSR set to: 1
 34808                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 34809  0127D6  5173               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
 34810  0127D8  A4D8               	btfss	status,2,c
 34811  0127DA  0012               	return	
 34812                           
 34813                           ; BSR set to: 1
 34814                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 34815  0127DC  6973               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 34816                           
 34817                           ; BSR set to: 1
 34818  0127DE  0012               	return	
 34819  0127E0                     __end_of_USBIncrement1msInternalTimers:
 34820                           	opt stack 0
 34821                           tosu	equ	0xFFF
 34822                           tosh	equ	0xFFE
 34823                           tosl	equ	0xFFD
 34824                           pclatu	equ	0xFFB
 34825                           pclath	equ	0xFFA
 34826                           tblptru	equ	0xFF8
 34827                           tblptrh	equ	0xFF7
 34828                           tblptrl	equ	0xFF6
 34829                           tablat	equ	0xFF5
 34830                           prodh	equ	0xFF4
 34831                           prodl	equ	0xFF3
 34832                           intcon	equ	0xFF2
 34833                           indf0	equ	0xFEF
 34834                           postinc0	equ	0xFEE
 34835                           fsr0h	equ	0xFEA
 34836                           fsr0l	equ	0xFE9
 34837                           wreg	equ	0xFE8
 34838                           indf1	equ	0xFE7
 34839                           postdec1	equ	0xFE5
 34840                           plusw1	equ	0xFE3
 34841                           fsr1h	equ	0xFE2
 34842                           fsr1l	equ	0xFE1
 34843                           indf2	equ	0xFDF
 34844                           postinc2	equ	0xFDE
 34845                           postdec2	equ	0xFDD
 34846                           plusw2	equ	0xFDB
 34847                           fsr2h	equ	0xFDA
 34848                           fsr2l	equ	0xFD9
 34849                           status	equ	0xFD8
 34850                           
 34851 ;; *************** function _USBCtrlEPService *****************
 34852 ;; Defined at:
 34853 ;;		line 2374 in file "usb_device.c"
 34854 ;; Parameters:    Size  Location     Type
 34855 ;;		None
 34856 ;; Auto vars:     Size  Location     Type
 34857 ;;		None
 34858 ;; Return value:  Size  Location     Type
 34859 ;;                  1    wreg      void 
 34860 ;; Registers used:
 34861 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 34862 ;; Tracked objects:
 34863 ;;		On entry : 0/0
 34864 ;;		On exit  : 0/0
 34865 ;;		Unchanged: 0/0
 34866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34869 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34870 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34871 ;;Total ram usage:        1 bytes
 34872 ;; Hardware stack levels used:    1
 34873 ;; Hardware stack levels required when called:    7
 34874 ;; This function calls:
 34875 ;;		_USBCtrlTrfInHandler
 34876 ;;		_USBCtrlTrfOutHandler
 34877 ;;		_USBCtrlTrfSetupHandler
 34878 ;;		i2_memcpy
 34879 ;; This function is called by:
 34880 ;;		_USBDeviceTasks
 34881 ;; This function uses a non-reentrant model
 34882 ;;
 34883                           
 34884                           	psect	text124
 34885  011272                     __ptext124:
 34886                           	opt stack 0
 34887  011272                     _USBCtrlEPService:
 34888                           	opt stack 9
 34889                           
 34890                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 34891                           
 34892                           ; BSR set to: 1
 34893                           ;incstack = 0
 34894  011272  0E2D               	movlw	45
 34895  011274  6E27               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 34896                           
 34897                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 34898  011276  C02C  F04B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 34899  01127A  0EFD               	movlw	253
 34900  01127C  164B               	andwf	??_USBCtrlEPService,f,c
 34901  01127E  A4D8               	btfss	status,2,c
 34902  011280  D03B               	goto	i2l321
 34903                           
 34904                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 34905  011282  C02C  F04B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 34906  011286  90D8               	bcf	status,0,c
 34907  011288  324B               	rrcf	??_USBCtrlEPService,f,c
 34908  01128A  0E3F               	movlw	63
 34909  01128C  164B               	andwf	??_USBCtrlEPService,f,c
 34910  01128E  504B               	movf	??_USBCtrlEPService,w,c
 34911  011290  0D04               	mullw	4
 34912  011292  0E00               	movlw	0
 34913  011294  24F3               	addwf	prodl,w,c
 34914  011296  6E1E               	movwf	_pBDTEntryEP0OutCurrent,c
 34915  011298  0E0D               	movlw	13
 34916  01129A  20F4               	addwfc	prodh,w,c
 34917  01129C  6E1F               	movwf	_pBDTEntryEP0OutCurrent+1,c
 34918                           
 34919                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 34920  01129E  C01E  F01C         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 34921  0112A2  C01F  F01D         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 34922                           
 34923                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 34924  0112A6  0E04               	movlw	4
 34925  0112A8  181C               	xorwf	_pBDTEntryEP0OutNext,w,c
 34926  0112AA  6E1C               	movwf	_pBDTEntryEP0OutNext,c
 34927  0112AC  501D               	movf	_pBDTEntryEP0OutNext+1,w,c
 34928  0112AE  6E1D               	movwf	_pBDTEntryEP0OutNext+1,c
 34929                           
 34930                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 34931  0112B0  C01E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 34932  0112B4  C01F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 34933  0112B8  30DF               	rrcf	indf2,w,c
 34934  0112BA  32E8               	rrcf	wreg,f,c
 34935  0112BC  0B0F               	andlw	15
 34936  0112BE  0A0D               	xorlw	13
 34937  0112C0  A4D8               	btfss	status,2,c
 34938  0112C2  D017               	goto	i2l322
 34939                           
 34940                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 34941  0112C4  0E30               	movlw	48
 34942  0112C6  6E2E               	movwf	i2memcpy@d1,c
 34943  0112C8  0E0D               	movlw	13
 34944  0112CA  6E2F               	movwf	i2memcpy@d1+1,c
 34945  0112CC  EE20 F002          	lfsr	2,2
 34946  0112D0  501E               	movf	_pBDTEntryEP0OutCurrent,w,c
 34947  0112D2  26D9               	addwf	fsr2l,f,c
 34948  0112D4  501F               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 34949  0112D6  22DA               	addwfc	fsr2h,f,c
 34950  0112D8  CFDE F030          	movff	postinc2,i2memcpy@s1
 34951  0112DC  CFDD F031          	movff	postdec2,i2memcpy@s1+1
 34952  0112E0  0E00               	movlw	0
 34953  0112E2  6E33               	movwf	i2memcpy@n+1,c
 34954  0112E4  0E08               	movlw	8
 34955  0112E6  6E32               	movwf	i2memcpy@n,c
 34956  0112E8  EC94  F08D         	call	i2_memcpy	;wreg free
 34957                           
 34958                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 34959  0112EC  EC16  F08A         	call	_USBCtrlTrfSetupHandler	;wreg free
 34960                           
 34961                           ;usb_device.c: 2411: }
 34962  0112F0  0012               	return	
 34963  0112F2                     i2l322:
 34964                           
 34965                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 34966  0112F2  EC65  F08D         	call	_USBCtrlTrfOutHandler	;wreg free
 34967                           
 34968                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 34969  0112F6  0012               	return	
 34970  0112F8                     i2l321:
 34971                           
 34972                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 34973  0112F8  502C               	movf	_USTATcopy,w,c	;volatile
 34974  0112FA  0BFD               	andlw	253
 34975  0112FC  0A04               	xorlw	4
 34976  0112FE  A4D8               	btfss	status,2,c
 34977  011300  0012               	return	
 34978                           
 34979                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 34980  011302  ECF0  F084         	call	_USBCtrlTrfInHandler	;wreg free
 34981  011306  0012               	return	
 34982  011308                     __end_of_USBCtrlEPService:
 34983                           	opt stack 0
 34984                           tosu	equ	0xFFF
 34985                           tosh	equ	0xFFE
 34986                           tosl	equ	0xFFD
 34987                           pclatu	equ	0xFFB
 34988                           pclath	equ	0xFFA
 34989                           tblptru	equ	0xFF8
 34990                           tblptrh	equ	0xFF7
 34991                           tblptrl	equ	0xFF6
 34992                           tablat	equ	0xFF5
 34993                           prodh	equ	0xFF4
 34994                           prodl	equ	0xFF3
 34995                           intcon	equ	0xFF2
 34996                           indf0	equ	0xFEF
 34997                           postinc0	equ	0xFEE
 34998                           fsr0h	equ	0xFEA
 34999                           fsr0l	equ	0xFE9
 35000                           wreg	equ	0xFE8
 35001                           indf1	equ	0xFE7
 35002                           postdec1	equ	0xFE5
 35003                           plusw1	equ	0xFE3
 35004                           fsr1h	equ	0xFE2
 35005                           fsr1l	equ	0xFE1
 35006                           indf2	equ	0xFDF
 35007                           postinc2	equ	0xFDE
 35008                           postdec2	equ	0xFDD
 35009                           plusw2	equ	0xFDB
 35010                           fsr2h	equ	0xFDA
 35011                           fsr2l	equ	0xFD9
 35012                           status	equ	0xFD8
 35013                           
 35014 ;; *************** function i2_memcpy *****************
 35015 ;; Defined at:
 35016 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 35017 ;; Parameters:    Size  Location     Type
 35018 ;;  d1              2    0[COMRAM] PTR void 
 35019 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 35020 ;;		 -> msd_buffer(512), SetupPkt(8), 
 35021 ;;  s1              2    2[COMRAM] PTR const void 
 35022 ;;		 -> flash_command_pagesize_528(4), flash_command_pagesize_512(4), STR_6(6), STR_5(9), 
 35023 ;;		 -> STR_4(7), STR_3(9), dc_manual(80), dc_zero(80), 
 35024 ;;		 -> STR_2(7), STR_1(9), dc_arc2(80), dc_arc1(80), 
 35025 ;;		 -> dc_divide2(80), dc_divide1(80), dc_setup2(80), dc_setup1(80), 
 35026 ;;		 -> dc_main(80), ReceivedDataBuffer(64), config(22), os(45), 
 35027 ;;		 -> inq_resp(36), CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 35028 ;;  n               2    4[COMRAM] unsigned int 
 35029 ;; Auto vars:     Size  Location     Type
 35030 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
 35031 ;;		 -> flash_command_pagesize_528(4), flash_command_pagesize_512(4), STR_6(6), STR_5(9), 
 35032 ;;		 -> STR_4(7), STR_3(9), dc_manual(80), dc_zero(80), 
 35033 ;;		 -> STR_2(7), STR_1(9), dc_arc2(80), dc_arc1(80), 
 35034 ;;		 -> dc_divide2(80), dc_divide1(80), dc_setup2(80), dc_setup1(80), 
 35035 ;;		 -> dc_main(80), ReceivedDataBuffer(64), config(22), os(45), 
 35036 ;;		 -> inq_resp(36), CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 35037 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
 35038 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 35039 ;;		 -> msd_buffer(512), SetupPkt(8), 
 35040 ;;  memcpy          1   10[COMRAM] unsigned char 
 35041 ;; Return value:  Size  Location     Type
 35042 ;;                  2    0[COMRAM] PTR void 
 35043 ;; Registers used:
 35044 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 35045 ;; Tracked objects:
 35046 ;;		On entry : 0/0
 35047 ;;		On exit  : 0/0
 35048 ;;		Unchanged: 0/0
 35049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35050 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35051 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35053 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35054 ;;Total ram usage:       11 bytes
 35055 ;; Hardware stack levels used:    1
 35056 ;; This function calls:
 35057 ;;		Nothing
 35058 ;; This function is called by:
 35059 ;;		_USBCtrlEPService
 35060 ;; This function uses a non-reentrant model
 35061 ;;
 35062                           
 35063                           	psect	text125
 35064  011B28                     __ptext125:
 35065                           	opt stack 0
 35066  011B28                     i2_memcpy:
 35067                           	opt stack 15
 35068                           
 35069                           ;incstack = 0
 35070  011B28  C030  F036         	movff	i2memcpy@s1,i2memcpy@s
 35071  011B2C  C031  F037         	movff	i2memcpy@s1+1,i2memcpy@s+1
 35072  011B30  C02E  F034         	movff	i2memcpy@d1,i2memcpy@d
 35073  011B34  C02F  F035         	movff	i2memcpy@d1+1,i2memcpy@d+1
 35074  011B38  D01C               	goto	i2l3354
 35075  011B3A                     i2l13660:
 35076  011B3A  C036  FFF6         	movff	i2memcpy@s,tblptrl
 35077  011B3E  C037  FFF7         	movff	i2memcpy@s+1,tblptrh
 35078  011B42  0E00               	movlw	low (__mediumconst shr (0+16))
 35079  011B44  6EF8               	movwf	tblptru,c
 35080  011B46  0E0E               	movlw	(high __ramtop+-1)
 35081  011B48  64F7               	cpfsgt	tblptrh,c
 35082  011B4A  D003               	bra	i2u1197_47
 35083  011B4C  0008               	tblrd		*
 35084  011B4E  50F5               	movf	tablat,w,c
 35085  011B50  D005               	bra	i2u1197_40
 35086  011B52                     i2u1197_47:
 35087  011B52  CFF6 FFE9          	movff	tblptrl,fsr0l
 35088  011B56  CFF7 FFEA          	movff	tblptrh,fsr0h
 35089  011B5A  50EF               	movf	indf0,w,c
 35090  011B5C                     i2u1197_40:
 35091  011B5C  6E38               	movwf	i2memcpy@tmp,c
 35092  011B5E  4A36               	infsnz	i2memcpy@s,f,c
 35093  011B60  2A37               	incf	i2memcpy@s+1,f,c
 35094  011B62  C034  FFD9         	movff	i2memcpy@d,fsr2l
 35095  011B66  C035  FFDA         	movff	i2memcpy@d+1,fsr2h
 35096  011B6A  C038  FFDF         	movff	i2memcpy@tmp,indf2
 35097  011B6E  4A34               	infsnz	i2memcpy@d,f,c
 35098  011B70  2A35               	incf	i2memcpy@d+1,f,c
 35099  011B72                     i2l3354:
 35100  011B72  0632               	decf	i2memcpy@n,f,c
 35101  011B74  A0D8               	btfss	status,0,c
 35102  011B76  0633               	decf	i2memcpy@n+1,f,c
 35103  011B78  2832               	incf	i2memcpy@n,w,c
 35104  011B7A  E1DF               	bnz	i2l13660
 35105  011B7C  2833               	incf	i2memcpy@n+1,w,c
 35106  011B7E  B4D8               	btfsc	status,2,c
 35107  011B80  0012               	return	
 35108  011B82  D7DB               	goto	i2l3355
 35109  011B84                     __end_ofi2_memcpy:
 35110                           	opt stack 0
 35111                           tosu	equ	0xFFF
 35112                           tosh	equ	0xFFE
 35113                           tosl	equ	0xFFD
 35114                           pclatu	equ	0xFFB
 35115                           pclath	equ	0xFFA
 35116                           tblptru	equ	0xFF8
 35117                           tblptrh	equ	0xFF7
 35118                           tblptrl	equ	0xFF6
 35119                           tablat	equ	0xFF5
 35120                           prodh	equ	0xFF4
 35121                           prodl	equ	0xFF3
 35122                           intcon	equ	0xFF2
 35123                           indf0	equ	0xFEF
 35124                           postinc0	equ	0xFEE
 35125                           fsr0h	equ	0xFEA
 35126                           fsr0l	equ	0xFE9
 35127                           wreg	equ	0xFE8
 35128                           indf1	equ	0xFE7
 35129                           postdec1	equ	0xFE5
 35130                           plusw1	equ	0xFE3
 35131                           fsr1h	equ	0xFE2
 35132                           fsr1l	equ	0xFE1
 35133                           indf2	equ	0xFDF
 35134                           postinc2	equ	0xFDE
 35135                           postdec2	equ	0xFDD
 35136                           plusw2	equ	0xFDB
 35137                           fsr2h	equ	0xFDA
 35138                           fsr2l	equ	0xFD9
 35139                           status	equ	0xFD8
 35140                           
 35141 ;; *************** function _USBCtrlTrfSetupHandler *****************
 35142 ;; Defined at:
 35143 ;;		line 2467 in file "usb_device.c"
 35144 ;; Parameters:    Size  Location     Type
 35145 ;;		None
 35146 ;; Auto vars:     Size  Location     Type
 35147 ;;		None
 35148 ;; Return value:  Size  Location     Type
 35149 ;;                  1    wreg      void 
 35150 ;; Registers used:
 35151 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35152 ;; Tracked objects:
 35153 ;;		On entry : 0/0
 35154 ;;		On exit  : 0/0
 35155 ;;		Unchanged: 0/0
 35156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35161 ;;Total ram usage:        0 bytes
 35162 ;; Hardware stack levels used:    1
 35163 ;; Hardware stack levels required when called:    6
 35164 ;; This function calls:
 35165 ;;		_USBCheckStdRequest
 35166 ;;		_USBCtrlEPServiceComplete
 35167 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 35168 ;; This function is called by:
 35169 ;;		_USBCtrlEPService
 35170 ;; This function uses a non-reentrant model
 35171 ;;
 35172                           
 35173                           	psect	text126
 35174  01142C                     __ptext126:
 35175                           	opt stack 0
 35176  01142C                     _USBCtrlTrfSetupHandler:
 35177                           	opt stack 9
 35178                           
 35179                           ;usb_device.c: 2472: shortPacketStatus = 0;
 35180                           
 35181                           ;incstack = 0
 35182  01142C  0E00               	movlw	0
 35183  01142E  6E2A               	movwf	_shortPacketStatus,c	;volatile
 35184                           
 35185                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 35186  011430  0E00               	movlw	0
 35187  011432  6E26               	movwf	_USBDeferStatusStagePacket,c	;volatile
 35188                           
 35189                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 35190  011434  0E00               	movlw	0
 35191  011436  0101               	movlb	1	; () banked
 35192  011438  6F75               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 35193                           
 35194                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 35195  01143A  0E00               	movlw	0
 35196  01143C  6F74               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 35197                           
 35198                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 35199  01143E  0E00               	movlw	0
 35200  011440  6F78               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 35201                           
 35202                           ;usb_device.c: 2477: controlTransferState = 0;
 35203  011442  0E00               	movlw	0
 35204  011444  6E29               	movwf	_controlTransferState,c	;volatile
 35205                           
 35206                           ; BSR set to: 1
 35207                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 35208  011446  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 35209  01144A  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 35210  01144E  0E7F               	movlw	127
 35211  011450  16DF               	andwf	indf2,f,c
 35212                           
 35213                           ; BSR set to: 1
 35214                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 35215  011452  0E04               	movlw	4
 35216  011454  1810               	xorwf	_pBDTEntryIn,w,c
 35217  011456  6E10               	movwf	_pBDTEntryIn,c
 35218  011458  5011               	movf	_pBDTEntryIn+1,w,c
 35219  01145A  6E11               	movwf	_pBDTEntryIn+1,c
 35220                           
 35221                           ; BSR set to: 1
 35222                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 35223  01145C  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 35224  011460  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 35225  011464  0E7F               	movlw	127
 35226  011466  16DF               	andwf	indf2,f,c
 35227                           
 35228                           ; BSR set to: 1
 35229                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 35230  011468  0E04               	movlw	4
 35231  01146A  1810               	xorwf	_pBDTEntryIn,w,c
 35232  01146C  6E10               	movwf	_pBDTEntryIn,c
 35233  01146E  5011               	movf	_pBDTEntryIn+1,w,c
 35234  011470  6E11               	movwf	_pBDTEntryIn+1,c
 35235                           
 35236                           ; BSR set to: 1
 35237                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 35238  011472  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 35239  011476  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 35240  01147A  0E7F               	movlw	127
 35241  01147C  16DF               	andwf	indf2,f,c
 35242                           
 35243                           ; BSR set to: 1
 35244                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 35245  01147E  0E00               	movlw	0
 35246  011480  6E0D               	movwf	_inPipes+3,c	;volatile
 35247                           
 35248                           ; BSR set to: 1
 35249                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 35250  011482  0E00               	movlw	0
 35251  011484  6E0F               	movwf	_inPipes+5,c	;volatile
 35252  011486  0E00               	movlw	0
 35253  011488  6E0E               	movwf	_inPipes+4,c	;volatile
 35254                           
 35255                           ; BSR set to: 1
 35256                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 35257  01148A  0E00               	movlw	0
 35258  01148C  6E04               	movwf	_outPipes+3,c	;volatile
 35259                           
 35260                           ; BSR set to: 1
 35261                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 35262  01148E  0E00               	movlw	0
 35263  011490  6E06               	movwf	_outPipes+5,c	;volatile
 35264  011492  0E00               	movlw	0
 35265  011494  6E05               	movwf	_outPipes+4,c	;volatile
 35266                           
 35267                           ; BSR set to: 1
 35268                           ;usb_device.c: 2502: USBCheckStdRequest();
 35269  011496  ECBF  F081         	call	_USBCheckStdRequest	;wreg free
 35270                           
 35271                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 35272  01149A  0E00               	movlw	0
 35273  01149C  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 35274  01149E  0E03               	movlw	3
 35275  0114A0  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 35276  0114A2  0E00               	movlw	0
 35277  0114A4  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 35278  0114A6  0E00               	movlw	0
 35279  0114A8  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 35280  0114AA  0E00               	movlw	0
 35281  0114AC  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 35282  0114AE  0E00               	movlw	0
 35283  0114B0  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 35284  0114B2  EC5E  F08A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 35285                           
 35286                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 35287  0114B6  EC0E  F07F         	call	_USBCtrlEPServiceComplete	;wreg free
 35288  0114BA  0012               	return		;funcret
 35289  0114BC                     __end_of_USBCtrlTrfSetupHandler:
 35290                           	opt stack 0
 35291                           tosu	equ	0xFFF
 35292                           tosh	equ	0xFFE
 35293                           tosl	equ	0xFFD
 35294                           pclatu	equ	0xFFB
 35295                           pclath	equ	0xFFA
 35296                           tblptru	equ	0xFF8
 35297                           tblptrh	equ	0xFF7
 35298                           tblptrl	equ	0xFF6
 35299                           tablat	equ	0xFF5
 35300                           prodh	equ	0xFF4
 35301                           prodl	equ	0xFF3
 35302                           intcon	equ	0xFF2
 35303                           indf0	equ	0xFEF
 35304                           postinc0	equ	0xFEE
 35305                           fsr0h	equ	0xFEA
 35306                           fsr0l	equ	0xFE9
 35307                           wreg	equ	0xFE8
 35308                           indf1	equ	0xFE7
 35309                           postdec1	equ	0xFE5
 35310                           plusw1	equ	0xFE3
 35311                           fsr1h	equ	0xFE2
 35312                           fsr1l	equ	0xFE1
 35313                           indf2	equ	0xFDF
 35314                           postinc2	equ	0xFDE
 35315                           postdec2	equ	0xFDD
 35316                           plusw2	equ	0xFDB
 35317                           fsr2h	equ	0xFDA
 35318                           fsr2l	equ	0xFD9
 35319                           status	equ	0xFD8
 35320                           
 35321 ;; *************** function _USBCtrlEPServiceComplete *****************
 35322 ;; Defined at:
 35323 ;;		line 1618 in file "usb_device.c"
 35324 ;; Parameters:    Size  Location     Type
 35325 ;;		None
 35326 ;; Auto vars:     Size  Location     Type
 35327 ;;		None
 35328 ;; Return value:  Size  Location     Type
 35329 ;;                  1    wreg      void 
 35330 ;; Registers used:
 35331 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 35332 ;; Tracked objects:
 35333 ;;		On entry : 0/0
 35334 ;;		On exit  : 0/0
 35335 ;;		Unchanged: 0/0
 35336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35341 ;;Total ram usage:        0 bytes
 35342 ;; Hardware stack levels used:    1
 35343 ;; Hardware stack levels required when called:    2
 35344 ;; This function calls:
 35345 ;;		_USBCtrlEPAllowDataStage
 35346 ;;		_USBCtrlEPAllowStatusStage
 35347 ;; This function is called by:
 35348 ;;		_USBCtrlTrfSetupHandler
 35349 ;; This function uses a non-reentrant model
 35350 ;;
 35351                           
 35352                           	psect	text127
 35353  00FE1C                     __ptext127:
 35354                           	opt stack 0
 35355  00FE1C                     _USBCtrlEPServiceComplete:
 35356                           	opt stack 12
 35357                           
 35358                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 35359                           
 35360                           ;incstack = 0
 35361  00FE1C  9865               	bcf	3941,4,c	;volatile
 35362                           
 35363                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 35364  00FE1E  BE0D               	btfsc	_inPipes+3,7,c	;volatile
 35365  00FE20  D03A               	goto	i2l231
 35366                           
 35367                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 35368  00FE22  AE04               	btfss	_outPipes+3,7,c	;volatile
 35369  00FE24  D00D               	goto	i2l232
 35370                           
 35371                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 35372  00FE26  0E02               	movlw	2
 35373  00FE28  6E29               	movwf	_controlTransferState,c	;volatile
 35374                           
 35375                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 35376  00FE2A  0101               	movlb	1	; () banked
 35377  00FE2C  5174               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 35378  00FE2E  B4D8               	btfsc	status,2,c
 35379                           
 35380                           ; BSR set to: 1
 35381                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 35382  00FE30  ECED  F088         	call	_USBCtrlEPAllowDataStage	;wreg free
 35383                           
 35384                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 35385  00FE34  0E00               	movlw	0
 35386  00FE36  0101               	movlb	1	; () banked
 35387  00FE38  6F76               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 35388                           
 35389                           ; BSR set to: 1
 35390                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 35391  00FE3A  0E00               	movlw	0
 35392  00FE3C  6F77               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 35393                           
 35394                           ;usb_device.c: 1654: }
 35395  00FE3E  0012               	return	
 35396  00FE40                     i2l232:
 35397                           
 35398                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 35399                           
 35400                           ; BSR set to: 1
 35401  00FE40  EE20 F001          	lfsr	2,1
 35402  00FE44  501C               	movf	_pBDTEntryEP0OutNext,w,c
 35403  00FE46  26D9               	addwf	fsr2l,f,c
 35404  00FE48  501D               	movf	_pBDTEntryEP0OutNext+1,w,c
 35405  00FE4A  22DA               	addwfc	fsr2h,f,c
 35406  00FE4C  0E08               	movlw	8
 35407  00FE4E  6EDF               	movwf	indf2,c
 35408                           
 35409                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 35410  00FE50  EE20 F002          	lfsr	2,2
 35411  00FE54  501C               	movf	_pBDTEntryEP0OutNext,w,c
 35412  00FE56  26D9               	addwf	fsr2l,f,c
 35413  00FE58  501D               	movf	_pBDTEntryEP0OutNext+1,w,c
 35414  00FE5A  22DA               	addwfc	fsr2h,f,c
 35415  00FE5C  0E30               	movlw	48
 35416  00FE5E  6EDE               	movwf	postinc2,c
 35417  00FE60  0E0D               	movlw	13
 35418  00FE62  6EDD               	movwf	postdec2,c
 35419                           
 35420                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 35421  00FE64  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 35422  00FE68  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 35423  00FE6C  0E0C               	movlw	12
 35424  00FE6E  6EDF               	movwf	indf2,c
 35425                           
 35426                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 35427  00FE70  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 35428  00FE74  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 35429  00FE78  0E00               	movlw	0
 35430  00FE7A  8EDB               	bsf	plusw2,7,c
 35431                           
 35432                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 35433  00FE7C  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 35434  00FE80  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 35435  00FE84  0E04               	movlw	4
 35436  00FE86  6EDF               	movwf	indf2,c
 35437                           
 35438                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 35439  00FE88  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 35440  00FE8C  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 35441  00FE90  0E00               	movlw	0
 35442  00FE92  8EDB               	bsf	plusw2,7,c
 35443                           
 35444                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 35445  00FE94  0012               	return	
 35446  00FE96                     i2l231:
 35447                           
 35448                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 35449  00FE96  010D               	movlb	13	; () banked
 35450  00FE98  AF30               	btfss	48,7,b	;volatile
 35451  00FE9A  D012               	goto	i2l236
 35452                           
 35453                           ; BSR set to: 13
 35454                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 35455  00FE9C  0E01               	movlw	1
 35456  00FE9E  6E29               	movwf	_controlTransferState,c	;volatile
 35457                           
 35458                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 35459  00FEA0  0101               	movlb	1	; () banked
 35460  00FEA2  5175               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 35461  00FEA4  B4D8               	btfsc	status,2,c
 35462                           
 35463                           ; BSR set to: 1
 35464                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 35465  00FEA6  ECED  F088         	call	_USBCtrlEPAllowDataStage	;wreg free
 35466                           
 35467                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 35468  00FEAA  0E00               	movlw	0
 35469  00FEAC  0101               	movlb	1	; () banked
 35470  00FEAE  6F76               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 35471                           
 35472                           ; BSR set to: 1
 35473                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 35474  00FEB0  0E00               	movlw	0
 35475  00FEB2  6F77               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 35476                           
 35477                           ; BSR set to: 1
 35478                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 35479  00FEB4  5026               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 35480  00FEB6  A4D8               	btfss	status,2,c
 35481  00FEB8  0012               	return	
 35482                           
 35483                           ; BSR set to: 1
 35484                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 35485  00FEBA  EC2F  F084         	call	_USBCtrlEPAllowStatusStage	;wreg free
 35486                           
 35487                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 35488  00FEBE  0012               	return	
 35489  00FEC0                     i2l236:
 35490                           
 35491                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 35492  00FEC0  0E02               	movlw	2
 35493  00FEC2  6E29               	movwf	_controlTransferState,c	;volatile
 35494                           
 35495                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 35496  00FEC4  EE20 F001          	lfsr	2,1
 35497  00FEC8  501C               	movf	_pBDTEntryEP0OutNext,w,c
 35498  00FECA  26D9               	addwf	fsr2l,f,c
 35499  00FECC  501D               	movf	_pBDTEntryEP0OutNext+1,w,c
 35500  00FECE  22DA               	addwfc	fsr2h,f,c
 35501  00FED0  0E08               	movlw	8
 35502  00FED2  6EDF               	movwf	indf2,c
 35503                           
 35504                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 35505  00FED4  EE20 F002          	lfsr	2,2
 35506  00FED8  501C               	movf	_pBDTEntryEP0OutNext,w,c
 35507  00FEDA  26D9               	addwf	fsr2l,f,c
 35508  00FEDC  501D               	movf	_pBDTEntryEP0OutNext+1,w,c
 35509  00FEDE  22DA               	addwfc	fsr2h,f,c
 35510  00FEE0  0E30               	movlw	48
 35511  00FEE2  6EDE               	movwf	postinc2,c
 35512  00FEE4  0E0D               	movlw	13
 35513  00FEE6  6EDD               	movwf	postdec2,c
 35514                           
 35515                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 35516  00FEE8  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 35517  00FEEC  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 35518  00FEF0  0E04               	movlw	4
 35519  00FEF2  6EDF               	movwf	indf2,c
 35520                           
 35521                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 35522  00FEF4  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 35523  00FEF8  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 35524  00FEFC  0E00               	movlw	0
 35525  00FEFE  8EDB               	bsf	plusw2,7,c
 35526                           
 35527                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 35528  00FF00  0E00               	movlw	0
 35529  00FF02  0101               	movlb	1	; () banked
 35530  00FF04  6F76               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 35531                           
 35532                           ; BSR set to: 1
 35533                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 35534  00FF06  0E00               	movlw	0
 35535  00FF08  6F77               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 35536                           
 35537                           ; BSR set to: 1
 35538                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 35539  00FF0A  5026               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 35540  00FF0C  A4D8               	btfss	status,2,c
 35541  00FF0E  0012               	return	
 35542                           
 35543                           ; BSR set to: 1
 35544                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 35545  00FF10  EC2F  F084         	call	_USBCtrlEPAllowStatusStage	;wreg free
 35546  00FF14  0012               	return	
 35547  00FF16                     __end_of_USBCtrlEPServiceComplete:
 35548                           	opt stack 0
 35549                           tosu	equ	0xFFF
 35550                           tosh	equ	0xFFE
 35551                           tosl	equ	0xFFD
 35552                           pclatu	equ	0xFFB
 35553                           pclath	equ	0xFFA
 35554                           tblptru	equ	0xFF8
 35555                           tblptrh	equ	0xFF7
 35556                           tblptrl	equ	0xFF6
 35557                           tablat	equ	0xFF5
 35558                           prodh	equ	0xFF4
 35559                           prodl	equ	0xFF3
 35560                           intcon	equ	0xFF2
 35561                           indf0	equ	0xFEF
 35562                           postinc0	equ	0xFEE
 35563                           fsr0h	equ	0xFEA
 35564                           fsr0l	equ	0xFE9
 35565                           wreg	equ	0xFE8
 35566                           indf1	equ	0xFE7
 35567                           postdec1	equ	0xFE5
 35568                           plusw1	equ	0xFE3
 35569                           fsr1h	equ	0xFE2
 35570                           fsr1l	equ	0xFE1
 35571                           indf2	equ	0xFDF
 35572                           postinc2	equ	0xFDE
 35573                           postdec2	equ	0xFDD
 35574                           plusw2	equ	0xFDB
 35575                           fsr2h	equ	0xFDA
 35576                           fsr2l	equ	0xFD9
 35577                           status	equ	0xFD8
 35578                           
 35579 ;; *************** function _USBCtrlEPAllowDataStage *****************
 35580 ;; Defined at:
 35581 ;;		line 1490 in file "usb_device.c"
 35582 ;; Parameters:    Size  Location     Type
 35583 ;;		None
 35584 ;; Auto vars:     Size  Location     Type
 35585 ;;		None
 35586 ;; Return value:  Size  Location     Type
 35587 ;;                  1    wreg      void 
 35588 ;; Registers used:
 35589 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 35590 ;; Tracked objects:
 35591 ;;		On entry : 0/0
 35592 ;;		On exit  : 0/0
 35593 ;;		Unchanged: 0/0
 35594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35599 ;;Total ram usage:        0 bytes
 35600 ;; Hardware stack levels used:    1
 35601 ;; Hardware stack levels required when called:    1
 35602 ;; This function calls:
 35603 ;;		_USBCtrlTrfTxService
 35604 ;; This function is called by:
 35605 ;;		_USBCtrlEPServiceComplete
 35606 ;; This function uses a non-reentrant model
 35607 ;;
 35608                           
 35609                           	psect	text128
 35610  0111DA                     __ptext128:
 35611                           	opt stack 0
 35612  0111DA                     _USBCtrlEPAllowDataStage:
 35613                           	opt stack 12
 35614                           
 35615                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 35616                           
 35617                           ;incstack = 0
 35618  0111DA  0E00               	movlw	0
 35619  0111DC  0101               	movlb	1	; () banked
 35620  0111DE  6F75               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 35621                           
 35622                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 35623  0111E0  0E00               	movlw	0
 35624  0111E2  6F74               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 35625                           
 35626                           ; BSR set to: 1
 35627                           ;usb_device.c: 1495: if(controlTransferState == 2)
 35628  0111E4  0E02               	movlw	2
 35629  0111E6  1829               	xorwf	_controlTransferState,w,c	;volatile
 35630  0111E8  A4D8               	btfss	status,2,c
 35631  0111EA  D01F               	goto	i2l220
 35632                           
 35633                           ; BSR set to: 1
 35634                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 35635  0111EC  EE20 F001          	lfsr	2,1
 35636  0111F0  501C               	movf	_pBDTEntryEP0OutNext,w,c
 35637  0111F2  26D9               	addwf	fsr2l,f,c
 35638  0111F4  501D               	movf	_pBDTEntryEP0OutNext+1,w,c
 35639  0111F6  22DA               	addwfc	fsr2h,f,c
 35640  0111F8  0E08               	movlw	8
 35641  0111FA  6EDF               	movwf	indf2,c
 35642                           
 35643                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 35644  0111FC  EE20 F002          	lfsr	2,2
 35645  011200  501C               	movf	_pBDTEntryEP0OutNext,w,c
 35646  011202  26D9               	addwf	fsr2l,f,c
 35647  011204  501D               	movf	_pBDTEntryEP0OutNext+1,w,c
 35648  011206  22DA               	addwfc	fsr2h,f,c
 35649  011208  0E38               	movlw	56
 35650  01120A  6EDE               	movwf	postinc2,c
 35651  01120C  0E0D               	movlw	13
 35652  01120E  6EDD               	movwf	postdec2,c
 35653                           
 35654                           ; BSR set to: 1
 35655                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 35656  011210  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 35657  011214  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 35658  011218  0E48               	movlw	72
 35659  01121A  6EDF               	movwf	indf2,c
 35660                           
 35661                           ; BSR set to: 1
 35662                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 35663  01121C  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 35664  011220  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 35665  011224  0E00               	movlw	0
 35666  011226  8EDB               	bsf	plusw2,7,c
 35667                           
 35668                           ;usb_device.c: 1502: }
 35669  011228  0012               	return	
 35670  01122A                     i2l220:
 35671                           
 35672                           ; BSR set to: 1
 35673                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 35674                           
 35675                           ; BSR set to: 1
 35676  01122A  500E               	movf	_inPipes+4,w,c	;volatile
 35677  01122C  010D               	movlb	13	; () banked
 35678  01122E  5D36               	subwf	54,w,b	;volatile
 35679  011230  500F               	movf	_inPipes+5,w,c	;volatile
 35680  011232  5937               	subwfb	55,w,b	;volatile
 35681  011234  B0D8               	btfsc	status,0,c
 35682  011236  D004               	goto	i2l222
 35683                           
 35684                           ; BSR set to: 13
 35685                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 35686  011238  CD36 F00E          	movff	3382,_inPipes+4	;volatile
 35687  01123C  CD37 F00F          	movff	3383,_inPipes+5	;volatile
 35688  011240                     i2l222:
 35689                           
 35690                           ; BSR set to: 13
 35691                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 35692                           
 35693                           ; BSR set to: 13
 35694  011240  ECFB  F082         	call	_USBCtrlTrfTxService	;wreg free
 35695                           
 35696                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 35697  011244  EE20 F002          	lfsr	2,2
 35698  011248  5010               	movf	_pBDTEntryIn,w,c
 35699  01124A  26D9               	addwf	fsr2l,f,c
 35700  01124C  5011               	movf	_pBDTEntryIn+1,w,c
 35701  01124E  22DA               	addwfc	fsr2h,f,c
 35702  011250  0E38               	movlw	56
 35703  011252  6EDE               	movwf	postinc2,c
 35704  011254  0E0D               	movlw	13
 35705  011256  6EDD               	movwf	postdec2,c
 35706                           
 35707                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 35708  011258  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 35709  01125C  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 35710  011260  0E48               	movlw	72
 35711  011262  6EDF               	movwf	indf2,c
 35712                           
 35713                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 35714  011264  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 35715  011268  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 35716  01126C  0E00               	movlw	0
 35717  01126E  8EDB               	bsf	plusw2,7,c
 35718  011270  0012               	return	
 35719  011272                     __end_of_USBCtrlEPAllowDataStage:
 35720                           	opt stack 0
 35721                           tosu	equ	0xFFF
 35722                           tosh	equ	0xFFE
 35723                           tosl	equ	0xFFD
 35724                           pclatu	equ	0xFFB
 35725                           pclath	equ	0xFFA
 35726                           tblptru	equ	0xFF8
 35727                           tblptrh	equ	0xFF7
 35728                           tblptrl	equ	0xFF6
 35729                           tablat	equ	0xFF5
 35730                           prodh	equ	0xFF4
 35731                           prodl	equ	0xFF3
 35732                           intcon	equ	0xFF2
 35733                           indf0	equ	0xFEF
 35734                           postinc0	equ	0xFEE
 35735                           fsr0h	equ	0xFEA
 35736                           fsr0l	equ	0xFE9
 35737                           wreg	equ	0xFE8
 35738                           indf1	equ	0xFE7
 35739                           postdec1	equ	0xFE5
 35740                           plusw1	equ	0xFE3
 35741                           fsr1h	equ	0xFE2
 35742                           fsr1l	equ	0xFE1
 35743                           indf2	equ	0xFDF
 35744                           postinc2	equ	0xFDE
 35745                           postdec2	equ	0xFDD
 35746                           plusw2	equ	0xFDB
 35747                           fsr2h	equ	0xFDA
 35748                           fsr2l	equ	0xFD9
 35749                           status	equ	0xFD8
 35750                           
 35751 ;; *************** function _USBCheckStdRequest *****************
 35752 ;; Defined at:
 35753 ;;		line 2688 in file "usb_device.c"
 35754 ;; Parameters:    Size  Location     Type
 35755 ;;		None
 35756 ;; Auto vars:     Size  Location     Type
 35757 ;;		None
 35758 ;; Return value:  Size  Location     Type
 35759 ;;                  1    wreg      void 
 35760 ;; Registers used:
 35761 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35762 ;; Tracked objects:
 35763 ;;		On entry : 0/0
 35764 ;;		On exit  : 0/0
 35765 ;;		Unchanged: 0/0
 35766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35771 ;;Total ram usage:        0 bytes
 35772 ;; Hardware stack levels used:    1
 35773 ;; Hardware stack levels required when called:    5
 35774 ;; This function calls:
 35775 ;;		_USBStdFeatureReqHandler
 35776 ;;		_USBStdGetDscHandler
 35777 ;;		_USBStdGetStatusHandler
 35778 ;;		_USBStdSetCfgHandler
 35779 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 35780 ;; This function is called by:
 35781 ;;		_USBCtrlTrfSetupHandler
 35782 ;; This function uses a non-reentrant model
 35783 ;;
 35784                           
 35785                           	psect	text129
 35786  01037E                     __ptext129:
 35787                           	opt stack 0
 35788  01037E                     _USBCheckStdRequest:
 35789                           	opt stack 9
 35790                           
 35791                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 35792                           
 35793                           ;incstack = 0
 35794  01037E  010D               	movlb	13	; () banked
 35795  010380  3930               	swapf	48,w,b	;volatile
 35796  010382  32E8               	rrcf	wreg,f,c
 35797  010384  0B03               	andlw	3
 35798  010386  0900               	iorlw	0
 35799  010388  A4D8               	btfss	status,2,c
 35800  01038A  0012               	return	
 35801  01038C  D042               	goto	i2l355
 35802  01038E                     i2l356:
 35803                           
 35804                           ; BSR set to: 13
 35805                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 35806  01038E  8E0D               	bsf	_inPipes+3,7,c	;volatile
 35807                           
 35808                           ; BSR set to: 13
 35809                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 35810  010390  0E08               	movlw	8
 35811  010392  6E2B               	movwf	_USBDeviceState,c	;volatile
 35812                           
 35813                           ;usb_device.c: 2698: break;
 35814  010394  0012               	return	
 35815  010396                     
 35816                           ; BSR set to: 13
 35817                           ;usb_device.c: 2700: USBStdGetDscHandler();
 35818                           
 35819                           ; BSR set to: 13
 35820  010396  ECB1  F078         	call	_USBStdGetDscHandler	;wreg free
 35821                           
 35822                           ;usb_device.c: 2701: break;
 35823  01039A  0012               	return	
 35824  01039C                     
 35825                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 35826  01039C  EC51  F081         	call	_USBStdSetCfgHandler	;wreg free
 35827                           
 35828                           ;usb_device.c: 2704: break;
 35829  0103A0  0012               	return	
 35830  0103A2                     
 35831                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 35832  0103A2  0E2D               	movlw	low _USBActiveConfiguration
 35833  0103A4  6E0A               	movwf	_inPipes,c	;volatile
 35834  0103A6  0E00               	movlw	high _USBActiveConfiguration
 35835  0103A8  6E0B               	movwf	_inPipes+1,c	;volatile
 35836                           
 35837                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 35838  0103AA  800D               	bsf	_inPipes+3,0,c	;volatile
 35839                           
 35840                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 35841  0103AC  0E01               	movlw	1
 35842  0103AE  6E0E               	movwf	_inPipes+4,c	;volatile
 35843                           
 35844                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 35845  0103B0  8E0D               	bsf	_inPipes+3,7,c	;volatile
 35846                           
 35847                           ;usb_device.c: 2710: break;
 35848  0103B2  0012               	return	
 35849  0103B4                     
 35850                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 35851  0103B4  EC04  F088         	call	_USBStdGetStatusHandler	;wreg free
 35852                           
 35853                           ;usb_device.c: 2713: break;
 35854  0103B8  0012               	return	
 35855  0103BA                     
 35856                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 35857  0103BA  ECD3  F068         	call	_USBStdFeatureReqHandler	;wreg free
 35858                           
 35859                           ;usb_device.c: 2717: break;
 35860  0103BE  0012               	return	
 35861  0103C0                     
 35862                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 35863  0103C0  010D               	movlb	13	; () banked
 35864  0103C2  5134               	movf	52,w,b	;volatile
 35865  0103C4  0D01               	mullw	1
 35866  0103C6  0E96               	movlw	low _USBAlternateInterface
 35867  0103C8  24F3               	addwf	prodl,w,c
 35868  0103CA  6E0A               	movwf	_inPipes,c	;volatile
 35869  0103CC  0E01               	movlw	high _USBAlternateInterface
 35870  0103CE  20F4               	addwfc	prodh,w,c
 35871  0103D0  6E0B               	movwf	_inPipes+1,c	;volatile
 35872                           
 35873                           ; BSR set to: 13
 35874                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 35875  0103D2  800D               	bsf	_inPipes+3,0,c	;volatile
 35876                           
 35877                           ; BSR set to: 13
 35878                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 35879  0103D4  0E01               	movlw	1
 35880  0103D6  6E0E               	movwf	_inPipes+4,c	;volatile
 35881                           
 35882                           ; BSR set to: 13
 35883                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 35884  0103D8  8E0D               	bsf	_inPipes+3,7,c	;volatile
 35885                           
 35886                           ;usb_device.c: 2723: break;
 35887  0103DA  0012               	return	
 35888  0103DC                     i2l365:
 35889                           
 35890                           ; BSR set to: 13
 35891                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 35892  0103DC  8E0D               	bsf	_inPipes+3,7,c	;volatile
 35893                           
 35894                           ; BSR set to: 13
 35895                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 35896  0103DE  5134               	movf	52,w,b	;volatile
 35897  0103E0  0D01               	mullw	1
 35898  0103E2  0E96               	movlw	low _USBAlternateInterface
 35899  0103E4  24F3               	addwf	prodl,w,c
 35900  0103E6  6ED9               	movwf	fsr2l,c
 35901  0103E8  0E01               	movlw	high _USBAlternateInterface
 35902  0103EA  20F4               	addwfc	prodh,w,c
 35903  0103EC  6EDA               	movwf	fsr2h,c
 35904  0103EE  CD32 FFDF          	movff	3378,indf2	;volatile
 35905                           
 35906                           ;usb_device.c: 2727: break;
 35907  0103F2  0012               	return	
 35908  0103F4                     
 35909                           ; BSR set to: 13
 35910                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 35911                           
 35912                           ; BSR set to: 13
 35913  0103F4  0E00               	movlw	0
 35914  0103F6  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 35915  0103F8  0E02               	movlw	2
 35916  0103FA  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 35917  0103FC  0E00               	movlw	0
 35918  0103FE  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 35919  010400  0E00               	movlw	0
 35920  010402  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 35921  010404  0E00               	movlw	0
 35922  010406  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 35923  010408  0E00               	movlw	0
 35924  01040A  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 35925  01040C  EC5E  F08A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 35926                           
 35927                           ;usb_device.c: 2734: }
 35928                           
 35929                           ;usb_device.c: 2733: break;
 35930                           
 35931                           ;usb_device.c: 2732: default:
 35932                           
 35933                           ;usb_device.c: 2731: case 12:
 35934                           
 35935                           ;usb_device.c: 2730: break;
 35936  010410  0012               	return	
 35937  010412                     i2l355:
 35938  010412  010D               	movlb	13	; () banked
 35939  010414  5131               	movf	49,w,b	;volatile
 35940                           
 35941                           ; Switch size 1, requested type "space"
 35942                           ; Number of cases is 11, Range of values is 0 to 12
 35943                           ; switch strategies available:
 35944                           ; Name         Instructions Cycles
 35945                           ; simple_byte           34    18 (average)
 35946                           ;	Chosen strategy is simple_byte
 35947  010416  0A00               	xorlw	0	; case 0
 35948  010418  B4D8               	btfsc	status,2,c
 35949  01041A  D7CC               	goto	i2l361
 35950  01041C  0A01               	xorlw	1	; case 1
 35951  01041E  B4D8               	btfsc	status,2,c
 35952  010420  D7CC               	goto	i2l362
 35953  010422  0A02               	xorlw	2	; case 3
 35954  010424  B4D8               	btfsc	status,2,c
 35955  010426  D7C9               	goto	i2l362
 35956  010428  0A06               	xorlw	6	; case 5
 35957  01042A  B4D8               	btfsc	status,2,c
 35958  01042C  D7B0               	goto	i2l356
 35959  01042E  0A03               	xorlw	3	; case 6
 35960  010430  B4D8               	btfsc	status,2,c
 35961  010432  D7B1               	goto	i2l358
 35962  010434  0A01               	xorlw	1	; case 7
 35963  010436  B4D8               	btfsc	status,2,c
 35964  010438  D7DD               	goto	i2l366
 35965  01043A  0A0F               	xorlw	15	; case 8
 35966  01043C  B4D8               	btfsc	status,2,c
 35967  01043E  D7B1               	goto	i2l360
 35968  010440  0A01               	xorlw	1	; case 9
 35969  010442  B4D8               	btfsc	status,2,c
 35970  010444  D7AB               	goto	i2l359
 35971  010446  0A03               	xorlw	3	; case 10
 35972  010448  B4D8               	btfsc	status,2,c
 35973  01044A  D7BA               	goto	i2l364
 35974  01044C  0A01               	xorlw	1	; case 11
 35975  01044E  B4D8               	btfsc	status,2,c
 35976  010450  D7C5               	goto	i2l365
 35977  010452  0A07               	xorlw	7	; case 12
 35978  010454  0012               	return	
 35979  010456                     __end_of_USBCheckStdRequest:
 35980                           	opt stack 0
 35981                           tosu	equ	0xFFF
 35982                           tosh	equ	0xFFE
 35983                           tosl	equ	0xFFD
 35984                           pclatu	equ	0xFFB
 35985                           pclath	equ	0xFFA
 35986                           tblptru	equ	0xFF8
 35987                           tblptrh	equ	0xFF7
 35988                           tblptrl	equ	0xFF6
 35989                           tablat	equ	0xFF5
 35990                           prodh	equ	0xFF4
 35991                           prodl	equ	0xFF3
 35992                           intcon	equ	0xFF2
 35993                           indf0	equ	0xFEF
 35994                           postinc0	equ	0xFEE
 35995                           fsr0h	equ	0xFEA
 35996                           fsr0l	equ	0xFE9
 35997                           wreg	equ	0xFE8
 35998                           indf1	equ	0xFE7
 35999                           postdec1	equ	0xFE5
 36000                           plusw1	equ	0xFE3
 36001                           fsr1h	equ	0xFE2
 36002                           fsr1l	equ	0xFE1
 36003                           indf2	equ	0xFDF
 36004                           postinc2	equ	0xFDE
 36005                           postdec2	equ	0xFDD
 36006                           plusw2	equ	0xFDB
 36007                           fsr2h	equ	0xFDA
 36008                           fsr2l	equ	0xFD9
 36009                           status	equ	0xFD8
 36010                           
 36011 ;; *************** function _USBStdSetCfgHandler *****************
 36012 ;; Defined at:
 36013 ;;		line 1970 in file "usb_device.c"
 36014 ;; Parameters:    Size  Location     Type
 36015 ;;		None
 36016 ;; Auto vars:     Size  Location     Type
 36017 ;;  i               1   23[COMRAM] unsigned char 
 36018 ;; Return value:  Size  Location     Type
 36019 ;;                  1    wreg      void 
 36020 ;; Registers used:
 36021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 36022 ;; Tracked objects:
 36023 ;;		On entry : 0/0
 36024 ;;		On exit  : 0/0
 36025 ;;		Unchanged: 0/0
 36026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36028 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36030 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36031 ;;Total ram usage:        1 bytes
 36032 ;; Hardware stack levels used:    1
 36033 ;; Hardware stack levels required when called:    4
 36034 ;; This function calls:
 36035 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 36036 ;;		i2_memset
 36037 ;; This function is called by:
 36038 ;;		_USBCheckStdRequest
 36039 ;; This function uses a non-reentrant model
 36040 ;;
 36041                           
 36042                           	psect	text130
 36043  0102A2                     __ptext130:
 36044                           	opt stack 0
 36045  0102A2                     _USBStdSetCfgHandler:
 36046                           	opt stack 9
 36047                           
 36048                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 36049                           
 36050                           ;incstack = 0
 36051  0102A2  8E0D               	bsf	_inPipes+3,7,c	;volatile
 36052                           
 36053                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 36054  0102A4  0E27               	movlw	39
 36055  0102A6  6E2E               	movwf	i2memset@p1,c
 36056  0102A8  0E0F               	movlw	15
 36057  0102AA  6E2F               	movwf	i2memset@p1+1,c
 36058  0102AC  0E00               	movlw	0
 36059  0102AE  6E31               	movwf	i2memset@c+1,c
 36060  0102B0  0E00               	movlw	0
 36061  0102B2  6E30               	movwf	i2memset@c,c
 36062  0102B4  0E00               	movlw	0
 36063  0102B6  6E33               	movwf	i2memset@n+1,c
 36064  0102B8  0E02               	movlw	2
 36065  0102BA  6E32               	movwf	i2memset@n,c
 36066  0102BC  EC34  F093         	call	i2_memset	;wreg free
 36067                           
 36068                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 36069  0102C0  0E00               	movlw	0
 36070  0102C2  6E2E               	movwf	i2memset@p1,c
 36071  0102C4  0E0D               	movlw	13
 36072  0102C6  6E2F               	movwf	i2memset@p1+1,c
 36073  0102C8  0E00               	movlw	0
 36074  0102CA  6E31               	movwf	i2memset@c+1,c
 36075  0102CC  0E00               	movlw	0
 36076  0102CE  6E30               	movwf	i2memset@c,c
 36077  0102D0  0E00               	movlw	0
 36078  0102D2  6E33               	movwf	i2memset@n+1,c
 36079  0102D4  0E30               	movlw	48
 36080  0102D6  6E32               	movwf	i2memset@n,c
 36081  0102D8  EC34  F093         	call	i2_memset	;wreg free
 36082                           
 36083                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 36084  0102DC  8C65               	bsf	3941,6,c	;volatile
 36085                           
 36086                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 36087  0102DE  0E00               	movlw	0
 36088  0102E0  6E45               	movwf	USBStdSetCfgHandler@i,c
 36089  0102E2                     i2l17642:
 36090  0102E2  0E02               	movlw	2
 36091  0102E4  6445               	cpfsgt	USBStdSetCfgHandler@i,c
 36092  0102E6  D001               	goto	i2l272
 36093  0102E8  D016               	goto	i2u1712_40
 36094  0102EA                     i2l272:
 36095                           
 36096                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 36097  0102EA  5045               	movf	USBStdSetCfgHandler@i,w,c
 36098  0102EC  0D01               	mullw	1
 36099  0102EE  0E58               	movlw	low _ep_data_in
 36100  0102F0  24F3               	addwf	prodl,w,c
 36101  0102F2  6ED9               	movwf	fsr2l,c
 36102  0102F4  0E01               	movlw	high _ep_data_in
 36103  0102F6  20F4               	addwfc	prodh,w,c
 36104  0102F8  6EDA               	movwf	fsr2h,c
 36105  0102FA  0E00               	movlw	0
 36106  0102FC  6EDF               	movwf	indf2,c
 36107                           
 36108                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 36109  0102FE  5045               	movf	USBStdSetCfgHandler@i,w,c
 36110  010300  0D01               	mullw	1
 36111  010302  0E55               	movlw	low _ep_data_out
 36112  010304  24F3               	addwf	prodl,w,c
 36113  010306  6ED9               	movwf	fsr2l,c
 36114  010308  0E01               	movlw	high _ep_data_out
 36115  01030A  20F4               	addwfc	prodh,w,c
 36116  01030C  6EDA               	movwf	fsr2h,c
 36117  01030E  0E00               	movlw	0
 36118  010310  6EDF               	movwf	indf2,c
 36119  010312  2A45               	incf	USBStdSetCfgHandler@i,f,c
 36120  010314  D7E6               	goto	i2l17642
 36121  010316                     i2u1712_40:
 36122                           
 36123                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 36124  010316  0E96               	movlw	low _USBAlternateInterface
 36125  010318  6E2E               	movwf	i2memset@p1,c
 36126  01031A  0E01               	movlw	high _USBAlternateInterface
 36127  01031C  6E2F               	movwf	i2memset@p1+1,c
 36128  01031E  0E00               	movlw	0
 36129  010320  6E31               	movwf	i2memset@c+1,c
 36130  010322  0E00               	movlw	0
 36131  010324  6E30               	movwf	i2memset@c,c
 36132  010326  0E00               	movlw	0
 36133  010328  6E33               	movwf	i2memset@n+1,c
 36134  01032A  0E02               	movlw	2
 36135  01032C  6E32               	movwf	i2memset@n,c
 36136  01032E  EC34  F093         	call	i2_memset	;wreg free
 36137                           
 36138                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 36139  010332  9C65               	bcf	3941,6,c	;volatile
 36140                           
 36141                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 36142  010334  0E08               	movlw	8
 36143  010336  6E10               	movwf	_pBDTEntryIn,c
 36144  010338  0E0D               	movlw	13
 36145  01033A  6E11               	movwf	_pBDTEntryIn+1,c
 36146                           
 36147                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 36148  01033C  0E00               	movlw	0
 36149  01033E  6E1E               	movwf	_pBDTEntryEP0OutCurrent,c
 36150  010340  0E0D               	movlw	13
 36151  010342  6E1F               	movwf	_pBDTEntryEP0OutCurrent+1,c
 36152                           
 36153                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 36154  010344  C01E  F01C         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 36155  010348  C01F  F01D         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 36156                           
 36157                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 36158  01034C  CD32 F02D          	movff	3378,_USBActiveConfiguration	;volatile
 36159                           
 36160                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 36161  010350  502D               	movf	_USBActiveConfiguration,w,c	;volatile
 36162  010352  A4D8               	btfss	status,2,c
 36163  010354  D003               	goto	i2l274
 36164                           
 36165                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 36166  010356  0E10               	movlw	16
 36167  010358  6E2B               	movwf	_USBDeviceState,c	;volatile
 36168                           
 36169                           ;usb_device.c: 2015: }
 36170  01035A  0012               	return	
 36171  01035C                     i2l274:
 36172                           
 36173                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 36174  01035C  0E00               	movlw	0
 36175  01035E  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 36176  010360  0E01               	movlw	1
 36177  010362  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 36178  010364  0E2D               	movlw	low _USBActiveConfiguration
 36179  010366  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 36180  010368  0E00               	movlw	high _USBActiveConfiguration
 36181  01036A  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 36182  01036C  0E00               	movlw	0
 36183  01036E  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 36184  010370  0E01               	movlw	1
 36185  010372  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 36186  010374  EC5E  F08A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 36187                           
 36188                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 36189  010378  0E20               	movlw	32
 36190  01037A  6E2B               	movwf	_USBDeviceState,c	;volatile
 36191  01037C  0012               	return	
 36192  01037E                     __end_of_USBStdSetCfgHandler:
 36193                           	opt stack 0
 36194                           tosu	equ	0xFFF
 36195                           tosh	equ	0xFFE
 36196                           tosl	equ	0xFFD
 36197                           pclatu	equ	0xFFB
 36198                           pclath	equ	0xFFA
 36199                           tblptru	equ	0xFF8
 36200                           tblptrh	equ	0xFF7
 36201                           tblptrl	equ	0xFF6
 36202                           tablat	equ	0xFF5
 36203                           prodh	equ	0xFF4
 36204                           prodl	equ	0xFF3
 36205                           intcon	equ	0xFF2
 36206                           indf0	equ	0xFEF
 36207                           postinc0	equ	0xFEE
 36208                           fsr0h	equ	0xFEA
 36209                           fsr0l	equ	0xFE9
 36210                           wreg	equ	0xFE8
 36211                           indf1	equ	0xFE7
 36212                           postdec1	equ	0xFE5
 36213                           plusw1	equ	0xFE3
 36214                           fsr1h	equ	0xFE2
 36215                           fsr1l	equ	0xFE1
 36216                           indf2	equ	0xFDF
 36217                           postinc2	equ	0xFDE
 36218                           postdec2	equ	0xFDD
 36219                           plusw2	equ	0xFDB
 36220                           fsr2h	equ	0xFDA
 36221                           fsr2l	equ	0xFD9
 36222                           status	equ	0xFD8
 36223                           
 36224 ;; *************** function i2_memset *****************
 36225 ;; Defined at:
 36226 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 36227 ;; Parameters:    Size  Location     Type
 36228 ;;  p1              2    0[COMRAM] PTR void 
 36229 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 36230 ;;  c               2    2[COMRAM] int 
 36231 ;;  n               2    4[COMRAM] unsigned int 
 36232 ;; Auto vars:     Size  Location     Type
 36233 ;;  memset          2    6[COMRAM] PTR unsigned char 
 36234 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 36235 ;; Return value:  Size  Location     Type
 36236 ;;                  2    0[COMRAM] PTR void 
 36237 ;; Registers used:
 36238 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36239 ;; Tracked objects:
 36240 ;;		On entry : 0/0
 36241 ;;		On exit  : 0/0
 36242 ;;		Unchanged: 0/0
 36243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36244 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36245 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36247 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36248 ;;Total ram usage:        8 bytes
 36249 ;; Hardware stack levels used:    1
 36250 ;; This function calls:
 36251 ;;		Nothing
 36252 ;; This function is called by:
 36253 ;;		_USBStdSetCfgHandler
 36254 ;;		i2_USBDeviceInit
 36255 ;; This function uses a non-reentrant model
 36256 ;;
 36257                           
 36258                           	psect	text131
 36259  012668                     __ptext131:
 36260                           	opt stack 0
 36261  012668                     i2_memset:
 36262                           	opt stack 15
 36263                           
 36264                           ;incstack = 0
 36265  012668  C02E  F034         	movff	i2memset@p1,i2memset@p
 36266  01266C  C02F  F035         	movff	i2memset@p1+1,i2memset@p+1
 36267  012670  D008               	goto	i2l3360
 36268  012672                     i2l11266:
 36269  012672  C034  FFD9         	movff	i2memset@p,fsr2l
 36270  012676  C035  FFDA         	movff	i2memset@p+1,fsr2h
 36271  01267A  C030  FFDF         	movff	i2memset@c,indf2
 36272  01267E  4A34               	infsnz	i2memset@p,f,c
 36273  012680  2A35               	incf	i2memset@p+1,f,c
 36274  012682                     i2l3360:
 36275  012682  0632               	decf	i2memset@n,f,c
 36276  012684  A0D8               	btfss	status,0,c
 36277  012686  0633               	decf	i2memset@n+1,f,c
 36278  012688  2832               	incf	i2memset@n,w,c
 36279  01268A  E1F3               	bnz	i2l11266
 36280  01268C  2833               	incf	i2memset@n+1,w,c
 36281  01268E  B4D8               	btfsc	status,2,c
 36282  012690  0012               	return	
 36283  012692  D7EF               	goto	i2l3361
 36284  012694                     __end_ofi2_memset:
 36285                           	opt stack 0
 36286                           tosu	equ	0xFFF
 36287                           tosh	equ	0xFFE
 36288                           tosl	equ	0xFFD
 36289                           pclatu	equ	0xFFB
 36290                           pclath	equ	0xFFA
 36291                           tblptru	equ	0xFF8
 36292                           tblptrh	equ	0xFF7
 36293                           tblptrl	equ	0xFF6
 36294                           tablat	equ	0xFF5
 36295                           prodh	equ	0xFF4
 36296                           prodl	equ	0xFF3
 36297                           intcon	equ	0xFF2
 36298                           indf0	equ	0xFEF
 36299                           postinc0	equ	0xFEE
 36300                           fsr0h	equ	0xFEA
 36301                           fsr0l	equ	0xFE9
 36302                           wreg	equ	0xFE8
 36303                           indf1	equ	0xFE7
 36304                           postdec1	equ	0xFE5
 36305                           plusw1	equ	0xFE3
 36306                           fsr1h	equ	0xFE2
 36307                           fsr1l	equ	0xFE1
 36308                           indf2	equ	0xFDF
 36309                           postinc2	equ	0xFDE
 36310                           postdec2	equ	0xFDD
 36311                           plusw2	equ	0xFDB
 36312                           fsr2h	equ	0xFDA
 36313                           fsr2l	equ	0xFD9
 36314                           status	equ	0xFD8
 36315                           
 36316 ;; *************** function _USBStdGetStatusHandler *****************
 36317 ;; Defined at:
 36318 ;;		line 2131 in file "usb_device.c"
 36319 ;; Parameters:    Size  Location     Type
 36320 ;;		None
 36321 ;; Auto vars:     Size  Location     Type
 36322 ;;  p               2    1[COMRAM] PTR struct __BDT
 36323 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 36324 ;; Return value:  Size  Location     Type
 36325 ;;                  1    wreg      void 
 36326 ;; Registers used:
 36327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 36328 ;; Tracked objects:
 36329 ;;		On entry : 0/0
 36330 ;;		On exit  : 0/0
 36331 ;;		Unchanged: 0/0
 36332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36334 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36335 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36336 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36337 ;;Total ram usage:        3 bytes
 36338 ;; Hardware stack levels used:    1
 36339 ;; This function calls:
 36340 ;;		Nothing
 36341 ;; This function is called by:
 36342 ;;		_USBCheckStdRequest
 36343 ;; This function uses a non-reentrant model
 36344 ;;
 36345                           
 36346                           	psect	text132
 36347  011008                     __ptext132:
 36348                           	opt stack 0
 36349  011008                     _USBStdGetStatusHandler:
 36350                           	opt stack 13
 36351                           
 36352                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 36353                           
 36354                           ;incstack = 0
 36355  011008  0E00               	movlw	0
 36356  01100A  010D               	movlb	13	; () banked
 36357  01100C  6F38               	movwf	56,b	;volatile
 36358                           
 36359                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 36360  01100E  0E00               	movlw	0
 36361  011010  6F39               	movwf	57,b	;volatile
 36362                           
 36363                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 36364  011012  D035               	goto	i2l293
 36365  011014                     i2l294:
 36366                           
 36367                           ; BSR set to: 13
 36368                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 36369  011014  8E0D               	bsf	_inPipes+3,7,c	;volatile
 36370                           
 36371                           ; BSR set to: 13
 36372                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 36373                           
 36374                           ; BSR set to: 13
 36375                           
 36376                           ; BSR set to: 13
 36377                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 36378                           
 36379                           ;usb_device.c: 2144: if(0 == 1)
 36380  011016  0101               	movlb	1	; () banked
 36381  011018  057A               	decf	_RemoteWakeup& (0+255),w,b	;volatile
 36382  01101A  A4D8               	btfss	status,2,c
 36383  01101C  D03B               	goto	i2l297
 36384                           
 36385                           ; BSR set to: 1
 36386                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 36387  01101E  010D               	movlb	13	; () banked
 36388  011020  8338               	bsf	56,1,b	;volatile
 36389                           
 36390                           ; BSR set to: 13
 36391                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 36392  011022  D038               	goto	i2l297
 36393  011024                     i2l298:
 36394                           
 36395                           ; BSR set to: 13
 36396                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 36397  011024  8E0D               	bsf	_inPipes+3,7,c	;volatile
 36398                           
 36399                           ;usb_device.c: 2156: break;
 36400  011026  D036               	goto	i2l297
 36401  011028                     i2l299:
 36402                           
 36403                           ; BSR set to: 13
 36404                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 36405  011028  8E0D               	bsf	_inPipes+3,7,c	;volatile
 36406                           
 36407                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 36408  01102A  BF34               	btfsc	52,7,b	;volatile
 36409  01102C  D00A               	goto	i2l300
 36410                           
 36411                           ; BSR set to: 13
 36412                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 36413  01102E  5134               	movf	52,w,b	;volatile
 36414  011030  0B0F               	andlw	15
 36415  011032  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 36416  011034  502E               	movf	??_USBStdGetStatusHandler,w,c
 36417  011036  0D02               	mullw	2
 36418  011038  0E31               	movlw	low _pBDTEntryOut
 36419  01103A  24F3               	addwf	prodl,w,c
 36420  01103C  6ED9               	movwf	fsr2l,c
 36421  01103E  0E01               	movlw	high _pBDTEntryOut
 36422  011040  D009               	goto	L64
 36423  011042                     i2l300:
 36424                           
 36425                           ; BSR set to: 13
 36426                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 36427                           
 36428                           ; BSR set to: 13
 36429  011042  5134               	movf	52,w,b	;volatile
 36430  011044  0B0F               	andlw	15
 36431  011046  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 36432  011048  502E               	movf	??_USBStdGetStatusHandler,w,c
 36433  01104A  0D02               	mullw	2
 36434  01104C  0E10               	movlw	low _pBDTEntryIn
 36435  01104E  24F3               	addwf	prodl,w,c
 36436  011050  6ED9               	movwf	fsr2l,c
 36437  011052  0E00               	movlw	high _pBDTEntryIn
 36438  011054                     L64:
 36439  011054  20F4               	addwfc	prodh,w,c
 36440  011056  6EDA               	movwf	fsr2h,c
 36441  011058  CFDE F02F          	movff	postinc2,USBStdGetStatusHandler@p
 36442  01105C  CFDD F030          	movff	postdec2,USBStdGetStatusHandler@p+1
 36443                           
 36444                           ; BSR set to: 13
 36445                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 36446                           
 36447                           ; BSR set to: 13
 36448  011060  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 36449  011064  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 36450  011068  AEDF               	btfss	indf2,7,c
 36451  01106A  D014               	goto	i2l297
 36452                           
 36453                           ; BSR set to: 13
 36454  01106C  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 36455  011070  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 36456  011074  A4DF               	btfss	indf2,2,c
 36457  011076  D00E               	goto	i2l297
 36458                           
 36459                           ; BSR set to: 13
 36460                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 36461  011078  0E01               	movlw	1
 36462  01107A  6F38               	movwf	56,b	;volatile
 36463                           
 36464                           ; BSR set to: 13
 36465                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 36466                           
 36467                           ; BSR set to: 13
 36468                           ;usb_device.c: 2176: break;
 36469  01107C  D00B               	goto	i2l297
 36470  01107E                     i2l293:
 36471                           
 36472                           ; BSR set to: 13
 36473                           
 36474                           ; BSR set to: 13
 36475  01107E  5130               	movf	48,w,b	;volatile
 36476  011080  0B1F               	andlw	31
 36477                           
 36478                           ; Switch size 1, requested type "space"
 36479                           ; Number of cases is 3, Range of values is 0 to 2
 36480                           ; switch strategies available:
 36481                           ; Name         Instructions Cycles
 36482                           ; simple_byte           10     6 (average)
 36483                           ;	Chosen strategy is simple_byte
 36484  011082  0A00               	xorlw	0	; case 0
 36485  011084  B4D8               	btfsc	status,2,c
 36486  011086  D7C6               	goto	i2l294
 36487  011088  0A01               	xorlw	1	; case 1
 36488  01108A  B4D8               	btfsc	status,2,c
 36489  01108C  D7CB               	goto	i2l298
 36490  01108E  0A03               	xorlw	3	; case 2
 36491  011090  B4D8               	btfsc	status,2,c
 36492  011092  D7CA               	goto	i2l299
 36493  011094                     i2l297:
 36494                           
 36495                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 36496  011094  AE0D               	btfss	_inPipes+3,7,c	;volatile
 36497  011096  0012               	return	
 36498                           
 36499                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 36500  011098  0E38               	movlw	56
 36501  01109A  6E0A               	movwf	_inPipes,c	;volatile
 36502  01109C  0E0D               	movlw	13
 36503  01109E  6E0B               	movwf	_inPipes+1,c	;volatile
 36504                           
 36505                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 36506  0110A0  800D               	bsf	_inPipes+3,0,c	;volatile
 36507                           
 36508                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 36509  0110A2  0E02               	movlw	2
 36510  0110A4  6E0E               	movwf	_inPipes+4,c	;volatile
 36511  0110A6  0012               	return	
 36512  0110A8                     __end_of_USBStdGetStatusHandler:
 36513                           	opt stack 0
 36514                           tosu	equ	0xFFF
 36515                           tosh	equ	0xFFE
 36516                           tosl	equ	0xFFD
 36517                           pclatu	equ	0xFFB
 36518                           pclath	equ	0xFFA
 36519                           tblptru	equ	0xFF8
 36520                           tblptrh	equ	0xFF7
 36521                           tblptrl	equ	0xFF6
 36522                           tablat	equ	0xFF5
 36523                           prodh	equ	0xFF4
 36524                           prodl	equ	0xFF3
 36525                           intcon	equ	0xFF2
 36526                           indf0	equ	0xFEF
 36527                           postinc0	equ	0xFEE
 36528                           fsr0h	equ	0xFEA
 36529                           fsr0l	equ	0xFE9
 36530                           wreg	equ	0xFE8
 36531                           indf1	equ	0xFE7
 36532                           postdec1	equ	0xFE5
 36533                           plusw1	equ	0xFE3
 36534                           fsr1h	equ	0xFE2
 36535                           fsr1l	equ	0xFE1
 36536                           indf2	equ	0xFDF
 36537                           postinc2	equ	0xFDE
 36538                           postdec2	equ	0xFDD
 36539                           plusw2	equ	0xFDB
 36540                           fsr2h	equ	0xFDA
 36541                           fsr2l	equ	0xFD9
 36542                           status	equ	0xFD8
 36543                           
 36544 ;; *************** function _USBStdGetDscHandler *****************
 36545 ;; Defined at:
 36546 ;;		line 2045 in file "usb_device.c"
 36547 ;; Parameters:    Size  Location     Type
 36548 ;;		None
 36549 ;; Auto vars:     Size  Location     Type
 36550 ;;		None
 36551 ;; Return value:  Size  Location     Type
 36552 ;;                  1    wreg      void 
 36553 ;; Registers used:
 36554 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 36555 ;; Tracked objects:
 36556 ;;		On entry : 0/0
 36557 ;;		On exit  : 0/0
 36558 ;;		Unchanged: 0/0
 36559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36562 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36563 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36564 ;;Total ram usage:        2 bytes
 36565 ;; Hardware stack levels used:    1
 36566 ;; This function calls:
 36567 ;;		Nothing
 36568 ;; This function is called by:
 36569 ;;		_USBCheckStdRequest
 36570 ;; This function uses a non-reentrant model
 36571 ;;
 36572                           
 36573                           	psect	text133
 36574  00F162                     __ptext133:
 36575                           	opt stack 0
 36576  00F162                     _USBStdGetDscHandler:
 36577                           	opt stack 13
 36578                           
 36579                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 36580                           
 36581                           ;incstack = 0
 36582  00F162  0E80               	movlw	128
 36583  00F164  010D               	movlb	13	; () banked
 36584  00F166  1930               	xorwf	48,w,b	;volatile
 36585  00F168  A4D8               	btfss	status,2,c
 36586  00F16A  0012               	return	
 36587                           
 36588                           ; BSR set to: 13
 36589                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 36590  00F16C  0EC0               	movlw	192
 36591  00F16E  6E0D               	movwf	_inPipes+3,c	;volatile
 36592                           
 36593                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 36594  00F170  D082               	goto	i2l280
 36595  00F172                     
 36596                           ; BSR set to: 13
 36597                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 36598                           
 36599                           ; BSR set to: 13
 36600  00F172  0EBB               	movlw	low _device_dsc
 36601  00F174  6E0A               	movwf	_inPipes,c	;volatile
 36602  00F176  0EA1               	movlw	high _device_dsc
 36603  00F178  6E0B               	movwf	_inPipes+1,c	;volatile
 36604                           
 36605                           ; BSR set to: 13
 36606                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 36607  00F17A  0E00               	movlw	0
 36608  00F17C  6E0F               	movwf	_inPipes+5,c	;volatile
 36609  00F17E  0E12               	movlw	18
 36610  00F180  6E0E               	movwf	_inPipes+4,c	;volatile
 36611                           
 36612                           ;usb_device.c: 2060: break;
 36613  00F182  0012               	return	
 36614  00F184                     
 36615                           ; BSR set to: 13
 36616                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 36617                           
 36618                           ; BSR set to: 13
 36619  00F184  5132               	movf	50,w,b	;volatile
 36620  00F186  A4D8               	btfss	status,2,c
 36621  00F188  D042               	goto	i2l284
 36622                           
 36623                           ; BSR set to: 13
 36624                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 36625  00F18A  5132               	movf	50,w,b	;volatile
 36626  00F18C  0D02               	mullw	2
 36627  00F18E  0EEC               	movlw	low _USB_CD_Ptr
 36628  00F190  24F3               	addwf	prodl,w,c
 36629  00F192  6EF6               	movwf	tblptrl,c
 36630  00F194  0E9D               	movlw	high _USB_CD_Ptr
 36631  00F196  20F4               	addwfc	prodh,w,c
 36632  00F198  6EF7               	movwf	tblptrh,c
 36633  00F19A                     	if	1	;There are 3 active tblptr bytes
 36634  00F19A  6AF8               	clrf	tblptru,c
 36635  00F19C  0E00               	movlw	low (__mediumconst shr (0+16))
 36636  00F19E  22F8               	addwfc	tblptru,f,c
 36637  00F1A0                     	endif
 36638  00F1A0  0009               	tblrd		*+
 36639  00F1A2  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 36640  00F1A6  000A               	tblrd		*-
 36641  00F1A8  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 36642                           
 36643                           ; BSR set to: 13
 36644                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 36645  00F1AC  0E02               	movlw	2
 36646  00F1AE  240A               	addwf	_inPipes,w,c	;volatile
 36647  00F1B0  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 36648  00F1B2  0E00               	movlw	0
 36649  00F1B4  200B               	addwfc	_inPipes+1,w,c	;volatile
 36650  00F1B6  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 36651  00F1B8  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 36652  00F1BC  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 36653  00F1C0  0E00               	movlw	low (__mediumconst shr (0+16))
 36654  00F1C2  6EF8               	movwf	tblptru,c
 36655  00F1C4  0E0E               	movlw	(high __ramtop+-1)
 36656  00F1C6  64F7               	cpfsgt	tblptrh,c
 36657  00F1C8  D003               	bra	i2u954_47
 36658  00F1CA  0008               	tblrd		*
 36659  00F1CC  50F5               	movf	tablat,w,c
 36660  00F1CE  D005               	bra	i2u954_40
 36661  00F1D0                     i2u954_47:
 36662  00F1D0  CFF6 FFE9          	movff	tblptrl,fsr0l
 36663  00F1D4  CFF7 FFEA          	movff	tblptrh,fsr0h
 36664  00F1D8  50EF               	movf	indf0,w,c
 36665  00F1DA                     i2u954_40:
 36666  00F1DA  6E0E               	movwf	_inPipes+4,c	;volatile
 36667                           
 36668                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 36669  00F1DC  0E03               	movlw	3
 36670  00F1DE  240A               	addwf	_inPipes,w,c	;volatile
 36671  00F1E0  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 36672  00F1E2  0E00               	movlw	0
 36673  00F1E4  200B               	addwfc	_inPipes+1,w,c	;volatile
 36674  00F1E6  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 36675  00F1E8  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 36676  00F1EC  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 36677  00F1F0  0E00               	movlw	low (__mediumconst shr (0+16))
 36678  00F1F2  6EF8               	movwf	tblptru,c
 36679  00F1F4  0E0E               	movlw	(high __ramtop+-1)
 36680  00F1F6  64F7               	cpfsgt	tblptrh,c
 36681  00F1F8  D003               	bra	i2u955_47
 36682  00F1FA  0008               	tblrd		*
 36683  00F1FC  50F5               	movf	tablat,w,c
 36684  00F1FE  D005               	bra	i2u955_40
 36685  00F200                     i2u955_47:
 36686  00F200  CFF6 FFE9          	movff	tblptrl,fsr0l
 36687  00F204  CFF7 FFEA          	movff	tblptrh,fsr0h
 36688  00F208  50EF               	movf	indf0,w,c
 36689  00F20A                     i2u955_40:
 36690  00F20A  6E0F               	movwf	_inPipes+5,c	;volatile
 36691                           
 36692                           ;usb_device.c: 2078: }
 36693  00F20C  0012               	return	
 36694  00F20E                     i2l284:
 36695                           
 36696                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 36697  00F20E  0E00               	movlw	0
 36698  00F210  6E0D               	movwf	_inPipes+3,c	;volatile
 36699                           
 36700                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 36701  00F212  0012               	return	
 36702  00F214                     
 36703                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 36704  00F214  0E04               	movlw	4
 36705  00F216  010D               	movlb	13	; () banked
 36706  00F218  6132               	cpfslt	50,b	;volatile
 36707  00F21A  D027               	goto	i2l287
 36708                           
 36709                           ; BSR set to: 13
 36710                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 36711  00F21C  5132               	movf	50,w,b	;volatile
 36712  00F21E  0D02               	mullw	2
 36713  00F220  0EE4               	movlw	low _USB_SD_Ptr
 36714  00F222  24F3               	addwf	prodl,w,c
 36715  00F224  6EF6               	movwf	tblptrl,c
 36716  00F226  0E9D               	movlw	high _USB_SD_Ptr
 36717  00F228  20F4               	addwfc	prodh,w,c
 36718  00F22A  6EF7               	movwf	tblptrh,c
 36719  00F22C                     	if	1	;There are 3 active tblptr bytes
 36720  00F22C  6AF8               	clrf	tblptru,c
 36721  00F22E  0E00               	movlw	low (__mediumconst shr (0+16))
 36722  00F230  22F8               	addwfc	tblptru,f,c
 36723  00F232                     	endif
 36724  00F232  0009               	tblrd		*+
 36725  00F234  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 36726  00F238  000A               	tblrd		*-
 36727  00F23A  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 36728                           
 36729                           ; BSR set to: 13
 36730                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 36731  00F23E  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 36732  00F242  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 36733  00F246  0E00               	movlw	low (__mediumconst shr (0+16))
 36734  00F248  6EF8               	movwf	tblptru,c
 36735  00F24A  0E0E               	movlw	(high __ramtop+-1)
 36736  00F24C  64F7               	cpfsgt	tblptrh,c
 36737  00F24E  D003               	bra	i2u957_47
 36738  00F250  0008               	tblrd		*
 36739  00F252  50F5               	movf	tablat,w,c
 36740  00F254  D005               	bra	i2u957_40
 36741  00F256                     i2u957_47:
 36742  00F256  CFF6 FFE9          	movff	tblptrl,fsr0l
 36743  00F25A  CFF7 FFEA          	movff	tblptrh,fsr0h
 36744  00F25E  50EF               	movf	indf0,w,c
 36745  00F260                     i2u957_40:
 36746  00F260  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 36747  00F262  502E               	movf	??_USBStdGetDscHandler,w,c
 36748  00F264  6E0E               	movwf	_inPipes+4,c	;volatile
 36749  00F266  6A0F               	clrf	_inPipes+5,c	;volatile
 36750                           
 36751                           ;usb_device.c: 2094: }
 36752  00F268  0012               	return	
 36753  00F26A                     i2l287:
 36754                           
 36755                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 36756  00F26A  0E00               	movlw	0
 36757  00F26C  6E0D               	movwf	_inPipes+3,c	;volatile
 36758                           
 36759                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 36760  00F26E  0012               	return	
 36761  00F270                     
 36762                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 36763  00F270  0E00               	movlw	0
 36764  00F272  6E0D               	movwf	_inPipes+3,c	;volatile
 36765                           
 36766                           ;usb_device.c: 2112: }
 36767                           
 36768                           ;usb_device.c: 2111: break;
 36769  00F274  0012               	return	
 36770  00F276                     i2l280:
 36771  00F276  010D               	movlb	13	; () banked
 36772  00F278  5133               	movf	51,w,b	;volatile
 36773                           
 36774                           ; Switch size 1, requested type "space"
 36775                           ; Number of cases is 3, Range of values is 1 to 3
 36776                           ; switch strategies available:
 36777                           ; Name         Instructions Cycles
 36778                           ; simple_byte           10     6 (average)
 36779                           ;	Chosen strategy is simple_byte
 36780  00F27A  0A01               	xorlw	1	; case 1
 36781  00F27C  B4D8               	btfsc	status,2,c
 36782  00F27E  D779               	goto	i2l281
 36783  00F280  0A03               	xorlw	3	; case 2
 36784  00F282  B4D8               	btfsc	status,2,c
 36785  00F284  D77F               	goto	i2l283
 36786  00F286  0A01               	xorlw	1	; case 3
 36787  00F288  B4D8               	btfsc	status,2,c
 36788  00F28A  D7C4               	goto	i2l286
 36789  00F28C  D7F1               	goto	i2l289
 36790  00F28E                     __end_of_USBStdGetDscHandler:
 36791                           	opt stack 0
 36792                           tosu	equ	0xFFF
 36793                           tosh	equ	0xFFE
 36794                           tosl	equ	0xFFD
 36795                           pclatu	equ	0xFFB
 36796                           pclath	equ	0xFFA
 36797                           tblptru	equ	0xFF8
 36798                           tblptrh	equ	0xFF7
 36799                           tblptrl	equ	0xFF6
 36800                           tablat	equ	0xFF5
 36801                           prodh	equ	0xFF4
 36802                           prodl	equ	0xFF3
 36803                           intcon	equ	0xFF2
 36804                           indf0	equ	0xFEF
 36805                           postinc0	equ	0xFEE
 36806                           fsr0h	equ	0xFEA
 36807                           fsr0l	equ	0xFE9
 36808                           wreg	equ	0xFE8
 36809                           indf1	equ	0xFE7
 36810                           postdec1	equ	0xFE5
 36811                           plusw1	equ	0xFE3
 36812                           fsr1h	equ	0xFE2
 36813                           fsr1l	equ	0xFE1
 36814                           indf2	equ	0xFDF
 36815                           postinc2	equ	0xFDE
 36816                           postdec2	equ	0xFDD
 36817                           plusw2	equ	0xFDB
 36818                           fsr2h	equ	0xFDA
 36819                           fsr2l	equ	0xFD9
 36820                           status	equ	0xFD8
 36821                           
 36822 ;; *************** function _USBStdFeatureReqHandler *****************
 36823 ;; Defined at:
 36824 ;;		line 2756 in file "usb_device.c"
 36825 ;; Parameters:    Size  Location     Type
 36826 ;;		None
 36827 ;; Auto vars:     Size  Location     Type
 36828 ;;  p               2   27[COMRAM] PTR struct __BDT
 36829 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 36830 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 36831 ;;		 -> UEP0(1), 
 36832 ;;  current_ep_d    1   26[COMRAM] struct .
 36833 ;; Return value:  Size  Location     Type
 36834 ;;                  1    wreg      void 
 36835 ;; Registers used:
 36836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 36837 ;; Tracked objects:
 36838 ;;		On entry : 0/0
 36839 ;;		On exit  : 0/0
 36840 ;;		Unchanged: 0/0
 36841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36843 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36844 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36845 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36846 ;;Total ram usage:        6 bytes
 36847 ;; Hardware stack levels used:    1
 36848 ;; Hardware stack levels required when called:    4
 36849 ;; This function calls:
 36850 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 36851 ;; This function is called by:
 36852 ;;		_USBCheckStdRequest
 36853 ;; This function uses a non-reentrant model
 36854 ;;
 36855                           
 36856                           	psect	text134
 36857  00D1A6                     __ptext134:
 36858                           	opt stack 0
 36859  00D1A6                     _USBStdFeatureReqHandler:
 36860                           	opt stack 9
 36861                           
 36862                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 36863                           
 36864                           ;incstack = 0
 36865  00D1A6  010D               	movlb	13	; () banked
 36866  00D1A8  0532               	decf	50,w,b	;volatile
 36867  00D1AA  A4D8               	btfss	status,2,c
 36868  00D1AC  D00F               	goto	i2l373
 36869                           
 36870                           ; BSR set to: 13
 36871  00D1AE  5130               	movf	48,w,b	;volatile
 36872  00D1B0  0B1F               	andlw	31
 36873  00D1B2  0900               	iorlw	0
 36874  00D1B4  A4D8               	btfss	status,2,c
 36875  00D1B6  D00A               	goto	i2l373
 36876                           
 36877                           ; BSR set to: 13
 36878                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 36879  00D1B8  8E0D               	bsf	_inPipes+3,7,c	;volatile
 36880                           
 36881                           ; BSR set to: 13
 36882                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 36883  00D1BA  0E03               	movlw	3
 36884  00D1BC  1931               	xorwf	49,w,b	;volatile
 36885  00D1BE  A4D8               	btfss	status,2,c
 36886  00D1C0  D002               	goto	i2l372
 36887                           
 36888                           ; BSR set to: 13
 36889                           ;usb_device.c: 2806: RemoteWakeup = 1;
 36890  00D1C2  0E01               	movlw	1
 36891  00D1C4  D001               	goto	L65
 36892  00D1C6                     i2l372:
 36893                           
 36894                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 36895                           
 36896                           ; BSR set to: 1
 36897  00D1C6  0E00               	movlw	0
 36898  00D1C8                     L65:
 36899  00D1C8  0101               	movlb	1	; () banked
 36900  00D1CA  6F7A               	movwf	_RemoteWakeup& (0+255),b	;volatile
 36901  00D1CC                     i2l373:
 36902                           
 36903                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 36904                           
 36905                           ; BSR set to: 1
 36906  00D1CC  010D               	movlb	13	; () banked
 36907  00D1CE  5132               	movf	50,w,b	;volatile
 36908  00D1D0  A4D8               	btfss	status,2,c
 36909  00D1D2  0012               	return	
 36910                           
 36911                           ; BSR set to: 13
 36912  00D1D4  5130               	movf	48,w,b	;volatile
 36913  00D1D6  0B1F               	andlw	31
 36914  00D1D8  0A02               	xorlw	2
 36915  00D1DA  A4D8               	btfss	status,2,c
 36916  00D1DC  0012               	return	
 36917                           
 36918                           ; BSR set to: 13
 36919  00D1DE  5134               	movf	52,w,b	;volatile
 36920  00D1E0  0B0F               	andlw	15
 36921  00D1E2  0900               	iorlw	0
 36922  00D1E4  B4D8               	btfsc	status,2,c
 36923  00D1E6  0012               	return	
 36924                           
 36925                           ; BSR set to: 13
 36926  00D1E8  5134               	movf	52,w,b	;volatile
 36927  00D1EA  0B0F               	andlw	15
 36928  00D1EC  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 36929  00D1EE  0E03               	movlw	3
 36930  00D1F0  6045               	cpfslt	??_USBStdFeatureReqHandler,c
 36931  00D1F2  0012               	return	
 36932                           
 36933                           ; BSR set to: 13
 36934  00D1F4  0E20               	movlw	32
 36935  00D1F6  182B               	xorwf	_USBDeviceState,w,c	;volatile
 36936  00D1F8  A4D8               	btfss	status,2,c
 36937  00D1FA  0012               	return	
 36938                           
 36939                           ; BSR set to: 13
 36940                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 36941  00D1FC  8E0D               	bsf	_inPipes+3,7,c	;volatile
 36942                           
 36943                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 36944  00D1FE  BF34               	btfsc	52,7,b	;volatile
 36945  00D200  D019               	goto	i2l375
 36946                           
 36947                           ; BSR set to: 13
 36948                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 36949  00D202  5134               	movf	52,w,b	;volatile
 36950  00D204  0B0F               	andlw	15
 36951  00D206  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 36952  00D208  5045               	movf	??_USBStdFeatureReqHandler,w,c
 36953  00D20A  0D02               	mullw	2
 36954  00D20C  0E31               	movlw	low _pBDTEntryOut
 36955  00D20E  24F3               	addwf	prodl,w,c
 36956  00D210  6ED9               	movwf	fsr2l,c
 36957  00D212  0E01               	movlw	high _pBDTEntryOut
 36958  00D214  20F4               	addwfc	prodh,w,c
 36959  00D216  6EDA               	movwf	fsr2h,c
 36960  00D218  CFDE F049          	movff	postinc2,USBStdFeatureReqHandler@p
 36961  00D21C  CFDD F04A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 36962                           
 36963                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 36964  00D220  5134               	movf	52,w,b	;volatile
 36965  00D222  0B0F               	andlw	15
 36966  00D224  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 36967  00D226  5045               	movf	??_USBStdFeatureReqHandler,w,c
 36968  00D228  0D01               	mullw	1
 36969  00D22A  0E55               	movlw	low _ep_data_out
 36970  00D22C  24F3               	addwf	prodl,w,c
 36971  00D22E  6ED9               	movwf	fsr2l,c
 36972  00D230  0E01               	movlw	high _ep_data_out
 36973  00D232  D018               	goto	L66
 36974  00D234                     i2l375:
 36975                           
 36976                           ; BSR set to: 13
 36977                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 36978                           
 36979                           ; BSR set to: 13
 36980  00D234  5134               	movf	52,w,b	;volatile
 36981  00D236  0B0F               	andlw	15
 36982  00D238  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 36983  00D23A  5045               	movf	??_USBStdFeatureReqHandler,w,c
 36984  00D23C  0D02               	mullw	2
 36985  00D23E  0E10               	movlw	low _pBDTEntryIn
 36986  00D240  24F3               	addwf	prodl,w,c
 36987  00D242  6ED9               	movwf	fsr2l,c
 36988  00D244  0E00               	movlw	high _pBDTEntryIn
 36989  00D246  20F4               	addwfc	prodh,w,c
 36990  00D248  6EDA               	movwf	fsr2h,c
 36991  00D24A  CFDE F049          	movff	postinc2,USBStdFeatureReqHandler@p
 36992  00D24E  CFDD F04A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 36993                           
 36994                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 36995  00D252  5134               	movf	52,w,b	;volatile
 36996  00D254  0B0F               	andlw	15
 36997  00D256  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 36998  00D258  5045               	movf	??_USBStdFeatureReqHandler,w,c
 36999  00D25A  0D01               	mullw	1
 37000  00D25C  0E58               	movlw	low _ep_data_in
 37001  00D25E  24F3               	addwf	prodl,w,c
 37002  00D260  6ED9               	movwf	fsr2l,c
 37003  00D262  0E01               	movlw	high _ep_data_in
 37004  00D264                     L66:
 37005  00D264  20F4               	addwfc	prodh,w,c
 37006  00D266  6EDA               	movwf	fsr2h,c
 37007  00D268  50DF               	movf	indf2,w,c
 37008  00D26A  6E48               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 37009                           
 37010                           ; BSR set to: 13
 37011                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 37012                           
 37013                           ; BSR set to: 13
 37014  00D26C  B048               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 37015  00D26E  D006               	goto	i2l377
 37016                           
 37017                           ; BSR set to: 13
 37018                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 37019  00D270  0EFB               	movlw	251
 37020  00D272  1449               	andwf	USBStdFeatureReqHandler@p,w,c
 37021  00D274  6E49               	movwf	USBStdFeatureReqHandler@p,c
 37022  00D276  0EFF               	movlw	255
 37023  00D278  144A               	andwf	USBStdFeatureReqHandler@p+1,w,c
 37024  00D27A  D004               	goto	L67
 37025  00D27C                     i2l377:
 37026                           
 37027                           ; BSR set to: 13
 37028                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 37029                           
 37030                           ; BSR set to: 13
 37031  00D27C  0E04               	movlw	4
 37032  00D27E  1049               	iorwf	USBStdFeatureReqHandler@p,w,c
 37033  00D280  6E49               	movwf	USBStdFeatureReqHandler@p,c
 37034  00D282  504A               	movf	USBStdFeatureReqHandler@p+1,w,c
 37035  00D284                     L67:
 37036  00D284  6E4A               	movwf	USBStdFeatureReqHandler@p+1,c
 37037                           
 37038                           ; BSR set to: 13
 37039                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 37040                           
 37041                           ; BSR set to: 13
 37042  00D286  BF34               	btfsc	52,7,b	;volatile
 37043  00D288  D00A               	goto	i2l379
 37044                           
 37045                           ; BSR set to: 13
 37046                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 37047  00D28A  5134               	movf	52,w,b	;volatile
 37048  00D28C  0B0F               	andlw	15
 37049  00D28E  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 37050  00D290  5045               	movf	??_USBStdFeatureReqHandler,w,c
 37051  00D292  0D02               	mullw	2
 37052  00D294  0E31               	movlw	low _pBDTEntryOut
 37053  00D296  24F3               	addwf	prodl,w,c
 37054  00D298  6ED9               	movwf	fsr2l,c
 37055  00D29A  0E01               	movlw	high _pBDTEntryOut
 37056  00D29C  D009               	goto	L68
 37057  00D29E                     i2l379:
 37058                           
 37059                           ; BSR set to: 13
 37060                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 37061                           
 37062                           ; BSR set to: 13
 37063  00D29E  5134               	movf	52,w,b	;volatile
 37064  00D2A0  0B0F               	andlw	15
 37065  00D2A2  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 37066  00D2A4  5045               	movf	??_USBStdFeatureReqHandler,w,c
 37067  00D2A6  0D02               	mullw	2
 37068  00D2A8  0E10               	movlw	low _pBDTEntryIn
 37069  00D2AA  24F3               	addwf	prodl,w,c
 37070  00D2AC  6ED9               	movwf	fsr2l,c
 37071  00D2AE  0E00               	movlw	high _pBDTEntryIn
 37072  00D2B0                     L68:
 37073  00D2B0  20F4               	addwfc	prodh,w,c
 37074  00D2B2  6EDA               	movwf	fsr2h,c
 37075  00D2B4  C049  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 37076  00D2B8  C04A  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 37077                           
 37078                           ; BSR set to: 13
 37079                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 37080                           
 37081                           ; BSR set to: 13
 37082  00D2BC  0E03               	movlw	3
 37083  00D2BE  1931               	xorwf	49,w,b	;volatile
 37084  00D2C0  A4D8               	btfss	status,2,c
 37085  00D2C2  D02D               	goto	i2l381
 37086                           
 37087                           ; BSR set to: 13
 37088                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 37089  00D2C4  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 37090  00D2C8  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 37091  00D2CC  AEDF               	btfss	indf2,7,c
 37092  00D2CE  D01A               	goto	i2l384
 37093                           
 37094                           ; BSR set to: 13
 37095                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 37096  00D2D0  BF34               	btfsc	52,7,b	;volatile
 37097  00D2D2  D00A               	goto	i2l383
 37098                           
 37099                           ; BSR set to: 13
 37100                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 37101  00D2D4  5134               	movf	52,w,b	;volatile
 37102  00D2D6  0B0F               	andlw	15
 37103  00D2D8  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 37104  00D2DA  5045               	movf	??_USBStdFeatureReqHandler,w,c
 37105  00D2DC  0D01               	mullw	1
 37106  00D2DE  0E55               	movlw	low _ep_data_out
 37107  00D2E0  24F3               	addwf	prodl,w,c
 37108  00D2E2  6ED9               	movwf	fsr2l,c
 37109  00D2E4  0E01               	movlw	high _ep_data_out
 37110  00D2E6  D00A               	goto	L69
 37111  00D2E8                     i2l383:
 37112                           
 37113                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 37114                           
 37115                           ; BSR set to: 1
 37116  00D2E8  010D               	movlb	13	; () banked
 37117  00D2EA  5134               	movf	52,w,b	;volatile
 37118  00D2EC  0B0F               	andlw	15
 37119  00D2EE  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 37120  00D2F0  5045               	movf	??_USBStdFeatureReqHandler,w,c
 37121  00D2F2  0D01               	mullw	1
 37122  00D2F4  0E58               	movlw	low _ep_data_in
 37123  00D2F6  24F3               	addwf	prodl,w,c
 37124  00D2F8  6ED9               	movwf	fsr2l,c
 37125  00D2FA  0E01               	movlw	high _ep_data_in
 37126  00D2FC                     L69:
 37127  00D2FC  20F4               	addwfc	prodh,w,c
 37128  00D2FE  6EDA               	movwf	fsr2h,c
 37129  00D300  0101               	movlb	1	; () banked
 37130  00D302  82DF               	bsf	indf2,1,c
 37131  00D304                     i2l384:
 37132                           
 37133                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 37134                           
 37135                           ; BSR set to: 1
 37136                           
 37137                           ; BSR set to: 1
 37138  00D304  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 37139  00D308  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 37140  00D30C  0E00               	movlw	0
 37141  00D30E  84DB               	bsf	plusw2,2,c
 37142                           
 37143                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 37144  00D310  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 37145  00D314  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 37146  00D318  0E00               	movlw	0
 37147  00D31A  8EDB               	bsf	plusw2,7,c
 37148                           
 37149                           ;usb_device.c: 2878: }
 37150  00D31C  0012               	return	
 37151  00D31E                     i2l381:
 37152                           
 37153                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 37154  00D31E  0E04               	movlw	4
 37155  00D320  1849               	xorwf	USBStdFeatureReqHandler@p,w,c
 37156  00D322  6E49               	movwf	USBStdFeatureReqHandler@p,c
 37157  00D324  504A               	movf	USBStdFeatureReqHandler@p+1,w,c
 37158  00D326  6E4A               	movwf	USBStdFeatureReqHandler@p+1,c
 37159                           
 37160                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 37161  00D328  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 37162  00D32C  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 37163  00D330  AEDF               	btfss	indf2,7,c
 37164  00D332  D01B               	goto	i2l386
 37165                           
 37166                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 37167  00D334  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 37168  00D338  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 37169  00D33C  0E7F               	movlw	127
 37170  00D33E  16DF               	andwf	indf2,f,c
 37171                           
 37172                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 37173  00D340  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 37174  00D344  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 37175  00D348  0E00               	movlw	0
 37176  00D34A  8CDB               	bsf	plusw2,6,c
 37177                           
 37178                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 37179  00D34C  0E00               	movlw	0
 37180  00D34E  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 37181  00D350  0E05               	movlw	5
 37182  00D352  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 37183  00D354  C049  F03F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 37184  00D358  C04A  F040         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 37185  00D35C  0E00               	movlw	0
 37186  00D35E  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 37187  00D360  0E02               	movlw	2
 37188  00D362  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 37189  00D364  EC5E  F08A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 37190                           
 37191                           ;usb_device.c: 2893: }
 37192  00D368  D006               	goto	i2l387
 37193  00D36A                     i2l386:
 37194                           
 37195                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 37196  00D36A  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 37197  00D36E  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 37198  00D372  0E00               	movlw	0
 37199  00D374  8CDB               	bsf	plusw2,6,c
 37200  00D376                     i2l387:
 37201                           
 37202                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 37203  00D376  0E04               	movlw	4
 37204  00D378  1849               	xorwf	USBStdFeatureReqHandler@p,w,c
 37205  00D37A  6E49               	movwf	USBStdFeatureReqHandler@p,c
 37206  00D37C  504A               	movf	USBStdFeatureReqHandler@p+1,w,c
 37207  00D37E  6E4A               	movwf	USBStdFeatureReqHandler@p+1,c
 37208                           
 37209                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 37210  00D380  B248               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 37211  00D382  D006               	goto	i2u1730_40
 37212  00D384  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 37213  00D388  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 37214  00D38C  AEDF               	btfss	indf2,7,c
 37215  00D38E  D030               	goto	i2l388
 37216  00D390                     i2u1730_40:
 37217                           
 37218                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 37219  00D390  010D               	movlb	13	; () banked
 37220  00D392  BF34               	btfsc	52,7,b	;volatile
 37221  00D394  D00A               	goto	i2l391
 37222                           
 37223                           ; BSR set to: 13
 37224                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 37225  00D396  5134               	movf	52,w,b	;volatile
 37226  00D398  0B0F               	andlw	15
 37227  00D39A  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 37228  00D39C  5045               	movf	??_USBStdFeatureReqHandler,w,c
 37229  00D39E  0D01               	mullw	1
 37230  00D3A0  0E55               	movlw	low _ep_data_out
 37231  00D3A2  24F3               	addwf	prodl,w,c
 37232  00D3A4  6ED9               	movwf	fsr2l,c
 37233  00D3A6  0E01               	movlw	high _ep_data_out
 37234  00D3A8  D00A               	goto	L70
 37235  00D3AA                     i2l391:
 37236                           
 37237                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 37238                           
 37239                           ; BSR set to: 1
 37240  00D3AA  010D               	movlb	13	; () banked
 37241  00D3AC  5134               	movf	52,w,b	;volatile
 37242  00D3AE  0B0F               	andlw	15
 37243  00D3B0  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 37244  00D3B2  5045               	movf	??_USBStdFeatureReqHandler,w,c
 37245  00D3B4  0D01               	mullw	1
 37246  00D3B6  0E58               	movlw	low _ep_data_in
 37247  00D3B8  24F3               	addwf	prodl,w,c
 37248  00D3BA  6ED9               	movwf	fsr2l,c
 37249  00D3BC  0E01               	movlw	high _ep_data_in
 37250  00D3BE                     L70:
 37251  00D3BE  20F4               	addwfc	prodh,w,c
 37252  00D3C0  6EDA               	movwf	fsr2h,c
 37253  00D3C2  0101               	movlb	1	; () banked
 37254  00D3C4  92DF               	bcf	indf2,1,c
 37255                           
 37256                           ; BSR set to: 1
 37257                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 37258                           
 37259                           ; BSR set to: 1
 37260  00D3C6  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 37261  00D3CA  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 37262  00D3CE  0E3B               	movlw	59
 37263  00D3D0  16DF               	andwf	indf2,f,c
 37264                           
 37265                           ; BSR set to: 1
 37266                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 37267  00D3D2  0E00               	movlw	0
 37268  00D3D4  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 37269  00D3D6  0E05               	movlw	5
 37270  00D3D8  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 37271  00D3DA  C049  F03F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 37272  00D3DE  C04A  F040         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 37273  00D3E2  0E00               	movlw	0
 37274  00D3E4  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 37275  00D3E6  0E02               	movlw	2
 37276  00D3E8  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 37277  00D3EA  EC5E  F08A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 37278                           
 37279                           ;usb_device.c: 2923: }
 37280  00D3EE  D006               	goto	i2l393
 37281  00D3F0                     i2l388:
 37282                           
 37283                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 37284  00D3F0  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 37285  00D3F4  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 37286  00D3F8  0E3B               	movlw	59
 37287  00D3FA  16DF               	andwf	indf2,f,c
 37288  00D3FC                     i2l393:
 37289                           
 37290                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 37291  00D3FC  010D               	movlb	13	; () banked
 37292  00D3FE  5134               	movf	52,w,b	;volatile
 37293  00D400  0B0F               	andlw	15
 37294  00D402  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 37295  00D404  5045               	movf	??_USBStdFeatureReqHandler,w,c
 37296  00D406  0D01               	mullw	1
 37297  00D408  0E26               	movlw	38
 37298  00D40A  24F3               	addwf	prodl,w,c
 37299  00D40C  6E46               	movwf	USBStdFeatureReqHandler@pUEP,c
 37300  00D40E  0E0F               	movlw	15
 37301  00D410  20F4               	addwfc	prodh,w,c
 37302  00D412  6E47               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 37303                           
 37304                           ; BSR set to: 13
 37305                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 37306  00D414  C046  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 37307  00D418  C047  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 37308  00D41C  0EFE               	movlw	254
 37309  00D41E  16DF               	andwf	indf2,f,c
 37310                           
 37311                           ; BSR set to: 13
 37312  00D420  0012               	return	
 37313  00D422                     __end_of_USBStdFeatureReqHandler:
 37314                           	opt stack 0
 37315                           tosu	equ	0xFFF
 37316                           tosh	equ	0xFFE
 37317                           tosl	equ	0xFFD
 37318                           pclatu	equ	0xFFB
 37319                           pclath	equ	0xFFA
 37320                           tblptru	equ	0xFF8
 37321                           tblptrh	equ	0xFF7
 37322                           tblptrl	equ	0xFF6
 37323                           tablat	equ	0xFF5
 37324                           prodh	equ	0xFF4
 37325                           prodl	equ	0xFF3
 37326                           intcon	equ	0xFF2
 37327                           indf0	equ	0xFEF
 37328                           postinc0	equ	0xFEE
 37329                           fsr0h	equ	0xFEA
 37330                           fsr0l	equ	0xFE9
 37331                           wreg	equ	0xFE8
 37332                           indf1	equ	0xFE7
 37333                           postdec1	equ	0xFE5
 37334                           plusw1	equ	0xFE3
 37335                           fsr1h	equ	0xFE2
 37336                           fsr1l	equ	0xFE1
 37337                           indf2	equ	0xFDF
 37338                           postinc2	equ	0xFDE
 37339                           postdec2	equ	0xFDD
 37340                           plusw2	equ	0xFDB
 37341                           fsr2h	equ	0xFDA
 37342                           fsr2l	equ	0xFD9
 37343                           status	equ	0xFD8
 37344                           
 37345 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 37346 ;; Defined at:
 37347 ;;		line 54 in file "usb_events.c"
 37348 ;; Parameters:    Size  Location     Type
 37349 ;;  event           2   15[COMRAM] enum E6832
 37350 ;;  pdata           2   17[COMRAM] PTR void 
 37351 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 37352 ;;		 -> BDT(48), 
 37353 ;;  size            2   19[COMRAM] unsigned int 
 37354 ;; Auto vars:     Size  Location     Type
 37355 ;;		None
 37356 ;; Return value:  Size  Location     Type
 37357 ;;                  1    wreg      unsigned char 
 37358 ;; Registers used:
 37359 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 37360 ;; Tracked objects:
 37361 ;;		On entry : 0/0
 37362 ;;		On exit  : 0/0
 37363 ;;		Unchanged: 0/0
 37364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37365 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37367 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37368 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37369 ;;Total ram usage:        8 bytes
 37370 ;; Hardware stack levels used:    1
 37371 ;; Hardware stack levels required when called:    3
 37372 ;; This function calls:
 37373 ;;		_APP_DeviceCustomHIDInitialize
 37374 ;;		_APP_DeviceMSDInitialize
 37375 ;;		_MSDTransferTerminated
 37376 ;;		_USBCheckHIDRequest
 37377 ;;		_USBCheckMSDRequest
 37378 ;;		i2_SYSTEM_Initialize
 37379 ;; This function is called by:
 37380 ;;		_USBDeviceTasks
 37381 ;;		_USBStdSetCfgHandler
 37382 ;;		_USBSuspend
 37383 ;;		_USBWakeFromSuspend
 37384 ;;		_USBCtrlTrfSetupHandler
 37385 ;;		_USBCheckStdRequest
 37386 ;;		_USBStdFeatureReqHandler
 37387 ;; This function uses a non-reentrant model
 37388 ;;
 37389                           
 37390                           	psect	text135
 37391  0114BC                     __ptext135:
 37392                           	opt stack 0
 37393  0114BC                     _USER_USB_CALLBACK_EVENT_HANDLER:
 37394                           	opt stack 13
 37395                           
 37396                           ;usb_events.c: 56: switch((int)event)
 37397                           
 37398                           ;incstack = 0
 37399  0114BC  D019               	goto	i2l816
 37400  0114BE                     
 37401                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 37402  0114BE  0E01               	movlw	1
 37403  0114C0  EC4C  F08F         	call	i2_SYSTEM_Initialize
 37404                           
 37405                           ;usb_events.c: 79: break;
 37406  0114C4  0012               	return	
 37407  0114C6                     
 37408                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 37409  0114C6  0E02               	movlw	2
 37410  0114C8  EC4C  F08F         	call	i2_SYSTEM_Initialize
 37411                           
 37412                           ;usb_events.c: 90: break;
 37413  0114CC  0012               	return	
 37414  0114CE                     
 37415                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 37416  0114CE  EC8D  F092         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 37417                           
 37418                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 37419  0114D2  EC3F  F094         	call	_APP_DeviceMSDInitialize	;wreg free
 37420                           
 37421                           ;usb_events.c: 100: break;
 37422                           
 37423                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 37424                           
 37425                           ;usb_events.c: 97: break;
 37426  0114D6  0012               	return	
 37427  0114D8                     
 37428                           ;usb_events.c: 105: USBCheckHIDRequest();
 37429  0114D8  EC93  F082         	call	_USBCheckHIDRequest	;wreg free
 37430                           
 37431                           ;usb_events.c: 108: USBCheckMSDRequest();
 37432  0114DC  EC91  F084         	call	_USBCheckMSDRequest	;wreg free
 37433                           
 37434                           ;usb_events.c: 112: break;
 37435                           
 37436                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 37437                           
 37438                           ;usb_events.c: 109: break;
 37439  0114E0  0012               	return	
 37440  0114E2                     
 37441                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 37442  0114E2  C03F  F039         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 37443  0114E6  C040  F03A         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 37444  0114EA  ECCD  F08E         	call	_MSDTransferTerminated	;wreg free
 37445                           
 37446                           ;usb_events.c: 129: }
 37447                           
 37448                           ;usb_events.c: 128: break;
 37449                           
 37450                           ;usb_events.c: 127: default:
 37451                           
 37452                           ;usb_events.c: 125: break;
 37453  0114EE  0012               	return	
 37454  0114F0                     i2l816:
 37455  0114F0  C03D  F043         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 37456  0114F4  C03E  F044         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 37457                           
 37458                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 37459                           ; Switch size 1, requested type "space"
 37460                           ; Number of cases is 2, Range of values is 0 to 127
 37461                           ; switch strategies available:
 37462                           ; Name         Instructions Cycles
 37463                           ; simple_byte            7     4 (average)
 37464                           ;	Chosen strategy is simple_byte
 37465  0114F8  5044               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 37466  0114FA  0A00               	xorlw	0	; case 0
 37467  0114FC  B4D8               	btfsc	status,2,c
 37468  0114FE  D004               	goto	i2l22692
 37469  011500  0A7F               	xorlw	127	; case 127
 37470  011502  A4D8               	btfss	status,2,c
 37471  011504  0012               	return	
 37472  011506  D01A               	goto	i2l22694
 37473  011508                     i2l22692:
 37474                           
 37475                           ; Switch size 1, requested type "space"
 37476                           ; Number of cases is 8, Range of values is 1 to 117
 37477                           ; switch strategies available:
 37478                           ; Name         Instructions Cycles
 37479                           ; simple_byte           25    13 (average)
 37480                           ;	Chosen strategy is simple_byte
 37481  011508  5043               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 37482  01150A  0A01               	xorlw	1	; case 1
 37483  01150C  B4D8               	btfsc	status,2,c
 37484  01150E  D7DF               	goto	i2l822
 37485  011510  0A03               	xorlw	3	; case 2
 37486  011512  B4D8               	btfsc	status,2,c
 37487  011514  0012               	return	
 37488  011516  0A01               	xorlw	1	; case 3
 37489  011518  B4D8               	btfsc	status,2,c
 37490  01151A  D7DE               	goto	i2l824
 37491  01151C  0A06               	xorlw	6	; case 5
 37492  01151E  B4D8               	btfsc	status,2,c
 37493  011520  D7E0               	goto	i2l826
 37494  011522  0A77               	xorlw	119	; case 114
 37495  011524  B4D8               	btfsc	status,2,c
 37496  011526  0012               	return	
 37497  011528  0A01               	xorlw	1	; case 115
 37498  01152A  B4D8               	btfsc	status,2,c
 37499  01152C  0012               	return	
 37500  01152E  0A07               	xorlw	7	; case 116
 37501  011530  B4D8               	btfsc	status,2,c
 37502  011532  D7C9               	goto	i2l821
 37503  011534  0A01               	xorlw	1	; case 117
 37504  011536  A4D8               	btfss	status,2,c
 37505  011538  0012               	return	
 37506  01153A  D7C1               	goto	i2l820
 37507  01153C                     i2l22694:
 37508                           
 37509                           ; Switch size 1, requested type "space"
 37510                           ; Number of cases is 1, Range of values is 255 to 255
 37511                           ; switch strategies available:
 37512                           ; Name         Instructions Cycles
 37513                           ; simple_byte            4     3 (average)
 37514                           ;	Chosen strategy is simple_byte
 37515  01153C  5043               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 37516  01153E  0AFF               	xorlw	255	; case 255
 37517  011540  0012               	return	
 37518  011542                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 37519                           	opt stack 0
 37520                           tosu	equ	0xFFF
 37521                           tosh	equ	0xFFE
 37522                           tosl	equ	0xFFD
 37523                           pclatu	equ	0xFFB
 37524                           pclath	equ	0xFFA
 37525                           tblptru	equ	0xFF8
 37526                           tblptrh	equ	0xFF7
 37527                           tblptrl	equ	0xFF6
 37528                           tablat	equ	0xFF5
 37529                           prodh	equ	0xFF4
 37530                           prodl	equ	0xFF3
 37531                           intcon	equ	0xFF2
 37532                           indf0	equ	0xFEF
 37533                           postinc0	equ	0xFEE
 37534                           fsr0h	equ	0xFEA
 37535                           fsr0l	equ	0xFE9
 37536                           wreg	equ	0xFE8
 37537                           indf1	equ	0xFE7
 37538                           postdec1	equ	0xFE5
 37539                           plusw1	equ	0xFE3
 37540                           fsr1h	equ	0xFE2
 37541                           fsr1l	equ	0xFE1
 37542                           indf2	equ	0xFDF
 37543                           postinc2	equ	0xFDE
 37544                           postdec2	equ	0xFDD
 37545                           plusw2	equ	0xFDB
 37546                           fsr2h	equ	0xFDA
 37547                           fsr2l	equ	0xFD9
 37548                           status	equ	0xFD8
 37549                           
 37550 ;; *************** function i2_SYSTEM_Initialize *****************
 37551 ;; Defined at:
 37552 ;;		line 39 in file "system.c"
 37553 ;; Parameters:    Size  Location     Type
 37554 ;;  state           1    wreg     enum E6623
 37555 ;; Auto vars:     Size  Location     Type
 37556 ;;  state           1    4[COMRAM] enum E6623
 37557 ;;  SYSTEM_Initi    2    2[COMRAM] unsigned int 
 37558 ;;  SYSTEM_Initi    2    0[COMRAM] unsigned int 
 37559 ;; Return value:  Size  Location     Type
 37560 ;;                  1    wreg      void 
 37561 ;; Registers used:
 37562 ;;		wreg, status,2, status,0
 37563 ;; Tracked objects:
 37564 ;;		On entry : 0/0
 37565 ;;		On exit  : 0/0
 37566 ;;		Unchanged: 0/0
 37567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37569 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37571 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37572 ;;Total ram usage:        5 bytes
 37573 ;; Hardware stack levels used:    1
 37574 ;; This function calls:
 37575 ;;		Nothing
 37576 ;; This function is called by:
 37577 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 37578 ;; This function uses a non-reentrant model
 37579 ;;
 37580                           
 37581                           	psect	text136
 37582  011E98                     __ptext136:
 37583                           	opt stack 0
 37584  011E98                     i2_SYSTEM_Initialize:
 37585                           	opt stack 15
 37586                           
 37587                           ;incstack = 0
 37588                           ;i2SYSTEM_Initialize@state stored from wreg
 37589  011E98  6E32               	movwf	i2SYSTEM_Initialize@state,c
 37590                           
 37591                           ;system.c: 41: switch(state)
 37592  011E9A  D01D               	goto	i2l890
 37593  011E9C                     
 37594                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 37595  011E9C  0E02               	movlw	2
 37596  011E9E  6E2F               	movwf	i2SYSTEM_Initialize@pll_startup_counter+1,c
 37597  011EA0  0E58               	movlw	88
 37598  011EA2  6E2E               	movwf	i2SYSTEM_Initialize@pll_startup_counter,c
 37599                           
 37600                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 37601  011EA4  8C9B               	bsf	3995,6,c	;volatile
 37602  011EA6                     i2l10838:
 37603  011EA6  062E               	decf	i2SYSTEM_Initialize@pll_startup_counter,f,c
 37604  011EA8  A0D8               	btfss	status,0,c
 37605  011EAA  062F               	decf	i2SYSTEM_Initialize@pll_startup_counter+1,f,c
 37606  011EAC  282E               	incf	i2SYSTEM_Initialize@pll_startup_counter,w,c
 37607  011EAE  E1FB               	bnz	i2l10838
 37608  011EB0  282F               	incf	i2SYSTEM_Initialize@pll_startup_counter+1,w,c
 37609  011EB2  B4D8               	btfsc	status,2,c
 37610  011EB4  0012               	return	
 37611  011EB6  D7F7               	goto	i2l893
 37612  011EB8                     
 37613                           ;system.c: 78: OSCCON = 0x70;
 37614  011EB8  0E70               	movlw	112
 37615  011EBA  6ED3               	movwf	4051,c	;volatile
 37616                           
 37617                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 37618  011EBC  0E03               	movlw	3
 37619  011EBE  6E31               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3110+1,c
 37620  011EC0  0E20               	movlw	32
 37621  011EC2  6E30               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3110,c
 37622  011EC4                     i2l10842:
 37623  011EC4  0630               	decf	i2SYSTEM_Initialize@pll_startup_counter_3110,f,c
 37624  011EC6  A0D8               	btfss	status,0,c
 37625  011EC8  0631               	decf	i2SYSTEM_Initialize@pll_startup_counter_3110+1,f,c
 37626  011ECA  2830               	incf	i2SYSTEM_Initialize@pll_startup_counter_3110,w,c
 37627  011ECC  E1FB               	bnz	i2l10842
 37628  011ECE  2831               	incf	i2SYSTEM_Initialize@pll_startup_counter_3110+1,w,c
 37629  011ED0  B4D8               	btfsc	status,2,c
 37630  011ED2  0012               	return	
 37631  011ED4  D7F7               	goto	i2l899
 37632  011ED6                     i2l890:
 37633  011ED6  5032               	movf	i2SYSTEM_Initialize@state,w,c
 37634                           
 37635                           ; Switch size 1, requested type "space"
 37636                           ; Number of cases is 3, Range of values is 0 to 2
 37637                           ; switch strategies available:
 37638                           ; Name         Instructions Cycles
 37639                           ; simple_byte           10     6 (average)
 37640                           ;	Chosen strategy is simple_byte
 37641  011ED8  0A00               	xorlw	0	; case 0
 37642  011EDA  B4D8               	btfsc	status,2,c
 37643  011EDC  D7DF               	goto	i2l891
 37644  011EDE  0A01               	xorlw	1	; case 1
 37645  011EE0  B4D8               	btfsc	status,2,c
 37646  011EE2  0012               	return	
 37647  011EE4  0A03               	xorlw	3	; case 2
 37648  011EE6  A4D8               	btfss	status,2,c
 37649  011EE8  0012               	return	
 37650  011EEA  D7E6               	goto	i2l897
 37651  011EEC                     __end_ofi2_SYSTEM_Initialize:
 37652                           	opt stack 0
 37653                           tosu	equ	0xFFF
 37654                           tosh	equ	0xFFE
 37655                           tosl	equ	0xFFD
 37656                           pclatu	equ	0xFFB
 37657                           pclath	equ	0xFFA
 37658                           tblptru	equ	0xFF8
 37659                           tblptrh	equ	0xFF7
 37660                           tblptrl	equ	0xFF6
 37661                           tablat	equ	0xFF5
 37662                           prodh	equ	0xFF4
 37663                           prodl	equ	0xFF3
 37664                           intcon	equ	0xFF2
 37665                           indf0	equ	0xFEF
 37666                           postinc0	equ	0xFEE
 37667                           fsr0h	equ	0xFEA
 37668                           fsr0l	equ	0xFE9
 37669                           wreg	equ	0xFE8
 37670                           indf1	equ	0xFE7
 37671                           postdec1	equ	0xFE5
 37672                           plusw1	equ	0xFE3
 37673                           fsr1h	equ	0xFE2
 37674                           fsr1l	equ	0xFE1
 37675                           indf2	equ	0xFDF
 37676                           postinc2	equ	0xFDE
 37677                           postdec2	equ	0xFDD
 37678                           plusw2	equ	0xFDB
 37679                           fsr2h	equ	0xFDA
 37680                           fsr2l	equ	0xFD9
 37681                           status	equ	0xFD8
 37682                           
 37683 ;; *************** function _USBCheckMSDRequest *****************
 37684 ;; Defined at:
 37685 ;;		line 218 in file "usb_device_msd.c"
 37686 ;; Parameters:    Size  Location     Type
 37687 ;;		None
 37688 ;; Auto vars:     Size  Location     Type
 37689 ;;		None
 37690 ;; Return value:  Size  Location     Type
 37691 ;;                  1    wreg      void 
 37692 ;; Registers used:
 37693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37694 ;; Tracked objects:
 37695 ;;		On entry : 0/0
 37696 ;;		On exit  : 0/0
 37697 ;;		Unchanged: 0/0
 37698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37700 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37702 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37703 ;;Total ram usage:        4 bytes
 37704 ;; Hardware stack levels used:    1
 37705 ;; Hardware stack levels required when called:    1
 37706 ;; This function calls:
 37707 ;;		i2_USBTransferOnePacket
 37708 ;; This function is called by:
 37709 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 37710 ;; This function uses a non-reentrant model
 37711 ;;
 37712                           
 37713                           	psect	text137
 37714  010922                     __ptext137:
 37715                           	opt stack 0
 37716  010922                     _USBCheckMSDRequest:
 37717                           	opt stack 14
 37718                           
 37719                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 37720                           
 37721                           ;incstack = 0
 37722  010922  010D               	movlb	13	; () banked
 37723  010924  5130               	movf	48,w,b	;volatile
 37724  010926  0B1F               	andlw	31
 37725  010928  06E8               	decf	wreg,f,c
 37726  01092A  A4D8               	btfss	status,2,c
 37727  01092C  0012               	return	
 37728                           
 37729                           ; BSR set to: 13
 37730                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 37731                           
 37732                           ; BSR set to: 13
 37733                           
 37734                           ; BSR set to: 13
 37735                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 37736  01092E  5134               	movf	52,w,b	;volatile
 37737  010930  A4D8               	btfss	status,2,c
 37738  010932  0012               	return	
 37739  010934  D04D               	goto	i2l545
 37740  010936                     
 37741                           ; BSR set to: 13
 37742                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 37743                           
 37744                           ; BSR set to: 13
 37745  010936  5132               	movf	50,w,b	;volatile
 37746  010938  1133               	iorwf	51,w,b	;volatile
 37747  01093A  A4D8               	btfss	status,2,c
 37748  01093C  0012               	return	
 37749                           
 37750                           ; BSR set to: 13
 37751  01093E  5136               	movf	54,w,b	;volatile
 37752  010940  1137               	iorwf	55,w,b	;volatile
 37753  010942  A4D8               	btfss	status,2,c
 37754  010944  0012               	return	
 37755                           
 37756                           ; BSR set to: 13
 37757                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 37758                           
 37759                           ; BSR set to: 13
 37760                           
 37761                           ; BSR set to: 13
 37762                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 37763  010946  0E00               	movlw	0
 37764  010948  6E25               	movwf	_MSD_State,c
 37765                           
 37766                           ; BSR set to: 13
 37767                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 37768  01094A  0100               	movlb	0	; () banked
 37769  01094C  69D2               	setf	_MSDCommandState& (0+255),b
 37770                           
 37771                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 37772  01094E  0E00               	movlw	0
 37773  010950  0101               	movlb	1	; () banked
 37774  010952  6F72               	movwf	_MSDReadState& (0+255),b
 37775                           
 37776                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 37777  010954  0E00               	movlw	0
 37778  010956  6F71               	movwf	_MSDWriteState& (0+255),b
 37779                           
 37780                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 37781  010958  0E01               	movlw	1
 37782  01095A  6F6D               	movwf	_MSDCBWValid& (0+255),b
 37783                           
 37784                           ; BSR set to: 1
 37785                           
 37786                           ; BSR set to: 1
 37787                           
 37788                           ; BSR set to: 1
 37789                           
 37790                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 37791  01095C  C135  F039         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2534
 37792  010960  C136  F03A         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2534+1
 37793                           
 37794                           ; BSR set to: 1
 37795  010964  5039               	movf	_USBCheckMSDRequest$2534,w,c
 37796  010966  103A               	iorwf	_USBCheckMSDRequest$2534+1,w,c
 37797  010968  B4D8               	btfsc	status,2,c
 37798  01096A  D00A               	goto	i2u851_40
 37799                           
 37800                           ; BSR set to: 1
 37801                           
 37802                           ; BSR set to: 1
 37803                           
 37804                           ; BSR set to: 1
 37805                           
 37806                           ; BSR set to: 1
 37807  01096C  C135  F03B         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2535
 37808  010970  C136  F03C         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2535+1
 37809                           
 37810                           ; BSR set to: 1
 37811                           
 37812                           ; BSR set to: 1
 37813  010974  C03B  FFD9         	movff	_USBCheckMSDRequest$2535,fsr2l
 37814  010978  C03C  FFDA         	movff	_USBCheckMSDRequest$2535+1,fsr2h
 37815  01097C  BEDF               	btfsc	indf2,7,c
 37816  01097E  D00F               	goto	i2l550
 37817  010980                     i2u851_40:
 37818                           
 37819                           ; BSR set to: 1
 37820                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 37821                           
 37822                           ; BSR set to: 1
 37823  010980  0E00               	movlw	0
 37824  010982  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 37825  010984  0E40               	movlw	64
 37826  010986  6E2F               	movwf	i2USBTransferOnePacket@data,c
 37827  010988  0E0D               	movlw	13
 37828  01098A  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 37829  01098C  0E40               	movlw	64
 37830  01098E  6E31               	movwf	i2USBTransferOnePacket@len,c
 37831  010990  0E02               	movlw	2
 37832  010992  EC0E  F07E         	call	i2_USBTransferOnePacket
 37833  010996  C02E  F0D0         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 37834  01099A  C02F  F0D1         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 37835  01099E                     i2l550:
 37836                           
 37837                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 37838  01099E  0E80               	movlw	128
 37839  0109A0  6E0D               	movwf	_inPipes+3,c	;volatile
 37840                           
 37841                           ;usb_device_msd.c: 263: break;
 37842  0109A2  0012               	return	
 37843  0109A4                     
 37844                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 37845  0109A4  010D               	movlb	13	; () banked
 37846  0109A6  5132               	movf	50,w,b	;volatile
 37847  0109A8  1133               	iorwf	51,w,b	;volatile
 37848  0109AA  A4D8               	btfss	status,2,c
 37849  0109AC  0012               	return	
 37850                           
 37851                           ; BSR set to: 13
 37852  0109AE  0536               	decf	54,w,b	;volatile
 37853  0109B0  1137               	iorwf	55,w,b	;volatile
 37854  0109B2  A4D8               	btfss	status,2,c
 37855  0109B4  0012               	return	
 37856                           
 37857                           ; BSR set to: 13
 37858                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 37859                           
 37860                           ; BSR set to: 13
 37861                           
 37862                           ; BSR set to: 13
 37863                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 37864  0109B6  0E00               	movlw	0
 37865  0109B8  6F38               	movwf	56,b	;volatile
 37866                           
 37867                           ; BSR set to: 13
 37868                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 37869  0109BA  0E38               	movlw	56
 37870  0109BC  6E0A               	movwf	_inPipes,c	;volatile
 37871  0109BE  0E0D               	movlw	13
 37872  0109C0  6E0B               	movwf	_inPipes+1,c	;volatile
 37873                           
 37874                           ; BSR set to: 13
 37875  0109C2  0E00               	movlw	0
 37876  0109C4  6E0F               	movwf	_inPipes+5,c	;volatile
 37877  0109C6  0E01               	movlw	1
 37878  0109C8  6E0E               	movwf	_inPipes+4,c	;volatile
 37879                           
 37880                           ; BSR set to: 13
 37881  0109CA  0EC1               	movlw	193
 37882  0109CC  6E0D               	movwf	_inPipes+3,c	;volatile
 37883                           
 37884                           ; BSR set to: 13
 37885                           ;usb_device_msd.c: 278: }
 37886                           
 37887                           ;usb_device_msd.c: 277: break;
 37888  0109CE  0012               	return	
 37889  0109D0                     i2l545:
 37890                           
 37891                           ; BSR set to: 13
 37892                           
 37893                           ; BSR set to: 13
 37894  0109D0  5131               	movf	49,w,b	;volatile
 37895                           
 37896                           ; Switch size 1, requested type "space"
 37897                           ; Number of cases is 2, Range of values is 254 to 255
 37898                           ; switch strategies available:
 37899                           ; Name         Instructions Cycles
 37900                           ; simple_byte            7     4 (average)
 37901                           ;	Chosen strategy is simple_byte
 37902  0109D2  0AFE               	xorlw	254	; case 254
 37903  0109D4  B4D8               	btfsc	status,2,c
 37904  0109D6  D7E6               	goto	i2l562
 37905  0109D8  0A01               	xorlw	1	; case 255
 37906  0109DA  A4D8               	btfss	status,2,c
 37907  0109DC  0012               	return	
 37908  0109DE  D7AB               	goto	i2l546
 37909  0109E0                     __end_of_USBCheckMSDRequest:
 37910                           	opt stack 0
 37911                           tosu	equ	0xFFF
 37912                           tosh	equ	0xFFE
 37913                           tosl	equ	0xFFD
 37914                           pclatu	equ	0xFFB
 37915                           pclath	equ	0xFFA
 37916                           tblptru	equ	0xFF8
 37917                           tblptrh	equ	0xFF7
 37918                           tblptrl	equ	0xFF6
 37919                           tablat	equ	0xFF5
 37920                           prodh	equ	0xFF4
 37921                           prodl	equ	0xFF3
 37922                           intcon	equ	0xFF2
 37923                           indf0	equ	0xFEF
 37924                           postinc0	equ	0xFEE
 37925                           fsr0h	equ	0xFEA
 37926                           fsr0l	equ	0xFE9
 37927                           wreg	equ	0xFE8
 37928                           indf1	equ	0xFE7
 37929                           postdec1	equ	0xFE5
 37930                           plusw1	equ	0xFE3
 37931                           fsr1h	equ	0xFE2
 37932                           fsr1l	equ	0xFE1
 37933                           indf2	equ	0xFDF
 37934                           postinc2	equ	0xFDE
 37935                           postdec2	equ	0xFDD
 37936                           plusw2	equ	0xFDB
 37937                           fsr2h	equ	0xFDA
 37938                           fsr2l	equ	0xFD9
 37939                           status	equ	0xFD8
 37940                           
 37941 ;; *************** function _USBCheckHIDRequest *****************
 37942 ;; Defined at:
 37943 ;;		line 153 in file "usb_device_hid.c"
 37944 ;; Parameters:    Size  Location     Type
 37945 ;;		None
 37946 ;; Auto vars:     Size  Location     Type
 37947 ;;		None
 37948 ;; Return value:  Size  Location     Type
 37949 ;;                  1    wreg      void 
 37950 ;; Registers used:
 37951 ;;		wreg, status,2, status,0
 37952 ;; Tracked objects:
 37953 ;;		On entry : 0/0
 37954 ;;		On exit  : 0/0
 37955 ;;		Unchanged: 0/0
 37956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37961 ;;Total ram usage:        0 bytes
 37962 ;; Hardware stack levels used:    1
 37963 ;; This function calls:
 37964 ;;		Nothing
 37965 ;; This function is called by:
 37966 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 37967 ;; This function uses a non-reentrant model
 37968 ;;
 37969                           
 37970                           	psect	text138
 37971  010526                     __ptext138:
 37972                           	opt stack 0
 37973  010526                     _USBCheckHIDRequest:
 37974                           	opt stack 15
 37975                           
 37976                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 37977                           
 37978                           ;incstack = 0
 37979  010526  010D               	movlb	13	; () banked
 37980  010528  5130               	movf	48,w,b	;volatile
 37981  01052A  0B1F               	andlw	31
 37982  01052C  06E8               	decf	wreg,f,c
 37983  01052E  A4D8               	btfss	status,2,c
 37984  010530  0012               	return	
 37985                           
 37986                           ; BSR set to: 13
 37987                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 37988                           
 37989                           ; BSR set to: 13
 37990                           
 37991                           ; BSR set to: 13
 37992  010532  5134               	movf	52,w,b	;volatile
 37993  010534  A4D8               	btfss	status,2,c
 37994  010536  0012               	return	
 37995                           
 37996                           ; BSR set to: 13
 37997                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 37998                           
 37999                           ; BSR set to: 13
 38000                           
 38001                           ; BSR set to: 13
 38002  010538  0E06               	movlw	6
 38003  01053A  1931               	xorwf	49,w,b	;volatile
 38004  01053C  B4D8               	btfsc	status,2,c
 38005  01053E  D018               	goto	i2l425
 38006  010540  D01F               	goto	i2l428
 38007  010542                     
 38008                           ; BSR set to: 13
 38009                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 38010                           
 38011                           ; BSR set to: 13
 38012  010542  042D               	decf	_USBActiveConfiguration,w,c	;volatile
 38013  010544  A4D8               	btfss	status,2,c
 38014  010546  D01C               	goto	i2l428
 38015                           
 38016                           ; BSR set to: 13
 38017                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 38018  010548  0ED0               	movlw	low (_configDescriptor1+18)
 38019  01054A  6E0A               	movwf	_inPipes,c	;volatile
 38020  01054C  0EA0               	movlw	high (_configDescriptor1+18)
 38021  01054E  6E0B               	movwf	_inPipes+1,c	;volatile
 38022                           
 38023                           ; BSR set to: 13
 38024  010550  0E00               	movlw	0
 38025  010552  6E0F               	movwf	_inPipes+5,c	;volatile
 38026  010554  0E09               	movlw	9
 38027  010556  D00A               	goto	L71
 38028  010558                     i2l10620:
 38029                           
 38030                           ; BSR set to: 13
 38031  010558  0EC0               	movlw	192
 38032  01055A  6E0D               	movwf	_inPipes+3,c	;volatile
 38033                           
 38034                           ; BSR set to: 13
 38035                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 38036  01055C  D011               	goto	i2l428
 38037  01055E                     
 38038                           ; BSR set to: 13
 38039                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 38040                           
 38041                           ; BSR set to: 13
 38042  01055E  0E84               	movlw	low _hid_rpt01
 38043  010560  6E0A               	movwf	_inPipes,c	;volatile
 38044  010562  0EA1               	movlw	high _hid_rpt01
 38045  010564  6E0B               	movwf	_inPipes+1,c	;volatile
 38046                           
 38047                           ; BSR set to: 13
 38048  010566  0E00               	movlw	0
 38049  010568  6E0F               	movwf	_inPipes+5,c	;volatile
 38050  01056A  0E1D               	movlw	29
 38051  01056C                     L71:
 38052  01056C  6E0E               	movwf	_inPipes+4,c	;volatile
 38053  01056E  D7F4               	goto	i2l10620
 38054  010570                     i2l425:
 38055                           
 38056                           ; BSR set to: 13
 38057                           
 38058                           ; BSR set to: 13
 38059  010570  5133               	movf	51,w,b	;volatile
 38060                           
 38061                           ; Switch size 1, requested type "space"
 38062                           ; Number of cases is 3, Range of values is 33 to 35
 38063                           ; switch strategies available:
 38064                           ; Name         Instructions Cycles
 38065                           ; simple_byte           10     6 (average)
 38066                           ;	Chosen strategy is simple_byte
 38067  010572  0A21               	xorlw	33	; case 33
 38068  010574  B4D8               	btfsc	status,2,c
 38069  010576  D7E5               	goto	i2l426
 38070  010578  0A03               	xorlw	3	; case 34
 38071  01057A  B4D8               	btfsc	status,2,c
 38072  01057C  D7F0               	goto	i2l429
 38073  01057E  0A01               	xorlw	1	; case 35
 38074  010580                     i2l428:
 38075                           
 38076                           ; BSR set to: 13
 38077                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 38078                           
 38079                           ; BSR set to: 13
 38080                           
 38081                           ; BSR set to: 13
 38082  010580  3930               	swapf	48,w,b	;volatile
 38083  010582  32E8               	rrcf	wreg,f,c
 38084  010584  0B03               	andlw	3
 38085  010586  06E8               	decf	wreg,f,c
 38086  010588  A4D8               	btfss	status,2,c
 38087  01058A  0012               	return	
 38088  01058C  D020               	goto	i2l432
 38089  01058E                     
 38090                           ; BSR set to: 13
 38091                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 38092                           
 38093                           ; BSR set to: 13
 38094  01058E  0E99               	movlw	low _idle_rate
 38095  010590  6E0A               	movwf	_inPipes,c	;volatile
 38096  010592  0E01               	movlw	high _idle_rate
 38097  010594  6E0B               	movwf	_inPipes+1,c	;volatile
 38098                           
 38099                           ; BSR set to: 13
 38100  010596  0E00               	movlw	0
 38101  010598  6E0F               	movwf	_inPipes+5,c	;volatile
 38102  01059A  0E01               	movlw	1
 38103  01059C  6E0E               	movwf	_inPipes+4,c	;volatile
 38104                           
 38105                           ; BSR set to: 13
 38106  01059E  0EC1               	movlw	193
 38107  0105A0  6E0D               	movwf	_inPipes+3,c	;volatile
 38108                           
 38109                           ;usb_device_hid.c: 223: break;
 38110  0105A2  0012               	return	
 38111  0105A4                     
 38112                           ; BSR set to: 13
 38113                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 38114                           
 38115                           ; BSR set to: 13
 38116  0105A4  0E80               	movlw	128
 38117  0105A6  6E0D               	movwf	_inPipes+3,c	;volatile
 38118                           
 38119                           ; BSR set to: 13
 38120                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 38121  0105A8  CD33 F199          	movff	3379,_idle_rate	;volatile
 38122                           
 38123                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 38124  0105AC  0012               	return	
 38125  0105AE                     
 38126                           ; BSR set to: 13
 38127                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 38128                           
 38129                           ; BSR set to: 13
 38130  0105AE  0E98               	movlw	low _active_protocol
 38131  0105B0  6E0A               	movwf	_inPipes,c	;volatile
 38132  0105B2  0E01               	movlw	high _active_protocol
 38133  0105B4  6E0B               	movwf	_inPipes+1,c	;volatile
 38134                           
 38135                           ; BSR set to: 13
 38136  0105B6  0E00               	movlw	0
 38137  0105B8  6E0F               	movwf	_inPipes+5,c	;volatile
 38138  0105BA  0E01               	movlw	1
 38139  0105BC  6E0E               	movwf	_inPipes+4,c	;volatile
 38140                           
 38141                           ; BSR set to: 13
 38142  0105BE  0E81               	movlw	129
 38143  0105C0  6E0D               	movwf	_inPipes+3,c	;volatile
 38144                           
 38145                           ;usb_device_hid.c: 234: break;
 38146  0105C2  0012               	return	
 38147  0105C4                     
 38148                           ; BSR set to: 13
 38149                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 38150                           
 38151                           ; BSR set to: 13
 38152  0105C4  0E80               	movlw	128
 38153  0105C6  6E0D               	movwf	_inPipes+3,c	;volatile
 38154                           
 38155                           ; BSR set to: 13
 38156                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 38157  0105C8  CD32 F198          	movff	3378,_active_protocol	;volatile
 38158                           
 38159                           ; BSR set to: 13
 38160                           ;usb_device_hid.c: 239: }
 38161                           
 38162                           ;usb_device_hid.c: 238: break;
 38163  0105CC  0012               	return	
 38164  0105CE                     i2l432:
 38165                           
 38166                           ; BSR set to: 13
 38167                           
 38168                           ; BSR set to: 13
 38169  0105CE  5131               	movf	49,w,b	;volatile
 38170                           
 38171                           ; Switch size 1, requested type "space"
 38172                           ; Number of cases is 6, Range of values is 1 to 11
 38173                           ; switch strategies available:
 38174                           ; Name         Instructions Cycles
 38175                           ; simple_byte           19    10 (average)
 38176                           ;	Chosen strategy is simple_byte
 38177  0105D0  0A01               	xorlw	1	; case 1
 38178  0105D2  B4D8               	btfsc	status,2,c
 38179  0105D4  0012               	return	
 38180  0105D6  0A03               	xorlw	3	; case 2
 38181  0105D8  B4D8               	btfsc	status,2,c
 38182  0105DA  D7D9               	goto	i2l436
 38183  0105DC  0A01               	xorlw	1	; case 3
 38184  0105DE  B4D8               	btfsc	status,2,c
 38185  0105E0  D7E6               	goto	i2l438
 38186  0105E2  0A0A               	xorlw	10	; case 9
 38187  0105E4  B4D8               	btfsc	status,2,c
 38188  0105E6  0012               	return	
 38189  0105E8  0A03               	xorlw	3	; case 10
 38190  0105EA  B4D8               	btfsc	status,2,c
 38191  0105EC  D7DB               	goto	i2l437
 38192  0105EE  0A01               	xorlw	1	; case 11
 38193  0105F0  A4D8               	btfss	status,2,c
 38194  0105F2  0012               	return	
 38195  0105F4  D7E7               	goto	i2l439
 38196  0105F6                     __end_of_USBCheckHIDRequest:
 38197                           	opt stack 0
 38198                           tosu	equ	0xFFF
 38199                           tosh	equ	0xFFE
 38200                           tosl	equ	0xFFD
 38201                           pclatu	equ	0xFFB
 38202                           pclath	equ	0xFFA
 38203                           tblptru	equ	0xFF8
 38204                           tblptrh	equ	0xFF7
 38205                           tblptrl	equ	0xFF6
 38206                           tablat	equ	0xFF5
 38207                           prodh	equ	0xFF4
 38208                           prodl	equ	0xFF3
 38209                           intcon	equ	0xFF2
 38210                           indf0	equ	0xFEF
 38211                           postinc0	equ	0xFEE
 38212                           fsr0h	equ	0xFEA
 38213                           fsr0l	equ	0xFE9
 38214                           wreg	equ	0xFE8
 38215                           indf1	equ	0xFE7
 38216                           postdec1	equ	0xFE5
 38217                           plusw1	equ	0xFE3
 38218                           fsr1h	equ	0xFE2
 38219                           fsr1l	equ	0xFE1
 38220                           indf2	equ	0xFDF
 38221                           postinc2	equ	0xFDE
 38222                           postdec2	equ	0xFDD
 38223                           plusw2	equ	0xFDB
 38224                           fsr2h	equ	0xFDA
 38225                           fsr2l	equ	0xFD9
 38226                           status	equ	0xFD8
 38227                           
 38228 ;; *************** function _MSDTransferTerminated *****************
 38229 ;; Defined at:
 38230 ;;		line 1674 in file "usb_device_msd.c"
 38231 ;; Parameters:    Size  Location     Type
 38232 ;;  handle          2   11[COMRAM] PTR void 
 38233 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 38234 ;;		 -> BDT(48), 
 38235 ;; Auto vars:     Size  Location     Type
 38236 ;;		None
 38237 ;; Return value:  Size  Location     Type
 38238 ;;                  1    wreg      void 
 38239 ;; Registers used:
 38240 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38241 ;; Tracked objects:
 38242 ;;		On entry : 0/0
 38243 ;;		On exit  : 0/0
 38244 ;;		Unchanged: 0/0
 38245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38246 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38247 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38249 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38250 ;;Total ram usage:        4 bytes
 38251 ;; Hardware stack levels used:    1
 38252 ;; Hardware stack levels required when called:    1
 38253 ;; This function calls:
 38254 ;;		i2_USBStallEndpoint
 38255 ;;		i2_USBTransferOnePacket
 38256 ;; This function is called by:
 38257 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 38258 ;; This function uses a non-reentrant model
 38259 ;;
 38260                           
 38261                           	psect	text139
 38262  011D9A                     __ptext139:
 38263                           	opt stack 0
 38264  011D9A                     _MSDTransferTerminated:
 38265                           	opt stack 14
 38266                           
 38267                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 38268                           
 38269                           ; BSR set to: 13
 38270                           ;incstack = 0
 38271  011D9A  0101               	movlb	1	; () banked
 38272  011D9C  516D               	movf	_MSDCBWValid& (0+255),w,b
 38273  011D9E  A4D8               	btfss	status,2,c
 38274  011DA0  D00B               	goto	i2l780
 38275                           
 38276                           ; BSR set to: 1
 38277                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 38278  011DA2  0E01               	movlw	1
 38279  011DA4  6E2E               	movwf	i2USBStallEndpoint@dir,c
 38280  011DA6  0E02               	movlw	2
 38281  011DA8  EC8B  F07D         	call	i2_USBStallEndpoint
 38282                           
 38283                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 38284  011DAC  0E00               	movlw	0
 38285  011DAE  6E2E               	movwf	i2USBStallEndpoint@dir,c
 38286  011DB0  0E02               	movlw	2
 38287  011DB2  EC8B  F07D         	call	i2_USBStallEndpoint
 38288                           
 38289                           ;usb_device_msd.c: 1681: }
 38290  011DB6  0012               	return	
 38291  011DB8                     i2l780:
 38292  011DB8  C135  F03B         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2623
 38293  011DBC  C136  F03C         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2623+1
 38294  011DC0  503B               	movf	_MSDTransferTerminated$2623,w,c
 38295  011DC2  1839               	xorwf	MSDTransferTerminated@handle,w,c
 38296  011DC4  E114               	bnz	i2l783
 38297  011DC6  503C               	movf	_MSDTransferTerminated$2623+1,w,c
 38298  011DC8  183A               	xorwf	MSDTransferTerminated@handle+1,w,c
 38299  011DCA  A4D8               	btfss	status,2,c
 38300  011DCC  0012               	return	
 38301                           
 38302                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 38303  011DCE  0E00               	movlw	0
 38304  011DD0  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 38305  011DD2  0E40               	movlw	64
 38306  011DD4  6E2F               	movwf	i2USBTransferOnePacket@data,c
 38307  011DD6  0E0D               	movlw	13
 38308  011DD8  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 38309  011DDA  0E40               	movlw	64
 38310  011DDC  6E31               	movwf	i2USBTransferOnePacket@len,c
 38311  011DDE  0E02               	movlw	2
 38312  011DE0  EC0E  F07E         	call	i2_USBTransferOnePacket
 38313  011DE4  C02E  F0D0         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 38314  011DE8  C02F  F0D1         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 38315  011DEC  0012               	return	
 38316  011DEE                     i2l783:
 38317  011DEE  0012               	return		;funcret
 38318  011DF0                     __end_of_MSDTransferTerminated:
 38319                           	opt stack 0
 38320                           tosu	equ	0xFFF
 38321                           tosh	equ	0xFFE
 38322                           tosl	equ	0xFFD
 38323                           pclatu	equ	0xFFB
 38324                           pclath	equ	0xFFA
 38325                           tblptru	equ	0xFF8
 38326                           tblptrh	equ	0xFF7
 38327                           tblptrl	equ	0xFF6
 38328                           tablat	equ	0xFF5
 38329                           prodh	equ	0xFF4
 38330                           prodl	equ	0xFF3
 38331                           intcon	equ	0xFF2
 38332                           indf0	equ	0xFEF
 38333                           postinc0	equ	0xFEE
 38334                           fsr0h	equ	0xFEA
 38335                           fsr0l	equ	0xFE9
 38336                           wreg	equ	0xFE8
 38337                           indf1	equ	0xFE7
 38338                           postdec1	equ	0xFE5
 38339                           plusw1	equ	0xFE3
 38340                           fsr1h	equ	0xFE2
 38341                           fsr1l	equ	0xFE1
 38342                           indf2	equ	0xFDF
 38343                           postinc2	equ	0xFDE
 38344                           postdec2	equ	0xFDD
 38345                           plusw2	equ	0xFDB
 38346                           fsr2h	equ	0xFDA
 38347                           fsr2l	equ	0xFD9
 38348                           status	equ	0xFD8
 38349                           
 38350 ;; *************** function i2_USBStallEndpoint *****************
 38351 ;; Defined at:
 38352 ;;		line 1073 in file "usb_device.c"
 38353 ;; Parameters:    Size  Location     Type
 38354 ;;  ep              1    wreg     unsigned char 
 38355 ;;  dir             1    0[COMRAM] unsigned char 
 38356 ;; Auto vars:     Size  Location     Type
 38357 ;;  ep              1    5[COMRAM] unsigned char 
 38358 ;;  USBStallEndp    2    6[COMRAM] PTR struct __BDT
 38359 ;;		 -> BDT(48), 
 38360 ;; Return value:  Size  Location     Type
 38361 ;;                  1    wreg      void 
 38362 ;; Registers used:
 38363 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38364 ;; Tracked objects:
 38365 ;;		On entry : 0/0
 38366 ;;		On exit  : 0/0
 38367 ;;		Unchanged: 0/0
 38368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38369 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38370 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38371 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38372 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38373 ;;Total ram usage:        8 bytes
 38374 ;; Hardware stack levels used:    1
 38375 ;; This function calls:
 38376 ;;		Nothing
 38377 ;; This function is called by:
 38378 ;;		_MSDTransferTerminated
 38379 ;; This function uses a non-reentrant model
 38380 ;;
 38381                           
 38382                           	psect	text140
 38383  00FB16                     __ptext140:
 38384                           	opt stack 0
 38385  00FB16                     i2_USBStallEndpoint:
 38386                           	opt stack 14
 38387                           
 38388                           ;incstack = 0
 38389                           ;i2USBStallEndpoint@ep stored from wreg
 38390  00FB16  6E33               	movwf	i2USBStallEndpoint@ep,c
 38391                           
 38392                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 38393  00FB18  5033               	movf	i2USBStallEndpoint@ep,w,c
 38394  00FB1A  A4D8               	btfss	status,2,c
 38395  00FB1C  D02B               	goto	i2l192
 38396                           
 38397                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 38398  00FB1E  EE20 F001          	lfsr	2,1
 38399  00FB22  501C               	movf	_pBDTEntryEP0OutNext,w,c
 38400  00FB24  26D9               	addwf	fsr2l,f,c
 38401  00FB26  501D               	movf	_pBDTEntryEP0OutNext+1,w,c
 38402  00FB28  22DA               	addwfc	fsr2h,f,c
 38403  00FB2A  0E08               	movlw	8
 38404  00FB2C  6EDF               	movwf	indf2,c
 38405                           
 38406                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 38407  00FB2E  EE20 F002          	lfsr	2,2
 38408  00FB32  501C               	movf	_pBDTEntryEP0OutNext,w,c
 38409  00FB34  26D9               	addwf	fsr2l,f,c
 38410  00FB36  501D               	movf	_pBDTEntryEP0OutNext+1,w,c
 38411  00FB38  22DA               	addwfc	fsr2h,f,c
 38412  00FB3A  0E30               	movlw	48
 38413  00FB3C  6EDE               	movwf	postinc2,c
 38414  00FB3E  0E0D               	movlw	13
 38415  00FB40  6EDD               	movwf	postdec2,c
 38416                           
 38417                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 38418  00FB42  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 38419  00FB46  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 38420  00FB4A  0E0C               	movlw	12
 38421  00FB4C  6EDF               	movwf	indf2,c
 38422                           
 38423                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 38424  00FB4E  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 38425  00FB52  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 38426  00FB56  0E00               	movlw	0
 38427  00FB58  8EDB               	bsf	plusw2,7,c
 38428                           
 38429                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 38430  00FB5A  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 38431  00FB5E  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 38432  00FB62  0E04               	movlw	4
 38433  00FB64  6EDF               	movwf	indf2,c
 38434                           
 38435                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 38436  00FB66  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 38437  00FB6A  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 38438  00FB6E  0E00               	movlw	0
 38439  00FB70  8EDB               	bsf	plusw2,7,c
 38440                           
 38441                           ;usb_device.c: 1089: }
 38442  00FB72  0012               	return	
 38443  00FB74                     i2l192:
 38444                           
 38445                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 38446  00FB74  502E               	movf	i2USBStallEndpoint@dir,w,c
 38447  00FB76  6E2F               	movwf	??i2_USBStallEndpoint& (0+255),c
 38448  00FB78  6A30               	clrf	(??i2_USBStallEndpoint+1)& (0+255),c
 38449  00FB7A  90D8               	bcf	status,0,c
 38450  00FB7C  362F               	rlcf	??i2_USBStallEndpoint,f,c
 38451  00FB7E  3630               	rlcf	??i2_USBStallEndpoint+1,f,c
 38452  00FB80  5033               	movf	i2USBStallEndpoint@ep,w,c
 38453  00FB82  6E31               	movwf	(??i2_USBStallEndpoint+2)& (0+255),c
 38454  00FB84  6A32               	clrf	(??i2_USBStallEndpoint+3)& (0+255),c
 38455  00FB86  90D8               	bcf	status,0,c
 38456  00FB88  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 38457  00FB8A  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 38458  00FB8C  90D8               	bcf	status,0,c
 38459  00FB8E  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 38460  00FB90  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 38461  00FB92  502F               	movf	??i2_USBStallEndpoint,w,c
 38462  00FB94  2631               	addwf	??i2_USBStallEndpoint+2,f,c
 38463  00FB96  5030               	movf	??i2_USBStallEndpoint+1,w,c
 38464  00FB98  2232               	addwfc	??i2_USBStallEndpoint+3,f,c
 38465  00FB9A  90D8               	bcf	status,0,c
 38466  00FB9C  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 38467  00FB9E  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 38468  00FBA0  90D8               	bcf	status,0,c
 38469  00FBA2  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 38470  00FBA4  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 38471  00FBA6  0E00               	movlw	0
 38472  00FBA8  2431               	addwf	??i2_USBStallEndpoint+2,w,c
 38473  00FBAA  6E34               	movwf	i2USBStallEndpoint@p,c
 38474  00FBAC  0E0D               	movlw	13
 38475  00FBAE  2032               	addwfc	??i2_USBStallEndpoint+3,w,c
 38476  00FBB0  6E35               	movwf	i2USBStallEndpoint@p+1,c
 38477                           
 38478                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 38479  00FBB2  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 38480  00FBB6  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 38481  00FBBA  0E00               	movlw	0
 38482  00FBBC  84DB               	bsf	plusw2,2,c
 38483                           
 38484                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 38485  00FBBE  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 38486  00FBC2  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 38487  00FBC6  0E00               	movlw	0
 38488  00FBC8  8EDB               	bsf	plusw2,7,c
 38489                           
 38490                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 38491  00FBCA  5033               	movf	i2USBStallEndpoint@ep,w,c
 38492  00FBCC  0D04               	mullw	4
 38493  00FBCE  CFF3 F02F          	movff	prodl,??i2_USBStallEndpoint
 38494  00FBD2  CFF4 F030          	movff	prodh,??i2_USBStallEndpoint+1
 38495  00FBD6  502E               	movf	i2USBStallEndpoint@dir,w,c
 38496  00FBD8  0D02               	mullw	2
 38497  00FBDA  50F3               	movf	prodl,w,c
 38498  00FBDC  262F               	addwf	??i2_USBStallEndpoint,f,c
 38499  00FBDE  50F4               	movf	prodh,w,c
 38500  00FBE0  2230               	addwfc	??i2_USBStallEndpoint+1,f,c
 38501  00FBE2  90D8               	bcf	status,0,c
 38502  00FBE4  362F               	rlcf	??i2_USBStallEndpoint,f,c
 38503  00FBE6  3630               	rlcf	??i2_USBStallEndpoint+1,f,c
 38504  00FBE8  90D8               	bcf	status,0,c
 38505  00FBEA  362F               	rlcf	??i2_USBStallEndpoint,f,c
 38506  00FBEC  3630               	rlcf	??i2_USBStallEndpoint+1,f,c
 38507  00FBEE  0E04               	movlw	4
 38508  00FBF0  262F               	addwf	??i2_USBStallEndpoint,f,c
 38509  00FBF2  0E00               	movlw	0
 38510  00FBF4  2230               	addwfc	??i2_USBStallEndpoint+1,f,c
 38511  00FBF6  0E00               	movlw	0
 38512  00FBF8  242F               	addwf	??i2_USBStallEndpoint,w,c
 38513  00FBFA  6E34               	movwf	i2USBStallEndpoint@p,c
 38514  00FBFC  0E0D               	movlw	13
 38515  00FBFE  2030               	addwfc	??i2_USBStallEndpoint+1,w,c
 38516  00FC00  6E35               	movwf	i2USBStallEndpoint@p+1,c
 38517                           
 38518                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 38519  00FC02  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 38520  00FC06  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 38521  00FC0A  0E00               	movlw	0
 38522  00FC0C  84DB               	bsf	plusw2,2,c
 38523                           
 38524                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 38525  00FC0E  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 38526  00FC12  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 38527  00FC16  0E00               	movlw	0
 38528  00FC18  8EDB               	bsf	plusw2,7,c
 38529  00FC1A  0012               	return	
 38530  00FC1C                     __end_ofi2_USBStallEndpoint:
 38531                           	opt stack 0
 38532                           tosu	equ	0xFFF
 38533                           tosh	equ	0xFFE
 38534                           tosl	equ	0xFFD
 38535                           pclatu	equ	0xFFB
 38536                           pclath	equ	0xFFA
 38537                           tblptru	equ	0xFF8
 38538                           tblptrh	equ	0xFF7
 38539                           tblptrl	equ	0xFF6
 38540                           tablat	equ	0xFF5
 38541                           prodh	equ	0xFF4
 38542                           prodl	equ	0xFF3
 38543                           intcon	equ	0xFF2
 38544                           indf0	equ	0xFEF
 38545                           postinc0	equ	0xFEE
 38546                           fsr0h	equ	0xFEA
 38547                           fsr0l	equ	0xFE9
 38548                           wreg	equ	0xFE8
 38549                           indf1	equ	0xFE7
 38550                           postdec1	equ	0xFE5
 38551                           plusw1	equ	0xFE3
 38552                           fsr1h	equ	0xFE2
 38553                           fsr1l	equ	0xFE1
 38554                           indf2	equ	0xFDF
 38555                           postinc2	equ	0xFDE
 38556                           postdec2	equ	0xFDD
 38557                           plusw2	equ	0xFDB
 38558                           fsr2h	equ	0xFDA
 38559                           fsr2l	equ	0xFD9
 38560                           status	equ	0xFD8
 38561                           
 38562 ;; *************** function _APP_DeviceMSDInitialize *****************
 38563 ;; Defined at:
 38564 ;;		line 84 in file "app_device_msd.c"
 38565 ;; Parameters:    Size  Location     Type
 38566 ;;		None
 38567 ;; Auto vars:     Size  Location     Type
 38568 ;;		None
 38569 ;; Return value:  Size  Location     Type
 38570 ;;                  1    wreg      void 
 38571 ;; Registers used:
 38572 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 38573 ;; Tracked objects:
 38574 ;;		On entry : 0/0
 38575 ;;		On exit  : 0/0
 38576 ;;		Unchanged: 0/0
 38577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38582 ;;Total ram usage:        0 bytes
 38583 ;; Hardware stack levels used:    1
 38584 ;; Hardware stack levels required when called:    2
 38585 ;; This function calls:
 38586 ;;		_USBEnableEndpoint
 38587 ;;		_USBMSDInit
 38588 ;; This function is called by:
 38589 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 38590 ;; This function uses a non-reentrant model
 38591 ;;
 38592                           
 38593                           	psect	text141
 38594  01287E                     __ptext141:
 38595                           	opt stack 0
 38596  01287E                     _APP_DeviceMSDInitialize:
 38597                           	opt stack 13
 38598                           
 38599                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 38600                           
 38601                           ;incstack = 0
 38602  01287E  0E1E               	movlw	30
 38603  012880  6E36               	movwf	USBEnableEndpoint@options,c
 38604  012882  0E02               	movlw	2
 38605  012884  EC93  F091         	call	_USBEnableEndpoint
 38606                           
 38607                           ;app_device_msd.c: 93: USBMSDInit();
 38608  012888  EC83  F07C         	call	_USBMSDInit	;wreg free
 38609  01288C  0012               	return		;funcret
 38610  01288E                     __end_of_APP_DeviceMSDInitialize:
 38611                           	opt stack 0
 38612                           tosu	equ	0xFFF
 38613                           tosh	equ	0xFFE
 38614                           tosl	equ	0xFFD
 38615                           pclatu	equ	0xFFB
 38616                           pclath	equ	0xFFA
 38617                           tblptru	equ	0xFF8
 38618                           tblptrh	equ	0xFF7
 38619                           tblptrl	equ	0xFF6
 38620                           tablat	equ	0xFF5
 38621                           prodh	equ	0xFF4
 38622                           prodl	equ	0xFF3
 38623                           intcon	equ	0xFF2
 38624                           indf0	equ	0xFEF
 38625                           postinc0	equ	0xFEE
 38626                           fsr0h	equ	0xFEA
 38627                           fsr0l	equ	0xFE9
 38628                           wreg	equ	0xFE8
 38629                           indf1	equ	0xFE7
 38630                           postdec1	equ	0xFE5
 38631                           plusw1	equ	0xFE3
 38632                           fsr1h	equ	0xFE2
 38633                           fsr1l	equ	0xFE1
 38634                           indf2	equ	0xFDF
 38635                           postinc2	equ	0xFDE
 38636                           postdec2	equ	0xFDD
 38637                           plusw2	equ	0xFDB
 38638                           fsr2h	equ	0xFDA
 38639                           fsr2l	equ	0xFD9
 38640                           status	equ	0xFD8
 38641                           
 38642 ;; *************** function _USBMSDInit *****************
 38643 ;; Defined at:
 38644 ;;		line 142 in file "usb_device_msd.c"
 38645 ;; Parameters:    Size  Location     Type
 38646 ;;		None
 38647 ;; Auto vars:     Size  Location     Type
 38648 ;;		None
 38649 ;; Return value:  Size  Location     Type
 38650 ;;                  1    wreg      void 
 38651 ;; Registers used:
 38652 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 38653 ;; Tracked objects:
 38654 ;;		On entry : 0/0
 38655 ;;		On exit  : 0/0
 38656 ;;		Unchanged: 0/0
 38657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38660 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38661 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38662 ;;Total ram usage:        3 bytes
 38663 ;; Hardware stack levels used:    1
 38664 ;; Hardware stack levels required when called:    1
 38665 ;; This function calls:
 38666 ;;		i2_ExternalFlash_MediaDetect
 38667 ;;		i2_ExternalFlash_MediaInitialize
 38668 ;;		i2_ResetSenseData
 38669 ;;		i2_USBTransferOnePacket
 38670 ;; This function is called by:
 38671 ;;		_APP_DeviceMSDInitialize
 38672 ;; This function uses a non-reentrant model
 38673 ;;
 38674                           
 38675                           	psect	text142
 38676  00F906                     __ptext142:
 38677                           	opt stack 0
 38678  00F906                     _USBMSDInit:
 38679                           	opt stack 13
 38680                           
 38681                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 38682                           
 38683                           ;incstack = 0
 38684  00F906  0E00               	movlw	0
 38685  00F908  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 38686  00F90A  0E40               	movlw	64
 38687  00F90C  6E2F               	movwf	i2USBTransferOnePacket@data,c
 38688  00F90E  0E0D               	movlw	13
 38689  00F910  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 38690  00F912  0E40               	movlw	64
 38691  00F914  6E31               	movwf	i2USBTransferOnePacket@len,c
 38692  00F916  0E02               	movlw	2
 38693  00F918  EC0E  F07E         	call	i2_USBTransferOnePacket
 38694  00F91C  C02E  F0D0         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 38695  00F920  C02F  F0D1         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 38696  00F924  C014  F0CE         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 38697  00F928  C015  F0CF         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 38698                           
 38699                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 38700  00F92C  0E00               	movlw	0
 38701  00F92E  6E25               	movwf	_MSD_State,c
 38702                           
 38703                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 38704  00F930  0100               	movlb	0	; () banked
 38705  00F932  69D2               	setf	_MSDCommandState& (0+255),b
 38706                           
 38707                           ; BSR set to: 0
 38708                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 38709  00F934  0E00               	movlw	0
 38710  00F936  0101               	movlb	1	; () banked
 38711  00F938  6F72               	movwf	_MSDReadState& (0+255),b
 38712                           
 38713                           ; BSR set to: 1
 38714                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 38715  00F93A  0E00               	movlw	0
 38716  00F93C  6F71               	movwf	_MSDWriteState& (0+255),b
 38717                           
 38718                           ; BSR set to: 1
 38719                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 38720  00F93E  0E00               	movlw	0
 38721  00F940  6E24               	movwf	_MSDHostNoData,c
 38722                           
 38723                           ; BSR set to: 1
 38724                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 38725  00F942  0E00               	movlw	0
 38726  00F944  6F43               	movwf	_gblNumBLKS& (0+255),b
 38727  00F946  0E00               	movlw	0
 38728  00F948  6F44               	movwf	(_gblNumBLKS+1)& (0+255),b
 38729  00F94A  0E00               	movlw	0
 38730  00F94C  6F45               	movwf	(_gblNumBLKS+2)& (0+255),b
 38731  00F94E  0E00               	movlw	0
 38732  00F950  6F46               	movwf	(_gblNumBLKS+3)& (0+255),b
 38733                           
 38734                           ; BSR set to: 1
 38735                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 38736  00F952  0E00               	movlw	0
 38737  00F954  6F3F               	movwf	_gblBLKLen& (0+255),b
 38738  00F956  0E00               	movlw	0
 38739  00F958  6F40               	movwf	(_gblBLKLen+1)& (0+255),b
 38740  00F95A  0E00               	movlw	0
 38741  00F95C  6F41               	movwf	(_gblBLKLen+2)& (0+255),b
 38742  00F95E  0E00               	movlw	0
 38743  00F960  6F42               	movwf	(_gblBLKLen+3)& (0+255),b
 38744                           
 38745                           ; BSR set to: 1
 38746                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 38747  00F962  0E01               	movlw	1
 38748  00F964  6F6D               	movwf	_MSDCBWValid& (0+255),b
 38749                           
 38750                           ; BSR set to: 1
 38751                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 38752  00F966  0E00               	movlw	0
 38753  00F968  6F62               	movwf	(_gblMediaPresent+1)& (0+255),b
 38754  00F96A  0E00               	movlw	0
 38755  00F96C  6F61               	movwf	_gblMediaPresent& (0+255),b
 38756                           
 38757                           ; BSR set to: 1
 38758                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 38759  00F96E  0E00               	movlw	0
 38760  00F970  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 38761  00F972  D04A               	goto	i2l534
 38762  00F974                     
 38763                           ; BSR set to: 1
 38764                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 38765                           
 38766                           ; BSR set to: 1
 38767  00F974  510D               	movf	(_gblCBW+13)& (0+255),w,b
 38768  00F976  0D01               	mullw	1
 38769  00F978  0E6E               	movlw	low _SoftDetach
 38770  00F97A  24F3               	addwf	prodl,w,c
 38771  00F97C  6ED9               	movwf	fsr2l,c
 38772  00F97E  0E01               	movlw	high _SoftDetach
 38773  00F980  20F4               	addwfc	prodh,w,c
 38774  00F982  6EDA               	movwf	fsr2h,c
 38775  00F984  0E00               	movlw	0
 38776  00F986  6EDF               	movwf	indf2,c
 38777                           
 38778                           ; BSR set to: 1
 38779                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 38780  00F988  C1AF  F02E         	movff	_LUN+21,i2ExternalFlash_MediaDetect@config
 38781  00F98C  C1B0  F02F         	movff	_LUN+22,i2ExternalFlash_MediaDetect@config+1
 38782  00F990  EE21  F0A3         	lfsr	2,_LUN+9
 38783  00F994  D801               	call	i2u1620_48
 38784  00F996  D00A               	goto	i2u1620_49
 38785  00F998                     i2u1620_48:
 38786  00F998  0005               	push	
 38787  00F99A  6EFA               	movwf	pclath,c
 38788  00F99C  50DE               	movf	postinc2,w,c
 38789  00F99E  6EFD               	movwf	tosl,c
 38790  00F9A0  50DE               	movf	postinc2,w,c
 38791  00F9A2  6EFE               	movwf	tosh,c
 38792  00F9A4  50DE               	movf	postinc2,w,c
 38793  00F9A6  6EFF               	movwf	tosu,c
 38794  00F9A8  50FA               	movf	pclath,w,c
 38795  00F9AA  0012               	return		;indir
 38796  00F9AC                     i2u1620_49:
 38797  00F9AC  0900               	iorlw	0
 38798  00F9AE  B4D8               	btfsc	status,2,c
 38799  00F9B0  D027               	goto	i2l537
 38800                           
 38801                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 38802  00F9B2  C1AF  F02E         	movff	_LUN+21,i2ExternalFlash_MediaInitialize@config
 38803  00F9B6  C1B0  F02F         	movff	_LUN+22,i2ExternalFlash_MediaInitialize@config+1
 38804  00F9BA  D801               	call	i2u1622_48
 38805  00F9BC  D00B               	goto	i2u1622_49
 38806  00F9BE                     i2u1622_48:
 38807  00F9BE  0005               	push	
 38808  00F9C0  6EFA               	movwf	pclath,c
 38809  00F9C2  0101               	movlb	1	; () banked
 38810  00F9C4  519A               	movf	_LUN& (0+255),w,b
 38811  00F9C6  6EFD               	movwf	tosl,c
 38812  00F9C8  519B               	movf	(_LUN+1)& (0+255),w,b
 38813  00F9CA  6EFE               	movwf	tosh,c
 38814  00F9CC  519C               	movf	(_LUN+2)& (0+255),w,b
 38815  00F9CE  6EFF               	movwf	tosu,c
 38816  00F9D0  50FA               	movf	pclath,w,c
 38817  00F9D2  0012               	return		;indir
 38818  00F9D4                     i2u1622_49:
 38819  00F9D4  502E               	movf	?i2_ExternalFlash_MediaInitialize,w,c
 38820  00F9D6  102F               	iorwf	?i2_ExternalFlash_MediaInitialize+1,w,c
 38821  00F9D8  B4D8               	btfsc	status,2,c
 38822  00F9DA  D012               	goto	i2l537
 38823                           
 38824                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 38825  00F9DC  C10D  F039         	movff	_gblCBW+13,??_USBMSDInit
 38826  00F9E0  0E01               	movlw	1
 38827  00F9E2  6E3A               	movwf	(??_USBMSDInit+1)& (0+255),c
 38828  00F9E4  0E00               	movlw	0
 38829  00F9E6  6E3B               	movwf	(??_USBMSDInit+2)& (0+255),c
 38830  00F9E8  2A39               	incf	??_USBMSDInit,f,c
 38831  00F9EA  D003               	goto	i2u1624_44
 38832  00F9EC                     i2u1624_45:
 38833  00F9EC  90D8               	bcf	status,0,c
 38834  00F9EE  363A               	rlcf	??_USBMSDInit+1,f,c
 38835  00F9F0  363B               	rlcf	??_USBMSDInit+2,f,c
 38836  00F9F2                     i2u1624_44:
 38837  00F9F2  2E39               	decfsz	??_USBMSDInit,f,c
 38838  00F9F4  D7FB               	goto	i2u1624_45
 38839  00F9F6  503A               	movf	??_USBMSDInit+1,w,c
 38840  00F9F8  0101               	movlb	1	; () banked
 38841  00F9FA  1361               	iorwf	_gblMediaPresent& (0+255),f,b
 38842  00F9FC  503B               	movf	??_USBMSDInit+2,w,c
 38843  00F9FE  1362               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 38844  00FA00                     i2l537:
 38845                           
 38846                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 38847                           
 38848                           ; BSR set to: 1
 38849                           
 38850                           ; BSR set to: 1
 38851  00FA00  EC04  F08D         	call	i2_ResetSenseData	;wreg free
 38852  00FA04  0101               	movlb	1	; () banked
 38853  00FA06  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 38854  00FA08                     i2l534:
 38855                           
 38856                           ; BSR set to: 1
 38857                           
 38858                           ; BSR set to: 1
 38859  00FA08  510D               	movf	(_gblCBW+13)& (0+255),w,b
 38860  00FA0A  A4D8               	btfss	status,2,c
 38861  00FA0C  0012               	return	
 38862  00FA0E  D7B2               	goto	i2l535
 38863  00FA10                     __end_of_USBMSDInit:
 38864                           	opt stack 0
 38865                           tosu	equ	0xFFF
 38866                           tosh	equ	0xFFE
 38867                           tosl	equ	0xFFD
 38868                           pclatu	equ	0xFFB
 38869                           pclath	equ	0xFFA
 38870                           tblptru	equ	0xFF8
 38871                           tblptrh	equ	0xFF7
 38872                           tblptrl	equ	0xFF6
 38873                           tablat	equ	0xFF5
 38874                           prodh	equ	0xFF4
 38875                           prodl	equ	0xFF3
 38876                           intcon	equ	0xFF2
 38877                           indf0	equ	0xFEF
 38878                           postinc0	equ	0xFEE
 38879                           fsr0h	equ	0xFEA
 38880                           fsr0l	equ	0xFE9
 38881                           wreg	equ	0xFE8
 38882                           indf1	equ	0xFE7
 38883                           postdec1	equ	0xFE5
 38884                           plusw1	equ	0xFE3
 38885                           fsr1h	equ	0xFE2
 38886                           fsr1l	equ	0xFE1
 38887                           indf2	equ	0xFDF
 38888                           postinc2	equ	0xFDE
 38889                           postdec2	equ	0xFDD
 38890                           plusw2	equ	0xFDB
 38891                           fsr2h	equ	0xFDA
 38892                           fsr2l	equ	0xFD9
 38893                           status	equ	0xFD8
 38894                           
 38895 ;; *************** function i2_ResetSenseData *****************
 38896 ;; Defined at:
 38897 ;;		line 1373 in file "usb_device_msd.c"
 38898 ;; Parameters:    Size  Location     Type
 38899 ;;		None
 38900 ;; Auto vars:     Size  Location     Type
 38901 ;;		None
 38902 ;; Return value:  Size  Location     Type
 38903 ;;                  1    wreg      void 
 38904 ;; Registers used:
 38905 ;;		wreg, status,2
 38906 ;; Tracked objects:
 38907 ;;		On entry : 0/0
 38908 ;;		On exit  : 0/0
 38909 ;;		Unchanged: 0/0
 38910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38915 ;;Total ram usage:        0 bytes
 38916 ;; Hardware stack levels used:    1
 38917 ;; This function calls:
 38918 ;;		Nothing
 38919 ;; This function is called by:
 38920 ;;		_USBMSDInit
 38921 ;; This function uses a non-reentrant model
 38922 ;;
 38923                           
 38924                           	psect	text143
 38925  011A08                     __ptext143:
 38926                           	opt stack 0
 38927  011A08                     i2_ResetSenseData:
 38928                           	opt stack 13
 38929                           
 38930                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 38931                           
 38932                           ; BSR set to: 1
 38933                           ;incstack = 0
 38934  011A08  0101               	movlb	1	; () banked
 38935  011A0A  911F               	bcf	_gblSenseData& (0+255),0,b
 38936  011A0C  931F               	bcf	_gblSenseData& (0+255),1,b
 38937  011A0E  951F               	bcf	_gblSenseData& (0+255),2,b
 38938  011A10  971F               	bcf	_gblSenseData& (0+255),3,b
 38939  011A12  891F               	bsf	_gblSenseData& (0+255),4,b
 38940  011A14  8B1F               	bsf	_gblSenseData& (0+255),5,b
 38941  011A16  8D1F               	bsf	_gblSenseData& (0+255),6,b
 38942                           
 38943                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 38944  011A18  9F1F               	bcf	_gblSenseData& (0+255),7,b
 38945                           
 38946                           ; BSR set to: 1
 38947                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 38948  011A1A  0E00               	movlw	0
 38949  011A1C  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 38950                           
 38951                           ; BSR set to: 1
 38952                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 38953  011A1E  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 38954  011A20  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 38955  011A22  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 38956  011A24  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 38957                           
 38958                           ; BSR set to: 1
 38959                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 38960  011A26  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 38961                           
 38962                           ; BSR set to: 1
 38963                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 38964  011A28  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 38965                           
 38966                           ; BSR set to: 1
 38967                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 38968  011A2A  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 38969                           
 38970                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 38971  011A2C  0E00               	movlw	0
 38972  011A2E  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 38973                           
 38974                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 38975  011A30  0E00               	movlw	0
 38976  011A32  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 38977                           
 38978                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 38979  011A34  0E00               	movlw	0
 38980  011A36  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 38981                           
 38982                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 38983  011A38  0E00               	movlw	0
 38984  011A3A  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 38985                           
 38986                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 38987  011A3C  0E0A               	movlw	10
 38988  011A3E  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 38989                           
 38990                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 38991  011A40  0E00               	movlw	0
 38992  011A42  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 38993  011A44  0E00               	movlw	0
 38994  011A46  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 38995  011A48  0E00               	movlw	0
 38996  011A4A  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 38997  011A4C  0E00               	movlw	0
 38998  011A4E  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 38999                           
 39000                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 39001  011A50  0E00               	movlw	0
 39002  011A52  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 39003                           
 39004                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 39005  011A54  0E00               	movlw	0
 39006  011A56  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 39007                           
 39008                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 39009  011A58  0E00               	movlw	0
 39010  011A5A  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 39011                           
 39012                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 39013  011A5C  0E00               	movlw	0
 39014  011A5E  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 39015                           
 39016                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 39017  011A60  0E00               	movlw	0
 39018  011A62  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 39019                           
 39020                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 39021  011A64  0E00               	movlw	0
 39022  011A66  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 39023                           
 39024                           ; BSR set to: 1
 39025  011A68  0012               	return		;funcret
 39026  011A6A                     __end_ofi2_ResetSenseData:
 39027                           	opt stack 0
 39028                           tosu	equ	0xFFF
 39029                           tosh	equ	0xFFE
 39030                           tosl	equ	0xFFD
 39031                           pclatu	equ	0xFFB
 39032                           pclath	equ	0xFFA
 39033                           tblptru	equ	0xFF8
 39034                           tblptrh	equ	0xFF7
 39035                           tblptrl	equ	0xFF6
 39036                           tablat	equ	0xFF5
 39037                           prodh	equ	0xFF4
 39038                           prodl	equ	0xFF3
 39039                           intcon	equ	0xFF2
 39040                           indf0	equ	0xFEF
 39041                           postinc0	equ	0xFEE
 39042                           fsr0h	equ	0xFEA
 39043                           fsr0l	equ	0xFE9
 39044                           wreg	equ	0xFE8
 39045                           indf1	equ	0xFE7
 39046                           postdec1	equ	0xFE5
 39047                           plusw1	equ	0xFE3
 39048                           fsr1h	equ	0xFE2
 39049                           fsr1l	equ	0xFE1
 39050                           indf2	equ	0xFDF
 39051                           postinc2	equ	0xFDE
 39052                           postdec2	equ	0xFDD
 39053                           plusw2	equ	0xFDB
 39054                           fsr2h	equ	0xFDA
 39055                           fsr2l	equ	0xFD9
 39056                           status	equ	0xFD8
 39057                           
 39058 ;; *************** function i2_ExternalFlash_MediaInitialize *****************
 39059 ;; Defined at:
 39060 ;;		line 10 in file "external_flash.c"
 39061 ;; Parameters:    Size  Location     Type
 39062 ;;  config          2    0[COMRAM] PTR void 
 39063 ;;		 -> NULL(0), 
 39064 ;; Auto vars:     Size  Location     Type
 39065 ;;		None
 39066 ;; Return value:  Size  Location     Type
 39067 ;;                  2    0[COMRAM] PTR struct .
 39068 ;; Registers used:
 39069 ;;		wreg, status,2, status,0
 39070 ;; Tracked objects:
 39071 ;;		On entry : 0/0
 39072 ;;		On exit  : 0/0
 39073 ;;		Unchanged: 0/0
 39074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39075 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39078 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39079 ;;Total ram usage:        2 bytes
 39080 ;; Hardware stack levels used:    1
 39081 ;; This function calls:
 39082 ;;		Nothing
 39083 ;; This function is called by:
 39084 ;;		_USBMSDInit
 39085 ;;		_MSDProcessCommand
 39086 ;; This function uses a non-reentrant model
 39087 ;;
 39088                           
 39089                           	psect	text144
 39090  012818                     __ptext144:
 39091                           	opt stack 0
 39092  012818                     i2_ExternalFlash_MediaInitialize:
 39093                           	opt stack 13
 39094                           
 39095                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 39096                           
 39097                           ; BSR set to: 1
 39098                           ;incstack = 0
 39099  012818  0101               	movlb	1	; () banked
 39100  01281A  8192               	bsf	(_mediaInformation+1)& (0+255),0,b
 39101                           
 39102                           ; BSR set to: 1
 39103                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 39104  01281C  0E02               	movlw	2
 39105  01281E  6F94               	movwf	(_mediaInformation+3)& (0+255),b
 39106  012820  0E00               	movlw	0
 39107  012822  6F93               	movwf	(_mediaInformation+2)& (0+255),b
 39108                           
 39109                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 39110  012824  0E00               	movlw	0
 39111  012826  6F91               	movwf	_mediaInformation& (0+255),b
 39112                           
 39113                           ; BSR set to: 1
 39114                           ;external_flash.c: 15: return &mediaInformation;
 39115  012828  0E91               	movlw	low _mediaInformation
 39116  01282A  6E2E               	movwf	?i2_ExternalFlash_MediaInitialize,c
 39117  01282C  0E01               	movlw	high _mediaInformation
 39118  01282E  6E2F               	movwf	?i2_ExternalFlash_MediaInitialize+1,c
 39119  012830  0012               	return	
 39120  012832                     __end_ofi2_ExternalFlash_MediaInitialize:
 39121                           	opt stack 0
 39122                           tosu	equ	0xFFF
 39123                           tosh	equ	0xFFE
 39124                           tosl	equ	0xFFD
 39125                           pclatu	equ	0xFFB
 39126                           pclath	equ	0xFFA
 39127                           tblptru	equ	0xFF8
 39128                           tblptrh	equ	0xFF7
 39129                           tblptrl	equ	0xFF6
 39130                           tablat	equ	0xFF5
 39131                           prodh	equ	0xFF4
 39132                           prodl	equ	0xFF3
 39133                           intcon	equ	0xFF2
 39134                           indf0	equ	0xFEF
 39135                           postinc0	equ	0xFEE
 39136                           fsr0h	equ	0xFEA
 39137                           fsr0l	equ	0xFE9
 39138                           wreg	equ	0xFE8
 39139                           indf1	equ	0xFE7
 39140                           postdec1	equ	0xFE5
 39141                           plusw1	equ	0xFE3
 39142                           fsr1h	equ	0xFE2
 39143                           fsr1l	equ	0xFE1
 39144                           indf2	equ	0xFDF
 39145                           postinc2	equ	0xFDE
 39146                           postdec2	equ	0xFDD
 39147                           plusw2	equ	0xFDB
 39148                           fsr2h	equ	0xFDA
 39149                           fsr2l	equ	0xFD9
 39150                           status	equ	0xFD8
 39151                           
 39152 ;; *************** function i2_ExternalFlash_MediaDetect *****************
 39153 ;; Defined at:
 39154 ;;		line 29 in file "external_flash.c"
 39155 ;; Parameters:    Size  Location     Type
 39156 ;;  config          2    0[COMRAM] PTR void 
 39157 ;;		 -> NULL(0), 
 39158 ;; Auto vars:     Size  Location     Type
 39159 ;;		None
 39160 ;; Return value:  Size  Location     Type
 39161 ;;                  1    wreg      unsigned char 
 39162 ;; Registers used:
 39163 ;;		wreg
 39164 ;; Tracked objects:
 39165 ;;		On entry : 0/0
 39166 ;;		On exit  : 0/0
 39167 ;;		Unchanged: 0/0
 39168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39169 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39172 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39173 ;;Total ram usage:        2 bytes
 39174 ;; Hardware stack levels used:    1
 39175 ;; This function calls:
 39176 ;;		Nothing
 39177 ;; This function is called by:
 39178 ;;		_USBMSDInit
 39179 ;;		_MSDProcessCommand
 39180 ;; This function uses a non-reentrant model
 39181 ;;
 39182                           
 39183                           	psect	text145
 39184  0128EC                     __ptext145:
 39185                           	opt stack 0
 39186  0128EC                     i2_ExternalFlash_MediaDetect:
 39187                           	opt stack 13
 39188                           
 39189                           ;external_flash.c: 31: return 1;
 39190                           
 39191                           ; BSR set to: 1
 39192                           ;incstack = 0
 39193  0128EC  0E01               	movlw	1
 39194  0128EE  0012               	return	
 39195  0128F0                     __end_ofi2_ExternalFlash_MediaDetect:
 39196                           	opt stack 0
 39197                           tosu	equ	0xFFF
 39198                           tosh	equ	0xFFE
 39199                           tosl	equ	0xFFD
 39200                           pclatu	equ	0xFFB
 39201                           pclath	equ	0xFFA
 39202                           tblptru	equ	0xFF8
 39203                           tblptrh	equ	0xFF7
 39204                           tblptrl	equ	0xFF6
 39205                           tablat	equ	0xFF5
 39206                           prodh	equ	0xFF4
 39207                           prodl	equ	0xFF3
 39208                           intcon	equ	0xFF2
 39209                           indf0	equ	0xFEF
 39210                           postinc0	equ	0xFEE
 39211                           fsr0h	equ	0xFEA
 39212                           fsr0l	equ	0xFE9
 39213                           wreg	equ	0xFE8
 39214                           indf1	equ	0xFE7
 39215                           postdec1	equ	0xFE5
 39216                           plusw1	equ	0xFE3
 39217                           fsr1h	equ	0xFE2
 39218                           fsr1l	equ	0xFE1
 39219                           indf2	equ	0xFDF
 39220                           postinc2	equ	0xFDE
 39221                           postdec2	equ	0xFDD
 39222                           plusw2	equ	0xFDB
 39223                           fsr2h	equ	0xFDA
 39224                           fsr2l	equ	0xFD9
 39225                           status	equ	0xFD8
 39226                           
 39227 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 39228 ;; Defined at:
 39229 ;;		line 46 in file "app_device_custom_hid.c"
 39230 ;; Parameters:    Size  Location     Type
 39231 ;;		None
 39232 ;; Auto vars:     Size  Location     Type
 39233 ;;		None
 39234 ;; Return value:  Size  Location     Type
 39235 ;;                  1    wreg      void 
 39236 ;; Registers used:
 39237 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39238 ;; Tracked objects:
 39239 ;;		On entry : 0/0
 39240 ;;		On exit  : 0/0
 39241 ;;		Unchanged: 0/0
 39242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39247 ;;Total ram usage:        0 bytes
 39248 ;; Hardware stack levels used:    1
 39249 ;; Hardware stack levels required when called:    2
 39250 ;; This function calls:
 39251 ;;		_USBEnableEndpoint
 39252 ;;		i2_USBTransferOnePacket
 39253 ;; This function is called by:
 39254 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 39255 ;; This function uses a non-reentrant model
 39256 ;;
 39257                           
 39258                           	psect	text146
 39259  01251A                     __ptext146:
 39260                           	opt stack 0
 39261  01251A                     _APP_DeviceCustomHIDInitialize:
 39262                           	opt stack 13
 39263                           
 39264                           ;app_device_custom_hid.c: 50: USBInHandle = 0;
 39265                           
 39266                           ;incstack = 0
 39267  01251A  0E00               	movlw	0
 39268  01251C  0101               	movlb	1	; () banked
 39269  01251E  6F5D               	movwf	_USBInHandle& (0+255),b
 39270  012520  0E00               	movlw	0
 39271  012522  6F5E               	movwf	(_USBInHandle+1)& (0+255),b
 39272                           
 39273                           ; BSR set to: 1
 39274                           ;app_device_custom_hid.c: 53: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 39275  012524  0E1E               	movlw	30
 39276  012526  6E36               	movwf	USBEnableEndpoint@options,c
 39277  012528  0E01               	movlw	1
 39278  01252A  EC93  F091         	call	_USBEnableEndpoint
 39279                           
 39280                           ;app_device_custom_hid.c: 56: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 39281  01252E  0E00               	movlw	0
 39282  012530  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 39283  012532  0E38               	movlw	low _ReceivedDataBuffer
 39284  012534  6E2F               	movwf	i2USBTransferOnePacket@data,c
 39285  012536  0E02               	movlw	high _ReceivedDataBuffer
 39286  012538  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 39287  01253A  0E40               	movlw	64
 39288  01253C  6E31               	movwf	i2USBTransferOnePacket@len,c
 39289  01253E  0E01               	movlw	1
 39290  012540  EC0E  F07E         	call	i2_USBTransferOnePacket
 39291  012544  C02E  F15F         	movff	?i2_USBTransferOnePacket,_USBOutHandle
 39292  012548  C02F  F160         	movff	?i2_USBTransferOnePacket+1,_USBOutHandle+1
 39293  01254C  0012               	return		;funcret
 39294  01254E                     __end_of_APP_DeviceCustomHIDInitialize:
 39295                           	opt stack 0
 39296                           tosu	equ	0xFFF
 39297                           tosh	equ	0xFFE
 39298                           tosl	equ	0xFFD
 39299                           pclatu	equ	0xFFB
 39300                           pclath	equ	0xFFA
 39301                           tblptru	equ	0xFF8
 39302                           tblptrh	equ	0xFF7
 39303                           tblptrl	equ	0xFF6
 39304                           tablat	equ	0xFF5
 39305                           prodh	equ	0xFF4
 39306                           prodl	equ	0xFF3
 39307                           intcon	equ	0xFF2
 39308                           indf0	equ	0xFEF
 39309                           postinc0	equ	0xFEE
 39310                           fsr0h	equ	0xFEA
 39311                           fsr0l	equ	0xFE9
 39312                           wreg	equ	0xFE8
 39313                           indf1	equ	0xFE7
 39314                           postdec1	equ	0xFE5
 39315                           plusw1	equ	0xFE3
 39316                           fsr1h	equ	0xFE2
 39317                           fsr1l	equ	0xFE1
 39318                           indf2	equ	0xFDF
 39319                           postinc2	equ	0xFDE
 39320                           postdec2	equ	0xFDD
 39321                           plusw2	equ	0xFDB
 39322                           fsr2h	equ	0xFDA
 39323                           fsr2l	equ	0xFD9
 39324                           status	equ	0xFD8
 39325                           
 39326 ;; *************** function i2_USBTransferOnePacket *****************
 39327 ;; Defined at:
 39328 ;;		line 995 in file "usb_device.c"
 39329 ;; Parameters:    Size  Location     Type
 39330 ;;  ep              1    wreg     unsigned char 
 39331 ;;  dir             1    0[COMRAM] unsigned char 
 39332 ;;  data            2    1[COMRAM] PTR unsigned char 
 39333 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 39334 ;;		 -> msd_cbw(31), NULL(0), 
 39335 ;;  len             1    3[COMRAM] unsigned char 
 39336 ;; Auto vars:     Size  Location     Type
 39337 ;;  ep              1    8[COMRAM] unsigned char 
 39338 ;;  USBTransferO    2    9[COMRAM] PTR volatile struct __BD
 39339 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 39340 ;; Return value:  Size  Location     Type
 39341 ;;                  2    0[COMRAM] PTR void 
 39342 ;; Registers used:
 39343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 39344 ;; Tracked objects:
 39345 ;;		On entry : 0/0
 39346 ;;		On exit  : 0/0
 39347 ;;		Unchanged: 0/0
 39348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39349 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39350 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39351 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39352 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39353 ;;Total ram usage:       11 bytes
 39354 ;; Hardware stack levels used:    1
 39355 ;; This function calls:
 39356 ;;		Nothing
 39357 ;; This function is called by:
 39358 ;;		_USBMSDInit
 39359 ;;		_USBCheckMSDRequest
 39360 ;;		_MSDTransferTerminated
 39361 ;;		_APP_DeviceCustomHIDInitialize
 39362 ;; This function uses a non-reentrant model
 39363 ;;
 39364                           
 39365                           	psect	text147
 39366  00FC1C                     __ptext147:
 39367                           	opt stack 0
 39368  00FC1C                     i2_USBTransferOnePacket:
 39369                           	opt stack 14
 39370                           
 39371                           ;incstack = 0
 39372                           ;i2USBTransferOnePacket@ep stored from wreg
 39373  00FC1C  6E36               	movwf	i2USBTransferOnePacket@ep,c
 39374                           
 39375                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 39376  00FC1E  502E               	movf	i2USBTransferOnePacket@dir,w,c
 39377  00FC20  B4D8               	btfsc	status,2,c
 39378  00FC22  D007               	goto	i2l184
 39379                           
 39380                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 39381  00FC24  5036               	movf	i2USBTransferOnePacket@ep,w,c
 39382  00FC26  0D02               	mullw	2
 39383  00FC28  0E10               	movlw	low _pBDTEntryIn
 39384  00FC2A  24F3               	addwf	prodl,w,c
 39385  00FC2C  6ED9               	movwf	fsr2l,c
 39386  00FC2E  0E00               	movlw	high _pBDTEntryIn
 39387  00FC30  D006               	goto	L72
 39388  00FC32                     i2l184:
 39389                           
 39390                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 39391  00FC32  5036               	movf	i2USBTransferOnePacket@ep,w,c
 39392  00FC34  0D02               	mullw	2
 39393  00FC36  0E31               	movlw	low _pBDTEntryOut
 39394  00FC38  24F3               	addwf	prodl,w,c
 39395  00FC3A  6ED9               	movwf	fsr2l,c
 39396  00FC3C  0E01               	movlw	high _pBDTEntryOut
 39397  00FC3E                     L72:
 39398  00FC3E  20F4               	addwfc	prodh,w,c
 39399  00FC40  6EDA               	movwf	fsr2h,c
 39400  00FC42  CFDE F037          	movff	postinc2,i2USBTransferOnePacket@handle
 39401  00FC46  CFDD F038          	movff	postdec2,i2USBTransferOnePacket@handle+1
 39402                           
 39403                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 39404  00FC4A  5037               	movf	i2USBTransferOnePacket@handle,w,c
 39405  00FC4C  1038               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 39406  00FC4E  A4D8               	btfss	status,2,c
 39407  00FC50  D005               	goto	i2l186
 39408                           
 39409                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 39410  00FC52  0E00               	movlw	0
 39411  00FC54  6E2E               	movwf	?i2_USBTransferOnePacket,c
 39412  00FC56  0E00               	movlw	0
 39413  00FC58  6E2F               	movwf	?i2_USBTransferOnePacket+1,c
 39414  00FC5A  0012               	return	
 39415  00FC5C                     i2l186:
 39416                           
 39417                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 39418  00FC5C  EE20 F002          	lfsr	2,2
 39419  00FC60  5037               	movf	i2USBTransferOnePacket@handle,w,c
 39420  00FC62  26D9               	addwf	fsr2l,f,c
 39421  00FC64  5038               	movf	i2USBTransferOnePacket@handle+1,w,c
 39422  00FC66  22DA               	addwfc	fsr2h,f,c
 39423  00FC68  C02F  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 39424  00FC6C  C030  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 39425                           
 39426                           ;usb_device.c: 1030: handle->CNT = len;
 39427  00FC70  EE20 F001          	lfsr	2,1
 39428  00FC74  5037               	movf	i2USBTransferOnePacket@handle,w,c
 39429  00FC76  26D9               	addwf	fsr2l,f,c
 39430  00FC78  5038               	movf	i2USBTransferOnePacket@handle+1,w,c
 39431  00FC7A  22DA               	addwfc	fsr2h,f,c
 39432  00FC7C  C031  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 39433                           
 39434                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 39435  00FC80  C037  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 39436  00FC84  C038  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 39437  00FC88  0E40               	movlw	64
 39438  00FC8A  16DF               	andwf	indf2,f,c
 39439                           
 39440                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 39441  00FC8C  C037  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 39442  00FC90  C038  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 39443  00FC94  0E00               	movlw	0
 39444  00FC96  86DB               	bsf	plusw2,3,c
 39445                           
 39446                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 39447  00FC98  C037  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 39448  00FC9C  C038  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 39449  00FCA0  0E00               	movlw	0
 39450  00FCA2  8EDB               	bsf	plusw2,7,c
 39451                           
 39452                           ;usb_device.c: 1036: if(dir != 0)
 39453  00FCA4  502E               	movf	i2USBTransferOnePacket@dir,w,c
 39454  00FCA6  B4D8               	btfsc	status,2,c
 39455  00FCA8  D018               	goto	i2l188
 39456                           
 39457                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 39458  00FCAA  5036               	movf	i2USBTransferOnePacket@ep,w,c
 39459  00FCAC  0D02               	mullw	2
 39460  00FCAE  0E10               	movlw	low _pBDTEntryIn
 39461  00FCB0  24F3               	addwf	prodl,w,c
 39462  00FCB2  6ED9               	movwf	fsr2l,c
 39463  00FCB4  0E00               	movlw	high _pBDTEntryIn
 39464  00FCB6  20F4               	addwfc	prodh,w,c
 39465  00FCB8  6EDA               	movwf	fsr2h,c
 39466  00FCBA  CFDE F032          	movff	postinc2,??i2_USBTransferOnePacket
 39467  00FCBE  CFDD F033          	movff	postdec2,??i2_USBTransferOnePacket+1
 39468  00FCC2  0E04               	movlw	4
 39469  00FCC4  1832               	xorwf	??i2_USBTransferOnePacket,w,c
 39470  00FCC6  6E34               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 39471  00FCC8  5033               	movf	??i2_USBTransferOnePacket+1,w,c
 39472  00FCCA  6E35               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 39473  00FCCC  5036               	movf	i2USBTransferOnePacket@ep,w,c
 39474  00FCCE  0D02               	mullw	2
 39475  00FCD0  0E10               	movlw	low _pBDTEntryIn
 39476  00FCD2  24F3               	addwf	prodl,w,c
 39477  00FCD4  6ED9               	movwf	fsr2l,c
 39478  00FCD6  0E00               	movlw	high _pBDTEntryIn
 39479  00FCD8  D017               	goto	L73
 39480  00FCDA                     i2l188:
 39481                           
 39482                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 39483  00FCDA  5036               	movf	i2USBTransferOnePacket@ep,w,c
 39484  00FCDC  0D02               	mullw	2
 39485  00FCDE  0E31               	movlw	low _pBDTEntryOut
 39486  00FCE0  24F3               	addwf	prodl,w,c
 39487  00FCE2  6ED9               	movwf	fsr2l,c
 39488  00FCE4  0E01               	movlw	high _pBDTEntryOut
 39489  00FCE6  20F4               	addwfc	prodh,w,c
 39490  00FCE8  6EDA               	movwf	fsr2h,c
 39491  00FCEA  CFDE F032          	movff	postinc2,??i2_USBTransferOnePacket
 39492  00FCEE  CFDD F033          	movff	postdec2,??i2_USBTransferOnePacket+1
 39493  00FCF2  0E04               	movlw	4
 39494  00FCF4  1832               	xorwf	??i2_USBTransferOnePacket,w,c
 39495  00FCF6  6E34               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 39496  00FCF8  5033               	movf	??i2_USBTransferOnePacket+1,w,c
 39497  00FCFA  6E35               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 39498  00FCFC  5036               	movf	i2USBTransferOnePacket@ep,w,c
 39499  00FCFE  0D02               	mullw	2
 39500  00FD00  0E31               	movlw	low _pBDTEntryOut
 39501  00FD02  24F3               	addwf	prodl,w,c
 39502  00FD04  6ED9               	movwf	fsr2l,c
 39503  00FD06  0E01               	movlw	high _pBDTEntryOut
 39504  00FD08                     L73:
 39505  00FD08  20F4               	addwfc	prodh,w,c
 39506  00FD0A  6EDA               	movwf	fsr2h,c
 39507  00FD0C  C034  FFDE         	movff	??i2_USBTransferOnePacket+2,postinc2
 39508  00FD10  C035  FFDD         	movff	??i2_USBTransferOnePacket+3,postdec2
 39509                           
 39510                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 39511  00FD14  C037  F02E         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 39512  00FD18  C038  F02F         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 39513  00FD1C  0012               	return	
 39514  00FD1E                     __end_ofi2_USBTransferOnePacket:
 39515                           	opt stack 0
 39516                           tosu	equ	0xFFF
 39517                           tosh	equ	0xFFE
 39518                           tosl	equ	0xFFD
 39519                           pclatu	equ	0xFFB
 39520                           pclath	equ	0xFFA
 39521                           tblptru	equ	0xFF8
 39522                           tblptrh	equ	0xFF7
 39523                           tblptrl	equ	0xFF6
 39524                           tablat	equ	0xFF5
 39525                           prodh	equ	0xFF4
 39526                           prodl	equ	0xFF3
 39527                           intcon	equ	0xFF2
 39528                           indf0	equ	0xFEF
 39529                           postinc0	equ	0xFEE
 39530                           fsr0h	equ	0xFEA
 39531                           fsr0l	equ	0xFE9
 39532                           wreg	equ	0xFE8
 39533                           indf1	equ	0xFE7
 39534                           postdec1	equ	0xFE5
 39535                           plusw1	equ	0xFE3
 39536                           fsr1h	equ	0xFE2
 39537                           fsr1l	equ	0xFE1
 39538                           indf2	equ	0xFDF
 39539                           postinc2	equ	0xFDE
 39540                           postdec2	equ	0xFDD
 39541                           plusw2	equ	0xFDB
 39542                           fsr2h	equ	0xFDA
 39543                           fsr2l	equ	0xFD9
 39544                           status	equ	0xFD8
 39545                           
 39546 ;; *************** function _USBEnableEndpoint *****************
 39547 ;; Defined at:
 39548 ;;		line 878 in file "usb_device.c"
 39549 ;; Parameters:    Size  Location     Type
 39550 ;;  ep              1    wreg     unsigned char 
 39551 ;;  options         1    8[COMRAM] unsigned char 
 39552 ;; Auto vars:     Size  Location     Type
 39553 ;;  ep              1   11[COMRAM] unsigned char 
 39554 ;;  p               2    9[COMRAM] PTR unsigned char 
 39555 ;;		 -> UEP0(1), 
 39556 ;; Return value:  Size  Location     Type
 39557 ;;                  1    wreg      void 
 39558 ;; Registers used:
 39559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39560 ;; Tracked objects:
 39561 ;;		On entry : 0/0
 39562 ;;		On exit  : 0/0
 39563 ;;		Unchanged: 0/0
 39564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39565 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39566 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39568 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39569 ;;Total ram usage:        4 bytes
 39570 ;; Hardware stack levels used:    1
 39571 ;; Hardware stack levels required when called:    1
 39572 ;; This function calls:
 39573 ;;		_USBConfigureEndpoint
 39574 ;; This function is called by:
 39575 ;;		_APP_DeviceCustomHIDInitialize
 39576 ;;		_APP_DeviceMSDInitialize
 39577 ;; This function uses a non-reentrant model
 39578 ;;
 39579                           
 39580                           	psect	text148
 39581  012326                     __ptext148:
 39582                           	opt stack 0
 39583  012326                     _USBEnableEndpoint:
 39584                           	opt stack 13
 39585                           
 39586                           ;incstack = 0
 39587                           ;USBEnableEndpoint@ep stored from wreg
 39588  012326  6E39               	movwf	USBEnableEndpoint@ep,c
 39589                           
 39590                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 39591  012328  A436               	btfss	USBEnableEndpoint@options,2,c
 39592  01232A  D005               	goto	i2l179
 39593                           
 39594                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 39595  01232C  0E00               	movlw	0
 39596  01232E  6E2E               	movwf	USBConfigureEndpoint@direction,c
 39597  012330  5039               	movf	USBEnableEndpoint@ep,w,c
 39598  012332  EC84  F089         	call	_USBConfigureEndpoint
 39599  012336                     i2l179:
 39600                           
 39601                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 39602  012336  A236               	btfss	USBEnableEndpoint@options,1,c
 39603  012338  D005               	goto	i2l180
 39604                           
 39605                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 39606  01233A  0E01               	movlw	1
 39607  01233C  6E2E               	movwf	USBConfigureEndpoint@direction,c
 39608  01233E  5039               	movf	USBEnableEndpoint@ep,w,c
 39609  012340  EC84  F089         	call	_USBConfigureEndpoint
 39610  012344                     i2l180:
 39611                           
 39612                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 39613  012344  5039               	movf	USBEnableEndpoint@ep,w,c
 39614  012346  0D01               	mullw	1
 39615  012348  0E26               	movlw	38
 39616  01234A  24F3               	addwf	prodl,w,c
 39617  01234C  6E37               	movwf	USBEnableEndpoint@p,c
 39618  01234E  0E0F               	movlw	15
 39619  012350  20F4               	addwfc	prodh,w,c
 39620  012352  6E38               	movwf	USBEnableEndpoint@p+1,c
 39621                           
 39622                           ;usb_device.c: 901: *p = options;
 39623  012354  C037  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 39624  012358  C038  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 39625  01235C  C036  FFDF         	movff	USBEnableEndpoint@options,indf2
 39626  012360  0012               	return		;funcret
 39627  012362                     __end_of_USBEnableEndpoint:
 39628                           	opt stack 0
 39629                           tosu	equ	0xFFF
 39630                           tosh	equ	0xFFE
 39631                           tosl	equ	0xFFD
 39632                           pclatu	equ	0xFFB
 39633                           pclath	equ	0xFFA
 39634                           tblptru	equ	0xFF8
 39635                           tblptrh	equ	0xFF7
 39636                           tblptrl	equ	0xFF6
 39637                           tablat	equ	0xFF5
 39638                           prodh	equ	0xFF4
 39639                           prodl	equ	0xFF3
 39640                           intcon	equ	0xFF2
 39641                           indf0	equ	0xFEF
 39642                           postinc0	equ	0xFEE
 39643                           fsr0h	equ	0xFEA
 39644                           fsr0l	equ	0xFE9
 39645                           wreg	equ	0xFE8
 39646                           indf1	equ	0xFE7
 39647                           postdec1	equ	0xFE5
 39648                           plusw1	equ	0xFE3
 39649                           fsr1h	equ	0xFE2
 39650                           fsr1l	equ	0xFE1
 39651                           indf2	equ	0xFDF
 39652                           postinc2	equ	0xFDE
 39653                           postdec2	equ	0xFDD
 39654                           plusw2	equ	0xFDB
 39655                           fsr2h	equ	0xFDA
 39656                           fsr2l	equ	0xFD9
 39657                           status	equ	0xFD8
 39658                           
 39659 ;; *************** function _USBConfigureEndpoint *****************
 39660 ;; Defined at:
 39661 ;;		line 1545 in file "usb_device.c"
 39662 ;; Parameters:    Size  Location     Type
 39663 ;;  EPNum           1    wreg     unsigned char 
 39664 ;;  direction       1    0[COMRAM] unsigned char 
 39665 ;; Auto vars:     Size  Location     Type
 39666 ;;  EPNum           1    5[COMRAM] unsigned char 
 39667 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 39668 ;;		 -> BDT(48), 
 39669 ;; Return value:  Size  Location     Type
 39670 ;;                  1    wreg      void 
 39671 ;; Registers used:
 39672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 39673 ;; Tracked objects:
 39674 ;;		On entry : 0/0
 39675 ;;		On exit  : 0/0
 39676 ;;		Unchanged: 0/0
 39677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39678 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39679 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39680 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39681 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39682 ;;Total ram usage:        8 bytes
 39683 ;; Hardware stack levels used:    1
 39684 ;; This function calls:
 39685 ;;		Nothing
 39686 ;; This function is called by:
 39687 ;;		_USBEnableEndpoint
 39688 ;; This function uses a non-reentrant model
 39689 ;;
 39690                           
 39691                           	psect	text149
 39692  011308                     __ptext149:
 39693                           	opt stack 0
 39694  011308                     _USBConfigureEndpoint:
 39695                           	opt stack 13
 39696                           
 39697                           ;incstack = 0
 39698                           ;USBConfigureEndpoint@EPNum stored from wreg
 39699  011308  6E33               	movwf	USBConfigureEndpoint@EPNum,c
 39700                           
 39701                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 39702  01130A  0E00               	movlw	0
 39703  01130C  6E34               	movwf	USBConfigureEndpoint@handle,c
 39704  01130E  0E0D               	movlw	13
 39705  011310  6E35               	movwf	USBConfigureEndpoint@handle+1,c
 39706                           
 39707                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 39708  011312  502E               	movf	USBConfigureEndpoint@direction,w,c
 39709  011314  6E2F               	movwf	??_USBConfigureEndpoint& (0+255),c
 39710  011316  6A30               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 39711  011318  90D8               	bcf	status,0,c
 39712  01131A  362F               	rlcf	??_USBConfigureEndpoint,f,c
 39713  01131C  3630               	rlcf	??_USBConfigureEndpoint+1,f,c
 39714  01131E  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 39715  011320  6E31               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 39716  011322  6A32               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 39717  011324  90D8               	bcf	status,0,c
 39718  011326  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 39719  011328  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 39720  01132A  90D8               	bcf	status,0,c
 39721  01132C  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 39722  01132E  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 39723  011330  502F               	movf	??_USBConfigureEndpoint,w,c
 39724  011332  2631               	addwf	??_USBConfigureEndpoint+2,f,c
 39725  011334  5030               	movf	??_USBConfigureEndpoint+1,w,c
 39726  011336  2232               	addwfc	??_USBConfigureEndpoint+3,f,c
 39727  011338  90D8               	bcf	status,0,c
 39728  01133A  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 39729  01133C  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 39730  01133E  90D8               	bcf	status,0,c
 39731  011340  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 39732  011342  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 39733  011344  5031               	movf	??_USBConfigureEndpoint+2,w,c
 39734  011346  2634               	addwf	USBConfigureEndpoint@handle,f,c
 39735  011348  5032               	movf	??_USBConfigureEndpoint+3,w,c
 39736  01134A  2235               	addwfc	USBConfigureEndpoint@handle+1,f,c
 39737                           
 39738                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 39739  01134C  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 39740  011350  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 39741  011354  9EDF               	bcf	indf2,7,c
 39742                           
 39743                           ;usb_device.c: 1559: if(direction == 0)
 39744  011356  502E               	movf	USBConfigureEndpoint@direction,w,c
 39745  011358  A4D8               	btfss	status,2,c
 39746  01135A  D007               	goto	i2l226
 39747                           
 39748                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 39749  01135C  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 39750  01135E  0D02               	mullw	2
 39751  011360  0E31               	movlw	low _pBDTEntryOut
 39752  011362  24F3               	addwf	prodl,w,c
 39753  011364  6ED9               	movwf	fsr2l,c
 39754  011366  0E01               	movlw	high _pBDTEntryOut
 39755  011368  D006               	goto	L74
 39756  01136A                     i2l226:
 39757                           
 39758                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 39759  01136A  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 39760  01136C  0D02               	mullw	2
 39761  01136E  0E10               	movlw	low _pBDTEntryIn
 39762  011370  24F3               	addwf	prodl,w,c
 39763  011372  6ED9               	movwf	fsr2l,c
 39764  011374  0E00               	movlw	high _pBDTEntryIn
 39765  011376                     L74:
 39766  011376  20F4               	addwfc	prodh,w,c
 39767  011378  6EDA               	movwf	fsr2h,c
 39768  01137A  C034  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 39769  01137E  C035  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 39770                           
 39771                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 39772  011382  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 39773  011386  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 39774  01138A  9CDF               	bcf	indf2,6,c
 39775                           
 39776                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 39777  01138C  EE20 F004          	lfsr	2,4
 39778  011390  5034               	movf	USBConfigureEndpoint@handle,w,c
 39779  011392  26D9               	addwf	fsr2l,f,c
 39780  011394  5035               	movf	USBConfigureEndpoint@handle+1,w,c
 39781  011396  22DA               	addwfc	fsr2h,f,c
 39782  011398  8CDF               	bsf	indf2,6,c
 39783  01139A  0012               	return		;funcret
 39784  01139C                     __end_of_USBConfigureEndpoint:
 39785                           	opt stack 0
 39786                           tosu	equ	0xFFF
 39787                           tosh	equ	0xFFE
 39788                           tosl	equ	0xFFD
 39789                           pclatu	equ	0xFFB
 39790                           pclath	equ	0xFFA
 39791                           tblptru	equ	0xFF8
 39792                           tblptrh	equ	0xFF7
 39793                           tblptrl	equ	0xFF6
 39794                           tablat	equ	0xFF5
 39795                           prodh	equ	0xFF4
 39796                           prodl	equ	0xFF3
 39797                           intcon	equ	0xFF2
 39798                           indf0	equ	0xFEF
 39799                           postinc0	equ	0xFEE
 39800                           fsr0h	equ	0xFEA
 39801                           fsr0l	equ	0xFE9
 39802                           wreg	equ	0xFE8
 39803                           indf1	equ	0xFE7
 39804                           postdec1	equ	0xFE5
 39805                           plusw1	equ	0xFE3
 39806                           fsr1h	equ	0xFE2
 39807                           fsr1l	equ	0xFE1
 39808                           indf2	equ	0xFDF
 39809                           postinc2	equ	0xFDE
 39810                           postdec2	equ	0xFDD
 39811                           plusw2	equ	0xFDB
 39812                           fsr2h	equ	0xFDA
 39813                           fsr2l	equ	0xFD9
 39814                           status	equ	0xFD8
 39815                           
 39816 ;; *************** function _USBCtrlTrfOutHandler *****************
 39817 ;; Defined at:
 39818 ;;		line 2540 in file "usb_device.c"
 39819 ;; Parameters:    Size  Location     Type
 39820 ;;		None
 39821 ;; Auto vars:     Size  Location     Type
 39822 ;;		None
 39823 ;; Return value:  Size  Location     Type
 39824 ;;                  1    wreg      void 
 39825 ;; Registers used:
 39826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39827 ;; Tracked objects:
 39828 ;;		On entry : 0/0
 39829 ;;		On exit  : 0/0
 39830 ;;		Unchanged: 0/0
 39831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39836 ;;Total ram usage:        0 bytes
 39837 ;; Hardware stack levels used:    1
 39838 ;; Hardware stack levels required when called:    2
 39839 ;; This function calls:
 39840 ;;		_USBCtrlTrfRxService
 39841 ;; This function is called by:
 39842 ;;		_USBCtrlEPService
 39843 ;; This function uses a non-reentrant model
 39844 ;;
 39845                           
 39846                           	psect	text150
 39847  011ACA                     __ptext150:
 39848                           	opt stack 0
 39849  011ACA                     _USBCtrlTrfOutHandler:
 39850                           	opt stack 13
 39851                           
 39852                           ;usb_device.c: 2542: if(controlTransferState == 2)
 39853                           
 39854                           ;incstack = 0
 39855  011ACA  0E02               	movlw	2
 39856  011ACC  1829               	xorwf	_controlTransferState,w,c	;volatile
 39857  011ACE  A4D8               	btfss	status,2,c
 39858  011AD0  D003               	goto	i2l332
 39859                           
 39860                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 39861  011AD2  EC78  F07B         	call	_USBCtrlTrfRxService	;wreg free
 39862                           
 39863                           ;usb_device.c: 2545: }
 39864  011AD6  0012               	return	
 39865  011AD8                     i2l332:
 39866                           
 39867                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 39868  011AD8  0E00               	movlw	0
 39869  011ADA  6E29               	movwf	_controlTransferState,c	;volatile
 39870                           
 39871                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 39872  011ADC  0101               	movlb	1	; () banked
 39873  011ADE  5178               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 39874  011AE0  A4D8               	btfss	status,2,c
 39875  011AE2  D01F               	goto	i2l334
 39876                           
 39877                           ; BSR set to: 1
 39878                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 39879  011AE4  EE20 F001          	lfsr	2,1
 39880  011AE8  501C               	movf	_pBDTEntryEP0OutNext,w,c
 39881  011AEA  26D9               	addwf	fsr2l,f,c
 39882  011AEC  501D               	movf	_pBDTEntryEP0OutNext+1,w,c
 39883  011AEE  22DA               	addwfc	fsr2h,f,c
 39884  011AF0  0E08               	movlw	8
 39885  011AF2  6EDF               	movwf	indf2,c
 39886                           
 39887                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 39888  011AF4  EE20 F002          	lfsr	2,2
 39889  011AF8  501C               	movf	_pBDTEntryEP0OutNext,w,c
 39890  011AFA  26D9               	addwf	fsr2l,f,c
 39891  011AFC  501D               	movf	_pBDTEntryEP0OutNext+1,w,c
 39892  011AFE  22DA               	addwfc	fsr2h,f,c
 39893  011B00  0E30               	movlw	48
 39894  011B02  6EDE               	movwf	postinc2,c
 39895  011B04  0E0D               	movlw	13
 39896  011B06  6EDD               	movwf	postdec2,c
 39897                           
 39898                           ; BSR set to: 1
 39899                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 39900  011B08  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 39901  011B0C  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 39902  011B10  0E0C               	movlw	12
 39903  011B12  6EDF               	movwf	indf2,c
 39904                           
 39905                           ; BSR set to: 1
 39906                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 39907  011B14  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 39908  011B18  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 39909  011B1C  0E00               	movlw	0
 39910  011B1E  8EDB               	bsf	plusw2,7,c
 39911                           
 39912                           ;usb_device.c: 2563: }
 39913  011B20  0012               	return	
 39914  011B22                     i2l334:
 39915                           
 39916                           ; BSR set to: 1
 39917                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 39918                           
 39919                           ; BSR set to: 1
 39920  011B22  0E00               	movlw	0
 39921  011B24  6F78               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 39922                           
 39923                           ; BSR set to: 1
 39924  011B26  0012               	return	
 39925  011B28                     __end_of_USBCtrlTrfOutHandler:
 39926                           	opt stack 0
 39927                           tosu	equ	0xFFF
 39928                           tosh	equ	0xFFE
 39929                           tosl	equ	0xFFD
 39930                           pclatu	equ	0xFFB
 39931                           pclath	equ	0xFFA
 39932                           tblptru	equ	0xFF8
 39933                           tblptrh	equ	0xFF7
 39934                           tblptrl	equ	0xFF6
 39935                           tablat	equ	0xFF5
 39936                           prodh	equ	0xFF4
 39937                           prodl	equ	0xFF3
 39938                           intcon	equ	0xFF2
 39939                           indf0	equ	0xFEF
 39940                           postinc0	equ	0xFEE
 39941                           fsr0h	equ	0xFEA
 39942                           fsr0l	equ	0xFE9
 39943                           wreg	equ	0xFE8
 39944                           indf1	equ	0xFE7
 39945                           postdec1	equ	0xFE5
 39946                           plusw1	equ	0xFE3
 39947                           fsr1h	equ	0xFE2
 39948                           fsr1l	equ	0xFE1
 39949                           indf2	equ	0xFDF
 39950                           postinc2	equ	0xFDE
 39951                           postdec2	equ	0xFDD
 39952                           plusw2	equ	0xFDB
 39953                           fsr2h	equ	0xFDA
 39954                           fsr2l	equ	0xFD9
 39955                           status	equ	0xFD8
 39956                           
 39957 ;; *************** function _USBCtrlTrfRxService *****************
 39958 ;; Defined at:
 39959 ;;		line 1854 in file "usb_device.c"
 39960 ;; Parameters:    Size  Location     Type
 39961 ;;		None
 39962 ;; Auto vars:     Size  Location     Type
 39963 ;;  byteToRead      1    1[COMRAM] unsigned char 
 39964 ;;  i               1    0[COMRAM] unsigned char 
 39965 ;; Return value:  Size  Location     Type
 39966 ;;                  1    wreg      void 
 39967 ;; Registers used:
 39968 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39969 ;; Tracked objects:
 39970 ;;		On entry : 0/0
 39971 ;;		On exit  : 0/0
 39972 ;;		Unchanged: 0/0
 39973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39975 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39977 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39978 ;;Total ram usage:        2 bytes
 39979 ;; Hardware stack levels used:    1
 39980 ;; Hardware stack levels required when called:    1
 39981 ;; This function calls:
 39982 ;;		_USBCtrlEPAllowStatusStage
 39983 ;; This function is called by:
 39984 ;;		_USBCtrlTrfOutHandler
 39985 ;; This function uses a non-reentrant model
 39986 ;;
 39987                           
 39988                           	psect	text151
 39989  00F6F0                     __ptext151:
 39990                           	opt stack 0
 39991  00F6F0                     _USBCtrlTrfRxService:
 39992                           	opt stack 13
 39993                           
 39994                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 39995                           
 39996                           ;incstack = 0
 39997  00F6F0  EE20 F001          	lfsr	2,1
 39998  00F6F4  501E               	movf	_pBDTEntryEP0OutCurrent,w,c
 39999  00F6F6  26D9               	addwf	fsr2l,f,c
 40000  00F6F8  501F               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 40001  00F6FA  22DA               	addwfc	fsr2h,f,c
 40002  00F6FC  50DF               	movf	indf2,w,c
 40003  00F6FE  6E2F               	movwf	USBCtrlTrfRxService@byteToRead,c
 40004                           
 40005                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 40006  00F700  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 40007  00F702  5C05               	subwf	_outPipes+4,w,c	;volatile
 40008  00F704  0E00               	movlw	0
 40009  00F706  5806               	subwfb	_outPipes+5,w,c	;volatile
 40010  00F708  A0D8               	btfss	status,0,c
 40011                           
 40012                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 40013  00F70A  C005  F02F         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 40014                           
 40015                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 40016  00F70E  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 40017  00F710  5E05               	subwf	_outPipes+4,f,c	;volatile
 40018  00F712  0E00               	movlw	0
 40019  00F714  5A06               	subwfb	_outPipes+5,f,c	;volatile
 40020                           
 40021                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 40022  00F716  0E00               	movlw	0
 40023  00F718  6E2E               	movwf	USBCtrlTrfRxService@i,c
 40024  00F71A  D011               	goto	i2l260
 40025  00F71C                     
 40026                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 40027  00F71C  502E               	movf	USBCtrlTrfRxService@i,w,c
 40028  00F71E  0D01               	mullw	1
 40029  00F720  0E38               	movlw	56
 40030  00F722  24F3               	addwf	prodl,w,c
 40031  00F724  6ED9               	movwf	fsr2l,c
 40032  00F726  0E0D               	movlw	13
 40033  00F728  20F4               	addwfc	prodh,w,c
 40034  00F72A  6EDA               	movwf	fsr2h,c
 40035  00F72C  C001  FFE1         	movff	_outPipes,fsr1l	;volatile
 40036  00F730  C002  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 40037  00F734  CFDF FFE7          	movff	indf2,indf1
 40038  00F738  4A01               	infsnz	_outPipes,f,c	;volatile
 40039  00F73A  2A02               	incf	_outPipes+1,f,c	;volatile
 40040  00F73C  2A2E               	incf	USBCtrlTrfRxService@i,f,c
 40041  00F73E                     i2l260:
 40042  00F73E  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 40043  00F740  5C2E               	subwf	USBCtrlTrfRxService@i,w,c
 40044  00F742  A0D8               	btfss	status,0,c
 40045  00F744  D7EB               	goto	i2l261
 40046                           
 40047                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 40048  00F746  5005               	movf	_outPipes+4,w,c	;volatile
 40049  00F748  1006               	iorwf	_outPipes+5,w,c	;volatile
 40050  00F74A  B4D8               	btfsc	status,2,c
 40051  00F74C  D032               	goto	i2l263
 40052                           
 40053                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 40054  00F74E  EE20 F001          	lfsr	2,1
 40055  00F752  501C               	movf	_pBDTEntryEP0OutNext,w,c
 40056  00F754  26D9               	addwf	fsr2l,f,c
 40057  00F756  501D               	movf	_pBDTEntryEP0OutNext+1,w,c
 40058  00F758  22DA               	addwfc	fsr2h,f,c
 40059  00F75A  0E08               	movlw	8
 40060  00F75C  6EDF               	movwf	indf2,c
 40061                           
 40062                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 40063  00F75E  EE20 F002          	lfsr	2,2
 40064  00F762  501C               	movf	_pBDTEntryEP0OutNext,w,c
 40065  00F764  26D9               	addwf	fsr2l,f,c
 40066  00F766  501D               	movf	_pBDTEntryEP0OutNext+1,w,c
 40067  00F768  22DA               	addwfc	fsr2h,f,c
 40068  00F76A  0E38               	movlw	56
 40069  00F76C  6EDE               	movwf	postinc2,c
 40070  00F76E  0E0D               	movlw	13
 40071  00F770  6EDD               	movwf	postdec2,c
 40072                           
 40073                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 40074  00F772  C01E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 40075  00F776  C01F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 40076  00F77A  BCDF               	btfsc	indf2,6,c
 40077  00F77C  D00D               	goto	i2l264
 40078                           
 40079                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 40080  00F77E  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 40081  00F782  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 40082  00F786  0E48               	movlw	72
 40083  00F788  6EDF               	movwf	indf2,c
 40084                           
 40085                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 40086  00F78A  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 40087  00F78E  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 40088  00F792  0E00               	movlw	0
 40089  00F794  8EDB               	bsf	plusw2,7,c
 40090                           
 40091                           ;usb_device.c: 1891: }
 40092  00F796  0012               	return	
 40093  00F798                     i2l264:
 40094                           
 40095                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 40096  00F798  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 40097  00F79C  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 40098  00F7A0  0E08               	movlw	8
 40099  00F7A2  6EDF               	movwf	indf2,c
 40100                           
 40101                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 40102  00F7A4  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 40103  00F7A8  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 40104  00F7AC  0E00               	movlw	0
 40105  00F7AE  8EDB               	bsf	plusw2,7,c
 40106                           
 40107                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 40108  00F7B0  0012               	return	
 40109  00F7B2                     i2l263:
 40110                           
 40111                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 40112  00F7B2  EE20 F001          	lfsr	2,1
 40113  00F7B6  501C               	movf	_pBDTEntryEP0OutNext,w,c
 40114  00F7B8  26D9               	addwf	fsr2l,f,c
 40115  00F7BA  501D               	movf	_pBDTEntryEP0OutNext+1,w,c
 40116  00F7BC  22DA               	addwfc	fsr2h,f,c
 40117  00F7BE  0E08               	movlw	8
 40118  00F7C0  6EDF               	movwf	indf2,c
 40119                           
 40120                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 40121  00F7C2  EE20 F002          	lfsr	2,2
 40122  00F7C6  501C               	movf	_pBDTEntryEP0OutNext,w,c
 40123  00F7C8  26D9               	addwf	fsr2l,f,c
 40124  00F7CA  501D               	movf	_pBDTEntryEP0OutNext+1,w,c
 40125  00F7CC  22DA               	addwfc	fsr2h,f,c
 40126  00F7CE  0E30               	movlw	48
 40127  00F7D0  6EDE               	movwf	postinc2,c
 40128  00F7D2  0E0D               	movlw	13
 40129  00F7D4  6EDD               	movwf	postdec2,c
 40130                           
 40131                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 40132  00F7D6  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 40133  00F7DA  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 40134  00F7DE  0E04               	movlw	4
 40135  00F7E0  6EDF               	movwf	indf2,c
 40136                           
 40137                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 40138  00F7E2  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 40139  00F7E6  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 40140  00F7EA  0E00               	movlw	0
 40141  00F7EC  8EDB               	bsf	plusw2,7,c
 40142                           
 40143                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 40144                           
 40145                           ;usb_device.c: 1917: {;usb_device.c: 1923: outPipes[0].pFunc();
 40146  00F7EE  9E04               	bcf	_outPipes+3,7,c	;volatile
 40147                           
 40148                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 40149  00F7F0  5026               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 40150  00F7F2  A4D8               	btfss	status,2,c
 40151  00F7F4  0012               	return	
 40152                           
 40153                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 40154  00F7F6  EC2F  F084         	call	_USBCtrlEPAllowStatusStage	;wreg free
 40155  00F7FA  0012               	return	
 40156  00F7FC                     __end_of_USBCtrlTrfRxService:
 40157                           	opt stack 0
 40158                           tosu	equ	0xFFF
 40159                           tosh	equ	0xFFE
 40160                           tosl	equ	0xFFD
 40161                           pclatu	equ	0xFFB
 40162                           pclath	equ	0xFFA
 40163                           tblptru	equ	0xFF8
 40164                           tblptrh	equ	0xFF7
 40165                           tblptrl	equ	0xFF6
 40166                           tablat	equ	0xFF5
 40167                           prodh	equ	0xFF4
 40168                           prodl	equ	0xFF3
 40169                           intcon	equ	0xFF2
 40170                           indf0	equ	0xFEF
 40171                           postinc0	equ	0xFEE
 40172                           fsr0h	equ	0xFEA
 40173                           fsr0l	equ	0xFE9
 40174                           wreg	equ	0xFE8
 40175                           indf1	equ	0xFE7
 40176                           postdec1	equ	0xFE5
 40177                           plusw1	equ	0xFE3
 40178                           fsr1h	equ	0xFE2
 40179                           fsr1l	equ	0xFE1
 40180                           indf2	equ	0xFDF
 40181                           postinc2	equ	0xFDE
 40182                           postdec2	equ	0xFDD
 40183                           plusw2	equ	0xFDB
 40184                           fsr2h	equ	0xFDA
 40185                           fsr2l	equ	0xFD9
 40186                           status	equ	0xFD8
 40187                           
 40188 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 40189 ;; Defined at:
 40190 ;;		line 1418 in file "usb_device.c"
 40191 ;; Parameters:    Size  Location     Type
 40192 ;;		None
 40193 ;; Auto vars:     Size  Location     Type
 40194 ;;		None
 40195 ;; Return value:  Size  Location     Type
 40196 ;;                  1    wreg      void 
 40197 ;; Registers used:
 40198 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 40199 ;; Tracked objects:
 40200 ;;		On entry : 0/0
 40201 ;;		On exit  : 0/0
 40202 ;;		Unchanged: 0/0
 40203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40208 ;;Total ram usage:        0 bytes
 40209 ;; Hardware stack levels used:    1
 40210 ;; This function calls:
 40211 ;;		Nothing
 40212 ;; This function is called by:
 40213 ;;		_USBDeviceTasks
 40214 ;;		_USBCtrlEPServiceComplete
 40215 ;;		_USBCtrlTrfRxService
 40216 ;; This function uses a non-reentrant model
 40217 ;;
 40218                           
 40219                           	psect	text152
 40220  01085E                     __ptext152:
 40221                           	opt stack 0
 40222  01085E                     _USBCtrlEPAllowStatusStage:
 40223                           	opt stack 13
 40224                           
 40225                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 40226                           
 40227                           ;incstack = 0
 40228  01085E  0101               	movlb	1	; () banked
 40229  010860  5177               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 40230  010862  A4D8               	btfss	status,2,c
 40231  010864  0012               	return	
 40232                           
 40233                           ; BSR set to: 1
 40234                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 40235  010866  0E01               	movlw	1
 40236  010868  6F77               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 40237                           
 40238                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 40239  01086A  5176               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 40240  01086C  A4D8               	btfss	status,2,c
 40241  01086E  0012               	return	
 40242                           
 40243                           ; BSR set to: 1
 40244                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 40245  010870  0E01               	movlw	1
 40246  010872  6F76               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 40247                           
 40248                           ; BSR set to: 1
 40249                           ;usb_device.c: 1434: if(controlTransferState == 2)
 40250  010874  0E02               	movlw	2
 40251  010876  1829               	xorwf	_controlTransferState,w,c	;volatile
 40252  010878  A4D8               	btfss	status,2,c
 40253  01087A  D015               	goto	i2l214
 40254                           
 40255                           ; BSR set to: 1
 40256                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 40257  01087C  EE20 F001          	lfsr	2,1
 40258  010880  5010               	movf	_pBDTEntryIn,w,c
 40259  010882  26D9               	addwf	fsr2l,f,c
 40260  010884  5011               	movf	_pBDTEntryIn+1,w,c
 40261  010886  22DA               	addwfc	fsr2h,f,c
 40262  010888  0E00               	movlw	0
 40263  01088A  6EDF               	movwf	indf2,c
 40264                           
 40265                           ; BSR set to: 1
 40266                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 40267  01088C  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 40268  010890  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 40269  010894  0E48               	movlw	72
 40270  010896  6EDF               	movwf	indf2,c
 40271                           
 40272                           ; BSR set to: 1
 40273                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 40274  010898  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 40275  01089C  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 40276  0108A0  0E00               	movlw	0
 40277  0108A2  8EDB               	bsf	plusw2,7,c
 40278                           
 40279                           ;usb_device.c: 1439: }
 40280  0108A4  0012               	return	
 40281  0108A6                     i2l214:
 40282                           
 40283                           ; BSR set to: 1
 40284                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 40285                           
 40286                           ; BSR set to: 1
 40287  0108A6  0429               	decf	_controlTransferState,w,c	;volatile
 40288  0108A8  A4D8               	btfss	status,2,c
 40289  0108AA  0012               	return	
 40290                           
 40291                           ; BSR set to: 1
 40292                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 40293  0108AC  0E00               	movlw	0
 40294  0108AE  6F78               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 40295                           
 40296                           ; BSR set to: 1
 40297                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 40298  0108B0  EE20 F001          	lfsr	2,1
 40299  0108B4  501E               	movf	_pBDTEntryEP0OutCurrent,w,c
 40300  0108B6  26D9               	addwf	fsr2l,f,c
 40301  0108B8  501F               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 40302  0108BA  22DA               	addwfc	fsr2h,f,c
 40303  0108BC  0E08               	movlw	8
 40304  0108BE  6EDF               	movwf	indf2,c
 40305                           
 40306                           ; BSR set to: 1
 40307                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 40308  0108C0  EE20 F002          	lfsr	2,2
 40309  0108C4  501E               	movf	_pBDTEntryEP0OutCurrent,w,c
 40310  0108C6  26D9               	addwf	fsr2l,f,c
 40311  0108C8  501F               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 40312  0108CA  22DA               	addwfc	fsr2h,f,c
 40313  0108CC  0E30               	movlw	48
 40314  0108CE  6EDE               	movwf	postinc2,c
 40315  0108D0  0E0D               	movlw	13
 40316  0108D2  6EDD               	movwf	postdec2,c
 40317                           
 40318                           ; BSR set to: 1
 40319                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 40320  0108D4  C01E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 40321  0108D8  C01F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 40322  0108DC  0E04               	movlw	4
 40323  0108DE  6EDF               	movwf	indf2,c
 40324                           
 40325                           ; BSR set to: 1
 40326                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 40327  0108E0  C01E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 40328  0108E4  C01F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 40329  0108E8  0E00               	movlw	0
 40330  0108EA  8EDB               	bsf	plusw2,7,c
 40331                           
 40332                           ; BSR set to: 1
 40333                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 40334  0108EC  0E01               	movlw	1
 40335  0108EE  6F78               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 40336                           
 40337                           ; BSR set to: 1
 40338                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 40339  0108F0  EE20 F001          	lfsr	2,1
 40340  0108F4  501C               	movf	_pBDTEntryEP0OutNext,w,c
 40341  0108F6  26D9               	addwf	fsr2l,f,c
 40342  0108F8  501D               	movf	_pBDTEntryEP0OutNext+1,w,c
 40343  0108FA  22DA               	addwfc	fsr2h,f,c
 40344  0108FC  0E08               	movlw	8
 40345  0108FE  6EDF               	movwf	indf2,c
 40346                           
 40347                           ; BSR set to: 1
 40348                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 40349  010900  EE20 F002          	lfsr	2,2
 40350  010904  501C               	movf	_pBDTEntryEP0OutNext,w,c
 40351  010906  26D9               	addwf	fsr2l,f,c
 40352  010908  501D               	movf	_pBDTEntryEP0OutNext+1,w,c
 40353  01090A  22DA               	addwfc	fsr2h,f,c
 40354  01090C  0E30               	movlw	48
 40355  01090E  6EDE               	movwf	postinc2,c
 40356  010910  0E0D               	movlw	13
 40357  010912  6EDD               	movwf	postdec2,c
 40358                           
 40359                           ; BSR set to: 1
 40360                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 40361  010914  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 40362  010918  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 40363  01091C  0E80               	movlw	128
 40364  01091E  6EDF               	movwf	indf2,c
 40365                           
 40366                           ; BSR set to: 1
 40367                           
 40368                           ; BSR set to: 1
 40369                           
 40370                           ; BSR set to: 1
 40371  010920  0012               	return	
 40372  010922                     __end_of_USBCtrlEPAllowStatusStage:
 40373                           	opt stack 0
 40374                           tosu	equ	0xFFF
 40375                           tosh	equ	0xFFE
 40376                           tosl	equ	0xFFD
 40377                           pclatu	equ	0xFFB
 40378                           pclath	equ	0xFFA
 40379                           tblptru	equ	0xFF8
 40380                           tblptrh	equ	0xFF7
 40381                           tblptrl	equ	0xFF6
 40382                           tablat	equ	0xFF5
 40383                           prodh	equ	0xFF4
 40384                           prodl	equ	0xFF3
 40385                           intcon	equ	0xFF2
 40386                           indf0	equ	0xFEF
 40387                           postinc0	equ	0xFEE
 40388                           fsr0h	equ	0xFEA
 40389                           fsr0l	equ	0xFE9
 40390                           wreg	equ	0xFE8
 40391                           indf1	equ	0xFE7
 40392                           postdec1	equ	0xFE5
 40393                           plusw1	equ	0xFE3
 40394                           fsr1h	equ	0xFE2
 40395                           fsr1l	equ	0xFE1
 40396                           indf2	equ	0xFDF
 40397                           postinc2	equ	0xFDE
 40398                           postdec2	equ	0xFDD
 40399                           plusw2	equ	0xFDB
 40400                           fsr2h	equ	0xFDA
 40401                           fsr2l	equ	0xFD9
 40402                           status	equ	0xFD8
 40403                           
 40404 ;; *************** function _USBCtrlTrfInHandler *****************
 40405 ;; Defined at:
 40406 ;;		line 2594 in file "usb_device.c"
 40407 ;; Parameters:    Size  Location     Type
 40408 ;;		None
 40409 ;; Auto vars:     Size  Location     Type
 40410 ;;  lastDTS         1    1[COMRAM] unsigned char 
 40411 ;; Return value:  Size  Location     Type
 40412 ;;                  1    wreg      void 
 40413 ;; Registers used:
 40414 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 40415 ;; Tracked objects:
 40416 ;;		On entry : 0/0
 40417 ;;		On exit  : 0/0
 40418 ;;		Unchanged: 0/0
 40419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40421 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40423 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40424 ;;Total ram usage:        1 bytes
 40425 ;; Hardware stack levels used:    1
 40426 ;; Hardware stack levels required when called:    1
 40427 ;; This function calls:
 40428 ;;		_USBCtrlTrfTxService
 40429 ;; This function is called by:
 40430 ;;		_USBCtrlEPService
 40431 ;; This function uses a non-reentrant model
 40432 ;;
 40433                           
 40434                           	psect	text153
 40435  0109E0                     __ptext153:
 40436                           	opt stack 0
 40437  0109E0                     _USBCtrlTrfInHandler:
 40438                           	opt stack 14
 40439                           
 40440                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 40441                           
 40442                           ; BSR set to: 1
 40443                           ;incstack = 0
 40444  0109E0  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 40445  0109E4  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 40446  0109E8  0E00               	movlw	0
 40447  0109EA  BCDF               	btfsc	indf2,6,c
 40448  0109EC  0E01               	movlw	1
 40449  0109EE  6E2F               	movwf	USBCtrlTrfInHandler@lastDTS,c
 40450                           
 40451                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 40452  0109F0  0E04               	movlw	4
 40453  0109F2  1810               	xorwf	_pBDTEntryIn,w,c
 40454  0109F4  6E10               	movwf	_pBDTEntryIn,c
 40455  0109F6  5011               	movf	_pBDTEntryIn+1,w,c
 40456  0109F8  6E11               	movwf	_pBDTEntryIn+1,c
 40457                           
 40458                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 40459  0109FA  0E08               	movlw	8
 40460  0109FC  182B               	xorwf	_USBDeviceState,w,c	;volatile
 40461  0109FE  A4D8               	btfss	status,2,c
 40462  010A00  D00C               	goto	i2l341
 40463                           
 40464                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 40465  010A02  010D               	movlb	13	; () banked
 40466  010A04  5132               	movf	50,w,b	;volatile
 40467  010A06  0B7F               	andlw	127
 40468  010A08  010F               	movlb	15	; () banked
 40469  010A0A  6F38               	movwf	56,b	;volatile
 40470                           
 40471                           ; BSR set to: 15
 40472                           ;usb_device.c: 2609: if(UADDR != 0u)
 40473  010A0C  5138               	movf	56,w,b	;volatile
 40474  010A0E  B4D8               	btfsc	status,2,c
 40475  010A10  D002               	goto	i2l340
 40476                           
 40477                           ; BSR set to: 15
 40478                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 40479  010A12  0E10               	movlw	16
 40480  010A14  D001               	goto	L75
 40481  010A16                     i2l340:
 40482                           
 40483                           ; BSR set to: 15
 40484                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 40485                           
 40486                           ; BSR set to: 15
 40487  010A16  0E04               	movlw	4
 40488  010A18                     L75:
 40489  010A18  6E2B               	movwf	_USBDeviceState,c	;volatile
 40490  010A1A                     i2l341:
 40491                           
 40492                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 40493                           
 40494                           ; BSR set to: 15
 40495                           
 40496                           ; BSR set to: 15
 40497  010A1A  0429               	decf	_controlTransferState,w,c	;volatile
 40498  010A1C  A4D8               	btfss	status,2,c
 40499  010A1E  D03A               	goto	i2l342
 40500                           
 40501                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 40502  010A20  EE20 F002          	lfsr	2,2
 40503  010A24  5010               	movf	_pBDTEntryIn,w,c
 40504  010A26  26D9               	addwf	fsr2l,f,c
 40505  010A28  5011               	movf	_pBDTEntryIn+1,w,c
 40506  010A2A  22DA               	addwfc	fsr2h,f,c
 40507  010A2C  0E38               	movlw	56
 40508  010A2E  6EDE               	movwf	postinc2,c
 40509  010A30  0E0D               	movlw	13
 40510  010A32  6EDD               	movwf	postdec2,c
 40511                           
 40512                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 40513  010A34  ECFB  F082         	call	_USBCtrlTrfTxService	;wreg free
 40514                           
 40515                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 40516  010A38  0E02               	movlw	2
 40517  010A3A  182A               	xorwf	_shortPacketStatus,w,c	;volatile
 40518  010A3C  A4D8               	btfss	status,2,c
 40519  010A3E  D00D               	goto	i2l343
 40520                           
 40521                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 40522  010A40  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 40523  010A44  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 40524  010A48  0E04               	movlw	4
 40525  010A4A  6EDF               	movwf	indf2,c
 40526                           
 40527                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 40528  010A4C  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 40529  010A50  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 40530  010A54  0E00               	movlw	0
 40531  010A56  8EDB               	bsf	plusw2,7,c
 40532                           
 40533                           ;usb_device.c: 2635: }
 40534  010A58  0012               	return	
 40535  010A5A                     i2l343:
 40536                           
 40537                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 40538  010A5A  502F               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 40539  010A5C  A4D8               	btfss	status,2,c
 40540  010A5E  D00D               	goto	i2l345
 40541                           
 40542                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 40543  010A60  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 40544  010A64  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 40545  010A68  0E48               	movlw	72
 40546  010A6A  6EDF               	movwf	indf2,c
 40547                           
 40548                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 40549  010A6C  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 40550  010A70  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 40551  010A74  0E00               	movlw	0
 40552  010A76  8EDB               	bsf	plusw2,7,c
 40553                           
 40554                           ;usb_device.c: 2642: }
 40555  010A78  0012               	return	
 40556  010A7A                     i2l345:
 40557                           
 40558                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 40559  010A7A  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 40560  010A7E  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 40561  010A82  0E08               	movlw	8
 40562  010A84  6EDF               	movwf	indf2,c
 40563                           
 40564                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 40565  010A86  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 40566  010A8A  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 40567  010A8E  0E00               	movlw	0
 40568  010A90  8EDB               	bsf	plusw2,7,c
 40569                           
 40570                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 40571  010A92  0012               	return	
 40572  010A94                     i2l342:
 40573                           
 40574                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 40575  010A94  BE04               	btfsc	_outPipes+3,7,c	;volatile
 40576                           
 40577                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 40578                           
 40579                           ;usb_device.c: 2658: {;usb_device.c: 2659: outPipes[0].pFunc();
 40580  010A96  9E04               	bcf	_outPipes+3,7,c	;volatile
 40581                           
 40582                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 40583  010A98  0E00               	movlw	0
 40584  010A9A  6E29               	movwf	_controlTransferState,c	;volatile
 40585  010A9C  0012               	return	
 40586  010A9E                     __end_of_USBCtrlTrfInHandler:
 40587                           	opt stack 0
 40588                           tosu	equ	0xFFF
 40589                           tosh	equ	0xFFE
 40590                           tosl	equ	0xFFD
 40591                           pclatu	equ	0xFFB
 40592                           pclath	equ	0xFFA
 40593                           tblptru	equ	0xFF8
 40594                           tblptrh	equ	0xFF7
 40595                           tblptrl	equ	0xFF6
 40596                           tablat	equ	0xFF5
 40597                           prodh	equ	0xFF4
 40598                           prodl	equ	0xFF3
 40599                           intcon	equ	0xFF2
 40600                           indf0	equ	0xFEF
 40601                           postinc0	equ	0xFEE
 40602                           fsr0h	equ	0xFEA
 40603                           fsr0l	equ	0xFE9
 40604                           wreg	equ	0xFE8
 40605                           indf1	equ	0xFE7
 40606                           postdec1	equ	0xFE5
 40607                           plusw1	equ	0xFE3
 40608                           fsr1h	equ	0xFE2
 40609                           fsr1l	equ	0xFE1
 40610                           indf2	equ	0xFDF
 40611                           postinc2	equ	0xFDE
 40612                           postdec2	equ	0xFDD
 40613                           plusw2	equ	0xFDB
 40614                           fsr2h	equ	0xFDA
 40615                           fsr2l	equ	0xFD9
 40616                           status	equ	0xFD8
 40617                           
 40618 ;; *************** function _USBCtrlTrfTxService *****************
 40619 ;; Defined at:
 40620 ;;		line 1773 in file "usb_device.c"
 40621 ;; Parameters:    Size  Location     Type
 40622 ;;		None
 40623 ;; Auto vars:     Size  Location     Type
 40624 ;;  byteToSend      1    0[COMRAM] unsigned char 
 40625 ;; Return value:  Size  Location     Type
 40626 ;;                  1    wreg      void 
 40627 ;; Registers used:
 40628 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 40629 ;; Tracked objects:
 40630 ;;		On entry : 0/0
 40631 ;;		On exit  : 0/0
 40632 ;;		Unchanged: 0/0
 40633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40635 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40637 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40638 ;;Total ram usage:        1 bytes
 40639 ;; Hardware stack levels used:    1
 40640 ;; This function calls:
 40641 ;;		Nothing
 40642 ;; This function is called by:
 40643 ;;		_USBCtrlEPAllowDataStage
 40644 ;;		_USBCtrlTrfInHandler
 40645 ;; This function uses a non-reentrant model
 40646 ;;
 40647                           
 40648                           	psect	text154
 40649  0105F6                     __ptext154:
 40650                           	opt stack 0
 40651  0105F6                     _USBCtrlTrfTxService:
 40652                           	opt stack 12
 40653                           
 40654                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 40655                           
 40656                           ;incstack = 0
 40657  0105F6  0E08               	movlw	8
 40658  0105F8  6E2E               	movwf	USBCtrlTrfTxService@byteToSend,c
 40659                           
 40660                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 40661  0105FA  500F               	movf	_inPipes+5,w,c	;volatile
 40662  0105FC  E110               	bnz	i2l10890
 40663  0105FE  0E08               	movlw	8
 40664  010600  5C0E               	subwf	_inPipes+4,w,c	;volatile
 40665  010602  B0D8               	btfsc	status,0,c
 40666  010604  D00C               	goto	i2l247
 40667                           
 40668                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 40669  010606  C00E  F02E         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 40670                           
 40671                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 40672  01060A  502A               	movf	_shortPacketStatus,w,c	;volatile
 40673  01060C  A4D8               	btfss	status,2,c
 40674  01060E  D002               	goto	i2l245
 40675                           
 40676                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 40677  010610  0E01               	movlw	1
 40678  010612  D004               	goto	L76
 40679  010614                     i2l245:
 40680                           
 40681                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 40682  010614  042A               	decf	_shortPacketStatus,w,c	;volatile
 40683  010616  A4D8               	btfss	status,2,c
 40684  010618  D002               	goto	i2l247
 40685                           
 40686                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 40687  01061A  0E02               	movlw	2
 40688  01061C                     L76:
 40689  01061C  6E2A               	movwf	_shortPacketStatus,c	;volatile
 40690  01061E                     i2l247:
 40691  01061E                     i2l10890:
 40692                           
 40693                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 40694  01061E  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 40695  010620  5E0E               	subwf	_inPipes+4,f,c	;volatile
 40696  010622  0E00               	movlw	0
 40697  010624  5A0F               	subwfb	_inPipes+5,f,c	;volatile
 40698                           
 40699                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 40700  010626  EE20 F001          	lfsr	2,1
 40701  01062A  5010               	movf	_pBDTEntryIn,w,c
 40702  01062C  26D9               	addwf	fsr2l,f,c
 40703  01062E  5011               	movf	_pBDTEntryIn+1,w,c
 40704  010630  22DA               	addwfc	fsr2h,f,c
 40705  010632  C02E  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 40706                           
 40707                           ;usb_device.c: 1810: pDst = (volatile uint8_t*)CtrlTrfData;
 40708  010636  0E38               	movlw	56
 40709  010638  0101               	movlb	1	; () banked
 40710  01063A  6F67               	movwf	_pDst& (0+255),b
 40711  01063C  0E0D               	movlw	13
 40712  01063E  6F68               	movwf	(_pDst+1)& (0+255),b
 40713                           
 40714                           ; BSR set to: 1
 40715                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 40716  010640  A00D               	btfss	_inPipes+3,0,c	;volatile
 40717  010642  D01D               	goto	i2l249
 40718  010644  D03C               	goto	i2l253
 40719  010646                     
 40720                           ; BSR set to: 1
 40721                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 40722                           
 40723                           ; BSR set to: 1
 40724  010646  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 40725  01064A  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 40726  01064E  0E00               	movlw	low (__mediumconst shr (0+16))
 40727  010650  6EF8               	movwf	tblptru,c
 40728  010652  C167  FFD9         	movff	_pDst,fsr2l
 40729  010656  C168  FFDA         	movff	_pDst+1,fsr2h
 40730  01065A  0E0E               	movlw	(high __ramtop+-1)
 40731  01065C  64F7               	cpfsgt	tblptrh,c
 40732  01065E  D003               	bra	i2u881_47
 40733  010660  0008               	tblrd		*
 40734  010662  50F5               	movf	tablat,w,c
 40735  010664  D005               	bra	i2u881_40
 40736  010666                     i2u881_47:
 40737  010666  CFF6 FFE9          	movff	tblptrl,fsr0l
 40738  01066A  CFF7 FFEA          	movff	tblptrh,fsr0h
 40739  01066E  50EF               	movf	indf0,w,c
 40740  010670                     i2u881_40:
 40741  010670  6EDF               	movwf	indf2,c
 40742  010672  4A0A               	infsnz	_inPipes,f,c	;volatile
 40743  010674  2A0B               	incf	_inPipes+1,f,c	;volatile
 40744  010676  0101               	movlb	1	; () banked
 40745  010678  4B67               	infsnz	_pDst& (0+255),f,b
 40746  01067A  2B68               	incf	(_pDst+1)& (0+255),f,b
 40747                           
 40748                           ; BSR set to: 1
 40749                           ;usb_device.c: 1816: byteToSend--;
 40750  01067C  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 40751  01067E                     i2l249:
 40752                           
 40753                           ; BSR set to: 1
 40754                           
 40755                           ; BSR set to: 1
 40756  01067E  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 40757  010680  B4D8               	btfsc	status,2,c
 40758  010682  0012               	return	
 40759  010684  D7E0               	goto	i2l250
 40760  010686                     
 40761                           ; BSR set to: 1
 40762                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 40763                           
 40764                           ; BSR set to: 1
 40765  010686  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 40766  01068A  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 40767  01068E  0E00               	movlw	low (__mediumconst shr (0+16))
 40768  010690  6EF8               	movwf	tblptru,c
 40769  010692  C167  FFD9         	movff	_pDst,fsr2l
 40770  010696  C168  FFDA         	movff	_pDst+1,fsr2h
 40771  01069A  0E0E               	movlw	(high __ramtop+-1)
 40772  01069C  64F7               	cpfsgt	tblptrh,c
 40773  01069E  D003               	bra	i2u883_47
 40774  0106A0  0008               	tblrd		*
 40775  0106A2  50F5               	movf	tablat,w,c
 40776  0106A4  D005               	bra	i2u883_40
 40777  0106A6                     i2u883_47:
 40778  0106A6  CFF6 FFE9          	movff	tblptrl,fsr0l
 40779  0106AA  CFF7 FFEA          	movff	tblptrh,fsr0h
 40780  0106AE  50EF               	movf	indf0,w,c
 40781  0106B0                     i2u883_40:
 40782  0106B0  6EDF               	movwf	indf2,c
 40783  0106B2  4A0A               	infsnz	_inPipes,f,c	;volatile
 40784  0106B4  2A0B               	incf	_inPipes+1,f,c	;volatile
 40785  0106B6  0101               	movlb	1	; () banked
 40786  0106B8  4B67               	infsnz	_pDst& (0+255),f,b
 40787  0106BA  2B68               	incf	(_pDst+1)& (0+255),f,b
 40788                           
 40789                           ; BSR set to: 1
 40790                           ;usb_device.c: 1824: byteToSend--;
 40791  0106BC  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 40792  0106BE                     i2l253:
 40793                           
 40794                           ; BSR set to: 1
 40795                           
 40796                           ; BSR set to: 1
 40797  0106BE  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 40798  0106C0  B4D8               	btfsc	status,2,c
 40799  0106C2  0012               	return	
 40800  0106C4  D7E0               	goto	i2l254
 40801  0106C6                     __end_of_USBCtrlTrfTxService:
 40802                           	opt stack 0
 40803                           tosu	equ	0xFFF
 40804                           tosh	equ	0xFFE
 40805                           tosl	equ	0xFFD
 40806                           pclatu	equ	0xFFB
 40807                           pclath	equ	0xFFA
 40808                           tblptru	equ	0xFF8
 40809                           tblptrh	equ	0xFF7
 40810                           tblptrl	equ	0xFF6
 40811                           tablat	equ	0xFF5
 40812                           prodh	equ	0xFF4
 40813                           prodl	equ	0xFF3
 40814                           intcon	equ	0xFF2
 40815                           indf0	equ	0xFEF
 40816                           postinc0	equ	0xFEE
 40817                           fsr0h	equ	0xFEA
 40818                           fsr0l	equ	0xFE9
 40819                           wreg	equ	0xFE8
 40820                           indf1	equ	0xFE7
 40821                           postdec1	equ	0xFE5
 40822                           plusw1	equ	0xFE3
 40823                           fsr1h	equ	0xFE2
 40824                           fsr1l	equ	0xFE1
 40825                           indf2	equ	0xFDF
 40826                           postinc2	equ	0xFDE
 40827                           postdec2	equ	0xFDD
 40828                           plusw2	equ	0xFDB
 40829                           fsr2h	equ	0xFDA
 40830                           fsr2l	equ	0xFD9
 40831                           status	equ	0xFD8
 40832                           tosu	equ	0xFFF
 40833                           tosh	equ	0xFFE
 40834                           tosl	equ	0xFFD
 40835                           pclatu	equ	0xFFB
 40836                           pclath	equ	0xFFA
 40837                           tblptru	equ	0xFF8
 40838                           tblptrh	equ	0xFF7
 40839                           tblptrl	equ	0xFF6
 40840                           tablat	equ	0xFF5
 40841                           prodh	equ	0xFF4
 40842                           prodl	equ	0xFF3
 40843                           intcon	equ	0xFF2
 40844                           indf0	equ	0xFEF
 40845                           postinc0	equ	0xFEE
 40846                           fsr0h	equ	0xFEA
 40847                           fsr0l	equ	0xFE9
 40848                           wreg	equ	0xFE8
 40849                           indf1	equ	0xFE7
 40850                           postdec1	equ	0xFE5
 40851                           plusw1	equ	0xFE3
 40852                           fsr1h	equ	0xFE2
 40853                           fsr1l	equ	0xFE1
 40854                           indf2	equ	0xFDF
 40855                           postinc2	equ	0xFDE
 40856                           postdec2	equ	0xFDD
 40857                           plusw2	equ	0xFDB
 40858                           fsr2h	equ	0xFDA
 40859                           fsr2l	equ	0xFD9
 40860                           status	equ	0xFD8
 40861                           
 40862                           	psect	text155
 40863  000000                     __ptext155:
 40864                           	opt stack 0
 40865                           tosu	equ	0xFFF
 40866                           tosh	equ	0xFFE
 40867                           tosl	equ	0xFFD
 40868                           pclatu	equ	0xFFB
 40869                           pclath	equ	0xFFA
 40870                           tblptru	equ	0xFF8
 40871                           tblptrh	equ	0xFF7
 40872                           tblptrl	equ	0xFF6
 40873                           tablat	equ	0xFF5
 40874                           prodh	equ	0xFF4
 40875                           prodl	equ	0xFF3
 40876                           intcon	equ	0xFF2
 40877                           indf0	equ	0xFEF
 40878                           postinc0	equ	0xFEE
 40879                           fsr0h	equ	0xFEA
 40880                           fsr0l	equ	0xFE9
 40881                           wreg	equ	0xFE8
 40882                           indf1	equ	0xFE7
 40883                           postdec1	equ	0xFE5
 40884                           plusw1	equ	0xFE3
 40885                           fsr1h	equ	0xFE2
 40886                           fsr1l	equ	0xFE1
 40887                           indf2	equ	0xFDF
 40888                           postinc2	equ	0xFDE
 40889                           postdec2	equ	0xFDD
 40890                           plusw2	equ	0xFDB
 40891                           fsr2h	equ	0xFDA
 40892                           fsr2l	equ	0xFD9
 40893                           status	equ	0xFD8
 40894                           
 40895                           	psect	rparam
 40896  0000                     tosu	equ	0xFFF
 40897                           tosh	equ	0xFFE
 40898                           tosl	equ	0xFFD
 40899                           pclatu	equ	0xFFB
 40900                           pclath	equ	0xFFA
 40901                           tblptru	equ	0xFF8
 40902                           tblptrh	equ	0xFF7
 40903                           tblptrl	equ	0xFF6
 40904                           tablat	equ	0xFF5
 40905                           prodh	equ	0xFF4
 40906                           prodl	equ	0xFF3
 40907                           intcon	equ	0xFF2
 40908                           indf0	equ	0xFEF
 40909                           postinc0	equ	0xFEE
 40910                           fsr0h	equ	0xFEA
 40911                           fsr0l	equ	0xFE9
 40912                           wreg	equ	0xFE8
 40913                           indf1	equ	0xFE7
 40914                           postdec1	equ	0xFE5
 40915                           plusw1	equ	0xFE3
 40916                           fsr1h	equ	0xFE2
 40917                           fsr1l	equ	0xFE1
 40918                           indf2	equ	0xFDF
 40919                           postinc2	equ	0xFDE
 40920                           postdec2	equ	0xFDD
 40921                           plusw2	equ	0xFDB
 40922                           fsr2h	equ	0xFDA
 40923                           fsr2l	equ	0xFD9
 40924                           status	equ	0xFD8
 40925                           
 40926                           	psect	temp
 40927  00005B                     btemp:
 40928                           	opt stack 0
 40929  00005B                     	ds	1
 40930  0000                     int$flags	set	btemp
 40931  0000                     wtemp8	set	btemp+1
 40932  0000                     ttemp5	set	btemp+1
 40933  0000                     ttemp6	set	btemp+4
 40934  0000                     ttemp7	set	btemp+8
 40935                           tosu	equ	0xFFF
 40936                           tosh	equ	0xFFE
 40937                           tosl	equ	0xFFD
 40938                           pclatu	equ	0xFFB
 40939                           pclath	equ	0xFFA
 40940                           tblptru	equ	0xFF8
 40941                           tblptrh	equ	0xFF7
 40942                           tblptrl	equ	0xFF6
 40943                           tablat	equ	0xFF5
 40944                           prodh	equ	0xFF4
 40945                           prodl	equ	0xFF3
 40946                           intcon	equ	0xFF2
 40947                           indf0	equ	0xFEF
 40948                           postinc0	equ	0xFEE
 40949                           fsr0h	equ	0xFEA
 40950                           fsr0l	equ	0xFE9
 40951                           wreg	equ	0xFE8
 40952                           indf1	equ	0xFE7
 40953                           postdec1	equ	0xFE5
 40954                           plusw1	equ	0xFE3
 40955                           fsr1h	equ	0xFE2
 40956                           fsr1l	equ	0xFE1
 40957                           indf2	equ	0xFDF
 40958                           postinc2	equ	0xFDE
 40959                           postdec2	equ	0xFDD
 40960                           plusw2	equ	0xFDB
 40961                           fsr2h	equ	0xFDA
 40962                           fsr2l	equ	0xFD9
 40963                           status	equ	0xFD8


Data Sizes:
    Strings     69
    Constant    4446
    Data        135
    BSS         947
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      90
    BANK0           160    108     160
    BANK1           256      4     213
    BANK2           256      0     200
    BANK3           256      0      64
    BANK4           256      0       0
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(COMRAM[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), ToSendDataBuffer(BANK3[64]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 512
		 -> fat_create_file@root_entry(COMRAM[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), ToSendDataBuffer(BANK3[64]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3759
		 -> flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), STR_6(CODE[6]), STR_5(CODE[9]), 
		 -> STR_4(CODE[7]), STR_3(CODE[9]), dc_manual(CODE[80]), dc_zero(CODE[80]), 
		 -> STR_2(CODE[7]), STR_1(CODE[9]), dc_arc2(CODE[80]), dc_arc1(CODE[80]), 
		 -> dc_divide2(CODE[80]), dc_divide1(CODE[80]), dc_setup2(CODE[80]), dc_setup1(CODE[80]), 
		 -> dc_main(CODE[80]), ReceivedDataBuffer(BANK2[64]), os.current_position_in_degrees(BANK0[2]), config(BANK1[22]), 
		 -> os.current_position_in_steps(BANK0[4]), os(BANK0[45]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3759
		 -> flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), STR_6(CODE[6]), STR_5(CODE[9]), 
		 -> STR_4(CODE[7]), STR_3(CODE[9]), dc_manual(CODE[80]), dc_zero(CODE[80]), 
		 -> STR_2(CODE[7]), STR_1(CODE[9]), dc_arc2(CODE[80]), dc_arc1(CODE[80]), 
		 -> dc_divide2(CODE[80]), dc_divide1(CODE[80]), dc_setup2(CODE[80]), dc_setup1(CODE[80]), 
		 -> dc_main(CODE[80]), ReceivedDataBuffer(BANK2[64]), os.current_position_in_degrees(BANK0[2]), config(BANK1[22]), 
		 -> os.current_position_in_steps(BANK0[4]), os(BANK0[45]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    _parse_jump_steps@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_jump_steps@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_jump_steps@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK2[64]), 

    _parse_command_long@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_command_long@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK2[64]), 

    _fill_buffer_get_mode_details@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_parse@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK2[64]), 

    api_parse@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK2[64]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_modify_file@root(COMRAM[32]), fat_resize_file@root(COMRAM[32]), fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), 
		 -> fat_get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), 
		 -> buffer(BIGRAMll[512]), _flash_get_status@status(BANK0[2]), msd_buffer(BIGRAMll[512]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_buffer_read@command(COMRAM[4]), _flash_partial_read@command(BANK0[4]), _flash_get_status@command(BANK0[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_resize_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(COMRAM[32]), _delete_root@deleted_value(COMRAM[1]), 
		 -> buffer(BIGRAMll[512]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(BANK0[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(BANK0[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(BANK0[4]), 
		 -> _flash_copy_page_to_buffer@command(COMRAM[4]), _flash_wakeup@command(BANK0[1]), _flash_set_page_size@command(BANK0[4]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    flash_sector_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    flash_sector_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_modify_file@root(COMRAM[32]), fat_resize_file@root(COMRAM[32]), fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), 
		 -> fat_get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), 
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_resize_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(COMRAM[32]), _delete_root@deleted_value(COMRAM[1]), 
		 -> buffer(BIGRAMll[512]), 

    _display_itoa_long@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_itoa@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_prepare@temp(BANK0[10]), display_content(BANK2[80]), 

    _display_signed_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_padded_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    i2c_display_program_custom_character@bit_pattern	PTR unsigned char  size(2) Largest target is 8
		 -> bit_pattern_ae(CODE[8]), bit_pattern_degree(CODE[8]), bit_pattern_verticalbar(CODE[8]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_display_program_custom_character@data_array(BANK0[11]), _ic2_display_set_cgram_address@data_array(BANK0[3]), _ic2_display_set_ddram_address@data_array(BANK0[2]), i2c_display_init@init_sequence(BANK0[9]), 
		 -> _i2c_display_send_init_sequence@init_sequence(COMRAM[9]), i2c_eeprom_read@addr(COMRAM[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), 
		 -> i2c_eeprom_writeByte@dat(COMRAM[2]), i2c_adc_start@configuration_byte(COMRAM[1]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2623	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2589	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2588	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2535	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2534	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S2167$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    S2167$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S2167$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S2167$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S2167$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> i2_ExternalFlash_MediaDetect(), ExternalFlash_MediaDetect(), 

    S2167$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S2167$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S2167$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> i2_ExternalFlash_MediaInitialize(), ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(COMRAM[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), ToSendDataBuffer(BANK3[64]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(3) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->i2_USBTransferOnePacket
    _MSDTransferTerminated->i2_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->i2_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_encoder_statemachine
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_get_format_status->_flash_sector_read
    _fat_format->_flash_sector_write
    _flash_sector_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->__flash_is_busy
    __flash_write_page_from_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_ddram_address
    __ic2_display_set_ddram_address->__i2c_write
    _display_init->_i2c_display_program_custom_character
    _i2c_display_program_custom_character->__ic2_display_set_cgram_address
    __ic2_display_set_cgram_address->__i2c_write
    _i2c_display_init->__i2c_write
    __i2c_write->__i2c_wait_idle
    _motor_process_cue->__motor_run
    _encoder_statemachine->_motor_go_to_degrees_position
    _motor_nonzero_steps_from_degrees->_motor_steps_from_degrees
    _motor_steps_from_degrees->___fldiv
    _motor_steps_from_degrees->___flmul
    _motor_go_to_degrees_position->_motor_go_to_steps_position
    ___flmul->___xxtofl
    _display_prepare->__display_itoa_long
    _motor_speed_from_index->__motor_get_speed_in_degrees
    __motor_get_speed_in_degrees->___fldiv
    ___fldiv->___xxtofl
    __display_signed_itoa->__display_padded_itoa
    __display_padded_itoa->_itoa
    __display_itoa_long->__display_itoa
    __display_itoa->_motor_speed_from_index
    _itoa->_utoa
    _utoa->___lwdiv
    _USBDeviceInit->_memset
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_MSDCheckForErrorCases
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_sector_read
    _flash_sector_read->__flash_partial_read
    __flash_partial_read->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx
    _APP_DeviceCustomHIDTasks->_api_parse
    _api_prepare->__fill_buffer_get_display
    __fill_buffer_get_status->_memcpy
    __fill_buffer_get_display->_display_get_character
    _api_parse->__parse_command_short
    __parse_command_short->_motor_go_to_steps_position
    _motor_go_to_steps_position->_motor_schedule_command
    __parse_command_long->__parse_jump_steps
    __parse_jump_steps->_motor_schedule_command
    _motor_schedule_command->_motor_nonzero_steps_from_degrees

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _SYS_InterruptHigh in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _SYS_InterruptHigh in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SYS_InterruptHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  306594
                                              0 BANK1      4     4      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _display_prepare
                     _display_update
               _encoder_statemachine
                  _motor_process_cue
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0   54593
                    __backlight_init
                  __system_pin_setup
                __system_timer0_init
                       _display_init
                     _display_update
                       _encoder_init
                           _fat_init
                         _flash_init
                           _i2c_init
                         _motor_init
 ---------------------------------------------------------------------------------
 (2) _motor_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0   13160
               __flash_set_page_size
                           _spi_init
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     270
                                              3 BANK0      1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     208
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0   12890
                                             19 BANK0      5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   30772
                         _fat_format
              _fat_get_format_status
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    8195
                                             43 BANK0      4     4      0
                           __get_fbr
                           __get_mbr
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (3) _fat_format                                           2     2      0   22577
                                             36 BANK0      2     2      0
                          __get_data
                           __get_fat
                           __get_fbr
                           __get_mbr
                          __get_root
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) _flash_sector_write                                   5     1      4   20335
                                             31 BANK0      5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    5486
                                             19 BANK0     11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     664
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    5716
                                             19 BANK0     10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    7134
                                             19 BANK0     12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) __get_root                                            6     4      2     417
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     239
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     239
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fat                                             4     2      2     135
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_data                                            2     0      2     166
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _encoder_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_update                                       1     1      0    3085
                                             16 BANK0      1     1      0
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (3) _i2c_display_write_fixed                              4     1      3     369
                                              5 BANK0      4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_display_cursor                                   3     2      1    2586
                                             13 BANK0      3     2      1
     __ic2_display_set_ddram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_ddram_address                       3     3      0    2377
                                             10 BANK0      3     3      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (2) _display_init                                         0     0      0    7576
                   _i2c_display_init
_i2c_display_program_custom_characte
 ---------------------------------------------------------------------------------
 (3) _i2c_display_program_custom_character                19    17      2    5267
                                             14 BANK0     19    17      2
                         __i2c_write
     __ic2_display_set_cgram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_cgram_address                       4     4      0    2417
                                             10 BANK0      4     4      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_display_init                                    10    10      0    2309
                                             10 BANK0     10    10      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (5) __i2c_write                                           5     2      3    2272
                                              5 BANK0      5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_wait_idle                                       5     5      0       0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (4) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_send                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_pin_setup                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __backlight_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor_process_cue                                    0     0      0     602
                         __motor_run
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (1) _encoder_statemachine                                22    22      0   44892
                                             94 BANK0     14    14      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
         _encoder_next_arc_step_size
      _encoder_next_divide_step_size
        _encoder_next_setup_stepsize
                 _motor_change_speed
       _motor_go_to_degrees_position
   _motor_nonzero_steps_from_degrees
             _motor_schedule_command
                         _motor_stop
 ---------------------------------------------------------------------------------
 (2) _motor_stop                                           2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _motor_nonzero_steps_from_degrees                     8     4      4   10249
                                             47 BANK0      8     4      4
           _motor_steps_from_degrees
 ---------------------------------------------------------------------------------
 (3) _motor_steps_from_degrees                             8     4      4    9942
                                             39 BANK0      8     4      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _motor_go_to_degrees_position                         4     0      4   17136
                                             90 BANK0      4     0      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
         _motor_go_to_steps_position
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    3609
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _motor_change_speed                                   2     0      2     447
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _encoder_next_setup_stepsize                          4     2      2     135
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _encoder_next_divide_step_size                        1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _encoder_next_arc_step_size                           4     2      2     135
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _display_prepare                                     14    14      0   52777
                                             92 BANK0     14    14      0
                     __display_clear
                      __display_itoa
                 __display_itoa_long
               __display_padded_itoa
               __display_signed_itoa
                             _memcpy
             _motor_speed_from_index
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _motor_speed_from_index                               2     0      2    7571
                                             51 BANK0      2     0      2
        __motor_get_speed_in_degrees
 ---------------------------------------------------------------------------------
 (3) __motor_get_speed_in_degrees                         12    10      2    7332
                                             39 BANK0     12    10      2
                            ___fldiv
                            ___fltol
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1828
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     720
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     961
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    3307
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __display_signed_itoa                                 4     0      4    5913
                                             47 BANK0      4     0      4
               __display_padded_itoa
 ---------------------------------------------------------------------------------
 (3) __display_padded_itoa                                23    18      5    5516
                                             24 BANK0     23    18      5
                               _itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (2) __display_itoa_long                                  15     8      7   12731
                                             77 BANK0     15     8      7
                            ___aldiv
                            ___almod
                      __display_itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (3) __display_itoa                                       24    19      5    8311
                                             53 BANK0     24    19      5
                               _itoa
             _motor_speed_from_index (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     650
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) _itoa                                                 8     2      6    2706
                                             16 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    1849
                                              7 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     657
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     641
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     653
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __display_clear                                       4     4      0     198
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    5     5      0      99
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0   93974
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0   93974
                                             76 BANK0      6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0   88242
                                             71 BANK0      5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   45026
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   42978
                                             57 BANK0     14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0    8914
                                             17 BANK0      5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     231
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                            9     0      9     308
                                              0 BANK0      9     0      9
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   16190
                                             53 BANK0      4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2847
                                             10 BANK0      7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    2048
                                              8 BANK0      2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (3) _USBStallEndpoint                                     8     7      1    1983
                                              0 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    7815
                                             43 BANK0     10     2      8
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) _flash_sector_read                                    4     0      4    7457
                                             39 BANK0      4     0      4
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    5939
                                             19 BANK0     20    12      8
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    3240
                                             17 BANK0      2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1614
                                              8 BANK0      1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1580
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2    1592
                                             12 BANK0      5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8    1496
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     509
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      77
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      77
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaInitialize                        2     0      2     119
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaDetect                            2     0      2     119
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             1     1      0   45404
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (2) _api_prepare                                          5     1      4   19094
                                             16 BANK0      5     1      4
           __fill_buffer_get_display
      __fill_buffer_get_mode_details
            __fill_buffer_get_status
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_status                              2     0      2    8782
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              11     5      6    7903
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_mode_details                        4     2      2     724
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_display                            12     9      3    1071
                                              4 BANK0     12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (4) _display_get_character                                4     3      1     166
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _api_parse                                           11     6      5   22765
                                             91 BANK0     11     6      5
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (3) __parse_command_short                                 1     1      0   13871
                                             90 BANK0      1     1      0
         _motor_go_to_steps_position
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (3) _motor_go_to_steps_position                          28    24      4    7228
                                             62 BANK0     28    24      4
                            ___fltol (ARG)
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (3) __parse_command_long                                  7     1      6    7892
                                             74 BANK0      7     1      6
                  __parse_jump_steps
 ---------------------------------------------------------------------------------
 (4) __parse_jump_steps                                   12     6      6    7419
                                             62 BANK0     12     6      6
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (2) _motor_schedule_command                               7     1      6    6612
                                             55 BANK0      7     1      6
                            ___fltol (ARG)
                         __motor_run
                 _motor_items_in_cue
   _motor_nonzero_steps_from_degrees (ARG)
 ---------------------------------------------------------------------------------
 (2) _motor_items_in_cue                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __motor_run                                          11     5      6     602
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    3545
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _SYS_InterruptHigh                                  14    14      0   58258
                                             31 COMRAM    14    14      0
                     _USBDeviceTasks
                          _motor_isr
                           _tmr0_isr
 ---------------------------------------------------------------------------------
 (14) _tmr0_isr                                            0     0      0       0
                        _encoder_run
 ---------------------------------------------------------------------------------
 (15) _encoder_run                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _motor_isr                                          24    24      0      91
                                              0 COMRAM    24    24      0
 ---------------------------------------------------------------------------------
 (14) _USBDeviceTasks                                      1     1      0   58167
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (15) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (15) _USBWakeFromSuspend                                  0     0      0    7955
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBSuspend                                          0     0      0    7955
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USBIncrement1msInternalTimers                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPService                                    1     1      0   33624
                                             29 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (16) i2_memcpy                                           11     5      6     221
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfSetupHandler                              0     0      0   33174
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (17) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCheckStdRequest                                  0     0      0   25127
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (18) _USBStdSetCfgHandler                                 1     1      0    8493
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (16) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (18) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (18) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (18) _USBStdFeatureReqHandler                             6     6      0    8633
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    7955
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
                i2_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (16) i2_SYSTEM_Initialize                                 5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (16) _USBCheckMSDRequest                                  4     4      0     736
                                             11 COMRAM     4     4      0
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) _USBCheckHIDRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _MSDTransferTerminated                               4     2      2    1075
                                             11 COMRAM     4     2      2
                 i2_USBStallEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBStallEndpoint                                  8     7      1     252
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceMSDInitialize                             0     0      0    1473
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (17) _USBMSDInit                                          3     3      0     740
                                             11 COMRAM     3     3      0
        i2_ExternalFlash_MediaDetect *
    i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (18) i2_ResetSenseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaInitialize                     2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaDetect                         2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceCustomHIDInitialize                       0     0      0    1421
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBTransferOnePacket                             11     7      4     688
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (17) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (18) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (19) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_jump_steps
           _motor_schedule_command
             ___fltol (ARG)
             __motor_run (ARG)
             _motor_items_in_cue (ARG)
             _motor_nonzero_steps_from_degrees (ARG)
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
       __parse_command_short
         _motor_go_to_steps_position
           ___fltol (ARG)
           _motor_schedule_command (ARG)
             ___fltol (ARG)
             __motor_run (ARG)
             _motor_items_in_cue (ARG)
             _motor_nonzero_steps_from_degrees (ARG)
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
         _motor_schedule_command
           ___fltol (ARG)
           __motor_run (ARG)
           _motor_items_in_cue (ARG)
           _motor_nonzero_steps_from_degrees (ARG)
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
     _api_prepare
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_mode_details
       __fill_buffer_get_status
         _memcpy
       _memcpy
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   ___fldiv
     ___xxtofl (ARG)
   ___flmul
     ___xxtofl (ARG)
   ___fltol
   ___xxtofl
   _display_prepare
     __display_clear
     __display_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _motor_speed_from_index (ARG)
         __motor_get_speed_in_degrees
           ___fldiv
             ___xxtofl (ARG)
           ___fltol
           ___lmul
           ___xxtofl
       _strlen (ARG)
     __display_itoa_long
       ___aldiv
       ___almod
       __display_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _motor_speed_from_index (ARG)
           __motor_get_speed_in_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___fltol
             ___lmul
             ___xxtofl
         _strlen (ARG)
       _strlen
     __display_padded_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _strlen
     __display_signed_itoa
       __display_padded_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _strlen
     _memcpy
     _motor_speed_from_index
       __motor_get_speed_in_degrees
         ___fldiv
           ___xxtofl (ARG)
         ___fltol
         ___lmul
         ___xxtofl
     _strlen
   _display_update
     _i2c_display_cursor
       __ic2_display_set_ddram_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
   _encoder_statemachine
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___fltol
     ___xxtofl
     _encoder_next_arc_step_size
     _encoder_next_divide_step_size
     _encoder_next_setup_stepsize
     _motor_change_speed
     _motor_go_to_degrees_position
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
       _motor_go_to_steps_position
         ___fltol (ARG)
         _motor_schedule_command (ARG)
           ___fltol (ARG)
           __motor_run (ARG)
           _motor_items_in_cue (ARG)
           _motor_nonzero_steps_from_degrees (ARG)
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
     _motor_nonzero_steps_from_degrees
       _motor_steps_from_degrees
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
     _motor_schedule_command
       ___fltol (ARG)
       __motor_run (ARG)
       _motor_items_in_cue (ARG)
       _motor_nonzero_steps_from_degrees (ARG)
         _motor_steps_from_degrees
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___fltol
           ___xxtofl
     _motor_stop
   _motor_process_cue
     __motor_run
     _motor_items_in_cue
   _system_init
     __backlight_init
     __system_pin_setup
     __system_timer0_init
     _display_init
       _i2c_display_init
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
       _i2c_display_program_custom_character
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __ic2_display_set_cgram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
     _display_update
       _i2c_display_cursor
         __ic2_display_set_ddram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
       _i2c_display_write_fixed
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
     _encoder_init
     _fat_init
       _fat_format
         __get_data
         __get_fat
         __get_fbr
         __get_mbr
         __get_root
         _flash_sector_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _memcpy
         _spi_tx
       _spi_init
         __spi_init
     _i2c_init
     _motor_init

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 i2_ExternalFlash_MediaDetect *
                 i2_ExternalFlash_MediaInitialize *
                 i2_ResetSenseData *
                 i2_USBTransferOnePacket *
             _MSDTransferTerminated
               i2_USBStallEndpoint
               i2_USBTransferOnePacket
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               i2_USBTransferOnePacket
             i2_SYSTEM_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               i2_ExternalFlash_MediaDetect *
               i2_ExternalFlash_MediaInitialize *
               i2_ResetSenseData *
               i2_USBTransferOnePacket *
           _MSDTransferTerminated
             i2_USBStallEndpoint
             i2_USBTransferOnePacket
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             i2_USBTransferOnePacket
           i2_SYSTEM_Initialize
       i2_memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           i2_ExternalFlash_MediaDetect *
           i2_ExternalFlash_MediaInitialize *
           i2_ResetSenseData *
           i2_USBTransferOnePacket *
       _MSDTransferTerminated
         i2_USBStallEndpoint
         i2_USBTransferOnePacket
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         i2_USBTransferOnePacket
       i2_SYSTEM_Initialize
     i2_USBDeviceInit
       i2_memset
   _motor_isr
   _tmr0_isr
     _encoder_run

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     200      36       33.4%
BIGRAMlh           500      0       0      35        0.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      40      11       25.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C8       9       78.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4      D5       7       83.2%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6C      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      5A       1       95.7%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2D7      31        0.0%
DATA                 0      0     4D7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Feb 17 22:47:35 2019

                         _motor_next_speed_check 0137                                       _USB_SD_Ptr 9DE4  
                                   ___fldiv@aexp 0086                                     ___fldiv@bexp 0085  
                                   ___fldiv@sign 007E                              __system_timer0_init 263C  
                                             _os 00D3                                    _USBDeviceInit E8A2  
                             _USBCheckHIDRequest 0526                   ?_encoder_next_divide_step_size 002E  
                               ??__flash_is_busy 0071                                     __CFG_CP0$OFF 000000  
                            __end_of_system_init 0004                         ?_i2c_display_write_fixed 0065  
           USER_USB_CALLBACK_EVENT_HANDLER@event 003D             USER_USB_CALLBACK_EVENT_HANDLER@pdata 003F  
                                            l206 2576                                              l207 2574  
                                            l145 E8EC                                              l147 E914  
                                            l149 E94E                      __end_of_USBStdGetDscHandler F28E  
                                            l184 FA2A                                              l192 F85E  
                                            l186 FA54                                              l602 D8AA  
                                            l188 FAD2                                              l700 CBF8  
                                            l620 1946                                              l612 F158  
                                            l701 C944                                              l613 F152  
                                            l605 D8B0                                              l710 CA3C  
                                            l630 C5A6                                              l622 1962  
                                            l703 CC1C                                              l711 CAA8  
                                            l631 C228                                              l615 F15C  
                                            l720 CBDE                                              l712 CAA4  
                                            l704 C9EC                                              l640 C366  
                                            l624 196E                                              l608 F0AC  
                                            l641 C370                                              l625 1974  
                                            l714 CABE                                              l706 C9F0  
                                            l650 C462                                              l642 C392  
                                            l634 C238                                              l626 197A  
                                            l570 D8C8                                              l731 FD80  
                                            l715 CB3E                                              l619 1982  
                                            l571 D6A2                                              l708 CA18  
                                            l660 C506                                              l652 C496  
                                            l644 C3C0                                              l636 C248  
                                            l580 D7A8                                              l709 CA62  
                                            l661 C51A                                              l637 C252  
                                            l734 FD8E                                              l726 FD30  
                                            l718 CBAE                                              l670 C59E  
                                            l662 C538                                              l654 C4B2  
                                            l646 C400                                              l582 D7BC  
                                            l735 FDB6                                              l719 CBC6  
                                            l639 C2A4                                              l591 D82E  
                                            l575 D6C4                                              l728 FD44  
                                            l664 C564                                              l656 C4CA  
                                            l592 D832                                              l753 FE0C  
                                            l737 FDEA                                              l681 E0D8  
                                            l665 C53E                                              l649 C434  
                                            l593 D858                                              l577 D7E0  
                                            l770 F45E                                              l738 FDD4  
                                            l690 DFF0                                              l682 DF20  
                                            l666 C54E                                              l578 D7C6  
                                            l586 D8E4                                              l675 0BA2  
                                            l763 F4A8                                              l771 F49A  
                                            l691 E01A                                              l667 C562  
                                            l587 D800                                              l579 D7A0  
                                            l764 F412                                              l684 E0FC  
                                            l692 E048                                              l860 EDE6  
                                            _BDT 000D00                                              l677 0BB8  
                                            l757 F3E6                                              l749 FDFC  
                                            l693 E05A                                              l685 DF76  
                                            l589 D80C                                              l861 EEC0  
                                            l766 F41A                                              l694 E060  
                                            l686 DF82                                              l943 0F24  
                                            l767 F428                                              l695 E076  
                                            l687 DF8C                                              l863 EEEE  
                                            l768 F43C                                              l696 E0C0  
                                            l688 DFA2                                              l864 EEC6  
                                            l937 0EC0                                              l769 F44A  
                                            l857 EDCA                                              l890 1C20  
                                            l891 1BE4                                              l859 EECC  
                                            l893 1BF0                                              l897 1C02  
                                            l979 2864                                              l899 1C0E  
                                            _LBA 0147                                    ?_display_init 002E  
                                            _PR2 000FCB                                              _LUN 019A  
                                            _UIE 000F36                                              _UIR 000F62  
                             api_prepare@command 0074                                       _USBSuspend 25B0  
                         __end_of_display_update 240C                             USBStdSetCfgHandler@i 0045  
                                            prod 000FF3                                              tosl 000FFD  
                                            wreg 000FE8                                   _USBDeviceTasks EB30  
                            ?_USBCheckHIDRequest 002E                                     __CFG_IESO$ON 000000  
                                 _USBDeviceState 002B                                     ___flmul@aexp 007B  
                                   ___flmul@bexp 0080                                     ___flmul@sign 007A  
                                   ___flmul@temp 0085                                     ___flmul@prod 0081  
                      __size_of_i2c_display_init 0050                            ??_USBCtrlTrfRxService 002E  
                       __size_ofi2_USBDeviceInit 0144                         USBEnableEndpoint@options 0036  
                              ??_MSDErrorHandler 0068                             ?__system_timer0_init 002E  
                            api_prepare@inBuffer 0070                                     ___fltol@exp1 0069  
                    __flash_write_to_buffer@data 0075                                             l1102 28DA  
                                           l1301 DA36                                             l1117 28D2  
                                           l1213 15E0                                             l1302 DA4A  
                                           l1134 2070                                             l2110 2282  
                                           l1303 DAAA                                             l1135 2052  
                                           l1207 1E36                                             l2200 0AEC  
                                           l1304 DA64                                             l1400 B8A6  
                                           l1208 1E18                                             l1305 DAA8  
                                           l1313 F632                                             l2121 13EE  
                                           l2202 0B2C                                             l2210 E5A6  
                                           l2130 1194                                             l1322 BBE0  
                                           l1402 B904                                             l2203 0AF6  
                                           l2115 1C8A                                             l1307 DAE4  
                                           l1411 BAA8                                             l1403 B9AA  
                                           l1331 BC3A                                             l1323 B012  
                                           l2107 2294                                             l2204 0B02  
                                           l2220 E574                                             l1308 DAB4  
                                           l1412 BA78                                             l1404 B922  
                                           l1332 B070                                             l1324 B050  
                                           l2124 1424                                             l2108 2270  
                                           l2213 E49E                                             l2133 11D2  
                                           l1421 BBA2                                             l1405 B9C0  
                                           l1333 B0B8                                             l1325 B032  
                                           l2109 22A4                                             l2230 E610  
                                           l1270 20D8                                             l1414 BB1A  
                                           l1406 B92E                                             l1350 B1E6  
                                           l1342 B110                                             l2231 E616  
                                           l2215 E4B0                                             l1423 BBB0  
                                           l1415 BB42                                             l1407 B96C  
                                           l1343 B142                                             l1335 B0F2  
                                           l1327 B03C                                             l1431 23E2  
                                           l2224 E6F4                                             l2240 E6F0  
                                           l2232 E61C                                             l1272 20E4  
                                           l1280 00B0                                             l1408 BA34  
                                           l1360 B324                                             l1352 B222  
                                           l1344 B12E                                             l1336 B0C2  
                                           l2233 E670                                             l2225 E5F6  
                                           l2217 E522                                             l1281 0080  
                                           l1425 BBD8                                             l1417 BB50  
                                           l1409 B9FC                                             l1353 B20E  
                                           l1329 B046                                             l1521 1B9A  
                                           l1513 1F02                                             l2250 E808  
                                           l2410 CE86                                             l2234 E6C6  
                                           l2170 01F6                                             l1362 B3B0  
                                           l1346 B138                                             l2322 20B8  
                                           l1522 1BA4                                             l1514 1F0C  
                                           l2411 CE48                                             l2235 E6DA  
                                           l2227 E5FE                                             l2171 0204  
                                           l1291 D9C6                                             l1419 BB78  
                                           l1371 B4FC                                             l1363 B380  
                                           l1355 B218                                             l1347 B156  
                                           l2252 E89E                                             l2244 2312  
                                           l2236 E6E0                                             l2228 E604  
                                           l2172 0218                                             l1372 B52A  
                                           l1356 B236                                             l1348 B198  
                                           l2341 0F98                                             l2245 22F0  
                                           l2237 E6E4                                             l2229 E60A  
                                           l2173 022C                                             l1621 24CE  
                                           l1277 0052                                             l1381 B62C  
                                           l1373 B51A                                             l1365 B43E  
                                           l1357 B2A4                                             l2501 A328  
                                           l2246 2322                                             l2414 CEAE  
                                           l2406 CCB4                                             l2238 E6E8  
                                           l2190 F34E                                             l2182 F2FA  
                                           l2174 023A                                             l1278 003C  
                                           l1286 2174                                             l1390 B702  
                                           l1382 B5FC                                             l1374 B53A  
                                           l1366 B40E                                             l1358 B274  
                                           l2502 A338                                             l2343 0FA6  
                                           l2407 CD04                                             l2239 E6EC  
                                           l2167 027A                                             l2175 025A  
                                           l1527 2778                                             l1295 D99E  
                                           l1375 B522                                             l2511 A3CC  
                                           l2360 DD78                                             l2408 CD8E  
                                           l2184 F300                                             l1296 D9BC  
                                           l3240 CF1E                                             l1392 B7D8  
                                           l1384 B660                                             l1376 B594  
                                           l1368 B4E4                                             l2520 AFFA  
                                           l2600 AA76                                             l2361 DDD2  
                                           l2409 CDDE                                             l3241 CF1A  
                                           l3321 EA2E                                             l1393 B7A0  
                                           l1385 B6C8                                             l1377 B564  
                                           l1369 B4B4                                             l2513 A3F4  
                                           l2505 A366                                             l2186 F378  
                                           l3162 1E84                                             l1298 DA52  
                                           l3250 D07E                                             l3322 EA3E  
                                           l1386 B67E                                             l2610 ABB4  
                                           l2602 AA96                                             l2522 A4DA  
                                           l2530 A4D0                                             l2514 A404  
                                           l2187 F31A                                             l2179 F2AC  
                                           l3163 1E8E                                             l3251 D02E  
                                           l3331 EADE                                             l3323 EA5C  
                                           l1395 B84C                                             l1387 B6D8  
                                           l1379 B5F2                                             l2523 A480  
                                           l2507 A38E                                             l2188 F3AE  
                                           l1476 1D88                                             l3172 2212  
                                           l3252 D056                                             l3244 CF5E  
                                           l3332 EAD2                                             l1396 B81C  
                                           l1388 B68A                                             l2604 ACB6  
                                           l2612 ABC2                                             l2540 A5CC  
                                           l2532 A502                                             l2524 A4A2  
                                           l2508 A39E                                             l1900 D4C8  
                                           l1468 183A                       USBConfigureEndpoint@handle 0034  
                                           l2365 DDDE                                             l2357 DD4C  
                                           l2189 F332                                             l1477 1D44  
                                           l3173 221C                                             l3245 CF5A  
                                           l3325 EA6E                                             l1389 B732  
                                           l2621 AD80                                             l2605 AAAC  
                                           l2525 A4B0                                             l2517 A432  
                                           l1901 D4CC                                             l1469 185E  
                                           l2366 DDE0                                             l2358 DD5C  
                                           l2198 0AB2                                             l3158 1E64  
                                           l3342 21C4                                             l3270 D18A  
                                           l3254 D07C                                             l3326 EA62  
                                           l1398 B864                                             l2630 AEBE  
                                           l2622 AD34                                             l2614 ABCA  
                                           l2606 AB92                                             l2550 A69C  
                                           l2534 A540                                             l1910 D4F0  
                                           l1902 D4D0                                             l1494 1558  
                                           l2367 DE4A                                             l2359 DD70  
                                           l1479 1D6E                                             l3159 1E5C  
                                           l3247 CFA8                                             l1399 B8D6  
                                           l2615 ACAE                                             l2543 A5FA  
                                           l2527 A4E8                                             l1911 D4F4  
                                           l1903 D4D4                                             l1495 1562  
                                           l2368 DE84                                             l3360 259C  
                                           l3168 21FA                                             l3264 D0EA  
                                           l3328 EAAC                                             l3280 C672  
                                           l2640 AF3E                                             l2560 A702  
                                           l2528 A4B8                                             l1920 D518  
                                           l1912 D4F8                                             l1904 D4D8  
                                           l3361 258A                                             l3169 21F2  
                                           l3257 D0B2                                             l3249 CFD0  
                                           l3337 EB1E                                             l3329 EA94  
                                           l3281 C690                                             l2633 AF8A  
                                           l2625 ADE2                                             l2617 ACCE  
                                           l2609 ABA0                                             l2553 A71A  
                                           l2561 A710                                             l2529 A4C2  
                                           l1921 D51C                                             l1913 D4FC  
                                           l1905 D4DC                                             l1497 159A  
                                           l3354 1AB6                                             l3346 0E16  
                                           l3266 D12E                                             l3258 D094  
                                           l2650 172A                                             l3274 C622  
                                           l2642 AF46                                             l2634 AEEC  
                                           l2618 AE86                                             l2626 AE78  
                                           l2570 A8B0                                             l2554 A6D8  
                                           l2538 A6C4                                             l2546 A622  
                                           l1930 D53C                                             l1922 D520  
                                           l1914 D500                                             l1906 D4E0  
                                           l3355 1A7C                                             l3267 D152  
                                           l3275 C61E                                             l2643 AF6E  
                                           l2635 AF18                                             l2571 A7C6  
                                           l2563 A738                                             l2555 A6E2  
                                           l2547 A66E                                             l2539 A580  
                                           l1931 D540                                             l1923 D524  
                                           l1915 D504                                             l1907 D4E4  
                                           l1499 15BA                                             l3348 0E52  
                                           l3268 D17C                                             l2660 25E6  
                                           l2652 1736                                             l3292 C888  
                                           l3276 C632                                             l2628 AE90  
                                           l2564 A74A                                             l2556 A6F0  
                                           l2492 A29A                                             l1940 1C94  
                                           l1932 D544                                             l1916 D508  
                                           l1908 D4E8                                             l3349 0E94  
                                           l3269 D188                                             l2653 1740  
                                           l3285 C850                                             l2485 AFA8  
                                           l2645 AF78                                             l1933 D548  
                                           l1925 D528                                             l1917 D50C  
                                           l1909 D4EC                                             l1861 04A4  
                                           l2750 072A                                             l3366 22BA  
                                           l2662 25EA                                             l2654 174A  
                                           l3294 C8CC                                             l3286 C832  
                                           l3278 C662                                             l2638 AF26  
                                           l2582 A992                                             l2590 A988  
                                           l2574 A7EA                                             l2566 A776  
                                           l2558 A728                                             l1942 1C98  
                                           l1934 D54C                                             l1926 D52C  
                                           l1918 D510                                             l1870 0474  
                                           l1862 0458                                             l2751 071E  
                                           l3367 22B4                                             l2671 17A6  
                                           l2663 25EE                                             l2655 1754  
                                           l3295 C8EA                                             l3279 C65E  
                                           l2639 AF30                                             l2583 A950  
                                           l2559 A6F8                                             l2487 A45A  
                                           l2495 A2C2                                             l1943 1C9C  
                                           l1935 D550                                             l1927 D530  
                                           l1919 D514                                             l1871 0478  
                                           l2760 0CD4                                             l2672 17B0  
                                           l2664 25F2                                             l2592 A9BA  
                                           l2584 A95A                                             l2576 A8D0  
                                           l2568 A782                                             l2496 A2D2  
                                           l2488 A25C                                             l1944 1CA0  
                                           l1928 D534                                             l1880 049C  
                                           l1872 047C                                             l1864 045C  
                                           l1960 E37E                                             l1952 E2F8  
                                           l2761 0CE8                                             l2673 17BA  
                                           l2649 175E                                             l3297 C90E  
                                           l2585 A968                                             l2577 A8F0  
                                           l2569 A78C                                             l2489 A26C  
                                           l1945 1CA4                                             l1929 D538  
                                           l1881 04A0                                             l1873 0480  
                                           l1865 0460                                             l1961 E382  
                                           l2754 075E                                             l2674 17C4  
                                           l3298 C92C                                             l2594 A9FE  
                                           l1946 1CA8                                             l1890 D430  
                                           l1874 0484                                             l1866 0464  
                                           l1970 E3A6                                             l1962 E386  
                                           l1954 E306                                             l2755 076C  
                                           l2747 06E4                                             l2763 0D06  
                                           l2659 25F6                                             l2587 A9A0  
                                           l2579 A906                                             l2499 A300  
                                           l1939 1CB0                                             l1947 1CAC  
                                           l1891 D442                                             l1875 0488  
                                           l1867 0468                                             l1971 E3AA  
                                           l1963 E38A                                             l2756 0782  
                                           l2748 06FC                                             l2764 0CFA  
                                           l2668 17CE                                             l2588 A970  
                                           l1892 D454                                             l1876 048C  
                                           l1868 046C                                             l1980 E45A  
                                           l1972 E3AE                                             l1964 E38E  
                                           l1956 E33E                                             l2669 179A  
                                           l2597 AA42                                             l2589 A97A  
                                           l1885 D554                                             l1893 D466  
                                           l1877 0490                                             l1869 0470  
                                           l1973 E3B2                                             l1965 E392  
                                           l1894 D478                                             l1886 D424  
                                           l1878 0494                                             l1958 E3CE  
                                           l1974 E3B6                                             l1966 E396  
                                           l2767 0D2E                                             l2687 1CFC  
                                           l2599 AA64                                             l1983 26BA  
                                           l1895 D48A                                             l1879 0498  
                                           l1975 E3BA                                             l1967 E39A  
                                           l1959 E37A                                             l2768 0D3C  
                                           l2688 1D10                                             l1896 D49C  
                                           l1888 D428                                             l1976 E3BE  
                                           l1968 E39E                                             l2769 0D52  
                                           l1897 D4AE                                             l1889 D42C  
                                           l1977 E3C2                                             l1969 E3A2  
                                           l1993 0CAC                                             l1898 D4C0  
                                           l1978 E3C6                                             l1899 D4C4  
                                           l1979 E3CA                                             l1989 0C58  
                                           l2974 0196                                             l2966 0106  
                                           l2975 018A                                             l2968 0172  
                                           l2977 01B2                                             l2969 0162  
                    ?_encoder_next_arc_step_size 0060                    __size_of_encoder_statemachine 0DD6  
                          ??i2_SYSTEM_Initialize 002E                                             STR_1 A21C  
                                           STR_2 A225                                             STR_3 A21C  
                                           STR_4 A225                                             STR_5 A21C  
                                           STR_6 A22C                                             STR_7 A213  
                                           STR_8 A213                                             STR_9 A213  
                          ??_USBCtrlTrfTxService 002E                                             _UCFG 000F39  
                                           _UEP0 000F26                                             _UEP1 000F27  
                                           _UEIE 000F37                                             _UEIR 000F63  
                                           _UCON 000F65                                             _TMR2 000FCC  
                    __size_ofi2_USBStallEndpoint 0106                                   ??_encoder_init 0060  
                        ??_fat_get_format_status 008B                             api_parse@out_idx_ptr 00C2  
                                 _ResetSenseData 19A6                                             _enc1 0021  
                                           _enc2 0020           USBStdFeatureReqHandler@current_ep_data 0048  
                                           _pDst 0167                                             _main EDB8  
                        _bit_pattern_verticalbar A1DD                                             _itoa 219E  
                       ??i2_USBTransferOnePacket 0032                      __size_of_APP_DeviceMSDTasks 0012  
                                           fsr0h 000FEA                                             fsr1h 000FE2  
                        __end_of_display_prepare BC56                                             indf0 000FEF  
                                           fsr2h 000FDA                                             fsr0l 000FE9  
                                           indf1 000FE7                                             indf2 000FDF  
                                           fsr1l 000FE1                                             fsr2l 000FD9  
                                _USBDeviceAttach 254E                                             btemp 005B  
                                           _utoa 0E0E                           __CFG_DSWDTOSC$T1OSCREF 000000  
                     ??_ExternalFlash_SectorRead 0093                  __size_of_motor_schedule_command 00A8  
                   ?i2_ExternalFlash_MediaDetect 002E                        _ExternalFlash_MediaDetect 28BC  
                                           prodh 000FF4                                             prodl 000FF3  
                                           start 908E                  __end_of_APP_DeviceMSDInitialize 288E  
                   ?__motor_get_speed_in_degrees 0087                                  ___fldiv@new_exp 007F  
                          _display_get_character 260E                    motor_steps_from_degrees@steps 008B  
                           ??_USBCheckHIDRequest 002E                                 ?_MSDWriteHandler 002E  
                 ??_MSDProcessCommandMediaAbsent 00A7                       __end_of_USBCheckStdRequest 0456  
                         ??_USBCtrlTrfOutHandler 0030                   ?__flash_write_page_from_buffer 0073  
                                   ___param_bank 000000                        ??_USBStdFeatureReqHandler 0045  
                                   _USBOutHandle 015F                    __size_of__display_padded_itoa 00E2  
                __size_of__flash_write_to_buffer 0052                         ??_USBStdGetStatusHandler 002E  
                                 ?_USBDeviceInit 002E                                __flash_get_status 24E6  
              motor_speed_from_index@speed_index 0093                         _motor_steps_from_degrees 0794  
                                  __CFG_PLLDIV$2 000000                       __end_of_motor_speed_lookup 9461  
                  i2c_display_write_fixed@length 0067                                            l20102 20DC  
                                          l20132 F632                                            l20096 20D0  
                                          l20444 E8E4                                            l20624 1BF0  
                                          l20472 E946                                            l21282 B190  
                                          l20628 1C0E                                            l21296 B1DE  
                                          l21852 EEC0                                            l22670 D56E  
                                          l22680 178E                                            l22672 D686  
                                   spi_tx@length 0062                                            l22682 17E8  
                                          l22684 17FE                                            l22678 1778  
                                          l17184 FD8E                                            l17370 E0D2  
                                          l17292 1A7C                                            l18512 E2F8  
                                          l17562 DE84                                            l17458 CBF0  
                                          l19236 D936                                            l19404 DBEE  
                                          l19324 0C28                                            l17558 DE4A  
                                          l17814 C38A                                            l18526 E33E  
                                          l18518 E306                                            l19342 0C7C  
                                          l19256 D9E0                                            l19416 DC14  
                                          l18618 E3CE                                            l19442 DC8C  
                                          l19426 DC3C                                            l19362 DB16  
                                          l19196 15D8                                            l18636 26BA  
                                          l19428 DC44                                            l19454 DCB2  
                                          l19390 DBA6                                            l19294 180C  
                                          l19552 0AFA                                            l19464 DCDA  
                                          l19376 DB5E                                            l19466 DCE2  
                                          l19822 D6BC                                            l18854 D17C  
                                  ___fltol@sign1 0068                                  __end_of___aldiv 0794  
                                          l19758 258A                                            l19918 23DA  
                             ?__flash_get_status 006C                                            l19872 D7E0  
                                 ??_display_init 0081                                            l19988 F348  
                                __end_of___almod 0D64                                            ?_main 002E  
                                __end_of___fldiv D1A6                                            ?_itoa 0070  
                                          STR_10 A213                                            STR_11 A213  
                                          STR_12 A213                                            STR_13 A213  
                                          STR_14 A213                                            STR_15 A1FE  
                                          STR_16 A20A                                            STR_17 A232  
                                          STR_18 A1F1                                  __end_of___flmul C942  
                               ??__display_clear 0060                __size_of_USBCtrlEPServiceComplete 00FA  
                                __end_of___fltol 01C4                                            ?_utoa 0067  
               MSDCheckForErrorCases@DeviceBytes 006A                                            u20000 E908  
                                          u20030 E9AA                                            u21120 A9EE  
                         __end_of_USBDeviceTasks EC74                                            u21140 AA30  
                                          u20500 A2FC                                            u21141 AA2E  
                                          u20370 0EDA                                            u20610 A400  
                                          u20530 A334                                            u20450 A268  
                                          u20620 A42E                                            u20540 A362  
                                          u20460 A296                                            u20390 0EEE  
                                          u21520 B1C0                                            u20800 A62E  
                                          u20810 A698                                            u20570 A39A  
                                          u20490 A2CE                                            u20580 A3C8  
                                          u20760 A58E                                            u20770 A5F6  
                      ?_USBCtrlEPServiceComplete 002E                                            u17020 DDDA  
                                          u20950 A7A0                                            u16500 FDF8  
                                          u17060 1E68                                            u16270 F3D2  
                                          u16520 FE08                                            u17400 C3BA  
                                          u22737 1FFA                                            u16530 24CA  
                                          u16450 FDD0                                            u17090 21FE  
                                          u19010 DC3C                                            u16195 1654  
                                          u22747 200E                                            u16540 1A9E  
                                          u18140 D0E6                                            u22757 1D60  
                                          u17510 C56C                                            u19030 DC6E  
                                          u22767 1D72                                            u16480 FDE6  
                                          u16800 CB7A                                            u18400 0124  
                                          u22777 1D7C                                            u19130 0B2A  
                                          u16618 DFCA                                            u16810 CB7C  
                                          u17418 C3DC                                            u18170 D13C  
                                          u18330 C884                                            u19050 DCAA  
                                          u16547 1A94                                            u16619 DFDE  
                                          u17419 C3F0                                            u18180 D160  
                                          u16900 1916                                            u16565 DF48  
                                          u18405 011A                                            u17470 C4DE  
                                          u18270 C67E                                            u16910 1924  
                                          u19070 DCDA                                            u17480 C4F0  
                                          u17368 C2B4                                            u18440 019C  
                                          u18520 EAE8                                            u18360 C8DA  
                                          u18280 C7F4                                            u16920 1930  
                                          u17369 C2C8                                            u17801 E310  
                                          u17378 C2E8                                            u19250 0D0A  
                                          u18370 C8F8                                            u19090 DD0C  
                                          u16675 C96C                                            u17379 C2FC  
                                __end_of___lwdiv 1E98                                            u19155 EF2A  
                                          u16828 CB88                                            u18604 F0C4  
                                          u16908 191A                                            u16829 CB9C  
                                          u18605 F0BE                                            u18285 C7EA  
                                          u16758 CA72                                            u19350 D6B8  
                                          u19190 072E                                            u16926 1932  
                                          u16918 1928                                            u16870 18EC  
                                          u16759 CA86                                            u17575 156E  
                                          u17920 E7E8                                            u16880 18FA  
                                          u17665 1BB0                                            u16698 C9A4  
                                          u19370 D6EC                                            u16890 1908  
                   __flash_write_to_buffer@start 0073                                            u16699 C9B8  
                                          u18651 1FE8                                            u18644 F122  
                                          u18628 F0EC                                            u18580 F072  
                                          u19540 D88C                                            u18740 D94A  
                                          u18645 F11C                                            u18629 F102  
                                          u18750 D9C0                                            u16878 18F0  
                                          u18910 0CB2                                            u18568 F040  
                                          u16888 18FE                                            u18680 1626  
                                          u18569 F054                                            u18594 F08A  
                                          u16898 190C                                            u18930 DB40  
                                          u18595 F084                                            u19660 2110  
                                          u18780 D9F4                                            u18790 DA4E  
                                          u18950 DB88                      __size_of_motor_change_speed 000A  
                                          u18880 0C5E                                            u18970 DBD0  
                                          u18990 DC0C                                  __end_of___lwmod 2226  
                                          i2l300 1042                                            i2l220 122A  
                                          i2l214 08A6                                            i2l222 1240  
                                          i2l231 FE96                                            i2l232 FE40  
                                          i2l160 EB80                                            i2l321 12F8  
                                          i2l145 ECBA                                            i2l250 0646  
                                          i2l226 136A                                            i2l322 12F2  
                                          i2l162 EBA6                                  __end_of_dc_arc1 9F2E  
                                          i2l307 2266                                            i2l315 2438  
                                          i2l147 ECE2                                            i2l155 EB46  
                                __end_of_dc_arc2 9EDE                                            i2l340 0A16  
                                          i2l260 F73E                                            i2l332 1AD8  
                                          i2l180 2344                                            i2l236 FEC0  
                                          i2l308 2264                                            i2l316 2436  
                                          i2l172 EC30                                            i2l164 EBBA  
                                          i2l156 EB56                                    __CFG_WDTEN$ON 000000  
                                          i2l253 06BE                                            i2l245 0614  
                                          i2l341 0A1A                                            i2l261 F71C  
                                          i2l149 ED1A                                            i2l165 EBC6  
                                          i2l157 EB5E                                            i2l254 0686  
                                          i2l342 0A94                                            i2l334 1B22  
                                          i2l174 EC50                                            i2l166 EBEE  
                                          i2l247 061E                                            i2l343 0A5A  
                                          i2l263 F7B2                                            i2l167 EBF8  
                                          i2l159 EB74                                            i2l264 F798  
                                          i2l184 FC32                                            i2l192 FB74  
                                          i2l432 05CE                                            i2l280 F276  
                                          i2l272 02EA                                            i2l360 03A2  
                                          i2l176 EC6C                                            i2l249 067E  
                                          i2l345 0A7A                                            i2l425 0570  
                                          i2l281 F172                                            i2l361 03B4  
                                          i2l169 EC0A                                            i2l186 FC5C  
                                          i2l426 0542                                            i2l274 035C  
                                          i2l362 03BA                                            i2l179 2336  
                                          i2l283 F184                                            i2l355 0412  
                                          i2l188 FCDA                                            i2l436 058E  
                                          i2l428 0580                                            i2l372 D1C6  
                                          i2l284 F20E                                            i2l364 03C0  
                                          i2l356 038E                                            i2l437 05A4  
                                          i2l429 055E                                            i2l381 D31E  
                                          i2l373 D1CC                                            i2l293 107E  
                                          i2l365 03DC                                            i2l534 FA08  
                                          i2l438 05AE                                            i2l550 099E  
                                          i2l286 F214                                            i2l294 1014  
                                          i2l366 03F4                                            i2l358 0396  
                                          i2l535 F974                                            i2l439 05C4  
                                          i2l391 D3AA                                            i2l383 D2E8  
                                          i2l375 D234                                            i2l287 F26A  
                                          i2l359 039C                                            i2l384 D304  
                                          i2l537 FA00                                            i2l545 09D0  
                                          i2l393 D3FC                                            i2l377 D27C  
                                          i2l289 F270                                            i2l297 1094  
                                          i2l562 09A4                                            i2l546 0936  
                                          i2l386 D36A                                            i2l298 1024  
                                          i2l387 D376                                            i2l379 D29E  
                                          i2l299 1028                                            i2l820 14BE  
                                          i2l388 D3F0                                            i2l821 14C6  
                                          i2l822 14CE                                            i2l816 14F0  
                                          i2l824 14D8                                            i2l826 14E2  
                                          i2l780 1DB8                                            i2l783 1DEE  
                                          i2l890 1ED6                                            _UADDR 000F38  
                                          i2l891 1E9C                                            i2l893 1EA6  
                                          i2l897 1EB8                                            i2l899 1EC4  
                                __end_of_dc_main A0BE                                            _TMR0H 000FD7  
                                          _TMR0L 000FD6                                            _PORTA 000F80  
                                          _PORTE 000F84                                            _RPOR4 000EC4  
                                          _USTAT 000F64                                  __end_of_dc_zero 9E8E  
                    ?_ExternalFlash_CapacityRead 0060                                  ?_display_update 002E  
             __size_of_USBCtrlEPAllowStatusStage 00C4                              ___lmul@multiplicand 0064  
                               __end_of_MSDTasks D8E8                                       i2memcpy@d1 002E  
                                 __CFG_FCMEN$OFF 000000                               _USBCheckMSDRequest 0922  
                                     i2memcpy@s1 0030                  __end_of_USBCtrlEPAllowDataStage 1272  
                                          _sd000 A1ED                                            _sd001 A0FE  
                                          _sd002 A132                                            _sd003 A1A1  
                 ?_USBIncrement1msInternalTimers 002E                   __size_of_MSDTransferTerminated 0056  
                            ??__flash_get_status 006E                    __end_of_MSDTransferTerminated 1DF0  
                                   _gblCBWLength 016F            __i2c_display_send_init_sequence@F6898 01C0  
                                     i2memset@p1 002E                           ?_MSDCheckForErrorCases 006A  
                          ??__system_timer0_init 0060                            i2USBStallEndpoint@dir 002E  
                         __end_of_ResetSenseData 1A08                          __end_of__backlight_init 28E4  
                       __parse_command_long@data 00AA                        fat_get_format_status@cntr 008D  
                __end_of_motor_postscaler_lookup 9A16                   __end_of_motor_prescaler_lookup 9DE4  
                                          pclath 000FFA                       __end_of__display_itoa_long F6F0  
                                          tablat 000FF5                        __size_of_USBStallEndpoint 010A  
                            ?_USBCheckMSDRequest 002E                                  _MSDCommandState 00D2  
                    ??_ExternalFlash_SectorWrite 0069                                            plusw1 000FE3  
                                          plusw2 000FDB                                      ?_USBMSDInit 002E  
       ExternalFlash_WriteProtectStateGet@config 0060                                            ttemp5 005C  
                                          ttemp6 005F                                            ttemp7 0063  
                                          utoa@c 006F                                            utoa@v 006D  
                                          status 000FD8                                __CFG_DSWDTPS$8192 000000  
                                          wtemp8 005C                         __end_ofi2_ResetSenseData 1A6A  
          motor_go_to_steps_position@overhead_cw 00AA                                 __end_ofi2_memcpy 1B84  
                               __end_ofi2_memset 2694                   ??_MSDComputeDeviceInAndResidue 0062  
                                 _MSDReadHandler DF1E      i2c_display_program_custom_character@address 007F  
                   __size_of_USBStdSetCfgHandler 00DC                    ??i2_ExternalFlash_MediaDetect 0030  
                                __initialization 10A8                        __end_of__flash_get_status 251A  
        __end_ofi2_ExternalFlash_MediaInitialize 2832         __size_ofi2_ExternalFlash_MediaInitialize 001A  
          __end_of_ExternalFlash_MediaInitialize 27C0           __size_of_ExternalFlash_MediaInitialize 0022  
              ??i2_ExternalFlash_MediaInitialize 0030                 ?i2_ExternalFlash_MediaInitialize 002E  
                i2_ExternalFlash_MediaInitialize 2818                    _ExternalFlash_MediaInitialize 279E  
                                    _system_init FF16                                     __end_of_main EEF6  
                                   __end_of_itoa 21E2           __end_of__ic2_display_set_ddram_address 2758  
        __size_of__ic2_display_set_ddram_address 0024                   __ic2_display_set_ddram_address 2734  
                __end_of_i2c_display_write_fixed 1E44                                     __end_of_utoa 0EB8  
                       __parse_command_short@cmd 00BA                                 __end_of_i2c_init 2818  
                     __display_signed_itoa@value 008F                     __motor_run@distance_in_steps 0060  
                           ??_USBCheckMSDRequest 0039                __fill_buffer_get_status@outBuffer 006B  
                                 __CFG_OSC$HSPLL 000000           MSDComputeDeviceInAndResidue@DiExpected 0060  
                        _USBCheckMSDRequest$2534 0039                          _USBCheckMSDRequest$2535 003B  
                      __size_of_USBCtrlEPService 0096                                     __get_fat@idx 0060  
                                   __get_fbr@idx 0060                             api_prepare@outBuffer 0072  
                                         ??_main 00CC                                           ??_itoa 0076  
                         _motor_schedule_command 0F60                               USBStallEndpoint@ep 0065  
                                         ??_utoa 006D                                    __activetblptr 000003  
                                ?_USBDeviceTasks 002E                                     __get_mbr@idx 0060  
     __end_of_ExternalFlash_WriteProtectStateGet 28E8      __size_of_ExternalFlash_WriteProtectStateGet 0004  
           ??_ExternalFlash_WriteProtectStateGet 0062              ?_ExternalFlash_WriteProtectStateGet 0060  
             _ExternalFlash_WriteProtectStateGet 28E4                                      ?_USBSuspend 002E  
                           __size_of_api_prepare 00DE                            _motor_final_stepcount 013B  
                             _motor_items_in_cue 28C6                    __flash_write_to_buffer@buffer 0079  
                        __end_of_USBDeviceAttach 2580                           __flash_write_to_buffer 1EEC  
         __end_of__ic2_display_set_cgram_address 26E8          __size_of__ic2_display_set_cgram_address 002A  
                 __ic2_display_set_cgram_address 26BE                                           _CCPR1L 000FBB  
                                         _EECON2 000FA7                                           _DMABCH 000F66  
                                         _DMABCL 000F67                                  ?_ResetSenseData 002E  
                                     __i2c_start 28D8                           SYSTEM_Initialize@state 0060  
                                     __i2c_write 202E                                           i2l1047 2392  
                            ?_motor_items_in_cue 002E                                           i2l2380 BFDC  
                                         i2l2373 BC8E                                           i2l2461 F500  
                                         i2l2391 C17A                                           i2l2383 BE26  
                                         i2l2375 C224                                           i2l2471 F57E  
                                         i2l3360 2682                                           i2l2392 C0D0  
                                         i2l2384 BE7A                                           i2l2376 BC90  
                                         i2l2464 F526                                           i2l3361 2672  
                                         i2l2385 BF9C                                           i2l2377 BCFA  
                                         i2l3354 1B72                                           i2l2394 C1E8  
                                         i2l2378 BD34                                           i2l2474 F5A4  
                                         i2l2466 F540                                           i2l2458 F550  
                                         i2l3355 1B3A                                           i2l2467 F54A  
                                         i2l2388 C014                                           i2l2468 F5CE  
                                         i2l2476 F5BE                                           i2l2477 F5C8  
           __flash_write_page_from_buffer@buffer 0075                  ??_APP_DeviceCustomHIDInitialize 003A  
                       ?__fill_buffer_get_status 006B                                 __end_of__get_fat 1CEA  
                               __end_of__get_fbr D696                                 __end_of__get_mbr 0526  
                                         _OSCCON 000FD3                      __flash_partial_read@address 0083  
                   ??_motor_go_to_steps_position 00A2                                   __CFG_WDTPS$512 000000  
                                         _RPOR21 000ED5                                           _RPOR23 000ED7  
                                 __CFG_WPCFG$OFF 000000                            __display_itoa@missing 00AB  
                         __end_of_MSDReadHandler E102                                __spi_init@details 0060  
                               __end_of___xxtofl EB30                         i2USBTransferOnePacket@ep 0036  
                               ??__i2c_wait_idle 0060                                ??i2_USBDeviceInit 0036  
                         ?_display_get_character 0060                                 ?_display_prepare 002E  
                __size_ofi2_USBTransferOnePacket 0102                          ?_motor_speed_from_index 0093  
                    __flash_partial_read@command 007F                                   __CFG_WPDIS$OFF 000000  
                               __end_of_fat_init 287E                                _shortPacketStatus 002A  
                                 __CFG_XINST$OFF 000000                              _motor_current_speed 00CC  
                                USBDeviceTasks@i 004C                                      i2memcpy@tmp 0038  
                                   _CCPTMRS0bits 000F52                                _motor_process_cue 16B4  
                    USBStdFeatureReqHandler@pUEP 0046                         USBTransferOnePacket@data 0061  
                     USBCtrlTrfInHandler@lastDTS 002F                             __size_of_encoder_run 0110  
                   __end_of__flash_set_page_size 1876                                  ??_USBDeviceInit 0068  
                                         ___lmul 1CEA                                           _gblCBW 0100  
                                      ??___aldiv 0068                                        ??___almod 0068  
                             __size_of__i2c_send 000A                                        ??___fldiv 0076  
                                 __CFG_STVREN$ON 000000                                        ??___flmul 0076  
                             __size_of__i2c_stop 0008                                        ??___fltol 0064  
    i2SYSTEM_Initialize@pll_startup_counter_3110 0030        SYSTEM_Initialize@pll_startup_counter_3110 0063  
                                      ??___lwdiv 0064                               ?_motor_process_cue 002E  
                                     _SoftDetach 016E                                        ??___lwmod 0064  
                                         _config 017B                                           _buffer 0800  
                              _USBEnableEndpoint 2326                  __size_of_USBStdGetStatusHandler 00A0  
                           ??_motor_items_in_cue 0060                                           _memcpy 1A6A  
                                         _memset 2580                                           clear_0 10F0  
                                         clear_1 1102                                           clear_2 110E  
                                         clear_3 111A                                           clear_4 1126  
                                         clear_5 1132                        _ExternalFlash_SectorWrite 28E8  
                              api_parse@inBuffer 00BB                                  __CFG_CLKOEC$OFF 000000  
                               __end_of_inq_resp A184                                 __motor_run@speed 0064  
                           __end_of_encoder_init 2734                                           _spi_tx 1C38  
                             ?_USBEnableEndpoint 0036                                           _tx_buf 01C9  
                          i2c_display_init@F6901 01B7                                           _strlen 22AA  
                        _motor_current_stepcount 0016                       __parse_command_long@length 00B0  
       i2c_display_program_custom_character@cntr 0080                                 __end_of_tmr0_isr 239C  
                  __size_of_USBTransferOnePacket 0106                              __size_of_USBMSDInit 010A  
                    i2c_display_write_fixed@data 0065                           __size_of__flash_wakeup 0058  
                                         itoa@cp 0076                              ??_motor_process_cue 006B  
                  __size_of__display_signed_itoa 0044                       __end_of_motor_steps_lookup 982F  
           __size_of__motor_get_speed_in_degrees 013A                   __parse_command_long@out_buffer 00AC  
                  __size_of__parse_command_short 0164              __size_of_motor_go_to_steps_position 02CA  
                                   __mediumconst 9092                                           tblptrh 000FF7  
                                         tblptrl 000FF6                                           tblptru 000FF8  
                               __end_of_spi_init 22AA                 __size_of_APP_DeviceMSDInitialize 0010  
                                _motor_direction 0169                  ??__flash_compare_page_to_buffer 0076  
                            ??_USBEnableEndpoint 0037                                 _i2c_display_init 1FDE  
                                  spi_tx_rx@data 0064                                    spi_tx_tx@data 0064  
                                    _CtrlTrfData 000D38                                __system_pin_setup 1876  
         motor_go_to_steps_position@overhead_ccw 00AE                                 ?__backlight_init 002E  
              i2ExternalFlash_MediaDetect@config 002E                  ExternalFlash_MediaDetect@config 0060  
                           _controlTransferState 0029                       ??_APP_DeviceCustomHIDTasks 00C6  
                           __CFG_LS48MHZ$SYS48X8 000000                                     ___xxtofl@arg 006A  
                                   ___xxtofl@exp 0069                                _SYSTEM_Initialize 1BDE  
                                   ___xxtofl@val 0060                               ?__system_pin_setup 002E  
                                     __accesstop 0060                          __end_of__initialization 1138  
                 __end_of_motor_speed_from_index 2848                MSDCheckForErrorCases@MSDErrorCase 0070  
                                ?_MSDReadHandler 002E                             __end_of_display_init 24B2  
                             ?_SYSTEM_Initialize 002E                           __size_of__display_itoa 0224  
                                  ___rparam_used 000001    motor_isr@steps_until_standstill_if_accelerate 0040  
                       __size_of_USBStallHandler 0044                                       ___fltol@f1 0060  
                ExternalFlash_SectorWrite@config 0060                  ExternalFlash_SectorWrite@buffer 0066  
                      __end_of_motor_process_cue 1728                      __end_of__parse_command_long 2326  
                             __size_of__get_data 002A                              __size_of_USBSuspend 0030  
                             __size_of__get_root 0198                              ??__system_pin_setup 0060  
                            _motor_maximum_speed 015B                                   __pcstackCOMRAM 002E  
                     __size_of__flash_get_status 0034                        __end_of_USBEnableEndpoint 2362  
            __size_of_ExternalFlash_CapacityRead 0014                                    __end_of_sd000 A1F1  
                                  __end_of_sd001 A132                                    __end_of_sd002 A160  
                                  __end_of_sd003 A1BB                                        ?_MSDTasks 002E  
                                   __pidataBANK1 2444                                     __pidataBANK2 1F3E  
                            ??_SYSTEM_Initialize 0060             ExternalFlash_SectorWrite@sector_addr 0062  
                __end_of_bit_pattern_verticalbar A1E5                 __size_of_USBCtrlEPAllowDataStage 0098  
                                _active_protocol 0198                              i2USBStallEndpoint@p 0034  
                  __size_of_USBConfigureEndpoint 0094               __size_of_ExternalFlash_MediaDetect 000A  
                    __end_of_USBCtrlTrfInHandler 0A9E                              display_prepare@cntr 00C9  
                            display_prepare@temp 00BE                                     _gblSenseData 011F  
                    motor_change_speed@new_speed 0060                                  _MSDErrorHandler F3B8  
                 ?_ExternalFlash_MediaInitialize 0060                           i2_USBTransferOnePacket FC1C  
                             __size_of_api_parse 012A                               _flash_sector_write 1F8E  
                                     _dc_divide1 9F7E                                       _dc_divide2 9F2E  
                             __size_of__spi_init 0038                                        ?i2_memcpy 002E  
                                      ?i2_memset 002E                          flash_sector_write@match 0083  
          __end_of_MSDProcessCommandMediaPresent C5F0           __size_of_MSDProcessCommandMediaPresent 03CA  
                  _MSDProcessCommandMediaPresent C226                        __end_of__system_pin_setup 18E0  
                                  __get_data@idx 0060                         ??_USBCtrlTrfSetupHandler 004B  
                        _USBTicksSinceSuspendEnd 0173            motor_nonzero_steps_from_degrees@steps 0093  
                               ?_USBDeviceAttach 002E                        __end_of_SYSTEM_Initialize 1C38  
                              __end_of__i2c_send 28B2                           _USBStdGetStatusHandler 1008  
                            ?_flash_sector_write 007F                              USBStallEndpoint@dir 0060  
                              __end_of__i2c_stop 28D8                                      ?__i2c_start 002E  
                ??_encoder_next_divide_step_size 0060                                      ?__i2c_write 0065  
                                     __pbssBANK0 00CC                                       __pbssBANK1 0100  
                                     __pbssBANK2 0200                                       __pbssBANK3 0300  
               __size_of_i2c_display_write_fixed 0054                                 _USBStallEndpoint F7FC  
                                     _gblNumBLKS 0143                                        ?_i2c_init 002E  
           __end_of_motor_go_to_degrees_position 0E0E            __size_of_motor_go_to_degrees_position 00AA  
                   _motor_go_to_degrees_position 0D64                                 _mediaInformation 0191  
                 __size_of_fat_get_format_status 00AE                    __end_of_fat_get_format_status 0CB6  
                                  __flash_wakeup 1D42                         __fill_buffer_get_display 0A9E  
                    __size_of_USBWakeFromSuspend 0038                       ??_motor_steps_from_degrees 008B  
                                    _pBDTEntryIn 0010                      __size_of_i2c_display_cursor 0022  
               __end_of_USBCtrlEPServiceComplete FF16            __end_of_APP_DeviceCustomHIDInitialize 254E  
         __size_of_APP_DeviceCustomHIDInitialize 0034                    _APP_DeviceCustomHIDInitialize 251A  
                    MSDTransferTerminated@handle 0039               ExternalFlash_SectorSizeRead@config 0060  
                           USBCtrlTrfRxService@i 002E                                          ?___lmul 0060  
                                     ??_MSDTasks 00AC                           __display_itoa@decimals 0097  
                   __parse_jump_steps@out_buffer 00A0                     __end_of_encoder_statemachine B00E  
                                     _fat_format DB0C                             ??_flash_sector_write 0083  
                 __flash_write_to_buffer@command 007A                     __size_of__flash_partial_read 007A  
                                      MSDTasks@i 00B1                                          ?_memcpy 0060  
                                        ?_memset 0060                                       __motor_run DD22  
                                 ___lmul@product 0068                                       _device_dsc A1BB  
                               ??_display_update 0070                                    __get_root@idx 0060  
                               _USBCtrlEPService 1272                                       _ep_data_in 0158  
                                        ?_spi_tx 0060                               __display_clear@col 0063  
                             __display_clear@row 0062                                          ?_strlen 0060  
                                      ?__get_fat 0060                                        ?__get_fbr 0060  
                                      ?__get_mbr 0060                      __end_of_USBCtrlTrfRxService F7FC  
      __ic2_display_set_ddram_address@data_array 006B                                    __display_itoa D8E8  
                             _USBCheckStdRequest 037E                               __size_of_motor_isr 05D0  
                              _configDescriptor1 A0BE                                          i2l10620 0558  
                                        i2l11266 2672                                          i2l10842 1EC4  
                                        i2l10838 1EA6                                          i2l10890 061E  
                                        i2l20578 EC02                                          i2l13660 1B3A  
                                        i2l14466 ECB2                                          i2l14494 ED12  
                                        i2l22692 1508                                          i2l22694 153C  
                                        i2l15756 C1E8                                          i2l15676 BCFA  
                        ??_MSDCheckForErrorCases 006E                                          i2l17642 02E2  
                                      ?___xxtofl 0060                      __end_ofi2_SYSTEM_Initialize 1EEC  
                                     ??i2_memcpy 0034                                       ??i2_memset 0034  
                                     _flash_init 288E               __fill_buffer_get_display@outBuffer 0064  
                    __end_of_USBCtrlTrfTxService 06C6                                __end_of__get_data 26BE  
                            _USBStdSetCfgHandler 02A2                                __end_of__get_root E45E  
                             __size_of_spi_tx_rx 0098                               __size_of_spi_tx_tx 0090  
                                      ?_fat_init 002E                                          _RPINR21 000EFC  
                                        _RPINR22 000EFD                                          _SSP1ADD 000FC8  
                  i2c_display_init@init_sequence 006B                                __end_of_dc_manual 9E3E  
                   __end_of__display_padded_itoa 00E6                                          _SSP1BUF 000FC9  
                                        _RXADDRH 000F68                                          _RXADDRL 000F69  
                     __end_ofi2_USBStallEndpoint FC1C                                          _TXADDRH 000F6A  
                                        _TXADDRL 000F6B                              ?_USBCheckStdRequest 002E  
                   __size_of_USBStdGetDscHandler 012C                               _motor_speed_lookup 9093  
                           __flash_set_page_size 1808                                __end_of_dc_setup1 A06E  
                              __end_of_dc_setup2 A01E                                          _UIEbits 000F36  
        motor_nonzero_steps_from_degrees@degrees 008F               __end_of_motor_go_to_steps_position CEEC  
                     _motor_go_to_steps_position CC22         __end_of_motor_nonzero_steps_from_degrees 20CA  
      __size_of_motor_nonzero_steps_from_degrees 004C               ??_motor_nonzero_steps_from_degrees 0093  
              ?_motor_nonzero_steps_from_degrees 008F                 _motor_nonzero_steps_from_degrees 207E  
                     __end_of_APP_DeviceMSDTasks 286E                                          _UIRbits 000F62  
    MSDCheckForErrorCases@HostMoreDataThanDevice 006E            __end_of__flash_compare_page_to_buffer 15BE  
         __size_of__flash_compare_page_to_buffer 007C                    __flash_compare_page_to_buffer 1542  
                                     ??_i2c_init 0060                                 __CFG_CFGPLLEN$ON 000000  
                       __i2c_write@slave_address 0068                                     ??_USBMSDInit 0039  
                                 ?__flash_wakeup 002E           encoder_next_arc_step_size@old_stepsize 0060  
                  ?_motor_go_to_degrees_position 00BA                                __end_of_api_parse F3B8  
                              ?i2_ResetSenseData 002E                                _MSDProcessCommand F030  
                     __display_padded_itoa@value 0078                       __size_of_motor_process_cue 0074  
                                  __i2c_send@dat 0060                        __flash_get_status@command 006E  
                                      ?_tmr0_isr 002E                                          __Hparam 0000  
                ??_USBIncrement1msInternalTimers 002E                             ?_USBStdSetCfgHandler 002E  
                              __end_of__spi_init 23D4                      __size_of_USBCheckHIDRequest 00D0  
                                        __Lparam 0000                               ??i2_ResetSenseData 002E  
                             __display_itoa@text 0098                                __end_of_hid_rpt01 A1A1  
                             ?_MSDProcessCommand 002E                          __end_of_MSDErrorHandler F4D2  
                     _MSDTransferTerminated$2623 003B                       __size_of_USBEnableEndpoint 003C  
                                   ?_system_init 002E                  motor_steps_from_degrees@degrees 0087  
                          __size_of_encoder_init 0024                             ??_USBCheckStdRequest 004B  
                                        ___aldiv 06C6                                          ___almod 0CB6  
                                      ?_spi_init 002E                    __size_of_USBCtrlTrfOutHandler 005E  
                             __display_itoa_long F5E2            i2ExternalFlash_MediaInitialize@config 002E  
            ExternalFlash_MediaInitialize@config 0060                                          ___fldiv CEEC  
                               _ToSendDataBuffer 0300                                  __size_of___lmul 0058  
                                        ___flmul C5F0                                          ___fltol 00E6  
                               ??_USBDeviceTasks 004C                                          ___lwdiv 1E44  
                        ?_motor_schedule_command 0097                                ??_USBStallHandler 002E  
                                        ___lwmod 21E2                                          _dc_arc1 9EDE  
                                        _dc_arc2 9E8E                      motor_schedule_command@speed 009B  
 i2c_display_program_custom_character@data_array 0074                                          _dc_main A06E  
         __ic2_display_set_cgram_address@address 006D                       __end_of_motor_change_speed 28BC  
                                        _dc_zero 9E3E                              __size_of__i2c_start 0008  
                                        __pcinit 10A8                                  __size_of_memcpy 0060  
                            __size_of__i2c_write 0050                                  __size_of_memset 0030  
                       __size_of_MSDWriteHandler 02E0                        __end_of_configDescriptor1 A0FE  
                            ??_MSDProcessCommand 00A7                                          __ramtop 0F00  
                   ExternalFlash_SectorRead@page 0093                                          __ptext0 EDB8  
                                        __ptext1 FF16                                          __ptext2 27E0  
                                        __ptext3 27FC                                          __ptext4 288E  
                                        __ptext5 226A                                          __ptext6 239C  
                                        __ptext7 1808                                          __ptext8 286E  
                                        __ptext9 0C08                                   ?__display_itoa 0095  
                                        _inPipes 000A                                   fat_format@cntr 0084  
              __size_of_ExternalFlash_SectorRead 0034                                  __size_of_spi_tx 005A  
                    _USBDeferOUTDataStagePackets 0174                                        _T0CONbits 000FD5  
                                     ??__get_fat 0062                                       ??__get_fbr 0062  
                            ?__display_itoa_long 00AD                                       ??__get_mbr 0062  
                      ?_ExternalFlash_SectorRead 008B      motor_go_to_degrees_position@target_position 00BA  
                           __motor_run@direction 006A                                  __size_of_strlen 003E  
                    __end_of__system_timer0_init 2668                                     ??_USBSuspend 0045  
                                      _T2CONbits 000FCA                               __end_of_USBMSDInit FA10  
                               ??_ResetSenseData 0060                          ?__flash_write_to_buffer 0073  
                                     ??___xxtofl 0064                          _APP_DeviceMSDInitialize 287E  
                                        _msd_cbw 000D40                                 ___aldiv@dividend 0060  
                                        _msd_csw 000D80                      __display_itoa_long@decimals 00B1  
                                i2_USBDeviceInit EC74                                 i2USBDeviceInit@i 0036  
                     __size_of__system_pin_setup 006A                  ?__ic2_display_set_ddram_address 002E  
               ??__ic2_display_set_ddram_address 006A                                       ??_fat_init 008F  
             __size_of_ExternalFlash_SectorWrite 0004                            ?__flash_set_page_size 002E  
                             __end_of_USB_CD_Ptr 9DEE                                       _msd_buffer 000600  
                     __size_of_SYSTEM_Initialize 005A                  __size_of_USBCtrlTrfSetupHandler 0090  
                                        main@tmp 01D1                            __size_of_display_init 0036  
                        __size_of__flash_is_busy 0024                             end_of_initialization 1138  
                        ??_display_get_character 0061                            _MSDTransferTerminated 1D9A  
          __flash_compare_page_to_buffer@command 007B                   ?_MSDProcessCommandMediaPresent 002E  
                             __end_of_USB_SD_Ptr 9DEC                       __end_of_bit_pattern_degree A1DD  
                                        memcpy@d 0067                                          memcpy@n 0064  
                                        memcpy@s 0069          __motor_get_speed_in_degrees@speed_index 0087  
                            _pBDTEntryEP0OutNext 001C                        __end_of_MSDProcessCommand F162  
                                        itoa@buf 0070                                          memset@c 0062  
                                        itoa@val 0072                                          memset@n 0064  
                                        memset@p 0066                                     _encoder_init 2710  
                                _USB1msTickCount 014B                             ??__display_itoa_long 00B4  
                       __flash_partial_read@data 0079                                        i2u1310_40 ECD6  
                       ?_USBStdFeatureReqHandler 002E                         __flash_partial_read@page 0073  
                                      i2u1313_40 ED76                                        i2u2027_40 EC70  
                                      i2u1503_40 BFF0                                        i2u1504_40 C010  
                                      i2u1620_48 F998                                        i2u1197_40 1B5C  
                                      i2u1620_49 F9AC                                        i2u1197_47 1B52  
                                      i2u1622_48 F9BE                                        i2u1622_49 F9D4  
                                      i2u1712_40 0316                                        i2u1624_44 F9F2  
                                      i2u1624_45 F9EC                                        i2u1730_40 D390  
                              __end_of_motor_isr C226                                        i2u1493_41 BC7E  
                                      i2u1496_41 BD4E       encoder_statemachine@target_divide_position 00C6  
                                      i2u1498_40 BE16                            ??_USBStdSetCfgHandler 0045  
                __parse_command_long@out_idx_ptr 00AE                                       ??_tmr0_isr 002E  
                ?__ic2_display_set_cgram_address 002E                 ??__ic2_display_set_cgram_address 006A  
                             __end_of_USBSuspend 25E0                              _motor_period_lookup 9A16  
        __fill_buffer_get_mode_details@outBuffer 0060                          _USBCtrlEPAllowDataStage 11DA  
                              __end_of_spi_tx_rx 11DA                   __end_of_motor_schedule_command 1008  
                              __end_of_spi_tx_tx 142C                         __end_of_i2c_display_init 202E  
                               ___aldiv@quotient 006A                                          postdec1 000FE5  
                                        postdec2 000FDD             __end_of_ExternalFlash_SectorSizeRead 28A8  
          __size_of_ExternalFlash_SectorSizeRead 000C                     _ExternalFlash_SectorSizeRead 289C  
                                     ??_spi_init 0063                                          postinc0 000FEE  
                                        postinc2 000FDE                                      ?_fat_format 002E  
               __size_of__fill_buffer_get_status 01C4                                          utoa@buf 0067  
                                     _motor_init 27E0          MSDProcessCommandMediaPresent@sectorSize 009E  
                                     _motor_mode 016A                         _USBCtrlEPServiceComplete FE1C  
                                        utoa@val 0069                                        _MSD_State 0025  
                                     _motor_stop 2114                                      ?__motor_run 0060  
                                        strlen@s 0060                      __size_of_USBCheckMSDRequest 00BE  
                                  ??_api_prepare 0074                       _USBStatusStageEnabledFlag1 0177  
                     _USBStatusStageEnabledFlag2 0176                                   _bit_pattern_ae A1CD  
                             USBEnableEndpoint@p 0037                                        _PORTAbits 000F80  
                                      _PORTDbits 000F83                                        _PORTEbits 000F84  
                 __end_of__flash_write_to_buffer 1F3E                                 __CFG_DSBOREN$OFF 000000  
                                   _display_init 247C                             spi_tx_rx@data_length 0066  
                                    ?_flash_init 002E                                 __CFG_CPUDIV$OSC1 000000  
                                  ___xxtofl@sign 0068                                        _TRISAbits 000F92  
                                      _TRISBbits 000F93                                        _TRISCbits 000F94  
                             api_parse@outBuffer 00BE                                        _TRISDbits 000F95  
                                      _TRISEbits 000F96                               _ReceivedDataBuffer 0238  
                             _BothEP0OutUOWNsSet 0178                                      ___fldiv@grs 0081  
                                    ___fldiv@rem 007A                                    __pbssBIGRAMll 0800  
                               ??_MSDReadHandler 0095                        __flash_partial_read@start 0075  
                      USBConfigureEndpoint@EPNum 0033                          _i2c_display_write_fixed 1DF0  
                              __CFG_SOSCSEL$HIGH 000000                       ?_USBCtrlEPAllowStatusStage 002E  
                           _encoder_statemachine A238              USER_USB_CALLBACK_EVENT_HANDLER@size 0041  
                        __size_of__display_clear 004A                                        _USTATcopy 002C  
                                ??__flash_wakeup 0068    MSDProcessCommandMediaPresent@NumBytesInPacket 009D  
                   ?_encoder_next_setup_stepsize 0060                                      ___flmul@grs 007C  
                   __end_of_USBTransferOnePacket FB16                               _motor_steps_lookup 9461  
                                    _CCP1CONbits 000FBA              __end_ofi2_ExternalFlash_MediaDetect 28F0  
                    i2_ExternalFlash_MediaDetect 28EC                __parse_jump_steps@number_of_steps 00A6  
                   __end_of__display_signed_itoa 219E                 __end_of_motor_steps_from_degrees 085E  
            __end_of__motor_get_speed_in_degrees F030                      __motor_get_speed_in_degrees EEF6  
                         i2c_display_cursor@line 006E                                 __CFG_IOL1WAY$OFF 000000  
                                  ??_encoder_run 002E                     __end_of__parse_command_short E754  
                 ?__flash_compare_page_to_buffer 0073                    __fill_buffer_get_display@cntr 006C  
                  __fill_buffer_get_display@line 006D                                __CFG_WPEND$PAGE_0 000000  
             __flash_compare_page_to_buffer@page 0073                              __CFG_MSSP7B_EN$MSK7 000000  
                               ?_MSDErrorHandler 002E                   ??_motor_go_to_degrees_position 00BE  
                         _USBCtrlTrfSetupHandler 142C                             __display_padded_itoa 0004  
                         __end_of_bit_pattern_ae A1D5                 ExternalFlash_CapacityRead@config 0060  
                        ?i2_USBTransferOnePacket 002E                         __size_of_display_prepare 0C48  
                  ??__motor_get_speed_in_degrees 0089                            __end_of_USBDeviceInit E9EC  
          __end_of_USBIncrement1msInternalTimers 27E0           __size_of_USBIncrement1msInternalTimers 0020  
                  _USBIncrement1msInternalTimers 27C0                                   __end_of___lmul 1D42  
                                ??__display_itoa 009A                    ?_ExternalFlash_SectorSizeRead 0060  
                    __size_of_motor_items_in_cue 000A                                __size_of_MSDTasks 0252  
                       __end_of_USBStallEndpoint F906                                        i2memcpy@d 0034  
                                      i2memcpy@n 0032                          __end_ofi2_USBDeviceInit EDB8  
                                      i2memcpy@s 0036                        ??_APP_DeviceMSDInitialize 003C  
                                      i2memset@c 0030                                        i2memset@n 0032  
                                      i2memset@p 0034                                   __end_of_memcpy 1ACA  
                                _MSDRetryAttempt 0170                             i2USBStallEndpoint@ep 0033  
                                 __end_of_memset 25B0                                 __CFG_DSWDTEN$OFF 000000  
                              _USBBusIsSuspended 0179                                   __end_of_spi_tx 1C92  
                                 __end_of_strlen 22E8                     __display_padded_itoa@padding 008E  
                      __flash_set_page_size@size 0077                              start_initialization 10A8  
                        ?_USBStdGetStatusHandler 002E                         i2SYSTEM_Initialize@state 0032  
                  USBCtrlTrfRxService@byteToRead 002F                           ??__flash_set_page_size 0073  
                           display_prepare@space 00C8                                ??_MSDWriteHandler 0071  
                            __end_of_api_prepare 02A2                        __display_itoa_long@length 00B8  
                     ??__fill_buffer_get_display 0067                                __size_ofi2_memcpy 005C  
                     i2c_display_cursor@position 006D                           ?_MSDTransferTerminated 0039  
                              __size_ofi2_memset 002C                                  _USBMSDOutHandle 00D0  
                   __end_of_USBConfigureEndpoint 139C                            ?_encoder_statemachine 002E  
                                   ??__i2c_start 0060                                     ??__i2c_write 0068  
                __end_of_USBStdFeatureReqHandler D422                              __flash_partial_read 163A  
                              USBStallEndpoint@p 0066                              __size_of_fat_format 0216  
                                  _MSDHostNoData 0024                __end_of_USBCtrlEPAllowStatusStage 0922  
                   ??_encoder_next_arc_step_size 0062                         __end_of_USBCtrlEPService 1308  
                     __size_of_MSDProcessCommand 0132                              __size_of__motor_run 01FC  
                                      __i2c_send 28A8                                        __i2c_stop 28D0  
                  ??_encoder_next_setup_stepsize 0062          _ExternalFlash_MediaInitialize$intlevel0 27A4  
                              __size_of_i2c_init 001C                        ??_USBCtrlEPAllowDataStage 002F  
                          _motor_cue_write_index 0022                  ??__fill_buffer_get_mode_details 0062  
                                 USBDeviceInit@i 0068                         __size_of__backlight_init 0004  
                     __flash_partial_read@length 0077                           _pBDTEntryEP0OutCurrent 001E  
                                    _DMACON1bits 000F88                                      _DMACON2bits 000F86  
                            __size_of_flash_init 000E                          USBTransferOnePacket@dir 0060  
                        USBTransferOnePacket@len 0063                                    _MSDTasks$2588 00AD  
                    MSDErrorHandler@OldMSD_State 0069                                    _MSDTasks$2589 00AF  
                 __end_ofi2_USBTransferOnePacket FD1E                                         ??___lmul 0068  
                          spi_init@configuration 0063                            ?__display_padded_itoa 0078  
                            _USBStdGetDscHandler F162                             ?__flash_partial_read 0073  
                                    ?_motor_init 002E                              __end_of_encoder_run F5E2  
                              __CFG_ADCSEL$BIT10 000000                __size_of_APP_DeviceCustomHIDTasks 00A8  
                                    __pdataBANK1 019A                                      __pdataBANK2 0278  
                       motor_isr@steps_remaining 0042                                      ?_motor_stop 002E  
                      ?_APP_DeviceCustomHIDTasks 002E                             __size_of_system_init 00EE  
                                       ??_memcpy 0066                          __size_of__i2c_wait_idle 0064  
                                       ??_memset 0066                     __size_of__parse_command_long 003E  
                             __end_of__i2c_start 28E0                                         ??_spi_tx 0064  
                             __end_of__i2c_write 207E                                         ??_strlen 0062  
                         _USBActiveConfiguration 002D                   __end_of_USBStdGetStatusHandler 10A8  
                                      ___fldiv@a 0072                                        ___fldiv@b 006E  
            __size_of_encoder_next_arc_step_size 0070                      api_parse@receivedDataLength 00BD  
                               api_parse@out_idx 00C4                                        ___flmul@a 0072  
                                      ___flmul@b 006E                                      __pbssCOMRAM 0001  
                              __size_of__get_fat 0058                                __size_of__get_fbr 0274  
                      ??_i2c_display_write_fixed 0068                                    __pcstackBANK0 0060  
                                  __pcstackBANK1 01D1                     __size_of_USBCtrlTrfInHandler 00BE  
                              __size_of__get_mbr 00D0                     ??_ExternalFlash_CapacityRead 0064  
                 __size_of_MSDCheckForErrorCases 00FE                    __end_of_MSDCheckForErrorCases FE1C  
                              __size_of___xxtofl 0144                                        _gblBLKLen 013F  
             __end_of_flash_command_pagesize_512 A1ED                       _flash_command_pagesize_512 A1E9  
             __end_of_flash_command_pagesize_528 A1E9                       _flash_command_pagesize_528 A1E5  
                                 __flash_is_busy 2758                             ?_USBStdGetDscHandler 002E  
   __end_of_i2c_display_program_custom_character 163A    __size_of_i2c_display_program_custom_character 007C  
         ??_i2c_display_program_custom_character 0070            ?_i2c_display_program_custom_character 006E  
           _i2c_display_program_custom_character 15BE                                        __get_data 2694  
                              _flash_sector_read 26E8                                __size_of_fat_init 0010  
                    ?_motor_go_to_steps_position 009E                                        __get_root E2C6  
                         flash_sector_write@data 0081                           flash_sector_write@page 007F  
                                      _dc_manual 9DEE                       __end_of_USBWakeFromSuspend 2444  
                             ?_flash_sector_read 0087                       __end_of_i2c_display_cursor 279E  
                                     ?__i2c_send 002E                                        _dc_setup1 A01E  
                                      _dc_setup2 9FCE                                  _USBStallHandler 2226  
                       __display_padded_itoa@len 008C                                     _pBDTEntryOut 0131  
                                     ?__i2c_stop 002E                         __display_padded_itoa@pos 008D  
                       __display_padded_itoa@tmp 0082                         __size_of_USBDeviceAttach 0032  
               __end_of_ExternalFlash_SectorRead 24E6                               i2_USBStallEndpoint FB16  
                               ___lwdiv@dividend 0060                             _motor_cue_read_index 0023  
                          _fat_get_format_status 0C08        motor_go_to_steps_position@target_position 009E  
                 MSDProcessCommandMediaPresent@i 00A6                              ??_flash_sector_read 008B  
                                      _api_parse F28E                                        __pintcode 9008  
                        __fill_buffer_get_status E102                               _APP_DeviceMSDTasks 285C  
                                  __pmediumconst 9092                                         ?___aldiv 0060  
                              __size_of_tmr0_isr 003A                                         ?___almod 0060  
                          ??__flash_partial_read 007B                           __parse_jump_steps@data 009E  
                                       ?___fldiv 006E                                        __ptext100 E102  
                                      __ptext101 1A6A                                        __ptext110 0F60  
                                      __ptext102 E45E                                        __ptext111 28C6  
                                      __ptext103 0A9E                                        __ptext120 240C  
                                      __ptext112 DD22                                        __ptext104 260E  
                                      __ptext121 25B0                                        __ptext113 FA10  
                                      __ptext105 F28E                                        __ptext130 02A2  
                                      __ptext122 2226                                        __ptext106 E5F0  
                                      __ptext131 2668                                        __ptext123 27C0  
                                      __ptext115 2362                                        __ptext107 CC22  
                                      __ptext140 FB16                                        __ptext132 1008  
                                      __ptext124 1272                                        __ptext116 F4D2  
                                      __ptext108 22E8                                        __ptext141 287E  
                                      __ptext133 F162                                        __ptext125 1B28  
                                      __ptext117 BC56                                        __ptext109 E754  
                                      __ptext150 1ACA                                        __ptext142 F906  
                                      __ptext134 D1A6                                        __ptext126 142C  
                                      __ptext118 EB30                                        __ptext151 F6F0  
                                      __ptext143 1A08                                        __ptext135 14BC  
                                      __ptext127 FE1C                                        __ptext119 EC74  
                                      __ptext152 085E                                        __ptext144 2818  
                                      __ptext136 1E98                                        __ptext128 11DA  
                                      __ptext153 09E0                                        __ptext145 28EC  
                                      __ptext137 0922                                        __ptext129 037E  
                                      __ptext154 05F6                                        __ptext146 251A  
                                      __ptext138 0526                                        __ptext155 0000  
                                      __ptext147 FC1C                                        __ptext139 1D9A  
                                      __ptext148 2326                                        __ptext149 1308  
                                       ?___flmul 006E                                         ?___fltol 0060  
                    __size_of_flash_sector_write 0050                                         ?___lwdiv 0060  
                                      __spi_init 239C                                         ?___lwmod 0060  
                                      _hid_rpt01 A184                              ?i2_USBStallEndpoint 002E  
                  __parse_jump_steps@out_idx_ptr 00A2                                        _idle_rate 0199  
                             display_update@line 0070                                __size_of_spi_init 0040  
           __size_of_encoder_next_setup_stepsize 0070                                 ___almod@dividend 0060  
                               ?i2_USBDeviceInit 002E                                      _api_prepare 01C4  
                                __i2c_write@data 0065                                  __i2c_write@cntr 0069  
                            ?_APP_DeviceMSDTasks 002E                        __size_ofi2_ResetSenseData 0062  
             __flash_write_to_buffer@data_length 0077                             _USBTransferOnePacket FA10  
              __size_of_motor_steps_from_degrees 00CA        __ic2_display_set_cgram_address@data_array 006A  
                      ?_motor_steps_from_degrees 0087                       ?_ExternalFlash_MediaDetect 0060  
                 ??_ExternalFlash_SectorSizeRead 0062                             __display_signed_itoa 215A  
                              ??_display_prepare 00BC                             __CFG_RTCOSC$T1OSCREF 000000  
                           __parse_command_short E5F0              __fill_buffer_get_display@secondHalf 0066  
                         __end_of__flash_is_busy 277C                                __display_itoa@len 00AA  
                              __display_itoa@pos 00AC                                __display_itoa@tmp 00A0  
                   __end_of_USBCtrlTrfOutHandler 1B28                           ??_encoder_statemachine 00BE  
                       ??_motor_speed_from_index 0095                        __end_of_flash_sector_read 2710  
                          ??_USBStdGetDscHandler 002E                                      _ep_data_out 0155  
                               ___lwdiv@quotient 0065                               _motor_change_speed 28B2  
                                  _MSDWriteState 0171                     __size_of_USBCtrlTrfRxService 010C  
                  USBConfigureEndpoint@direction 002E                                   __display_clear 20CA  
                                     ?__get_data 0060                             ??i2_USBStallEndpoint 002F  
                                _config_internal 0152                                       ?__get_root 0060  
                            __size_of_motor_init 001C                     __size_ofi2_SYSTEM_Initialize 0054  
                                _config_external 014F                              __size_of_motor_stop 0046  
                                ___aldiv@divisor 0064                     __size_of_USBCtrlTrfTxService 00D0  
                 __size_of_display_get_character 002E                                  ___aldiv@counter 0068  
                           ??_APP_DeviceMSDTasks 00B2                    __end_of_display_get_character 263C  
                                       _LATAbits 000F89                                         _LATBbits 000F8A  
                                       _LATCbits 000F8B                                         _LATDbits 000F8C  
                     __end_of_USBCheckHIDRequest 05F6             __flash_compare_page_to_buffer@buffer 0075  
                            ?_motor_change_speed 0060                       ??_USBCtrlEPServiceComplete 002F  
                                       _IPR2bits 000FA2                                         _PIE1bits 000F9D  
                                       _PIE2bits 000FA0                  motor_isr@steps_until_standstill 003E  
                                    _encoder_run F4D2             __flash_compare_page_to_buffer@status 0079  
                                       _PIR1bits 000F9E                                         _PIR2bits 000FA1  
                        encoder_statemachine@tmp 00C8                           ??__display_padded_itoa 007D  
                             __end_of_dc_divide1 9FCE                                         i2u851_40 0980  
                             __end_of_dc_divide2 9F7E                                         i2u881_40 0670  
                                       i2u881_47 0666                                         i2u954_40 F1DA  
                                       i2u954_47 F1D0                                         i2u883_40 06B0  
                                       i2u955_40 F20A                                         i2u883_47 06A6  
                                       i2u955_47 F200                                         i2u957_40 F260  
                                       i2u957_47 F256                                         _RCONbits 000FD0  
                                     ?_api_parse 00BB                                         _UEP0bits 000F26  
                                       _MSDTasks D696                                        _motor_isr BC56  
                     _USBDeferINDataStagePackets 0175                                     ??_fat_format 0084  
                           _active_configuration 016B                                ?_i2c_display_init 002E  
                        spi_tx_rx@command_length 0062                               _bit_pattern_degree A1D5  
                    __size_of_USBCheckStdRequest 00D8                  ??_MSDProcessCommandMediaPresent 0099  
          __end_of__fill_buffer_get_mode_details E5F0           __size_of__fill_buffer_get_mode_details 0192  
                  __fill_buffer_get_mode_details E45E                                         _UCONbits 000F65  
                                     ?__spi_init 0060                             _USBConfigureEndpoint 1308  
                                   ??__motor_run 0066           __ic2_display_set_ddram_address@address 006A  
                             ??_i2c_display_init 006A                                __i2c_write@length 0067  
                              ??__backlight_init 0060                                        _spi_tx_rx 1142  
                                      _spi_tx_tx 139C               __flash_write_page_from_buffer@page 0073  
               __size_of_USBStdFeatureReqHandler 027C                                   _USBMSDInHandle 00CE  
                          flash_sector_read@data 0089                            ?_USBTransferOnePacket 0060  
                          flash_sector_read@page 0087                             ??_motor_change_speed 0062  
                          ?__display_signed_itoa 008F              _ExternalFlash_MediaDetect$intlevel0 28C2  
                              _SYS_InterruptHigh 9008                            ?__parse_command_short 002E  
                      i2c_display_cursor@address 006F                                 __CFG_WPFP$PAGE_1 000000  
                                   ??_flash_init 0078                                     _RemoteWakeup 017A  
              __end_of_ExternalFlash_MediaDetect 28C6                                         i2_memcpy 1B28  
                                       i2_memset 2668                MSDCheckForErrorCases@DeviceNoData 006F  
                           spi_tx_tx@data_length 0066                                  ?__flash_is_busy 002E  
               __end_of__fill_buffer_get_display 0B56                               ?_SYS_InterruptHigh 002E  
            __fill_buffer_get_display@start_line 006E                           __end_of__display_clear 2114  
                                     spi_tx@data 0060                          __end_of_USBStallHandler 226A  
                motor_schedule_command@direction 009D                  ??__flash_write_page_from_buffer 0076  
                        __size_of_display_update 0038           motor_go_to_steps_position@distance_ccw 00B6  
                              ___lmul@multiplier 0060               __end_of_encoder_next_arc_step_size 1808  
                     _encoder_next_arc_step_size 1798                                        copy_data0 10BC  
                                      copy_data1 10DC                     __size_of__system_timer0_init 002C  
                      __display_signed_itoa@text 0091        encoder_next_divide_step_size@old_stepsize 0060  
                    ??_USBCtrlEPAllowStatusStage 002E                      __end_of_USBStdSetCfgHandler 037E  
                             __end_of_fat_format DD22                      __display_padded_itoa@length 007A  
                                       _i2c_init 27FC                              ??_SYS_InterruptHigh 004D  
                                    ??__i2c_send 0060                                     _MSDReadState 0172  
                                    ??__i2c_stop 0060                               __end_of__motor_run DF1E  
                             __end_of_device_dsc A1CD                      __size_of__display_itoa_long 010E  
        encoder_next_setup_stepsize@old_stepsize 0060                         MSDErrorHandler@ErrorCase 0068  
                         ?_fat_get_format_status 002E                          ?_USBCtrlTrfSetupHandler 002E  
                      ??__fill_buffer_get_status 006D                                       _ANCON0bits 000F48  
                                     _ANCON1bits 000F49                          USBStdGetStatusHandler@p 002F  
                                       __Hrparam 0000                              __display_itoa@value 0095  
                         _motor_prescaler_lookup 9BFD                                        memcpy@tmp 0066  
                                       __Lrparam 0000                           USBTransferOnePacket@ep 0068  
                              __parse_jump_steps E754                                         _SetupPkt 000D30  
                             __end_of_flash_init 289C                                   _TransferLength 001A  
                                     ?_motor_isr 002E                       __end_of_USBCheckMSDRequest 09E0  
                                api_parse@in_idx 00C5                            ?_USBConfigureEndpoint 002E  
                          __flash_is_busy@status 0071                                 __size_of___aldiv 00CE  
                       _ExternalFlash_SectorRead 24B2                        display_get_character@line 0063  
                             ?__parse_jump_steps 009E                                 __size_of___almod 00AE  
                              ??_USBDeviceAttach 0060                                   __i2c_wait_idle 18E0  
                                _MSDWriteHandler C942                                 __size_of___fldiv 02BA  
                               __size_of___flmul 0352                                 __size_of___fltol 00DE  
                               __size_of___lwdiv 0054                   __display_itoa_long@short_value 00B9  
                               __size_of___lwmod 0044        ExternalFlash_SectorWrite@allowWriteToZero 0068  
                                     ?_spi_tx_rx 0060                                       ?_spi_tx_tx 0060  
           __size_ofi2_ExternalFlash_MediaDetect 0004                                      _MSDCBWValid 016D  
                      __end_of_SYS_InterruptHigh 908E                    __display_itoa_long@last_digit 00BB  
                              ?_USBStallEndpoint 0060                       i2c_display_write_fixed@pos 0068  
                                       __get_fat 1C92                                         __get_fbr D422  
                                       __get_mbr 0456                               ??_USBStallEndpoint 0061  
                            ??__parse_jump_steps 00A4               __end_of_ExternalFlash_CapacityRead 285C  
                     _ExternalFlash_CapacityRead 2848                                         ___xxtofl E9EC  
                        ??_MSDTransferTerminated 003B                          __size_of_USBDeviceTasks 0144  
                                ___lwdiv@divisor 0062                                         _fat_init 286E  
                                ?__display_clear 002E                                  ___lwdiv@counter 0064  
                     __size_of_flash_sector_read 0028                                         __ptext10 DB0C  
                                       __ptext11 1F8E                                         __ptext20 2694  
                                       __ptext12 1EEC                                         __ptext21 2710  
                                       __ptext13 139C                                         __ptext30 202E  
                                       __ptext22 23D4                                         __ptext14 1B84  
                                       __ptext31 18E0                                         __ptext23 1DF0  
                                       __ptext15 1542                                         __ptext40 2114  
                                       __ptext32 28D0                                         __ptext24 277C  
                                       __ptext16 E2C6                                         __ptext41 207E  
                                       __ptext33 28D8                                         __ptext25 2734  
                                       __ptext17 0456                                         __ptext50 2832  
                                       __ptext42 0794                                         __ptext34 28A8  
                                       __ptext26 247C                                         __ptext18 D422  
                                       __ptext51 EEF6                                         __ptext43 0D64  
                                       __ptext35 263C                                         __ptext27 15BE  
                                       __ptext19 1C92                                         __ptext60 22AA  
                                       __ptext52 E9EC                                         __ptext44 C5F0  
                                       __ptext36 1876                                         __ptext28 26BE  
                                       __ptext61 219E                                         __ptext53 1CEA  
                                       __ptext45 28B2                                         __ptext37 28E0  
                                       __ptext29 1FDE                                         __ptext70 254E  
                                       __ptext62 0E0E                                         __ptext54 00E6  
                                       __ptext46 1728                                         __ptext38 16B4  
                                       __ptext71 1BDE                                         __ptext63 21E2  
                                       __ptext55 CEEC                                         __ptext47 25E0  
                                       __ptext39 A238                                         __ptext80 DF1E  
                                       __ptext72 285C                                         __ptext64 1E44  
                                       __ptext56 215A                                         __ptext48 1798  
                                       __ptext81 FD1E                                         __ptext73 D696  
                                       __ptext65 0CB6                                         __ptext57 0004  
                                       __ptext49 B00E                                         __ptext90 1C38  
                                       __ptext82 F3B8                                         __ptext74 F030  
                                       __ptext66 06C6                                         __ptext58 F5E2  
                                       __ptext91 24E6                                         __ptext83 F7FC  
                                       __ptext75 1944                                         __ptext67 20CA  
                                       __ptext59 D8E8                                         __ptext92 1142  
                                       __ptext84 19A6                                         __ptext76 C226  
                                       __ptext68 E8A2                                         __ptext93 0B56  
                                       __ptext85 24B2                                         __ptext77 C942  
                                       __ptext69 2580                                         __ptext94 289C  
                                       __ptext86 26E8                                         __ptext78 28E4  
                                       __ptext95 2848                                         __ptext87 163A  
                                       __ptext79 28E8                                         __ptext96 279E  
                                       __ptext88 2758                                         __ptext97 28BC  
                                       __ptext89 1D42                                         __ptext98 0EB8  
                                       __ptext99 01C4                                     _SSP1CON1bits 000FC6  
                __size_of_motor_speed_from_index 0016                                     _SSP1CON2bits 000FC5  
                   __flash_set_page_size@command 0073                                     _SSP2CON1bits 000F72  
           __end_of_MSDProcessCommandMediaAbsent 19A6            __size_of_MSDProcessCommandMediaAbsent 0062  
                   _MSDProcessCommandMediaAbsent 1944                                  ___almod@divisor 0064  
                                    ??__get_data 0062                            __flash_wakeup@command 0068  
                                ___almod@counter 0068                                      ??__get_root 0062  
                            __parse_command_long 22E8                       ?_ExternalFlash_SectorWrite 0060  
                 ExternalFlash_SectorRead@config 008B                   ExternalFlash_SectorRead@buffer 0091  
                        __size_of_ResetSenseData 0062                 __end_of_APP_DeviceCustomHIDTasks 0F60  
                          __end_of__flash_wakeup 1D9A                   __end_of_USBCtrlTrfSetupHandler 14BC  
                                  __size_of_main 013E                                ?_USBCtrlEPService 002E  
                                  __size_of_itoa 0044                                         _inq_resp A160  
                                  __size_of_utoa 00AA                        __end_of__parse_jump_steps E8A2  
                             ??_USBCtrlEPService 004B                                         _tmr0_isr 2362  
                            _USBCtrlTrfInHandler 09E0               _MSDProcessCommandMediaPresent$2606 009B  
          __end_of_encoder_next_divide_step_size 260E           __size_of_encoder_next_divide_step_size 002E  
                  _encoder_next_divide_step_size 25E0                                      ??_api_parse 00C0  
                         __end_of__i2c_wait_idle 1944                       __end_of_motor_items_in_cue 28D0  
                                       _outPipes 0001  i2c_display_program_custom_character@bit_pattern 006E  
                                       _spi_init 226A                             _USBCtrlTrfOutHandler 1ACA  
                                       int$flags 005B                        _USBCtrlEPAllowStatusStage 085E  
                                   ??_motor_init 0060                                      ??__spi_init 0063  
                                   ??_motor_stop 0060                             ?__parse_command_long 00AA  
                                   _SSP1STATbits 000FC7                           ??_USBTransferOnePacket 0064  
                    __end_of_motor_period_lookup 9BFD                                     _SSP2STATbits 000F73  
                         ??__display_signed_itoa 0093                            __end_of__display_itoa DB0C  
          motor_go_to_steps_position@distance_cw 00B2                                 i2_ResetSenseData 1A08  
                 ?_APP_DeviceCustomHIDInitialize 002E                           ??__parse_command_short 00BA  
          MSDProcessCommandMediaPresent@capacity 00A2                    display_get_character@position 0060  
                       __size_of_MSDErrorHandler 011A                   ?__fill_buffer_get_mode_details 0060  
                        _motor_postscaler_lookup 982F                        _USBDeferStatusStagePacket 0026  
                __end_of__fill_buffer_get_status E2C6                __fill_buffer_get_display@position 006F  
                                    _OSCTUNEbits 000F9B                                       _INTCONbits 000FF2  
                 __parse_jump_steps@return_value 00A5                             ?_USBCtrlTrfInHandler 002E  
                                       memcpy@d1 0060                                         memcpy@s1 0062  
                  USBCtrlTrfTxService@byteToSend 002E               __motor_get_speed_in_degrees@lookup 008F  
                      __display_padded_itoa@text 007B                                         itoa@base 0074  
                                       memset@p1 0060             __end_of_MSDComputeDeviceInAndResidue 0C08  
          __size_of_MSDComputeDeviceInAndResidue 00B2                     _MSDComputeDeviceInAndResidue 0B56  
                               ?_USBStallHandler 002E                         USBStdFeatureReqHandler@p 0049  
                        spi_tx_tx@command_length 0062                    __size_of__flash_set_page_size 006E  
                                       intlevel2 0000                                 spi_tx_rx@command 0060  
                       __flash_get_status@status 006F                           __size_of_USBDeviceInit 014A  
                  ?_MSDProcessCommandMediaAbsent 002E          __end_of_USER_USB_CALLBACK_EVENT_HANDLER 1542  
       __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086                ??_USER_USB_CALLBACK_EVENT_HANDLER 0043  
               ?_USER_USB_CALLBACK_EVENT_HANDLER 003D                  _USER_USB_CALLBACK_EVENT_HANDLER 14BC  
        motor_schedule_command@distance_in_steps 0097                               __end_of_motor_init 27FC  
                               ___lwmod@dividend 0060                     i2USBTransferOnePacket@handle 0037  
              __end_of_ExternalFlash_SectorWrite 28EC                               __end_of_motor_stop 215A  
          __end_of__flash_write_page_from_buffer 1BDE           __size_of__flash_write_page_from_buffer 005A  
                  __flash_write_page_from_buffer 1B84                         ??_motor_schedule_command 009D  
         i2SYSTEM_Initialize@pll_startup_counter 002E             SYSTEM_Initialize@pll_startup_counter 0061  
                                _display_content 0278                          __end_of_MSDWriteHandler CC22  
                               spi_tx_tx@command 0060                          __size_of_MSDReadHandler 01E4  
                     i2USBTransferOnePacket@data 002F                                    ??_system_init 008F  
              __size_of__fill_buffer_get_display 00B8                           _motor_speed_from_index 2832  
                      ?__fill_buffer_get_display 0064                           ??_USBConfigureEndpoint 002F  
                                ?__i2c_wait_idle 002E                            ?_USBCtrlTrfOutHandler 002E  
                                _display_prepare B00E                                      ??_motor_isr 002E  
                       ??__flash_write_to_buffer 007A                         ?_APP_DeviceMSDInitialize 002E  
                            _USBCtrlTrfRxService F6F0                               _USBWakeFromSuspend 240C  
                          ??__parse_command_long 00B0                               _i2c_display_cursor 277C  
                        _USBStdFeatureReqHandler D1A6                              i2_SYSTEM_Initialize 1E98  
                                    ??_spi_tx_rx 0068                                      ??_spi_tx_tx 0068  
                            _USBCtrlTrfTxService 05F6                       __size_of_SYS_InterruptHigh 0086  
                                   ?_api_prepare 0070                __motor_get_speed_in_degrees@speed 008B  
          __flash_write_page_from_buffer@command 0079                                         utoa@base 006B  
                                _gblMediaPresent 0161              ExternalFlash_SectorRead@sector_addr 008D  
                              _motor_command_cue 0200                              ?_USBWakeFromSuspend 002E  
                                     _PPSCONbits 000EBF                                  ___lwmod@divisor 0062  
                    ??_ExternalFlash_MediaDetect 0062                              ?_i2c_display_cursor 006D  
                          ??_USBCtrlTrfInHandler 002F                                         strlen@cp 0064  
                          _USBAlternateInterface 0196                                  ___lwmod@counter 0064  
                                    _ptrNextData 0165                                     ___aldiv@sign 0069  
                      i2USBTransferOnePacket@dir 002E                        i2USBTransferOnePacket@len 0031  
                            USBEnableEndpoint@ep 0039                                  _endpoint_number 0028  
                                 _display_update 23D4                             ?_USBCtrlTrfRxService 002E  
                          _MSDCheckForErrorCases FD1E              __end_of_encoder_next_setup_stepsize 1798  
                    _encoder_next_setup_stepsize 1728                    ?_MSDComputeDeviceInAndResidue 0060  
                           ?i2_SYSTEM_Initialize 002E                         ?_USBCtrlEPAllowDataStage 002E  
                                 _MSBBufferIndex 0163                                     ___almod@sign 0069  
                           ?_USBCtrlTrfTxService 002E                                    ?_encoder_init 002E  
                                     _USBMSDInit F906                     _USBStatusStageTimeoutCounter 0027  
                ??_ExternalFlash_MediaInitialize 0062                             ??_USBWakeFromSuspend 0045  
                       __display_itoa_long@value 00AD                      __end_of__flash_partial_read 16B4  
                     USBTransferOnePacket@handle 0069                                  __backlight_init 28E0  
                           ??_i2c_display_cursor 006E                                     ?_encoder_run 002E  
                     __size_of__parse_jump_steps 014E                          __display_itoa_long@text 00B2  
                                     _USB_CD_Ptr 9DEC                                      _power_state 016C  
                                    _USBInHandle 015D                         _APP_DeviceCustomHIDTasks 0EB8  
                     __end_of_flash_sector_write 1FDE  
