

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Jan 05 13:06:51 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text84,global,reloc=2,class=CODE,delta=1
   105                           	psect	text85,global,reloc=2,class=CODE,delta=1
   106                           	psect	text86,global,reloc=2,class=CODE,delta=1
   107                           	psect	text87,global,reloc=2,class=CODE,delta=1
   108                           	psect	text88,global,reloc=2,class=CODE,delta=1
   109                           	psect	text89,global,reloc=2,class=CODE,delta=1
   110                           	psect	text90,global,reloc=2,class=CODE,delta=1
   111                           	psect	text91,global,reloc=2,class=CODE,delta=1
   112                           	psect	text92,global,reloc=2,class=CODE,delta=1
   113                           	psect	text93,global,reloc=2,class=CODE,delta=1
   114                           	psect	text94,global,reloc=2,class=CODE,delta=1
   115                           	psect	text95,global,reloc=2,class=CODE,delta=1
   116                           	psect	text96,global,reloc=2,class=CODE,delta=1
   117                           	psect	text97,global,reloc=2,class=CODE,delta=1
   118                           	psect	text98,global,reloc=2,class=CODE,delta=1
   119                           	psect	text99,global,reloc=2,class=CODE,delta=1
   120                           	psect	text100,global,reloc=2,class=CODE,delta=1
   121                           	psect	text101,global,reloc=2,class=CODE,delta=1
   122                           	psect	text102,global,reloc=2,class=CODE,delta=1
   123                           	psect	text103,global,reloc=2,class=CODE,delta=1
   124                           	psect	text104,global,reloc=2,class=CODE,delta=1
   125                           	psect	text105,global,reloc=2,class=CODE,delta=1
   126                           	psect	text106,global,reloc=2,class=CODE,delta=1
   127                           	psect	text107,global,reloc=2,class=CODE,delta=1
   128                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text109,global,reloc=2,class=CODE,delta=1
   130                           	psect	text110,global,reloc=2,class=CODE,delta=1
   131                           	psect	text111,global,reloc=2,class=CODE,delta=1
   132                           	psect	text112,global,reloc=2,class=CODE,delta=1
   133                           	psect	text113,global,reloc=2,class=CODE,delta=1
   134                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=2
   135                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=2
   136                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=2
   137                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text118,global,reloc=2,class=CODE,delta=1,group=1
   139                           	psect	text119,global,reloc=2,class=CODE,delta=1,group=1
   140                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=1
   141                           	psect	text121,global,reloc=2,class=CODE,delta=1
   142                           	psect	text122,global,reloc=2,class=CODE,delta=1
   143                           	psect	text123,global,reloc=2,class=CODE,delta=1,group=1
   144                           	psect	text124,global,reloc=2,class=CODE,delta=1,group=1
   145                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=1
   146                           	psect	text126,global,reloc=2,class=CODE,delta=1,group=1
   147                           	psect	text127,global,reloc=2,class=CODE,delta=1,group=1
   148                           	psect	text128,global,reloc=2,class=CODE,delta=1
   149                           	psect	text129,global,reloc=2,class=CODE,delta=1,group=2
   150                           	psect	text130,global,reloc=2,class=CODE,delta=1
   151                           	psect	text131,global,reloc=2,class=CODE,delta=1
   152                           	psect	text132,global,reloc=2,class=CODE,delta=1
   153                           	psect	text133,global,reloc=2,class=CODE,delta=1
   154                           	psect	text134,global,reloc=2,class=CODE,delta=1
   155                           	psect	text135,global,reloc=2,class=CODE,delta=1
   156                           	psect	text136,global,reloc=2,class=CODE,delta=1
   157                           	psect	text137,global,reloc=2,class=CODE,delta=1
   158                           	psect	text138,global,reloc=2,class=CODE,delta=1
   159                           	psect	text139,global,reloc=2,class=CODE,delta=1
   160                           	psect	text140,global,reloc=2,class=CODE,delta=1
   161                           	psect	text141,global,reloc=2,class=CODE,delta=1
   162                           	psect	text142,global,reloc=2,class=CODE,delta=1
   163                           	psect	text143,global,reloc=2,class=CODE,delta=1
   164                           	psect	text144,global,reloc=2,class=CODE,delta=1
   165                           	psect	text145,global,reloc=2,class=CODE,delta=1
   166                           	psect	text146,global,reloc=2,class=CODE,delta=1
   167                           	psect	text147,global,reloc=2,class=CODE,delta=1
   168                           	psect	text148,global,reloc=2,class=CODE,delta=1
   169                           	psect	text149,global,reloc=2,class=CODE,delta=1
   170                           	psect	text150,global,reloc=2,class=CODE,delta=1
   171                           	psect	text151,global,reloc=2,class=CODE,delta=1
   172                           	psect	text152,global,reloc=2,class=CODE,delta=1
   173                           	psect	text153,global,reloc=2,class=CODE,delta=1
   174                           	psect	text154,global,reloc=2,class=CODE,delta=1
   175                           	psect	text155,global,reloc=2,class=CODE,delta=1
   176                           	psect	text156,global,reloc=2,class=CODE,delta=1
   177                           	psect	text157,global,reloc=2,class=CODE,delta=1
   178                           	psect	text158,global,reloc=2,class=CODE,delta=1
   179                           	psect	text159,global,reloc=2,class=CODE,delta=1
   180                           	psect	text160,global,reloc=2,class=CODE,delta=1
   181                           	psect	text161,global,reloc=2,class=CODE,delta=1
   182                           	psect	text162,global,reloc=2,class=CODE,delta=1
   183                           	psect	text163,global,reloc=2,class=CODE,delta=1
   184                           	psect	text164,global,reloc=2,class=CODE,delta=1
   185                           	psect	text165,global,reloc=2,class=CODE,delta=1
   186                           	psect	text166,global,reloc=2,class=CODE,delta=1,group=2
   187                           	psect	text167,global,reloc=2,class=CODE,delta=1
   188                           	psect	text168,global,reloc=2,class=CODE,delta=1
   189                           	psect	text169,global,reloc=2,class=CODE,delta=1
   190                           	psect	text170,global,reloc=2,class=CODE,delta=1
   191                           	psect	text171,global,reloc=2,class=CODE,delta=1
   192                           	psect	text172,global,reloc=2,class=CODE,delta=1
   193                           	psect	text173,global,reloc=2,class=CODE,delta=1
   194                           	psect	text174,global,reloc=2,class=CODE,delta=1
   195                           	psect	text175,global,reloc=2,class=CODE,delta=1
   196                           	psect	text176,global,reloc=2,class=CODE,delta=1
   197                           	psect	text177,global,reloc=2,class=CODE,delta=1
   198                           	psect	text178,global,reloc=2,class=CODE,delta=1
   199                           	psect	text179,global,reloc=2,class=CODE,delta=1
   200                           	psect	text180,global,reloc=2,class=CODE,delta=1
   201                           	psect	text181,global,reloc=2,class=CODE,delta=1
   202                           	psect	text182,global,reloc=2,class=CODE,delta=1
   203                           	psect	text183,global,reloc=2,class=CODE,delta=1
   204                           	psect	text184,global,reloc=2,class=CODE,delta=1
   205                           	psect	text185,global,reloc=2,class=CODE,delta=1
   206                           	psect	text186,global,reloc=2,class=CODE,delta=1
   207                           	psect	text187,global,reloc=2,class=CODE,delta=1
   208                           	psect	text188,global,reloc=2,class=CODE,delta=1
   209                           	psect	text189,global,reloc=2,class=CODE,delta=1
   210                           	psect	text190,global,reloc=2,class=CODE,delta=1
   211                           	psect	text191,global,reloc=2,class=CODE,delta=1,group=1
   212                           	psect	text192,global,reloc=2,class=CODE,delta=1
   213                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   214                           	psect	text194,global,reloc=2,class=CODE,delta=1
   215                           	psect	text195,global,reloc=2,class=CODE,delta=1
   216                           	psect	text196,global,reloc=2,class=CODE,delta=1
   217                           	psect	text197,global,reloc=2,class=CODE,delta=1
   218                           	psect	text198,global,reloc=2,class=CODE,delta=1
   219                           	psect	text199,global,reloc=2,class=CODE,delta=1
   220                           	psect	text200,global,reloc=2,class=CODE,delta=1
   221                           	psect	text201,global,reloc=2,class=CODE,delta=1
   222                           	psect	text202,global,reloc=2,class=CODE,delta=1
   223                           	psect	text203,global,reloc=2,class=CODE,delta=1
   224                           	psect	text204,global,reloc=2,class=CODE,delta=1
   225                           	psect	text205,global,reloc=2,class=CODE,delta=1
   226                           	psect	text206,global,reloc=2,class=CODE,delta=1
   227                           	psect	text207,global,reloc=2,class=CODE,delta=1
   228                           	psect	text208,global,reloc=2,class=CODE,delta=1
   229                           	psect	text209,global,reloc=2,class=CODE,delta=1
   230                           	psect	text210,global,reloc=2,class=CODE,delta=1
   231                           	psect	text211,global,reloc=2,class=CODE,delta=1
   232                           	psect	text212,global,reloc=2,class=CODE,delta=1
   233                           	psect	text213,global,reloc=2,class=CODE,delta=1
   234                           	psect	text214,global,reloc=2,class=CODE,delta=1
   235                           	psect	text215,global,reloc=2,class=CODE,delta=1
   236                           	psect	text216,global,reloc=2,class=CODE,delta=1
   237                           	psect	text217,global,reloc=2,class=CODE,delta=1
   238                           	psect	text218,global,reloc=2,class=CODE,delta=1
   239                           	psect	text219,global,reloc=2,class=CODE,delta=1
   240                           	psect	text220,global,reloc=2,class=CODE,delta=1
   241                           	psect	text221,global,reloc=2,class=CODE,delta=1
   242                           	psect	text222,global,reloc=2,class=CODE,delta=1
   243                           	psect	text223,global,reloc=2,class=CODE,delta=1
   244                           	psect	text224,global,reloc=2,class=CODE,delta=1
   245                           	psect	text225,global,reloc=2,class=CODE,delta=1
   246                           	psect	text226,global,reloc=2,class=CODE,delta=1
   247                           	psect	text227,global,reloc=2,class=CODE,delta=1
   248                           	psect	text228,global,reloc=2,class=CODE,delta=1
   249                           	psect	text229,global,reloc=2,class=CODE,delta=1
   250                           	psect	text230,global,reloc=2,class=CODE,delta=1
   251                           	psect	text231,global,reloc=2,class=CODE,delta=1
   252                           	psect	text232,global,reloc=2,class=CODE,delta=1
   253                           	psect	text233,global,reloc=2,class=CODE,delta=1
   254                           	psect	text234,global,reloc=2,class=CODE,delta=1
   255                           	psect	text235,global,reloc=2,class=CODE,delta=1
   256                           	psect	text236,global,reloc=2,class=CODE,delta=1
   257                           	psect	text237,global,reloc=2,class=CODE,delta=1
   258                           	psect	text238,global,reloc=2,class=CODE,delta=1
   259                           	psect	text239,global,reloc=2,class=CODE,delta=1
   260                           	psect	text240,global,reloc=2,class=CODE,delta=1
   261                           	psect	text241,global,reloc=2,class=CODE,delta=1
   262                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   263                           	psect	text242,global,reloc=2,class=CODE,delta=1
   264                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   265                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   266                           	dabs	1,0x600,512,_msd_buffer
   267                           	dabs	1,0xD00,48,_BDT
   268                           	dabs	1,0xD40,31,_msd_cbw
   269                           	dabs	1,0xD80,13,_msd_csw
   270                           	dabs	1,0xD38,8,_CtrlTrfData
   271                           	dabs	1,0xD30,8,_SetupPkt
   272  0000                     
   273                           ; Version 2.00
   274                           ; Generated 27/05/2018 GMT
   275                           ; 
   276                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   277                           ; All rights reserved.
   278                           ; 
   279                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   280                           ; 
   281                           ; Redistribution and use in source and binary forms, with or without modification, are
   282                           ; permitted provided that the following conditions are met:
   283                           ; 
   284                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   285                           ;        conditions and the following disclaimer.
   286                           ; 
   287                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   288                           ;        of conditions and the following disclaimer in the documentation and/or other
   289                           ;        materials provided with the distribution.
   290                           ; 
   291                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   292                           ;        software without specific prior written permission.
   293                           ; 
   294                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   295                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   296                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   297                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   298                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   299                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   300                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   301                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   302                           ; 
   303                           ; 
   304                           ; Code-generator required, PIC18F47J53 Definitions
   305                           ; 
   306                           ; SFR Addresses
   307  0000                     
   308                           	psect	idataBANK2
   309  015306                     __pidataBANK2:
   310                           	opt stack 0
   311                           
   312                           ;initializer for _LUN
   313  015306  6A                 	db	low _ExternalFlash_MediaInitialize
   314  015307  5D                 	db	high _ExternalFlash_MediaInitialize
   315  015308  01                 	db	low (_ExternalFlash_MediaInitialize shr (0+16))
   316  015309  7C                 	db	low _ExternalFlash_CapacityRead
   317  01530A  5E                 	db	high _ExternalFlash_CapacityRead
   318  01530B  01                 	db	low (_ExternalFlash_CapacityRead shr (0+16))
   319  01530C  F8                 	db	low _ExternalFlash_SectorSizeRead
   320  01530D  5E                 	db	high _ExternalFlash_SectorSizeRead
   321  01530E  01                 	db	low (_ExternalFlash_SectorSizeRead shr (0+16))
   322  01530F  44                 	db	low _ExternalFlash_MediaDetect
   323  015310  5F                 	db	high _ExternalFlash_MediaDetect
   324  015311  01                 	db	low (_ExternalFlash_MediaDetect shr (0+16))
   325  015312  90                 	db	low _ExternalFlash_SectorRead
   326  015313  58                 	db	high _ExternalFlash_SectorRead
   327  015314  01                 	db	low (_ExternalFlash_SectorRead shr (0+16))
   328  015315  84                 	db	low _ExternalFlash_WriteProtectStateGet
   329  015316  5F                 	db	high _ExternalFlash_WriteProtectStateGet
   330  015317  01                 	db	low (_ExternalFlash_WriteProtectStateGet shr (0+16))
   331  015318  5C                 	db	low _ExternalFlash_SectorWrite
   332  015319  58                 	db	high _ExternalFlash_SectorWrite
   333  01531A  01                 	db	low (_ExternalFlash_SectorWrite shr (0+16))
   334  01531B  00                 	db	0
   335  01531C  00                 	db	0
   336  01531D  00                 	db	0
   337  01531E  00                 	db	0
   338  01531F  00                 	db	0
   339  015320  00                 	db	0
   340  015321  00                 	db	0
   341  015322  00                 	db	0
   342                           
   343                           ;initializer for i2c_display_init@F7093
   344  015323  3A                 	db	58
   345  015324  1E                 	db	30
   346  015325  39                 	db	57
   347  015326  0C                 	db	12
   348  015327  74                 	db	116
   349  015328  5C                 	db	92
   350  015329  6D                 	db	109
   351  01532A  0C                 	db	12
   352  01532B  01                 	db	1
   353                           
   354                           ;initializer for __i2c_display_send_init_sequence@F7090
   355  01532C  3A                 	db	58
   356  01532D  1E                 	db	30
   357  01532E  39                 	db	57
   358  01532F  0C                 	db	12
   359  015330  74                 	db	116
   360  015331  5C                 	db	92
   361  015332  6D                 	db	109
   362  015333  0C                 	db	12
   363  015334  01                 	db	1
   364                           
   365                           ;initializer for _tx_buf
   366  015335  01                 	db	1
   367  015336  02                 	db	2
   368  015337  03                 	db	3
   369  015338  04                 	db	4
   370  015339  05                 	db	5
   371  01533A  06                 	db	6
   372  01533B  07                 	db	7
   373  01533C  08                 	db	8
   374                           
   375                           ;initializer for _configFile_used_name
   376  01533D  55                 	db	85
   377  01533E  53                 	db	83
   378  01533F  45                 	db	69
   379  015340  44                 	db	68
   380  015341  43                 	db	67
   381  015342  4F                 	db	79
   382  015343  4E                 	db	78
   383  015344  46                 	db	70
   384                           
   385                           ;initializer for _configFile_name
   386  015345  43                 	db	67
   387  015346  4F                 	db	79
   388  015347  4E                 	db	78
   389  015348  46                 	db	70
   390  015349  49                 	db	73
   391  01534A  47                 	db	71
   392  01534B  20                 	db	32
   393  01534C  20                 	db	32
   394                           
   395                           ;initializer for _configFile_used_extention
   396  01534D  54                 	db	84
   397  01534E  58                 	db	88
   398  01534F  54                 	db	84
   399                           
   400                           ;initializer for _configFile_extention
   401  015350  54                 	db	84
   402  015351  58                 	db	88
   403  015352  54                 	db	84
   404                           
   405                           	psect	idataBANK4
   406  0150D6                     __pidataBANK4:
   407                           	opt stack 0
   408                           
   409                           ;initializer for _dc_startup
   410  0150D6  2A                 	db	42
   411  0150D7  20                 	db	32
   412  0150D8  20                 	db	32
   413  0150D9  53                 	db	83
   414  0150DA  74                 	db	116
   415  0150DB  65                 	db	101
   416  0150DC  70                 	db	112
   417  0150DD  70                 	db	112
   418  0150DE  65                 	db	101
   419  0150DF  72                 	db	114
   420  0150E0  20                 	db	32
   421  0150E1  4D                 	db	77
   422  0150E2  6F                 	db	111
   423  0150E3  74                 	db	116
   424  0150E4  6F                 	db	111
   425  0150E5  72                 	db	114
   426  0150E6  20                 	db	32
   427  0150E7  20                 	db	32
   428  0150E8  20                 	db	32
   429  0150E9  2A                 	db	42
   430  0150EA  2A                 	db	42
   431  0150EB  20                 	db	32
   432  0150EC  20                 	db	32
   433  0150ED  20                 	db	32
   434  0150EE  20                 	db	32
   435  0150EF  43                 	db	67
   436  0150F0  6F                 	db	111
   437  0150F1  6E                 	db	110
   438  0150F2  74                 	db	116
   439  0150F3  72                 	db	114
   440  0150F4  6F                 	db	111
   441  0150F5  6C                 	db	108
   442  0150F6  6C                 	db	108
   443  0150F7  65                 	db	101
   444  0150F8  72                 	db	114
   445  0150F9  20                 	db	32
   446  0150FA  20                 	db	32
   447  0150FB  20                 	db	32
   448  0150FC  20                 	db	32
   449  0150FD  2A                 	db	42
   450  0150FE  2A                 	db	42
   451  0150FF  20                 	db	32
   452  015100  20                 	db	32
   453  015101  20                 	db	32
   454  015102  20                 	db	32
   455  015103  76                 	db	118
   456  015104  20                 	db	32
   457  015105  20                 	db	32
   458  015106  20                 	db	32
   459  015107  20                 	db	32
   460  015108  20                 	db	32
   461  015109  20                 	db	32
   462  01510A  20                 	db	32
   463  01510B  20                 	db	32
   464  01510C  20                 	db	32
   465  01510D  20                 	db	32
   466  01510E  20                 	db	32
   467  01510F  20                 	db	32
   468  015110  20                 	db	32
   469  015111  2A                 	db	42
   470  015112  2A                 	db	42
   471  015113  20                 	db	32
   472  015114  20                 	db	32
   473  015115  73                 	db	115
   474  015116  6F                 	db	111
   475  015117  6C                 	db	108
   476  015118  64                 	db	100
   477  015119  65                 	db	101
   478  01511A  72                 	db	114
   479  01511B  6E                 	db	110
   480  01511C  65                 	db	101
   481  01511D  72                 	db	114
   482  01511E  64                 	db	100
   483  01511F  2E                 	db	46
   484  015120  63                 	db	99
   485  015121  6F                 	db	111
   486  015122  6D                 	db	109
   487  015123  20                 	db	32
   488  015124  20                 	db	32
   489  015125  2A                 	db	42
   490                           
   491                           	psect	mediumconst
   492  009092                     __pmediumconst:
   493                           	opt stack 0
   494  009092  00                 	db	0
   495  009093                     _motor_speed_lookup:
   496                           	opt stack 0
   497  009093  0008               	dw	8
   498  009095  000C               	dw	12
   499  009097  0010               	dw	16
   500  009099  0013               	dw	19
   501  00909B  0016               	dw	22
   502  00909D  0019               	dw	25
   503  00909F  001C               	dw	28
   504  0090A1  001E               	dw	30
   505  0090A3  0021               	dw	33
   506  0090A5  0023               	dw	35
   507  0090A7  0026               	dw	38
   508  0090A9  0028               	dw	40
   509  0090AB  002A               	dw	42
   510  0090AD  002C               	dw	44
   511  0090AF  002E               	dw	46
   512  0090B1  0030               	dw	48
   513  0090B3  0032               	dw	50
   514  0090B5  0034               	dw	52
   515  0090B7  0036               	dw	54
   516  0090B9  0038               	dw	56
   517  0090BB  003A               	dw	58
   518  0090BD  003C               	dw	60
   519  0090BF  003D               	dw	61
   520  0090C1  003F               	dw	63
   521  0090C3  0041               	dw	65
   522  0090C5  0043               	dw	67
   523  0090C7  0045               	dw	69
   524  0090C9  0046               	dw	70
   525  0090CB  0048               	dw	72
   526  0090CD  0049               	dw	73
   527  0090CF  004B               	dw	75
   528  0090D1  004D               	dw	77
   529  0090D3  004E               	dw	78
   530  0090D5  0050               	dw	80
   531  0090D7  0051               	dw	81
   532  0090D9  0053               	dw	83
   533  0090DB  0054               	dw	84
   534  0090DD  0056               	dw	86
   535  0090DF  0057               	dw	87
   536  0090E1  0059               	dw	89
   537  0090E3  005A               	dw	90
   538  0090E5  005C               	dw	92
   539  0090E7  005D               	dw	93
   540  0090E9  005F               	dw	95
   541  0090EB  0060               	dw	96
   542  0090ED  0062               	dw	98
   543  0090EF  0063               	dw	99
   544  0090F1  0064               	dw	100
   545  0090F3  0066               	dw	102
   546  0090F5  0067               	dw	103
   547  0090F7  0069               	dw	105
   548  0090F9  006A               	dw	106
   549  0090FB  006C               	dw	108
   550  0090FD  006D               	dw	109
   551  0090FF  006E               	dw	110
   552  009101  0070               	dw	112
   553  009103  0071               	dw	113
   554  009105  0072               	dw	114
   555  009107  0073               	dw	115
   556  009109  0074               	dw	116
   557  00910B  0076               	dw	118
   558  00910D  0078               	dw	120
   559  00910F  0079               	dw	121
   560  009111  007A               	dw	122
   561  009113  007B               	dw	123
   562  009115  007D               	dw	125
   563  009117  007E               	dw	126
   564  009119  007F               	dw	127
   565  00911B  0082               	dw	130
   566  00911D  0085               	dw	133
   567  00911F  0087               	dw	135
   568  009121  008A               	dw	138
   569  009123  008C               	dw	140
   570  009125  008F               	dw	143
   571  009127  0091               	dw	145
   572  009129  0092               	dw	146
   573  00912B  0094               	dw	148
   574  00912D  0098               	dw	152
   575  00912F  009A               	dw	154
   576  009131  009C               	dw	156
   577  009133  009E               	dw	158
   578  009135  00A1               	dw	161
   579  009137  00A3               	dw	163
   580  009139  00A5               	dw	165
   581  00913B  00A7               	dw	167
   582  00913D  00AA               	dw	170
   583  00913F  00AC               	dw	172
   584  009141  00AF               	dw	175
   585  009143  00B2               	dw	178
   586  009145  00B4               	dw	180
   587  009147  00B7               	dw	183
   588  009149  00B8               	dw	184
   589  00914B  00BA               	dw	186
   590  00914D  00BC               	dw	188
   591  00914F  00BE               	dw	190
   592  009151  00C0               	dw	192
   593  009153  00C3               	dw	195
   594  009155  00C4               	dw	196
   595  009157  00C6               	dw	198
   596  009159  00C8               	dw	200
   597  00915B  00CA               	dw	202
   598  00915D  00CC               	dw	204
   599  00915F  00CE               	dw	206
   600  009161  00D0               	dw	208
   601  009163  00D2               	dw	210
   602  009165  00D4               	dw	212
   603  009167  00D6               	dw	214
   604  009169  00D8               	dw	216
   605  00916B  00D9               	dw	217
   606  00916D  00DB               	dw	219
   607  00916F  00DD               	dw	221
   608  009171  00DF               	dw	223
   609  009173  00E1               	dw	225
   610  009175  00E2               	dw	226
   611  009177  00E5               	dw	229
   612  009179  00E7               	dw	231
   613  00917B  00E8               	dw	232
   614  00917D  00EA               	dw	234
   615  00917F  00EC               	dw	236
   616  009181  00EE               	dw	238
   617  009183  00EF               	dw	239
   618  009185  00F2               	dw	242
   619  009187  00F3               	dw	243
   620  009189  00F5               	dw	245
   621  00918B  00F7               	dw	247
   622  00918D  00F8               	dw	248
   623  00918F  00FB               	dw	251
   624  009191  00FD               	dw	253
   625  009193  0100               	dw	256
   626  009195  0103               	dw	259
   627  009197  0104               	dw	260
   628  009199  0107               	dw	263
   629  00919B  010A               	dw	266
   630  00919D  010C               	dw	268
   631  00919F  010F               	dw	271
   632  0091A1  0112               	dw	274
   633  0091A3  0114               	dw	276
   634  0091A5  0117               	dw	279
   635  0091A7  0119               	dw	281
   636  0091A9  011C               	dw	284
   637  0091AB  011E               	dw	286
   638  0091AD  0121               	dw	289
   639  0091AF  0123               	dw	291
   640  0091B1  0125               	dw	293
   641  0091B3  0129               	dw	297
   642  0091B5  012B               	dw	299
   643  0091B7  012C               	dw	300
   644  0091B9  012E               	dw	302
   645  0091BB  0132               	dw	306
   646  0091BD  0134               	dw	308
   647  0091BF  0136               	dw	310
   648  0091C1  0138               	dw	312
   649  0091C3  013B               	dw	315
   650  0091C5  013D               	dw	317
   651  0091C7  013F               	dw	319
   652  0091C9  0143               	dw	323
   653  0091CB  0146               	dw	326
   654  0091CD  0148               	dw	328
   655  0091CF  014A               	dw	330
   656  0091D1  014C               	dw	332
   657  0091D3  014F               	dw	335
   658  0091D5  0151               	dw	337
   659  0091D7  0154               	dw	340
   660  0091D9  0156               	dw	342
   661  0091DB  0159               	dw	345
   662  0091DD  015B               	dw	347
   663  0091DF  015E               	dw	350
   664  0091E1  0160               	dw	352
   665  0091E3  0163               	dw	355
   666  0091E5  0166               	dw	358
   667  0091E7  0169               	dw	361
   668  0091E9  016B               	dw	363
   669  0091EB  016E               	dw	366
   670  0091ED  0171               	dw	369
   671  0091EF  0174               	dw	372
   672  0091F1  0177               	dw	375
   673  0091F3  017A               	dw	378
   674  0091F5  017D               	dw	381
   675  0091F7  0180               	dw	384
   676  0091F9  0183               	dw	387
   677  0091FB  0187               	dw	391
   678  0091FD  018A               	dw	394
   679  0091FF  018D               	dw	397
   680  009201  0191               	dw	401
   681  009203  0194               	dw	404
   682  009205  0198               	dw	408
   683  009207  019B               	dw	411
   684  009209  019F               	dw	415
   685  00920B  01A3               	dw	419
   686  00920D  01A6               	dw	422
   687  00920F  01AA               	dw	426
   688  009211  01AE               	dw	430
   689  009213  01B2               	dw	434
   690  009215  01B6               	dw	438
   691  009217  01BA               	dw	442
   692  009219  01BE               	dw	446
   693  00921B  01C3               	dw	451
   694  00921D  01C7               	dw	455
   695  00921F  01CC               	dw	460
   696  009221  01D0               	dw	464
   697  009223  01D5               	dw	469
   698  009225  01D9               	dw	473
   699  009227  01DE               	dw	478
   700  009229  01E3               	dw	483
   701  00922B  01E8               	dw	488
   702  00922D  01ED               	dw	493
   703  00922F  01F3               	dw	499
   704  009231  01F8               	dw	504
   705  009233  01FE               	dw	510
   706  009235  0203               	dw	515
   707  009237  0209               	dw	521
   708  009239  020F               	dw	527
   709  00923B  0215               	dw	533
   710  00923D  021B               	dw	539
   711  00923F  0221               	dw	545
   712  009241  0227               	dw	551
   713  009243  022E               	dw	558
   714  009245  0235               	dw	565
   715  009247  023C               	dw	572
   716  009249  0243               	dw	579
   717  00924B  024A               	dw	586
   718  00924D  0251               	dw	593
   719  00924F  0259               	dw	601
   720  009251  0261               	dw	609
   721  009253  0269               	dw	617
   722  009255  0271               	dw	625
   723  009257  0279               	dw	633
   724  009259  0282               	dw	642
   725  00925B  028B               	dw	651
   726  00925D  0294               	dw	660
   727  00925F  029E               	dw	670
   728  009261  02A7               	dw	679
   729  009263  02B1               	dw	689
   730  009265  02BC               	dw	700
   731  009267  02C6               	dw	710
   732  009269  02D1               	dw	721
   733  00926B  02DC               	dw	732
   734  00926D  02DC               	dw	732
   735  00926F  02DF               	dw	735
   736  009271  02E2               	dw	738
   737  009273  02E5               	dw	741
   738  009275  02E8               	dw	744
   739  009277  02EB               	dw	747
   740  009279  02EE               	dw	750
   741  00927B  02F1               	dw	753
   742  00927D  02F4               	dw	756
   743  00927F  02F7               	dw	759
   744  009281  02FA               	dw	762
   745  009283  02FD               	dw	765
   746  009285  0300               	dw	768
   747  009287  0304               	dw	772
   748  009289  0307               	dw	775
   749  00928B  030A               	dw	778
   750  00928D  030D               	dw	781
   751  00928F  0311               	dw	785
   752  009291  0314               	dw	788
   753  009293  0317               	dw	791
   754  009295  031A               	dw	794
   755  009297  031E               	dw	798
   756  009299  0321               	dw	801
   757  00929B  0325               	dw	805
   758  00929D  0328               	dw	808
   759  00929F  032C               	dw	812
   760  0092A1  032F               	dw	815
   761  0092A3  0333               	dw	819
   762  0092A5  0336               	dw	822
   763  0092A7  033A               	dw	826
   764  0092A9  033E               	dw	830
   765  0092AB  0341               	dw	833
   766  0092AD  0345               	dw	837
   767  0092AF  0349               	dw	841
   768  0092B1  034D               	dw	845
   769  0092B3  0350               	dw	848
   770  0092B5  0354               	dw	852
   771  0092B7  0358               	dw	856
   772  0092B9  035C               	dw	860
   773  0092BB  0360               	dw	864
   774  0092BD  0364               	dw	868
   775  0092BF  0368               	dw	872
   776  0092C1  036C               	dw	876
   777  0092C3  0370               	dw	880
   778  0092C5  0374               	dw	884
   779  0092C7  0379               	dw	889
   780  0092C9  037D               	dw	893
   781  0092CB  0381               	dw	897
   782  0092CD  0385               	dw	901
   783  0092CF  038A               	dw	906
   784  0092D1  038E               	dw	910
   785  0092D3  0393               	dw	915
   786  0092D5  0397               	dw	919
   787  0092D7  039C               	dw	924
   788  0092D9  03A0               	dw	928
   789  0092DB  03A5               	dw	933
   790  0092DD  03AA               	dw	938
   791  0092DF  03AE               	dw	942
   792  0092E1  03B3               	dw	947
   793  0092E3  03B8               	dw	952
   794  0092E5  03BD               	dw	957
   795  0092E7  03C2               	dw	962
   796  0092E9  03C6               	dw	966
   797  0092EB  03CC               	dw	972
   798  0092ED  03D1               	dw	977
   799  0092EF  03D6               	dw	982
   800  0092F1  03DB               	dw	987
   801  0092F3  03E0               	dw	992
   802  0092F5  03E5               	dw	997
   803  0092F7  03EB               	dw	1003
   804  0092F9  03F0               	dw	1008
   805  0092FB  03F6               	dw	1014
   806  0092FD  03FB               	dw	1019
   807  0092FF  0401               	dw	1025
   808  009301  0406               	dw	1030
   809  009303  040C               	dw	1036
   810  009305  0412               	dw	1042
   811  009307  0417               	dw	1047
   812  009309  041D               	dw	1053
   813  00930B  0423               	dw	1059
   814  00930D  0429               	dw	1065
   815  00930F  042F               	dw	1071
   816  009311  0436               	dw	1078
   817  009313  043C               	dw	1084
   818  009315  0442               	dw	1090
   819  009317  0448               	dw	1096
   820  009319  044F               	dw	1103
   821  00931B  0455               	dw	1109
   822  00931D  045C               	dw	1116
   823  00931F  0463               	dw	1123
   824  009321  046A               	dw	1130
   825  009323  0470               	dw	1136
   826  009325  0477               	dw	1143
   827  009327  047E               	dw	1150
   828  009329  0485               	dw	1157
   829  00932B  048D               	dw	1165
   830  00932D  0494               	dw	1172
   831  00932F  049B               	dw	1179
   832  009331  04A3               	dw	1187
   833  009333  04AA               	dw	1194
   834  009335  04B2               	dw	1202
   835  009337  04BA               	dw	1210
   836  009339  04C2               	dw	1218
   837  00933B  04C9               	dw	1225
   838  00933D  04D2               	dw	1234
   839  00933F  04DA               	dw	1242
   840  009341  04E2               	dw	1250
   841  009343  04EA               	dw	1258
   842  009345  04F3               	dw	1267
   843  009347  04FC               	dw	1276
   844  009349  0504               	dw	1284
   845  00934B  050D               	dw	1293
   846  00934D  0516               	dw	1302
   847  00934F  051F               	dw	1311
   848  009351  0528               	dw	1320
   849  009353  0532               	dw	1330
   850  009355  053B               	dw	1339
   851  009357  0545               	dw	1349
   852  009359  054F               	dw	1359
   853  00935B  0559               	dw	1369
   854  00935D  0563               	dw	1379
   855  00935F  056D               	dw	1389
   856  009361  0577               	dw	1399
   857  009363  0582               	dw	1410
   858  009365  058C               	dw	1420
   859  009367  0597               	dw	1431
   860  009369  05A2               	dw	1442
   861  00936B  05AD               	dw	1453
   862  00936D  05B9               	dw	1465
   863  00936F  05C4               	dw	1476
   864  009371  05D0               	dw	1488
   865  009373  05DC               	dw	1500
   866  009375  05E8               	dw	1512
   867  009377  05F4               	dw	1524
   868  009379  0601               	dw	1537
   869  00937B  060E               	dw	1550
   870  00937D  061A               	dw	1562
   871  00937F  0628               	dw	1576
   872  009381  0635               	dw	1589
   873  009383  0643               	dw	1603
   874  009385  0650               	dw	1616
   875  009387  065E               	dw	1630
   876  009389  066D               	dw	1645
   877  00938B  067B               	dw	1659
   878  00938D  068A               	dw	1674
   879  00938F  0699               	dw	1689
   880  009391  06A9               	dw	1705
   881  009393  06B8               	dw	1720
   882  009395  06C8               	dw	1736
   883  009397  06D8               	dw	1752
   884  009399  06E9               	dw	1769
   885  00939B  06FA               	dw	1786
   886  00939D  070B               	dw	1803
   887  00939F  071C               	dw	1820
   888  0093A1  072E               	dw	1838
   889  0093A3  0740               	dw	1856
   890  0093A5  0753               	dw	1875
   891  0093A7  0766               	dw	1894
   892  0093A9  0779               	dw	1913
   893  0093AB  078D               	dw	1933
   894  0093AD  07A1               	dw	1953
   895  0093AF  07B6               	dw	1974
   896  0093B1  07CB               	dw	1995
   897  0093B3  07E0               	dw	2016
   898  0093B5  07F6               	dw	2038
   899  0093B7  080C               	dw	2060
   900  0093B9  0823               	dw	2083
   901  0093BB  083B               	dw	2107
   902  0093BD  0853               	dw	2131
   903  0093BF  086B               	dw	2155
   904  0093C1  0884               	dw	2180
   905  0093C3  089E               	dw	2206
   906  0093C5  08B8               	dw	2232
   907  0093C7  08D3               	dw	2259
   908  0093C9  08EF               	dw	2287
   909  0093CB  090B               	dw	2315
   910  0093CD  0928               	dw	2344
   911  0093CF  0945               	dw	2373
   912  0093D1  0964               	dw	2404
   913  0093D3  0983               	dw	2435
   914  0093D5  09A3               	dw	2467
   915  0093D7  09C4               	dw	2500
   916  0093D9  09E6               	dw	2534
   917  0093DB  0A08               	dw	2568
   918  0093DD  0A2C               	dw	2604
   919  0093DF  0A51               	dw	2641
   920  0093E1  0A77               	dw	2679
   921  0093E3  0A9D               	dw	2717
   922  0093E5  0AC5               	dw	2757
   923  0093E7  0AEF               	dw	2799
   924  0093E9  0B19               	dw	2841
   925  0093EB  0B45               	dw	2885
   926  0093ED  0B72               	dw	2930
   927  0093EF  0B72               	dw	2930
   928  0093F1  0B7D               	dw	2941
   929  0093F3  0B89               	dw	2953
   930  0093F5  0B94               	dw	2964
   931  0093F7  0BA0               	dw	2976
   932  0093F9  0BAC               	dw	2988
   933  0093FB  0BB8               	dw	3000
   934  0093FD  0BC4               	dw	3012
   935  0093FF  0BD0               	dw	3024
   936  009401  0BDC               	dw	3036
   937  009403  0BE9               	dw	3049
   938  009405  0BF5               	dw	3061
   939  009407  0C02               	dw	3074
   940  009409  0C0E               	dw	3086
   941  00940B  0C1B               	dw	3099
   942  00940D  0C28               	dw	3112
   943  00940F  0C35               	dw	3125
   944  009411  0C42               	dw	3138
   945  009413  0C4F               	dw	3151
   946  009415  0C5D               	dw	3165
   947  009417  0C6A               	dw	3178
   948  009419  0C77               	dw	3191
   949  00941B  0C85               	dw	3205
   950  00941D  0C93               	dw	3219
   951  00941F  0CA1               	dw	3233
   952  009421  0CAF               	dw	3247
   953  009423  0CBD               	dw	3261
   954  009425  0CCB               	dw	3275
   955  009427  0CD9               	dw	3289
   956  009429  0CE8               	dw	3304
   957  00942B  0CF7               	dw	3319
   958  00942D  0D05               	dw	3333
   959  00942F  0D14               	dw	3348
   960  009431  0D23               	dw	3363
   961  009433  0D32               	dw	3378
   962  009435  0D42               	dw	3394
   963  009437  0D51               	dw	3409
   964  009439  0D61               	dw	3425
   965  00943B  0D70               	dw	3440
   966  00943D  0D80               	dw	3456
   967  00943F  0D90               	dw	3472
   968  009441  0DA0               	dw	3488
   969  009443  0DB1               	dw	3505
   970  009445  0DC1               	dw	3521
   971  009447  0DD2               	dw	3538
   972  009449  0DE3               	dw	3555
   973  00944B  0DF3               	dw	3571
   974  00944D  0E05               	dw	3589
   975  00944F  0E16               	dw	3606
   976  009451  0E27               	dw	3623
   977  009453  0E39               	dw	3641
   978  009455  0E4B               	dw	3659
   979  009457  0E5C               	dw	3676
   980  009459  0E6F               	dw	3695
   981  00945B  0E81               	dw	3713
   982  00945D  0E93               	dw	3731
   983  00945F  0EA6               	dw	3750
   984  009461                     __end_of_motor_speed_lookup:
   985                           	opt stack 0
   986  009461                     _motor_steps_lookup:
   987                           	opt stack 0
   988  009461  0001               	dw	1
   989  009463  0002               	dw	2
   990  009465  0003               	dw	3
   991  009467  0004               	dw	4
   992  009469  0005               	dw	5
   993  00946B  0006               	dw	6
   994  00946D  0007               	dw	7
   995  00946F  0008               	dw	8
   996  009471  0009               	dw	9
   997  009473  000A               	dw	10
   998  009475  000B               	dw	11
   999  009477  000C               	dw	12
  1000  009479  000D               	dw	13
  1001  00947B  000E               	dw	14
  1002  00947D  000F               	dw	15
  1003  00947F  0010               	dw	16
  1004  009481  0011               	dw	17
  1005  009483  0012               	dw	18
  1006  009485  0013               	dw	19
  1007  009487  0014               	dw	20
  1008  009489  0015               	dw	21
  1009  00948B  0016               	dw	22
  1010  00948D  0017               	dw	23
  1011  00948F  0018               	dw	24
  1012  009491  0019               	dw	25
  1013  009493  001A               	dw	26
  1014  009495  001B               	dw	27
  1015  009497  001C               	dw	28
  1016  009499  001D               	dw	29
  1017  00949B  001E               	dw	30
  1018  00949D  001F               	dw	31
  1019  00949F  0020               	dw	32
  1020  0094A1  0021               	dw	33
  1021  0094A3  0022               	dw	34
  1022  0094A5  0023               	dw	35
  1023  0094A7  0024               	dw	36
  1024  0094A9  0025               	dw	37
  1025  0094AB  0026               	dw	38
  1026  0094AD  0027               	dw	39
  1027  0094AF  0028               	dw	40
  1028  0094B1  0029               	dw	41
  1029  0094B3  002A               	dw	42
  1030  0094B5  002B               	dw	43
  1031  0094B7  002C               	dw	44
  1032  0094B9  002D               	dw	45
  1033  0094BB  002E               	dw	46
  1034  0094BD  002F               	dw	47
  1035  0094BF  0030               	dw	48
  1036  0094C1  0031               	dw	49
  1037  0094C3  0032               	dw	50
  1038  0094C5  0033               	dw	51
  1039  0094C7  0034               	dw	52
  1040  0094C9  0035               	dw	53
  1041  0094CB  0036               	dw	54
  1042  0094CD  0037               	dw	55
  1043  0094CF  0038               	dw	56
  1044  0094D1  0039               	dw	57
  1045  0094D3  003A               	dw	58
  1046  0094D5  003B               	dw	59
  1047  0094D7  003C               	dw	60
  1048  0094D9  003D               	dw	61
  1049  0094DB  003E               	dw	62
  1050  0094DD  003F               	dw	63
  1051  0094DF  0040               	dw	64
  1052  0094E1  0041               	dw	65
  1053  0094E3  0042               	dw	66
  1054  0094E5  0043               	dw	67
  1055  0094E7  0045               	dw	69
  1056  0094E9  0047               	dw	71
  1057  0094EB  0049               	dw	73
  1058  0094ED  004B               	dw	75
  1059  0094EF  004D               	dw	77
  1060  0094F1  004F               	dw	79
  1061  0094F3  0051               	dw	81
  1062  0094F5  0053               	dw	83
  1063  0094F7  0055               	dw	85
  1064  0094F9  0057               	dw	87
  1065  0094FB  0059               	dw	89
  1066  0094FD  005B               	dw	91
  1067  0094FF  005D               	dw	93
  1068  009501  005F               	dw	95
  1069  009503  0061               	dw	97
  1070  009505  0063               	dw	99
  1071  009507  0065               	dw	101
  1072  009509  0067               	dw	103
  1073  00950B  0069               	dw	105
  1074  00950D  006B               	dw	107
  1075  00950F  006E               	dw	110
  1076  009511  0070               	dw	112
  1077  009513  0073               	dw	115
  1078  009515  0075               	dw	117
  1079  009517  0077               	dw	119
  1080  009519  0079               	dw	121
  1081  00951B  007B               	dw	123
  1082  00951D  007D               	dw	125
  1083  00951F  007F               	dw	127
  1084  009521  0081               	dw	129
  1085  009523  0083               	dw	131
  1086  009525  0085               	dw	133
  1087  009527  0087               	dw	135
  1088  009529  0089               	dw	137
  1089  00952B  008B               	dw	139
  1090  00952D  008D               	dw	141
  1091  00952F  008F               	dw	143
  1092  009531  0091               	dw	145
  1093  009533  0093               	dw	147
  1094  009535  0095               	dw	149
  1095  009537  0097               	dw	151
  1096  009539  0099               	dw	153
  1097  00953B  009B               	dw	155
  1098  00953D  009D               	dw	157
  1099  00953F  009F               	dw	159
  1100  009541  00A1               	dw	161
  1101  009543  00A3               	dw	163
  1102  009545  00A5               	dw	165
  1103  009547  00A7               	dw	167
  1104  009549  00A9               	dw	169
  1105  00954B  00AB               	dw	171
  1106  00954D  00AD               	dw	173
  1107  00954F  00AF               	dw	175
  1108  009551  00B1               	dw	177
  1109  009553  00B3               	dw	179
  1110  009555  00B5               	dw	181
  1111  009557  00B7               	dw	183
  1112  009559  00B9               	dw	185
  1113  00955B  00BB               	dw	187
  1114  00955D  00BD               	dw	189
  1115  00955F  00C0               	dw	192
  1116  009561  00C3               	dw	195
  1117  009563  00C6               	dw	198
  1118  009565  00C9               	dw	201
  1119  009567  00CC               	dw	204
  1120  009569  00CF               	dw	207
  1121  00956B  00D2               	dw	210
  1122  00956D  00D5               	dw	213
  1123  00956F  00D8               	dw	216
  1124  009571  00DB               	dw	219
  1125  009573  00DE               	dw	222
  1126  009575  00E1               	dw	225
  1127  009577  00E4               	dw	228
  1128  009579  00E7               	dw	231
  1129  00957B  00EA               	dw	234
  1130  00957D  00ED               	dw	237
  1131  00957F  00F0               	dw	240
  1132  009581  00F3               	dw	243
  1133  009583  00F6               	dw	246
  1134  009585  00F9               	dw	249
  1135  009587  00FC               	dw	252
  1136  009589  00FF               	dw	255
  1137  00958B  0102               	dw	258
  1138  00958D  0105               	dw	261
  1139  00958F  0108               	dw	264
  1140  009591  010B               	dw	267
  1141  009593  010E               	dw	270
  1142  009595  0111               	dw	273
  1143  009597  0114               	dw	276
  1144  009599  0117               	dw	279
  1145  00959B  011A               	dw	282
  1146  00959D  011D               	dw	285
  1147  00959F  0120               	dw	288
  1148  0095A1  0123               	dw	291
  1149  0095A3  0126               	dw	294
  1150  0095A5  012A               	dw	298
  1151  0095A7  012D               	dw	301
  1152  0095A9  0130               	dw	304
  1153  0095AB  0133               	dw	307
  1154  0095AD  0137               	dw	311
  1155  0095AF  013A               	dw	314
  1156  0095B1  013E               	dw	318
  1157  0095B3  0142               	dw	322
  1158  0095B5  0145               	dw	325
  1159  0095B7  0149               	dw	329
  1160  0095B9  014D               	dw	333
  1161  0095BB  0151               	dw	337
  1162  0095BD  0155               	dw	341
  1163  0095BF  0159               	dw	345
  1164  0095C1  015D               	dw	349
  1165  0095C3  0161               	dw	353
  1166  0095C5  0166               	dw	358
  1167  0095C7  016A               	dw	362
  1168  0095C9  016E               	dw	366
  1169  0095CB  0173               	dw	371
  1170  0095CD  0178               	dw	376
  1171  0095CF  017D               	dw	381
  1172  0095D1  0182               	dw	386
  1173  0095D3  0187               	dw	391
  1174  0095D5  018C               	dw	396
  1175  0095D7  0191               	dw	401
  1176  0095D9  0196               	dw	406
  1177  0095DB  019C               	dw	412
  1178  0095DD  01A1               	dw	417
  1179  0095DF  01A7               	dw	423
  1180  0095E1  01AD               	dw	429
  1181  0095E3  01B3               	dw	435
  1182  0095E5  01B9               	dw	441
  1183  0095E7  01BF               	dw	447
  1184  0095E9  01C6               	dw	454
  1185  0095EB  01CC               	dw	460
  1186  0095ED  01D3               	dw	467
  1187  0095EF  01DA               	dw	474
  1188  0095F1  01E1               	dw	481
  1189  0095F3  01E8               	dw	488
  1190  0095F5  01F0               	dw	496
  1191  0095F7  01F7               	dw	503
  1192  0095F9  01FF               	dw	511
  1193  0095FB  0207               	dw	519
  1194  0095FD  020F               	dw	527
  1195  0095FF  0218               	dw	536
  1196  009601  0221               	dw	545
  1197  009603  022A               	dw	554
  1198  009605  0233               	dw	563
  1199  009607  023D               	dw	573
  1200  009609  0247               	dw	583
  1201  00960B  0251               	dw	593
  1202  00960D  025C               	dw	604
  1203  00960F  0267               	dw	615
  1204  009611  0272               	dw	626
  1205  009613  027E               	dw	638
  1206  009615  028A               	dw	650
  1207  009617  0297               	dw	663
  1208  009619  02A4               	dw	676
  1209  00961B  02B2               	dw	690
  1210  00961D  02C0               	dw	704
  1211  00961F  02CF               	dw	719
  1212  009621  02DF               	dw	735
  1213  009623  02EF               	dw	751
  1214  009625  02FF               	dw	767
  1215  009627  0311               	dw	785
  1216  009629  0323               	dw	803
  1217  00962B  0336               	dw	822
  1218  00962D  0349               	dw	841
  1219  00962F  035E               	dw	862
  1220  009631  0373               	dw	883
  1221  009633  0389               	dw	905
  1222  009635  03A1               	dw	929
  1223  009637  03B9               	dw	953
  1224  009639  03D3               	dw	979
  1225  00963B  03DD               	dw	989
  1226  00963D  03E4               	dw	996
  1227  00963F  03EA               	dw	1002
  1228  009641  03F1               	dw	1009
  1229  009643  03F8               	dw	1016
  1230  009645  03FF               	dw	1023
  1231  009647  0406               	dw	1030
  1232  009649  040D               	dw	1037
  1233  00964B  0415               	dw	1045
  1234  00964D  041C               	dw	1052
  1235  00964F  0424               	dw	1060
  1236  009651  042B               	dw	1067
  1237  009653  0433               	dw	1075
  1238  009655  043B               	dw	1083
  1239  009657  0442               	dw	1090
  1240  009659  044A               	dw	1098
  1241  00965B  0452               	dw	1106
  1242  00965D  045A               	dw	1114
  1243  00965F  0463               	dw	1123
  1244  009661  046B               	dw	1131
  1245  009663  0474               	dw	1140
  1246  009665  047C               	dw	1148
  1247  009667  0485               	dw	1157
  1248  009669  048E               	dw	1166
  1249  00966B  0496               	dw	1174
  1250  00966D  049F               	dw	1183
  1251  00966F  04A9               	dw	1193
  1252  009671  04B2               	dw	1202
  1253  009673  04BB               	dw	1211
  1254  009675  04C5               	dw	1221
  1255  009677  04CE               	dw	1230
  1256  009679  04D8               	dw	1240
  1257  00967B  04E2               	dw	1250
  1258  00967D  04EC               	dw	1260
  1259  00967F  04F6               	dw	1270
  1260  009681  0500               	dw	1280
  1261  009683  050B               	dw	1291
  1262  009685  0515               	dw	1301
  1263  009687  0520               	dw	1312
  1264  009689  052B               	dw	1323
  1265  00968B  0536               	dw	1334
  1266  00968D  0541               	dw	1345
  1267  00968F  054C               	dw	1356
  1268  009691  0558               	dw	1368
  1269  009693  0564               	dw	1380
  1270  009695  056F               	dw	1391
  1271  009697  057B               	dw	1403
  1272  009699  0587               	dw	1415
  1273  00969B  0594               	dw	1428
  1274  00969D  05A0               	dw	1440
  1275  00969F  05AD               	dw	1453
  1276  0096A1  05BA               	dw	1466
  1277  0096A3  05C7               	dw	1479
  1278  0096A5  05D4               	dw	1492
  1279  0096A7  05E2               	dw	1506
  1280  0096A9  05EF               	dw	1519
  1281  0096AB  05FD               	dw	1533
  1282  0096AD  060B               	dw	1547
  1283  0096AF  0619               	dw	1561
  1284  0096B1  0628               	dw	1576
  1285  0096B3  0637               	dw	1591
  1286  0096B5  0646               	dw	1606
  1287  0096B7  0655               	dw	1621
  1288  0096B9  0664               	dw	1636
  1289  0096BB  0674               	dw	1652
  1290  0096BD  0684               	dw	1668
  1291  0096BF  0694               	dw	1684
  1292  0096C1  06A4               	dw	1700
  1293  0096C3  06B5               	dw	1717
  1294  0096C5  06C6               	dw	1734
  1295  0096C7  06D7               	dw	1751
  1296  0096C9  06E9               	dw	1769
  1297  0096CB  06FA               	dw	1786
  1298  0096CD  070C               	dw	1804
  1299  0096CF  071F               	dw	1823
  1300  0096D1  0731               	dw	1841
  1301  0096D3  0744               	dw	1860
  1302  0096D5  0758               	dw	1880
  1303  0096D7  076B               	dw	1899
  1304  0096D9  077F               	dw	1919
  1305  0096DB  0793               	dw	1939
  1306  0096DD  07A8               	dw	1960
  1307  0096DF  07BD               	dw	1981
  1308  0096E1  07D2               	dw	2002
  1309  0096E3  07E8               	dw	2024
  1310  0096E5  07FE               	dw	2046
  1311  0096E7  0815               	dw	2069
  1312  0096E9  082C               	dw	2092
  1313  0096EB  0843               	dw	2115
  1314  0096ED  085B               	dw	2139
  1315  0096EF  0873               	dw	2163
  1316  0096F1  088B               	dw	2187
  1317  0096F3  08A5               	dw	2213
  1318  0096F5  08BE               	dw	2238
  1319  0096F7  08D8               	dw	2264
  1320  0096F9  08F2               	dw	2290
  1321  0096FB  090D               	dw	2317
  1322  0096FD  0929               	dw	2345
  1323  0096FF  0945               	dw	2373
  1324  009701  0961               	dw	2401
  1325  009703  097E               	dw	2430
  1326  009705  099C               	dw	2460
  1327  009707  09BA               	dw	2490
  1328  009709  09D9               	dw	2521
  1329  00970B  09F9               	dw	2553
  1330  00970D  0A19               	dw	2585
  1331  00970F  0A39               	dw	2617
  1332  009711  0A5B               	dw	2651
  1333  009713  0A7D               	dw	2685
  1334  009715  0A9F               	dw	2719
  1335  009717  0AC3               	dw	2755
  1336  009719  0AE7               	dw	2791
  1337  00971B  0B0C               	dw	2828
  1338  00971D  0B31               	dw	2865
  1339  00971F  0B58               	dw	2904
  1340  009721  0B7F               	dw	2943
  1341  009723  0BA7               	dw	2983
  1342  009725  0BD0               	dw	3024
  1343  009727  0BFA               	dw	3066
  1344  009729  0C25               	dw	3109
  1345  00972B  0C51               	dw	3153
  1346  00972D  0C7E               	dw	3198
  1347  00972F  0CAB               	dw	3243
  1348  009731  0CDA               	dw	3290
  1349  009733  0D0A               	dw	3338
  1350  009735  0D3B               	dw	3387
  1351  009737  0D6D               	dw	3437
  1352  009739  0DA0               	dw	3488
  1353  00973B  0DD4               	dw	3540
  1354  00973D  0E0A               	dw	3594
  1355  00973F  0E41               	dw	3649
  1356  009741  0E79               	dw	3705
  1357  009743  0EB3               	dw	3763
  1358  009745  0EEE               	dw	3822
  1359  009747  0F2A               	dw	3882
  1360  009749  0F68               	dw	3944
  1361  00974B  0FA8               	dw	4008
  1362  00974D  0FE9               	dw	4073
  1363  00974F  102C               	dw	4140
  1364  009751  1070               	dw	4208
  1365  009753  10B6               	dw	4278
  1366  009755  10FE               	dw	4350
  1367  009757  1148               	dw	4424
  1368  009759  1194               	dw	4500
  1369  00975B  11E2               	dw	4578
  1370  00975D  1232               	dw	4658
  1371  00975F  1285               	dw	4741
  1372  009761  12D9               	dw	4825
  1373  009763  1330               	dw	4912
  1374  009765  1389               	dw	5001
  1375  009767  13E5               	dw	5093
  1376  009769  1444               	dw	5188
  1377  00976B  14A5               	dw	5285
  1378  00976D  1509               	dw	5385
  1379  00976F  1570               	dw	5488
  1380  009771  15DA               	dw	5594
  1381  009773  1647               	dw	5703
  1382  009775  16B8               	dw	5816
  1383  009777  172B               	dw	5931
  1384  009779  17A3               	dw	6051
  1385  00977B  181E               	dw	6174
  1386  00977D  189D               	dw	6301
  1387  00977F  1921               	dw	6433
  1388  009781  19A8               	dw	6568
  1389  009783  1A34               	dw	6708
  1390  009785  1AC4               	dw	6852
  1391  009787  1B5A               	dw	7002
  1392  009789  1BF4               	dw	7156
  1393  00978B  1C94               	dw	7316
  1394  00978D  1D39               	dw	7481
  1395  00978F  1DE4               	dw	7652
  1396  009791  1E95               	dw	7829
  1397  009793  1F4C               	dw	8012
  1398  009795  200A               	dw	8202
  1399  009797  20CE               	dw	8398
  1400  009799  219A               	dw	8602
  1401  00979B  226E               	dw	8814
  1402  00979D  234A               	dw	9034
  1403  00979F  242E               	dw	9262
  1404  0097A1  251B               	dw	9499
  1405  0097A3  2612               	dw	9746
  1406  0097A5  2712               	dw	10002
  1407  0097A7  281D               	dw	10269
  1408  0097A9  2932               	dw	10546
  1409  0097AB  2A53               	dw	10835
  1410  0097AD  2B81               	dw	11137
  1411  0097AF  2CBB               	dw	11451
  1412  0097B1  2E03               	dw	11779
  1413  0097B3  2F5A               	dw	12122
  1414  0097B5  30C0               	dw	12480
  1415  0097B7  3236               	dw	12854
  1416  0097B9  33BD               	dw	13245
  1417  0097BB  3557               	dw	13655
  1418  0097BD  35F5               	dw	13813
  1419  0097BF  3661               	dw	13921
  1420  0097C1  36CD               	dw	14029
  1421  0097C3  373B               	dw	14139
  1422  0097C5  37AA               	dw	14250
  1423  0097C7  381B               	dw	14363
  1424  0097C9  388C               	dw	14476
  1425  0097CB  3900               	dw	14592
  1426  0097CD  3974               	dw	14708
  1427  0097CF  39EA               	dw	14826
  1428  0097D1  3A62               	dw	14946
  1429  0097D3  3ADB               	dw	15067
  1430  0097D5  3B55               	dw	15189
  1431  0097D7  3BD1               	dw	15313
  1432  0097D9  3C4E               	dw	15438
  1433  0097DB  3CCD               	dw	15565
  1434  0097DD  3D4E               	dw	15694
  1435  0097DF  3DD0               	dw	15824
  1436  0097E1  3E54               	dw	15956
  1437  0097E3  3EDA               	dw	16090
  1438  0097E5  3F61               	dw	16225
  1439  0097E7  3FEA               	dw	16362
  1440  0097E9  4074               	dw	16500
  1441  0097EB  4101               	dw	16641
  1442  0097ED  418F               	dw	16783
  1443  0097EF  421F               	dw	16927
  1444  0097F1  42B1               	dw	17073
  1445  0097F3  4345               	dw	17221
  1446  0097F5  43DB               	dw	17371
  1447  0097F7  4473               	dw	17523
  1448  0097F9  450D               	dw	17677
  1449  0097FB  45A9               	dw	17833
  1450  0097FD  4647               	dw	17991
  1451  0097FF  46E7               	dw	18151
  1452  009801  4789               	dw	18313
  1453  009803  482E               	dw	18478
  1454  009805  48D5               	dw	18645
  1455  009807  497E               	dw	18814
  1456  009809  4A29               	dw	18985
  1457  00980B  4AD7               	dw	19159
  1458  00980D  4B87               	dw	19335
  1459  00980F  4C3A               	dw	19514
  1460  009811  4CEF               	dw	19695
  1461  009813  4DA6               	dw	19878
  1462  009815  4E61               	dw	20065
  1463  009817  4F1E               	dw	20254
  1464  009819  4FDD               	dw	20445
  1465  00981B  50A0               	dw	20640
  1466  00981D  5165               	dw	20837
  1467  00981F  522D               	dw	21037
  1468  009821  52F8               	dw	21240
  1469  009823  53C6               	dw	21446
  1470  009825  5497               	dw	21655
  1471  009827  556B               	dw	21867
  1472  009829  5642               	dw	22082
  1473  00982B  571C               	dw	22300
  1474  00982D  57FA               	dw	22522
  1475  00982F                     __end_of_motor_steps_lookup:
  1476                           	opt stack 0
  1477  00982F                     _motor_postscaler_lookup:
  1478                           	opt stack 0
  1479  00982F  0C                 	db	12
  1480  009830  07                 	db	7
  1481  009831  05                 	db	5
  1482  009832  04                 	db	4
  1483  009833  04                 	db	4
  1484  009834  03                 	db	3
  1485  009835  03                 	db	3
  1486  009836  03                 	db	3
  1487  009837  02                 	db	2
  1488  009838  02                 	db	2
  1489  009839  02                 	db	2
  1490  00983A  02                 	db	2
  1491  00983B  02                 	db	2
  1492  00983C  02                 	db	2
  1493  00983D  01                 	db	1
  1494  00983E  01                 	db	1
  1495  00983F  01                 	db	1
  1496  009840  01                 	db	1
  1497  009841  01                 	db	1
  1498  009842  01                 	db	1
  1499  009843  01                 	db	1
  1500  009844  01                 	db	1
  1501  009845  01                 	db	1
  1502  009846  01                 	db	1
  1503  009847  01                 	db	1
  1504  009848  01                 	db	1
  1505  009849  01                 	db	1
  1506  00984A  01                 	db	1
  1507  00984B  01                 	db	1
  1508  00984C  01                 	db	1
  1509  00984D  01                 	db	1
  1510  00984E  01                 	db	1
  1511  00984F  01                 	db	1
  1512  009850  01                 	db	1
  1513  009851  01                 	db	1
  1514  009852  01                 	db	1
  1515  009853  01                 	db	1
  1516  009854  01                 	db	1
  1517  009855  01                 	db	1
  1518  009856  01                 	db	1
  1519  009857  01                 	db	1
  1520  009858  01                 	db	1
  1521  009859  01                 	db	1
  1522  00985A  01                 	db	1
  1523  00985B  01                 	db	1
  1524  00985C  01                 	db	1
  1525  00985D  01                 	db	1
  1526  00985E  01                 	db	1
  1527  00985F  01                 	db	1
  1528  009860  01                 	db	1
  1529  009861  01                 	db	1
  1530  009862  01                 	db	1
  1531  009863  01                 	db	1
  1532  009864  01                 	db	1
  1533  009865  01                 	db	1
  1534  009866  01                 	db	1
  1535  009867  01                 	db	1
  1536  009868  01                 	db	1
  1537  009869  01                 	db	1
  1538  00986A  01                 	db	1
  1539  00986B  01                 	db	1
  1540  00986C  01                 	db	1
  1541  00986D  01                 	db	1
  1542  00986E  01                 	db	1
  1543  00986F  01                 	db	1
  1544  009870  01                 	db	1
  1545  009871  01                 	db	1
  1546  009872  01                 	db	1
  1547  009873  01                 	db	1
  1548  009874  01                 	db	1
  1549  009875  01                 	db	1
  1550  009876  01                 	db	1
  1551  009877  01                 	db	1
  1552  009878  01                 	db	1
  1553  009879  01                 	db	1
  1554  00987A  01                 	db	1
  1555  00987B  01                 	db	1
  1556  00987C  01                 	db	1
  1557  00987D  01                 	db	1
  1558  00987E  01                 	db	1
  1559  00987F  01                 	db	1
  1560  009880  01                 	db	1
  1561  009881  01                 	db	1
  1562  009882  01                 	db	1
  1563  009883  01                 	db	1
  1564  009884  01                 	db	1
  1565  009885  01                 	db	1
  1566  009886  01                 	db	1
  1567  009887  01                 	db	1
  1568  009888  01                 	db	1
  1569  009889  01                 	db	1
  1570  00988A  00                 	db	0
  1571  00988B  00                 	db	0
  1572  00988C  00                 	db	0
  1573  00988D  00                 	db	0
  1574  00988E  00                 	db	0
  1575  00988F  00                 	db	0
  1576  009890  00                 	db	0
  1577  009891  00                 	db	0
  1578  009892  00                 	db	0
  1579  009893  00                 	db	0
  1580  009894  00                 	db	0
  1581  009895  00                 	db	0
  1582  009896  00                 	db	0
  1583  009897  00                 	db	0
  1584  009898  00                 	db	0
  1585  009899  00                 	db	0
  1586  00989A  00                 	db	0
  1587  00989B  00                 	db	0
  1588  00989C  00                 	db	0
  1589  00989D  00                 	db	0
  1590  00989E  00                 	db	0
  1591  00989F  00                 	db	0
  1592  0098A0  00                 	db	0
  1593  0098A1  00                 	db	0
  1594  0098A2  00                 	db	0
  1595  0098A3  00                 	db	0
  1596  0098A4  00                 	db	0
  1597  0098A5  00                 	db	0
  1598  0098A6  00                 	db	0
  1599  0098A7  00                 	db	0
  1600  0098A8  00                 	db	0
  1601  0098A9  00                 	db	0
  1602  0098AA  00                 	db	0
  1603  0098AB  00                 	db	0
  1604  0098AC  00                 	db	0
  1605  0098AD  00                 	db	0
  1606  0098AE  00                 	db	0
  1607  0098AF  00                 	db	0
  1608  0098B0  00                 	db	0
  1609  0098B1  00                 	db	0
  1610  0098B2  00                 	db	0
  1611  0098B3  00                 	db	0
  1612  0098B4  00                 	db	0
  1613  0098B5  00                 	db	0
  1614  0098B6  00                 	db	0
  1615  0098B7  00                 	db	0
  1616  0098B8  00                 	db	0
  1617  0098B9  00                 	db	0
  1618  0098BA  00                 	db	0
  1619  0098BB  00                 	db	0
  1620  0098BC  00                 	db	0
  1621  0098BD  00                 	db	0
  1622  0098BE  00                 	db	0
  1623  0098BF  00                 	db	0
  1624  0098C0  00                 	db	0
  1625  0098C1  00                 	db	0
  1626  0098C2  00                 	db	0
  1627  0098C3  00                 	db	0
  1628  0098C4  00                 	db	0
  1629  0098C5  00                 	db	0
  1630  0098C6  00                 	db	0
  1631  0098C7  00                 	db	0
  1632  0098C8  00                 	db	0
  1633  0098C9  00                 	db	0
  1634  0098CA  00                 	db	0
  1635  0098CB  00                 	db	0
  1636  0098CC  00                 	db	0
  1637  0098CD  00                 	db	0
  1638  0098CE  00                 	db	0
  1639  0098CF  00                 	db	0
  1640  0098D0  00                 	db	0
  1641  0098D1  00                 	db	0
  1642  0098D2  00                 	db	0
  1643  0098D3  00                 	db	0
  1644  0098D4  00                 	db	0
  1645  0098D5  00                 	db	0
  1646  0098D6  00                 	db	0
  1647  0098D7  00                 	db	0
  1648  0098D8  00                 	db	0
  1649  0098D9  00                 	db	0
  1650  0098DA  00                 	db	0
  1651  0098DB  00                 	db	0
  1652  0098DC  00                 	db	0
  1653  0098DD  00                 	db	0
  1654  0098DE  00                 	db	0
  1655  0098DF  00                 	db	0
  1656  0098E0  00                 	db	0
  1657  0098E1  00                 	db	0
  1658  0098E2  00                 	db	0
  1659  0098E3  00                 	db	0
  1660  0098E4  00                 	db	0
  1661  0098E5  00                 	db	0
  1662  0098E6  00                 	db	0
  1663  0098E7  00                 	db	0
  1664  0098E8  00                 	db	0
  1665  0098E9  00                 	db	0
  1666  0098EA  00                 	db	0
  1667  0098EB  00                 	db	0
  1668  0098EC  00                 	db	0
  1669  0098ED  00                 	db	0
  1670  0098EE  00                 	db	0
  1671  0098EF  00                 	db	0
  1672  0098F0  00                 	db	0
  1673  0098F1  00                 	db	0
  1674  0098F2  00                 	db	0
  1675  0098F3  00                 	db	0
  1676  0098F4  00                 	db	0
  1677  0098F5  00                 	db	0
  1678  0098F6  00                 	db	0
  1679  0098F7  00                 	db	0
  1680  0098F8  00                 	db	0
  1681  0098F9  00                 	db	0
  1682  0098FA  00                 	db	0
  1683  0098FB  00                 	db	0
  1684  0098FC  00                 	db	0
  1685  0098FD  00                 	db	0
  1686  0098FE  00                 	db	0
  1687  0098FF  00                 	db	0
  1688  009900  00                 	db	0
  1689  009901  00                 	db	0
  1690  009902  00                 	db	0
  1691  009903  00                 	db	0
  1692  009904  00                 	db	0
  1693  009905  00                 	db	0
  1694  009906  00                 	db	0
  1695  009907  00                 	db	0
  1696  009908  00                 	db	0
  1697  009909  00                 	db	0
  1698  00990A  00                 	db	0
  1699  00990B  00                 	db	0
  1700  00990C  00                 	db	0
  1701  00990D  00                 	db	0
  1702  00990E  00                 	db	0
  1703  00990F  00                 	db	0
  1704  009910  00                 	db	0
  1705  009911  00                 	db	0
  1706  009912  00                 	db	0
  1707  009913  00                 	db	0
  1708  009914  00                 	db	0
  1709  009915  00                 	db	0
  1710  009916  00                 	db	0
  1711  009917  00                 	db	0
  1712  009918  00                 	db	0
  1713  009919  00                 	db	0
  1714  00991A  00                 	db	0
  1715  00991B  00                 	db	0
  1716  00991C  00                 	db	0
  1717  00991D  00                 	db	0
  1718  00991E  00                 	db	0
  1719  00991F  00                 	db	0
  1720  009920  00                 	db	0
  1721  009921  00                 	db	0
  1722  009922  00                 	db	0
  1723  009923  00                 	db	0
  1724  009924  00                 	db	0
  1725  009925  00                 	db	0
  1726  009926  00                 	db	0
  1727  009927  00                 	db	0
  1728  009928  00                 	db	0
  1729  009929  00                 	db	0
  1730  00992A  00                 	db	0
  1731  00992B  00                 	db	0
  1732  00992C  00                 	db	0
  1733  00992D  00                 	db	0
  1734  00992E  00                 	db	0
  1735  00992F  00                 	db	0
  1736  009930  00                 	db	0
  1737  009931  00                 	db	0
  1738  009932  00                 	db	0
  1739  009933  00                 	db	0
  1740  009934  00                 	db	0
  1741  009935  00                 	db	0
  1742  009936  00                 	db	0
  1743  009937  00                 	db	0
  1744  009938  00                 	db	0
  1745  009939  00                 	db	0
  1746  00993A  00                 	db	0
  1747  00993B  00                 	db	0
  1748  00993C  00                 	db	0
  1749  00993D  00                 	db	0
  1750  00993E  00                 	db	0
  1751  00993F  00                 	db	0
  1752  009940  00                 	db	0
  1753  009941  00                 	db	0
  1754  009942  00                 	db	0
  1755  009943  00                 	db	0
  1756  009944  00                 	db	0
  1757  009945  00                 	db	0
  1758  009946  00                 	db	0
  1759  009947  00                 	db	0
  1760  009948  00                 	db	0
  1761  009949  00                 	db	0
  1762  00994A  00                 	db	0
  1763  00994B  00                 	db	0
  1764  00994C  00                 	db	0
  1765  00994D  00                 	db	0
  1766  00994E  00                 	db	0
  1767  00994F  00                 	db	0
  1768  009950  00                 	db	0
  1769  009951  00                 	db	0
  1770  009952  00                 	db	0
  1771  009953  00                 	db	0
  1772  009954  00                 	db	0
  1773  009955  00                 	db	0
  1774  009956  00                 	db	0
  1775  009957  00                 	db	0
  1776  009958  00                 	db	0
  1777  009959  00                 	db	0
  1778  00995A  00                 	db	0
  1779  00995B  00                 	db	0
  1780  00995C  00                 	db	0
  1781  00995D  00                 	db	0
  1782  00995E  00                 	db	0
  1783  00995F  00                 	db	0
  1784  009960  00                 	db	0
  1785  009961  00                 	db	0
  1786  009962  00                 	db	0
  1787  009963  00                 	db	0
  1788  009964  00                 	db	0
  1789  009965  00                 	db	0
  1790  009966  00                 	db	0
  1791  009967  00                 	db	0
  1792  009968  00                 	db	0
  1793  009969  00                 	db	0
  1794  00996A  00                 	db	0
  1795  00996B  00                 	db	0
  1796  00996C  00                 	db	0
  1797  00996D  00                 	db	0
  1798  00996E  00                 	db	0
  1799  00996F  00                 	db	0
  1800  009970  00                 	db	0
  1801  009971  00                 	db	0
  1802  009972  00                 	db	0
  1803  009973  00                 	db	0
  1804  009974  00                 	db	0
  1805  009975  00                 	db	0
  1806  009976  00                 	db	0
  1807  009977  00                 	db	0
  1808  009978  00                 	db	0
  1809  009979  00                 	db	0
  1810  00997A  00                 	db	0
  1811  00997B  00                 	db	0
  1812  00997C  00                 	db	0
  1813  00997D  00                 	db	0
  1814  00997E  00                 	db	0
  1815  00997F  00                 	db	0
  1816  009980  00                 	db	0
  1817  009981  00                 	db	0
  1818  009982  00                 	db	0
  1819  009983  00                 	db	0
  1820  009984  00                 	db	0
  1821  009985  00                 	db	0
  1822  009986  00                 	db	0
  1823  009987  00                 	db	0
  1824  009988  00                 	db	0
  1825  009989  00                 	db	0
  1826  00998A  00                 	db	0
  1827  00998B  00                 	db	0
  1828  00998C  00                 	db	0
  1829  00998D  00                 	db	0
  1830  00998E  00                 	db	0
  1831  00998F  00                 	db	0
  1832  009990  00                 	db	0
  1833  009991  00                 	db	0
  1834  009992  00                 	db	0
  1835  009993  00                 	db	0
  1836  009994  00                 	db	0
  1837  009995  00                 	db	0
  1838  009996  00                 	db	0
  1839  009997  00                 	db	0
  1840  009998  00                 	db	0
  1841  009999  00                 	db	0
  1842  00999A  00                 	db	0
  1843  00999B  00                 	db	0
  1844  00999C  00                 	db	0
  1845  00999D  00                 	db	0
  1846  00999E  00                 	db	0
  1847  00999F  00                 	db	0
  1848  0099A0  00                 	db	0
  1849  0099A1  00                 	db	0
  1850  0099A2  00                 	db	0
  1851  0099A3  00                 	db	0
  1852  0099A4  00                 	db	0
  1853  0099A5  00                 	db	0
  1854  0099A6  00                 	db	0
  1855  0099A7  00                 	db	0
  1856  0099A8  00                 	db	0
  1857  0099A9  00                 	db	0
  1858  0099AA  00                 	db	0
  1859  0099AB  00                 	db	0
  1860  0099AC  00                 	db	0
  1861  0099AD  00                 	db	0
  1862  0099AE  00                 	db	0
  1863  0099AF  00                 	db	0
  1864  0099B0  00                 	db	0
  1865  0099B1  00                 	db	0
  1866  0099B2  00                 	db	0
  1867  0099B3  00                 	db	0
  1868  0099B4  00                 	db	0
  1869  0099B5  00                 	db	0
  1870  0099B6  00                 	db	0
  1871  0099B7  00                 	db	0
  1872  0099B8  00                 	db	0
  1873  0099B9  00                 	db	0
  1874  0099BA  00                 	db	0
  1875  0099BB  00                 	db	0
  1876  0099BC  00                 	db	0
  1877  0099BD  00                 	db	0
  1878  0099BE  00                 	db	0
  1879  0099BF  00                 	db	0
  1880  0099C0  00                 	db	0
  1881  0099C1  00                 	db	0
  1882  0099C2  00                 	db	0
  1883  0099C3  00                 	db	0
  1884  0099C4  00                 	db	0
  1885  0099C5  00                 	db	0
  1886  0099C6  00                 	db	0
  1887  0099C7  00                 	db	0
  1888  0099C8  00                 	db	0
  1889  0099C9  00                 	db	0
  1890  0099CA  00                 	db	0
  1891  0099CB  00                 	db	0
  1892  0099CC  00                 	db	0
  1893  0099CD  00                 	db	0
  1894  0099CE  00                 	db	0
  1895  0099CF  00                 	db	0
  1896  0099D0  00                 	db	0
  1897  0099D1  00                 	db	0
  1898  0099D2  00                 	db	0
  1899  0099D3  00                 	db	0
  1900  0099D4  00                 	db	0
  1901  0099D5  00                 	db	0
  1902  0099D6  00                 	db	0
  1903  0099D7  00                 	db	0
  1904  0099D8  00                 	db	0
  1905  0099D9  00                 	db	0
  1906  0099DA  00                 	db	0
  1907  0099DB  00                 	db	0
  1908  0099DC  00                 	db	0
  1909  0099DD  00                 	db	0
  1910  0099DE  00                 	db	0
  1911  0099DF  00                 	db	0
  1912  0099E0  00                 	db	0
  1913  0099E1  00                 	db	0
  1914  0099E2  00                 	db	0
  1915  0099E3  00                 	db	0
  1916  0099E4  00                 	db	0
  1917  0099E5  00                 	db	0
  1918  0099E6  00                 	db	0
  1919  0099E7  00                 	db	0
  1920  0099E8  00                 	db	0
  1921  0099E9  00                 	db	0
  1922  0099EA  00                 	db	0
  1923  0099EB  00                 	db	0
  1924  0099EC  00                 	db	0
  1925  0099ED  00                 	db	0
  1926  0099EE  00                 	db	0
  1927  0099EF  00                 	db	0
  1928  0099F0  00                 	db	0
  1929  0099F1  00                 	db	0
  1930  0099F2  00                 	db	0
  1931  0099F3  00                 	db	0
  1932  0099F4  00                 	db	0
  1933  0099F5  00                 	db	0
  1934  0099F6  00                 	db	0
  1935  0099F7  00                 	db	0
  1936  0099F8  00                 	db	0
  1937  0099F9  00                 	db	0
  1938  0099FA  00                 	db	0
  1939  0099FB  00                 	db	0
  1940  0099FC  00                 	db	0
  1941  0099FD  00                 	db	0
  1942  0099FE  00                 	db	0
  1943  0099FF  00                 	db	0
  1944  009A00  00                 	db	0
  1945  009A01  00                 	db	0
  1946  009A02  00                 	db	0
  1947  009A03  00                 	db	0
  1948  009A04  00                 	db	0
  1949  009A05  00                 	db	0
  1950  009A06  00                 	db	0
  1951  009A07  00                 	db	0
  1952  009A08  00                 	db	0
  1953  009A09  00                 	db	0
  1954  009A0A  00                 	db	0
  1955  009A0B  00                 	db	0
  1956  009A0C  00                 	db	0
  1957  009A0D  00                 	db	0
  1958  009A0E  00                 	db	0
  1959  009A0F  00                 	db	0
  1960  009A10  00                 	db	0
  1961  009A11  00                 	db	0
  1962  009A12  00                 	db	0
  1963  009A13  00                 	db	0
  1964  009A14  00                 	db	0
  1965  009A15  00                 	db	0
  1966  009A16                     __end_of_motor_postscaler_lookup:
  1967                           	opt stack 0
  1968  009A16                     _motor_period_lookup:
  1969                           	opt stack 0
  1970  009A16  EC                 	db	236
  1971  009A17  F2                 	db	242
  1972  009A18  F6                 	db	246
  1973  009A19  F4                 	db	244
  1974  009A1A  D2                 	db	210
  1975  009A1B  E8                 	db	232
  1976  009A1C  D2                 	db	210
  1977  009A1D  C0                 	db	192
  1978  009A1E  EC                 	db	236
  1979  009A1F  DC                 	db	220
  1980  009A20  CF                 	db	207
  1981  009A21  C3                 	db	195
  1982  009A22  B9                 	db	185
  1983  009A23  B0                 	db	176
  1984  009A24  FC                 	db	252
  1985  009A25  F2                 	db	242
  1986  009A26  E8                 	db	232
  1987  009A27  DF                 	db	223
  1988  009A28  D7                 	db	215
  1989  009A29  D0                 	db	208
  1990  009A2A  CA                 	db	202
  1991  009A2B  C3                 	db	195
  1992  009A2C  BE                 	db	190
  1993  009A2D  B8                 	db	184
  1994  009A2E  B3                 	db	179
  1995  009A2F  AF                 	db	175
  1996  009A30  AA                 	db	170
  1997  009A31  A6                 	db	166
  1998  009A32  A2                 	db	162
  1999  009A33  9F                 	db	159
  2000  009A34  9B                 	db	155
  2001  009A35  98                 	db	152
  2002  009A36  95                 	db	149
  2003  009A37  92                 	db	146
  2004  009A38  8F                 	db	143
  2005  009A39  8C                 	db	140
  2006  009A3A  8A                 	db	138
  2007  009A3B  87                 	db	135
  2008  009A3C  85                 	db	133
  2009  009A3D  83                 	db	131
  2010  009A3E  81                 	db	129
  2011  009A3F  7F                 	db	127
  2012  009A40  7D                 	db	125
  2013  009A41  7B                 	db	123
  2014  009A42  79                 	db	121
  2015  009A43  77                 	db	119
  2016  009A44  75                 	db	117
  2017  009A45  74                 	db	116
  2018  009A46  72                 	db	114
  2019  009A47  71                 	db	113
  2020  009A48  6F                 	db	111
  2021  009A49  6E                 	db	110
  2022  009A4A  6C                 	db	108
  2023  009A4B  6B                 	db	107
  2024  009A4C  6A                 	db	106
  2025  009A4D  68                 	db	104
  2026  009A4E  67                 	db	103
  2027  009A4F  66                 	db	102
  2028  009A50  65                 	db	101
  2029  009A51  64                 	db	100
  2030  009A52  62                 	db	98
  2031  009A53  61                 	db	97
  2032  009A54  60                 	db	96
  2033  009A55  5F                 	db	95
  2034  009A56  5E                 	db	94
  2035  009A57  5D                 	db	93
  2036  009A58  5C                 	db	92
  2037  009A59  5B                 	db	91
  2038  009A5A  59                 	db	89
  2039  009A5B  57                 	db	87
  2040  009A5C  56                 	db	86
  2041  009A5D  54                 	db	84
  2042  009A5E  53                 	db	83
  2043  009A5F  51                 	db	81
  2044  009A60  50                 	db	80
  2045  009A61  4F                 	db	79
  2046  009A62  4E                 	db	78
  2047  009A63  4C                 	db	76
  2048  009A64  4B                 	db	75
  2049  009A65  4A                 	db	74
  2050  009A66  49                 	db	73
  2051  009A67  48                 	db	72
  2052  009A68  47                 	db	71
  2053  009A69  46                 	db	70
  2054  009A6A  45                 	db	69
  2055  009A6B  44                 	db	68
  2056  009A6C  43                 	db	67
  2057  009A6D  42                 	db	66
  2058  009A6E  41                 	db	65
  2059  009A6F  40                 	db	64
  2060  009A70  3F                 	db	63
  2061  009A71  FE                 	db	254
  2062  009A72  FB                 	db	251
  2063  009A73  F8                 	db	248
  2064  009A74  F6                 	db	246
  2065  009A75  F3                 	db	243
  2066  009A76  F0                 	db	240
  2067  009A77  EE                 	db	238
  2068  009A78  EC                 	db	236
  2069  009A79  E9                 	db	233
  2070  009A7A  E7                 	db	231
  2071  009A7B  E5                 	db	229
  2072  009A7C  E3                 	db	227
  2073  009A7D  E0                 	db	224
  2074  009A7E  DE                 	db	222
  2075  009A7F  DC                 	db	220
  2076  009A80  DA                 	db	218
  2077  009A81  D8                 	db	216
  2078  009A82  D7                 	db	215
  2079  009A83  D5                 	db	213
  2080  009A84  D3                 	db	211
  2081  009A85  D1                 	db	209
  2082  009A86  CF                 	db	207
  2083  009A87  CE                 	db	206
  2084  009A88  CC                 	db	204
  2085  009A89  CA                 	db	202
  2086  009A8A  C9                 	db	201
  2087  009A8B  C7                 	db	199
  2088  009A8C  C6                 	db	198
  2089  009A8D  C4                 	db	196
  2090  009A8E  C3                 	db	195
  2091  009A8F  C1                 	db	193
  2092  009A90  C0                 	db	192
  2093  009A91  BE                 	db	190
  2094  009A92  BD                 	db	189
  2095  009A93  BC                 	db	188
  2096  009A94  BA                 	db	186
  2097  009A95  B8                 	db	184
  2098  009A96  B6                 	db	182
  2099  009A97  B4                 	db	180
  2100  009A98  B3                 	db	179
  2101  009A99  B1                 	db	177
  2102  009A9A  AF                 	db	175
  2103  009A9B  AE                 	db	174
  2104  009A9C  AC                 	db	172
  2105  009A9D  AA                 	db	170
  2106  009A9E  A9                 	db	169
  2107  009A9F  A7                 	db	167
  2108  009AA0  A6                 	db	166
  2109  009AA1  A4                 	db	164
  2110  009AA2  A3                 	db	163
  2111  009AA3  A1                 	db	161
  2112  009AA4  A0                 	db	160
  2113  009AA5  9F                 	db	159
  2114  009AA6  9D                 	db	157
  2115  009AA7  9C                 	db	156
  2116  009AA8  9B                 	db	155
  2117  009AA9  9A                 	db	154
  2118  009AAA  98                 	db	152
  2119  009AAB  97                 	db	151
  2120  009AAC  96                 	db	150
  2121  009AAD  95                 	db	149
  2122  009AAE  94                 	db	148
  2123  009AAF  93                 	db	147
  2124  009AB0  92                 	db	146
  2125  009AB1  90                 	db	144
  2126  009AB2  8F                 	db	143
  2127  009AB3  8E                 	db	142
  2128  009AB4  8D                 	db	141
  2129  009AB5  8C                 	db	140
  2130  009AB6  8B                 	db	139
  2131  009AB7  8A                 	db	138
  2132  009AB8  89                 	db	137
  2133  009AB9  88                 	db	136
  2134  009ABA  87                 	db	135
  2135  009ABB  86                 	db	134
  2136  009ABC  85                 	db	133
  2137  009ABD  84                 	db	132
  2138  009ABE  83                 	db	131
  2139  009ABF  82                 	db	130
  2140  009AC0  81                 	db	129
  2141  009AC1  80                 	db	128
  2142  009AC2  7F                 	db	127
  2143  009AC3  7E                 	db	126
  2144  009AC4  7D                 	db	125
  2145  009AC5  7C                 	db	124
  2146  009AC6  7B                 	db	123
  2147  009AC7  7A                 	db	122
  2148  009AC8  79                 	db	121
  2149  009AC9  78                 	db	120
  2150  009ACA  77                 	db	119
  2151  009ACB  76                 	db	118
  2152  009ACC  75                 	db	117
  2153  009ACD  74                 	db	116
  2154  009ACE  73                 	db	115
  2155  009ACF  72                 	db	114
  2156  009AD0  71                 	db	113
  2157  009AD1  70                 	db	112
  2158  009AD2  6F                 	db	111
  2159  009AD3  6E                 	db	110
  2160  009AD4  6D                 	db	109
  2161  009AD5  6C                 	db	108
  2162  009AD6  6B                 	db	107
  2163  009AD7  6A                 	db	106
  2164  009AD8  69                 	db	105
  2165  009AD9  68                 	db	104
  2166  009ADA  67                 	db	103
  2167  009ADB  66                 	db	102
  2168  009ADC  65                 	db	101
  2169  009ADD  64                 	db	100
  2170  009ADE  63                 	db	99
  2171  009ADF  62                 	db	98
  2172  009AE0  61                 	db	97
  2173  009AE1  60                 	db	96
  2174  009AE2  5F                 	db	95
  2175  009AE3  5E                 	db	94
  2176  009AE4  5D                 	db	93
  2177  009AE5  5C                 	db	92
  2178  009AE6  5B                 	db	91
  2179  009AE7  5A                 	db	90
  2180  009AE8  59                 	db	89
  2181  009AE9  58                 	db	88
  2182  009AEA  57                 	db	87
  2183  009AEB  56                 	db	86
  2184  009AEC  55                 	db	85
  2185  009AED  54                 	db	84
  2186  009AEE  53                 	db	83
  2187  009AEF  52                 	db	82
  2188  009AF0  51                 	db	81
  2189  009AF1  50                 	db	80
  2190  009AF2  4F                 	db	79
  2191  009AF3  4E                 	db	78
  2192  009AF4  4D                 	db	77
  2193  009AF5  4C                 	db	76
  2194  009AF6  4B                 	db	75
  2195  009AF7  4A                 	db	74
  2196  009AF8  49                 	db	73
  2197  009AF9  48                 	db	72
  2198  009AFA  47                 	db	71
  2199  009AFB  46                 	db	70
  2200  009AFC  45                 	db	69
  2201  009AFD  44                 	db	68
  2202  009AFE  43                 	db	67
  2203  009AFF  42                 	db	66
  2204  009B00  41                 	db	65
  2205  009B01  40                 	db	64
  2206  009B02  3F                 	db	63
  2207  009B03  FF                 	db	255
  2208  009B04  FE                 	db	254
  2209  009B05  FD                 	db	253
  2210  009B06  FC                 	db	252
  2211  009B07  FB                 	db	251
  2212  009B08  FA                 	db	250
  2213  009B09  F9                 	db	249
  2214  009B0A  F8                 	db	248
  2215  009B0B  F7                 	db	247
  2216  009B0C  F6                 	db	246
  2217  009B0D  F5                 	db	245
  2218  009B0E  F4                 	db	244
  2219  009B0F  F3                 	db	243
  2220  009B10  F2                 	db	242
  2221  009B11  F1                 	db	241
  2222  009B12  F0                 	db	240
  2223  009B13  EF                 	db	239
  2224  009B14  EE                 	db	238
  2225  009B15  ED                 	db	237
  2226  009B16  EC                 	db	236
  2227  009B17  EB                 	db	235
  2228  009B18  EA                 	db	234
  2229  009B19  E9                 	db	233
  2230  009B1A  E8                 	db	232
  2231  009B1B  E7                 	db	231
  2232  009B1C  E6                 	db	230
  2233  009B1D  E5                 	db	229
  2234  009B1E  E4                 	db	228
  2235  009B1F  E3                 	db	227
  2236  009B20  E2                 	db	226
  2237  009B21  E1                 	db	225
  2238  009B22  E0                 	db	224
  2239  009B23  DF                 	db	223
  2240  009B24  DE                 	db	222
  2241  009B25  DD                 	db	221
  2242  009B26  DC                 	db	220
  2243  009B27  DB                 	db	219
  2244  009B28  DA                 	db	218
  2245  009B29  D9                 	db	217
  2246  009B2A  D8                 	db	216
  2247  009B2B  D7                 	db	215
  2248  009B2C  D6                 	db	214
  2249  009B2D  D5                 	db	213
  2250  009B2E  D4                 	db	212
  2251  009B2F  D3                 	db	211
  2252  009B30  D2                 	db	210
  2253  009B31  D1                 	db	209
  2254  009B32  D0                 	db	208
  2255  009B33  CF                 	db	207
  2256  009B34  CE                 	db	206
  2257  009B35  CD                 	db	205
  2258  009B36  CC                 	db	204
  2259  009B37  CB                 	db	203
  2260  009B38  CA                 	db	202
  2261  009B39  C9                 	db	201
  2262  009B3A  C8                 	db	200
  2263  009B3B  C7                 	db	199
  2264  009B3C  C6                 	db	198
  2265  009B3D  C5                 	db	197
  2266  009B3E  C4                 	db	196
  2267  009B3F  C3                 	db	195
  2268  009B40  C2                 	db	194
  2269  009B41  C1                 	db	193
  2270  009B42  C0                 	db	192
  2271  009B43  BF                 	db	191
  2272  009B44  BE                 	db	190
  2273  009B45  BD                 	db	189
  2274  009B46  BC                 	db	188
  2275  009B47  BB                 	db	187
  2276  009B48  BA                 	db	186
  2277  009B49  B9                 	db	185
  2278  009B4A  B8                 	db	184
  2279  009B4B  B7                 	db	183
  2280  009B4C  B6                 	db	182
  2281  009B4D  B5                 	db	181
  2282  009B4E  B4                 	db	180
  2283  009B4F  B3                 	db	179
  2284  009B50  B2                 	db	178
  2285  009B51  B1                 	db	177
  2286  009B52  B0                 	db	176
  2287  009B53  AF                 	db	175
  2288  009B54  AE                 	db	174
  2289  009B55  AD                 	db	173
  2290  009B56  AC                 	db	172
  2291  009B57  AB                 	db	171
  2292  009B58  AA                 	db	170
  2293  009B59  A9                 	db	169
  2294  009B5A  A8                 	db	168
  2295  009B5B  A7                 	db	167
  2296  009B5C  A6                 	db	166
  2297  009B5D  A5                 	db	165
  2298  009B5E  A4                 	db	164
  2299  009B5F  A3                 	db	163
  2300  009B60  A2                 	db	162
  2301  009B61  A1                 	db	161
  2302  009B62  A0                 	db	160
  2303  009B63  9F                 	db	159
  2304  009B64  9E                 	db	158
  2305  009B65  9D                 	db	157
  2306  009B66  9C                 	db	156
  2307  009B67  9B                 	db	155
  2308  009B68  9A                 	db	154
  2309  009B69  99                 	db	153
  2310  009B6A  98                 	db	152
  2311  009B6B  97                 	db	151
  2312  009B6C  96                 	db	150
  2313  009B6D  95                 	db	149
  2314  009B6E  94                 	db	148
  2315  009B6F  93                 	db	147
  2316  009B70  92                 	db	146
  2317  009B71  91                 	db	145
  2318  009B72  90                 	db	144
  2319  009B73  8F                 	db	143
  2320  009B74  8E                 	db	142
  2321  009B75  8D                 	db	141
  2322  009B76  8C                 	db	140
  2323  009B77  8B                 	db	139
  2324  009B78  8A                 	db	138
  2325  009B79  89                 	db	137
  2326  009B7A  88                 	db	136
  2327  009B7B  87                 	db	135
  2328  009B7C  86                 	db	134
  2329  009B7D  85                 	db	133
  2330  009B7E  84                 	db	132
  2331  009B7F  83                 	db	131
  2332  009B80  82                 	db	130
  2333  009B81  81                 	db	129
  2334  009B82  80                 	db	128
  2335  009B83  7F                 	db	127
  2336  009B84  7E                 	db	126
  2337  009B85  7D                 	db	125
  2338  009B86  7C                 	db	124
  2339  009B87  7B                 	db	123
  2340  009B88  7A                 	db	122
  2341  009B89  79                 	db	121
  2342  009B8A  78                 	db	120
  2343  009B8B  77                 	db	119
  2344  009B8C  76                 	db	118
  2345  009B8D  75                 	db	117
  2346  009B8E  74                 	db	116
  2347  009B8F  73                 	db	115
  2348  009B90  72                 	db	114
  2349  009B91  71                 	db	113
  2350  009B92  70                 	db	112
  2351  009B93  6F                 	db	111
  2352  009B94  6E                 	db	110
  2353  009B95  6D                 	db	109
  2354  009B96  6C                 	db	108
  2355  009B97  6B                 	db	107
  2356  009B98  6A                 	db	106
  2357  009B99  69                 	db	105
  2358  009B9A  68                 	db	104
  2359  009B9B  67                 	db	103
  2360  009B9C  66                 	db	102
  2361  009B9D  65                 	db	101
  2362  009B9E  64                 	db	100
  2363  009B9F  63                 	db	99
  2364  009BA0  62                 	db	98
  2365  009BA1  61                 	db	97
  2366  009BA2  60                 	db	96
  2367  009BA3  5F                 	db	95
  2368  009BA4  5E                 	db	94
  2369  009BA5  5D                 	db	93
  2370  009BA6  5C                 	db	92
  2371  009BA7  5B                 	db	91
  2372  009BA8  5A                 	db	90
  2373  009BA9  59                 	db	89
  2374  009BAA  58                 	db	88
  2375  009BAB  57                 	db	87
  2376  009BAC  56                 	db	86
  2377  009BAD  55                 	db	85
  2378  009BAE  54                 	db	84
  2379  009BAF  53                 	db	83
  2380  009BB0  52                 	db	82
  2381  009BB1  51                 	db	81
  2382  009BB2  50                 	db	80
  2383  009BB3  4F                 	db	79
  2384  009BB4  4E                 	db	78
  2385  009BB5  4D                 	db	77
  2386  009BB6  4C                 	db	76
  2387  009BB7  4B                 	db	75
  2388  009BB8  4A                 	db	74
  2389  009BB9  49                 	db	73
  2390  009BBA  48                 	db	72
  2391  009BBB  47                 	db	71
  2392  009BBC  46                 	db	70
  2393  009BBD  45                 	db	69
  2394  009BBE  44                 	db	68
  2395  009BBF  43                 	db	67
  2396  009BC0  42                 	db	66
  2397  009BC1  41                 	db	65
  2398  009BC2  40                 	db	64
  2399  009BC3  3F                 	db	63
  2400  009BC4  FF                 	db	255
  2401  009BC5  FE                 	db	254
  2402  009BC6  FD                 	db	253
  2403  009BC7  FC                 	db	252
  2404  009BC8  FB                 	db	251
  2405  009BC9  FA                 	db	250
  2406  009BCA  F9                 	db	249
  2407  009BCB  F8                 	db	248
  2408  009BCC  F7                 	db	247
  2409  009BCD  F6                 	db	246
  2410  009BCE  F5                 	db	245
  2411  009BCF  F4                 	db	244
  2412  009BD0  F3                 	db	243
  2413  009BD1  F2                 	db	242
  2414  009BD2  F1                 	db	241
  2415  009BD3  F0                 	db	240
  2416  009BD4  EF                 	db	239
  2417  009BD5  EE                 	db	238
  2418  009BD6  ED                 	db	237
  2419  009BD7  EC                 	db	236
  2420  009BD8  EB                 	db	235
  2421  009BD9  EA                 	db	234
  2422  009BDA  E9                 	db	233
  2423  009BDB  E8                 	db	232
  2424  009BDC  E7                 	db	231
  2425  009BDD  E6                 	db	230
  2426  009BDE  E5                 	db	229
  2427  009BDF  E4                 	db	228
  2428  009BE0  E3                 	db	227
  2429  009BE1  E2                 	db	226
  2430  009BE2  E1                 	db	225
  2431  009BE3  E0                 	db	224
  2432  009BE4  DF                 	db	223
  2433  009BE5  DE                 	db	222
  2434  009BE6  DD                 	db	221
  2435  009BE7  DC                 	db	220
  2436  009BE8  DB                 	db	219
  2437  009BE9  DA                 	db	218
  2438  009BEA  D9                 	db	217
  2439  009BEB  D8                 	db	216
  2440  009BEC  D7                 	db	215
  2441  009BED  D6                 	db	214
  2442  009BEE  D5                 	db	213
  2443  009BEF  D4                 	db	212
  2444  009BF0  D3                 	db	211
  2445  009BF1  D2                 	db	210
  2446  009BF2  D1                 	db	209
  2447  009BF3  D0                 	db	208
  2448  009BF4  CF                 	db	207
  2449  009BF5  CE                 	db	206
  2450  009BF6  CD                 	db	205
  2451  009BF7  CC                 	db	204
  2452  009BF8  CB                 	db	203
  2453  009BF9  CA                 	db	202
  2454  009BFA  C9                 	db	201
  2455  009BFB  C8                 	db	200
  2456  009BFC  C7                 	db	199
  2457  009BFD                     __end_of_motor_period_lookup:
  2458                           	opt stack 0
  2459  009BFD                     _motor_prescaler_lookup:
  2460                           	opt stack 0
  2461  009BFD  02                 	db	2
  2462  009BFE  02                 	db	2
  2463  009BFF  02                 	db	2
  2464  009C00  02                 	db	2
  2465  009C01  02                 	db	2
  2466  009C02  02                 	db	2
  2467  009C03  02                 	db	2
  2468  009C04  02                 	db	2
  2469  009C05  02                 	db	2
  2470  009C06  02                 	db	2
  2471  009C07  02                 	db	2
  2472  009C08  02                 	db	2
  2473  009C09  02                 	db	2
  2474  009C0A  02                 	db	2
  2475  009C0B  02                 	db	2
  2476  009C0C  02                 	db	2
  2477  009C0D  02                 	db	2
  2478  009C0E  02                 	db	2
  2479  009C0F  02                 	db	2
  2480  009C10  02                 	db	2
  2481  009C11  02                 	db	2
  2482  009C12  02                 	db	2
  2483  009C13  02                 	db	2
  2484  009C14  02                 	db	2
  2485  009C15  02                 	db	2
  2486  009C16  02                 	db	2
  2487  009C17  02                 	db	2
  2488  009C18  02                 	db	2
  2489  009C19  02                 	db	2
  2490  009C1A  02                 	db	2
  2491  009C1B  02                 	db	2
  2492  009C1C  02                 	db	2
  2493  009C1D  02                 	db	2
  2494  009C1E  02                 	db	2
  2495  009C1F  02                 	db	2
  2496  009C20  02                 	db	2
  2497  009C21  02                 	db	2
  2498  009C22  02                 	db	2
  2499  009C23  02                 	db	2
  2500  009C24  02                 	db	2
  2501  009C25  02                 	db	2
  2502  009C26  02                 	db	2
  2503  009C27  02                 	db	2
  2504  009C28  02                 	db	2
  2505  009C29  02                 	db	2
  2506  009C2A  02                 	db	2
  2507  009C2B  02                 	db	2
  2508  009C2C  02                 	db	2
  2509  009C2D  02                 	db	2
  2510  009C2E  02                 	db	2
  2511  009C2F  02                 	db	2
  2512  009C30  02                 	db	2
  2513  009C31  02                 	db	2
  2514  009C32  02                 	db	2
  2515  009C33  02                 	db	2
  2516  009C34  02                 	db	2
  2517  009C35  02                 	db	2
  2518  009C36  02                 	db	2
  2519  009C37  02                 	db	2
  2520  009C38  02                 	db	2
  2521  009C39  02                 	db	2
  2522  009C3A  02                 	db	2
  2523  009C3B  02                 	db	2
  2524  009C3C  02                 	db	2
  2525  009C3D  02                 	db	2
  2526  009C3E  02                 	db	2
  2527  009C3F  02                 	db	2
  2528  009C40  02                 	db	2
  2529  009C41  02                 	db	2
  2530  009C42  02                 	db	2
  2531  009C43  02                 	db	2
  2532  009C44  02                 	db	2
  2533  009C45  02                 	db	2
  2534  009C46  02                 	db	2
  2535  009C47  02                 	db	2
  2536  009C48  02                 	db	2
  2537  009C49  02                 	db	2
  2538  009C4A  02                 	db	2
  2539  009C4B  02                 	db	2
  2540  009C4C  02                 	db	2
  2541  009C4D  02                 	db	2
  2542  009C4E  02                 	db	2
  2543  009C4F  02                 	db	2
  2544  009C50  02                 	db	2
  2545  009C51  02                 	db	2
  2546  009C52  02                 	db	2
  2547  009C53  02                 	db	2
  2548  009C54  02                 	db	2
  2549  009C55  02                 	db	2
  2550  009C56  02                 	db	2
  2551  009C57  02                 	db	2
  2552  009C58  02                 	db	2
  2553  009C59  02                 	db	2
  2554  009C5A  02                 	db	2
  2555  009C5B  02                 	db	2
  2556  009C5C  02                 	db	2
  2557  009C5D  02                 	db	2
  2558  009C5E  02                 	db	2
  2559  009C5F  02                 	db	2
  2560  009C60  02                 	db	2
  2561  009C61  02                 	db	2
  2562  009C62  02                 	db	2
  2563  009C63  02                 	db	2
  2564  009C64  02                 	db	2
  2565  009C65  02                 	db	2
  2566  009C66  02                 	db	2
  2567  009C67  02                 	db	2
  2568  009C68  02                 	db	2
  2569  009C69  02                 	db	2
  2570  009C6A  02                 	db	2
  2571  009C6B  02                 	db	2
  2572  009C6C  02                 	db	2
  2573  009C6D  02                 	db	2
  2574  009C6E  02                 	db	2
  2575  009C6F  02                 	db	2
  2576  009C70  02                 	db	2
  2577  009C71  02                 	db	2
  2578  009C72  02                 	db	2
  2579  009C73  02                 	db	2
  2580  009C74  02                 	db	2
  2581  009C75  02                 	db	2
  2582  009C76  02                 	db	2
  2583  009C77  02                 	db	2
  2584  009C78  02                 	db	2
  2585  009C79  02                 	db	2
  2586  009C7A  02                 	db	2
  2587  009C7B  02                 	db	2
  2588  009C7C  02                 	db	2
  2589  009C7D  02                 	db	2
  2590  009C7E  02                 	db	2
  2591  009C7F  02                 	db	2
  2592  009C80  02                 	db	2
  2593  009C81  02                 	db	2
  2594  009C82  02                 	db	2
  2595  009C83  02                 	db	2
  2596  009C84  02                 	db	2
  2597  009C85  02                 	db	2
  2598  009C86  02                 	db	2
  2599  009C87  02                 	db	2
  2600  009C88  02                 	db	2
  2601  009C89  02                 	db	2
  2602  009C8A  02                 	db	2
  2603  009C8B  02                 	db	2
  2604  009C8C  02                 	db	2
  2605  009C8D  02                 	db	2
  2606  009C8E  02                 	db	2
  2607  009C8F  02                 	db	2
  2608  009C90  02                 	db	2
  2609  009C91  02                 	db	2
  2610  009C92  02                 	db	2
  2611  009C93  02                 	db	2
  2612  009C94  02                 	db	2
  2613  009C95  02                 	db	2
  2614  009C96  02                 	db	2
  2615  009C97  02                 	db	2
  2616  009C98  02                 	db	2
  2617  009C99  02                 	db	2
  2618  009C9A  02                 	db	2
  2619  009C9B  02                 	db	2
  2620  009C9C  02                 	db	2
  2621  009C9D  02                 	db	2
  2622  009C9E  02                 	db	2
  2623  009C9F  02                 	db	2
  2624  009CA0  02                 	db	2
  2625  009CA1  02                 	db	2
  2626  009CA2  02                 	db	2
  2627  009CA3  02                 	db	2
  2628  009CA4  02                 	db	2
  2629  009CA5  02                 	db	2
  2630  009CA6  02                 	db	2
  2631  009CA7  02                 	db	2
  2632  009CA8  02                 	db	2
  2633  009CA9  02                 	db	2
  2634  009CAA  02                 	db	2
  2635  009CAB  02                 	db	2
  2636  009CAC  02                 	db	2
  2637  009CAD  02                 	db	2
  2638  009CAE  02                 	db	2
  2639  009CAF  02                 	db	2
  2640  009CB0  02                 	db	2
  2641  009CB1  02                 	db	2
  2642  009CB2  02                 	db	2
  2643  009CB3  02                 	db	2
  2644  009CB4  02                 	db	2
  2645  009CB5  02                 	db	2
  2646  009CB6  02                 	db	2
  2647  009CB7  02                 	db	2
  2648  009CB8  02                 	db	2
  2649  009CB9  02                 	db	2
  2650  009CBA  02                 	db	2
  2651  009CBB  02                 	db	2
  2652  009CBC  02                 	db	2
  2653  009CBD  02                 	db	2
  2654  009CBE  02                 	db	2
  2655  009CBF  02                 	db	2
  2656  009CC0  02                 	db	2
  2657  009CC1  02                 	db	2
  2658  009CC2  02                 	db	2
  2659  009CC3  02                 	db	2
  2660  009CC4  02                 	db	2
  2661  009CC5  02                 	db	2
  2662  009CC6  02                 	db	2
  2663  009CC7  02                 	db	2
  2664  009CC8  02                 	db	2
  2665  009CC9  02                 	db	2
  2666  009CCA  02                 	db	2
  2667  009CCB  02                 	db	2
  2668  009CCC  02                 	db	2
  2669  009CCD  02                 	db	2
  2670  009CCE  02                 	db	2
  2671  009CCF  02                 	db	2
  2672  009CD0  02                 	db	2
  2673  009CD1  02                 	db	2
  2674  009CD2  02                 	db	2
  2675  009CD3  02                 	db	2
  2676  009CD4  02                 	db	2
  2677  009CD5  02                 	db	2
  2678  009CD6  02                 	db	2
  2679  009CD7  02                 	db	2
  2680  009CD8  02                 	db	2
  2681  009CD9  02                 	db	2
  2682  009CDA  02                 	db	2
  2683  009CDB  02                 	db	2
  2684  009CDC  02                 	db	2
  2685  009CDD  02                 	db	2
  2686  009CDE  02                 	db	2
  2687  009CDF  02                 	db	2
  2688  009CE0  02                 	db	2
  2689  009CE1  02                 	db	2
  2690  009CE2  02                 	db	2
  2691  009CE3  02                 	db	2
  2692  009CE4  02                 	db	2
  2693  009CE5  02                 	db	2
  2694  009CE6  02                 	db	2
  2695  009CE7  02                 	db	2
  2696  009CE8  02                 	db	2
  2697  009CE9  02                 	db	2
  2698  009CEA  01                 	db	1
  2699  009CEB  01                 	db	1
  2700  009CEC  01                 	db	1
  2701  009CED  01                 	db	1
  2702  009CEE  01                 	db	1
  2703  009CEF  01                 	db	1
  2704  009CF0  01                 	db	1
  2705  009CF1  01                 	db	1
  2706  009CF2  01                 	db	1
  2707  009CF3  01                 	db	1
  2708  009CF4  01                 	db	1
  2709  009CF5  01                 	db	1
  2710  009CF6  01                 	db	1
  2711  009CF7  01                 	db	1
  2712  009CF8  01                 	db	1
  2713  009CF9  01                 	db	1
  2714  009CFA  01                 	db	1
  2715  009CFB  01                 	db	1
  2716  009CFC  01                 	db	1
  2717  009CFD  01                 	db	1
  2718  009CFE  01                 	db	1
  2719  009CFF  01                 	db	1
  2720  009D00  01                 	db	1
  2721  009D01  01                 	db	1
  2722  009D02  01                 	db	1
  2723  009D03  01                 	db	1
  2724  009D04  01                 	db	1
  2725  009D05  01                 	db	1
  2726  009D06  01                 	db	1
  2727  009D07  01                 	db	1
  2728  009D08  01                 	db	1
  2729  009D09  01                 	db	1
  2730  009D0A  01                 	db	1
  2731  009D0B  01                 	db	1
  2732  009D0C  01                 	db	1
  2733  009D0D  01                 	db	1
  2734  009D0E  01                 	db	1
  2735  009D0F  01                 	db	1
  2736  009D10  01                 	db	1
  2737  009D11  01                 	db	1
  2738  009D12  01                 	db	1
  2739  009D13  01                 	db	1
  2740  009D14  01                 	db	1
  2741  009D15  01                 	db	1
  2742  009D16  01                 	db	1
  2743  009D17  01                 	db	1
  2744  009D18  01                 	db	1
  2745  009D19  01                 	db	1
  2746  009D1A  01                 	db	1
  2747  009D1B  01                 	db	1
  2748  009D1C  01                 	db	1
  2749  009D1D  01                 	db	1
  2750  009D1E  01                 	db	1
  2751  009D1F  01                 	db	1
  2752  009D20  01                 	db	1
  2753  009D21  01                 	db	1
  2754  009D22  01                 	db	1
  2755  009D23  01                 	db	1
  2756  009D24  01                 	db	1
  2757  009D25  01                 	db	1
  2758  009D26  01                 	db	1
  2759  009D27  01                 	db	1
  2760  009D28  01                 	db	1
  2761  009D29  01                 	db	1
  2762  009D2A  01                 	db	1
  2763  009D2B  01                 	db	1
  2764  009D2C  01                 	db	1
  2765  009D2D  01                 	db	1
  2766  009D2E  01                 	db	1
  2767  009D2F  01                 	db	1
  2768  009D30  01                 	db	1
  2769  009D31  01                 	db	1
  2770  009D32  01                 	db	1
  2771  009D33  01                 	db	1
  2772  009D34  01                 	db	1
  2773  009D35  01                 	db	1
  2774  009D36  01                 	db	1
  2775  009D37  01                 	db	1
  2776  009D38  01                 	db	1
  2777  009D39  01                 	db	1
  2778  009D3A  01                 	db	1
  2779  009D3B  01                 	db	1
  2780  009D3C  01                 	db	1
  2781  009D3D  01                 	db	1
  2782  009D3E  01                 	db	1
  2783  009D3F  01                 	db	1
  2784  009D40  01                 	db	1
  2785  009D41  01                 	db	1
  2786  009D42  01                 	db	1
  2787  009D43  01                 	db	1
  2788  009D44  01                 	db	1
  2789  009D45  01                 	db	1
  2790  009D46  01                 	db	1
  2791  009D47  01                 	db	1
  2792  009D48  01                 	db	1
  2793  009D49  01                 	db	1
  2794  009D4A  01                 	db	1
  2795  009D4B  01                 	db	1
  2796  009D4C  01                 	db	1
  2797  009D4D  01                 	db	1
  2798  009D4E  01                 	db	1
  2799  009D4F  01                 	db	1
  2800  009D50  01                 	db	1
  2801  009D51  01                 	db	1
  2802  009D52  01                 	db	1
  2803  009D53  01                 	db	1
  2804  009D54  01                 	db	1
  2805  009D55  01                 	db	1
  2806  009D56  01                 	db	1
  2807  009D57  01                 	db	1
  2808  009D58  01                 	db	1
  2809  009D59  01                 	db	1
  2810  009D5A  01                 	db	1
  2811  009D5B  01                 	db	1
  2812  009D5C  01                 	db	1
  2813  009D5D  01                 	db	1
  2814  009D5E  01                 	db	1
  2815  009D5F  01                 	db	1
  2816  009D60  01                 	db	1
  2817  009D61  01                 	db	1
  2818  009D62  01                 	db	1
  2819  009D63  01                 	db	1
  2820  009D64  01                 	db	1
  2821  009D65  01                 	db	1
  2822  009D66  01                 	db	1
  2823  009D67  01                 	db	1
  2824  009D68  01                 	db	1
  2825  009D69  01                 	db	1
  2826  009D6A  01                 	db	1
  2827  009D6B  01                 	db	1
  2828  009D6C  01                 	db	1
  2829  009D6D  01                 	db	1
  2830  009D6E  01                 	db	1
  2831  009D6F  01                 	db	1
  2832  009D70  01                 	db	1
  2833  009D71  01                 	db	1
  2834  009D72  01                 	db	1
  2835  009D73  01                 	db	1
  2836  009D74  01                 	db	1
  2837  009D75  01                 	db	1
  2838  009D76  01                 	db	1
  2839  009D77  01                 	db	1
  2840  009D78  01                 	db	1
  2841  009D79  01                 	db	1
  2842  009D7A  01                 	db	1
  2843  009D7B  01                 	db	1
  2844  009D7C  01                 	db	1
  2845  009D7D  01                 	db	1
  2846  009D7E  01                 	db	1
  2847  009D7F  01                 	db	1
  2848  009D80  01                 	db	1
  2849  009D81  01                 	db	1
  2850  009D82  01                 	db	1
  2851  009D83  01                 	db	1
  2852  009D84  01                 	db	1
  2853  009D85  01                 	db	1
  2854  009D86  01                 	db	1
  2855  009D87  01                 	db	1
  2856  009D88  01                 	db	1
  2857  009D89  01                 	db	1
  2858  009D8A  01                 	db	1
  2859  009D8B  01                 	db	1
  2860  009D8C  01                 	db	1
  2861  009D8D  01                 	db	1
  2862  009D8E  01                 	db	1
  2863  009D8F  01                 	db	1
  2864  009D90  01                 	db	1
  2865  009D91  01                 	db	1
  2866  009D92  01                 	db	1
  2867  009D93  01                 	db	1
  2868  009D94  01                 	db	1
  2869  009D95  01                 	db	1
  2870  009D96  01                 	db	1
  2871  009D97  01                 	db	1
  2872  009D98  01                 	db	1
  2873  009D99  01                 	db	1
  2874  009D9A  01                 	db	1
  2875  009D9B  01                 	db	1
  2876  009D9C  01                 	db	1
  2877  009D9D  01                 	db	1
  2878  009D9E  01                 	db	1
  2879  009D9F  01                 	db	1
  2880  009DA0  01                 	db	1
  2881  009DA1  01                 	db	1
  2882  009DA2  01                 	db	1
  2883  009DA3  01                 	db	1
  2884  009DA4  01                 	db	1
  2885  009DA5  01                 	db	1
  2886  009DA6  01                 	db	1
  2887  009DA7  01                 	db	1
  2888  009DA8  01                 	db	1
  2889  009DA9  01                 	db	1
  2890  009DAA  01                 	db	1
  2891  009DAB  00                 	db	0
  2892  009DAC  00                 	db	0
  2893  009DAD  00                 	db	0
  2894  009DAE  00                 	db	0
  2895  009DAF  00                 	db	0
  2896  009DB0  00                 	db	0
  2897  009DB1  00                 	db	0
  2898  009DB2  00                 	db	0
  2899  009DB3  00                 	db	0
  2900  009DB4  00                 	db	0
  2901  009DB5  00                 	db	0
  2902  009DB6  00                 	db	0
  2903  009DB7  00                 	db	0
  2904  009DB8  00                 	db	0
  2905  009DB9  00                 	db	0
  2906  009DBA  00                 	db	0
  2907  009DBB  00                 	db	0
  2908  009DBC  00                 	db	0
  2909  009DBD  00                 	db	0
  2910  009DBE  00                 	db	0
  2911  009DBF  00                 	db	0
  2912  009DC0  00                 	db	0
  2913  009DC1  00                 	db	0
  2914  009DC2  00                 	db	0
  2915  009DC3  00                 	db	0
  2916  009DC4  00                 	db	0
  2917  009DC5  00                 	db	0
  2918  009DC6  00                 	db	0
  2919  009DC7  00                 	db	0
  2920  009DC8  00                 	db	0
  2921  009DC9  00                 	db	0
  2922  009DCA  00                 	db	0
  2923  009DCB  00                 	db	0
  2924  009DCC  00                 	db	0
  2925  009DCD  00                 	db	0
  2926  009DCE  00                 	db	0
  2927  009DCF  00                 	db	0
  2928  009DD0  00                 	db	0
  2929  009DD1  00                 	db	0
  2930  009DD2  00                 	db	0
  2931  009DD3  00                 	db	0
  2932  009DD4  00                 	db	0
  2933  009DD5  00                 	db	0
  2934  009DD6  00                 	db	0
  2935  009DD7  00                 	db	0
  2936  009DD8  00                 	db	0
  2937  009DD9  00                 	db	0
  2938  009DDA  00                 	db	0
  2939  009DDB  00                 	db	0
  2940  009DDC  00                 	db	0
  2941  009DDD  00                 	db	0
  2942  009DDE  00                 	db	0
  2943  009DDF  00                 	db	0
  2944  009DE0  00                 	db	0
  2945  009DE1  00                 	db	0
  2946  009DE2  00                 	db	0
  2947  009DE3  00                 	db	0
  2948  009DE4                     __end_of_motor_prescaler_lookup:
  2949                           	opt stack 0
  2950  009DE4                     _USB_SD_Ptr:
  2951                           	opt stack 0
  2952  009DE4  FA                 	db	low _sd000
  2953  009DE5  A2                 	db	high _sd000
  2954  009DE6  FE                 	db	low _sd001
  2955  009DE7  A0                 	db	high _sd001
  2956  009DE8  32                 	db	low _sd002
  2957  009DE9  A1                 	db	high _sd002
  2958  009DEA  A1                 	db	low _sd003
  2959  009DEB  A1                 	db	high _sd003
  2960  009DEC                     __end_of_USB_SD_Ptr:
  2961                           	opt stack 0
  2962  009DEC                     _USB_CD_Ptr:
  2963                           	opt stack 0
  2964  009DEC  BE                 	db	low _configDescriptor1
  2965  009DED  A0                 	db	high _configDescriptor1
  2966  009DEE                     __end_of_USB_CD_Ptr:
  2967                           	opt stack 0
  2968  009DEE                     _dc_manual:
  2969                           	opt stack 0
  2970  009DEE  4D                 	db	77
  2971  009DEF  61                 	db	97
  2972  009DF0  6E                 	db	110
  2973  009DF1  75                 	db	117
  2974  009DF2  61                 	db	97
  2975  009DF3  6C                 	db	108
  2976  009DF4  20                 	db	32
  2977  009DF5  4D                 	db	77
  2978  009DF6  6F                 	db	111
  2979  009DF7  64                 	db	100
  2980  009DF8  65                 	db	101
  2981  009DF9  20                 	db	32
  2982  009DFA  20                 	db	32
  2983  009DFB  20                 	db	32
  2984  009DFC  20                 	db	32
  2985  009DFD  20                 	db	32
  2986  009DFE  20                 	db	32
  2987  009DFF  20                 	db	32
  2988  009E00  20                 	db	32
  2989  009E01  20                 	db	32
  2990  009E02  43                 	db	67
  2991  009E03  75                 	db	117
  2992  009E04  72                 	db	114
  2993  009E05  72                 	db	114
  2994  009E06  65                 	db	101
  2995  009E07  6E                 	db	110
  2996  009E08  74                 	db	116
  2997  009E09  20                 	db	32
  2998  009E0A  70                 	db	112
  2999  009E0B  6F                 	db	111
  3000  009E0C  73                 	db	115
  3001  009E0D  3A                 	db	58
  3002  009E0E  20                 	db	32
  3003  009E0F  20                 	db	32
  3004  009E10  20                 	db	32
  3005  009E11  20                 	db	32
  3006  009E12  20                 	db	32
  3007  009E13  20                 	db	32
  3008  009E14  20                 	db	32
  3009  009E15  01                 	db	1
  3010  009E16  54                 	db	84
  3011  009E17  75                 	db	117
  3012  009E18  72                 	db	114
  3013  009E19  6E                 	db	110
  3014  009E1A  20                 	db	32
  3015  009E1B  43                 	db	67
  3016  009E1C  43                 	db	67
  3017  009E1D  57                 	db	87
  3018  009E1E  20                 	db	32
  3019  009E1F  00                 	db	0
  3020  009E20  20                 	db	32
  3021  009E21  53                 	db	83
  3022  009E22  70                 	db	112
  3023  009E23  65                 	db	101
  3024  009E24  65                 	db	101
  3025  009E25  64                 	db	100
  3026  009E26  20                 	db	32
  3027  009E27  20                 	db	32
  3028  009E28  20                 	db	32
  3029  009E29  20                 	db	32
  3030  009E2A  53                 	db	83
  3031  009E2B  74                 	db	116
  3032  009E2C  61                 	db	97
  3033  009E2D  72                 	db	114
  3034  009E2E  74                 	db	116
  3035  009E2F  20                 	db	32
  3036  009E30  20                 	db	32
  3037  009E31  20                 	db	32
  3038  009E32  20                 	db	32
  3039  009E33  00                 	db	0
  3040  009E34  20                 	db	32
  3041  009E35  20                 	db	32
  3042  009E36  20                 	db	32
  3043  009E37  20                 	db	32
  3044  009E38  20                 	db	32
  3045  009E39  20                 	db	32
  3046  009E3A  20                 	db	32
  3047  009E3B  20                 	db	32
  3048  009E3C  20                 	db	32
  3049  009E3D  20                 	db	32
  3050  009E3E                     __end_of_dc_manual:
  3051                           	opt stack 0
  3052  009E3E                     _dc_zero:
  3053                           	opt stack 0
  3054  009E3E  52                 	db	82
  3055  009E3F  65                 	db	101
  3056  009E40  74                 	db	116
  3057  009E41  75                 	db	117
  3058  009E42  72                 	db	114
  3059  009E43  6E                 	db	110
  3060  009E44  20                 	db	32
  3061  009E45  74                 	db	116
  3062  009E46  6F                 	db	111
  3063  009E47  20                 	db	32
  3064  009E48  5A                 	db	90
  3065  009E49  65                 	db	101
  3066  009E4A  72                 	db	114
  3067  009E4B  6F                 	db	111
  3068  009E4C  3F                 	db	63
  3069  009E4D  20                 	db	32
  3070  009E4E  20                 	db	32
  3071  009E4F  20                 	db	32
  3072  009E50  20                 	db	32
  3073  009E51  20                 	db	32
  3074  009E52  43                 	db	67
  3075  009E53  75                 	db	117
  3076  009E54  72                 	db	114
  3077  009E55  72                 	db	114
  3078  009E56  65                 	db	101
  3079  009E57  6E                 	db	110
  3080  009E58  74                 	db	116
  3081  009E59  20                 	db	32
  3082  009E5A  70                 	db	112
  3083  009E5B  6F                 	db	111
  3084  009E5C  73                 	db	115
  3085  009E5D  3A                 	db	58
  3086  009E5E  20                 	db	32
  3087  009E5F  20                 	db	32
  3088  009E60  20                 	db	32
  3089  009E61  20                 	db	32
  3090  009E62  20                 	db	32
  3091  009E63  20                 	db	32
  3092  009E64  20                 	db	32
  3093  009E65  20                 	db	32
  3094  009E66  20                 	db	32
  3095  009E67  20                 	db	32
  3096  009E68  20                 	db	32
  3097  009E69  20                 	db	32
  3098  009E6A  20                 	db	32
  3099  009E6B  20                 	db	32
  3100  009E6C  20                 	db	32
  3101  009E6D  20                 	db	32
  3102  009E6E  20                 	db	32
  3103  009E6F  20                 	db	32
  3104  009E70  20                 	db	32
  3105  009E71  20                 	db	32
  3106  009E72  20                 	db	32
  3107  009E73  20                 	db	32
  3108  009E74  20                 	db	32
  3109  009E75  20                 	db	32
  3110  009E76  20                 	db	32
  3111  009E77  20                 	db	32
  3112  009E78  20                 	db	32
  3113  009E79  20                 	db	32
  3114  009E7A  20                 	db	32
  3115  009E7B  59                 	db	89
  3116  009E7C  65                 	db	101
  3117  009E7D  73                 	db	115
  3118  009E7E  20                 	db	32
  3119  009E7F  20                 	db	32
  3120  009E80  20                 	db	32
  3121  009E81  20                 	db	32
  3122  009E82  20                 	db	32
  3123  009E83  20                 	db	32
  3124  009E84  20                 	db	32
  3125  009E85  20                 	db	32
  3126  009E86  20                 	db	32
  3127  009E87  20                 	db	32
  3128  009E88  20                 	db	32
  3129  009E89  20                 	db	32
  3130  009E8A  4E                 	db	78
  3131  009E8B  6F                 	db	111
  3132  009E8C  20                 	db	32
  3133  009E8D  20                 	db	32
  3134  009E8E                     __end_of_dc_zero:
  3135                           	opt stack 0
  3136  009E8E                     _dc_arc2:
  3137                           	opt stack 0
  3138  009E8E  41                 	db	65
  3139  009E8F  72                 	db	114
  3140  009E90  63                 	db	99
  3141  009E91  3A                 	db	58
  3142  009E92  20                 	db	32
  3143  009E93  53                 	db	83
  3144  009E94  69                 	db	105
  3145  009E95  7A                 	db	122
  3146  009E96  65                 	db	101
  3147  009E97  3D                 	db	61
  3148  009E98  20                 	db	32
  3149  009E99  20                 	db	32
  3150  009E9A  20                 	db	32
  3151  009E9B  20                 	db	32
  3152  009E9C  20                 	db	32
  3153  009E9D  20                 	db	32
  3154  009E9E  20                 	db	32
  3155  009E9F  20                 	db	32
  3156  009EA0  20                 	db	32
  3157  009EA1  20                 	db	32
  3158  009EA2  43                 	db	67
  3159  009EA3  75                 	db	117
  3160  009EA4  72                 	db	114
  3161  009EA5  72                 	db	114
  3162  009EA6  65                 	db	101
  3163  009EA7  6E                 	db	110
  3164  009EA8  74                 	db	116
  3165  009EA9  20                 	db	32
  3166  009EAA  70                 	db	112
  3167  009EAB  6F                 	db	111
  3168  009EAC  73                 	db	115
  3169  009EAD  3A                 	db	58
  3170  009EAE  20                 	db	32
  3171  009EAF  20                 	db	32
  3172  009EB0  20                 	db	32
  3173  009EB1  20                 	db	32
  3174  009EB2  20                 	db	32
  3175  009EB3  20                 	db	32
  3176  009EB4  20                 	db	32
  3177  009EB5  01                 	db	1
  3178  009EB6  54                 	db	84
  3179  009EB7  75                 	db	117
  3180  009EB8  72                 	db	114
  3181  009EB9  6E                 	db	110
  3182  009EBA  20                 	db	32
  3183  009EBB  43                 	db	67
  3184  009EBC  43                 	db	67
  3185  009EBD  57                 	db	87
  3186  009EBE  20                 	db	32
  3187  009EBF  00                 	db	0
  3188  009EC0  20                 	db	32
  3189  009EC1  53                 	db	83
  3190  009EC2  70                 	db	112
  3191  009EC3  65                 	db	101
  3192  009EC4  65                 	db	101
  3193  009EC5  64                 	db	100
  3194  009EC6  20                 	db	32
  3195  009EC7  20                 	db	32
  3196  009EC8  20                 	db	32
  3197  009EC9  20                 	db	32
  3198  009ECA  53                 	db	83
  3199  009ECB  74                 	db	116
  3200  009ECC  61                 	db	97
  3201  009ECD  72                 	db	114
  3202  009ECE  74                 	db	116
  3203  009ECF  20                 	db	32
  3204  009ED0  20                 	db	32
  3205  009ED1  20                 	db	32
  3206  009ED2  20                 	db	32
  3207  009ED3  00                 	db	0
  3208  009ED4  20                 	db	32
  3209  009ED5  20                 	db	32
  3210  009ED6  20                 	db	32
  3211  009ED7  20                 	db	32
  3212  009ED8  20                 	db	32
  3213  009ED9  20                 	db	32
  3214  009EDA  20                 	db	32
  3215  009EDB  20                 	db	32
  3216  009EDC  20                 	db	32
  3217  009EDD  20                 	db	32
  3218  009EDE                     __end_of_dc_arc2:
  3219                           	opt stack 0
  3220  009EDE                     _dc_arc1:
  3221                           	opt stack 0
  3222  009EDE  41                 	db	65
  3223  009EDF  72                 	db	114
  3224  009EE0  63                 	db	99
  3225  009EE1  3A                 	db	58
  3226  009EE2  20                 	db	32
  3227  009EE3  53                 	db	83
  3228  009EE4  65                 	db	101
  3229  009EE5  74                 	db	116
  3230  009EE6  20                 	db	32
  3231  009EE7  61                 	db	97
  3232  009EE8  72                 	db	114
  3233  009EE9  63                 	db	99
  3234  009EEA  20                 	db	32
  3235  009EEB  73                 	db	115
  3236  009EEC  69                 	db	105
  3237  009EED  7A                 	db	122
  3238  009EEE  65                 	db	101
  3239  009EEF  20                 	db	32
  3240  009EF0  20                 	db	32
  3241  009EF1  20                 	db	32
  3242  009EF2  41                 	db	65
  3243  009EF3  72                 	db	114
  3244  009EF4  63                 	db	99
  3245  009EF5  20                 	db	32
  3246  009EF6  73                 	db	115
  3247  009EF7  69                 	db	105
  3248  009EF8  7A                 	db	122
  3249  009EF9  65                 	db	101
  3250  009EFA  3A                 	db	58
  3251  009EFB  20                 	db	32
  3252  009EFC  20                 	db	32
  3253  009EFD  20                 	db	32
  3254  009EFE  20                 	db	32
  3255  009EFF  20                 	db	32
  3256  009F00  20                 	db	32
  3257  009F01  20                 	db	32
  3258  009F02  20                 	db	32
  3259  009F03  20                 	db	32
  3260  009F04  20                 	db	32
  3261  009F05  20                 	db	32
  3262  009F06  53                 	db	83
  3263  009F07  74                 	db	116
  3264  009F08  65                 	db	101
  3265  009F09  70                 	db	112
  3266  009F0A  20                 	db	32
  3267  009F0B  73                 	db	115
  3268  009F0C  69                 	db	105
  3269  009F0D  7A                 	db	122
  3270  009F0E  65                 	db	101
  3271  009F0F  20                 	db	32
  3272  009F10  00                 	db	0
  3273  009F11  20                 	db	32
  3274  009F12  20                 	db	32
  3275  009F13  43                 	db	67
  3276  009F14  6F                 	db	111
  3277  009F15  6E                 	db	110
  3278  009F16  66                 	db	102
  3279  009F17  69                 	db	105
  3280  009F18  72                 	db	114
  3281  009F19  6D                 	db	109
  3282  009F1A  20                 	db	32
  3283  009F1B  20                 	db	32
  3284  009F1C  20                 	db	32
  3285  009F1D  20                 	db	32
  3286  009F1E  20                 	db	32
  3287  009F1F  20                 	db	32
  3288  009F20  20                 	db	32
  3289  009F21  20                 	db	32
  3290  009F22  20                 	db	32
  3291  009F23  20                 	db	32
  3292  009F24  00                 	db	0
  3293  009F25  20                 	db	32
  3294  009F26  20                 	db	32
  3295  009F27  43                 	db	67
  3296  009F28  61                 	db	97
  3297  009F29  6E                 	db	110
  3298  009F2A  63                 	db	99
  3299  009F2B  65                 	db	101
  3300  009F2C  6C                 	db	108
  3301  009F2D  20                 	db	32
  3302  009F2E                     __end_of_dc_arc1:
  3303                           	opt stack 0
  3304  009F2E                     _dc_divide2:
  3305                           	opt stack 0
  3306  009F2E  44                 	db	68
  3307  009F2F  69                 	db	105
  3308  009F30  76                 	db	118
  3309  009F31  69                 	db	105
  3310  009F32  64                 	db	100
  3311  009F33  65                 	db	101
  3312  009F34  3A                 	db	58
  3313  009F35  20                 	db	32
  3314  009F36  20                 	db	32
  3315  009F37  20                 	db	32
  3316  009F38  20                 	db	32
  3317  009F39  20                 	db	32
  3318  009F3A  20                 	db	32
  3319  009F3B  20                 	db	32
  3320  009F3C  20                 	db	32
  3321  009F3D  20                 	db	32
  3322  009F3E  20                 	db	32
  3323  009F3F  20                 	db	32
  3324  009F40  20                 	db	32
  3325  009F41  20                 	db	32
  3326  009F42  50                 	db	80
  3327  009F43  6F                 	db	111
  3328  009F44  73                 	db	115
  3329  009F45  3A                 	db	58
  3330  009F46  20                 	db	32
  3331  009F47  20                 	db	32
  3332  009F48  20                 	db	32
  3333  009F49  20                 	db	32
  3334  009F4A  20                 	db	32
  3335  009F4B  20                 	db	32
  3336  009F4C  20                 	db	32
  3337  009F4D  20                 	db	32
  3338  009F4E  20                 	db	32
  3339  009F4F  20                 	db	32
  3340  009F50  20                 	db	32
  3341  009F51  20                 	db	32
  3342  009F52  20                 	db	32
  3343  009F53  20                 	db	32
  3344  009F54  20                 	db	32
  3345  009F55  20                 	db	32
  3346  009F56  4A                 	db	74
  3347  009F57  75                 	db	117
  3348  009F58  6D                 	db	109
  3349  009F59  70                 	db	112
  3350  009F5A  20                 	db	32
  3351  009F5B  73                 	db	115
  3352  009F5C  69                 	db	105
  3353  009F5D  7A                 	db	122
  3354  009F5E  65                 	db	101
  3355  009F5F  3A                 	db	58
  3356  009F60  20                 	db	32
  3357  009F61  20                 	db	32
  3358  009F62  20                 	db	32
  3359  009F63  20                 	db	32
  3360  009F64  20                 	db	32
  3361  009F65  20                 	db	32
  3362  009F66  20                 	db	32
  3363  009F67  20                 	db	32
  3364  009F68  20                 	db	32
  3365  009F69  20                 	db	32
  3366  009F6A  50                 	db	80
  3367  009F6B  72                 	db	114
  3368  009F6C  65                 	db	101
  3369  009F6D  73                 	db	115
  3370  009F6E  73                 	db	115
  3371  009F6F  54                 	db	84
  3372  009F70  6F                 	db	111
  3373  009F71  4A                 	db	74
  3374  009F72  75                 	db	117
  3375  009F73  6D                 	db	109
  3376  009F74  70                 	db	112
  3377  009F75  20                 	db	32
  3378  009F76  00                 	db	0
  3379  009F77  20                 	db	32
  3380  009F78  43                 	db	67
  3381  009F79  61                 	db	97
  3382  009F7A  6E                 	db	110
  3383  009F7B  63                 	db	99
  3384  009F7C  65                 	db	101
  3385  009F7D  6C                 	db	108
  3386  009F7E                     __end_of_dc_divide2:
  3387                           	opt stack 0
  3388  009F7E                     _dc_divide1:
  3389                           	opt stack 0
  3390  009F7E  44                 	db	68
  3391  009F7F  69                 	db	105
  3392  009F80  76                 	db	118
  3393  009F81  69                 	db	105
  3394  009F82  64                 	db	100
  3395  009F83  65                 	db	101
  3396  009F84  3A                 	db	58
  3397  009F85  20                 	db	32
  3398  009F86  53                 	db	83
  3399  009F87  65                 	db	101
  3400  009F88  74                 	db	116
  3401  009F89  20                 	db	32
  3402  009F8A  64                 	db	100
  3403  009F8B  69                 	db	105
  3404  009F8C  76                 	db	118
  3405  009F8D  69                 	db	105
  3406  009F8E  73                 	db	115
  3407  009F8F  69                 	db	105
  3408  009F90  6F                 	db	111
  3409  009F91  6E                 	db	110
  3410  009F92  20                 	db	32
  3411  009F93  20                 	db	32
  3412  009F94  20                 	db	32
  3413  009F95  20                 	db	32
  3414  009F96  20                 	db	32
  3415  009F97  20                 	db	32
  3416  009F98  20                 	db	32
  3417  009F99  20                 	db	32
  3418  009F9A  20                 	db	32
  3419  009F9B  20                 	db	32
  3420  009F9C  20                 	db	32
  3421  009F9D  20                 	db	32
  3422  009F9E  20                 	db	32
  3423  009F9F  20                 	db	32
  3424  009FA0  20                 	db	32
  3425  009FA1  20                 	db	32
  3426  009FA2  20                 	db	32
  3427  009FA3  20                 	db	32
  3428  009FA4  20                 	db	32
  3429  009FA5  20                 	db	32
  3430  009FA6  20                 	db	32
  3431  009FA7  20                 	db	32
  3432  009FA8  20                 	db	32
  3433  009FA9  2F                 	db	47
  3434  009FAA  73                 	db	115
  3435  009FAB  74                 	db	116
  3436  009FAC  65                 	db	101
  3437  009FAD  70                 	db	112
  3438  009FAE  20                 	db	32
  3439  009FAF  20                 	db	32
  3440  009FB0  00                 	db	0
  3441  009FB1  20                 	db	32
  3442  009FB2  20                 	db	32
  3443  009FB3  43                 	db	67
  3444  009FB4  6F                 	db	111
  3445  009FB5  6E                 	db	110
  3446  009FB6  66                 	db	102
  3447  009FB7  69                 	db	105
  3448  009FB8  72                 	db	114
  3449  009FB9  6D                 	db	109
  3450  009FBA  31                 	db	49
  3451  009FBB  32                 	db	50
  3452  009FBC  33                 	db	51
  3453  009FBD  34                 	db	52
  3454  009FBE  20                 	db	32
  3455  009FBF  20                 	db	32
  3456  009FC0  20                 	db	32
  3457  009FC1  20                 	db	32
  3458  009FC2  20                 	db	32
  3459  009FC3  20                 	db	32
  3460  009FC4  00                 	db	0
  3461  009FC5  20                 	db	32
  3462  009FC6  20                 	db	32
  3463  009FC7  43                 	db	67
  3464  009FC8  61                 	db	97
  3465  009FC9  6E                 	db	110
  3466  009FCA  63                 	db	99
  3467  009FCB  65                 	db	101
  3468  009FCC  6C                 	db	108
  3469  009FCD  20                 	db	32
  3470  009FCE                     __end_of_dc_divide1:
  3471                           	opt stack 0
  3472  009FCE                     _dc_setup2:
  3473                           	opt stack 0
  3474  009FCE  53                 	db	83
  3475  009FCF  65                 	db	101
  3476  009FD0  74                 	db	116
  3477  009FD1  75                 	db	117
  3478  009FD2  70                 	db	112
  3479  009FD3  3A                 	db	58
  3480  009FD4  20                 	db	32
  3481  009FD5  53                 	db	83
  3482  009FD6  65                 	db	101
  3483  009FD7  74                 	db	116
  3484  009FD8  20                 	db	32
  3485  009FD9  64                 	db	100
  3486  009FDA  69                 	db	105
  3487  009FDB  72                 	db	114
  3488  009FDC  65                 	db	101
  3489  009FDD  63                 	db	99
  3490  009FDE  74                 	db	116
  3491  009FDF  69                 	db	105
  3492  009FE0  6F                 	db	111
  3493  009FE1  6E                 	db	110
  3494  009FE2  20                 	db	32
  3495  009FE3  20                 	db	32
  3496  009FE4  20                 	db	32
  3497  009FE5  20                 	db	32
  3498  009FE6  20                 	db	32
  3499  009FE7  20                 	db	32
  3500  009FE8  20                 	db	32
  3501  009FE9  20                 	db	32
  3502  009FEA  20                 	db	32
  3503  009FEB  20                 	db	32
  3504  009FEC  20                 	db	32
  3505  009FED  20                 	db	32
  3506  009FEE  20                 	db	32
  3507  009FEF  20                 	db	32
  3508  009FF0  20                 	db	32
  3509  009FF1  20                 	db	32
  3510  009FF2  20                 	db	32
  3511  009FF3  20                 	db	32
  3512  009FF4  20                 	db	32
  3513  009FF5  20                 	db	32
  3514  009FF6  20                 	db	32
  3515  009FF7  43                 	db	67
  3516  009FF8  6F                 	db	111
  3517  009FF9  75                 	db	117
  3518  009FFA  6E                 	db	110
  3519  009FFB  74                 	db	116
  3520  009FFC  65                 	db	101
  3521  009FFD  72                 	db	114
  3522  009FFE  43                 	db	67
  3523  009FFF  6C                 	db	108
  3524  00A000  6F                 	db	111
  3525  00A001  63                 	db	99
  3526  00A002  6B                 	db	107
  3527  00A003  77                 	db	119
  3528  00A004  69                 	db	105
  3529  00A005  73                 	db	115
  3530  00A006  65                 	db	101
  3531  00A007  20                 	db	32
  3532  00A008  20                 	db	32
  3533  00A009  20                 	db	32
  3534  00A00A  20                 	db	32
  3535  00A00B  43                 	db	67
  3536  00A00C  6C                 	db	108
  3537  00A00D  6F                 	db	111
  3538  00A00E  63                 	db	99
  3539  00A00F  6B                 	db	107
  3540  00A010  77                 	db	119
  3541  00A011  69                 	db	105
  3542  00A012  73                 	db	115
  3543  00A013  65                 	db	101
  3544  00A014  20                 	db	32
  3545  00A015  20                 	db	32
  3546  00A016  20                 	db	32
  3547  00A017  20                 	db	32
  3548  00A018  20                 	db	32
  3549  00A019  20                 	db	32
  3550  00A01A  20                 	db	32
  3551  00A01B  20                 	db	32
  3552  00A01C  20                 	db	32
  3553  00A01D  20                 	db	32
  3554  00A01E                     __end_of_dc_setup2:
  3555                           	opt stack 0
  3556  00A01E                     _dc_setup1:
  3557                           	opt stack 0
  3558  00A01E  53                 	db	83
  3559  00A01F  65                 	db	101
  3560  00A020  74                 	db	116
  3561  00A021  75                 	db	117
  3562  00A022  70                 	db	112
  3563  00A023  3A                 	db	58
  3564  00A024  20                 	db	32
  3565  00A025  53                 	db	83
  3566  00A026  65                 	db	101
  3567  00A027  74                 	db	116
  3568  00A028  20                 	db	32
  3569  00A029  7A                 	db	122
  3570  00A02A  65                 	db	101
  3571  00A02B  72                 	db	114
  3572  00A02C  6F                 	db	111
  3573  00A02D  20                 	db	32
  3574  00A02E  70                 	db	112
  3575  00A02F  6F                 	db	111
  3576  00A030  73                 	db	115
  3577  00A031  2E                 	db	46
  3578  00A032  20                 	db	32
  3579  00A033  20                 	db	32
  3580  00A034  20                 	db	32
  3581  00A035  20                 	db	32
  3582  00A036  20                 	db	32
  3583  00A037  20                 	db	32
  3584  00A038  20                 	db	32
  3585  00A039  20                 	db	32
  3586  00A03A  20                 	db	32
  3587  00A03B  20                 	db	32
  3588  00A03C  20                 	db	32
  3589  00A03D  20                 	db	32
  3590  00A03E  20                 	db	32
  3591  00A03F  20                 	db	32
  3592  00A040  20                 	db	32
  3593  00A041  20                 	db	32
  3594  00A042  20                 	db	32
  3595  00A043  20                 	db	32
  3596  00A044  20                 	db	32
  3597  00A045  20                 	db	32
  3598  00A046  53                 	db	83
  3599  00A047  74                 	db	116
  3600  00A048  65                 	db	101
  3601  00A049  70                 	db	112
  3602  00A04A  20                 	db	32
  3603  00A04B  73                 	db	115
  3604  00A04C  69                 	db	105
  3605  00A04D  7A                 	db	122
  3606  00A04E  65                 	db	101
  3607  00A04F  20                 	db	32
  3608  00A050  00                 	db	0
  3609  00A051  20                 	db	32
  3610  00A052  20                 	db	32
  3611  00A053  43                 	db	67
  3612  00A054  6F                 	db	111
  3613  00A055  6E                 	db	110
  3614  00A056  66                 	db	102
  3615  00A057  69                 	db	105
  3616  00A058  72                 	db	114
  3617  00A059  6D                 	db	109
  3618  00A05A  20                 	db	32
  3619  00A05B  78                 	db	120
  3620  00A05C  2E                 	db	46
  3621  00A05D  78                 	db	120
  3622  00A05E  78                 	db	120
  3623  00A05F  01                 	db	1
  3624  00A060  20                 	db	32
  3625  00A061  20                 	db	32
  3626  00A062  20                 	db	32
  3627  00A063  20                 	db	32
  3628  00A064  00                 	db	0
  3629  00A065  20                 	db	32
  3630  00A066  20                 	db	32
  3631  00A067  43                 	db	67
  3632  00A068  61                 	db	97
  3633  00A069  6E                 	db	110
  3634  00A06A  63                 	db	99
  3635  00A06B  65                 	db	101
  3636  00A06C  6C                 	db	108
  3637  00A06D  20                 	db	32
  3638  00A06E                     __end_of_dc_setup1:
  3639                           	opt stack 0
  3640  00A06E                     _dc_main:
  3641                           	opt stack 0
  3642  00A06E  4D                 	db	77
  3643  00A06F  61                 	db	97
  3644  00A070  69                 	db	105
  3645  00A071  6E                 	db	110
  3646  00A072  20                 	db	32
  3647  00A073  4D                 	db	77
  3648  00A074  65                 	db	101
  3649  00A075  6E                 	db	110
  3650  00A076  75                 	db	117
  3651  00A077  3A                 	db	58
  3652  00A078  20                 	db	32
  3653  00A079  20                 	db	32
  3654  00A07A  20                 	db	32
  3655  00A07B  20                 	db	32
  3656  00A07C  20                 	db	32
  3657  00A07D  20                 	db	32
  3658  00A07E  20                 	db	32
  3659  00A07F  20                 	db	32
  3660  00A080  20                 	db	32
  3661  00A081  20                 	db	32
  3662  00A082  20                 	db	32
  3663  00A083  53                 	db	83
  3664  00A084  65                 	db	101
  3665  00A085  74                 	db	116
  3666  00A086  75                 	db	117
  3667  00A087  70                 	db	112
  3668  00A088  20                 	db	32
  3669  00A089  20                 	db	32
  3670  00A08A  20                 	db	32
  3671  00A08B  20                 	db	32
  3672  00A08C  44                 	db	68
  3673  00A08D  69                 	db	105
  3674  00A08E  76                 	db	118
  3675  00A08F  69                 	db	105
  3676  00A090  64                 	db	100
  3677  00A091  65                 	db	101
  3678  00A092  20                 	db	32
  3679  00A093  20                 	db	32
  3680  00A094  20                 	db	32
  3681  00A095  20                 	db	32
  3682  00A096  20                 	db	32
  3683  00A097  41                 	db	65
  3684  00A098  72                 	db	114
  3685  00A099  63                 	db	99
  3686  00A09A  20                 	db	32
  3687  00A09B  20                 	db	32
  3688  00A09C  20                 	db	32
  3689  00A09D  20                 	db	32
  3690  00A09E  20                 	db	32
  3691  00A09F  20                 	db	32
  3692  00A0A0  4D                 	db	77
  3693  00A0A1  61                 	db	97
  3694  00A0A2  6E                 	db	110
  3695  00A0A3  75                 	db	117
  3696  00A0A4  61                 	db	97
  3697  00A0A5  6C                 	db	108
  3698  00A0A6  20                 	db	32
  3699  00A0A7  20                 	db	32
  3700  00A0A8  20                 	db	32
  3701  00A0A9  20                 	db	32
  3702  00A0AA  20                 	db	32
  3703  00A0AB  47                 	db	71
  3704  00A0AC  6F                 	db	111
  3705  00A0AD  32                 	db	50
  3706  00A0AE  5A                 	db	90
  3707  00A0AF  65                 	db	101
  3708  00A0B0  72                 	db	114
  3709  00A0B1  6F                 	db	111
  3710  00A0B2  20                 	db	32
  3711  00A0B3  20                 	db	32
  3712  00A0B4  20                 	db	32
  3713  00A0B5  20                 	db	32
  3714  00A0B6  20                 	db	32
  3715  00A0B7  20                 	db	32
  3716  00A0B8  20                 	db	32
  3717  00A0B9  20                 	db	32
  3718  00A0BA  20                 	db	32
  3719  00A0BB  20                 	db	32
  3720  00A0BC  20                 	db	32
  3721  00A0BD  20                 	db	32
  3722  00A0BE                     __end_of_dc_main:
  3723                           	opt stack 0
  3724  00A0BE                     _configDescriptor1:
  3725                           	opt stack 0
  3726  00A0BE  09                 	db	9
  3727  00A0BF  02                 	db	2
  3728  00A0C0  40                 	db	64
  3729  00A0C1  00                 	db	0
  3730  00A0C2  02                 	db	2
  3731  00A0C3  01                 	db	1
  3732  00A0C4  00                 	db	0
  3733  00A0C5  C0                 	db	192
  3734  00A0C6  32                 	db	50
  3735  00A0C7  09                 	db	9
  3736  00A0C8  04                 	db	4
  3737  00A0C9  00                 	db	0
  3738  00A0CA  00                 	db	0
  3739  00A0CB  02                 	db	2
  3740  00A0CC  03                 	db	3
  3741  00A0CD  00                 	db	0
  3742  00A0CE  00                 	db	0
  3743  00A0CF  00                 	db	0
  3744  00A0D0  09                 	db	9
  3745  00A0D1  21                 	db	33
  3746  00A0D2  11                 	db	17
  3747  00A0D3  01                 	db	1
  3748  00A0D4  00                 	db	0
  3749  00A0D5  01                 	db	1
  3750  00A0D6  22                 	db	34
  3751  00A0D7  1D                 	db	29
  3752  00A0D8  00                 	db	0
  3753  00A0D9  07                 	db	7
  3754  00A0DA  05                 	db	5
  3755  00A0DB  81                 	db	129
  3756  00A0DC  03                 	db	3
  3757  00A0DD  40                 	db	64
  3758  00A0DE  00                 	db	0
  3759  00A0DF  01                 	db	1
  3760  00A0E0  07                 	db	7
  3761  00A0E1  05                 	db	5
  3762  00A0E2  01                 	db	1
  3763  00A0E3  03                 	db	3
  3764  00A0E4  40                 	db	64
  3765  00A0E5  00                 	db	0
  3766  00A0E6  01                 	db	1
  3767  00A0E7  09                 	db	9
  3768  00A0E8  04                 	db	4
  3769  00A0E9  01                 	db	1
  3770  00A0EA  00                 	db	0
  3771  00A0EB  02                 	db	2
  3772  00A0EC  08                 	db	8
  3773  00A0ED  06                 	db	6
  3774  00A0EE  50                 	db	80
  3775  00A0EF  00                 	db	0
  3776  00A0F0  07                 	db	7
  3777  00A0F1  05                 	db	5
  3778  00A0F2  82                 	db	130
  3779  00A0F3  02                 	db	2
  3780  00A0F4  40                 	db	64
  3781  00A0F5  00                 	db	0
  3782  00A0F6  01                 	db	1
  3783  00A0F7  07                 	db	7
  3784  00A0F8  05                 	db	5
  3785  00A0F9  02                 	db	2
  3786  00A0FA  02                 	db	2
  3787  00A0FB  40                 	db	64
  3788  00A0FC  00                 	db	0
  3789  00A0FD  01                 	db	1
  3790  00A0FE                     __end_of_configDescriptor1:
  3791                           	opt stack 0
  3792  00A0FE                     _sd001:
  3793                           	opt stack 0
  3794  00A0FE  34                 	db	52
  3795  00A0FF  03                 	db	3
  3796  00A100  0053               	dw	83
  3797  00A102  006F               	dw	111
  3798  00A104  006C               	dw	108
  3799  00A106  0064               	dw	100
  3800  00A108  0065               	dw	101
  3801  00A10A  0072               	dw	114
  3802  00A10C  006E               	dw	110
  3803  00A10E  0065               	dw	101
  3804  00A110  0072               	dw	114
  3805  00A112  0064               	dw	100
  3806  00A114  002E               	dw	46
  3807  00A116  0063               	dw	99
  3808  00A118  006F               	dw	111
  3809  00A11A  006D               	dw	109
  3810  00A11C  0020               	dw	32
  3811  00A11E  0020               	dw	32
  3812  00A120  0020               	dw	32
  3813  00A122  0020               	dw	32
  3814  00A124  0020               	dw	32
  3815  00A126  0020               	dw	32
  3816  00A128  0020               	dw	32
  3817  00A12A  0020               	dw	32
  3818  00A12C  0020               	dw	32
  3819  00A12E  0020               	dw	32
  3820  00A130  0020               	dw	32
  3821  00A132                     __end_of_sd001:
  3822                           	opt stack 0
  3823  00A132                     _sd002:
  3824                           	opt stack 0
  3825  00A132  2E                 	db	46
  3826  00A133  03                 	db	3
  3827  00A134  0053               	dw	83
  3828  00A136  0074               	dw	116
  3829  00A138  0065               	dw	101
  3830  00A13A  0070               	dw	112
  3831  00A13C  0070               	dw	112
  3832  00A13E  0065               	dw	101
  3833  00A140  0072               	dw	114
  3834  00A142  004D               	dw	77
  3835  00A144  006F               	dw	111
  3836  00A146  0074               	dw	116
  3837  00A148  006F               	dw	111
  3838  00A14A  0072               	dw	114
  3839  00A14C  0043               	dw	67
  3840  00A14E  006F               	dw	111
  3841  00A150  006E               	dw	110
  3842  00A152  0074               	dw	116
  3843  00A154  0072               	dw	114
  3844  00A156  006F               	dw	111
  3845  00A158  006C               	dw	108
  3846  00A15A  006C               	dw	108
  3847  00A15C  0065               	dw	101
  3848  00A15E  0072               	dw	114
  3849  00A160                     __end_of_sd002:
  3850                           	opt stack 0
  3851  00A160                     _inq_resp:
  3852                           	opt stack 0
  3853  00A160  00                 	db	0
  3854  00A161  80                 	db	128
  3855  00A162  04                 	db	4
  3856  00A163  02                 	db	2
  3857  00A164  20                 	db	32
  3858  00A165  00                 	db	0
  3859  00A166  00                 	db	0
  3860  00A167  00                 	db	0
  3861  00A168  4D                 	db	77
  3862  00A169  69                 	db	105
  3863  00A16A  63                 	db	99
  3864  00A16B  72                 	db	114
  3865  00A16C  6F                 	db	111
  3866  00A16D  63                 	db	99
  3867  00A16E  68                 	db	104
  3868  00A16F  70                 	db	112
  3869  00A170  4D                 	db	77
  3870  00A171  61                 	db	97
  3871  00A172  73                 	db	115
  3872  00A173  73                 	db	115
  3873  00A174  20                 	db	32
  3874  00A175  53                 	db	83
  3875  00A176  74                 	db	116
  3876  00A177  6F                 	db	111
  3877  00A178  72                 	db	114
  3878  00A179  61                 	db	97
  3879  00A17A  67                 	db	103
  3880  00A17B  65                 	db	101
  3881  00A17C  20                 	db	32
  3882  00A17D  20                 	db	32
  3883  00A17E  20                 	db	32
  3884  00A17F  20                 	db	32
  3885  00A180  30                 	db	48
  3886  00A181  30                 	db	48
  3887  00A182  30                 	db	48
  3888  00A183  31                 	db	49
  3889  00A184                     __end_of_inq_resp:
  3890                           	opt stack 0
  3891  00A184                     _hid_rpt01:
  3892                           	opt stack 0
  3893  00A184  06                 	db	6
  3894  00A185  00                 	db	0
  3895  00A186  FF                 	db	255
  3896  00A187  09                 	db	9
  3897  00A188  01                 	db	1
  3898  00A189  A1                 	db	161
  3899  00A18A  01                 	db	1
  3900  00A18B  19                 	db	25
  3901  00A18C  01                 	db	1
  3902  00A18D  29                 	db	41
  3903  00A18E  40                 	db	64
  3904  00A18F  15                 	db	21
  3905  00A190  00                 	db	0
  3906  00A191  26                 	db	38
  3907  00A192  FF                 	db	255
  3908  00A193  00                 	db	0
  3909  00A194  75                 	db	117
  3910  00A195  08                 	db	8
  3911  00A196  95                 	db	149
  3912  00A197  40                 	db	64
  3913  00A198  81                 	db	129
  3914  00A199  00                 	db	0
  3915  00A19A  19                 	db	25
  3916  00A19B  01                 	db	1
  3917  00A19C  29                 	db	41
  3918  00A19D  40                 	db	64
  3919  00A19E  91                 	db	145
  3920  00A19F  00                 	db	0
  3921  00A1A0  C0                 	db	192
  3922  00A1A1                     __end_of_hid_rpt01:
  3923                           	opt stack 0
  3924  00A1A1                     _sd003:
  3925                           	opt stack 0
  3926  00A1A1  1A                 	db	26
  3927  00A1A2  03                 	db	3
  3928  00A1A3  0031               	dw	49
  3929  00A1A5  0032               	dw	50
  3930  00A1A7  0033               	dw	51
  3931  00A1A9  0034               	dw	52
  3932  00A1AB  0035               	dw	53
  3933  00A1AD  0036               	dw	54
  3934  00A1AF  0037               	dw	55
  3935  00A1B1  0038               	dw	56
  3936  00A1B3  0039               	dw	57
  3937  00A1B5  0030               	dw	48
  3938  00A1B7  0039               	dw	57
  3939  00A1B9  0039               	dw	57
  3940  00A1BB                     __end_of_sd003:
  3941                           	opt stack 0
  3942  00A1BB                     _overshoot_cost_in_steps_string:
  3943                           	opt stack 0
  3944  00A1BB  4F                 	db	79
  3945  00A1BC  56                 	db	86
  3946  00A1BD  45                 	db	69
  3947  00A1BE  52                 	db	82
  3948  00A1BF  53                 	db	83
  3949  00A1C0  48                 	db	72
  3950  00A1C1  4F                 	db	79
  3951  00A1C2  4F                 	db	79
  3952  00A1C3  54                 	db	84
  3953  00A1C4  5F                 	db	95
  3954  00A1C5  43                 	db	67
  3955  00A1C6  4F                 	db	79
  3956  00A1C7  53                 	db	83
  3957  00A1C8  54                 	db	84
  3958  00A1C9  5F                 	db	95
  3959  00A1CA  49                 	db	73
  3960  00A1CB  4E                 	db	78
  3961  00A1CC  5F                 	db	95
  3962  00A1CD  53                 	db	83
  3963  00A1CE  54                 	db	84
  3964  00A1CF  45                 	db	69
  3965  00A1D0  50                 	db	80
  3966  00A1D1  53                 	db	83
  3967  00A1D2  00                 	db	0
  3968  00A1D3                     __end_of_overshoot_cost_in_steps_string:
  3969                           	opt stack 0
  3970  00A1D3                     _position_display_180_string:
  3971                           	opt stack 0
  3972  00A1D3  50                 	db	80
  3973  00A1D4  4F                 	db	79
  3974  00A1D5  53                 	db	83
  3975  00A1D6  49                 	db	73
  3976  00A1D7  54                 	db	84
  3977  00A1D8  49                 	db	73
  3978  00A1D9  4F                 	db	79
  3979  00A1DA  4E                 	db	78
  3980  00A1DB  5F                 	db	95
  3981  00A1DC  44                 	db	68
  3982  00A1DD  49                 	db	73
  3983  00A1DE  53                 	db	83
  3984  00A1DF  50                 	db	80
  3985  00A1E0  4C                 	db	76
  3986  00A1E1  41                 	db	65
  3987  00A1E2  59                 	db	89
  3988  00A1E3  5F                 	db	95
  3989  00A1E4  31                 	db	49
  3990  00A1E5  38                 	db	56
  3991  00A1E6  30                 	db	48
  3992  00A1E7  00                 	db	0
  3993  00A1E8                     __end_of_position_display_180_string:
  3994                           	opt stack 0
  3995  00A1E8                     _maximum_speed_manual_string:
  3996                           	opt stack 0
  3997  00A1E8  4D                 	db	77
  3998  00A1E9  41                 	db	65
  3999  00A1EA  58                 	db	88
  4000  00A1EB  49                 	db	73
  4001  00A1EC  4D                 	db	77
  4002  00A1ED  55                 	db	85
  4003  00A1EE  4D                 	db	77
  4004  00A1EF  5F                 	db	95
  4005  00A1F0  53                 	db	83
  4006  00A1F1  50                 	db	80
  4007  00A1F2  45                 	db	69
  4008  00A1F3  45                 	db	69
  4009  00A1F4  44                 	db	68
  4010  00A1F5  5F                 	db	95
  4011  00A1F6  4D                 	db	77
  4012  00A1F7  41                 	db	65
  4013  00A1F8  4E                 	db	78
  4014  00A1F9  55                 	db	85
  4015  00A1FA  41                 	db	65
  4016  00A1FB  4C                 	db	76
  4017  00A1FC  00                 	db	0
  4018  00A1FD                     __end_of_maximum_speed_manual_string:
  4019                           	opt stack 0
  4020  00A1FD                     _initial_speed_manual_string:
  4021                           	opt stack 0
  4022  00A1FD  49                 	db	73
  4023  00A1FE  4E                 	db	78
  4024  00A1FF  49                 	db	73
  4025  00A200  54                 	db	84
  4026  00A201  49                 	db	73
  4027  00A202  41                 	db	65
  4028  00A203  4C                 	db	76
  4029  00A204  5F                 	db	95
  4030  00A205  53                 	db	83
  4031  00A206  50                 	db	80
  4032  00A207  45                 	db	69
  4033  00A208  45                 	db	69
  4034  00A209  44                 	db	68
  4035  00A20A  5F                 	db	95
  4036  00A20B  4D                 	db	77
  4037  00A20C  41                 	db	65
  4038  00A20D  4E                 	db	78
  4039  00A20E  55                 	db	85
  4040  00A20F  41                 	db	65
  4041  00A210  4C                 	db	76
  4042  00A211  00                 	db	0
  4043  00A212                     __end_of_initial_speed_manual_string:
  4044                           	opt stack 0
  4045  00A212                     _full_circle_in_steps_string:
  4046                           	opt stack 0
  4047  00A212  46                 	db	70
  4048  00A213  55                 	db	85
  4049  00A214  4C                 	db	76
  4050  00A215  4C                 	db	76
  4051  00A216  5F                 	db	95
  4052  00A217  43                 	db	67
  4053  00A218  49                 	db	73
  4054  00A219  52                 	db	82
  4055  00A21A  43                 	db	67
  4056  00A21B  4C                 	db	76
  4057  00A21C  45                 	db	69
  4058  00A21D  5F                 	db	95
  4059  00A21E  49                 	db	73
  4060  00A21F  4E                 	db	78
  4061  00A220  5F                 	db	95
  4062  00A221  53                 	db	83
  4063  00A222  54                 	db	84
  4064  00A223  45                 	db	69
  4065  00A224  50                 	db	80
  4066  00A225  53                 	db	83
  4067  00A226  00                 	db	0
  4068  00A227                     __end_of_full_circle_in_steps_string:
  4069                           	opt stack 0
  4070  00A227                     _overshoot_in_steps_string:
  4071                           	opt stack 0
  4072  00A227  4F                 	db	79
  4073  00A228  56                 	db	86
  4074  00A229  45                 	db	69
  4075  00A22A  52                 	db	82
  4076  00A22B  53                 	db	83
  4077  00A22C  48                 	db	72
  4078  00A22D  4F                 	db	79
  4079  00A22E  4F                 	db	79
  4080  00A22F  54                 	db	84
  4081  00A230  5F                 	db	95
  4082  00A231  49                 	db	73
  4083  00A232  4E                 	db	78
  4084  00A233  5F                 	db	95
  4085  00A234  53                 	db	83
  4086  00A235  54                 	db	84
  4087  00A236  45                 	db	69
  4088  00A237  50                 	db	80
  4089  00A238  53                 	db	83
  4090  00A239  00                 	db	0
  4091  00A23A                     __end_of_overshoot_in_steps_string:
  4092                           	opt stack 0
  4093  00A23A                     _maximum_speed_arc_string:
  4094                           	opt stack 0
  4095  00A23A  4D                 	db	77
  4096  00A23B  41                 	db	65
  4097  00A23C  58                 	db	88
  4098  00A23D  49                 	db	73
  4099  00A23E  4D                 	db	77
  4100  00A23F  55                 	db	85
  4101  00A240  4D                 	db	77
  4102  00A241  5F                 	db	95
  4103  00A242  53                 	db	83
  4104  00A243  50                 	db	80
  4105  00A244  45                 	db	69
  4106  00A245  45                 	db	69
  4107  00A246  44                 	db	68
  4108  00A247  5F                 	db	95
  4109  00A248  41                 	db	65
  4110  00A249  52                 	db	82
  4111  00A24A  43                 	db	67
  4112  00A24B  00                 	db	0
  4113  00A24C                     __end_of_maximum_speed_arc_string:
  4114                           	opt stack 0
  4115  00A24C                     _initial_speed_arc_string:
  4116                           	opt stack 0
  4117  00A24C  49                 	db	73
  4118  00A24D  4E                 	db	78
  4119  00A24E  49                 	db	73
  4120  00A24F  54                 	db	84
  4121  00A250  49                 	db	73
  4122  00A251  41                 	db	65
  4123  00A252  4C                 	db	76
  4124  00A253  5F                 	db	95
  4125  00A254  53                 	db	83
  4126  00A255  50                 	db	80
  4127  00A256  45                 	db	69
  4128  00A257  45                 	db	69
  4129  00A258  44                 	db	68
  4130  00A259  5F                 	db	95
  4131  00A25A  41                 	db	65
  4132  00A25B  52                 	db	82
  4133  00A25C  43                 	db	67
  4134  00A25D  00                 	db	0
  4135  00A25E                     __end_of_initial_speed_arc_string:
  4136                           	opt stack 0
  4137  00A25E                     _inverse_direction_string:
  4138                           	opt stack 0
  4139  00A25E  49                 	db	73
  4140  00A25F  4E                 	db	78
  4141  00A260  56                 	db	86
  4142  00A261  45                 	db	69
  4143  00A262  52                 	db	82
  4144  00A263  53                 	db	83
  4145  00A264  45                 	db	69
  4146  00A265  5F                 	db	95
  4147  00A266  44                 	db	68
  4148  00A267  49                 	db	73
  4149  00A268  52                 	db	82
  4150  00A269  45                 	db	69
  4151  00A26A  43                 	db	67
  4152  00A26B  54                 	db	84
  4153  00A26C  49                 	db	73
  4154  00A26D  4F                 	db	79
  4155  00A26E  4E                 	db	78
  4156  00A26F  00                 	db	0
  4157  00A270                     __end_of_inverse_direction_string:
  4158                           	opt stack 0
  4159  00A270                     _device_dsc:
  4160                           	opt stack 0
  4161  00A270  12                 	db	18
  4162  00A271  01                 	db	1
  4163  00A272  0200               	dw	512
  4164  00A274  00                 	db	0
  4165  00A275  00                 	db	0
  4166  00A276  00                 	db	0
  4167  00A277  08                 	db	8
  4168  00A278  04D8               	dw	1240
  4169  00A27A  EDCF               	dw	60879
  4170  00A27C  0100               	dw	256
  4171  00A27E  01                 	db	1
  4172  00A27F  02                 	db	2
  4173  00A280  00                 	db	0
  4174  00A281  01                 	db	1
  4175  00A282                     __end_of_device_dsc:
  4176                           	opt stack 0
  4177  00A282                     _use_ccw_limit_string:
  4178                           	opt stack 0
  4179  00A282  55                 	db	85
  4180  00A283  53                 	db	83
  4181  00A284  45                 	db	69
  4182  00A285  5F                 	db	95
  4183  00A286  43                 	db	67
  4184  00A287  43                 	db	67
  4185  00A288  57                 	db	87
  4186  00A289  5F                 	db	95
  4187  00A28A  4C                 	db	76
  4188  00A28B  49                 	db	73
  4189  00A28C  4D                 	db	77
  4190  00A28D  49                 	db	73
  4191  00A28E  54                 	db	84
  4192  00A28F  00                 	db	0
  4193  00A290                     __end_of_use_ccw_limit_string:
  4194                           	opt stack 0
  4195  00A290                     _beep_duration_string:
  4196                           	opt stack 0
  4197  00A290  42                 	db	66
  4198  00A291  45                 	db	69
  4199  00A292  45                 	db	69
  4200  00A293  50                 	db	80
  4201  00A294  5F                 	db	95
  4202  00A295  44                 	db	68
  4203  00A296  55                 	db	85
  4204  00A297  52                 	db	82
  4205  00A298  41                 	db	65
  4206  00A299  54                 	db	84
  4207  00A29A  49                 	db	73
  4208  00A29B  4F                 	db	79
  4209  00A29C  4E                 	db	78
  4210  00A29D  00                 	db	0
  4211  00A29E                     __end_of_beep_duration_string:
  4212                           	opt stack 0
  4213  00A29E                     _maximum_speed_string:
  4214                           	opt stack 0
  4215  00A29E  4D                 	db	77
  4216  00A29F  41                 	db	65
  4217  00A2A0  58                 	db	88
  4218  00A2A1  49                 	db	73
  4219  00A2A2  4D                 	db	77
  4220  00A2A3  55                 	db	85
  4221  00A2A4  4D                 	db	77
  4222  00A2A5  5F                 	db	95
  4223  00A2A6  53                 	db	83
  4224  00A2A7  50                 	db	80
  4225  00A2A8  45                 	db	69
  4226  00A2A9  45                 	db	69
  4227  00A2AA  44                 	db	68
  4228  00A2AB  00                 	db	0
  4229  00A2AC                     __end_of_maximum_speed_string:
  4230                           	opt stack 0
  4231  00A2AC                     _minimum_speed_string:
  4232                           	opt stack 0
  4233  00A2AC  4D                 	db	77
  4234  00A2AD  49                 	db	73
  4235  00A2AE  4E                 	db	78
  4236  00A2AF  49                 	db	73
  4237  00A2B0  4D                 	db	77
  4238  00A2B1  55                 	db	85
  4239  00A2B2  4D                 	db	77
  4240  00A2B3  5F                 	db	95
  4241  00A2B4  53                 	db	83
  4242  00A2B5  50                 	db	80
  4243  00A2B6  45                 	db	69
  4244  00A2B7  45                 	db	69
  4245  00A2B8  44                 	db	68
  4246  00A2B9  00                 	db	0
  4247  00A2BA                     __end_of_minimum_speed_string:
  4248                           	opt stack 0
  4249  00A2BA                     _use_cw_limit_string:
  4250                           	opt stack 0
  4251  00A2BA  55                 	db	85
  4252  00A2BB  53                 	db	83
  4253  00A2BC  45                 	db	69
  4254  00A2BD  5F                 	db	95
  4255  00A2BE  43                 	db	67
  4256  00A2BF  57                 	db	87
  4257  00A2C0  5F                 	db	95
  4258  00A2C1  4C                 	db	76
  4259  00A2C2  49                 	db	73
  4260  00A2C3  4D                 	db	77
  4261  00A2C4  49                 	db	73
  4262  00A2C5  54                 	db	84
  4263  00A2C6  00                 	db	0
  4264  00A2C7                     __end_of_use_cw_limit_string:
  4265                           	opt stack 0
  4266  00A2C7                     _ccw_limit_string:
  4267                           	opt stack 0
  4268  00A2C7  43                 	db	67
  4269  00A2C8  43                 	db	67
  4270  00A2C9  57                 	db	87
  4271  00A2CA  5F                 	db	95
  4272  00A2CB  4C                 	db	76
  4273  00A2CC  49                 	db	73
  4274  00A2CD  4D                 	db	77
  4275  00A2CE  49                 	db	73
  4276  00A2CF  54                 	db	84
  4277  00A2D0  00                 	db	0
  4278  00A2D1                     __end_of_ccw_limit_string:
  4279                           	opt stack 0
  4280  00A2D1                     _cw_limit_string:
  4281                           	opt stack 0
  4282  00A2D1  43                 	db	67
  4283  00A2D2  57                 	db	87
  4284  00A2D3  5F                 	db	95
  4285  00A2D4  4C                 	db	76
  4286  00A2D5  49                 	db	73
  4287  00A2D6  4D                 	db	77
  4288  00A2D7  49                 	db	73
  4289  00A2D8  54                 	db	84
  4290  00A2D9  00                 	db	0
  4291  00A2DA                     __end_of_cw_limit_string:
  4292                           	opt stack 0
  4293  00A2DA                     _bit_pattern_ae:
  4294                           	opt stack 0
  4295  00A2DA  0A                 	db	10
  4296  00A2DB  00                 	db	0
  4297  00A2DC  0E                 	db	14
  4298  00A2DD  01                 	db	1
  4299  00A2DE  0F                 	db	15
  4300  00A2DF  11                 	db	17
  4301  00A2E0  0F                 	db	15
  4302  00A2E1  00                 	db	0
  4303  00A2E2                     __end_of_bit_pattern_ae:
  4304                           	opt stack 0
  4305  00A2E2                     _bit_pattern_degree:
  4306                           	opt stack 0
  4307  00A2E2  18                 	db	24
  4308  00A2E3  18                 	db	24
  4309  00A2E4  00                 	db	0
  4310  00A2E5  00                 	db	0
  4311  00A2E6  00                 	db	0
  4312  00A2E7  00                 	db	0
  4313  00A2E8  00                 	db	0
  4314  00A2E9  00                 	db	0
  4315  00A2EA                     __end_of_bit_pattern_degree:
  4316                           	opt stack 0
  4317  00A2EA                     _bit_pattern_verticalbar:
  4318                           	opt stack 0
  4319  00A2EA  04                 	db	4
  4320  00A2EB  04                 	db	4
  4321  00A2EC  04                 	db	4
  4322  00A2ED  04                 	db	4
  4323  00A2EE  04                 	db	4
  4324  00A2EF  04                 	db	4
  4325  00A2F0  04                 	db	4
  4326  00A2F1  04                 	db	4
  4327  00A2F2                     __end_of_bit_pattern_verticalbar:
  4328                           	opt stack 0
  4329  00A2F2                     _flash_command_pagesize_528:
  4330                           	opt stack 0
  4331  00A2F2  3D                 	db	61
  4332  00A2F3  2A                 	db	42
  4333  00A2F4  80                 	db	128
  4334  00A2F5  A7                 	db	167
  4335  00A2F6                     __end_of_flash_command_pagesize_528:
  4336                           	opt stack 0
  4337  00A2F6                     _flash_command_pagesize_512:
  4338                           	opt stack 0
  4339  00A2F6  3D                 	db	61
  4340  00A2F7  2A                 	db	42
  4341  00A2F8  80                 	db	128
  4342  00A2F9  A6                 	db	166
  4343  00A2FA                     __end_of_flash_command_pagesize_512:
  4344                           	opt stack 0
  4345  00A2FA                     _sd000:
  4346                           	opt stack 0
  4347  00A2FA  04                 	db	4
  4348  00A2FB  03                 	db	3
  4349  00A2FC  0409               	dw	1033
  4350  00A2FE                     __end_of_sd000:
  4351                           	opt stack 0
  4352  0000                     _RPINR22	set	3837
  4353  0000                     _RPOR23	set	3799
  4354  0000                     _RPOR21	set	3797
  4355  0000                     _RPINR21	set	3836
  4356  0000                     _RPOR4	set	3780
  4357  0000                     _PPSCONbits	set	3775
  4358  0000                     _CCPTMRS0bits	set	3922
  4359  0000                     _ANCON0bits	set	3912
  4360  0000                     _ANCON1bits	set	3913
  4361  0000                     _UEP0bits	set	3878
  4362  0000                     _UIEbits	set	3894
  4363  0000                     _UADDR	set	3896
  4364  0000                     _UIE	set	3894
  4365  0000                     _UEIE	set	3895
  4366  0000                     _UCFG	set	3897
  4367  0000                     _UEP1	set	3879
  4368  0000                     _UEP0	set	3878
  4369  0000                     _ADRESL	set	4035
  4370  0000                     _ADRESH	set	4036
  4371  0000                     _ADCON1bits	set	4033
  4372  0000                     _ADCON0bits	set	4034
  4373  0000                     _PORTA	set	3968
  4374  0000                     _PORTE	set	3972
  4375  0000                     _TMR2	set	4044
  4376  0000                     _PIE1bits	set	3997
  4377  0000                     _CCPR1L	set	4027
  4378  0000                     _PR2	set	4043
  4379  0000                     _T2CONbits	set	4042
  4380  0000                     _CCP1CONbits	set	4026
  4381  0000                     _RXADDRL	set	3945
  4382  0000                     _RXADDRH	set	3944
  4383  0000                     _DMABCL	set	3943
  4384  0000                     _DMABCH	set	3942
  4385  0000                     _TXADDRL	set	3947
  4386  0000                     _TXADDRH	set	3946
  4387  0000                     _DMACON2bits	set	3974
  4388  0000                     _DMACON1bits	set	3976
  4389  0000                     _SSP2CON1bits	set	3954
  4390  0000                     _SSP2STATbits	set	3955
  4391  0000                     _PORTDbits	set	3971
  4392  0000                     _PORTEbits	set	3972
  4393  0000                     _SSP1BUF	set	4041
  4394  0000                     _SSP1CON2bits	set	4037
  4395  0000                     _SSP1CON1bits	set	4038
  4396  0000                     _SSP1ADD	set	4040
  4397  0000                     _SSP1STATbits	set	4039
  4398  0000                     _PORTAbits	set	3968
  4399  0000                     _T0CONbits	set	4053
  4400  0000                     _TRISEbits	set	3990
  4401  0000                     _EECON2	set	4007
  4402  0000                     _LATBbits	set	3978
  4403  0000                     _LATAbits	set	3977
  4404  0000                     _TRISAbits	set	3986
  4405  0000                     _LATCbits	set	3979
  4406  0000                     _TRISCbits	set	3988
  4407  0000                     _TRISBbits	set	3987
  4408  0000                     _LATDbits	set	3980
  4409  0000                     _TRISDbits	set	3989
  4410  0000                     _TMR0L	set	4054
  4411  0000                     _TMR0H	set	4055
  4412  0000                     _PIR1bits	set	3998
  4413  0000                     _OSCCON	set	4051
  4414  0000                     _OSCTUNEbits	set	3995
  4415  0000                     _INTCONbits	set	4082
  4416  0000                     _IPR2bits	set	4002
  4417  0000                     _RCONbits	set	4048
  4418  0000                     _UCON	set	3941
  4419  0000                     _USTAT	set	3940
  4420  0000                     _PIR2bits	set	4001
  4421  0000                     _UIRbits	set	3938
  4422  0000                     _UCONbits	set	3941
  4423  0000                     _UIR	set	3938
  4424  0000                     _UEIR	set	3939
  4425  0000                     _PIE2bits	set	4000
  4426  00A2FE                     
  4427                           ; BSR set to: 1
  4428  00A2FE  68                 	db	104	;'h'
  4429  00A2FF  65                 	db	101	;'e'
  4430  00A300  6C                 	db	108	;'l'
  4431  00A301  6C                 	db	108	;'l'
  4432  00A302  6F                 	db	111	;'o'
  4433  00A303  20                 	db	32
  4434  00A304  77                 	db	119	;'w'
  4435  00A305  6F                 	db	111	;'o'
  4436  00A306  72                 	db	114	;'r'
  4437  00A307  6C                 	db	108	;'l'
  4438  00A308  64                 	db	100	;'d'
  4439  00A309  21                 	db	33
  4440  00A30A  00                 	db	0
  4441  00A30B                     
  4442                           ; BSR set to: 1
  4443  00A30B  53                 	db	83	;'S'
  4444  00A30C  74                 	db	116	;'t'
  4445  00A30D  65                 	db	101	;'e'
  4446  00A30E  70                 	db	112	;'p'
  4447  00A30F  70                 	db	112	;'p'
  4448  00A310  65                 	db	101	;'e'
  4449  00A311  72                 	db	114	;'r'
  4450  00A312  43                 	db	67	;'C'
  4451  00A313  74                 	db	116	;'t'
  4452  00A314  72                 	db	114	;'r'
  4453  00A315  6C                 	db	108	;'l'
  4454  00A316  00                 	db	0
  4455  00A317                     
  4456                           ; BSR set to: 1
  4457  00A317  46                 	db	70	;'F'
  4458  00A318  49                 	db	73	;'I'
  4459  00A319  4C                 	db	76	;'L'
  4460  00A31A  45                 	db	69	;'E'
  4461  00A31B  20                 	db	32
  4462  00A31C  20                 	db	32
  4463  00A31D  20                 	db	32
  4464  00A31E  20                 	db	32
  4465  00A31F  00                 	db	0
  4466  00A320                     STR_7:
  4467                           
  4468                           ; BSR set to: 1
  4469  00A320  4D                 	db	77	;'M'
  4470  00A321  53                 	db	83	;'S'
  4471  00A322  44                 	db	68	;'D'
  4472  00A323  4F                 	db	79	;'O'
  4473  00A324  53                 	db	83	;'S'
  4474  00A325  35                 	db	53	;'5'
  4475  00A326  2E                 	db	46
  4476  00A327  30                 	db	48	;'0'
  4477  00A328  00                 	db	0
  4478  00A329                     STR_1:
  4479                           
  4480                           ; BSR set to: 1
  4481  00A329  20                 	db	32
  4482  00A32A  20                 	db	32
  4483  00A32B  20                 	db	32
  4484  00A32C  20                 	db	32
  4485  00A32D  20                 	db	32
  4486  00A32E  20                 	db	32
  4487  00A32F  20                 	db	32
  4488  00A330  20                 	db	32
  4489  00A331  00                 	db	0
  4490  00A332                     STR_2:
  4491                           
  4492                           ; BSR set to: 1
  4493  00A332  43                 	db	67	;'C'
  4494  00A333  61                 	db	97	;'a'
  4495  00A334  6E                 	db	110	;'n'
  4496  00A335  63                 	db	99	;'c'
  4497  00A336  65                 	db	101	;'e'
  4498  00A337  6C                 	db	108	;'l'
  4499  00A338  00                 	db	0
  4500  00A339                     STR_6:
  4501                           
  4502                           ; BSR set to: 1
  4503  00A339  53                 	db	83	;'S'
  4504  00A33A  74                 	db	116	;'t'
  4505  00A33B  6F                 	db	111	;'o'
  4506  00A33C  70                 	db	112	;'p'
  4507  00A33D  20                 	db	32
  4508  00A33E  00                 	db	0
  4509  00A33F                     
  4510                           ; BSR set to: 1
  4511  00A33F  54                 	db	84	;'T'
  4512  00A340  58                 	db	88	;'X'
  4513  00A341  54                 	db	84	;'T'
  4514  00A342  00                 	db	0
  4515  0000                     
  4516                           ; #config settings
  4517  00A343  00                 	db	0	; dummy byte at the end
  4518  0000                     
  4519                           	psect	cinit
  4520  013A90                     __pcinit:
  4521                           	opt stack 0
  4522  013A90                     start_initialization:
  4523                           	opt stack 0
  4524  013A90                     __initialization:
  4525                           	opt stack 0
  4526                           
  4527                           ; Initialize objects allocated to BANK4 (80 bytes)
  4528                           ; load TBLPTR registers with __pidataBANK4
  4529  013A90  0ED6               	movlw	low __pidataBANK4
  4530  013A92  6EF6               	movwf	tblptrl,c
  4531  013A94  0E50               	movlw	high __pidataBANK4
  4532  013A96  6EF7               	movwf	tblptrh,c
  4533  013A98  0E01               	movlw	low (__pidataBANK4 shr (0+16))
  4534  013A9A  6EF8               	movwf	tblptru,c
  4535  013A9C  EE04  F000         	lfsr	0,__pdataBANK4
  4536  013AA0  EE10 F050          	lfsr	1,80
  4537  013AA4                     copy_data0:
  4538  013AA4  0009               	tblrd		*+
  4539  013AA6  CFF5 FFEE          	movff	tablat,postinc0
  4540  013AAA  50E5               	movf	postdec1,w,c
  4541  013AAC  50E1               	movf	fsr1l,w,c
  4542  013AAE  E1FA               	bnz	copy_data0
  4543                           
  4544                           ; Initialize objects allocated to BANK2 (77 bytes)
  4545                           ; load TBLPTR registers with __pidataBANK2
  4546  013AB0  0E06               	movlw	low __pidataBANK2
  4547  013AB2  6EF6               	movwf	tblptrl,c
  4548  013AB4  0E53               	movlw	high __pidataBANK2
  4549  013AB6  6EF7               	movwf	tblptrh,c
  4550  013AB8  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  4551  013ABA  6EF8               	movwf	tblptru,c
  4552  013ABC  EE02  F099         	lfsr	0,__pdataBANK2
  4553  013AC0  EE10 F04D          	lfsr	1,77
  4554  013AC4                     copy_data1:
  4555  013AC4  0009               	tblrd		*+
  4556  013AC6  CFF5 FFEE          	movff	tablat,postinc0
  4557  013ACA  50E5               	movf	postdec1,w,c
  4558  013ACC  50E1               	movf	fsr1l,w,c
  4559  013ACE  E1FA               	bnz	copy_data1
  4560                           
  4561                           ; Clear objects allocated to BIGRAMll (1024 bytes)
  4562  013AD0  EE08  F000         	lfsr	0,__pbssBIGRAMll
  4563  013AD4  EE14 F000          	lfsr	1,1024
  4564  013AD8                     clear_0:
  4565  013AD8  6AEE               	clrf	postinc0,c
  4566  013ADA  50E5               	movf	postdec1,w,c
  4567  013ADC  50E1               	movf	fsr1l,w,c
  4568  013ADE  E1FC               	bnz	clear_0
  4569  013AE0  50E2               	movf	fsr1h,w,c
  4570  013AE2  E1FA               	bnz	clear_0
  4571                           
  4572                           ; Clear objects allocated to BANK3 (192 bytes)
  4573  013AE4  EE03  F000         	lfsr	0,__pbssBANK3
  4574  013AE8  0EC0               	movlw	192
  4575  013AEA                     clear_1:
  4576  013AEA  6AEE               	clrf	postinc0,c
  4577  013AEC  06E8               	decf	wreg,f,c
  4578  013AEE  E1FD               	bnz	clear_1
  4579                           
  4580                           ; Clear objects allocated to BANK2 (153 bytes)
  4581  013AF0  EE02  F000         	lfsr	0,__pbssBANK2
  4582  013AF4  0E99               	movlw	153
  4583  013AF6                     clear_2:
  4584  013AF6  6AEE               	clrf	postinc0,c
  4585  013AF8  06E8               	decf	wreg,f,c
  4586  013AFA  E1FD               	bnz	clear_2
  4587                           
  4588                           ; Clear objects allocated to BANK1 (195 bytes)
  4589  013AFC  EE01  F000         	lfsr	0,__pbssBANK1
  4590  013B00  0EC3               	movlw	195
  4591  013B02                     clear_3:
  4592  013B02  6AEE               	clrf	postinc0,c
  4593  013B04  06E8               	decf	wreg,f,c
  4594  013B06  E1FD               	bnz	clear_3
  4595                           
  4596                           ; Clear objects allocated to BANK0 (2 bytes)
  4597  013B08  0100               	movlb	0
  4598  013B0A  6BFF               	clrf	(__pbssBANK0+1)& (0+255),b
  4599  013B0C  6BFE               	clrf	__pbssBANK0& (0+255),b
  4600                           
  4601                           ; Clear objects allocated to COMRAM (12 bytes)
  4602  013B0E  EE00  F053         	lfsr	0,__pbssCOMRAM
  4603  013B12  0E0C               	movlw	12
  4604  013B14                     clear_4:
  4605  013B14  6AEE               	clrf	postinc0,c
  4606  013B16  06E8               	decf	wreg,f,c
  4607  013B18  E1FD               	bnz	clear_4
  4608  013B1A                     end_of_initialization:
  4609                           	opt stack 0
  4610  013B1A                     __end_of__initialization:
  4611                           	opt stack 0
  4612  013B1A  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4613  013B1C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4614  013B1E  0100               	movlb	0
  4615  013B20  EFFD  F09C         	goto	_main	;jump to C main() function
  4616                           tblptru	equ	0xFF8
  4617                           tblptrh	equ	0xFF7
  4618                           tblptrl	equ	0xFF6
  4619                           tablat	equ	0xFF5
  4620                           postinc0	equ	0xFEE
  4621                           wreg	equ	0xFE8
  4622                           postdec1	equ	0xFE5
  4623                           fsr1h	equ	0xFE2
  4624                           fsr1l	equ	0xFE1
  4625                           
  4626                           	psect	bssCOMRAM
  4627  000053                     __pbssCOMRAM:
  4628                           	opt stack 0
  4629  000053                     _inPipes:
  4630                           	opt stack 0
  4631  000053                     	ds	6
  4632  000059                     _pBDTEntryEP0OutNext:
  4633                           	opt stack 0
  4634  000059                     	ds	2
  4635  00005B                     _pBDTEntryEP0OutCurrent:
  4636                           	opt stack 0
  4637  00005B                     	ds	2
  4638  00005D                     _USBDeviceState:
  4639                           	opt stack 0
  4640  00005D                     	ds	1
  4641  00005E                     _USTATcopy:
  4642                           	opt stack 0
  4643  00005E                     	ds	1
  4644                           tblptru	equ	0xFF8
  4645                           tblptrh	equ	0xFF7
  4646                           tblptrl	equ	0xFF6
  4647                           tablat	equ	0xFF5
  4648                           postinc0	equ	0xFEE
  4649                           wreg	equ	0xFE8
  4650                           postdec1	equ	0xFE5
  4651                           fsr1h	equ	0xFE2
  4652                           fsr1l	equ	0xFE1
  4653                           
  4654                           	psect	bssBANK0
  4655  0000FE                     __pbssBANK0:
  4656                           	opt stack 0
  4657  0000FE                     _motor_current_speed:
  4658                           	opt stack 0
  4659  0000FE                     	ds	2
  4660                           tblptru	equ	0xFF8
  4661                           tblptrh	equ	0xFF7
  4662                           tblptrl	equ	0xFF6
  4663                           tablat	equ	0xFF5
  4664                           postinc0	equ	0xFEE
  4665                           wreg	equ	0xFE8
  4666                           postdec1	equ	0xFE5
  4667                           fsr1h	equ	0xFE2
  4668                           fsr1l	equ	0xFE1
  4669                           
  4670                           	psect	bssBANK1
  4671  000100                     __pbssBANK1:
  4672                           	opt stack 0
  4673  000100                     _outPipes:
  4674                           	opt stack 0
  4675  000100                     	ds	9
  4676  000109                     _pBDTEntryIn:
  4677                           	opt stack 0
  4678  000109                     	ds	6
  4679  00010F                     _pBDTEntryOut:
  4680                           	opt stack 0
  4681  00010F                     	ds	6
  4682  000115                     _motor_final_stepcount:
  4683                           	opt stack 0
  4684  000115                     	ds	4
  4685  000119                     _motor_current_stepcount:
  4686                           	opt stack 0
  4687  000119                     	ds	4
  4688  00011D                     _LBA:
  4689                           	opt stack 0
  4690  00011D                     	ds	4
  4691  000121                     _USB1msTickCount:
  4692                           	opt stack 0
  4693  000121                     	ds	4
  4694  000125                     _config_external:
  4695                           	opt stack 0
  4696  000125                     	ds	3
  4697  000128                     _config_internal:
  4698                           	opt stack 0
  4699  000128                     	ds	3
  4700  00012B                     _ep_data_out:
  4701                           	opt stack 0
  4702  00012B                     	ds	3
  4703  00012E                     _ep_data_in:
  4704                           	opt stack 0
  4705  00012E                     	ds	3
  4706  000131                     _motor_maximum_speed:
  4707                           	opt stack 0
  4708  000131                     	ds	2
  4709  000133                     _USBInHandle:
  4710                           	opt stack 0
  4711  000133                     	ds	2
  4712  000135                     _USBOutHandle:
  4713                           	opt stack 0
  4714  000135                     	ds	2
  4715  000137                     _TransferLength:
  4716                           	opt stack 0
  4717  000137                     	ds	2
  4718  000139                     _gblMediaPresent:
  4719                           	opt stack 0
  4720  000139                     	ds	2
  4721  00013B                     _MSBBufferIndex:
  4722                           	opt stack 0
  4723  00013B                     	ds	2
  4724  00013D                     _USBMSDInHandle:
  4725                           	opt stack 0
  4726  00013D                     	ds	2
  4727  00013F                     _USBMSDOutHandle:
  4728                           	opt stack 0
  4729  00013F                     	ds	2
  4730  000141                     _ptrNextData:
  4731                           	opt stack 0
  4732  000141                     	ds	2
  4733  000143                     _pDst:
  4734                           	opt stack 0
  4735  000143                     	ds	2
  4736  000145                     _enc2:
  4737                           	opt stack 0
  4738  000145                     	ds	1
  4739  000146                     _enc1:
  4740                           	opt stack 0
  4741  000146                     	ds	1
  4742  000147                     _motor_mode:
  4743                           	opt stack 0
  4744  000147                     	ds	1
  4745  000148                     _motor_direction:
  4746                           	opt stack 0
  4747  000148                     	ds	1
  4748  000149                     _motor_move_type:
  4749                           	opt stack 0
  4750  000149                     	ds	1
  4751  00014A                     _motor_cue_write_index:
  4752                           	opt stack 0
  4753  00014A                     	ds	1
  4754  00014B                     _motor_cue_read_index:
  4755                           	opt stack 0
  4756  00014B                     	ds	1
  4757  00014C                     _active_configuration:
  4758                           	opt stack 0
  4759  00014C                     	ds	1
  4760  00014D                     _power_state:
  4761                           	opt stack 0
  4762  00014D                     	ds	1
  4763  00014E                     _MSDCBWValid:
  4764                           	opt stack 0
  4765  00014E                     	ds	1
  4766  00014F                     _MSDHostNoData:
  4767                           	opt stack 0
  4768  00014F                     	ds	1
  4769  000150                     _SoftDetach:
  4770                           	opt stack 0
  4771  000150                     	ds	1
  4772  000151                     _gblCBWLength:
  4773                           	opt stack 0
  4774  000151                     	ds	1
  4775  000152                     _MSDRetryAttempt:
  4776                           	opt stack 0
  4777  000152                     	ds	1
  4778  000153                     _MSDWriteState:
  4779                           	opt stack 0
  4780  000153                     	ds	1
  4781  000154                     _MSDReadState:
  4782                           	opt stack 0
  4783  000154                     	ds	1
  4784  000155                     _MSDCommandState:
  4785                           	opt stack 0
  4786  000155                     	ds	1
  4787  000156                     _MSD_State:
  4788                           	opt stack 0
  4789  000156                     	ds	1
  4790  000157                     _USBTicksSinceSuspendEnd:
  4791                           	opt stack 0
  4792  000157                     	ds	1
  4793  000158                     _USBDeferOUTDataStagePackets:
  4794                           	opt stack 0
  4795  000158                     	ds	1
  4796  000159                     _USBDeferINDataStagePackets:
  4797                           	opt stack 0
  4798  000159                     	ds	1
  4799  00015A                     _USBStatusStageEnabledFlag2:
  4800                           	opt stack 0
  4801  00015A                     	ds	1
  4802  00015B                     _USBStatusStageEnabledFlag1:
  4803                           	opt stack 0
  4804  00015B                     	ds	1
  4805  00015C                     _USBDeferStatusStagePacket:
  4806                           	opt stack 0
  4807  00015C                     	ds	1
  4808  00015D                     _USBStatusStageTimeoutCounter:
  4809                           	opt stack 0
  4810  00015D                     	ds	1
  4811  00015E                     _BothEP0OutUOWNsSet:
  4812                           	opt stack 0
  4813  00015E                     	ds	1
  4814  00015F                     _endpoint_number:
  4815                           	opt stack 0
  4816  00015F                     	ds	1
  4817  000160                     _USBBusIsSuspended:
  4818                           	opt stack 0
  4819  000160                     	ds	1
  4820  000161                     _RemoteWakeup:
  4821                           	opt stack 0
  4822  000161                     	ds	1
  4823  000162                     _controlTransferState:
  4824                           	opt stack 0
  4825  000162                     	ds	1
  4826  000163                     _shortPacketStatus:
  4827                           	opt stack 0
  4828  000163                     	ds	1
  4829  000164                     _os:
  4830                           	opt stack 0
  4831  000164                     	ds	49
  4832  000195                     _config:
  4833                           	opt stack 0
  4834  000195                     	ds	41
  4835  0001BE                     _USBAlternateInterface:
  4836                           	opt stack 0
  4837  0001BE                     	ds	2
  4838  0001C0                     _active_protocol:
  4839                           	opt stack 0
  4840  0001C0                     	ds	1
  4841  0001C1                     _idle_rate:
  4842                           	opt stack 0
  4843  0001C1                     	ds	1
  4844  0001C2                     _USBActiveConfiguration:
  4845                           	opt stack 0
  4846  0001C2                     	ds	1
  4847                           tblptru	equ	0xFF8
  4848                           tblptrh	equ	0xFF7
  4849                           tblptrl	equ	0xFF6
  4850                           tablat	equ	0xFF5
  4851                           postinc0	equ	0xFEE
  4852                           wreg	equ	0xFE8
  4853                           postdec1	equ	0xFE5
  4854                           fsr1h	equ	0xFE2
  4855                           fsr1l	equ	0xFE1
  4856                           
  4857                           	psect	bssBANK2
  4858  000200                     __pbssBANK2:
  4859                           	opt stack 0
  4860  000200                     _gblCBW:
  4861                           	opt stack 0
  4862  000200                     	ds	31
  4863  00021F                     _gblSenseData:
  4864                           	opt stack 0
  4865  00021F                     	ds	18
  4866  000231                     _params:
  4867                           	opt stack 0
  4868  000231                     	ds	7
  4869  000238                     _motor_next_speed_check:
  4870                           	opt stack 0
  4871  000238                     	ds	4
  4872  00023C                     _gblBLKLen:
  4873                           	opt stack 0
  4874  00023C                     	ds	4
  4875  000240                     _gblNumBLKS:
  4876                           	opt stack 0
  4877  000240                     	ds	4
  4878  000244                     _display_content:
  4879                           	opt stack 0
  4880  000244                     	ds	80
  4881  000294                     _mediaInformation:
  4882                           	opt stack 0
  4883  000294                     	ds	5
  4884                           tblptru	equ	0xFF8
  4885                           tblptrh	equ	0xFF7
  4886                           tblptrl	equ	0xFF6
  4887                           tablat	equ	0xFF5
  4888                           postinc0	equ	0xFEE
  4889                           wreg	equ	0xFE8
  4890                           postdec1	equ	0xFE5
  4891                           fsr1h	equ	0xFE2
  4892                           fsr1l	equ	0xFE1
  4893                           
  4894                           	psect	dataBANK2
  4895  000299                     __pdataBANK2:
  4896                           	opt stack 0
  4897  000299                     _LUN:
  4898                           	opt stack 0
  4899  000299                     	ds	29
  4900  0002B6                     i2c_display_init@F7093:
  4901                           	opt stack 0
  4902  0002B6                     	ds	9
  4903  0002BF                     __i2c_display_send_init_sequence@F7090:
  4904                           	opt stack 0
  4905  0002BF                     	ds	9
  4906  0002C8                     	ds	8
  4907  0002D0                     _configFile_used_name:
  4908                           	opt stack 0
  4909  0002D0                     	ds	8
  4910  0002D8                     _configFile_name:
  4911                           	opt stack 0
  4912  0002D8                     	ds	8
  4913  0002E0                     _configFile_used_extention:
  4914                           	opt stack 0
  4915  0002E0                     	ds	3
  4916  0002E3                     _configFile_extention:
  4917                           	opt stack 0
  4918  0002E3                     	ds	3
  4919                           tblptru	equ	0xFF8
  4920                           tblptrh	equ	0xFF7
  4921                           tblptrl	equ	0xFF6
  4922                           tablat	equ	0xFF5
  4923                           postinc0	equ	0xFEE
  4924                           wreg	equ	0xFE8
  4925                           postdec1	equ	0xFE5
  4926                           fsr1h	equ	0xFE2
  4927                           fsr1l	equ	0xFE1
  4928                           
  4929                           	psect	bssBANK3
  4930  000300                     __pbssBANK3:
  4931                           	opt stack 0
  4932  000300                     _motor_command_cue:
  4933                           	opt stack 0
  4934  000300                     	ds	64
  4935  000340                     _ToSendDataBuffer:
  4936                           	opt stack 0
  4937  000340                     	ds	64
  4938  000380                     _ReceivedDataBuffer:
  4939                           	opt stack 0
  4940  000380                     	ds	64
  4941                           tblptru	equ	0xFF8
  4942                           tblptrh	equ	0xFF7
  4943                           tblptrl	equ	0xFF6
  4944                           tablat	equ	0xFF5
  4945                           postinc0	equ	0xFEE
  4946                           wreg	equ	0xFE8
  4947                           postdec1	equ	0xFE5
  4948                           fsr1h	equ	0xFE2
  4949                           fsr1l	equ	0xFE1
  4950                           
  4951                           	psect	dataBANK4
  4952  000400                     __pdataBANK4:
  4953                           	opt stack 0
  4954  000400                     _dc_startup:
  4955                           	opt stack 0
  4956  000400                     	ds	80
  4957                           tblptru	equ	0xFF8
  4958                           tblptrh	equ	0xFF7
  4959                           tblptrl	equ	0xFF6
  4960                           tablat	equ	0xFF5
  4961                           postinc0	equ	0xFEE
  4962                           wreg	equ	0xFE8
  4963                           postdec1	equ	0xFE5
  4964                           fsr1h	equ	0xFE2
  4965                           fsr1l	equ	0xFE1
  4966                           
  4967                           	psect	bssBIGRAMll
  4968  000800                     __pbssBIGRAMll:
  4969                           	opt stack 0
  4970  000800                     _ConfigFile_buffer:
  4971                           	opt stack 0
  4972  000800                     	ds	512
  4973  000A00                     _buffer:
  4974                           	opt stack 0
  4975  000A00                     	ds	512
  4976                           tblptru	equ	0xFF8
  4977                           tblptrh	equ	0xFF7
  4978                           tblptrl	equ	0xFF6
  4979                           tablat	equ	0xFF5
  4980                           postinc0	equ	0xFEE
  4981                           wreg	equ	0xFE8
  4982                           postdec1	equ	0xFE5
  4983                           fsr1h	equ	0xFE2
  4984                           fsr1l	equ	0xFE1
  4985                           
  4986                           	psect	cstackBANK1
  4987  0001C3                     __pcstackBANK1:
  4988                           	opt stack 0
  4989  0001C3                     ??_configFile_read:
  4990                           
  4991                           ; 1 bytes @ 0x0
  4992  0001C3                     	ds	8
  4993  0001CB                     configFile_read@item_string:
  4994                           	opt stack 0
  4995                           
  4996                           ; 31 bytes @ 0x8
  4997  0001CB                     	ds	31
  4998  0001EA                     configFile_read@value_string:
  4999                           	opt stack 0
  5000                           
  5001                           ; 12 bytes @ 0x27
  5002  0001EA                     	ds	12
  5003  0001F6                     configFile_read@file_size:
  5004                           	opt stack 0
  5005                           
  5006                           ; 4 bytes @ 0x33
  5007  0001F6                     	ds	4
  5008  0001FA                     configFile_read@file_number:
  5009                           	opt stack 0
  5010                           
  5011                           ; 1 bytes @ 0x37
  5012  0001FA                     	ds	1
  5013  0001FB                     configFile_read@position:
  5014                           	opt stack 0
  5015                           
  5016                           ; 4 bytes @ 0x38
  5017  0001FB                     	ds	4
  5018                           tblptru	equ	0xFF8
  5019                           tblptrh	equ	0xFF7
  5020                           tblptrl	equ	0xFF6
  5021                           tablat	equ	0xFF5
  5022                           postinc0	equ	0xFEE
  5023                           wreg	equ	0xFE8
  5024                           postdec1	equ	0xFE5
  5025                           fsr1h	equ	0xFE2
  5026                           fsr1l	equ	0xFE1
  5027                           
  5028                           	psect	cstackBANK0
  5029  000060                     __pcstackBANK0:
  5030                           	opt stack 0
  5031  000060                     ??_motor_stop:
  5032  000060                     ??_isdigit:
  5033  000060                     ??__i2c_wait_idle:
  5034  000060                     ??__display_clear:
  5035  000060                     ??__divide_jump_size_increment:
  5036  000060                     ??__divide_jump_size_decrement:
  5037  000060                     ?_USBTransferOnePacket:
  5038                           	opt stack 0
  5039  000060                     ?_ExternalFlash_MediaInitialize:
  5040                           	opt stack 0
  5041  000060                     ?_ExternalFlash_SectorSizeRead:
  5042                           	opt stack 0
  5043  000060                     ?_strlen:
  5044                           	opt stack 0
  5045  000060                     ?_strncmp:
  5046                           	opt stack 0
  5047  000060                     ?__sector_from_file_number:
  5048                           	opt stack 0
  5049  000060                     ?__offset_from_file_number:
  5050                           	opt stack 0
  5051  000060                     ?__data_sector_from_cluster:
  5052                           	opt stack 0
  5053  000060                     ?__fat_sector_from_cluster:
  5054                           	opt stack 0
  5055  000060                     ?__fat_offset_from_cluster:
  5056                           	opt stack 0
  5057  000060                     ?__cluster_from_sector_and_offset:
  5058                           	opt stack 0
  5059  000060                     ?__get_available_offset_from_buffer:
  5060                           	opt stack 0
  5061  000060                     ?__read_value_from_offset:
  5062                           	opt stack 0
  5063  000060                     ?__get_time:
  5064                           	opt stack 0
  5065  000060                     ?__get_date:
  5066                           	opt stack 0
  5067  000060                     ?__encoder_next_setup_stepsize:
  5068                           	opt stack 0
  5069  000060                     ?__encoder_next_arc_step_size:
  5070                           	opt stack 0
  5071  000060                     ?___wmul:
  5072                           	opt stack 0
  5073  000060                     ?___lwdiv:
  5074                           	opt stack 0
  5075  000060                     ?___lwmod:
  5076                           	opt stack 0
  5077  000060                     ?_ExternalFlash_CapacityRead:
  5078                           	opt stack 0
  5079  000060                     ?__motor_calculate_distance:
  5080                           	opt stack 0
  5081  000060                     ?__display_position_in_degrees:
  5082                           	opt stack 0
  5083  000060                     ?___lmul:
  5084                           	opt stack 0
  5085  000060                     ?___lldiv:
  5086                           	opt stack 0
  5087  000060                     ?___aldiv:
  5088                           	opt stack 0
  5089  000060                     ?___almod:
  5090                           	opt stack 0
  5091  000060                     ?___fltol:
  5092                           	opt stack 0
  5093  000060                     ?___llmod:
  5094                           	opt stack 0
  5095  000060                     USBTransferOnePacket@dir:
  5096                           	opt stack 0
  5097  000060                     USBStallEndpoint@dir:
  5098                           	opt stack 0
  5099  000060                     __i2c_send@dat:
  5100                           	opt stack 0
  5101  000060                     display_get_character@position:
  5102                           	opt stack 0
  5103  000060                     __encoder_next_divide_step_size@old_stepsize:
  5104                           	opt stack 0
  5105  000060                     toupper@c:
  5106                           	opt stack 0
  5107  000060                     MSDComputeDeviceInAndResidue@DiExpected:
  5108                           	opt stack 0
  5109  000060                     SYSTEM_Initialize@pll_startup_counter:
  5110                           	opt stack 0
  5111  000060                     ExternalFlash_MediaInitialize@config:
  5112                           	opt stack 0
  5113  000060                     ExternalFlash_SectorSizeRead@config:
  5114                           	opt stack 0
  5115  000060                     ExternalFlash_CapacityRead@config:
  5116                           	opt stack 0
  5117  000060                     ExternalFlash_MediaDetect@config:
  5118                           	opt stack 0
  5119  000060                     ExternalFlash_WriteProtectStateGet@config:
  5120                           	opt stack 0
  5121  000060                     __data_sector_from_cluster@fat_cluster:
  5122                           	opt stack 0
  5123  000060                     __fat_sector_from_cluster@cluster:
  5124                           	opt stack 0
  5125  000060                     __fat_offset_from_cluster@cluster:
  5126                           	opt stack 0
  5127  000060                     __cluster_from_sector_and_offset@sector:
  5128                           	opt stack 0
  5129  000060                     __get_available_offset_from_buffer@minimum_offset:
  5130                           	opt stack 0
  5131  000060                     __read_value_from_offset@offset:
  5132                           	opt stack 0
  5133  000060                     __write_value_to_offset@offset:
  5134                           	opt stack 0
  5135  000060                     __get_mbr@idx:
  5136                           	opt stack 0
  5137  000060                     __get_fbr@idx:
  5138                           	opt stack 0
  5139  000060                     spi_tx@data:
  5140                           	opt stack 0
  5141  000060                     spi_tx_tx@command:
  5142                           	opt stack 0
  5143  000060                     spi_tx_rx@command:
  5144                           	opt stack 0
  5145  000060                     __fill_buffer_get_mode_details@outBuffer:
  5146                           	opt stack 0
  5147  000060                     motor_change_speed@new_speed:
  5148                           	opt stack 0
  5149  000060                     __encoder_next_setup_stepsize@old_stepsize:
  5150                           	opt stack 0
  5151  000060                     __encoder_next_arc_step_size@old_stepsize:
  5152                           	opt stack 0
  5153  000060                     __get_item@item_string:
  5154                           	opt stack 0
  5155  000060                     ___wmul@multiplier:
  5156                           	opt stack 0
  5157  000060                     ___lwdiv@dividend:
  5158                           	opt stack 0
  5159  000060                     ___lwmod@dividend:
  5160                           	opt stack 0
  5161  000060                     memcpy@d1:
  5162                           	opt stack 0
  5163  000060                     memset@p1:
  5164                           	opt stack 0
  5165  000060                     strlen@s:
  5166                           	opt stack 0
  5167  000060                     strncmp@s1:
  5168                           	opt stack 0
  5169  000060                     __spi_init@details:
  5170                           	opt stack 0
  5171  000060                     __motor_run@distance_in_steps:
  5172                           	opt stack 0
  5173  000060                     __motor_schedule_command@distance_in_steps:
  5174                           	opt stack 0
  5175  000060                     __motor_calculate_distance@target_position:
  5176                           	opt stack 0
  5177  000060                     ___lmul@multiplier:
  5178                           	opt stack 0
  5179  000060                     ___lldiv@dividend:
  5180                           	opt stack 0
  5181  000060                     ___aldiv@dividend:
  5182                           	opt stack 0
  5183  000060                     ___almod@dividend:
  5184                           	opt stack 0
  5185  000060                     ___fltol@f1:
  5186                           	opt stack 0
  5187  000060                     ___llmod@dividend:
  5188                           	opt stack 0
  5189                           
  5190                           ; 4 bytes @ 0x0
  5191  000060                     	ds	1
  5192  000061                     ??_USBStallEndpoint:
  5193  000061                     ??_display_get_character:
  5194  000061                     ?_stricmp:
  5195                           	opt stack 0
  5196  000061                     _isdigit$8441:
  5197                           	opt stack 0
  5198  000061                     USBTransferOnePacket@data:
  5199                           	opt stack 0
  5200  000061                     stricmp@s1:
  5201                           	opt stack 0
  5202                           
  5203                           ; 2 bytes @ 0x1
  5204  000061                     	ds	1
  5205  000062                     ??_MSDComputeDeviceInAndResidue:
  5206  000062                     ??_strlen:
  5207  000062                     ??__fill_buffer_get_mode_details:
  5208  000062                     ??__get_mbr:
  5209  000062                     ??__get_fbr:
  5210  000062                     ??__encoder_next_setup_stepsize:
  5211  000062                     ??__encoder_next_arc_step_size:
  5212  000062                     __display_clear@row:
  5213                           	opt stack 0
  5214  000062                     __sector_from_file_number@file_number:
  5215                           	opt stack 0
  5216  000062                     __offset_from_file_number@file_number:
  5217                           	opt stack 0
  5218  000062                     isdigit@c:
  5219                           	opt stack 0
  5220  000062                     SYSTEM_Initialize@pll_startup_counter_3143:
  5221                           	opt stack 0
  5222  000062                     __cluster_from_sector_and_offset@offset:
  5223                           	opt stack 0
  5224  000062                     __get_available_offset_from_buffer@buffer:
  5225                           	opt stack 0
  5226  000062                     __read_value_from_offset@buffer:
  5227                           	opt stack 0
  5228  000062                     __write_value_to_offset@buffer:
  5229                           	opt stack 0
  5230  000062                     spi_tx@length:
  5231                           	opt stack 0
  5232  000062                     spi_tx_tx@command_length:
  5233                           	opt stack 0
  5234  000062                     spi_tx_rx@command_length:
  5235                           	opt stack 0
  5236  000062                     motor_set_manual_speed@new_speed:
  5237                           	opt stack 0
  5238  000062                     __get_item@value_string:
  5239                           	opt stack 0
  5240  000062                     ___wmul@multiplicand:
  5241                           	opt stack 0
  5242  000062                     ___lwdiv@divisor:
  5243                           	opt stack 0
  5244  000062                     ___lwmod@divisor:
  5245                           	opt stack 0
  5246  000062                     memcpy@s1:
  5247                           	opt stack 0
  5248  000062                     memset@c:
  5249                           	opt stack 0
  5250  000062                     strncmp@s2:
  5251                           	opt stack 0
  5252                           
  5253                           ; 2 bytes @ 0x2
  5254  000062                     	ds	1
  5255  000063                     USBTransferOnePacket@len:
  5256                           	opt stack 0
  5257  000063                     __display_clear@col:
  5258                           	opt stack 0
  5259  000063                     display_get_character@line:
  5260                           	opt stack 0
  5261  000063                     spi_init@configuration:
  5262                           	opt stack 0
  5263  000063                     __sector_from_file_number@sector:
  5264                           	opt stack 0
  5265  000063                     __offset_from_file_number@offset:
  5266                           	opt stack 0
  5267  000063                     stricmp@s2:
  5268                           	opt stack 0
  5269                           
  5270                           ; 2 bytes @ 0x3
  5271  000063                     	ds	1
  5272  000064                     ??_USBTransferOnePacket:
  5273  000064                     ??_spi_tx:
  5274  000064                     ??__motor_calculate_distance:
  5275  000064                     ??__get_available_offset_from_buffer:
  5276  000064                     ??__read_value_from_offset:
  5277  000064                     ??___fltol:
  5278  000064                     SYSTEM_Initialize@state:
  5279                           	opt stack 0
  5280  000064                     ___lwmod@counter:
  5281                           	opt stack 0
  5282  000064                     __write_value_to_offset@value:
  5283                           	opt stack 0
  5284  000064                     spi_tx_tx@data:
  5285                           	opt stack 0
  5286  000064                     spi_tx_rx@data:
  5287                           	opt stack 0
  5288  000064                     __fill_buffer_get_display@outBuffer:
  5289                           	opt stack 0
  5290  000064                     __parse_set_manual_speed@data:
  5291                           	opt stack 0
  5292  000064                     __motor_run@speed:
  5293                           	opt stack 0
  5294  000064                     __motor_schedule_command@speed:
  5295                           	opt stack 0
  5296  000064                     __get_item@buffer:
  5297                           	opt stack 0
  5298  000064                     ___wmul@product:
  5299                           	opt stack 0
  5300  000064                     ___lwdiv@quotient:
  5301                           	opt stack 0
  5302  000064                     memcpy@n:
  5303                           	opt stack 0
  5304  000064                     memset@n:
  5305                           	opt stack 0
  5306  000064                     strlen@cp:
  5307                           	opt stack 0
  5308  000064                     strncmp@len:
  5309                           	opt stack 0
  5310  000064                     __display_position_in_degrees@position:
  5311                           	opt stack 0
  5312  000064                     ___lmul@multiplicand:
  5313                           	opt stack 0
  5314  000064                     ___lldiv@divisor:
  5315                           	opt stack 0
  5316  000064                     ___aldiv@divisor:
  5317                           	opt stack 0
  5318  000064                     ___almod@divisor:
  5319                           	opt stack 0
  5320  000064                     ___llmod@divisor:
  5321                           	opt stack 0
  5322                           
  5323                           ; 4 bytes @ 0x4
  5324  000064                     	ds	1
  5325  000065                     ??_stricmp:
  5326  000065                     USBStallEndpoint@ep:
  5327                           	opt stack 0
  5328  000065                     __i2c_eeprom_busy@busy:
  5329                           	opt stack 0
  5330  000065                     __i2c_write@data:
  5331                           	opt stack 0
  5332  000065                     __i2c_read@data:
  5333                           	opt stack 0
  5334  000065                     i2c_display_write_fixed@data:
  5335                           	opt stack 0
  5336                           
  5337                           ; 2 bytes @ 0x5
  5338  000065                     	ds	1
  5339  000066                     ??_strncmp:
  5340  000066                     ??__write_value_to_offset:
  5341  000066                     ??__get_item:
  5342  000066                     ?_atoi:
  5343                           	opt stack 0
  5344  000066                     __fill_buffer_get_display@secondHalf:
  5345                           	opt stack 0
  5346  000066                     __motor_run@type:
  5347                           	opt stack 0
  5348  000066                     __motor_schedule_command@type:
  5349                           	opt stack 0
  5350  000066                     ___lwdiv@counter:
  5351                           	opt stack 0
  5352  000066                     stricmp@r:
  5353                           	opt stack 0
  5354  000066                     USBStallEndpoint@p:
  5355                           	opt stack 0
  5356  000066                     __get_available_offset_from_buffer@offset:
  5357                           	opt stack 0
  5358  000066                     spi_tx_tx@data_length:
  5359                           	opt stack 0
  5360  000066                     spi_tx_rx@data_length:
  5361                           	opt stack 0
  5362  000066                     __parse_set_manual_speed@out_buffer:
  5363                           	opt stack 0
  5364  000066                     atoi@s:
  5365                           	opt stack 0
  5366  000066                     memcpy@d:
  5367                           	opt stack 0
  5368  000066                     memset@p:
  5369                           	opt stack 0
  5370                           
  5371                           ; 2 bytes @ 0x6
  5372  000066                     	ds	1
  5373  000067                     ??__fill_buffer_get_display:
  5374  000067                     ??__motor_run:
  5375  000067                     __i2c_write@length:
  5376                           	opt stack 0
  5377  000067                     __i2c_read@length:
  5378                           	opt stack 0
  5379  000067                     i2c_display_write_fixed@length:
  5380                           	opt stack 0
  5381  000067                     __motor_schedule_command@direction:
  5382                           	opt stack 0
  5383  000067                     __read_value_from_offset@value:
  5384                           	opt stack 0
  5385  000067                     utoa@buf:
  5386                           	opt stack 0
  5387                           
  5388                           ; 2 bytes @ 0x7
  5389  000067                     	ds	1
  5390  000068                     ??_spi_tx_rx:
  5391  000068                     ??_spi_tx_tx:
  5392  000068                     ??_atoi:
  5393  000068                     ??__i2c_read:
  5394  000068                     USBDeviceInit@i:
  5395                           	opt stack 0
  5396  000068                     USBTransferOnePacket@ep:
  5397                           	opt stack 0
  5398  000068                     MSDErrorHandler@ErrorCase:
  5399                           	opt stack 0
  5400  000068                     __i2c_write@slave_address:
  5401                           	opt stack 0
  5402  000068                     i2c_display_write_fixed@pos:
  5403                           	opt stack 0
  5404  000068                     __flash_wakeup@command:
  5405                           	opt stack 0
  5406  000068                     __motor_move_back_forth@return_value_1:
  5407                           	opt stack 0
  5408  000068                     __motor_calculate_distance@direction:
  5409                           	opt stack 0
  5410  000068                     ___aldiv@counter:
  5411                           	opt stack 0
  5412  000068                     ___almod@counter:
  5413                           	opt stack 0
  5414  000068                     ___fltol@sign1:
  5415                           	opt stack 0
  5416  000068                     ___llmod@counter:
  5417                           	opt stack 0
  5418  000068                     __parse_set_manual_speed@out_idx_ptr:
  5419                           	opt stack 0
  5420  000068                     memcpy@s:
  5421                           	opt stack 0
  5422  000068                     ___lmul@product:
  5423                           	opt stack 0
  5424  000068                     ___lldiv@quotient:
  5425                           	opt stack 0
  5426                           
  5427                           ; 4 bytes @ 0x8
  5428  000068                     	ds	1
  5429  000069                     MSDErrorHandler@OldMSD_State:
  5430                           	opt stack 0
  5431  000069                     __i2c_write@cntr:
  5432                           	opt stack 0
  5433  000069                     __motor_move_back_forth@return_value_2:
  5434                           	opt stack 0
  5435  000069                     __get_item@value_ctr:
  5436                           	opt stack 0
  5437  000069                     ___aldiv@sign:
  5438                           	opt stack 0
  5439  000069                     ___almod@sign:
  5440                           	opt stack 0
  5441  000069                     ___fltol@exp1:
  5442                           	opt stack 0
  5443  000069                     USBTransferOnePacket@handle:
  5444                           	opt stack 0
  5445  000069                     utoa@val:
  5446                           	opt stack 0
  5447  000069                     __motor_calculate_distance@distance:
  5448                           	opt stack 0
  5449                           
  5450                           ; 4 bytes @ 0x9
  5451  000069                     	ds	1
  5452  00006A                     ??__parse_set_manual_speed:
  5453  00006A                     ??_i2c_display_init:
  5454  00006A                     ?___xxtofl:
  5455                           	opt stack 0
  5456  00006A                     __ic2_display_set_ddram_address@address:
  5457                           	opt stack 0
  5458  00006A                     motor_set_zero@direction:
  5459                           	opt stack 0
  5460  00006A                     __get_item@item_ctr:
  5461                           	opt stack 0
  5462  00006A                     atoi@sign:
  5463                           	opt stack 0
  5464  00006A                     memcpy@tmp:
  5465                           	opt stack 0
  5466  00006A                     __ic2_display_set_cgram_address@data_array:
  5467                           	opt stack 0
  5468  00006A                     MSDCheckForErrorCases@DeviceBytes:
  5469                           	opt stack 0
  5470  00006A                     ___aldiv@quotient:
  5471                           	opt stack 0
  5472  00006A                     ___xxtofl@val:
  5473                           	opt stack 0
  5474                           
  5475                           ; 4 bytes @ 0xA
  5476  00006A                     	ds	1
  5477  00006B                     __motor_run@direction:
  5478                           	opt stack 0
  5479  00006B                     __ic2_display_set_ddram_address@data_array:
  5480                           	opt stack 0
  5481  00006B                     __fill_buffer_get_status@outBuffer:
  5482                           	opt stack 0
  5483  00006B                     __parse_set_manual_speed@new_speed:
  5484                           	opt stack 0
  5485  00006B                     atoi@a:
  5486                           	opt stack 0
  5487  00006B                     utoa@base:
  5488                           	opt stack 0
  5489  00006B                     i2c_display_init@init_sequence:
  5490                           	opt stack 0
  5491                           
  5492                           ; 9 bytes @ 0xB
  5493  00006B                     	ds	1
  5494  00006C                     ?__flash_get_status:
  5495                           	opt stack 0
  5496  00006C                     ?__motor_distance_to_limit:
  5497                           	opt stack 0
  5498  00006C                     ?_atol:
  5499                           	opt stack 0
  5500  00006C                     __fill_buffer_get_display@cntr:
  5501                           	opt stack 0
  5502  00006C                     ___lldiv@counter:
  5503                           	opt stack 0
  5504  00006C                     atol@s:
  5505                           	opt stack 0
  5506                           
  5507                           ; 2 bytes @ 0xC
  5508  00006C                     	ds	1
  5509  00006D                     __ic2_display_set_cgram_address@address:
  5510                           	opt stack 0
  5511  00006D                     i2c_display_cursor@position:
  5512                           	opt stack 0
  5513  00006D                     __fill_buffer_get_display@line:
  5514                           	opt stack 0
  5515  00006D                     utoa@v:
  5516                           	opt stack 0
  5517  00006D                     ultoa@buf:
  5518                           	opt stack 0
  5519                           
  5520                           ; 2 bytes @ 0xD
  5521  00006D                     	ds	1
  5522  00006E                     ??___xxtofl:
  5523  00006E                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  5524                           	opt stack 0
  5525  00006E                     i2c_display_cursor@line:
  5526                           	opt stack 0
  5527  00006E                     __flash_get_status@command:
  5528                           	opt stack 0
  5529  00006E                     __fill_buffer_get_display@start_line:
  5530                           	opt stack 0
  5531  00006E                     i2c_display_program_custom_character@bit_pattern:
  5532                           	opt stack 0
  5533                           
  5534                           ; 2 bytes @ 0xE
  5535  00006E                     	ds	1
  5536  00006F                     MSDCheckForErrorCases@MSDErrorCase:
  5537                           	opt stack 0
  5538  00006F                     __i2c_read@slave_address:
  5539                           	opt stack 0
  5540  00006F                     i2c_display_cursor@address:
  5541                           	opt stack 0
  5542  00006F                     __fill_buffer_get_display@position:
  5543                           	opt stack 0
  5544  00006F                     utoa@c:
  5545                           	opt stack 0
  5546  00006F                     __flash_get_status@status:
  5547                           	opt stack 0
  5548  00006F                     ultoa@val:
  5549                           	opt stack 0
  5550                           
  5551                           ; 4 bytes @ 0xF
  5552  00006F                     	ds	1
  5553  000070                     ??__motor_distance_to_limit:
  5554  000070                     ??_atol:
  5555  000070                     ??_i2c_display_program_custom_character:
  5556  000070                     MSDCheckForErrorCases@DeviceNoData:
  5557                           	opt stack 0
  5558  000070                     __i2c_read@cntr:
  5559                           	opt stack 0
  5560  000070                     display_update@line:
  5561                           	opt stack 0
  5562  000070                     api_prepare@inBuffer:
  5563                           	opt stack 0
  5564  000070                     itoa@buf:
  5565                           	opt stack 0
  5566                           
  5567                           ; 2 bytes @ 0x10
  5568  000070                     	ds	1
  5569  000071                     i2c_eeprom_read@address:
  5570                           	opt stack 0
  5571  000071                     __flash_is_busy@status:
  5572                           	opt stack 0
  5573                           
  5574                           ; 2 bytes @ 0x11
  5575  000071                     	ds	1
  5576  000072                     ___xxtofl@sign:
  5577                           	opt stack 0
  5578  000072                     api_prepare@outBuffer:
  5579                           	opt stack 0
  5580  000072                     itoa@val:
  5581                           	opt stack 0
  5582                           
  5583                           ; 2 bytes @ 0x12
  5584  000072                     	ds	1
  5585  000073                     ___xxtofl@exp:
  5586                           	opt stack 0
  5587  000073                     i2c_eeprom_read@data:
  5588                           	opt stack 0
  5589  000073                     __flash_copy_page_to_buffer@page:
  5590                           	opt stack 0
  5591  000073                     __flash_compare_page_to_buffer@page:
  5592                           	opt stack 0
  5593  000073                     __flash_write_to_buffer@start:
  5594                           	opt stack 0
  5595  000073                     __flash_write_page_from_buffer@page:
  5596                           	opt stack 0
  5597  000073                     __flash_partial_read@page:
  5598                           	opt stack 0
  5599  000073                     ultoa@base:
  5600                           	opt stack 0
  5601  000073                     __flash_set_page_size@command:
  5602                           	opt stack 0
  5603                           
  5604                           ; 4 bytes @ 0x13
  5605  000073                     	ds	1
  5606  000074                     api_prepare@command:
  5607                           	opt stack 0
  5608  000074                     atol@sign:
  5609                           	opt stack 0
  5610  000074                     itoa@base:
  5611                           	opt stack 0
  5612  000074                     __motor_distance_to_limit@distance_to_limit_in_steps:
  5613                           	opt stack 0
  5614  000074                     ___xxtofl@arg:
  5615                           	opt stack 0
  5616  000074                     i2c_display_program_custom_character@data_array:
  5617                           	opt stack 0
  5618                           
  5619                           ; 11 bytes @ 0x14
  5620  000074                     	ds	1
  5621  000075                     i2c_eeprom_read@length:
  5622                           	opt stack 0
  5623  000075                     __flash_copy_page_to_buffer@buffer:
  5624                           	opt stack 0
  5625  000075                     __flash_compare_page_to_buffer@buffer:
  5626                           	opt stack 0
  5627  000075                     __flash_write_page_from_buffer@buffer:
  5628                           	opt stack 0
  5629  000075                     __flash_write_to_buffer@data:
  5630                           	opt stack 0
  5631  000075                     __flash_partial_read@start:
  5632                           	opt stack 0
  5633  000075                     atol@a:
  5634                           	opt stack 0
  5635  000075                     ultoa@v:
  5636                           	opt stack 0
  5637                           
  5638                           ; 4 bytes @ 0x15
  5639  000075                     	ds	1
  5640  000076                     ??_i2c_eeprom_read:
  5641  000076                     ??__flash_copy_page_to_buffer:
  5642  000076                     ??__flash_compare_page_to_buffer:
  5643  000076                     ??__flash_write_page_from_buffer:
  5644  000076                     itoa@cp:
  5645                           	opt stack 0
  5646                           
  5647                           ; 2 bytes @ 0x16
  5648  000076                     	ds	1
  5649  000077                     i2c_eeprom_read@addr:
  5650                           	opt stack 0
  5651  000077                     __flash_set_page_size@size:
  5652                           	opt stack 0
  5653  000077                     __flash_write_to_buffer@data_length:
  5654                           	opt stack 0
  5655  000077                     __flash_partial_read@length:
  5656                           	opt stack 0
  5657                           
  5658                           ; 2 bytes @ 0x17
  5659  000077                     	ds	1
  5660  000078                     ?___fldiv:
  5661                           	opt stack 0
  5662  000078                     ?___flmul:
  5663                           	opt stack 0
  5664  000078                     ?___flneg:
  5665                           	opt stack 0
  5666  000078                     i2c_eeprom_read@slave_address:
  5667                           	opt stack 0
  5668  000078                     __motor_distance_to_limit@direction:
  5669                           	opt stack 0
  5670  000078                     __display_padded_itoa@value:
  5671                           	opt stack 0
  5672  000078                     __display_itoa_u16@value:
  5673                           	opt stack 0
  5674  000078                     ___flge@ff1:
  5675                           	opt stack 0
  5676  000078                     ___flneg@f1:
  5677                           	opt stack 0
  5678  000078                     ___fldiv@b:
  5679                           	opt stack 0
  5680  000078                     ___flmul@b:
  5681                           	opt stack 0
  5682                           
  5683                           ; 4 bytes @ 0x18
  5684  000078                     	ds	1
  5685  000079                     __flash_write_to_buffer@buffer:
  5686                           	opt stack 0
  5687  000079                     atol@c:
  5688                           	opt stack 0
  5689  000079                     ultoa@c:
  5690                           	opt stack 0
  5691  000079                     __flash_compare_page_to_buffer@status:
  5692                           	opt stack 0
  5693  000079                     __flash_partial_read@data:
  5694                           	opt stack 0
  5695  000079                     __flash_copy_page_to_buffer@command:
  5696                           	opt stack 0
  5697  000079                     __flash_write_page_from_buffer@command:
  5698                           	opt stack 0
  5699  000079                     __motor_distance_to_limit@absolute_position_in_steps:
  5700                           	opt stack 0
  5701  000079                     i2c_eeprom_recover_position@buffer:
  5702                           	opt stack 0
  5703                           
  5704                           ; 7 bytes @ 0x19
  5705  000079                     	ds	1
  5706  00007A                     __display_padded_itoa@length:
  5707                           	opt stack 0
  5708  00007A                     __display_itoa_u16@text:
  5709                           	opt stack 0
  5710  00007A                     ltoa@buf:
  5711                           	opt stack 0
  5712  00007A                     __flash_write_to_buffer@command:
  5713                           	opt stack 0
  5714                           
  5715                           ; 4 bytes @ 0x1A
  5716  00007A                     	ds	1
  5717  00007B                     ??__flash_partial_read:
  5718  00007B                     __display_padded_itoa@text:
  5719                           	opt stack 0
  5720  00007B                     __flash_compare_page_to_buffer@command:
  5721                           	opt stack 0
  5722                           
  5723                           ; 4 bytes @ 0x1B
  5724  00007B                     	ds	1
  5725  00007C                     ?___fladd:
  5726                           	opt stack 0
  5727  00007C                     __display_start@cntr:
  5728                           	opt stack 0
  5729  00007C                     ___flge@ff2:
  5730                           	opt stack 0
  5731  00007C                     ___fladd@b:
  5732                           	opt stack 0
  5733  00007C                     ___fldiv@a:
  5734                           	opt stack 0
  5735  00007C                     ___flmul@a:
  5736                           	opt stack 0
  5737  00007C                     ltoa@val:
  5738                           	opt stack 0
  5739                           
  5740                           ; 4 bytes @ 0x1C
  5741  00007C                     	ds	1
  5742  00007D                     ??__display_padded_itoa:
  5743  00007D                     __motor_move_steps@distance_in_steps:
  5744                           	opt stack 0
  5745  00007D                     __motor_decide_direction@target_position_in_steps:
  5746                           	opt stack 0
  5747                           
  5748                           ; 4 bytes @ 0x1D
  5749  00007D                     	ds	2
  5750  00007F                     i2c_display_program_custom_character@address:
  5751                           	opt stack 0
  5752  00007F                     flash_sector_write@page:
  5753                           	opt stack 0
  5754  00007F                     flash_partial_write@page:
  5755                           	opt stack 0
  5756  00007F                     __flash_partial_read@command:
  5757                           	opt stack 0
  5758                           
  5759                           ; 4 bytes @ 0x1F
  5760  00007F                     	ds	1
  5761  000080                     ??___fldiv:
  5762  000080                     ??___flmul:
  5763  000080                     ??___flge:
  5764  000080                     i2c_display_program_custom_character@cntr:
  5765                           	opt stack 0
  5766  000080                     ltoa@base:
  5767                           	opt stack 0
  5768  000080                     ___fladd@a:
  5769                           	opt stack 0
  5770                           
  5771                           ; 4 bytes @ 0x20
  5772  000080                     	ds	1
  5773  000081                     __motor_decide_direction@overshoot:
  5774                           	opt stack 0
  5775  000081                     flash_sector_write@data:
  5776                           	opt stack 0
  5777  000081                     flash_partial_write@start:
  5778                           	opt stack 0
  5779  000081                     __motor_move_steps@speed:
  5780                           	opt stack 0
  5781                           
  5782                           ; 2 bytes @ 0x21
  5783  000081                     	ds	1
  5784  000082                     ltoa@cp:
  5785                           	opt stack 0
  5786  000082                     __motor_decide_direction@distance_to_limit_cw:
  5787                           	opt stack 0
  5788  000082                     __display_padded_itoa@tmp:
  5789                           	opt stack 0
  5790                           
  5791                           ; 10 bytes @ 0x22
  5792  000082                     	ds	1
  5793  000083                     flash_sector_write@match:
  5794                           	opt stack 0
  5795  000083                     __motor_move_steps@overshoot:
  5796                           	opt stack 0
  5797  000083                     flash_partial_write@length:
  5798                           	opt stack 0
  5799  000083                     __flash_partial_read@address:
  5800                           	opt stack 0
  5801                           
  5802                           ; 4 bytes @ 0x23
  5803  000083                     	ds	1
  5804  000084                     ??___fladd:
  5805  000084                     __motor_move_steps@type:
  5806                           	opt stack 0
  5807  000084                     ___flmul@sign:
  5808                           	opt stack 0
  5809  000084                     ExternalFlash_SectorWrite@config:
  5810                           	opt stack 0
  5811  000084                     fat_restore_mbr_fbr@cntr:
  5812                           	opt stack 0
  5813  000084                     __add_item@item_string:
  5814                           	opt stack 0
  5815  000084                     ___fldiv@rem:
  5816                           	opt stack 0
  5817                           
  5818                           ; 4 bytes @ 0x24
  5819  000084                     	ds	1
  5820  000085                     __motor_move_steps@return_value_1:
  5821                           	opt stack 0
  5822  000085                     flash_partial_write@data:
  5823                           	opt stack 0
  5824  000085                     ___flmul@grs:
  5825                           	opt stack 0
  5826                           
  5827                           ; 4 bytes @ 0x25
  5828  000085                     	ds	1
  5829  000086                     __motor_move_steps@return_value_2:
  5830                           	opt stack 0
  5831  000086                     ExternalFlash_SectorWrite@sector_addr:
  5832                           	opt stack 0
  5833  000086                     __motor_decide_direction@distance_to_limit_ccw:
  5834                           	opt stack 0
  5835  000086                     __add_item@value:
  5836                           	opt stack 0
  5837                           
  5838                           ; 4 bytes @ 0x26
  5839  000086                     	ds	1
  5840  000087                     flash_partial_write@match:
  5841                           	opt stack 0
  5842  000087                     flash_sector_read@page:
  5843                           	opt stack 0
  5844  000087                     flash_partial_read@page:
  5845                           	opt stack 0
  5846  000087                     __motor_move_steps@distance_to_limit:
  5847                           	opt stack 0
  5848                           
  5849                           ; 4 bytes @ 0x27
  5850  000087                     	ds	1
  5851  000088                     ___fldiv@sign:
  5852                           	opt stack 0
  5853  000088                     __write_root@data:
  5854                           	opt stack 0
  5855                           
  5856                           ; 2 bytes @ 0x28
  5857  000088                     	ds	1
  5858  000089                     ___flmul@aexp:
  5859                           	opt stack 0
  5860  000089                     flash_sector_read@data:
  5861                           	opt stack 0
  5862  000089                     flash_partial_read@start:
  5863                           	opt stack 0
  5864  000089                     ___fldiv@new_exp:
  5865                           	opt stack 0
  5866                           
  5867                           ; 2 bytes @ 0x29
  5868  000089                     	ds	1
  5869  00008A                     ___flmul@bexp:
  5870                           	opt stack 0
  5871  00008A                     ExternalFlash_SectorWrite@buffer:
  5872                           	opt stack 0
  5873  00008A                     __write_root@sector:
  5874                           	opt stack 0
  5875  00008A                     __add_item@buffer:
  5876                           	opt stack 0
  5877  00008A                     __motor_decide_direction@distance_to_target_cw:
  5878                           	opt stack 0
  5879                           
  5880                           ; 4 bytes @ 0x2A
  5881  00008A                     	ds	1
  5882  00008B                     ??_fat_get_format_status:
  5883  00008B                     ?__get_available_cluster:
  5884                           	opt stack 0
  5885  00008B                     __motor_move_steps@direction:
  5886                           	opt stack 0
  5887  00008B                     flash_partial_read@length:
  5888                           	opt stack 0
  5889  00008B                     ExternalFlash_SectorRead@config:
  5890                           	opt stack 0
  5891  00008B                     __get_available_cluster@first_sector:
  5892                           	opt stack 0
  5893  00008B                     fat_find_file@name:
  5894                           	opt stack 0
  5895  00008B                     ___fldiv@grs:
  5896                           	opt stack 0
  5897  00008B                     ___flmul@prod:
  5898                           	opt stack 0
  5899                           
  5900                           ; 4 bytes @ 0x2B
  5901  00008B                     	ds	1
  5902  00008C                     ??__add_item:
  5903  00008C                     __display_padded_itoa@len:
  5904                           	opt stack 0
  5905  00008C                     ExternalFlash_SectorWrite@allowWriteToZero:
  5906                           	opt stack 0
  5907  00008C                     ___fladd@signs:
  5908                           	opt stack 0
  5909  00008C                     __write_root@offset:
  5910                           	opt stack 0
  5911  00008C                     motor_move_endless@speed:
  5912                           	opt stack 0
  5913  00008C                     motor_move_steps@distance:
  5914                           	opt stack 0
  5915                           
  5916                           ; 4 bytes @ 0x2C
  5917  00008C                     	ds	1
  5918  00008D                     __display_padded_itoa@pos:
  5919                           	opt stack 0
  5920  00008D                     ___fladd@aexp:
  5921                           	opt stack 0
  5922  00008D                     flash_partial_read@data:
  5923                           	opt stack 0
  5924  00008D                     ExternalFlash_SectorWrite@page:
  5925                           	opt stack 0
  5926  00008D                     __get_available_cluster@skip_sector:
  5927                           	opt stack 0
  5928  00008D                     fat_find_file@extension:
  5929                           	opt stack 0
  5930  00008D                     fat_get_format_status@cntr:
  5931                           	opt stack 0
  5932  00008D                     ExternalFlash_SectorRead@sector_addr:
  5933                           	opt stack 0
  5934                           
  5935                           ; 4 bytes @ 0x2D
  5936  00008D                     	ds	1
  5937  00008E                     __display_padded_itoa@padding:
  5938                           	opt stack 0
  5939  00008E                     __write_root@file_number:
  5940                           	opt stack 0
  5941  00008E                     motor_move_endless@direction:
  5942                           	opt stack 0
  5943  00008E                     __add_item@length:
  5944                           	opt stack 0
  5945  00008E                     ___fladd@bexp:
  5946                           	opt stack 0
  5947  00008E                     __motor_decide_direction@distance_to_target_ccw:
  5948                           	opt stack 0
  5949                           
  5950                           ; 4 bytes @ 0x2E
  5951  00008E                     	ds	1
  5952  00008F                     ??_MSDWriteHandler:
  5953  00008F                     ??_fat_find_file:
  5954  00008F                     ?__read_fat:
  5955                           	opt stack 0
  5956  00008F                     ___fladd@grs:
  5957                           	opt stack 0
  5958  00008F                     ___fldiv@bexp:
  5959                           	opt stack 0
  5960  00008F                     __display_signed_itoa@value:
  5961                           	opt stack 0
  5962  00008F                     __get_available_cluster@cluster:
  5963                           	opt stack 0
  5964  00008F                     __root_is_available@root_sector:
  5965                           	opt stack 0
  5966  00008F                     __read_fat@cluster:
  5967                           	opt stack 0
  5968  00008F                     fat_get_file_information@data:
  5969                           	opt stack 0
  5970  00008F                     ___flmul@temp:
  5971                           	opt stack 0
  5972                           
  5973                           ; 2 bytes @ 0x2F
  5974  00008F                     	ds	1
  5975  000090                     ___fldiv@aexp:
  5976                           	opt stack 0
  5977  000090                     motor_move_steps@speed:
  5978                           	opt stack 0
  5979                           
  5980                           ; 2 bytes @ 0x30
  5981  000090                     	ds	1
  5982  000091                     ??_adc_read_temperature:
  5983  000091                     ?__motor_get_speed_in_degrees:
  5984                           	opt stack 0
  5985  000091                     ?__steps_from_degrees:
  5986                           	opt stack 0
  5987  000091                     ?__motor_steps_from_degrees_int:
  5988                           	opt stack 0
  5989  000091                     ?__step_position_from_divide_position:
  5990                           	opt stack 0
  5991  000091                     fat_find_file@file_number:
  5992                           	opt stack 0
  5993  000091                     __display_signed_itoa@text:
  5994                           	opt stack 0
  5995  000091                     ExternalFlash_SectorRead@buffer:
  5996                           	opt stack 0
  5997  000091                     __get_available_cluster@offset:
  5998                           	opt stack 0
  5999  000091                     __root_is_available@offset:
  6000                           	opt stack 0
  6001  000091                     __read_fat@sector:
  6002                           	opt stack 0
  6003  000091                     __motor_steps_from_degrees_int@degrees:
  6004                           	opt stack 0
  6005  000091                     __motor_get_speed_in_degrees@speed_index:
  6006                           	opt stack 0
  6007  000091                     __step_position_from_divide_position@divide_position:
  6008                           	opt stack 0
  6009  000091                     motor_calculate_position_in_degrees@tmp:
  6010                           	opt stack 0
  6011  000091                     __steps_from_degrees@degrees:
  6012                           	opt stack 0
  6013                           
  6014                           ; 4 bytes @ 0x31
  6015  000091                     	ds	1
  6016  000092                     motor_move_steps@overshoot:
  6017                           	opt stack 0
  6018  000092                     fat_find_file@sector:
  6019                           	opt stack 0
  6020  000092                     fat_get_file_information@root_sector:
  6021                           	opt stack 0
  6022  000092                     motor_goto_steps@position:
  6023                           	opt stack 0
  6024                           
  6025                           ; 4 bytes @ 0x32
  6026  000092                     	ds	1
  6027  000093                     ??__motor_get_speed_in_degrees:
  6028  000093                     __root_is_available@file_number:
  6029                           	opt stack 0
  6030  000093                     motor_move_steps@direction:
  6031                           	opt stack 0
  6032  000093                     ExternalFlash_SectorRead@page:
  6033                           	opt stack 0
  6034  000093                     __get_available_cluster@sector:
  6035                           	opt stack 0
  6036  000093                     __read_fat@offset:
  6037                           	opt stack 0
  6038  000093                     adc_read_temperature@adc_result:
  6039                           	opt stack 0
  6040                           
  6041                           ; 2 bytes @ 0x33
  6042  000093                     	ds	1
  6043  000094                     __root_is_available@first_byte:
  6044                           	opt stack 0
  6045  000094                     motor_arc_move@direction:
  6046                           	opt stack 0
  6047  000094                     fat_find_file@offset:
  6048                           	opt stack 0
  6049  000094                     fat_get_file_information@offset:
  6050                           	opt stack 0
  6051  000094                     __parse_jump_steps@data:
  6052                           	opt stack 0
  6053  000094                     __parse_jump_steps_with_overshoot@data:
  6054                           	opt stack 0
  6055                           
  6056                           ; 2 bytes @ 0x34
  6057  000094                     	ds	1
  6058  000095                     ??_MSDReadHandler:
  6059  000095                     ?__make_cluster_chain:
  6060                           	opt stack 0
  6061  000095                     ?_fat_get_file_size:
  6062                           	opt stack 0
  6063  000095                     __get_available_root_entry@file_number:
  6064                           	opt stack 0
  6065  000095                     __make_cluster_chain@first_cluster:
  6066                           	opt stack 0
  6067  000095                     __read_fat@value:
  6068                           	opt stack 0
  6069  000095                     __motor_steps_from_degrees_int@temp:
  6070                           	opt stack 0
  6071  000095                     __motor_get_speed_in_degrees@speed:
  6072                           	opt stack 0
  6073  000095                     __step_position_from_divide_position@target_position:
  6074                           	opt stack 0
  6075  000095                     motor_arc_move@arc_in_steps:
  6076                           	opt stack 0
  6077  000095                     adc_read_temperature@temperature:
  6078                           	opt stack 0
  6079  000095                     __steps_from_degrees@temp:
  6080                           	opt stack 0
  6081                           
  6082                           ; 4 bytes @ 0x35
  6083  000095                     	ds	1
  6084  000096                     fat_get_file_information@file_number:
  6085                           	opt stack 0
  6086  000096                     __parse_jump_steps@out_buffer:
  6087                           	opt stack 0
  6088  000096                     __parse_jump_steps_with_overshoot@out_buffer:
  6089                           	opt stack 0
  6090  000096                     motor_goto_steps@speed:
  6091                           	opt stack 0
  6092                           
  6093                           ; 2 bytes @ 0x36
  6094  000096                     	ds	1
  6095  000097                     ?__find_nth_cluster:
  6096                           	opt stack 0
  6097  000097                     __find_nth_cluster@cluster:
  6098                           	opt stack 0
  6099  000097                     __make_cluster_chain@number_of_clusters:
  6100                           	opt stack 0
  6101                           
  6102                           ; 2 bytes @ 0x37
  6103  000097                     	ds	1
  6104  000098                     motor_goto_steps@overshoot:
  6105                           	opt stack 0
  6106  000098                     __parse_jump_steps@out_idx_ptr:
  6107                           	opt stack 0
  6108  000098                     __parse_jump_steps_with_overshoot@out_idx_ptr:
  6109                           	opt stack 0
  6110                           
  6111                           ; 2 bytes @ 0x38
  6112  000098                     	ds	1
  6113  000099                     ??_MSDProcessCommandMediaPresent:
  6114  000099                     ??__make_cluster_chain:
  6115  000099                     __find_nth_cluster@n:
  6116                           	opt stack 0
  6117  000099                     fat_get_file_size@sector:
  6118                           	opt stack 0
  6119  000099                     motor_move_degrees_int@distance:
  6120                           	opt stack 0
  6121  000099                     __parse_item@item_string:
  6122                           	opt stack 0
  6123  000099                     __motor_get_speed_in_degrees@lookup:
  6124                           	opt stack 0
  6125  000099                     motor_goto_steps@distance_in_steps:
  6126                           	opt stack 0
  6127                           
  6128                           ; 4 bytes @ 0x39
  6129  000099                     	ds	1
  6130  00009A                     ??__parse_jump_steps:
  6131  00009A                     ??__parse_jump_steps_with_overshoot:
  6132                           
  6133                           ; 1 bytes @ 0x3A
  6134  00009A                     	ds	1
  6135  00009B                     __parse_jump_steps@return_value:
  6136                           	opt stack 0
  6137  00009B                     __parse_jump_steps_with_overshoot@return_value:
  6138                           	opt stack 0
  6139  00009B                     _MSDProcessCommandMediaPresent$2606:
  6140                           	opt stack 0
  6141  00009B                     __find_nth_cluster@offset:
  6142                           	opt stack 0
  6143  00009B                     __make_cluster_chain@next_offset:
  6144                           	opt stack 0
  6145  00009B                     fat_get_file_size@offset:
  6146                           	opt stack 0
  6147  00009B                     motor_move_degrees_int@speed:
  6148                           	opt stack 0
  6149  00009B                     __parse_item@value_string:
  6150                           	opt stack 0
  6151                           
  6152                           ; 2 bytes @ 0x3B
  6153  00009B                     	ds	1
  6154  00009C                     __parse_jump_steps@number_of_steps:
  6155                           	opt stack 0
  6156  00009C                     __parse_jump_steps_with_overshoot@number_of_steps:
  6157                           	opt stack 0
  6158                           
  6159                           ; 4 bytes @ 0x3C
  6160  00009C                     	ds	1
  6161  00009D                     ?_motor_speed_from_index:
  6162                           	opt stack 0
  6163  00009D                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  6164                           	opt stack 0
  6165  00009D                     motor_move_degrees_int@overshoot:
  6166                           	opt stack 0
  6167  00009D                     motor_goto_steps@direction:
  6168                           	opt stack 0
  6169  00009D                     __find_nth_cluster@sector_in_buffer:
  6170                           	opt stack 0
  6171  00009D                     __make_cluster_chain@minimum_sector:
  6172                           	opt stack 0
  6173  00009D                     motor_speed_from_index@speed_index:
  6174                           	opt stack 0
  6175  00009D                     fat_get_file_size@file_size:
  6176                           	opt stack 0
  6177                           
  6178                           ; 4 bytes @ 0x3D
  6179  00009D                     	ds	1
  6180  00009E                     ??_motor_divide_jump:
  6181  00009E                     __parse_command_short@cmd:
  6182                           	opt stack 0
  6183  00009E                     MSDProcessCommandMediaPresent@sectorSize:
  6184                           	opt stack 0
  6185  00009E                     motor_divide_jump_to_nearest@nearest_position_in_steps:
  6186                           	opt stack 0
  6187  00009E                     motor_move_degrees_int@distance_in_steps:
  6188                           	opt stack 0
  6189                           
  6190                           ; 4 bytes @ 0x3E
  6191  00009E                     	ds	1
  6192  00009F                     __display_itoa@value:
  6193                           	opt stack 0
  6194  00009F                     __find_nth_cluster@sector:
  6195                           	opt stack 0
  6196  00009F                     __make_cluster_chain@different_sector_cluster:
  6197                           	opt stack 0
  6198  00009F                     motor_divide_jump@target_position_in_steps:
  6199                           	opt stack 0
  6200                           
  6201                           ; 4 bytes @ 0x3F
  6202  00009F                     	ds	1
  6203  0000A0                     __parse_command_long@data:
  6204                           	opt stack 0
  6205                           
  6206                           ; 2 bytes @ 0x40
  6207  0000A0                     	ds	1
  6208  0000A1                     __display_itoa@decimals:
  6209                           	opt stack 0
  6210  0000A1                     __make_cluster_chain@data_changed:
  6211                           	opt stack 0
  6212  0000A1                     fat_get_file_size@file_number:
  6213                           	opt stack 0
  6214  0000A1                     fat_read_from_file_fast@start_byte:
  6215                           	opt stack 0
  6216  0000A1                     fat_modify_file@start_byte:
  6217                           	opt stack 0
  6218                           
  6219                           ; 4 bytes @ 0x41
  6220  0000A1                     	ds	1
  6221  0000A2                     motor_move_degrees_int@direction:
  6222                           	opt stack 0
  6223  0000A2                     __display_itoa@text:
  6224                           	opt stack 0
  6225  0000A2                     __make_cluster_chain@remaining_clusters:
  6226                           	opt stack 0
  6227  0000A2                     __parse_command_long@out_buffer:
  6228                           	opt stack 0
  6229  0000A2                     motor_divide_jump_to_nearest@nearest_divide_position:
  6230                           	opt stack 0
  6231  0000A2                     MSDProcessCommandMediaPresent@capacity:
  6232                           	opt stack 0
  6233                           
  6234                           ; 4 bytes @ 0x42
  6235  0000A2                     	ds	1
  6236  0000A3                     motor_divide_jump@target_divide_position:
  6237                           	opt stack 0
  6238                           
  6239                           ; 2 bytes @ 0x43
  6240  0000A3                     	ds	1
  6241  0000A4                     ??__display_itoa:
  6242  0000A4                     __make_cluster_chain@sector:
  6243                           	opt stack 0
  6244  0000A4                     __parse_command_long@out_idx_ptr:
  6245                           	opt stack 0
  6246  0000A4                     motor_divide_jump_to_nearest@divide_position_float:
  6247                           	opt stack 0
  6248                           
  6249                           ; 4 bytes @ 0x44
  6250  0000A4                     	ds	1
  6251  0000A5                     fat_modify_file@length:
  6252                           	opt stack 0
  6253  0000A5                     fat_read_from_file_fast@length:
  6254                           	opt stack 0
  6255                           
  6256                           ; 4 bytes @ 0x45
  6257  0000A5                     	ds	1
  6258  0000A6                     MSDProcessCommandMediaPresent@i:
  6259                           	opt stack 0
  6260  0000A6                     __parse_command_long@length:
  6261                           	opt stack 0
  6262  0000A6                     __make_cluster_chain@sector_in_buffer:
  6263                           	opt stack 0
  6264                           
  6265                           ; 2 bytes @ 0x46
  6266  0000A6                     	ds	1
  6267  0000A7                     ??_MSDProcessCommand:
  6268  0000A7                     fat_modify_file@data:
  6269                           	opt stack 0
  6270  0000A7                     api_parse@inBuffer:
  6271                           	opt stack 0
  6272                           
  6273                           ; 2 bytes @ 0x47
  6274  0000A7                     	ds	1
  6275  0000A8                     ??_encoder_statemachine:
  6276  0000A8                     __make_cluster_chain@offset:
  6277                           	opt stack 0
  6278                           
  6279                           ; 2 bytes @ 0x48
  6280  0000A8                     	ds	1
  6281  0000A9                     ??_fat_modify_file:
  6282  0000A9                     api_parse@receivedDataLength:
  6283                           	opt stack 0
  6284  0000A9                     fat_read_from_file_fast@data:
  6285                           	opt stack 0
  6286                           
  6287                           ; 2 bytes @ 0x49
  6288  0000A9                     	ds	1
  6289  0000AA                     __make_cluster_chain@next_cluster:
  6290                           	opt stack 0
  6291  0000AA                     api_parse@outBuffer:
  6292                           	opt stack 0
  6293  0000AA                     __display_itoa@tmp:
  6294                           	opt stack 0
  6295                           
  6296                           ; 10 bytes @ 0x4A
  6297  0000AA                     	ds	1
  6298  0000AB                     fat_read_from_file_fast@cluster:
  6299                           	opt stack 0
  6300                           
  6301                           ; 2 bytes @ 0x4B
  6302  0000AB                     	ds	1
  6303  0000AC                     ??_api_parse:
  6304  0000AC                     ??_MSDTasks:
  6305  0000AC                     fat_create_file@name:
  6306                           	opt stack 0
  6307  0000AC                     fat_resize_file@new_file_size:
  6308                           	opt stack 0
  6309                           
  6310                           ; 4 bytes @ 0x4C
  6311  0000AC                     	ds	1
  6312  0000AD                     _MSDTasks$2588:
  6313                           	opt stack 0
  6314  0000AD                     fat_read_from_file_fast@cluster_number:
  6315                           	opt stack 0
  6316                           
  6317                           ; 2 bytes @ 0x4D
  6318  0000AD                     	ds	1
  6319  0000AE                     fat_create_file@extension:
  6320                           	opt stack 0
  6321  0000AE                     api_parse@out_idx_ptr:
  6322                           	opt stack 0
  6323                           
  6324                           ; 2 bytes @ 0x4E
  6325  0000AE                     	ds	1
  6326  0000AF                     ??_fat_read_from_file_fast:
  6327  0000AF                     _MSDTasks$2589:
  6328                           	opt stack 0
  6329                           
  6330                           ; 2 bytes @ 0x4F
  6331  0000AF                     	ds	1
  6332  0000B0                     ??_fat_resize_file:
  6333  0000B0                     api_parse@out_idx:
  6334                           	opt stack 0
  6335  0000B0                     fat_create_file@size:
  6336                           	opt stack 0
  6337                           
  6338                           ; 4 bytes @ 0x50
  6339  0000B0                     	ds	1
  6340  0000B1                     MSDTasks@i:
  6341                           	opt stack 0
  6342  0000B1                     api_parse@in_idx:
  6343                           	opt stack 0
  6344                           
  6345                           ; 1 bytes @ 0x51
  6346  0000B1                     	ds	1
  6347  0000B2                     
  6348                           ; 1 bytes @ 0x52
  6349  0000B2                     	ds	2
  6350  0000B4                     ??_fat_create_file:
  6351  0000B4                     __display_itoa@len:
  6352                           	opt stack 0
  6353  0000B4                     fat_resize_file@old_number_of_clusters:
  6354                           	opt stack 0
  6355                           
  6356                           ; 2 bytes @ 0x54
  6357  0000B4                     	ds	1
  6358  0000B5                     __display_itoa@missing:
  6359                           	opt stack 0
  6360  0000B5                     fat_modify_file@sector:
  6361                           	opt stack 0
  6362                           
  6363                           ; 2 bytes @ 0x55
  6364  0000B5                     	ds	1
  6365  0000B6                     __display_itoa@pos:
  6366                           	opt stack 0
  6367  0000B6                     fat_resize_file@new_number_of_clusters:
  6368                           	opt stack 0
  6369                           
  6370                           ; 2 bytes @ 0x56
  6371  0000B6                     	ds	1
  6372  0000B7                     fat_modify_file@file_number:
  6373                           	opt stack 0
  6374  0000B7                     __display_itoa_long@value:
  6375                           	opt stack 0
  6376                           
  6377                           ; 4 bytes @ 0x57
  6378  0000B7                     	ds	1
  6379  0000B8                     fat_modify_file@return_code:
  6380                           	opt stack 0
  6381  0000B8                     fat_create_file@number_of_clusters:
  6382                           	opt stack 0
  6383  0000B8                     fat_resize_file@first_cluster:
  6384                           	opt stack 0
  6385                           
  6386                           ; 2 bytes @ 0x58
  6387  0000B8                     	ds	1
  6388  0000B9                     fat_modify_file@cluster:
  6389                           	opt stack 0
  6390                           
  6391                           ; 2 bytes @ 0x59
  6392  0000B9                     	ds	1
  6393  0000BA                     fat_resize_file@file_number:
  6394                           	opt stack 0
  6395  0000BA                     fat_create_file@first_cluster:
  6396                           	opt stack 0
  6397                           
  6398                           ; 2 bytes @ 0x5A
  6399  0000BA                     	ds	1
  6400  0000BB                     __display_itoa_long@decimals:
  6401                           	opt stack 0
  6402  0000BB                     fat_read_from_file_fast@sector:
  6403                           	opt stack 0
  6404  0000BB                     fat_modify_file@offset:
  6405                           	opt stack 0
  6406  0000BB                     fat_resize_file@root:
  6407                           	opt stack 0
  6408                           
  6409                           ; 32 bytes @ 0x5B
  6410  0000BB                     	ds	1
  6411  0000BC                     fat_create_file@file_number:
  6412                           	opt stack 0
  6413  0000BC                     __display_itoa_long@text:
  6414                           	opt stack 0
  6415                           
  6416                           ; 2 bytes @ 0x5C
  6417  0000BC                     	ds	1
  6418  0000BD                     fat_read_from_file_fast@working_cluster:
  6419                           	opt stack 0
  6420  0000BD                     fat_modify_file@number_of_bytes:
  6421                           	opt stack 0
  6422  0000BD                     fat_create_file@root_entry:
  6423                           	opt stack 0
  6424                           
  6425                           ; 32 bytes @ 0x5D
  6426  0000BD                     	ds	1
  6427  0000BE                     ??__display_itoa_long:
  6428                           
  6429                           ; 1 bytes @ 0x5E
  6430  0000BE                     	ds	1
  6431  0000BF                     fat_read_from_file_fast@offset:
  6432                           	opt stack 0
  6433  0000BF                     fat_modify_file@position:
  6434                           	opt stack 0
  6435                           
  6436                           ; 4 bytes @ 0x5F
  6437  0000BF                     	ds	2
  6438  0000C1                     fat_read_from_file_fast@needed_cluster:
  6439                           	opt stack 0
  6440                           
  6441                           ; 2 bytes @ 0x61
  6442  0000C1                     	ds	1
  6443  0000C2                     __display_itoa_long@length:
  6444                           	opt stack 0
  6445                           
  6446                           ; 1 bytes @ 0x62
  6447  0000C2                     	ds	1
  6448  0000C3                     __display_itoa_long@short_value:
  6449                           	opt stack 0
  6450  0000C3                     fat_read_from_file_fast@read_length:
  6451                           	opt stack 0
  6452  0000C3                     fat_modify_file@root:
  6453                           	opt stack 0
  6454                           
  6455                           ; 32 bytes @ 0x63
  6456  0000C3                     	ds	2
  6457  0000C5                     __display_itoa_long@last_digit:
  6458                           	opt stack 0
  6459  0000C5                     fat_read_from_file_fast@position:
  6460                           	opt stack 0
  6461                           
  6462                           ; 4 bytes @ 0x65
  6463  0000C5                     	ds	1
  6464  0000C6                     ??_display_prepare:
  6465                           
  6466                           ; 1 bytes @ 0x66
  6467  0000C6                     	ds	2
  6468  0000C8                     display_prepare@temp:
  6469                           	opt stack 0
  6470                           
  6471                           ; 10 bytes @ 0x68
  6472  0000C8                     	ds	1
  6473  0000C9                     fat_read_from_file@start_byte:
  6474                           	opt stack 0
  6475                           
  6476                           ; 4 bytes @ 0x69
  6477  0000C9                     	ds	4
  6478  0000CD                     fat_read_from_file@length:
  6479                           	opt stack 0
  6480                           
  6481                           ; 4 bytes @ 0x6D
  6482  0000CD                     	ds	4
  6483  0000D1                     fat_read_from_file@data:
  6484                           	opt stack 0
  6485                           
  6486                           ; 2 bytes @ 0x71
  6487  0000D1                     	ds	1
  6488  0000D2                     display_prepare@space:
  6489                           	opt stack 0
  6490                           
  6491                           ; 1 bytes @ 0x72
  6492  0000D2                     	ds	1
  6493  0000D3                     ??_fat_read_from_file:
  6494  0000D3                     display_prepare@cntr:
  6495                           	opt stack 0
  6496                           
  6497                           ; 1 bytes @ 0x73
  6498  0000D3                     	ds	4
  6499  0000D7                     fat_read_from_file@file_number:
  6500                           	opt stack 0
  6501                           
  6502                           ; 1 bytes @ 0x77
  6503  0000D7                     	ds	1
  6504  0000D8                     fat_read_from_file@return_code:
  6505                           	opt stack 0
  6506                           
  6507                           ; 1 bytes @ 0x78
  6508  0000D8                     	ds	1
  6509  0000D9                     fat_read_from_file@cluster:
  6510                           	opt stack 0
  6511                           
  6512                           ; 2 bytes @ 0x79
  6513  0000D9                     	ds	2
  6514  0000DB                     fat_read_from_file@cluster_number:
  6515                           	opt stack 0
  6516                           
  6517                           ; 2 bytes @ 0x7B
  6518  0000DB                     	ds	2
  6519  0000DD                     fat_read_from_file@root:
  6520                           	opt stack 0
  6521                           
  6522                           ; 32 bytes @ 0x7D
  6523  0000DD                     	ds	6
  6524  0000E3                     ??_configFile_write:
  6525                           
  6526                           ; 1 bytes @ 0x83
  6527  0000E3                     	ds	1
  6528  0000E4                     configFile_write@file_number:
  6529                           	opt stack 0
  6530                           
  6531                           ; 1 bytes @ 0x84
  6532  0000E4                     	ds	1
  6533  0000E5                     configFile_write@file_size:
  6534                           	opt stack 0
  6535                           
  6536                           ; 4 bytes @ 0x85
  6537  0000E5                     	ds	24
  6538  0000FD                     main@startup_timer:
  6539                           	opt stack 0
  6540                           
  6541                           ; 1 bytes @ 0x9D
  6542  0000FD                     	ds	1
  6543                           tblptru	equ	0xFF8
  6544                           tblptrh	equ	0xFF7
  6545                           tblptrl	equ	0xFF6
  6546                           tablat	equ	0xFF5
  6547                           postinc0	equ	0xFEE
  6548                           wreg	equ	0xFE8
  6549                           postdec1	equ	0xFE5
  6550                           fsr1h	equ	0xFE2
  6551                           fsr1l	equ	0xFE1
  6552                           
  6553                           	psect	cstackCOMRAM
  6554  000001                     __pcstackCOMRAM:
  6555                           	opt stack 0
  6556  000001                     ??_USBStdGetDscHandler:
  6557  000001                     ??_USBStdGetStatusHandler:
  6558  000001                     ??i2__i2c_wait_idle:
  6559  000001                     ?i2_USBTransferOnePacket:
  6560                           	opt stack 0
  6561  000001                     ?i2_ExternalFlash_MediaInitialize:
  6562                           	opt stack 0
  6563  000001                     USBConfigureEndpoint@direction:
  6564                           	opt stack 0
  6565  000001                     USBCtrlTrfTxService@byteToSend:
  6566                           	opt stack 0
  6567  000001                     USBCtrlTrfRxService@i:
  6568                           	opt stack 0
  6569  000001                     i2USBTransferOnePacket@dir:
  6570                           	opt stack 0
  6571  000001                     i2USBStallEndpoint@dir:
  6572                           	opt stack 0
  6573  000001                     i2__i2c_send@dat:
  6574                           	opt stack 0
  6575  000001                     i2SYSTEM_Initialize@pll_startup_counter:
  6576                           	opt stack 0
  6577  000001                     i2ExternalFlash_MediaInitialize@config:
  6578                           	opt stack 0
  6579  000001                     i2ExternalFlash_MediaDetect@config:
  6580                           	opt stack 0
  6581  000001                     i2memcpy@d1:
  6582                           	opt stack 0
  6583  000001                     i2memset@p1:
  6584                           	opt stack 0
  6585                           
  6586                           ; 2 bytes @ 0x0
  6587  000001                     	ds	1
  6588  000002                     ??_USBConfigureEndpoint:
  6589  000002                     ??i2_USBStallEndpoint:
  6590  000002                     USBCtrlTrfRxService@byteToRead:
  6591                           	opt stack 0
  6592  000002                     USBCtrlTrfInHandler@lastDTS:
  6593                           	opt stack 0
  6594  000002                     USBStdGetStatusHandler@p:
  6595                           	opt stack 0
  6596  000002                     i2USBTransferOnePacket@data:
  6597                           	opt stack 0
  6598                           
  6599                           ; 2 bytes @ 0x1
  6600  000002                     	ds	1
  6601  000003                     i2SYSTEM_Initialize@pll_startup_counter_3143:
  6602                           	opt stack 0
  6603  000003                     i2memcpy@s1:
  6604                           	opt stack 0
  6605  000003                     i2memset@c:
  6606                           	opt stack 0
  6607                           
  6608                           ; 2 bytes @ 0x2
  6609  000003                     	ds	1
  6610  000004                     i2USBTransferOnePacket@len:
  6611                           	opt stack 0
  6612                           
  6613                           ; 1 bytes @ 0x3
  6614  000004                     	ds	1
  6615  000005                     ??i2_USBTransferOnePacket:
  6616  000005                     i2SYSTEM_Initialize@state:
  6617                           	opt stack 0
  6618  000005                     i2memcpy@n:
  6619                           	opt stack 0
  6620  000005                     i2memset@n:
  6621                           	opt stack 0
  6622                           
  6623                           ; 2 bytes @ 0x4
  6624  000005                     	ds	1
  6625  000006                     USBConfigureEndpoint@EPNum:
  6626                           	opt stack 0
  6627  000006                     i2USBStallEndpoint@ep:
  6628                           	opt stack 0
  6629  000006                     i2__i2c_eeprom_busy@busy:
  6630                           	opt stack 0
  6631  000006                     i2__i2c_write@data:
  6632                           	opt stack 0
  6633                           
  6634                           ; 2 bytes @ 0x5
  6635  000006                     	ds	1
  6636  000007                     USBConfigureEndpoint@handle:
  6637                           	opt stack 0
  6638  000007                     i2USBStallEndpoint@p:
  6639                           	opt stack 0
  6640  000007                     i2memcpy@d:
  6641                           	opt stack 0
  6642  000007                     i2memset@p:
  6643                           	opt stack 0
  6644                           
  6645                           ; 2 bytes @ 0x6
  6646  000007                     	ds	1
  6647  000008                     i2__i2c_write@length:
  6648                           	opt stack 0
  6649                           
  6650                           ; 1 bytes @ 0x7
  6651  000008                     	ds	1
  6652  000009                     USBEnableEndpoint@options:
  6653                           	opt stack 0
  6654  000009                     i2USBDeviceInit@i:
  6655                           	opt stack 0
  6656  000009                     i2USBTransferOnePacket@ep:
  6657                           	opt stack 0
  6658  000009                     i2__i2c_write@slave_address:
  6659                           	opt stack 0
  6660  000009                     i2memcpy@s:
  6661                           	opt stack 0
  6662                           
  6663                           ; 2 bytes @ 0x8
  6664  000009                     	ds	1
  6665  00000A                     i2__i2c_write@cntr:
  6666                           	opt stack 0
  6667  00000A                     USBEnableEndpoint@p:
  6668                           	opt stack 0
  6669  00000A                     i2USBTransferOnePacket@handle:
  6670                           	opt stack 0
  6671                           
  6672                           ; 2 bytes @ 0x9
  6673  00000A                     	ds	1
  6674  00000B                     i2memcpy@tmp:
  6675                           	opt stack 0
  6676  00000B                     i2c_eeprom_write@address:
  6677                           	opt stack 0
  6678                           
  6679                           ; 2 bytes @ 0xA
  6680  00000B                     	ds	1
  6681  00000C                     ??_USBMSDInit:
  6682  00000C                     USBEnableEndpoint@ep:
  6683                           	opt stack 0
  6684  00000C                     _USBCheckMSDRequest$2534:
  6685                           	opt stack 0
  6686  00000C                     MSDTransferTerminated@handle:
  6687                           	opt stack 0
  6688                           
  6689                           ; 2 bytes @ 0xB
  6690  00000C                     	ds	1
  6691  00000D                     i2c_eeprom_write@data:
  6692                           	opt stack 0
  6693                           
  6694                           ; 2 bytes @ 0xC
  6695  00000D                     	ds	1
  6696  00000E                     _USBCheckMSDRequest$2535:
  6697                           	opt stack 0
  6698  00000E                     _MSDTransferTerminated$2623:
  6699                           	opt stack 0
  6700                           
  6701                           ; 2 bytes @ 0xD
  6702  00000E                     	ds	1
  6703  00000F                     i2c_eeprom_write@length:
  6704                           	opt stack 0
  6705                           
  6706                           ; 1 bytes @ 0xE
  6707  00000F                     	ds	1
  6708  000010                     ??_i2c_eeprom_write:
  6709  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  6710                           	opt stack 0
  6711                           
  6712                           ; 2 bytes @ 0xF
  6713  000010                     	ds	2
  6714  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  6715                           	opt stack 0
  6716                           
  6717                           ; 2 bytes @ 0x11
  6718  000012                     	ds	1
  6719  000013                     i2c_eeprom_write@dat:
  6720                           	opt stack 0
  6721                           
  6722                           ; 17 bytes @ 0x12
  6723  000013                     	ds	1
  6724  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  6725                           	opt stack 0
  6726                           
  6727                           ; 2 bytes @ 0x13
  6728  000014                     	ds	2
  6729  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  6730                           
  6731                           ; 1 bytes @ 0x15
  6732  000016                     	ds	2
  6733  000018                     ??_USBStdFeatureReqHandler:
  6734  000018                     USBStdSetCfgHandler@i:
  6735                           	opt stack 0
  6736                           
  6737                           ; 1 bytes @ 0x17
  6738  000018                     	ds	1
  6739  000019                     USBStdFeatureReqHandler@pUEP:
  6740                           	opt stack 0
  6741                           
  6742                           ; 2 bytes @ 0x18
  6743  000019                     	ds	2
  6744  00001B                     USBStdFeatureReqHandler@current_ep_data:
  6745                           	opt stack 0
  6746                           
  6747                           ; 1 bytes @ 0x1A
  6748  00001B                     	ds	1
  6749  00001C                     USBStdFeatureReqHandler@p:
  6750                           	opt stack 0
  6751                           
  6752                           ; 2 bytes @ 0x1B
  6753  00001C                     	ds	2
  6754  00001E                     ??_USBCtrlEPService:
  6755  00001E                     
  6756                           ; 1 bytes @ 0x1D
  6757  00001E                     	ds	1
  6758  00001F                     USBDeviceTasks@i:
  6759                           	opt stack 0
  6760                           
  6761                           ; 1 bytes @ 0x1E
  6762  00001F                     	ds	5
  6763  000024                     i2c_eeprom_write@slave_address:
  6764                           	opt stack 0
  6765                           
  6766                           ; 1 bytes @ 0x23
  6767  000024                     	ds	1
  6768  000025                     i2c_eeprom_write@cntr:
  6769                           	opt stack 0
  6770                           
  6771                           ; 1 bytes @ 0x24
  6772  000025                     	ds	1
  6773  000026                     i2c_eeprom_save_position@buffer:
  6774                           	opt stack 0
  6775                           
  6776                           ; 7 bytes @ 0x25
  6777  000026                     	ds	7
  6778  00002D                     ??_motor_isr:
  6779                           
  6780                           ; 1 bytes @ 0x2C
  6781  00002D                     	ds	16
  6782  00003D                     motor_isr@steps_until_standstill:
  6783                           	opt stack 0
  6784                           
  6785                           ; 2 bytes @ 0x3C
  6786  00003D                     	ds	2
  6787  00003F                     motor_isr@steps_until_standstill_if_accelerate:
  6788                           	opt stack 0
  6789                           
  6790                           ; 2 bytes @ 0x3E
  6791  00003F                     	ds	2
  6792  000041                     motor_isr@steps_remaining:
  6793                           	opt stack 0
  6794                           
  6795                           ; 4 bytes @ 0x40
  6796  000041                     	ds	4
  6797  000045                     ??_SYS_InterruptHigh:
  6798                           
  6799                           ; 1 bytes @ 0x44
  6800  000045                     	ds	14
  6801                           tblptru	equ	0xFF8
  6802                           tblptrh	equ	0xFF7
  6803                           tblptrl	equ	0xFF6
  6804                           tablat	equ	0xFF5
  6805                           postinc0	equ	0xFEE
  6806                           wreg	equ	0xFE8
  6807                           postdec1	equ	0xFE5
  6808                           fsr1h	equ	0xFE2
  6809                           fsr1l	equ	0xFE1
  6810                           
  6811 ;;
  6812 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  6813 ;;
  6814 ;; *************** function _main *****************
  6815 ;; Defined at:
  6816 ;;		line 49 in file "main.c"
  6817 ;; Parameters:    Size  Location     Type
  6818 ;;		None
  6819 ;; Auto vars:     Size  Location     Type
  6820 ;;  startup_time    1  157[BANK0 ] unsigned char 
  6821 ;; Return value:  Size  Location     Type
  6822 ;;                  1    wreg      void 
  6823 ;; Registers used:
  6824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  6825 ;; Tracked objects:
  6826 ;;		On entry : 0/0
  6827 ;;		On exit  : 0/0
  6828 ;;		Unchanged: 0/0
  6829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6831 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6833 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6834 ;;Total ram usage:        1 bytes
  6835 ;; Hardware stack levels required when called:   22
  6836 ;; This function calls:
  6837 ;;		_APP_DeviceCustomHIDTasks
  6838 ;;		_APP_DeviceMSDTasks
  6839 ;;		_SYSTEM_Initialize
  6840 ;;		_USBDeviceAttach
  6841 ;;		_USBDeviceInit
  6842 ;;		_adc_read_temperature
  6843 ;;		_display_prepare
  6844 ;;		_display_update
  6845 ;;		_encoder_statemachine
  6846 ;;		_motor_calculate_position_in_degrees
  6847 ;;		_motor_process_cue
  6848 ;;		_system_init
  6849 ;; This function is called by:
  6850 ;;		Startup code after reset
  6851 ;; This function uses a non-reentrant model
  6852 ;;
  6853                           
  6854                           	psect	text0
  6855  0139FA                     __ptext0:
  6856                           	opt stack 0
  6857  0139FA                     _main:
  6858                           	opt stack 9
  6859                           
  6860                           ;main.c: 51: uint8_t startup_timer;;main.c: 55: system_init();
  6861                           
  6862                           ;incstack = 0
  6863  0139FA  EC57  F083         	call	_system_init	;wreg free
  6864                           
  6865                           ;main.c: 57: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  6866  0139FE  0E00               	movlw	0
  6867  013A00  ECB6  F0A5         	call	_SYSTEM_Initialize
  6868                           
  6869                           ;main.c: 59: USBDeviceInit();
  6870  013A04  ECEA  F07E         	call	_USBDeviceInit	;wreg free
  6871                           
  6872                           ;main.c: 60: USBDeviceAttach();
  6873  013A08  EC96  F0AC         	call	_USBDeviceAttach	;wreg free
  6874                           
  6875                           ;main.c: 63: startup_timer = 150;
  6876  013A0C  0E96               	movlw	150
  6877  013A0E  0100               	movlb	0	; () banked
  6878  013A10  6FFD               	movwf	main@startup_timer& (0+255),b
  6879                           
  6880                           ;main.c: 64: while(startup_timer)
  6881  013A12  D00D               	goto	l863
  6882  013A14                     
  6883                           ; BSR set to: 0
  6884                           ;main.c: 65: {;main.c: 67: APP_DeviceMSDTasks();
  6885                           
  6886                           ; BSR set to: 0
  6887  013A14  EC48  F0AF         	call	_APP_DeviceMSDTasks	;wreg free
  6888                           
  6889                           ;main.c: 69: if(!os.done)
  6890  013A18  0101               	movlb	1	; () banked
  6891  013A1A  5166               	movf	(_os+2)& (0+255),w,b	;volatile
  6892  013A1C  A4D8               	btfss	status,2,c
  6893  013A1E  D007               	goto	l863
  6894                           
  6895                           ; BSR set to: 1
  6896                           ;main.c: 70: {;main.c: 72: APP_DeviceCustomHIDTasks();
  6897  013A20  EC87  F09A         	call	_APP_DeviceCustomHIDTasks	;wreg free
  6898                           
  6899                           ;main.c: 74: --startup_timer;
  6900  013A24  0100               	movlb	0	; () banked
  6901  013A26  07FD               	decf	main@startup_timer& (0+255),f,b
  6902                           
  6903                           ; BSR set to: 0
  6904                           ;main.c: 75: os.done = 1;
  6905  013A28  0E01               	movlw	1
  6906  013A2A  0101               	movlb	1	; () banked
  6907  013A2C  6F66               	movwf	(_os+2)& (0+255),b	;volatile
  6908  013A2E                     l863:
  6909                           
  6910                           ; BSR set to: 1
  6911                           
  6912                           ; BSR set to: 1
  6913  013A2E  0100               	movlb	0	; () banked
  6914  013A30  51FD               	movf	main@startup_timer& (0+255),w,b
  6915  013A32  A4D8               	btfss	status,2,c
  6916  013A34  D7EF               	goto	l862
  6917  013A36                     u19340:
  6918                           
  6919                           ;main.c: 81: {;main.c: 83: APP_DeviceMSDTasks();
  6920                           
  6921                           ; BSR set to: 0
  6922                           
  6923                           ;main.c: 76: };main.c: 78: };main.c: 80: while(1)
  6924                           
  6925                           ; BSR set to: 0
  6926  013A36  EC48  F0AF         	call	_APP_DeviceMSDTasks	;wreg free
  6927                           
  6928                           ;main.c: 85: if(!os.done)
  6929  013A3A  0101               	movlb	1	; () banked
  6930  013A3C  5166               	movf	(_os+2)& (0+255),w,b	;volatile
  6931  013A3E  A4D8               	btfss	status,2,c
  6932  013A40  D7FA               	goto	u19340
  6933                           
  6934                           ; BSR set to: 1
  6935  013A42  0004               	clrwdt		;# 
  6936                           
  6937                           ;main.c: 91: APP_DeviceCustomHIDTasks();
  6938  013A44  EC87  F09A         	call	_APP_DeviceCustomHIDTasks	;wreg free
  6939                           
  6940                           ;main.c: 94: encoder_statemachine();
  6941  013A48  ECE6  F057         	call	_encoder_statemachine	;wreg free
  6942                           
  6943                           ;main.c: 97: motor_process_cue();
  6944  013A4C  EC7E  F09B         	call	_motor_process_cue	;wreg free
  6945                           
  6946                           ;main.c: 100: adc_read_temperature();
  6947  013A50  EC63  F075         	call	_adc_read_temperature	;wreg free
  6948                           
  6949                           ;main.c: 103: switch(os.timeSlot)
  6950  013A54  D008               	goto	l867
  6951  013A56                     
  6952                           ;main.c: 114: motor_calculate_position_in_degrees();
  6953  013A56  ECA4  F091         	call	_motor_calculate_position_in_degrees	;wreg free
  6954  013A5A                     
  6955                           ;main.c: 117: display_prepare();
  6956  013A5A  ECA2  F051         	call	_display_prepare	;wreg free
  6957                           
  6958                           ;main.c: 118: break;
  6959  013A5E  D014               	goto	l869
  6960  013A60                     
  6961                           ;main.c: 121: display_update();
  6962  013A60  ECDB  F0AB         	call	_display_update	;wreg free
  6963                           
  6964                           ;main.c: 123: }
  6965                           
  6966                           ;main.c: 122: break;
  6967  013A64  D011               	goto	l869
  6968  013A66                     l867:
  6969  013A66  0101               	movlb	1	; () banked
  6970  013A68  5165               	movf	(_os+1)& (0+255),w,b	;volatile
  6971                           
  6972                           ; Switch size 1, requested type "space"
  6973                           ; Number of cases is 5, Range of values is 0 to 7
  6974                           ; switch strategies available:
  6975                           ; Name         Instructions Cycles
  6976                           ; simple_byte           16     9 (average)
  6977                           ;	Chosen strategy is simple_byte
  6978  013A6A  0A00               	xorlw	0	; case 0
  6979  013A6C  B4D8               	btfsc	status,2,c
  6980  013A6E  D00C               	goto	l869
  6981  013A70  0A01               	xorlw	1	; case 1
  6982  013A72  B4D8               	btfsc	status,2,c
  6983  013A74  D009               	goto	l869
  6984  013A76  0A04               	xorlw	4	; case 5
  6985  013A78  B4D8               	btfsc	status,2,c
  6986  013A7A  D7ED               	goto	l871
  6987  013A7C  0A03               	xorlw	3	; case 6
  6988  013A7E  B4D8               	btfsc	status,2,c
  6989  013A80  D7EC               	goto	l872
  6990  013A82  0A01               	xorlw	1	; case 7
  6991  013A84  B4D8               	btfsc	status,2,c
  6992  013A86  D7EC               	goto	l873
  6993  013A88                     l869:
  6994                           
  6995                           ;main.c: 125: os.done = 1;
  6996                           
  6997                           ; BSR set to: 1
  6998  013A88  0E01               	movlw	1
  6999  013A8A  0101               	movlb	1	; () banked
  7000  013A8C  6F66               	movwf	(_os+2)& (0+255),b	;volatile
  7001                           
  7002                           ; BSR set to: 1
  7003                           
  7004                           ; BSR set to: 1
  7005  013A8E  D7D3               	goto	u19340
  7006  013A90                     __end_of_main:
  7007                           	opt stack 0
  7008                           tblptru	equ	0xFF8
  7009                           tblptrh	equ	0xFF7
  7010                           tblptrl	equ	0xFF6
  7011                           tablat	equ	0xFF5
  7012                           postinc0	equ	0xFEE
  7013                           wreg	equ	0xFE8
  7014                           postdec1	equ	0xFE5
  7015                           fsr1h	equ	0xFE2
  7016                           fsr1l	equ	0xFE1
  7017                           status	equ	0xFD8
  7018                           
  7019 ;; *************** function _system_init *****************
  7020 ;; Defined at:
  7021 ;;		line 177 in file "os.c"
  7022 ;; Parameters:    Size  Location     Type
  7023 ;;		None
  7024 ;; Auto vars:     Size  Location     Type
  7025 ;;		None
  7026 ;; Return value:  Size  Location     Type
  7027 ;;                  1    wreg      void 
  7028 ;; Registers used:
  7029 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7030 ;; Tracked objects:
  7031 ;;		On entry : 0/0
  7032 ;;		On exit  : 0/0
  7033 ;;		Unchanged: 0/0
  7034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7039 ;;Total ram usage:        0 bytes
  7040 ;; Hardware stack levels used:    1
  7041 ;; Hardware stack levels required when called:   20
  7042 ;; This function calls:
  7043 ;;		__backlight_init
  7044 ;;		__system_pin_setup
  7045 ;;		__system_timer0_init
  7046 ;;		_adc_init
  7047 ;;		_configFile_read
  7048 ;;		_configFile_readDefault
  7049 ;;		_configFile_write
  7050 ;;		_display_init
  7051 ;;		_display_update
  7052 ;;		_encoder_init
  7053 ;;		_fat_init
  7054 ;;		_flash_init
  7055 ;;		_i2c_eeprom_recover_position
  7056 ;;		_i2c_init
  7057 ;;		_motor_calculate_position_in_degrees
  7058 ;;		_motor_init
  7059 ;; This function is called by:
  7060 ;;		_main
  7061 ;; This function uses a non-reentrant model
  7062 ;;
  7063                           
  7064                           	psect	text1
  7065  0106AE                     __ptext1:
  7066                           	opt stack 0
  7067  0106AE                     _system_init:
  7068                           	opt stack 10
  7069                           
  7070                           ;os.c: 180: _system_pin_setup();
  7071                           
  7072                           ; BSR set to: 1
  7073                           ;incstack = 0
  7074  0106AE  EC43  F0A3         	call	__system_pin_setup	;wreg free
  7075                           
  7076                           ;os.c: 183: adc_init();
  7077  0106B2  EC69  F0A6         	call	_adc_init	;wreg free
  7078                           
  7079                           ;os.c: 186: flash_init();
  7080  0106B6  EC69  F0AF         	call	_flash_init	;wreg free
  7081                           
  7082                           ;os.c: 189: fat_init();
  7083  0106BA  EC51  F0AF         	call	_fat_init	;wreg free
  7084                           
  7085                           ;os.c: 192: encoder_init();
  7086  0106BE  EC4C  F0AE         	call	_encoder_init	;wreg free
  7087                           
  7088                           ;os.c: 195: i2c_init();
  7089  0106C2  ECE5  F0AE         	call	_i2c_init	;wreg free
  7090                           
  7091                           ;os.c: 198: display_init();
  7092  0106C6  EC85  F0AB         	call	_display_init	;wreg free
  7093                           
  7094                           ;os.c: 199: display_update();
  7095  0106CA  ECDB  F0AB         	call	_display_update	;wreg free
  7096                           
  7097                           ;os.c: 200: _backlight_init();
  7098  0106CE  ECC0  F0AF         	call	__backlight_init	;wreg free
  7099                           
  7100                           ;os.c: 203: motor_init();
  7101  0106D2  ECD6  F0AE         	call	_motor_init	;wreg free
  7102                           
  7103                           ;os.c: 206: configFile_readDefault();
  7104  0106D6  ECBD  F0A1         	call	_configFile_readDefault	;wreg free
  7105                           
  7106                           ;os.c: 209: configFile_read();
  7107  0106DA  ECDA  F079         	call	_configFile_read	;wreg free
  7108                           
  7109                           ;os.c: 212: configFile_write();
  7110  0106DE  ECFE  F060         	call	_configFile_write	;wreg free
  7111                           
  7112                           ;os.c: 215: os.subTimeSlot = 0;
  7113  0106E2  0E00               	movlw	0
  7114  0106E4  0101               	movlb	1	; () banked
  7115  0106E6  6F64               	movwf	_os& (0+255),b	;volatile
  7116                           
  7117                           ; BSR set to: 1
  7118                           ;os.c: 216: os.timeSlot = 0;
  7119  0106E8  0E00               	movlw	0
  7120  0106EA  6F65               	movwf	(_os+1)& (0+255),b	;volatile
  7121                           
  7122                           ; BSR set to: 1
  7123                           ;os.c: 217: os.done = 0;
  7124  0106EC  0E00               	movlw	0
  7125  0106EE  6F66               	movwf	(_os+2)& (0+255),b	;volatile
  7126                           
  7127                           ; BSR set to: 1
  7128                           ;os.c: 218: os.encoder1Count = 0;
  7129  0106F0  0E00               	movlw	0
  7130  0106F2  6F67               	movwf	(_os+3)& (0+255),b	;volatile
  7131                           
  7132                           ; BSR set to: 1
  7133                           ;os.c: 219: os.button1 = 0;
  7134  0106F4  0E00               	movlw	0
  7135  0106F6  6F68               	movwf	(_os+4)& (0+255),b	;volatile
  7136                           
  7137                           ; BSR set to: 1
  7138                           ;os.c: 220: os.encoder2Count = 0;
  7139  0106F8  0E00               	movlw	0
  7140  0106FA  6F69               	movwf	(_os+5)& (0+255),b	;volatile
  7141                           
  7142                           ; BSR set to: 1
  7143                           ;os.c: 221: os.button2 = 0;
  7144  0106FC  0E00               	movlw	0
  7145  0106FE  6F6A               	movwf	(_os+6)& (0+255),b	;volatile
  7146                           
  7147                           ; BSR set to: 1
  7148                           ;os.c: 222: os.current_position_in_steps = 0;
  7149  010700  0E00               	movlw	0
  7150  010702  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
  7151  010704  0E00               	movlw	0
  7152  010706  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
  7153  010708  0E00               	movlw	0
  7154  01070A  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
  7155  01070C  0E00               	movlw	0
  7156  01070E  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
  7157                           
  7158                           ; BSR set to: 1
  7159                           ;os.c: 223: os.absolute_position = 0;
  7160  010710  0E00               	movlw	0
  7161  010712  6F70               	movwf	(_os+12)& (0+255),b	;volatile
  7162  010714  0E00               	movlw	0
  7163  010716  6F6F               	movwf	(_os+11)& (0+255),b	;volatile
  7164                           
  7165                           ; BSR set to: 1
  7166                           ;os.c: 224: os.current_position_in_degrees = 0;
  7167  010718  0E00               	movlw	0
  7168  01071A  6F72               	movwf	(_os+14)& (0+255),b	;volatile
  7169  01071C  0E00               	movlw	0
  7170  01071E  6F71               	movwf	(_os+13)& (0+255),b	;volatile
  7171                           
  7172                           ; BSR set to: 1
  7173                           ;os.c: 225: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  7174  010720  0E01               	movlw	1
  7175  010722  6F73               	movwf	(_os+15)& (0+255),b	;volatile
  7176                           
  7177                           ; BSR set to: 1
  7178                           ;os.c: 226: os.busy = 0;
  7179  010724  0E00               	movlw	0
  7180  010726  6F74               	movwf	(_os+16)& (0+255),b	;volatile
  7181                           
  7182                           ; BSR set to: 1
  7183                           ;os.c: 227: os.setup_step_size = 0;
  7184  010728  0E00               	movlw	0
  7185  01072A  6F76               	movwf	(_os+18)& (0+255),b	;volatile
  7186  01072C  0E00               	movlw	0
  7187  01072E  6F75               	movwf	(_os+17)& (0+255),b	;volatile
  7188                           
  7189                           ; BSR set to: 1
  7190                           ;os.c: 228: os.approach_direction = MOTOR_DIRECTION_CW;
  7191  010730  0E01               	movlw	1
  7192  010732  6F77               	movwf	(_os+19)& (0+255),b	;volatile
  7193                           
  7194                           ; BSR set to: 1
  7195                           ;os.c: 229: os.division = 36;
  7196  010734  0E00               	movlw	0
  7197  010736  6F79               	movwf	(_os+21)& (0+255),b	;volatile
  7198  010738  0E24               	movlw	36
  7199  01073A  6F78               	movwf	(_os+20)& (0+255),b	;volatile
  7200                           
  7201                           ; BSR set to: 1
  7202                           ;os.c: 230: os.divide_step_size = 10;
  7203  01073C  0E0A               	movlw	10
  7204  01073E  6F7A               	movwf	(_os+22)& (0+255),b	;volatile
  7205                           
  7206                           ; BSR set to: 1
  7207                           ;os.c: 231: os.divide_position = 0;
  7208  010740  0E00               	movlw	0
  7209  010742  6F7C               	movwf	(_os+24)& (0+255),b	;volatile
  7210  010744  0E00               	movlw	0
  7211  010746  6F7B               	movwf	(_os+23)& (0+255),b	;volatile
  7212                           
  7213                           ; BSR set to: 1
  7214                           ;os.c: 232: os.divide_jump_size = 1;
  7215  010748  0E00               	movlw	0
  7216  01074A  6F7E               	movwf	(_os+26)& (0+255),b	;volatile
  7217  01074C  0E01               	movlw	1
  7218  01074E  6F7D               	movwf	(_os+25)& (0+255),b	;volatile
  7219                           
  7220                           ; BSR set to: 1
  7221                           ;os.c: 233: os.arc_step_size = 1000;
  7222  010750  0E03               	movlw	3
  7223  010752  6F80               	movwf	(_os+28)& (0+255),b	;volatile
  7224  010754  0EE8               	movlw	232
  7225  010756  6F7F               	movwf	(_os+27)& (0+255),b	;volatile
  7226                           
  7227                           ; BSR set to: 1
  7228                           ;os.c: 234: os.arc_size = 1000;
  7229  010758  0EE8               	movlw	232
  7230  01075A  6F81               	movwf	(_os+29)& (0+255),b	;volatile
  7231  01075C  0E03               	movlw	3
  7232  01075E  6F82               	movwf	(_os+30)& (0+255),b	;volatile
  7233  010760  0E00               	movlw	0
  7234  010762  6F83               	movwf	(_os+31)& (0+255),b	;volatile
  7235  010764  0E00               	movlw	0
  7236  010766  6F84               	movwf	(_os+32)& (0+255),b	;volatile
  7237                           
  7238                           ; BSR set to: 1
  7239                           ;os.c: 235: os.arc_speed = config.initial_speed_arc;
  7240  010768  C1A2  F185         	movff	_config+13,_os+33	;volatile
  7241  01076C  C1A3  F186         	movff	_config+14,_os+34	;volatile
  7242                           
  7243                           ; BSR set to: 1
  7244                           ;os.c: 236: os.arc_direction = MOTOR_DIRECTION_CW;
  7245  010770  0E01               	movlw	1
  7246  010772  6F87               	movwf	(_os+35)& (0+255),b	;volatile
  7247                           
  7248                           ; BSR set to: 1
  7249                           ;os.c: 237: os.manual_speed = config.initial_speed_manual;
  7250  010774  C1A6  F188         	movff	_config+17,_os+36	;volatile
  7251  010778  C1A7  F189         	movff	_config+18,_os+37	;volatile
  7252                           
  7253                           ; BSR set to: 1
  7254                           ;os.c: 238: os.manual_direction = MOTOR_DIRECTION_CW;
  7255  01077C  0E01               	movlw	1
  7256  01077E  6F8A               	movwf	(_os+38)& (0+255),b	;volatile
  7257                           
  7258                           ; BSR set to: 1
  7259                           ;os.c: 239: os.beep_count = 0;
  7260  010780  0E00               	movlw	0
  7261  010782  6F8B               	movwf	(_os+39)& (0+255),b	;volatile
  7262                           
  7263                           ; BSR set to: 1
  7264                           ;os.c: 240: os.temperature[0] = 0;
  7265  010784  0E00               	movlw	0
  7266  010786  6F8D               	movwf	(_os+41)& (0+255),b	;volatile
  7267  010788  0E00               	movlw	0
  7268  01078A  6F8C               	movwf	(_os+40)& (0+255),b	;volatile
  7269                           
  7270                           ; BSR set to: 1
  7271                           ;os.c: 241: os.temperature[1] = 0;
  7272  01078C  0E00               	movlw	0
  7273  01078E  6F8F               	movwf	(_os+43)& (0+255),b	;volatile
  7274  010790  0E00               	movlw	0
  7275  010792  6F8E               	movwf	(_os+42)& (0+255),b	;volatile
  7276                           
  7277                           ; BSR set to: 1
  7278                           ;os.c: 242: os.external_temperature_adc_sum = 0;
  7279  010794  0E00               	movlw	0
  7280  010796  6F91               	movwf	(_os+45)& (0+255),b	;volatile
  7281  010798  0E00               	movlw	0
  7282  01079A  6F90               	movwf	(_os+44)& (0+255),b	;volatile
  7283                           
  7284                           ; BSR set to: 1
  7285                           ;os.c: 243: os.external_temperature_count = 0;
  7286  01079C  0E00               	movlw	0
  7287  01079E  6F92               	movwf	(_os+46)& (0+255),b	;volatile
  7288                           
  7289                           ; BSR set to: 1
  7290                           ;os.c: 244: os.fan_on = 0;
  7291  0107A0  0E00               	movlw	0
  7292  0107A2  6F93               	movwf	(_os+47)& (0+255),b	;volatile
  7293                           
  7294                           ; BSR set to: 1
  7295                           ;os.c: 245: os.brake_on = 0;
  7296  0107A4  0E00               	movlw	0
  7297  0107A6  6F94               	movwf	(_os+48)& (0+255),b	;volatile
  7298                           
  7299                           ; BSR set to: 1
  7300                           ;os.c: 248: i2c_eeprom_recover_position();
  7301  0107A8  EC00  F0A5         	call	_i2c_eeprom_recover_position	;wreg free
  7302                           
  7303                           ;os.c: 249: if(os.current_position_in_steps>config.full_circle_in_steps)
  7304  0107AC  0101               	movlb	1	; () banked
  7305  0107AE  516B               	movf	(_os+7)& (0+255),w,b	;volatile
  7306  0107B0  5D95               	subwf	_config& (0+255),w,b
  7307  0107B2  516C               	movf	(_os+8)& (0+255),w,b	;volatile
  7308  0107B4  5996               	subwfb	(_config+1)& (0+255),w,b
  7309  0107B6  516D               	movf	(_os+9)& (0+255),w,b	;volatile
  7310  0107B8  5997               	subwfb	(_config+2)& (0+255),w,b
  7311  0107BA  516E               	movf	(_os+10)& (0+255),w,b	;volatile
  7312  0107BC  5998               	subwfb	(_config+3)& (0+255),w,b
  7313  0107BE  B0D8               	btfsc	status,0,c
  7314  0107C0  D00C               	goto	l1082
  7315                           
  7316                           ; BSR set to: 1
  7317                           ;os.c: 250: {;os.c: 251: os.current_position_in_steps = 0;
  7318  0107C2  0E00               	movlw	0
  7319  0107C4  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
  7320  0107C6  0E00               	movlw	0
  7321  0107C8  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
  7322  0107CA  0E00               	movlw	0
  7323  0107CC  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
  7324  0107CE  0E00               	movlw	0
  7325  0107D0  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
  7326                           
  7327                           ;os.c: 252: os.absolute_position = 0;
  7328  0107D2  0E00               	movlw	0
  7329  0107D4  6F70               	movwf	(_os+12)& (0+255),b	;volatile
  7330  0107D6  0E00               	movlw	0
  7331  0107D8  6F6F               	movwf	(_os+11)& (0+255),b	;volatile
  7332  0107DA                     l1082:
  7333                           
  7334                           ; BSR set to: 1
  7335                           ;os.c: 253: };os.c: 254: motor_calculate_position_in_degrees();
  7336                           
  7337                           ; BSR set to: 1
  7338  0107DA  ECA4  F091         	call	_motor_calculate_position_in_degrees	;wreg free
  7339                           
  7340                           ;os.c: 257: _system_timer0_init();
  7341  0107DE  EC6B  F0AD         	call	__system_timer0_init	;wreg free
  7342  0107E2  0012               	return		;funcret
  7343  0107E4                     __end_of_system_init:
  7344                           	opt stack 0
  7345                           tblptru	equ	0xFF8
  7346                           tblptrh	equ	0xFF7
  7347                           tblptrl	equ	0xFF6
  7348                           tablat	equ	0xFF5
  7349                           postinc0	equ	0xFEE
  7350                           wreg	equ	0xFE8
  7351                           postdec1	equ	0xFE5
  7352                           fsr1h	equ	0xFE2
  7353                           fsr1l	equ	0xFE1
  7354                           status	equ	0xFD8
  7355                           
  7356 ;; *************** function _motor_init *****************
  7357 ;; Defined at:
  7358 ;;		line 646 in file "motor.c"
  7359 ;; Parameters:    Size  Location     Type
  7360 ;;		None
  7361 ;; Auto vars:     Size  Location     Type
  7362 ;;		None
  7363 ;; Return value:  Size  Location     Type
  7364 ;;                  1    wreg      void 
  7365 ;; Registers used:
  7366 ;;		wreg, status,2
  7367 ;; Tracked objects:
  7368 ;;		On entry : 0/0
  7369 ;;		On exit  : 0/0
  7370 ;;		Unchanged: 0/0
  7371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7376 ;;Total ram usage:        0 bytes
  7377 ;; Hardware stack levels used:    1
  7378 ;; Hardware stack levels required when called:   10
  7379 ;; This function calls:
  7380 ;;		Nothing
  7381 ;; This function is called by:
  7382 ;;		_system_init
  7383 ;; This function uses a non-reentrant model
  7384 ;;
  7385                           
  7386                           	psect	text2
  7387  015DAC                     __ptext2:
  7388                           	opt stack 0
  7389  015DAC                     _motor_init:
  7390                           	opt stack 19
  7391                           
  7392                           ;motor.c: 649: motor_cue_read_index = 0;
  7393                           
  7394                           ;incstack = 0
  7395  015DAC  0E00               	movlw	0
  7396  015DAE  0101               	movlb	1	; () banked
  7397  015DB0  6F4B               	movwf	_motor_cue_read_index& (0+255),b
  7398                           
  7399                           ;motor.c: 650: motor_cue_write_index = 0;
  7400  015DB2  0E00               	movlw	0
  7401  015DB4  6F4A               	movwf	_motor_cue_write_index& (0+255),b
  7402                           
  7403                           ; BSR set to: 1
  7404                           ;motor.c: 656: CCPTMRS0bits.C2TSEL = 0b000;
  7405  015DB6  010F               	movlb	15	; () banked
  7406  015DB8  9752               	bcf	82,3,b	;volatile
  7407  015DBA  9952               	bcf	82,4,b	;volatile
  7408  015DBC  9B52               	bcf	82,5,b	;volatile
  7409                           
  7410                           ;motor.c: 661: CCP1CONbits.P1M = 0b00;
  7411  015DBE  0E3F               	movlw	-193
  7412  015DC0  16BA               	andwf	4026,f,c	;volatile
  7413                           
  7414                           ;motor.c: 664: CCP1CONbits.DC1B = 0b00;
  7415  015DC2  0ECF               	movlw	-49
  7416  015DC4  16BA               	andwf	4026,f,c	;volatile
  7417                           
  7418                           ; BSR set to: 15
  7419                           ;motor.c: 667: LATBbits.LB0 = 0;
  7420  015DC6  908A               	bcf	3978,0,c	;volatile
  7421                           
  7422                           ; BSR set to: 15
  7423  015DC8  0012               	return		;funcret
  7424  015DCA                     __end_of_motor_init:
  7425                           	opt stack 0
  7426                           tblptru	equ	0xFF8
  7427                           tblptrh	equ	0xFF7
  7428                           tblptrl	equ	0xFF6
  7429                           tablat	equ	0xFF5
  7430                           postinc0	equ	0xFEE
  7431                           wreg	equ	0xFE8
  7432                           postdec1	equ	0xFE5
  7433                           fsr1h	equ	0xFE2
  7434                           fsr1l	equ	0xFE1
  7435                           status	equ	0xFD8
  7436                           
  7437 ;; *************** function _motor_calculate_position_in_degrees *****************
  7438 ;; Defined at:
  7439 ;;		line 548 in file "motor.c"
  7440 ;; Parameters:    Size  Location     Type
  7441 ;;		None
  7442 ;; Auto vars:     Size  Location     Type
  7443 ;;  tmp             4   49[BANK0 ] float 
  7444 ;; Return value:  Size  Location     Type
  7445 ;;                  1    wreg      void 
  7446 ;; Registers used:
  7447 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7448 ;; Tracked objects:
  7449 ;;		On entry : 0/0
  7450 ;;		On exit  : 0/0
  7451 ;;		Unchanged: 0/0
  7452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7454 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7456 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7457 ;;Total ram usage:        4 bytes
  7458 ;; Hardware stack levels used:    1
  7459 ;; Hardware stack levels required when called:   11
  7460 ;; This function calls:
  7461 ;;		___fldiv
  7462 ;;		___flmul
  7463 ;;		___fltol
  7464 ;;		___xxtofl
  7465 ;; This function is called by:
  7466 ;;		_main
  7467 ;;		_system_init
  7468 ;; This function uses a non-reentrant model
  7469 ;;
  7470                           
  7471                           	psect	text3
  7472  012348                     __ptext3:
  7473                           	opt stack 0
  7474  012348                     _motor_calculate_position_in_degrees:
  7475                           	opt stack 18
  7476                           
  7477                           ;motor.c: 550: float tmp;;motor.c: 552: tmp = (float) os.current_position_in_steps;
  7478                           
  7479                           ; BSR set to: 15
  7480                           ;incstack = 0
  7481  012348  C16B  F06A         	movff	_os+7,___xxtofl@val	;volatile
  7482  01234C  C16C  F06B         	movff	_os+8,___xxtofl@val+1	;volatile
  7483  012350  C16D  F06C         	movff	_os+9,___xxtofl@val+2	;volatile
  7484  012354  C16E  F06D         	movff	_os+10,___xxtofl@val+3	;volatile
  7485  012358  0E00               	movlw	0
  7486  01235A  EC7A  F081         	call	___xxtofl
  7487  01235E  C06A  F091         	movff	?___xxtofl,motor_calculate_position_in_degrees@tmp
  7488  012362  C06B  F092         	movff	?___xxtofl+1,motor_calculate_position_in_degrees@tmp+1
  7489  012366  C06C  F093         	movff	?___xxtofl+2,motor_calculate_position_in_degrees@tmp+2
  7490  01236A  C06D  F094         	movff	?___xxtofl+3,motor_calculate_position_in_degrees@tmp+3
  7491                           
  7492                           ;motor.c: 553: tmp *= 36000;
  7493  01236E  C091  F078         	movff	motor_calculate_position_in_degrees@tmp,___flmul@b
  7494  012372  C092  F079         	movff	motor_calculate_position_in_degrees@tmp+1,___flmul@b+1
  7495  012376  C093  F07A         	movff	motor_calculate_position_in_degrees@tmp+2,___flmul@b+2
  7496  01237A  C094  F07B         	movff	motor_calculate_position_in_degrees@tmp+3,___flmul@b+3
  7497  01237E  0E00               	movlw	0
  7498  012380  0100               	movlb	0	; () banked
  7499  012382  6F7C               	movwf	___flmul@a& (0+255),b
  7500  012384  0EA0               	movlw	160
  7501  012386  6F7D               	movwf	(___flmul@a+1)& (0+255),b
  7502  012388  0E0C               	movlw	12
  7503  01238A  6F7E               	movwf	(___flmul@a+2)& (0+255),b
  7504  01238C  0E47               	movlw	71
  7505  01238E  6F7F               	movwf	(___flmul@a+3)& (0+255),b
  7506  012390  ECED  F064         	call	___flmul	;wreg free
  7507  012394  C078  F091         	movff	?___flmul,motor_calculate_position_in_degrees@tmp
  7508  012398  C079  F092         	movff	?___flmul+1,motor_calculate_position_in_degrees@tmp+1
  7509  01239C  C07A  F093         	movff	?___flmul+2,motor_calculate_position_in_degrees@tmp+2
  7510  0123A0  C07B  F094         	movff	?___flmul+3,motor_calculate_position_in_degrees@tmp+3
  7511                           
  7512                           ;motor.c: 554: tmp /= config.full_circle_in_steps;
  7513  0123A4  C091  F078         	movff	motor_calculate_position_in_degrees@tmp,___fldiv@b
  7514  0123A8  C092  F079         	movff	motor_calculate_position_in_degrees@tmp+1,___fldiv@b+1
  7515  0123AC  C093  F07A         	movff	motor_calculate_position_in_degrees@tmp+2,___fldiv@b+2
  7516  0123B0  C094  F07B         	movff	motor_calculate_position_in_degrees@tmp+3,___fldiv@b+3
  7517  0123B4  C195  F06A         	movff	_config,___xxtofl@val
  7518  0123B8  C196  F06B         	movff	_config+1,___xxtofl@val+1
  7519  0123BC  C197  F06C         	movff	_config+2,___xxtofl@val+2
  7520  0123C0  C198  F06D         	movff	_config+3,___xxtofl@val+3
  7521  0123C4  0E00               	movlw	0
  7522  0123C6  EC7A  F081         	call	___xxtofl
  7523  0123CA  C06A  F07C         	movff	?___xxtofl,___fldiv@a
  7524  0123CE  C06B  F07D         	movff	?___xxtofl+1,___fldiv@a+1
  7525  0123D2  C06C  F07E         	movff	?___xxtofl+2,___fldiv@a+2
  7526  0123D6  C06D  F07F         	movff	?___xxtofl+3,___fldiv@a+3
  7527  0123DA  EC15  F06B         	call	___fldiv	;wreg free
  7528  0123DE  C078  F091         	movff	?___fldiv,motor_calculate_position_in_degrees@tmp
  7529  0123E2  C079  F092         	movff	?___fldiv+1,motor_calculate_position_in_degrees@tmp+1
  7530  0123E6  C07A  F093         	movff	?___fldiv+2,motor_calculate_position_in_degrees@tmp+2
  7531  0123EA  C07B  F094         	movff	?___fldiv+3,motor_calculate_position_in_degrees@tmp+3
  7532                           
  7533                           ;motor.c: 556: os.current_position_in_degrees = (uint16_t) tmp;
  7534  0123EE  C091  F060         	movff	motor_calculate_position_in_degrees@tmp,___fltol@f1
  7535  0123F2  C092  F061         	movff	motor_calculate_position_in_degrees@tmp+1,___fltol@f1+1
  7536  0123F6  C093  F062         	movff	motor_calculate_position_in_degrees@tmp+2,___fltol@f1+2
  7537  0123FA  C094  F063         	movff	motor_calculate_position_in_degrees@tmp+3,___fltol@f1+3
  7538  0123FE  EC13  F092         	call	___fltol	;wreg free
  7539  012402  C060  F171         	movff	?___fltol,_os+13	;volatile
  7540  012406  C061  F172         	movff	?___fltol+1,_os+14	;volatile
  7541                           
  7542                           ;motor.c: 557: if(os.current_position_in_degrees==36000)
  7543  01240A  0EA0               	movlw	160
  7544  01240C  0101               	movlb	1	; () banked
  7545  01240E  1971               	xorwf	(_os+13)& (0+255),w,b	;volatile
  7546  012410  E109               	bnz	l2544
  7547  012412  0E8C               	movlw	140
  7548  012414  1972               	xorwf	(_os+14)& (0+255),w,b	;volatile
  7549  012416  A4D8               	btfss	status,2,c
  7550  012418  0012               	return	
  7551                           
  7552                           ; BSR set to: 1
  7553                           ;motor.c: 558: {;motor.c: 560: os.current_position_in_degrees = 0;
  7554  01241A  0E00               	movlw	0
  7555  01241C  6F72               	movwf	(_os+14)& (0+255),b	;volatile
  7556  01241E  0E00               	movlw	0
  7557  012420  6F71               	movwf	(_os+13)& (0+255),b	;volatile
  7558  012422  0012               	return	
  7559  012424                     l2544:
  7560                           
  7561                           ; BSR set to: 1
  7562  012424  0012               	return		;funcret
  7563  012426                     __end_of_motor_calculate_position_in_degrees:
  7564                           	opt stack 0
  7565                           tblptru	equ	0xFF8
  7566                           tblptrh	equ	0xFF7
  7567                           tblptrl	equ	0xFF6
  7568                           tablat	equ	0xFF5
  7569                           postinc0	equ	0xFEE
  7570                           wreg	equ	0xFE8
  7571                           postdec1	equ	0xFE5
  7572                           fsr1h	equ	0xFE2
  7573                           fsr1l	equ	0xFE1
  7574                           status	equ	0xFD8
  7575                           
  7576 ;; *************** function _i2c_init *****************
  7577 ;; Defined at:
  7578 ;;		line 26 in file "i2c.c"
  7579 ;; Parameters:    Size  Location     Type
  7580 ;;		None
  7581 ;; Auto vars:     Size  Location     Type
  7582 ;;		None
  7583 ;; Return value:  Size  Location     Type
  7584 ;;                  1    wreg      void 
  7585 ;; Registers used:
  7586 ;;		wreg, status,2
  7587 ;; Tracked objects:
  7588 ;;		On entry : 0/0
  7589 ;;		On exit  : 0/0
  7590 ;;		Unchanged: 0/0
  7591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7596 ;;Total ram usage:        0 bytes
  7597 ;; Hardware stack levels used:    1
  7598 ;; Hardware stack levels required when called:   10
  7599 ;; This function calls:
  7600 ;;		Nothing
  7601 ;; This function is called by:
  7602 ;;		_system_init
  7603 ;; This function uses a non-reentrant model
  7604 ;;
  7605                           
  7606                           	psect	text4
  7607  015DCA                     __ptext4:
  7608                           	opt stack 0
  7609  015DCA                     _i2c_init:
  7610                           	opt stack 19
  7611                           
  7612                           ;i2c.c: 28: TRISBbits.TRISB5 = 1;
  7613                           
  7614                           ; BSR set to: 1
  7615                           ;incstack = 0
  7616  015DCA  8A93               	bsf	3987,5,c	;volatile
  7617                           
  7618                           ;i2c.c: 29: TRISBbits.TRISB4 = 1;
  7619  015DCC  8893               	bsf	3987,4,c	;volatile
  7620                           
  7621                           ;i2c.c: 31: SSP1STATbits.SMP = 1;
  7622  015DCE  8EC7               	bsf	4039,7,c	;volatile
  7623                           
  7624                           ;i2c.c: 32: SSP1STATbits.CKE = 0;
  7625  015DD0  9CC7               	bcf	4039,6,c	;volatile
  7626                           
  7627                           ;i2c.c: 34: SSP1ADD = 119;
  7628  015DD2  0E77               	movlw	119
  7629  015DD4  6EC8               	movwf	4040,c	;volatile
  7630                           
  7631                           ;i2c.c: 36: SSP1CON1bits.WCOL = 0;
  7632  015DD6  9EC6               	bcf	4038,7,c	;volatile
  7633                           
  7634                           ;i2c.c: 37: SSP1CON1bits.SSPOV = 0;
  7635  015DD8  9CC6               	bcf	4038,6,c	;volatile
  7636                           
  7637                           ;i2c.c: 38: SSP1CON1bits.SSPM = 0b1000;
  7638  015DDA  50C6               	movf	4038,w,c	;volatile
  7639  015DDC  0BF0               	andlw	-16
  7640  015DDE  0908               	iorlw	8
  7641  015DE0  6EC6               	movwf	4038,c	;volatile
  7642                           
  7643                           ;i2c.c: 39: SSP1CON1bits.SSPEN = 1;
  7644  015DE2  8AC6               	bsf	4038,5,c	;volatile
  7645  015DE4  0012               	return		;funcret
  7646  015DE6                     __end_of_i2c_init:
  7647                           	opt stack 0
  7648                           tblptru	equ	0xFF8
  7649                           tblptrh	equ	0xFF7
  7650                           tblptrl	equ	0xFF6
  7651                           tablat	equ	0xFF5
  7652                           postinc0	equ	0xFEE
  7653                           wreg	equ	0xFE8
  7654                           postdec1	equ	0xFE5
  7655                           fsr1h	equ	0xFE2
  7656                           fsr1l	equ	0xFE1
  7657                           status	equ	0xFD8
  7658                           
  7659 ;; *************** function _i2c_eeprom_recover_position *****************
  7660 ;; Defined at:
  7661 ;;		line 314 in file "i2c.c"
  7662 ;; Parameters:    Size  Location     Type
  7663 ;;		None
  7664 ;; Auto vars:     Size  Location     Type
  7665 ;;  buffer          7   25[BANK0 ] unsigned char [7]
  7666 ;; Return value:  Size  Location     Type
  7667 ;;                  1    wreg      void 
  7668 ;; Registers used:
  7669 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7670 ;; Tracked objects:
  7671 ;;		On entry : 0/0
  7672 ;;		On exit  : 0/0
  7673 ;;		Unchanged: 0/0
  7674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7676 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7678 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7679 ;;Total ram usage:        7 bytes
  7680 ;; Hardware stack levels used:    1
  7681 ;; Hardware stack levels required when called:   13
  7682 ;; This function calls:
  7683 ;;		_i2c_eeprom_read
  7684 ;;		_memcpy
  7685 ;; This function is called by:
  7686 ;;		_system_init
  7687 ;; This function uses a non-reentrant model
  7688 ;;
  7689                           
  7690                           	psect	text5
  7691  014A00                     __ptext5:
  7692                           	opt stack 0
  7693  014A00                     _i2c_eeprom_recover_position:
  7694                           	opt stack 16
  7695                           
  7696                           ;i2c.c: 316: uint8_t buffer[7];;i2c.c: 322: i2c_eeprom_read(0x200, &buffer[0], 7);
  7697                           
  7698                           ;incstack = 0
  7699  014A00  0E02               	movlw	2
  7700  014A02  0100               	movlb	0	; () banked
  7701  014A04  6F72               	movwf	(i2c_eeprom_read@address+1)& (0+255),b
  7702  014A06  0E00               	movlw	0
  7703  014A08  6F71               	movwf	i2c_eeprom_read@address& (0+255),b
  7704  014A0A  0E79               	movlw	low i2c_eeprom_recover_position@buffer
  7705  014A0C  6F73               	movwf	i2c_eeprom_read@data& (0+255),b
  7706  014A0E  0E00               	movlw	high i2c_eeprom_recover_position@buffer
  7707  014A10  6F74               	movwf	(i2c_eeprom_read@data+1)& (0+255),b
  7708  014A12  0E07               	movlw	7
  7709  014A14  6F75               	movwf	i2c_eeprom_read@length& (0+255),b
  7710  014A16  EC19  F0A7         	call	_i2c_eeprom_read	;wreg free
  7711                           
  7712                           ;i2c.c: 325: memcpy(&os.current_position_in_steps, &buffer[0], 4);
  7713  014A1A  0E6B               	movlw	low (_os+7)
  7714  014A1C  0100               	movlb	0	; () banked
  7715  014A1E  6F60               	movwf	memcpy@d1& (0+255),b
  7716  014A20  0E01               	movlw	high (_os+7)
  7717  014A22  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  7718  014A24  0E79               	movlw	low i2c_eeprom_recover_position@buffer
  7719  014A26  6F62               	movwf	memcpy@s1& (0+255),b
  7720  014A28  0E00               	movlw	high i2c_eeprom_recover_position@buffer
  7721  014A2A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  7722  014A2C  0E00               	movlw	0
  7723  014A2E  6F65               	movwf	(memcpy@n+1)& (0+255),b
  7724  014A30  0E04               	movlw	4
  7725  014A32  6F64               	movwf	memcpy@n& (0+255),b
  7726  014A34  EC71  F0A4         	call	_memcpy	;wreg free
  7727                           
  7728                           ;i2c.c: 326: memcpy(&os.absolute_position, &buffer[4], 2);
  7729  014A38  0E6F               	movlw	low (_os+11)
  7730  014A3A  0100               	movlb	0	; () banked
  7731  014A3C  6F60               	movwf	memcpy@d1& (0+255),b
  7732  014A3E  0E01               	movlw	high (_os+11)
  7733  014A40  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  7734  014A42  0E7D               	movlw	low (i2c_eeprom_recover_position@buffer+4)
  7735  014A44  6F62               	movwf	memcpy@s1& (0+255),b
  7736  014A46  0E00               	movlw	high (i2c_eeprom_recover_position@buffer+4)
  7737  014A48  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  7738  014A4A  0E00               	movlw	0
  7739  014A4C  6F65               	movwf	(memcpy@n+1)& (0+255),b
  7740  014A4E  0E02               	movlw	2
  7741  014A50  6F64               	movwf	memcpy@n& (0+255),b
  7742  014A52  EC71  F0A4         	call	_memcpy	;wreg free
  7743                           
  7744                           ;i2c.c: 327: os.approach_direction = buffer[6];
  7745  014A56  C07F  F177         	movff	i2c_eeprom_recover_position@buffer+6,_os+19	;volatile
  7746  014A5A  0012               	return		;funcret
  7747  014A5C                     __end_of_i2c_eeprom_recover_position:
  7748                           	opt stack 0
  7749                           tblptru	equ	0xFF8
  7750                           tblptrh	equ	0xFF7
  7751                           tblptrl	equ	0xFF6
  7752                           tablat	equ	0xFF5
  7753                           postinc0	equ	0xFEE
  7754                           wreg	equ	0xFE8
  7755                           postdec1	equ	0xFE5
  7756                           fsr1h	equ	0xFE2
  7757                           fsr1l	equ	0xFE1
  7758                           status	equ	0xFD8
  7759                           
  7760 ;; *************** function _i2c_eeprom_read *****************
  7761 ;; Defined at:
  7762 ;;		line 277 in file "i2c.c"
  7763 ;; Parameters:    Size  Location     Type
  7764 ;;  address         2   17[BANK0 ] unsigned int 
  7765 ;;  data            2   19[BANK0 ] PTR unsigned char 
  7766 ;;		 -> i2c_eeprom_recover_position@buffer(7), i2c_eeprom_readInt16@data(2), i2c_eeprom_readUint32@data(4), i2c_eeprom_r
      +eadUint16@data(2), 
  7767 ;;  length          1   21[BANK0 ] unsigned char 
  7768 ;; Auto vars:     Size  Location     Type
  7769 ;;  slave_addres    1   24[BANK0 ] unsigned char 
  7770 ;;  addr            1   23[BANK0 ] unsigned char 
  7771 ;; Return value:  Size  Location     Type
  7772 ;;                  1    wreg      void 
  7773 ;; Registers used:
  7774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7775 ;; Tracked objects:
  7776 ;;		On entry : 0/0
  7777 ;;		On exit  : 0/0
  7778 ;;		Unchanged: 0/0
  7779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7780 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7781 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7782 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7783 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7784 ;;Total ram usage:        8 bytes
  7785 ;; Hardware stack levels used:    1
  7786 ;; Hardware stack levels required when called:   12
  7787 ;; This function calls:
  7788 ;;		__i2c_eeprom_busy
  7789 ;;		__i2c_read
  7790 ;;		__i2c_write
  7791 ;; This function is called by:
  7792 ;;		_i2c_eeprom_recover_position
  7793 ;;		_i2c_eeprom_readUint16
  7794 ;;		_i2c_eeprom_readUint32
  7795 ;;		_i2c_eeprom_readInt16
  7796 ;; This function uses a non-reentrant model
  7797 ;;
  7798                           
  7799                           	psect	text6
  7800  014E32                     __ptext6:
  7801                           	opt stack 0
  7802  014E32                     _i2c_eeprom_read:
  7803                           	opt stack 16
  7804                           
  7805                           ;i2c.c: 279: uint8_t slave_address;;i2c.c: 280: uint8_t addr;;i2c.c: 281: addr = address
      +                           & 0xFF;
  7806                           
  7807                           ;incstack = 0
  7808  014E32  C071  F077         	movff	i2c_eeprom_read@address,i2c_eeprom_read@addr
  7809                           
  7810                           ;i2c.c: 282: address &= 0b0000011100000000;
  7811  014E36  0100               	movlb	0	; () banked
  7812  014E38  0E00               	movlw	0
  7813  014E3A  1771               	andwf	i2c_eeprom_read@address& (0+255),f,b
  7814  014E3C  0E07               	movlw	7
  7815  014E3E  1772               	andwf	(i2c_eeprom_read@address+1)& (0+255),f,b
  7816                           
  7817                           ;i2c.c: 283: address >>= 7;
  7818  014E40  0E07               	movlw	7
  7819  014E42  6F76               	movwf	??_i2c_eeprom_read& (0+255),b
  7820  014E44                     u15125:
  7821  014E44  90D8               	bcf	status,0,c
  7822  014E46  3372               	rrcf	(i2c_eeprom_read@address+1)& (0+255),f,b
  7823  014E48  3371               	rrcf	i2c_eeprom_read@address& (0+255),f,b
  7824  014E4A  2F76               	decfsz	??_i2c_eeprom_read& (0+255),f,b
  7825  014E4C  D7FB               	goto	u15125
  7826                           
  7827                           ;i2c.c: 284: slave_address = 0b10100000 | address;
  7828  014E4E  5171               	movf	i2c_eeprom_read@address& (0+255),w,b
  7829  014E50  09A0               	iorlw	160
  7830  014E52  6F78               	movwf	i2c_eeprom_read@slave_address& (0+255),b
  7831  014E54                     
  7832                           ; BSR set to: 0
  7833                           
  7834                           ; BSR set to: 0
  7835  014E54  ECD6  F0AD         	call	__i2c_eeprom_busy	;wreg free
  7836  014E58  0900               	iorlw	0
  7837  014E5A  A4D8               	btfss	status,2,c
  7838  014E5C  D7FB               	goto	l1221
  7839                           
  7840                           ;i2c.c: 289: _i2c_write(slave_address, &addr, 1);
  7841  014E5E  0E77               	movlw	low i2c_eeprom_read@addr
  7842  014E60  0100               	movlb	0	; () banked
  7843  014E62  6F65               	movwf	__i2c_write@data& (0+255),b
  7844  014E64  0E00               	movlw	high i2c_eeprom_read@addr
  7845  014E66  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  7846  014E68  0E01               	movlw	1
  7847  014E6A  6F67               	movwf	__i2c_write@length& (0+255),b
  7848  014E6C  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  7849  014E6E  ECBB  F0A8         	call	__i2c_write
  7850                           
  7851                           ;i2c.c: 290: _i2c_read(slave_address, &data[0], length);
  7852  014E72  C073  F065         	movff	i2c_eeprom_read@data,__i2c_read@data
  7853  014E76  C074  F066         	movff	i2c_eeprom_read@data+1,__i2c_read@data+1
  7854  014E7A  C075  F067         	movff	i2c_eeprom_read@length,__i2c_read@length
  7855  014E7E  0100               	movlb	0	; () banked
  7856  014E80  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  7857  014E82  EC92  F09D         	call	__i2c_read
  7858  014E86  0012               	return		;funcret
  7859  014E88                     __end_of_i2c_eeprom_read:
  7860                           	opt stack 0
  7861                           tblptru	equ	0xFF8
  7862                           tblptrh	equ	0xFF7
  7863                           tblptrl	equ	0xFF6
  7864                           tablat	equ	0xFF5
  7865                           postinc0	equ	0xFEE
  7866                           wreg	equ	0xFE8
  7867                           postdec1	equ	0xFE5
  7868                           fsr1h	equ	0xFE2
  7869                           fsr1l	equ	0xFE1
  7870                           status	equ	0xFD8
  7871                           
  7872 ;; *************** function __i2c_read *****************
  7873 ;; Defined at:
  7874 ;;		line 105 in file "i2c.c"
  7875 ;; Parameters:    Size  Location     Type
  7876 ;;  slave_addres    1    wreg     unsigned char 
  7877 ;;  data            2    5[BANK0 ] PTR unsigned char 
  7878 ;;		 -> i2c_eeprom_recover_position@buffer(7), i2c_eeprom_readInt16@data(2), i2c_eeprom_readUint32@data(4), i2c_eeprom_r
      +eadUint16@data(2), 
  7879 ;;		 -> i2c_eeprom_readByte@addr(1), 
  7880 ;;  length          1    7[BANK0 ] unsigned char 
  7881 ;; Auto vars:     Size  Location     Type
  7882 ;;  slave_addres    1   15[BANK0 ] unsigned char 
  7883 ;;  cntr            1   16[BANK0 ] unsigned char 
  7884 ;; Return value:  Size  Location     Type
  7885 ;;                  1    wreg      void 
  7886 ;; Registers used:
  7887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7888 ;; Tracked objects:
  7889 ;;		On entry : 0/0
  7890 ;;		On exit  : 0/0
  7891 ;;		Unchanged: 0/0
  7892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7893 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7894 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7895 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7896 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7897 ;;Total ram usage:       12 bytes
  7898 ;; Hardware stack levels used:    1
  7899 ;; Hardware stack levels required when called:   11
  7900 ;; This function calls:
  7901 ;;		__i2c_acknowledge
  7902 ;;		__i2c_get
  7903 ;;		__i2c_not_acknowledge
  7904 ;;		__i2c_send
  7905 ;;		__i2c_start
  7906 ;;		__i2c_stop
  7907 ;;		__i2c_wait_idle
  7908 ;; This function is called by:
  7909 ;;		_i2c_eeprom_read
  7910 ;;		_i2c_eeprom_readByte
  7911 ;; This function uses a non-reentrant model
  7912 ;;
  7913                           
  7914                           	psect	text7
  7915  013B24                     __ptext7:
  7916                           	opt stack 0
  7917  013B24                     __i2c_read:
  7918                           	opt stack 16
  7919                           
  7920                           ;incstack = 0
  7921                           ;__i2c_read@slave_address stored from wreg
  7922  013B24  0100               	movlb	0	; () banked
  7923  013B26  6F6F               	movwf	__i2c_read@slave_address& (0+255),b
  7924                           
  7925                           ;i2c.c: 107: uint8_t cntr;;i2c.c: 109: _i2c_wait_idle();
  7926  013B28  ECAC  F0A3         	call	__i2c_wait_idle	;wreg free
  7927                           
  7928                           ;i2c.c: 110: _i2c_start();
  7929  013B2C  ECB0  F0AF         	call	__i2c_start	;wreg free
  7930                           
  7931                           ;i2c.c: 111: _i2c_wait_idle();
  7932  013B30  ECAC  F0A3         	call	__i2c_wait_idle	;wreg free
  7933                           
  7934                           ;i2c.c: 112: _i2c_send(slave_address | 0x01);
  7935  013B34  0100               	movlb	0	; () banked
  7936  013B36  516F               	movf	__i2c_read@slave_address& (0+255),w,b
  7937  013B38  0901               	iorlw	1
  7938  013B3A  EC9D  F0AF         	call	__i2c_send
  7939                           
  7940                           ;i2c.c: 113: _i2c_wait_idle();
  7941  013B3E  ECAC  F0A3         	call	__i2c_wait_idle	;wreg free
  7942                           
  7943                           ;i2c.c: 123: for(cntr=0; cntr<length-1; ++cntr)
  7944  013B42  0E00               	movlw	0
  7945  013B44  0100               	movlb	0	; () banked
  7946  013B46  6F70               	movwf	__i2c_read@cntr& (0+255),b
  7947  013B48  D00F               	goto	l1166
  7948  013B4A                     
  7949                           ; BSR set to: 0
  7950                           ;i2c.c: 124: {;i2c.c: 125: data[cntr] = _i2c_get();
  7951                           
  7952                           ; BSR set to: 0
  7953  013B4A  5170               	movf	__i2c_read@cntr& (0+255),w,b
  7954  013B4C  0D01               	mullw	1
  7955  013B4E  50F3               	movf	prodl,w,c
  7956  013B50  2565               	addwf	__i2c_read@data& (0+255),w,b
  7957  013B52  6ED9               	movwf	fsr2l,c
  7958  013B54  50F4               	movf	prodh,w,c
  7959  013B56  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
  7960  013B58  6EDA               	movwf	fsr2h,c
  7961  013B5A  EC93  F0AF         	call	__i2c_get	;wreg free
  7962  013B5E  6EDF               	movwf	indf2,c
  7963                           
  7964                           ;i2c.c: 126: _i2c_acknowledge();
  7965  013B60  EC98  F0AF         	call	__i2c_acknowledge	;wreg free
  7966  013B64  0100               	movlb	0	; () banked
  7967  013B66  2B70               	incf	__i2c_read@cntr& (0+255),f,b
  7968  013B68                     l1166:
  7969                           
  7970                           ; BSR set to: 0
  7971                           
  7972                           ; BSR set to: 0
  7973  013B68  0EFF               	movlw	255
  7974  013B6A  6F68               	movwf	??__i2c_read& (0+255),b
  7975  013B6C  0EFF               	movlw	255
  7976  013B6E  6F69               	movwf	(??__i2c_read+1)& (0+255),b
  7977  013B70  5167               	movf	__i2c_read@length& (0+255),w,b
  7978  013B72  6F6A               	movwf	(??__i2c_read+2)& (0+255),b
  7979  013B74  6B6B               	clrf	(??__i2c_read+3)& (0+255),b
  7980  013B76  5168               	movf	??__i2c_read& (0+255),w,b
  7981  013B78  276A               	addwf	(??__i2c_read+2)& (0+255),f,b
  7982  013B7A  5169               	movf	(??__i2c_read+1)& (0+255),w,b
  7983  013B7C  236B               	addwfc	(??__i2c_read+3)& (0+255),f,b
  7984  013B7E  5170               	movf	__i2c_read@cntr& (0+255),w,b
  7985  013B80  6F6C               	movwf	(??__i2c_read+4)& (0+255),b
  7986  013B82  6B6D               	clrf	(??__i2c_read+5)& (0+255),b
  7987  013B84  516A               	movf	(??__i2c_read+2)& (0+255),w,b
  7988  013B86  5D6C               	subwf	(??__i2c_read+4)& (0+255),w,b
  7989  013B88  516D               	movf	(??__i2c_read+5)& (0+255),w,b
  7990  013B8A  0A80               	xorlw	128
  7991  013B8C  6F6E               	movwf	(??__i2c_read+6)& (0+255),b
  7992  013B8E  516B               	movf	(??__i2c_read+3)& (0+255),w,b
  7993  013B90  0A80               	xorlw	128
  7994  013B92  596E               	subwfb	(??__i2c_read+6)& (0+255),w,b
  7995  013B94  A0D8               	btfss	status,0,c
  7996  013B96  D7D9               	goto	l1167
  7997                           
  7998                           ; BSR set to: 0
  7999                           ;i2c.c: 127: };i2c.c: 128: data[cntr] = _i2c_get();
  8000                           
  8001                           ; BSR set to: 0
  8002  013B98  5170               	movf	__i2c_read@cntr& (0+255),w,b
  8003  013B9A  0D01               	mullw	1
  8004  013B9C  50F3               	movf	prodl,w,c
  8005  013B9E  2565               	addwf	__i2c_read@data& (0+255),w,b
  8006  013BA0  6ED9               	movwf	fsr2l,c
  8007  013BA2  50F4               	movf	prodh,w,c
  8008  013BA4  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
  8009  013BA6  6EDA               	movwf	fsr2h,c
  8010  013BA8  EC93  F0AF         	call	__i2c_get	;wreg free
  8011  013BAC  6EDF               	movwf	indf2,c
  8012                           
  8013                           ;i2c.c: 129: _i2c_not_acknowledge();
  8014  013BAE  EC8E  F0AF         	call	__i2c_not_acknowledge	;wreg free
  8015                           
  8016                           ;i2c.c: 131: _i2c_stop();
  8017  013BB2  ECAC  F0AF         	call	__i2c_stop	;wreg free
  8018  013BB6  0012               	return		;funcret
  8019  013BB8                     __end_of__i2c_read:
  8020                           	opt stack 0
  8021                           tblptru	equ	0xFF8
  8022                           tblptrh	equ	0xFF7
  8023                           tblptrl	equ	0xFF6
  8024                           tablat	equ	0xFF5
  8025                           prodh	equ	0xFF4
  8026                           prodl	equ	0xFF3
  8027                           postinc0	equ	0xFEE
  8028                           wreg	equ	0xFE8
  8029                           postdec1	equ	0xFE5
  8030                           fsr1h	equ	0xFE2
  8031                           fsr1l	equ	0xFE1
  8032                           indf2	equ	0xFDF
  8033                           fsr2h	equ	0xFDA
  8034                           fsr2l	equ	0xFD9
  8035                           status	equ	0xFD8
  8036                           
  8037 ;; *************** function __i2c_not_acknowledge *****************
  8038 ;; Defined at:
  8039 ;;		line 78 in file "i2c.c"
  8040 ;; Parameters:    Size  Location     Type
  8041 ;;		None
  8042 ;; Auto vars:     Size  Location     Type
  8043 ;;		None
  8044 ;; Return value:  Size  Location     Type
  8045 ;;                  1    wreg      void 
  8046 ;; Registers used:
  8047 ;;		None
  8048 ;; Tracked objects:
  8049 ;;		On entry : 0/0
  8050 ;;		On exit  : 0/0
  8051 ;;		Unchanged: 0/0
  8052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8057 ;;Total ram usage:        0 bytes
  8058 ;; Hardware stack levels used:    1
  8059 ;; Hardware stack levels required when called:   10
  8060 ;; This function calls:
  8061 ;;		Nothing
  8062 ;; This function is called by:
  8063 ;;		__i2c_read
  8064 ;;		_i2c_adc_read
  8065 ;; This function uses a non-reentrant model
  8066 ;;
  8067                           
  8068                           	psect	text8
  8069  015F1C                     __ptext8:
  8070                           	opt stack 0
  8071  015F1C                     __i2c_not_acknowledge:
  8072                           	opt stack 16
  8073                           
  8074                           ;i2c.c: 80: SSP1CON2bits.ACKDT = 1;
  8075                           
  8076                           ;incstack = 0
  8077  015F1C  8AC5               	bsf	4037,5,c	;volatile
  8078                           
  8079                           ;i2c.c: 81: SSP1CON2bits.ACKEN = 1;
  8080  015F1E  88C5               	bsf	4037,4,c	;volatile
  8081  015F20  A8C5               	btfss	4037,4,c	;volatile
  8082  015F22  0012               	return	
  8083  015F24  D7FD               	goto	l1155
  8084  015F26                     __end_of__i2c_not_acknowledge:
  8085                           	opt stack 0
  8086                           tblptru	equ	0xFF8
  8087                           tblptrh	equ	0xFF7
  8088                           tblptrl	equ	0xFF6
  8089                           tablat	equ	0xFF5
  8090                           prodh	equ	0xFF4
  8091                           prodl	equ	0xFF3
  8092                           postinc0	equ	0xFEE
  8093                           wreg	equ	0xFE8
  8094                           postdec1	equ	0xFE5
  8095                           fsr1h	equ	0xFE2
  8096                           fsr1l	equ	0xFE1
  8097                           indf2	equ	0xFDF
  8098                           fsr2h	equ	0xFDA
  8099                           fsr2l	equ	0xFD9
  8100                           status	equ	0xFD8
  8101                           
  8102 ;; *************** function __i2c_get *****************
  8103 ;; Defined at:
  8104 ;;		line 58 in file "i2c.c"
  8105 ;; Parameters:    Size  Location     Type
  8106 ;;		None
  8107 ;; Auto vars:     Size  Location     Type
  8108 ;;		None
  8109 ;; Return value:  Size  Location     Type
  8110 ;;                  1    wreg      unsigned char 
  8111 ;; Registers used:
  8112 ;;		wreg, status,2
  8113 ;; Tracked objects:
  8114 ;;		On entry : 0/0
  8115 ;;		On exit  : 0/0
  8116 ;;		Unchanged: 0/0
  8117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8122 ;;Total ram usage:        0 bytes
  8123 ;; Hardware stack levels used:    1
  8124 ;; Hardware stack levels required when called:   10
  8125 ;; This function calls:
  8126 ;;		Nothing
  8127 ;; This function is called by:
  8128 ;;		__i2c_read
  8129 ;;		_i2c_adc_read
  8130 ;; This function uses a non-reentrant model
  8131 ;;
  8132                           
  8133                           	psect	text9
  8134  015F26                     __ptext9:
  8135                           	opt stack 0
  8136  015F26                     __i2c_get:
  8137                           	opt stack 16
  8138                           
  8139                           ;i2c.c: 60: SSP1CON2bits.RCEN = 1 ;
  8140                           
  8141                           ;incstack = 0
  8142  015F26  86C5               	bsf	4037,3,c	;volatile
  8143  015F28  B6C5               	btfsc	4037,3,c	;volatile
  8144  015F2A  D7FE               	goto	l1137
  8145                           
  8146                           ;i2c.c: 62: return SSP1BUF;
  8147  015F2C  50C9               	movf	4041,w,c	;volatile
  8148  015F2E  0012               	return	
  8149  015F30                     __end_of__i2c_get:
  8150                           	opt stack 0
  8151                           tblptru	equ	0xFF8
  8152                           tblptrh	equ	0xFF7
  8153                           tblptrl	equ	0xFF6
  8154                           tablat	equ	0xFF5
  8155                           prodh	equ	0xFF4
  8156                           prodl	equ	0xFF3
  8157                           postinc0	equ	0xFEE
  8158                           wreg	equ	0xFE8
  8159                           postdec1	equ	0xFE5
  8160                           fsr1h	equ	0xFE2
  8161                           fsr1l	equ	0xFE1
  8162                           indf2	equ	0xFDF
  8163                           fsr2h	equ	0xFDA
  8164                           fsr2l	equ	0xFD9
  8165                           status	equ	0xFD8
  8166                           
  8167 ;; *************** function __i2c_acknowledge *****************
  8168 ;; Defined at:
  8169 ;;		line 71 in file "i2c.c"
  8170 ;; Parameters:    Size  Location     Type
  8171 ;;		None
  8172 ;; Auto vars:     Size  Location     Type
  8173 ;;		None
  8174 ;; Return value:  Size  Location     Type
  8175 ;;                  1    wreg      void 
  8176 ;; Registers used:
  8177 ;;		None
  8178 ;; Tracked objects:
  8179 ;;		On entry : 0/0
  8180 ;;		On exit  : 0/0
  8181 ;;		Unchanged: 0/0
  8182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8187 ;;Total ram usage:        0 bytes
  8188 ;; Hardware stack levels used:    1
  8189 ;; Hardware stack levels required when called:   10
  8190 ;; This function calls:
  8191 ;;		Nothing
  8192 ;; This function is called by:
  8193 ;;		__i2c_read
  8194 ;;		_i2c_adc_read
  8195 ;; This function uses a non-reentrant model
  8196 ;;
  8197                           
  8198                           	psect	text10
  8199  015F30                     __ptext10:
  8200                           	opt stack 0
  8201  015F30                     __i2c_acknowledge:
  8202                           	opt stack 16
  8203                           
  8204                           ;i2c.c: 73: SSP1CON2bits.ACKDT = 0;
  8205                           
  8206                           ;incstack = 0
  8207  015F30  9AC5               	bcf	4037,5,c	;volatile
  8208                           
  8209                           ;i2c.c: 74: SSP1CON2bits.ACKEN = 1;
  8210  015F32  88C5               	bsf	4037,4,c	;volatile
  8211  015F34  A8C5               	btfss	4037,4,c	;volatile
  8212  015F36  0012               	return	
  8213  015F38  D7FD               	goto	l1149
  8214  015F3A                     __end_of__i2c_acknowledge:
  8215                           	opt stack 0
  8216                           tblptru	equ	0xFF8
  8217                           tblptrh	equ	0xFF7
  8218                           tblptrl	equ	0xFF6
  8219                           tablat	equ	0xFF5
  8220                           prodh	equ	0xFF4
  8221                           prodl	equ	0xFF3
  8222                           postinc0	equ	0xFEE
  8223                           wreg	equ	0xFE8
  8224                           postdec1	equ	0xFE5
  8225                           fsr1h	equ	0xFE2
  8226                           fsr1l	equ	0xFE1
  8227                           indf2	equ	0xFDF
  8228                           fsr2h	equ	0xFDA
  8229                           fsr2l	equ	0xFD9
  8230                           status	equ	0xFD8
  8231                           
  8232 ;; *************** function __i2c_eeprom_busy *****************
  8233 ;; Defined at:
  8234 ;;		line 171 in file "i2c.c"
  8235 ;; Parameters:    Size  Location     Type
  8236 ;;		None
  8237 ;; Auto vars:     Size  Location     Type
  8238 ;;  busy            1    5[BANK0 ] unsigned char 
  8239 ;; Return value:  Size  Location     Type
  8240 ;;                  1    wreg      unsigned char 
  8241 ;; Registers used:
  8242 ;;		wreg, status,2, status,0, cstack
  8243 ;; Tracked objects:
  8244 ;;		On entry : 0/0
  8245 ;;		On exit  : 0/0
  8246 ;;		Unchanged: 0/0
  8247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8249 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8251 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8252 ;;Total ram usage:        1 bytes
  8253 ;; Hardware stack levels used:    1
  8254 ;; Hardware stack levels required when called:   11
  8255 ;; This function calls:
  8256 ;;		__i2c_send
  8257 ;;		__i2c_start
  8258 ;;		__i2c_stop
  8259 ;;		__i2c_wait_idle
  8260 ;; This function is called by:
  8261 ;;		_i2c_eeprom_read
  8262 ;;		_i2c_eeprom_writeByte
  8263 ;;		_i2c_eeprom_readByte
  8264 ;; This function uses a non-reentrant model
  8265 ;;
  8266                           
  8267                           	psect	text11
  8268  015BAC                     __ptext11:
  8269                           	opt stack 0
  8270  015BAC                     __i2c_eeprom_busy:
  8271                           	opt stack 16
  8272                           
  8273                           ;i2c.c: 173: uint8_t busy;;i2c.c: 174: _i2c_wait_idle();
  8274                           
  8275                           ;incstack = 0
  8276  015BAC  ECAC  F0A3         	call	__i2c_wait_idle	;wreg free
  8277                           
  8278                           ;i2c.c: 175: _i2c_start();
  8279  015BB0  ECB0  F0AF         	call	__i2c_start	;wreg free
  8280                           
  8281                           ;i2c.c: 176: _i2c_wait_idle();
  8282  015BB4  ECAC  F0A3         	call	__i2c_wait_idle	;wreg free
  8283                           
  8284                           ;i2c.c: 177: _i2c_send(0b10100000);
  8285  015BB8  0EA0               	movlw	160
  8286  015BBA  EC9D  F0AF         	call	__i2c_send
  8287                           
  8288                           ;i2c.c: 178: _i2c_wait_idle();
  8289  015BBE  ECAC  F0A3         	call	__i2c_wait_idle	;wreg free
  8290                           
  8291                           ;i2c.c: 182: busy = SSP1CON2bits.ACKSTAT;
  8292  015BC2  0E00               	movlw	0
  8293  015BC4  BCC5               	btfsc	4037,6,c	;volatile
  8294  015BC6  0E01               	movlw	1
  8295  015BC8  0100               	movlb	0	; () banked
  8296  015BCA  6F65               	movwf	__i2c_eeprom_busy@busy& (0+255),b
  8297                           
  8298                           ; BSR set to: 0
  8299                           ;i2c.c: 183: _i2c_stop();
  8300  015BCC  ECAC  F0AF         	call	__i2c_stop	;wreg free
  8301                           
  8302                           ;i2c.c: 185: return 0;
  8303  015BD0  0E00               	movlw	0
  8304  015BD2  0012               	return	
  8305  015BD4                     __end_of__i2c_eeprom_busy:
  8306                           	opt stack 0
  8307                           tblptru	equ	0xFF8
  8308                           tblptrh	equ	0xFF7
  8309                           tblptrl	equ	0xFF6
  8310                           tablat	equ	0xFF5
  8311                           prodh	equ	0xFF4
  8312                           prodl	equ	0xFF3
  8313                           postinc0	equ	0xFEE
  8314                           wreg	equ	0xFE8
  8315                           postdec1	equ	0xFE5
  8316                           fsr1h	equ	0xFE2
  8317                           fsr1l	equ	0xFE1
  8318                           indf2	equ	0xFDF
  8319                           fsr2h	equ	0xFDA
  8320                           fsr2l	equ	0xFD9
  8321                           status	equ	0xFD8
  8322                           
  8323 ;; *************** function _flash_init *****************
  8324 ;; Defined at:
  8325 ;;		line 361 in file "flash.c"
  8326 ;; Parameters:    Size  Location     Type
  8327 ;;		None
  8328 ;; Auto vars:     Size  Location     Type
  8329 ;;		None
  8330 ;; Return value:  Size  Location     Type
  8331 ;;                  1    wreg      void 
  8332 ;; Registers used:
  8333 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8334 ;; Tracked objects:
  8335 ;;		On entry : 0/0
  8336 ;;		On exit  : 0/0
  8337 ;;		Unchanged: 0/0
  8338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8343 ;;Total ram usage:        0 bytes
  8344 ;; Hardware stack levels used:    1
  8345 ;; Hardware stack levels required when called:   14
  8346 ;; This function calls:
  8347 ;;		__flash_set_page_size
  8348 ;;		_spi_init
  8349 ;; This function is called by:
  8350 ;;		_system_init
  8351 ;; This function uses a non-reentrant model
  8352 ;;
  8353                           
  8354                           	psect	text12
  8355  015ED2                     __ptext12:
  8356                           	opt stack 0
  8357  015ED2                     _flash_init:
  8358                           	opt stack 15
  8359                           
  8360                           ;flash.c: 364: spi_init(SPI_CONFIGURATION_INTERNAL);
  8361                           
  8362                           ;incstack = 0
  8363  015ED2  0E00               	movlw	0
  8364  015ED4  ECEA  F0AA         	call	_spi_init
  8365                           
  8366                           ;flash.c: 367: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  8367  015ED8  0E00               	movlw	0
  8368  015EDA  EC69  F0A2         	call	__flash_set_page_size
  8369  015EDE  0012               	return		;funcret
  8370  015EE0                     __end_of_flash_init:
  8371                           	opt stack 0
  8372                           tblptru	equ	0xFF8
  8373                           tblptrh	equ	0xFF7
  8374                           tblptrl	equ	0xFF6
  8375                           tablat	equ	0xFF5
  8376                           prodh	equ	0xFF4
  8377                           prodl	equ	0xFF3
  8378                           postinc0	equ	0xFEE
  8379                           wreg	equ	0xFE8
  8380                           postdec1	equ	0xFE5
  8381                           fsr1h	equ	0xFE2
  8382                           fsr1l	equ	0xFE1
  8383                           indf2	equ	0xFDF
  8384                           fsr2h	equ	0xFDA
  8385                           fsr2l	equ	0xFD9
  8386                           status	equ	0xFD8
  8387                           
  8388 ;; *************** function _spi_init *****************
  8389 ;; Defined at:
  8390 ;;		line 89 in file "spi.c"
  8391 ;; Parameters:    Size  Location     Type
  8392 ;;  configuratio    1    wreg     enum E6878
  8393 ;; Auto vars:     Size  Location     Type
  8394 ;;  configuratio    1    3[BANK0 ] enum E6878
  8395 ;; Return value:  Size  Location     Type
  8396 ;;                  1    wreg      void 
  8397 ;; Registers used:
  8398 ;;		wreg, status,2, status,0, cstack
  8399 ;; Tracked objects:
  8400 ;;		On entry : 0/0
  8401 ;;		On exit  : 0/0
  8402 ;;		Unchanged: 0/0
  8403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8405 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8407 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8408 ;;Total ram usage:        1 bytes
  8409 ;; Hardware stack levels used:    1
  8410 ;; Hardware stack levels required when called:   11
  8411 ;; This function calls:
  8412 ;;		__spi_init
  8413 ;; This function is called by:
  8414 ;;		_flash_init
  8415 ;; This function uses a non-reentrant model
  8416 ;;
  8417                           
  8418                           	psect	text13
  8419  0155D4                     __ptext13:
  8420                           	opt stack 0
  8421  0155D4                     _spi_init:
  8422                           	opt stack 17
  8423                           
  8424                           ;incstack = 0
  8425                           ;spi_init@configuration stored from wreg
  8426  0155D4  0100               	movlb	0	; () banked
  8427  0155D6  6F63               	movwf	spi_init@configuration& (0+255),b
  8428                           
  8429                           ;spi.c: 91: switch(configuration)
  8430  0155D8  D012               	goto	l2188
  8431  0155DA                     
  8432                           ;spi.c: 94: _spi_init(config_internal);
  8433  0155DA  C128  F060         	movff	_config_internal,__spi_init@details
  8434  0155DE  C129  F061         	movff	_config_internal+1,__spi_init@details+1
  8435  0155E2  C12A  F062         	movff	_config_internal+2,__spi_init@details+2
  8436  0155E6  ECBF  F0AB         	call	__spi_init	;wreg free
  8437                           
  8438                           ;spi.c: 95: break;
  8439  0155EA  D011               	goto	l2190
  8440  0155EC                     
  8441                           ;spi.c: 98: _spi_init(config_external);
  8442  0155EC  C125  F060         	movff	_config_external,__spi_init@details
  8443  0155F0  C126  F061         	movff	_config_external+1,__spi_init@details+1
  8444  0155F4  C127  F062         	movff	_config_external+2,__spi_init@details+2
  8445  0155F8  ECBF  F0AB         	call	__spi_init	;wreg free
  8446                           
  8447                           ;spi.c: 100: }
  8448                           
  8449                           ;spi.c: 99: break;
  8450  0155FC  D008               	goto	l2190
  8451  0155FE                     l2188:
  8452  0155FE  0100               	movlb	0	; () banked
  8453  015600  5163               	movf	spi_init@configuration& (0+255),w,b
  8454                           
  8455                           ; Switch size 1, requested type "space"
  8456                           ; Number of cases is 2, Range of values is 0 to 1
  8457                           ; switch strategies available:
  8458                           ; Name         Instructions Cycles
  8459                           ; simple_byte            7     4 (average)
  8460                           ;	Chosen strategy is simple_byte
  8461  015602  0A00               	xorlw	0	; case 0
  8462  015604  B4D8               	btfsc	status,2,c
  8463  015606  D7E9               	goto	l2189
  8464  015608  0A01               	xorlw	1	; case 1
  8465  01560A  B4D8               	btfsc	status,2,c
  8466  01560C  D7EF               	goto	l2191
  8467  01560E                     l2190:
  8468                           
  8469                           ;spi.c: 102: active_configuration = configuration;
  8470  01560E  C063  F14C         	movff	spi_init@configuration,_active_configuration
  8471  015612  0012               	return		;funcret
  8472  015614                     __end_of_spi_init:
  8473                           	opt stack 0
  8474                           tblptru	equ	0xFF8
  8475                           tblptrh	equ	0xFF7
  8476                           tblptrl	equ	0xFF6
  8477                           tablat	equ	0xFF5
  8478                           prodh	equ	0xFF4
  8479                           prodl	equ	0xFF3
  8480                           postinc0	equ	0xFEE
  8481                           wreg	equ	0xFE8
  8482                           postdec1	equ	0xFE5
  8483                           fsr1h	equ	0xFE2
  8484                           fsr1l	equ	0xFE1
  8485                           indf2	equ	0xFDF
  8486                           fsr2h	equ	0xFDA
  8487                           fsr2l	equ	0xFD9
  8488                           status	equ	0xFD8
  8489                           
  8490 ;; *************** function __spi_init *****************
  8491 ;; Defined at:
  8492 ;;		line 24 in file "spi.c"
  8493 ;; Parameters:    Size  Location     Type
  8494 ;;  details         3    0[BANK0 ] struct .
  8495 ;; Auto vars:     Size  Location     Type
  8496 ;;		None
  8497 ;; Return value:  Size  Location     Type
  8498 ;;                  1    wreg      void 
  8499 ;; Registers used:
  8500 ;;		wreg, status,2
  8501 ;; Tracked objects:
  8502 ;;		On entry : 0/0
  8503 ;;		On exit  : 0/0
  8504 ;;		Unchanged: 0/0
  8505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8506 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8509 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8510 ;;Total ram usage:        3 bytes
  8511 ;; Hardware stack levels used:    1
  8512 ;; Hardware stack levels required when called:   10
  8513 ;; This function calls:
  8514 ;;		Nothing
  8515 ;; This function is called by:
  8516 ;;		_spi_init
  8517 ;; This function uses a non-reentrant model
  8518 ;;
  8519                           
  8520                           	psect	text14
  8521  01577E                     __ptext14:
  8522                           	opt stack 0
  8523  01577E                     __spi_init:
  8524                           	opt stack 17
  8525                           
  8526                           ;spi.c: 30: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  8527                           
  8528                           ;incstack = 0
  8529  01577E  0E55               	movlw	85
  8530  015780  6EA7               	movwf	4007,c	;volsfr
  8531  015782  0EAA               	movlw	170
  8532  015784  6EA7               	movwf	4007,c	;volsfr
  8533  015786  010E               	movlb	14	; () banked
  8534  015788  91BF               	bcf	191,0,b	;volatile
  8535                           
  8536                           ;spi.c: 31: RPINR21 = 22;
  8537  01578A  0E16               	movlw	22
  8538  01578C  6FFC               	movwf	252,b	;volatile
  8539                           
  8540                           ;spi.c: 32: RPOR21 = 10;
  8541  01578E  0E0A               	movlw	10
  8542  015790  6FD5               	movwf	213,b	;volatile
  8543                           
  8544                           ;spi.c: 34: RPOR23 = 11;
  8545  015792  0E0B               	movlw	11
  8546  015794  6FD7               	movwf	215,b	;volatile
  8547                           
  8548                           ;spi.c: 35: RPINR22 = 23;
  8549  015796  0E17               	movlw	23
  8550  015798  6FFD               	movwf	253,b	;volatile
  8551                           
  8552                           ;spi.c: 36: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  8553  01579A  0E55               	movlw	85
  8554  01579C  6EA7               	movwf	4007,c	;volsfr
  8555  01579E  0EAA               	movlw	170
  8556  0157A0  6EA7               	movwf	4007,c	;volsfr
  8557                           
  8558                           ; BSR set to: 14
  8559  0157A2  81BF               	bsf	191,0,b	;volatile
  8560                           
  8561                           ; BSR set to: 14
  8562                           ;spi.c: 39: SSP2STATbits.SMP = 1;
  8563  0157A4  8E73               	bsf	3955,7,c	;volatile
  8564                           
  8565                           ; BSR set to: 14
  8566                           ;spi.c: 40: SSP2STATbits.CKE = 1;
  8567  0157A6  8C73               	bsf	3955,6,c	;volatile
  8568                           
  8569                           ; BSR set to: 14
  8570                           ;spi.c: 41: SSP2CON1bits.CKP = 0;
  8571  0157A8  9872               	bcf	3954,4,c	;volatile
  8572                           
  8573                           ; BSR set to: 14
  8574                           ;spi.c: 42: SSP2CON1bits.SSPM =0b0000;
  8575  0157AA  9072               	bcf	3954,0,c	;volatile
  8576  0157AC  9272               	bcf	3954,1,c	;volatile
  8577  0157AE  9472               	bcf	3954,2,c	;volatile
  8578  0157B0  9672               	bcf	3954,3,c	;volatile
  8579                           
  8580                           ; BSR set to: 14
  8581                           ;spi.c: 43: SSP2CON1bits.SSPEN = 1;
  8582  0157B2  8A72               	bsf	3954,5,c	;volatile
  8583                           
  8584                           ; BSR set to: 14
  8585  0157B4  0012               	return		;funcret
  8586  0157B6                     __end_of__spi_init:
  8587                           	opt stack 0
  8588                           tblptru	equ	0xFF8
  8589                           tblptrh	equ	0xFF7
  8590                           tblptrl	equ	0xFF6
  8591                           tablat	equ	0xFF5
  8592                           prodh	equ	0xFF4
  8593                           prodl	equ	0xFF3
  8594                           postinc0	equ	0xFEE
  8595                           wreg	equ	0xFE8
  8596                           postdec1	equ	0xFE5
  8597                           fsr1h	equ	0xFE2
  8598                           fsr1l	equ	0xFE1
  8599                           indf2	equ	0xFDF
  8600                           fsr2h	equ	0xFDA
  8601                           fsr2l	equ	0xFD9
  8602                           status	equ	0xFD8
  8603                           
  8604 ;; *************** function __flash_set_page_size *****************
  8605 ;; Defined at:
  8606 ;;		line 99 in file "flash.c"
  8607 ;; Parameters:    Size  Location     Type
  8608 ;;  size            1    wreg     enum E7054
  8609 ;; Auto vars:     Size  Location     Type
  8610 ;;  size            1   23[BANK0 ] enum E7054
  8611 ;;  command         4   19[BANK0 ] unsigned char [4]
  8612 ;; Return value:  Size  Location     Type
  8613 ;;                  1    wreg      void 
  8614 ;; Registers used:
  8615 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8616 ;; Tracked objects:
  8617 ;;		On entry : 0/0
  8618 ;;		On exit  : 0/0
  8619 ;;		Unchanged: 0/0
  8620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8622 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8624 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8625 ;;Total ram usage:        5 bytes
  8626 ;; Hardware stack levels used:    1
  8627 ;; Hardware stack levels required when called:   13
  8628 ;; This function calls:
  8629 ;;		__flash_is_busy
  8630 ;;		_memcpy
  8631 ;;		_spi_tx
  8632 ;; This function is called by:
  8633 ;;		_flash_init
  8634 ;; This function uses a non-reentrant model
  8635 ;;
  8636                           
  8637                           	psect	text15
  8638  0144D2                     __ptext15:
  8639                           	opt stack 0
  8640  0144D2                     __flash_set_page_size:
  8641                           	opt stack 15
  8642                           
  8643                           ; BSR set to: 14
  8644                           ;incstack = 0
  8645                           ;__flash_set_page_size@size stored from wreg
  8646  0144D2  0100               	movlb	0	; () banked
  8647  0144D4  6F77               	movwf	__flash_set_page_size@size& (0+255),b
  8648  0144D6                     
  8649                           ;flash.c: 101: uint8_t command[4];;flash.c: 104: while(_flash_is_busy());
  8650  0144D6  EC70  F0AE         	call	__flash_is_busy	;wreg free
  8651  0144DA  0900               	iorlw	0
  8652  0144DC  A4D8               	btfss	status,2,c
  8653  0144DE  D7FB               	goto	l16204
  8654                           
  8655                           ;flash.c: 107: if(size==FLASH_PAGE_SIZE_512)
  8656  0144E0  0100               	movlb	0	; () banked
  8657  0144E2  5177               	movf	__flash_set_page_size@size& (0+255),w,b
  8658  0144E4  A4D8               	btfss	status,2,c
  8659  0144E6  D00E               	goto	l1541
  8660                           
  8661                           ; BSR set to: 0
  8662                           ;flash.c: 108: memcpy(command, flash_command_pagesize_512, 4);
  8663  0144E8  0E73               	movlw	low __flash_set_page_size@command
  8664  0144EA  6F60               	movwf	memcpy@d1& (0+255),b
  8665  0144EC  0E00               	movlw	high __flash_set_page_size@command
  8666  0144EE  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  8667  0144F0  0EF6               	movlw	low _flash_command_pagesize_512
  8668  0144F2  6F62               	movwf	memcpy@s1& (0+255),b
  8669  0144F4  0EA2               	movlw	high _flash_command_pagesize_512
  8670  0144F6  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  8671  0144F8  0E00               	movlw	0
  8672  0144FA  6F65               	movwf	(memcpy@n+1)& (0+255),b
  8673  0144FC  0E04               	movlw	4
  8674  0144FE  6F64               	movwf	memcpy@n& (0+255),b
  8675  014500  EC71  F0A4         	call	_memcpy	;wreg free
  8676  014504                     l1541:
  8677                           
  8678                           ;flash.c: 109: if(size==FLASH_PAGE_SIZE_528)
  8679  014504  0100               	movlb	0	; () banked
  8680  014506  0577               	decf	__flash_set_page_size@size& (0+255),w,b
  8681  014508  A4D8               	btfss	status,2,c
  8682  01450A  D00E               	goto	l1542
  8683                           
  8684                           ; BSR set to: 0
  8685                           ;flash.c: 110: memcpy(command, flash_command_pagesize_528, 4);
  8686  01450C  0E73               	movlw	low __flash_set_page_size@command
  8687  01450E  6F60               	movwf	memcpy@d1& (0+255),b
  8688  014510  0E00               	movlw	high __flash_set_page_size@command
  8689  014512  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  8690  014514  0EF2               	movlw	low _flash_command_pagesize_528
  8691  014516  6F62               	movwf	memcpy@s1& (0+255),b
  8692  014518  0EA2               	movlw	high _flash_command_pagesize_528
  8693  01451A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  8694  01451C  0E00               	movlw	0
  8695  01451E  6F65               	movwf	(memcpy@n+1)& (0+255),b
  8696  014520  0E04               	movlw	4
  8697  014522  6F64               	movwf	memcpy@n& (0+255),b
  8698  014524  EC71  F0A4         	call	_memcpy	;wreg free
  8699  014528                     l1542:
  8700                           
  8701                           ;flash.c: 113: spi_tx(command, 4);
  8702  014528  0E73               	movlw	low __flash_set_page_size@command
  8703  01452A  0100               	movlb	0	; () banked
  8704  01452C  6F60               	movwf	spi_tx@data& (0+255),b
  8705  01452E  0E00               	movlw	high __flash_set_page_size@command
  8706  014530  6F61               	movwf	(spi_tx@data+1)& (0+255),b
  8707  014532  0E00               	movlw	0
  8708  014534  6F63               	movwf	(spi_tx@length+1)& (0+255),b
  8709  014536  0E04               	movlw	4
  8710  014538  6F62               	movwf	spi_tx@length& (0+255),b
  8711  01453A  EC10  F0A6         	call	_spi_tx	;wreg free
  8712  01453E  0012               	return		;funcret
  8713  014540                     __end_of__flash_set_page_size:
  8714                           	opt stack 0
  8715                           tblptru	equ	0xFF8
  8716                           tblptrh	equ	0xFF7
  8717                           tblptrl	equ	0xFF6
  8718                           tablat	equ	0xFF5
  8719                           prodh	equ	0xFF4
  8720                           prodl	equ	0xFF3
  8721                           postinc0	equ	0xFEE
  8722                           wreg	equ	0xFE8
  8723                           postdec1	equ	0xFE5
  8724                           fsr1h	equ	0xFE2
  8725                           fsr1l	equ	0xFE1
  8726                           indf2	equ	0xFDF
  8727                           fsr2h	equ	0xFDA
  8728                           fsr2l	equ	0xFD9
  8729                           status	equ	0xFD8
  8730                           
  8731 ;; *************** function _fat_init *****************
  8732 ;; Defined at:
  8733 ;;		line 1404 in file "fat16.c"
  8734 ;; Parameters:    Size  Location     Type
  8735 ;;		None
  8736 ;; Auto vars:     Size  Location     Type
  8737 ;;		None
  8738 ;; Return value:  Size  Location     Type
  8739 ;;                  1    wreg      void 
  8740 ;; Registers used:
  8741 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8742 ;; Tracked objects:
  8743 ;;		On entry : 0/0
  8744 ;;		On exit  : 0/0
  8745 ;;		Unchanged: 0/0
  8746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8751 ;;Total ram usage:        0 bytes
  8752 ;; Hardware stack levels used:    1
  8753 ;; Hardware stack levels required when called:   16
  8754 ;; This function calls:
  8755 ;;		_fat_get_format_status
  8756 ;;		_fat_restore_mbr_fbr
  8757 ;; This function is called by:
  8758 ;;		_system_init
  8759 ;; This function uses a non-reentrant model
  8760 ;;
  8761                           
  8762                           	psect	text16
  8763  015EA2                     __ptext16:
  8764                           	opt stack 0
  8765  015EA2                     _fat_init:
  8766                           	opt stack 13
  8767                           
  8768                           ;fat16.c: 1407: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  8769                           
  8770                           ;incstack = 0
  8771  015EA2  EC2F  F099         	call	_fat_get_format_status	;wreg free
  8772  015EA6  0900               	iorlw	0
  8773  015EA8  A4D8               	btfss	status,2,c
  8774  015EAA  0012               	return	
  8775                           
  8776                           ;fat16.c: 1408: {;fat16.c: 1416: fat_restore_mbr_fbr();
  8777  015EAC  EC26  F09E         	call	_fat_restore_mbr_fbr	;wreg free
  8778  015EB0  0012               	return	
  8779  015EB2                     __end_of_fat_init:
  8780                           	opt stack 0
  8781                           tblptru	equ	0xFF8
  8782                           tblptrh	equ	0xFF7
  8783                           tblptrl	equ	0xFF6
  8784                           tablat	equ	0xFF5
  8785                           prodh	equ	0xFF4
  8786                           prodl	equ	0xFF3
  8787                           postinc0	equ	0xFEE
  8788                           wreg	equ	0xFE8
  8789                           postdec1	equ	0xFE5
  8790                           fsr1h	equ	0xFE2
  8791                           fsr1l	equ	0xFE1
  8792                           indf2	equ	0xFDF
  8793                           fsr2h	equ	0xFDA
  8794                           fsr2l	equ	0xFD9
  8795                           status	equ	0xFD8
  8796                           
  8797 ;; *************** function _fat_restore_mbr_fbr *****************
  8798 ;; Defined at:
  8799 ;;		line 1321 in file "fat16.c"
  8800 ;; Parameters:    Size  Location     Type
  8801 ;;		None
  8802 ;; Auto vars:     Size  Location     Type
  8803 ;;  cntr            2   36[BANK0 ] unsigned int 
  8804 ;; Return value:  Size  Location     Type
  8805 ;;                  1    wreg      unsigned char 
  8806 ;; Registers used:
  8807 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8808 ;; Tracked objects:
  8809 ;;		On entry : 0/0
  8810 ;;		On exit  : 0/0
  8811 ;;		Unchanged: 0/0
  8812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8814 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8816 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8817 ;;Total ram usage:        2 bytes
  8818 ;; Hardware stack levels used:    1
  8819 ;; Hardware stack levels required when called:   15
  8820 ;; This function calls:
  8821 ;;		__get_fbr
  8822 ;;		__get_mbr
  8823 ;;		_flash_sector_write
  8824 ;; This function is called by:
  8825 ;;		_fat_init
  8826 ;; This function uses a non-reentrant model
  8827 ;;
  8828                           
  8829                           	psect	text17
  8830  013C4C                     __ptext17:
  8831                           	opt stack 0
  8832  013C4C                     _fat_restore_mbr_fbr:
  8833                           	opt stack 13
  8834                           
  8835                           ;fat16.c: 1323: uint16_t cntr;;fat16.c: 1326: for(cntr=0; cntr<512; ++cntr)
  8836                           
  8837                           ;incstack = 0
  8838  013C4C  0E00               	movlw	0
  8839  013C4E  0100               	movlb	0	; () banked
  8840  013C50  6F85               	movwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),b
  8841  013C52  0E00               	movlw	0
  8842  013C54  6F84               	movwf	fat_restore_mbr_fbr@cntr& (0+255),b
  8843  013C56                     l16434:
  8844                           
  8845                           ; BSR set to: 0
  8846  013C56  0E02               	movlw	2
  8847  013C58  5D85               	subwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  8848  013C5A  B0D8               	btfsc	status,0,c
  8849  013C5C  D011               	goto	u15630
  8850                           
  8851                           ; BSR set to: 0
  8852                           ;fat16.c: 1327: {;fat16.c: 1328: buffer[cntr] = _get_mbr(cntr);
  8853                           
  8854                           ; BSR set to: 0
  8855                           
  8856                           ; BSR set to: 0
  8857  013C5E  0E00               	movlw	low _buffer
  8858  013C60  2584               	addwf	fat_restore_mbr_fbr@cntr& (0+255),w,b
  8859  013C62  6ED9               	movwf	fsr2l,c
  8860  013C64  0E0A               	movlw	high _buffer
  8861  013C66  2185               	addwfc	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  8862  013C68  6EDA               	movwf	fsr2h,c
  8863  013C6A  C084  F060         	movff	fat_restore_mbr_fbr@cntr,__get_mbr@idx
  8864  013C6E  C085  F061         	movff	fat_restore_mbr_fbr@cntr+1,__get_mbr@idx+1
  8865  013C72  EC0C  F095         	call	__get_mbr	;wreg free
  8866  013C76  6EDF               	movwf	indf2,c
  8867  013C78  0100               	movlb	0	; () banked
  8868  013C7A  4B84               	infsnz	fat_restore_mbr_fbr@cntr& (0+255),f,b
  8869  013C7C  2B85               	incf	(fat_restore_mbr_fbr@cntr+1)& (0+255),f,b
  8870  013C7E  D7EB               	goto	l16434
  8871  013C80                     u15630:
  8872                           
  8873                           ; BSR set to: 0
  8874                           ;fat16.c: 1329: };fat16.c: 1330: flash_sector_write(0, buffer);
  8875                           
  8876                           ; BSR set to: 0
  8877  013C80  0E00               	movlw	0
  8878  013C82  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  8879  013C84  0E00               	movlw	0
  8880  013C86  6F7F               	movwf	flash_sector_write@page& (0+255),b
  8881  013C88  0E00               	movlw	low _buffer
  8882  013C8A  6F81               	movwf	flash_sector_write@data& (0+255),b
  8883  013C8C  0E0A               	movlw	high _buffer
  8884  013C8E  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8885  013C90  EC0B  F0A9         	call	_flash_sector_write	;wreg free
  8886                           
  8887                           ;fat16.c: 1333: for(cntr=0; cntr<512; ++cntr)
  8888  013C94  0E00               	movlw	0
  8889  013C96  0100               	movlb	0	; () banked
  8890  013C98  6F85               	movwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),b
  8891  013C9A  0E00               	movlw	0
  8892  013C9C  6F84               	movwf	fat_restore_mbr_fbr@cntr& (0+255),b
  8893  013C9E                     l16448:
  8894                           
  8895                           ; BSR set to: 0
  8896  013C9E  0E02               	movlw	2
  8897  013CA0  5D85               	subwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  8898  013CA2  B0D8               	btfsc	status,0,c
  8899  013CA4  D011               	goto	u15650
  8900                           
  8901                           ; BSR set to: 0
  8902                           ;fat16.c: 1334: {;fat16.c: 1335: buffer[cntr] = _get_fbr(cntr);
  8903                           
  8904                           ; BSR set to: 0
  8905                           
  8906                           ; BSR set to: 0
  8907  013CA6  0E00               	movlw	low _buffer
  8908  013CA8  2584               	addwf	fat_restore_mbr_fbr@cntr& (0+255),w,b
  8909  013CAA  6ED9               	movwf	fsr2l,c
  8910  013CAC  0E0A               	movlw	high _buffer
  8911  013CAE  2185               	addwfc	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  8912  013CB0  6EDA               	movwf	fsr2h,c
  8913  013CB2  C084  F060         	movff	fat_restore_mbr_fbr@cntr,__get_fbr@idx
  8914  013CB6  C085  F061         	movff	fat_restore_mbr_fbr@cntr+1,__get_fbr@idx+1
  8915  013CBA  ECB0  F06D         	call	__get_fbr	;wreg free
  8916  013CBE  6EDF               	movwf	indf2,c
  8917  013CC0  0100               	movlb	0	; () banked
  8918  013CC2  4B84               	infsnz	fat_restore_mbr_fbr@cntr& (0+255),f,b
  8919  013CC4  2B85               	incf	(fat_restore_mbr_fbr@cntr+1)& (0+255),f,b
  8920  013CC6  D7EB               	goto	l16448
  8921  013CC8                     u15650:
  8922                           
  8923                           ; BSR set to: 0
  8924                           ;fat16.c: 1336: };fat16.c: 1337: flash_sector_write(1, buffer);
  8925                           
  8926                           ; BSR set to: 0
  8927  013CC8  0E00               	movlw	0
  8928  013CCA  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  8929  013CCC  0E01               	movlw	1
  8930  013CCE  6F7F               	movwf	flash_sector_write@page& (0+255),b
  8931  013CD0  0E00               	movlw	low _buffer
  8932  013CD2  6F81               	movwf	flash_sector_write@data& (0+255),b
  8933  013CD4  0E0A               	movlw	high _buffer
  8934  013CD6  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8935  013CD8  EC0B  F0A9         	call	_flash_sector_write	;wreg free
  8936  013CDC  0012               	return	
  8937  013CDE                     __end_of_fat_restore_mbr_fbr:
  8938                           	opt stack 0
  8939                           tblptru	equ	0xFF8
  8940                           tblptrh	equ	0xFF7
  8941                           tblptrl	equ	0xFF6
  8942                           tablat	equ	0xFF5
  8943                           prodh	equ	0xFF4
  8944                           prodl	equ	0xFF3
  8945                           postinc0	equ	0xFEE
  8946                           wreg	equ	0xFE8
  8947                           postdec1	equ	0xFE5
  8948                           fsr1h	equ	0xFE2
  8949                           fsr1l	equ	0xFE1
  8950                           indf2	equ	0xFDF
  8951                           fsr2h	equ	0xFDA
  8952                           fsr2l	equ	0xFD9
  8953                           status	equ	0xFD8
  8954                           
  8955 ;; *************** function _fat_get_format_status *****************
  8956 ;; Defined at:
  8957 ;;		line 1293 in file "fat16.c"
  8958 ;; Parameters:    Size  Location     Type
  8959 ;;		None
  8960 ;; Auto vars:     Size  Location     Type
  8961 ;;  cntr            2   45[BANK0 ] unsigned int 
  8962 ;; Return value:  Size  Location     Type
  8963 ;;                  1    wreg      enum E7028
  8964 ;; Registers used:
  8965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8966 ;; Tracked objects:
  8967 ;;		On entry : 0/0
  8968 ;;		On exit  : 0/0
  8969 ;;		Unchanged: 0/0
  8970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8972 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8973 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8974 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8975 ;;Total ram usage:        4 bytes
  8976 ;; Hardware stack levels used:    1
  8977 ;; Hardware stack levels required when called:   15
  8978 ;; This function calls:
  8979 ;;		__get_fbr
  8980 ;;		__get_mbr
  8981 ;;		_flash_sector_read
  8982 ;; This function is called by:
  8983 ;;		_fat_init
  8984 ;; This function uses a non-reentrant model
  8985 ;;
  8986                           
  8987                           	psect	text18
  8988  01325E                     __ptext18:
  8989                           	opt stack 0
  8990  01325E                     _fat_get_format_status:
  8991                           	opt stack 13
  8992                           
  8993                           ;fat16.c: 1295: uint16_t cntr;;fat16.c: 1298: flash_sector_read(0, buffer);
  8994                           
  8995                           ;incstack = 0
  8996  01325E  0E00               	movlw	0
  8997  013260  0100               	movlb	0	; () banked
  8998  013262  6F88               	movwf	(flash_sector_read@page+1)& (0+255),b
  8999  013264  0E00               	movlw	0
  9000  013266  6F87               	movwf	flash_sector_read@page& (0+255),b
  9001  013268  0E00               	movlw	low _buffer
  9002  01326A  6F89               	movwf	flash_sector_read@data& (0+255),b
  9003  01326C  0E0A               	movlw	high _buffer
  9004  01326E  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
  9005  013270  EC12  F0AE         	call	_flash_sector_read	;wreg free
  9006                           
  9007                           ;fat16.c: 1299: for(cntr=0; cntr<512; ++cntr)
  9008  013274  0E00               	movlw	0
  9009  013276  0100               	movlb	0	; () banked
  9010  013278  6F8E               	movwf	(fat_get_format_status@cntr+1)& (0+255),b
  9011  01327A  0E00               	movlw	0
  9012  01327C  6F8D               	movwf	fat_get_format_status@cntr& (0+255),b
  9013  01327E                     l16396:
  9014                           
  9015                           ; BSR set to: 0
  9016  01327E  0E02               	movlw	2
  9017  013280  5D8E               	subwf	(fat_get_format_status@cntr+1)& (0+255),w,b
  9018  013282  B0D8               	btfsc	status,0,c
  9019  013284  D017               	goto	u15580
  9020                           
  9021                           ; BSR set to: 0
  9022                           ;fat16.c: 1300: {;fat16.c: 1301: if(buffer[cntr] != _get_mbr(cntr))
  9023                           
  9024                           ; BSR set to: 0
  9025                           
  9026                           ; BSR set to: 0
  9027  013286  0E00               	movlw	low _buffer
  9028  013288  258D               	addwf	fat_get_format_status@cntr& (0+255),w,b
  9029  01328A  6ED9               	movwf	fsr2l,c
  9030  01328C  0E0A               	movlw	high _buffer
  9031  01328E  218E               	addwfc	(fat_get_format_status@cntr+1)& (0+255),w,b
  9032  013290  6EDA               	movwf	fsr2h,c
  9033  013292  C08D  F060         	movff	fat_get_format_status@cntr,__get_mbr@idx
  9034  013296  C08E  F061         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  9035  01329A  EC0C  F095         	call	__get_mbr	;wreg free
  9036  01329E  0100               	movlb	0	; () banked
  9037  0132A0  6F8C               	movwf	(??_fat_get_format_status+1)& (0+255),b
  9038  0132A2  50DE               	movf	postinc2,w,c
  9039  0132A4  198C               	xorwf	(??_fat_get_format_status+1)& (0+255),w,b
  9040  0132A6  B4D8               	btfsc	status,2,c
  9041  0132A8  D002               	goto	l2065
  9042                           
  9043                           ; BSR set to: 0
  9044                           ;fat16.c: 1302: {;fat16.c: 1303: return DRIVE_NOT_FORMATED;
  9045  0132AA  0E00               	movlw	0
  9046                           
  9047                           ; BSR set to: 0
  9048  0132AC  0012               	return	
  9049  0132AE                     l2065:
  9050                           
  9051                           ; BSR set to: 0
  9052                           
  9053                           ; BSR set to: 0
  9054  0132AE  4B8D               	infsnz	fat_get_format_status@cntr& (0+255),f,b
  9055  0132B0  2B8E               	incf	(fat_get_format_status@cntr+1)& (0+255),f,b
  9056  0132B2  D7E5               	goto	l16396
  9057  0132B4                     u15580:
  9058                           
  9059                           ; BSR set to: 0
  9060                           ;fat16.c: 1304: };fat16.c: 1305: };fat16.c: 1308: flash_sector_read(1, buffer);
  9061                           
  9062                           ; BSR set to: 0
  9063  0132B4  0E00               	movlw	0
  9064  0132B6  6F88               	movwf	(flash_sector_read@page+1)& (0+255),b
  9065  0132B8  0E01               	movlw	1
  9066  0132BA  6F87               	movwf	flash_sector_read@page& (0+255),b
  9067  0132BC  0E00               	movlw	low _buffer
  9068  0132BE  6F89               	movwf	flash_sector_read@data& (0+255),b
  9069  0132C0  0E0A               	movlw	high _buffer
  9070  0132C2  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
  9071  0132C4  EC12  F0AE         	call	_flash_sector_read	;wreg free
  9072                           
  9073                           ;fat16.c: 1309: for(cntr=0; cntr<512; ++cntr)
  9074  0132C8  0E00               	movlw	0
  9075  0132CA  0100               	movlb	0	; () banked
  9076  0132CC  6F8E               	movwf	(fat_get_format_status@cntr+1)& (0+255),b
  9077  0132CE  0E00               	movlw	0
  9078  0132D0  6F8D               	movwf	fat_get_format_status@cntr& (0+255),b
  9079  0132D2                     l16414:
  9080                           
  9081                           ; BSR set to: 0
  9082  0132D2  0E02               	movlw	2
  9083  0132D4  5D8E               	subwf	(fat_get_format_status@cntr+1)& (0+255),w,b
  9084  0132D6  B0D8               	btfsc	status,0,c
  9085  0132D8  D017               	goto	u15610
  9086                           
  9087                           ; BSR set to: 0
  9088                           ;fat16.c: 1310: {;fat16.c: 1311: if(buffer[cntr] != _get_fbr(cntr))
  9089                           
  9090                           ; BSR set to: 0
  9091                           
  9092                           ; BSR set to: 0
  9093  0132DA  0E00               	movlw	low _buffer
  9094  0132DC  258D               	addwf	fat_get_format_status@cntr& (0+255),w,b
  9095  0132DE  6ED9               	movwf	fsr2l,c
  9096  0132E0  0E0A               	movlw	high _buffer
  9097  0132E2  218E               	addwfc	(fat_get_format_status@cntr+1)& (0+255),w,b
  9098  0132E4  6EDA               	movwf	fsr2h,c
  9099  0132E6  C08D  F060         	movff	fat_get_format_status@cntr,__get_fbr@idx
  9100  0132EA  C08E  F061         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  9101  0132EE  ECB0  F06D         	call	__get_fbr	;wreg free
  9102  0132F2  0100               	movlb	0	; () banked
  9103  0132F4  6F8C               	movwf	(??_fat_get_format_status+1)& (0+255),b
  9104  0132F6  50DE               	movf	postinc2,w,c
  9105  0132F8  198C               	xorwf	(??_fat_get_format_status+1)& (0+255),w,b
  9106  0132FA  B4D8               	btfsc	status,2,c
  9107  0132FC  D002               	goto	l2069
  9108                           
  9109                           ; BSR set to: 0
  9110                           ;fat16.c: 1312: {;fat16.c: 1313: return DRIVE_NOT_FORMATED;
  9111  0132FE  0E00               	movlw	0
  9112                           
  9113                           ; BSR set to: 0
  9114  013300  0012               	return	
  9115  013302                     l2069:
  9116                           
  9117                           ; BSR set to: 0
  9118                           
  9119                           ; BSR set to: 0
  9120  013302  4B8D               	infsnz	fat_get_format_status@cntr& (0+255),f,b
  9121  013304  2B8E               	incf	(fat_get_format_status@cntr+1)& (0+255),f,b
  9122  013306  D7E5               	goto	l16414
  9123  013308                     u15610:
  9124                           
  9125                           ; BSR set to: 0
  9126                           ;fat16.c: 1314: };fat16.c: 1315: };fat16.c: 1318: return DRIVE_FORMATED;
  9127                           
  9128                           ; BSR set to: 0
  9129  013308  0E01               	movlw	1
  9130  01330A  0012               	return	
  9131  01330C                     __end_of_fat_get_format_status:
  9132                           	opt stack 0
  9133                           tblptru	equ	0xFF8
  9134                           tblptrh	equ	0xFF7
  9135                           tblptrl	equ	0xFF6
  9136                           tablat	equ	0xFF5
  9137                           prodh	equ	0xFF4
  9138                           prodl	equ	0xFF3
  9139                           postinc0	equ	0xFEE
  9140                           wreg	equ	0xFE8
  9141                           postdec1	equ	0xFE5
  9142                           fsr1h	equ	0xFE2
  9143                           fsr1l	equ	0xFE1
  9144                           indf2	equ	0xFDF
  9145                           postinc2	equ	0xFDE
  9146                           fsr2h	equ	0xFDA
  9147                           fsr2l	equ	0xFD9
  9148                           status	equ	0xFD8
  9149                           
  9150 ;; *************** function __get_mbr *****************
  9151 ;; Defined at:
  9152 ;;		line 1038 in file "fat16.c"
  9153 ;; Parameters:    Size  Location     Type
  9154 ;;  idx             2    0[BANK0 ] unsigned int 
  9155 ;; Auto vars:     Size  Location     Type
  9156 ;;		None
  9157 ;; Return value:  Size  Location     Type
  9158 ;;                  1    wreg      unsigned char 
  9159 ;; Registers used:
  9160 ;;		wreg, status,2, status,0
  9161 ;; Tracked objects:
  9162 ;;		On entry : 0/0
  9163 ;;		On exit  : 0/0
  9164 ;;		Unchanged: 0/0
  9165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9166 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9168 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9169 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9170 ;;Total ram usage:        4 bytes
  9171 ;; Hardware stack levels used:    1
  9172 ;; Hardware stack levels required when called:   10
  9173 ;; This function calls:
  9174 ;;		Nothing
  9175 ;; This function is called by:
  9176 ;;		_fat_get_format_status
  9177 ;;		_fat_restore_mbr_fbr
  9178 ;;		_fat_format
  9179 ;; This function uses a non-reentrant model
  9180 ;;
  9181                           
  9182                           	psect	text19
  9183  012A18                     __ptext19:
  9184                           	opt stack 0
  9185  012A18                     __get_mbr:
  9186                           	opt stack 17
  9187                           
  9188                           ;fat16.c: 1040: switch (idx)
  9189                           
  9190                           ; BSR set to: 0
  9191                           ;incstack = 0
  9192  012A18  D026               	goto	l1937
  9193  012A1A                     
  9194                           ;fat16.c: 1043: return 0x80;
  9195  012A1A  0E80               	movlw	128
  9196  012A1C  0012               	return	
  9197  012A1E                     
  9198                           ;fat16.c: 1045: return 0;
  9199  012A1E  0E00               	movlw	0
  9200  012A20  0012               	return	
  9201  012A22                     
  9202                           ;fat16.c: 1047: return 2;
  9203  012A22  0E02               	movlw	2
  9204  012A24  0012               	return	
  9205  012A26                     
  9206                           ;fat16.c: 1049: return 0;
  9207  012A26  0E00               	movlw	0
  9208  012A28  0012               	return	
  9209  012A2A                     
  9210                           ;fat16.c: 1051: return 0x04;
  9211  012A2A  0E04               	movlw	4
  9212  012A2C  0012               	return	
  9213  012A2E                     
  9214                           ;fat16.c: 1053: return 2;
  9215  012A2E  0E02               	movlw	2
  9216  012A30  0012               	return	
  9217  012A32                     
  9218                           ;fat16.c: 1055: return 3;
  9219  012A32  0E03               	movlw	3
  9220  012A34  0012               	return	
  9221  012A36                     
  9222                           ;fat16.c: 1057: return 8;
  9223  012A36  0E08               	movlw	8
  9224  012A38  0012               	return	
  9225  012A3A                     
  9226                           ;fat16.c: 1059: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xF
      +                          F));
  9227  012A3A  0E01               	movlw	1
  9228  012A3C  0012               	return	
  9229  012A3E                     
  9230                           ;fat16.c: 1061: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8
      +                          )&0xFF));
  9231  012A3E  0E00               	movlw	0
  9232  012A40  0012               	return	
  9233  012A42                     
  9234                           ;fat16.c: 1063: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))&0xFF));
  9235  012A42  0E00               	movlw	0
  9236  012A44  0012               	return	
  9237  012A46                     
  9238                           ;fat16.c: 1065: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  9239  012A46  0E00               	movlw	0
  9240  012A48  0012               	return	
  9241  012A4A                     
  9242                           ;fat16.c: 1067: return ((unsigned char)((((unsigned short)((((uint32_t)8191))&0xFFFF)))&
      +                          0xFF));
  9243  012A4A  0EFF               	movlw	255
  9244  012A4C  0012               	return	
  9245  012A4E                     
  9246                           ;fat16.c: 1069: return ((unsigned char)(((((unsigned short)((((uint32_t)8191))&0xFFFF)))
      +                          >>8)&0xFF));
  9247  012A4E  0E1F               	movlw	31
  9248  012A50  0012               	return	
  9249  012A52                     
  9250                           ;fat16.c: 1071: return ((unsigned char)((((unsigned short)(((((uint32_t)8191))>>16)&0xFF
      +                          FF)))&0xFF));
  9251  012A52  0E00               	movlw	0
  9252  012A54  0012               	return	
  9253  012A56                     
  9254                           ;fat16.c: 1073: return ((unsigned char)(((((unsigned short)(((((uint32_t)8191))>>16)&0xF
      +                          FFF)))>>8)&0xFF));
  9255  012A56  0E00               	movlw	0
  9256  012A58  0012               	return	
  9257  012A5A                     
  9258                           ;fat16.c: 1075: return ((unsigned char)((((uint16_t)0X55AA)>>8)&0xFF));
  9259  012A5A  0E55               	movlw	85
  9260  012A5C  0012               	return	
  9261  012A5E                     
  9262                           ;fat16.c: 1077: return ((unsigned char)(((uint16_t)0X55AA)&0xFF));
  9263  012A5E  0EAA               	movlw	170
  9264  012A60  0012               	return	
  9265  012A62                     
  9266                           ;fat16.c: 1079: return 0X00;
  9267  012A62  0E00               	movlw	0
  9268                           
  9269                           ;fat16.c: 1080: }
  9270  012A64  0012               	return	
  9271  012A66                     l1937:
  9272  012A66  C060  F062         	movff	__get_mbr@idx,??__get_mbr
  9273  012A6A  C061  F063         	movff	__get_mbr@idx+1,??__get_mbr+1
  9274                           
  9275                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9276                           ; Switch size 1, requested type "space"
  9277                           ; Number of cases is 1, Range of values is 1 to 1
  9278                           ; switch strategies available:
  9279                           ; Name         Instructions Cycles
  9280                           ; simple_byte            4     3 (average)
  9281                           ;	Chosen strategy is simple_byte
  9282  012A6E  0100               	movlb	0	; () banked
  9283  012A70  5163               	movf	(??__get_mbr+1)& (0+255),w,b
  9284  012A72  0A01               	xorlw	1	; case 1
  9285  012A74  A4D8               	btfss	status,2,c
  9286  012A76  D7F5               	goto	l1957
  9287                           
  9288                           ; BSR set to: 0
  9289                           ; Switch size 1, requested type "space"
  9290                           ; Number of cases is 18, Range of values is 190 to 255
  9291                           ; switch strategies available:
  9292                           ; Name         Instructions Cycles
  9293                           ; simple_byte           55    28 (average)
  9294                           ;	Chosen strategy is simple_byte
  9295  012A78  5162               	movf	??__get_mbr& (0+255),w,b
  9296  012A7A  0ABE               	xorlw	190	; case 190
  9297  012A7C  B4D8               	btfsc	status,2,c
  9298  012A7E  D7CD               	goto	l1938
  9299  012A80  0A01               	xorlw	1	; case 191
  9300  012A82  B4D8               	btfsc	status,2,c
  9301  012A84  D7CC               	goto	l1940
  9302  012A86  0A7F               	xorlw	127	; case 192
  9303  012A88  B4D8               	btfsc	status,2,c
  9304  012A8A  D7CB               	goto	l1941
  9305  012A8C  0A01               	xorlw	1	; case 193
  9306  012A8E  B4D8               	btfsc	status,2,c
  9307  012A90  D7CA               	goto	l1942
  9308  012A92  0A03               	xorlw	3	; case 194
  9309  012A94  B4D8               	btfsc	status,2,c
  9310  012A96  D7C9               	goto	l1943
  9311  012A98  0A01               	xorlw	1	; case 195
  9312  012A9A  B4D8               	btfsc	status,2,c
  9313  012A9C  D7C8               	goto	l1944
  9314  012A9E  0A07               	xorlw	7	; case 196
  9315  012AA0  B4D8               	btfsc	status,2,c
  9316  012AA2  D7C7               	goto	l1945
  9317  012AA4  0A01               	xorlw	1	; case 197
  9318  012AA6  B4D8               	btfsc	status,2,c
  9319  012AA8  D7C6               	goto	l1946
  9320  012AAA  0A03               	xorlw	3	; case 198
  9321  012AAC  B4D8               	btfsc	status,2,c
  9322  012AAE  D7C5               	goto	l1947
  9323  012AB0  0A01               	xorlw	1	; case 199
  9324  012AB2  B4D8               	btfsc	status,2,c
  9325  012AB4  D7C4               	goto	l1948
  9326  012AB6  0A0F               	xorlw	15	; case 200
  9327  012AB8  B4D8               	btfsc	status,2,c
  9328  012ABA  D7C3               	goto	l1949
  9329  012ABC  0A01               	xorlw	1	; case 201
  9330  012ABE  B4D8               	btfsc	status,2,c
  9331  012AC0  D7C2               	goto	l1950
  9332  012AC2  0A03               	xorlw	3	; case 202
  9333  012AC4  B4D8               	btfsc	status,2,c
  9334  012AC6  D7C1               	goto	l1951
  9335  012AC8  0A01               	xorlw	1	; case 203
  9336  012ACA  B4D8               	btfsc	status,2,c
  9337  012ACC  D7C0               	goto	l1952
  9338  012ACE  0A07               	xorlw	7	; case 204
  9339  012AD0  B4D8               	btfsc	status,2,c
  9340  012AD2  D7BF               	goto	l1953
  9341  012AD4  0A01               	xorlw	1	; case 205
  9342  012AD6  B4D8               	btfsc	status,2,c
  9343  012AD8  D7BE               	goto	l1954
  9344  012ADA  0A33               	xorlw	51	; case 254
  9345  012ADC  B4D8               	btfsc	status,2,c
  9346  012ADE  D7BD               	goto	l1955
  9347  012AE0  0A01               	xorlw	1	; case 255
  9348  012AE2  B4D8               	btfsc	status,2,c
  9349  012AE4  D7BC               	goto	l1956
  9350  012AE6  D7BD               	goto	l1957
  9351  012AE8                     __end_of__get_mbr:
  9352                           	opt stack 0
  9353                           tblptru	equ	0xFF8
  9354                           tblptrh	equ	0xFF7
  9355                           tblptrl	equ	0xFF6
  9356                           tablat	equ	0xFF5
  9357                           prodh	equ	0xFF4
  9358                           prodl	equ	0xFF3
  9359                           postinc0	equ	0xFEE
  9360                           wreg	equ	0xFE8
  9361                           postdec1	equ	0xFE5
  9362                           fsr1h	equ	0xFE2
  9363                           fsr1l	equ	0xFE1
  9364                           indf2	equ	0xFDF
  9365                           postinc2	equ	0xFDE
  9366                           fsr2h	equ	0xFDA
  9367                           fsr2l	equ	0xFD9
  9368                           status	equ	0xFD8
  9369                           
  9370 ;; *************** function __get_fbr *****************
  9371 ;; Defined at:
  9372 ;;		line 1083 in file "fat16.c"
  9373 ;; Parameters:    Size  Location     Type
  9374 ;;  idx             2    0[BANK0 ] unsigned int 
  9375 ;; Auto vars:     Size  Location     Type
  9376 ;;		None
  9377 ;; Return value:  Size  Location     Type
  9378 ;;                  1    wreg      unsigned char 
  9379 ;; Registers used:
  9380 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  9381 ;; Tracked objects:
  9382 ;;		On entry : 0/0
  9383 ;;		On exit  : 0/0
  9384 ;;		Unchanged: 0/0
  9385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9386 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9388 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9389 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9390 ;;Total ram usage:        4 bytes
  9391 ;; Hardware stack levels used:    1
  9392 ;; Hardware stack levels required when called:   10
  9393 ;; This function calls:
  9394 ;;		Nothing
  9395 ;; This function is called by:
  9396 ;;		_fat_get_format_status
  9397 ;;		_fat_restore_mbr_fbr
  9398 ;;		_fat_format
  9399 ;; This function uses a non-reentrant model
  9400 ;;
  9401                           
  9402                           	psect	text20
  9403  00DB60                     __ptext20:
  9404                           	opt stack 0
  9405  00DB60                     __get_fbr:
  9406                           	opt stack 17
  9407                           
  9408                           ;fat16.c: 1085: switch (idx)
  9409                           
  9410                           ;incstack = 0
  9411  00DB60  D098               	goto	l1961
  9412  00DB62                     
  9413                           ;fat16.c: 1088: return 0xEB;
  9414  00DB62  0EEB               	movlw	235
  9415  00DB64  0012               	return	
  9416  00DB66                     
  9417                           ;fat16.c: 1090: return 0x3C;
  9418  00DB66  0E3C               	movlw	60
  9419  00DB68  0012               	return	
  9420  00DB6A                     
  9421                           ;fat16.c: 1092: return 0x90;
  9422  00DB6A  0E90               	movlw	144
  9423  00DB6C  0012               	return	
  9424  00DB6E                     
  9425                           ;fat16.c: 1094: return "MSDOS5.0"[0];
  9426  00DB6E  0E20               	movlw	low STR_7
  9427  00DB70  6EF6               	movwf	tblptrl,c
  9428  00DB72                     	if	1	;There is more than 1 active tblptr byte
  9429  00DB72  0EA3               	movlw	high STR_7
  9430  00DB74  6EF7               	movwf	tblptrh,c
  9431  00DB76                     	endif
  9432  00DB76                     	if	1	;There are 3 active tblptr bytes
  9433  00DB76  0E00               	movlw	low (STR_7 shr (0+16))
  9434  00DB78  6EF8               	movwf	tblptru,c
  9435  00DB7A                     	endif
  9436  00DB7A  0008               	tblrd		*
  9437  00DB7C  50F5               	movf	tablat,w,c
  9438  00DB7E  0012               	return	
  9439  00DB80                     
  9440                           ;fat16.c: 1096: return "MSDOS5.0"[1];
  9441  00DB80  0E21               	movlw	low (STR_7+1)
  9442  00DB82  6EF6               	movwf	tblptrl,c
  9443  00DB84  0EA3               	movlw	high (STR_7+1)
  9444  00DB86  6EF7               	movwf	tblptrh,c
  9445  00DB88                     	if	0	;tblptru may be non-zero
  9446  00DB88                     	endif
  9447  00DB88                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9448  00DB88  0E00               	movlw	low (__mediumconst shr (0+16))
  9449  00DB8A  6EF8               	movwf	tblptru,c
  9450  00DB8C                     	endif
  9451  00DB8C  0008               	tblrd		*
  9452  00DB8E  50F5               	movf	tablat,w,c
  9453  00DB90  0012               	return	
  9454  00DB92                     
  9455                           ;fat16.c: 1098: return "MSDOS5.0"[2];
  9456  00DB92  0E22               	movlw	low (STR_7+2)
  9457  00DB94  6EF6               	movwf	tblptrl,c
  9458  00DB96  0EA3               	movlw	high (STR_7+2)
  9459  00DB98  6EF7               	movwf	tblptrh,c
  9460  00DB9A                     	if	0	;tblptru may be non-zero
  9461  00DB9A                     	endif
  9462  00DB9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9463  00DB9A  0E00               	movlw	low (__mediumconst shr (0+16))
  9464  00DB9C  6EF8               	movwf	tblptru,c
  9465  00DB9E                     	endif
  9466  00DB9E  0008               	tblrd		*
  9467  00DBA0  50F5               	movf	tablat,w,c
  9468  00DBA2  0012               	return	
  9469  00DBA4                     
  9470                           ;fat16.c: 1100: return "MSDOS5.0"[3];
  9471  00DBA4  0E23               	movlw	low (STR_7+3)
  9472  00DBA6  6EF6               	movwf	tblptrl,c
  9473  00DBA8  0EA3               	movlw	high (STR_7+3)
  9474  00DBAA  6EF7               	movwf	tblptrh,c
  9475  00DBAC                     	if	0	;tblptru may be non-zero
  9476  00DBAC                     	endif
  9477  00DBAC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9478  00DBAC  0E00               	movlw	low (__mediumconst shr (0+16))
  9479  00DBAE  6EF8               	movwf	tblptru,c
  9480  00DBB0                     	endif
  9481  00DBB0  0008               	tblrd		*
  9482  00DBB2  50F5               	movf	tablat,w,c
  9483  00DBB4  0012               	return	
  9484  00DBB6                     
  9485                           ;fat16.c: 1102: return "MSDOS5.0"[4];
  9486  00DBB6  0E24               	movlw	low (STR_7+4)
  9487  00DBB8  6EF6               	movwf	tblptrl,c
  9488  00DBBA  0EA3               	movlw	high (STR_7+4)
  9489  00DBBC  6EF7               	movwf	tblptrh,c
  9490  00DBBE                     	if	0	;tblptru may be non-zero
  9491  00DBBE                     	endif
  9492  00DBBE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9493  00DBBE  0E00               	movlw	low (__mediumconst shr (0+16))
  9494  00DBC0  6EF8               	movwf	tblptru,c
  9495  00DBC2                     	endif
  9496  00DBC2  0008               	tblrd		*
  9497  00DBC4  50F5               	movf	tablat,w,c
  9498  00DBC6  0012               	return	
  9499  00DBC8                     
  9500                           ;fat16.c: 1104: return "MSDOS5.0"[5];
  9501  00DBC8  0E25               	movlw	low (STR_7+5)
  9502  00DBCA  6EF6               	movwf	tblptrl,c
  9503  00DBCC  0EA3               	movlw	high (STR_7+5)
  9504  00DBCE  6EF7               	movwf	tblptrh,c
  9505  00DBD0                     	if	0	;tblptru may be non-zero
  9506  00DBD0                     	endif
  9507  00DBD0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9508  00DBD0  0E00               	movlw	low (__mediumconst shr (0+16))
  9509  00DBD2  6EF8               	movwf	tblptru,c
  9510  00DBD4                     	endif
  9511  00DBD4  0008               	tblrd		*
  9512  00DBD6  50F5               	movf	tablat,w,c
  9513  00DBD8  0012               	return	
  9514  00DBDA                     
  9515                           ;fat16.c: 1106: return "MSDOS5.0"[6];
  9516  00DBDA  0E26               	movlw	low (STR_7+6)
  9517  00DBDC  6EF6               	movwf	tblptrl,c
  9518  00DBDE  0EA3               	movlw	high (STR_7+6)
  9519  00DBE0  6EF7               	movwf	tblptrh,c
  9520  00DBE2                     	if	0	;tblptru may be non-zero
  9521  00DBE2                     	endif
  9522  00DBE2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9523  00DBE2  0E00               	movlw	low (__mediumconst shr (0+16))
  9524  00DBE4  6EF8               	movwf	tblptru,c
  9525  00DBE6                     	endif
  9526  00DBE6  0008               	tblrd		*
  9527  00DBE8  50F5               	movf	tablat,w,c
  9528  00DBEA  0012               	return	
  9529  00DBEC                     
  9530                           ;fat16.c: 1108: return "MSDOS5.0"[7];
  9531  00DBEC  0E27               	movlw	low (STR_7+7)
  9532  00DBEE  6EF6               	movwf	tblptrl,c
  9533  00DBF0  0EA3               	movlw	high (STR_7+7)
  9534  00DBF2  6EF7               	movwf	tblptrh,c
  9535  00DBF4                     	if	0	;tblptru may be non-zero
  9536  00DBF4                     	endif
  9537  00DBF4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9538  00DBF4  0E00               	movlw	low (__mediumconst shr (0+16))
  9539  00DBF6  6EF8               	movwf	tblptru,c
  9540  00DBF8                     	endif
  9541  00DBF8  0008               	tblrd		*
  9542  00DBFA  50F5               	movf	tablat,w,c
  9543  00DBFC  0012               	return	
  9544  00DBFE                     
  9545                           ;fat16.c: 1110: return ((unsigned char)((((uint16_t)512))&0xFF));
  9546  00DBFE  0E00               	movlw	0
  9547  00DC00  0012               	return	
  9548  00DC02                     
  9549                           ;fat16.c: 1112: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
  9550  00DC02  0E02               	movlw	2
  9551  00DC04  0012               	return	
  9552  00DC06                     
  9553                           ;fat16.c: 1114: return 1;
  9554  00DC06  0E01               	movlw	1
  9555  00DC08  0012               	return	
  9556  00DC0A                     
  9557                           ;fat16.c: 1116: return ((unsigned char)((((uint16_t)1))&0xFF));
  9558  00DC0A  0E01               	movlw	1
  9559  00DC0C  0012               	return	
  9560  00DC0E                     
  9561                           ;fat16.c: 1118: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
  9562  00DC0E  0E00               	movlw	0
  9563  00DC10  0012               	return	
  9564  00DC12                     
  9565                           ;fat16.c: 1120: return 1;
  9566  00DC12  0E01               	movlw	1
  9567  00DC14  0012               	return	
  9568  00DC16                     
  9569                           ;fat16.c: 1122: return ((unsigned char)((((uint16_t)64))&0xFF));
  9570  00DC16  0E40               	movlw	64
  9571  00DC18  0012               	return	
  9572  00DC1A                     
  9573                           ;fat16.c: 1124: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
  9574  00DC1A  0E00               	movlw	0
  9575  00DC1C  0012               	return	
  9576  00DC1E                     
  9577                           ;fat16.c: 1126: return ((unsigned char)((((uint16_t)8191))&0xFF));
  9578  00DC1E  0EFF               	movlw	255
  9579  00DC20  0012               	return	
  9580  00DC22                     
  9581                           ;fat16.c: 1128: return ((unsigned char)(((((uint16_t)8191))>>8)&0xFF));
  9582  00DC22  0E1F               	movlw	31
  9583  00DC24  0012               	return	
  9584  00DC26                     
  9585                           ;fat16.c: 1130: return 0XF8;
  9586  00DC26  0EF8               	movlw	248
  9587  00DC28  0012               	return	
  9588  00DC2A                     
  9589                           ;fat16.c: 1132: return ((unsigned char)((((uint16_t)32))&0xFF));
  9590  00DC2A  0E20               	movlw	32
  9591  00DC2C  0012               	return	
  9592  00DC2E                     
  9593                           ;fat16.c: 1134: return ((unsigned char)(((((uint16_t)32))>>8)&0xFF));
  9594  00DC2E  0E00               	movlw	0
  9595  00DC30  0012               	return	
  9596  00DC32                     
  9597                           ;fat16.c: 1136: return ((unsigned char)((((uint16_t)63))&0xFF));
  9598  00DC32  0E3F               	movlw	63
  9599  00DC34  0012               	return	
  9600  00DC36                     
  9601                           ;fat16.c: 1138: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
  9602  00DC36  0E00               	movlw	0
  9603  00DC38  0012               	return	
  9604  00DC3A                     
  9605                           ;fat16.c: 1140: return ((unsigned char)((((uint16_t)16))&0xFF));
  9606  00DC3A  0E10               	movlw	16
  9607  00DC3C  0012               	return	
  9608  00DC3E                     
  9609                           ;fat16.c: 1142: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
  9610  00DC3E  0E00               	movlw	0
  9611  00DC40  0012               	return	
  9612  00DC42                     
  9613                           ;fat16.c: 1144: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xF
      +                          F));
  9614  00DC42  0E00               	movlw	0
  9615  00DC44  0012               	return	
  9616  00DC46                     
  9617                           ;fat16.c: 1146: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8
      +                          )&0xFF));
  9618  00DC46  0E00               	movlw	0
  9619  00DC48  0012               	return	
  9620  00DC4A                     
  9621                           ;fat16.c: 1148: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))&0xFF));
  9622  00DC4A  0E00               	movlw	0
  9623  00DC4C  0012               	return	
  9624  00DC4E                     
  9625                           ;fat16.c: 1150: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  9626  00DC4E  0E00               	movlw	0
  9627  00DC50  0012               	return	
  9628  00DC52                     
  9629                           ;fat16.c: 1152: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
  9630  00DC52  0E01               	movlw	1
  9631  00DC54  0012               	return	
  9632  00DC56                     
  9633                           ;fat16.c: 1154: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
  9634  00DC56  0E00               	movlw	0
  9635  00DC58  0012               	return	
  9636  00DC5A                     
  9637                           ;fat16.c: 1156: return ((unsigned char)((((unsigned short)((((uint32_t)34))&0xFFFF)))&0x
      +                          FF));
  9638  00DC5A  0E22               	movlw	34
  9639  00DC5C  0012               	return	
  9640  00DC5E                     
  9641                           ;fat16.c: 1158: return ((unsigned char)(((((unsigned short)((((uint32_t)34))&0xFFFF)))>>
      +                          8)&0xFF));
  9642  00DC5E  0E00               	movlw	0
  9643  00DC60  0012               	return	
  9644  00DC62                     
  9645                           ;fat16.c: 1162: return ((unsigned char)(((((unsigned short)(((((uint32_t)34))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
  9646                           
  9647                           ;fat16.c: 1161: case 0x2F:
  9648  00DC62  0E00               	movlw	0
  9649  00DC64  0012               	return	
  9650  00DC66                     
  9651                           ;fat16.c: 1164: return 'F';
  9652  00DC66  0E46               	movlw	70
  9653  00DC68  0012               	return	
  9654  00DC6A                     
  9655                           ;fat16.c: 1166: return 'A';
  9656  00DC6A  0E41               	movlw	65
  9657  00DC6C  0012               	return	
  9658  00DC6E                     
  9659                           ;fat16.c: 1168: return 'T';
  9660  00DC6E  0E54               	movlw	84
  9661  00DC70  0012               	return	
  9662  00DC72                     
  9663                           ;fat16.c: 1170: return '1';
  9664  00DC72  0E31               	movlw	49
  9665  00DC74  0012               	return	
  9666  00DC76                     
  9667                           ;fat16.c: 1172: return '6';
  9668  00DC76  0E36               	movlw	54
  9669  00DC78  0012               	return	
  9670  00DC7A                     
  9671                           ;fat16.c: 1174: return ' ';
  9672  00DC7A  0E20               	movlw	32
  9673  00DC7C  0012               	return	
  9674  00DC7E                     
  9675                           ;fat16.c: 1176: return ' ';
  9676  00DC7E  0E20               	movlw	32
  9677  00DC80  0012               	return	
  9678  00DC82                     
  9679                           ;fat16.c: 1178: return ' ';
  9680  00DC82  0E20               	movlw	32
  9681  00DC84  0012               	return	
  9682  00DC86                     
  9683                           ;fat16.c: 1180: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
  9684  00DC86  0E55               	movlw	85
  9685  00DC88  0012               	return	
  9686  00DC8A                     
  9687                           ;fat16.c: 1182: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
  9688  00DC8A  0EAA               	movlw	170
  9689  00DC8C  0012               	return	
  9690  00DC8E                     
  9691                           ;fat16.c: 1184: return 0X00;
  9692  00DC8E  0E00               	movlw	0
  9693                           
  9694                           ;fat16.c: 1185: }
  9695  00DC90  0012               	return	
  9696  00DC92                     l1961:
  9697  00DC92  C060  F062         	movff	__get_fbr@idx,??__get_fbr
  9698  00DC96  C061  F063         	movff	__get_fbr@idx+1,??__get_fbr+1
  9699                           
  9700                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  9701                           ; Switch size 1, requested type "space"
  9702                           ; Number of cases is 2, Range of values is 0 to 1
  9703                           ; switch strategies available:
  9704                           ; Name         Instructions Cycles
  9705                           ; simple_byte            7     4 (average)
  9706                           ;	Chosen strategy is simple_byte
  9707  00DC9A  0100               	movlb	0	; () banked
  9708  00DC9C  5163               	movf	(??__get_fbr+1)& (0+255),w,b
  9709  00DC9E  0A00               	xorlw	0	; case 0
  9710  00DCA0  B4D8               	btfsc	status,2,c
  9711  00DCA2  D004               	goto	l20068
  9712  00DCA4  0A01               	xorlw	1	; case 1
  9713  00DCA6  B4D8               	btfsc	status,2,c
  9714  00DCA8  D08D               	goto	l20070
  9715  00DCAA  D7F1               	goto	l2011
  9716  00DCAC                     l20068:
  9717                           
  9718                           ; BSR set to: 0
  9719                           ; Switch size 1, requested type "space"
  9720                           ; Number of cases is 46, Range of values is 0 to 61
  9721                           ; switch strategies available:
  9722                           ; Name         Instructions Cycles
  9723                           ; simple_byte          139    70 (average)
  9724                           ;	Chosen strategy is simple_byte
  9725  00DCAC  5162               	movf	??__get_fbr& (0+255),w,b
  9726  00DCAE  0A00               	xorlw	0	; case 0
  9727  00DCB0  B4D8               	btfsc	status,2,c
  9728  00DCB2  D757               	goto	l1962
  9729  00DCB4  0A01               	xorlw	1	; case 1
  9730  00DCB6  B4D8               	btfsc	status,2,c
  9731  00DCB8  D756               	goto	l1964
  9732  00DCBA  0A03               	xorlw	3	; case 2
  9733  00DCBC  B4D8               	btfsc	status,2,c
  9734  00DCBE  D755               	goto	l1965
  9735  00DCC0  0A01               	xorlw	1	; case 3
  9736  00DCC2  B4D8               	btfsc	status,2,c
  9737  00DCC4  D754               	goto	l1966
  9738  00DCC6  0A07               	xorlw	7	; case 4
  9739  00DCC8  B4D8               	btfsc	status,2,c
  9740  00DCCA  D75A               	goto	l1967
  9741  00DCCC  0A01               	xorlw	1	; case 5
  9742  00DCCE  B4D8               	btfsc	status,2,c
  9743  00DCD0  D760               	goto	l1968
  9744  00DCD2  0A03               	xorlw	3	; case 6
  9745  00DCD4  B4D8               	btfsc	status,2,c
  9746  00DCD6  D766               	goto	l1969
  9747  00DCD8  0A01               	xorlw	1	; case 7
  9748  00DCDA  B4D8               	btfsc	status,2,c
  9749  00DCDC  D76C               	goto	l1970
  9750  00DCDE  0A0F               	xorlw	15	; case 8
  9751  00DCE0  B4D8               	btfsc	status,2,c
  9752  00DCE2  D772               	goto	l1971
  9753  00DCE4  0A01               	xorlw	1	; case 9
  9754  00DCE6  B4D8               	btfsc	status,2,c
  9755  00DCE8  D778               	goto	l1972
  9756  00DCEA  0A03               	xorlw	3	; case 10
  9757  00DCEC  B4D8               	btfsc	status,2,c
  9758  00DCEE  D77E               	goto	l1973
  9759  00DCF0  0A01               	xorlw	1	; case 11
  9760  00DCF2  B4D8               	btfsc	status,2,c
  9761  00DCF4  D784               	goto	l1974
  9762  00DCF6  0A07               	xorlw	7	; case 12
  9763  00DCF8  B4D8               	btfsc	status,2,c
  9764  00DCFA  D783               	goto	l1975
  9765  00DCFC  0A01               	xorlw	1	; case 13
  9766  00DCFE  B4D8               	btfsc	status,2,c
  9767  00DD00  D782               	goto	l1976
  9768  00DD02  0A03               	xorlw	3	; case 14
  9769  00DD04  B4D8               	btfsc	status,2,c
  9770  00DD06  D781               	goto	l1977
  9771  00DD08  0A01               	xorlw	1	; case 15
  9772  00DD0A  B4D8               	btfsc	status,2,c
  9773  00DD0C  D780               	goto	l1978
  9774  00DD0E  0A1F               	xorlw	31	; case 16
  9775  00DD10  B4D8               	btfsc	status,2,c
  9776  00DD12  D77F               	goto	l1979
  9777  00DD14  0A01               	xorlw	1	; case 17
  9778  00DD16  B4D8               	btfsc	status,2,c
  9779  00DD18  D77E               	goto	l1980
  9780  00DD1A  0A03               	xorlw	3	; case 18
  9781  00DD1C  B4D8               	btfsc	status,2,c
  9782  00DD1E  D77D               	goto	l1981
  9783  00DD20  0A01               	xorlw	1	; case 19
  9784  00DD22  B4D8               	btfsc	status,2,c
  9785  00DD24  D77C               	goto	l1982
  9786  00DD26  0A07               	xorlw	7	; case 20
  9787  00DD28  B4D8               	btfsc	status,2,c
  9788  00DD2A  D77B               	goto	l1983
  9789  00DD2C  0A01               	xorlw	1	; case 21
  9790  00DD2E  B4D8               	btfsc	status,2,c
  9791  00DD30  D77A               	goto	l1984
  9792  00DD32  0A03               	xorlw	3	; case 22
  9793  00DD34  B4D8               	btfsc	status,2,c
  9794  00DD36  D779               	goto	l1985
  9795  00DD38  0A01               	xorlw	1	; case 23
  9796  00DD3A  B4D8               	btfsc	status,2,c
  9797  00DD3C  D778               	goto	l1986
  9798  00DD3E  0A0F               	xorlw	15	; case 24
  9799  00DD40  B4D8               	btfsc	status,2,c
  9800  00DD42  D777               	goto	l1987
  9801  00DD44  0A01               	xorlw	1	; case 25
  9802  00DD46  B4D8               	btfsc	status,2,c
  9803  00DD48  D776               	goto	l1988
  9804  00DD4A  0A03               	xorlw	3	; case 26
  9805  00DD4C  B4D8               	btfsc	status,2,c
  9806  00DD4E  D775               	goto	l1989
  9807  00DD50  0A01               	xorlw	1	; case 27
  9808  00DD52  B4D8               	btfsc	status,2,c
  9809  00DD54  D774               	goto	l1990
  9810  00DD56  0A07               	xorlw	7	; case 28
  9811  00DD58  B4D8               	btfsc	status,2,c
  9812  00DD5A  D773               	goto	l1991
  9813  00DD5C  0A01               	xorlw	1	; case 29
  9814  00DD5E  B4D8               	btfsc	status,2,c
  9815  00DD60  D772               	goto	l1992
  9816  00DD62  0A03               	xorlw	3	; case 30
  9817  00DD64  B4D8               	btfsc	status,2,c
  9818  00DD66  D771               	goto	l1993
  9819  00DD68  0A01               	xorlw	1	; case 31
  9820  00DD6A  B4D8               	btfsc	status,2,c
  9821  00DD6C  D770               	goto	l1994
  9822  00DD6E  0A37               	xorlw	55	; case 40
  9823  00DD70  B4D8               	btfsc	status,2,c
  9824  00DD72  D76F               	goto	l1995
  9825  00DD74  0A01               	xorlw	1	; case 41
  9826  00DD76  B4D8               	btfsc	status,2,c
  9827  00DD78  D76E               	goto	l1996
  9828  00DD7A  0A05               	xorlw	5	; case 44
  9829  00DD7C  B4D8               	btfsc	status,2,c
  9830  00DD7E  D76D               	goto	l1997
  9831  00DD80  0A01               	xorlw	1	; case 45
  9832  00DD82  B4D8               	btfsc	status,2,c
  9833  00DD84  D76C               	goto	l1998
  9834  00DD86  0A03               	xorlw	3	; case 46
  9835  00DD88  B4D8               	btfsc	status,2,c
  9836  00DD8A  D76B               	goto	l1999
  9837  00DD8C  0A01               	xorlw	1	; case 47
  9838  00DD8E  B4D8               	btfsc	status,2,c
  9839  00DD90  D768               	goto	l1999
  9840  00DD92  0A19               	xorlw	25	; case 54
  9841  00DD94  B4D8               	btfsc	status,2,c
  9842  00DD96  D767               	goto	l2001
  9843  00DD98  0A01               	xorlw	1	; case 55
  9844  00DD9A  B4D8               	btfsc	status,2,c
  9845  00DD9C  D766               	goto	l2002
  9846  00DD9E  0A0F               	xorlw	15	; case 56
  9847  00DDA0  B4D8               	btfsc	status,2,c
  9848  00DDA2  D765               	goto	l2003
  9849  00DDA4  0A01               	xorlw	1	; case 57
  9850  00DDA6  B4D8               	btfsc	status,2,c
  9851  00DDA8  D764               	goto	l2004
  9852  00DDAA  0A03               	xorlw	3	; case 58
  9853  00DDAC  B4D8               	btfsc	status,2,c
  9854  00DDAE  D763               	goto	l2005
  9855  00DDB0  0A01               	xorlw	1	; case 59
  9856  00DDB2  B4D8               	btfsc	status,2,c
  9857  00DDB4  D762               	goto	l2006
  9858  00DDB6  0A07               	xorlw	7	; case 60
  9859  00DDB8  B4D8               	btfsc	status,2,c
  9860  00DDBA  D761               	goto	l2007
  9861  00DDBC  0A01               	xorlw	1	; case 61
  9862  00DDBE  B4D8               	btfsc	status,2,c
  9863  00DDC0  D760               	goto	l2008
  9864  00DDC2  D765               	goto	l2011
  9865  00DDC4                     l20070:
  9866                           
  9867                           ; BSR set to: 0
  9868                           ; Switch size 1, requested type "space"
  9869                           ; Number of cases is 2, Range of values is 254 to 255
  9870                           ; switch strategies available:
  9871                           ; Name         Instructions Cycles
  9872                           ; simple_byte            7     4 (average)
  9873                           ;	Chosen strategy is simple_byte
  9874  00DDC4  5162               	movf	??__get_fbr& (0+255),w,b
  9875  00DDC6  0AFE               	xorlw	254	; case 254
  9876  00DDC8  B4D8               	btfsc	status,2,c
  9877  00DDCA  D75D               	goto	l2009
  9878  00DDCC  0A01               	xorlw	1	; case 255
  9879  00DDCE  B4D8               	btfsc	status,2,c
  9880  00DDD0  D75C               	goto	l2010
  9881  00DDD2  D75D               	goto	l2011
  9882  00DDD4                     __end_of__get_fbr:
  9883                           	opt stack 0
  9884                           tblptru	equ	0xFF8
  9885                           tblptrh	equ	0xFF7
  9886                           tblptrl	equ	0xFF6
  9887                           tablat	equ	0xFF5
  9888                           prodh	equ	0xFF4
  9889                           prodl	equ	0xFF3
  9890                           postinc0	equ	0xFEE
  9891                           wreg	equ	0xFE8
  9892                           postdec1	equ	0xFE5
  9893                           fsr1h	equ	0xFE2
  9894                           fsr1l	equ	0xFE1
  9895                           indf2	equ	0xFDF
  9896                           postinc2	equ	0xFDE
  9897                           fsr2h	equ	0xFDA
  9898                           fsr2l	equ	0xFD9
  9899                           status	equ	0xFD8
  9900                           
  9901 ;; *************** function _encoder_init *****************
  9902 ;; Defined at:
  9903 ;;		line 92 in file "encoder.c"
  9904 ;; Parameters:    Size  Location     Type
  9905 ;;		None
  9906 ;; Auto vars:     Size  Location     Type
  9907 ;;		None
  9908 ;; Return value:  Size  Location     Type
  9909 ;;                  1    wreg      void 
  9910 ;; Registers used:
  9911 ;;		wreg, status,2, status,0
  9912 ;; Tracked objects:
  9913 ;;		On entry : 0/0
  9914 ;;		On exit  : 0/0
  9915 ;;		Unchanged: 0/0
  9916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9921 ;;Total ram usage:        0 bytes
  9922 ;; Hardware stack levels used:    1
  9923 ;; Hardware stack levels required when called:   10
  9924 ;; This function calls:
  9925 ;;		Nothing
  9926 ;; This function is called by:
  9927 ;;		_system_init
  9928 ;; This function uses a non-reentrant model
  9929 ;;
  9930                           
  9931                           	psect	text21
  9932  015C98                     __ptext21:
  9933                           	opt stack 0
  9934  015C98                     _encoder_init:
  9935                           	opt stack 19
  9936                           
  9937                           ;encoder.c: 94: enc1 = PORTE & 0b00000111;
  9938                           
  9939                           ;incstack = 0
  9940  015C98  5084               	movf	3972,w,c	;volatile
  9941  015C9A  0B07               	andlw	7
  9942  015C9C  0101               	movlb	1	; () banked
  9943  015C9E  6F46               	movwf	_enc1& (0+255),b
  9944                           
  9945                           ;encoder.c: 95: enc2 = PORTA & 0b00000111;
  9946  015CA0  5080               	movf	3968,w,c	;volatile
  9947  015CA2  0B07               	andlw	7
  9948  015CA4  6F45               	movwf	_enc2& (0+255),b
  9949                           
  9950                           ; BSR set to: 1
  9951                           ;encoder.c: 96: os.encoder1Count = 0;
  9952  015CA6  0E00               	movlw	0
  9953  015CA8  6F67               	movwf	(_os+3)& (0+255),b	;volatile
  9954                           
  9955                           ; BSR set to: 1
  9956                           ;encoder.c: 97: os.encoder2Count = 0;
  9957  015CAA  0E00               	movlw	0
  9958  015CAC  6F69               	movwf	(_os+5)& (0+255),b	;volatile
  9959                           
  9960                           ; BSR set to: 1
  9961                           ;encoder.c: 98: os.button1 = 0;
  9962  015CAE  0E00               	movlw	0
  9963  015CB0  6F68               	movwf	(_os+4)& (0+255),b	;volatile
  9964                           
  9965                           ; BSR set to: 1
  9966                           ;encoder.c: 99: os.button2 = 0;
  9967  015CB2  0E00               	movlw	0
  9968  015CB4  6F6A               	movwf	(_os+6)& (0+255),b	;volatile
  9969                           
  9970                           ; BSR set to: 1
  9971                           ;encoder.c: 100: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  9972  015CB6  0E01               	movlw	1
  9973  015CB8  6F73               	movwf	(_os+15)& (0+255),b	;volatile
  9974                           
  9975                           ; BSR set to: 1
  9976  015CBA  0012               	return		;funcret
  9977  015CBC                     __end_of_encoder_init:
  9978                           	opt stack 0
  9979                           tblptru	equ	0xFF8
  9980                           tblptrh	equ	0xFF7
  9981                           tblptrl	equ	0xFF6
  9982                           tablat	equ	0xFF5
  9983                           prodh	equ	0xFF4
  9984                           prodl	equ	0xFF3
  9985                           postinc0	equ	0xFEE
  9986                           wreg	equ	0xFE8
  9987                           postdec1	equ	0xFE5
  9988                           fsr1h	equ	0xFE2
  9989                           fsr1l	equ	0xFE1
  9990                           indf2	equ	0xFDF
  9991                           postinc2	equ	0xFDE
  9992                           fsr2h	equ	0xFDA
  9993                           fsr2l	equ	0xFD9
  9994                           status	equ	0xFD8
  9995                           
  9996 ;; *************** function _display_update *****************
  9997 ;; Defined at:
  9998 ;;		line 636 in file "display.c"
  9999 ;; Parameters:    Size  Location     Type
 10000 ;;		None
 10001 ;; Auto vars:     Size  Location     Type
 10002 ;;  line            1   16[BANK0 ] unsigned char 
 10003 ;; Return value:  Size  Location     Type
 10004 ;;                  1    wreg      void 
 10005 ;; Registers used:
 10006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10007 ;; Tracked objects:
 10008 ;;		On entry : 0/0
 10009 ;;		On exit  : 0/0
 10010 ;;		Unchanged: 0/0
 10011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10013 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10015 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10016 ;;Total ram usage:        1 bytes
 10017 ;; Hardware stack levels used:    1
 10018 ;; Hardware stack levels required when called:   14
 10019 ;; This function calls:
 10020 ;;		_i2c_display_cursor
 10021 ;;		_i2c_display_write_fixed
 10022 ;; This function is called by:
 10023 ;;		_main
 10024 ;;		_system_init
 10025 ;; This function uses a non-reentrant model
 10026 ;;
 10027                           
 10028                           	psect	text22
 10029  0157B6                     __ptext22:
 10030                           	opt stack 0
 10031  0157B6                     _display_update:
 10032                           	opt stack 15
 10033                           
 10034                           ;display.c: 638: uint8_t line;;display.c: 639: for(line=0; line<4; ++line)
 10035                           
 10036                           ; BSR set to: 1
 10037                           ;incstack = 0
 10038  0157B6  0E00               	movlw	0
 10039  0157B8  0100               	movlb	0	; () banked
 10040  0157BA  6F70               	movwf	display_update@line& (0+255),b
 10041  0157BC                     l17180:
 10042                           
 10043                           ; BSR set to: 0
 10044  0157BC  0E03               	movlw	3
 10045  0157BE  6570               	cpfsgt	display_update@line& (0+255),b
 10046  0157C0  D001               	goto	l1504
 10047  0157C2  0012               	return	
 10048  0157C4                     l1504:
 10049                           
 10050                           ; BSR set to: 0
 10051                           ;display.c: 640: {;display.c: 641: i2c_display_cursor(line, 0);
 10052                           
 10053                           ; BSR set to: 0
 10054  0157C4  0E00               	movlw	0
 10055  0157C6  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 10056  0157C8  5170               	movf	display_update@line& (0+255),w,b
 10057  0157CA  EC82  F0AE         	call	_i2c_display_cursor
 10058                           
 10059                           ;display.c: 642: i2c_display_write_fixed(display_content[line], 20);
 10060  0157CE  0100               	movlb	0	; () banked
 10061  0157D0  5170               	movf	display_update@line& (0+255),w,b
 10062  0157D2  0D14               	mullw	20
 10063  0157D4  0E44               	movlw	low _display_content
 10064  0157D6  24F3               	addwf	prodl,w,c
 10065  0157D8  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 10066  0157DA  0E02               	movlw	high _display_content
 10067  0157DC  20F4               	addwfc	prodh,w,c
 10068  0157DE  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 10069  0157E0  0E14               	movlw	20
 10070  0157E2  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 10071  0157E4  EC9A  F0A7         	call	_i2c_display_write_fixed	;wreg free
 10072  0157E8  0100               	movlb	0	; () banked
 10073  0157EA  2B70               	incf	display_update@line& (0+255),f,b
 10074  0157EC  D7E7               	goto	l17180
 10075  0157EE                     __end_of_display_update:
 10076                           	opt stack 0
 10077                           tblptru	equ	0xFF8
 10078                           tblptrh	equ	0xFF7
 10079                           tblptrl	equ	0xFF6
 10080                           tablat	equ	0xFF5
 10081                           prodh	equ	0xFF4
 10082                           prodl	equ	0xFF3
 10083                           postinc0	equ	0xFEE
 10084                           wreg	equ	0xFE8
 10085                           postdec1	equ	0xFE5
 10086                           fsr1h	equ	0xFE2
 10087                           fsr1l	equ	0xFE1
 10088                           indf2	equ	0xFDF
 10089                           postinc2	equ	0xFDE
 10090                           fsr2h	equ	0xFDA
 10091                           fsr2l	equ	0xFD9
 10092                           status	equ	0xFD8
 10093                           
 10094 ;; *************** function _i2c_display_write_fixed *****************
 10095 ;; Defined at:
 10096 ;;		line 475 in file "i2c.c"
 10097 ;; Parameters:    Size  Location     Type
 10098 ;;  data            2    5[BANK0 ] PTR unsigned char 
 10099 ;;		 -> display_content(80), 
 10100 ;;  length          1    7[BANK0 ] unsigned char 
 10101 ;; Auto vars:     Size  Location     Type
 10102 ;;  pos             1    8[BANK0 ] unsigned char 
 10103 ;; Return value:  Size  Location     Type
 10104 ;;                  1    wreg      void 
 10105 ;; Registers used:
 10106 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10107 ;; Tracked objects:
 10108 ;;		On entry : 0/0
 10109 ;;		On exit  : 0/0
 10110 ;;		Unchanged: 0/0
 10111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10112 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10113 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10115 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10116 ;;Total ram usage:        4 bytes
 10117 ;; Hardware stack levels used:    1
 10118 ;; Hardware stack levels required when called:   11
 10119 ;; This function calls:
 10120 ;;		__i2c_send
 10121 ;;		__i2c_start
 10122 ;;		__i2c_stop
 10123 ;;		__i2c_wait_idle
 10124 ;; This function is called by:
 10125 ;;		_display_update
 10126 ;; This function uses a non-reentrant model
 10127 ;;
 10128                           
 10129                           	psect	text23
 10130  014F34                     __ptext23:
 10131                           	opt stack 0
 10132  014F34                     _i2c_display_write_fixed:
 10133                           	opt stack 17
 10134                           
 10135                           ;i2c.c: 477: uint8_t pos;;i2c.c: 482: _i2c_wait_idle();
 10136                           
 10137                           ; BSR set to: 0
 10138                           ;incstack = 0
 10139  014F34  ECAC  F0A3         	call	__i2c_wait_idle	;wreg free
 10140                           
 10141                           ;i2c.c: 483: _i2c_start();
 10142  014F38  ECB0  F0AF         	call	__i2c_start	;wreg free
 10143                           
 10144                           ;i2c.c: 484: _i2c_wait_idle();
 10145  014F3C  ECAC  F0A3         	call	__i2c_wait_idle	;wreg free
 10146                           
 10147                           ;i2c.c: 485: _i2c_send(0b01111000);
 10148  014F40  0E78               	movlw	120
 10149  014F42  EC9D  F0AF         	call	__i2c_send
 10150                           
 10151                           ;i2c.c: 486: _i2c_wait_idle();
 10152  014F46  ECAC  F0A3         	call	__i2c_wait_idle	;wreg free
 10153                           
 10154                           ;i2c.c: 487: _i2c_send(0b01000000);
 10155  014F4A  0E40               	movlw	64
 10156  014F4C  EC9D  F0AF         	call	__i2c_send
 10157                           
 10158                           ;i2c.c: 488: _i2c_wait_idle();
 10159  014F50  ECAC  F0A3         	call	__i2c_wait_idle	;wreg free
 10160                           
 10161                           ;i2c.c: 491: for(pos=0; pos<length; ++pos)
 10162  014F54  0E00               	movlw	0
 10163  014F56  0100               	movlb	0	; () banked
 10164  014F58  6F68               	movwf	i2c_display_write_fixed@pos& (0+255),b
 10165  014F5A  D00F               	goto	l1257
 10166  014F5C                     
 10167                           ; BSR set to: 0
 10168                           ;i2c.c: 492: {;i2c.c: 493: _i2c_send(data[pos]);
 10169                           
 10170                           ; BSR set to: 0
 10171  014F5C  5168               	movf	i2c_display_write_fixed@pos& (0+255),w,b
 10172  014F5E  0D01               	mullw	1
 10173  014F60  50F3               	movf	prodl,w,c
 10174  014F62  2565               	addwf	i2c_display_write_fixed@data& (0+255),w,b
 10175  014F64  6ED9               	movwf	fsr2l,c
 10176  014F66  50F4               	movf	prodh,w,c
 10177  014F68  2166               	addwfc	(i2c_display_write_fixed@data+1)& (0+255),w,b
 10178  014F6A  6EDA               	movwf	fsr2h,c
 10179  014F6C  50DF               	movf	indf2,w,c
 10180  014F6E  EC9D  F0AF         	call	__i2c_send
 10181                           
 10182                           ;i2c.c: 494: _i2c_wait_idle();
 10183  014F72  ECAC  F0A3         	call	__i2c_wait_idle	;wreg free
 10184  014F76  0100               	movlb	0	; () banked
 10185  014F78  2B68               	incf	i2c_display_write_fixed@pos& (0+255),f,b
 10186  014F7A                     l1257:
 10187                           
 10188                           ; BSR set to: 0
 10189                           
 10190                           ; BSR set to: 0
 10191  014F7A  5167               	movf	i2c_display_write_fixed@length& (0+255),w,b
 10192  014F7C  5D68               	subwf	i2c_display_write_fixed@pos& (0+255),w,b
 10193  014F7E  A0D8               	btfss	status,0,c
 10194  014F80  D7ED               	goto	l1258
 10195                           
 10196                           ; BSR set to: 0
 10197                           ;i2c.c: 495: };i2c.c: 497: _i2c_stop();
 10198                           
 10199                           ; BSR set to: 0
 10200  014F82  ECAC  F0AF         	call	__i2c_stop	;wreg free
 10201  014F86  0012               	return		;funcret
 10202  014F88                     __end_of_i2c_display_write_fixed:
 10203                           	opt stack 0
 10204                           tblptru	equ	0xFF8
 10205                           tblptrh	equ	0xFF7
 10206                           tblptrl	equ	0xFF6
 10207                           tablat	equ	0xFF5
 10208                           prodh	equ	0xFF4
 10209                           prodl	equ	0xFF3
 10210                           postinc0	equ	0xFEE
 10211                           wreg	equ	0xFE8
 10212                           postdec1	equ	0xFE5
 10213                           fsr1h	equ	0xFE2
 10214                           fsr1l	equ	0xFE1
 10215                           indf2	equ	0xFDF
 10216                           postinc2	equ	0xFDE
 10217                           fsr2h	equ	0xFDA
 10218                           fsr2l	equ	0xFD9
 10219                           status	equ	0xFD8
 10220                           
 10221 ;; *************** function _i2c_display_cursor *****************
 10222 ;; Defined at:
 10223 ;;		line 435 in file "i2c.c"
 10224 ;; Parameters:    Size  Location     Type
 10225 ;;  line            1    wreg     unsigned char 
 10226 ;;  position        1   13[BANK0 ] unsigned char 
 10227 ;; Auto vars:     Size  Location     Type
 10228 ;;  line            1   14[BANK0 ] unsigned char 
 10229 ;;  address         1   15[BANK0 ] unsigned char 
 10230 ;; Return value:  Size  Location     Type
 10231 ;;                  1    wreg      void 
 10232 ;; Registers used:
 10233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10234 ;; Tracked objects:
 10235 ;;		On entry : 0/0
 10236 ;;		On exit  : 0/0
 10237 ;;		Unchanged: 0/0
 10238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10239 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10240 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10242 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10243 ;;Total ram usage:        3 bytes
 10244 ;; Hardware stack levels used:    1
 10245 ;; Hardware stack levels required when called:   13
 10246 ;; This function calls:
 10247 ;;		__ic2_display_set_ddram_address
 10248 ;; This function is called by:
 10249 ;;		_display_update
 10250 ;; This function uses a non-reentrant model
 10251 ;;
 10252                           
 10253                           	psect	text24
 10254  015D04                     __ptext24:
 10255                           	opt stack 0
 10256  015D04                     _i2c_display_cursor:
 10257                           	opt stack 15
 10258                           
 10259                           ;incstack = 0
 10260                           ;i2c_display_cursor@line stored from wreg
 10261  015D04  0100               	movlb	0	; () banked
 10262  015D06  6F6E               	movwf	i2c_display_cursor@line& (0+255),b
 10263                           
 10264                           ;i2c.c: 437: uint8_t address;;i2c.c: 440: line &= 0b11;
 10265  015D08  0E03               	movlw	3
 10266  015D0A  0100               	movlb	0	; () banked
 10267  015D0C  176E               	andwf	i2c_display_cursor@line& (0+255),f,b
 10268                           
 10269                           ;i2c.c: 441: address = line<<5;
 10270  015D0E  396E               	swapf	i2c_display_cursor@line& (0+255),w,b
 10271  015D10  46E8               	rlncf	wreg,f,c
 10272  015D12  0BE0               	andlw	224
 10273  015D14  6F6F               	movwf	i2c_display_cursor@address& (0+255),b
 10274                           
 10275                           ;i2c.c: 442: position &= 0b11111;
 10276  015D16  0E1F               	movlw	31
 10277  015D18  176D               	andwf	i2c_display_cursor@position& (0+255),f,b
 10278                           
 10279                           ;i2c.c: 443: address |= position;
 10280  015D1A  516D               	movf	i2c_display_cursor@position& (0+255),w,b
 10281  015D1C  136F               	iorwf	i2c_display_cursor@address& (0+255),f,b
 10282                           
 10283                           ; BSR set to: 0
 10284                           ;i2c.c: 449: _ic2_display_set_ddram_address(address);
 10285  015D1E  516F               	movf	i2c_display_cursor@address& (0+255),w,b
 10286  015D20  EC5E  F0AE         	call	__ic2_display_set_ddram_address
 10287  015D24  0012               	return		;funcret
 10288  015D26                     __end_of_i2c_display_cursor:
 10289                           	opt stack 0
 10290                           tblptru	equ	0xFF8
 10291                           tblptrh	equ	0xFF7
 10292                           tblptrl	equ	0xFF6
 10293                           tablat	equ	0xFF5
 10294                           prodh	equ	0xFF4
 10295                           prodl	equ	0xFF3
 10296                           postinc0	equ	0xFEE
 10297                           wreg	equ	0xFE8
 10298                           postdec1	equ	0xFE5
 10299                           fsr1h	equ	0xFE2
 10300                           fsr1l	equ	0xFE1
 10301                           indf2	equ	0xFDF
 10302                           postinc2	equ	0xFDE
 10303                           fsr2h	equ	0xFDA
 10304                           fsr2l	equ	0xFD9
 10305                           status	equ	0xFD8
 10306                           
 10307 ;; *************** function __ic2_display_set_ddram_address *****************
 10308 ;; Defined at:
 10309 ;;		line 406 in file "i2c.c"
 10310 ;; Parameters:    Size  Location     Type
 10311 ;;  address         1    wreg     unsigned char 
 10312 ;; Auto vars:     Size  Location     Type
 10313 ;;  address         1   10[BANK0 ] unsigned char 
 10314 ;;  data_array      2   11[BANK0 ] unsigned char [2]
 10315 ;; Return value:  Size  Location     Type
 10316 ;;                  1    wreg      void 
 10317 ;; Registers used:
 10318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10319 ;; Tracked objects:
 10320 ;;		On entry : 0/0
 10321 ;;		On exit  : 0/0
 10322 ;;		Unchanged: 0/0
 10323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10325 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10327 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10328 ;;Total ram usage:        3 bytes
 10329 ;; Hardware stack levels used:    1
 10330 ;; Hardware stack levels required when called:   12
 10331 ;; This function calls:
 10332 ;;		__i2c_write
 10333 ;; This function is called by:
 10334 ;;		_i2c_display_cursor
 10335 ;; This function uses a non-reentrant model
 10336 ;;
 10337                           
 10338                           	psect	text25
 10339  015CBC                     __ptext25:
 10340                           	opt stack 0
 10341  015CBC                     __ic2_display_set_ddram_address:
 10342                           	opt stack 15
 10343                           
 10344                           ;incstack = 0
 10345                           ;__ic2_display_set_ddram_address@address stored from wreg
 10346  015CBC  0100               	movlb	0	; () banked
 10347  015CBE  6F6A               	movwf	__ic2_display_set_ddram_address@address& (0+255),b
 10348                           
 10349                           ;i2c.c: 408: uint8_t data_array[2];;i2c.c: 409: data_array[0] = 0b00000000;
 10350  015CC0  0E00               	movlw	0
 10351  015CC2  0100               	movlb	0	; () banked
 10352  015CC4  6F6B               	movwf	__ic2_display_set_ddram_address@data_array& (0+255),b
 10353                           
 10354                           ; BSR set to: 0
 10355                           ;i2c.c: 410: data_array[1] = 0b10000000 | address;
 10356  015CC6  516A               	movf	__ic2_display_set_ddram_address@address& (0+255),w,b
 10357  015CC8  0980               	iorlw	128
 10358  015CCA  6F6C               	movwf	(__ic2_display_set_ddram_address@data_array+1)& (0+255),b
 10359                           
 10360                           ; BSR set to: 0
 10361                           ;i2c.c: 416: _i2c_write(0b01111000, &data_array[0], 2);
 10362  015CCC  0E6B               	movlw	low __ic2_display_set_ddram_address@data_array
 10363  015CCE  6F65               	movwf	__i2c_write@data& (0+255),b
 10364  015CD0  0E00               	movlw	high __ic2_display_set_ddram_address@data_array
 10365  015CD2  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10366  015CD4  0E02               	movlw	2
 10367  015CD6  6F67               	movwf	__i2c_write@length& (0+255),b
 10368  015CD8  0E78               	movlw	120
 10369  015CDA  ECBB  F0A8         	call	__i2c_write
 10370  015CDE  0012               	return		;funcret
 10371  015CE0                     __end_of__ic2_display_set_ddram_address:
 10372                           	opt stack 0
 10373                           tblptru	equ	0xFF8
 10374                           tblptrh	equ	0xFF7
 10375                           tblptrl	equ	0xFF6
 10376                           tablat	equ	0xFF5
 10377                           prodh	equ	0xFF4
 10378                           prodl	equ	0xFF3
 10379                           postinc0	equ	0xFEE
 10380                           wreg	equ	0xFE8
 10381                           postdec1	equ	0xFE5
 10382                           fsr1h	equ	0xFE2
 10383                           fsr1l	equ	0xFE1
 10384                           indf2	equ	0xFDF
 10385                           postinc2	equ	0xFDE
 10386                           fsr2h	equ	0xFDA
 10387                           fsr2l	equ	0xFD9
 10388                           status	equ	0xFD8
 10389                           
 10390 ;; *************** function _display_init *****************
 10391 ;; Defined at:
 10392 ;;		line 274 in file "display.c"
 10393 ;; Parameters:    Size  Location     Type
 10394 ;;		None
 10395 ;; Auto vars:     Size  Location     Type
 10396 ;;		None
 10397 ;; Return value:  Size  Location     Type
 10398 ;;                  1    wreg      void 
 10399 ;; Registers used:
 10400 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10401 ;; Tracked objects:
 10402 ;;		On entry : 0/0
 10403 ;;		On exit  : 0/0
 10404 ;;		Unchanged: 0/0
 10405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10410 ;;Total ram usage:        0 bytes
 10411 ;; Hardware stack levels used:    1
 10412 ;; Hardware stack levels required when called:   15
 10413 ;; This function calls:
 10414 ;;		__display_start
 10415 ;;		_i2c_display_init
 10416 ;;		_i2c_display_program_custom_character
 10417 ;; This function is called by:
 10418 ;;		_system_init
 10419 ;; This function uses a non-reentrant model
 10420 ;;
 10421                           
 10422                           	psect	text26
 10423  01570A                     __ptext26:
 10424                           	opt stack 0
 10425  01570A                     _display_init:
 10426                           	opt stack 14
 10427                           
 10428                           ;display.c: 276: i2c_display_init();
 10429                           
 10430                           ;incstack = 0
 10431  01570A  EC93  F0A8         	call	_i2c_display_init	;wreg free
 10432                           
 10433                           ;display.c: 277: i2c_display_program_custom_character(0x00, bit_pattern_verticalbar);
 10434  01570E  0EEA               	movlw	low _bit_pattern_verticalbar
 10435  015710  0100               	movlb	0	; () banked
 10436  015712  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 10437  015714  0EA2               	movlw	high _bit_pattern_verticalbar
 10438  015716  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 10439  015718  0E00               	movlw	0
 10440  01571A  EC8A  F0A0         	call	_i2c_display_program_custom_character
 10441                           
 10442                           ;display.c: 278: i2c_display_program_custom_character(0x01, bit_pattern_degree);
 10443  01571E  0EE2               	movlw	low _bit_pattern_degree
 10444  015720  0100               	movlb	0	; () banked
 10445  015722  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 10446  015724  0EA2               	movlw	high _bit_pattern_degree
 10447  015726  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 10448  015728  0E01               	movlw	1
 10449  01572A  EC8A  F0A0         	call	_i2c_display_program_custom_character
 10450                           
 10451                           ;display.c: 279: i2c_display_program_custom_character(0x02, bit_pattern_ae);
 10452  01572E  0EDA               	movlw	low _bit_pattern_ae
 10453  015730  0100               	movlb	0	; () banked
 10454  015732  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 10455  015734  0EA2               	movlw	high _bit_pattern_ae
 10456  015736  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 10457  015738  0E02               	movlw	2
 10458  01573A  EC8A  F0A0         	call	_i2c_display_program_custom_character
 10459                           
 10460                           ;display.c: 281: _display_start();
 10461  01573E  ECD6  F098         	call	__display_start	;wreg free
 10462  015742  0012               	return		;funcret
 10463  015744                     __end_of_display_init:
 10464                           	opt stack 0
 10465                           tblptru	equ	0xFF8
 10466                           tblptrh	equ	0xFF7
 10467                           tblptrl	equ	0xFF6
 10468                           tablat	equ	0xFF5
 10469                           prodh	equ	0xFF4
 10470                           prodl	equ	0xFF3
 10471                           postinc0	equ	0xFEE
 10472                           wreg	equ	0xFE8
 10473                           postdec1	equ	0xFE5
 10474                           fsr1h	equ	0xFE2
 10475                           fsr1l	equ	0xFE1
 10476                           indf2	equ	0xFDF
 10477                           postinc2	equ	0xFDE
 10478                           fsr2h	equ	0xFDA
 10479                           fsr2l	equ	0xFD9
 10480                           status	equ	0xFD8
 10481                           
 10482 ;; *************** function _i2c_display_program_custom_character *****************
 10483 ;; Defined at:
 10484 ;;		line 500 in file "i2c.c"
 10485 ;; Parameters:    Size  Location     Type
 10486 ;;  address         1    wreg     unsigned char 
 10487 ;;  bit_pattern     2   14[BANK0 ] PTR unsigned char 
 10488 ;;		 -> bit_pattern_ae(8), bit_pattern_degree(8), bit_pattern_verticalbar(8), 
 10489 ;; Auto vars:     Size  Location     Type
 10490 ;;  address         1   31[BANK0 ] unsigned char 
 10491 ;;  data_array     11   20[BANK0 ] unsigned char [11]
 10492 ;;  cntr            1   32[BANK0 ] unsigned char 
 10493 ;; Return value:  Size  Location     Type
 10494 ;;                  1    wreg      void 
 10495 ;; Registers used:
 10496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10497 ;; Tracked objects:
 10498 ;;		On entry : 0/0
 10499 ;;		On exit  : 0/0
 10500 ;;		Unchanged: 0/0
 10501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10502 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10503 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10504 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10505 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10506 ;;Total ram usage:       19 bytes
 10507 ;; Hardware stack levels used:    1
 10508 ;; Hardware stack levels required when called:   13
 10509 ;; This function calls:
 10510 ;;		__i2c_write
 10511 ;;		__ic2_display_set_cgram_address
 10512 ;; This function is called by:
 10513 ;;		_display_init
 10514 ;; This function uses a non-reentrant model
 10515 ;;
 10516                           
 10517                           	psect	text27
 10518  014114                     __ptext27:
 10519                           	opt stack 0
 10520  014114                     _i2c_display_program_custom_character:
 10521                           	opt stack 15
 10522                           
 10523                           ;incstack = 0
 10524                           ;i2c_display_program_custom_character@address stored from wreg
 10525  014114  0100               	movlb	0	; () banked
 10526  014116  6F7F               	movwf	i2c_display_program_custom_character@address& (0+255),b
 10527                           
 10528                           ;i2c.c: 502: uint8_t cntr;;i2c.c: 503: uint8_t data_array[11];;i2c.c: 506: _ic2_display_
      +                          set_cgram_address(address<<3);
 10529  014118  0100               	movlb	0	; () banked
 10530  01411A  397F               	swapf	i2c_display_program_custom_character@address& (0+255),w,b
 10531  01411C  42E8               	rrncf	wreg,f,c
 10532  01411E  0BF8               	andlw	248
 10533  014120  EC97  F0AD         	call	__ic2_display_set_cgram_address
 10534                           
 10535                           ;i2c.c: 509: data_array[0] = 0b01000000;
 10536  014124  0E40               	movlw	64
 10537  014126  0100               	movlb	0	; () banked
 10538  014128  6F74               	movwf	i2c_display_program_custom_character@data_array& (0+255),b
 10539                           
 10540                           ; BSR set to: 0
 10541                           ;i2c.c: 510: for(cntr=0; cntr<8; ++cntr)
 10542  01412A  0E00               	movlw	0
 10543  01412C  6F80               	movwf	i2c_display_program_custom_character@cntr& (0+255),b
 10544  01412E                     l16088:
 10545                           
 10546                           ; BSR set to: 0
 10547  01412E  0E07               	movlw	7
 10548  014130  6580               	cpfsgt	i2c_display_program_custom_character@cntr& (0+255),b
 10549  014132  D001               	goto	l1263
 10550  014134  D023               	goto	u15170
 10551  014136                     l1263:
 10552                           
 10553                           ; BSR set to: 0
 10554                           ;i2c.c: 511: {;i2c.c: 512: data_array[cntr+1] = bit_pattern[cntr] & 0b00011111;
 10555                           
 10556                           ; BSR set to: 0
 10557  014136  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
 10558  014138  6F70               	movwf	??_i2c_display_program_custom_character& (0+255),b
 10559  01413A  6B71               	clrf	(??_i2c_display_program_custom_character+1)& (0+255),b
 10560  01413C  0E01               	movlw	1
 10561  01413E  2770               	addwf	??_i2c_display_program_custom_character& (0+255),f,b
 10562  014140  0E00               	movlw	0
 10563  014142  2371               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),f,b
 10564  014144  0E74               	movlw	low i2c_display_program_custom_character@data_array
 10565  014146  2570               	addwf	??_i2c_display_program_custom_character& (0+255),w,b
 10566  014148  6ED9               	movwf	fsr2l,c
 10567  01414A  0E00               	movlw	high i2c_display_program_custom_character@data_array
 10568  01414C  2171               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),w,b
 10569  01414E  6EDA               	movwf	fsr2h,c
 10570  014150  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
 10571  014152  0D01               	mullw	1
 10572  014154  C06E  F072         	movff	i2c_display_program_custom_character@bit_pattern,??_i2c_display_program_custom_ch
      +                          aracter+2
 10573  014158  C06F  F073         	movff	i2c_display_program_custom_character@bit_pattern+1,??_i2c_display_program_custom_
      +                          character+3
 10574  01415C  50F3               	movf	prodl,w,c
 10575  01415E  2772               	addwf	(??_i2c_display_program_custom_character+2)& (0+255),f,b
 10576  014160  50F4               	movf	prodh,w,c
 10577  014162  2373               	addwfc	(??_i2c_display_program_custom_character+3)& (0+255),f,b
 10578  014164  C072  FFF6         	movff	??_i2c_display_program_custom_character+2,tblptrl
 10579  014168  C073  FFF7         	movff	??_i2c_display_program_custom_character+3,tblptrh
 10580  01416C                     	if	0	;tblptru may be non-zero
 10581  01416C                     	endif
 10582  01416C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10583  01416C  0E00               	movlw	low (__mediumconst shr (0+16))
 10584  01416E  6EF8               	movwf	tblptru,c
 10585  014170                     	endif
 10586  014170  0008               	tblrd		*
 10587  014172  50F5               	movf	tablat,w,c
 10588  014174  0B1F               	andlw	31
 10589  014176  6EDF               	movwf	indf2,c
 10590                           
 10591                           ; BSR set to: 0
 10592  014178  2B80               	incf	i2c_display_program_custom_character@cntr& (0+255),f,b
 10593  01417A  D7D9               	goto	l16088
 10594  01417C                     u15170:
 10595                           
 10596                           ; BSR set to: 0
 10597                           ;i2c.c: 513: };i2c.c: 514: _i2c_write(0b01111000, data_array, 9);
 10598                           
 10599                           ; BSR set to: 0
 10600  01417C  0E74               	movlw	low i2c_display_program_custom_character@data_array
 10601  01417E  6F65               	movwf	__i2c_write@data& (0+255),b
 10602  014180  0E00               	movlw	high i2c_display_program_custom_character@data_array
 10603  014182  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10604  014184  0E09               	movlw	9
 10605  014186  6F67               	movwf	__i2c_write@length& (0+255),b
 10606  014188  0E78               	movlw	120
 10607  01418A  ECBB  F0A8         	call	__i2c_write
 10608  01418E  0012               	return		;funcret
 10609  014190                     __end_of_i2c_display_program_custom_character:
 10610                           	opt stack 0
 10611                           tblptru	equ	0xFF8
 10612                           tblptrh	equ	0xFF7
 10613                           tblptrl	equ	0xFF6
 10614                           tablat	equ	0xFF5
 10615                           prodh	equ	0xFF4
 10616                           prodl	equ	0xFF3
 10617                           postinc0	equ	0xFEE
 10618                           wreg	equ	0xFE8
 10619                           postdec1	equ	0xFE5
 10620                           fsr1h	equ	0xFE2
 10621                           fsr1l	equ	0xFE1
 10622                           indf2	equ	0xFDF
 10623                           postinc2	equ	0xFDE
 10624                           fsr2h	equ	0xFDA
 10625                           fsr2l	equ	0xFD9
 10626                           status	equ	0xFD8
 10627                           
 10628 ;; *************** function __ic2_display_set_cgram_address *****************
 10629 ;; Defined at:
 10630 ;;		line 419 in file "i2c.c"
 10631 ;; Parameters:    Size  Location     Type
 10632 ;;  address         1    wreg     unsigned char 
 10633 ;; Auto vars:     Size  Location     Type
 10634 ;;  address         1   13[BANK0 ] unsigned char 
 10635 ;;  data_array      3   10[BANK0 ] unsigned char [3]
 10636 ;; Return value:  Size  Location     Type
 10637 ;;                  1    wreg      void 
 10638 ;; Registers used:
 10639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10640 ;; Tracked objects:
 10641 ;;		On entry : 0/0
 10642 ;;		On exit  : 0/0
 10643 ;;		Unchanged: 0/0
 10644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10646 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10648 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10649 ;;Total ram usage:        4 bytes
 10650 ;; Hardware stack levels used:    1
 10651 ;; Hardware stack levels required when called:   12
 10652 ;; This function calls:
 10653 ;;		__i2c_write
 10654 ;; This function is called by:
 10655 ;;		_i2c_display_program_custom_character
 10656 ;; This function uses a non-reentrant model
 10657 ;;
 10658                           
 10659                           	psect	text28
 10660  015B2E                     __ptext28:
 10661                           	opt stack 0
 10662  015B2E                     __ic2_display_set_cgram_address:
 10663                           	opt stack 15
 10664                           
 10665                           ;incstack = 0
 10666                           ;__ic2_display_set_cgram_address@address stored from wreg
 10667  015B2E  0100               	movlb	0	; () banked
 10668  015B30  6F6D               	movwf	__ic2_display_set_cgram_address@address& (0+255),b
 10669                           
 10670                           ;i2c.c: 421: uint8_t data_array[3];;i2c.c: 426: address &= 0b001111111;
 10671  015B32  0100               	movlb	0	; () banked
 10672  015B34  9F6D               	bcf	__ic2_display_set_cgram_address@address& (0+255),7,b
 10673                           
 10674                           ; BSR set to: 0
 10675                           ;i2c.c: 427: data_array[0] = 0b00000000;
 10676  015B36  0E00               	movlw	0
 10677  015B38  6F6A               	movwf	__ic2_display_set_cgram_address@data_array& (0+255),b
 10678                           
 10679                           ; BSR set to: 0
 10680                           ;i2c.c: 428: data_array[1] = 0b00111000;
 10681  015B3A  0E38               	movlw	56
 10682  015B3C  6F6B               	movwf	(__ic2_display_set_cgram_address@data_array+1)& (0+255),b
 10683                           
 10684                           ;i2c.c: 429: data_array[2] = 0b01000000 | address;
 10685  015B3E  516D               	movf	__ic2_display_set_cgram_address@address& (0+255),w,b
 10686  015B40  0940               	iorlw	64
 10687  015B42  6F6C               	movwf	(__ic2_display_set_cgram_address@data_array+2)& (0+255),b
 10688                           
 10689                           ; BSR set to: 0
 10690                           ;i2c.c: 432: _i2c_write(0b01111000, data_array, 3);
 10691  015B44  0E6A               	movlw	low __ic2_display_set_cgram_address@data_array
 10692  015B46  6F65               	movwf	__i2c_write@data& (0+255),b
 10693  015B48  0E00               	movlw	high __ic2_display_set_cgram_address@data_array
 10694  015B4A  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10695  015B4C  0E03               	movlw	3
 10696  015B4E  6F67               	movwf	__i2c_write@length& (0+255),b
 10697  015B50  0E78               	movlw	120
 10698  015B52  ECBB  F0A8         	call	__i2c_write
 10699  015B56  0012               	return		;funcret
 10700  015B58                     __end_of__ic2_display_set_cgram_address:
 10701                           	opt stack 0
 10702                           tblptru	equ	0xFF8
 10703                           tblptrh	equ	0xFF7
 10704                           tblptrl	equ	0xFF6
 10705                           tablat	equ	0xFF5
 10706                           prodh	equ	0xFF4
 10707                           prodl	equ	0xFF3
 10708                           postinc0	equ	0xFEE
 10709                           wreg	equ	0xFE8
 10710                           postdec1	equ	0xFE5
 10711                           fsr1h	equ	0xFE2
 10712                           fsr1l	equ	0xFE1
 10713                           indf2	equ	0xFDF
 10714                           postinc2	equ	0xFDE
 10715                           fsr2h	equ	0xFDA
 10716                           fsr2l	equ	0xFD9
 10717                           status	equ	0xFD8
 10718                           
 10719 ;; *************** function _i2c_display_init *****************
 10720 ;; Defined at:
 10721 ;;		line 377 in file "i2c.c"
 10722 ;; Parameters:    Size  Location     Type
 10723 ;;		None
 10724 ;; Auto vars:     Size  Location     Type
 10725 ;;  init_sequenc    9   11[BANK0 ] unsigned char [9]
 10726 ;; Return value:  Size  Location     Type
 10727 ;;                  1    wreg      void 
 10728 ;; Registers used:
 10729 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10730 ;; Tracked objects:
 10731 ;;		On entry : 0/0
 10732 ;;		On exit  : 0/0
 10733 ;;		Unchanged: 0/0
 10734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10736 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10737 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10738 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10739 ;;Total ram usage:       10 bytes
 10740 ;; Hardware stack levels used:    1
 10741 ;; Hardware stack levels required when called:   12
 10742 ;; This function calls:
 10743 ;;		__i2c_write
 10744 ;; This function is called by:
 10745 ;;		_display_init
 10746 ;; This function uses a non-reentrant model
 10747 ;;
 10748                           
 10749                           	psect	text29
 10750  015126                     __ptext29:
 10751                           	opt stack 0
 10752  015126                     _i2c_display_init:
 10753                           	opt stack 16
 10754                           
 10755                           ;i2c.c: 379: uint8_t init_sequence[9] = {;i2c.c: 380: 0x3A,;i2c.c: 382: 0b00011110,;i2c.
      +                          c: 383: 0x39,;i2c.c: 385: 0b00001100,;i2c.c: 386: 0x74,;i2c.c: 387: 0b1011100,;i2c.c: 38
      +                          8: 0x6d,;i2c.c: 389: 0x0c,;i2c.c: 390: 0x01;i2c.c: 391: };
 10756                           
 10757                           ;incstack = 0
 10758  015126  EE22  F0B6         	lfsr	2,i2c_display_init@F7093
 10759  01512A  EE10  F06B         	lfsr	1,i2c_display_init@init_sequence
 10760  01512E  0E08               	movlw	8
 10761  015130                     u15141:
 10762  015130  CFDB FFE3          	movff	plusw2,plusw1
 10763  015134  06E8               	decf	wreg,f,c
 10764  015136  E2FC               	bc	u15141
 10765                           
 10766                           ;i2c.c: 394: LATAbits.LA3 = 0;
 10767  015138  9689               	bcf	3977,3,c	;volatile
 10768                           
 10769                           ;i2c.c: 395: _delay((unsigned long)((10)*(8000000/4000.0)));
 10770  01513A  0E1A               	movlw	26
 10771  01513C  0100               	movlb	0	; () banked
 10772  01513E  6F6A               	movwf	??_i2c_display_init& (0+255),b
 10773  015140  0EF8               	movlw	248
 10774  015142                     u19967:
 10775  015142  2EE8               	decfsz	wreg,f,c
 10776  015144  D7FE               	bra	u19967
 10777  015146  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
 10778  015148  D7FC               	bra	u19967
 10779  01514A  F000               	nop	
 10780                           
 10781                           ;i2c.c: 396: LATAbits.LA3 = 1;
 10782  01514C  8689               	bsf	3977,3,c	;volatile
 10783                           
 10784                           ;i2c.c: 397: _delay((unsigned long)((50)*(8000000/4000.0)));
 10785  01514E  0E82               	movlw	130
 10786  015150  0100               	movlb	0	; () banked
 10787  015152  6F6A               	movwf	??_i2c_display_init& (0+255),b
 10788  015154  0EDD               	movlw	221
 10789  015156                     u19977:
 10790  015156  2EE8               	decfsz	wreg,f,c
 10791  015158  D7FE               	bra	u19977
 10792  01515A  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
 10793  01515C  D7FC               	bra	u19977
 10794  01515E  D000               	nop2	
 10795                           
 10796                           ;i2c.c: 403: _i2c_write(0b01111000, &init_sequence[0], 9);
 10797  015160  0E6B               	movlw	low i2c_display_init@init_sequence
 10798  015162  0100               	movlb	0	; () banked
 10799  015164  6F65               	movwf	__i2c_write@data& (0+255),b
 10800  015166  0E00               	movlw	high i2c_display_init@init_sequence
 10801  015168  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10802  01516A  0E09               	movlw	9
 10803  01516C  6F67               	movwf	__i2c_write@length& (0+255),b
 10804  01516E  0E78               	movlw	120
 10805  015170  ECBB  F0A8         	call	__i2c_write
 10806  015174  0012               	return		;funcret
 10807  015176                     __end_of_i2c_display_init:
 10808                           	opt stack 0
 10809                           tblptru	equ	0xFF8
 10810                           tblptrh	equ	0xFF7
 10811                           tblptrl	equ	0xFF6
 10812                           tablat	equ	0xFF5
 10813                           prodh	equ	0xFF4
 10814                           prodl	equ	0xFF3
 10815                           postinc0	equ	0xFEE
 10816                           wreg	equ	0xFE8
 10817                           postdec1	equ	0xFE5
 10818                           plusw1	equ	0xFE3
 10819                           fsr1h	equ	0xFE2
 10820                           fsr1l	equ	0xFE1
 10821                           indf2	equ	0xFDF
 10822                           postinc2	equ	0xFDE
 10823                           plusw2	equ	0xFDB
 10824                           fsr2h	equ	0xFDA
 10825                           fsr2l	equ	0xFD9
 10826                           status	equ	0xFD8
 10827                           
 10828 ;; *************** function __i2c_write *****************
 10829 ;; Defined at:
 10830 ;;		line 86 in file "i2c.c"
 10831 ;; Parameters:    Size  Location     Type
 10832 ;;  slave_addres    1    wreg     unsigned char 
 10833 ;;  data            2    5[BANK0 ] PTR unsigned char 
 10834 ;;		 -> i2c_display_program_custom_character@data_array(11), _ic2_display_set_cgram_address@data_array(3), _ic2_display_
      +set_ddram_address@data_array(2), i2c_display_init@init_sequence(9), 
 10835 ;;		 -> _i2c_display_send_init_sequence@init_sequence(9), i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_
      +readByte@addr(1), 
 10836 ;;		 -> i2c_eeprom_writeByte@dat(2), i2c_adc_start@configuration_byte(1), 
 10837 ;;  length          1    7[BANK0 ] unsigned char 
 10838 ;; Auto vars:     Size  Location     Type
 10839 ;;  slave_addres    1    8[BANK0 ] unsigned char 
 10840 ;;  cntr            1    9[BANK0 ] unsigned char 
 10841 ;; Return value:  Size  Location     Type
 10842 ;;                  1    wreg      void 
 10843 ;; Registers used:
 10844 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10845 ;; Tracked objects:
 10846 ;;		On entry : 0/0
 10847 ;;		On exit  : 0/0
 10848 ;;		Unchanged: 0/0
 10849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10850 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10851 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10853 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10854 ;;Total ram usage:        5 bytes
 10855 ;; Hardware stack levels used:    1
 10856 ;; Hardware stack levels required when called:   11
 10857 ;; This function calls:
 10858 ;;		__i2c_send
 10859 ;;		__i2c_start
 10860 ;;		__i2c_stop
 10861 ;;		__i2c_wait_idle
 10862 ;; This function is called by:
 10863 ;;		_i2c_eeprom_read
 10864 ;;		_i2c_display_init
 10865 ;;		__ic2_display_set_ddram_address
 10866 ;;		__ic2_display_set_cgram_address
 10867 ;;		_i2c_display_program_custom_character
 10868 ;;		_i2c_adc_start
 10869 ;;		_i2c_eeprom_writeByte
 10870 ;;		_i2c_eeprom_readByte
 10871 ;;		__i2c_display_send_init_sequence
 10872 ;; This function uses a non-reentrant model
 10873 ;;
 10874                           
 10875                           	psect	text30
 10876  015176                     __ptext30:
 10877                           	opt stack 0
 10878  015176                     __i2c_write:
 10879                           	opt stack 16
 10880                           
 10881                           ;incstack = 0
 10882                           ;__i2c_write@slave_address stored from wreg
 10883  015176  0100               	movlb	0	; () banked
 10884  015178  6F68               	movwf	__i2c_write@slave_address& (0+255),b
 10885                           
 10886                           ;i2c.c: 88: uint8_t cntr;;i2c.c: 90: _i2c_wait_idle();
 10887  01517A  ECAC  F0A3         	call	__i2c_wait_idle	;wreg free
 10888                           
 10889                           ;i2c.c: 91: _i2c_start();
 10890  01517E  ECB0  F0AF         	call	__i2c_start	;wreg free
 10891                           
 10892                           ;i2c.c: 92: _i2c_wait_idle();
 10893  015182  ECAC  F0A3         	call	__i2c_wait_idle	;wreg free
 10894                           
 10895                           ;i2c.c: 93: _i2c_send(slave_address);
 10896  015186  0100               	movlb	0	; () banked
 10897  015188  5168               	movf	__i2c_write@slave_address& (0+255),w,b
 10898  01518A  EC9D  F0AF         	call	__i2c_send
 10899                           
 10900                           ;i2c.c: 94: _i2c_wait_idle();
 10901  01518E  ECAC  F0A3         	call	__i2c_wait_idle	;wreg free
 10902                           
 10903                           ;i2c.c: 96: for(cntr=0; cntr<length; ++cntr)
 10904  015192  0E00               	movlw	0
 10905  015194  0100               	movlb	0	; () banked
 10906  015196  6F69               	movwf	__i2c_write@cntr& (0+255),b
 10907  015198  D00F               	goto	l1160
 10908  01519A                     
 10909                           ; BSR set to: 0
 10910                           ;i2c.c: 97: {;i2c.c: 98: _i2c_send(data[cntr]);
 10911                           
 10912                           ; BSR set to: 0
 10913  01519A  5169               	movf	__i2c_write@cntr& (0+255),w,b
 10914  01519C  0D01               	mullw	1
 10915  01519E  50F3               	movf	prodl,w,c
 10916  0151A0  2565               	addwf	__i2c_write@data& (0+255),w,b
 10917  0151A2  6ED9               	movwf	fsr2l,c
 10918  0151A4  50F4               	movf	prodh,w,c
 10919  0151A6  2166               	addwfc	(__i2c_write@data+1)& (0+255),w,b
 10920  0151A8  6EDA               	movwf	fsr2h,c
 10921  0151AA  50DF               	movf	indf2,w,c
 10922  0151AC  EC9D  F0AF         	call	__i2c_send
 10923                           
 10924                           ;i2c.c: 99: _i2c_wait_idle();
 10925  0151B0  ECAC  F0A3         	call	__i2c_wait_idle	;wreg free
 10926  0151B4  0100               	movlb	0	; () banked
 10927  0151B6  2B69               	incf	__i2c_write@cntr& (0+255),f,b
 10928  0151B8                     l1160:
 10929                           
 10930                           ; BSR set to: 0
 10931                           
 10932                           ; BSR set to: 0
 10933  0151B8  5167               	movf	__i2c_write@length& (0+255),w,b
 10934  0151BA  5D69               	subwf	__i2c_write@cntr& (0+255),w,b
 10935  0151BC  A0D8               	btfss	status,0,c
 10936  0151BE  D7ED               	goto	l1161
 10937                           
 10938                           ; BSR set to: 0
 10939                           ;i2c.c: 100: };i2c.c: 102: _i2c_stop();
 10940                           
 10941                           ; BSR set to: 0
 10942  0151C0  ECAC  F0AF         	call	__i2c_stop	;wreg free
 10943  0151C4  0012               	return		;funcret
 10944  0151C6                     __end_of__i2c_write:
 10945                           	opt stack 0
 10946                           tblptru	equ	0xFF8
 10947                           tblptrh	equ	0xFF7
 10948                           tblptrl	equ	0xFF6
 10949                           tablat	equ	0xFF5
 10950                           prodh	equ	0xFF4
 10951                           prodl	equ	0xFF3
 10952                           postinc0	equ	0xFEE
 10953                           wreg	equ	0xFE8
 10954                           postdec1	equ	0xFE5
 10955                           plusw1	equ	0xFE3
 10956                           fsr1h	equ	0xFE2
 10957                           fsr1l	equ	0xFE1
 10958                           indf2	equ	0xFDF
 10959                           postinc2	equ	0xFDE
 10960                           plusw2	equ	0xFDB
 10961                           fsr2h	equ	0xFDA
 10962                           fsr2l	equ	0xFD9
 10963                           status	equ	0xFD8
 10964                           
 10965 ;; *************** function __i2c_wait_idle *****************
 10966 ;; Defined at:
 10967 ;;		line 42 in file "i2c.c"
 10968 ;; Parameters:    Size  Location     Type
 10969 ;;		None
 10970 ;; Auto vars:     Size  Location     Type
 10971 ;;		None
 10972 ;; Return value:  Size  Location     Type
 10973 ;;                  1    wreg      void 
 10974 ;; Registers used:
 10975 ;;		wreg, status,2, status,0
 10976 ;; Tracked objects:
 10977 ;;		On entry : 0/0
 10978 ;;		On exit  : 0/0
 10979 ;;		Unchanged: 0/0
 10980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10983 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10984 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10985 ;;Total ram usage:        5 bytes
 10986 ;; Hardware stack levels used:    1
 10987 ;; Hardware stack levels required when called:   10
 10988 ;; This function calls:
 10989 ;;		Nothing
 10990 ;; This function is called by:
 10991 ;;		__i2c_write
 10992 ;;		__i2c_read
 10993 ;;		__i2c_eeprom_busy
 10994 ;;		_i2c_display_write_fixed
 10995 ;;		_i2c_adc_read
 10996 ;;		_i2c_display_write
 10997 ;; This function uses a non-reentrant model
 10998 ;;
 10999                           
 11000                           	psect	text31
 11001  014758                     __ptext31:
 11002                           	opt stack 0
 11003  014758                     __i2c_wait_idle:
 11004                           	opt stack 16
 11005                           
 11006                           ;i2c.c: 44: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 11007                           
 11008                           ;incstack = 0
 11009  014758  A4C7               	btfss	4039,2,c	;volatile
 11010  01475A  D004               	goto	u11450
 11011  01475C  0100               	movlb	0	; () banked
 11012  01475E  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 11013  014760  2B60               	incf	??__i2c_wait_idle& (0+255),f,b
 11014  014762  D002               	goto	u11458
 11015  014764                     u11450:
 11016  014764  0100               	movlb	0	; () banked
 11017  014766  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 11018  014768                     u11458:
 11019  014768  A0C5               	btfss	4037,0,c	;volatile
 11020  01476A  D003               	goto	u11460
 11021  01476C  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 11022  01476E  2B61               	incf	(??__i2c_wait_idle+1)& (0+255),f,b
 11023  014770  D002               	goto	u11468
 11024  014772                     u11460:
 11025  014772  0100               	movlb	0	; () banked
 11026  014774  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 11027  014776                     u11468:
 11028  014776  A2C5               	btfss	4037,1,c	;volatile
 11029  014778  D003               	goto	u11470
 11030  01477A  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 11031  01477C  2B62               	incf	(??__i2c_wait_idle+2)& (0+255),f,b
 11032  01477E  D002               	goto	u11478
 11033  014780                     u11470:
 11034  014780  0100               	movlb	0	; () banked
 11035  014782  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 11036  014784                     u11478:
 11037  014784  A4C5               	btfss	4037,2,c	;volatile
 11038  014786  D003               	goto	u11480
 11039  014788  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 11040  01478A  2B63               	incf	(??__i2c_wait_idle+3)& (0+255),f,b
 11041  01478C  D002               	goto	u11488
 11042  01478E                     u11480:
 11043  01478E  0100               	movlb	0	; () banked
 11044  014790  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 11045  014792                     u11488:
 11046  014792  A6C5               	btfss	4037,3,c	;volatile
 11047  014794  D003               	goto	u11490
 11048  014796  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 11049  014798  2B64               	incf	(??__i2c_wait_idle+4)& (0+255),f,b
 11050  01479A  D002               	goto	u11498
 11051  01479C                     u11490:
 11052  01479C  0100               	movlb	0	; () banked
 11053  01479E  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 11054  0147A0                     u11498:
 11055  0147A0  A8C5               	btfss	4037,4,c	;volatile
 11056  0147A2  D002               	goto	u11500
 11057  0147A4  0E01               	movlw	1
 11058  0147A6  D001               	goto	u11506
 11059  0147A8                     u11500:
 11060  0147A8  0E00               	movlw	0
 11061  0147AA                     u11506:
 11062  0147AA  1164               	iorwf	(??__i2c_wait_idle+4)& (0+255),w,b
 11063  0147AC  1163               	iorwf	(??__i2c_wait_idle+3)& (0+255),w,b
 11064  0147AE  1162               	iorwf	(??__i2c_wait_idle+2)& (0+255),w,b
 11065  0147B0  1161               	iorwf	(??__i2c_wait_idle+1)& (0+255),w,b
 11066  0147B2  1160               	iorwf	??__i2c_wait_idle& (0+255),w,b
 11067  0147B4  0900               	iorlw	0
 11068  0147B6  B4D8               	btfsc	status,2,c
 11069  0147B8  0012               	return	
 11070  0147BA  D7CE               	goto	__i2c_wait_idle
 11071  0147BC                     __end_of__i2c_wait_idle:
 11072                           	opt stack 0
 11073                           tblptru	equ	0xFF8
 11074                           tblptrh	equ	0xFF7
 11075                           tblptrl	equ	0xFF6
 11076                           tablat	equ	0xFF5
 11077                           prodh	equ	0xFF4
 11078                           prodl	equ	0xFF3
 11079                           postinc0	equ	0xFEE
 11080                           wreg	equ	0xFE8
 11081                           postdec1	equ	0xFE5
 11082                           plusw1	equ	0xFE3
 11083                           fsr1h	equ	0xFE2
 11084                           fsr1l	equ	0xFE1
 11085                           indf2	equ	0xFDF
 11086                           postinc2	equ	0xFDE
 11087                           plusw2	equ	0xFDB
 11088                           fsr2h	equ	0xFDA
 11089                           fsr2l	equ	0xFD9
 11090                           status	equ	0xFD8
 11091                           
 11092 ;; *************** function __i2c_stop *****************
 11093 ;; Defined at:
 11094 ;;		line 65 in file "i2c.c"
 11095 ;; Parameters:    Size  Location     Type
 11096 ;;		None
 11097 ;; Auto vars:     Size  Location     Type
 11098 ;;		None
 11099 ;; Return value:  Size  Location     Type
 11100 ;;                  1    wreg      void 
 11101 ;; Registers used:
 11102 ;;		None
 11103 ;; Tracked objects:
 11104 ;;		On entry : 0/0
 11105 ;;		On exit  : 0/0
 11106 ;;		Unchanged: 0/0
 11107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11112 ;;Total ram usage:        0 bytes
 11113 ;; Hardware stack levels used:    1
 11114 ;; Hardware stack levels required when called:   10
 11115 ;; This function calls:
 11116 ;;		Nothing
 11117 ;; This function is called by:
 11118 ;;		__i2c_write
 11119 ;;		__i2c_read
 11120 ;;		__i2c_eeprom_busy
 11121 ;;		_i2c_display_write_fixed
 11122 ;;		_i2c_adc_read
 11123 ;;		_i2c_display_write
 11124 ;; This function uses a non-reentrant model
 11125 ;;
 11126                           
 11127                           	psect	text32
 11128  015F58                     __ptext32:
 11129                           	opt stack 0
 11130  015F58                     __i2c_stop:
 11131                           	opt stack 16
 11132                           
 11133                           ;i2c.c: 67: SSP1CON2bits.PEN = 1;
 11134                           
 11135                           ; BSR set to: 0
 11136                           ;incstack = 0
 11137  015F58  84C5               	bsf	4037,2,c	;volatile
 11138  015F5A  A4C5               	btfss	4037,2,c	;volatile
 11139  015F5C  0012               	return	
 11140  015F5E  D7FD               	goto	l1143
 11141  015F60                     __end_of__i2c_stop:
 11142                           	opt stack 0
 11143                           tblptru	equ	0xFF8
 11144                           tblptrh	equ	0xFF7
 11145                           tblptrl	equ	0xFF6
 11146                           tablat	equ	0xFF5
 11147                           prodh	equ	0xFF4
 11148                           prodl	equ	0xFF3
 11149                           postinc0	equ	0xFEE
 11150                           wreg	equ	0xFE8
 11151                           postdec1	equ	0xFE5
 11152                           plusw1	equ	0xFE3
 11153                           fsr1h	equ	0xFE2
 11154                           fsr1l	equ	0xFE1
 11155                           indf2	equ	0xFDF
 11156                           postinc2	equ	0xFDE
 11157                           plusw2	equ	0xFDB
 11158                           fsr2h	equ	0xFDA
 11159                           fsr2l	equ	0xFD9
 11160                           status	equ	0xFD8
 11161                           
 11162 ;; *************** function __i2c_start *****************
 11163 ;; Defined at:
 11164 ;;		line 47 in file "i2c.c"
 11165 ;; Parameters:    Size  Location     Type
 11166 ;;		None
 11167 ;; Auto vars:     Size  Location     Type
 11168 ;;		None
 11169 ;; Return value:  Size  Location     Type
 11170 ;;                  1    wreg      void 
 11171 ;; Registers used:
 11172 ;;		None
 11173 ;; Tracked objects:
 11174 ;;		On entry : 0/0
 11175 ;;		On exit  : 0/0
 11176 ;;		Unchanged: 0/0
 11177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11182 ;;Total ram usage:        0 bytes
 11183 ;; Hardware stack levels used:    1
 11184 ;; Hardware stack levels required when called:   10
 11185 ;; This function calls:
 11186 ;;		Nothing
 11187 ;; This function is called by:
 11188 ;;		__i2c_write
 11189 ;;		__i2c_read
 11190 ;;		__i2c_eeprom_busy
 11191 ;;		_i2c_display_write_fixed
 11192 ;;		_i2c_adc_read
 11193 ;;		_i2c_display_write
 11194 ;; This function uses a non-reentrant model
 11195 ;;
 11196                           
 11197                           	psect	text33
 11198  015F60                     __ptext33:
 11199                           	opt stack 0
 11200  015F60                     __i2c_start:
 11201                           	opt stack 16
 11202                           
 11203                           ;i2c.c: 49: SSP1CON2bits.SEN=1;
 11204                           
 11205                           ;incstack = 0
 11206  015F60  80C5               	bsf	4037,0,c	;volatile
 11207  015F62  A0C5               	btfss	4037,0,c	;volatile
 11208  015F64  0012               	return	
 11209  015F66  D7FD               	goto	l1128
 11210  015F68                     __end_of__i2c_start:
 11211                           	opt stack 0
 11212                           tblptru	equ	0xFF8
 11213                           tblptrh	equ	0xFF7
 11214                           tblptrl	equ	0xFF6
 11215                           tablat	equ	0xFF5
 11216                           prodh	equ	0xFF4
 11217                           prodl	equ	0xFF3
 11218                           postinc0	equ	0xFEE
 11219                           wreg	equ	0xFE8
 11220                           postdec1	equ	0xFE5
 11221                           plusw1	equ	0xFE3
 11222                           fsr1h	equ	0xFE2
 11223                           fsr1l	equ	0xFE1
 11224                           indf2	equ	0xFDF
 11225                           postinc2	equ	0xFDE
 11226                           plusw2	equ	0xFDB
 11227                           fsr2h	equ	0xFDA
 11228                           fsr2l	equ	0xFD9
 11229                           status	equ	0xFD8
 11230                           
 11231 ;; *************** function __i2c_send *****************
 11232 ;; Defined at:
 11233 ;;		line 53 in file "i2c.c"
 11234 ;; Parameters:    Size  Location     Type
 11235 ;;  dat             1    wreg     unsigned char 
 11236 ;; Auto vars:     Size  Location     Type
 11237 ;;  dat             1    0[BANK0 ] unsigned char 
 11238 ;; Return value:  Size  Location     Type
 11239 ;;                  1    wreg      void 
 11240 ;; Registers used:
 11241 ;;		wreg
 11242 ;; Tracked objects:
 11243 ;;		On entry : 0/0
 11244 ;;		On exit  : 0/0
 11245 ;;		Unchanged: 0/0
 11246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11248 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11250 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11251 ;;Total ram usage:        1 bytes
 11252 ;; Hardware stack levels used:    1
 11253 ;; Hardware stack levels required when called:   10
 11254 ;; This function calls:
 11255 ;;		Nothing
 11256 ;; This function is called by:
 11257 ;;		__i2c_write
 11258 ;;		__i2c_read
 11259 ;;		__i2c_eeprom_busy
 11260 ;;		_i2c_display_write_fixed
 11261 ;;		_i2c_adc_read
 11262 ;;		_i2c_display_write
 11263 ;; This function uses a non-reentrant model
 11264 ;;
 11265                           
 11266                           	psect	text34
 11267  015F3A                     __ptext34:
 11268                           	opt stack 0
 11269  015F3A                     __i2c_send:
 11270                           	opt stack 16
 11271                           
 11272                           ;incstack = 0
 11273                           ;__i2c_send@dat stored from wreg
 11274  015F3A  0100               	movlb	0	; () banked
 11275  015F3C  6F60               	movwf	__i2c_send@dat& (0+255),b
 11276                           
 11277                           ;i2c.c: 55: SSP1BUF = dat;
 11278  015F3E  C060  FFC9         	movff	__i2c_send@dat,4041	;volatile
 11279  015F42  0012               	return		;funcret
 11280  015F44                     __end_of__i2c_send:
 11281                           	opt stack 0
 11282                           tblptru	equ	0xFF8
 11283                           tblptrh	equ	0xFF7
 11284                           tblptrl	equ	0xFF6
 11285                           tablat	equ	0xFF5
 11286                           prodh	equ	0xFF4
 11287                           prodl	equ	0xFF3
 11288                           postinc0	equ	0xFEE
 11289                           wreg	equ	0xFE8
 11290                           postdec1	equ	0xFE5
 11291                           plusw1	equ	0xFE3
 11292                           fsr1h	equ	0xFE2
 11293                           fsr1l	equ	0xFE1
 11294                           indf2	equ	0xFDF
 11295                           postinc2	equ	0xFDE
 11296                           plusw2	equ	0xFDB
 11297                           fsr2h	equ	0xFDA
 11298                           fsr2l	equ	0xFD9
 11299                           status	equ	0xFD8
 11300                           
 11301 ;; *************** function __display_start *****************
 11302 ;; Defined at:
 11303 ;;		line 284 in file "display.c"
 11304 ;; Parameters:    Size  Location     Type
 11305 ;;		None
 11306 ;; Auto vars:     Size  Location     Type
 11307 ;;  cntr            1   28[BANK0 ] unsigned char 
 11308 ;; Return value:  Size  Location     Type
 11309 ;;                  1    wreg      void 
 11310 ;; Registers used:
 11311 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11312 ;; Tracked objects:
 11313 ;;		On entry : 0/0
 11314 ;;		On exit  : 0/0
 11315 ;;		Unchanged: 0/0
 11316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11318 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11320 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11321 ;;Total ram usage:        1 bytes
 11322 ;; Hardware stack levels used:    1
 11323 ;; Hardware stack levels required when called:   14
 11324 ;; This function calls:
 11325 ;;		__display_itoa_u16
 11326 ;;		_memcpy
 11327 ;; This function is called by:
 11328 ;;		_display_init
 11329 ;; This function uses a non-reentrant model
 11330 ;;
 11331                           
 11332                           	psect	text35
 11333  0131AC                     __ptext35:
 11334                           	opt stack 0
 11335  0131AC                     __display_start:
 11336                           	opt stack 14
 11337                           
 11338                           ;display.c: 286: uint8_t cntr;;display.c: 287: memcpy(display_content, dc_startup, sizeo
      +                          f display_content);
 11339                           
 11340                           ;incstack = 0
 11341  0131AC  0E44               	movlw	low _display_content
 11342  0131AE  0100               	movlb	0	; () banked
 11343  0131B0  6F60               	movwf	memcpy@d1& (0+255),b
 11344  0131B2  0E02               	movlw	high _display_content
 11345  0131B4  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 11346  0131B6  0E00               	movlw	low _dc_startup
 11347  0131B8  6F62               	movwf	memcpy@s1& (0+255),b
 11348  0131BA  0E04               	movlw	high _dc_startup
 11349  0131BC  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 11350  0131BE  0E00               	movlw	0
 11351  0131C0  6F65               	movwf	(memcpy@n+1)& (0+255),b
 11352  0131C2  0E50               	movlw	80
 11353  0131C4  6F64               	movwf	memcpy@n& (0+255),b
 11354  0131C6  EC71  F0A4         	call	_memcpy	;wreg free
 11355                           
 11356                           ;display.c: 288: cntr = 6;
 11357  0131CA  0E06               	movlw	6
 11358  0131CC  0100               	movlb	0	; () banked
 11359  0131CE  6F7C               	movwf	__display_start@cntr& (0+255),b
 11360                           
 11361                           ; BSR set to: 0
 11362                           ;display.c: 289: cntr += _display_itoa_u16(0x00, &display_content[2][cntr]);
 11363  0131D0  0E00               	movlw	0
 11364  0131D2  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 11365  0131D4  0E00               	movlw	0
 11366  0131D6  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 11367  0131D8  517C               	movf	__display_start@cntr& (0+255),w,b
 11368  0131DA  0D01               	mullw	1
 11369  0131DC  0E6C               	movlw	low (_display_content+40)
 11370  0131DE  24F3               	addwf	prodl,w,c
 11371  0131E0  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 11372  0131E2  0E02               	movlw	high (_display_content+40)
 11373  0131E4  20F4               	addwfc	prodh,w,c
 11374  0131E6  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 11375  0131E8  EC7C  F098         	call	__display_itoa_u16	;wreg free
 11376  0131EC  0100               	movlb	0	; () banked
 11377  0131EE  277C               	addwf	__display_start@cntr& (0+255),f,b
 11378                           
 11379                           ; BSR set to: 0
 11380                           ;display.c: 290: display_content[2][cntr++] = '.';
 11381  0131F0  517C               	movf	__display_start@cntr& (0+255),w,b
 11382  0131F2  0D01               	mullw	1
 11383  0131F4  0E6C               	movlw	low (_display_content+40)
 11384  0131F6  24F3               	addwf	prodl,w,c
 11385  0131F8  6ED9               	movwf	fsr2l,c
 11386  0131FA  0E02               	movlw	high (_display_content+40)
 11387  0131FC  20F4               	addwfc	prodh,w,c
 11388  0131FE  6EDA               	movwf	fsr2h,c
 11389  013200  0E2E               	movlw	46
 11390  013202  6EDF               	movwf	indf2,c
 11391                           
 11392                           ; BSR set to: 0
 11393  013204  2B7C               	incf	__display_start@cntr& (0+255),f,b
 11394                           
 11395                           ; BSR set to: 0
 11396                           ;display.c: 291: cntr += _display_itoa_u16(0x06, &display_content[2][cntr]);
 11397  013206  0E00               	movlw	0
 11398  013208  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 11399  01320A  0E06               	movlw	6
 11400  01320C  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 11401  01320E  517C               	movf	__display_start@cntr& (0+255),w,b
 11402  013210  0D01               	mullw	1
 11403  013212  0E6C               	movlw	low (_display_content+40)
 11404  013214  24F3               	addwf	prodl,w,c
 11405  013216  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 11406  013218  0E02               	movlw	high (_display_content+40)
 11407  01321A  20F4               	addwfc	prodh,w,c
 11408  01321C  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 11409  01321E  EC7C  F098         	call	__display_itoa_u16	;wreg free
 11410  013222  0100               	movlb	0	; () banked
 11411  013224  277C               	addwf	__display_start@cntr& (0+255),f,b
 11412                           
 11413                           ; BSR set to: 0
 11414                           ;display.c: 292: display_content[2][cntr++] = '.';
 11415  013226  517C               	movf	__display_start@cntr& (0+255),w,b
 11416  013228  0D01               	mullw	1
 11417  01322A  0E6C               	movlw	low (_display_content+40)
 11418  01322C  24F3               	addwf	prodl,w,c
 11419  01322E  6ED9               	movwf	fsr2l,c
 11420  013230  0E02               	movlw	high (_display_content+40)
 11421  013232  20F4               	addwfc	prodh,w,c
 11422  013234  6EDA               	movwf	fsr2h,c
 11423  013236  0E2E               	movlw	46
 11424  013238  6EDF               	movwf	indf2,c
 11425                           
 11426                           ; BSR set to: 0
 11427  01323A  2B7C               	incf	__display_start@cntr& (0+255),f,b
 11428                           
 11429                           ; BSR set to: 0
 11430                           ;display.c: 293: cntr += _display_itoa_u16(0x02, &display_content[2][cntr]);
 11431  01323C  0E00               	movlw	0
 11432  01323E  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 11433  013240  0E02               	movlw	2
 11434  013242  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 11435  013244  517C               	movf	__display_start@cntr& (0+255),w,b
 11436  013246  0D01               	mullw	1
 11437  013248  0E6C               	movlw	low (_display_content+40)
 11438  01324A  24F3               	addwf	prodl,w,c
 11439  01324C  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 11440  01324E  0E02               	movlw	high (_display_content+40)
 11441  013250  20F4               	addwfc	prodh,w,c
 11442  013252  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 11443  013254  EC7C  F098         	call	__display_itoa_u16	;wreg free
 11444  013258  0100               	movlb	0	; () banked
 11445  01325A  277C               	addwf	__display_start@cntr& (0+255),f,b
 11446                           
 11447                           ; BSR set to: 0
 11448  01325C  0012               	return		;funcret
 11449  01325E                     __end_of__display_start:
 11450                           	opt stack 0
 11451                           tblptru	equ	0xFF8
 11452                           tblptrh	equ	0xFF7
 11453                           tblptrl	equ	0xFF6
 11454                           tablat	equ	0xFF5
 11455                           prodh	equ	0xFF4
 11456                           prodl	equ	0xFF3
 11457                           postinc0	equ	0xFEE
 11458                           wreg	equ	0xFE8
 11459                           postdec1	equ	0xFE5
 11460                           plusw1	equ	0xFE3
 11461                           fsr1h	equ	0xFE2
 11462                           fsr1l	equ	0xFE1
 11463                           indf2	equ	0xFDF
 11464                           postinc2	equ	0xFDE
 11465                           plusw2	equ	0xFDB
 11466                           fsr2h	equ	0xFDA
 11467                           fsr2l	equ	0xFD9
 11468                           status	equ	0xFD8
 11469                           
 11470 ;; *************** function __display_itoa_u16 *****************
 11471 ;; Defined at:
 11472 ;;		line 227 in file "display.c"
 11473 ;; Parameters:    Size  Location     Type
 11474 ;;  value           2   24[BANK0 ] unsigned int 
 11475 ;;  text            2   26[BANK0 ] PTR unsigned char 
 11476 ;;		 -> display_content(80), 
 11477 ;; Auto vars:     Size  Location     Type
 11478 ;;		None
 11479 ;; Return value:  Size  Location     Type
 11480 ;;                  1    wreg      unsigned char 
 11481 ;; Registers used:
 11482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11483 ;; Tracked objects:
 11484 ;;		On entry : 0/0
 11485 ;;		On exit  : 0/0
 11486 ;;		Unchanged: 0/0
 11487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11488 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11491 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11492 ;;Total ram usage:        4 bytes
 11493 ;; Hardware stack levels used:    1
 11494 ;; Hardware stack levels required when called:   13
 11495 ;; This function calls:
 11496 ;;		_itoa
 11497 ;; This function is called by:
 11498 ;;		__display_start
 11499 ;; This function uses a non-reentrant model
 11500 ;;
 11501                           
 11502                           	psect	text36
 11503  0130F8                     __ptext36:
 11504                           	opt stack 0
 11505  0130F8                     __display_itoa_u16:
 11506                           	opt stack 14
 11507                           
 11508                           ;display.c: 229: itoa(text, value, 10);
 11509                           
 11510                           ; BSR set to: 0
 11511                           ;incstack = 0
 11512  0130F8  C07A  F070         	movff	__display_itoa_u16@text,itoa@buf
 11513  0130FC  C07B  F071         	movff	__display_itoa_u16@text+1,itoa@buf+1
 11514  013100  C078  F072         	movff	__display_itoa_u16@value,itoa@val
 11515  013104  C079  F073         	movff	__display_itoa_u16@value+1,itoa@val+1
 11516  013108  0E00               	movlw	0
 11517  01310A  0100               	movlb	0	; () banked
 11518  01310C  6F75               	movwf	(itoa@base+1)& (0+255),b
 11519  01310E  0E0A               	movlw	10
 11520  013110  6F74               	movwf	itoa@base& (0+255),b
 11521  013112  EC84  F0AA         	call	_itoa	;wreg free
 11522                           
 11523                           ;display.c: 230: if(value>9999)
 11524  013116  0E10               	movlw	16
 11525  013118  0100               	movlb	0	; () banked
 11526  01311A  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11527  01311C  0E27               	movlw	39
 11528  01311E  5979               	subwfb	(__display_itoa_u16@value+1)& (0+255),w,b
 11529  013120  A0D8               	btfss	status,0,c
 11530  013122  D00A               	goto	l1373
 11531                           
 11532                           ; BSR set to: 0
 11533                           ;display.c: 231: {;display.c: 232: *(text+5) = ' ';
 11534  013124  EE20 F005          	lfsr	2,5
 11535  013128  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11536  01312A  26D9               	addwf	fsr2l,f,c
 11537  01312C  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11538  01312E  22DA               	addwfc	fsr2h,f,c
 11539  013130  0E20               	movlw	32
 11540  013132  6EDF               	movwf	indf2,c
 11541                           
 11542                           ; BSR set to: 0
 11543                           ;display.c: 233: return 5;
 11544  013134  0E05               	movlw	5
 11545                           
 11546                           ; BSR set to: 0
 11547                           ;display.c: 234: }
 11548                           
 11549                           ; BSR set to: 0
 11550  013136  0012               	return	
 11551  013138                     l1373:
 11552                           
 11553                           ; BSR set to: 0
 11554                           ;display.c: 235: else if (value>999)
 11555                           
 11556                           ; BSR set to: 0
 11557  013138  0EE8               	movlw	232
 11558  01313A  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11559  01313C  0E03               	movlw	3
 11560  01313E  5979               	subwfb	(__display_itoa_u16@value+1)& (0+255),w,b
 11561  013140  A0D8               	btfss	status,0,c
 11562  013142  D00A               	goto	l1376
 11563                           
 11564                           ; BSR set to: 0
 11565                           ;display.c: 236: {;display.c: 237: *(text+4) = ' ';
 11566  013144  EE20 F004          	lfsr	2,4
 11567  013148  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11568  01314A  26D9               	addwf	fsr2l,f,c
 11569  01314C  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11570  01314E  22DA               	addwfc	fsr2h,f,c
 11571  013150  0E20               	movlw	32
 11572  013152  6EDF               	movwf	indf2,c
 11573                           
 11574                           ; BSR set to: 0
 11575                           ;display.c: 238: return 4;
 11576  013154  0E04               	movlw	4
 11577                           
 11578                           ; BSR set to: 0
 11579                           ;display.c: 239: }
 11580                           
 11581                           ; BSR set to: 0
 11582  013156  0012               	return	
 11583  013158                     l1376:
 11584                           
 11585                           ; BSR set to: 0
 11586                           ;display.c: 240: else if (value>99)
 11587                           
 11588                           ; BSR set to: 0
 11589  013158  5179               	movf	(__display_itoa_u16@value+1)& (0+255),w,b
 11590  01315A  E104               	bnz	u13850
 11591  01315C  0E64               	movlw	100
 11592  01315E  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11593  013160  A0D8               	btfss	status,0,c
 11594  013162  D00A               	goto	l1378
 11595  013164                     u13850:
 11596                           
 11597                           ; BSR set to: 0
 11598                           ;display.c: 241: {;display.c: 242: *(text+3) = ' ';
 11599  013164  EE20 F003          	lfsr	2,3
 11600  013168  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11601  01316A  26D9               	addwf	fsr2l,f,c
 11602  01316C  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11603  01316E  22DA               	addwfc	fsr2h,f,c
 11604  013170  0E20               	movlw	32
 11605  013172  6EDF               	movwf	indf2,c
 11606                           
 11607                           ; BSR set to: 0
 11608                           ;display.c: 243: return 3;
 11609  013174  0E03               	movlw	3
 11610                           
 11611                           ; BSR set to: 0
 11612                           ;display.c: 244: }
 11613                           
 11614                           ; BSR set to: 0
 11615  013176  0012               	return	
 11616  013178                     l1378:
 11617                           
 11618                           ; BSR set to: 0
 11619                           ;display.c: 245: else if (value>9)
 11620                           
 11621                           ; BSR set to: 0
 11622  013178  5179               	movf	(__display_itoa_u16@value+1)& (0+255),w,b
 11623  01317A  E104               	bnz	u13860
 11624  01317C  0E0A               	movlw	10
 11625  01317E  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11626  013180  A0D8               	btfss	status,0,c
 11627  013182  D00A               	goto	l1380
 11628  013184                     u13860:
 11629                           
 11630                           ; BSR set to: 0
 11631                           ;display.c: 246: {;display.c: 247: *(text+2) = ' ';
 11632  013184  EE20 F002          	lfsr	2,2
 11633  013188  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11634  01318A  26D9               	addwf	fsr2l,f,c
 11635  01318C  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11636  01318E  22DA               	addwfc	fsr2h,f,c
 11637  013190  0E20               	movlw	32
 11638  013192  6EDF               	movwf	indf2,c
 11639                           
 11640                           ; BSR set to: 0
 11641                           ;display.c: 248: return 2;
 11642  013194  0E02               	movlw	2
 11643                           
 11644                           ; BSR set to: 0
 11645                           ;display.c: 249: }
 11646                           
 11647                           ; BSR set to: 0
 11648  013196  0012               	return	
 11649  013198                     l1380:
 11650                           
 11651                           ; BSR set to: 0
 11652                           ;display.c: 250: else;display.c: 251: {;display.c: 252: *(text+1) = ' ';
 11653                           
 11654                           ; BSR set to: 0
 11655  013198  EE20 F001          	lfsr	2,1
 11656  01319C  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11657  01319E  26D9               	addwf	fsr2l,f,c
 11658  0131A0  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11659  0131A2  22DA               	addwfc	fsr2h,f,c
 11660  0131A4  0E20               	movlw	32
 11661  0131A6  6EDF               	movwf	indf2,c
 11662                           
 11663                           ; BSR set to: 0
 11664                           ;display.c: 253: return 1;
 11665  0131A8  0E01               	movlw	1
 11666                           
 11667                           ; BSR set to: 0
 11668                           
 11669                           ; BSR set to: 0
 11670                           
 11671                           ; BSR set to: 0
 11672                           
 11673                           ; BSR set to: 0
 11674  0131AA  0012               	return	
 11675  0131AC                     __end_of__display_itoa_u16:
 11676                           	opt stack 0
 11677                           tblptru	equ	0xFF8
 11678                           tblptrh	equ	0xFF7
 11679                           tblptrl	equ	0xFF6
 11680                           tablat	equ	0xFF5
 11681                           prodh	equ	0xFF4
 11682                           prodl	equ	0xFF3
 11683                           postinc0	equ	0xFEE
 11684                           wreg	equ	0xFE8
 11685                           postdec1	equ	0xFE5
 11686                           plusw1	equ	0xFE3
 11687                           fsr1h	equ	0xFE2
 11688                           fsr1l	equ	0xFE1
 11689                           indf2	equ	0xFDF
 11690                           postinc2	equ	0xFDE
 11691                           plusw2	equ	0xFDB
 11692                           fsr2h	equ	0xFDA
 11693                           fsr2l	equ	0xFD9
 11694                           status	equ	0xFD8
 11695                           
 11696 ;; *************** function _configFile_write *****************
 11697 ;; Defined at:
 11698 ;;		line 313 in file "config_file.c"
 11699 ;; Parameters:    Size  Location     Type
 11700 ;;		None
 11701 ;; Auto vars:     Size  Location     Type
 11702 ;;  file_size       4  133[BANK0 ] unsigned long 
 11703 ;;  file_number     1  132[BANK0 ] unsigned char 
 11704 ;; Return value:  Size  Location     Type
 11705 ;;                  1    wreg      void 
 11706 ;; Registers used:
 11707 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11708 ;; Tracked objects:
 11709 ;;		On entry : 0/0
 11710 ;;		On exit  : 0/0
 11711 ;;		Unchanged: 0/0
 11712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11714 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11715 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11716 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11717 ;;Total ram usage:        6 bytes
 11718 ;; Hardware stack levels used:    1
 11719 ;; Hardware stack levels required when called:   18
 11720 ;; This function calls:
 11721 ;;		__add_item
 11722 ;;		_fat_create_file
 11723 ;;		_fat_find_file
 11724 ;;		_fat_modify_file
 11725 ;;		_fat_resize_file
 11726 ;; This function is called by:
 11727 ;;		_system_init
 11728 ;; This function uses a non-reentrant model
 11729 ;;
 11730                           
 11731                           	psect	text37
 11732  00C1FC                     __ptext37:
 11733                           	opt stack 0
 11734  00C1FC                     _configFile_write:
 11735                           	opt stack 11
 11736                           
 11737                           ;config_file.c: 315: uint8_t file_number;;config_file.c: 316: uint32_t file_size;;config
      +                          _file.c: 318: file_size = 0;
 11738                           
 11739                           ; BSR set to: 0
 11740                           ;incstack = 0
 11741  00C1FC  0E00               	movlw	0
 11742  00C1FE  0100               	movlb	0	; () banked
 11743  00C200  6FE5               	movwf	configFile_write@file_size& (0+255),b
 11744  00C202  0E00               	movlw	0
 11745  00C204  6FE6               	movwf	(configFile_write@file_size+1)& (0+255),b
 11746  00C206  0E00               	movlw	0
 11747  00C208  6FE7               	movwf	(configFile_write@file_size+2)& (0+255),b
 11748  00C20A  0E00               	movlw	0
 11749  00C20C  6FE8               	movwf	(configFile_write@file_size+3)& (0+255),b
 11750                           
 11751                           ; BSR set to: 0
 11752                           ;config_file.c: 319: file_size += _add_item(&full_circle_in_steps_string, (int32_t) conf
      +                          ig.full_circle_in_steps, &ConfigFile_buffer[file_size]);
 11753  00C20E  0E12               	movlw	low _full_circle_in_steps_string
 11754  00C210  6F84               	movwf	__add_item@item_string& (0+255),b
 11755  00C212  0EA2               	movlw	high _full_circle_in_steps_string
 11756  00C214  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11757  00C216  C195  F086         	movff	_config,__add_item@value
 11758  00C21A  C196  F087         	movff	_config+1,__add_item@value+1
 11759  00C21E  C197  F088         	movff	_config+2,__add_item@value+2
 11760  00C222  C198  F089         	movff	_config+3,__add_item@value+3
 11761  00C226  0E00               	movlw	low _ConfigFile_buffer
 11762  00C228  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11763  00C22A  6F8A               	movwf	__add_item@buffer& (0+255),b
 11764  00C22C  0E08               	movlw	high _ConfigFile_buffer
 11765  00C22E  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11766  00C230  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11767  00C232  EC0A  F08D         	call	__add_item	;wreg free
 11768  00C236  0100               	movlb	0	; () banked
 11769  00C238  6FE3               	movwf	??_configFile_write& (0+255),b
 11770  00C23A  51E3               	movf	??_configFile_write& (0+255),w,b
 11771  00C23C  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11772  00C23E  0E00               	movlw	0
 11773  00C240  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11774  00C242  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11775  00C244  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11776                           
 11777                           ; BSR set to: 0
 11778                           ;config_file.c: 320: file_size += _add_item(&inverse_direction_string, (int32_t) config.
      +                          inverse_direction, &ConfigFile_buffer[file_size]);
 11779  00C246  0E5E               	movlw	low _inverse_direction_string
 11780  00C248  6F84               	movwf	__add_item@item_string& (0+255),b
 11781  00C24A  0EA2               	movlw	high _inverse_direction_string
 11782  00C24C  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11783  00C24E  0101               	movlb	1	; () banked
 11784  00C250  5199               	movf	(_config+4)& (0+255),w,b
 11785  00C252  0100               	movlb	0	; () banked
 11786  00C254  6F86               	movwf	__add_item@value& (0+255),b
 11787  00C256  6B87               	clrf	(__add_item@value+1)& (0+255),b
 11788  00C258  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11789  00C25A  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11790  00C25C  0E00               	movlw	low _ConfigFile_buffer
 11791  00C25E  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11792  00C260  6F8A               	movwf	__add_item@buffer& (0+255),b
 11793  00C262  0E08               	movlw	high _ConfigFile_buffer
 11794  00C264  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11795  00C266  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11796  00C268  EC0A  F08D         	call	__add_item	;wreg free
 11797  00C26C  0100               	movlb	0	; () banked
 11798  00C26E  6FE3               	movwf	??_configFile_write& (0+255),b
 11799  00C270  51E3               	movf	??_configFile_write& (0+255),w,b
 11800  00C272  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11801  00C274  0E00               	movlw	0
 11802  00C276  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11803  00C278  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11804  00C27A  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11805                           
 11806                           ; BSR set to: 0
 11807                           ;config_file.c: 321: file_size += _add_item(&overshoot_in_steps_string, (int32_t) config
      +                          .overshoot_in_steps, &ConfigFile_buffer[file_size]);
 11808  00C27C  0E27               	movlw	low _overshoot_in_steps_string
 11809  00C27E  6F84               	movwf	__add_item@item_string& (0+255),b
 11810  00C280  0EA2               	movlw	high _overshoot_in_steps_string
 11811  00C282  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11812  00C284  C19A  F086         	movff	_config+5,__add_item@value
 11813  00C288  C19B  F087         	movff	_config+6,__add_item@value+1
 11814  00C28C  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11815  00C28E  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11816  00C290  0E00               	movlw	low _ConfigFile_buffer
 11817  00C292  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11818  00C294  6F8A               	movwf	__add_item@buffer& (0+255),b
 11819  00C296  0E08               	movlw	high _ConfigFile_buffer
 11820  00C298  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11821  00C29A  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11822  00C29C  EC0A  F08D         	call	__add_item	;wreg free
 11823  00C2A0  0100               	movlb	0	; () banked
 11824  00C2A2  6FE3               	movwf	??_configFile_write& (0+255),b
 11825  00C2A4  51E3               	movf	??_configFile_write& (0+255),w,b
 11826  00C2A6  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11827  00C2A8  0E00               	movlw	0
 11828  00C2AA  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11829  00C2AC  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11830  00C2AE  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11831                           
 11832                           ; BSR set to: 0
 11833                           ;config_file.c: 322: file_size += _add_item(&overshoot_cost_in_steps_string, (int32_t) c
      +                          onfig.overshoot_cost_in_steps, &ConfigFile_buffer[file_size]);
 11834  00C2B0  0EBB               	movlw	low _overshoot_cost_in_steps_string
 11835  00C2B2  6F84               	movwf	__add_item@item_string& (0+255),b
 11836  00C2B4  0EA1               	movlw	high _overshoot_cost_in_steps_string
 11837  00C2B6  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11838  00C2B8  C19C  F086         	movff	_config+7,__add_item@value
 11839  00C2BC  C19D  F087         	movff	_config+8,__add_item@value+1
 11840  00C2C0  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11841  00C2C2  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11842  00C2C4  0E00               	movlw	low _ConfigFile_buffer
 11843  00C2C6  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11844  00C2C8  6F8A               	movwf	__add_item@buffer& (0+255),b
 11845  00C2CA  0E08               	movlw	high _ConfigFile_buffer
 11846  00C2CC  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11847  00C2CE  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11848  00C2D0  EC0A  F08D         	call	__add_item	;wreg free
 11849  00C2D4  0100               	movlb	0	; () banked
 11850  00C2D6  6FE3               	movwf	??_configFile_write& (0+255),b
 11851  00C2D8  51E3               	movf	??_configFile_write& (0+255),w,b
 11852  00C2DA  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11853  00C2DC  0E00               	movlw	0
 11854  00C2DE  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11855  00C2E0  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11856  00C2E2  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11857                           
 11858                           ; BSR set to: 0
 11859                           ;config_file.c: 323: file_size += _add_item(&minimum_speed_string, (int32_t) config.mini
      +                          mum_speed, &ConfigFile_buffer[file_size]);
 11860  00C2E4  0EAC               	movlw	low _minimum_speed_string
 11861  00C2E6  6F84               	movwf	__add_item@item_string& (0+255),b
 11862  00C2E8  0EA2               	movlw	high _minimum_speed_string
 11863  00C2EA  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11864  00C2EC  C19E  F086         	movff	_config+9,__add_item@value
 11865  00C2F0  C19F  F087         	movff	_config+10,__add_item@value+1
 11866  00C2F4  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11867  00C2F6  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11868  00C2F8  0E00               	movlw	low _ConfigFile_buffer
 11869  00C2FA  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11870  00C2FC  6F8A               	movwf	__add_item@buffer& (0+255),b
 11871  00C2FE  0E08               	movlw	high _ConfigFile_buffer
 11872  00C300  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11873  00C302  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11874  00C304  EC0A  F08D         	call	__add_item	;wreg free
 11875  00C308  0100               	movlb	0	; () banked
 11876  00C30A  6FE3               	movwf	??_configFile_write& (0+255),b
 11877  00C30C  51E3               	movf	??_configFile_write& (0+255),w,b
 11878  00C30E  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11879  00C310  0E00               	movlw	0
 11880  00C312  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11881  00C314  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11882  00C316  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11883                           
 11884                           ; BSR set to: 0
 11885                           ;config_file.c: 324: file_size += _add_item(&maximum_speed_string, (int32_t) config.maxi
      +                          mum_speed, &ConfigFile_buffer[file_size]);
 11886  00C318  0E9E               	movlw	low _maximum_speed_string
 11887  00C31A  6F84               	movwf	__add_item@item_string& (0+255),b
 11888  00C31C  0EA2               	movlw	high _maximum_speed_string
 11889  00C31E  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11890  00C320  C1A0  F086         	movff	_config+11,__add_item@value
 11891  00C324  C1A1  F087         	movff	_config+12,__add_item@value+1
 11892  00C328  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11893  00C32A  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11894  00C32C  0E00               	movlw	low _ConfigFile_buffer
 11895  00C32E  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11896  00C330  6F8A               	movwf	__add_item@buffer& (0+255),b
 11897  00C332  0E08               	movlw	high _ConfigFile_buffer
 11898  00C334  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11899  00C336  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11900  00C338  EC0A  F08D         	call	__add_item	;wreg free
 11901  00C33C  0100               	movlb	0	; () banked
 11902  00C33E  6FE3               	movwf	??_configFile_write& (0+255),b
 11903  00C340  51E3               	movf	??_configFile_write& (0+255),w,b
 11904  00C342  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11905  00C344  0E00               	movlw	0
 11906  00C346  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11907  00C348  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11908  00C34A  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11909                           
 11910                           ; BSR set to: 0
 11911                           ;config_file.c: 325: file_size += _add_item(&initial_speed_arc_string, (int32_t) config.
      +                          initial_speed_arc, &ConfigFile_buffer[file_size]);
 11912  00C34C  0E4C               	movlw	low _initial_speed_arc_string
 11913  00C34E  6F84               	movwf	__add_item@item_string& (0+255),b
 11914  00C350  0EA2               	movlw	high _initial_speed_arc_string
 11915  00C352  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11916  00C354  C1A2  F086         	movff	_config+13,__add_item@value
 11917  00C358  C1A3  F087         	movff	_config+14,__add_item@value+1
 11918  00C35C  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11919  00C35E  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11920  00C360  0E00               	movlw	low _ConfigFile_buffer
 11921  00C362  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11922  00C364  6F8A               	movwf	__add_item@buffer& (0+255),b
 11923  00C366  0E08               	movlw	high _ConfigFile_buffer
 11924  00C368  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11925  00C36A  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11926  00C36C  EC0A  F08D         	call	__add_item	;wreg free
 11927  00C370  0100               	movlb	0	; () banked
 11928  00C372  6FE3               	movwf	??_configFile_write& (0+255),b
 11929  00C374  51E3               	movf	??_configFile_write& (0+255),w,b
 11930  00C376  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11931  00C378  0E00               	movlw	0
 11932  00C37A  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11933  00C37C  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11934  00C37E  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11935                           
 11936                           ; BSR set to: 0
 11937                           ;config_file.c: 326: file_size += _add_item(&maximum_speed_arc_string, (int32_t) config.
      +                          maximum_speed_arc, &ConfigFile_buffer[file_size]);
 11938  00C380  0E3A               	movlw	low _maximum_speed_arc_string
 11939  00C382  6F84               	movwf	__add_item@item_string& (0+255),b
 11940  00C384  0EA2               	movlw	high _maximum_speed_arc_string
 11941  00C386  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11942  00C388  C1A4  F086         	movff	_config+15,__add_item@value
 11943  00C38C  C1A5  F087         	movff	_config+16,__add_item@value+1
 11944  00C390  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11945  00C392  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11946  00C394  0E00               	movlw	low _ConfigFile_buffer
 11947  00C396  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11948  00C398  6F8A               	movwf	__add_item@buffer& (0+255),b
 11949  00C39A  0E08               	movlw	high _ConfigFile_buffer
 11950  00C39C  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11951  00C39E  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11952  00C3A0  EC0A  F08D         	call	__add_item	;wreg free
 11953  00C3A4  0100               	movlb	0	; () banked
 11954  00C3A6  6FE3               	movwf	??_configFile_write& (0+255),b
 11955  00C3A8  51E3               	movf	??_configFile_write& (0+255),w,b
 11956  00C3AA  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11957  00C3AC  0E00               	movlw	0
 11958  00C3AE  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11959  00C3B0  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11960  00C3B2  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11961                           
 11962                           ; BSR set to: 0
 11963                           ;config_file.c: 327: file_size += _add_item(&initial_speed_manual_string, (int32_t) conf
      +                          ig.initial_speed_manual, &ConfigFile_buffer[file_size]);
 11964  00C3B4  0EFD               	movlw	low _initial_speed_manual_string
 11965  00C3B6  6F84               	movwf	__add_item@item_string& (0+255),b
 11966  00C3B8  0EA1               	movlw	high _initial_speed_manual_string
 11967  00C3BA  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11968  00C3BC  C1A6  F086         	movff	_config+17,__add_item@value
 11969  00C3C0  C1A7  F087         	movff	_config+18,__add_item@value+1
 11970  00C3C4  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11971  00C3C6  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11972  00C3C8  0E00               	movlw	low _ConfigFile_buffer
 11973  00C3CA  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11974  00C3CC  6F8A               	movwf	__add_item@buffer& (0+255),b
 11975  00C3CE  0E08               	movlw	high _ConfigFile_buffer
 11976  00C3D0  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11977  00C3D2  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11978  00C3D4  EC0A  F08D         	call	__add_item	;wreg free
 11979  00C3D8  0100               	movlb	0	; () banked
 11980  00C3DA  6FE3               	movwf	??_configFile_write& (0+255),b
 11981  00C3DC  51E3               	movf	??_configFile_write& (0+255),w,b
 11982  00C3DE  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11983  00C3E0  0E00               	movlw	0
 11984  00C3E2  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11985  00C3E4  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11986  00C3E6  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11987                           
 11988                           ; BSR set to: 0
 11989                           ;config_file.c: 328: file_size += _add_item(&maximum_speed_manual_string, (int32_t) conf
      +                          ig.maximum_speed_manual, &ConfigFile_buffer[file_size]);
 11990  00C3E8  0EE8               	movlw	low _maximum_speed_manual_string
 11991  00C3EA  6F84               	movwf	__add_item@item_string& (0+255),b
 11992  00C3EC  0EA1               	movlw	high _maximum_speed_manual_string
 11993  00C3EE  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11994  00C3F0  C1A8  F086         	movff	_config+19,__add_item@value
 11995  00C3F4  C1A9  F087         	movff	_config+20,__add_item@value+1
 11996  00C3F8  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11997  00C3FA  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11998  00C3FC  0E00               	movlw	low _ConfigFile_buffer
 11999  00C3FE  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12000  00C400  6F8A               	movwf	__add_item@buffer& (0+255),b
 12001  00C402  0E08               	movlw	high _ConfigFile_buffer
 12002  00C404  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12003  00C406  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12004  00C408  EC0A  F08D         	call	__add_item	;wreg free
 12005  00C40C  0100               	movlb	0	; () banked
 12006  00C40E  6FE3               	movwf	??_configFile_write& (0+255),b
 12007  00C410  51E3               	movf	??_configFile_write& (0+255),w,b
 12008  00C412  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12009  00C414  0E00               	movlw	0
 12010  00C416  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12011  00C418  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12012  00C41A  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12013                           
 12014                           ; BSR set to: 0
 12015                           ;config_file.c: 329: file_size += _add_item(&use_ccw_limit_string, (int32_t) config.use_
      +                          ccw_limit, &ConfigFile_buffer[file_size]);
 12016  00C41C  0E82               	movlw	low _use_ccw_limit_string
 12017  00C41E  6F84               	movwf	__add_item@item_string& (0+255),b
 12018  00C420  0EA2               	movlw	high _use_ccw_limit_string
 12019  00C422  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12020  00C424  0101               	movlb	1	; () banked
 12021  00C426  51B4               	movf	(_config+31)& (0+255),w,b
 12022  00C428  0100               	movlb	0	; () banked
 12023  00C42A  6F86               	movwf	__add_item@value& (0+255),b
 12024  00C42C  6B87               	clrf	(__add_item@value+1)& (0+255),b
 12025  00C42E  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12026  00C430  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12027  00C432  0E00               	movlw	low _ConfigFile_buffer
 12028  00C434  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12029  00C436  6F8A               	movwf	__add_item@buffer& (0+255),b
 12030  00C438  0E08               	movlw	high _ConfigFile_buffer
 12031  00C43A  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12032  00C43C  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12033  00C43E  EC0A  F08D         	call	__add_item	;wreg free
 12034  00C442  0100               	movlb	0	; () banked
 12035  00C444  6FE3               	movwf	??_configFile_write& (0+255),b
 12036  00C446  51E3               	movf	??_configFile_write& (0+255),w,b
 12037  00C448  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12038  00C44A  0E00               	movlw	0
 12039  00C44C  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12040  00C44E  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12041  00C450  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12042                           
 12043                           ; BSR set to: 0
 12044                           ;config_file.c: 330: file_size += _add_item(&ccw_limit_string, (int32_t) config.ccw_limi
      +                          t, &ConfigFile_buffer[file_size]);
 12045  00C452  0EC7               	movlw	low _ccw_limit_string
 12046  00C454  6F84               	movwf	__add_item@item_string& (0+255),b
 12047  00C456  0EA2               	movlw	high _ccw_limit_string
 12048  00C458  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12049  00C45A  C1B5  F086         	movff	_config+32,__add_item@value
 12050  00C45E  C1B6  F087         	movff	_config+33,__add_item@value+1
 12051  00C462  C1B7  F088         	movff	_config+34,__add_item@value+2
 12052  00C466  C1B8  F089         	movff	_config+35,__add_item@value+3
 12053  00C46A  0E00               	movlw	low _ConfigFile_buffer
 12054  00C46C  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12055  00C46E  6F8A               	movwf	__add_item@buffer& (0+255),b
 12056  00C470  0E08               	movlw	high _ConfigFile_buffer
 12057  00C472  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12058  00C474  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12059  00C476  EC0A  F08D         	call	__add_item	;wreg free
 12060  00C47A  0100               	movlb	0	; () banked
 12061  00C47C  6FE3               	movwf	??_configFile_write& (0+255),b
 12062  00C47E  51E3               	movf	??_configFile_write& (0+255),w,b
 12063  00C480  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12064  00C482  0E00               	movlw	0
 12065  00C484  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12066  00C486  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12067  00C488  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12068                           
 12069                           ; BSR set to: 0
 12070                           ;config_file.c: 331: file_size += _add_item(&use_cw_limit_string, (int32_t) config.use_c
      +                          w_limit, &ConfigFile_buffer[file_size]);
 12071  00C48A  0EBA               	movlw	low _use_cw_limit_string
 12072  00C48C  6F84               	movwf	__add_item@item_string& (0+255),b
 12073  00C48E  0EA2               	movlw	high _use_cw_limit_string
 12074  00C490  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12075  00C492  0101               	movlb	1	; () banked
 12076  00C494  51AB               	movf	(_config+22)& (0+255),w,b
 12077  00C496  0100               	movlb	0	; () banked
 12078  00C498  6F86               	movwf	__add_item@value& (0+255),b
 12079  00C49A  6B87               	clrf	(__add_item@value+1)& (0+255),b
 12080  00C49C  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12081  00C49E  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12082  00C4A0  0E00               	movlw	low _ConfigFile_buffer
 12083  00C4A2  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12084  00C4A4  6F8A               	movwf	__add_item@buffer& (0+255),b
 12085  00C4A6  0E08               	movlw	high _ConfigFile_buffer
 12086  00C4A8  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12087  00C4AA  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12088  00C4AC  EC0A  F08D         	call	__add_item	;wreg free
 12089  00C4B0  0100               	movlb	0	; () banked
 12090  00C4B2  6FE3               	movwf	??_configFile_write& (0+255),b
 12091  00C4B4  51E3               	movf	??_configFile_write& (0+255),w,b
 12092  00C4B6  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12093  00C4B8  0E00               	movlw	0
 12094  00C4BA  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12095  00C4BC  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12096  00C4BE  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12097                           
 12098                           ; BSR set to: 0
 12099                           ;config_file.c: 332: file_size += _add_item(&cw_limit_string, (int32_t) config.cw_limit,
      +                           &ConfigFile_buffer[file_size]);
 12100  00C4C0  0ED1               	movlw	low _cw_limit_string
 12101  00C4C2  6F84               	movwf	__add_item@item_string& (0+255),b
 12102  00C4C4  0EA2               	movlw	high _cw_limit_string
 12103  00C4C6  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12104  00C4C8  C1AC  F086         	movff	_config+23,__add_item@value
 12105  00C4CC  C1AD  F087         	movff	_config+24,__add_item@value+1
 12106  00C4D0  C1AE  F088         	movff	_config+25,__add_item@value+2
 12107  00C4D4  C1AF  F089         	movff	_config+26,__add_item@value+3
 12108  00C4D8  0E00               	movlw	low _ConfigFile_buffer
 12109  00C4DA  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12110  00C4DC  6F8A               	movwf	__add_item@buffer& (0+255),b
 12111  00C4DE  0E08               	movlw	high _ConfigFile_buffer
 12112  00C4E0  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12113  00C4E2  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12114  00C4E4  EC0A  F08D         	call	__add_item	;wreg free
 12115  00C4E8  0100               	movlb	0	; () banked
 12116  00C4EA  6FE3               	movwf	??_configFile_write& (0+255),b
 12117  00C4EC  51E3               	movf	??_configFile_write& (0+255),w,b
 12118  00C4EE  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12119  00C4F0  0E00               	movlw	0
 12120  00C4F2  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12121  00C4F4  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12122  00C4F6  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12123                           
 12124                           ; BSR set to: 0
 12125                           ;config_file.c: 333: file_size += _add_item(&beep_duration_string, (int32_t) config.beep
      +                          _duration, &ConfigFile_buffer[file_size]);
 12126  00C4F8  0E90               	movlw	low _beep_duration_string
 12127  00C4FA  6F84               	movwf	__add_item@item_string& (0+255),b
 12128  00C4FC  0EA2               	movlw	high _beep_duration_string
 12129  00C4FE  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12130  00C500  0101               	movlb	1	; () banked
 12131  00C502  51AA               	movf	(_config+21)& (0+255),w,b
 12132  00C504  0100               	movlb	0	; () banked
 12133  00C506  6F86               	movwf	__add_item@value& (0+255),b
 12134  00C508  6B87               	clrf	(__add_item@value+1)& (0+255),b
 12135  00C50A  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12136  00C50C  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12137  00C50E  0E00               	movlw	low _ConfigFile_buffer
 12138  00C510  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12139  00C512  6F8A               	movwf	__add_item@buffer& (0+255),b
 12140  00C514  0E08               	movlw	high _ConfigFile_buffer
 12141  00C516  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12142  00C518  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12143  00C51A  EC0A  F08D         	call	__add_item	;wreg free
 12144  00C51E  0100               	movlb	0	; () banked
 12145  00C520  6FE3               	movwf	??_configFile_write& (0+255),b
 12146  00C522  51E3               	movf	??_configFile_write& (0+255),w,b
 12147  00C524  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12148  00C526  0E00               	movlw	0
 12149  00C528  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12150  00C52A  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12151  00C52C  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12152                           
 12153                           ; BSR set to: 0
 12154                           ;config_file.c: 334: file_size += _add_item(&position_display_180_string, (int32_t) conf
      +                          ig.position_display_180, &ConfigFile_buffer[file_size]);
 12155  00C52E  0ED3               	movlw	low _position_display_180_string
 12156  00C530  6F84               	movwf	__add_item@item_string& (0+255),b
 12157  00C532  0EA1               	movlw	high _position_display_180_string
 12158  00C534  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12159  00C536  0101               	movlb	1	; () banked
 12160  00C538  51BD               	movf	(_config+40)& (0+255),w,b
 12161  00C53A  0100               	movlb	0	; () banked
 12162  00C53C  6F86               	movwf	__add_item@value& (0+255),b
 12163  00C53E  6B87               	clrf	(__add_item@value+1)& (0+255),b
 12164  00C540  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12165  00C542  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12166  00C544  0E00               	movlw	low _ConfigFile_buffer
 12167  00C546  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12168  00C548  6F8A               	movwf	__add_item@buffer& (0+255),b
 12169  00C54A  0E08               	movlw	high _ConfigFile_buffer
 12170  00C54C  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12171  00C54E  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12172  00C550  EC0A  F08D         	call	__add_item	;wreg free
 12173  00C554  0100               	movlb	0	; () banked
 12174  00C556  6FE3               	movwf	??_configFile_write& (0+255),b
 12175  00C558  51E3               	movf	??_configFile_write& (0+255),w,b
 12176  00C55A  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12177  00C55C  0E00               	movlw	0
 12178  00C55E  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12179  00C560  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12180  00C562  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12181                           
 12182                           ; BSR set to: 0
 12183                           ;config_file.c: 337: file_number = fat_find_file(&configFile_used_name, &configFile_used
      +                          _extention);
 12184  00C564  0ED0               	movlw	low _configFile_used_name
 12185  00C566  6F8B               	movwf	fat_find_file@name& (0+255),b
 12186  00C568  0E02               	movlw	high _configFile_used_name
 12187  00C56A  6F8C               	movwf	(fat_find_file@name+1)& (0+255),b
 12188  00C56C  0EE0               	movlw	low _configFile_used_extention
 12189  00C56E  6F8D               	movwf	fat_find_file@extension& (0+255),b
 12190  00C570  0E02               	movlw	high _configFile_used_extention
 12191  00C572  6F8E               	movwf	(fat_find_file@extension+1)& (0+255),b
 12192  00C574  EC6A  F08F         	call	_fat_find_file	;wreg free
 12193  00C578  0100               	movlb	0	; () banked
 12194  00C57A  6FE4               	movwf	configFile_write@file_number& (0+255),b
 12195                           
 12196                           ; BSR set to: 0
 12197                           ;config_file.c: 338: if(file_number==0xFF)
 12198  00C57C  29E4               	incf	configFile_write@file_number& (0+255),w,b
 12199  00C57E  A4D8               	btfss	status,2,c
 12200  00C580  D015               	goto	l3083
 12201                           
 12202                           ; BSR set to: 0
 12203                           ;config_file.c: 339: {;config_file.c: 340: file_number = fat_create_file(&configFile_use
      +                          d_name, &configFile_used_extention, file_size);
 12204  00C582  0ED0               	movlw	low _configFile_used_name
 12205  00C584  6FAC               	movwf	fat_create_file@name& (0+255),b
 12206  00C586  0E02               	movlw	high _configFile_used_name
 12207  00C588  6FAD               	movwf	(fat_create_file@name+1)& (0+255),b
 12208  00C58A  0EE0               	movlw	low _configFile_used_extention
 12209  00C58C  6FAE               	movwf	fat_create_file@extension& (0+255),b
 12210  00C58E  0E02               	movlw	high _configFile_used_extention
 12211  00C590  6FAF               	movwf	(fat_create_file@extension+1)& (0+255),b
 12212  00C592  C0E5  F0B0         	movff	configFile_write@file_size,fat_create_file@size
 12213  00C596  C0E6  F0B1         	movff	configFile_write@file_size+1,fat_create_file@size+1
 12214  00C59A  C0E7  F0B2         	movff	configFile_write@file_size+2,fat_create_file@size+2
 12215  00C59E  C0E8  F0B3         	movff	configFile_write@file_size+3,fat_create_file@size+3
 12216  00C5A2  EC1C  F082         	call	_fat_create_file	;wreg free
 12217  00C5A6  0100               	movlb	0	; () banked
 12218  00C5A8  6FE4               	movwf	configFile_write@file_number& (0+255),b
 12219                           
 12220                           ;config_file.c: 341: }
 12221  00C5AA  D00B               	goto	l3084
 12222  00C5AC                     l3083:
 12223                           
 12224                           ; BSR set to: 0
 12225                           ;config_file.c: 342: else;config_file.c: 343: {;config_file.c: 344: fat_resize_file(file
      +                          _number, file_size);
 12226                           
 12227                           ; BSR set to: 0
 12228  00C5AC  C0E5  F0AC         	movff	configFile_write@file_size,fat_resize_file@new_file_size
 12229  00C5B0  C0E6  F0AD         	movff	configFile_write@file_size+1,fat_resize_file@new_file_size+1
 12230  00C5B4  C0E7  F0AE         	movff	configFile_write@file_size+2,fat_resize_file@new_file_size+2
 12231  00C5B8  C0E8  F0AF         	movff	configFile_write@file_size+3,fat_resize_file@new_file_size+3
 12232  00C5BC  51E4               	movf	configFile_write@file_number& (0+255),w,b
 12233  00C5BE  EC8E  F08B         	call	_fat_resize_file
 12234  00C5C2                     l3084:
 12235                           
 12236                           ;config_file.c: 345: };config_file.c: 348: fat_modify_file(file_number, 0, file_size, &C
      +                          onfigFile_buffer[0]);
 12237  00C5C2  0E00               	movlw	0
 12238  00C5C4  0100               	movlb	0	; () banked
 12239  00C5C6  6FA1               	movwf	fat_modify_file@start_byte& (0+255),b
 12240  00C5C8  0E00               	movlw	0
 12241  00C5CA  6FA2               	movwf	(fat_modify_file@start_byte+1)& (0+255),b
 12242  00C5CC  0E00               	movlw	0
 12243  00C5CE  6FA3               	movwf	(fat_modify_file@start_byte+2)& (0+255),b
 12244  00C5D0  0E00               	movlw	0
 12245  00C5D2  6FA4               	movwf	(fat_modify_file@start_byte+3)& (0+255),b
 12246  00C5D4  C0E5  F0A5         	movff	configFile_write@file_size,fat_modify_file@length
 12247  00C5D8  C0E6  F0A6         	movff	configFile_write@file_size+1,fat_modify_file@length+1
 12248  00C5DC  0E00               	movlw	low _ConfigFile_buffer
 12249  00C5DE  6FA7               	movwf	fat_modify_file@data& (0+255),b
 12250  00C5E0  0E08               	movlw	high _ConfigFile_buffer
 12251  00C5E2  6FA8               	movwf	(fat_modify_file@data+1)& (0+255),b
 12252  00C5E4  51E4               	movf	configFile_write@file_number& (0+255),w,b
 12253  00C5E6  EC1D  F070         	call	_fat_modify_file
 12254  00C5EA  0012               	return		;funcret
 12255  00C5EC                     __end_of_configFile_write:
 12256                           	opt stack 0
 12257                           tblptru	equ	0xFF8
 12258                           tblptrh	equ	0xFF7
 12259                           tblptrl	equ	0xFF6
 12260                           tablat	equ	0xFF5
 12261                           prodh	equ	0xFF4
 12262                           prodl	equ	0xFF3
 12263                           postinc0	equ	0xFEE
 12264                           wreg	equ	0xFE8
 12265                           postdec1	equ	0xFE5
 12266                           plusw1	equ	0xFE3
 12267                           fsr1h	equ	0xFE2
 12268                           fsr1l	equ	0xFE1
 12269                           indf2	equ	0xFDF
 12270                           postinc2	equ	0xFDE
 12271                           plusw2	equ	0xFDB
 12272                           fsr2h	equ	0xFDA
 12273                           fsr2l	equ	0xFD9
 12274                           status	equ	0xFD8
 12275                           
 12276 ;; *************** function _fat_resize_file *****************
 12277 ;; Defined at:
 12278 ;;		line 911 in file "fat16.c"
 12279 ;; Parameters:    Size  Location     Type
 12280 ;;  file_number     1    wreg     unsigned char 
 12281 ;;  new_file_siz    4   76[BANK0 ] unsigned long 
 12282 ;; Auto vars:     Size  Location     Type
 12283 ;;  file_number     1   90[BANK0 ] unsigned char 
 12284 ;;  root           32   91[BANK0 ] struct .
 12285 ;;  first_cluste    2   88[BANK0 ] unsigned int 
 12286 ;;  new_number_o    2   86[BANK0 ] unsigned int 
 12287 ;;  old_number_o    2   84[BANK0 ] unsigned int 
 12288 ;; Return value:  Size  Location     Type
 12289 ;;                  1    wreg      unsigned char 
 12290 ;; Registers used:
 12291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12292 ;; Tracked objects:
 12293 ;;		On entry : 0/0
 12294 ;;		On exit  : 0/0
 12295 ;;		Unchanged: 0/0
 12296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12297 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12298 ;;      Locals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12299 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12300 ;;      Totals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12301 ;;Total ram usage:       47 bytes
 12302 ;; Hardware stack levels used:    1
 12303 ;; Hardware stack levels required when called:   17
 12304 ;; This function calls:
 12305 ;;		__make_cluster_chain
 12306 ;;		__root_is_available
 12307 ;;		__write_root
 12308 ;;		_fat_get_file_information
 12309 ;; This function is called by:
 12310 ;;		_configFile_write
 12311 ;;		_fat_append_to_file
 12312 ;; This function uses a non-reentrant model
 12313 ;;
 12314                           
 12315                           	psect	text38
 12316  01171C                     __ptext38:
 12317                           	opt stack 0
 12318  01171C                     _fat_resize_file:
 12319                           	opt stack 11
 12320                           
 12321                           ;incstack = 0
 12322                           ;fat_resize_file@file_number stored from wreg
 12323  01171C  0100               	movlb	0	; () banked
 12324  01171E  6FBA               	movwf	fat_resize_file@file_number& (0+255),b
 12325                           
 12326                           ;fat16.c: 913: rootEntry_t root;;fat16.c: 914: uint16_t old_number_of_clusters;;fat16.c:
      +                           915: uint16_t new_number_of_clusters;;fat16.c: 916: uint16_t first_cluster;;fat16.c: 91
      +                          9: if(file_number>=64)
 12327  011720  0E3F               	movlw	63
 12328  011722  0100               	movlb	0	; () banked
 12329  011724  65BA               	cpfsgt	fat_resize_file@file_number& (0+255),b
 12330  011726  D002               	goto	l1919
 12331                           
 12332                           ; BSR set to: 0
 12333                           ;fat16.c: 920: {;fat16.c: 922: return 0xFF;
 12334  011728  0EFF               	movlw	255
 12335                           
 12336                           ; BSR set to: 0
 12337  01172A  0012               	return	
 12338  01172C                     l1919:
 12339                           
 12340                           ; BSR set to: 0
 12341                           ;fat16.c: 923: };fat16.c: 926: if(_root_is_available(file_number))
 12342                           
 12343                           ; BSR set to: 0
 12344  01172C  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 12345  01172E  EC0D  F0A3         	call	__root_is_available
 12346  011732  0900               	iorlw	0
 12347  011734  B4D8               	btfsc	status,2,c
 12348  011736  D002               	goto	l1921
 12349                           
 12350                           ;fat16.c: 927: {;fat16.c: 929: return 0xFE;
 12351  011738  0EFE               	movlw	254
 12352  01173A  0012               	return	
 12353  01173C                     l1921:
 12354                           
 12355                           ;fat16.c: 930: };fat16.c: 933: fat_get_file_information(file_number, &root);
 12356  01173C  0EBB               	movlw	low fat_resize_file@root
 12357  01173E  0100               	movlb	0	; () banked
 12358  011740  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 12359  011742  0E00               	movlw	high fat_resize_file@root
 12360  011744  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 12361  011746  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 12362  011748  EC06  F0A1         	call	_fat_get_file_information
 12363                           
 12364                           ;fat16.c: 936: old_number_of_clusters = (root.fileSize+512-1)>>9;
 12365  01174C  EE20  F0D7         	lfsr	2,fat_resize_file@root+28
 12366  011750  0EFF               	movlw	255
 12367  011752  24DE               	addwf	postinc2,w,c
 12368  011754  0100               	movlb	0	; () banked
 12369  011756  6FB0               	movwf	??_fat_resize_file& (0+255),b
 12370  011758  0E01               	movlw	1
 12371  01175A  20DE               	addwfc	postinc2,w,c
 12372  01175C  6FB1               	movwf	(??_fat_resize_file+1)& (0+255),b
 12373  01175E  0E00               	movlw	0
 12374  011760  20DE               	addwfc	postinc2,w,c
 12375  011762  6FB2               	movwf	(??_fat_resize_file+2)& (0+255),b
 12376  011764  0E00               	movlw	0
 12377  011766  20DE               	addwfc	postinc2,w,c
 12378  011768  6FB3               	movwf	(??_fat_resize_file+3)& (0+255),b
 12379  01176A  0E0A               	movlw	10
 12380  01176C  D005               	goto	u15420
 12381  01176E                     u15425:
 12382  01176E  90D8               	bcf	status,0,c
 12383  011770  33B3               	rrcf	(??_fat_resize_file+3)& (0+255),f,b
 12384  011772  33B2               	rrcf	(??_fat_resize_file+2)& (0+255),f,b
 12385  011774  33B1               	rrcf	(??_fat_resize_file+1)& (0+255),f,b
 12386  011776  33B0               	rrcf	??_fat_resize_file& (0+255),f,b
 12387  011778                     u15420:
 12388  011778  2EE8               	decfsz	wreg,f,c
 12389  01177A  D7F9               	goto	u15425
 12390  01177C  C0B0  F0B4         	movff	??_fat_resize_file,fat_resize_file@old_number_of_clusters
 12391  011780  C0B1  F0B5         	movff	??_fat_resize_file+1,fat_resize_file@old_number_of_clusters+1
 12392                           
 12393                           ; BSR set to: 0
 12394                           ;fat16.c: 937: new_number_of_clusters = (new_file_size+512-1)>>9;
 12395  011784  0EFF               	movlw	255
 12396  011786  25AC               	addwf	fat_resize_file@new_file_size& (0+255),w,b
 12397  011788  6FB0               	movwf	??_fat_resize_file& (0+255),b
 12398  01178A  0E01               	movlw	1
 12399  01178C  21AD               	addwfc	(fat_resize_file@new_file_size+1)& (0+255),w,b
 12400  01178E  6FB1               	movwf	(??_fat_resize_file+1)& (0+255),b
 12401  011790  0E00               	movlw	0
 12402  011792  21AE               	addwfc	(fat_resize_file@new_file_size+2)& (0+255),w,b
 12403  011794  6FB2               	movwf	(??_fat_resize_file+2)& (0+255),b
 12404  011796  0E00               	movlw	0
 12405  011798  21AF               	addwfc	(fat_resize_file@new_file_size+3)& (0+255),w,b
 12406  01179A  6FB3               	movwf	(??_fat_resize_file+3)& (0+255),b
 12407  01179C  0E0A               	movlw	10
 12408  01179E  D005               	goto	u15430
 12409  0117A0                     u15435:
 12410  0117A0  90D8               	bcf	status,0,c
 12411  0117A2  33B3               	rrcf	(??_fat_resize_file+3)& (0+255),f,b
 12412  0117A4  33B2               	rrcf	(??_fat_resize_file+2)& (0+255),f,b
 12413  0117A6  33B1               	rrcf	(??_fat_resize_file+1)& (0+255),f,b
 12414  0117A8  33B0               	rrcf	??_fat_resize_file& (0+255),f,b
 12415  0117AA                     u15430:
 12416  0117AA  2EE8               	decfsz	wreg,f,c
 12417  0117AC  D7F9               	goto	u15435
 12418  0117AE  C0B0  F0B6         	movff	??_fat_resize_file,fat_resize_file@new_number_of_clusters
 12419  0117B2  C0B1  F0B7         	movff	??_fat_resize_file+1,fat_resize_file@new_number_of_clusters+1
 12420                           
 12421                           ; BSR set to: 0
 12422                           ;fat16.c: 940: if(old_number_of_clusters!=new_number_of_clusters)
 12423  0117B6  51B6               	movf	fat_resize_file@new_number_of_clusters& (0+255),w,b
 12424  0117B8  19B4               	xorwf	fat_resize_file@old_number_of_clusters& (0+255),w,b
 12425  0117BA  E104               	bnz	u15440
 12426  0117BC  51B7               	movf	(fat_resize_file@new_number_of_clusters+1)& (0+255),w,b
 12427  0117BE  19B5               	xorwf	(fat_resize_file@old_number_of_clusters+1)& (0+255),w,b
 12428  0117C0  B4D8               	btfsc	status,2,c
 12429  0117C2  D01A               	goto	l1922
 12430  0117C4                     u15440:
 12431                           
 12432                           ; BSR set to: 0
 12433                           ;fat16.c: 941: {;fat16.c: 942: first_cluster = _make_cluster_chain(root.firstCluster, ne
      +                          w_number_of_clusters);
 12434  0117C4  C0D5  F095         	movff	fat_resize_file@root+26,__make_cluster_chain@first_cluster
 12435  0117C8  C0D6  F096         	movff	fat_resize_file@root+27,__make_cluster_chain@first_cluster+1
 12436  0117CC  C0B6  F097         	movff	fat_resize_file@new_number_of_clusters,__make_cluster_chain@number_of_clusters
 12437  0117D0  C0B7  F098         	movff	fat_resize_file@new_number_of_clusters+1,__make_cluster_chain@number_of_clusters+
      +                          1
 12438  0117D4  ECAA  F069         	call	__make_cluster_chain	;wreg free
 12439  0117D8  C095  F0B8         	movff	?__make_cluster_chain,fat_resize_file@first_cluster
 12440  0117DC  C096  F0B9         	movff	?__make_cluster_chain+1,fat_resize_file@first_cluster+1
 12441                           
 12442                           ;fat16.c: 943: if(first_cluster==0xFFFF)
 12443  0117E0  0100               	movlb	0	; () banked
 12444  0117E2  29B8               	incf	fat_resize_file@first_cluster& (0+255),w,b
 12445  0117E4  E105               	bnz	l1923
 12446  0117E6  29B9               	incf	(fat_resize_file@first_cluster+1)& (0+255),w,b
 12447  0117E8  A4D8               	btfss	status,2,c
 12448  0117EA  D002               	goto	l1923
 12449                           
 12450                           ; BSR set to: 0
 12451                           ;fat16.c: 944: {;fat16.c: 946: return 0xFD;
 12452  0117EC  0EFD               	movlw	253
 12453                           
 12454                           ; BSR set to: 0
 12455  0117EE  0012               	return	
 12456  0117F0                     l1923:
 12457                           
 12458                           ; BSR set to: 0
 12459                           ;fat16.c: 947: };fat16.c: 950: root.firstCluster = first_cluster;
 12460  0117F0  C0B8  F0D5         	movff	fat_resize_file@first_cluster,fat_resize_file@root+26
 12461  0117F4  C0B9  F0D6         	movff	fat_resize_file@first_cluster+1,fat_resize_file@root+27
 12462  0117F8                     l1922:
 12463                           
 12464                           ; BSR set to: 0
 12465                           ;fat16.c: 951: };fat16.c: 954: root.fileSize = new_file_size;
 12466  0117F8  C0AC  F0D7         	movff	fat_resize_file@new_file_size,fat_resize_file@root+28
 12467  0117FC  C0AD  F0D8         	movff	fat_resize_file@new_file_size+1,fat_resize_file@root+29
 12468  011800  C0AE  F0D9         	movff	fat_resize_file@new_file_size+2,fat_resize_file@root+30
 12469  011804  C0AF  F0DA         	movff	fat_resize_file@new_file_size+3,fat_resize_file@root+31
 12470                           
 12471                           ; BSR set to: 0
 12472                           ;fat16.c: 957: _write_root(file_number, &root);
 12473  011808  0EBB               	movlw	low fat_resize_file@root
 12474  01180A  6F88               	movwf	__write_root@data& (0+255),b
 12475  01180C  0E00               	movlw	high fat_resize_file@root
 12476  01180E  6F89               	movwf	(__write_root@data+1)& (0+255),b
 12477  011810  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 12478  011812  ECAA  F0A9         	call	__write_root
 12479                           
 12480                           ;fat16.c: 960: return 0x00;
 12481  011816  0E00               	movlw	0
 12482  011818  0012               	return	
 12483  01181A                     __end_of_fat_resize_file:
 12484                           	opt stack 0
 12485                           tblptru	equ	0xFF8
 12486                           tblptrh	equ	0xFF7
 12487                           tblptrl	equ	0xFF6
 12488                           tablat	equ	0xFF5
 12489                           prodh	equ	0xFF4
 12490                           prodl	equ	0xFF3
 12491                           postinc0	equ	0xFEE
 12492                           wreg	equ	0xFE8
 12493                           postdec1	equ	0xFE5
 12494                           plusw1	equ	0xFE3
 12495                           fsr1h	equ	0xFE2
 12496                           fsr1l	equ	0xFE1
 12497                           indf2	equ	0xFDF
 12498                           postinc2	equ	0xFDE
 12499                           plusw2	equ	0xFDB
 12500                           fsr2h	equ	0xFDA
 12501                           fsr2l	equ	0xFD9
 12502                           status	equ	0xFD8
 12503                           
 12504 ;; *************** function _fat_modify_file *****************
 12505 ;; Defined at:
 12506 ;;		line 963 in file "fat16.c"
 12507 ;; Parameters:    Size  Location     Type
 12508 ;;  file_number     1    wreg     unsigned char 
 12509 ;;  start_byte      4   65[BANK0 ] unsigned long 
 12510 ;;  length          2   69[BANK0 ] unsigned int 
 12511 ;;  data            2   71[BANK0 ] PTR unsigned char 
 12512 ;;		 -> ConfigFile_buffer(512), 
 12513 ;; Auto vars:     Size  Location     Type
 12514 ;;  file_number     1   87[BANK0 ] unsigned char 
 12515 ;;  root           32   99[BANK0 ] struct .
 12516 ;;  position        4   95[BANK0 ] unsigned long 
 12517 ;;  number_of_by    2   93[BANK0 ] unsigned int 
 12518 ;;  offset          2   91[BANK0 ] unsigned int 
 12519 ;;  cluster         2   89[BANK0 ] unsigned int 
 12520 ;;  sector          2   85[BANK0 ] unsigned int 
 12521 ;;  return_code     1   88[BANK0 ] unsigned char 
 12522 ;; Return value:  Size  Location     Type
 12523 ;;                  1    wreg      unsigned char 
 12524 ;; Registers used:
 12525 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12526 ;; Tracked objects:
 12527 ;;		On entry : 0/0
 12528 ;;		On exit  : 0/0
 12529 ;;		Unchanged: 0/0
 12530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12531 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12532 ;;      Locals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12533 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12534 ;;      Totals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12535 ;;Total ram usage:       66 bytes
 12536 ;; Hardware stack levels used:    1
 12537 ;; Hardware stack levels required when called:   17
 12538 ;; This function calls:
 12539 ;;		__data_sector_from_cluster
 12540 ;;		__find_nth_cluster
 12541 ;;		__read_fat
 12542 ;;		_fat_get_file_information
 12543 ;;		_flash_partial_write
 12544 ;; This function is called by:
 12545 ;;		_configFile_write
 12546 ;;		_fat_append_to_file
 12547 ;; This function uses a non-reentrant model
 12548 ;;
 12549                           
 12550                           	psect	text39
 12551  00E03A                     __ptext39:
 12552                           	opt stack 0
 12553  00E03A                     _fat_modify_file:
 12554                           	opt stack 11
 12555                           
 12556                           ;incstack = 0
 12557                           ;fat_modify_file@file_number stored from wreg
 12558  00E03A  0100               	movlb	0	; () banked
 12559  00E03C  6FB7               	movwf	fat_modify_file@file_number& (0+255),b
 12560                           
 12561                           ;fat16.c: 965: rootEntry_t root;;fat16.c: 966: uint16_t cluster;;fat16.c: 967: uint32_t 
      +                          position;;fat16.c: 968: uint16_t offset;;fat16.c: 969: uint16_t sector;;fat16.c: 970: ui
      +                          nt16_t number_of_bytes;;fat16.c: 971: uint8_t return_code;;fat16.c: 974: return_code = f
      +                          at_get_file_information(file_number, &root);
 12562  00E03E  0EC3               	movlw	low fat_modify_file@root
 12563  00E040  0100               	movlb	0	; () banked
 12564  00E042  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 12565  00E044  0E00               	movlw	high fat_modify_file@root
 12566  00E046  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 12567  00E048  51B7               	movf	fat_modify_file@file_number& (0+255),w,b
 12568  00E04A  EC06  F0A1         	call	_fat_get_file_information
 12569  00E04E  0100               	movlb	0	; () banked
 12570  00E050  6FB8               	movwf	fat_modify_file@return_code& (0+255),b
 12571                           
 12572                           ; BSR set to: 0
 12573                           ;fat16.c: 975: if(return_code!=0x00)
 12574  00E052  51B8               	movf	fat_modify_file@return_code& (0+255),w,b
 12575  00E054  A4D8               	btfss	status,2,c
 12576  00E056  0012               	return	
 12577                           
 12578                           ; BSR set to: 0
 12579                           ;fat16.c: 979: };fat16.c: 982: if(start_byte>root.fileSize)
 12580                           
 12581                           ; BSR set to: 0
 12582                           
 12583                           ; BSR set to: 0
 12584                           ;fat16.c: 976: {;fat16.c: 978: return return_code;;	Return value of _fat_modify_file is 
      +                          never used
 12585  00E058  51A1               	movf	fat_modify_file@start_byte& (0+255),w,b
 12586  00E05A  5DDF               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 12587  00E05C  51A2               	movf	(fat_modify_file@start_byte+1)& (0+255),w,b
 12588  00E05E  59E0               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 12589  00E060  51A3               	movf	(fat_modify_file@start_byte+2)& (0+255),w,b
 12590  00E062  59E1               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 12591  00E064  51A4               	movf	(fat_modify_file@start_byte+3)& (0+255),w,b
 12592  00E066  59E2               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 12593  00E068  A0D8               	btfss	status,0,c
 12594  00E06A  0012               	return	
 12595                           
 12596                           ; BSR set to: 0
 12597                           ;fat16.c: 986: };fat16.c: 988: if((start_byte+length) > root.fileSize)
 12598                           
 12599                           ; BSR set to: 0
 12600                           
 12601                           ; BSR set to: 0
 12602                           ;fat16.c: 983: {;fat16.c: 985: return 0xF0;;	Return value of _fat_modify_file is never u
      +                          sed
 12603  00E06C  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12604  00E06E  25A1               	addwf	fat_modify_file@start_byte& (0+255),w,b
 12605  00E070  6FA9               	movwf	??_fat_modify_file& (0+255),b
 12606  00E072  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12607  00E074  21A2               	addwfc	(fat_modify_file@start_byte+1)& (0+255),w,b
 12608  00E076  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 12609  00E078  0E00               	movlw	0
 12610  00E07A  21A3               	addwfc	(fat_modify_file@start_byte+2)& (0+255),w,b
 12611  00E07C  6FAB               	movwf	(??_fat_modify_file+2)& (0+255),b
 12612  00E07E  0E00               	movlw	0
 12613  00E080  21A4               	addwfc	(fat_modify_file@start_byte+3)& (0+255),w,b
 12614  00E082  6FAC               	movwf	(??_fat_modify_file+3)& (0+255),b
 12615  00E084  51A9               	movf	??_fat_modify_file& (0+255),w,b
 12616  00E086  5DDF               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 12617  00E088  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 12618  00E08A  59E0               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 12619  00E08C  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 12620  00E08E  59E1               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 12621  00E090  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 12622  00E092  59E2               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 12623  00E094  B0D8               	btfsc	status,0,c
 12624  00E096  D00E               	goto	l1929
 12625                           
 12626                           ; BSR set to: 0
 12627                           ;fat16.c: 989: {;fat16.c: 991: length = root.fileSize - start_byte;
 12628  00E098  C0A1  F0A9         	movff	fat_modify_file@start_byte,??_fat_modify_file
 12629  00E09C  C0A2  F0AA         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 12630  00E0A0  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12631  00E0A2  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12632  00E0A4  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12633  00E0A6  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12634  00E0A8  51DF               	movf	(fat_modify_file@root+28)& (0+255),w,b
 12635  00E0AA  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12636  00E0AC  6FA5               	movwf	fat_modify_file@length& (0+255),b
 12637  00E0AE  51E0               	movf	(fat_modify_file@root+29)& (0+255),w,b
 12638  00E0B0  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12639  00E0B2  6FA6               	movwf	(fat_modify_file@length+1)& (0+255),b
 12640  00E0B4                     l1929:
 12641                           
 12642                           ; BSR set to: 0
 12643                           ;fat16.c: 992: };fat16.c: 995: cluster = _find_nth_cluster(root.firstCluster, (start_byt
      +                          e>>9));
 12644                           
 12645                           ; BSR set to: 0
 12646  00E0B4  C0DD  F097         	movff	fat_modify_file@root+26,__find_nth_cluster@cluster
 12647  00E0B8  C0DE  F098         	movff	fat_modify_file@root+27,__find_nth_cluster@cluster+1
 12648  00E0BC  C0A1  F0A9         	movff	fat_modify_file@start_byte,??_fat_modify_file
 12649  00E0C0  C0A2  F0AA         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 12650  00E0C4  C0A3  F0AB         	movff	fat_modify_file@start_byte+2,??_fat_modify_file+2
 12651  00E0C8  C0A4  F0AC         	movff	fat_modify_file@start_byte+3,??_fat_modify_file+3
 12652  00E0CC  0E0A               	movlw	10
 12653  00E0CE  D005               	goto	u15490
 12654  00E0D0                     u15495:
 12655  00E0D0  90D8               	bcf	status,0,c
 12656  00E0D2  33AC               	rrcf	(??_fat_modify_file+3)& (0+255),f,b
 12657  00E0D4  33AB               	rrcf	(??_fat_modify_file+2)& (0+255),f,b
 12658  00E0D6  33AA               	rrcf	(??_fat_modify_file+1)& (0+255),f,b
 12659  00E0D8  33A9               	rrcf	??_fat_modify_file& (0+255),f,b
 12660  00E0DA                     u15490:
 12661  00E0DA  2EE8               	decfsz	wreg,f,c
 12662  00E0DC  D7F9               	goto	u15495
 12663  00E0DE  C0A9  F099         	movff	??_fat_modify_file,__find_nth_cluster@n
 12664  00E0E2  C0AA  F09A         	movff	??_fat_modify_file+1,__find_nth_cluster@n+1
 12665  00E0E6  ECDB  F09A         	call	__find_nth_cluster	;wreg free
 12666  00E0EA  C097  F0B9         	movff	?__find_nth_cluster,fat_modify_file@cluster
 12667  00E0EE  C098  F0BA         	movff	?__find_nth_cluster+1,fat_modify_file@cluster+1
 12668                           
 12669                           ;fat16.c: 998: position = start_byte & 0xFFFFFE00;
 12670  00E0F2  0E00               	movlw	0
 12671  00E0F4  0100               	movlb	0	; () banked
 12672  00E0F6  15A1               	andwf	fat_modify_file@start_byte& (0+255),w,b
 12673  00E0F8  6FBF               	movwf	fat_modify_file@position& (0+255),b
 12674  00E0FA  0EFE               	movlw	254
 12675  00E0FC  15A2               	andwf	(fat_modify_file@start_byte+1)& (0+255),w,b
 12676  00E0FE  6FC0               	movwf	(fat_modify_file@position+1)& (0+255),b
 12677  00E100  0EFF               	movlw	255
 12678  00E102  15A3               	andwf	(fat_modify_file@start_byte+2)& (0+255),w,b
 12679  00E104  6FC1               	movwf	(fat_modify_file@position+2)& (0+255),b
 12680  00E106  0EFF               	movlw	255
 12681  00E108  15A4               	andwf	(fat_modify_file@start_byte+3)& (0+255),w,b
 12682  00E10A  6FC2               	movwf	(fat_modify_file@position+3)& (0+255),b
 12683                           
 12684                           ; BSR set to: 0
 12685                           ;fat16.c: 1001: offset = (uint16_t) (start_byte-position);
 12686  00E10C  C0BF  F0A9         	movff	fat_modify_file@position,??_fat_modify_file
 12687  00E110  C0C0  F0AA         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 12688  00E114  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12689  00E116  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12690  00E118  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12691  00E11A  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12692  00E11C  51A1               	movf	fat_modify_file@start_byte& (0+255),w,b
 12693  00E11E  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12694  00E120  6FBB               	movwf	fat_modify_file@offset& (0+255),b
 12695  00E122  51A2               	movf	(fat_modify_file@start_byte+1)& (0+255),w,b
 12696  00E124  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12697  00E126  6FBC               	movwf	(fat_modify_file@offset+1)& (0+255),b
 12698                           
 12699                           ; BSR set to: 0
 12700                           ;fat16.c: 1004: position = 0;
 12701  00E128  0E00               	movlw	0
 12702  00E12A  6FBF               	movwf	fat_modify_file@position& (0+255),b
 12703  00E12C  0E00               	movlw	0
 12704  00E12E  6FC0               	movwf	(fat_modify_file@position+1)& (0+255),b
 12705  00E130  0E00               	movlw	0
 12706  00E132  6FC1               	movwf	(fat_modify_file@position+2)& (0+255),b
 12707  00E134  0E00               	movlw	0
 12708  00E136  6FC2               	movwf	(fat_modify_file@position+3)& (0+255),b
 12709                           
 12710                           ;fat16.c: 1005: while(position < length)
 12711  00E138  D089               	goto	l1930
 12712  00E13A                     
 12713                           ; BSR set to: 0
 12714                           ;fat16.c: 1006: {;fat16.c: 1008: if(offset==512)
 12715                           
 12716                           ; BSR set to: 0
 12717  00E13A  0E02               	movlw	2
 12718  00E13C  19BC               	xorwf	(fat_modify_file@offset+1)& (0+255),w,b
 12719  00E13E  11BB               	iorwf	fat_modify_file@offset& (0+255),w,b
 12720  00E140  A4D8               	btfss	status,2,c
 12721  00E142  D00F               	goto	l1932
 12722                           
 12723                           ; BSR set to: 0
 12724                           ;fat16.c: 1009: {;fat16.c: 1011: cluster = _read_fat(cluster);
 12725  00E144  C0B9  F08F         	movff	fat_modify_file@cluster,__read_fat@cluster
 12726  00E148  C0BA  F090         	movff	fat_modify_file@cluster+1,__read_fat@cluster+1
 12727  00E14C  EC3D  F0A6         	call	__read_fat	;wreg free
 12728  00E150  C08F  F0B9         	movff	?__read_fat,fat_modify_file@cluster
 12729  00E154  C090  F0BA         	movff	?__read_fat+1,fat_modify_file@cluster+1
 12730                           
 12731                           ;fat16.c: 1013: offset = 0;
 12732  00E158  0E00               	movlw	0
 12733  00E15A  0100               	movlb	0	; () banked
 12734  00E15C  6FBC               	movwf	(fat_modify_file@offset+1)& (0+255),b
 12735  00E15E  0E00               	movlw	0
 12736  00E160  6FBB               	movwf	fat_modify_file@offset& (0+255),b
 12737  00E162                     l1932:
 12738                           
 12739                           ; BSR set to: 0
 12740                           ;fat16.c: 1014: };fat16.c: 1017: sector = _data_sector_from_cluster(cluster);
 12741                           
 12742                           ; BSR set to: 0
 12743  00E162  C0B9  F060         	movff	fat_modify_file@cluster,__data_sector_from_cluster@fat_cluster
 12744  00E166  C0BA  F061         	movff	fat_modify_file@cluster+1,__data_sector_from_cluster@fat_cluster+1
 12745  00E16A  EC59  F0AF         	call	__data_sector_from_cluster	;wreg free
 12746  00E16E  C060  F0B5         	movff	?__data_sector_from_cluster,fat_modify_file@sector
 12747  00E172  C061  F0B6         	movff	?__data_sector_from_cluster+1,fat_modify_file@sector+1
 12748                           
 12749                           ;fat16.c: 1020: number_of_bytes = 512 - offset;
 12750  00E176  C0BB  F0A9         	movff	fat_modify_file@offset,??_fat_modify_file
 12751  00E17A  C0BC  F0AA         	movff	fat_modify_file@offset+1,??_fat_modify_file+1
 12752  00E17E  0100               	movlb	0	; () banked
 12753  00E180  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12754  00E182  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12755  00E184  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12756  00E186  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12757  00E188  0E00               	movlw	0
 12758  00E18A  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12759  00E18C  6FBD               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 12760  00E18E  0E02               	movlw	2
 12761  00E190  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12762  00E192  6FBE               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 12763                           
 12764                           ; BSR set to: 0
 12765                           ;fat16.c: 1021: if(number_of_bytes > (length-position))
 12766  00E194  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 12767  00E196  6FA9               	movwf	??_fat_modify_file& (0+255),b
 12768  00E198  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 12769  00E19A  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 12770  00E19C  6BAB               	clrf	(??_fat_modify_file+2)& (0+255),b
 12771  00E19E  6BAC               	clrf	(??_fat_modify_file+3)& (0+255),b
 12772  00E1A0  C0BF  F0AD         	movff	fat_modify_file@position,??_fat_modify_file+4
 12773  00E1A4  C0C0  F0AE         	movff	fat_modify_file@position+1,??_fat_modify_file+5
 12774  00E1A8  C0C1  F0AF         	movff	fat_modify_file@position+2,??_fat_modify_file+6
 12775  00E1AC  C0C2  F0B0         	movff	fat_modify_file@position+3,??_fat_modify_file+7
 12776  00E1B0  1FAD               	comf	(??_fat_modify_file+4)& (0+255),f,b
 12777  00E1B2  1FAE               	comf	(??_fat_modify_file+5)& (0+255),f,b
 12778  00E1B4  1FAF               	comf	(??_fat_modify_file+6)& (0+255),f,b
 12779  00E1B6  1FB0               	comf	(??_fat_modify_file+7)& (0+255),f,b
 12780  00E1B8  2BAD               	incf	(??_fat_modify_file+4)& (0+255),f,b
 12781  00E1BA  0E00               	movlw	0
 12782  00E1BC  23AE               	addwfc	(??_fat_modify_file+5)& (0+255),f,b
 12783  00E1BE  23AF               	addwfc	(??_fat_modify_file+6)& (0+255),f,b
 12784  00E1C0  23B0               	addwfc	(??_fat_modify_file+7)& (0+255),f,b
 12785  00E1C2  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12786  00E1C4  25AD               	addwf	(??_fat_modify_file+4)& (0+255),w,b
 12787  00E1C6  6FB1               	movwf	(??_fat_modify_file+8)& (0+255),b
 12788  00E1C8  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12789  00E1CA  21AE               	addwfc	(??_fat_modify_file+5)& (0+255),w,b
 12790  00E1CC  6FB2               	movwf	(??_fat_modify_file+9)& (0+255),b
 12791  00E1CE  0E00               	movlw	0
 12792  00E1D0  21AF               	addwfc	(??_fat_modify_file+6)& (0+255),w,b
 12793  00E1D2  6FB3               	movwf	(??_fat_modify_file+10)& (0+255),b
 12794  00E1D4  0E00               	movlw	0
 12795  00E1D6  21B0               	addwfc	(??_fat_modify_file+7)& (0+255),w,b
 12796  00E1D8  6FB4               	movwf	(??_fat_modify_file+11)& (0+255),b
 12797  00E1DA  51A9               	movf	??_fat_modify_file& (0+255),w,b
 12798  00E1DC  5DB1               	subwf	(??_fat_modify_file+8)& (0+255),w,b
 12799  00E1DE  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 12800  00E1E0  59B2               	subwfb	(??_fat_modify_file+9)& (0+255),w,b
 12801  00E1E2  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 12802  00E1E4  59B3               	subwfb	(??_fat_modify_file+10)& (0+255),w,b
 12803  00E1E6  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 12804  00E1E8  59B4               	subwfb	(??_fat_modify_file+11)& (0+255),w,b
 12805  00E1EA  B0D8               	btfsc	status,0,c
 12806  00E1EC  D00E               	goto	l1933
 12807                           
 12808                           ; BSR set to: 0
 12809                           ;fat16.c: 1022: {;fat16.c: 1023: number_of_bytes = length - position;
 12810  00E1EE  C0BF  F0A9         	movff	fat_modify_file@position,??_fat_modify_file
 12811  00E1F2  C0C0  F0AA         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 12812  00E1F6  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12813  00E1F8  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12814  00E1FA  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12815  00E1FC  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12816  00E1FE  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12817  00E200  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12818  00E202  6FBD               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 12819  00E204  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12820  00E206  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12821  00E208  6FBE               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 12822  00E20A                     l1933:
 12823                           
 12824                           ; BSR set to: 0
 12825                           ;fat16.c: 1024: };fat16.c: 1027: flash_partial_write(sector, offset, number_of_bytes, &d
      +                          ata[position]);
 12826                           
 12827                           ; BSR set to: 0
 12828  00E20A  C0B5  F07F         	movff	fat_modify_file@sector,flash_partial_write@page
 12829  00E20E  C0B6  F080         	movff	fat_modify_file@sector+1,flash_partial_write@page+1
 12830  00E212  C0BB  F081         	movff	fat_modify_file@offset,flash_partial_write@start
 12831  00E216  C0BC  F082         	movff	fat_modify_file@offset+1,flash_partial_write@start+1
 12832  00E21A  C0BD  F083         	movff	fat_modify_file@number_of_bytes,flash_partial_write@length
 12833  00E21E  C0BE  F084         	movff	fat_modify_file@number_of_bytes+1,flash_partial_write@length+1
 12834  00E222  51BF               	movf	fat_modify_file@position& (0+255),w,b
 12835  00E224  25A7               	addwf	fat_modify_file@data& (0+255),w,b
 12836  00E226  6F85               	movwf	flash_partial_write@data& (0+255),b
 12837  00E228  51C0               	movf	(fat_modify_file@position+1)& (0+255),w,b
 12838  00E22A  21A8               	addwfc	(fat_modify_file@data+1)& (0+255),w,b
 12839  00E22C  6F86               	movwf	(flash_partial_write@data+1)& (0+255),b
 12840  00E22E  ECD7  F0A2         	call	_flash_partial_write	;wreg free
 12841                           
 12842                           ;fat16.c: 1030: position += number_of_bytes;
 12843  00E232  0100               	movlb	0	; () banked
 12844  00E234  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 12845  00E236  27BF               	addwf	fat_modify_file@position& (0+255),f,b
 12846  00E238  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 12847  00E23A  23C0               	addwfc	(fat_modify_file@position+1)& (0+255),f,b
 12848  00E23C  0E00               	movlw	0
 12849  00E23E  23C1               	addwfc	(fat_modify_file@position+2)& (0+255),f,b
 12850  00E240  0E00               	movlw	0
 12851  00E242  23C2               	addwfc	(fat_modify_file@position+3)& (0+255),f,b
 12852                           
 12853                           ; BSR set to: 0
 12854                           ;fat16.c: 1031: offset += number_of_bytes;
 12855  00E244  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 12856  00E246  27BB               	addwf	fat_modify_file@offset& (0+255),f,b
 12857  00E248  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 12858  00E24A  23BC               	addwfc	(fat_modify_file@offset+1)& (0+255),f,b
 12859  00E24C                     l1930:
 12860                           
 12861                           ; BSR set to: 0
 12862                           
 12863                           ; BSR set to: 0
 12864  00E24C  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12865  00E24E  6FA9               	movwf	??_fat_modify_file& (0+255),b
 12866  00E250  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12867  00E252  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 12868  00E254  6BAB               	clrf	(??_fat_modify_file+2)& (0+255),b
 12869  00E256  6BAC               	clrf	(??_fat_modify_file+3)& (0+255),b
 12870  00E258  51A9               	movf	??_fat_modify_file& (0+255),w,b
 12871  00E25A  5DBF               	subwf	fat_modify_file@position& (0+255),w,b
 12872  00E25C  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 12873  00E25E  59C0               	subwfb	(fat_modify_file@position+1)& (0+255),w,b
 12874  00E260  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 12875  00E262  59C1               	subwfb	(fat_modify_file@position+2)& (0+255),w,b
 12876  00E264  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 12877  00E266  59C2               	subwfb	(fat_modify_file@position+3)& (0+255),w,b
 12878  00E268  B0D8               	btfsc	status,0,c
 12879  00E26A  0012               	return	
 12880  00E26C  D766               	goto	l1931
 12881  00E26E                     __end_of_fat_modify_file:
 12882                           	opt stack 0
 12883                           tblptru	equ	0xFF8
 12884                           tblptrh	equ	0xFF7
 12885                           tblptrl	equ	0xFF6
 12886                           tablat	equ	0xFF5
 12887                           prodh	equ	0xFF4
 12888                           prodl	equ	0xFF3
 12889                           postinc0	equ	0xFEE
 12890                           wreg	equ	0xFE8
 12891                           postdec1	equ	0xFE5
 12892                           plusw1	equ	0xFE3
 12893                           fsr1h	equ	0xFE2
 12894                           fsr1l	equ	0xFE1
 12895                           indf2	equ	0xFDF
 12896                           postinc2	equ	0xFDE
 12897                           plusw2	equ	0xFDB
 12898                           fsr2h	equ	0xFDA
 12899                           fsr2l	equ	0xFD9
 12900                           status	equ	0xFD8
 12901                           
 12902 ;; *************** function _fat_create_file *****************
 12903 ;; Defined at:
 12904 ;;		line 587 in file "fat16.c"
 12905 ;; Parameters:    Size  Location     Type
 12906 ;;  name            2   76[BANK0 ] PTR unsigned char 
 12907 ;;		 -> configFile_used_name(8), 
 12908 ;;  extension       2   78[BANK0 ] PTR unsigned char 
 12909 ;;		 -> configFile_used_extention(3), 
 12910 ;;  size            4   80[BANK0 ] unsigned long 
 12911 ;; Auto vars:     Size  Location     Type
 12912 ;;  root_entry     32   93[BANK0 ] struct .
 12913 ;;  first_cluste    2   90[BANK0 ] unsigned int 
 12914 ;;  number_of_cl    2   88[BANK0 ] unsigned int 
 12915 ;;  file_number     1   92[BANK0 ] unsigned char 
 12916 ;; Return value:  Size  Location     Type
 12917 ;;                  1    wreg      unsigned char 
 12918 ;; Registers used:
 12919 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12920 ;; Tracked objects:
 12921 ;;		On entry : 0/0
 12922 ;;		On exit  : 0/0
 12923 ;;		Unchanged: 0/0
 12924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12925 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12926 ;;      Locals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12927 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12928 ;;      Totals:         0      49       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12929 ;;Total ram usage:       49 bytes
 12930 ;; Hardware stack levels used:    1
 12931 ;; Hardware stack levels required when called:   17
 12932 ;; This function calls:
 12933 ;;		__get_available_root_entry
 12934 ;;		__get_date
 12935 ;;		__get_time
 12936 ;;		__make_cluster_chain
 12937 ;;		__write_root
 12938 ;;		_fat_find_file
 12939 ;;		_memcpy
 12940 ;; This function is called by:
 12941 ;;		_configFile_write
 12942 ;;		_fat_copy_file
 12943 ;; This function uses a non-reentrant model
 12944 ;;
 12945                           
 12946                           	psect	text40
 12947  010438                     __ptext40:
 12948                           	opt stack 0
 12949  010438                     _fat_create_file:
 12950                           	opt stack 11
 12951                           
 12952                           ;fat16.c: 589: rootEntry_t root_entry;;fat16.c: 590: uint8_t file_number;;fat16.c: 591: 
      +                          uint16_t number_of_clusters;;fat16.c: 592: uint16_t first_cluster;;fat16.c: 596: if(fat_
      +                          find_file(name, extension) != 0xFF)
 12953                           
 12954                           ; BSR set to: 0
 12955                           ;incstack = 0
 12956  010438  C0AC  F08B         	movff	fat_create_file@name,fat_find_file@name
 12957  01043C  C0AD  F08C         	movff	fat_create_file@name+1,fat_find_file@name+1
 12958  010440  C0AE  F08D         	movff	fat_create_file@extension,fat_find_file@extension
 12959  010444  C0AF  F08E         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 12960  010448  EC6A  F08F         	call	_fat_find_file	;wreg free
 12961  01044C  0AFF               	xorlw	255
 12962  01044E  B4D8               	btfsc	status,2,c
 12963  010450  D002               	goto	l1868
 12964                           
 12965                           ;fat16.c: 597: {;fat16.c: 600: return 0xFF;
 12966  010452  0EFF               	movlw	255
 12967  010454  0012               	return	
 12968  010456                     l1868:
 12969                           
 12970                           ;fat16.c: 601: };fat16.c: 605: file_number = _get_available_root_entry();
 12971  010456  ECAC  F0AD         	call	__get_available_root_entry	;wreg free
 12972  01045A  0100               	movlb	0	; () banked
 12973  01045C  6FBC               	movwf	fat_create_file@file_number& (0+255),b
 12974                           
 12975                           ; BSR set to: 0
 12976                           ;fat16.c: 606: if(file_number == 0xFF)
 12977  01045E  29BC               	incf	fat_create_file@file_number& (0+255),w,b
 12978  010460  A4D8               	btfss	status,2,c
 12979  010462  D002               	goto	l1870
 12980                           
 12981                           ; BSR set to: 0
 12982                           ;fat16.c: 607: {;fat16.c: 610: return 0xFE;
 12983  010464  0EFE               	movlw	254
 12984                           
 12985                           ; BSR set to: 0
 12986  010466  0012               	return	
 12987  010468                     l1870:
 12988                           
 12989                           ; BSR set to: 0
 12990                           ;fat16.c: 611: };fat16.c: 614: number_of_clusters = (size + 512 - 1) >> 9;
 12991                           
 12992                           ; BSR set to: 0
 12993  010468  0EFF               	movlw	255
 12994  01046A  25B0               	addwf	fat_create_file@size& (0+255),w,b
 12995  01046C  6FB4               	movwf	??_fat_create_file& (0+255),b
 12996  01046E  0E01               	movlw	1
 12997  010470  21B1               	addwfc	(fat_create_file@size+1)& (0+255),w,b
 12998  010472  6FB5               	movwf	(??_fat_create_file+1)& (0+255),b
 12999  010474  0E00               	movlw	0
 13000  010476  21B2               	addwfc	(fat_create_file@size+2)& (0+255),w,b
 13001  010478  6FB6               	movwf	(??_fat_create_file+2)& (0+255),b
 13002  01047A  0E00               	movlw	0
 13003  01047C  21B3               	addwfc	(fat_create_file@size+3)& (0+255),w,b
 13004  01047E  6FB7               	movwf	(??_fat_create_file+3)& (0+255),b
 13005  010480  0E0A               	movlw	10
 13006  010482  D005               	goto	u15380
 13007  010484                     u15385:
 13008  010484  90D8               	bcf	status,0,c
 13009  010486  33B7               	rrcf	(??_fat_create_file+3)& (0+255),f,b
 13010  010488  33B6               	rrcf	(??_fat_create_file+2)& (0+255),f,b
 13011  01048A  33B5               	rrcf	(??_fat_create_file+1)& (0+255),f,b
 13012  01048C  33B4               	rrcf	??_fat_create_file& (0+255),f,b
 13013  01048E                     u15380:
 13014  01048E  2EE8               	decfsz	wreg,f,c
 13015  010490  D7F9               	goto	u15385
 13016  010492  C0B4  F0B8         	movff	??_fat_create_file,fat_create_file@number_of_clusters
 13017  010496  C0B5  F0B9         	movff	??_fat_create_file+1,fat_create_file@number_of_clusters+1
 13018                           
 13019                           ; BSR set to: 0
 13020                           ;fat16.c: 617: first_cluster = _make_cluster_chain(0x0000, number_of_clusters);
 13021  01049A  0E00               	movlw	0
 13022  01049C  6F96               	movwf	(__make_cluster_chain@first_cluster+1)& (0+255),b
 13023  01049E  0E00               	movlw	0
 13024  0104A0  6F95               	movwf	__make_cluster_chain@first_cluster& (0+255),b
 13025  0104A2  C0B8  F097         	movff	fat_create_file@number_of_clusters,__make_cluster_chain@number_of_clusters
 13026  0104A6  C0B9  F098         	movff	fat_create_file@number_of_clusters+1,__make_cluster_chain@number_of_clusters+1
 13027  0104AA  ECAA  F069         	call	__make_cluster_chain	;wreg free
 13028  0104AE  C095  F0BA         	movff	?__make_cluster_chain,fat_create_file@first_cluster
 13029  0104B2  C096  F0BB         	movff	?__make_cluster_chain+1,fat_create_file@first_cluster+1
 13030                           
 13031                           ;fat16.c: 620: if(first_cluster == 0xFFFF)
 13032  0104B6  0100               	movlb	0	; () banked
 13033  0104B8  29BA               	incf	fat_create_file@first_cluster& (0+255),w,b
 13034  0104BA  E105               	bnz	l16262
 13035  0104BC  29BB               	incf	(fat_create_file@first_cluster+1)& (0+255),w,b
 13036  0104BE  A4D8               	btfss	status,2,c
 13037  0104C0  D002               	goto	l1871
 13038                           
 13039                           ; BSR set to: 0
 13040                           ;fat16.c: 621: {;fat16.c: 624: return 0xFD;
 13041  0104C2  0EFD               	movlw	253
 13042                           
 13043                           ; BSR set to: 0
 13044  0104C4  0012               	return	
 13045  0104C6                     l1871:
 13046  0104C6                     l16262:
 13047                           
 13048                           ; BSR set to: 0
 13049                           ;fat16.c: 625: };fat16.c: 628: memcpy(root_entry.fileName, name, 8);
 13050  0104C6  0EBD               	movlw	low fat_create_file@root_entry
 13051  0104C8  6F60               	movwf	memcpy@d1& (0+255),b
 13052  0104CA  0E00               	movlw	high fat_create_file@root_entry
 13053  0104CC  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13054  0104CE  C0AC  F062         	movff	fat_create_file@name,memcpy@s1
 13055  0104D2  C0AD  F063         	movff	fat_create_file@name+1,memcpy@s1+1
 13056  0104D6  0E00               	movlw	0
 13057  0104D8  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13058  0104DA  0E08               	movlw	8
 13059  0104DC  6F64               	movwf	memcpy@n& (0+255),b
 13060  0104DE  EC71  F0A4         	call	_memcpy	;wreg free
 13061                           
 13062                           ;fat16.c: 629: memcpy(root_entry.fileExtension, extension, 3);
 13063  0104E2  0EC5               	movlw	low (fat_create_file@root_entry+8)
 13064  0104E4  0100               	movlb	0	; () banked
 13065  0104E6  6F60               	movwf	memcpy@d1& (0+255),b
 13066  0104E8  0E00               	movlw	high (fat_create_file@root_entry+8)
 13067  0104EA  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13068  0104EC  C0AE  F062         	movff	fat_create_file@extension,memcpy@s1
 13069  0104F0  C0AF  F063         	movff	fat_create_file@extension+1,memcpy@s1+1
 13070  0104F4  0E00               	movlw	0
 13071  0104F6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13072  0104F8  0E03               	movlw	3
 13073  0104FA  6F64               	movwf	memcpy@n& (0+255),b
 13074  0104FC  EC71  F0A4         	call	_memcpy	;wreg free
 13075                           
 13076                           ;fat16.c: 630: root_entry.attributes = 0x00;
 13077  010500  0E00               	movlw	0
 13078  010502  0100               	movlb	0	; () banked
 13079  010504  6FC8               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 13080                           
 13081                           ; BSR set to: 0
 13082                           ;fat16.c: 631: root_entry.reserved1 = 0x00;
 13083  010506  0E00               	movlw	0
 13084  010508  6FC9               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 13085                           
 13086                           ; BSR set to: 0
 13087                           ;fat16.c: 632: root_entry.secondFractions = 0x00;
 13088  01050A  0E00               	movlw	0
 13089  01050C  6FCA               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 13090                           
 13091                           ; BSR set to: 0
 13092                           ;fat16.c: 633: root_entry.createdTime = _get_time();
 13093  01050E  EC70  F0AF         	call	__get_time	;wreg free
 13094  010512  C060  F0CB         	movff	?__get_time,fat_create_file@root_entry+14
 13095  010516  C061  F0CC         	movff	?__get_time+1,fat_create_file@root_entry+15
 13096                           
 13097                           ;fat16.c: 634: root_entry.createdDate = _get_date();
 13098  01051A  EC76  F0AF         	call	__get_date	;wreg free
 13099  01051E  C060  F0CD         	movff	?__get_date,fat_create_file@root_entry+16
 13100  010522  C061  F0CE         	movff	?__get_date+1,fat_create_file@root_entry+17
 13101                           
 13102                           ;fat16.c: 635: root_entry.lastAccessDate = root_entry.createdDate;
 13103  010526  C0CD  F0CF         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 13104  01052A  C0CE  F0D0         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 13105                           
 13106                           ;fat16.c: 636: root_entry.reserved2 = 0x00;
 13107  01052E  0E00               	movlw	0
 13108  010530  0100               	movlb	0	; () banked
 13109  010532  6FD2               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 13110  010534  0E00               	movlw	0
 13111  010536  6FD1               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 13112                           
 13113                           ; BSR set to: 0
 13114                           ;fat16.c: 637: root_entry.modifiedTime = root_entry.createdTime;
 13115  010538  C0CB  F0D3         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 13116  01053C  C0CC  F0D4         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 13117                           
 13118                           ; BSR set to: 0
 13119                           ;fat16.c: 638: root_entry.modifiedDate = root_entry.createdDate;
 13120  010540  C0CD  F0D5         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 13121  010544  C0CE  F0D6         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 13122                           
 13123                           ; BSR set to: 0
 13124                           ;fat16.c: 639: root_entry.firstCluster = first_cluster;
 13125  010548  C0BA  F0D7         	movff	fat_create_file@first_cluster,fat_create_file@root_entry+26
 13126  01054C  C0BB  F0D8         	movff	fat_create_file@first_cluster+1,fat_create_file@root_entry+27
 13127                           
 13128                           ; BSR set to: 0
 13129                           ;fat16.c: 640: root_entry.fileSize = size;
 13130  010550  C0B0  F0D9         	movff	fat_create_file@size,fat_create_file@root_entry+28
 13131  010554  C0B1  F0DA         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 13132  010558  C0B2  F0DB         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 13133  01055C  C0B3  F0DC         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 13134                           
 13135                           ; BSR set to: 0
 13136                           ;fat16.c: 643: _write_root(file_number, &root_entry);
 13137  010560  0EBD               	movlw	low fat_create_file@root_entry
 13138  010562  6F88               	movwf	__write_root@data& (0+255),b
 13139  010564  0E00               	movlw	high fat_create_file@root_entry
 13140  010566  6F89               	movwf	(__write_root@data+1)& (0+255),b
 13141  010568  51BC               	movf	fat_create_file@file_number& (0+255),w,b
 13142  01056A  ECAA  F0A9         	call	__write_root
 13143                           
 13144                           ;fat16.c: 645: return file_number;
 13145  01056E  0100               	movlb	0	; () banked
 13146  010570  51BC               	movf	fat_create_file@file_number& (0+255),w,b
 13147  010572  0012               	return	
 13148  010574                     __end_of_fat_create_file:
 13149                           	opt stack 0
 13150                           tblptru	equ	0xFF8
 13151                           tblptrh	equ	0xFF7
 13152                           tblptrl	equ	0xFF6
 13153                           tablat	equ	0xFF5
 13154                           prodh	equ	0xFF4
 13155                           prodl	equ	0xFF3
 13156                           postinc0	equ	0xFEE
 13157                           wreg	equ	0xFE8
 13158                           postdec1	equ	0xFE5
 13159                           plusw1	equ	0xFE3
 13160                           fsr1h	equ	0xFE2
 13161                           fsr1l	equ	0xFE1
 13162                           indf2	equ	0xFDF
 13163                           postinc2	equ	0xFDE
 13164                           plusw2	equ	0xFDB
 13165                           fsr2h	equ	0xFDA
 13166                           fsr2l	equ	0xFD9
 13167                           status	equ	0xFD8
 13168                           
 13169 ;; *************** function __write_root *****************
 13170 ;; Defined at:
 13171 ;;		line 474 in file "fat16.c"
 13172 ;; Parameters:    Size  Location     Type
 13173 ;;  file_number     1    wreg     unsigned char 
 13174 ;;  data            2   40[BANK0 ] PTR struct .
 13175 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 13176 ;; Auto vars:     Size  Location     Type
 13177 ;;  file_number     1   46[BANK0 ] unsigned char 
 13178 ;;  offset          2   44[BANK0 ] unsigned int 
 13179 ;;  sector          2   42[BANK0 ] unsigned int 
 13180 ;; Return value:  Size  Location     Type
 13181 ;;                  1    wreg      void 
 13182 ;; Registers used:
 13183 ;;		wreg, status,2, status,0, cstack
 13184 ;; Tracked objects:
 13185 ;;		On entry : 0/0
 13186 ;;		On exit  : 0/0
 13187 ;;		Unchanged: 0/0
 13188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13189 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13190 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13192 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13193 ;;Total ram usage:        7 bytes
 13194 ;; Hardware stack levels used:    1
 13195 ;; Hardware stack levels required when called:   15
 13196 ;; This function calls:
 13197 ;;		__offset_from_file_number
 13198 ;;		__sector_from_file_number
 13199 ;;		_flash_partial_write
 13200 ;; This function is called by:
 13201 ;;		_fat_create_file
 13202 ;;		_fat_resize_file
 13203 ;;		_fat_rename_file
 13204 ;; This function uses a non-reentrant model
 13205 ;;
 13206                           
 13207                           	psect	text41
 13208  015354                     __ptext41:
 13209                           	opt stack 0
 13210  015354                     __write_root:
 13211                           	opt stack 12
 13212                           
 13213                           ;incstack = 0
 13214                           ;__write_root@file_number stored from wreg
 13215  015354  0100               	movlb	0	; () banked
 13216  015356  6F8E               	movwf	__write_root@file_number& (0+255),b
 13217                           
 13218                           ;fat16.c: 476: uint16_t sector;;fat16.c: 477: uint16_t offset;;fat16.c: 480: sector = _s
      +                          ector_from_file_number(file_number);
 13219  015358  0100               	movlb	0	; () banked
 13220  01535A  518E               	movf	__write_root@file_number& (0+255),w,b
 13221  01535C  ECAF  F0AC         	call	__sector_from_file_number
 13222  015360  C060  F08A         	movff	?__sector_from_file_number,__write_root@sector
 13223  015364  C061  F08B         	movff	?__sector_from_file_number+1,__write_root@sector+1
 13224                           
 13225                           ;fat16.c: 481: offset = _offset_from_file_number(file_number);
 13226  015368  0100               	movlb	0	; () banked
 13227  01536A  518E               	movf	__write_root@file_number& (0+255),w,b
 13228  01536C  ECC1  F0AD         	call	__offset_from_file_number
 13229  015370  C060  F08C         	movff	?__offset_from_file_number,__write_root@offset
 13230  015374  C061  F08D         	movff	?__offset_from_file_number+1,__write_root@offset+1
 13231                           
 13232                           ;fat16.c: 484: flash_partial_write(sector, offset, 32, data);
 13233  015378  C08A  F07F         	movff	__write_root@sector,flash_partial_write@page
 13234  01537C  C08B  F080         	movff	__write_root@sector+1,flash_partial_write@page+1
 13235  015380  C08C  F081         	movff	__write_root@offset,flash_partial_write@start
 13236  015384  C08D  F082         	movff	__write_root@offset+1,flash_partial_write@start+1
 13237  015388  0E00               	movlw	0
 13238  01538A  0100               	movlb	0	; () banked
 13239  01538C  6F84               	movwf	(flash_partial_write@length+1)& (0+255),b
 13240  01538E  0E20               	movlw	32
 13241  015390  6F83               	movwf	flash_partial_write@length& (0+255),b
 13242  015392  C088  F085         	movff	__write_root@data,flash_partial_write@data
 13243  015396  C089  F086         	movff	__write_root@data+1,flash_partial_write@data+1
 13244  01539A  ECD7  F0A2         	call	_flash_partial_write	;wreg free
 13245  01539E  0012               	return		;funcret
 13246  0153A0                     __end_of__write_root:
 13247                           	opt stack 0
 13248                           tblptru	equ	0xFF8
 13249                           tblptrh	equ	0xFF7
 13250                           tblptrl	equ	0xFF6
 13251                           tablat	equ	0xFF5
 13252                           prodh	equ	0xFF4
 13253                           prodl	equ	0xFF3
 13254                           postinc0	equ	0xFEE
 13255                           wreg	equ	0xFE8
 13256                           postdec1	equ	0xFE5
 13257                           plusw1	equ	0xFE3
 13258                           fsr1h	equ	0xFE2
 13259                           fsr1l	equ	0xFE1
 13260                           indf2	equ	0xFDF
 13261                           postinc2	equ	0xFDE
 13262                           plusw2	equ	0xFDB
 13263                           fsr2h	equ	0xFDA
 13264                           fsr2l	equ	0xFD9
 13265                           status	equ	0xFD8
 13266                           
 13267 ;; *************** function _flash_partial_write *****************
 13268 ;; Defined at:
 13269 ;;		line 460 in file "flash.c"
 13270 ;; Parameters:    Size  Location     Type
 13271 ;;  page            2   31[BANK0 ] unsigned int 
 13272 ;;  start           2   33[BANK0 ] unsigned int 
 13273 ;;  length          2   35[BANK0 ] unsigned int 
 13274 ;;  data            2   37[BANK0 ] PTR unsigned char 
 13275 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 13276 ;;		 -> _delete_root@deleted_value(1), 
 13277 ;; Auto vars:     Size  Location     Type
 13278 ;;  match           1   39[BANK0 ] enum E7062
 13279 ;; Return value:  Size  Location     Type
 13280 ;;                  1    wreg      void 
 13281 ;; Registers used:
 13282 ;;		wreg, status,2, status,0, cstack
 13283 ;; Tracked objects:
 13284 ;;		On entry : 0/0
 13285 ;;		On exit  : 0/0
 13286 ;;		Unchanged: 0/0
 13287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13288 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13289 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13291 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13292 ;;Total ram usage:        9 bytes
 13293 ;; Hardware stack levels used:    1
 13294 ;; Hardware stack levels required when called:   14
 13295 ;; This function calls:
 13296 ;;		__flash_compare_page_to_buffer
 13297 ;;		__flash_copy_page_to_buffer
 13298 ;;		__flash_is_busy
 13299 ;;		__flash_write_page_from_buffer
 13300 ;;		__flash_write_to_buffer
 13301 ;; This function is called by:
 13302 ;;		__write_root
 13303 ;;		_fat_modify_file
 13304 ;;		__delete_root
 13305 ;; This function uses a non-reentrant model
 13306 ;;
 13307                           
 13308                           	psect	text42
 13309  0145AE                     __ptext42:
 13310                           	opt stack 0
 13311  0145AE                     _flash_partial_write:
 13312                           	opt stack 12
 13313                           
 13314                           ;flash.c: 462: flashMatchResult_t match;;flash.c: 465: while(_flash_is_busy());
 13315                           
 13316                           ;incstack = 0
 13317  0145AE  EC70  F0AE         	call	__flash_is_busy	;wreg free
 13318  0145B2  0900               	iorlw	0
 13319  0145B4  A4D8               	btfss	status,2,c
 13320  0145B6  D7FB               	goto	_flash_partial_write
 13321                           
 13322                           ;flash.c: 468: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 13323  0145B8  C07F  F073         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 13324  0145BC  C080  F074         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 13325  0145C0  0E00               	movlw	0
 13326  0145C2  0100               	movlb	0	; () banked
 13327  0145C4  6F75               	movwf	__flash_copy_page_to_buffer@buffer& (0+255),b
 13328  0145C6  EC5C  F0A5         	call	__flash_copy_page_to_buffer	;wreg free
 13329                           
 13330                           ;flash.c: 471: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 13331  0145CA  C081  F073         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 13332  0145CE  C082  F074         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 13333  0145D2  C085  F075         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 13334  0145D6  C086  F076         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 13335  0145DA  C083  F077         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 13336  0145DE  C084  F078         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 13337  0145E2  0E00               	movlw	0
 13338  0145E4  0100               	movlb	0	; () banked
 13339  0145E6  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 13340  0145E8  EC42  F0A8         	call	__flash_write_to_buffer	;wreg free
 13341                           
 13342                           ;flash.c: 474: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 13343  0145EC  C07F  F073         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 13344  0145F0  C080  F074         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 13345  0145F4  0E00               	movlw	0
 13346  0145F6  0100               	movlb	0	; () banked
 13347  0145F8  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 13348  0145FA  ECC8  F0A0         	call	__flash_compare_page_to_buffer	;wreg free
 13349  0145FE  0100               	movlb	0	; () banked
 13350  014600  6F87               	movwf	flash_partial_write@match& (0+255),b
 13351                           
 13352                           ; BSR set to: 0
 13353                           ;flash.c: 477: if(match==DATA_DOES_NOT_MATCH)
 13354  014602  0587               	decf	flash_partial_write@match& (0+255),w,b
 13355  014604  A4D8               	btfss	status,2,c
 13356  014606  0012               	return	
 13357                           
 13358                           ; BSR set to: 0
 13359                           ;flash.c: 478: {;flash.c: 479: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 13360  014608  C07F  F073         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 13361  01460C  C080  F074         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 13362  014610  0E00               	movlw	0
 13363  014612  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 13364  014614  ECE3  F0A5         	call	__flash_write_page_from_buffer	;wreg free
 13365  014618  0012               	return	
 13366  01461A                     __end_of_flash_partial_write:
 13367                           	opt stack 0
 13368                           tblptru	equ	0xFF8
 13369                           tblptrh	equ	0xFF7
 13370                           tblptrl	equ	0xFF6
 13371                           tablat	equ	0xFF5
 13372                           prodh	equ	0xFF4
 13373                           prodl	equ	0xFF3
 13374                           postinc0	equ	0xFEE
 13375                           wreg	equ	0xFE8
 13376                           postdec1	equ	0xFE5
 13377                           plusw1	equ	0xFE3
 13378                           fsr1h	equ	0xFE2
 13379                           fsr1l	equ	0xFE1
 13380                           indf2	equ	0xFDF
 13381                           postinc2	equ	0xFDE
 13382                           plusw2	equ	0xFDB
 13383                           fsr2h	equ	0xFDA
 13384                           fsr2l	equ	0xFD9
 13385                           status	equ	0xFD8
 13386                           
 13387 ;; *************** function __flash_copy_page_to_buffer *****************
 13388 ;; Defined at:
 13389 ;;		line 154 in file "flash.c"
 13390 ;; Parameters:    Size  Location     Type
 13391 ;;  page            2   19[BANK0 ] unsigned int 
 13392 ;;  buffer          1   21[BANK0 ] enum E7058
 13393 ;; Auto vars:     Size  Location     Type
 13394 ;;  command         4   25[BANK0 ] unsigned char [4]
 13395 ;; Return value:  Size  Location     Type
 13396 ;;                  1    wreg      void 
 13397 ;; Registers used:
 13398 ;;		wreg, status,2, status,0, cstack
 13399 ;; Tracked objects:
 13400 ;;		On entry : 0/0
 13401 ;;		On exit  : 0/0
 13402 ;;		Unchanged: 0/0
 13403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13404 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13405 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13406 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13407 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13408 ;;Total ram usage:       10 bytes
 13409 ;; Hardware stack levels used:    1
 13410 ;; Hardware stack levels required when called:   13
 13411 ;; This function calls:
 13412 ;;		__flash_is_busy
 13413 ;;		_spi_tx
 13414 ;; This function is called by:
 13415 ;;		_flash_partial_write
 13416 ;;		_flash_copy_page_to_buffer
 13417 ;; This function uses a non-reentrant model
 13418 ;;
 13419                           
 13420                           	psect	text43
 13421  014AB8                     __ptext43:
 13422                           	opt stack 0
 13423  014AB8                     __flash_copy_page_to_buffer:
 13424                           	opt stack 12
 13425                           
 13426                           ;flash.c: 156: uint8_t command[4];;flash.c: 159: while(_flash_is_busy());
 13427                           
 13428                           ;incstack = 0
 13429  014AB8  EC70  F0AE         	call	__flash_is_busy	;wreg free
 13430  014ABC  0900               	iorlw	0
 13431  014ABE  A4D8               	btfss	status,2,c
 13432  014AC0  D7FB               	goto	__flash_copy_page_to_buffer
 13433                           
 13434                           ;flash.c: 162: if(buffer==FLASH_BUFFER_1)
 13435  014AC2  0100               	movlb	0	; () banked
 13436  014AC4  5175               	movf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 13437  014AC6  A4D8               	btfss	status,2,c
 13438  014AC8  D002               	goto	l1559
 13439                           
 13440                           ; BSR set to: 0
 13441                           ;flash.c: 163: command[0] = 0x53;
 13442  014ACA  0E53               	movlw	83
 13443  014ACC  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 13444  014ACE                     l1559:
 13445                           
 13446                           ; BSR set to: 0
 13447                           ;flash.c: 164: if(buffer==FLASH_BUFFER_2)
 13448                           
 13449                           ; BSR set to: 0
 13450  014ACE  0575               	decf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 13451  014AD0  A4D8               	btfss	status,2,c
 13452  014AD2  D002               	goto	l1560
 13453                           
 13454                           ; BSR set to: 0
 13455                           ;flash.c: 165: command[0] = 0x55;
 13456  014AD4  0E55               	movlw	85
 13457  014AD6  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 13458  014AD8                     l1560:
 13459                           
 13460                           ; BSR set to: 0
 13461                           ;flash.c: 167: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 13462                           
 13463                           ; BSR set to: 0
 13464  014AD8  C073  F076         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 13465  014ADC  C074  F077         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 13466  014AE0  0E07               	movlw	7
 13467  014AE2  6F78               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),b
 13468  014AE4                     u11575:
 13469  014AE4  90D8               	bcf	status,0,c
 13470  014AE6  3377               	rrcf	(??__flash_copy_page_to_buffer+1)& (0+255),f,b
 13471  014AE8  3376               	rrcf	??__flash_copy_page_to_buffer& (0+255),f,b
 13472  014AEA  2F78               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,b
 13473  014AEC  D7FB               	goto	u11575
 13474  014AEE  5176               	movf	??__flash_copy_page_to_buffer& (0+255),w,b
 13475  014AF0  6F7A               	movwf	(__flash_copy_page_to_buffer@command+1)& (0+255),b
 13476                           
 13477                           ; BSR set to: 0
 13478                           ;flash.c: 168: command[2] = ((unsigned char)((page<<1)&0xFF));
 13479  014AF2  5173               	movf	__flash_copy_page_to_buffer@page& (0+255),w,b
 13480  014AF4  2573               	addwf	__flash_copy_page_to_buffer@page& (0+255),w,b
 13481  014AF6  6F7B               	movwf	(__flash_copy_page_to_buffer@command+2)& (0+255),b
 13482                           
 13483                           ;flash.c: 169: command[3] = 0x00;
 13484  014AF8  0E00               	movlw	0
 13485  014AFA  6F7C               	movwf	(__flash_copy_page_to_buffer@command+3)& (0+255),b
 13486                           
 13487                           ; BSR set to: 0
 13488                           ;flash.c: 172: spi_tx(command, 4);
 13489  014AFC  0E79               	movlw	low __flash_copy_page_to_buffer@command
 13490  014AFE  6F60               	movwf	spi_tx@data& (0+255),b
 13491  014B00  0E00               	movlw	high __flash_copy_page_to_buffer@command
 13492  014B02  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 13493  014B04  0E00               	movlw	0
 13494  014B06  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 13495  014B08  0E04               	movlw	4
 13496  014B0A  6F62               	movwf	spi_tx@length& (0+255),b
 13497  014B0C  EC10  F0A6         	call	_spi_tx	;wreg free
 13498  014B10  0012               	return		;funcret
 13499  014B12                     __end_of__flash_copy_page_to_buffer:
 13500                           	opt stack 0
 13501                           tblptru	equ	0xFF8
 13502                           tblptrh	equ	0xFF7
 13503                           tblptrl	equ	0xFF6
 13504                           tablat	equ	0xFF5
 13505                           prodh	equ	0xFF4
 13506                           prodl	equ	0xFF3
 13507                           postinc0	equ	0xFEE
 13508                           wreg	equ	0xFE8
 13509                           postdec1	equ	0xFE5
 13510                           plusw1	equ	0xFE3
 13511                           fsr1h	equ	0xFE2
 13512                           fsr1l	equ	0xFE1
 13513                           indf2	equ	0xFDF
 13514                           postinc2	equ	0xFDE
 13515                           plusw2	equ	0xFDB
 13516                           fsr2h	equ	0xFDA
 13517                           fsr2l	equ	0xFD9
 13518                           status	equ	0xFD8
 13519                           
 13520 ;; *************** function __make_cluster_chain *****************
 13521 ;; Defined at:
 13522 ;;		line 214 in file "fat16.c"
 13523 ;; Parameters:    Size  Location     Type
 13524 ;;  first_cluste    2   53[BANK0 ] unsigned int 
 13525 ;;  number_of_cl    2   55[BANK0 ] unsigned int 
 13526 ;; Auto vars:     Size  Location     Type
 13527 ;;  next_cluster    2   74[BANK0 ] unsigned int 
 13528 ;;  offset          2   72[BANK0 ] unsigned int 
 13529 ;;  sector_in_bu    2   70[BANK0 ] unsigned int 
 13530 ;;  sector          2   68[BANK0 ] unsigned int 
 13531 ;;  remaining_cl    2   66[BANK0 ] unsigned int 
 13532 ;;  different_se    2   63[BANK0 ] unsigned int 
 13533 ;;  minimum_sect    2   61[BANK0 ] unsigned int 
 13534 ;;  next_offset     2   59[BANK0 ] unsigned int 
 13535 ;;  data_changed    1   65[BANK0 ] unsigned char 
 13536 ;; Return value:  Size  Location     Type
 13537 ;;                  2   53[BANK0 ] unsigned int 
 13538 ;; Registers used:
 13539 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13540 ;; Tracked objects:
 13541 ;;		On entry : 0/0
 13542 ;;		On exit  : 0/0
 13543 ;;		Unchanged: 0/0
 13544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13545 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13546 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13547 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13548 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13549 ;;Total ram usage:       23 bytes
 13550 ;; Hardware stack levels used:    1
 13551 ;; Hardware stack levels required when called:   16
 13552 ;; This function calls:
 13553 ;;		__fat_offset_from_cluster
 13554 ;;		__fat_sector_from_cluster
 13555 ;;		__get_available_cluster
 13556 ;;		__get_available_offset_from_buffer
 13557 ;;		__read_value_from_offset
 13558 ;;		__write_value_to_offset
 13559 ;;		_flash_sector_read
 13560 ;;		_flash_sector_write
 13561 ;; This function is called by:
 13562 ;;		_fat_create_file
 13563 ;;		_fat_resize_file
 13564 ;;		_fat_delete_file
 13565 ;; This function uses a non-reentrant model
 13566 ;;
 13567                           
 13568                           	psect	text44
 13569  00D354                     __ptext44:
 13570                           	opt stack 0
 13571  00D354                     __make_cluster_chain:
 13572                           	opt stack 11
 13573                           
 13574                           ;fat16.c: 216: uint16_t remaining_clusters;;fat16.c: 217: uint16_t minimum_sector;;fat16
      +                          .c: 218: uint16_t sector;;fat16.c: 219: uint16_t offset;;fat16.c: 220: uint16_t next_off
      +                          set;;fat16.c: 221: uint16_t sector_in_buffer;;fat16.c: 222: uint16_t next_cluster;;fat16
      +                          .c: 223: uint16_t different_sector_cluster;;fat16.c: 224: uint8_t data_changed;;fat16.c:
      +                           227: sector_in_buffer = 0;
 13575                           
 13576                           ;incstack = 0
 13577  00D354  0E00               	movlw	0
 13578  00D356  0100               	movlb	0	; () banked
 13579  00D358  6FA7               	movwf	(__make_cluster_chain@sector_in_buffer+1)& (0+255),b
 13580  00D35A  0E00               	movlw	0
 13581  00D35C  6FA6               	movwf	__make_cluster_chain@sector_in_buffer& (0+255),b
 13582                           
 13583                           ; BSR set to: 0
 13584                           ;fat16.c: 228: remaining_clusters = number_of_clusters;
 13585  00D35E  C097  F0A2         	movff	__make_cluster_chain@number_of_clusters,__make_cluster_chain@remaining_clusters
 13586  00D362  C098  F0A3         	movff	__make_cluster_chain@number_of_clusters+1,__make_cluster_chain@remaining_clusters
      +                          +1
 13587                           
 13588                           ;fat16.c: 229: minimum_sector = 2;
 13589  00D366  0E00               	movlw	0
 13590  00D368  6F9E               	movwf	(__make_cluster_chain@minimum_sector+1)& (0+255),b
 13591  00D36A  0E02               	movlw	2
 13592  00D36C  6F9D               	movwf	__make_cluster_chain@minimum_sector& (0+255),b
 13593                           
 13594                           ;fat16.c: 230: data_changed = 0;
 13595  00D36E  0E00               	movlw	0
 13596  00D370  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 13597                           
 13598                           ; BSR set to: 0
 13599                           ;fat16.c: 233: if((first_cluster==0) && (number_of_clusters>0))
 13600  00D372  5195               	movf	__make_cluster_chain@first_cluster& (0+255),w,b
 13601  00D374  1196               	iorwf	(__make_cluster_chain@first_cluster+1)& (0+255),w,b
 13602  00D376  A4D8               	btfss	status,2,c
 13603  00D378  D024               	goto	l1793
 13604                           
 13605                           ; BSR set to: 0
 13606  00D37A  5197               	movf	__make_cluster_chain@number_of_clusters& (0+255),w,b
 13607  00D37C  1198               	iorwf	(__make_cluster_chain@number_of_clusters+1)& (0+255),w,b
 13608  00D37E  B4D8               	btfsc	status,2,c
 13609  00D380  D020               	goto	l1793
 13610                           
 13611                           ; BSR set to: 0
 13612                           ;fat16.c: 234: {;fat16.c: 235: first_cluster = _get_available_cluster(minimum_sector, 0)
      +                          ;
 13613  00D382  C09D  F08B         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 13614  00D386  C09E  F08C         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 13615  00D38A  0E00               	movlw	0
 13616  00D38C  6F8E               	movwf	(__get_available_cluster@skip_sector+1)& (0+255),b
 13617  00D38E  0E00               	movlw	0
 13618  00D390  6F8D               	movwf	__get_available_cluster@skip_sector& (0+255),b
 13619  00D392  EC74  F095         	call	__get_available_cluster	;wreg free
 13620  00D396  C08B  F095         	movff	?__get_available_cluster,__make_cluster_chain@first_cluster
 13621  00D39A  C08C  F096         	movff	?__get_available_cluster+1,__make_cluster_chain@first_cluster+1
 13622                           
 13623                           ;fat16.c: 237: minimum_sector = _fat_sector_from_cluster(first_cluster);
 13624  00D39E  C095  F060         	movff	__make_cluster_chain@first_cluster,__fat_sector_from_cluster@cluster
 13625  00D3A2  C096  F061         	movff	__make_cluster_chain@first_cluster+1,__fat_sector_from_cluster@cluster+1
 13626  00D3A6  ECF3  F0AE         	call	__fat_sector_from_cluster	;wreg free
 13627  00D3AA  C060  F09D         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 13628  00D3AE  C061  F09E         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 13629                           
 13630                           ;fat16.c: 238: if(first_cluster == 0)
 13631  00D3B2  0100               	movlb	0	; () banked
 13632  00D3B4  5195               	movf	__make_cluster_chain@first_cluster& (0+255),w,b
 13633  00D3B6  1196               	iorwf	(__make_cluster_chain@first_cluster+1)& (0+255),w,b
 13634  00D3B8  A4D8               	btfss	status,2,c
 13635  00D3BA  D003               	goto	l1793
 13636                           
 13637                           ; BSR set to: 0
 13638                           ;fat16.c: 239: {;fat16.c: 240: return 0xFFFF;
 13639  00D3BC  6995               	setf	?__make_cluster_chain& (0+255),b
 13640  00D3BE  6996               	setf	(?__make_cluster_chain+1)& (0+255),b
 13641  00D3C0  0012               	return	
 13642  00D3C2                     l1793:
 13643                           
 13644                           ; BSR set to: 0
 13645                           ;fat16.c: 241: };fat16.c: 242: };fat16.c: 243: next_cluster = first_cluster;
 13646                           
 13647                           ; BSR set to: 0
 13648  00D3C2  C095  F0AA         	movff	__make_cluster_chain@first_cluster,__make_cluster_chain@next_cluster
 13649  00D3C6  C096  F0AB         	movff	__make_cluster_chain@first_cluster+1,__make_cluster_chain@next_cluster+1
 13650                           
 13651                           ;fat16.c: 246: while ((remaining_clusters > 0) || ((next_cluster>=2) && (next_cluster<=8
      +                          153)))
 13652  00D3CA  D103               	goto	l1810
 13653  00D3CC                     
 13654                           ; BSR set to: 0
 13655                           ;fat16.c: 247: {;fat16.c: 260: sector = _fat_sector_from_cluster(next_cluster);
 13656                           
 13657                           ; BSR set to: 0
 13658  00D3CC  C0AA  F060         	movff	__make_cluster_chain@next_cluster,__fat_sector_from_cluster@cluster
 13659  00D3D0  C0AB  F061         	movff	__make_cluster_chain@next_cluster+1,__fat_sector_from_cluster@cluster+1
 13660  00D3D4  ECF3  F0AE         	call	__fat_sector_from_cluster	;wreg free
 13661  00D3D8  C060  F0A4         	movff	?__fat_sector_from_cluster,__make_cluster_chain@sector
 13662  00D3DC  C061  F0A5         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@sector+1
 13663                           
 13664                           ;fat16.c: 261: offset = _fat_offset_from_cluster(next_cluster);
 13665  00D3E0  C0AA  F060         	movff	__make_cluster_chain@next_cluster,__fat_offset_from_cluster@cluster
 13666  00D3E4  C0AB  F061         	movff	__make_cluster_chain@next_cluster+1,__fat_offset_from_cluster@cluster+1
 13667  00D3E8  EC00  F0AF         	call	__fat_offset_from_cluster	;wreg free
 13668  00D3EC  C060  F0A8         	movff	?__fat_offset_from_cluster,__make_cluster_chain@offset
 13669  00D3F0  C061  F0A9         	movff	?__fat_offset_from_cluster+1,__make_cluster_chain@offset+1
 13670                           
 13671                           ;fat16.c: 264: if(sector != sector_in_buffer)
 13672  00D3F4  0100               	movlb	0	; () banked
 13673  00D3F6  51A6               	movf	__make_cluster_chain@sector_in_buffer& (0+255),w,b
 13674  00D3F8  19A4               	xorwf	__make_cluster_chain@sector& (0+255),w,b
 13675  00D3FA  E104               	bnz	u13900
 13676  00D3FC  51A7               	movf	(__make_cluster_chain@sector_in_buffer+1)& (0+255),w,b
 13677  00D3FE  19A5               	xorwf	(__make_cluster_chain@sector+1)& (0+255),w,b
 13678  00D400  B4D8               	btfsc	status,2,c
 13679  00D402  D037               	goto	l1797
 13680  00D404                     u13900:
 13681                           
 13682                           ; BSR set to: 0
 13683                           ;fat16.c: 265: {;fat16.c: 267: if(data_changed)
 13684  00D404  51A1               	movf	__make_cluster_chain@data_changed& (0+255),w,b
 13685  00D406  B4D8               	btfsc	status,2,c
 13686  00D408  D00A               	goto	l1798
 13687                           
 13688                           ; BSR set to: 0
 13689                           ;fat16.c: 268: {;fat16.c: 269: flash_sector_write(sector_in_buffer, buffer);
 13690  00D40A  C0A6  F07F         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 13691  00D40E  C0A7  F080         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 13692  00D412  0E00               	movlw	low _buffer
 13693  00D414  6F81               	movwf	flash_sector_write@data& (0+255),b
 13694  00D416  0E0A               	movlw	high _buffer
 13695  00D418  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 13696  00D41A  EC0B  F0A9         	call	_flash_sector_write	;wreg free
 13697  00D41E                     l1798:
 13698                           
 13699                           ;fat16.c: 270: };fat16.c: 273: different_sector_cluster = _get_available_cluster(minimum
      +                          _sector, sector);
 13700  00D41E  C09D  F08B         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 13701  00D422  C09E  F08C         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 13702  00D426  C0A4  F08D         	movff	__make_cluster_chain@sector,__get_available_cluster@skip_sector
 13703  00D42A  C0A5  F08E         	movff	__make_cluster_chain@sector+1,__get_available_cluster@skip_sector+1
 13704  00D42E  EC74  F095         	call	__get_available_cluster	;wreg free
 13705  00D432  C08B  F09F         	movff	?__get_available_cluster,__make_cluster_chain@different_sector_cluster
 13706  00D436  C08C  F0A0         	movff	?__get_available_cluster+1,__make_cluster_chain@different_sector_cluster+1
 13707                           
 13708                           ;fat16.c: 276: minimum_sector = _fat_sector_from_cluster(different_sector_cluster);
 13709  00D43A  C09F  F060         	movff	__make_cluster_chain@different_sector_cluster,__fat_sector_from_cluster@cluster
 13710  00D43E  C0A0  F061         	movff	__make_cluster_chain@different_sector_cluster+1,__fat_sector_from_cluster@cluster
      +                          +1
 13711  00D442  ECF3  F0AE         	call	__fat_sector_from_cluster	;wreg free
 13712  00D446  C060  F09D         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 13713  00D44A  C061  F09E         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 13714                           
 13715                           ;fat16.c: 279: flash_sector_read(sector, buffer);
 13716  00D44E  C0A4  F087         	movff	__make_cluster_chain@sector,flash_sector_read@page
 13717  00D452  C0A5  F088         	movff	__make_cluster_chain@sector+1,flash_sector_read@page+1
 13718  00D456  0E00               	movlw	low _buffer
 13719  00D458  0100               	movlb	0	; () banked
 13720  00D45A  6F89               	movwf	flash_sector_read@data& (0+255),b
 13721  00D45C  0E0A               	movlw	high _buffer
 13722  00D45E  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 13723  00D460  EC12  F0AE         	call	_flash_sector_read	;wreg free
 13724                           
 13725                           ;fat16.c: 280: sector_in_buffer = sector;
 13726  00D464  C0A4  F0A6         	movff	__make_cluster_chain@sector,__make_cluster_chain@sector_in_buffer
 13727  00D468  C0A5  F0A7         	movff	__make_cluster_chain@sector+1,__make_cluster_chain@sector_in_buffer+1
 13728                           
 13729                           ;fat16.c: 281: data_changed = 0;
 13730  00D46C  0E00               	movlw	0
 13731  00D46E  0100               	movlb	0	; () banked
 13732  00D470  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 13733  00D472                     l1797:
 13734                           
 13735                           ; BSR set to: 0
 13736                           ;fat16.c: 282: };fat16.c: 285: if(remaining_clusters > 1)
 13737                           
 13738                           ; BSR set to: 0
 13739  00D472  51A3               	movf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 13740  00D474  E104               	bnz	u13920
 13741  00D476  0E02               	movlw	2
 13742  00D478  5DA2               	subwf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 13743  00D47A  A0D8               	btfss	status,0,c
 13744  00D47C  D05E               	goto	l1799
 13745  00D47E                     u13920:
 13746                           
 13747                           ; BSR set to: 0
 13748                           ;fat16.c: 286: {;fat16.c: 288: next_cluster = _read_value_from_offset(offset, buffer);
 13749  00D47E  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 13750  00D482  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 13751  00D486  0E00               	movlw	low _buffer
 13752  00D488  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 13753  00D48A  0E0A               	movlw	high _buffer
 13754  00D48C  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 13755  00D48E  EC1A  F0AA         	call	__read_value_from_offset	;wreg free
 13756  00D492  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 13757  00D496  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 13758                           
 13759                           ;fat16.c: 291: if((next_cluster < 2) || (next_cluster > 8153))
 13760  00D49A  0100               	movlb	0	; () banked
 13761  00D49C  51AB               	movf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13762  00D49E  E104               	bnz	u13930
 13763  00D4A0  0E02               	movlw	2
 13764  00D4A2  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 13765  00D4A4  A0D8               	btfss	status,0,c
 13766  00D4A6  D006               	goto	u13940
 13767  00D4A8                     u13930:
 13768                           
 13769                           ; BSR set to: 0
 13770  00D4A8  0EDA               	movlw	218
 13771  00D4AA  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 13772  00D4AC  0E1F               	movlw	31
 13773  00D4AE  59AB               	subwfb	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13774  00D4B0  A0D8               	btfss	status,0,c
 13775  00D4B2  D06B               	goto	l1809
 13776  00D4B4                     u13940:
 13777                           
 13778                           ; BSR set to: 0
 13779                           ;fat16.c: 292: {;fat16.c: 294: next_offset = _get_available_offset_from_buffer(offset+2,
      +                           buffer);
 13780                           
 13781                           ; BSR set to: 0
 13782  00D4B4  0E02               	movlw	2
 13783  00D4B6  25A8               	addwf	__make_cluster_chain@offset& (0+255),w,b
 13784  00D4B8  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 13785  00D4BA  0E00               	movlw	0
 13786  00D4BC  21A9               	addwfc	(__make_cluster_chain@offset+1)& (0+255),w,b
 13787  00D4BE  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 13788  00D4C0  0E00               	movlw	low _buffer
 13789  00D4C2  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 13790  00D4C4  0E0A               	movlw	high _buffer
 13791  00D4C6  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 13792  00D4C8  ECD1  F0A4         	call	__get_available_offset_from_buffer	;wreg free
 13793  00D4CC  C060  F09B         	movff	?__get_available_offset_from_buffer,__make_cluster_chain@next_offset
 13794  00D4D0  C061  F09C         	movff	?__get_available_offset_from_buffer+1,__make_cluster_chain@next_offset+1
 13795                           
 13796                           ;fat16.c: 296: if(next_offset != 0xFFFF)
 13797  00D4D4  0100               	movlb	0	; () banked
 13798  00D4D6  299B               	incf	__make_cluster_chain@next_offset& (0+255),w,b
 13799  00D4D8  E103               	bnz	u13950
 13800  00D4DA  299C               	incf	(__make_cluster_chain@next_offset+1)& (0+255),w,b
 13801  00D4DC  B4D8               	btfsc	status,2,c
 13802  00D4DE  D013               	goto	l1803
 13803  00D4E0                     u13950:
 13804                           
 13805                           ; BSR set to: 0
 13806                           ;fat16.c: 297: {;fat16.c: 299: next_cluster = sector_in_buffer - 2;
 13807  00D4E0  0EFE               	movlw	254
 13808  00D4E2  25A6               	addwf	__make_cluster_chain@sector_in_buffer& (0+255),w,b
 13809  00D4E4  6FAA               	movwf	__make_cluster_chain@next_cluster& (0+255),b
 13810  00D4E6  0EFF               	movlw	255
 13811  00D4E8  21A7               	addwfc	(__make_cluster_chain@sector_in_buffer+1)& (0+255),w,b
 13812  00D4EA  6FAB               	movwf	(__make_cluster_chain@next_cluster+1)& (0+255),b
 13813                           
 13814                           ; BSR set to: 0
 13815                           ;fat16.c: 300: next_cluster <<= 8;
 13816  00D4EC  51AA               	movf	__make_cluster_chain@next_cluster& (0+255),w,b
 13817  00D4EE  6FAB               	movwf	(__make_cluster_chain@next_cluster+1)& (0+255),b
 13818  00D4F0  6BAA               	clrf	__make_cluster_chain@next_cluster& (0+255),b
 13819                           
 13820                           ; BSR set to: 0
 13821                           ;fat16.c: 301: next_cluster |= (next_offset>>1);
 13822  00D4F2  90D8               	bcf	status,0,c
 13823  00D4F4  319C               	rrcf	(__make_cluster_chain@next_offset+1)& (0+255),w,b
 13824  00D4F6  6F9A               	movwf	(??__make_cluster_chain+1)& (0+255),b
 13825  00D4F8  319B               	rrcf	__make_cluster_chain@next_offset& (0+255),w,b
 13826  00D4FA  6F99               	movwf	??__make_cluster_chain& (0+255),b
 13827  00D4FC  5199               	movf	??__make_cluster_chain& (0+255),w,b
 13828  00D4FE  13AA               	iorwf	__make_cluster_chain@next_cluster& (0+255),f,b
 13829  00D500  519A               	movf	(??__make_cluster_chain+1)& (0+255),w,b
 13830  00D502  13AB               	iorwf	(__make_cluster_chain@next_cluster+1)& (0+255),f,b
 13831                           
 13832                           ;fat16.c: 302: }
 13833  00D504  D00B               	goto	l1806
 13834  00D506                     l1803:
 13835                           
 13836                           ; BSR set to: 0
 13837                           ;fat16.c: 303: else;fat16.c: 304: {;fat16.c: 305: if(different_sector_cluster == 0x0000)
 13838                           
 13839                           ; BSR set to: 0
 13840  00D506  519F               	movf	__make_cluster_chain@different_sector_cluster& (0+255),w,b
 13841  00D508  11A0               	iorwf	(__make_cluster_chain@different_sector_cluster+1)& (0+255),w,b
 13842  00D50A  A4D8               	btfss	status,2,c
 13843  00D50C  D003               	goto	l1805
 13844                           
 13845                           ; BSR set to: 0
 13846                           ;fat16.c: 306: {;fat16.c: 308: return 0xFFFF;
 13847  00D50E  6995               	setf	?__make_cluster_chain& (0+255),b
 13848  00D510  6996               	setf	(?__make_cluster_chain+1)& (0+255),b
 13849  00D512  0012               	return	
 13850  00D514                     l1805:
 13851                           
 13852                           ; BSR set to: 0
 13853                           ;fat16.c: 310: else;fat16.c: 311: {;fat16.c: 313: next_cluster = different_sector_cluste
      +                          r;
 13854  00D514  C09F  F0AA         	movff	__make_cluster_chain@different_sector_cluster,__make_cluster_chain@next_cluster
 13855  00D518  C0A0  F0AB         	movff	__make_cluster_chain@different_sector_cluster+1,__make_cluster_chain@next_cluster
      +                          +1
 13856  00D51C                     l1806:
 13857                           
 13858                           ; BSR set to: 0
 13859                           ;fat16.c: 314: };fat16.c: 315: };fat16.c: 317: _write_value_to_offset(offset, buffer, ne
      +                          xt_cluster);
 13860                           
 13861                           ; BSR set to: 0
 13862                           
 13863                           ; BSR set to: 0
 13864  00D51C  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 13865  00D520  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 13866  00D524  0E00               	movlw	low _buffer
 13867  00D526  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 13868  00D528  0E0A               	movlw	high _buffer
 13869  00D52A  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 13870  00D52C  C0AA  F064         	movff	__make_cluster_chain@next_cluster,__write_value_to_offset@value
 13871  00D530  C0AB  F065         	movff	__make_cluster_chain@next_cluster+1,__write_value_to_offset@value+1
 13872  00D534  EC13  F0AC         	call	__write_value_to_offset	;wreg free
 13873  00D538  D025               	goto	L86
 13874  00D53A                     l1799:
 13875                           
 13876                           ; BSR set to: 0
 13877                           ;fat16.c: 327: else if(remaining_clusters == 1)
 13878                           
 13879                           ; BSR set to: 0
 13880  00D53A  05A2               	decf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 13881  00D53C  11A3               	iorwf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 13882  00D53E  A4D8               	btfss	status,2,c
 13883  00D540  D028               	goto	l1808
 13884                           
 13885                           ; BSR set to: 0
 13886                           ;fat16.c: 328: {;fat16.c: 330: next_cluster = _read_value_from_offset(offset, buffer);
 13887  00D542  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 13888  00D546  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 13889  00D54A  0E00               	movlw	low _buffer
 13890  00D54C  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 13891  00D54E  0E0A               	movlw	high _buffer
 13892  00D550  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 13893  00D552  EC1A  F0AA         	call	__read_value_from_offset	;wreg free
 13894  00D556  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 13895  00D55A  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 13896                           
 13897                           ;fat16.c: 332: if(next_cluster != 0xFFFF)
 13898  00D55E  0100               	movlb	0	; () banked
 13899  00D560  29AA               	incf	__make_cluster_chain@next_cluster& (0+255),w,b
 13900  00D562  E103               	bnz	u13980
 13901  00D564  29AB               	incf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13902  00D566  B4D8               	btfsc	status,2,c
 13903  00D568  D010               	goto	l1809
 13904  00D56A                     u13980:
 13905                           
 13906                           ; BSR set to: 0
 13907                           ;fat16.c: 333: {;fat16.c: 335: _write_value_to_offset(offset, buffer, 0xFFFF);
 13908  00D56A  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 13909  00D56E  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 13910  00D572  0E00               	movlw	low _buffer
 13911  00D574  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 13912  00D576  0E0A               	movlw	high _buffer
 13913  00D578  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 13914  00D57A  0EFF               	movlw	255
 13915  00D57C  6F65               	movwf	(__write_value_to_offset@value+1)& (0+255),b
 13916  00D57E  6964               	setf	__write_value_to_offset@value& (0+255),b
 13917  00D580  EC13  F0AC         	call	__write_value_to_offset	;wreg free
 13918  00D584                     L86:
 13919                           
 13920                           ;fat16.c: 337: data_changed = 1;
 13921  00D584  0E01               	movlw	1
 13922  00D586  0100               	movlb	0	; () banked
 13923  00D588  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 13924  00D58A                     l1809:
 13925                           
 13926                           ; BSR set to: 0
 13927                           ;fat16.c: 338: };fat16.c: 341: --remaining_clusters;
 13928                           
 13929                           ; BSR set to: 0
 13930  00D58A  07A2               	decf	__make_cluster_chain@remaining_clusters& (0+255),f,b
 13931  00D58C  A0D8               	btfss	status,0,c
 13932  00D58E  07A3               	decf	(__make_cluster_chain@remaining_clusters+1)& (0+255),f,b
 13933                           
 13934                           ;fat16.c: 342: }
 13935  00D590  D020               	goto	l1810
 13936  00D592                     l1808:
 13937                           
 13938                           ; BSR set to: 0
 13939                           ;fat16.c: 345: else;fat16.c: 346: {;fat16.c: 348: next_cluster = _read_value_from_offset
      +                          (offset, buffer);
 13940                           
 13941                           ; BSR set to: 0
 13942  00D592  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 13943  00D596  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 13944  00D59A  0E00               	movlw	low _buffer
 13945  00D59C  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 13946  00D59E  0E0A               	movlw	high _buffer
 13947  00D5A0  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 13948  00D5A2  EC1A  F0AA         	call	__read_value_from_offset	;wreg free
 13949  00D5A6  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 13950  00D5AA  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 13951                           
 13952                           ;fat16.c: 351: _write_value_to_offset(offset, buffer, 0x0000);
 13953  00D5AE  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 13954  00D5B2  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 13955  00D5B6  0E00               	movlw	low _buffer
 13956  00D5B8  0100               	movlb	0	; () banked
 13957  00D5BA  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 13958  00D5BC  0E0A               	movlw	high _buffer
 13959  00D5BE  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 13960  00D5C0  0E00               	movlw	0
 13961  00D5C2  6F65               	movwf	(__write_value_to_offset@value+1)& (0+255),b
 13962  00D5C4  0E00               	movlw	0
 13963  00D5C6  6F64               	movwf	__write_value_to_offset@value& (0+255),b
 13964  00D5C8  EC13  F0AC         	call	__write_value_to_offset	;wreg free
 13965                           
 13966                           ;fat16.c: 353: data_changed = 1;
 13967  00D5CC  0E01               	movlw	1
 13968  00D5CE  0100               	movlb	0	; () banked
 13969  00D5D0  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 13970  00D5D2                     l1810:
 13971                           
 13972                           ; BSR set to: 0
 13973                           
 13974                           ; BSR set to: 0
 13975                           
 13976                           ; BSR set to: 0
 13977                           
 13978                           ; BSR set to: 0
 13979  00D5D2  51A2               	movf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 13980  00D5D4  11A3               	iorwf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 13981  00D5D6  A4D8               	btfss	status,2,c
 13982  00D5D8  D6F9               	goto	l1796
 13983                           
 13984                           ; BSR set to: 0
 13985  00D5DA  51AB               	movf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13986  00D5DC  E104               	bnz	u14000
 13987  00D5DE  0E02               	movlw	2
 13988  00D5E0  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 13989  00D5E2  A0D8               	btfss	status,0,c
 13990  00D5E4  D006               	goto	u14010
 13991  00D5E6                     u14000:
 13992                           
 13993                           ; BSR set to: 0
 13994  00D5E6  0EDA               	movlw	218
 13995  00D5E8  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 13996  00D5EA  0E1F               	movlw	31
 13997  00D5EC  59AB               	subwfb	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13998  00D5EE  A0D8               	btfss	status,0,c
 13999  00D5F0  D6ED               	goto	l1796
 14000  00D5F2                     u14010:
 14001                           
 14002                           ; BSR set to: 0
 14003                           ;fat16.c: 354: };fat16.c: 356: };fat16.c: 359: if(data_changed)
 14004                           
 14005                           ; BSR set to: 0
 14006                           
 14007                           ; BSR set to: 0
 14008  00D5F2  51A1               	movf	__make_cluster_chain@data_changed& (0+255),w,b
 14009  00D5F4  B4D8               	btfsc	status,2,c
 14010  00D5F6  D00A               	goto	l1814
 14011                           
 14012                           ; BSR set to: 0
 14013                           ;fat16.c: 360: {;fat16.c: 361: flash_sector_write(sector_in_buffer, buffer);
 14014  00D5F8  C0A6  F07F         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 14015  00D5FC  C0A7  F080         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 14016  00D600  0E00               	movlw	low _buffer
 14017  00D602  6F81               	movwf	flash_sector_write@data& (0+255),b
 14018  00D604  0E0A               	movlw	high _buffer
 14019  00D606  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 14020  00D608  EC0B  F0A9         	call	_flash_sector_write	;wreg free
 14021  00D60C                     l1814:
 14022                           
 14023                           ;fat16.c: 362: };fat16.c: 365: if(number_of_clusters>0)
 14024  00D60C  0100               	movlb	0	; () banked
 14025  00D60E  5197               	movf	__make_cluster_chain@number_of_clusters& (0+255),w,b
 14026  00D610  1198               	iorwf	(__make_cluster_chain@number_of_clusters+1)& (0+255),w,b
 14027  00D612  B4D8               	btfsc	status,2,c
 14028  00D614  D005               	goto	l1815
 14029                           
 14030                           ; BSR set to: 0
 14031                           ;fat16.c: 366: {;fat16.c: 367: return first_cluster;
 14032  00D616  C095  F095         	movff	__make_cluster_chain@first_cluster,?__make_cluster_chain
 14033  00D61A  C096  F096         	movff	__make_cluster_chain@first_cluster+1,?__make_cluster_chain+1
 14034                           
 14035                           ; BSR set to: 0
 14036                           ;fat16.c: 368: }
 14037  00D61E  0012               	return	
 14038  00D620                     l1815:
 14039                           
 14040                           ; BSR set to: 0
 14041                           ;fat16.c: 369: else;fat16.c: 370: {;fat16.c: 371: return 0x0000;
 14042                           
 14043                           ; BSR set to: 0
 14044  00D620  0E00               	movlw	0
 14045  00D622  6F96               	movwf	(?__make_cluster_chain+1)& (0+255),b
 14046  00D624  0E00               	movlw	0
 14047  00D626  6F95               	movwf	?__make_cluster_chain& (0+255),b
 14048                           
 14049                           ; BSR set to: 0
 14050  00D628  0012               	return	
 14051  00D62A                     __end_of__make_cluster_chain:
 14052                           	opt stack 0
 14053                           tblptru	equ	0xFF8
 14054                           tblptrh	equ	0xFF7
 14055                           tblptrl	equ	0xFF6
 14056                           tablat	equ	0xFF5
 14057                           prodh	equ	0xFF4
 14058                           prodl	equ	0xFF3
 14059                           postinc0	equ	0xFEE
 14060                           wreg	equ	0xFE8
 14061                           postdec1	equ	0xFE5
 14062                           plusw1	equ	0xFE3
 14063                           fsr1h	equ	0xFE2
 14064                           fsr1l	equ	0xFE1
 14065                           indf2	equ	0xFDF
 14066                           postinc2	equ	0xFDE
 14067                           plusw2	equ	0xFDB
 14068                           fsr2h	equ	0xFDA
 14069                           fsr2l	equ	0xFD9
 14070                           status	equ	0xFD8
 14071                           
 14072 ;; *************** function __write_value_to_offset *****************
 14073 ;; Defined at:
 14074 ;;		line 124 in file "fat16.c"
 14075 ;; Parameters:    Size  Location     Type
 14076 ;;  offset          2    0[BANK0 ] unsigned int 
 14077 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 14078 ;;		 -> buffer(512), 
 14079 ;;  value           2    4[BANK0 ] unsigned int 
 14080 ;; Auto vars:     Size  Location     Type
 14081 ;;		None
 14082 ;; Return value:  Size  Location     Type
 14083 ;;                  1    wreg      void 
 14084 ;; Registers used:
 14085 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14086 ;; Tracked objects:
 14087 ;;		On entry : 0/0
 14088 ;;		On exit  : 0/0
 14089 ;;		Unchanged: 0/0
 14090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14091 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14093 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14094 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14095 ;;Total ram usage:        8 bytes
 14096 ;; Hardware stack levels used:    1
 14097 ;; Hardware stack levels required when called:   10
 14098 ;; This function calls:
 14099 ;;		Nothing
 14100 ;; This function is called by:
 14101 ;;		__make_cluster_chain
 14102 ;; This function uses a non-reentrant model
 14103 ;;
 14104                           
 14105                           	psect	text45
 14106  015826                     __ptext45:
 14107                           	opt stack 0
 14108  015826                     __write_value_to_offset:
 14109                           	opt stack 16
 14110                           
 14111                           ;fat16.c: 126: buffer[offset] = (uint8_t) (value & 0xFF);
 14112                           
 14113                           ; BSR set to: 0
 14114                           ;incstack = 0
 14115  015826  0100               	movlb	0	; () banked
 14116  015828  5160               	movf	__write_value_to_offset@offset& (0+255),w,b
 14117  01582A  2562               	addwf	__write_value_to_offset@buffer& (0+255),w,b
 14118  01582C  6ED9               	movwf	fsr2l,c
 14119  01582E  5161               	movf	(__write_value_to_offset@offset+1)& (0+255),w,b
 14120  015830  2163               	addwfc	(__write_value_to_offset@buffer+1)& (0+255),w,b
 14121  015832  6EDA               	movwf	fsr2h,c
 14122  015834  C064  FFDF         	movff	__write_value_to_offset@value,indf2
 14123                           
 14124                           ; BSR set to: 0
 14125                           ;fat16.c: 127: value >>= 8;
 14126  015838  5165               	movf	(__write_value_to_offset@value+1)& (0+255),w,b
 14127  01583A  6F64               	movwf	__write_value_to_offset@value& (0+255),b
 14128  01583C  6B65               	clrf	(__write_value_to_offset@value+1)& (0+255),b
 14129                           
 14130                           ; BSR set to: 0
 14131                           ;fat16.c: 128: buffer[offset+1] = (uint8_t) (value & 0xFF);
 14132  01583E  0E01               	movlw	1
 14133  015840  2560               	addwf	__write_value_to_offset@offset& (0+255),w,b
 14134  015842  6F66               	movwf	??__write_value_to_offset& (0+255),b
 14135  015844  0E00               	movlw	0
 14136  015846  2161               	addwfc	(__write_value_to_offset@offset+1)& (0+255),w,b
 14137  015848  6F67               	movwf	(??__write_value_to_offset+1)& (0+255),b
 14138  01584A  5166               	movf	??__write_value_to_offset& (0+255),w,b
 14139  01584C  2562               	addwf	__write_value_to_offset@buffer& (0+255),w,b
 14140  01584E  6ED9               	movwf	fsr2l,c
 14141  015850  5167               	movf	(??__write_value_to_offset+1)& (0+255),w,b
 14142  015852  2163               	addwfc	(__write_value_to_offset@buffer+1)& (0+255),w,b
 14143  015854  6EDA               	movwf	fsr2h,c
 14144  015856  C064  FFDF         	movff	__write_value_to_offset@value,indf2
 14145                           
 14146                           ; BSR set to: 0
 14147  01585A  0012               	return		;funcret
 14148  01585C                     __end_of__write_value_to_offset:
 14149                           	opt stack 0
 14150                           tblptru	equ	0xFF8
 14151                           tblptrh	equ	0xFF7
 14152                           tblptrl	equ	0xFF6
 14153                           tablat	equ	0xFF5
 14154                           prodh	equ	0xFF4
 14155                           prodl	equ	0xFF3
 14156                           postinc0	equ	0xFEE
 14157                           wreg	equ	0xFE8
 14158                           postdec1	equ	0xFE5
 14159                           plusw1	equ	0xFE3
 14160                           fsr1h	equ	0xFE2
 14161                           fsr1l	equ	0xFE1
 14162                           indf2	equ	0xFDF
 14163                           postinc2	equ	0xFDE
 14164                           plusw2	equ	0xFDB
 14165                           fsr2h	equ	0xFDA
 14166                           fsr2l	equ	0xFD9
 14167                           status	equ	0xFD8
 14168                           
 14169 ;; *************** function __get_available_cluster *****************
 14170 ;; Defined at:
 14171 ;;		line 131 in file "fat16.c"
 14172 ;; Parameters:    Size  Location     Type
 14173 ;;  first_sector    2   43[BANK0 ] unsigned int 
 14174 ;;  skip_sector     2   45[BANK0 ] unsigned int 
 14175 ;; Auto vars:     Size  Location     Type
 14176 ;;  sector          2   51[BANK0 ] unsigned int 
 14177 ;;  offset          2   49[BANK0 ] unsigned int 
 14178 ;;  cluster         2   47[BANK0 ] unsigned int 
 14179 ;; Return value:  Size  Location     Type
 14180 ;;                  2   43[BANK0 ] unsigned int 
 14181 ;; Registers used:
 14182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14183 ;; Tracked objects:
 14184 ;;		On entry : 0/0
 14185 ;;		On exit  : 0/0
 14186 ;;		Unchanged: 0/0
 14187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14188 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14189 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14191 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14192 ;;Total ram usage:       10 bytes
 14193 ;; Hardware stack levels used:    1
 14194 ;; Hardware stack levels required when called:   15
 14195 ;; This function calls:
 14196 ;;		__cluster_from_sector_and_offset
 14197 ;;		__get_available_offset_from_buffer
 14198 ;;		_flash_sector_read
 14199 ;; This function is called by:
 14200 ;;		__make_cluster_chain
 14201 ;; This function uses a non-reentrant model
 14202 ;;
 14203                           
 14204                           	psect	text46
 14205  012AE8                     __ptext46:
 14206                           	opt stack 0
 14207  012AE8                     __get_available_cluster:
 14208                           	opt stack 11
 14209                           
 14210                           ;fat16.c: 133: uint16_t cluster;;fat16.c: 134: uint16_t sector;;fat16.c: 135: uint16_t o
      +                          ffset;;fat16.c: 138: for (sector=first_sector; sector<=33; ++sector)
 14211                           
 14212                           ; BSR set to: 0
 14213                           ;incstack = 0
 14214  012AE8  C08B  F093         	movff	__get_available_cluster@first_sector,__get_available_cluster@sector
 14215  012AEC  C08C  F094         	movff	__get_available_cluster@first_sector+1,__get_available_cluster@sector+1
 14216  012AF0  0100               	movlb	0	; () banked
 14217  012AF2  5194               	movf	(__get_available_cluster@sector+1)& (0+255),w,b
 14218  012AF4  E15B               	bnz	l13998
 14219  012AF6  0E22               	movlw	34
 14220  012AF8  5D93               	subwf	__get_available_cluster@sector& (0+255),w,b
 14221  012AFA  B0D8               	btfsc	status,0,c
 14222  012AFC  D057               	goto	u12640
 14223                           
 14224                           ; BSR set to: 0
 14225                           ;fat16.c: 139: {;fat16.c: 141: if(sector == skip_sector)
 14226                           
 14227                           ; BSR set to: 0
 14228                           
 14229                           ; BSR set to: 0
 14230  012AFE  518D               	movf	__get_available_cluster@skip_sector& (0+255),w,b
 14231  012B00  1993               	xorwf	__get_available_cluster@sector& (0+255),w,b
 14232  012B02  E104               	bnz	l13974
 14233  012B04  518E               	movf	(__get_available_cluster@skip_sector+1)& (0+255),w,b
 14234  012B06  1994               	xorwf	(__get_available_cluster@sector+1)& (0+255),w,b
 14235  012B08  B4D8               	btfsc	status,2,c
 14236  012B0A  D04D               	goto	l1781
 14237  012B0C                     l13974:
 14238                           
 14239                           ; BSR set to: 0
 14240                           ;fat16.c: 144: };fat16.c: 147: flash_sector_read(sector, buffer);
 14241  012B0C  C093  F087         	movff	__get_available_cluster@sector,flash_sector_read@page
 14242  012B10  C094  F088         	movff	__get_available_cluster@sector+1,flash_sector_read@page+1
 14243  012B14  0E00               	movlw	low _buffer
 14244  012B16  6F89               	movwf	flash_sector_read@data& (0+255),b
 14245  012B18  0E0A               	movlw	high _buffer
 14246  012B1A  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 14247  012B1C  EC12  F0AE         	call	_flash_sector_read	;wreg free
 14248                           
 14249                           ;fat16.c: 150: if(sector == 2)
 14250  012B20  0E02               	movlw	2
 14251  012B22  0100               	movlb	0	; () banked
 14252  012B24  1993               	xorwf	__get_available_cluster@sector& (0+255),w,b
 14253  012B26  1194               	iorwf	(__get_available_cluster@sector+1)& (0+255),w,b
 14254  012B28  A4D8               	btfss	status,2,c
 14255  012B2A  D00B               	goto	l1776
 14256                           
 14257                           ; BSR set to: 0
 14258                           ;fat16.c: 151: {;fat16.c: 153: offset = _get_available_offset_from_buffer(4, buffer);
 14259  012B2C  0E00               	movlw	0
 14260  012B2E  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 14261  012B30  0E04               	movlw	4
 14262  012B32  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 14263  012B34  0E00               	movlw	low _buffer
 14264  012B36  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 14265  012B38  0E0A               	movlw	high _buffer
 14266  012B3A  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 14267  012B3C  ECD1  F0A4         	call	__get_available_offset_from_buffer	;wreg free
 14268  012B40  D00B               	goto	L1
 14269  012B42                     l1776:
 14270                           
 14271                           ;fat16.c: 155: else;fat16.c: 156: {;fat16.c: 157: offset = _get_available_offset_from_bu
      +                          ffer(0, buffer);
 14272  012B42  0E00               	movlw	0
 14273  012B44  0100               	movlb	0	; () banked
 14274  012B46  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 14275  012B48  0E00               	movlw	0
 14276  012B4A  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 14277  012B4C  0E00               	movlw	low _buffer
 14278  012B4E  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 14279  012B50  0E0A               	movlw	high _buffer
 14280  012B52  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 14281  012B54  ECD1  F0A4         	call	__get_available_offset_from_buffer	;wreg free
 14282  012B58                     L1:
 14283  012B58  C060  F091         	movff	?__get_available_offset_from_buffer,__get_available_cluster@offset
 14284  012B5C  C061  F092         	movff	?__get_available_offset_from_buffer+1,__get_available_cluster@offset+1
 14285                           
 14286                           ;fat16.c: 158: };fat16.c: 161: if(offset != 0xFFFF)
 14287  012B60  0100               	movlb	0	; () banked
 14288  012B62  2991               	incf	__get_available_cluster@offset& (0+255),w,b
 14289  012B64  E103               	bnz	u12620
 14290  012B66  2992               	incf	(__get_available_cluster@offset+1)& (0+255),w,b
 14291  012B68  B4D8               	btfsc	status,2,c
 14292  012B6A  D01D               	goto	l1781
 14293  012B6C                     u12620:
 14294                           
 14295                           ; BSR set to: 0
 14296                           ;fat16.c: 162: {;fat16.c: 164: cluster = _cluster_from_sector_and_offset(sector, offset)
      +                          ;
 14297  012B6C  C093  F060         	movff	__get_available_cluster@sector,__cluster_from_sector_and_offset@sector
 14298  012B70  C094  F061         	movff	__get_available_cluster@sector+1,__cluster_from_sector_and_offset@sector+1
 14299  012B74  C091  F062         	movff	__get_available_cluster@offset,__cluster_from_sector_and_offset@offset
 14300  012B78  C092  F063         	movff	__get_available_cluster@offset+1,__cluster_from_sector_and_offset@offset+1
 14301  012B7C  ECEA  F0AD         	call	__cluster_from_sector_and_offset	;wreg free
 14302  012B80  C060  F08F         	movff	?__cluster_from_sector_and_offset,__get_available_cluster@cluster
 14303  012B84  C061  F090         	movff	?__cluster_from_sector_and_offset+1,__get_available_cluster@cluster+1
 14304                           
 14305                           ;fat16.c: 166: if(cluster > 8191)
 14306  012B88  0E20               	movlw	32
 14307  012B8A  0100               	movlb	0	; () banked
 14308  012B8C  5D90               	subwf	(__get_available_cluster@cluster+1)& (0+255),w,b
 14309  012B8E  A0D8               	btfss	status,0,c
 14310  012B90  D005               	goto	l1779
 14311                           
 14312                           ; BSR set to: 0
 14313                           ;fat16.c: 167: {;fat16.c: 169: return 0x0000;
 14314  012B92  0E00               	movlw	0
 14315  012B94  6F8C               	movwf	(?__get_available_cluster+1)& (0+255),b
 14316  012B96  0E00               	movlw	0
 14317  012B98  6F8B               	movwf	?__get_available_cluster& (0+255),b
 14318                           
 14319                           ; BSR set to: 0
 14320  012B9A  0012               	return	
 14321  012B9C                     l1779:
 14322                           
 14323                           ; BSR set to: 0
 14324                           ;fat16.c: 171: else;fat16.c: 172: {;fat16.c: 174: return cluster;
 14325  012B9C  C08F  F08B         	movff	__get_available_cluster@cluster,?__get_available_cluster
 14326  012BA0  C090  F08C         	movff	__get_available_cluster@cluster+1,?__get_available_cluster+1
 14327  012BA4  0012               	return	
 14328  012BA6                     l1781:
 14329                           
 14330                           ; BSR set to: 0
 14331                           
 14332                           ; BSR set to: 0
 14333                           
 14334                           ; BSR set to: 0
 14335                           
 14336                           ; BSR set to: 0
 14337  012BA6  4B93               	infsnz	__get_available_cluster@sector& (0+255),f,b
 14338  012BA8  2B94               	incf	(__get_available_cluster@sector+1)& (0+255),f,b
 14339  012BAA  D7A3               	goto	L2
 14340  012BAC                     u12640:
 14341  012BAC                     l13998:
 14342                           
 14343                           ; BSR set to: 0
 14344                           ;fat16.c: 175: };fat16.c: 176: };fat16.c: 177: };fat16.c: 180: return 0x0000;
 14345  012BAC  0E00               	movlw	0
 14346  012BAE  6F8C               	movwf	(?__get_available_cluster+1)& (0+255),b
 14347  012BB0  0E00               	movlw	0
 14348  012BB2  6F8B               	movwf	?__get_available_cluster& (0+255),b
 14349  012BB4  0012               	return	
 14350  012BB6                     __end_of__get_available_cluster:
 14351                           	opt stack 0
 14352                           tblptru	equ	0xFF8
 14353                           tblptrh	equ	0xFF7
 14354                           tblptrl	equ	0xFF6
 14355                           tablat	equ	0xFF5
 14356                           prodh	equ	0xFF4
 14357                           prodl	equ	0xFF3
 14358                           postinc0	equ	0xFEE
 14359                           wreg	equ	0xFE8
 14360                           postdec1	equ	0xFE5
 14361                           plusw1	equ	0xFE3
 14362                           fsr1h	equ	0xFE2
 14363                           fsr1l	equ	0xFE1
 14364                           indf2	equ	0xFDF
 14365                           postinc2	equ	0xFDE
 14366                           plusw2	equ	0xFDB
 14367                           fsr2h	equ	0xFDA
 14368                           fsr2l	equ	0xFD9
 14369                           status	equ	0xFD8
 14370                           
 14371 ;; *************** function __get_available_offset_from_buffer *****************
 14372 ;; Defined at:
 14373 ;;		line 99 in file "fat16.c"
 14374 ;; Parameters:    Size  Location     Type
 14375 ;;  minimum_offs    2    0[BANK0 ] unsigned int 
 14376 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 14377 ;;		 -> buffer(512), 
 14378 ;; Auto vars:     Size  Location     Type
 14379 ;;  offset          2    6[BANK0 ] unsigned int 
 14380 ;; Return value:  Size  Location     Type
 14381 ;;                  2    0[BANK0 ] unsigned int 
 14382 ;; Registers used:
 14383 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14384 ;; Tracked objects:
 14385 ;;		On entry : 0/0
 14386 ;;		On exit  : 0/0
 14387 ;;		Unchanged: 0/0
 14388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14389 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14390 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14391 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14392 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14393 ;;Total ram usage:        8 bytes
 14394 ;; Hardware stack levels used:    1
 14395 ;; Hardware stack levels required when called:   10
 14396 ;; This function calls:
 14397 ;;		Nothing
 14398 ;; This function is called by:
 14399 ;;		__get_available_cluster
 14400 ;;		__make_cluster_chain
 14401 ;; This function uses a non-reentrant model
 14402 ;;
 14403                           
 14404                           	psect	text47
 14405  0149A2                     __ptext47:
 14406                           	opt stack 0
 14407  0149A2                     __get_available_offset_from_buffer:
 14408                           	opt stack 16
 14409                           
 14410                           ;fat16.c: 101: uint16_t offset;;fat16.c: 103: for(offset = minimum_offset; offset<512; o
      +                          ffset += 2)
 14411                           
 14412                           ; BSR set to: 0
 14413                           ;incstack = 0
 14414  0149A2  C060  F066         	movff	__get_available_offset_from_buffer@minimum_offset,__get_available_offset_from_buf
      +                          fer@offset
 14415  0149A6  C061  F067         	movff	__get_available_offset_from_buffer@minimum_offset+1,__get_available_offset_from_b
      +                          uffer@offset+1
 14416  0149AA  0E02               	movlw	2
 14417  0149AC  0100               	movlb	0	; () banked
 14418  0149AE  D022               	goto	L3
 14419  0149B0                     
 14420                           ; BSR set to: 0
 14421                           ;fat16.c: 104: {;fat16.c: 105: if((buffer[offset] == 0x00) && (buffer[offset + 1] == 0x0
      +                          0))
 14422                           
 14423                           ; BSR set to: 0
 14424  0149B0  5166               	movf	__get_available_offset_from_buffer@offset& (0+255),w,b
 14425  0149B2  2562               	addwf	__get_available_offset_from_buffer@buffer& (0+255),w,b
 14426  0149B4  6ED9               	movwf	fsr2l,c
 14427  0149B6  5167               	movf	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 14428  0149B8  2163               	addwfc	(__get_available_offset_from_buffer@buffer+1)& (0+255),w,b
 14429  0149BA  6EDA               	movwf	fsr2h,c
 14430  0149BC  50DF               	movf	indf2,w,c
 14431  0149BE  A4D8               	btfss	status,2,c
 14432  0149C0  D014               	goto	l1762
 14433                           
 14434                           ; BSR set to: 0
 14435  0149C2  0E01               	movlw	1
 14436  0149C4  2566               	addwf	__get_available_offset_from_buffer@offset& (0+255),w,b
 14437  0149C6  6F64               	movwf	??__get_available_offset_from_buffer& (0+255),b
 14438  0149C8  0E00               	movlw	0
 14439  0149CA  2167               	addwfc	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 14440  0149CC  6F65               	movwf	(??__get_available_offset_from_buffer+1)& (0+255),b
 14441  0149CE  5164               	movf	??__get_available_offset_from_buffer& (0+255),w,b
 14442  0149D0  2562               	addwf	__get_available_offset_from_buffer@buffer& (0+255),w,b
 14443  0149D2  6ED9               	movwf	fsr2l,c
 14444  0149D4  5165               	movf	(??__get_available_offset_from_buffer+1)& (0+255),w,b
 14445  0149D6  2163               	addwfc	(__get_available_offset_from_buffer@buffer+1)& (0+255),w,b
 14446  0149D8  6EDA               	movwf	fsr2h,c
 14447  0149DA  50DF               	movf	indf2,w,c
 14448  0149DC  A4D8               	btfss	status,2,c
 14449  0149DE  D005               	goto	l1762
 14450                           
 14451                           ; BSR set to: 0
 14452                           ;fat16.c: 106: {;fat16.c: 107: return offset;
 14453  0149E0  C066  F060         	movff	__get_available_offset_from_buffer@offset,?__get_available_offset_from_buffer
 14454  0149E4  C067  F061         	movff	__get_available_offset_from_buffer@offset+1,?__get_available_offset_from_buffer+1
 14455  0149E8  0012               	return	
 14456  0149EA                     l1762:
 14457                           
 14458                           ; BSR set to: 0
 14459                           
 14460                           ; BSR set to: 0
 14461  0149EA  0E02               	movlw	2
 14462  0149EC  2766               	addwf	__get_available_offset_from_buffer@offset& (0+255),f,b
 14463  0149EE  0E00               	movlw	0
 14464  0149F0  2367               	addwfc	(__get_available_offset_from_buffer@offset+1)& (0+255),f,b
 14465  0149F2  0E02               	movlw	2
 14466  0149F4                     L3:
 14467  0149F4  5D67               	subwf	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 14468  0149F6  A0D8               	btfss	status,0,c
 14469  0149F8  D7DB               	goto	l1760
 14470                           
 14471                           ; BSR set to: 0
 14472                           ;fat16.c: 108: };fat16.c: 109: };fat16.c: 112: return 0xFFFF;
 14473  0149FA  6960               	setf	?__get_available_offset_from_buffer& (0+255),b
 14474  0149FC  6961               	setf	(?__get_available_offset_from_buffer+1)& (0+255),b
 14475                           
 14476                           ; BSR set to: 0
 14477  0149FE  0012               	return		;funcret
 14478  014A00                     __end_of__get_available_offset_from_buffer:
 14479                           	opt stack 0
 14480                           tblptru	equ	0xFF8
 14481                           tblptrh	equ	0xFF7
 14482                           tblptrl	equ	0xFF6
 14483                           tablat	equ	0xFF5
 14484                           prodh	equ	0xFF4
 14485                           prodl	equ	0xFF3
 14486                           postinc0	equ	0xFEE
 14487                           wreg	equ	0xFE8
 14488                           postdec1	equ	0xFE5
 14489                           plusw1	equ	0xFE3
 14490                           fsr1h	equ	0xFE2
 14491                           fsr1l	equ	0xFE1
 14492                           indf2	equ	0xFDF
 14493                           postinc2	equ	0xFDE
 14494                           plusw2	equ	0xFDB
 14495                           fsr2h	equ	0xFDA
 14496                           fsr2l	equ	0xFD9
 14497                           status	equ	0xFD8
 14498                           
 14499 ;; *************** function __cluster_from_sector_and_offset *****************
 14500 ;; Defined at:
 14501 ;;		line 90 in file "fat16.c"
 14502 ;; Parameters:    Size  Location     Type
 14503 ;;  sector          2    0[BANK0 ] unsigned int 
 14504 ;;  offset          2    2[BANK0 ] unsigned int 
 14505 ;; Auto vars:     Size  Location     Type
 14506 ;;		None
 14507 ;; Return value:  Size  Location     Type
 14508 ;;                  2    0[BANK0 ] unsigned int 
 14509 ;; Registers used:
 14510 ;;		wreg, status,2, status,0
 14511 ;; Tracked objects:
 14512 ;;		On entry : 0/0
 14513 ;;		On exit  : 0/0
 14514 ;;		Unchanged: 0/0
 14515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14516 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14519 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14520 ;;Total ram usage:        4 bytes
 14521 ;; Hardware stack levels used:    1
 14522 ;; Hardware stack levels required when called:   10
 14523 ;; This function calls:
 14524 ;;		Nothing
 14525 ;; This function is called by:
 14526 ;;		__get_available_cluster
 14527 ;; This function uses a non-reentrant model
 14528 ;;
 14529                           
 14530                           	psect	text48
 14531  015BD4                     __ptext48:
 14532                           	opt stack 0
 14533  015BD4                     __cluster_from_sector_and_offset:
 14534                           	opt stack 15
 14535                           
 14536                           ;fat16.c: 92: offset >>= 1;
 14537                           
 14538                           ; BSR set to: 0
 14539                           ;incstack = 0
 14540  015BD4  0100               	movlb	0	; () banked
 14541  015BD6  90D8               	bcf	status,0,c
 14542  015BD8  3363               	rrcf	(__cluster_from_sector_and_offset@offset+1)& (0+255),f,b
 14543  015BDA  3362               	rrcf	__cluster_from_sector_and_offset@offset& (0+255),f,b
 14544                           
 14545                           ; BSR set to: 0
 14546                           ;fat16.c: 93: sector -= 2;
 14547  015BDC  0E02               	movlw	2
 14548  015BDE  5F60               	subwf	__cluster_from_sector_and_offset@sector& (0+255),f,b
 14549  015BE0  0E00               	movlw	0
 14550  015BE2  5B61               	subwfb	(__cluster_from_sector_and_offset@sector+1)& (0+255),f,b
 14551                           
 14552                           ; BSR set to: 0
 14553                           ;fat16.c: 94: sector <<= 8;
 14554  015BE4  5160               	movf	__cluster_from_sector_and_offset@sector& (0+255),w,b
 14555  015BE6  6F61               	movwf	(__cluster_from_sector_and_offset@sector+1)& (0+255),b
 14556  015BE8  6B60               	clrf	__cluster_from_sector_and_offset@sector& (0+255),b
 14557                           
 14558                           ; BSR set to: 0
 14559                           ;fat16.c: 95: sector |= offset;
 14560  015BEA  5162               	movf	__cluster_from_sector_and_offset@offset& (0+255),w,b
 14561  015BEC  1360               	iorwf	__cluster_from_sector_and_offset@sector& (0+255),f,b
 14562  015BEE  5163               	movf	(__cluster_from_sector_and_offset@offset+1)& (0+255),w,b
 14563  015BF0  1361               	iorwf	(__cluster_from_sector_and_offset@sector+1)& (0+255),f,b
 14564                           
 14565                           ; BSR set to: 0
 14566                           ;fat16.c: 96: return sector;
 14567  015BF2  C060  F060         	movff	__cluster_from_sector_and_offset@sector,?__cluster_from_sector_and_offset
 14568  015BF6  C061  F061         	movff	__cluster_from_sector_and_offset@sector+1,?__cluster_from_sector_and_offset+1
 14569  015BFA  0012               	return	
 14570  015BFC                     __end_of__cluster_from_sector_and_offset:
 14571                           	opt stack 0
 14572                           tblptru	equ	0xFF8
 14573                           tblptrh	equ	0xFF7
 14574                           tblptrl	equ	0xFF6
 14575                           tablat	equ	0xFF5
 14576                           prodh	equ	0xFF4
 14577                           prodl	equ	0xFF3
 14578                           postinc0	equ	0xFEE
 14579                           wreg	equ	0xFE8
 14580                           postdec1	equ	0xFE5
 14581                           plusw1	equ	0xFE3
 14582                           fsr1h	equ	0xFE2
 14583                           fsr1l	equ	0xFE1
 14584                           indf2	equ	0xFDF
 14585                           postinc2	equ	0xFDE
 14586                           plusw2	equ	0xFDB
 14587                           fsr2h	equ	0xFDA
 14588                           fsr2l	equ	0xFD9
 14589                           status	equ	0xFD8
 14590                           
 14591 ;; *************** function __get_time *****************
 14592 ;; Defined at:
 14593 ;;		line 377 in file "fat16.c"
 14594 ;; Parameters:    Size  Location     Type
 14595 ;;		None
 14596 ;; Auto vars:     Size  Location     Type
 14597 ;;		None
 14598 ;; Return value:  Size  Location     Type
 14599 ;;                  2    0[BANK0 ] unsigned int 
 14600 ;; Registers used:
 14601 ;;		wreg, status,2
 14602 ;; Tracked objects:
 14603 ;;		On entry : 0/0
 14604 ;;		On exit  : 0/0
 14605 ;;		Unchanged: 0/0
 14606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14607 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14610 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14611 ;;Total ram usage:        2 bytes
 14612 ;; Hardware stack levels used:    1
 14613 ;; Hardware stack levels required when called:   10
 14614 ;; This function calls:
 14615 ;;		Nothing
 14616 ;; This function is called by:
 14617 ;;		_fat_create_file
 14618 ;; This function uses a non-reentrant model
 14619 ;;
 14620                           
 14621                           	psect	text49
 14622  015EE0                     __ptext49:
 14623                           	opt stack 0
 14624  015EE0                     __get_time:
 14625                           	opt stack 17
 14626                           
 14627                           ;fat16.c: 389: return 0x0000;
 14628                           
 14629                           ; BSR set to: 0
 14630                           ;incstack = 0
 14631  015EE0  0E00               	movlw	0
 14632  015EE2  0100               	movlb	0	; () banked
 14633  015EE4  6F61               	movwf	(?__get_time+1)& (0+255),b
 14634  015EE6  0E00               	movlw	0
 14635  015EE8  6F60               	movwf	?__get_time& (0+255),b
 14636  015EEA  0012               	return	
 14637  015EEC                     __end_of__get_time:
 14638                           	opt stack 0
 14639                           tblptru	equ	0xFF8
 14640                           tblptrh	equ	0xFF7
 14641                           tblptrl	equ	0xFF6
 14642                           tablat	equ	0xFF5
 14643                           prodh	equ	0xFF4
 14644                           prodl	equ	0xFF3
 14645                           postinc0	equ	0xFEE
 14646                           wreg	equ	0xFE8
 14647                           postdec1	equ	0xFE5
 14648                           plusw1	equ	0xFE3
 14649                           fsr1h	equ	0xFE2
 14650                           fsr1l	equ	0xFE1
 14651                           indf2	equ	0xFDF
 14652                           postinc2	equ	0xFDE
 14653                           plusw2	equ	0xFDB
 14654                           fsr2h	equ	0xFDA
 14655                           fsr2l	equ	0xFD9
 14656                           status	equ	0xFD8
 14657                           
 14658 ;; *************** function __get_date *****************
 14659 ;; Defined at:
 14660 ;;		line 393 in file "fat16.c"
 14661 ;; Parameters:    Size  Location     Type
 14662 ;;		None
 14663 ;; Auto vars:     Size  Location     Type
 14664 ;;		None
 14665 ;; Return value:  Size  Location     Type
 14666 ;;                  2    0[BANK0 ] unsigned int 
 14667 ;; Registers used:
 14668 ;;		wreg, status,2
 14669 ;; Tracked objects:
 14670 ;;		On entry : 0/0
 14671 ;;		On exit  : 0/0
 14672 ;;		Unchanged: 0/0
 14673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14674 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14677 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14678 ;;Total ram usage:        2 bytes
 14679 ;; Hardware stack levels used:    1
 14680 ;; Hardware stack levels required when called:   10
 14681 ;; This function calls:
 14682 ;;		Nothing
 14683 ;; This function is called by:
 14684 ;;		_fat_create_file
 14685 ;; This function uses a non-reentrant model
 14686 ;;
 14687                           
 14688                           	psect	text50
 14689  015EEC                     __ptext50:
 14690                           	opt stack 0
 14691  015EEC                     __get_date:
 14692                           	opt stack 17
 14693                           
 14694                           ;fat16.c: 405: return 0x0000;
 14695                           
 14696                           ; BSR set to: 0
 14697                           ;incstack = 0
 14698  015EEC  0E00               	movlw	0
 14699  015EEE  0100               	movlb	0	; () banked
 14700  015EF0  6F61               	movwf	(?__get_date+1)& (0+255),b
 14701  015EF2  0E00               	movlw	0
 14702  015EF4  6F60               	movwf	?__get_date& (0+255),b
 14703  015EF6  0012               	return	
 14704  015EF8                     __end_of__get_date:
 14705                           	opt stack 0
 14706                           tblptru	equ	0xFF8
 14707                           tblptrh	equ	0xFF7
 14708                           tblptrl	equ	0xFF6
 14709                           tablat	equ	0xFF5
 14710                           prodh	equ	0xFF4
 14711                           prodl	equ	0xFF3
 14712                           postinc0	equ	0xFEE
 14713                           wreg	equ	0xFE8
 14714                           postdec1	equ	0xFE5
 14715                           plusw1	equ	0xFE3
 14716                           fsr1h	equ	0xFE2
 14717                           fsr1l	equ	0xFE1
 14718                           indf2	equ	0xFDF
 14719                           postinc2	equ	0xFDE
 14720                           plusw2	equ	0xFDB
 14721                           fsr2h	equ	0xFDA
 14722                           fsr2l	equ	0xFD9
 14723                           status	equ	0xFD8
 14724                           
 14725 ;; *************** function __get_available_root_entry *****************
 14726 ;; Defined at:
 14727 ;;		line 443 in file "fat16.c"
 14728 ;; Parameters:    Size  Location     Type
 14729 ;;		None
 14730 ;; Auto vars:     Size  Location     Type
 14731 ;;  file_number     1   53[BANK0 ] unsigned char 
 14732 ;; Return value:  Size  Location     Type
 14733 ;;                  1    wreg      unsigned char 
 14734 ;; Registers used:
 14735 ;;		wreg, status,2, status,0, cstack
 14736 ;; Tracked objects:
 14737 ;;		On entry : 0/0
 14738 ;;		On exit  : 0/0
 14739 ;;		Unchanged: 0/0
 14740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14742 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14744 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14745 ;;Total ram usage:        1 bytes
 14746 ;; Hardware stack levels used:    1
 14747 ;; Hardware stack levels required when called:   16
 14748 ;; This function calls:
 14749 ;;		__root_is_available
 14750 ;; This function is called by:
 14751 ;;		_fat_create_file
 14752 ;; This function uses a non-reentrant model
 14753 ;;
 14754                           
 14755                           	psect	text51
 14756  015B58                     __ptext51:
 14757                           	opt stack 0
 14758  015B58                     __get_available_root_entry:
 14759                           	opt stack 11
 14760                           
 14761                           ;fat16.c: 445: uint8_t file_number;;fat16.c: 447: for(file_number=0; file_number<64; ++f
      +                          ile_number)
 14762                           
 14763                           ; BSR set to: 0
 14764                           ;incstack = 0
 14765  015B58  0E00               	movlw	0
 14766  015B5A  0100               	movlb	0	; () banked
 14767  015B5C  6F95               	movwf	__get_available_root_entry@file_number& (0+255),b
 14768  015B5E                     l14986:
 14769                           
 14770                           ; BSR set to: 0
 14771  015B5E  0E3F               	movlw	63
 14772  015B60  6595               	cpfsgt	__get_available_root_entry@file_number& (0+255),b
 14773  015B62  D001               	goto	l1833
 14774  015B64  D00C               	goto	u14060
 14775  015B66                     l1833:
 14776                           
 14777                           ; BSR set to: 0
 14778                           ;fat16.c: 448: {;fat16.c: 449: if(_root_is_available(file_number))
 14779                           
 14780                           ; BSR set to: 0
 14781  015B66  5195               	movf	__get_available_root_entry@file_number& (0+255),w,b
 14782  015B68  EC0D  F0A3         	call	__root_is_available
 14783  015B6C  0900               	iorlw	0
 14784  015B6E  B4D8               	btfsc	status,2,c
 14785  015B70  D003               	goto	l1835
 14786                           
 14787                           ;fat16.c: 450: {;fat16.c: 451: return file_number;
 14788  015B72  0100               	movlb	0	; () banked
 14789  015B74  5195               	movf	__get_available_root_entry@file_number& (0+255),w,b
 14790                           
 14791                           ; BSR set to: 0
 14792  015B76  0012               	return	
 14793  015B78                     l1835:
 14794                           
 14795                           ; BSR set to: 0
 14796  015B78  0100               	movlb	0	; () banked
 14797  015B7A  2B95               	incf	__get_available_root_entry@file_number& (0+255),f,b
 14798  015B7C  D7F0               	goto	l14986
 14799  015B7E                     u14060:
 14800                           
 14801                           ; BSR set to: 0
 14802                           ;fat16.c: 452: };fat16.c: 453: };fat16.c: 454: return 0xFF;
 14803                           
 14804                           ; BSR set to: 0
 14805  015B7E  0EFF               	movlw	255
 14806  015B80  0012               	return	
 14807  015B82                     __end_of__get_available_root_entry:
 14808                           	opt stack 0
 14809                           tblptru	equ	0xFF8
 14810                           tblptrh	equ	0xFF7
 14811                           tblptrl	equ	0xFF6
 14812                           tablat	equ	0xFF5
 14813                           prodh	equ	0xFF4
 14814                           prodl	equ	0xFF3
 14815                           postinc0	equ	0xFEE
 14816                           wreg	equ	0xFE8
 14817                           postdec1	equ	0xFE5
 14818                           plusw1	equ	0xFE3
 14819                           fsr1h	equ	0xFE2
 14820                           fsr1l	equ	0xFE1
 14821                           indf2	equ	0xFDF
 14822                           postinc2	equ	0xFDE
 14823                           plusw2	equ	0xFDB
 14824                           fsr2h	equ	0xFDA
 14825                           fsr2l	equ	0xFD9
 14826                           status	equ	0xFD8
 14827                           
 14828 ;; *************** function __add_item *****************
 14829 ;; Defined at:
 14830 ;;		line 42 in file "config_file.c"
 14831 ;; Parameters:    Size  Location     Type
 14832 ;;  item_string     2   36[BANK0 ] PTR unsigned char 
 14833 ;;		 -> position_display_180_string(21), ccw_limit_string(10), use_ccw_limit_string(14), cw_limit_string(9), 
 14834 ;;		 -> use_cw_limit_string(13), beep_duration_string(14), maximum_speed_manual_string(21), initial_speed_manual_string(
      +21), 
 14835 ;;		 -> maximum_speed_arc_string(18), initial_speed_arc_string(18), maximum_speed_string(14), minimum_speed_string(14), 
 14836 ;;		 -> overshoot_cost_in_steps_string(24), inverse_direction_string(18), overshoot_in_steps_string(19), full_circle_in_
      +steps_string(21), 
 14837 ;;  value           4   38[BANK0 ] long 
 14838 ;;  buffer          2   42[BANK0 ] PTR unsigned char 
 14839 ;;		 -> ConfigFile_buffer(512), 
 14840 ;; Auto vars:     Size  Location     Type
 14841 ;;  length          1   46[BANK0 ] unsigned char 
 14842 ;; Return value:  Size  Location     Type
 14843 ;;                  1    wreg      unsigned char 
 14844 ;; Registers used:
 14845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14846 ;; Tracked objects:
 14847 ;;		On entry : 0/0
 14848 ;;		On exit  : 0/0
 14849 ;;		Unchanged: 0/0
 14850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14851 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14852 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14853 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14854 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14855 ;;Total ram usage:       11 bytes
 14856 ;; Hardware stack levels used:    1
 14857 ;; Hardware stack levels required when called:   13
 14858 ;; This function calls:
 14859 ;;		_ltoa
 14860 ;; This function is called by:
 14861 ;;		_configFile_write
 14862 ;; This function uses a non-reentrant model
 14863 ;;
 14864                           
 14865                           	psect	text52
 14866  011A14                     __ptext52:
 14867                           	opt stack 0
 14868  011A14                     __add_item:
 14869                           	opt stack 15
 14870                           
 14871                           ;config_file.c: 44: uint8_t length = 0;
 14872                           
 14873                           ; BSR set to: 0
 14874                           ;incstack = 0
 14875  011A14  0E00               	movlw	0
 14876  011A16  0100               	movlb	0	; () banked
 14877  011A18  6F8E               	movwf	__add_item@length& (0+255),b
 14878                           
 14879                           ;config_file.c: 47: while(item_string[length])
 14880  011A1A  D01C               	goto	l3022
 14881  011A1C                     
 14882                           ; BSR set to: 0
 14883                           ;config_file.c: 48: {;config_file.c: 49: buffer[length] = item_string[length];
 14884                           
 14885                           ; BSR set to: 0
 14886  011A1C  518E               	movf	__add_item@length& (0+255),w,b
 14887  011A1E  0D01               	mullw	1
 14888  011A20  C084  F08C         	movff	__add_item@item_string,??__add_item
 14889  011A24  C085  F08D         	movff	__add_item@item_string+1,??__add_item+1
 14890  011A28  50F3               	movf	prodl,w,c
 14891  011A2A  278C               	addwf	??__add_item& (0+255),f,b
 14892  011A2C  50F4               	movf	prodh,w,c
 14893  011A2E  238D               	addwfc	(??__add_item+1)& (0+255),f,b
 14894  011A30  C08C  FFF6         	movff	??__add_item,tblptrl
 14895  011A34  C08D  FFF7         	movff	??__add_item+1,tblptrh
 14896  011A38                     	if	0	;tblptru may be non-zero
 14897  011A38                     	endif
 14898  011A38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14899  011A38  0E00               	movlw	low (__mediumconst shr (0+16))
 14900  011A3A  6EF8               	movwf	tblptru,c
 14901  011A3C                     	endif
 14902  011A3C  518E               	movf	__add_item@length& (0+255),w,b
 14903  011A3E  0D01               	mullw	1
 14904  011A40  50F3               	movf	prodl,w,c
 14905  011A42  258A               	addwf	__add_item@buffer& (0+255),w,b
 14906  011A44  6ED9               	movwf	fsr2l,c
 14907  011A46  50F4               	movf	prodh,w,c
 14908  011A48  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14909  011A4A  6EDA               	movwf	fsr2h,c
 14910  011A4C  0008               	tblrd		*
 14911  011A4E  CFF5 FFDF          	movff	tablat,indf2
 14912                           
 14913                           ; BSR set to: 0
 14914                           ;config_file.c: 50: ++length;
 14915  011A52  2B8E               	incf	__add_item@length& (0+255),f,b
 14916  011A54                     l3022:
 14917                           
 14918                           ; BSR set to: 0
 14919                           
 14920                           ; BSR set to: 0
 14921  011A54  518E               	movf	__add_item@length& (0+255),w,b
 14922  011A56  0D01               	mullw	1
 14923  011A58  C084  F08C         	movff	__add_item@item_string,??__add_item
 14924  011A5C  C085  F08D         	movff	__add_item@item_string+1,??__add_item+1
 14925  011A60  50F3               	movf	prodl,w,c
 14926  011A62  278C               	addwf	??__add_item& (0+255),f,b
 14927  011A64  50F4               	movf	prodh,w,c
 14928  011A66  238D               	addwfc	(??__add_item+1)& (0+255),f,b
 14929  011A68  C08C  FFF6         	movff	??__add_item,tblptrl
 14930  011A6C  C08D  FFF7         	movff	??__add_item+1,tblptrh
 14931  011A70                     	if	0	;tblptru may be non-zero
 14932  011A70                     	endif
 14933  011A70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14934  011A70  0E00               	movlw	low (__mediumconst shr (0+16))
 14935  011A72  6EF8               	movwf	tblptru,c
 14936  011A74                     	endif
 14937  011A74  0008               	tblrd		*
 14938  011A76  50F5               	movf	tablat,w,c
 14939  011A78  0900               	iorlw	0
 14940  011A7A  A4D8               	btfss	status,2,c
 14941  011A7C  D7CF               	goto	l3023
 14942                           
 14943                           ; BSR set to: 0
 14944                           ;config_file.c: 51: };config_file.c: 54: buffer[length++] = '=';
 14945                           
 14946                           ; BSR set to: 0
 14947  011A7E  518E               	movf	__add_item@length& (0+255),w,b
 14948  011A80  0D01               	mullw	1
 14949  011A82  50F3               	movf	prodl,w,c
 14950  011A84  258A               	addwf	__add_item@buffer& (0+255),w,b
 14951  011A86  6ED9               	movwf	fsr2l,c
 14952  011A88  50F4               	movf	prodh,w,c
 14953  011A8A  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14954  011A8C  6EDA               	movwf	fsr2h,c
 14955  011A8E  0E3D               	movlw	61
 14956  011A90  6EDF               	movwf	indf2,c
 14957                           
 14958                           ; BSR set to: 0
 14959  011A92  2B8E               	incf	__add_item@length& (0+255),f,b
 14960                           
 14961                           ; BSR set to: 0
 14962                           ;config_file.c: 57: ltoa(&buffer[length], value, 10);
 14963  011A94  518E               	movf	__add_item@length& (0+255),w,b
 14964  011A96  0D01               	mullw	1
 14965  011A98  50F3               	movf	prodl,w,c
 14966  011A9A  258A               	addwf	__add_item@buffer& (0+255),w,b
 14967  011A9C  6F7A               	movwf	ltoa@buf& (0+255),b
 14968  011A9E  50F4               	movf	prodh,w,c
 14969  011AA0  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14970  011AA2  6F7B               	movwf	(ltoa@buf+1)& (0+255),b
 14971  011AA4  C086  F07C         	movff	__add_item@value,ltoa@val
 14972  011AA8  C087  F07D         	movff	__add_item@value+1,ltoa@val+1
 14973  011AAC  C088  F07E         	movff	__add_item@value+2,ltoa@val+2
 14974  011AB0  C089  F07F         	movff	__add_item@value+3,ltoa@val+3
 14975  011AB4  0E00               	movlw	0
 14976  011AB6  6F81               	movwf	(ltoa@base+1)& (0+255),b
 14977  011AB8  0E0A               	movlw	10
 14978  011ABA  6F80               	movwf	ltoa@base& (0+255),b
 14979  011ABC  ECC4  F0A7         	call	_ltoa	;wreg free
 14980                           
 14981                           ;config_file.c: 58: while(buffer[length])
 14982  011AC0  D002               	goto	l3025
 14983  011AC2                     
 14984                           ;config_file.c: 59: {;config_file.c: 60: ++length;
 14985  011AC2  0100               	movlb	0	; () banked
 14986  011AC4  2B8E               	incf	__add_item@length& (0+255),f,b
 14987  011AC6                     l3025:
 14988                           
 14989                           ; BSR set to: 0
 14990  011AC6  0100               	movlb	0	; () banked
 14991  011AC8  518E               	movf	__add_item@length& (0+255),w,b
 14992  011ACA  0D01               	mullw	1
 14993  011ACC  50F3               	movf	prodl,w,c
 14994  011ACE  258A               	addwf	__add_item@buffer& (0+255),w,b
 14995  011AD0  6ED9               	movwf	fsr2l,c
 14996  011AD2  50F4               	movf	prodh,w,c
 14997  011AD4  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14998  011AD6  6EDA               	movwf	fsr2h,c
 14999  011AD8  50DF               	movf	indf2,w,c
 15000  011ADA  A4D8               	btfss	status,2,c
 15001  011ADC  D7F2               	goto	l3026
 15002                           
 15003                           ; BSR set to: 0
 15004                           ;config_file.c: 61: };config_file.c: 64: buffer[length++] = '\r';
 15005                           
 15006                           ; BSR set to: 0
 15007  011ADE  518E               	movf	__add_item@length& (0+255),w,b
 15008  011AE0  0D01               	mullw	1
 15009  011AE2  50F3               	movf	prodl,w,c
 15010  011AE4  258A               	addwf	__add_item@buffer& (0+255),w,b
 15011  011AE6  6ED9               	movwf	fsr2l,c
 15012  011AE8  50F4               	movf	prodh,w,c
 15013  011AEA  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 15014  011AEC  6EDA               	movwf	fsr2h,c
 15015  011AEE  0E0D               	movlw	13
 15016  011AF0  6EDF               	movwf	indf2,c
 15017                           
 15018                           ; BSR set to: 0
 15019  011AF2  2B8E               	incf	__add_item@length& (0+255),f,b
 15020                           
 15021                           ; BSR set to: 0
 15022                           ;config_file.c: 65: buffer[length++] = '\n';
 15023  011AF4  518E               	movf	__add_item@length& (0+255),w,b
 15024  011AF6  0D01               	mullw	1
 15025  011AF8  50F3               	movf	prodl,w,c
 15026  011AFA  258A               	addwf	__add_item@buffer& (0+255),w,b
 15027  011AFC  6ED9               	movwf	fsr2l,c
 15028  011AFE  50F4               	movf	prodh,w,c
 15029  011B00  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 15030  011B02  6EDA               	movwf	fsr2h,c
 15031  011B04  0E0A               	movlw	10
 15032  011B06  6EDF               	movwf	indf2,c
 15033  011B08  2B8E               	incf	__add_item@length& (0+255),f,b
 15034                           
 15035                           ; BSR set to: 0
 15036                           ;config_file.c: 68: return length;
 15037  011B0A  518E               	movf	__add_item@length& (0+255),w,b
 15038  011B0C  0012               	return	
 15039  011B0E                     __end_of__add_item:
 15040                           	opt stack 0
 15041                           tblptru	equ	0xFF8
 15042                           tblptrh	equ	0xFF7
 15043                           tblptrl	equ	0xFF6
 15044                           tablat	equ	0xFF5
 15045                           prodh	equ	0xFF4
 15046                           prodl	equ	0xFF3
 15047                           postinc0	equ	0xFEE
 15048                           wreg	equ	0xFE8
 15049                           postdec1	equ	0xFE5
 15050                           plusw1	equ	0xFE3
 15051                           fsr1h	equ	0xFE2
 15052                           fsr1l	equ	0xFE1
 15053                           indf2	equ	0xFDF
 15054                           postinc2	equ	0xFDE
 15055                           plusw2	equ	0xFDB
 15056                           fsr2h	equ	0xFDA
 15057                           fsr2l	equ	0xFD9
 15058                           status	equ	0xFD8
 15059                           
 15060 ;; *************** function _ltoa *****************
 15061 ;; Defined at:
 15062 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\ltoa.c"
 15063 ;; Parameters:    Size  Location     Type
 15064 ;;  buf             2   26[BANK0 ] PTR unsigned char 
 15065 ;;		 -> ConfigFile_buffer(512), 
 15066 ;;  val             4   28[BANK0 ] long 
 15067 ;;  base            2   32[BANK0 ] int 
 15068 ;; Auto vars:     Size  Location     Type
 15069 ;;  cp              2   34[BANK0 ] PTR unsigned char 
 15070 ;;		 -> ConfigFile_buffer(512), 
 15071 ;; Return value:  Size  Location     Type
 15072 ;;                  2   26[BANK0 ] PTR unsigned char 
 15073 ;; Registers used:
 15074 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15075 ;; Tracked objects:
 15076 ;;		On entry : 0/0
 15077 ;;		On exit  : 0/0
 15078 ;;		Unchanged: 0/0
 15079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15080 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15081 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15083 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15084 ;;Total ram usage:       10 bytes
 15085 ;; Hardware stack levels used:    1
 15086 ;; Hardware stack levels required when called:   12
 15087 ;; This function calls:
 15088 ;;		_ultoa
 15089 ;; This function is called by:
 15090 ;;		__add_item
 15091 ;; This function uses a non-reentrant model
 15092 ;;
 15093                           
 15094                           	psect	text53
 15095  014F88                     __ptext53:
 15096                           	opt stack 0
 15097  014F88                     _ltoa:
 15098                           	opt stack 15
 15099                           
 15100                           ; BSR set to: 0
 15101                           ;incstack = 0
 15102  014F88  C07A  F082         	movff	ltoa@buf,ltoa@cp
 15103  014F8C  C07B  F083         	movff	ltoa@buf+1,ltoa@cp+1
 15104  014F90  0100               	movlb	0	; () banked
 15105  014F92  AF7F               	btfss	(ltoa@val+3)& (0+255),7,b
 15106  014F94  D010               	goto	l3800
 15107                           
 15108                           ; BSR set to: 0
 15109  014F96  C07A  FFD9         	movff	ltoa@buf,fsr2l
 15110  014F9A  C07B  FFDA         	movff	ltoa@buf+1,fsr2h
 15111  014F9E  0E2D               	movlw	45
 15112  014FA0  6EDF               	movwf	indf2,c
 15113                           
 15114                           ; BSR set to: 0
 15115  014FA2  4B7A               	infsnz	ltoa@buf& (0+255),f,b
 15116  014FA4  2B7B               	incf	(ltoa@buf+1)& (0+255),f,b
 15117                           
 15118                           ; BSR set to: 0
 15119  014FA6  1F7F               	comf	(ltoa@val+3)& (0+255),f,b
 15120  014FA8  1F7E               	comf	(ltoa@val+2)& (0+255),f,b
 15121  014FAA  1F7D               	comf	(ltoa@val+1)& (0+255),f,b
 15122  014FAC  6D7C               	negf	ltoa@val& (0+255),b
 15123  014FAE  0E00               	movlw	0
 15124  014FB0  237D               	addwfc	(ltoa@val+1)& (0+255),f,b
 15125  014FB2  237E               	addwfc	(ltoa@val+2)& (0+255),f,b
 15126  014FB4  237F               	addwfc	(ltoa@val+3)& (0+255),f,b
 15127  014FB6                     l3800:
 15128                           
 15129                           ; BSR set to: 0
 15130                           
 15131                           ; BSR set to: 0
 15132  014FB6  C07A  F06D         	movff	ltoa@buf,ultoa@buf
 15133  014FBA  C07B  F06E         	movff	ltoa@buf+1,ultoa@buf+1
 15134  014FBE  C07C  F06F         	movff	ltoa@val,ultoa@val
 15135  014FC2  C07D  F070         	movff	ltoa@val+1,ultoa@val+1
 15136  014FC6  C07E  F071         	movff	ltoa@val+2,ultoa@val+2
 15137  014FCA  C07F  F072         	movff	ltoa@val+3,ultoa@val+3
 15138  014FCE  C080  F073         	movff	ltoa@base,ultoa@base
 15139  014FD2  C081  F074         	movff	ltoa@base+1,ultoa@base+1
 15140  014FD6  EC0D  F08C         	call	_ultoa	;wreg free
 15141  014FDA  0012               	return	
 15142  014FDC                     __end_of_ltoa:
 15143                           	opt stack 0
 15144                           tblptru	equ	0xFF8
 15145                           tblptrh	equ	0xFF7
 15146                           tblptrl	equ	0xFF6
 15147                           tablat	equ	0xFF5
 15148                           prodh	equ	0xFF4
 15149                           prodl	equ	0xFF3
 15150                           postinc0	equ	0xFEE
 15151                           wreg	equ	0xFE8
 15152                           postdec1	equ	0xFE5
 15153                           plusw1	equ	0xFE3
 15154                           fsr1h	equ	0xFE2
 15155                           fsr1l	equ	0xFE1
 15156                           indf2	equ	0xFDF
 15157                           postinc2	equ	0xFDE
 15158                           plusw2	equ	0xFDB
 15159                           fsr2h	equ	0xFDA
 15160                           fsr2l	equ	0xFD9
 15161                           status	equ	0xFD8
 15162                           
 15163 ;; *************** function _ultoa *****************
 15164 ;; Defined at:
 15165 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\ltoa.c"
 15166 ;; Parameters:    Size  Location     Type
 15167 ;;  buf             2   13[BANK0 ] PTR unsigned char 
 15168 ;;		 -> ConfigFile_buffer(512), 
 15169 ;;  val             4   15[BANK0 ] unsigned long 
 15170 ;;  base            2   19[BANK0 ] int 
 15171 ;; Auto vars:     Size  Location     Type
 15172 ;;  v               4   21[BANK0 ] unsigned long 
 15173 ;;  c               1   25[BANK0 ] unsigned char 
 15174 ;; Return value:  Size  Location     Type
 15175 ;;                  2   13[BANK0 ] PTR unsigned char 
 15176 ;; Registers used:
 15177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15178 ;; Tracked objects:
 15179 ;;		On entry : 0/0
 15180 ;;		On exit  : 0/0
 15181 ;;		Unchanged: 0/0
 15182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15183 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15184 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15186 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15187 ;;Total ram usage:       13 bytes
 15188 ;; Hardware stack levels used:    1
 15189 ;; Hardware stack levels required when called:   11
 15190 ;; This function calls:
 15191 ;;		___lldiv
 15192 ;;		___llmod
 15193 ;; This function is called by:
 15194 ;;		_ltoa
 15195 ;; This function uses a non-reentrant model
 15196 ;;
 15197                           
 15198                           	psect	text54
 15199  01181A                     __ptext54:
 15200                           	opt stack 0
 15201  01181A                     _ultoa:
 15202                           	opt stack 15
 15203                           
 15204                           ;incstack = 0
 15205  01181A  C06F  F075         	movff	ultoa@val,ultoa@v
 15206  01181E  C070  F076         	movff	ultoa@val+1,ultoa@v+1
 15207  011822  C071  F077         	movff	ultoa@val+2,ultoa@v+2
 15208  011826  C072  F078         	movff	ultoa@val+3,ultoa@v+3
 15209  01182A  C075  F060         	movff	ultoa@v,___lldiv@dividend
 15210  01182E  C076  F061         	movff	ultoa@v+1,___lldiv@dividend+1
 15211  011832  C077  F062         	movff	ultoa@v+2,___lldiv@dividend+2
 15212  011836  C078  F063         	movff	ultoa@v+3,___lldiv@dividend+3
 15213  01183A  C073  F064         	movff	ultoa@base,___lldiv@divisor
 15214  01183E  C074  F065         	movff	ultoa@base+1,___lldiv@divisor+1
 15215  011842  0100               	movlb	0	; () banked
 15216  011844  0E00               	movlw	0
 15217  011846  BF65               	btfsc	(___lldiv@divisor+1)& (0+255),7,b
 15218  011848  0EFF               	movlw	-1
 15219  01184A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 15220  01184C  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 15221  01184E  EC85  F09F         	call	___lldiv	;wreg free
 15222  011852  C060  F075         	movff	?___lldiv,ultoa@v
 15223  011856  C061  F076         	movff	?___lldiv+1,ultoa@v+1
 15224  01185A  C062  F077         	movff	?___lldiv+2,ultoa@v+2
 15225  01185E  C063  F078         	movff	?___lldiv+3,ultoa@v+3
 15226  011862  0100               	movlb	0	; () banked
 15227  011864  4B6D               	infsnz	ultoa@buf& (0+255),f,b
 15228  011866  2B6E               	incf	(ultoa@buf+1)& (0+255),f,b
 15229                           
 15230                           ; BSR set to: 0
 15231  011868  5175               	movf	ultoa@v& (0+255),w,b
 15232  01186A  1176               	iorwf	(ultoa@v+1)& (0+255),w,b
 15233  01186C  1177               	iorwf	(ultoa@v+2)& (0+255),w,b
 15234  01186E  1178               	iorwf	(ultoa@v+3)& (0+255),w,b
 15235  011870  A4D8               	btfss	status,2,c
 15236  011872  D7DB               	goto	l3804
 15237                           
 15238                           ; BSR set to: 0
 15239                           
 15240                           ; BSR set to: 0
 15241  011874  C06D  FFD9         	movff	ultoa@buf,fsr2l
 15242  011878  C06E  FFDA         	movff	ultoa@buf+1,fsr2h
 15243  01187C  0E00               	movlw	0
 15244  01187E  6EDF               	movwf	indf2,c
 15245                           
 15246                           ; BSR set to: 0
 15247  011880  076D               	decf	ultoa@buf& (0+255),f,b
 15248  011882  A0D8               	btfss	status,0,c
 15249  011884  076E               	decf	(ultoa@buf+1)& (0+255),f,b
 15250  011886                     
 15251                           ; BSR set to: 0
 15252                           
 15253                           ; BSR set to: 0
 15254  011886  C06F  F060         	movff	ultoa@val,___llmod@dividend
 15255  01188A  C070  F061         	movff	ultoa@val+1,___llmod@dividend+1
 15256  01188E  C071  F062         	movff	ultoa@val+2,___llmod@dividend+2
 15257  011892  C072  F063         	movff	ultoa@val+3,___llmod@dividend+3
 15258  011896  C073  F064         	movff	ultoa@base,___llmod@divisor
 15259  01189A  C074  F065         	movff	ultoa@base+1,___llmod@divisor+1
 15260  01189E  0E00               	movlw	0
 15261  0118A0  BF65               	btfsc	(___llmod@divisor+1)& (0+255),7,b
 15262  0118A2  0EFF               	movlw	-1
 15263  0118A4  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
 15264  0118A6  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
 15265  0118A8  EC78  F0A3         	call	___llmod	;wreg free
 15266  0118AC  0100               	movlb	0	; () banked
 15267  0118AE  5160               	movf	?___llmod& (0+255),w,b
 15268  0118B0  6F79               	movwf	ultoa@c& (0+255),b
 15269                           
 15270                           ; BSR set to: 0
 15271  0118B2  C06F  F060         	movff	ultoa@val,___lldiv@dividend
 15272  0118B6  C070  F061         	movff	ultoa@val+1,___lldiv@dividend+1
 15273  0118BA  C071  F062         	movff	ultoa@val+2,___lldiv@dividend+2
 15274  0118BE  C072  F063         	movff	ultoa@val+3,___lldiv@dividend+3
 15275  0118C2  C073  F064         	movff	ultoa@base,___lldiv@divisor
 15276  0118C6  C074  F065         	movff	ultoa@base+1,___lldiv@divisor+1
 15277  0118CA  0E00               	movlw	0
 15278  0118CC  BF65               	btfsc	(___lldiv@divisor+1)& (0+255),7,b
 15279  0118CE  0EFF               	movlw	-1
 15280  0118D0  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 15281  0118D2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 15282  0118D4  EC85  F09F         	call	___lldiv	;wreg free
 15283  0118D8  C060  F06F         	movff	?___lldiv,ultoa@val
 15284  0118DC  C061  F070         	movff	?___lldiv+1,ultoa@val+1
 15285  0118E0  C062  F071         	movff	?___lldiv+2,ultoa@val+2
 15286  0118E4  C063  F072         	movff	?___lldiv+3,ultoa@val+3
 15287  0118E8  0E09               	movlw	9
 15288  0118EA  0100               	movlb	0	; () banked
 15289  0118EC  6579               	cpfsgt	ultoa@c& (0+255),b
 15290  0118EE  D002               	goto	l3807
 15291                           
 15292                           ; BSR set to: 0
 15293  0118F0  0E07               	movlw	7
 15294  0118F2  2779               	addwf	ultoa@c& (0+255),f,b
 15295  0118F4                     l3807:
 15296                           
 15297                           ; BSR set to: 0
 15298  0118F4  0E30               	movlw	48
 15299  0118F6  2779               	addwf	ultoa@c& (0+255),f,b
 15300                           
 15301                           ; BSR set to: 0
 15302  0118F8  C06D  FFD9         	movff	ultoa@buf,fsr2l
 15303  0118FC  C06E  FFDA         	movff	ultoa@buf+1,fsr2h
 15304  011900  C079  FFDF         	movff	ultoa@c,indf2
 15305                           
 15306                           ; BSR set to: 0
 15307  011904  076D               	decf	ultoa@buf& (0+255),f,b
 15308  011906  A0D8               	btfss	status,0,c
 15309  011908  076E               	decf	(ultoa@buf+1)& (0+255),f,b
 15310                           
 15311                           ; BSR set to: 0
 15312  01190A  516F               	movf	ultoa@val& (0+255),w,b
 15313  01190C  1170               	iorwf	(ultoa@val+1)& (0+255),w,b
 15314  01190E  1171               	iorwf	(ultoa@val+2)& (0+255),w,b
 15315  011910  1172               	iorwf	(ultoa@val+3)& (0+255),w,b
 15316  011912  B4D8               	btfsc	status,2,c
 15317  011914  0012               	return	
 15318  011916  D7B7               	goto	l3806
 15319  011918                     __end_of_ultoa:
 15320                           	opt stack 0
 15321                           tblptru	equ	0xFF8
 15322                           tblptrh	equ	0xFF7
 15323                           tblptrl	equ	0xFF6
 15324                           tablat	equ	0xFF5
 15325                           prodh	equ	0xFF4
 15326                           prodl	equ	0xFF3
 15327                           postinc0	equ	0xFEE
 15328                           wreg	equ	0xFE8
 15329                           postdec1	equ	0xFE5
 15330                           plusw1	equ	0xFE3
 15331                           fsr1h	equ	0xFE2
 15332                           fsr1l	equ	0xFE1
 15333                           indf2	equ	0xFDF
 15334                           postinc2	equ	0xFDE
 15335                           plusw2	equ	0xFDB
 15336                           fsr2h	equ	0xFDA
 15337                           fsr2l	equ	0xFD9
 15338                           status	equ	0xFD8
 15339                           
 15340 ;; *************** function ___llmod *****************
 15341 ;; Defined at:
 15342 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
 15343 ;; Parameters:    Size  Location     Type
 15344 ;;  dividend        4    0[BANK0 ] unsigned long 
 15345 ;;  divisor         4    4[BANK0 ] unsigned long 
 15346 ;; Auto vars:     Size  Location     Type
 15347 ;;  counter         1    8[BANK0 ] unsigned char 
 15348 ;; Return value:  Size  Location     Type
 15349 ;;                  4    0[BANK0 ] unsigned long 
 15350 ;; Registers used:
 15351 ;;		wreg, status,2, status,0
 15352 ;; Tracked objects:
 15353 ;;		On entry : 0/0
 15354 ;;		On exit  : 0/0
 15355 ;;		Unchanged: 0/0
 15356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15357 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15358 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15360 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15361 ;;Total ram usage:        9 bytes
 15362 ;; Hardware stack levels used:    1
 15363 ;; Hardware stack levels required when called:   10
 15364 ;; This function calls:
 15365 ;;		Nothing
 15366 ;; This function is called by:
 15367 ;;		_ultoa
 15368 ;; This function uses a non-reentrant model
 15369 ;;
 15370                           
 15371                           	psect	text55
 15372  0146F0                     __ptext55:
 15373                           	opt stack 0
 15374  0146F0                     ___llmod:
 15375                           	opt stack 15
 15376                           
 15377                           ; BSR set to: 0
 15378                           ;incstack = 0
 15379  0146F0  0100               	movlb	0	; () banked
 15380  0146F2  5164               	movf	___llmod@divisor& (0+255),w,b
 15381  0146F4  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 15382  0146F6  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 15383  0146F8  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 15384  0146FA  B4D8               	btfsc	status,2,c
 15385  0146FC  D024               	goto	l3502
 15386                           
 15387                           ; BSR set to: 0
 15388  0146FE  0E01               	movlw	1
 15389  014700  6F68               	movwf	___llmod@counter& (0+255),b
 15390  014702  D006               	goto	l3497
 15391  014704                     
 15392                           ; BSR set to: 0
 15393                           
 15394                           ; BSR set to: 0
 15395  014704  90D8               	bcf	status,0,c
 15396  014706  3764               	rlcf	___llmod@divisor& (0+255),f,b
 15397  014708  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 15398  01470A  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 15399  01470C  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 15400  01470E  2B68               	incf	___llmod@counter& (0+255),f,b
 15401  014710                     l3497:
 15402                           
 15403                           ; BSR set to: 0
 15404                           
 15405                           ; BSR set to: 0
 15406  014710  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
 15407  014712  D7F8               	goto	l3498
 15408  014714                     u11870:
 15409                           
 15410                           ; BSR set to: 0
 15411                           
 15412                           ; BSR set to: 0
 15413                           
 15414                           ; BSR set to: 0
 15415  014714  5164               	movf	___llmod@divisor& (0+255),w,b
 15416  014716  5D60               	subwf	___llmod@dividend& (0+255),w,b
 15417  014718  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 15418  01471A  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 15419  01471C  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 15420  01471E  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 15421  014720  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 15422  014722  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 15423  014724  A0D8               	btfss	status,0,c
 15424  014726  D008               	goto	l3501
 15425                           
 15426                           ; BSR set to: 0
 15427  014728  5164               	movf	___llmod@divisor& (0+255),w,b
 15428  01472A  5F60               	subwf	___llmod@dividend& (0+255),f,b
 15429  01472C  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 15430  01472E  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 15431  014730  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 15432  014732  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 15433  014734  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 15434  014736  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 15435  014738                     l3501:
 15436                           
 15437                           ; BSR set to: 0
 15438                           
 15439                           ; BSR set to: 0
 15440  014738  90D8               	bcf	status,0,c
 15441  01473A  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 15442  01473C  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 15443  01473E  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 15444  014740  3364               	rrcf	___llmod@divisor& (0+255),f,b
 15445                           
 15446                           ; BSR set to: 0
 15447  014742  2F68               	decfsz	___llmod@counter& (0+255),f,b
 15448  014744  D7E7               	goto	u11870
 15449  014746                     l3502:
 15450                           
 15451                           ; BSR set to: 0
 15452                           
 15453                           ; BSR set to: 0
 15454  014746  C060  F060         	movff	___llmod@dividend,?___llmod
 15455  01474A  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
 15456  01474E  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
 15457  014752  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
 15458                           
 15459                           ; BSR set to: 0
 15460  014756  0012               	return		;funcret
 15461  014758                     __end_of___llmod:
 15462                           	opt stack 0
 15463                           tblptru	equ	0xFF8
 15464                           tblptrh	equ	0xFF7
 15465                           tblptrl	equ	0xFF6
 15466                           tablat	equ	0xFF5
 15467                           prodh	equ	0xFF4
 15468                           prodl	equ	0xFF3
 15469                           postinc0	equ	0xFEE
 15470                           wreg	equ	0xFE8
 15471                           postdec1	equ	0xFE5
 15472                           plusw1	equ	0xFE3
 15473                           fsr1h	equ	0xFE2
 15474                           fsr1l	equ	0xFE1
 15475                           indf2	equ	0xFDF
 15476                           postinc2	equ	0xFDE
 15477                           plusw2	equ	0xFDB
 15478                           fsr2h	equ	0xFDA
 15479                           fsr2l	equ	0xFD9
 15480                           status	equ	0xFD8
 15481                           
 15482 ;; *************** function ___lldiv *****************
 15483 ;; Defined at:
 15484 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 15485 ;; Parameters:    Size  Location     Type
 15486 ;;  dividend        4    0[BANK0 ] unsigned long 
 15487 ;;  divisor         4    4[BANK0 ] unsigned long 
 15488 ;; Auto vars:     Size  Location     Type
 15489 ;;  quotient        4    8[BANK0 ] unsigned long 
 15490 ;;  counter         1   12[BANK0 ] unsigned char 
 15491 ;; Return value:  Size  Location     Type
 15492 ;;                  4    0[BANK0 ] unsigned long 
 15493 ;; Registers used:
 15494 ;;		wreg, status,2, status,0
 15495 ;; Tracked objects:
 15496 ;;		On entry : 0/0
 15497 ;;		On exit  : 0/0
 15498 ;;		Unchanged: 0/0
 15499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15500 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15501 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15503 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15504 ;;Total ram usage:       13 bytes
 15505 ;; Hardware stack levels used:    1
 15506 ;; Hardware stack levels required when called:   10
 15507 ;; This function calls:
 15508 ;;		Nothing
 15509 ;; This function is called by:
 15510 ;;		_ultoa
 15511 ;; This function uses a non-reentrant model
 15512 ;;
 15513                           
 15514                           	psect	text56
 15515  013F0A                     __ptext56:
 15516                           	opt stack 0
 15517  013F0A                     ___lldiv:
 15518                           	opt stack 15
 15519                           
 15520                           ; BSR set to: 0
 15521                           ;incstack = 0
 15522  013F0A  0E00               	movlw	0
 15523  013F0C  0100               	movlb	0	; () banked
 15524  013F0E  6F68               	movwf	___lldiv@quotient& (0+255),b
 15525  013F10  0E00               	movlw	0
 15526  013F12  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 15527  013F14  0E00               	movlw	0
 15528  013F16  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 15529  013F18  0E00               	movlw	0
 15530  013F1A  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 15531                           
 15532                           ; BSR set to: 0
 15533  013F1C  5164               	movf	___lldiv@divisor& (0+255),w,b
 15534  013F1E  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 15535  013F20  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 15536  013F22  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 15537  013F24  B4D8               	btfsc	status,2,c
 15538  013F26  D02A               	goto	l3121
 15539                           
 15540                           ; BSR set to: 0
 15541  013F28  0E01               	movlw	1
 15542  013F2A  6F6C               	movwf	___lldiv@counter& (0+255),b
 15543  013F2C  D006               	goto	l3116
 15544  013F2E                     
 15545                           ; BSR set to: 0
 15546                           
 15547                           ; BSR set to: 0
 15548  013F2E  90D8               	bcf	status,0,c
 15549  013F30  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 15550  013F32  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 15551  013F34  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 15552  013F36  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 15553  013F38  2B6C               	incf	___lldiv@counter& (0+255),f,b
 15554  013F3A                     l3116:
 15555                           
 15556                           ; BSR set to: 0
 15557                           
 15558                           ; BSR set to: 0
 15559  013F3A  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 15560  013F3C  D7F8               	goto	l3117
 15561  013F3E                     u11840:
 15562                           
 15563                           ; BSR set to: 0
 15564                           
 15565                           ; BSR set to: 0
 15566                           
 15567                           ; BSR set to: 0
 15568  013F3E  90D8               	bcf	status,0,c
 15569  013F40  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 15570  013F42  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 15571  013F44  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 15572  013F46  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 15573                           
 15574                           ; BSR set to: 0
 15575  013F48  5164               	movf	___lldiv@divisor& (0+255),w,b
 15576  013F4A  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 15577  013F4C  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 15578  013F4E  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 15579  013F50  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 15580  013F52  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 15581  013F54  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 15582  013F56  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 15583  013F58  A0D8               	btfss	status,0,c
 15584  013F5A  D009               	goto	l3120
 15585                           
 15586                           ; BSR set to: 0
 15587  013F5C  5164               	movf	___lldiv@divisor& (0+255),w,b
 15588  013F5E  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 15589  013F60  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 15590  013F62  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 15591  013F64  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 15592  013F66  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 15593  013F68  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 15594  013F6A  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 15595                           
 15596                           ; BSR set to: 0
 15597  013F6C  8168               	bsf	___lldiv@quotient& (0+255),0,b
 15598  013F6E                     l3120:
 15599                           
 15600                           ; BSR set to: 0
 15601                           
 15602                           ; BSR set to: 0
 15603  013F6E  90D8               	bcf	status,0,c
 15604  013F70  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 15605  013F72  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 15606  013F74  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 15607  013F76  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 15608                           
 15609                           ; BSR set to: 0
 15610  013F78  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 15611  013F7A  D7E1               	goto	u11840
 15612  013F7C                     l3121:
 15613                           
 15614                           ; BSR set to: 0
 15615                           
 15616                           ; BSR set to: 0
 15617  013F7C  C068  F060         	movff	___lldiv@quotient,?___lldiv
 15618  013F80  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 15619  013F84  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 15620  013F88  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 15621                           
 15622                           ; BSR set to: 0
 15623  013F8C  0012               	return		;funcret
 15624  013F8E                     __end_of___lldiv:
 15625                           	opt stack 0
 15626                           tblptru	equ	0xFF8
 15627                           tblptrh	equ	0xFF7
 15628                           tblptrl	equ	0xFF6
 15629                           tablat	equ	0xFF5
 15630                           prodh	equ	0xFF4
 15631                           prodl	equ	0xFF3
 15632                           postinc0	equ	0xFEE
 15633                           wreg	equ	0xFE8
 15634                           postdec1	equ	0xFE5
 15635                           plusw1	equ	0xFE3
 15636                           fsr1h	equ	0xFE2
 15637                           fsr1l	equ	0xFE1
 15638                           indf2	equ	0xFDF
 15639                           postinc2	equ	0xFDE
 15640                           plusw2	equ	0xFDB
 15641                           fsr2h	equ	0xFDA
 15642                           fsr2l	equ	0xFD9
 15643                           status	equ	0xFD8
 15644                           
 15645 ;; *************** function _configFile_readDefault *****************
 15646 ;; Defined at:
 15647 ;;		line 251 in file "config_file.c"
 15648 ;; Parameters:    Size  Location     Type
 15649 ;;		None
 15650 ;; Auto vars:     Size  Location     Type
 15651 ;;		None
 15652 ;; Return value:  Size  Location     Type
 15653 ;;                  1    wreg      void 
 15654 ;; Registers used:
 15655 ;;		wreg, status,2
 15656 ;; Tracked objects:
 15657 ;;		On entry : 0/0
 15658 ;;		On exit  : 0/0
 15659 ;;		Unchanged: 0/0
 15660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15665 ;;Total ram usage:        0 bytes
 15666 ;; Hardware stack levels used:    1
 15667 ;; Hardware stack levels required when called:   10
 15668 ;; This function calls:
 15669 ;;		Nothing
 15670 ;; This function is called by:
 15671 ;;		_system_init
 15672 ;; This function uses a non-reentrant model
 15673 ;;
 15674                           
 15675                           	psect	text57
 15676  01437A                     __ptext57:
 15677                           	opt stack 0
 15678  01437A                     _configFile_readDefault:
 15679                           	opt stack 19
 15680                           
 15681                           ;config_file.c: 253: config.full_circle_in_steps = 576000;
 15682                           
 15683                           ; BSR set to: 0
 15684                           ;incstack = 0
 15685  01437A  0E00               	movlw	0
 15686  01437C  0101               	movlb	1	; () banked
 15687  01437E  6F95               	movwf	_config& (0+255),b
 15688  014380  0ECA               	movlw	202
 15689  014382  6F96               	movwf	(_config+1)& (0+255),b
 15690  014384  0E08               	movlw	8
 15691  014386  6F97               	movwf	(_config+2)& (0+255),b
 15692  014388  0E00               	movlw	0
 15693  01438A  6F98               	movwf	(_config+3)& (0+255),b
 15694                           
 15695                           ;config_file.c: 254: config.inverse_direction = 1;
 15696  01438C  0E01               	movlw	1
 15697  01438E  6F99               	movwf	(_config+4)& (0+255),b
 15698                           
 15699                           ;config_file.c: 255: config.overshoot_in_steps = 6400;
 15700  014390  0E19               	movlw	25
 15701  014392  6F9B               	movwf	(_config+6)& (0+255),b
 15702  014394  0E00               	movlw	0
 15703  014396  6F9A               	movwf	(_config+5)& (0+255),b
 15704                           
 15705                           ;config_file.c: 256: config.overshoot_cost_in_steps = 3000;
 15706  014398  0E0B               	movlw	11
 15707  01439A  6F9D               	movwf	(_config+8)& (0+255),b
 15708  01439C  0EB8               	movlw	184
 15709  01439E  6F9C               	movwf	(_config+7)& (0+255),b
 15710                           
 15711                           ;config_file.c: 257: config.minimum_speed = 1;
 15712  0143A0  0E00               	movlw	0
 15713  0143A2  6F9F               	movwf	(_config+10)& (0+255),b
 15714  0143A4  0E01               	movlw	1
 15715  0143A6  6F9E               	movwf	(_config+9)& (0+255),b
 15716                           
 15717                           ;config_file.c: 258: config.maximum_speed = 380;
 15718  0143A8  0E01               	movlw	1
 15719  0143AA  6FA1               	movwf	(_config+12)& (0+255),b
 15720  0143AC  0E7C               	movlw	124
 15721  0143AE  6FA0               	movwf	(_config+11)& (0+255),b
 15722                           
 15723                           ;config_file.c: 259: config.maximum_speed_arc = 305;
 15724  0143B0  0E01               	movlw	1
 15725  0143B2  6FA5               	movwf	(_config+16)& (0+255),b
 15726  0143B4  0E31               	movlw	49
 15727  0143B6  6FA4               	movwf	(_config+15)& (0+255),b
 15728                           
 15729                           ;config_file.c: 260: config.maximum_speed_manual = 305;
 15730  0143B8  0E01               	movlw	1
 15731  0143BA  6FA9               	movwf	(_config+20)& (0+255),b
 15732  0143BC  0E31               	movlw	49
 15733  0143BE  6FA8               	movwf	(_config+19)& (0+255),b
 15734                           
 15735                           ;config_file.c: 261: config.use_ccw_limit = 0;
 15736  0143C0  0E00               	movlw	0
 15737  0143C2  6FB4               	movwf	(_config+31)& (0+255),b
 15738                           
 15739                           ;config_file.c: 262: config.ccw_limit = 35500;
 15740  0143C4  0EAC               	movlw	172
 15741  0143C6  6FB5               	movwf	(_config+32)& (0+255),b
 15742  0143C8  0E8A               	movlw	138
 15743  0143CA  6FB6               	movwf	(_config+33)& (0+255),b
 15744  0143CC  0E00               	movlw	0
 15745  0143CE  6FB7               	movwf	(_config+34)& (0+255),b
 15746  0143D0  0E00               	movlw	0
 15747  0143D2  6FB8               	movwf	(_config+35)& (0+255),b
 15748                           
 15749                           ;config_file.c: 263: config.use_cw_limit = 0;
 15750  0143D4  0E00               	movlw	0
 15751  0143D6  6FAB               	movwf	(_config+22)& (0+255),b
 15752                           
 15753                           ;config_file.c: 264: config.cw_limit = 500;
 15754  0143D8  0EF4               	movlw	244
 15755  0143DA  6FAC               	movwf	(_config+23)& (0+255),b
 15756  0143DC  0E01               	movlw	1
 15757  0143DE  6FAD               	movwf	(_config+24)& (0+255),b
 15758  0143E0  0E00               	movlw	0
 15759  0143E2  6FAE               	movwf	(_config+25)& (0+255),b
 15760  0143E4  0E00               	movlw	0
 15761  0143E6  6FAF               	movwf	(_config+26)& (0+255),b
 15762                           
 15763                           ;config_file.c: 265: config.beep_duration = 10;
 15764  0143E8  0E0A               	movlw	10
 15765  0143EA  6FAA               	movwf	(_config+21)& (0+255),b
 15766                           
 15767                           ;config_file.c: 266: config.position_display_180 = 0;
 15768  0143EC  0E00               	movlw	0
 15769  0143EE  6FBD               	movwf	(_config+40)& (0+255),b
 15770                           
 15771                           ; BSR set to: 1
 15772  0143F0  0012               	return		;funcret
 15773  0143F2                     __end_of_configFile_readDefault:
 15774                           	opt stack 0
 15775                           tblptru	equ	0xFF8
 15776                           tblptrh	equ	0xFF7
 15777                           tblptrl	equ	0xFF6
 15778                           tablat	equ	0xFF5
 15779                           prodh	equ	0xFF4
 15780                           prodl	equ	0xFF3
 15781                           postinc0	equ	0xFEE
 15782                           wreg	equ	0xFE8
 15783                           postdec1	equ	0xFE5
 15784                           plusw1	equ	0xFE3
 15785                           fsr1h	equ	0xFE2
 15786                           fsr1l	equ	0xFE1
 15787                           indf2	equ	0xFDF
 15788                           postinc2	equ	0xFDE
 15789                           plusw2	equ	0xFDB
 15790                           fsr2h	equ	0xFDA
 15791                           fsr2l	equ	0xFD9
 15792                           status	equ	0xFD8
 15793                           
 15794 ;; *************** function _configFile_read *****************
 15795 ;; Defined at:
 15796 ;;		line 270 in file "config_file.c"
 15797 ;; Parameters:    Size  Location     Type
 15798 ;;		None
 15799 ;; Auto vars:     Size  Location     Type
 15800 ;;  item_string    31    8[BANK1 ] unsigned char [31]
 15801 ;;  value_string   12   39[BANK1 ] unsigned char [12]
 15802 ;;  position        4   56[BANK1 ] unsigned long 
 15803 ;;  file_size       4   51[BANK1 ] unsigned long 
 15804 ;;  file_number     1   55[BANK1 ] unsigned char 
 15805 ;; Return value:  Size  Location     Type
 15806 ;;                  1    wreg      void 
 15807 ;; Registers used:
 15808 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15809 ;; Tracked objects:
 15810 ;;		On entry : 0/0
 15811 ;;		On exit  : 0/0
 15812 ;;		Unchanged: 0/0
 15813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15815 ;;      Locals:         0       0      52       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15816 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15817 ;;      Totals:         0       0      60       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15818 ;;Total ram usage:       60 bytes
 15819 ;; Hardware stack levels used:    1
 15820 ;; Hardware stack levels required when called:   19
 15821 ;; This function calls:
 15822 ;;		__get_item
 15823 ;;		__parse_item
 15824 ;;		_fat_find_file
 15825 ;;		_fat_get_file_size
 15826 ;;		_fat_read_from_file
 15827 ;; This function is called by:
 15828 ;;		_system_init
 15829 ;; This function uses a non-reentrant model
 15830 ;;
 15831                           
 15832                           	psect	text58
 15833  00F3B4                     __ptext58:
 15834                           	opt stack 0
 15835  00F3B4                     _configFile_read:
 15836                           	opt stack 10
 15837                           
 15838                           ;config_file.c: 272: uint8_t file_number;;config_file.c: 273: uint32_t file_size;;config
      +                          _file.c: 274: uint32_t position;;config_file.c: 275: char item_string[31];;config_file.c
      +                          : 276: char value_string[12];;config_file.c: 279: file_number = fat_find_file(&configFil
      +                          e_name, &configFile_extention);
 15839                           
 15840                           ; BSR set to: 1
 15841                           ;incstack = 0
 15842  00F3B4  0ED8               	movlw	low _configFile_name
 15843  00F3B6  0100               	movlb	0	; () banked
 15844  00F3B8  6F8B               	movwf	fat_find_file@name& (0+255),b
 15845  00F3BA  0E02               	movlw	high _configFile_name
 15846  00F3BC  6F8C               	movwf	(fat_find_file@name+1)& (0+255),b
 15847  00F3BE  0EE3               	movlw	low _configFile_extention
 15848  00F3C0  6F8D               	movwf	fat_find_file@extension& (0+255),b
 15849  00F3C2  0E02               	movlw	high _configFile_extention
 15850  00F3C4  6F8E               	movwf	(fat_find_file@extension+1)& (0+255),b
 15851  00F3C6  EC6A  F08F         	call	_fat_find_file	;wreg free
 15852  00F3CA  0101               	movlb	1	; () banked
 15853  00F3CC  6FFA               	movwf	configFile_read@file_number& (0+255),b
 15854                           
 15855                           ; BSR set to: 1
 15856                           ;config_file.c: 280: if(file_number==0xFF)
 15857  00F3CE  29FA               	incf	configFile_read@file_number& (0+255),w,b
 15858  00F3D0  B4D8               	btfsc	status,2,c
 15859  00F3D2  0012               	return	
 15860                           
 15861                           ; BSR set to: 1
 15862                           ;config_file.c: 284: };config_file.c: 287: file_size = fat_get_file_size(file_number);
 15863                           
 15864                           ; BSR set to: 1
 15865                           
 15866                           ; BSR set to: 1
 15867                           ;config_file.c: 281: {;config_file.c: 283: return;
 15868  00F3D4  51FA               	movf	configFile_read@file_number& (0+255),w,b
 15869  00F3D6  EC43  F0A1         	call	_fat_get_file_size
 15870  00F3DA  C095  F1F6         	movff	?_fat_get_file_size,configFile_read@file_size
 15871  00F3DE  C096  F1F7         	movff	?_fat_get_file_size+1,configFile_read@file_size+1
 15872  00F3E2  C097  F1F8         	movff	?_fat_get_file_size+2,configFile_read@file_size+2
 15873  00F3E6  C098  F1F9         	movff	?_fat_get_file_size+3,configFile_read@file_size+3
 15874                           
 15875                           ;config_file.c: 290: position = 0;
 15876  00F3EA  0E00               	movlw	0
 15877  00F3EC  0101               	movlb	1	; () banked
 15878  00F3EE  6FFB               	movwf	configFile_read@position& (0+255),b
 15879  00F3F0  0E00               	movlw	0
 15880  00F3F2  6FFC               	movwf	(configFile_read@position+1)& (0+255),b
 15881  00F3F4  0E00               	movlw	0
 15882  00F3F6  6FFD               	movwf	(configFile_read@position+2)& (0+255),b
 15883  00F3F8  0E00               	movlw	0
 15884  00F3FA  6FFE               	movwf	(configFile_read@position+3)& (0+255),b
 15885                           
 15886                           ;config_file.c: 291: while((file_size-position)>3)
 15887  00F3FC  D086               	goto	l3076
 15888  00F3FE                     
 15889                           ; BSR set to: 1
 15890                           ;config_file.c: 292: {;config_file.c: 293: if((position+45) > file_size)
 15891                           
 15892                           ; BSR set to: 1
 15893  00F3FE  0E2D               	movlw	45
 15894  00F400  25FB               	addwf	configFile_read@position& (0+255),w,b
 15895  00F402  6FC3               	movwf	??_configFile_read& (0+255),b
 15896  00F404  0E00               	movlw	0
 15897  00F406  21FC               	addwfc	(configFile_read@position+1)& (0+255),w,b
 15898  00F408  6FC4               	movwf	(??_configFile_read+1)& (0+255),b
 15899  00F40A  0E00               	movlw	0
 15900  00F40C  21FD               	addwfc	(configFile_read@position+2)& (0+255),w,b
 15901  00F40E  6FC5               	movwf	(??_configFile_read+2)& (0+255),b
 15902  00F410  0E00               	movlw	0
 15903  00F412  21FE               	addwfc	(configFile_read@position+3)& (0+255),w,b
 15904  00F414  6FC6               	movwf	(??_configFile_read+3)& (0+255),b
 15905  00F416  51C3               	movf	??_configFile_read& (0+255),w,b
 15906  00F418  5DF6               	subwf	configFile_read@file_size& (0+255),w,b
 15907  00F41A  51C4               	movf	(??_configFile_read+1)& (0+255),w,b
 15908  00F41C  59F7               	subwfb	(configFile_read@file_size+1)& (0+255),w,b
 15909  00F41E  51C5               	movf	(??_configFile_read+2)& (0+255),w,b
 15910  00F420  59F8               	subwfb	(configFile_read@file_size+2)& (0+255),w,b
 15911  00F422  51C6               	movf	(??_configFile_read+3)& (0+255),w,b
 15912  00F424  59F9               	subwfb	(configFile_read@file_size+3)& (0+255),w,b
 15913  00F426  B0D8               	btfsc	status,0,c
 15914  00F428  D035               	goto	l3078
 15915                           
 15916                           ; BSR set to: 1
 15917                           ;config_file.c: 294: {;config_file.c: 296: fat_read_from_file(file_number, position, fil
      +                          e_size-position, &ConfigFile_buffer[0]);
 15918  00F42A  C1FB  F0C9         	movff	configFile_read@position,fat_read_from_file@start_byte
 15919  00F42E  C1FC  F0CA         	movff	configFile_read@position+1,fat_read_from_file@start_byte+1
 15920  00F432  C1FD  F0CB         	movff	configFile_read@position+2,fat_read_from_file@start_byte+2
 15921  00F436  C1FE  F0CC         	movff	configFile_read@position+3,fat_read_from_file@start_byte+3
 15922  00F43A  C1FB  F1C3         	movff	configFile_read@position,??_configFile_read
 15923  00F43E  C1FC  F1C4         	movff	configFile_read@position+1,??_configFile_read+1
 15924  00F442  C1FD  F1C5         	movff	configFile_read@position+2,??_configFile_read+2
 15925  00F446  C1FE  F1C6         	movff	configFile_read@position+3,??_configFile_read+3
 15926  00F44A  1FC3               	comf	??_configFile_read& (0+255),f,b
 15927  00F44C  1FC4               	comf	(??_configFile_read+1)& (0+255),f,b
 15928  00F44E  1FC5               	comf	(??_configFile_read+2)& (0+255),f,b
 15929  00F450  1FC6               	comf	(??_configFile_read+3)& (0+255),f,b
 15930  00F452  2BC3               	incf	??_configFile_read& (0+255),f,b
 15931  00F454  0E00               	movlw	0
 15932  00F456  23C4               	addwfc	(??_configFile_read+1)& (0+255),f,b
 15933  00F458  23C5               	addwfc	(??_configFile_read+2)& (0+255),f,b
 15934  00F45A  23C6               	addwfc	(??_configFile_read+3)& (0+255),f,b
 15935  00F45C  51F6               	movf	configFile_read@file_size& (0+255),w,b
 15936  00F45E  25C3               	addwf	??_configFile_read& (0+255),w,b
 15937  00F460  0100               	movlb	0	; () banked
 15938  00F462  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 15939  00F464  0101               	movlb	1	; () banked
 15940  00F466  51F7               	movf	(configFile_read@file_size+1)& (0+255),w,b
 15941  00F468  21C4               	addwfc	(??_configFile_read+1)& (0+255),w,b
 15942  00F46A  0100               	movlb	0	; () banked
 15943  00F46C  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 15944  00F46E  0101               	movlb	1	; () banked
 15945  00F470  51F8               	movf	(configFile_read@file_size+2)& (0+255),w,b
 15946  00F472  21C5               	addwfc	(??_configFile_read+2)& (0+255),w,b
 15947  00F474  0100               	movlb	0	; () banked
 15948  00F476  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 15949  00F478  0101               	movlb	1	; () banked
 15950  00F47A  51F9               	movf	(configFile_read@file_size+3)& (0+255),w,b
 15951  00F47C  21C6               	addwfc	(??_configFile_read+3)& (0+255),w,b
 15952  00F47E  0100               	movlb	0	; () banked
 15953  00F480  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 15954  00F482  0E00               	movlw	low _ConfigFile_buffer
 15955  00F484  6FD1               	movwf	fat_read_from_file@data& (0+255),b
 15956  00F486  0E08               	movlw	high _ConfigFile_buffer
 15957  00F488  6FD2               	movwf	(fat_read_from_file@data+1)& (0+255),b
 15958  00F48A  0101               	movlb	1	; () banked
 15959  00F48C  51FA               	movf	configFile_read@file_number& (0+255),w,b
 15960  00F48E  ECDE  F08F         	call	_fat_read_from_file
 15961                           
 15962                           ;config_file.c: 297: }
 15963  00F492  D019               	goto	l3079
 15964  00F494                     l3078:
 15965                           
 15966                           ;config_file.c: 298: else;config_file.c: 299: {;config_file.c: 301: fat_read_from_file(f
      +                          ile_number, position, 45, &ConfigFile_buffer[0]);
 15967  00F494  C1FB  F0C9         	movff	configFile_read@position,fat_read_from_file@start_byte
 15968  00F498  C1FC  F0CA         	movff	configFile_read@position+1,fat_read_from_file@start_byte+1
 15969  00F49C  C1FD  F0CB         	movff	configFile_read@position+2,fat_read_from_file@start_byte+2
 15970  00F4A0  C1FE  F0CC         	movff	configFile_read@position+3,fat_read_from_file@start_byte+3
 15971  00F4A4  0E2D               	movlw	45
 15972  00F4A6  0100               	movlb	0	; () banked
 15973  00F4A8  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 15974  00F4AA  0E00               	movlw	0
 15975  00F4AC  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 15976  00F4AE  0E00               	movlw	0
 15977  00F4B0  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 15978  00F4B2  0E00               	movlw	0
 15979  00F4B4  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 15980  00F4B6  0E00               	movlw	low _ConfigFile_buffer
 15981  00F4B8  6FD1               	movwf	fat_read_from_file@data& (0+255),b
 15982  00F4BA  0E08               	movlw	high _ConfigFile_buffer
 15983  00F4BC  6FD2               	movwf	(fat_read_from_file@data+1)& (0+255),b
 15984  00F4BE  0101               	movlb	1	; () banked
 15985  00F4C0  51FA               	movf	configFile_read@file_number& (0+255),w,b
 15986  00F4C2  ECDE  F08F         	call	_fat_read_from_file
 15987  00F4C6                     l3079:
 15988                           
 15989                           ;config_file.c: 302: };config_file.c: 305: position += _get_item(&item_string[0], &value
      +                          _string[0], &ConfigFile_buffer[0]);
 15990  00F4C6  0ECB               	movlw	low configFile_read@item_string
 15991  00F4C8  0100               	movlb	0	; () banked
 15992  00F4CA  6F60               	movwf	__get_item@item_string& (0+255),b
 15993  00F4CC  0E01               	movlw	high configFile_read@item_string
 15994  00F4CE  6F61               	movwf	(__get_item@item_string+1)& (0+255),b
 15995  00F4D0  0EEA               	movlw	low configFile_read@value_string
 15996  00F4D2  6F62               	movwf	__get_item@value_string& (0+255),b
 15997  00F4D4  0E01               	movlw	high configFile_read@value_string
 15998  00F4D6  6F63               	movwf	(__get_item@value_string+1)& (0+255),b
 15999  00F4D8  0E00               	movlw	low _ConfigFile_buffer
 16000  00F4DA  6F64               	movwf	__get_item@buffer& (0+255),b
 16001  00F4DC  0E08               	movlw	high _ConfigFile_buffer
 16002  00F4DE  6F65               	movwf	(__get_item@buffer+1)& (0+255),b
 16003  00F4E0  EC77  F07B         	call	__get_item	;wreg free
 16004  00F4E4  0101               	movlb	1	; () banked
 16005  00F4E6  6FC3               	movwf	??_configFile_read& (0+255),b
 16006  00F4E8  51C3               	movf	??_configFile_read& (0+255),w,b
 16007  00F4EA  27FB               	addwf	configFile_read@position& (0+255),f,b
 16008  00F4EC  0E00               	movlw	0
 16009  00F4EE  23FC               	addwfc	(configFile_read@position+1)& (0+255),f,b
 16010  00F4F0  23FD               	addwfc	(configFile_read@position+2)& (0+255),f,b
 16011  00F4F2  23FE               	addwfc	(configFile_read@position+3)& (0+255),f,b
 16012                           
 16013                           ; BSR set to: 1
 16014                           ;config_file.c: 308: _parse_item(&item_string[0], &value_string[0]);
 16015  00F4F4  0ECB               	movlw	low configFile_read@item_string
 16016  00F4F6  0100               	movlb	0	; () banked
 16017  00F4F8  6F99               	movwf	__parse_item@item_string& (0+255),b
 16018  00F4FA  0E01               	movlw	high configFile_read@item_string
 16019  00F4FC  6F9A               	movwf	(__parse_item@item_string+1)& (0+255),b
 16020  00F4FE  0EEA               	movlw	low configFile_read@value_string
 16021  00F500  6F9B               	movwf	__parse_item@value_string& (0+255),b
 16022  00F502  0E01               	movlw	high configFile_read@value_string
 16023  00F504  6F9C               	movwf	(__parse_item@value_string+1)& (0+255),b
 16024  00F506  EC03  F05F         	call	__parse_item	;wreg free
 16025  00F50A                     l3076:
 16026  00F50A  C1FB  F1C3         	movff	configFile_read@position,??_configFile_read
 16027  00F50E  C1FC  F1C4         	movff	configFile_read@position+1,??_configFile_read+1
 16028  00F512  C1FD  F1C5         	movff	configFile_read@position+2,??_configFile_read+2
 16029  00F516  C1FE  F1C6         	movff	configFile_read@position+3,??_configFile_read+3
 16030  00F51A  0101               	movlb	1	; () banked
 16031  00F51C  1FC3               	comf	??_configFile_read& (0+255),f,b
 16032  00F51E  1FC4               	comf	(??_configFile_read+1)& (0+255),f,b
 16033  00F520  1FC5               	comf	(??_configFile_read+2)& (0+255),f,b
 16034  00F522  1FC6               	comf	(??_configFile_read+3)& (0+255),f,b
 16035  00F524  2BC3               	incf	??_configFile_read& (0+255),f,b
 16036  00F526  0E00               	movlw	0
 16037  00F528  23C4               	addwfc	(??_configFile_read+1)& (0+255),f,b
 16038  00F52A  23C5               	addwfc	(??_configFile_read+2)& (0+255),f,b
 16039  00F52C  23C6               	addwfc	(??_configFile_read+3)& (0+255),f,b
 16040  00F52E  51F6               	movf	configFile_read@file_size& (0+255),w,b
 16041  00F530  25C3               	addwf	??_configFile_read& (0+255),w,b
 16042  00F532  6FC7               	movwf	(??_configFile_read+4)& (0+255),b
 16043  00F534  51F7               	movf	(configFile_read@file_size+1)& (0+255),w,b
 16044  00F536  21C4               	addwfc	(??_configFile_read+1)& (0+255),w,b
 16045  00F538  6FC8               	movwf	(??_configFile_read+5)& (0+255),b
 16046  00F53A  51F8               	movf	(configFile_read@file_size+2)& (0+255),w,b
 16047  00F53C  21C5               	addwfc	(??_configFile_read+2)& (0+255),w,b
 16048  00F53E  6FC9               	movwf	(??_configFile_read+6)& (0+255),b
 16049  00F540  51F9               	movf	(configFile_read@file_size+3)& (0+255),w,b
 16050  00F542  21C6               	addwfc	(??_configFile_read+3)& (0+255),w,b
 16051  00F544  6FCA               	movwf	(??_configFile_read+7)& (0+255),b
 16052  00F546  51CA               	movf	(??_configFile_read+7)& (0+255),w,b
 16053  00F548  11C9               	iorwf	(??_configFile_read+6)& (0+255),w,b
 16054  00F54A  11C8               	iorwf	(??_configFile_read+5)& (0+255),w,b
 16055  00F54C  E104               	bnz	u16981
 16056  00F54E  0E04               	movlw	4
 16057  00F550  5DC7               	subwf	(??_configFile_read+4)& (0+255),w,b
 16058  00F552  A0D8               	btfss	status,0,c
 16059  00F554  0012               	return	
 16060  00F556                     u16981:
 16061  00F556  D753               	goto	l3077
 16062  00F558                     __end_of_configFile_read:
 16063                           	opt stack 0
 16064                           tblptru	equ	0xFF8
 16065                           tblptrh	equ	0xFF7
 16066                           tblptrl	equ	0xFF6
 16067                           tablat	equ	0xFF5
 16068                           prodh	equ	0xFF4
 16069                           prodl	equ	0xFF3
 16070                           postinc0	equ	0xFEE
 16071                           wreg	equ	0xFE8
 16072                           postdec1	equ	0xFE5
 16073                           plusw1	equ	0xFE3
 16074                           fsr1h	equ	0xFE2
 16075                           fsr1l	equ	0xFE1
 16076                           indf2	equ	0xFDF
 16077                           postinc2	equ	0xFDE
 16078                           plusw2	equ	0xFDB
 16079                           fsr2h	equ	0xFDA
 16080                           fsr2l	equ	0xFD9
 16081                           status	equ	0xFD8
 16082                           
 16083 ;; *************** function _fat_read_from_file *****************
 16084 ;; Defined at:
 16085 ;;		line 752 in file "fat16.c"
 16086 ;; Parameters:    Size  Location     Type
 16087 ;;  file_number     1    wreg     unsigned char 
 16088 ;;  start_byte      4  105[BANK0 ] unsigned long 
 16089 ;;  length          4  109[BANK0 ] unsigned long 
 16090 ;;  data            2  113[BANK0 ] PTR unsigned char 
 16091 ;;		 -> ConfigFile_buffer(512), 
 16092 ;; Auto vars:     Size  Location     Type
 16093 ;;  file_number     1  119[BANK0 ] unsigned char 
 16094 ;;  root           32  125[BANK0 ] struct .
 16095 ;;  cluster_numb    2  123[BANK0 ] unsigned int 
 16096 ;;  cluster         2  121[BANK0 ] unsigned int 
 16097 ;;  return_code     1  120[BANK0 ] unsigned char 
 16098 ;; Return value:  Size  Location     Type
 16099 ;;                  1    wreg      unsigned char 
 16100 ;; Registers used:
 16101 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16102 ;; Tracked objects:
 16103 ;;		On entry : 0/0
 16104 ;;		On exit  : 0/0
 16105 ;;		Unchanged: 0/0
 16106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16107 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16108 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16109 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16110 ;;      Totals:         0      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16111 ;;Total ram usage:       52 bytes
 16112 ;; Hardware stack levels used:    1
 16113 ;; Hardware stack levels required when called:   18
 16114 ;; This function calls:
 16115 ;;		_fat_get_file_information
 16116 ;;		_fat_read_from_file_fast
 16117 ;; This function is called by:
 16118 ;;		_configFile_read
 16119 ;; This function uses a non-reentrant model
 16120 ;;
 16121                           
 16122                           	psect	text59
 16123  011FBC                     __ptext59:
 16124                           	opt stack 0
 16125  011FBC                     _fat_read_from_file:
 16126                           	opt stack 10
 16127                           
 16128                           ; BSR set to: 1
 16129                           ;incstack = 0
 16130                           ;fat_read_from_file@file_number stored from wreg
 16131  011FBC  0100               	movlb	0	; () banked
 16132  011FBE  6FD7               	movwf	fat_read_from_file@file_number& (0+255),b
 16133                           
 16134                           ;fat16.c: 754: rootEntry_t root;;fat16.c: 755: uint16_t cluster;;fat16.c: 756: uint16_t 
      +                          cluster_number;;fat16.c: 757: uint8_t return_code;;fat16.c: 760: return_code = fat_get_f
      +                          ile_information(file_number, &root);
 16135  011FC0  0EDD               	movlw	low fat_read_from_file@root
 16136  011FC2  0100               	movlb	0	; () banked
 16137  011FC4  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 16138  011FC6  0E00               	movlw	high fat_read_from_file@root
 16139  011FC8  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 16140  011FCA  51D7               	movf	fat_read_from_file@file_number& (0+255),w,b
 16141  011FCC  EC06  F0A1         	call	_fat_get_file_information
 16142  011FD0  0100               	movlb	0	; () banked
 16143  011FD2  6FD8               	movwf	fat_read_from_file@return_code& (0+255),b
 16144                           
 16145                           ; BSR set to: 0
 16146                           ;fat16.c: 761: if(return_code!=0x00)
 16147  011FD4  51D8               	movf	fat_read_from_file@return_code& (0+255),w,b
 16148  011FD6  A4D8               	btfss	status,2,c
 16149  011FD8  0012               	return	
 16150                           
 16151                           ; BSR set to: 0
 16152                           ;fat16.c: 765: };fat16.c: 768: if(start_byte > root.fileSize)
 16153                           
 16154                           ; BSR set to: 0
 16155                           
 16156                           ; BSR set to: 0
 16157                           ;fat16.c: 762: {;fat16.c: 764: return return_code;;	Return value of _fat_read_from_file 
      +                          is never used
 16158  011FDA  51C9               	movf	fat_read_from_file@start_byte& (0+255),w,b
 16159  011FDC  5DF9               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 16160  011FDE  51CA               	movf	(fat_read_from_file@start_byte+1)& (0+255),w,b
 16161  011FE0  59FA               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 16162  011FE2  51CB               	movf	(fat_read_from_file@start_byte+2)& (0+255),w,b
 16163  011FE4  59FB               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 16164  011FE6  51CC               	movf	(fat_read_from_file@start_byte+3)& (0+255),w,b
 16165  011FE8  59FC               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 16166  011FEA  A0D8               	btfss	status,0,c
 16167  011FEC  0012               	return	
 16168                           
 16169                           ; BSR set to: 0
 16170                           ;fat16.c: 772: };fat16.c: 774: if(start_byte+length > root.fileSize)
 16171                           
 16172                           ; BSR set to: 0
 16173                           
 16174                           ; BSR set to: 0
 16175                           ;fat16.c: 769: {;fat16.c: 771: return 0xFF;;	Return value of _fat_read_from_file is neve
      +                          r used
 16176  011FEE  51CD               	movf	fat_read_from_file@length& (0+255),w,b
 16177  011FF0  25C9               	addwf	fat_read_from_file@start_byte& (0+255),w,b
 16178  011FF2  6FD3               	movwf	??_fat_read_from_file& (0+255),b
 16179  011FF4  51CE               	movf	(fat_read_from_file@length+1)& (0+255),w,b
 16180  011FF6  21CA               	addwfc	(fat_read_from_file@start_byte+1)& (0+255),w,b
 16181  011FF8  6FD4               	movwf	(??_fat_read_from_file+1)& (0+255),b
 16182  011FFA  51CF               	movf	(fat_read_from_file@length+2)& (0+255),w,b
 16183  011FFC  21CB               	addwfc	(fat_read_from_file@start_byte+2)& (0+255),w,b
 16184  011FFE  6FD5               	movwf	(??_fat_read_from_file+2)& (0+255),b
 16185  012000  51D0               	movf	(fat_read_from_file@length+3)& (0+255),w,b
 16186  012002  21CC               	addwfc	(fat_read_from_file@start_byte+3)& (0+255),w,b
 16187  012004  6FD6               	movwf	(??_fat_read_from_file+3)& (0+255),b
 16188  012006  51D3               	movf	??_fat_read_from_file& (0+255),w,b
 16189  012008  5DF9               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 16190  01200A  51D4               	movf	(??_fat_read_from_file+1)& (0+255),w,b
 16191  01200C  59FA               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 16192  01200E  51D5               	movf	(??_fat_read_from_file+2)& (0+255),w,b
 16193  012010  59FB               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 16194  012012  51D6               	movf	(??_fat_read_from_file+3)& (0+255),w,b
 16195  012014  59FC               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 16196  012016  B0D8               	btfsc	status,0,c
 16197  012018  D01D               	goto	l1896
 16198                           
 16199                           ; BSR set to: 0
 16200                           ;fat16.c: 775: {;fat16.c: 777: length = root.fileSize - start_byte;
 16201  01201A  C0C9  F0D3         	movff	fat_read_from_file@start_byte,??_fat_read_from_file
 16202  01201E  C0CA  F0D4         	movff	fat_read_from_file@start_byte+1,??_fat_read_from_file+1
 16203  012022  C0CB  F0D5         	movff	fat_read_from_file@start_byte+2,??_fat_read_from_file+2
 16204  012026  C0CC  F0D6         	movff	fat_read_from_file@start_byte+3,??_fat_read_from_file+3
 16205  01202A  1FD3               	comf	??_fat_read_from_file& (0+255),f,b
 16206  01202C  1FD4               	comf	(??_fat_read_from_file+1)& (0+255),f,b
 16207  01202E  1FD5               	comf	(??_fat_read_from_file+2)& (0+255),f,b
 16208  012030  1FD6               	comf	(??_fat_read_from_file+3)& (0+255),f,b
 16209  012032  2BD3               	incf	??_fat_read_from_file& (0+255),f,b
 16210  012034  0E00               	movlw	0
 16211  012036  23D4               	addwfc	(??_fat_read_from_file+1)& (0+255),f,b
 16212  012038  23D5               	addwfc	(??_fat_read_from_file+2)& (0+255),f,b
 16213  01203A  23D6               	addwfc	(??_fat_read_from_file+3)& (0+255),f,b
 16214  01203C  51F9               	movf	(fat_read_from_file@root+28)& (0+255),w,b
 16215  01203E  25D3               	addwf	??_fat_read_from_file& (0+255),w,b
 16216  012040  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 16217  012042  51FA               	movf	(fat_read_from_file@root+29)& (0+255),w,b
 16218  012044  21D4               	addwfc	(??_fat_read_from_file+1)& (0+255),w,b
 16219  012046  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 16220  012048  51FB               	movf	(fat_read_from_file@root+30)& (0+255),w,b
 16221  01204A  21D5               	addwfc	(??_fat_read_from_file+2)& (0+255),w,b
 16222  01204C  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 16223  01204E  51FC               	movf	(fat_read_from_file@root+31)& (0+255),w,b
 16224  012050  21D6               	addwfc	(??_fat_read_from_file+3)& (0+255),w,b
 16225  012052  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 16226  012054                     l1896:
 16227                           
 16228                           ; BSR set to: 0
 16229                           ;fat16.c: 778: };fat16.c: 781: cluster = root.firstCluster;
 16230                           
 16231                           ; BSR set to: 0
 16232  012054  C0F7  F0D9         	movff	fat_read_from_file@root+26,fat_read_from_file@cluster
 16233  012058  C0F8  F0DA         	movff	fat_read_from_file@root+27,fat_read_from_file@cluster+1
 16234                           
 16235                           ; BSR set to: 0
 16236                           ;fat16.c: 782: cluster_number = 0;
 16237  01205C  0E00               	movlw	0
 16238  01205E  6FDC               	movwf	(fat_read_from_file@cluster_number+1)& (0+255),b
 16239  012060  0E00               	movlw	0
 16240  012062  6FDB               	movwf	fat_read_from_file@cluster_number& (0+255),b
 16241                           
 16242                           ; BSR set to: 0
 16243                           ;fat16.c: 785: return fat_read_from_file_fast(start_byte, length, data, &cluster, &clust
      +                          er_number);;	Return value of _fat_read_from_file is never used
 16244  012064  C0C9  F0A1         	movff	fat_read_from_file@start_byte,fat_read_from_file_fast@start_byte
 16245  012068  C0CA  F0A2         	movff	fat_read_from_file@start_byte+1,fat_read_from_file_fast@start_byte+1
 16246  01206C  C0CB  F0A3         	movff	fat_read_from_file@start_byte+2,fat_read_from_file_fast@start_byte+2
 16247  012070  C0CC  F0A4         	movff	fat_read_from_file@start_byte+3,fat_read_from_file_fast@start_byte+3
 16248  012074  C0CD  F0A5         	movff	fat_read_from_file@length,fat_read_from_file_fast@length
 16249  012078  C0CE  F0A6         	movff	fat_read_from_file@length+1,fat_read_from_file_fast@length+1
 16250  01207C  C0CF  F0A7         	movff	fat_read_from_file@length+2,fat_read_from_file_fast@length+2
 16251  012080  C0D0  F0A8         	movff	fat_read_from_file@length+3,fat_read_from_file_fast@length+3
 16252  012084  C0D1  F0A9         	movff	fat_read_from_file@data,fat_read_from_file_fast@data
 16253  012088  C0D2  F0AA         	movff	fat_read_from_file@data+1,fat_read_from_file_fast@data+1
 16254  01208C  0ED9               	movlw	low fat_read_from_file@cluster
 16255  01208E  6FAB               	movwf	fat_read_from_file_fast@cluster& (0+255),b
 16256  012090  0E00               	movlw	high fat_read_from_file@cluster
 16257  012092  6FAC               	movwf	(fat_read_from_file_fast@cluster+1)& (0+255),b
 16258  012094  0EDB               	movlw	low fat_read_from_file@cluster_number
 16259  012096  6FAD               	movwf	fat_read_from_file_fast@cluster_number& (0+255),b
 16260  012098  0E00               	movlw	high fat_read_from_file@cluster_number
 16261  01209A  6FAE               	movwf	(fat_read_from_file_fast@cluster_number+1)& (0+255),b
 16262  01209C  EC37  F071         	call	_fat_read_from_file_fast	;wreg free
 16263  0120A0  0012               	return	
 16264  0120A2                     __end_of_fat_read_from_file:
 16265                           	opt stack 0
 16266                           tblptru	equ	0xFF8
 16267                           tblptrh	equ	0xFF7
 16268                           tblptrl	equ	0xFF6
 16269                           tablat	equ	0xFF5
 16270                           prodh	equ	0xFF4
 16271                           prodl	equ	0xFF3
 16272                           postinc0	equ	0xFEE
 16273                           wreg	equ	0xFE8
 16274                           postdec1	equ	0xFE5
 16275                           plusw1	equ	0xFE3
 16276                           fsr1h	equ	0xFE2
 16277                           fsr1l	equ	0xFE1
 16278                           indf2	equ	0xFDF
 16279                           postinc2	equ	0xFDE
 16280                           plusw2	equ	0xFDB
 16281                           fsr2h	equ	0xFDA
 16282                           fsr2l	equ	0xFD9
 16283                           status	equ	0xFD8
 16284                           
 16285 ;; *************** function _fat_read_from_file_fast *****************
 16286 ;; Defined at:
 16287 ;;		line 788 in file "fat16.c"
 16288 ;; Parameters:    Size  Location     Type
 16289 ;;  start_byte      4   65[BANK0 ] unsigned long 
 16290 ;;  length          4   69[BANK0 ] unsigned long 
 16291 ;;  data            2   73[BANK0 ] PTR unsigned char 
 16292 ;;		 -> ConfigFile_buffer(512), 
 16293 ;;  cluster         2   75[BANK0 ] PTR unsigned int 
 16294 ;;		 -> fat_read_from_file@cluster(2), 
 16295 ;;  cluster_numb    2   77[BANK0 ] PTR unsigned int 
 16296 ;;		 -> fat_read_from_file@cluster_number(2), 
 16297 ;; Auto vars:     Size  Location     Type
 16298 ;;  position        4  101[BANK0 ] unsigned long 
 16299 ;;  read_length     2   99[BANK0 ] unsigned int 
 16300 ;;  needed_clust    2   97[BANK0 ] unsigned int 
 16301 ;;  offset          2   95[BANK0 ] unsigned int 
 16302 ;;  working_clus    2   93[BANK0 ] unsigned int 
 16303 ;;  sector          2   91[BANK0 ] unsigned int 
 16304 ;; Return value:  Size  Location     Type
 16305 ;;                  1    wreg      unsigned char 
 16306 ;; Registers used:
 16307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16308 ;; Tracked objects:
 16309 ;;		On entry : 0/0
 16310 ;;		On exit  : 0/0
 16311 ;;		Unchanged: 0/0
 16312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16313 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16314 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16315 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16316 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16317 ;;Total ram usage:       40 bytes
 16318 ;; Hardware stack levels used:    1
 16319 ;; Hardware stack levels required when called:   17
 16320 ;; This function calls:
 16321 ;;		__data_sector_from_cluster
 16322 ;;		__find_nth_cluster
 16323 ;;		__read_fat
 16324 ;;		_flash_partial_read
 16325 ;; This function is called by:
 16326 ;;		_fat_read_from_file
 16327 ;; This function uses a non-reentrant model
 16328 ;;
 16329                           
 16330                           	psect	text60
 16331  00E26E                     __ptext60:
 16332                           	opt stack 0
 16333  00E26E                     _fat_read_from_file_fast:
 16334                           	opt stack 10
 16335                           
 16336                           ;fat16.c: 790: uint32_t position;;fat16.c: 791: uint16_t offset;;fat16.c: 792: uint16_t 
      +                          sector;;fat16.c: 793: uint16_t read_length;;fat16.c: 794: uint16_t working_cluster;;fat1
      +                          6.c: 795: uint16_t needed_cluster;;fat16.c: 798: needed_cluster = (uint16_t) (start_byte
      +                          >>9);
 16337                           
 16338                           ;incstack = 0
 16339  00E26E  C0A1  F0AF         	movff	fat_read_from_file_fast@start_byte,??_fat_read_from_file_fast
 16340  00E272  C0A2  F0B0         	movff	fat_read_from_file_fast@start_byte+1,??_fat_read_from_file_fast+1
 16341  00E276  C0A3  F0B1         	movff	fat_read_from_file_fast@start_byte+2,??_fat_read_from_file_fast+2
 16342  00E27A  C0A4  F0B2         	movff	fat_read_from_file_fast@start_byte+3,??_fat_read_from_file_fast+3
 16343  00E27E  0E0A               	movlw	10
 16344  00E280  D006               	goto	u14180
 16345  00E282                     u14185:
 16346  00E282  0100               	movlb	0	; () banked
 16347  00E284  90D8               	bcf	status,0,c
 16348  00E286  33B2               	rrcf	(??_fat_read_from_file_fast+3)& (0+255),f,b
 16349  00E288  33B1               	rrcf	(??_fat_read_from_file_fast+2)& (0+255),f,b
 16350  00E28A  33B0               	rrcf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16351  00E28C  33AF               	rrcf	??_fat_read_from_file_fast& (0+255),f,b
 16352  00E28E                     u14180:
 16353  00E28E  2EE8               	decfsz	wreg,f,c
 16354  00E290  D7F8               	goto	u14185
 16355  00E292  C0AF  F0C1         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@needed_cluster
 16356  00E296  C0B0  F0C2         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@needed_cluster+1
 16357                           
 16358                           ; BSR set to: 0
 16359                           ;fat16.c: 801: if((*cluster_number) > needed_cluster)
 16360  00E29A  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 16361  00E29E  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 16362  00E2A2  50DE               	movf	postinc2,w,c
 16363  00E2A4  5DC1               	subwf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 16364  00E2A6  50DE               	movf	postinc2,w,c
 16365  00E2A8  59C2               	subwfb	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 16366  00E2AA  B0D8               	btfsc	status,0,c
 16367  00E2AC  D002               	goto	l1899
 16368                           
 16369                           ; BSR set to: 0
 16370                           ;fat16.c: 802: {;fat16.c: 803: return 0xFF;
 16371  00E2AE  0EFF               	movlw	255
 16372                           
 16373                           ; BSR set to: 0
 16374  00E2B0  0012               	return	
 16375  00E2B2                     l1899:
 16376                           
 16377                           ; BSR set to: 0
 16378                           ;fat16.c: 804: };fat16.c: 807: (*cluster) = _find_nth_cluster((*cluster), (needed_cluste
      +                          r-(*cluster_number)));
 16379                           
 16380                           ; BSR set to: 0
 16381  00E2B2  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 16382  00E2B6  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 16383  00E2BA  CFDE F097          	movff	postinc2,__find_nth_cluster@cluster
 16384  00E2BE  CFDD F098          	movff	postdec2,__find_nth_cluster@cluster+1
 16385  00E2C2  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 16386  00E2C6  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 16387  00E2CA  CFDE F0AF          	movff	postinc2,??_fat_read_from_file_fast
 16388  00E2CE  CFDD F0B0          	movff	postdec2,??_fat_read_from_file_fast+1
 16389  00E2D2  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16390  00E2D4  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16391  00E2D6  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16392  00E2D8  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16393  00E2DA  51C1               	movf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 16394  00E2DC  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16395  00E2DE  6F99               	movwf	__find_nth_cluster@n& (0+255),b
 16396  00E2E0  51C2               	movf	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 16397  00E2E2  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16398  00E2E4  6F9A               	movwf	(__find_nth_cluster@n+1)& (0+255),b
 16399  00E2E6  ECDB  F09A         	call	__find_nth_cluster	;wreg free
 16400  00E2EA  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 16401  00E2EE  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 16402  00E2F2  0100               	movlb	0	; () banked
 16403  00E2F4  C097  FFDE         	movff	?__find_nth_cluster,postinc2
 16404  00E2F8  C098  FFDD         	movff	?__find_nth_cluster+1,postdec2
 16405                           
 16406                           ; BSR set to: 0
 16407                           ;fat16.c: 810: (*cluster_number) = needed_cluster;
 16408  00E2FC  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 16409  00E300  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 16410  00E304  C0C1  FFDE         	movff	fat_read_from_file_fast@needed_cluster,postinc2
 16411  00E308  C0C2  FFDD         	movff	fat_read_from_file_fast@needed_cluster+1,postdec2
 16412                           
 16413                           ; BSR set to: 0
 16414                           ;fat16.c: 814: working_cluster = (*cluster);
 16415  00E30C  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 16416  00E310  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 16417  00E314  CFDE F0BD          	movff	postinc2,fat_read_from_file_fast@working_cluster
 16418  00E318  CFDD F0BE          	movff	postdec2,fat_read_from_file_fast@working_cluster+1
 16419                           
 16420                           ; BSR set to: 0
 16421                           ;fat16.c: 817: position = (needed_cluster << 9);
 16422  00E31C  C0C1  F0AF         	movff	fat_read_from_file_fast@needed_cluster,??_fat_read_from_file_fast
 16423  00E320  C0C2  F0B0         	movff	fat_read_from_file_fast@needed_cluster+1,??_fat_read_from_file_fast+1
 16424  00E324  0E09               	movlw	9
 16425  00E326                     u14205:
 16426  00E326  90D8               	bcf	status,0,c
 16427  00E328  37AF               	rlcf	??_fat_read_from_file_fast& (0+255),f,b
 16428  00E32A  37B0               	rlcf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16429  00E32C  2EE8               	decfsz	wreg,f,c
 16430  00E32E  D7FB               	goto	u14205
 16431  00E330  C0AF  F0C5         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@position
 16432  00E334  C0B0  F0C6         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@position+1
 16433  00E338  6BC7               	clrf	(fat_read_from_file_fast@position+2)& (0+255),b
 16434  00E33A  6BC8               	clrf	(fat_read_from_file_fast@position+3)& (0+255),b
 16435                           
 16436                           ; BSR set to: 0
 16437                           ;fat16.c: 818: offset = start_byte - position;
 16438  00E33C  C0C5  F0AF         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 16439  00E340  C0C6  F0B0         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 16440  00E344  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16441  00E346  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16442  00E348  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16443  00E34A  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16444  00E34C  51A1               	movf	fat_read_from_file_fast@start_byte& (0+255),w,b
 16445  00E34E  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16446  00E350  6FBF               	movwf	fat_read_from_file_fast@offset& (0+255),b
 16447  00E352  51A2               	movf	(fat_read_from_file_fast@start_byte+1)& (0+255),w,b
 16448  00E354  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16449  00E356  6FC0               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 16450                           
 16451                           ; BSR set to: 0
 16452                           ;fat16.c: 821: position = 0;
 16453  00E358  0E00               	movlw	0
 16454  00E35A  6FC5               	movwf	fat_read_from_file_fast@position& (0+255),b
 16455  00E35C  0E00               	movlw	0
 16456  00E35E  6FC6               	movwf	(fat_read_from_file_fast@position+1)& (0+255),b
 16457  00E360  0E00               	movlw	0
 16458  00E362  6FC7               	movwf	(fat_read_from_file_fast@position+2)& (0+255),b
 16459  00E364  0E00               	movlw	0
 16460  00E366  6FC8               	movwf	(fat_read_from_file_fast@position+3)& (0+255),b
 16461                           
 16462                           ;fat16.c: 822: while(position < length)
 16463  00E368  D089               	goto	l1901
 16464  00E36A                     
 16465                           ; BSR set to: 0
 16466                           ;fat16.c: 823: {;fat16.c: 825: if(offset==512)
 16467                           
 16468                           ; BSR set to: 0
 16469  00E36A  0E02               	movlw	2
 16470  00E36C  19C0               	xorwf	(fat_read_from_file_fast@offset+1)& (0+255),w,b
 16471  00E36E  11BF               	iorwf	fat_read_from_file_fast@offset& (0+255),w,b
 16472  00E370  A4D8               	btfss	status,2,c
 16473  00E372  D00F               	goto	l1903
 16474                           
 16475                           ; BSR set to: 0
 16476                           ;fat16.c: 826: {;fat16.c: 828: working_cluster = _read_fat(working_cluster);
 16477  00E374  C0BD  F08F         	movff	fat_read_from_file_fast@working_cluster,__read_fat@cluster
 16478  00E378  C0BE  F090         	movff	fat_read_from_file_fast@working_cluster+1,__read_fat@cluster+1
 16479  00E37C  EC3D  F0A6         	call	__read_fat	;wreg free
 16480  00E380  C08F  F0BD         	movff	?__read_fat,fat_read_from_file_fast@working_cluster
 16481  00E384  C090  F0BE         	movff	?__read_fat+1,fat_read_from_file_fast@working_cluster+1
 16482                           
 16483                           ;fat16.c: 829: offset = 0;
 16484  00E388  0E00               	movlw	0
 16485  00E38A  0100               	movlb	0	; () banked
 16486  00E38C  6FC0               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 16487  00E38E  0E00               	movlw	0
 16488  00E390  6FBF               	movwf	fat_read_from_file_fast@offset& (0+255),b
 16489  00E392                     l1903:
 16490                           
 16491                           ; BSR set to: 0
 16492                           ;fat16.c: 830: };fat16.c: 833: sector = _data_sector_from_cluster(working_cluster);
 16493                           
 16494                           ; BSR set to: 0
 16495  00E392  C0BD  F060         	movff	fat_read_from_file_fast@working_cluster,__data_sector_from_cluster@fat_cluster
 16496  00E396  C0BE  F061         	movff	fat_read_from_file_fast@working_cluster+1,__data_sector_from_cluster@fat_cluster+
      +                          1
 16497  00E39A  EC59  F0AF         	call	__data_sector_from_cluster	;wreg free
 16498  00E39E  C060  F0BB         	movff	?__data_sector_from_cluster,fat_read_from_file_fast@sector
 16499  00E3A2  C061  F0BC         	movff	?__data_sector_from_cluster+1,fat_read_from_file_fast@sector+1
 16500                           
 16501                           ;fat16.c: 836: read_length = 512 - offset;
 16502  00E3A6  C0BF  F0AF         	movff	fat_read_from_file_fast@offset,??_fat_read_from_file_fast
 16503  00E3AA  C0C0  F0B0         	movff	fat_read_from_file_fast@offset+1,??_fat_read_from_file_fast+1
 16504  00E3AE  0100               	movlb	0	; () banked
 16505  00E3B0  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16506  00E3B2  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16507  00E3B4  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16508  00E3B6  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16509  00E3B8  0E00               	movlw	0
 16510  00E3BA  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16511  00E3BC  6FC3               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 16512  00E3BE  0E02               	movlw	2
 16513  00E3C0  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16514  00E3C2  6FC4               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 16515                           
 16516                           ; BSR set to: 0
 16517                           ;fat16.c: 837: if(read_length > (length-position))
 16518  00E3C4  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 16519  00E3C6  6FAF               	movwf	??_fat_read_from_file_fast& (0+255),b
 16520  00E3C8  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 16521  00E3CA  6FB0               	movwf	(??_fat_read_from_file_fast+1)& (0+255),b
 16522  00E3CC  6BB1               	clrf	(??_fat_read_from_file_fast+2)& (0+255),b
 16523  00E3CE  6BB2               	clrf	(??_fat_read_from_file_fast+3)& (0+255),b
 16524  00E3D0  C0C5  F0B3         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast+4
 16525  00E3D4  C0C6  F0B4         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+5
 16526  00E3D8  C0C7  F0B5         	movff	fat_read_from_file_fast@position+2,??_fat_read_from_file_fast+6
 16527  00E3DC  C0C8  F0B6         	movff	fat_read_from_file_fast@position+3,??_fat_read_from_file_fast+7
 16528  00E3E0  1FB3               	comf	(??_fat_read_from_file_fast+4)& (0+255),f,b
 16529  00E3E2  1FB4               	comf	(??_fat_read_from_file_fast+5)& (0+255),f,b
 16530  00E3E4  1FB5               	comf	(??_fat_read_from_file_fast+6)& (0+255),f,b
 16531  00E3E6  1FB6               	comf	(??_fat_read_from_file_fast+7)& (0+255),f,b
 16532  00E3E8  2BB3               	incf	(??_fat_read_from_file_fast+4)& (0+255),f,b
 16533  00E3EA  0E00               	movlw	0
 16534  00E3EC  23B4               	addwfc	(??_fat_read_from_file_fast+5)& (0+255),f,b
 16535  00E3EE  23B5               	addwfc	(??_fat_read_from_file_fast+6)& (0+255),f,b
 16536  00E3F0  23B6               	addwfc	(??_fat_read_from_file_fast+7)& (0+255),f,b
 16537  00E3F2  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 16538  00E3F4  25B3               	addwf	(??_fat_read_from_file_fast+4)& (0+255),w,b
 16539  00E3F6  6FB7               	movwf	(??_fat_read_from_file_fast+8)& (0+255),b
 16540  00E3F8  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 16541  00E3FA  21B4               	addwfc	(??_fat_read_from_file_fast+5)& (0+255),w,b
 16542  00E3FC  6FB8               	movwf	(??_fat_read_from_file_fast+9)& (0+255),b
 16543  00E3FE  51A7               	movf	(fat_read_from_file_fast@length+2)& (0+255),w,b
 16544  00E400  21B5               	addwfc	(??_fat_read_from_file_fast+6)& (0+255),w,b
 16545  00E402  6FB9               	movwf	(??_fat_read_from_file_fast+10)& (0+255),b
 16546  00E404  51A8               	movf	(fat_read_from_file_fast@length+3)& (0+255),w,b
 16547  00E406  21B6               	addwfc	(??_fat_read_from_file_fast+7)& (0+255),w,b
 16548  00E408  6FBA               	movwf	(??_fat_read_from_file_fast+11)& (0+255),b
 16549  00E40A  51AF               	movf	??_fat_read_from_file_fast& (0+255),w,b
 16550  00E40C  5DB7               	subwf	(??_fat_read_from_file_fast+8)& (0+255),w,b
 16551  00E40E  51B0               	movf	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16552  00E410  59B8               	subwfb	(??_fat_read_from_file_fast+9)& (0+255),w,b
 16553  00E412  51B1               	movf	(??_fat_read_from_file_fast+2)& (0+255),w,b
 16554  00E414  59B9               	subwfb	(??_fat_read_from_file_fast+10)& (0+255),w,b
 16555  00E416  51B2               	movf	(??_fat_read_from_file_fast+3)& (0+255),w,b
 16556  00E418  59BA               	subwfb	(??_fat_read_from_file_fast+11)& (0+255),w,b
 16557  00E41A  B0D8               	btfsc	status,0,c
 16558  00E41C  D00E               	goto	l1904
 16559                           
 16560                           ; BSR set to: 0
 16561                           ;fat16.c: 838: {;fat16.c: 840: read_length = length - position;
 16562  00E41E  C0C5  F0AF         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 16563  00E422  C0C6  F0B0         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 16564  00E426  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16565  00E428  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16566  00E42A  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16567  00E42C  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16568  00E42E  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 16569  00E430  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16570  00E432  6FC3               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 16571  00E434  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 16572  00E436  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16573  00E438  6FC4               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 16574  00E43A                     l1904:
 16575                           
 16576                           ; BSR set to: 0
 16577                           ;fat16.c: 841: };fat16.c: 844: flash_partial_read(sector, offset, read_length, &data[pos
      +                          ition]);
 16578                           
 16579                           ; BSR set to: 0
 16580  00E43A  C0BB  F087         	movff	fat_read_from_file_fast@sector,flash_partial_read@page
 16581  00E43E  C0BC  F088         	movff	fat_read_from_file_fast@sector+1,flash_partial_read@page+1
 16582  00E442  C0BF  F089         	movff	fat_read_from_file_fast@offset,flash_partial_read@start
 16583  00E446  C0C0  F08A         	movff	fat_read_from_file_fast@offset+1,flash_partial_read@start+1
 16584  00E44A  C0C3  F08B         	movff	fat_read_from_file_fast@read_length,flash_partial_read@length
 16585  00E44E  C0C4  F08C         	movff	fat_read_from_file_fast@read_length+1,flash_partial_read@length+1
 16586  00E452  51C5               	movf	fat_read_from_file_fast@position& (0+255),w,b
 16587  00E454  25A9               	addwf	fat_read_from_file_fast@data& (0+255),w,b
 16588  00E456  6F8D               	movwf	flash_partial_read@data& (0+255),b
 16589  00E458  51C6               	movf	(fat_read_from_file_fast@position+1)& (0+255),w,b
 16590  00E45A  21AA               	addwfc	(fat_read_from_file_fast@data+1)& (0+255),w,b
 16591  00E45C  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 16592  00E45E  EC26  F0AE         	call	_flash_partial_read	;wreg free
 16593                           
 16594                           ;fat16.c: 847: position += read_length;
 16595  00E462  0100               	movlb	0	; () banked
 16596  00E464  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 16597  00E466  27C5               	addwf	fat_read_from_file_fast@position& (0+255),f,b
 16598  00E468  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 16599  00E46A  23C6               	addwfc	(fat_read_from_file_fast@position+1)& (0+255),f,b
 16600  00E46C  0E00               	movlw	0
 16601  00E46E  23C7               	addwfc	(fat_read_from_file_fast@position+2)& (0+255),f,b
 16602  00E470  0E00               	movlw	0
 16603  00E472  23C8               	addwfc	(fat_read_from_file_fast@position+3)& (0+255),f,b
 16604                           
 16605                           ; BSR set to: 0
 16606                           ;fat16.c: 848: offset += read_length;
 16607  00E474  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 16608  00E476  27BF               	addwf	fat_read_from_file_fast@offset& (0+255),f,b
 16609  00E478  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 16610  00E47A  23C0               	addwfc	(fat_read_from_file_fast@offset+1)& (0+255),f,b
 16611  00E47C                     l1901:
 16612                           
 16613                           ; BSR set to: 0
 16614                           
 16615                           ; BSR set to: 0
 16616  00E47C  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 16617  00E47E  5DC5               	subwf	fat_read_from_file_fast@position& (0+255),w,b
 16618  00E480  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 16619  00E482  59C6               	subwfb	(fat_read_from_file_fast@position+1)& (0+255),w,b
 16620  00E484  51A7               	movf	(fat_read_from_file_fast@length+2)& (0+255),w,b
 16621  00E486  59C7               	subwfb	(fat_read_from_file_fast@position+2)& (0+255),w,b
 16622  00E488  51A8               	movf	(fat_read_from_file_fast@length+3)& (0+255),w,b
 16623  00E48A  59C8               	subwfb	(fat_read_from_file_fast@position+3)& (0+255),w,b
 16624  00E48C  A0D8               	btfss	status,0,c
 16625  00E48E  D76D               	goto	l1902
 16626                           
 16627                           ; BSR set to: 0
 16628                           ;fat16.c: 849: };fat16.c: 852: return 0x00;
 16629                           
 16630                           ; BSR set to: 0
 16631  00E490  0E00               	movlw	0
 16632  00E492  0012               	return	
 16633  00E494                     __end_of_fat_read_from_file_fast:
 16634                           	opt stack 0
 16635                           tblptru	equ	0xFF8
 16636                           tblptrh	equ	0xFF7
 16637                           tblptrl	equ	0xFF6
 16638                           tablat	equ	0xFF5
 16639                           prodh	equ	0xFF4
 16640                           prodl	equ	0xFF3
 16641                           postinc0	equ	0xFEE
 16642                           wreg	equ	0xFE8
 16643                           postdec1	equ	0xFE5
 16644                           plusw1	equ	0xFE3
 16645                           fsr1h	equ	0xFE2
 16646                           fsr1l	equ	0xFE1
 16647                           indf2	equ	0xFDF
 16648                           postinc2	equ	0xFDE
 16649                           postdec2	equ	0xFDD
 16650                           plusw2	equ	0xFDB
 16651                           fsr2h	equ	0xFDA
 16652                           fsr2l	equ	0xFD9
 16653                           status	equ	0xFD8
 16654                           
 16655 ;; *************** function __find_nth_cluster *****************
 16656 ;; Defined at:
 16657 ;;		line 183 in file "fat16.c"
 16658 ;; Parameters:    Size  Location     Type
 16659 ;;  cluster         2   55[BANK0 ] unsigned int 
 16660 ;;  n               2   57[BANK0 ] unsigned int 
 16661 ;; Auto vars:     Size  Location     Type
 16662 ;;  sector          2   63[BANK0 ] unsigned int 
 16663 ;;  sector_in_bu    2   61[BANK0 ] unsigned int 
 16664 ;;  offset          2   59[BANK0 ] unsigned int 
 16665 ;; Return value:  Size  Location     Type
 16666 ;;                  2   55[BANK0 ] unsigned int 
 16667 ;; Registers used:
 16668 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16669 ;; Tracked objects:
 16670 ;;		On entry : 0/0
 16671 ;;		On exit  : 0/0
 16672 ;;		Unchanged: 0/0
 16673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16674 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16675 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16677 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16678 ;;Total ram usage:       10 bytes
 16679 ;; Hardware stack levels used:    1
 16680 ;; Hardware stack levels required when called:   16
 16681 ;; This function calls:
 16682 ;;		__fat_offset_from_cluster
 16683 ;;		__fat_sector_from_cluster
 16684 ;;		__read_fat
 16685 ;;		__read_value_from_offset
 16686 ;;		_flash_sector_read
 16687 ;; This function is called by:
 16688 ;;		_fat_read_from_file_fast
 16689 ;;		_fat_modify_file
 16690 ;;		_fat_copy_sector_to_buffer
 16691 ;; This function uses a non-reentrant model
 16692 ;;
 16693                           
 16694                           	psect	text61
 16695  0135B6                     __ptext61:
 16696                           	opt stack 0
 16697  0135B6                     __find_nth_cluster:
 16698                           	opt stack 11
 16699                           
 16700                           ;fat16.c: 185: uint16_t sector;;fat16.c: 186: uint16_t offset;;fat16.c: 187: uint16_t se
      +                          ctor_in_buffer = 0;
 16701                           
 16702                           ; BSR set to: 0
 16703                           ;incstack = 0
 16704  0135B6  0E00               	movlw	0
 16705  0135B8  0100               	movlb	0	; () banked
 16706  0135BA  6F9E               	movwf	(__find_nth_cluster@sector_in_buffer+1)& (0+255),b
 16707  0135BC  0E00               	movlw	0
 16708  0135BE  6F9D               	movwf	__find_nth_cluster@sector_in_buffer& (0+255),b
 16709                           
 16710                           ; BSR set to: 0
 16711                           ;fat16.c: 190: if(n==1)
 16712  0135C0  0599               	decf	__find_nth_cluster@n& (0+255),w,b
 16713  0135C2  119A               	iorwf	(__find_nth_cluster@n+1)& (0+255),w,b
 16714  0135C4  A4D8               	btfss	status,2,c
 16715  0135C6  D040               	goto	l1786
 16716                           
 16717                           ; BSR set to: 0
 16718                           ;fat16.c: 191: {;fat16.c: 192: return _read_fat(cluster);
 16719  0135C8  C097  F08F         	movff	__find_nth_cluster@cluster,__read_fat@cluster
 16720  0135CC  C098  F090         	movff	__find_nth_cluster@cluster+1,__read_fat@cluster+1
 16721  0135D0  EC3D  F0A6         	call	__read_fat	;wreg free
 16722  0135D4  C08F  F097         	movff	?__read_fat,?__find_nth_cluster
 16723  0135D8  C090  F098         	movff	?__read_fat+1,?__find_nth_cluster+1
 16724  0135DC  0012               	return	
 16725  0135DE                     
 16726                           ;fat16.c: 196: {;fat16.c: 198: sector = _fat_sector_from_cluster(cluster);
 16727  0135DE  C097  F060         	movff	__find_nth_cluster@cluster,__fat_sector_from_cluster@cluster
 16728  0135E2  C098  F061         	movff	__find_nth_cluster@cluster+1,__fat_sector_from_cluster@cluster+1
 16729  0135E6  ECF3  F0AE         	call	__fat_sector_from_cluster	;wreg free
 16730  0135EA  C060  F09F         	movff	?__fat_sector_from_cluster,__find_nth_cluster@sector
 16731  0135EE  C061  F0A0         	movff	?__fat_sector_from_cluster+1,__find_nth_cluster@sector+1
 16732                           
 16733                           ;fat16.c: 199: offset = _fat_offset_from_cluster(cluster);
 16734  0135F2  C097  F060         	movff	__find_nth_cluster@cluster,__fat_offset_from_cluster@cluster
 16735  0135F6  C098  F061         	movff	__find_nth_cluster@cluster+1,__fat_offset_from_cluster@cluster+1
 16736  0135FA  EC00  F0AF         	call	__fat_offset_from_cluster	;wreg free
 16737  0135FE  C060  F09B         	movff	?__fat_offset_from_cluster,__find_nth_cluster@offset
 16738  013602  C061  F09C         	movff	?__fat_offset_from_cluster+1,__find_nth_cluster@offset+1
 16739                           
 16740                           ;fat16.c: 202: if(sector != sector_in_buffer)
 16741  013606  0100               	movlb	0	; () banked
 16742  013608  519D               	movf	__find_nth_cluster@sector_in_buffer& (0+255),w,b
 16743  01360A  199F               	xorwf	__find_nth_cluster@sector& (0+255),w,b
 16744  01360C  E104               	bnz	u12660
 16745  01360E  519E               	movf	(__find_nth_cluster@sector_in_buffer+1)& (0+255),w,b
 16746  013610  19A0               	xorwf	(__find_nth_cluster@sector+1)& (0+255),w,b
 16747  013612  B4D8               	btfsc	status,2,c
 16748  013614  D00A               	goto	l1788
 16749  013616                     u12660:
 16750                           
 16751                           ; BSR set to: 0
 16752                           ;fat16.c: 203: {;fat16.c: 204: flash_sector_read(sector, buffer);
 16753  013616  C09F  F087         	movff	__find_nth_cluster@sector,flash_sector_read@page
 16754  01361A  C0A0  F088         	movff	__find_nth_cluster@sector+1,flash_sector_read@page+1
 16755  01361E  0E00               	movlw	low _buffer
 16756  013620  6F89               	movwf	flash_sector_read@data& (0+255),b
 16757  013622  0E0A               	movlw	high _buffer
 16758  013624  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 16759  013626  EC12  F0AE         	call	_flash_sector_read	;wreg free
 16760  01362A                     l1788:
 16761                           
 16762                           ;fat16.c: 205: };fat16.c: 208: cluster = _read_value_from_offset(offset, buffer);
 16763  01362A  C09B  F060         	movff	__find_nth_cluster@offset,__read_value_from_offset@offset
 16764  01362E  C09C  F061         	movff	__find_nth_cluster@offset+1,__read_value_from_offset@offset+1
 16765  013632  0E00               	movlw	low _buffer
 16766  013634  0100               	movlb	0	; () banked
 16767  013636  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 16768  013638  0E0A               	movlw	high _buffer
 16769  01363A  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 16770  01363C  EC1A  F0AA         	call	__read_value_from_offset	;wreg free
 16771  013640  C060  F097         	movff	?__read_value_from_offset,__find_nth_cluster@cluster
 16772  013644  C061  F098         	movff	?__read_value_from_offset+1,__find_nth_cluster@cluster+1
 16773  013648                     l1786:
 16774  013648  0100               	movlb	0	; () banked
 16775  01364A  5199               	movf	__find_nth_cluster@n& (0+255),w,b
 16776  01364C  119A               	iorwf	(__find_nth_cluster@n+1)& (0+255),w,b
 16777  01364E  A4D8               	btfss	status,2,c
 16778  013650  D7C6               	goto	l1787
 16779                           
 16780                           ; BSR set to: 0
 16781                           ;fat16.c: 209: };fat16.c: 211: return cluster;
 16782  013652  C097  F097         	movff	__find_nth_cluster@cluster,?__find_nth_cluster
 16783  013656  C098  F098         	movff	__find_nth_cluster@cluster+1,?__find_nth_cluster+1
 16784  01365A  0012               	return		;funcret
 16785  01365C                     __end_of__find_nth_cluster:
 16786                           	opt stack 0
 16787                           tblptru	equ	0xFF8
 16788                           tblptrh	equ	0xFF7
 16789                           tblptrl	equ	0xFF6
 16790                           tablat	equ	0xFF5
 16791                           prodh	equ	0xFF4
 16792                           prodl	equ	0xFF3
 16793                           postinc0	equ	0xFEE
 16794                           wreg	equ	0xFE8
 16795                           postdec1	equ	0xFE5
 16796                           plusw1	equ	0xFE3
 16797                           fsr1h	equ	0xFE2
 16798                           fsr1l	equ	0xFE1
 16799                           indf2	equ	0xFDF
 16800                           postinc2	equ	0xFDE
 16801                           postdec2	equ	0xFDD
 16802                           plusw2	equ	0xFDB
 16803                           fsr2h	equ	0xFDA
 16804                           fsr2l	equ	0xFD9
 16805                           status	equ	0xFD8
 16806                           
 16807 ;; *************** function __read_value_from_offset *****************
 16808 ;; Defined at:
 16809 ;;		line 115 in file "fat16.c"
 16810 ;; Parameters:    Size  Location     Type
 16811 ;;  offset          2    0[BANK0 ] unsigned int 
 16812 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 16813 ;;		 -> buffer(512), 
 16814 ;; Auto vars:     Size  Location     Type
 16815 ;;  value           2    7[BANK0 ] unsigned int 
 16816 ;; Return value:  Size  Location     Type
 16817 ;;                  2    0[BANK0 ] unsigned int 
 16818 ;; Registers used:
 16819 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16820 ;; Tracked objects:
 16821 ;;		On entry : 0/0
 16822 ;;		On exit  : 0/0
 16823 ;;		Unchanged: 0/0
 16824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16825 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16826 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16827 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16828 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16829 ;;Total ram usage:        9 bytes
 16830 ;; Hardware stack levels used:    1
 16831 ;; Hardware stack levels required when called:   10
 16832 ;; This function calls:
 16833 ;;		Nothing
 16834 ;; This function is called by:
 16835 ;;		__find_nth_cluster
 16836 ;;		__make_cluster_chain
 16837 ;; This function uses a non-reentrant model
 16838 ;;
 16839                           
 16840                           	psect	text62
 16841  015434                     __ptext62:
 16842                           	opt stack 0
 16843  015434                     __read_value_from_offset:
 16844                           	opt stack 16
 16845                           
 16846                           ;fat16.c: 117: uint16_t value;;fat16.c: 118: value = buffer[offset+1];
 16847                           
 16848                           ;incstack = 0
 16849  015434  0E01               	movlw	1
 16850  015436  0100               	movlb	0	; () banked
 16851  015438  2560               	addwf	__read_value_from_offset@offset& (0+255),w,b
 16852  01543A  6F64               	movwf	??__read_value_from_offset& (0+255),b
 16853  01543C  0E00               	movlw	0
 16854  01543E  2161               	addwfc	(__read_value_from_offset@offset+1)& (0+255),w,b
 16855  015440  6F65               	movwf	(??__read_value_from_offset+1)& (0+255),b
 16856  015442  5164               	movf	??__read_value_from_offset& (0+255),w,b
 16857  015444  2562               	addwf	__read_value_from_offset@buffer& (0+255),w,b
 16858  015446  6ED9               	movwf	fsr2l,c
 16859  015448  5165               	movf	(??__read_value_from_offset+1)& (0+255),w,b
 16860  01544A  2163               	addwfc	(__read_value_from_offset@buffer+1)& (0+255),w,b
 16861  01544C  6EDA               	movwf	fsr2h,c
 16862  01544E  50DF               	movf	indf2,w,c
 16863  015450  6F66               	movwf	(??__read_value_from_offset+2)& (0+255),b
 16864  015452  5166               	movf	(??__read_value_from_offset+2)& (0+255),w,b
 16865  015454  6F67               	movwf	__read_value_from_offset@value& (0+255),b
 16866  015456  6B68               	clrf	(__read_value_from_offset@value+1)& (0+255),b
 16867                           
 16868                           ; BSR set to: 0
 16869                           ;fat16.c: 119: value <<= 8;
 16870  015458  5167               	movf	__read_value_from_offset@value& (0+255),w,b
 16871  01545A  6F68               	movwf	(__read_value_from_offset@value+1)& (0+255),b
 16872  01545C  6B67               	clrf	__read_value_from_offset@value& (0+255),b
 16873                           
 16874                           ; BSR set to: 0
 16875                           ;fat16.c: 120: value |= buffer[offset];
 16876  01545E  5160               	movf	__read_value_from_offset@offset& (0+255),w,b
 16877  015460  2562               	addwf	__read_value_from_offset@buffer& (0+255),w,b
 16878  015462  6ED9               	movwf	fsr2l,c
 16879  015464  5161               	movf	(__read_value_from_offset@offset+1)& (0+255),w,b
 16880  015466  2163               	addwfc	(__read_value_from_offset@buffer+1)& (0+255),w,b
 16881  015468  6EDA               	movwf	fsr2h,c
 16882  01546A  50DF               	movf	indf2,w,c
 16883  01546C  6F64               	movwf	??__read_value_from_offset& (0+255),b
 16884  01546E  5164               	movf	??__read_value_from_offset& (0+255),w,b
 16885  015470  1367               	iorwf	__read_value_from_offset@value& (0+255),f,b
 16886                           
 16887                           ; BSR set to: 0
 16888                           ;fat16.c: 121: return value;
 16889  015472  C067  F060         	movff	__read_value_from_offset@value,?__read_value_from_offset
 16890  015476  C068  F061         	movff	__read_value_from_offset@value+1,?__read_value_from_offset+1
 16891  01547A  0012               	return	
 16892  01547C                     __end_of__read_value_from_offset:
 16893                           	opt stack 0
 16894                           tblptru	equ	0xFF8
 16895                           tblptrh	equ	0xFF7
 16896                           tblptrl	equ	0xFF6
 16897                           tablat	equ	0xFF5
 16898                           prodh	equ	0xFF4
 16899                           prodl	equ	0xFF3
 16900                           postinc0	equ	0xFEE
 16901                           wreg	equ	0xFE8
 16902                           postdec1	equ	0xFE5
 16903                           plusw1	equ	0xFE3
 16904                           fsr1h	equ	0xFE2
 16905                           fsr1l	equ	0xFE1
 16906                           indf2	equ	0xFDF
 16907                           postinc2	equ	0xFDE
 16908                           postdec2	equ	0xFDD
 16909                           plusw2	equ	0xFDB
 16910                           fsr2h	equ	0xFDA
 16911                           fsr2l	equ	0xFD9
 16912                           status	equ	0xFD8
 16913                           
 16914 ;; *************** function __read_fat *****************
 16915 ;; Defined at:
 16916 ;;		line 457 in file "fat16.c"
 16917 ;; Parameters:    Size  Location     Type
 16918 ;;  cluster         2   47[BANK0 ] unsigned int 
 16919 ;; Auto vars:     Size  Location     Type
 16920 ;;  value           2   53[BANK0 ] unsigned int 
 16921 ;;  offset          2   51[BANK0 ] unsigned int 
 16922 ;;  sector          2   49[BANK0 ] unsigned int 
 16923 ;; Return value:  Size  Location     Type
 16924 ;;                  2   47[BANK0 ] unsigned int 
 16925 ;; Registers used:
 16926 ;;		wreg, status,2, status,0, cstack
 16927 ;; Tracked objects:
 16928 ;;		On entry : 0/0
 16929 ;;		On exit  : 0/0
 16930 ;;		Unchanged: 0/0
 16931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16932 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16933 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16935 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16936 ;;Total ram usage:        8 bytes
 16937 ;; Hardware stack levels used:    1
 16938 ;; Hardware stack levels required when called:   15
 16939 ;; This function calls:
 16940 ;;		__fat_offset_from_cluster
 16941 ;;		__fat_sector_from_cluster
 16942 ;;		_flash_partial_read
 16943 ;; This function is called by:
 16944 ;;		__find_nth_cluster
 16945 ;;		_fat_read_from_file_fast
 16946 ;;		_fat_modify_file
 16947 ;; This function uses a non-reentrant model
 16948 ;;
 16949                           
 16950                           	psect	text63
 16951  014C7A                     __ptext63:
 16952                           	opt stack 0
 16953  014C7A                     __read_fat:
 16954                           	opt stack 12
 16955                           
 16956                           ;fat16.c: 459: uint16_t sector;;fat16.c: 460: uint16_t offset;;fat16.c: 461: uint16_t va
      +                          lue;;fat16.c: 464: sector = _fat_sector_from_cluster(cluster);
 16957                           
 16958                           ; BSR set to: 0
 16959                           ;incstack = 0
 16960  014C7A  C08F  F060         	movff	__read_fat@cluster,__fat_sector_from_cluster@cluster
 16961  014C7E  C090  F061         	movff	__read_fat@cluster+1,__fat_sector_from_cluster@cluster+1
 16962  014C82  ECF3  F0AE         	call	__fat_sector_from_cluster	;wreg free
 16963  014C86  C060  F091         	movff	?__fat_sector_from_cluster,__read_fat@sector
 16964  014C8A  C061  F092         	movff	?__fat_sector_from_cluster+1,__read_fat@sector+1
 16965                           
 16966                           ;fat16.c: 465: offset = _fat_offset_from_cluster(cluster);
 16967  014C8E  C08F  F060         	movff	__read_fat@cluster,__fat_offset_from_cluster@cluster
 16968  014C92  C090  F061         	movff	__read_fat@cluster+1,__fat_offset_from_cluster@cluster+1
 16969  014C96  EC00  F0AF         	call	__fat_offset_from_cluster	;wreg free
 16970  014C9A  C060  F093         	movff	?__fat_offset_from_cluster,__read_fat@offset
 16971  014C9E  C061  F094         	movff	?__fat_offset_from_cluster+1,__read_fat@offset+1
 16972                           
 16973                           ;fat16.c: 468: flash_partial_read(sector, offset, 2, &value);
 16974  014CA2  C091  F087         	movff	__read_fat@sector,flash_partial_read@page
 16975  014CA6  C092  F088         	movff	__read_fat@sector+1,flash_partial_read@page+1
 16976  014CAA  C093  F089         	movff	__read_fat@offset,flash_partial_read@start
 16977  014CAE  C094  F08A         	movff	__read_fat@offset+1,flash_partial_read@start+1
 16978  014CB2  0E00               	movlw	0
 16979  014CB4  0100               	movlb	0	; () banked
 16980  014CB6  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 16981  014CB8  0E02               	movlw	2
 16982  014CBA  6F8B               	movwf	flash_partial_read@length& (0+255),b
 16983  014CBC  0E95               	movlw	low __read_fat@value
 16984  014CBE  6F8D               	movwf	flash_partial_read@data& (0+255),b
 16985  014CC0  0E00               	movlw	high __read_fat@value
 16986  014CC2  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 16987  014CC4  EC26  F0AE         	call	_flash_partial_read	;wreg free
 16988                           
 16989                           ;fat16.c: 471: return value;
 16990  014CC8  C095  F08F         	movff	__read_fat@value,?__read_fat
 16991  014CCC  C096  F090         	movff	__read_fat@value+1,?__read_fat+1
 16992  014CD0  0012               	return	
 16993  014CD2                     __end_of__read_fat:
 16994                           	opt stack 0
 16995                           tblptru	equ	0xFF8
 16996                           tblptrh	equ	0xFF7
 16997                           tblptrl	equ	0xFF6
 16998                           tablat	equ	0xFF5
 16999                           prodh	equ	0xFF4
 17000                           prodl	equ	0xFF3
 17001                           postinc0	equ	0xFEE
 17002                           wreg	equ	0xFE8
 17003                           postdec1	equ	0xFE5
 17004                           plusw1	equ	0xFE3
 17005                           fsr1h	equ	0xFE2
 17006                           fsr1l	equ	0xFE1
 17007                           indf2	equ	0xFDF
 17008                           postinc2	equ	0xFDE
 17009                           postdec2	equ	0xFDD
 17010                           plusw2	equ	0xFDB
 17011                           fsr2h	equ	0xFDA
 17012                           fsr2l	equ	0xFD9
 17013                           status	equ	0xFD8
 17014                           
 17015 ;; *************** function __fat_sector_from_cluster *****************
 17016 ;; Defined at:
 17017 ;;		line 76 in file "fat16.c"
 17018 ;; Parameters:    Size  Location     Type
 17019 ;;  cluster         2    0[BANK0 ] unsigned int 
 17020 ;; Auto vars:     Size  Location     Type
 17021 ;;		None
 17022 ;; Return value:  Size  Location     Type
 17023 ;;                  2    0[BANK0 ] unsigned int 
 17024 ;; Registers used:
 17025 ;;		wreg, status,2, status,0
 17026 ;; Tracked objects:
 17027 ;;		On entry : 0/0
 17028 ;;		On exit  : 0/0
 17029 ;;		Unchanged: 0/0
 17030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17031 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17034 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17035 ;;Total ram usage:        2 bytes
 17036 ;; Hardware stack levels used:    1
 17037 ;; Hardware stack levels required when called:   10
 17038 ;; This function calls:
 17039 ;;		Nothing
 17040 ;; This function is called by:
 17041 ;;		__find_nth_cluster
 17042 ;;		__make_cluster_chain
 17043 ;;		__read_fat
 17044 ;; This function uses a non-reentrant model
 17045 ;;
 17046                           
 17047                           	psect	text64
 17048  015DE6                     __ptext64:
 17049                           	opt stack 0
 17050  015DE6                     __fat_sector_from_cluster:
 17051                           	opt stack 16
 17052                           
 17053                           ;fat16.c: 78: cluster >>= 8;
 17054                           
 17055                           ;incstack = 0
 17056  015DE6  0100               	movlb	0	; () banked
 17057  015DE8  5161               	movf	(__fat_sector_from_cluster@cluster+1)& (0+255),w,b
 17058  015DEA  6F60               	movwf	__fat_sector_from_cluster@cluster& (0+255),b
 17059  015DEC  6B61               	clrf	(__fat_sector_from_cluster@cluster+1)& (0+255),b
 17060                           
 17061                           ; BSR set to: 0
 17062                           ;fat16.c: 79: cluster += 2;
 17063  015DEE  0E02               	movlw	2
 17064  015DF0  2760               	addwf	__fat_sector_from_cluster@cluster& (0+255),f,b
 17065  015DF2  0E00               	movlw	0
 17066  015DF4  2361               	addwfc	(__fat_sector_from_cluster@cluster+1)& (0+255),f,b
 17067                           
 17068                           ; BSR set to: 0
 17069                           ;fat16.c: 80: return cluster;
 17070  015DF6  C060  F060         	movff	__fat_sector_from_cluster@cluster,?__fat_sector_from_cluster
 17071  015DFA  C061  F061         	movff	__fat_sector_from_cluster@cluster+1,?__fat_sector_from_cluster+1
 17072  015DFE  0012               	return	
 17073  015E00                     __end_of__fat_sector_from_cluster:
 17074                           	opt stack 0
 17075                           tblptru	equ	0xFF8
 17076                           tblptrh	equ	0xFF7
 17077                           tblptrl	equ	0xFF6
 17078                           tablat	equ	0xFF5
 17079                           prodh	equ	0xFF4
 17080                           prodl	equ	0xFF3
 17081                           postinc0	equ	0xFEE
 17082                           wreg	equ	0xFE8
 17083                           postdec1	equ	0xFE5
 17084                           plusw1	equ	0xFE3
 17085                           fsr1h	equ	0xFE2
 17086                           fsr1l	equ	0xFE1
 17087                           indf2	equ	0xFDF
 17088                           postinc2	equ	0xFDE
 17089                           postdec2	equ	0xFDD
 17090                           plusw2	equ	0xFDB
 17091                           fsr2h	equ	0xFDA
 17092                           fsr2l	equ	0xFD9
 17093                           status	equ	0xFD8
 17094                           
 17095 ;; *************** function __fat_offset_from_cluster *****************
 17096 ;; Defined at:
 17097 ;;		line 83 in file "fat16.c"
 17098 ;; Parameters:    Size  Location     Type
 17099 ;;  cluster         2    0[BANK0 ] unsigned int 
 17100 ;; Auto vars:     Size  Location     Type
 17101 ;;		None
 17102 ;; Return value:  Size  Location     Type
 17103 ;;                  2    0[BANK0 ] unsigned int 
 17104 ;; Registers used:
 17105 ;;		wreg, status,2, status,0
 17106 ;; Tracked objects:
 17107 ;;		On entry : 0/0
 17108 ;;		On exit  : 0/0
 17109 ;;		Unchanged: 0/0
 17110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17111 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17114 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17115 ;;Total ram usage:        2 bytes
 17116 ;; Hardware stack levels used:    1
 17117 ;; Hardware stack levels required when called:   10
 17118 ;; This function calls:
 17119 ;;		Nothing
 17120 ;; This function is called by:
 17121 ;;		__find_nth_cluster
 17122 ;;		__make_cluster_chain
 17123 ;;		__read_fat
 17124 ;; This function uses a non-reentrant model
 17125 ;;
 17126                           
 17127                           	psect	text65
 17128  015E00                     __ptext65:
 17129                           	opt stack 0
 17130  015E00                     __fat_offset_from_cluster:
 17131                           	opt stack 16
 17132                           
 17133                           ;fat16.c: 85: cluster &= 0xFF;
 17134                           
 17135                           ; BSR set to: 0
 17136                           ;incstack = 0
 17137  015E00  0EFF               	movlw	255
 17138  015E02  0100               	movlb	0	; () banked
 17139  015E04  1760               	andwf	__fat_offset_from_cluster@cluster& (0+255),f,b
 17140  015E06  0E00               	movlw	0
 17141  015E08  1761               	andwf	(__fat_offset_from_cluster@cluster+1)& (0+255),f,b
 17142                           
 17143                           ; BSR set to: 0
 17144                           ;fat16.c: 86: cluster <<= 1;
 17145  015E0A  90D8               	bcf	status,0,c
 17146  015E0C  3760               	rlcf	__fat_offset_from_cluster@cluster& (0+255),f,b
 17147  015E0E  3761               	rlcf	(__fat_offset_from_cluster@cluster+1)& (0+255),f,b
 17148                           
 17149                           ; BSR set to: 0
 17150                           ;fat16.c: 87: return cluster;
 17151  015E10  C060  F060         	movff	__fat_offset_from_cluster@cluster,?__fat_offset_from_cluster
 17152  015E14  C061  F061         	movff	__fat_offset_from_cluster@cluster+1,?__fat_offset_from_cluster+1
 17153  015E18  0012               	return	
 17154  015E1A                     __end_of__fat_offset_from_cluster:
 17155                           	opt stack 0
 17156                           tblptru	equ	0xFF8
 17157                           tblptrh	equ	0xFF7
 17158                           tblptrl	equ	0xFF6
 17159                           tablat	equ	0xFF5
 17160                           prodh	equ	0xFF4
 17161                           prodl	equ	0xFF3
 17162                           postinc0	equ	0xFEE
 17163                           wreg	equ	0xFE8
 17164                           postdec1	equ	0xFE5
 17165                           plusw1	equ	0xFE3
 17166                           fsr1h	equ	0xFE2
 17167                           fsr1l	equ	0xFE1
 17168                           indf2	equ	0xFDF
 17169                           postinc2	equ	0xFDE
 17170                           postdec2	equ	0xFDD
 17171                           plusw2	equ	0xFDB
 17172                           fsr2h	equ	0xFDA
 17173                           fsr2l	equ	0xFD9
 17174                           status	equ	0xFD8
 17175                           
 17176 ;; *************** function __data_sector_from_cluster *****************
 17177 ;; Defined at:
 17178 ;;		line 71 in file "fat16.c"
 17179 ;; Parameters:    Size  Location     Type
 17180 ;;  fat_cluster     2    0[BANK0 ] unsigned int 
 17181 ;; Auto vars:     Size  Location     Type
 17182 ;;		None
 17183 ;; Return value:  Size  Location     Type
 17184 ;;                  2    0[BANK0 ] unsigned int 
 17185 ;; Registers used:
 17186 ;;		wreg, status,2, status,0
 17187 ;; Tracked objects:
 17188 ;;		On entry : 0/0
 17189 ;;		On exit  : 0/0
 17190 ;;		Unchanged: 0/0
 17191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17192 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17195 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17196 ;;Total ram usage:        2 bytes
 17197 ;; Hardware stack levels used:    1
 17198 ;; Hardware stack levels required when called:   10
 17199 ;; This function calls:
 17200 ;;		Nothing
 17201 ;; This function is called by:
 17202 ;;		_fat_read_from_file_fast
 17203 ;;		_fat_modify_file
 17204 ;;		_fat_copy_sector_to_buffer
 17205 ;; This function uses a non-reentrant model
 17206 ;;
 17207                           
 17208                           	psect	text66
 17209  015EB2                     __ptext66:
 17210                           	opt stack 0
 17211  015EB2                     __data_sector_from_cluster:
 17212                           	opt stack 17
 17213                           
 17214                           ;fat16.c: 73: return fat_cluster + 38 - 2;
 17215                           
 17216                           ; BSR set to: 0
 17217                           ;incstack = 0
 17218  015EB2  0E24               	movlw	36
 17219  015EB4  0100               	movlb	0	; () banked
 17220  015EB6  2560               	addwf	__data_sector_from_cluster@fat_cluster& (0+255),w,b
 17221  015EB8  6F60               	movwf	?__data_sector_from_cluster& (0+255),b
 17222  015EBA  0E00               	movlw	0
 17223  015EBC  2161               	addwfc	(__data_sector_from_cluster@fat_cluster+1)& (0+255),w,b
 17224  015EBE  6F61               	movwf	(?__data_sector_from_cluster+1)& (0+255),b
 17225  015EC0  0012               	return	
 17226  015EC2                     __end_of__data_sector_from_cluster:
 17227                           	opt stack 0
 17228                           tblptru	equ	0xFF8
 17229                           tblptrh	equ	0xFF7
 17230                           tblptrl	equ	0xFF6
 17231                           tablat	equ	0xFF5
 17232                           prodh	equ	0xFF4
 17233                           prodl	equ	0xFF3
 17234                           postinc0	equ	0xFEE
 17235                           wreg	equ	0xFE8
 17236                           postdec1	equ	0xFE5
 17237                           plusw1	equ	0xFE3
 17238                           fsr1h	equ	0xFE2
 17239                           fsr1l	equ	0xFE1
 17240                           indf2	equ	0xFDF
 17241                           postinc2	equ	0xFDE
 17242                           postdec2	equ	0xFDD
 17243                           plusw2	equ	0xFDB
 17244                           fsr2h	equ	0xFDA
 17245                           fsr2l	equ	0xFD9
 17246                           status	equ	0xFD8
 17247                           
 17248 ;; *************** function _fat_get_file_information *****************
 17249 ;; Defined at:
 17250 ;;		line 1421 in file "fat16.c"
 17251 ;; Parameters:    Size  Location     Type
 17252 ;;  file_number     1    wreg     unsigned char 
 17253 ;;  data            2   47[BANK0 ] PTR struct .
 17254 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 17255 ;; Auto vars:     Size  Location     Type
 17256 ;;  file_number     1   54[BANK0 ] unsigned char 
 17257 ;;  offset          2   52[BANK0 ] unsigned int 
 17258 ;;  root_sector     2   50[BANK0 ] unsigned int 
 17259 ;; Return value:  Size  Location     Type
 17260 ;;                  1    wreg      unsigned char 
 17261 ;; Registers used:
 17262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17263 ;; Tracked objects:
 17264 ;;		On entry : 0/0
 17265 ;;		On exit  : 0/0
 17266 ;;		Unchanged: 0/0
 17267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17268 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17269 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17270 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17271 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17272 ;;Total ram usage:        8 bytes
 17273 ;; Hardware stack levels used:    1
 17274 ;; Hardware stack levels required when called:   15
 17275 ;; This function calls:
 17276 ;;		__offset_from_file_number
 17277 ;;		__sector_from_file_number
 17278 ;;		_flash_partial_read
 17279 ;; This function is called by:
 17280 ;;		_fat_read_from_file
 17281 ;;		_fat_resize_file
 17282 ;;		_fat_modify_file
 17283 ;;		_fat_rename_file
 17284 ;; This function uses a non-reentrant model
 17285 ;;
 17286                           
 17287                           	psect	text67
 17288  01420C                     __ptext67:
 17289                           	opt stack 0
 17290  01420C                     _fat_get_file_information:
 17291                           	opt stack 12
 17292                           
 17293                           ; BSR set to: 0
 17294                           ;incstack = 0
 17295                           ;fat_get_file_information@file_number stored from wreg
 17296  01420C  0100               	movlb	0	; () banked
 17297  01420E  6F96               	movwf	fat_get_file_information@file_number& (0+255),b
 17298                           
 17299                           ;fat16.c: 1423: uint16_t root_sector;;fat16.c: 1424: uint16_t offset;;fat16.c: 1426: if(
      +                          file_number>=64)
 17300  014210  0E3F               	movlw	63
 17301  014212  0100               	movlb	0	; () banked
 17302  014214  6596               	cpfsgt	fat_get_file_information@file_number& (0+255),b
 17303  014216  D002               	goto	l2102
 17304                           
 17305                           ; BSR set to: 0
 17306                           ;fat16.c: 1427: {;fat16.c: 1429: return 0x01;
 17307  014218  0E01               	movlw	1
 17308                           
 17309                           ; BSR set to: 0
 17310  01421A  0012               	return	
 17311  01421C                     l2102:
 17312                           
 17313                           ; BSR set to: 0
 17314                           ;fat16.c: 1430: };fat16.c: 1433: root_sector = _sector_from_file_number(file_number);
 17315                           
 17316                           ; BSR set to: 0
 17317  01421C  5196               	movf	fat_get_file_information@file_number& (0+255),w,b
 17318  01421E  ECAF  F0AC         	call	__sector_from_file_number
 17319  014222  C060  F092         	movff	?__sector_from_file_number,fat_get_file_information@root_sector
 17320  014226  C061  F093         	movff	?__sector_from_file_number+1,fat_get_file_information@root_sector+1
 17321                           
 17322                           ;fat16.c: 1434: offset = _offset_from_file_number(file_number);
 17323  01422A  0100               	movlb	0	; () banked
 17324  01422C  5196               	movf	fat_get_file_information@file_number& (0+255),w,b
 17325  01422E  ECC1  F0AD         	call	__offset_from_file_number
 17326  014232  C060  F094         	movff	?__offset_from_file_number,fat_get_file_information@offset
 17327  014236  C061  F095         	movff	?__offset_from_file_number+1,fat_get_file_information@offset+1
 17328                           
 17329                           ;fat16.c: 1437: flash_partial_read(root_sector, offset, 32, (uint8_t*) data);
 17330  01423A  C092  F087         	movff	fat_get_file_information@root_sector,flash_partial_read@page
 17331  01423E  C093  F088         	movff	fat_get_file_information@root_sector+1,flash_partial_read@page+1
 17332  014242  C094  F089         	movff	fat_get_file_information@offset,flash_partial_read@start
 17333  014246  C095  F08A         	movff	fat_get_file_information@offset+1,flash_partial_read@start+1
 17334  01424A  0E00               	movlw	0
 17335  01424C  0100               	movlb	0	; () banked
 17336  01424E  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 17337  014250  0E20               	movlw	32
 17338  014252  6F8B               	movwf	flash_partial_read@length& (0+255),b
 17339  014254  C08F  F08D         	movff	fat_get_file_information@data,flash_partial_read@data
 17340  014258  C090  F08E         	movff	fat_get_file_information@data+1,flash_partial_read@data+1
 17341  01425C  EC26  F0AE         	call	_flash_partial_read	;wreg free
 17342                           
 17343                           ;fat16.c: 1440: if((data->fileName[0]==0x00) || (data->fileName[0]==0xE5))
 17344  014260  C08F  FFD9         	movff	fat_get_file_information@data,fsr2l
 17345  014264  C090  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 17346  014268  50DF               	movf	indf2,w,c
 17347  01426A  B4D8               	btfsc	status,2,c
 17348  01426C  D008               	goto	u14170
 17349  01426E  C08F  FFD9         	movff	fat_get_file_information@data,fsr2l
 17350  014272  C090  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 17351  014276  0EE5               	movlw	229
 17352  014278  18DE               	xorwf	postinc2,w,c
 17353  01427A  A4D8               	btfss	status,2,c
 17354  01427C  D002               	goto	l2104
 17355  01427E                     u14170:
 17356                           
 17357                           ;fat16.c: 1441: {;fat16.c: 1443: return 0x02;
 17358  01427E  0E02               	movlw	2
 17359  014280  0012               	return	
 17360  014282                     l2104:
 17361                           
 17362                           ;fat16.c: 1444: };fat16.c: 1447: return 0x00;
 17363  014282  0E00               	movlw	0
 17364  014284  0012               	return	
 17365  014286                     __end_of_fat_get_file_information:
 17366                           	opt stack 0
 17367                           tblptru	equ	0xFF8
 17368                           tblptrh	equ	0xFF7
 17369                           tblptrl	equ	0xFF6
 17370                           tablat	equ	0xFF5
 17371                           prodh	equ	0xFF4
 17372                           prodl	equ	0xFF3
 17373                           postinc0	equ	0xFEE
 17374                           wreg	equ	0xFE8
 17375                           postdec1	equ	0xFE5
 17376                           plusw1	equ	0xFE3
 17377                           fsr1h	equ	0xFE2
 17378                           fsr1l	equ	0xFE1
 17379                           indf2	equ	0xFDF
 17380                           postinc2	equ	0xFDE
 17381                           postdec2	equ	0xFDD
 17382                           plusw2	equ	0xFDB
 17383                           fsr2h	equ	0xFDA
 17384                           fsr2l	equ	0xFD9
 17385                           status	equ	0xFD8
 17386                           
 17387 ;; *************** function _fat_get_file_size *****************
 17388 ;; Defined at:
 17389 ;;		line 563 in file "fat16.c"
 17390 ;; Parameters:    Size  Location     Type
 17391 ;;  file_number     1    wreg     unsigned char 
 17392 ;; Auto vars:     Size  Location     Type
 17393 ;;  file_number     1   65[BANK0 ] unsigned char 
 17394 ;;  file_size       4   61[BANK0 ] unsigned long 
 17395 ;;  offset          2   59[BANK0 ] unsigned int 
 17396 ;;  sector          2   57[BANK0 ] unsigned int 
 17397 ;; Return value:  Size  Location     Type
 17398 ;;                  4   53[BANK0 ] unsigned long 
 17399 ;; Registers used:
 17400 ;;		wreg, status,2, status,0, cstack
 17401 ;; Tracked objects:
 17402 ;;		On entry : 0/0
 17403 ;;		On exit  : 0/0
 17404 ;;		Unchanged: 0/0
 17405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17406 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17407 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17409 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17410 ;;Total ram usage:       13 bytes
 17411 ;; Hardware stack levels used:    1
 17412 ;; Hardware stack levels required when called:   16
 17413 ;; This function calls:
 17414 ;;		__offset_from_file_number
 17415 ;;		__root_is_available
 17416 ;;		__sector_from_file_number
 17417 ;;		_flash_partial_read
 17418 ;; This function is called by:
 17419 ;;		_configFile_read
 17420 ;;		_fat_append_to_file
 17421 ;;		_fat_copy_file
 17422 ;;		_fat_copy_sector_to_buffer
 17423 ;;		_fat_write_sector_from_buffer
 17424 ;; This function uses a non-reentrant model
 17425 ;;
 17426                           
 17427                           	psect	text68
 17428  014286                     __ptext68:
 17429                           	opt stack 0
 17430  014286                     _fat_get_file_size:
 17431                           	opt stack 12
 17432                           
 17433                           ;incstack = 0
 17434                           ;fat_get_file_size@file_number stored from wreg
 17435  014286  0100               	movlb	0	; () banked
 17436  014288  6FA1               	movwf	fat_get_file_size@file_number& (0+255),b
 17437                           
 17438                           ;fat16.c: 565: uint32_t file_size;;fat16.c: 566: uint16_t sector;;fat16.c: 567: uint16_t
      +                           offset;;fat16.c: 570: if(_root_is_available(file_number))
 17439  01428A  0100               	movlb	0	; () banked
 17440  01428C  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 17441  01428E  EC0D  F0A3         	call	__root_is_available
 17442  014292  0900               	iorlw	0
 17443  014294  B4D8               	btfsc	status,2,c
 17444  014296  D006               	goto	l1864
 17445                           
 17446                           ;fat16.c: 571: {;fat16.c: 573: return 0xFFFFFFFF;
 17447  014298  0100               	movlb	0	; () banked
 17448  01429A  6995               	setf	?_fat_get_file_size& (0+255),b
 17449  01429C  6996               	setf	(?_fat_get_file_size+1)& (0+255),b
 17450  01429E  6997               	setf	(?_fat_get_file_size+2)& (0+255),b
 17451  0142A0  6998               	setf	(?_fat_get_file_size+3)& (0+255),b
 17452  0142A2  0012               	return	
 17453  0142A4                     l1864:
 17454                           
 17455                           ;fat16.c: 574: };fat16.c: 577: sector = _sector_from_file_number(file_number);
 17456                           
 17457                           ; BSR set to: 0
 17458  0142A4  0100               	movlb	0	; () banked
 17459  0142A6  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 17460  0142A8  ECAF  F0AC         	call	__sector_from_file_number
 17461  0142AC  C060  F099         	movff	?__sector_from_file_number,fat_get_file_size@sector
 17462  0142B0  C061  F09A         	movff	?__sector_from_file_number+1,fat_get_file_size@sector+1
 17463                           
 17464                           ;fat16.c: 578: offset = _offset_from_file_number(file_number);
 17465  0142B4  0100               	movlb	0	; () banked
 17466  0142B6  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 17467  0142B8  ECC1  F0AD         	call	__offset_from_file_number
 17468  0142BC  C060  F09B         	movff	?__offset_from_file_number,fat_get_file_size@offset
 17469  0142C0  C061  F09C         	movff	?__offset_from_file_number+1,fat_get_file_size@offset+1
 17470                           
 17471                           ;fat16.c: 581: flash_partial_read(sector, offset+28, 4, &file_size);
 17472  0142C4  C099  F087         	movff	fat_get_file_size@sector,flash_partial_read@page
 17473  0142C8  C09A  F088         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 17474  0142CC  0E1C               	movlw	28
 17475  0142CE  0100               	movlb	0	; () banked
 17476  0142D0  259B               	addwf	fat_get_file_size@offset& (0+255),w,b
 17477  0142D2  6F89               	movwf	flash_partial_read@start& (0+255),b
 17478  0142D4  0E00               	movlw	0
 17479  0142D6  219C               	addwfc	(fat_get_file_size@offset+1)& (0+255),w,b
 17480  0142D8  6F8A               	movwf	(flash_partial_read@start+1)& (0+255),b
 17481  0142DA  0E00               	movlw	0
 17482  0142DC  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 17483  0142DE  0E04               	movlw	4
 17484  0142E0  6F8B               	movwf	flash_partial_read@length& (0+255),b
 17485  0142E2  0E9D               	movlw	low fat_get_file_size@file_size
 17486  0142E4  6F8D               	movwf	flash_partial_read@data& (0+255),b
 17487  0142E6  0E00               	movlw	high fat_get_file_size@file_size
 17488  0142E8  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 17489  0142EA  EC26  F0AE         	call	_flash_partial_read	;wreg free
 17490                           
 17491                           ;fat16.c: 584: return file_size;
 17492  0142EE  C09D  F095         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 17493  0142F2  C09E  F096         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 17494  0142F6  C09F  F097         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 17495  0142FA  C0A0  F098         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 17496  0142FE  0012               	return	
 17497  014300                     __end_of_fat_get_file_size:
 17498                           	opt stack 0
 17499                           tblptru	equ	0xFF8
 17500                           tblptrh	equ	0xFF7
 17501                           tblptrl	equ	0xFF6
 17502                           tablat	equ	0xFF5
 17503                           prodh	equ	0xFF4
 17504                           prodl	equ	0xFF3
 17505                           postinc0	equ	0xFEE
 17506                           wreg	equ	0xFE8
 17507                           postdec1	equ	0xFE5
 17508                           plusw1	equ	0xFE3
 17509                           fsr1h	equ	0xFE2
 17510                           fsr1l	equ	0xFE1
 17511                           indf2	equ	0xFDF
 17512                           postinc2	equ	0xFDE
 17513                           postdec2	equ	0xFDD
 17514                           plusw2	equ	0xFDB
 17515                           fsr2h	equ	0xFDA
 17516                           fsr2l	equ	0xFD9
 17517                           status	equ	0xFD8
 17518                           
 17519 ;; *************** function __root_is_available *****************
 17520 ;; Defined at:
 17521 ;;		line 409 in file "fat16.c"
 17522 ;; Parameters:    Size  Location     Type
 17523 ;;  file_number     1    wreg     unsigned char 
 17524 ;; Auto vars:     Size  Location     Type
 17525 ;;  file_number     1   51[BANK0 ] unsigned char 
 17526 ;;  offset          2   49[BANK0 ] unsigned int 
 17527 ;;  root_sector     2   47[BANK0 ] unsigned int 
 17528 ;;  first_byte      1   52[BANK0 ] unsigned char 
 17529 ;; Return value:  Size  Location     Type
 17530 ;;                  1    wreg      unsigned char 
 17531 ;; Registers used:
 17532 ;;		wreg, status,2, status,0, cstack
 17533 ;; Tracked objects:
 17534 ;;		On entry : 0/0
 17535 ;;		On exit  : 0/0
 17536 ;;		Unchanged: 0/0
 17537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17539 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17541 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17542 ;;Total ram usage:        6 bytes
 17543 ;; Hardware stack levels used:    1
 17544 ;; Hardware stack levels required when called:   15
 17545 ;; This function calls:
 17546 ;;		__offset_from_file_number
 17547 ;;		__sector_from_file_number
 17548 ;;		_flash_partial_read
 17549 ;; This function is called by:
 17550 ;;		__get_available_root_entry
 17551 ;;		_fat_get_file_size
 17552 ;;		_fat_resize_file
 17553 ;;		_fat_delete_file
 17554 ;;		_fat_append_to_file
 17555 ;;		_fat_copy_file
 17556 ;;		_fat_copy_sector_to_buffer
 17557 ;;		_fat_write_sector_from_buffer
 17558 ;; This function uses a non-reentrant model
 17559 ;;
 17560                           
 17561                           	psect	text69
 17562  01461A                     __ptext69:
 17563                           	opt stack 0
 17564  01461A                     __root_is_available:
 17565                           	opt stack 12
 17566                           
 17567                           ;incstack = 0
 17568                           ;__root_is_available@file_number stored from wreg
 17569  01461A  0100               	movlb	0	; () banked
 17570  01461C  6F93               	movwf	__root_is_available@file_number& (0+255),b
 17571                           
 17572                           ;fat16.c: 411: uint16_t root_sector;;fat16.c: 412: uint16_t offset;;fat16.c: 413: uint8_
      +                          t first_byte;;fat16.c: 417: if(file_number>=64)
 17573  01461E  0E3F               	movlw	63
 17574  014620  0100               	movlb	0	; () banked
 17575  014622  6593               	cpfsgt	__root_is_available@file_number& (0+255),b
 17576  014624  D002               	goto	l1825
 17577                           
 17578                           ; BSR set to: 0
 17579                           ;fat16.c: 418: {;fat16.c: 420: return 0;
 17580  014626  0E00               	movlw	0
 17581                           
 17582                           ; BSR set to: 0
 17583  014628  0012               	return	
 17584  01462A                     l1825:
 17585                           
 17586                           ; BSR set to: 0
 17587                           ;fat16.c: 421: };fat16.c: 424: root_sector = _sector_from_file_number(file_number);
 17588                           
 17589                           ; BSR set to: 0
 17590  01462A  5193               	movf	__root_is_available@file_number& (0+255),w,b
 17591  01462C  ECAF  F0AC         	call	__sector_from_file_number
 17592  014630  C060  F08F         	movff	?__sector_from_file_number,__root_is_available@root_sector
 17593  014634  C061  F090         	movff	?__sector_from_file_number+1,__root_is_available@root_sector+1
 17594                           
 17595                           ;fat16.c: 425: offset = _offset_from_file_number(file_number);
 17596  014638  0100               	movlb	0	; () banked
 17597  01463A  5193               	movf	__root_is_available@file_number& (0+255),w,b
 17598  01463C  ECC1  F0AD         	call	__offset_from_file_number
 17599  014640  C060  F091         	movff	?__offset_from_file_number,__root_is_available@offset
 17600  014644  C061  F092         	movff	?__offset_from_file_number+1,__root_is_available@offset+1
 17601                           
 17602                           ;fat16.c: 428: flash_partial_read(root_sector, offset, 1, &first_byte);
 17603  014648  C08F  F087         	movff	__root_is_available@root_sector,flash_partial_read@page
 17604  01464C  C090  F088         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 17605  014650  C091  F089         	movff	__root_is_available@offset,flash_partial_read@start
 17606  014654  C092  F08A         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 17607  014658  0E00               	movlw	0
 17608  01465A  0100               	movlb	0	; () banked
 17609  01465C  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 17610  01465E  0E01               	movlw	1
 17611  014660  6F8B               	movwf	flash_partial_read@length& (0+255),b
 17612  014662  0E94               	movlw	low __root_is_available@first_byte
 17613  014664  6F8D               	movwf	flash_partial_read@data& (0+255),b
 17614  014666  0E00               	movlw	high __root_is_available@first_byte
 17615  014668  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 17616  01466A  EC26  F0AE         	call	_flash_partial_read	;wreg free
 17617                           
 17618                           ;fat16.c: 431: if((first_byte==0x00) || (first_byte==0xE5))
 17619  01466E  0100               	movlb	0	; () banked
 17620  014670  5194               	movf	__root_is_available@first_byte& (0+255),w,b
 17621  014672  B4D8               	btfsc	status,2,c
 17622  014674  D004               	goto	u12700
 17623                           
 17624                           ; BSR set to: 0
 17625  014676  0EE5               	movlw	229
 17626  014678  1994               	xorwf	__root_is_available@first_byte& (0+255),w,b
 17627  01467A  A4D8               	btfss	status,2,c
 17628  01467C  D002               	goto	l1827
 17629  01467E                     u12700:
 17630                           
 17631                           ; BSR set to: 0
 17632                           ;fat16.c: 432: {;fat16.c: 434: return 1;
 17633                           
 17634                           ; BSR set to: 0
 17635  01467E  0E01               	movlw	1
 17636                           
 17637                           ; BSR set to: 0
 17638                           ;fat16.c: 435: }
 17639                           
 17640                           ; BSR set to: 0
 17641  014680  0012               	return	
 17642  014682                     l1827:
 17643                           
 17644                           ; BSR set to: 0
 17645                           ;fat16.c: 436: else;fat16.c: 437: {;fat16.c: 439: return 0;
 17646                           
 17647                           ; BSR set to: 0
 17648  014682  0E00               	movlw	0
 17649                           
 17650                           ; BSR set to: 0
 17651  014684  0012               	return	
 17652  014686                     __end_of__root_is_available:
 17653                           	opt stack 0
 17654                           tblptru	equ	0xFF8
 17655                           tblptrh	equ	0xFF7
 17656                           tblptrl	equ	0xFF6
 17657                           tablat	equ	0xFF5
 17658                           prodh	equ	0xFF4
 17659                           prodl	equ	0xFF3
 17660                           postinc0	equ	0xFEE
 17661                           wreg	equ	0xFE8
 17662                           postdec1	equ	0xFE5
 17663                           plusw1	equ	0xFE3
 17664                           fsr1h	equ	0xFE2
 17665                           fsr1l	equ	0xFE1
 17666                           indf2	equ	0xFDF
 17667                           postinc2	equ	0xFDE
 17668                           postdec2	equ	0xFDD
 17669                           plusw2	equ	0xFDB
 17670                           fsr2h	equ	0xFDA
 17671                           fsr2l	equ	0xFD9
 17672                           status	equ	0xFD8
 17673                           
 17674 ;; *************** function _flash_partial_read *****************
 17675 ;; Defined at:
 17676 ;;		line 452 in file "flash.c"
 17677 ;; Parameters:    Size  Location     Type
 17678 ;;  page            2   39[BANK0 ] unsigned int 
 17679 ;;  start           2   41[BANK0 ] unsigned int 
 17680 ;;  length          2   43[BANK0 ] unsigned int 
 17681 ;;  data            2   45[BANK0 ] PTR unsigned char 
 17682 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 17683 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 17684 ;;		 -> _root_is_available@first_byte(1), 
 17685 ;; Auto vars:     Size  Location     Type
 17686 ;;		None
 17687 ;; Return value:  Size  Location     Type
 17688 ;;                  1    wreg      void 
 17689 ;; Registers used:
 17690 ;;		wreg, status,2, status,0, cstack
 17691 ;; Tracked objects:
 17692 ;;		On entry : 0/0
 17693 ;;		On exit  : 0/0
 17694 ;;		Unchanged: 0/0
 17695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17696 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17699 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17700 ;;Total ram usage:        8 bytes
 17701 ;; Hardware stack levels used:    1
 17702 ;; Hardware stack levels required when called:   14
 17703 ;; This function calls:
 17704 ;;		__flash_partial_read
 17705 ;; This function is called by:
 17706 ;;		__root_is_available
 17707 ;;		__read_fat
 17708 ;;		_fat_get_file_size
 17709 ;;		_fat_read_from_file_fast
 17710 ;;		_fat_get_file_information
 17711 ;;		__get_first_cluster
 17712 ;; This function uses a non-reentrant model
 17713 ;;
 17714                           
 17715                           	psect	text70
 17716  015C4C                     __ptext70:
 17717                           	opt stack 0
 17718  015C4C                     _flash_partial_read:
 17719                           	opt stack 12
 17720                           
 17721                           ;flash.c: 455: _flash_partial_read(page, start, length, data);
 17722                           
 17723                           ; BSR set to: 0
 17724                           ;incstack = 0
 17725  015C4C  C087  F073         	movff	flash_partial_read@page,__flash_partial_read@page
 17726  015C50  C088  F074         	movff	flash_partial_read@page+1,__flash_partial_read@page+1
 17727  015C54  C089  F075         	movff	flash_partial_read@start,__flash_partial_read@start
 17728  015C58  C08A  F076         	movff	flash_partial_read@start+1,__flash_partial_read@start+1
 17729  015C5C  C08B  F077         	movff	flash_partial_read@length,__flash_partial_read@length
 17730  015C60  C08C  F078         	movff	flash_partial_read@length+1,__flash_partial_read@length+1
 17731  015C64  C08D  F079         	movff	flash_partial_read@data,__flash_partial_read@data
 17732  015C68  C08E  F07A         	movff	flash_partial_read@data+1,__flash_partial_read@data+1
 17733  015C6C  EC80  F0A1         	call	__flash_partial_read	;wreg free
 17734  015C70  0012               	return		;funcret
 17735  015C72                     __end_of_flash_partial_read:
 17736                           	opt stack 0
 17737                           tblptru	equ	0xFF8
 17738                           tblptrh	equ	0xFF7
 17739                           tblptrl	equ	0xFF6
 17740                           tablat	equ	0xFF5
 17741                           prodh	equ	0xFF4
 17742                           prodl	equ	0xFF3
 17743                           postinc0	equ	0xFEE
 17744                           wreg	equ	0xFE8
 17745                           postdec1	equ	0xFE5
 17746                           plusw1	equ	0xFE3
 17747                           fsr1h	equ	0xFE2
 17748                           fsr1l	equ	0xFE1
 17749                           indf2	equ	0xFDF
 17750                           postinc2	equ	0xFDE
 17751                           postdec2	equ	0xFDD
 17752                           plusw2	equ	0xFDB
 17753                           fsr2h	equ	0xFDA
 17754                           fsr2l	equ	0xFD9
 17755                           status	equ	0xFD8
 17756                           
 17757 ;; *************** function __sector_from_file_number *****************
 17758 ;; Defined at:
 17759 ;;		line 53 in file "fat16.c"
 17760 ;; Parameters:    Size  Location     Type
 17761 ;;  file_number     1    wreg     unsigned char 
 17762 ;; Auto vars:     Size  Location     Type
 17763 ;;  file_number     1    2[BANK0 ] unsigned char 
 17764 ;;  sector          2    3[BANK0 ] unsigned int 
 17765 ;; Return value:  Size  Location     Type
 17766 ;;                  2    0[BANK0 ] unsigned int 
 17767 ;; Registers used:
 17768 ;;		wreg, status,2, status,0
 17769 ;; Tracked objects:
 17770 ;;		On entry : 0/0
 17771 ;;		On exit  : 0/0
 17772 ;;		Unchanged: 0/0
 17773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17774 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17775 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17777 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17778 ;;Total ram usage:        5 bytes
 17779 ;; Hardware stack levels used:    1
 17780 ;; Hardware stack levels required when called:   10
 17781 ;; This function calls:
 17782 ;;		Nothing
 17783 ;; This function is called by:
 17784 ;;		__root_is_available
 17785 ;;		__write_root
 17786 ;;		_fat_get_file_size
 17787 ;;		_fat_get_file_information
 17788 ;;		__delete_root
 17789 ;;		__get_first_cluster
 17790 ;; This function uses a non-reentrant model
 17791 ;;
 17792                           
 17793                           	psect	text71
 17794  01595E                     __ptext71:
 17795                           	opt stack 0
 17796  01595E                     __sector_from_file_number:
 17797                           	opt stack 16
 17798                           
 17799                           ;incstack = 0
 17800                           ;__sector_from_file_number@file_number stored from wreg
 17801  01595E  0100               	movlb	0	; () banked
 17802  015960  6F62               	movwf	__sector_from_file_number@file_number& (0+255),b
 17803                           
 17804                           ;fat16.c: 55: uint16_t sector;;fat16.c: 56: sector = (uint16_t) file_number;
 17805  015962  C062  F063         	movff	__sector_from_file_number@file_number,__sector_from_file_number@sector
 17806  015966  0100               	movlb	0	; () banked
 17807  015968  6B64               	clrf	(__sector_from_file_number@sector+1)& (0+255),b
 17808                           
 17809                           ; BSR set to: 0
 17810                           ;fat16.c: 57: sector >>= 4;
 17811  01596A  3B63               	swapf	__sector_from_file_number@sector& (0+255),f,b
 17812  01596C  3B64               	swapf	(__sector_from_file_number@sector+1)& (0+255),f,b
 17813  01596E  0E0F               	movlw	15
 17814  015970  1763               	andwf	__sector_from_file_number@sector& (0+255),f,b
 17815  015972  5164               	movf	(__sector_from_file_number@sector+1)& (0+255),w,b
 17816  015974  0BF0               	andlw	240
 17817  015976  1363               	iorwf	__sector_from_file_number@sector& (0+255),f,b
 17818  015978  0E0F               	movlw	15
 17819  01597A  1764               	andwf	(__sector_from_file_number@sector+1)& (0+255),f,b
 17820                           
 17821                           ; BSR set to: 0
 17822                           ;fat16.c: 58: sector += 34;
 17823  01597C  0E22               	movlw	34
 17824  01597E  2763               	addwf	__sector_from_file_number@sector& (0+255),f,b
 17825  015980  0E00               	movlw	0
 17826  015982  2364               	addwfc	(__sector_from_file_number@sector+1)& (0+255),f,b
 17827                           
 17828                           ; BSR set to: 0
 17829                           ;fat16.c: 59: return sector;
 17830  015984  C063  F060         	movff	__sector_from_file_number@sector,?__sector_from_file_number
 17831  015988  C064  F061         	movff	__sector_from_file_number@sector+1,?__sector_from_file_number+1
 17832  01598C  0012               	return	
 17833  01598E                     __end_of__sector_from_file_number:
 17834                           	opt stack 0
 17835                           tblptru	equ	0xFF8
 17836                           tblptrh	equ	0xFF7
 17837                           tblptrl	equ	0xFF6
 17838                           tablat	equ	0xFF5
 17839                           prodh	equ	0xFF4
 17840                           prodl	equ	0xFF3
 17841                           postinc0	equ	0xFEE
 17842                           wreg	equ	0xFE8
 17843                           postdec1	equ	0xFE5
 17844                           plusw1	equ	0xFE3
 17845                           fsr1h	equ	0xFE2
 17846                           fsr1l	equ	0xFE1
 17847                           indf2	equ	0xFDF
 17848                           postinc2	equ	0xFDE
 17849                           postdec2	equ	0xFDD
 17850                           plusw2	equ	0xFDB
 17851                           fsr2h	equ	0xFDA
 17852                           fsr2l	equ	0xFD9
 17853                           status	equ	0xFD8
 17854                           
 17855 ;; *************** function __offset_from_file_number *****************
 17856 ;; Defined at:
 17857 ;;		line 62 in file "fat16.c"
 17858 ;; Parameters:    Size  Location     Type
 17859 ;;  file_number     1    wreg     unsigned char 
 17860 ;; Auto vars:     Size  Location     Type
 17861 ;;  file_number     1    2[BANK0 ] unsigned char 
 17862 ;;  offset          2    3[BANK0 ] unsigned int 
 17863 ;; Return value:  Size  Location     Type
 17864 ;;                  2    0[BANK0 ] unsigned int 
 17865 ;; Registers used:
 17866 ;;		wreg, status,2, status,0
 17867 ;; Tracked objects:
 17868 ;;		On entry : 0/0
 17869 ;;		On exit  : 0/0
 17870 ;;		Unchanged: 0/0
 17871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17872 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17873 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17875 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17876 ;;Total ram usage:        5 bytes
 17877 ;; Hardware stack levels used:    1
 17878 ;; Hardware stack levels required when called:   10
 17879 ;; This function calls:
 17880 ;;		Nothing
 17881 ;; This function is called by:
 17882 ;;		__root_is_available
 17883 ;;		__write_root
 17884 ;;		_fat_get_file_size
 17885 ;;		_fat_get_file_information
 17886 ;;		__delete_root
 17887 ;;		__get_first_cluster
 17888 ;; This function uses a non-reentrant model
 17889 ;;
 17890                           
 17891                           	psect	text72
 17892  015B82                     __ptext72:
 17893                           	opt stack 0
 17894  015B82                     __offset_from_file_number:
 17895                           	opt stack 16
 17896                           
 17897                           ; BSR set to: 0
 17898                           ;incstack = 0
 17899                           ;__offset_from_file_number@file_number stored from wreg
 17900  015B82  0100               	movlb	0	; () banked
 17901  015B84  6F62               	movwf	__offset_from_file_number@file_number& (0+255),b
 17902                           
 17903                           ;fat16.c: 64: uint16_t offset;;fat16.c: 65: offset = file_number;
 17904  015B86  C062  F063         	movff	__offset_from_file_number@file_number,__offset_from_file_number@offset
 17905  015B8A  0100               	movlb	0	; () banked
 17906  015B8C  6B64               	clrf	(__offset_from_file_number@offset+1)& (0+255),b
 17907                           
 17908                           ; BSR set to: 0
 17909                           ;fat16.c: 66: offset &= 0b1111;
 17910  015B8E  0E0F               	movlw	15
 17911  015B90  1763               	andwf	__offset_from_file_number@offset& (0+255),f,b
 17912  015B92  0E00               	movlw	0
 17913  015B94  1764               	andwf	(__offset_from_file_number@offset+1)& (0+255),f,b
 17914                           
 17915                           ; BSR set to: 0
 17916                           ;fat16.c: 67: offset <<= 5;
 17917  015B96  0E05               	movlw	5
 17918  015B98                     u11585:
 17919  015B98  90D8               	bcf	status,0,c
 17920  015B9A  3763               	rlcf	__offset_from_file_number@offset& (0+255),f,b
 17921  015B9C  3764               	rlcf	(__offset_from_file_number@offset+1)& (0+255),f,b
 17922  015B9E  2EE8               	decfsz	wreg,f,c
 17923  015BA0  D7FB               	goto	u11585
 17924                           
 17925                           ; BSR set to: 0
 17926                           ;fat16.c: 68: return offset;
 17927  015BA2  C063  F060         	movff	__offset_from_file_number@offset,?__offset_from_file_number
 17928  015BA6  C064  F061         	movff	__offset_from_file_number@offset+1,?__offset_from_file_number+1
 17929  015BAA  0012               	return	
 17930  015BAC                     __end_of__offset_from_file_number:
 17931                           	opt stack 0
 17932                           tblptru	equ	0xFF8
 17933                           tblptrh	equ	0xFF7
 17934                           tblptrl	equ	0xFF6
 17935                           tablat	equ	0xFF5
 17936                           prodh	equ	0xFF4
 17937                           prodl	equ	0xFF3
 17938                           postinc0	equ	0xFEE
 17939                           wreg	equ	0xFE8
 17940                           postdec1	equ	0xFE5
 17941                           plusw1	equ	0xFE3
 17942                           fsr1h	equ	0xFE2
 17943                           fsr1l	equ	0xFE1
 17944                           indf2	equ	0xFDF
 17945                           postinc2	equ	0xFDE
 17946                           postdec2	equ	0xFDD
 17947                           plusw2	equ	0xFDB
 17948                           fsr2h	equ	0xFDA
 17949                           fsr2l	equ	0xFD9
 17950                           status	equ	0xFD8
 17951                           
 17952 ;; *************** function _fat_find_file *****************
 17953 ;; Defined at:
 17954 ;;		line 518 in file "fat16.c"
 17955 ;; Parameters:    Size  Location     Type
 17956 ;;  name            2   43[BANK0 ] PTR unsigned char 
 17957 ;;		 -> configFile_used_name(8), configFile_name(8), 
 17958 ;;  extension       2   45[BANK0 ] PTR unsigned char 
 17959 ;;		 -> configFile_used_extention(3), configFile_extention(3), 
 17960 ;; Auto vars:     Size  Location     Type
 17961 ;;  offset          2   52[BANK0 ] unsigned int 
 17962 ;;  sector          2   50[BANK0 ] unsigned int 
 17963 ;;  file_number     1   49[BANK0 ] unsigned char 
 17964 ;; Return value:  Size  Location     Type
 17965 ;;                  1    wreg      unsigned char 
 17966 ;; Registers used:
 17967 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17968 ;; Tracked objects:
 17969 ;;		On entry : 0/0
 17970 ;;		On exit  : 0/0
 17971 ;;		Unchanged: 0/0
 17972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17973 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17974 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17975 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17976 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17977 ;;Total ram usage:       11 bytes
 17978 ;; Hardware stack levels used:    1
 17979 ;; Hardware stack levels required when called:   15
 17980 ;; This function calls:
 17981 ;;		_flash_sector_read
 17982 ;;		_strncmp
 17983 ;; This function is called by:
 17984 ;;		_fat_create_file
 17985 ;;		_configFile_read
 17986 ;;		_configFile_write
 17987 ;; This function uses a non-reentrant model
 17988 ;;
 17989                           
 17990                           	psect	text73
 17991  011ED4                     __ptext73:
 17992                           	opt stack 0
 17993  011ED4                     _fat_find_file:
 17994                           	opt stack 13
 17995                           
 17996                           ;fat16.c: 520: uint8_t file_number = 0;
 17997                           
 17998                           ; BSR set to: 0
 17999                           ;incstack = 0
 18000  011ED4  0E00               	movlw	0
 18001  011ED6  0100               	movlb	0	; () banked
 18002  011ED8  6F91               	movwf	fat_find_file@file_number& (0+255),b
 18003                           
 18004                           ;fat16.c: 521: uint16_t sector;;fat16.c: 522: uint16_t offset;;fat16.c: 524: for(sector 
      +                          = 34; sector <= 37; ++sector)
 18005  011EDA  0E00               	movlw	0
 18006  011EDC  6F93               	movwf	(fat_find_file@sector+1)& (0+255),b
 18007  011EDE  0E22               	movlw	34
 18008  011EE0  6F92               	movwf	fat_find_file@sector& (0+255),b
 18009                           
 18010                           ; BSR set to: 0
 18011  011EE2  5193               	movf	(fat_find_file@sector+1)& (0+255),w,b
 18012  011EE4  E169               	bnz	l1852
 18013  011EE6  0E26               	movlw	38
 18014  011EE8  5D92               	subwf	fat_find_file@sector& (0+255),w,b
 18015  011EEA  B0D8               	btfsc	status,0,c
 18016  011EEC  D065               	goto	u14140
 18017                           
 18018                           ; BSR set to: 0
 18019                           ;fat16.c: 525: {;fat16.c: 527: flash_sector_read(sector, buffer);
 18020                           
 18021                           ; BSR set to: 0
 18022                           
 18023                           ; BSR set to: 0
 18024  011EEE  C092  F087         	movff	fat_find_file@sector,flash_sector_read@page
 18025  011EF2  C093  F088         	movff	fat_find_file@sector+1,flash_sector_read@page+1
 18026  011EF6  0E00               	movlw	low _buffer
 18027  011EF8  6F89               	movwf	flash_sector_read@data& (0+255),b
 18028  011EFA  0E0A               	movlw	high _buffer
 18029  011EFC  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 18030  011EFE  EC12  F0AE         	call	_flash_sector_read	;wreg free
 18031                           
 18032                           ;fat16.c: 529: for(offset = 0; offset<512; offset += 32)
 18033  011F02  0E00               	movlw	0
 18034  011F04  0100               	movlb	0	; () banked
 18035  011F06  6F95               	movwf	(fat_find_file@offset+1)& (0+255),b
 18036  011F08  0E00               	movlw	0
 18037  011F0A  6F94               	movwf	fat_find_file@offset& (0+255),b
 18038  011F0C                     l15016:
 18039                           
 18040                           ; BSR set to: 0
 18041  011F0C  0E02               	movlw	2
 18042  011F0E  5D95               	subwf	(fat_find_file@offset+1)& (0+255),w,b
 18043  011F10  B0D8               	btfsc	status,0,c
 18044  011F12  D04D               	goto	u14130
 18045                           
 18046                           ; BSR set to: 0
 18047                           ;fat16.c: 530: {;fat16.c: 531: if(buffer[offset]==0x00)
 18048                           
 18049                           ; BSR set to: 0
 18050                           
 18051                           ; BSR set to: 0
 18052  011F14  0E00               	movlw	low _buffer
 18053  011F16  2594               	addwf	fat_find_file@offset& (0+255),w,b
 18054  011F18  6ED9               	movwf	fsr2l,c
 18055  011F1A  0E0A               	movlw	high _buffer
 18056  011F1C  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 18057  011F1E  6EDA               	movwf	fsr2h,c
 18058  011F20  50DF               	movf	indf2,w,c
 18059  011F22  A4D8               	btfss	status,2,c
 18060  011F24  D002               	goto	l1855
 18061                           
 18062                           ; BSR set to: 0
 18063                           ;fat16.c: 532: {;fat16.c: 535: return 0xFF;
 18064  011F26  0EFF               	movlw	255
 18065                           
 18066                           ; BSR set to: 0
 18067  011F28  0012               	return	
 18068  011F2A                     l1855:
 18069                           
 18070                           ; BSR set to: 0
 18071                           ;fat16.c: 537: else if(buffer[offset]==0xE5)
 18072                           
 18073                           ; BSR set to: 0
 18074  011F2A  0E00               	movlw	low _buffer
 18075  011F2C  2594               	addwf	fat_find_file@offset& (0+255),w,b
 18076  011F2E  6ED9               	movwf	fsr2l,c
 18077  011F30  0E0A               	movlw	high _buffer
 18078  011F32  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 18079  011F34  6EDA               	movwf	fsr2h,c
 18080  011F36  0EE5               	movlw	229
 18081  011F38  18DE               	xorwf	postinc2,w,c
 18082  011F3A  B4D8               	btfsc	status,2,c
 18083  011F3C  D032               	goto	l1861
 18084                           
 18085                           ; BSR set to: 0
 18086                           ;fat16.c: 543: else;fat16.c: 544: {;fat16.c: 546: if(strncmp(name, &buffer[offset], 8) =
      +                          = 0)
 18087                           
 18088                           ; BSR set to: 0
 18089                           
 18090                           ; BSR set to: 0
 18091                           ;fat16.c: 538: {;fat16.c: 542: }
 18092  011F3E  C08B  F060         	movff	fat_find_file@name,strncmp@s1
 18093  011F42  C08C  F061         	movff	fat_find_file@name+1,strncmp@s1+1
 18094  011F46  0E00               	movlw	low _buffer
 18095  011F48  2594               	addwf	fat_find_file@offset& (0+255),w,b
 18096  011F4A  6F62               	movwf	strncmp@s2& (0+255),b
 18097  011F4C  0E0A               	movlw	high _buffer
 18098  011F4E  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 18099  011F50  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 18100  011F52  0E00               	movlw	0
 18101  011F54  6F65               	movwf	(strncmp@len+1)& (0+255),b
 18102  011F56  0E08               	movlw	8
 18103  011F58  6F64               	movwf	strncmp@len& (0+255),b
 18104  011F5A  EC4A  F0A0         	call	_strncmp	;wreg free
 18105  011F5E  0100               	movlb	0	; () banked
 18106  011F60  5160               	movf	?_strncmp& (0+255),w,b
 18107  011F62  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 18108  011F64  A4D8               	btfss	status,2,c
 18109  011F66  D01D               	goto	l1861
 18110                           
 18111                           ; BSR set to: 0
 18112                           ;fat16.c: 547: {;fat16.c: 549: if(strncmp(extension, &buffer[offset+8], 3) == 0)
 18113  011F68  C08D  F060         	movff	fat_find_file@extension,strncmp@s1
 18114  011F6C  C08E  F061         	movff	fat_find_file@extension+1,strncmp@s1+1
 18115  011F70  0E08               	movlw	8
 18116  011F72  2594               	addwf	fat_find_file@offset& (0+255),w,b
 18117  011F74  6F8F               	movwf	??_fat_find_file& (0+255),b
 18118  011F76  0E00               	movlw	0
 18119  011F78  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 18120  011F7A  6F90               	movwf	(??_fat_find_file+1)& (0+255),b
 18121  011F7C  0E00               	movlw	low _buffer
 18122  011F7E  258F               	addwf	??_fat_find_file& (0+255),w,b
 18123  011F80  6F62               	movwf	strncmp@s2& (0+255),b
 18124  011F82  0E0A               	movlw	high _buffer
 18125  011F84  2190               	addwfc	(??_fat_find_file+1)& (0+255),w,b
 18126  011F86  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 18127  011F88  0E00               	movlw	0
 18128  011F8A  6F65               	movwf	(strncmp@len+1)& (0+255),b
 18129  011F8C  0E03               	movlw	3
 18130  011F8E  6F64               	movwf	strncmp@len& (0+255),b
 18131  011F90  EC4A  F0A0         	call	_strncmp	;wreg free
 18132  011F94  0100               	movlb	0	; () banked
 18133  011F96  5160               	movf	?_strncmp& (0+255),w,b
 18134  011F98  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 18135  011F9A  A4D8               	btfss	status,2,c
 18136  011F9C  D002               	goto	l1861
 18137                           
 18138                           ; BSR set to: 0
 18139                           ;fat16.c: 550: {;fat16.c: 553: return file_number;
 18140  011F9E  5191               	movf	fat_find_file@file_number& (0+255),w,b
 18141                           
 18142                           ; BSR set to: 0
 18143  011FA0  0012               	return	
 18144  011FA2                     l1861:
 18145                           
 18146                           ; BSR set to: 0
 18147                           ;fat16.c: 554: };fat16.c: 555: };fat16.c: 556: };fat16.c: 557: ++file_number;
 18148                           
 18149                           ; BSR set to: 0
 18150                           
 18151                           ; BSR set to: 0
 18152                           
 18153                           ; BSR set to: 0
 18154                           
 18155                           ; BSR set to: 0
 18156  011FA2  2B91               	incf	fat_find_file@file_number& (0+255),f,b
 18157                           
 18158                           ; BSR set to: 0
 18159  011FA4  0E20               	movlw	32
 18160  011FA6  2794               	addwf	fat_find_file@offset& (0+255),f,b
 18161  011FA8  0E00               	movlw	0
 18162  011FAA  2395               	addwfc	(fat_find_file@offset+1)& (0+255),f,b
 18163  011FAC  D7AF               	goto	l15016
 18164  011FAE                     u14130:
 18165                           
 18166                           ; BSR set to: 0
 18167                           
 18168                           ; BSR set to: 0
 18169  011FAE  4B92               	infsnz	fat_find_file@sector& (0+255),f,b
 18170  011FB0  2B93               	incf	(fat_find_file@sector+1)& (0+255),f,b
 18171                           
 18172                           ; BSR set to: 0
 18173  011FB2  5193               	movf	(fat_find_file@sector+1)& (0+255),w,b
 18174  011FB4  E101               	bnz	l15050
 18175  011FB6  D797               	goto	L4
 18176  011FB8                     u14140:
 18177  011FB8                     l1852:
 18178  011FB8                     l15050:
 18179                           
 18180                           ; BSR set to: 0
 18181                           ;fat16.c: 558: };fat16.c: 559: };fat16.c: 560: return 0xFF;
 18182  011FB8  0EFF               	movlw	255
 18183  011FBA  0012               	return	
 18184  011FBC                     __end_of_fat_find_file:
 18185                           	opt stack 0
 18186                           tblptru	equ	0xFF8
 18187                           tblptrh	equ	0xFF7
 18188                           tblptrl	equ	0xFF6
 18189                           tablat	equ	0xFF5
 18190                           prodh	equ	0xFF4
 18191                           prodl	equ	0xFF3
 18192                           postinc0	equ	0xFEE
 18193                           wreg	equ	0xFE8
 18194                           postdec1	equ	0xFE5
 18195                           plusw1	equ	0xFE3
 18196                           fsr1h	equ	0xFE2
 18197                           fsr1l	equ	0xFE1
 18198                           indf2	equ	0xFDF
 18199                           postinc2	equ	0xFDE
 18200                           postdec2	equ	0xFDD
 18201                           plusw2	equ	0xFDB
 18202                           fsr2h	equ	0xFDA
 18203                           fsr2l	equ	0xFD9
 18204                           status	equ	0xFD8
 18205                           
 18206 ;; *************** function _strncmp *****************
 18207 ;; Defined at:
 18208 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 18209 ;; Parameters:    Size  Location     Type
 18210 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 18211 ;;		 -> configFile_used_extention(3), configFile_used_name(8), configFile_extention(3), configFile_name(8), 
 18212 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 18213 ;;		 -> buffer(512), 
 18214 ;;  len             2    4[BANK0 ] unsigned int 
 18215 ;; Auto vars:     Size  Location     Type
 18216 ;;		None
 18217 ;; Return value:  Size  Location     Type
 18218 ;;                  2    0[BANK0 ] int 
 18219 ;; Registers used:
 18220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 18221 ;; Tracked objects:
 18222 ;;		On entry : 0/0
 18223 ;;		On exit  : 0/0
 18224 ;;		Unchanged: 0/0
 18225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18226 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18228 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18229 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18230 ;;Total ram usage:        9 bytes
 18231 ;; Hardware stack levels used:    1
 18232 ;; Hardware stack levels required when called:   10
 18233 ;; This function calls:
 18234 ;;		Nothing
 18235 ;; This function is called by:
 18236 ;;		_fat_find_file
 18237 ;; This function uses a non-reentrant model
 18238 ;;
 18239                           
 18240                           	psect	text74
 18241  014094                     __ptext74:
 18242                           	opt stack 0
 18243  014094                     _strncmp:
 18244                           	opt stack 17
 18245                           
 18246                           ; BSR set to: 0
 18247                           ;incstack = 0
 18248  014094  D031               	goto	l3840
 18249  014096                     l14044:
 18250  014096  C060  FFD9         	movff	strncmp@s1,fsr2l
 18251  01409A  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 18252  01409E  50DF               	movf	indf2,w,c
 18253  0140A0  B4D8               	btfsc	status,2,c
 18254  0140A2  D00C               	goto	u12720
 18255  0140A4  C062  FFD9         	movff	strncmp@s2,fsr2l
 18256  0140A8  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 18257  0140AC  C060  FFE1         	movff	strncmp@s1,fsr1l
 18258  0140B0  C061  FFE2         	movff	strncmp@s1+1,fsr1h
 18259  0140B4  50DE               	movf	postinc2,w,c
 18260  0140B6  18E6               	xorwf	postinc1,w,c
 18261  0140B8  B4D8               	btfsc	status,2,c
 18262  0140BA  D019               	goto	l3842
 18263  0140BC                     u12720:
 18264  0140BC  C062  FFD9         	movff	strncmp@s2,fsr2l
 18265  0140C0  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 18266  0140C4  50DF               	movf	indf2,w,c
 18267  0140C6  0100               	movlb	0	; () banked
 18268  0140C8  6F66               	movwf	??_strncmp& (0+255),b
 18269  0140CA  6B67               	clrf	(??_strncmp+1)& (0+255),b
 18270  0140CC  1F66               	comf	??_strncmp& (0+255),f,b
 18271  0140CE  1F67               	comf	(??_strncmp+1)& (0+255),f,b
 18272  0140D0  4B66               	infsnz	??_strncmp& (0+255),f,b
 18273  0140D2  2B67               	incf	(??_strncmp+1)& (0+255),f,b
 18274  0140D4  C060  FFD9         	movff	strncmp@s1,fsr2l
 18275  0140D8  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 18276  0140DC  50DF               	movf	indf2,w,c
 18277  0140DE  6F68               	movwf	(??_strncmp+2)& (0+255),b
 18278  0140E0  5168               	movf	(??_strncmp+2)& (0+255),w,b
 18279  0140E2  2566               	addwf	??_strncmp& (0+255),w,b
 18280  0140E4  6F60               	movwf	?_strncmp& (0+255),b
 18281  0140E6  0E00               	movlw	0
 18282  0140E8  2167               	addwfc	(??_strncmp+1)& (0+255),w,b
 18283  0140EA  6F61               	movwf	(?_strncmp+1)& (0+255),b
 18284                           
 18285                           ; BSR set to: 0
 18286  0140EC  0012               	return	
 18287  0140EE                     l3842:
 18288                           
 18289                           ; BSR set to: 0
 18290  0140EE  0100               	movlb	0	; () banked
 18291  0140F0  4B60               	infsnz	strncmp@s1& (0+255),f,b
 18292  0140F2  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
 18293  0140F4  4B62               	infsnz	strncmp@s2& (0+255),f,b
 18294  0140F6  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
 18295  0140F8                     l3840:
 18296                           
 18297                           ; BSR set to: 0
 18298  0140F8  0100               	movlb	0	; () banked
 18299  0140FA  0764               	decf	strncmp@len& (0+255),f,b
 18300  0140FC  A0D8               	btfss	status,0,c
 18301  0140FE  0765               	decf	(strncmp@len+1)& (0+255),f,b
 18302  014100  2964               	incf	strncmp@len& (0+255),w,b
 18303  014102  E1C9               	bnz	l14044
 18304  014104  2965               	incf	(strncmp@len+1)& (0+255),w,b
 18305  014106  A4D8               	btfss	status,2,c
 18306  014108  D7C6               	goto	l3841
 18307                           
 18308                           ; BSR set to: 0
 18309                           
 18310                           ; BSR set to: 0
 18311  01410A  0E00               	movlw	0
 18312  01410C  6F61               	movwf	(?_strncmp+1)& (0+255),b
 18313  01410E  0E00               	movlw	0
 18314  014110  6F60               	movwf	?_strncmp& (0+255),b
 18315  014112  0012               	return	
 18316  014114                     __end_of_strncmp:
 18317                           	opt stack 0
 18318                           tblptru	equ	0xFF8
 18319                           tblptrh	equ	0xFF7
 18320                           tblptrl	equ	0xFF6
 18321                           tablat	equ	0xFF5
 18322                           prodh	equ	0xFF4
 18323                           prodl	equ	0xFF3
 18324                           postinc0	equ	0xFEE
 18325                           wreg	equ	0xFE8
 18326                           postinc1	equ	0xFE6
 18327                           postdec1	equ	0xFE5
 18328                           plusw1	equ	0xFE3
 18329                           fsr1h	equ	0xFE2
 18330                           fsr1l	equ	0xFE1
 18331                           indf2	equ	0xFDF
 18332                           postinc2	equ	0xFDE
 18333                           postdec2	equ	0xFDD
 18334                           plusw2	equ	0xFDB
 18335                           fsr2h	equ	0xFDA
 18336                           fsr2l	equ	0xFD9
 18337                           status	equ	0xFD8
 18338                           
 18339 ;; *************** function __parse_item *****************
 18340 ;; Defined at:
 18341 ;;		line 111 in file "config_file.c"
 18342 ;; Parameters:    Size  Location     Type
 18343 ;;  item_string     2   57[BANK0 ] PTR unsigned char 
 18344 ;;		 -> configFile_read@item_string(31), 
 18345 ;;  value_string    2   59[BANK0 ] PTR unsigned char 
 18346 ;;		 -> configFile_read@value_string(12), 
 18347 ;; Auto vars:     Size  Location     Type
 18348 ;;		None
 18349 ;; Return value:  Size  Location     Type
 18350 ;;                  1    wreg      unsigned char 
 18351 ;; Registers used:
 18352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18353 ;; Tracked objects:
 18354 ;;		On entry : 0/0
 18355 ;;		On exit  : 0/0
 18356 ;;		Unchanged: 0/0
 18357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18358 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18361 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18362 ;;Total ram usage:        4 bytes
 18363 ;; Hardware stack levels used:    1
 18364 ;; Hardware stack levels required when called:   12
 18365 ;; This function calls:
 18366 ;;		__steps_from_degrees
 18367 ;;		_atoi
 18368 ;;		_atol
 18369 ;;		_stricmp
 18370 ;; This function is called by:
 18371 ;;		_configFile_read
 18372 ;; This function uses a non-reentrant model
 18373 ;;
 18374                           
 18375                           	psect	text75
 18376  00BE06                     __ptext75:
 18377                           	opt stack 0
 18378  00BE06                     __parse_item:
 18379                           	opt stack 16
 18380                           
 18381                           ;config_file.c: 113: if(stricmp(item_string, full_circle_in_steps_string)==0)
 18382                           
 18383                           ; BSR set to: 0
 18384                           ;incstack = 0
 18385  00BE06  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18386  00BE0A  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18387  00BE0E  0E12               	movlw	low _full_circle_in_steps_string
 18388  00BE10  0100               	movlb	0	; () banked
 18389  00BE12  6F63               	movwf	stricmp@s2& (0+255),b
 18390  00BE14  0EA2               	movlw	high _full_circle_in_steps_string
 18391  00BE16  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18392  00BE18  EC89  F0A5         	call	_stricmp	;wreg free
 18393  00BE1C  0100               	movlb	0	; () banked
 18394  00BE1E  5161               	movf	?_stricmp& (0+255),w,b
 18395  00BE20  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18396  00BE22  A4D8               	btfss	status,2,c
 18397  00BE24  D00F               	goto	l3045
 18398                           
 18399                           ; BSR set to: 0
 18400                           ;config_file.c: 114: {;config_file.c: 115: config.full_circle_in_steps = atol(value_stri
      +                          ng);
 18401  00BE26  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18402  00BE2A  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18403  00BE2E  EC8C  F08C         	call	_atol	;wreg free
 18404  00BE32  C06C  F195         	movff	?_atol,_config
 18405  00BE36  C06D  F196         	movff	?_atol+1,_config+1
 18406  00BE3A  C06E  F197         	movff	?_atol+2,_config+2
 18407  00BE3E  C06F  F198         	movff	?_atol+3,_config+3
 18408                           
 18409                           ;config_file.c: 116: return 1;;	Return value of __parse_item is never used
 18410  00BE42  0012               	return	
 18411  00BE44                     l3045:
 18412                           
 18413                           ;config_file.c: 117: };config_file.c: 119: if(stricmp(item_string, overshoot_in_steps_st
      +                          ring)==0)
 18414  00BE44  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18415  00BE48  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18416  00BE4C  0E27               	movlw	low _overshoot_in_steps_string
 18417  00BE4E  0100               	movlb	0	; () banked
 18418  00BE50  6F63               	movwf	stricmp@s2& (0+255),b
 18419  00BE52  0EA2               	movlw	high _overshoot_in_steps_string
 18420  00BE54  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18421  00BE56  EC89  F0A5         	call	_stricmp	;wreg free
 18422  00BE5A  0100               	movlb	0	; () banked
 18423  00BE5C  5161               	movf	?_stricmp& (0+255),w,b
 18424  00BE5E  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18425  00BE60  A4D8               	btfss	status,2,c
 18426  00BE62  D00B               	goto	l3047
 18427                           
 18428                           ; BSR set to: 0
 18429                           ;config_file.c: 120: {;config_file.c: 121: config.overshoot_in_steps = atoi(value_string
      +                          );
 18430  00BE64  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18431  00BE68  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18432  00BE6C  EC60  F093         	call	_atoi	;wreg free
 18433  00BE70  C066  F19A         	movff	?_atoi,_config+5
 18434  00BE74  C067  F19B         	movff	?_atoi+1,_config+6
 18435                           
 18436                           ;config_file.c: 122: return 2;;	Return value of __parse_item is never used
 18437  00BE78  0012               	return	
 18438  00BE7A                     l3047:
 18439                           
 18440                           ;config_file.c: 123: };config_file.c: 125: if(stricmp(item_string, inverse_direction_str
      +                          ing)==0)
 18441  00BE7A  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18442  00BE7E  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18443  00BE82  0E5E               	movlw	low _inverse_direction_string
 18444  00BE84  0100               	movlb	0	; () banked
 18445  00BE86  6F63               	movwf	stricmp@s2& (0+255),b
 18446  00BE88  0EA2               	movlw	high _inverse_direction_string
 18447  00BE8A  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18448  00BE8C  EC89  F0A5         	call	_stricmp	;wreg free
 18449  00BE90  0100               	movlb	0	; () banked
 18450  00BE92  5161               	movf	?_stricmp& (0+255),w,b
 18451  00BE94  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18452  00BE96  A4D8               	btfss	status,2,c
 18453  00BE98  D00B               	goto	l3048
 18454                           
 18455                           ; BSR set to: 0
 18456                           ;config_file.c: 126: {;config_file.c: 127: config.inverse_direction = atol(value_string)
      +                          ;
 18457  00BE9A  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18458  00BE9E  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18459  00BEA2  EC8C  F08C         	call	_atol	;wreg free
 18460  00BEA6  0100               	movlb	0	; () banked
 18461  00BEA8  516C               	movf	?_atol& (0+255),w,b
 18462  00BEAA  0101               	movlb	1	; () banked
 18463  00BEAC  6F99               	movwf	(_config+4)& (0+255),b
 18464                           
 18465                           ; BSR set to: 1
 18466                           ;config_file.c: 128: return 3;;	Return value of __parse_item is never used
 18467  00BEAE  0012               	return	
 18468  00BEB0                     l3048:
 18469                           
 18470                           ;config_file.c: 129: };config_file.c: 131: if(stricmp(item_string, overshoot_in_steps_st
      +                          ring)==0)
 18471                           
 18472                           ; BSR set to: 1
 18473  00BEB0  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18474  00BEB4  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18475  00BEB8  0E27               	movlw	low _overshoot_in_steps_string
 18476  00BEBA  0100               	movlb	0	; () banked
 18477  00BEBC  6F63               	movwf	stricmp@s2& (0+255),b
 18478  00BEBE  0EA2               	movlw	high _overshoot_in_steps_string
 18479  00BEC0  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18480  00BEC2  EC89  F0A5         	call	_stricmp	;wreg free
 18481  00BEC6  0100               	movlb	0	; () banked
 18482  00BEC8  5161               	movf	?_stricmp& (0+255),w,b
 18483  00BECA  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18484  00BECC  A4D8               	btfss	status,2,c
 18485  00BECE  D00B               	goto	l3049
 18486                           
 18487                           ; BSR set to: 0
 18488                           ;config_file.c: 132: {;config_file.c: 133: config.overshoot_in_steps = atoi(value_string
      +                          );
 18489  00BED0  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18490  00BED4  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18491  00BED8  EC60  F093         	call	_atoi	;wreg free
 18492  00BEDC  C066  F19A         	movff	?_atoi,_config+5
 18493  00BEE0  C067  F19B         	movff	?_atoi+1,_config+6
 18494                           
 18495                           ;config_file.c: 134: return 4;;	Return value of __parse_item is never used
 18496  00BEE4  0012               	return	
 18497  00BEE6                     l3049:
 18498                           
 18499                           ;config_file.c: 135: };config_file.c: 137: if(stricmp(item_string, overshoot_cost_in_ste
      +                          ps_string)==0)
 18500  00BEE6  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18501  00BEEA  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18502  00BEEE  0EBB               	movlw	low _overshoot_cost_in_steps_string
 18503  00BEF0  0100               	movlb	0	; () banked
 18504  00BEF2  6F63               	movwf	stricmp@s2& (0+255),b
 18505  00BEF4  0EA1               	movlw	high _overshoot_cost_in_steps_string
 18506  00BEF6  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18507  00BEF8  EC89  F0A5         	call	_stricmp	;wreg free
 18508  00BEFC  0100               	movlb	0	; () banked
 18509  00BEFE  5161               	movf	?_stricmp& (0+255),w,b
 18510  00BF00  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18511  00BF02  A4D8               	btfss	status,2,c
 18512  00BF04  D00B               	goto	l3050
 18513                           
 18514                           ; BSR set to: 0
 18515                           ;config_file.c: 138: {;config_file.c: 139: config.overshoot_cost_in_steps = atoi(value_s
      +                          tring);
 18516  00BF06  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18517  00BF0A  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18518  00BF0E  EC60  F093         	call	_atoi	;wreg free
 18519  00BF12  C066  F19C         	movff	?_atoi,_config+7
 18520  00BF16  C067  F19D         	movff	?_atoi+1,_config+8
 18521                           
 18522                           ;config_file.c: 140: return 5;;	Return value of __parse_item is never used
 18523  00BF1A  0012               	return	
 18524  00BF1C                     l3050:
 18525                           
 18526                           ;config_file.c: 141: };config_file.c: 143: if(stricmp(item_string, minimum_speed_string)
      +                          ==0)
 18527  00BF1C  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18528  00BF20  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18529  00BF24  0EAC               	movlw	low _minimum_speed_string
 18530  00BF26  0100               	movlb	0	; () banked
 18531  00BF28  6F63               	movwf	stricmp@s2& (0+255),b
 18532  00BF2A  0EA2               	movlw	high _minimum_speed_string
 18533  00BF2C  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18534  00BF2E  EC89  F0A5         	call	_stricmp	;wreg free
 18535  00BF32  0100               	movlb	0	; () banked
 18536  00BF34  5161               	movf	?_stricmp& (0+255),w,b
 18537  00BF36  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18538  00BF38  A4D8               	btfss	status,2,c
 18539  00BF3A  D00B               	goto	l3051
 18540                           
 18541                           ; BSR set to: 0
 18542                           ;config_file.c: 144: {;config_file.c: 145: config.minimum_speed = atoi(value_string);
 18543  00BF3C  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18544  00BF40  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18545  00BF44  EC60  F093         	call	_atoi	;wreg free
 18546  00BF48  C066  F19E         	movff	?_atoi,_config+9
 18547  00BF4C  C067  F19F         	movff	?_atoi+1,_config+10
 18548                           
 18549                           ;config_file.c: 146: return 6;;	Return value of __parse_item is never used
 18550  00BF50  0012               	return	
 18551  00BF52                     l3051:
 18552                           
 18553                           ;config_file.c: 147: };config_file.c: 149: if(stricmp(item_string, maximum_speed_string)
      +                          ==0)
 18554  00BF52  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18555  00BF56  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18556  00BF5A  0E9E               	movlw	low _maximum_speed_string
 18557  00BF5C  0100               	movlb	0	; () banked
 18558  00BF5E  6F63               	movwf	stricmp@s2& (0+255),b
 18559  00BF60  0EA2               	movlw	high _maximum_speed_string
 18560  00BF62  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18561  00BF64  EC89  F0A5         	call	_stricmp	;wreg free
 18562  00BF68  0100               	movlb	0	; () banked
 18563  00BF6A  5161               	movf	?_stricmp& (0+255),w,b
 18564  00BF6C  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18565  00BF6E  A4D8               	btfss	status,2,c
 18566  00BF70  D00B               	goto	l3052
 18567                           
 18568                           ; BSR set to: 0
 18569                           ;config_file.c: 150: {;config_file.c: 151: config.maximum_speed = atoi(value_string);
 18570  00BF72  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18571  00BF76  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18572  00BF7A  EC60  F093         	call	_atoi	;wreg free
 18573  00BF7E  C066  F1A0         	movff	?_atoi,_config+11
 18574  00BF82  C067  F1A1         	movff	?_atoi+1,_config+12
 18575                           
 18576                           ;config_file.c: 152: return 7;;	Return value of __parse_item is never used
 18577  00BF86  0012               	return	
 18578  00BF88                     l3052:
 18579                           
 18580                           ;config_file.c: 153: };config_file.c: 155: if(stricmp(item_string, initial_speed_arc_str
      +                          ing)==0)
 18581  00BF88  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18582  00BF8C  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18583  00BF90  0E4C               	movlw	low _initial_speed_arc_string
 18584  00BF92  0100               	movlb	0	; () banked
 18585  00BF94  6F63               	movwf	stricmp@s2& (0+255),b
 18586  00BF96  0EA2               	movlw	high _initial_speed_arc_string
 18587  00BF98  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18588  00BF9A  EC89  F0A5         	call	_stricmp	;wreg free
 18589  00BF9E  0100               	movlb	0	; () banked
 18590  00BFA0  5161               	movf	?_stricmp& (0+255),w,b
 18591  00BFA2  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18592  00BFA4  A4D8               	btfss	status,2,c
 18593  00BFA6  D00B               	goto	l3053
 18594                           
 18595                           ; BSR set to: 0
 18596                           ;config_file.c: 156: {;config_file.c: 157: config.initial_speed_arc = atoi(value_string)
      +                          ;
 18597  00BFA8  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18598  00BFAC  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18599  00BFB0  EC60  F093         	call	_atoi	;wreg free
 18600  00BFB4  C066  F1A2         	movff	?_atoi,_config+13
 18601  00BFB8  C067  F1A3         	movff	?_atoi+1,_config+14
 18602                           
 18603                           ;config_file.c: 158: return 8;;	Return value of __parse_item is never used
 18604  00BFBC  0012               	return	
 18605  00BFBE                     l3053:
 18606                           
 18607                           ;config_file.c: 159: };config_file.c: 161: if(stricmp(item_string, maximum_speed_arc_str
      +                          ing)==0)
 18608  00BFBE  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18609  00BFC2  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18610  00BFC6  0E3A               	movlw	low _maximum_speed_arc_string
 18611  00BFC8  0100               	movlb	0	; () banked
 18612  00BFCA  6F63               	movwf	stricmp@s2& (0+255),b
 18613  00BFCC  0EA2               	movlw	high _maximum_speed_arc_string
 18614  00BFCE  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18615  00BFD0  EC89  F0A5         	call	_stricmp	;wreg free
 18616  00BFD4  0100               	movlb	0	; () banked
 18617  00BFD6  5161               	movf	?_stricmp& (0+255),w,b
 18618  00BFD8  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18619  00BFDA  A4D8               	btfss	status,2,c
 18620  00BFDC  D00B               	goto	l3054
 18621                           
 18622                           ; BSR set to: 0
 18623                           ;config_file.c: 162: {;config_file.c: 163: config.maximum_speed_arc = atoi(value_string)
      +                          ;
 18624  00BFDE  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18625  00BFE2  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18626  00BFE6  EC60  F093         	call	_atoi	;wreg free
 18627  00BFEA  C066  F1A4         	movff	?_atoi,_config+15
 18628  00BFEE  C067  F1A5         	movff	?_atoi+1,_config+16
 18629                           
 18630                           ;config_file.c: 164: return 9;;	Return value of __parse_item is never used
 18631  00BFF2  0012               	return	
 18632  00BFF4                     l3054:
 18633                           
 18634                           ;config_file.c: 165: };config_file.c: 167: if(stricmp(item_string, initial_speed_manual_
      +                          string)==0)
 18635  00BFF4  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18636  00BFF8  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18637  00BFFC  0EFD               	movlw	low _initial_speed_manual_string
 18638  00BFFE  0100               	movlb	0	; () banked
 18639  00C000  6F63               	movwf	stricmp@s2& (0+255),b
 18640  00C002  0EA1               	movlw	high _initial_speed_manual_string
 18641  00C004  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18642  00C006  EC89  F0A5         	call	_stricmp	;wreg free
 18643  00C00A  0100               	movlb	0	; () banked
 18644  00C00C  5161               	movf	?_stricmp& (0+255),w,b
 18645  00C00E  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18646  00C010  A4D8               	btfss	status,2,c
 18647  00C012  D00B               	goto	l3055
 18648                           
 18649                           ; BSR set to: 0
 18650                           ;config_file.c: 168: {;config_file.c: 169: config.initial_speed_manual = atoi(value_stri
      +                          ng);
 18651  00C014  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18652  00C018  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18653  00C01C  EC60  F093         	call	_atoi	;wreg free
 18654  00C020  C066  F1A6         	movff	?_atoi,_config+17
 18655  00C024  C067  F1A7         	movff	?_atoi+1,_config+18
 18656                           
 18657                           ;config_file.c: 170: return 10;;	Return value of __parse_item is never used
 18658  00C028  0012               	return	
 18659  00C02A                     l3055:
 18660                           
 18661                           ;config_file.c: 171: };config_file.c: 173: if(stricmp(item_string, maximum_speed_manual_
      +                          string)==0)
 18662  00C02A  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18663  00C02E  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18664  00C032  0EE8               	movlw	low _maximum_speed_manual_string
 18665  00C034  0100               	movlb	0	; () banked
 18666  00C036  6F63               	movwf	stricmp@s2& (0+255),b
 18667  00C038  0EA1               	movlw	high _maximum_speed_manual_string
 18668  00C03A  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18669  00C03C  EC89  F0A5         	call	_stricmp	;wreg free
 18670  00C040  0100               	movlb	0	; () banked
 18671  00C042  5161               	movf	?_stricmp& (0+255),w,b
 18672  00C044  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18673  00C046  A4D8               	btfss	status,2,c
 18674  00C048  D00B               	goto	l3056
 18675                           
 18676                           ; BSR set to: 0
 18677                           ;config_file.c: 174: {;config_file.c: 175: config.maximum_speed_manual = atoi(value_stri
      +                          ng);
 18678  00C04A  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18679  00C04E  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18680  00C052  EC60  F093         	call	_atoi	;wreg free
 18681  00C056  C066  F1A8         	movff	?_atoi,_config+19
 18682  00C05A  C067  F1A9         	movff	?_atoi+1,_config+20
 18683                           
 18684                           ;config_file.c: 176: return 11;;	Return value of __parse_item is never used
 18685  00C05E  0012               	return	
 18686  00C060                     l3056:
 18687                           
 18688                           ;config_file.c: 177: };config_file.c: 179: if(stricmp(item_string, beep_duration_string)
      +                          ==0)
 18689  00C060  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18690  00C064  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18691  00C068  0E90               	movlw	low _beep_duration_string
 18692  00C06A  0100               	movlb	0	; () banked
 18693  00C06C  6F63               	movwf	stricmp@s2& (0+255),b
 18694  00C06E  0EA2               	movlw	high _beep_duration_string
 18695  00C070  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18696  00C072  EC89  F0A5         	call	_stricmp	;wreg free
 18697  00C076  0100               	movlb	0	; () banked
 18698  00C078  5161               	movf	?_stricmp& (0+255),w,b
 18699  00C07A  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18700  00C07C  A4D8               	btfss	status,2,c
 18701  00C07E  D00B               	goto	l3057
 18702                           
 18703                           ; BSR set to: 0
 18704                           ;config_file.c: 180: {;config_file.c: 181: config.beep_duration = atoi(value_string);
 18705  00C080  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18706  00C084  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18707  00C088  EC60  F093         	call	_atoi	;wreg free
 18708  00C08C  0100               	movlb	0	; () banked
 18709  00C08E  5166               	movf	?_atoi& (0+255),w,b
 18710  00C090  0101               	movlb	1	; () banked
 18711  00C092  6FAA               	movwf	(_config+21)& (0+255),b
 18712                           
 18713                           ; BSR set to: 1
 18714                           ;config_file.c: 182: return 12;;	Return value of __parse_item is never used
 18715  00C094  0012               	return	
 18716  00C096                     l3057:
 18717                           
 18718                           ;config_file.c: 183: };config_file.c: 185: if(stricmp(item_string, use_cw_limit_string)=
      +                          =0)
 18719                           
 18720                           ; BSR set to: 1
 18721  00C096  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18722  00C09A  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18723  00C09E  0EBA               	movlw	low _use_cw_limit_string
 18724  00C0A0  0100               	movlb	0	; () banked
 18725  00C0A2  6F63               	movwf	stricmp@s2& (0+255),b
 18726  00C0A4  0EA2               	movlw	high _use_cw_limit_string
 18727  00C0A6  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18728  00C0A8  EC89  F0A5         	call	_stricmp	;wreg free
 18729  00C0AC  0100               	movlb	0	; () banked
 18730  00C0AE  5161               	movf	?_stricmp& (0+255),w,b
 18731  00C0B0  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18732  00C0B2  A4D8               	btfss	status,2,c
 18733  00C0B4  D00B               	goto	l3058
 18734                           
 18735                           ; BSR set to: 0
 18736                           ;config_file.c: 186: {;config_file.c: 187: config.use_cw_limit = atol(value_string);
 18737  00C0B6  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18738  00C0BA  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18739  00C0BE  EC8C  F08C         	call	_atol	;wreg free
 18740  00C0C2  0100               	movlb	0	; () banked
 18741  00C0C4  516C               	movf	?_atol& (0+255),w,b
 18742  00C0C6  0101               	movlb	1	; () banked
 18743  00C0C8  6FAB               	movwf	(_config+22)& (0+255),b
 18744                           
 18745                           ; BSR set to: 1
 18746                           ;config_file.c: 188: return 13;;	Return value of __parse_item is never used
 18747  00C0CA  0012               	return	
 18748  00C0CC                     l3058:
 18749                           
 18750                           ;config_file.c: 189: };config_file.c: 191: if(stricmp(item_string, cw_limit_string)==0)
 18751                           
 18752                           ; BSR set to: 1
 18753  00C0CC  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18754  00C0D0  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18755  00C0D4  0ED1               	movlw	low _cw_limit_string
 18756  00C0D6  0100               	movlb	0	; () banked
 18757  00C0D8  6F63               	movwf	stricmp@s2& (0+255),b
 18758  00C0DA  0EA2               	movlw	high _cw_limit_string
 18759  00C0DC  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18760  00C0DE  EC89  F0A5         	call	_stricmp	;wreg free
 18761  00C0E2  0100               	movlb	0	; () banked
 18762  00C0E4  5161               	movf	?_stricmp& (0+255),w,b
 18763  00C0E6  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18764  00C0E8  A4D8               	btfss	status,2,c
 18765  00C0EA  D021               	goto	l3059
 18766                           
 18767                           ; BSR set to: 0
 18768                           ;config_file.c: 192: {;config_file.c: 193: config.cw_limit = atol(value_string);
 18769  00C0EC  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18770  00C0F0  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18771  00C0F4  EC8C  F08C         	call	_atol	;wreg free
 18772  00C0F8  C06C  F1AC         	movff	?_atol,_config+23
 18773  00C0FC  C06D  F1AD         	movff	?_atol+1,_config+24
 18774  00C100  C06E  F1AE         	movff	?_atol+2,_config+25
 18775  00C104  C06F  F1AF         	movff	?_atol+3,_config+26
 18776                           
 18777                           ;config_file.c: 194: config.cw_limit_in_steps = _steps_from_degrees(config.cw_limit);
 18778  00C108  C1AC  F091         	movff	_config+23,__steps_from_degrees@degrees
 18779  00C10C  C1AD  F092         	movff	_config+24,__steps_from_degrees@degrees+1
 18780  00C110  C1AE  F093         	movff	_config+25,__steps_from_degrees@degrees+2
 18781  00C114  C1AF  F094         	movff	_config+26,__steps_from_degrees@degrees+3
 18782  00C118  EC26  F078         	call	__steps_from_degrees	;wreg free
 18783  00C11C  C091  F1B0         	movff	?__steps_from_degrees,_config+27
 18784  00C120  C092  F1B1         	movff	?__steps_from_degrees+1,_config+28
 18785  00C124  C093  F1B2         	movff	?__steps_from_degrees+2,_config+29
 18786  00C128  C094  F1B3         	movff	?__steps_from_degrees+3,_config+30
 18787                           
 18788                           ;config_file.c: 195: return 14;;	Return value of __parse_item is never used
 18789  00C12C  0012               	return	
 18790  00C12E                     l3059:
 18791                           
 18792                           ;config_file.c: 196: };config_file.c: 198: if(stricmp(item_string, use_ccw_limit_string)
      +                          ==0)
 18793  00C12E  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18794  00C132  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18795  00C136  0E82               	movlw	low _use_ccw_limit_string
 18796  00C138  0100               	movlb	0	; () banked
 18797  00C13A  6F63               	movwf	stricmp@s2& (0+255),b
 18798  00C13C  0EA2               	movlw	high _use_ccw_limit_string
 18799  00C13E  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18800  00C140  EC89  F0A5         	call	_stricmp	;wreg free
 18801  00C144  0100               	movlb	0	; () banked
 18802  00C146  5161               	movf	?_stricmp& (0+255),w,b
 18803  00C148  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18804  00C14A  A4D8               	btfss	status,2,c
 18805  00C14C  D00B               	goto	l3060
 18806                           
 18807                           ; BSR set to: 0
 18808                           ;config_file.c: 199: {;config_file.c: 200: config.use_ccw_limit = atol(value_string);
 18809  00C14E  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18810  00C152  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18811  00C156  EC8C  F08C         	call	_atol	;wreg free
 18812  00C15A  0100               	movlb	0	; () banked
 18813  00C15C  516C               	movf	?_atol& (0+255),w,b
 18814  00C15E  0101               	movlb	1	; () banked
 18815  00C160  6FB4               	movwf	(_config+31)& (0+255),b
 18816                           
 18817                           ; BSR set to: 1
 18818                           ;config_file.c: 201: return 15;;	Return value of __parse_item is never used
 18819  00C162  0012               	return	
 18820  00C164                     l3060:
 18821                           
 18822                           ;config_file.c: 202: };config_file.c: 204: if(stricmp(item_string, ccw_limit_string)==0)
 18823                           
 18824                           ; BSR set to: 1
 18825  00C164  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18826  00C168  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18827  00C16C  0EC7               	movlw	low _ccw_limit_string
 18828  00C16E  0100               	movlb	0	; () banked
 18829  00C170  6F63               	movwf	stricmp@s2& (0+255),b
 18830  00C172  0EA2               	movlw	high _ccw_limit_string
 18831  00C174  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18832  00C176  EC89  F0A5         	call	_stricmp	;wreg free
 18833  00C17A  0100               	movlb	0	; () banked
 18834  00C17C  5161               	movf	?_stricmp& (0+255),w,b
 18835  00C17E  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18836  00C180  A4D8               	btfss	status,2,c
 18837  00C182  D021               	goto	l3061
 18838                           
 18839                           ; BSR set to: 0
 18840                           ;config_file.c: 205: {;config_file.c: 206: config.ccw_limit = atol(value_string);
 18841  00C184  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18842  00C188  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18843  00C18C  EC8C  F08C         	call	_atol	;wreg free
 18844  00C190  C06C  F1B5         	movff	?_atol,_config+32
 18845  00C194  C06D  F1B6         	movff	?_atol+1,_config+33
 18846  00C198  C06E  F1B7         	movff	?_atol+2,_config+34
 18847  00C19C  C06F  F1B8         	movff	?_atol+3,_config+35
 18848                           
 18849                           ;config_file.c: 207: config.ccw_limit_in_steps = _steps_from_degrees(config.ccw_limit);
 18850  00C1A0  C1B5  F091         	movff	_config+32,__steps_from_degrees@degrees
 18851  00C1A4  C1B6  F092         	movff	_config+33,__steps_from_degrees@degrees+1
 18852  00C1A8  C1B7  F093         	movff	_config+34,__steps_from_degrees@degrees+2
 18853  00C1AC  C1B8  F094         	movff	_config+35,__steps_from_degrees@degrees+3
 18854  00C1B0  EC26  F078         	call	__steps_from_degrees	;wreg free
 18855  00C1B4  C091  F1B9         	movff	?__steps_from_degrees,_config+36
 18856  00C1B8  C092  F1BA         	movff	?__steps_from_degrees+1,_config+37
 18857  00C1BC  C093  F1BB         	movff	?__steps_from_degrees+2,_config+38
 18858  00C1C0  C094  F1BC         	movff	?__steps_from_degrees+3,_config+39
 18859                           
 18860                           ;config_file.c: 208: return 16;;	Return value of __parse_item is never used
 18861  00C1C4  0012               	return	
 18862  00C1C6                     l3061:
 18863                           
 18864                           ;config_file.c: 209: };config_file.c: 211: if(stricmp(item_string, position_display_180_
      +                          string)==0)
 18865  00C1C6  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18866  00C1CA  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18867  00C1CE  0ED3               	movlw	low _position_display_180_string
 18868  00C1D0  0100               	movlb	0	; () banked
 18869  00C1D2  6F63               	movwf	stricmp@s2& (0+255),b
 18870  00C1D4  0EA1               	movlw	high _position_display_180_string
 18871  00C1D6  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18872  00C1D8  EC89  F0A5         	call	_stricmp	;wreg free
 18873  00C1DC  0100               	movlb	0	; () banked
 18874  00C1DE  5161               	movf	?_stricmp& (0+255),w,b
 18875  00C1E0  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18876  00C1E2  A4D8               	btfss	status,2,c
 18877  00C1E4  0012               	return	
 18878                           
 18879                           ; BSR set to: 0
 18880                           ;config_file.c: 212: {;config_file.c: 213: config.position_display_180 = atoi(value_stri
      +                          ng);
 18881  00C1E6  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18882  00C1EA  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18883  00C1EE  EC60  F093         	call	_atoi	;wreg free
 18884  00C1F2  0100               	movlb	0	; () banked
 18885  00C1F4  5166               	movf	?_atoi& (0+255),w,b
 18886  00C1F6  0101               	movlb	1	; () banked
 18887  00C1F8  6FBD               	movwf	(_config+40)& (0+255),b
 18888                           
 18889                           ; BSR set to: 1
 18890                           ;config_file.c: 214: return 17;;	Return value of __parse_item is never used
 18891  00C1FA  0012               	return	
 18892  00C1FC                     __end_of__parse_item:
 18893                           	opt stack 0
 18894                           tblptru	equ	0xFF8
 18895                           tblptrh	equ	0xFF7
 18896                           tblptrl	equ	0xFF6
 18897                           tablat	equ	0xFF5
 18898                           prodh	equ	0xFF4
 18899                           prodl	equ	0xFF3
 18900                           postinc0	equ	0xFEE
 18901                           wreg	equ	0xFE8
 18902                           postinc1	equ	0xFE6
 18903                           postdec1	equ	0xFE5
 18904                           plusw1	equ	0xFE3
 18905                           fsr1h	equ	0xFE2
 18906                           fsr1l	equ	0xFE1
 18907                           indf2	equ	0xFDF
 18908                           postinc2	equ	0xFDE
 18909                           postdec2	equ	0xFDD
 18910                           plusw2	equ	0xFDB
 18911                           fsr2h	equ	0xFDA
 18912                           fsr2l	equ	0xFD9
 18913                           status	equ	0xFD8
 18914                           
 18915 ;; *************** function _stricmp *****************
 18916 ;; Defined at:
 18917 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\stricmp.c"
 18918 ;; Parameters:    Size  Location     Type
 18919 ;;  s1              2    1[BANK0 ] PTR const unsigned char 
 18920 ;;		 -> configFile_read@item_string(31), 
 18921 ;;  s2              2    3[BANK0 ] PTR const unsigned char 
 18922 ;;		 -> position_display_180_string(21), ccw_limit_string(10), use_ccw_limit_string(14), cw_limit_string(9), 
 18923 ;;		 -> use_cw_limit_string(13), beep_duration_string(14), maximum_speed_manual_string(21), initial_speed_manual_string(
      +21), 
 18924 ;;		 -> maximum_speed_arc_string(18), initial_speed_arc_string(18), maximum_speed_string(14), minimum_speed_string(14), 
 18925 ;;		 -> overshoot_cost_in_steps_string(24), inverse_direction_string(18), overshoot_in_steps_string(19), full_circle_in_
      +steps_string(21), 
 18926 ;; Auto vars:     Size  Location     Type
 18927 ;;  r               1    6[BANK0 ] char 
 18928 ;; Return value:  Size  Location     Type
 18929 ;;                  2    1[BANK0 ] int 
 18930 ;; Registers used:
 18931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18932 ;; Tracked objects:
 18933 ;;		On entry : 0/0
 18934 ;;		On exit  : 0/0
 18935 ;;		Unchanged: 0/0
 18936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18937 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18938 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18939 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18940 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18941 ;;Total ram usage:        6 bytes
 18942 ;; Hardware stack levels used:    1
 18943 ;; Hardware stack levels required when called:   11
 18944 ;; This function calls:
 18945 ;;		_toupper
 18946 ;; This function is called by:
 18947 ;;		__parse_item
 18948 ;; This function uses a non-reentrant model
 18949 ;;
 18950                           
 18951                           	psect	text76
 18952  014B12                     __ptext76:
 18953                           	opt stack 0
 18954  014B12                     _stricmp:
 18955                           	opt stack 16
 18956                           
 18957                           ;incstack = 0
 18958  014B12  D005               	goto	l3826
 18959  014B14  0100               	movlb	0	; () banked
 18960  014B16  4B61               	infsnz	stricmp@s1& (0+255),f,b
 18961  014B18  2B62               	incf	(stricmp@s1+1)& (0+255),f,b
 18962  014B1A  4B63               	infsnz	stricmp@s2& (0+255),f,b
 18963  014B1C  2B64               	incf	(stricmp@s2+1)& (0+255),f,b
 18964  014B1E                     l3826:
 18965                           
 18966                           ; BSR set to: 0
 18967  014B1E  C063  FFF6         	movff	stricmp@s2,tblptrl
 18968  014B22  C064  FFF7         	movff	stricmp@s2+1,tblptrh
 18969  014B26                     	if	0	;tblptru may be non-zero
 18970  014B26                     	endif
 18971  014B26                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18972  014B26  0E00               	movlw	low (__mediumconst shr (0+16))
 18973  014B28  6EF8               	movwf	tblptru,c
 18974  014B2A                     	endif
 18975  014B2A  0008               	tblrd		*
 18976  014B2C  50F5               	movf	tablat,w,c
 18977  014B2E  EC27  F0AF         	call	_toupper
 18978  014B32  0800               	sublw	0
 18979  014B34  0100               	movlb	0	; () banked
 18980  014B36  6F65               	movwf	??_stricmp& (0+255),b
 18981  014B38  C061  FFD9         	movff	stricmp@s1,fsr2l
 18982  014B3C  C062  FFDA         	movff	stricmp@s1+1,fsr2h
 18983  014B40  50DF               	movf	indf2,w,c
 18984  014B42  EC27  F0AF         	call	_toupper
 18985  014B46  0100               	movlb	0	; () banked
 18986  014B48  2565               	addwf	??_stricmp& (0+255),w,b
 18987  014B4A  6F66               	movwf	stricmp@r& (0+255),b
 18988  014B4C  5166               	movf	stricmp@r& (0+255),w,b
 18989  014B4E  A4D8               	btfss	status,2,c
 18990  014B50  D007               	goto	u14360
 18991                           
 18992                           ; BSR set to: 0
 18993  014B52  C061  FFD9         	movff	stricmp@s1,fsr2l
 18994  014B56  C062  FFDA         	movff	stricmp@s1+1,fsr2h
 18995  014B5A  50DF               	movf	indf2,w,c
 18996  014B5C  A4D8               	btfss	status,2,c
 18997  014B5E  D7DA               	goto	l3827
 18998  014B60                     u14360:
 18999                           
 19000                           ; BSR set to: 0
 19001                           
 19002                           ; BSR set to: 0
 19003                           
 19004                           ; BSR set to: 0
 19005  014B60  5166               	movf	stricmp@r& (0+255),w,b
 19006  014B62  6F61               	movwf	?_stricmp& (0+255),b
 19007  014B64  6B62               	clrf	(?_stricmp+1)& (0+255),b
 19008  014B66  BF61               	btfsc	?_stricmp& (0+255),7,b
 19009  014B68  0762               	decf	(?_stricmp+1)& (0+255),f,b
 19010  014B6A  0012               	return	
 19011  014B6C                     __end_of_stricmp:
 19012                           	opt stack 0
 19013                           tblptru	equ	0xFF8
 19014                           tblptrh	equ	0xFF7
 19015                           tblptrl	equ	0xFF6
 19016                           tablat	equ	0xFF5
 19017                           prodh	equ	0xFF4
 19018                           prodl	equ	0xFF3
 19019                           postinc0	equ	0xFEE
 19020                           wreg	equ	0xFE8
 19021                           postinc1	equ	0xFE6
 19022                           postdec1	equ	0xFE5
 19023                           plusw1	equ	0xFE3
 19024                           fsr1h	equ	0xFE2
 19025                           fsr1l	equ	0xFE1
 19026                           indf2	equ	0xFDF
 19027                           postinc2	equ	0xFDE
 19028                           postdec2	equ	0xFDD
 19029                           plusw2	equ	0xFDB
 19030                           fsr2h	equ	0xFDA
 19031                           fsr2l	equ	0xFD9
 19032                           status	equ	0xFD8
 19033                           
 19034 ;; *************** function _toupper *****************
 19035 ;; Defined at:
 19036 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\toupper.c"
 19037 ;; Parameters:    Size  Location     Type
 19038 ;;  c               1    wreg     unsigned char 
 19039 ;; Auto vars:     Size  Location     Type
 19040 ;;  c               1    0[BANK0 ] unsigned char 
 19041 ;; Return value:  Size  Location     Type
 19042 ;;                  1    wreg      unsigned char 
 19043 ;; Registers used:
 19044 ;;		wreg, status,2, status,0
 19045 ;; Tracked objects:
 19046 ;;		On entry : 0/0
 19047 ;;		On exit  : 0/0
 19048 ;;		Unchanged: 0/0
 19049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19051 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19053 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19054 ;;Total ram usage:        1 bytes
 19055 ;; Hardware stack levels used:    1
 19056 ;; Hardware stack levels required when called:   10
 19057 ;; This function calls:
 19058 ;;		Nothing
 19059 ;; This function is called by:
 19060 ;;		_stricmp
 19061 ;; This function uses a non-reentrant model
 19062 ;;
 19063                           
 19064                           	psect	text77
 19065  015E4E                     __ptext77:
 19066                           	opt stack 0
 19067  015E4E                     _toupper:
 19068                           	opt stack 16
 19069                           
 19070                           ; BSR set to: 0
 19071                           ;incstack = 0
 19072                           ;toupper@c stored from wreg
 19073  015E4E  0100               	movlb	0	; () banked
 19074  015E50  6F60               	movwf	toupper@c& (0+255),b
 19075  015E52  0E7B               	movlw	123
 19076  015E54  0100               	movlb	0	; () banked
 19077  015E56  6160               	cpfslt	toupper@c& (0+255),b
 19078  015E58  D004               	goto	l3849
 19079                           
 19080                           ; BSR set to: 0
 19081  015E5A  0E60               	movlw	96
 19082  015E5C  6560               	cpfsgt	toupper@c& (0+255),b
 19083  015E5E  D001               	goto	l3849
 19084                           
 19085                           ; BSR set to: 0
 19086  015E60  9B60               	bcf	toupper@c& (0+255),5,b
 19087  015E62                     l3849:
 19088                           
 19089                           ; BSR set to: 0
 19090                           
 19091                           ; BSR set to: 0
 19092  015E62  5160               	movf	toupper@c& (0+255),w,b
 19093  015E64  0012               	return	
 19094  015E66                     __end_of_toupper:
 19095                           	opt stack 0
 19096                           tblptru	equ	0xFF8
 19097                           tblptrh	equ	0xFF7
 19098                           tblptrl	equ	0xFF6
 19099                           tablat	equ	0xFF5
 19100                           prodh	equ	0xFF4
 19101                           prodl	equ	0xFF3
 19102                           postinc0	equ	0xFEE
 19103                           wreg	equ	0xFE8
 19104                           postinc1	equ	0xFE6
 19105                           postdec1	equ	0xFE5
 19106                           plusw1	equ	0xFE3
 19107                           fsr1h	equ	0xFE2
 19108                           fsr1l	equ	0xFE1
 19109                           indf2	equ	0xFDF
 19110                           postinc2	equ	0xFDE
 19111                           postdec2	equ	0xFDD
 19112                           plusw2	equ	0xFDB
 19113                           fsr2h	equ	0xFDA
 19114                           fsr2l	equ	0xFD9
 19115                           status	equ	0xFD8
 19116                           
 19117 ;; *************** function _atol *****************
 19118 ;; Defined at:
 19119 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\atol.c"
 19120 ;; Parameters:    Size  Location     Type
 19121 ;;  s               2   12[BANK0 ] PTR const unsigned char 
 19122 ;;		 -> configFile_read@value_string(12), 
 19123 ;; Auto vars:     Size  Location     Type
 19124 ;;  a               4   21[BANK0 ] long 
 19125 ;;  c               1   25[BANK0 ] unsigned char 
 19126 ;;  sign            1   20[BANK0 ] unsigned char 
 19127 ;; Return value:  Size  Location     Type
 19128 ;;                  4   12[BANK0 ] long 
 19129 ;; Registers used:
 19130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19131 ;; Tracked objects:
 19132 ;;		On entry : 0/0
 19133 ;;		On exit  : 0/0
 19134 ;;		Unchanged: 0/0
 19135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19136 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19137 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19138 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19139 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19140 ;;Total ram usage:       14 bytes
 19141 ;; Hardware stack levels used:    1
 19142 ;; Hardware stack levels required when called:   11
 19143 ;; This function calls:
 19144 ;;		___lmul
 19145 ;;		_isdigit
 19146 ;; This function is called by:
 19147 ;;		__parse_item
 19148 ;; This function uses a non-reentrant model
 19149 ;;
 19150                           
 19151                           	psect	text78
 19152  011918                     __ptext78:
 19153                           	opt stack 0
 19154  011918                     _atol:
 19155                           	opt stack 16
 19156                           
 19157                           ; BSR set to: 0
 19158                           ;incstack = 0
 19159  011918  C06C  FFD9         	movff	atol@s,fsr2l
 19160  01191C  C06D  FFDA         	movff	atol@s+1,fsr2h
 19161  011920  50DF               	movf	indf2,w,c
 19162  011922  0100               	movlb	0	; () banked
 19163  011924  6F79               	movwf	atol@c& (0+255),b
 19164                           
 19165                           ; BSR set to: 0
 19166  011926  4B6C               	infsnz	atol@s& (0+255),f,b
 19167  011928  2B6D               	incf	(atol@s+1)& (0+255),f,b
 19168                           
 19169                           ; BSR set to: 0
 19170  01192A  0E20               	movlw	32
 19171  01192C  1979               	xorwf	atol@c& (0+255),w,b
 19172  01192E  B4D8               	btfsc	status,2,c
 19173  011930  D7F3               	goto	_atol
 19174                           
 19175                           ; BSR set to: 0
 19176  011932  0E09               	movlw	9
 19177  011934  1979               	xorwf	atol@c& (0+255),w,b
 19178  011936  B4D8               	btfsc	status,2,c
 19179  011938  D7EF               	goto	_atol
 19180                           
 19181                           ; BSR set to: 0
 19182                           
 19183                           ; BSR set to: 0
 19184  01193A  0E00               	movlw	0
 19185  01193C  6F75               	movwf	atol@a& (0+255),b
 19186  01193E  0E00               	movlw	0
 19187  011940  6F76               	movwf	(atol@a+1)& (0+255),b
 19188  011942  0E00               	movlw	0
 19189  011944  6F77               	movwf	(atol@a+2)& (0+255),b
 19190  011946  0E00               	movlw	0
 19191  011948  6F78               	movwf	(atol@a+3)& (0+255),b
 19192  01194A  0E00               	movlw	0
 19193  01194C  6F74               	movwf	atol@sign& (0+255),b
 19194                           
 19195                           ; BSR set to: 0
 19196  01194E  0E2D               	movlw	45
 19197  011950  1979               	xorwf	atol@c& (0+255),w,b
 19198  011952  A4D8               	btfss	status,2,c
 19199  011954  D002               	goto	l3769
 19200                           
 19201                           ; BSR set to: 0
 19202  011956  2B74               	incf	atol@sign& (0+255),f,b
 19203  011958  D029               	goto	L87
 19204  01195A                     l3769:
 19205                           
 19206                           ; BSR set to: 0
 19207                           
 19208                           ; BSR set to: 0
 19209  01195A  0E2B               	movlw	43
 19210  01195C  1979               	xorwf	atol@c& (0+255),w,b
 19211  01195E  A4D8               	btfss	status,2,c
 19212  011960  D02D               	goto	l3772
 19213  011962  D024               	goto	L87
 19214  011964                     
 19215                           ; BSR set to: 0
 19216  011964  C075  F060         	movff	atol@a,___lmul@multiplier
 19217  011968  C076  F061         	movff	atol@a+1,___lmul@multiplier+1
 19218  01196C  C077  F062         	movff	atol@a+2,___lmul@multiplier+2
 19219  011970  C078  F063         	movff	atol@a+3,___lmul@multiplier+3
 19220  011974  0E0A               	movlw	10
 19221  011976  0100               	movlb	0	; () banked
 19222  011978  6F64               	movwf	___lmul@multiplicand& (0+255),b
 19223  01197A  0E00               	movlw	0
 19224  01197C  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 19225  01197E  0E00               	movlw	0
 19226  011980  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 19227  011982  0E00               	movlw	0
 19228  011984  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 19229  011986  ECC1  F0A6         	call	___lmul	;wreg free
 19230  01198A  C079  F070         	movff	atol@c,??_atol
 19231  01198E  0ED0               	movlw	208
 19232  011990  0100               	movlb	0	; () banked
 19233  011992  2770               	addwf	??_atol& (0+255),f,b
 19234  011994  5170               	movf	??_atol& (0+255),w,b
 19235  011996  2560               	addwf	?___lmul& (0+255),w,b
 19236  011998  6F75               	movwf	atol@a& (0+255),b
 19237  01199A  0E00               	movlw	0
 19238  01199C  2161               	addwfc	(?___lmul+1)& (0+255),w,b
 19239  01199E  6F76               	movwf	(atol@a+1)& (0+255),b
 19240  0119A0  0E00               	movlw	0
 19241  0119A2  2162               	addwfc	(?___lmul+2)& (0+255),w,b
 19242  0119A4  6F77               	movwf	(atol@a+2)& (0+255),b
 19243  0119A6  0E00               	movlw	0
 19244  0119A8  2163               	addwfc	(?___lmul+3)& (0+255),w,b
 19245  0119AA  6F78               	movwf	(atol@a+3)& (0+255),b
 19246  0119AC                     L87:
 19247                           
 19248                           ; BSR set to: 0
 19249  0119AC  C06C  FFD9         	movff	atol@s,fsr2l
 19250  0119B0  C06D  FFDA         	movff	atol@s+1,fsr2h
 19251  0119B4  50DF               	movf	indf2,w,c
 19252  0119B6  6F79               	movwf	atol@c& (0+255),b
 19253                           
 19254                           ; BSR set to: 0
 19255  0119B8  4B6C               	infsnz	atol@s& (0+255),f,b
 19256  0119BA  2B6D               	incf	(atol@s+1)& (0+255),f,b
 19257  0119BC                     l3772:
 19258                           
 19259                           ; BSR set to: 0
 19260                           
 19261                           ; BSR set to: 0
 19262  0119BC  5179               	movf	atol@c& (0+255),w,b
 19263  0119BE  EC93  F0AE         	call	_isdigit
 19264  0119C2  B0D8               	btfsc	status,0,c
 19265  0119C4  D7CF               	goto	l3773
 19266  0119C6  0100               	movlb	0	; () banked
 19267  0119C8  5174               	movf	atol@sign& (0+255),w,b
 19268  0119CA  B4D8               	btfsc	status,2,c
 19269  0119CC  D01A               	goto	l3775
 19270                           
 19271                           ; BSR set to: 0
 19272  0119CE  C075  F070         	movff	atol@a,??_atol
 19273  0119D2  C076  F071         	movff	atol@a+1,??_atol+1
 19274  0119D6  C077  F072         	movff	atol@a+2,??_atol+2
 19275  0119DA  C078  F073         	movff	atol@a+3,??_atol+3
 19276  0119DE  1F70               	comf	??_atol& (0+255),f,b
 19277  0119E0  1F71               	comf	(??_atol+1)& (0+255),f,b
 19278  0119E2  1F72               	comf	(??_atol+2)& (0+255),f,b
 19279  0119E4  1F73               	comf	(??_atol+3)& (0+255),f,b
 19280  0119E6  2B70               	incf	??_atol& (0+255),f,b
 19281  0119E8  0E00               	movlw	0
 19282  0119EA  2371               	addwfc	(??_atol+1)& (0+255),f,b
 19283  0119EC  2372               	addwfc	(??_atol+2)& (0+255),f,b
 19284  0119EE  2373               	addwfc	(??_atol+3)& (0+255),f,b
 19285  0119F0  C070  F06C         	movff	??_atol,?_atol
 19286  0119F4  C071  F06D         	movff	??_atol+1,?_atol+1
 19287  0119F8  C072  F06E         	movff	??_atol+2,?_atol+2
 19288  0119FC  C073  F06F         	movff	??_atol+3,?_atol+3
 19289                           
 19290                           ; BSR set to: 0
 19291  011A00  0012               	return	
 19292  011A02                     l3775:
 19293                           
 19294                           ; BSR set to: 0
 19295  011A02  C075  F06C         	movff	atol@a,?_atol
 19296  011A06  C076  F06D         	movff	atol@a+1,?_atol+1
 19297  011A0A  C077  F06E         	movff	atol@a+2,?_atol+2
 19298  011A0E  C078  F06F         	movff	atol@a+3,?_atol+3
 19299                           
 19300                           ; BSR set to: 0
 19301  011A12  0012               	return		;funcret
 19302  011A14                     __end_of_atol:
 19303                           	opt stack 0
 19304                           tblptru	equ	0xFF8
 19305                           tblptrh	equ	0xFF7
 19306                           tblptrl	equ	0xFF6
 19307                           tablat	equ	0xFF5
 19308                           prodh	equ	0xFF4
 19309                           prodl	equ	0xFF3
 19310                           postinc0	equ	0xFEE
 19311                           wreg	equ	0xFE8
 19312                           postinc1	equ	0xFE6
 19313                           postdec1	equ	0xFE5
 19314                           plusw1	equ	0xFE3
 19315                           fsr1h	equ	0xFE2
 19316                           fsr1l	equ	0xFE1
 19317                           indf2	equ	0xFDF
 19318                           postinc2	equ	0xFDE
 19319                           postdec2	equ	0xFDD
 19320                           plusw2	equ	0xFDB
 19321                           fsr2h	equ	0xFDA
 19322                           fsr2l	equ	0xFD9
 19323                           status	equ	0xFD8
 19324                           
 19325 ;; *************** function _atoi *****************
 19326 ;; Defined at:
 19327 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\atoi.c"
 19328 ;; Parameters:    Size  Location     Type
 19329 ;;  s               2    6[BANK0 ] PTR const unsigned char 
 19330 ;;		 -> configFile_read@value_string(12), 
 19331 ;; Auto vars:     Size  Location     Type
 19332 ;;  a               2   11[BANK0 ] int 
 19333 ;;  sign            1   10[BANK0 ] unsigned char 
 19334 ;; Return value:  Size  Location     Type
 19335 ;;                  2    6[BANK0 ] int 
 19336 ;; Registers used:
 19337 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19338 ;; Tracked objects:
 19339 ;;		On entry : 0/0
 19340 ;;		On exit  : 0/0
 19341 ;;		Unchanged: 0/0
 19342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19343 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19344 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19345 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19346 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19347 ;;Total ram usage:        7 bytes
 19348 ;; Hardware stack levels used:    1
 19349 ;; Hardware stack levels required when called:   11
 19350 ;; This function calls:
 19351 ;;		___wmul
 19352 ;;		_isdigit
 19353 ;; This function is called by:
 19354 ;;		__parse_item
 19355 ;; This function uses a non-reentrant model
 19356 ;;
 19357                           
 19358                           	psect	text79
 19359  0126C0                     __ptext79:
 19360                           	opt stack 0
 19361  0126C0                     _atoi:
 19362                           	opt stack 16
 19363                           
 19364                           ; BSR set to: 0
 19365                           ;incstack = 0
 19366  0126C0  D003               	goto	l3752
 19367  0126C2  0100               	movlb	0	; () banked
 19368  0126C4  4B66               	infsnz	atoi@s& (0+255),f,b
 19369  0126C6  2B67               	incf	(atoi@s+1)& (0+255),f,b
 19370  0126C8                     l3752:
 19371                           
 19372                           ; BSR set to: 0
 19373  0126C8  C066  FFD9         	movff	atoi@s,fsr2l
 19374  0126CC  C067  FFDA         	movff	atoi@s+1,fsr2h
 19375  0126D0  0E20               	movlw	32
 19376  0126D2  18DE               	xorwf	postinc2,w,c
 19377  0126D4  B4D8               	btfsc	status,2,c
 19378  0126D6  D7F5               	goto	l3753
 19379  0126D8  C066  FFD9         	movff	atoi@s,fsr2l
 19380  0126DC  C067  FFDA         	movff	atoi@s+1,fsr2h
 19381  0126E0  0E09               	movlw	9
 19382  0126E2  18DE               	xorwf	postinc2,w,c
 19383  0126E4  B4D8               	btfsc	status,2,c
 19384  0126E6  D7ED               	goto	l3753
 19385  0126E8  0E00               	movlw	0
 19386  0126EA  0100               	movlb	0	; () banked
 19387  0126EC  6F6C               	movwf	(atoi@a+1)& (0+255),b
 19388  0126EE  0E00               	movlw	0
 19389  0126F0  6F6B               	movwf	atoi@a& (0+255),b
 19390  0126F2  0E00               	movlw	0
 19391  0126F4  6F6A               	movwf	atoi@sign& (0+255),b
 19392                           
 19393                           ; BSR set to: 0
 19394  0126F6  C066  FFD9         	movff	atoi@s,fsr2l
 19395  0126FA  C067  FFDA         	movff	atoi@s+1,fsr2h
 19396  0126FE  0E2D               	movlw	45
 19397  012700  18DE               	xorwf	postinc2,w,c
 19398  012702  A4D8               	btfss	status,2,c
 19399  012704  D002               	goto	l3755
 19400                           
 19401                           ; BSR set to: 0
 19402  012706  2B6A               	incf	atoi@sign& (0+255),f,b
 19403  012708  D026               	goto	l15626
 19404  01270A                     l3755:
 19405                           
 19406                           ; BSR set to: 0
 19407                           
 19408                           ; BSR set to: 0
 19409  01270A  C066  FFD9         	movff	atoi@s,fsr2l
 19410  01270E  C067  FFDA         	movff	atoi@s+1,fsr2h
 19411  012712  0E2B               	movlw	43
 19412  012714  18DE               	xorwf	postinc2,w,c
 19413  012716  A4D8               	btfss	status,2,c
 19414  012718  D020               	goto	l3758
 19415  01271A  D01D               	goto	l15626
 19416  01271C                     
 19417                           ; BSR set to: 0
 19418  01271C  C06B  F060         	movff	atoi@a,___wmul@multiplier
 19419  012720  C06C  F061         	movff	atoi@a+1,___wmul@multiplier+1
 19420  012724  0E00               	movlw	0
 19421  012726  0100               	movlb	0	; () banked
 19422  012728  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19423  01272A  0E0A               	movlw	10
 19424  01272C  6F62               	movwf	___wmul@multiplicand& (0+255),b
 19425  01272E  ECFE  F0AD         	call	___wmul	;wreg free
 19426  012732  C066  FFD9         	movff	atoi@s,fsr2l
 19427  012736  C067  FFDA         	movff	atoi@s+1,fsr2h
 19428  01273A  50DF               	movf	indf2,w,c
 19429  01273C  0100               	movlb	0	; () banked
 19430  01273E  6F68               	movwf	??_atoi& (0+255),b
 19431  012740  6B69               	clrf	(??_atoi+1)& (0+255),b
 19432  012742  5160               	movf	?___wmul& (0+255),w,b
 19433  012744  2768               	addwf	??_atoi& (0+255),f,b
 19434  012746  5161               	movf	(?___wmul+1)& (0+255),w,b
 19435  012748  2369               	addwfc	(??_atoi+1)& (0+255),f,b
 19436  01274A  0ED0               	movlw	208
 19437  01274C  2568               	addwf	??_atoi& (0+255),w,b
 19438  01274E  6F6B               	movwf	atoi@a& (0+255),b
 19439  012750  0EFF               	movlw	255
 19440  012752  2169               	addwfc	(??_atoi+1)& (0+255),w,b
 19441  012754  6F6C               	movwf	(atoi@a+1)& (0+255),b
 19442  012756                     l15626:
 19443                           
 19444                           ; BSR set to: 0
 19445  012756  4B66               	infsnz	atoi@s& (0+255),f,b
 19446  012758  2B67               	incf	(atoi@s+1)& (0+255),f,b
 19447  01275A                     l3758:
 19448                           
 19449                           ; BSR set to: 0
 19450                           
 19451                           ; BSR set to: 0
 19452  01275A  C066  FFD9         	movff	atoi@s,fsr2l
 19453  01275E  C067  FFDA         	movff	atoi@s+1,fsr2h
 19454  012762  50DF               	movf	indf2,w,c
 19455  012764  EC93  F0AE         	call	_isdigit
 19456  012768  B0D8               	btfsc	status,0,c
 19457  01276A  D7D8               	goto	l3759
 19458  01276C  0100               	movlb	0	; () banked
 19459  01276E  516A               	movf	atoi@sign& (0+255),w,b
 19460  012770  B4D8               	btfsc	status,2,c
 19461  012772  D00D               	goto	l3761
 19462                           
 19463                           ; BSR set to: 0
 19464  012774  C06B  F068         	movff	atoi@a,??_atoi
 19465  012778  C06C  F069         	movff	atoi@a+1,??_atoi+1
 19466  01277C  1F68               	comf	??_atoi& (0+255),f,b
 19467  01277E  1F69               	comf	(??_atoi+1)& (0+255),f,b
 19468  012780  4B68               	infsnz	??_atoi& (0+255),f,b
 19469  012782  2B69               	incf	(??_atoi+1)& (0+255),f,b
 19470  012784  C068  F066         	movff	??_atoi,?_atoi
 19471  012788  C069  F067         	movff	??_atoi+1,?_atoi+1
 19472  01278C  0012               	return	
 19473  01278E                     l3761:
 19474                           
 19475                           ; BSR set to: 0
 19476  01278E  C06B  F066         	movff	atoi@a,?_atoi
 19477  012792  C06C  F067         	movff	atoi@a+1,?_atoi+1
 19478                           
 19479                           ; BSR set to: 0
 19480  012796  0012               	return		;funcret
 19481  012798                     __end_of_atoi:
 19482                           	opt stack 0
 19483                           tblptru	equ	0xFF8
 19484                           tblptrh	equ	0xFF7
 19485                           tblptrl	equ	0xFF6
 19486                           tablat	equ	0xFF5
 19487                           prodh	equ	0xFF4
 19488                           prodl	equ	0xFF3
 19489                           postinc0	equ	0xFEE
 19490                           wreg	equ	0xFE8
 19491                           postinc1	equ	0xFE6
 19492                           postdec1	equ	0xFE5
 19493                           plusw1	equ	0xFE3
 19494                           fsr1h	equ	0xFE2
 19495                           fsr1l	equ	0xFE1
 19496                           indf2	equ	0xFDF
 19497                           postinc2	equ	0xFDE
 19498                           postdec2	equ	0xFDD
 19499                           plusw2	equ	0xFDB
 19500                           fsr2h	equ	0xFDA
 19501                           fsr2l	equ	0xFD9
 19502                           status	equ	0xFD8
 19503                           
 19504 ;; *************** function _isdigit *****************
 19505 ;; Defined at:
 19506 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\isdigit.c"
 19507 ;; Parameters:    Size  Location     Type
 19508 ;;  c               1    wreg     unsigned char 
 19509 ;; Auto vars:     Size  Location     Type
 19510 ;;  c               1    2[BANK0 ] unsigned char 
 19511 ;; Return value:  Size  Location     Type
 19512 ;;		None               void
 19513 ;; Registers used:
 19514 ;;		wreg, status,2, status,0
 19515 ;; Tracked objects:
 19516 ;;		On entry : 0/0
 19517 ;;		On exit  : 0/0
 19518 ;;		Unchanged: 0/0
 19519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19521 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19522 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19523 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19524 ;;Total ram usage:        3 bytes
 19525 ;; Hardware stack levels used:    1
 19526 ;; Hardware stack levels required when called:   10
 19527 ;; This function calls:
 19528 ;;		Nothing
 19529 ;; This function is called by:
 19530 ;;		_atoi
 19531 ;;		_atol
 19532 ;; This function uses a non-reentrant model
 19533 ;;
 19534                           
 19535                           	psect	text80
 19536  015D26                     __ptext80:
 19537                           	opt stack 0
 19538  015D26                     _isdigit:
 19539                           	opt stack 16
 19540                           
 19541                           ; BSR set to: 0
 19542                           ;incstack = 0
 19543                           ;isdigit@c stored from wreg
 19544  015D26  0100               	movlb	0	; () banked
 19545  015D28  6F62               	movwf	isdigit@c& (0+255),b
 19546  015D2A  0E00               	movlw	0
 19547  015D2C  0100               	movlb	0	; () banked
 19548  015D2E  6F61               	movwf	_isdigit$8441& (0+255),b
 19549                           
 19550                           ; BSR set to: 0
 19551  015D30  0E3A               	movlw	58
 19552  015D32  6162               	cpfslt	isdigit@c& (0+255),b
 19553  015D34  D005               	goto	l3780
 19554                           
 19555                           ; BSR set to: 0
 19556  015D36  0E2F               	movlw	47
 19557  015D38  6562               	cpfsgt	isdigit@c& (0+255),b
 19558  015D3A  D002               	goto	l3780
 19559                           
 19560                           ; BSR set to: 0
 19561  015D3C  0E01               	movlw	1
 19562  015D3E  6F61               	movwf	_isdigit$8441& (0+255),b
 19563  015D40                     l3780:
 19564                           
 19565                           ; BSR set to: 0
 19566                           
 19567                           ; BSR set to: 0
 19568  015D40  C061  F060         	movff	_isdigit$8441,??_isdigit
 19569  015D44  3160               	rrcf	??_isdigit& (0+255),w,b
 19570  015D46  0012               	return	
 19571  015D48                     __end_of_isdigit:
 19572                           	opt stack 0
 19573                           tblptru	equ	0xFF8
 19574                           tblptrh	equ	0xFF7
 19575                           tblptrl	equ	0xFF6
 19576                           tablat	equ	0xFF5
 19577                           prodh	equ	0xFF4
 19578                           prodl	equ	0xFF3
 19579                           postinc0	equ	0xFEE
 19580                           wreg	equ	0xFE8
 19581                           postinc1	equ	0xFE6
 19582                           postdec1	equ	0xFE5
 19583                           plusw1	equ	0xFE3
 19584                           fsr1h	equ	0xFE2
 19585                           fsr1l	equ	0xFE1
 19586                           indf2	equ	0xFDF
 19587                           postinc2	equ	0xFDE
 19588                           postdec2	equ	0xFDD
 19589                           plusw2	equ	0xFDB
 19590                           fsr2h	equ	0xFDA
 19591                           fsr2l	equ	0xFD9
 19592                           status	equ	0xFD8
 19593                           
 19594 ;; *************** function ___wmul *****************
 19595 ;; Defined at:
 19596 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
 19597 ;; Parameters:    Size  Location     Type
 19598 ;;  multiplier      2    0[BANK0 ] unsigned int 
 19599 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 19600 ;; Auto vars:     Size  Location     Type
 19601 ;;  product         2    4[BANK0 ] unsigned int 
 19602 ;; Return value:  Size  Location     Type
 19603 ;;                  2    0[BANK0 ] unsigned int 
 19604 ;; Registers used:
 19605 ;;		wreg, status,2, status,0, prodl, prodh
 19606 ;; Tracked objects:
 19607 ;;		On entry : 0/0
 19608 ;;		On exit  : 0/0
 19609 ;;		Unchanged: 0/0
 19610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19611 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19612 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19614 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19615 ;;Total ram usage:        6 bytes
 19616 ;; Hardware stack levels used:    1
 19617 ;; Hardware stack levels required when called:   10
 19618 ;; This function calls:
 19619 ;;		Nothing
 19620 ;; This function is called by:
 19621 ;;		_atoi
 19622 ;; This function uses a non-reentrant model
 19623 ;;
 19624                           
 19625                           	psect	text81
 19626  015BFC                     __ptext81:
 19627                           	opt stack 0
 19628  015BFC                     ___wmul:
 19629                           	opt stack 16
 19630                           
 19631                           ; BSR set to: 0
 19632                           ;incstack = 0
 19633  015BFC  0100               	movlb	0	; () banked
 19634  015BFE  5160               	movf	___wmul@multiplier& (0+255),w,b
 19635  015C00  0362               	mulwf	___wmul@multiplicand& (0+255),b
 19636  015C02  CFF3 F064          	movff	prodl,___wmul@product
 19637  015C06  CFF4 F065          	movff	prodh,___wmul@product+1
 19638  015C0A  5160               	movf	___wmul@multiplier& (0+255),w,b
 19639  015C0C  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 19640  015C0E  50F3               	movf	prodl,w,c
 19641  015C10  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 19642  015C12  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 19643  015C14  0362               	mulwf	___wmul@multiplicand& (0+255),b
 19644  015C16  50F3               	movf	prodl,w,c
 19645  015C18  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 19646                           
 19647                           ; BSR set to: 0
 19648  015C1A  C064  F060         	movff	___wmul@product,?___wmul
 19649  015C1E  C065  F061         	movff	___wmul@product+1,?___wmul+1
 19650  015C22  0012               	return	
 19651  015C24                     __end_of___wmul:
 19652                           	opt stack 0
 19653                           tblptru	equ	0xFF8
 19654                           tblptrh	equ	0xFF7
 19655                           tblptrl	equ	0xFF6
 19656                           tablat	equ	0xFF5
 19657                           prodh	equ	0xFF4
 19658                           prodl	equ	0xFF3
 19659                           postinc0	equ	0xFEE
 19660                           wreg	equ	0xFE8
 19661                           postinc1	equ	0xFE6
 19662                           postdec1	equ	0xFE5
 19663                           plusw1	equ	0xFE3
 19664                           fsr1h	equ	0xFE2
 19665                           fsr1l	equ	0xFE1
 19666                           indf2	equ	0xFDF
 19667                           postinc2	equ	0xFDE
 19668                           postdec2	equ	0xFDD
 19669                           plusw2	equ	0xFDB
 19670                           fsr2h	equ	0xFDA
 19671                           fsr2l	equ	0xFD9
 19672                           status	equ	0xFD8
 19673                           
 19674 ;; *************** function __steps_from_degrees *****************
 19675 ;; Defined at:
 19676 ;;		line 220 in file "config_file.c"
 19677 ;; Parameters:    Size  Location     Type
 19678 ;;  degrees         4   49[BANK0 ] long 
 19679 ;; Auto vars:     Size  Location     Type
 19680 ;;  temp            4   53[BANK0 ] long 
 19681 ;; Return value:  Size  Location     Type
 19682 ;;                  4   49[BANK0 ] long 
 19683 ;; Registers used:
 19684 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 19685 ;; Tracked objects:
 19686 ;;		On entry : 0/0
 19687 ;;		On exit  : 0/0
 19688 ;;		Unchanged: 0/0
 19689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19690 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19691 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19693 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19694 ;;Total ram usage:        8 bytes
 19695 ;; Hardware stack levels used:    1
 19696 ;; Hardware stack levels required when called:   11
 19697 ;; This function calls:
 19698 ;;		___fldiv
 19699 ;;		___flge
 19700 ;;		___flmul
 19701 ;;		___fltol
 19702 ;;		___xxtofl
 19703 ;; This function is called by:
 19704 ;;		__parse_item
 19705 ;; This function uses a non-reentrant model
 19706 ;;
 19707                           
 19708                           	psect	text82
 19709  00F04C                     __ptext82:
 19710                           	opt stack 0
 19711  00F04C                     __steps_from_degrees:
 19712                           	opt stack 16
 19713                           
 19714                           ;config_file.c: 222: double temp;;config_file.c: 225: if(degrees==0)
 19715                           
 19716                           ; BSR set to: 0
 19717                           ;incstack = 0
 19718  00F04C  0100               	movlb	0	; () banked
 19719  00F04E  5191               	movf	__steps_from_degrees@degrees& (0+255),w,b
 19720  00F050  1192               	iorwf	(__steps_from_degrees@degrees+1)& (0+255),w,b
 19721  00F052  1193               	iorwf	(__steps_from_degrees@degrees+2)& (0+255),w,b
 19722  00F054  1194               	iorwf	(__steps_from_degrees@degrees+3)& (0+255),w,b
 19723  00F056  A4D8               	btfss	status,2,c
 19724  00F058  D009               	goto	l3065
 19725                           
 19726                           ; BSR set to: 0
 19727                           ;config_file.c: 226: {;config_file.c: 227: return 0;
 19728  00F05A  0E00               	movlw	0
 19729  00F05C  6F91               	movwf	?__steps_from_degrees& (0+255),b
 19730  00F05E  0E00               	movlw	0
 19731  00F060  6F92               	movwf	(?__steps_from_degrees+1)& (0+255),b
 19732  00F062  0E00               	movlw	0
 19733  00F064  6F93               	movwf	(?__steps_from_degrees+2)& (0+255),b
 19734  00F066  0E00               	movlw	0
 19735  00F068  6F94               	movwf	(?__steps_from_degrees+3)& (0+255),b
 19736                           
 19737                           ; BSR set to: 0
 19738  00F06A  0012               	return	
 19739  00F06C                     l3065:
 19740                           
 19741                           ; BSR set to: 0
 19742                           ;config_file.c: 228: };config_file.c: 231: temp = (float) degrees;
 19743                           
 19744                           ; BSR set to: 0
 19745  00F06C  C091  F06A         	movff	__steps_from_degrees@degrees,___xxtofl@val
 19746  00F070  C092  F06B         	movff	__steps_from_degrees@degrees+1,___xxtofl@val+1
 19747  00F074  C093  F06C         	movff	__steps_from_degrees@degrees+2,___xxtofl@val+2
 19748  00F078  C094  F06D         	movff	__steps_from_degrees@degrees+3,___xxtofl@val+3
 19749  00F07C  0E01               	movlw	1
 19750  00F07E  EC7A  F081         	call	___xxtofl
 19751  00F082  C06A  F095         	movff	?___xxtofl,__steps_from_degrees@temp
 19752  00F086  C06B  F096         	movff	?___xxtofl+1,__steps_from_degrees@temp+1
 19753  00F08A  C06C  F097         	movff	?___xxtofl+2,__steps_from_degrees@temp+2
 19754  00F08E  C06D  F098         	movff	?___xxtofl+3,__steps_from_degrees@temp+3
 19755                           
 19756                           ;config_file.c: 234: temp *= (float) config.full_circle_in_steps;
 19757  00F092  C095  F078         	movff	__steps_from_degrees@temp,___flmul@b
 19758  00F096  C096  F079         	movff	__steps_from_degrees@temp+1,___flmul@b+1
 19759  00F09A  C097  F07A         	movff	__steps_from_degrees@temp+2,___flmul@b+2
 19760  00F09E  C098  F07B         	movff	__steps_from_degrees@temp+3,___flmul@b+3
 19761  00F0A2  C195  F06A         	movff	_config,___xxtofl@val
 19762  00F0A6  C196  F06B         	movff	_config+1,___xxtofl@val+1
 19763  00F0AA  C197  F06C         	movff	_config+2,___xxtofl@val+2
 19764  00F0AE  C198  F06D         	movff	_config+3,___xxtofl@val+3
 19765  00F0B2  0E00               	movlw	0
 19766  00F0B4  EC7A  F081         	call	___xxtofl
 19767  00F0B8  C06A  F07C         	movff	?___xxtofl,___flmul@a
 19768  00F0BC  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 19769  00F0C0  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 19770  00F0C4  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 19771  00F0C8  ECED  F064         	call	___flmul	;wreg free
 19772  00F0CC  C078  F095         	movff	?___flmul,__steps_from_degrees@temp
 19773  00F0D0  C079  F096         	movff	?___flmul+1,__steps_from_degrees@temp+1
 19774  00F0D4  C07A  F097         	movff	?___flmul+2,__steps_from_degrees@temp+2
 19775  00F0D8  C07B  F098         	movff	?___flmul+3,__steps_from_degrees@temp+3
 19776                           
 19777                           ;config_file.c: 235: temp /= 36000.0;
 19778  00F0DC  C095  F078         	movff	__steps_from_degrees@temp,___fldiv@b
 19779  00F0E0  C096  F079         	movff	__steps_from_degrees@temp+1,___fldiv@b+1
 19780  00F0E4  C097  F07A         	movff	__steps_from_degrees@temp+2,___fldiv@b+2
 19781  00F0E8  C098  F07B         	movff	__steps_from_degrees@temp+3,___fldiv@b+3
 19782  00F0EC  0E00               	movlw	0
 19783  00F0EE  0100               	movlb	0	; () banked
 19784  00F0F0  6F7C               	movwf	___fldiv@a& (0+255),b
 19785  00F0F2  0EA0               	movlw	160
 19786  00F0F4  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 19787  00F0F6  0E0C               	movlw	12
 19788  00F0F8  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 19789  00F0FA  0E47               	movlw	71
 19790  00F0FC  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 19791  00F0FE  EC15  F06B         	call	___fldiv	;wreg free
 19792  00F102  C078  F095         	movff	?___fldiv,__steps_from_degrees@temp
 19793  00F106  C079  F096         	movff	?___fldiv+1,__steps_from_degrees@temp+1
 19794  00F10A  C07A  F097         	movff	?___fldiv+2,__steps_from_degrees@temp+2
 19795  00F10E  C07B  F098         	movff	?___fldiv+3,__steps_from_degrees@temp+3
 19796                           
 19797                           ;config_file.c: 238: if(((int32_t)temp)<-2147483648.0)
 19798  00F112  C095  F060         	movff	__steps_from_degrees@temp,___fltol@f1
 19799  00F116  C096  F061         	movff	__steps_from_degrees@temp+1,___fltol@f1+1
 19800  00F11A  C097  F062         	movff	__steps_from_degrees@temp+2,___fltol@f1+2
 19801  00F11E  C098  F063         	movff	__steps_from_degrees@temp+3,___fltol@f1+3
 19802  00F122  EC13  F092         	call	___fltol	;wreg free
 19803  00F126  C060  F06A         	movff	?___fltol,___xxtofl@val
 19804  00F12A  C061  F06B         	movff	?___fltol+1,___xxtofl@val+1
 19805  00F12E  C062  F06C         	movff	?___fltol+2,___xxtofl@val+2
 19806  00F132  C063  F06D         	movff	?___fltol+3,___xxtofl@val+3
 19807  00F136  0E01               	movlw	1
 19808  00F138  EC7A  F081         	call	___xxtofl
 19809  00F13C  C06A  F078         	movff	?___xxtofl,___flge@ff1
 19810  00F140  C06B  F079         	movff	?___xxtofl+1,___flge@ff1+1
 19811  00F144  C06C  F07A         	movff	?___xxtofl+2,___flge@ff1+2
 19812  00F148  C06D  F07B         	movff	?___xxtofl+3,___flge@ff1+3
 19813  00F14C  0E00               	movlw	0
 19814  00F14E  0100               	movlb	0	; () banked
 19815  00F150  6F7C               	movwf	___flge@ff2& (0+255),b
 19816  00F152  0E00               	movlw	0
 19817  00F154  6F7D               	movwf	(___flge@ff2+1)& (0+255),b
 19818  00F156  0E00               	movlw	0
 19819  00F158  6F7E               	movwf	(___flge@ff2+2)& (0+255),b
 19820  00F15A  0ECF               	movlw	207
 19821  00F15C  6F7F               	movwf	(___flge@ff2+3)& (0+255),b
 19822  00F15E  ECB7  F085         	call	___flge	;wreg free
 19823  00F162  0100               	movlb	0	; () banked
 19824  00F164  B0D8               	btfsc	status,0,c
 19825  00F166  D009               	goto	l3067
 19826                           
 19827                           ; BSR set to: 0
 19828                           ;config_file.c: 239: {;config_file.c: 240: return -2147483648;
 19829  00F168  0E00               	movlw	0
 19830  00F16A  6F91               	movwf	?__steps_from_degrees& (0+255),b
 19831  00F16C  0E00               	movlw	0
 19832  00F16E  6F92               	movwf	(?__steps_from_degrees+1)& (0+255),b
 19833  00F170  0E00               	movlw	0
 19834  00F172  6F93               	movwf	(?__steps_from_degrees+2)& (0+255),b
 19835  00F174  0E80               	movlw	128
 19836  00F176  6F94               	movwf	(?__steps_from_degrees+3)& (0+255),b
 19837                           
 19838                           ; BSR set to: 0
 19839  00F178  0012               	return	
 19840  00F17A                     l3067:
 19841                           
 19842                           ; BSR set to: 0
 19843                           ;config_file.c: 241: };config_file.c: 242: if(((int32_t)temp)>2147483647.0)
 19844                           
 19845                           ; BSR set to: 0
 19846  00F17A  0E00               	movlw	0
 19847  00F17C  6F78               	movwf	___flge@ff1& (0+255),b
 19848  00F17E  0E00               	movlw	0
 19849  00F180  6F79               	movwf	(___flge@ff1+1)& (0+255),b
 19850  00F182  0E00               	movlw	0
 19851  00F184  6F7A               	movwf	(___flge@ff1+2)& (0+255),b
 19852  00F186  0E4F               	movlw	79
 19853  00F188  6F7B               	movwf	(___flge@ff1+3)& (0+255),b
 19854  00F18A  C095  F060         	movff	__steps_from_degrees@temp,___fltol@f1
 19855  00F18E  C096  F061         	movff	__steps_from_degrees@temp+1,___fltol@f1+1
 19856  00F192  C097  F062         	movff	__steps_from_degrees@temp+2,___fltol@f1+2
 19857  00F196  C098  F063         	movff	__steps_from_degrees@temp+3,___fltol@f1+3
 19858  00F19A  EC13  F092         	call	___fltol	;wreg free
 19859  00F19E  C060  F06A         	movff	?___fltol,___xxtofl@val
 19860  00F1A2  C061  F06B         	movff	?___fltol+1,___xxtofl@val+1
 19861  00F1A6  C062  F06C         	movff	?___fltol+2,___xxtofl@val+2
 19862  00F1AA  C063  F06D         	movff	?___fltol+3,___xxtofl@val+3
 19863  00F1AE  0E01               	movlw	1
 19864  00F1B0  EC7A  F081         	call	___xxtofl
 19865  00F1B4  C06A  F07C         	movff	?___xxtofl,___flge@ff2
 19866  00F1B8  C06B  F07D         	movff	?___xxtofl+1,___flge@ff2+1
 19867  00F1BC  C06C  F07E         	movff	?___xxtofl+2,___flge@ff2+2
 19868  00F1C0  C06D  F07F         	movff	?___xxtofl+3,___flge@ff2+3
 19869  00F1C4  ECB7  F085         	call	___flge	;wreg free
 19870  00F1C8  0100               	movlb	0	; () banked
 19871  00F1CA  B0D8               	btfsc	status,0,c
 19872  00F1CC  D009               	goto	l3068
 19873                           
 19874                           ; BSR set to: 0
 19875                           ;config_file.c: 243: {;config_file.c: 244: return 2147483647;
 19876  00F1CE  0EFF               	movlw	255
 19877  00F1D0  6F91               	movwf	?__steps_from_degrees& (0+255),b
 19878  00F1D2  0EFF               	movlw	255
 19879  00F1D4  6F92               	movwf	(?__steps_from_degrees+1)& (0+255),b
 19880  00F1D6  0EFF               	movlw	255
 19881  00F1D8  6F93               	movwf	(?__steps_from_degrees+2)& (0+255),b
 19882  00F1DA  0E7F               	movlw	127
 19883  00F1DC  6F94               	movwf	(?__steps_from_degrees+3)& (0+255),b
 19884                           
 19885                           ; BSR set to: 0
 19886  00F1DE  0012               	return	
 19887  00F1E0                     l3068:
 19888                           
 19889                           ; BSR set to: 0
 19890                           ;config_file.c: 245: };config_file.c: 248: return (int32_t) temp;
 19891                           
 19892                           ; BSR set to: 0
 19893  00F1E0  C095  F060         	movff	__steps_from_degrees@temp,___fltol@f1
 19894  00F1E4  C096  F061         	movff	__steps_from_degrees@temp+1,___fltol@f1+1
 19895  00F1E8  C097  F062         	movff	__steps_from_degrees@temp+2,___fltol@f1+2
 19896  00F1EC  C098  F063         	movff	__steps_from_degrees@temp+3,___fltol@f1+3
 19897  00F1F0  EC13  F092         	call	___fltol	;wreg free
 19898  00F1F4  C060  F091         	movff	?___fltol,?__steps_from_degrees
 19899  00F1F8  C061  F092         	movff	?___fltol+1,?__steps_from_degrees+1
 19900  00F1FC  C062  F093         	movff	?___fltol+2,?__steps_from_degrees+2
 19901  00F200  C063  F094         	movff	?___fltol+3,?__steps_from_degrees+3
 19902  00F204  0012               	return	
 19903  00F206                     __end_of__steps_from_degrees:
 19904                           	opt stack 0
 19905                           tblptru	equ	0xFF8
 19906                           tblptrh	equ	0xFF7
 19907                           tblptrl	equ	0xFF6
 19908                           tablat	equ	0xFF5
 19909                           prodh	equ	0xFF4
 19910                           prodl	equ	0xFF3
 19911                           postinc0	equ	0xFEE
 19912                           wreg	equ	0xFE8
 19913                           postinc1	equ	0xFE6
 19914                           postdec1	equ	0xFE5
 19915                           plusw1	equ	0xFE3
 19916                           fsr1h	equ	0xFE2
 19917                           fsr1l	equ	0xFE1
 19918                           indf2	equ	0xFDF
 19919                           postinc2	equ	0xFDE
 19920                           postdec2	equ	0xFDD
 19921                           plusw2	equ	0xFDB
 19922                           fsr2h	equ	0xFDA
 19923                           fsr2l	equ	0xFD9
 19924                           status	equ	0xFD8
 19925                           
 19926 ;; *************** function ___flge *****************
 19927 ;; Defined at:
 19928 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flge.c"
 19929 ;; Parameters:    Size  Location     Type
 19930 ;;  ff1             4   24[BANK0 ] long 
 19931 ;;  ff2             4   28[BANK0 ] long 
 19932 ;; Auto vars:     Size  Location     Type
 19933 ;;		None
 19934 ;; Return value:  Size  Location     Type
 19935 ;;		None               void
 19936 ;; Registers used:
 19937 ;;		wreg, status,2, status,0
 19938 ;; Tracked objects:
 19939 ;;		On entry : 0/0
 19940 ;;		On exit  : 0/0
 19941 ;;		Unchanged: 0/0
 19942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19943 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19945 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19946 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19947 ;;Total ram usage:       12 bytes
 19948 ;; Hardware stack levels used:    1
 19949 ;; Hardware stack levels required when called:   10
 19950 ;; This function calls:
 19951 ;;		Nothing
 19952 ;; This function is called by:
 19953 ;;		__steps_from_degrees
 19954 ;;		_motor_goto_degrees_float
 19955 ;; This function uses a non-reentrant model
 19956 ;;
 19957                           
 19958                           	psect	text83
 19959  010B6E                     __ptext83:
 19960                           	opt stack 0
 19961  010B6E                     ___flge:
 19962                           	opt stack 16
 19963                           
 19964                           ;incstack = 0
 19965  010B6E  0E00               	movlw	0
 19966  010B70  0100               	movlb	0	; () banked
 19967  010B72  1578               	andwf	___flge@ff1& (0+255),w,b
 19968  010B74  6F80               	movwf	??___flge& (0+255),b
 19969  010B76  0E00               	movlw	0
 19970  010B78  1579               	andwf	(___flge@ff1+1)& (0+255),w,b
 19971  010B7A  6F81               	movwf	(??___flge+1)& (0+255),b
 19972  010B7C  0E80               	movlw	128
 19973  010B7E  157A               	andwf	(___flge@ff1+2)& (0+255),w,b
 19974  010B80  6F82               	movwf	(??___flge+2)& (0+255),b
 19975  010B82  0E7F               	movlw	127
 19976  010B84  157B               	andwf	(___flge@ff1+3)& (0+255),w,b
 19977  010B86  6F83               	movwf	(??___flge+3)& (0+255),b
 19978  010B88  5180               	movf	??___flge& (0+255),w,b
 19979  010B8A  1181               	iorwf	(??___flge+1)& (0+255),w,b
 19980  010B8C  1182               	iorwf	(??___flge+2)& (0+255),w,b
 19981  010B8E  1183               	iorwf	(??___flge+3)& (0+255),w,b
 19982  010B90  A4D8               	btfss	status,2,c
 19983  010B92  D008               	goto	l3346
 19984                           
 19985                           ; BSR set to: 0
 19986  010B94  0E00               	movlw	0
 19987  010B96  6F78               	movwf	___flge@ff1& (0+255),b
 19988  010B98  0E00               	movlw	0
 19989  010B9A  6F79               	movwf	(___flge@ff1+1)& (0+255),b
 19990  010B9C  0E00               	movlw	0
 19991  010B9E  6F7A               	movwf	(___flge@ff1+2)& (0+255),b
 19992  010BA0  0E00               	movlw	0
 19993  010BA2  6F7B               	movwf	(___flge@ff1+3)& (0+255),b
 19994  010BA4                     l3346:
 19995                           
 19996                           ; BSR set to: 0
 19997                           
 19998                           ; BSR set to: 0
 19999  010BA4  0E00               	movlw	0
 20000  010BA6  157C               	andwf	___flge@ff2& (0+255),w,b
 20001  010BA8  6F80               	movwf	??___flge& (0+255),b
 20002  010BAA  0E00               	movlw	0
 20003  010BAC  157D               	andwf	(___flge@ff2+1)& (0+255),w,b
 20004  010BAE  6F81               	movwf	(??___flge+1)& (0+255),b
 20005  010BB0  0E80               	movlw	128
 20006  010BB2  157E               	andwf	(___flge@ff2+2)& (0+255),w,b
 20007  010BB4  6F82               	movwf	(??___flge+2)& (0+255),b
 20008  010BB6  0E7F               	movlw	127
 20009  010BB8  157F               	andwf	(___flge@ff2+3)& (0+255),w,b
 20010  010BBA  6F83               	movwf	(??___flge+3)& (0+255),b
 20011  010BBC  5180               	movf	??___flge& (0+255),w,b
 20012  010BBE  1181               	iorwf	(??___flge+1)& (0+255),w,b
 20013  010BC0  1182               	iorwf	(??___flge+2)& (0+255),w,b
 20014  010BC2  1183               	iorwf	(??___flge+3)& (0+255),w,b
 20015  010BC4  A4D8               	btfss	status,2,c
 20016  010BC6  D008               	goto	l3347
 20017                           
 20018                           ; BSR set to: 0
 20019  010BC8  0E00               	movlw	0
 20020  010BCA  6F7C               	movwf	___flge@ff2& (0+255),b
 20021  010BCC  0E00               	movlw	0
 20022  010BCE  6F7D               	movwf	(___flge@ff2+1)& (0+255),b
 20023  010BD0  0E00               	movlw	0
 20024  010BD2  6F7E               	movwf	(___flge@ff2+2)& (0+255),b
 20025  010BD4  0E00               	movlw	0
 20026  010BD6  6F7F               	movwf	(___flge@ff2+3)& (0+255),b
 20027  010BD8                     l3347:
 20028                           
 20029                           ; BSR set to: 0
 20030                           
 20031                           ; BSR set to: 0
 20032  010BD8  AF7B               	btfss	(___flge@ff1+3)& (0+255),7,b
 20033  010BDA  D01D               	goto	l3348
 20034                           
 20035                           ; BSR set to: 0
 20036  010BDC  C078  F080         	movff	___flge@ff1,??___flge
 20037  010BE0  C079  F081         	movff	___flge@ff1+1,??___flge+1
 20038  010BE4  C07A  F082         	movff	___flge@ff1+2,??___flge+2
 20039  010BE8  C07B  F083         	movff	___flge@ff1+3,??___flge+3
 20040  010BEC  1F80               	comf	??___flge& (0+255),f,b
 20041  010BEE  1F81               	comf	(??___flge+1)& (0+255),f,b
 20042  010BF0  1F82               	comf	(??___flge+2)& (0+255),f,b
 20043  010BF2  1F83               	comf	(??___flge+3)& (0+255),f,b
 20044  010BF4  2B80               	incf	??___flge& (0+255),f,b
 20045  010BF6  0E00               	movlw	0
 20046  010BF8  2381               	addwfc	(??___flge+1)& (0+255),f,b
 20047  010BFA  2382               	addwfc	(??___flge+2)& (0+255),f,b
 20048  010BFC  2383               	addwfc	(??___flge+3)& (0+255),f,b
 20049  010BFE  0E00               	movlw	0
 20050  010C00  2580               	addwf	??___flge& (0+255),w,b
 20051  010C02  6F78               	movwf	___flge@ff1& (0+255),b
 20052  010C04  0E00               	movlw	0
 20053  010C06  2181               	addwfc	(??___flge+1)& (0+255),w,b
 20054  010C08  6F79               	movwf	(___flge@ff1+1)& (0+255),b
 20055  010C0A  0E00               	movlw	0
 20056  010C0C  2182               	addwfc	(??___flge+2)& (0+255),w,b
 20057  010C0E  6F7A               	movwf	(___flge@ff1+2)& (0+255),b
 20058  010C10  0E80               	movlw	128
 20059  010C12  2183               	addwfc	(??___flge+3)& (0+255),w,b
 20060  010C14  6F7B               	movwf	(___flge@ff1+3)& (0+255),b
 20061  010C16                     l3348:
 20062                           
 20063                           ; BSR set to: 0
 20064                           
 20065                           ; BSR set to: 0
 20066  010C16  AF7F               	btfss	(___flge@ff2+3)& (0+255),7,b
 20067  010C18  D01D               	goto	l3349
 20068                           
 20069                           ; BSR set to: 0
 20070  010C1A  C07C  F080         	movff	___flge@ff2,??___flge
 20071  010C1E  C07D  F081         	movff	___flge@ff2+1,??___flge+1
 20072  010C22  C07E  F082         	movff	___flge@ff2+2,??___flge+2
 20073  010C26  C07F  F083         	movff	___flge@ff2+3,??___flge+3
 20074  010C2A  1F80               	comf	??___flge& (0+255),f,b
 20075  010C2C  1F81               	comf	(??___flge+1)& (0+255),f,b
 20076  010C2E  1F82               	comf	(??___flge+2)& (0+255),f,b
 20077  010C30  1F83               	comf	(??___flge+3)& (0+255),f,b
 20078  010C32  2B80               	incf	??___flge& (0+255),f,b
 20079  010C34  0E00               	movlw	0
 20080  010C36  2381               	addwfc	(??___flge+1)& (0+255),f,b
 20081  010C38  2382               	addwfc	(??___flge+2)& (0+255),f,b
 20082  010C3A  2383               	addwfc	(??___flge+3)& (0+255),f,b
 20083  010C3C  0E00               	movlw	0
 20084  010C3E  2580               	addwf	??___flge& (0+255),w,b
 20085  010C40  6F7C               	movwf	___flge@ff2& (0+255),b
 20086  010C42  0E00               	movlw	0
 20087  010C44  2181               	addwfc	(??___flge+1)& (0+255),w,b
 20088  010C46  6F7D               	movwf	(___flge@ff2+1)& (0+255),b
 20089  010C48  0E00               	movlw	0
 20090  010C4A  2182               	addwfc	(??___flge+2)& (0+255),w,b
 20091  010C4C  6F7E               	movwf	(___flge@ff2+2)& (0+255),b
 20092  010C4E  0E80               	movlw	128
 20093  010C50  2183               	addwfc	(??___flge+3)& (0+255),w,b
 20094  010C52  6F7F               	movwf	(___flge@ff2+3)& (0+255),b
 20095  010C54                     l3349:
 20096                           
 20097                           ; BSR set to: 0
 20098  010C54  0E00               	movlw	0
 20099  010C56  1B78               	xorwf	___flge@ff1& (0+255),f,b
 20100  010C58  0E00               	movlw	0
 20101  010C5A  1B79               	xorwf	(___flge@ff1+1)& (0+255),f,b
 20102  010C5C  0E00               	movlw	0
 20103  010C5E  1B7A               	xorwf	(___flge@ff1+2)& (0+255),f,b
 20104  010C60  0E80               	movlw	128
 20105  010C62  1B7B               	xorwf	(___flge@ff1+3)& (0+255),f,b
 20106  010C64  0E00               	movlw	0
 20107  010C66  1B7C               	xorwf	___flge@ff2& (0+255),f,b
 20108  010C68  0E00               	movlw	0
 20109  010C6A  1B7D               	xorwf	(___flge@ff2+1)& (0+255),f,b
 20110  010C6C  0E00               	movlw	0
 20111  010C6E  1B7E               	xorwf	(___flge@ff2+2)& (0+255),f,b
 20112  010C70  0E80               	movlw	128
 20113  010C72  1B7F               	xorwf	(___flge@ff2+3)& (0+255),f,b
 20114  010C74  517C               	movf	___flge@ff2& (0+255),w,b
 20115  010C76  5D78               	subwf	___flge@ff1& (0+255),w,b
 20116  010C78  517D               	movf	(___flge@ff2+1)& (0+255),w,b
 20117  010C7A  5979               	subwfb	(___flge@ff1+1)& (0+255),w,b
 20118  010C7C  517E               	movf	(___flge@ff2+2)& (0+255),w,b
 20119  010C7E  597A               	subwfb	(___flge@ff1+2)& (0+255),w,b
 20120  010C80  517F               	movf	(___flge@ff2+3)& (0+255),w,b
 20121  010C82  597B               	subwfb	(___flge@ff1+3)& (0+255),w,b
 20122  010C84  B0D8               	btfsc	status,0,c
 20123  010C86  D002               	goto	l12094
 20124                           
 20125                           ; BSR set to: 0
 20126  010C88  90D8               	bcf	status,0,c
 20127  010C8A  0012               	return	
 20128  010C8C                     l12094:
 20129                           
 20130                           ; BSR set to: 0
 20131                           
 20132                           ; BSR set to: 0
 20133  010C8C  80D8               	bsf	status,0,c
 20134                           
 20135                           ; BSR set to: 0
 20136  010C8E  0012               	return	
 20137  010C90                     __end_of___flge:
 20138                           	opt stack 0
 20139                           tblptru	equ	0xFF8
 20140                           tblptrh	equ	0xFF7
 20141                           tblptrl	equ	0xFF6
 20142                           tablat	equ	0xFF5
 20143                           prodh	equ	0xFF4
 20144                           prodl	equ	0xFF3
 20145                           postinc0	equ	0xFEE
 20146                           wreg	equ	0xFE8
 20147                           postinc1	equ	0xFE6
 20148                           postdec1	equ	0xFE5
 20149                           plusw1	equ	0xFE3
 20150                           fsr1h	equ	0xFE2
 20151                           fsr1l	equ	0xFE1
 20152                           indf2	equ	0xFDF
 20153                           postinc2	equ	0xFDE
 20154                           postdec2	equ	0xFDD
 20155                           plusw2	equ	0xFDB
 20156                           fsr2h	equ	0xFDA
 20157                           fsr2l	equ	0xFD9
 20158                           status	equ	0xFD8
 20159                           
 20160 ;; *************** function __get_item *****************
 20161 ;; Defined at:
 20162 ;;		line 71 in file "config_file.c"
 20163 ;; Parameters:    Size  Location     Type
 20164 ;;  item_string     2    0[BANK0 ] PTR unsigned char 
 20165 ;;		 -> configFile_read@item_string(31), 
 20166 ;;  value_string    2    2[BANK0 ] PTR unsigned char 
 20167 ;;		 -> configFile_read@value_string(12), 
 20168 ;;  buffer          2    4[BANK0 ] PTR unsigned char 
 20169 ;;		 -> ConfigFile_buffer(512), 
 20170 ;; Auto vars:     Size  Location     Type
 20171 ;;  item_ctr        1   10[BANK0 ] unsigned char 
 20172 ;;  value_ctr       1    9[BANK0 ] unsigned char 
 20173 ;; Return value:  Size  Location     Type
 20174 ;;                  1    wreg      unsigned char 
 20175 ;; Registers used:
 20176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20177 ;; Tracked objects:
 20178 ;;		On entry : 0/0
 20179 ;;		On exit  : 0/0
 20180 ;;		Unchanged: 0/0
 20181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20182 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20183 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20184 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20185 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20186 ;;Total ram usage:       11 bytes
 20187 ;; Hardware stack levels used:    1
 20188 ;; Hardware stack levels required when called:   10
 20189 ;; This function calls:
 20190 ;;		Nothing
 20191 ;; This function is called by:
 20192 ;;		_configFile_read
 20193 ;; This function uses a non-reentrant model
 20194 ;;
 20195                           
 20196                           	psect	text84
 20197  00F6EE                     __ptext84:
 20198                           	opt stack 0
 20199  00F6EE                     __get_item:
 20200                           	opt stack 18
 20201                           
 20202                           ;config_file.c: 73: uint8_t item_ctr;;config_file.c: 74: uint8_t value_ctr;;config_file.
      +                          c: 77: for(item_ctr=0;item_ctr<30;++item_ctr)
 20203                           
 20204                           ; BSR set to: 0
 20205                           ;incstack = 0
 20206  00F6EE  0E00               	movlw	0
 20207  00F6F0  0100               	movlb	0	; () banked
 20208  00F6F2  6F6A               	movwf	__get_item@item_ctr& (0+255),b
 20209  00F6F4                     l16734:
 20210                           
 20211                           ; BSR set to: 0
 20212  00F6F4  0E1D               	movlw	29
 20213  00F6F6  656A               	cpfsgt	__get_item@item_ctr& (0+255),b
 20214  00F6F8  D001               	goto	l3031
 20215  00F6FA  D020               	goto	u15800
 20216  00F6FC                     l3031:
 20217                           
 20218                           ; BSR set to: 0
 20219                           ;config_file.c: 78: {;config_file.c: 80: if(buffer[item_ctr] == '=')
 20220                           
 20221                           ; BSR set to: 0
 20222  00F6FC  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20223  00F6FE  0D01               	mullw	1
 20224  00F700  50F3               	movf	prodl,w,c
 20225  00F702  2564               	addwf	__get_item@buffer& (0+255),w,b
 20226  00F704  6ED9               	movwf	fsr2l,c
 20227  00F706  50F4               	movf	prodh,w,c
 20228  00F708  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20229  00F70A  6EDA               	movwf	fsr2h,c
 20230  00F70C  0E3D               	movlw	61
 20231  00F70E  18DE               	xorwf	postinc2,w,c
 20232  00F710  B4D8               	btfsc	status,2,c
 20233  00F712  D014               	goto	u15800
 20234                           
 20235                           ; BSR set to: 0
 20236                           ;config_file.c: 83: };config_file.c: 84: item_string[item_ctr] = buffer[item_ctr];
 20237                           
 20238                           ; BSR set to: 0
 20239                           
 20240                           ; BSR set to: 0
 20241                           ;config_file.c: 81: {;config_file.c: 82: break;
 20242  00F714  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20243  00F716  0D01               	mullw	1
 20244  00F718  50F3               	movf	prodl,w,c
 20245  00F71A  2564               	addwf	__get_item@buffer& (0+255),w,b
 20246  00F71C  6ED9               	movwf	fsr2l,c
 20247  00F71E  50F4               	movf	prodh,w,c
 20248  00F720  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20249  00F722  6EDA               	movwf	fsr2h,c
 20250  00F724  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20251  00F726  0D01               	mullw	1
 20252  00F728  50F3               	movf	prodl,w,c
 20253  00F72A  2560               	addwf	__get_item@item_string& (0+255),w,b
 20254  00F72C  6EE1               	movwf	fsr1l,c
 20255  00F72E  50F4               	movf	prodh,w,c
 20256  00F730  2161               	addwfc	(__get_item@item_string+1)& (0+255),w,b
 20257  00F732  6EE2               	movwf	fsr1h,c
 20258  00F734  CFDF FFE7          	movff	indf2,indf1
 20259                           
 20260                           ; BSR set to: 0
 20261  00F738  2B6A               	incf	__get_item@item_ctr& (0+255),f,b
 20262  00F73A  D7DC               	goto	l16734
 20263  00F73C                     u15800:
 20264                           
 20265                           ; BSR set to: 0
 20266                           ;config_file.c: 85: };config_file.c: 86: item_string[item_ctr++] = 0;
 20267                           
 20268                           ; BSR set to: 0
 20269  00F73C  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20270  00F73E  0D01               	mullw	1
 20271  00F740  50F3               	movf	prodl,w,c
 20272  00F742  2560               	addwf	__get_item@item_string& (0+255),w,b
 20273  00F744  6ED9               	movwf	fsr2l,c
 20274  00F746  50F4               	movf	prodh,w,c
 20275  00F748  2161               	addwfc	(__get_item@item_string+1)& (0+255),w,b
 20276  00F74A  6EDA               	movwf	fsr2h,c
 20277  00F74C  0E00               	movlw	0
 20278  00F74E  6EDF               	movwf	indf2,c
 20279                           
 20280                           ; BSR set to: 0
 20281  00F750  2B6A               	incf	__get_item@item_ctr& (0+255),f,b
 20282                           
 20283                           ; BSR set to: 0
 20284                           ;config_file.c: 89: for(value_ctr=0;value_ctr<11;++value_ctr)
 20285  00F752  0E00               	movlw	0
 20286  00F754  6F69               	movwf	__get_item@value_ctr& (0+255),b
 20287  00F756                     l16754:
 20288                           
 20289                           ; BSR set to: 0
 20290  00F756  0E0A               	movlw	10
 20291  00F758  6569               	cpfsgt	__get_item@value_ctr& (0+255),b
 20292  00F75A  D001               	goto	l3034
 20293  00F75C  D03B               	goto	u15840
 20294  00F75E                     l3034:
 20295                           
 20296                           ; BSR set to: 0
 20297                           ;config_file.c: 90: {;config_file.c: 92: if((buffer[item_ctr+value_ctr]=='\r') || (buffe
      +                          r[item_ctr+value_ctr]=='\n'))
 20298                           
 20299                           ; BSR set to: 0
 20300  00F75E  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20301  00F760  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20302  00F764  6B67               	clrf	(??__get_item+1)& (0+255),b
 20303  00F766  2766               	addwf	??__get_item& (0+255),f,b
 20304  00F768  0E00               	movlw	0
 20305  00F76A  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20306  00F76C  5166               	movf	??__get_item& (0+255),w,b
 20307  00F76E  2564               	addwf	__get_item@buffer& (0+255),w,b
 20308  00F770  6ED9               	movwf	fsr2l,c
 20309  00F772  5167               	movf	(??__get_item+1)& (0+255),w,b
 20310  00F774  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20311  00F776  6EDA               	movwf	fsr2h,c
 20312  00F778  0E0D               	movlw	13
 20313  00F77A  18DE               	xorwf	postinc2,w,c
 20314  00F77C  B4D8               	btfsc	status,2,c
 20315  00F77E  D02A               	goto	u15840
 20316                           
 20317                           ; BSR set to: 0
 20318  00F780  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20319  00F782  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20320  00F786  6B67               	clrf	(??__get_item+1)& (0+255),b
 20321  00F788  2766               	addwf	??__get_item& (0+255),f,b
 20322  00F78A  0E00               	movlw	0
 20323  00F78C  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20324  00F78E  5166               	movf	??__get_item& (0+255),w,b
 20325  00F790  2564               	addwf	__get_item@buffer& (0+255),w,b
 20326  00F792  6ED9               	movwf	fsr2l,c
 20327  00F794  5167               	movf	(??__get_item+1)& (0+255),w,b
 20328  00F796  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20329  00F798  6EDA               	movwf	fsr2h,c
 20330  00F79A  0E0A               	movlw	10
 20331  00F79C  18DE               	xorwf	postinc2,w,c
 20332  00F79E  B4D8               	btfsc	status,2,c
 20333  00F7A0  D019               	goto	u15840
 20334                           
 20335                           ; BSR set to: 0
 20336                           ;config_file.c: 95: };config_file.c: 96: value_string[value_ctr] = buffer[item_ctr+value
      +                          _ctr];
 20337                           
 20338                           ; BSR set to: 0
 20339                           
 20340                           ; BSR set to: 0
 20341                           ;config_file.c: 93: {;config_file.c: 94: break;
 20342  00F7A2  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20343  00F7A4  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20344  00F7A8  6B67               	clrf	(??__get_item+1)& (0+255),b
 20345  00F7AA  2766               	addwf	??__get_item& (0+255),f,b
 20346  00F7AC  0E00               	movlw	0
 20347  00F7AE  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20348  00F7B0  5166               	movf	??__get_item& (0+255),w,b
 20349  00F7B2  2564               	addwf	__get_item@buffer& (0+255),w,b
 20350  00F7B4  6ED9               	movwf	fsr2l,c
 20351  00F7B6  5167               	movf	(??__get_item+1)& (0+255),w,b
 20352  00F7B8  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20353  00F7BA  6EDA               	movwf	fsr2h,c
 20354  00F7BC  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20355  00F7BE  0D01               	mullw	1
 20356  00F7C0  50F3               	movf	prodl,w,c
 20357  00F7C2  2562               	addwf	__get_item@value_string& (0+255),w,b
 20358  00F7C4  6EE1               	movwf	fsr1l,c
 20359  00F7C6  50F4               	movf	prodh,w,c
 20360  00F7C8  2163               	addwfc	(__get_item@value_string+1)& (0+255),w,b
 20361  00F7CA  6EE2               	movwf	fsr1h,c
 20362  00F7CC  CFDF FFE7          	movff	indf2,indf1
 20363                           
 20364                           ; BSR set to: 0
 20365  00F7D0  2B69               	incf	__get_item@value_ctr& (0+255),f,b
 20366  00F7D2  D7C1               	goto	l16754
 20367  00F7D4                     u15840:
 20368                           
 20369                           ; BSR set to: 0
 20370                           ;config_file.c: 97: };config_file.c: 98: value_string[value_ctr++] = 0;
 20371                           
 20372                           ; BSR set to: 0
 20373  00F7D4  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20374  00F7D6  0D01               	mullw	1
 20375  00F7D8  50F3               	movf	prodl,w,c
 20376  00F7DA  2562               	addwf	__get_item@value_string& (0+255),w,b
 20377  00F7DC  6ED9               	movwf	fsr2l,c
 20378  00F7DE  50F4               	movf	prodh,w,c
 20379  00F7E0  2163               	addwfc	(__get_item@value_string+1)& (0+255),w,b
 20380  00F7E2  6EDA               	movwf	fsr2h,c
 20381  00F7E4  0E00               	movlw	0
 20382  00F7E6  6EDF               	movwf	indf2,c
 20383  00F7E8                     
 20384                           ; BSR set to: 0
 20385                           ;config_file.c: 102: {;config_file.c: 103: ++value_ctr;
 20386                           
 20387                           ; BSR set to: 0
 20388                           
 20389                           ;config_file.c: 101: while((buffer[item_ctr+value_ctr]=='\r') || (buffer[item_ctr+value_
      +                          ctr]=='\n') || (buffer[item_ctr+value_ctr]=='\t') || (buffer[item_ctr+value_ctr]==' '))
 20390                           
 20391                           ; BSR set to: 0
 20392  00F7E8  2B69               	incf	__get_item@value_ctr& (0+255),f,b
 20393                           
 20394                           ; BSR set to: 0
 20395                           
 20396                           ; BSR set to: 0
 20397  00F7EA  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20398  00F7EC  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20399  00F7F0  6B67               	clrf	(??__get_item+1)& (0+255),b
 20400  00F7F2  2766               	addwf	??__get_item& (0+255),f,b
 20401  00F7F4  0E00               	movlw	0
 20402  00F7F6  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20403  00F7F8  5166               	movf	??__get_item& (0+255),w,b
 20404  00F7FA  2564               	addwf	__get_item@buffer& (0+255),w,b
 20405  00F7FC  6ED9               	movwf	fsr2l,c
 20406  00F7FE  5167               	movf	(??__get_item+1)& (0+255),w,b
 20407  00F800  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20408  00F802  6EDA               	movwf	fsr2h,c
 20409  00F804  0E0D               	movlw	13
 20410  00F806  18DE               	xorwf	postinc2,w,c
 20411  00F808  B4D8               	btfsc	status,2,c
 20412  00F80A  D7EE               	goto	l16770
 20413                           
 20414                           ; BSR set to: 0
 20415  00F80C  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20416  00F80E  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20417  00F812  6B67               	clrf	(??__get_item+1)& (0+255),b
 20418  00F814  2766               	addwf	??__get_item& (0+255),f,b
 20419  00F816  0E00               	movlw	0
 20420  00F818  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20421  00F81A  5166               	movf	??__get_item& (0+255),w,b
 20422  00F81C  2564               	addwf	__get_item@buffer& (0+255),w,b
 20423  00F81E  6ED9               	movwf	fsr2l,c
 20424  00F820  5167               	movf	(??__get_item+1)& (0+255),w,b
 20425  00F822  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20426  00F824  6EDA               	movwf	fsr2h,c
 20427  00F826  0E0A               	movlw	10
 20428  00F828  18DE               	xorwf	postinc2,w,c
 20429  00F82A  B4D8               	btfsc	status,2,c
 20430  00F82C  D7DD               	goto	l16770
 20431                           
 20432                           ; BSR set to: 0
 20433  00F82E  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20434  00F830  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20435  00F834  6B67               	clrf	(??__get_item+1)& (0+255),b
 20436  00F836  2766               	addwf	??__get_item& (0+255),f,b
 20437  00F838  0E00               	movlw	0
 20438  00F83A  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20439  00F83C  5166               	movf	??__get_item& (0+255),w,b
 20440  00F83E  2564               	addwf	__get_item@buffer& (0+255),w,b
 20441  00F840  6ED9               	movwf	fsr2l,c
 20442  00F842  5167               	movf	(??__get_item+1)& (0+255),w,b
 20443  00F844  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20444  00F846  6EDA               	movwf	fsr2h,c
 20445  00F848  0E09               	movlw	9
 20446  00F84A  18DE               	xorwf	postinc2,w,c
 20447  00F84C  B4D8               	btfsc	status,2,c
 20448  00F84E  D7CC               	goto	l16770
 20449                           
 20450                           ; BSR set to: 0
 20451  00F850  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20452  00F852  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20453  00F856  6B67               	clrf	(??__get_item+1)& (0+255),b
 20454  00F858  2766               	addwf	??__get_item& (0+255),f,b
 20455  00F85A  0E00               	movlw	0
 20456  00F85C  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20457  00F85E  5166               	movf	??__get_item& (0+255),w,b
 20458  00F860  2564               	addwf	__get_item@buffer& (0+255),w,b
 20459  00F862  6ED9               	movwf	fsr2l,c
 20460  00F864  5167               	movf	(??__get_item+1)& (0+255),w,b
 20461  00F866  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20462  00F868  6EDA               	movwf	fsr2h,c
 20463  00F86A  0E20               	movlw	32
 20464  00F86C  18DE               	xorwf	postinc2,w,c
 20465  00F86E  B4D8               	btfsc	status,2,c
 20466  00F870  D7BB               	goto	l16770
 20467                           
 20468                           ; BSR set to: 0
 20469                           ;config_file.c: 104: };config_file.c: 107: return (item_ctr+value_ctr);
 20470                           
 20471                           ; BSR set to: 0
 20472  00F872  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20473  00F874  2569               	addwf	__get_item@value_ctr& (0+255),w,b
 20474  00F876  0012               	return	
 20475  00F878                     __end_of__get_item:
 20476                           	opt stack 0
 20477                           tblptru	equ	0xFF8
 20478                           tblptrh	equ	0xFF7
 20479                           tblptrl	equ	0xFF6
 20480                           tablat	equ	0xFF5
 20481                           prodh	equ	0xFF4
 20482                           prodl	equ	0xFF3
 20483                           postinc0	equ	0xFEE
 20484                           wreg	equ	0xFE8
 20485                           indf1	equ	0xFE7
 20486                           postinc1	equ	0xFE6
 20487                           postdec1	equ	0xFE5
 20488                           plusw1	equ	0xFE3
 20489                           fsr1h	equ	0xFE2
 20490                           fsr1l	equ	0xFE1
 20491                           indf2	equ	0xFDF
 20492                           postinc2	equ	0xFDE
 20493                           postdec2	equ	0xFDD
 20494                           plusw2	equ	0xFDB
 20495                           fsr2h	equ	0xFDA
 20496                           fsr2l	equ	0xFD9
 20497                           status	equ	0xFD8
 20498                           
 20499 ;; *************** function _adc_init *****************
 20500 ;; Defined at:
 20501 ;;		line 19 in file "adc.c"
 20502 ;; Parameters:    Size  Location     Type
 20503 ;;		None
 20504 ;; Auto vars:     Size  Location     Type
 20505 ;;		None
 20506 ;; Return value:  Size  Location     Type
 20507 ;;                  1    wreg      void 
 20508 ;; Registers used:
 20509 ;;		wreg, status,2
 20510 ;; Tracked objects:
 20511 ;;		On entry : 0/0
 20512 ;;		On exit  : 0/0
 20513 ;;		Unchanged: 0/0
 20514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20519 ;;Total ram usage:        0 bytes
 20520 ;; Hardware stack levels used:    1
 20521 ;; Hardware stack levels required when called:   10
 20522 ;; This function calls:
 20523 ;;		Nothing
 20524 ;; This function is called by:
 20525 ;;		_system_init
 20526 ;; This function uses a non-reentrant model
 20527 ;;
 20528                           
 20529                           	psect	text85
 20530  014CD2                     __ptext85:
 20531                           	opt stack 0
 20532  014CD2                     _adc_init:
 20533                           	opt stack 19
 20534                           
 20535                           ;adc.c: 22: os.temperature[TEMPERATURE_SOURCE_INTERNAL] = 0;
 20536                           
 20537                           ; BSR set to: 0
 20538                           ;incstack = 0
 20539  014CD2  0E00               	movlw	0
 20540  014CD4  0101               	movlb	1	; () banked
 20541  014CD6  6F8D               	movwf	(_os+41)& (0+255),b	;volatile
 20542  014CD8  0E00               	movlw	0
 20543  014CDA  6F8C               	movwf	(_os+40)& (0+255),b	;volatile
 20544                           
 20545                           ;adc.c: 23: os.temperature[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 20546  014CDC  0E00               	movlw	0
 20547  014CDE  6F8F               	movwf	(_os+43)& (0+255),b	;volatile
 20548  014CE0  0E00               	movlw	0
 20549  014CE2  6F8E               	movwf	(_os+42)& (0+255),b	;volatile
 20550                           
 20551                           ;adc.c: 24: os.fan_on = 0;
 20552  014CE4  0E00               	movlw	0
 20553  014CE6  6F93               	movwf	(_os+47)& (0+255),b	;volatile
 20554                           
 20555                           ;adc.c: 25: params.temperature_source = TEMPERATURE_SOURCE_INTERNAL;
 20556  014CE8  0E00               	movlw	0
 20557  014CEA  0102               	movlb	2	; () banked
 20558  014CEC  6F31               	movwf	_params& (0+255),b
 20559                           
 20560                           ;adc.c: 26: params.temperature_adc_sum[TEMPERATURE_SOURCE_INTERNAL] = 0;
 20561  014CEE  0E00               	movlw	0
 20562  014CF0  6F33               	movwf	(_params+2)& (0+255),b
 20563  014CF2  0E00               	movlw	0
 20564  014CF4  6F32               	movwf	(_params+1)& (0+255),b
 20565                           
 20566                           ;adc.c: 27: params.temperature_count[TEMPERATURE_SOURCE_INTERNAL] = 0;
 20567  014CF6  0E00               	movlw	0
 20568  014CF8  6F36               	movwf	(_params+5)& (0+255),b
 20569                           
 20570                           ;adc.c: 28: params.temperature_adc_sum[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 20571  014CFA  0E00               	movlw	0
 20572  014CFC  6F35               	movwf	(_params+4)& (0+255),b
 20573  014CFE  0E00               	movlw	0
 20574  014D00  6F34               	movwf	(_params+3)& (0+255),b
 20575                           
 20576                           ;adc.c: 29: params.temperature_count[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 20577  014D02  0E00               	movlw	0
 20578  014D04  6F37               	movwf	(_params+6)& (0+255),b
 20579                           
 20580                           ; BSR set to: 2
 20581                           ;adc.c: 31: ADCON0bits.VCFG1 = 0;
 20582  014D06  9EC2               	bcf	4034,7,c	;volatile
 20583                           
 20584                           ; BSR set to: 2
 20585                           ;adc.c: 32: ADCON0bits.VCFG0 = 0;
 20586  014D08  9CC2               	bcf	4034,6,c	;volatile
 20587                           
 20588                           ;adc.c: 33: ADCON0bits.CHS = 0b1001;
 20589  014D0A  50C2               	movf	4034,w,c	;volatile
 20590  014D0C  0BC3               	andlw	-61
 20591  014D0E  0924               	iorlw	36
 20592  014D10  6EC2               	movwf	4034,c	;volatile
 20593                           
 20594                           ; BSR set to: 2
 20595                           ;adc.c: 35: ADCON1bits.ADFM = 1;
 20596  014D12  8EC1               	bsf	4033,7,c	;volatile
 20597                           
 20598                           ; BSR set to: 2
 20599                           ;adc.c: 36: ADCON1bits.ADCAL = 0;
 20600  014D14  9CC1               	bcf	4033,6,c	;volatile
 20601                           
 20602                           ; BSR set to: 2
 20603                           ;adc.c: 37: ADCON1bits.ACQT = 0b111;
 20604  014D16  86C1               	bsf	4033,3,c	;volatile
 20605  014D18  88C1               	bsf	4033,4,c	;volatile
 20606  014D1A  8AC1               	bsf	4033,5,c	;volatile
 20607                           
 20608                           ;adc.c: 38: ADCON1bits.ADCS = 0b110;
 20609  014D1C  50C1               	movf	4033,w,c	;volatile
 20610  014D1E  0BF8               	andlw	-8
 20611  014D20  0906               	iorlw	6
 20612  014D22  6EC1               	movwf	4033,c	;volatile
 20613                           
 20614                           ; BSR set to: 2
 20615                           ;adc.c: 40: ADCON0bits.ADON = 1;
 20616  014D24  80C2               	bsf	4034,0,c	;volatile
 20617                           
 20618                           ; BSR set to: 2
 20619                           ;adc.c: 41: ADCON0bits.GO = 1;
 20620  014D26  82C2               	bsf	4034,1,c	;volatile
 20621                           
 20622                           ; BSR set to: 2
 20623  014D28  0012               	return		;funcret
 20624  014D2A                     __end_of_adc_init:
 20625                           	opt stack 0
 20626                           tblptru	equ	0xFF8
 20627                           tblptrh	equ	0xFF7
 20628                           tblptrl	equ	0xFF6
 20629                           tablat	equ	0xFF5
 20630                           prodh	equ	0xFF4
 20631                           prodl	equ	0xFF3
 20632                           postinc0	equ	0xFEE
 20633                           wreg	equ	0xFE8
 20634                           indf1	equ	0xFE7
 20635                           postinc1	equ	0xFE6
 20636                           postdec1	equ	0xFE5
 20637                           plusw1	equ	0xFE3
 20638                           fsr1h	equ	0xFE2
 20639                           fsr1l	equ	0xFE1
 20640                           indf2	equ	0xFDF
 20641                           postinc2	equ	0xFDE
 20642                           postdec2	equ	0xFDD
 20643                           plusw2	equ	0xFDB
 20644                           fsr2h	equ	0xFDA
 20645                           fsr2l	equ	0xFD9
 20646                           status	equ	0xFD8
 20647                           
 20648 ;; *************** function __system_timer0_init *****************
 20649 ;; Defined at:
 20650 ;;		line 125 in file "os.c"
 20651 ;; Parameters:    Size  Location     Type
 20652 ;;		None
 20653 ;; Auto vars:     Size  Location     Type
 20654 ;;		None
 20655 ;; Return value:  Size  Location     Type
 20656 ;;                  1    wreg      void 
 20657 ;; Registers used:
 20658 ;;		wreg, status,2
 20659 ;; Tracked objects:
 20660 ;;		On entry : 0/0
 20661 ;;		On exit  : 0/0
 20662 ;;		Unchanged: 0/0
 20663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20668 ;;Total ram usage:        0 bytes
 20669 ;; Hardware stack levels used:    1
 20670 ;; Hardware stack levels required when called:   10
 20671 ;; This function calls:
 20672 ;;		Nothing
 20673 ;; This function is called by:
 20674 ;;		_system_init
 20675 ;; This function uses a non-reentrant model
 20676 ;;
 20677                           
 20678                           	psect	text86
 20679  015AD6                     __ptext86:
 20680                           	opt stack 0
 20681  015AD6                     __system_timer0_init:
 20682                           	opt stack 19
 20683                           
 20684                           ;os.c: 130: T0CONbits.T0CS = 0;
 20685                           
 20686                           ; BSR set to: 2
 20687                           ;incstack = 0
 20688  015AD6  9AD5               	bcf	4053,5,c	;volatile
 20689                           
 20690                           ;os.c: 132: T0CONbits.T08BIT = 0;
 20691  015AD8  9CD5               	bcf	4053,6,c	;volatile
 20692                           
 20693                           ;os.c: 134: T0CONbits.T0PS2 = 0;
 20694  015ADA  94D5               	bcf	4053,2,c	;volatile
 20695                           
 20696                           ;os.c: 135: T0CONbits.T0PS1 = 1;
 20697  015ADC  82D5               	bsf	4053,1,c	;volatile
 20698                           
 20699                           ;os.c: 136: T0CONbits.T0PS0 = 0;
 20700  015ADE  90D5               	bcf	4053,0,c	;volatile
 20701                           
 20702                           ;os.c: 138: T0CONbits.PSA = 0;
 20703  015AE0  96D5               	bcf	4053,3,c	;volatile
 20704                           
 20705                           ;os.c: 140: TMR0H = 0xFA;
 20706  015AE2  0EFA               	movlw	250
 20707  015AE4  6ED7               	movwf	4055,c	;volatile
 20708                           
 20709                           ;os.c: 141: TMR0L = 0x24;
 20710  015AE6  0E24               	movlw	36
 20711  015AE8  6ED6               	movwf	4054,c	;volatile
 20712                           
 20713                           ;os.c: 143: T0CONbits.TMR0ON = 1;
 20714  015AEA  8ED5               	bsf	4053,7,c	;volatile
 20715                           
 20716                           ;os.c: 146: INTCONbits.TMR0IF = 0;
 20717  015AEC  94F2               	bcf	intcon,2,c	;volatile
 20718                           
 20719                           ;os.c: 147: INTCONbits.TMR0IE = 1;
 20720  015AEE  8AF2               	bsf	intcon,5,c	;volatile
 20721                           
 20722                           ;os.c: 148: INTCONbits.GIE = 1;
 20723  015AF0  8EF2               	bsf	intcon,7,c	;volatile
 20724                           
 20725                           ;os.c: 151: os.subTimeSlot = 0;
 20726  015AF2  0E00               	movlw	0
 20727  015AF4  0101               	movlb	1	; () banked
 20728  015AF6  6F64               	movwf	_os& (0+255),b	;volatile
 20729                           
 20730                           ;os.c: 152: os.timeSlot = 0;
 20731  015AF8  0E00               	movlw	0
 20732  015AFA  6F65               	movwf	(_os+1)& (0+255),b	;volatile
 20733                           
 20734                           ;os.c: 153: os.done = 0;
 20735  015AFC  0E00               	movlw	0
 20736  015AFE  6F66               	movwf	(_os+2)& (0+255),b	;volatile
 20737                           
 20738                           ; BSR set to: 1
 20739  015B00  0012               	return		;funcret
 20740  015B02                     __end_of__system_timer0_init:
 20741                           	opt stack 0
 20742                           tblptru	equ	0xFF8
 20743                           tblptrh	equ	0xFF7
 20744                           tblptrl	equ	0xFF6
 20745                           tablat	equ	0xFF5
 20746                           prodh	equ	0xFF4
 20747                           prodl	equ	0xFF3
 20748                           intcon	equ	0xFF2
 20749                           postinc0	equ	0xFEE
 20750                           wreg	equ	0xFE8
 20751                           indf1	equ	0xFE7
 20752                           postinc1	equ	0xFE6
 20753                           postdec1	equ	0xFE5
 20754                           plusw1	equ	0xFE3
 20755                           fsr1h	equ	0xFE2
 20756                           fsr1l	equ	0xFE1
 20757                           indf2	equ	0xFDF
 20758                           postinc2	equ	0xFDE
 20759                           postdec2	equ	0xFDD
 20760                           plusw2	equ	0xFDB
 20761                           fsr2h	equ	0xFDA
 20762                           fsr2l	equ	0xFD9
 20763                           status	equ	0xFD8
 20764                           
 20765 ;; *************** function __system_pin_setup *****************
 20766 ;; Defined at:
 20767 ;;		line 59 in file "os.c"
 20768 ;; Parameters:    Size  Location     Type
 20769 ;;		None
 20770 ;; Auto vars:     Size  Location     Type
 20771 ;;		None
 20772 ;; Return value:  Size  Location     Type
 20773 ;;                  1    wreg      void 
 20774 ;; Registers used:
 20775 ;;		wreg, status,2
 20776 ;; Tracked objects:
 20777 ;;		On entry : 0/0
 20778 ;;		On exit  : 0/0
 20779 ;;		Unchanged: 0/0
 20780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20785 ;;Total ram usage:        0 bytes
 20786 ;; Hardware stack levels used:    1
 20787 ;; Hardware stack levels required when called:   10
 20788 ;; This function calls:
 20789 ;;		Nothing
 20790 ;; This function is called by:
 20791 ;;		_system_init
 20792 ;; This function uses a non-reentrant model
 20793 ;;
 20794                           
 20795                           	psect	text87
 20796  014686                     __ptext87:
 20797                           	opt stack 0
 20798  014686                     __system_pin_setup:
 20799                           	opt stack 19
 20800                           
 20801                           ;os.c: 62: TRISDbits.TRISD5 = 1;
 20802                           
 20803                           ; BSR set to: 1
 20804                           ;incstack = 0
 20805  014686  8A95               	bsf	3989,5,c	;volatile
 20806                           
 20807                           ;os.c: 63: TRISDbits.TRISD4 = 0;
 20808  014688  9895               	bcf	3989,4,c	;volatile
 20809                           
 20810                           ;os.c: 64: TRISDbits.TRISD6 = 0;
 20811  01468A  9C95               	bcf	3989,6,c	;volatile
 20812                           
 20813                           ;os.c: 65: TRISDbits.TRISD7 = 0;
 20814  01468C  9E95               	bcf	3989,7,c	;volatile
 20815                           
 20816                           ;os.c: 66: LATDbits.LD7 = 1;
 20817  01468E  8E8C               	bsf	3980,7,c	;volatile
 20818                           
 20819                           ;os.c: 68: TRISBbits.TRISB3 = 1;
 20820  014690  8693               	bsf	3987,3,c	;volatile
 20821                           
 20822                           ;os.c: 69: ANCON1bits.PCFG9 = 0;
 20823  014692  010F               	movlb	15	; () banked
 20824  014694  9349               	bcf	73,1,b	;volatile
 20825                           
 20826                           ;os.c: 71: TRISCbits.TRISC7 = 0;
 20827  014696  9E94               	bcf	3988,7,c	;volatile
 20828                           
 20829                           ;os.c: 72: LATCbits.LC7 = 0;
 20830  014698  9E8B               	bcf	3979,7,c	;volatile
 20831                           
 20832                           ;os.c: 74: TRISCbits.TRISC6 = 0;
 20833  01469A  9C94               	bcf	3988,6,c	;volatile
 20834                           
 20835                           ;os.c: 75: LATCbits.LC6 = 0;
 20836  01469C  9C8B               	bcf	3979,6,c	;volatile
 20837                           
 20838                           ;os.c: 77: TRISAbits.TRISA3 = 0;
 20839  01469E  9692               	bcf	3986,3,c	;volatile
 20840                           
 20841                           ;os.c: 78: LATAbits.LA3 = 0;
 20842  0146A0  9689               	bcf	3977,3,c	;volatile
 20843                           
 20844                           ;os.c: 80: TRISCbits.TRISC1 = 0;
 20845  0146A2  9294               	bcf	3988,1,c	;volatile
 20846                           
 20847                           ;os.c: 81: LATCbits.LC1 = 0;
 20848  0146A4  928B               	bcf	3979,1,c	;volatile
 20849                           
 20850                           ;os.c: 86: TRISBbits.TRISB5 = 1;
 20851  0146A6  8A93               	bsf	3987,5,c	;volatile
 20852                           
 20853                           ;os.c: 87: TRISBbits.TRISB4 = 1;
 20854  0146A8  8893               	bsf	3987,4,c	;volatile
 20855                           
 20856                           ;os.c: 89: TRISBbits.TRISB0 = 0;
 20857  0146AA  9093               	bcf	3987,0,c	;volatile
 20858                           
 20859                           ;os.c: 90: LATBbits.LB0 = 1;
 20860  0146AC  808A               	bsf	3978,0,c	;volatile
 20861                           
 20862                           ;os.c: 92: TRISBbits.TRISB2 = 0;
 20863  0146AE  9493               	bcf	3987,2,c	;volatile
 20864                           
 20865                           ;os.c: 93: LATBbits.LB2 = 0;
 20866  0146B0  948A               	bcf	3978,2,c	;volatile
 20867                           
 20868                           ;os.c: 95: TRISBbits.TRISB1 = 0;
 20869  0146B2  9293               	bcf	3987,1,c	;volatile
 20870                           
 20871                           ;os.c: 96: ANCON1bits.PCFG10 = 1;
 20872  0146B4  8549               	bsf	73,2,b	;volatile
 20873                           
 20874                           ;os.c: 97: LATBbits.LB1 = 0;
 20875  0146B6  928A               	bcf	3978,1,c	;volatile
 20876                           
 20877                           ; BSR set to: 15
 20878                           ;os.c: 98: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 20879  0146B8  0E55               	movlw	85
 20880  0146BA  6EA7               	movwf	4007,c	;volsfr
 20881  0146BC  0EAA               	movlw	170
 20882  0146BE  6EA7               	movwf	4007,c	;volsfr
 20883                           
 20884                           ; BSR set to: 15
 20885  0146C0  010E               	movlb	14	; () banked
 20886  0146C2  91BF               	bcf	191,0,b	;volatile
 20887                           
 20888                           ;os.c: 99: RPOR4 = 14;
 20889  0146C4  0E0E               	movlw	14
 20890  0146C6  6FC4               	movwf	196,b	;volatile
 20891                           
 20892                           ;os.c: 100: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 20893  0146C8  0E55               	movlw	85
 20894  0146CA  6EA7               	movwf	4007,c	;volsfr
 20895  0146CC  0EAA               	movlw	170
 20896  0146CE  6EA7               	movwf	4007,c	;volsfr
 20897                           
 20898                           ; BSR set to: 14
 20899  0146D0  81BF               	bsf	191,0,b	;volatile
 20900                           
 20901                           ; BSR set to: 14
 20902                           ;os.c: 102: TRISDbits.TRISD2 = 1;
 20903  0146D2  8495               	bsf	3989,2,c	;volatile
 20904                           
 20905                           ; BSR set to: 14
 20906                           ;os.c: 104: TRISEbits.TRISE2 = 1;
 20907  0146D4  8496               	bsf	3990,2,c	;volatile
 20908                           
 20909                           ; BSR set to: 14
 20910                           ;os.c: 105: ANCON0bits.PCFG7 = 1;
 20911  0146D6  010F               	movlb	15	; () banked
 20912  0146D8  8F48               	bsf	72,7,b	;volatile
 20913                           
 20914                           ; BSR set to: 15
 20915                           ;os.c: 107: TRISEbits.TRISE0 = 1;
 20916  0146DA  8096               	bsf	3990,0,c	;volatile
 20917                           
 20918                           ; BSR set to: 15
 20919                           ;os.c: 108: ANCON0bits.PCFG5 = 1;
 20920  0146DC  8B48               	bsf	72,5,b	;volatile
 20921                           
 20922                           ; BSR set to: 15
 20923                           ;os.c: 110: TRISEbits.TRISE1 = 1;
 20924  0146DE  8296               	bsf	3990,1,c	;volatile
 20925                           
 20926                           ; BSR set to: 15
 20927                           ;os.c: 111: ANCON0bits.PCFG6 = 1;
 20928  0146E0  8D48               	bsf	72,6,b	;volatile
 20929                           
 20930                           ; BSR set to: 15
 20931                           ;os.c: 113: TRISAbits.TRISA0 = 1;
 20932  0146E2  8092               	bsf	3986,0,c	;volatile
 20933                           
 20934                           ; BSR set to: 15
 20935                           ;os.c: 114: ANCON0bits.PCFG0 = 1;
 20936  0146E4  8148               	bsf	72,0,b	;volatile
 20937                           
 20938                           ; BSR set to: 15
 20939                           ;os.c: 116: TRISAbits.TRISA2 = 1;
 20940  0146E6  8492               	bsf	3986,2,c	;volatile
 20941                           
 20942                           ; BSR set to: 15
 20943                           ;os.c: 117: ANCON0bits.PCFG2 = 1;
 20944  0146E8  8548               	bsf	72,2,b	;volatile
 20945                           
 20946                           ; BSR set to: 15
 20947                           ;os.c: 119: TRISAbits.TRISA1 = 1;
 20948  0146EA  8292               	bsf	3986,1,c	;volatile
 20949                           
 20950                           ; BSR set to: 15
 20951                           ;os.c: 120: ANCON0bits.PCFG1 = 1;
 20952  0146EC  8348               	bsf	72,1,b	;volatile
 20953                           
 20954                           ; BSR set to: 15
 20955  0146EE  0012               	return		;funcret
 20956  0146F0                     __end_of__system_pin_setup:
 20957                           	opt stack 0
 20958                           tblptru	equ	0xFF8
 20959                           tblptrh	equ	0xFF7
 20960                           tblptrl	equ	0xFF6
 20961                           tablat	equ	0xFF5
 20962                           prodh	equ	0xFF4
 20963                           prodl	equ	0xFF3
 20964                           intcon	equ	0xFF2
 20965                           postinc0	equ	0xFEE
 20966                           wreg	equ	0xFE8
 20967                           indf1	equ	0xFE7
 20968                           postinc1	equ	0xFE6
 20969                           postdec1	equ	0xFE5
 20970                           plusw1	equ	0xFE3
 20971                           fsr1h	equ	0xFE2
 20972                           fsr1l	equ	0xFE1
 20973                           indf2	equ	0xFDF
 20974                           postinc2	equ	0xFDE
 20975                           postdec2	equ	0xFDD
 20976                           plusw2	equ	0xFDB
 20977                           fsr2h	equ	0xFDA
 20978                           fsr2l	equ	0xFD9
 20979                           status	equ	0xFD8
 20980                           
 20981 ;; *************** function __backlight_init *****************
 20982 ;; Defined at:
 20983 ;;		line 158 in file "os.c"
 20984 ;; Parameters:    Size  Location     Type
 20985 ;;		None
 20986 ;; Auto vars:     Size  Location     Type
 20987 ;;		None
 20988 ;; Return value:  Size  Location     Type
 20989 ;;                  1    wreg      void 
 20990 ;; Registers used:
 20991 ;;		None
 20992 ;; Tracked objects:
 20993 ;;		On entry : 0/0
 20994 ;;		On exit  : 0/0
 20995 ;;		Unchanged: 0/0
 20996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21001 ;;Total ram usage:        0 bytes
 21002 ;; Hardware stack levels used:    1
 21003 ;; Hardware stack levels required when called:   10
 21004 ;; This function calls:
 21005 ;;		Nothing
 21006 ;; This function is called by:
 21007 ;;		_system_init
 21008 ;; This function uses a non-reentrant model
 21009 ;;
 21010                           
 21011                           	psect	text88
 21012  015F80                     __ptext88:
 21013                           	opt stack 0
 21014  015F80                     __backlight_init:
 21015                           	opt stack 19
 21016                           
 21017                           ;os.c: 160: LATCbits.LC1 = 1;
 21018                           
 21019                           ; BSR set to: 15
 21020                           ;incstack = 0
 21021  015F80  828B               	bsf	3979,1,c	;volatile
 21022  015F82  0012               	return		;funcret
 21023  015F84                     __end_of__backlight_init:
 21024                           	opt stack 0
 21025                           tblptru	equ	0xFF8
 21026                           tblptrh	equ	0xFF7
 21027                           tblptrl	equ	0xFF6
 21028                           tablat	equ	0xFF5
 21029                           prodh	equ	0xFF4
 21030                           prodl	equ	0xFF3
 21031                           intcon	equ	0xFF2
 21032                           postinc0	equ	0xFEE
 21033                           wreg	equ	0xFE8
 21034                           indf1	equ	0xFE7
 21035                           postinc1	equ	0xFE6
 21036                           postdec1	equ	0xFE5
 21037                           plusw1	equ	0xFE3
 21038                           fsr1h	equ	0xFE2
 21039                           fsr1l	equ	0xFE1
 21040                           indf2	equ	0xFDF
 21041                           postinc2	equ	0xFDE
 21042                           postdec2	equ	0xFDD
 21043                           plusw2	equ	0xFDB
 21044                           fsr2h	equ	0xFDA
 21045                           fsr2l	equ	0xFD9
 21046                           status	equ	0xFD8
 21047                           
 21048 ;; *************** function _motor_process_cue *****************
 21049 ;; Defined at:
 21050 ;;		line 620 in file "motor.c"
 21051 ;; Parameters:    Size  Location     Type
 21052 ;;		None
 21053 ;; Auto vars:     Size  Location     Type
 21054 ;;		None
 21055 ;; Return value:  Size  Location     Type
 21056 ;;                  1    wreg      void 
 21057 ;; Registers used:
 21058 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21059 ;; Tracked objects:
 21060 ;;		On entry : 0/0
 21061 ;;		On exit  : 0/0
 21062 ;;		Unchanged: 0/0
 21063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21068 ;;Total ram usage:        0 bytes
 21069 ;; Hardware stack levels used:    1
 21070 ;; Hardware stack levels required when called:   11
 21071 ;; This function calls:
 21072 ;;		__motor_run
 21073 ;;		_motor_items_in_cue
 21074 ;; This function is called by:
 21075 ;;		_main
 21076 ;; This function uses a non-reentrant model
 21077 ;;
 21078                           
 21079                           	psect	text89
 21080  0136FC                     __ptext89:
 21081                           	opt stack 0
 21082  0136FC                     _motor_process_cue:
 21083                           	opt stack 19
 21084                           
 21085                           ;motor.c: 622: if(motor_items_in_cue()==0)
 21086                           
 21087                           ;incstack = 0
 21088  0136FC  EC88  F0AF         	call	_motor_items_in_cue	;wreg free
 21089  013700  0900               	iorlw	0
 21090  013702  B4D8               	btfsc	status,2,c
 21091  013704  0012               	return	
 21092                           
 21093                           ;motor.c: 626: };motor.c: 628: if(os.busy)
 21094                           
 21095                           ;motor.c: 623: {;motor.c: 625: return;
 21096  013706  0101               	movlb	1	; () banked
 21097  013708  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 21098  01370A  A4D8               	btfss	status,2,c
 21099  01370C  0012               	return	
 21100                           
 21101                           ; BSR set to: 1
 21102                           ;motor.c: 632: };motor.c: 635: _motor_run(;motor.c: 636: motor_command_cue[motor_cue_rea
      +                          d_index].direction,;motor.c: 637: motor_command_cue[motor_cue_read_index].distance,;moto
      +                          r.c: 638: motor_command_cue[motor_cue_read_index].speed,;motor.c: 639: motor_command_cue
      +                          [motor_cue_read_index].type;motor.c: 640: );
 21103                           
 21104                           ; BSR set to: 1
 21105                           
 21106                           ; BSR set to: 1
 21107                           ;motor.c: 629: {;motor.c: 631: return;
 21108  01370E  514B               	movf	_motor_cue_read_index& (0+255),w,b
 21109  013710  0D08               	mullw	8
 21110  013712  0E01               	movlw	1
 21111  013714  26F3               	addwf	prodl,f,c
 21112  013716  0E00               	movlw	0
 21113  013718  22F4               	addwfc	prodh,f,c
 21114  01371A  0E00               	movlw	low _motor_command_cue
 21115  01371C  24F3               	addwf	prodl,w,c
 21116  01371E  6ED9               	movwf	fsr2l,c
 21117  013720  0E03               	movlw	high _motor_command_cue
 21118  013722  20F4               	addwfc	prodh,w,c
 21119  013724  6EDA               	movwf	fsr2h,c
 21120  013726  CFDE F060          	movff	postinc2,__motor_run@distance_in_steps
 21121  01372A  CFDE F061          	movff	postinc2,__motor_run@distance_in_steps+1
 21122  01372E  CFDE F062          	movff	postinc2,__motor_run@distance_in_steps+2
 21123  013732  CFDE F063          	movff	postinc2,__motor_run@distance_in_steps+3
 21124  013736  514B               	movf	_motor_cue_read_index& (0+255),w,b
 21125  013738  0D08               	mullw	8
 21126  01373A  0E05               	movlw	5
 21127  01373C  26F3               	addwf	prodl,f,c
 21128  01373E  0E00               	movlw	0
 21129  013740  22F4               	addwfc	prodh,f,c
 21130  013742  0E00               	movlw	low _motor_command_cue
 21131  013744  24F3               	addwf	prodl,w,c
 21132  013746  6ED9               	movwf	fsr2l,c
 21133  013748  0E03               	movlw	high _motor_command_cue
 21134  01374A  20F4               	addwfc	prodh,w,c
 21135  01374C  6EDA               	movwf	fsr2h,c
 21136  01374E  CFDE F064          	movff	postinc2,__motor_run@speed
 21137  013752  CFDD F065          	movff	postdec2,__motor_run@speed+1
 21138  013756  514B               	movf	_motor_cue_read_index& (0+255),w,b
 21139  013758  0D08               	mullw	8
 21140  01375A  0E07               	movlw	7
 21141  01375C  26F3               	addwf	prodl,f,c
 21142  01375E  0E00               	movlw	0
 21143  013760  22F4               	addwfc	prodh,f,c
 21144  013762  0E00               	movlw	low _motor_command_cue
 21145  013764  24F3               	addwf	prodl,w,c
 21146  013766  6ED9               	movwf	fsr2l,c
 21147  013768  0E03               	movlw	high _motor_command_cue
 21148  01376A  20F4               	addwfc	prodh,w,c
 21149  01376C  6EDA               	movwf	fsr2h,c
 21150  01376E  50DF               	movf	indf2,w,c
 21151  013770  0100               	movlb	0	; () banked
 21152  013772  6F66               	movwf	__motor_run@type& (0+255),b
 21153  013774  0101               	movlb	1	; () banked
 21154  013776  514B               	movf	_motor_cue_read_index& (0+255),w,b
 21155  013778  0D08               	mullw	8
 21156  01377A  0E00               	movlw	low _motor_command_cue
 21157  01377C  24F3               	addwf	prodl,w,c
 21158  01377E  6ED9               	movwf	fsr2l,c
 21159  013780  0E03               	movlw	high _motor_command_cue
 21160  013782  20F4               	addwfc	prodh,w,c
 21161  013784  6EDA               	movwf	fsr2h,c
 21162  013786  50DF               	movf	indf2,w,c
 21163  013788  EC52  F076         	call	__motor_run
 21164                           
 21165                           ;motor.c: 642: ++motor_cue_read_index;
 21166  01378C  0101               	movlb	1	; () banked
 21167  01378E  2B4B               	incf	_motor_cue_read_index& (0+255),f,b
 21168                           
 21169                           ; BSR set to: 1
 21170                           ;motor.c: 643: motor_cue_read_index &= 0b111;
 21171  013790  0E07               	movlw	7
 21172  013792  174B               	andwf	_motor_cue_read_index& (0+255),f,b
 21173  013794  0012               	return		;funcret
 21174  013796                     __end_of_motor_process_cue:
 21175                           	opt stack 0
 21176                           tblptru	equ	0xFF8
 21177                           tblptrh	equ	0xFF7
 21178                           tblptrl	equ	0xFF6
 21179                           tablat	equ	0xFF5
 21180                           prodh	equ	0xFF4
 21181                           prodl	equ	0xFF3
 21182                           intcon	equ	0xFF2
 21183                           postinc0	equ	0xFEE
 21184                           wreg	equ	0xFE8
 21185                           indf1	equ	0xFE7
 21186                           postinc1	equ	0xFE6
 21187                           postdec1	equ	0xFE5
 21188                           plusw1	equ	0xFE3
 21189                           fsr1h	equ	0xFE2
 21190                           fsr1l	equ	0xFE1
 21191                           indf2	equ	0xFDF
 21192                           postinc2	equ	0xFDE
 21193                           postdec2	equ	0xFDD
 21194                           plusw2	equ	0xFDB
 21195                           fsr2h	equ	0xFDA
 21196                           fsr2l	equ	0xFD9
 21197                           status	equ	0xFD8
 21198                           
 21199 ;; *************** function __motor_run *****************
 21200 ;; Defined at:
 21201 ;;		line 41 in file "motor.c"
 21202 ;; Parameters:    Size  Location     Type
 21203 ;;  direction       1    wreg     enum E6622
 21204 ;;  distance_in_    4    0[BANK0 ] unsigned long 
 21205 ;;  speed           2    4[BANK0 ] unsigned int 
 21206 ;;  type            1    6[BANK0 ] enum E6631
 21207 ;; Auto vars:     Size  Location     Type
 21208 ;;  direction       1   11[BANK0 ] enum E6622
 21209 ;; Return value:  Size  Location     Type
 21210 ;;                  1    wreg      void 
 21211 ;; Registers used:
 21212 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 21213 ;; Tracked objects:
 21214 ;;		On entry : 0/0
 21215 ;;		On exit  : 0/0
 21216 ;;		Unchanged: 0/0
 21217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21218 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21219 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21220 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21221 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21222 ;;Total ram usage:       12 bytes
 21223 ;; Hardware stack levels used:    1
 21224 ;; Hardware stack levels required when called:   10
 21225 ;; This function calls:
 21226 ;;		Nothing
 21227 ;; This function is called by:
 21228 ;;		_motor_process_cue
 21229 ;; This function uses a non-reentrant model
 21230 ;;
 21231                           
 21232                           	psect	text90
 21233  00ECA4                     __ptext90:
 21234                           	opt stack 0
 21235  00ECA4                     __motor_run:
 21236                           	opt stack 19
 21237                           
 21238                           ;incstack = 0
 21239                           ;__motor_run@direction stored from wreg
 21240  00ECA4  0100               	movlb	0	; () banked
 21241  00ECA6  6F6B               	movwf	__motor_run@direction& (0+255),b
 21242                           
 21243                           ;motor.c: 48: motor_direction = direction;
 21244  00ECA8  C06B  F148         	movff	__motor_run@direction,_motor_direction
 21245                           
 21246                           ;motor.c: 49: motor_final_stepcount = distance_in_steps;
 21247  00ECAC  C060  F115         	movff	__motor_run@distance_in_steps,_motor_final_stepcount	;volatile
 21248  00ECB0  C061  F116         	movff	__motor_run@distance_in_steps+1,_motor_final_stepcount+1	;volatile
 21249  00ECB4  C062  F117         	movff	__motor_run@distance_in_steps+2,_motor_final_stepcount+2	;volatile
 21250  00ECB8  C063  F118         	movff	__motor_run@distance_in_steps+3,_motor_final_stepcount+3	;volatile
 21251                           
 21252                           ;motor.c: 50: motor_maximum_speed = speed;
 21253  00ECBC  C064  F131         	movff	__motor_run@speed,_motor_maximum_speed
 21254  00ECC0  C065  F132         	movff	__motor_run@speed+1,_motor_maximum_speed+1
 21255                           
 21256                           ;motor.c: 51: motor_move_type = type;
 21257  00ECC4  C066  F149         	movff	__motor_run@type,_motor_move_type
 21258                           
 21259                           ;motor.c: 54: if(motor_move_type==MOTOR_MOVE_TYPE_ENDLESS)
 21260  00ECC8  0101               	movlb	1	; () banked
 21261  00ECCA  0549               	decf	_motor_move_type& (0+255),w,b
 21262  00ECCC  A4D8               	btfss	status,2,c
 21263  00ECCE  D004               	goto	l2447
 21264                           
 21265                           ; BSR set to: 1
 21266                           ;motor.c: 55: {;motor.c: 56: motor_final_stepcount = 0xFFFFFFFF;
 21267  00ECD0  6915               	setf	_motor_final_stepcount& (0+255),b	;volatile
 21268  00ECD2  6916               	setf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 21269  00ECD4  6917               	setf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 21270  00ECD6  6918               	setf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 21271  00ECD8                     l2447:
 21272                           
 21273                           ; BSR set to: 1
 21274                           ;motor.c: 57: };motor.c: 60: motor_current_speed = 0;
 21275                           
 21276                           ; BSR set to: 1
 21277  00ECD8  0E00               	movlw	0
 21278  00ECDA  0100               	movlb	0	; () banked
 21279  00ECDC  6FFF               	movwf	(_motor_current_speed+1)& (0+255),b	;volatile
 21280  00ECDE  0E00               	movlw	0
 21281  00ECE0  6FFE               	movwf	_motor_current_speed& (0+255),b	;volatile
 21282                           
 21283                           ;motor.c: 61: motor_current_stepcount = 0;
 21284  00ECE2  0E00               	movlw	0
 21285  00ECE4  0101               	movlb	1	; () banked
 21286  00ECE6  6F19               	movwf	_motor_current_stepcount& (0+255),b	;volatile
 21287  00ECE8  0E00               	movlw	0
 21288  00ECEA  6F1A               	movwf	(_motor_current_stepcount+1)& (0+255),b	;volatile
 21289  00ECEC  0E00               	movlw	0
 21290  00ECEE  6F1B               	movwf	(_motor_current_stepcount+2)& (0+255),b	;volatile
 21291  00ECF0  0E00               	movlw	0
 21292  00ECF2  6F1C               	movwf	(_motor_current_stepcount+3)& (0+255),b	;volatile
 21293                           
 21294                           ; BSR set to: 1
 21295                           ;motor.c: 62: motor_next_speed_check = motor_steps_lookup[1];
 21296  00ECF4  0E63               	movlw	low (_motor_steps_lookup+2)
 21297  00ECF6  6EF6               	movwf	tblptrl,c
 21298  00ECF8  0E94               	movlw	high (_motor_steps_lookup+2)
 21299  00ECFA  6EF7               	movwf	tblptrh,c
 21300  00ECFC                     	if	0	;tblptru may be non-zero
 21301  00ECFC                     	endif
 21302  00ECFC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21303  00ECFC  0E00               	movlw	low (__mediumconst shr (0+16))
 21304  00ECFE  6EF8               	movwf	tblptru,c
 21305  00ED00                     	endif
 21306  00ED00  0009               	tblrd		*+
 21307  00ED02  CFF5 F067          	movff	tablat,??__motor_run
 21308  00ED06  0009               	tblrd		*+
 21309  00ED08  CFF5 F068          	movff	tablat,??__motor_run+1
 21310  00ED0C  C067  F238         	movff	??__motor_run,_motor_next_speed_check	;volatile
 21311  00ED10  C068  F239         	movff	??__motor_run+1,_motor_next_speed_check+1	;volatile
 21312  00ED14  0102               	movlb	2	; () banked
 21313  00ED16  6B3A               	clrf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 21314  00ED18  6B3B               	clrf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 21315                           
 21316                           ; BSR set to: 2
 21317                           ;motor.c: 65: CCP1CONbits.CCP1M = 0b0000;
 21318  00ED1A  90BA               	bcf	4026,0,c	;volatile
 21319  00ED1C  92BA               	bcf	4026,1,c	;volatile
 21320  00ED1E  94BA               	bcf	4026,2,c	;volatile
 21321  00ED20  96BA               	bcf	4026,3,c	;volatile
 21322                           
 21323                           ; BSR set to: 2
 21324                           ;motor.c: 68: LATBbits.LB0 = 0;
 21325  00ED22  908A               	bcf	3978,0,c	;volatile
 21326                           
 21327                           ; BSR set to: 2
 21328                           ;motor.c: 69: if(direction==MOTOR_DIRECTION_CCW)
 21329  00ED24  0100               	movlb	0	; () banked
 21330  00ED26  296B               	incf	__motor_run@direction& (0+255),w,b
 21331  00ED28  A4D8               	btfss	status,2,c
 21332  00ED2A  D005               	goto	l2448
 21333                           
 21334                           ; BSR set to: 0
 21335                           ;motor.c: 70: {;motor.c: 71: if(config.inverse_direction)
 21336  00ED2C  0101               	movlb	1	; () banked
 21337  00ED2E  5199               	movf	(_config+4)& (0+255),w,b
 21338  00ED30  B4D8               	btfsc	status,2,c
 21339  00ED32  D005               	goto	u17150
 21340  00ED34  D006               	goto	l2452
 21341  00ED36                     l2448:
 21342                           
 21343                           ;motor.c: 76: else;motor.c: 77: {;motor.c: 78: if(config.inverse_direction)
 21344                           
 21345                           ; BSR set to: 1
 21346  00ED36  0101               	movlb	1	; () banked
 21347  00ED38  5199               	movf	(_config+4)& (0+255),w,b
 21348  00ED3A  B4D8               	btfsc	status,2,c
 21349  00ED3C  D002               	goto	l2452
 21350  00ED3E                     u17150:
 21351                           
 21352                           ; BSR set to: 1
 21353                           ;motor.c: 79: LATBbits.LB2 = 0;
 21354  00ED3E  948A               	bcf	3978,2,c	;volatile
 21355  00ED40  D001               	goto	l2453
 21356  00ED42                     l2452:
 21357                           
 21358                           ; BSR set to: 1
 21359                           ;motor.c: 80: else;motor.c: 81: LATBbits.LB2 = 1;
 21360  00ED42  848A               	bsf	3978,2,c	;volatile
 21361  00ED44                     l2453:
 21362                           
 21363                           ; BSR set to: 1
 21364                           ;motor.c: 82: };motor.c: 85: LATBbits.LB1 = 1;
 21365                           
 21366                           ; BSR set to: 1
 21367  00ED44  828A               	bsf	3978,1,c	;volatile
 21368                           
 21369                           ; BSR set to: 1
 21370                           ;motor.c: 88: ++motor_current_stepcount;
 21371  00ED46  0E01               	movlw	1
 21372  00ED48  2719               	addwf	_motor_current_stepcount& (0+255),f,b	;volatile
 21373  00ED4A  0E00               	movlw	0
 21374  00ED4C  231A               	addwfc	(_motor_current_stepcount+1)& (0+255),f,b	;volatile
 21375  00ED4E  231B               	addwfc	(_motor_current_stepcount+2)& (0+255),f,b	;volatile
 21376  00ED50  231C               	addwfc	(_motor_current_stepcount+3)& (0+255),f,b	;volatile
 21377                           
 21378                           ;motor.c: 91: os.current_position_in_steps += motor_direction;
 21379  00ED52  5148               	movf	_motor_direction& (0+255),w,b
 21380  00ED54  0100               	movlb	0	; () banked
 21381  00ED56  6F67               	movwf	??__motor_run& (0+255),b
 21382  00ED58  0E00               	movlw	0
 21383  00ED5A  BF67               	btfsc	??__motor_run& (0+255),7,b
 21384  00ED5C  0EFF               	movlw	255
 21385  00ED5E  6F68               	movwf	(??__motor_run+1)& (0+255),b
 21386  00ED60  6F69               	movwf	(??__motor_run+2)& (0+255),b
 21387  00ED62  6F6A               	movwf	(??__motor_run+3)& (0+255),b
 21388  00ED64  5167               	movf	??__motor_run& (0+255),w,b
 21389  00ED66  0101               	movlb	1	; () banked
 21390  00ED68  276B               	addwf	(_os+7)& (0+255),f,b	;volatile
 21391  00ED6A  0100               	movlb	0	; () banked
 21392  00ED6C  5168               	movf	(??__motor_run+1)& (0+255),w,b
 21393  00ED6E  0101               	movlb	1	; () banked
 21394  00ED70  236C               	addwfc	(_os+8)& (0+255),f,b	;volatile
 21395  00ED72  0100               	movlb	0	; () banked
 21396  00ED74  5169               	movf	(??__motor_run+2)& (0+255),w,b
 21397  00ED76  0101               	movlb	1	; () banked
 21398  00ED78  236D               	addwfc	(_os+9)& (0+255),f,b	;volatile
 21399  00ED7A  0100               	movlb	0	; () banked
 21400  00ED7C  516A               	movf	(??__motor_run+3)& (0+255),w,b
 21401  00ED7E  0101               	movlb	1	; () banked
 21402  00ED80  236E               	addwfc	(_os+10)& (0+255),f,b	;volatile
 21403                           
 21404                           ;motor.c: 92: if(os.current_position_in_steps==config.full_circle_in_steps)
 21405  00ED82  5195               	movf	_config& (0+255),w,b
 21406  00ED84  196B               	xorwf	(_os+7)& (0+255),w,b	;volatile
 21407  00ED86  E114               	bnz	l17662
 21408  00ED88  5196               	movf	(_config+1)& (0+255),w,b
 21409  00ED8A  196C               	xorwf	(_os+8)& (0+255),w,b	;volatile
 21410  00ED8C  E111               	bnz	l17662
 21411  00ED8E  5197               	movf	(_config+2)& (0+255),w,b
 21412  00ED90  196D               	xorwf	(_os+9)& (0+255),w,b	;volatile
 21413  00ED92  E10E               	bnz	l17662
 21414  00ED94  5198               	movf	(_config+3)& (0+255),w,b
 21415  00ED96  196E               	xorwf	(_os+10)& (0+255),w,b	;volatile
 21416  00ED98  A4D8               	btfss	status,2,c
 21417  00ED9A  D00A               	goto	l2454
 21418                           
 21419                           ; BSR set to: 1
 21420                           ;motor.c: 93: {;motor.c: 94: os.current_position_in_steps = 0;
 21421  00ED9C  0E00               	movlw	0
 21422  00ED9E  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
 21423  00EDA0  0E00               	movlw	0
 21424  00EDA2  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
 21425  00EDA4  0E00               	movlw	0
 21426  00EDA6  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
 21427  00EDA8  0E00               	movlw	0
 21428  00EDAA  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
 21429                           
 21430                           ; BSR set to: 1
 21431                           ;motor.c: 95: ++os.absolute_position;
 21432  00EDAC  4B6F               	infsnz	(_os+11)& (0+255),f,b	;volatile
 21433  00EDAE  2B70               	incf	(_os+12)& (0+255),f,b	;volatile
 21434  00EDB0                     l2454:
 21435  00EDB0                     l17662:
 21436                           
 21437                           ; BSR set to: 1
 21438                           ;motor.c: 96: };motor.c: 97: if(os.current_position_in_steps==0xFFFFFFFF)
 21439  00EDB0  296B               	incf	(_os+7)& (0+255),w,b	;volatile
 21440  00EDB2  E116               	bnz	l17668
 21441  00EDB4  296C               	incf	(_os+8)& (0+255),w,b	;volatile
 21442  00EDB6  E114               	bnz	l17668
 21443  00EDB8  296D               	incf	(_os+9)& (0+255),w,b	;volatile
 21444  00EDBA  E112               	bnz	l17668
 21445  00EDBC  296E               	incf	(_os+10)& (0+255),w,b	;volatile
 21446  00EDBE  A4D8               	btfss	status,2,c
 21447  00EDC0  D00F               	goto	l2455
 21448                           
 21449                           ; BSR set to: 1
 21450                           ;motor.c: 98: {;motor.c: 99: os.current_position_in_steps = (config.full_circle_in_steps
      +                          -1);
 21451  00EDC2  0EFF               	movlw	255
 21452  00EDC4  2595               	addwf	_config& (0+255),w,b
 21453  00EDC6  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
 21454  00EDC8  0EFF               	movlw	255
 21455  00EDCA  2196               	addwfc	(_config+1)& (0+255),w,b
 21456  00EDCC  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
 21457  00EDCE  0EFF               	movlw	255
 21458  00EDD0  2197               	addwfc	(_config+2)& (0+255),w,b
 21459  00EDD2  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
 21460  00EDD4  0EFF               	movlw	255
 21461  00EDD6  2198               	addwfc	(_config+3)& (0+255),w,b
 21462  00EDD8  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
 21463                           
 21464                           ; BSR set to: 1
 21465                           ;motor.c: 100: --os.absolute_position;
 21466  00EDDA  076F               	decf	(_os+11)& (0+255),f,b	;volatile
 21467  00EDDC  A0D8               	btfss	status,0,c
 21468  00EDDE  0770               	decf	(_os+12)& (0+255),f,b	;volatile
 21469  00EDE0                     l2455:
 21470  00EDE0                     l17668:
 21471                           
 21472                           ; BSR set to: 1
 21473                           ;motor.c: 101: };motor.c: 104: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOL
      +                          OCK = 0;};
 21474  00EDE0  0E55               	movlw	85
 21475  00EDE2  6EA7               	movwf	4007,c	;volsfr
 21476                           
 21477                           ; BSR set to: 1
 21478  00EDE4  0EAA               	movlw	170
 21479  00EDE6  6EA7               	movwf	4007,c	;volsfr
 21480                           
 21481                           ; BSR set to: 1
 21482  00EDE8  010E               	movlb	14	; () banked
 21483  00EDEA  91BF               	bcf	191,0,b	;volatile
 21484                           
 21485                           ; BSR set to: 14
 21486                           ;motor.c: 105: RPOR4 = 0;
 21487  00EDEC  0E00               	movlw	0
 21488  00EDEE  6FC4               	movwf	196,b	;volatile
 21489                           
 21490                           ; BSR set to: 14
 21491                           ;motor.c: 106: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 21492  00EDF0  0E55               	movlw	85
 21493  00EDF2  6EA7               	movwf	4007,c	;volsfr
 21494                           
 21495                           ; BSR set to: 14
 21496  00EDF4  0EAA               	movlw	170
 21497  00EDF6  6EA7               	movwf	4007,c	;volsfr
 21498                           
 21499                           ; BSR set to: 14
 21500  00EDF8  81BF               	bsf	191,0,b	;volatile
 21501                           
 21502                           ; BSR set to: 14
 21503                           ;motor.c: 109: motor_mode = MOTOR_MODE_MANUAL;
 21504  00EDFA  0E00               	movlw	0
 21505  00EDFC  0101               	movlb	1	; () banked
 21506  00EDFE  6F47               	movwf	_motor_mode& (0+255),b	;volatile
 21507                           
 21508                           ; BSR set to: 1
 21509                           ;motor.c: 113: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_speed];
 21510  00EE00  0EFD               	movlw	low _motor_prescaler_lookup
 21511  00EE02  0100               	movlb	0	; () banked
 21512  00EE04  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 21513  00EE06  6EF6               	movwf	tblptrl,c
 21514  00EE08  0E9B               	movlw	high _motor_prescaler_lookup
 21515  00EE0A  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 21516  00EE0C  6EF7               	movwf	tblptrh,c
 21517  00EE0E                     	if	1	;There are 3 active tblptr bytes
 21518  00EE0E  6AF8               	clrf	tblptru,c
 21519  00EE10  0E00               	movlw	low (__mediumconst shr (0+16))
 21520  00EE12  22F8               	addwfc	tblptru,f,c
 21521  00EE14                     	endif
 21522  00EE14  0008               	tblrd		*
 21523  00EE16  CFF5 F067          	movff	tablat,??__motor_run
 21524  00EE1A  50CA               	movf	4042,w,c	;volatile
 21525  00EE1C  1967               	xorwf	??__motor_run& (0+255),w,b
 21526  00EE1E  0BFC               	andlw	-4
 21527  00EE20  1967               	xorwf	??__motor_run& (0+255),w,b
 21528  00EE22  6ECA               	movwf	4042,c	;volatile
 21529                           
 21530                           ; BSR set to: 0
 21531                           ;motor.c: 115: PR2 = motor_period_lookup[motor_current_speed];
 21532  00EE24  0E16               	movlw	low _motor_period_lookup
 21533  00EE26  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 21534  00EE28  6EF6               	movwf	tblptrl,c
 21535  00EE2A  0E9A               	movlw	high _motor_period_lookup
 21536  00EE2C  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 21537  00EE2E  6EF7               	movwf	tblptrh,c
 21538  00EE30                     	if	1	;There are 3 active tblptr bytes
 21539  00EE30  6AF8               	clrf	tblptru,c
 21540  00EE32  0E00               	movlw	low (__mediumconst shr (0+16))
 21541  00EE34  22F8               	addwfc	tblptru,f,c
 21542  00EE36                     	endif
 21543  00EE36  0008               	tblrd		*
 21544  00EE38  CFF5 FFCB          	movff	tablat,4043	;volatile
 21545                           
 21546                           ; BSR set to: 0
 21547                           ;motor.c: 117: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 21548  00EE3C  0E2F               	movlw	low _motor_postscaler_lookup
 21549  00EE3E  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 21550  00EE40  6EF6               	movwf	tblptrl,c
 21551  00EE42  0E98               	movlw	high _motor_postscaler_lookup
 21552  00EE44  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 21553  00EE46  6EF7               	movwf	tblptrh,c
 21554  00EE48                     	if	1	;There are 3 active tblptr bytes
 21555  00EE48  6AF8               	clrf	tblptru,c
 21556  00EE4A  0E00               	movlw	low (__mediumconst shr (0+16))
 21557  00EE4C  22F8               	addwfc	tblptru,f,c
 21558  00EE4E                     	endif
 21559  00EE4E  0008               	tblrd		*
 21560  00EE50  CFF5 F067          	movff	tablat,??__motor_run
 21561  00EE54  4767               	rlncf	??__motor_run& (0+255),f,b
 21562  00EE56  4767               	rlncf	??__motor_run& (0+255),f,b
 21563  00EE58  4767               	rlncf	??__motor_run& (0+255),f,b
 21564  00EE5A  50CA               	movf	4042,w,c	;volatile
 21565  00EE5C  1967               	xorwf	??__motor_run& (0+255),w,b
 21566  00EE5E  0B87               	andlw	-121
 21567  00EE60  1967               	xorwf	??__motor_run& (0+255),w,b
 21568  00EE62  6ECA               	movwf	4042,c	;volatile
 21569                           
 21570                           ; BSR set to: 0
 21571                           ;motor.c: 119: CCPR1L = PR2>>1;
 21572  00EE64  90D8               	bcf	status,0,c
 21573  00EE66  30CB               	rrcf	4043,w,c	;volatile
 21574  00EE68  6EBB               	movwf	4027,c	;volatile
 21575                           
 21576                           ; BSR set to: 0
 21577                           ;motor.c: 122: PIR1bits.TMR2IF = 0;
 21578  00EE6A  929E               	bcf	3998,1,c	;volatile
 21579                           
 21580                           ; BSR set to: 0
 21581                           ;motor.c: 123: PIE1bits.TMR2IE = 1;
 21582  00EE6C  829D               	bsf	3997,1,c	;volatile
 21583                           
 21584                           ; BSR set to: 0
 21585                           ;motor.c: 126: TMR2 = 0;
 21586  00EE6E  0E00               	movlw	0
 21587  00EE70  6ECC               	movwf	4044,c	;volatile
 21588                           
 21589                           ; BSR set to: 0
 21590                           ;motor.c: 127: T2CONbits.TMR2ON = 1;
 21591  00EE72  84CA               	bsf	4042,2,c	;volatile
 21592                           
 21593                           ; BSR set to: 0
 21594                           ;motor.c: 130: os.busy = 1;
 21595  00EE74  0E01               	movlw	1
 21596  00EE76  0101               	movlb	1	; () banked
 21597  00EE78  6F74               	movwf	(_os+16)& (0+255),b	;volatile
 21598                           
 21599                           ; BSR set to: 1
 21600  00EE7A  0012               	return		;funcret
 21601  00EE7C                     __end_of__motor_run:
 21602                           	opt stack 0
 21603                           tblptru	equ	0xFF8
 21604                           tblptrh	equ	0xFF7
 21605                           tblptrl	equ	0xFF6
 21606                           tablat	equ	0xFF5
 21607                           prodh	equ	0xFF4
 21608                           prodl	equ	0xFF3
 21609                           intcon	equ	0xFF2
 21610                           postinc0	equ	0xFEE
 21611                           wreg	equ	0xFE8
 21612                           indf1	equ	0xFE7
 21613                           postinc1	equ	0xFE6
 21614                           postdec1	equ	0xFE5
 21615                           plusw1	equ	0xFE3
 21616                           fsr1h	equ	0xFE2
 21617                           fsr1l	equ	0xFE1
 21618                           indf2	equ	0xFDF
 21619                           postinc2	equ	0xFDE
 21620                           postdec2	equ	0xFDD
 21621                           plusw2	equ	0xFDB
 21622                           fsr2h	equ	0xFDA
 21623                           fsr2l	equ	0xFD9
 21624                           status	equ	0xFD8
 21625                           
 21626 ;; *************** function _encoder_statemachine *****************
 21627 ;; Defined at:
 21628 ;;		line 210 in file "encoder.c"
 21629 ;; Parameters:    Size  Location     Type
 21630 ;;		None
 21631 ;; Auto vars:     Size  Location     Type
 21632 ;;		None
 21633 ;; Return value:  Size  Location     Type
 21634 ;;                  1    wreg      void 
 21635 ;; Registers used:
 21636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21637 ;; Tracked objects:
 21638 ;;		On entry : 0/0
 21639 ;;		On exit  : 0/0
 21640 ;;		Unchanged: 0/0
 21641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21644 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21645 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21646 ;;Total ram usage:        4 bytes
 21647 ;; Hardware stack levels used:    1
 21648 ;; Hardware stack levels required when called:   15
 21649 ;; This function calls:
 21650 ;;		__divide_jump_size_decrement
 21651 ;;		__divide_jump_size_increment
 21652 ;;		__encoder_next_arc_step_size
 21653 ;;		__encoder_next_divide_step_size
 21654 ;;		__encoder_next_setup_stepsize
 21655 ;;		_motor_arc_move
 21656 ;;		_motor_change_speed
 21657 ;;		_motor_decrease_manual_speed
 21658 ;;		_motor_divide_jump
 21659 ;;		_motor_divide_jump_to_nearest
 21660 ;;		_motor_goto_steps
 21661 ;;		_motor_increase_manual_speed
 21662 ;;		_motor_move_degrees_int
 21663 ;;		_motor_move_endless
 21664 ;;		_motor_set_zero
 21665 ;;		_motor_stop
 21666 ;; This function is called by:
 21667 ;;		_main
 21668 ;; This function uses a non-reentrant model
 21669 ;;
 21670                           
 21671                           	psect	text91
 21672  00AFCC                     __ptext91:
 21673                           	opt stack 0
 21674  00AFCC                     _encoder_statemachine:
 21675                           	opt stack 15
 21676                           
 21677                           ;encoder.c: 213: if(os.encoder1Count==0 && os.encoder2Count==0 && os.button1==0 && os.bu
      +                          tton2==0)
 21678                           
 21679                           ; BSR set to: 1
 21680                           ;incstack = 0
 21681  00AFCC  0101               	movlb	1	; () banked
 21682  00AFCE  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 21683  00AFD0  A4D8               	btfss	status,2,c
 21684  00AFD2  D3E2               	goto	l2777
 21685                           
 21686                           ; BSR set to: 1
 21687  00AFD4  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 21688  00AFD6  A4D8               	btfss	status,2,c
 21689  00AFD8  D3DF               	goto	l2777
 21690                           
 21691                           ; BSR set to: 1
 21692  00AFDA  5168               	movf	(_os+4)& (0+255),w,b	;volatile
 21693  00AFDC  A4D8               	btfss	status,2,c
 21694  00AFDE  D3DC               	goto	l2777
 21695                           
 21696                           ; BSR set to: 1
 21697  00AFE0  516A               	movf	(_os+6)& (0+255),w,b	;volatile
 21698  00AFE2  B4D8               	btfsc	status,2,c
 21699  00AFE4  0012               	return	
 21700  00AFE6  D3D8               	goto	l2777
 21701  00AFE8                     
 21702                           ; BSR set to: 1
 21703                           ;encoder.c: 225: if(os.button1==1 || os.button2==1)
 21704                           
 21705                           ; BSR set to: 1
 21706  00AFE8  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 21707  00AFEA  B4D8               	btfsc	status,2,c
 21708  00AFEC  D003               	goto	u17790
 21709                           
 21710                           ; BSR set to: 1
 21711  00AFEE  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 21712  00AFF0  A4D8               	btfss	status,2,c
 21713  00AFF2  D002               	goto	l2781
 21714  00AFF4                     u17790:
 21715                           
 21716                           ; BSR set to: 1
 21717                           ;encoder.c: 226: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 21718                           
 21719                           ; BSR set to: 1
 21720  00AFF4  0E11               	movlw	17
 21721  00AFF6  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21722  00AFF8                     l2781:
 21723                           
 21724                           ; BSR set to: 1
 21725                           ;encoder.c: 227: if(os.encoder1Count+os.encoder2Count>0)
 21726                           
 21727                           ; BSR set to: 1
 21728  00AFF8  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21729  00AFFC  0100               	movlb	0	; () banked
 21730  00AFFE  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21731  00B000  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21732  00B002  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21733  00B004  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21734  00B008  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21735  00B00A  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21736  00B00C  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21737  00B00E  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21738  00B010  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21739  00B012  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21740  00B014  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21741  00B016  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21742  00B018  D008               	goto	l2784
 21743  00B01A  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21744  00B01C  E103               	bnz	u17800
 21745  00B01E  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21746  00B020  A0D8               	btfss	status,0,c
 21747  00B022  D003               	goto	l2784
 21748  00B024                     u17800:
 21749                           
 21750                           ; BSR set to: 0
 21751                           ;encoder.c: 228: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 21752  00B024  0E02               	movlw	2
 21753  00B026  0101               	movlb	1	; () banked
 21754  00B028  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21755  00B02A                     l2784:
 21756                           
 21757                           ;encoder.c: 229: if(os.encoder1Count+os.encoder2Count<0)
 21758                           
 21759                           ; BSR set to: 1
 21760  00B02A  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21761  00B02E  0100               	movlb	0	; () banked
 21762  00B030  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21763  00B032  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21764  00B034  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21765  00B036  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21766  00B03A  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21767  00B03C  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21768  00B03E  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21769  00B040  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21770  00B042  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21771  00B044  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21772  00B046  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21773  00B048  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21774  00B04A  D3CB               	goto	l2812
 21775                           
 21776                           ; BSR set to: 0
 21777                           ;encoder.c: 230: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 21778  00B04C  0E05               	movlw	5
 21779  00B04E  D392               	goto	L22
 21780  00B050                     
 21781                           ; BSR set to: 1
 21782                           ;encoder.c: 233: if(os.button1==1 || os.button2==1)
 21783                           
 21784                           ; BSR set to: 1
 21785  00B050  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 21786  00B052  B4D8               	btfsc	status,2,c
 21787  00B054  D003               	goto	u17830
 21788                           
 21789                           ; BSR set to: 1
 21790  00B056  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 21791  00B058  A4D8               	btfss	status,2,c
 21792  00B05A  D002               	goto	l2788
 21793  00B05C                     u17830:
 21794                           
 21795                           ; BSR set to: 1
 21796                           ;encoder.c: 234: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 21797                           
 21798                           ; BSR set to: 1
 21799  00B05C  0E31               	movlw	49
 21800  00B05E  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21801  00B060                     l2788:
 21802                           
 21803                           ; BSR set to: 1
 21804                           ;encoder.c: 235: if(os.encoder1Count+os.encoder2Count>0)
 21805                           
 21806                           ; BSR set to: 1
 21807  00B060  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21808  00B064  0100               	movlb	0	; () banked
 21809  00B066  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21810  00B068  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21811  00B06A  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21812  00B06C  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21813  00B070  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21814  00B072  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21815  00B074  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21816  00B076  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21817  00B078  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21818  00B07A  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21819  00B07C  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21820  00B07E  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21821  00B080  D008               	goto	l2791
 21822  00B082  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21823  00B084  E103               	bnz	u17840
 21824  00B086  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21825  00B088  A0D8               	btfss	status,0,c
 21826  00B08A  D003               	goto	l2791
 21827  00B08C                     u17840:
 21828                           
 21829                           ; BSR set to: 0
 21830                           ;encoder.c: 236: os.displayState = DISPLAY_STATE_MAIN_ARC;
 21831  00B08C  0E03               	movlw	3
 21832  00B08E  0101               	movlb	1	; () banked
 21833  00B090  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21834  00B092                     l2791:
 21835                           
 21836                           ;encoder.c: 237: if(os.encoder1Count+os.encoder2Count<0)
 21837                           
 21838                           ; BSR set to: 1
 21839  00B092  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21840  00B096  0100               	movlb	0	; () banked
 21841  00B098  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21842  00B09A  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21843  00B09C  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21844  00B09E  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21845  00B0A2  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21846  00B0A4  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21847  00B0A6  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21848  00B0A8  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21849  00B0AA  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21850  00B0AC  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21851  00B0AE  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21852  00B0B0  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21853  00B0B2  D397               	goto	l2812
 21854                           
 21855                           ; BSR set to: 0
 21856                           ;encoder.c: 238: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 21857  00B0B4  0E01               	movlw	1
 21858  00B0B6  D35E               	goto	L22
 21859  00B0B8                     
 21860                           ; BSR set to: 1
 21861                           ;encoder.c: 241: if(os.button1==1 || os.button2==1)
 21862                           
 21863                           ; BSR set to: 1
 21864  00B0B8  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 21865  00B0BA  B4D8               	btfsc	status,2,c
 21866  00B0BC  D003               	goto	u17870
 21867                           
 21868                           ; BSR set to: 1
 21869  00B0BE  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 21870  00B0C0  A4D8               	btfss	status,2,c
 21871  00B0C2  D002               	goto	l2794
 21872  00B0C4                     u17870:
 21873                           
 21874                           ; BSR set to: 1
 21875                           ;encoder.c: 242: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 21876                           
 21877                           ; BSR set to: 1
 21878  00B0C4  0E51               	movlw	81
 21879  00B0C6  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21880  00B0C8                     l2794:
 21881                           
 21882                           ; BSR set to: 1
 21883                           ;encoder.c: 243: if(os.encoder1Count+os.encoder2Count>0)
 21884                           
 21885                           ; BSR set to: 1
 21886  00B0C8  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21887  00B0CC  0100               	movlb	0	; () banked
 21888  00B0CE  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21889  00B0D0  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21890  00B0D2  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21891  00B0D4  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21892  00B0D8  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21893  00B0DA  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21894  00B0DC  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21895  00B0DE  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21896  00B0E0  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21897  00B0E2  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21898  00B0E4  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21899  00B0E6  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21900  00B0E8  D008               	goto	l2797
 21901  00B0EA  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21902  00B0EC  E103               	bnz	u17880
 21903  00B0EE  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21904  00B0F0  A0D8               	btfss	status,0,c
 21905  00B0F2  D003               	goto	l2797
 21906  00B0F4                     u17880:
 21907                           
 21908                           ; BSR set to: 0
 21909                           ;encoder.c: 244: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 21910  00B0F4  0E04               	movlw	4
 21911  00B0F6  0101               	movlb	1	; () banked
 21912  00B0F8  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21913  00B0FA                     l2797:
 21914                           
 21915                           ;encoder.c: 245: if(os.encoder1Count+os.encoder2Count<0)
 21916                           
 21917                           ; BSR set to: 1
 21918  00B0FA  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21919  00B0FE  0100               	movlb	0	; () banked
 21920  00B100  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21921  00B102  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21922  00B104  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21923  00B106  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21924  00B10A  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21925  00B10C  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21926  00B10E  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21927  00B110  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21928  00B112  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21929  00B114  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21930  00B116  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21931  00B118  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21932  00B11A  D363               	goto	l2812
 21933                           
 21934                           ; BSR set to: 0
 21935                           ;encoder.c: 246: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 21936  00B11C  0E02               	movlw	2
 21937  00B11E  D32A               	goto	L22
 21938  00B120                     
 21939                           ; BSR set to: 1
 21940                           ;encoder.c: 249: if(os.button1==1 || os.button2==1)
 21941                           
 21942                           ; BSR set to: 1
 21943  00B120  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 21944  00B122  B4D8               	btfsc	status,2,c
 21945  00B124  D003               	goto	u17910
 21946                           
 21947                           ; BSR set to: 1
 21948  00B126  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 21949  00B128  A4D8               	btfss	status,2,c
 21950  00B12A  D002               	goto	l2800
 21951  00B12C                     u17910:
 21952                           
 21953                           ; BSR set to: 1
 21954                           ;encoder.c: 250: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 21955                           
 21956                           ; BSR set to: 1
 21957  00B12C  0E82               	movlw	130
 21958  00B12E  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21959  00B130                     l2800:
 21960                           
 21961                           ; BSR set to: 1
 21962                           ;encoder.c: 251: if(os.encoder1Count+os.encoder2Count>0)
 21963                           
 21964                           ; BSR set to: 1
 21965  00B130  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21966  00B134  0100               	movlb	0	; () banked
 21967  00B136  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21968  00B138  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21969  00B13A  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21970  00B13C  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21971  00B140  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21972  00B142  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21973  00B144  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21974  00B146  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21975  00B148  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21976  00B14A  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21977  00B14C  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21978  00B14E  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21979  00B150  D008               	goto	l2803
 21980  00B152  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21981  00B154  E103               	bnz	u17920
 21982  00B156  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21983  00B158  A0D8               	btfss	status,0,c
 21984  00B15A  D003               	goto	l2803
 21985  00B15C                     u17920:
 21986                           
 21987                           ; BSR set to: 0
 21988                           ;encoder.c: 252: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 21989  00B15C  0E05               	movlw	5
 21990  00B15E  0101               	movlb	1	; () banked
 21991  00B160  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21992  00B162                     l2803:
 21993                           
 21994                           ;encoder.c: 253: if(os.encoder1Count+os.encoder2Count<0)
 21995                           
 21996                           ; BSR set to: 1
 21997  00B162  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21998  00B166  0100               	movlb	0	; () banked
 21999  00B168  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22000  00B16A  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 22001  00B16C  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22002  00B16E  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22003  00B172  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22004  00B174  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22005  00B176  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22006  00B178  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 22007  00B17A  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22008  00B17C  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22009  00B17E  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22010  00B180  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 22011  00B182  D32F               	goto	l2812
 22012                           
 22013                           ; BSR set to: 0
 22014                           ;encoder.c: 254: os.displayState = DISPLAY_STATE_MAIN_ARC;
 22015  00B184  0E03               	movlw	3
 22016  00B186  D2F6               	goto	L22
 22017  00B188                     
 22018                           ; BSR set to: 1
 22019                           ;encoder.c: 257: if(os.button1==1 || os.button2==1)
 22020                           
 22021                           ; BSR set to: 1
 22022  00B188  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 22023  00B18A  B4D8               	btfsc	status,2,c
 22024  00B18C  D003               	goto	u17950
 22025                           
 22026                           ; BSR set to: 1
 22027  00B18E  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 22028  00B190  A4D8               	btfss	status,2,c
 22029  00B192  D002               	goto	l2806
 22030  00B194                     u17950:
 22031                           
 22032                           ; BSR set to: 1
 22033                           ;encoder.c: 258: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
 22034                           
 22035                           ; BSR set to: 1
 22036  00B194  0E71               	movlw	113
 22037  00B196  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22038  00B198                     l2806:
 22039                           
 22040                           ; BSR set to: 1
 22041                           ;encoder.c: 259: if(os.encoder1Count+os.encoder2Count>0)
 22042                           
 22043                           ; BSR set to: 1
 22044  00B198  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 22045  00B19C  0100               	movlb	0	; () banked
 22046  00B19E  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22047  00B1A0  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 22048  00B1A2  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22049  00B1A4  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22050  00B1A8  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22051  00B1AA  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22052  00B1AC  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22053  00B1AE  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 22054  00B1B0  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22055  00B1B2  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22056  00B1B4  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22057  00B1B6  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 22058  00B1B8  D008               	goto	l2809
 22059  00B1BA  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 22060  00B1BC  E103               	bnz	u17960
 22061  00B1BE  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 22062  00B1C0  A0D8               	btfss	status,0,c
 22063  00B1C2  D003               	goto	l2809
 22064  00B1C4                     u17960:
 22065                           
 22066                           ; BSR set to: 0
 22067                           ;encoder.c: 260: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 22068  00B1C4  0E01               	movlw	1
 22069  00B1C6  0101               	movlb	1	; () banked
 22070  00B1C8  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22071  00B1CA                     l2809:
 22072                           
 22073                           ;encoder.c: 261: if(os.encoder1Count+os.encoder2Count<0)
 22074                           
 22075                           ; BSR set to: 1
 22076  00B1CA  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 22077  00B1CE  0100               	movlb	0	; () banked
 22078  00B1D0  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22079  00B1D2  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 22080  00B1D4  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22081  00B1D6  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22082  00B1DA  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22083  00B1DC  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22084  00B1DE  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22085  00B1E0  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 22086  00B1E2  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22087  00B1E4  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22088  00B1E6  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22089  00B1E8  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 22090  00B1EA  D2FB               	goto	l2812
 22091                           
 22092                           ; BSR set to: 0
 22093                           ;encoder.c: 262: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 22094  00B1EC  0E04               	movlw	4
 22095  00B1EE  D2C2               	goto	L22
 22096  00B1F0                     
 22097                           ; BSR set to: 1
 22098  00B1F0  0101               	movlb	1	; () banked
 22099  00B1F2  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 22100                           
 22101                           ; Switch size 1, requested type "space"
 22102                           ; Number of cases is 6, Range of values is 1 to 240
 22103                           ; switch strategies available:
 22104                           ; Name         Instructions Cycles
 22105                           ; simple_byte           19    10 (average)
 22106                           ;	Chosen strategy is simple_byte
 22107  00B1F4  0A01               	xorlw	1	; case 1
 22108  00B1F6  B4D8               	btfsc	status,2,c
 22109  00B1F8  D6F7               	goto	l2780
 22110  00B1FA  0A03               	xorlw	3	; case 2
 22111  00B1FC  B4D8               	btfsc	status,2,c
 22112  00B1FE  D728               	goto	l2787
 22113  00B200  0A01               	xorlw	1	; case 3
 22114  00B202  B4D8               	btfsc	status,2,c
 22115  00B204  D759               	goto	l2793
 22116  00B206  0A07               	xorlw	7	; case 4
 22117  00B208  B4D8               	btfsc	status,2,c
 22118  00B20A  D78A               	goto	l2799
 22119  00B20C  0A01               	xorlw	1	; case 5
 22120  00B20E  B4D8               	btfsc	status,2,c
 22121  00B210  D7BB               	goto	l2805
 22122  00B212  0AF5               	xorlw	245	; case 240
 22123                           
 22124                           ; BSR set to: 1
 22125                           ;encoder.c: 268: break;
 22126  00B214  D2E6               	goto	l2812
 22127  00B216                     
 22128                           ; BSR set to: 1
 22129                           ;encoder.c: 274: if(os.button1==1)
 22130                           
 22131                           ; BSR set to: 1
 22132  00B216  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 22133  00B218  A4D8               	btfss	status,2,c
 22134  00B21A  D00E               	goto	l2816
 22135                           
 22136                           ; BSR set to: 1
 22137                           ;encoder.c: 275: {;encoder.c: 276: os.current_position_in_steps = 0;
 22138  00B21C  0E00               	movlw	0
 22139  00B21E  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
 22140  00B220  0E00               	movlw	0
 22141  00B222  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
 22142  00B224  0E00               	movlw	0
 22143  00B226  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
 22144  00B228  0E00               	movlw	0
 22145  00B22A  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
 22146                           
 22147                           ;encoder.c: 277: os.divide_position = 0;
 22148  00B22C  0E00               	movlw	0
 22149  00B22E  6F7C               	movwf	(_os+24)& (0+255),b	;volatile
 22150  00B230  0E00               	movlw	0
 22151  00B232  6F7B               	movwf	(_os+23)& (0+255),b	;volatile
 22152                           
 22153                           ;encoder.c: 278: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 22154  00B234  0E21               	movlw	33
 22155  00B236  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22156  00B238                     l2816:
 22157                           
 22158                           ; BSR set to: 1
 22159                           ;encoder.c: 279: };encoder.c: 280: if(os.encoder1Count>0)
 22160                           
 22161                           ; BSR set to: 1
 22162  00B238  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 22163  00B23A  0A80               	xorlw	128
 22164  00B23C  0F7F               	addlw	-129
 22165  00B23E  A0D8               	btfss	status,0,c
 22166  00B240  D002               	goto	l2817
 22167                           
 22168                           ; BSR set to: 1
 22169                           ;encoder.c: 281: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
 22170  00B242  0E12               	movlw	18
 22171  00B244  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22172  00B246                     l2817:
 22173                           
 22174                           ; BSR set to: 1
 22175                           ;encoder.c: 282: if(os.encoder1Count<0)
 22176                           
 22177                           ; BSR set to: 1
 22178  00B246  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 22179  00B248  D01B               	goto	l2819
 22180                           
 22181                           ; BSR set to: 1
 22182                           ;encoder.c: 283: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
 22183  00B24A  0E12               	movlw	18
 22184  00B24C  D00F               	goto	L10
 22185  00B24E                     
 22186                           ; BSR set to: 1
 22187                           ;encoder.c: 286: if(os.button1==1)
 22188                           
 22189                           ; BSR set to: 1
 22190  00B24E  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 22191  00B250  A4D8               	btfss	status,2,c
 22192  00B252  D002               	goto	l2821
 22193                           
 22194                           ; BSR set to: 1
 22195                           ;encoder.c: 287: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 22196  00B254  0E01               	movlw	1
 22197  00B256  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22198  00B258                     l2821:
 22199                           
 22200                           ; BSR set to: 1
 22201                           ;encoder.c: 288: if(os.encoder1Count>0)
 22202                           
 22203                           ; BSR set to: 1
 22204  00B258  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 22205  00B25A  0A80               	xorlw	128
 22206  00B25C  0F7F               	addlw	-129
 22207  00B25E  A0D8               	btfss	status,0,c
 22208  00B260  D002               	goto	l2822
 22209                           
 22210                           ; BSR set to: 1
 22211                           ;encoder.c: 289: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 22212  00B262  0E11               	movlw	17
 22213  00B264  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22214  00B266                     l2822:
 22215                           
 22216                           ; BSR set to: 1
 22217                           ;encoder.c: 290: if(os.encoder1Count<0)
 22218                           
 22219                           ; BSR set to: 1
 22220  00B266  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 22221  00B268  D00B               	goto	l2819
 22222                           
 22223                           ; BSR set to: 1
 22224                           ;encoder.c: 291: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 22225  00B26A  0E11               	movlw	17
 22226  00B26C                     L10:
 22227  00B26C  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22228                           
 22229                           ; BSR set to: 1
 22230                           ;encoder.c: 293: }
 22231                           
 22232                           ; BSR set to: 1
 22233                           ;encoder.c: 292: break;
 22234  00B26E  D008               	goto	l2819
 22235  00B270                     
 22236                           ; BSR set to: 1
 22237  00B270  0101               	movlb	1	; () banked
 22238  00B272  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 22239                           
 22240                           ; Switch size 1, requested type "space"
 22241                           ; Number of cases is 2, Range of values is 17 to 18
 22242                           ; switch strategies available:
 22243                           ; Name         Instructions Cycles
 22244                           ; simple_byte            7     4 (average)
 22245                           ;	Chosen strategy is simple_byte
 22246  00B274  0A11               	xorlw	17	; case 17
 22247  00B276  B4D8               	btfsc	status,2,c
 22248  00B278  D7CE               	goto	l2815
 22249  00B27A  0A03               	xorlw	3	; case 18
 22250  00B27C  B4D8               	btfsc	status,2,c
 22251  00B27E  D7E7               	goto	l2820
 22252  00B280                     l2819:
 22253                           
 22254                           ; BSR set to: 1
 22255                           ;encoder.c: 294: if(os.button2==1)
 22256                           
 22257                           ; BSR set to: 1
 22258  00B280  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 22259  00B282  A4D8               	btfss	status,2,c
 22260  00B284  D00A               	goto	l2824
 22261                           
 22262                           ; BSR set to: 1
 22263                           ;encoder.c: 295: {;encoder.c: 296: os.setup_step_size = _encoder_next_setup_stepsize(os.
      +                          setup_step_size);
 22264  00B286  C175  F060         	movff	_os+17,__encoder_next_setup_stepsize@old_stepsize	;volatile
 22265  00B28A  C176  F061         	movff	_os+18,__encoder_next_setup_stepsize@old_stepsize+1	;volatile
 22266  00B28E  ECF9  F0A1         	call	__encoder_next_setup_stepsize	;wreg free
 22267  00B292  C060  F175         	movff	?__encoder_next_setup_stepsize,_os+17	;volatile
 22268  00B296  C061  F176         	movff	?__encoder_next_setup_stepsize+1,_os+18	;volatile
 22269  00B29A                     l2824:
 22270                           
 22271                           ;encoder.c: 297: };encoder.c: 298: if(os.encoder2Count>0)
 22272  00B29A  0101               	movlb	1	; () banked
 22273  00B29C  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 22274  00B29E  0A80               	xorlw	128
 22275  00B2A0  0F7F               	addlw	-129
 22276  00B2A2  A0D8               	btfss	status,0,c
 22277  00B2A4  D010               	goto	l2826
 22278                           
 22279                           ; BSR set to: 1
 22280                           ;encoder.c: 299: {;encoder.c: 301: if(!os.busy)
 22281  00B2A6  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 22282  00B2A8  A4D8               	btfss	status,2,c
 22283  00B2AA  D00D               	goto	l2826
 22284                           
 22285                           ; BSR set to: 1
 22286                           ;encoder.c: 302: motor_move_degrees_int(MOTOR_DIRECTION_CW, os.setup_step_size, 0xFFFF, 
      +                          MOTOR_OVERSHOOT_NO_OVERSHOOT);
 22287  00B2AC  C175  F099         	movff	_os+17,motor_move_degrees_int@distance	;volatile
 22288  00B2B0  C176  F09A         	movff	_os+18,motor_move_degrees_int@distance+1	;volatile
 22289  00B2B4  0EFF               	movlw	255
 22290  00B2B6  0100               	movlb	0	; () banked
 22291  00B2B8  6F9C               	movwf	(motor_move_degrees_int@speed+1)& (0+255),b
 22292  00B2BA  699B               	setf	motor_move_degrees_int@speed& (0+255),b
 22293  00B2BC  0E01               	movlw	1
 22294  00B2BE  6F9D               	movwf	motor_move_degrees_int@overshoot& (0+255),b
 22295  00B2C0  0E01               	movlw	1
 22296  00B2C2  ECD0  F0A9         	call	_motor_move_degrees_int
 22297  00B2C6                     l2826:
 22298                           
 22299                           ;encoder.c: 303: };encoder.c: 304: if(os.encoder2Count<0)
 22300  00B2C6  0101               	movlb	1	; () banked
 22301  00B2C8  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 22302  00B2CA  D28B               	goto	l2812
 22303                           
 22304                           ; BSR set to: 1
 22305                           ;encoder.c: 305: {;encoder.c: 307: if(!os.busy)
 22306  00B2CC  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 22307  00B2CE  A4D8               	btfss	status,2,c
 22308  00B2D0  D288               	goto	l2812
 22309                           
 22310                           ; BSR set to: 1
 22311                           ;encoder.c: 308: motor_move_degrees_int(MOTOR_DIRECTION_CCW, os.setup_step_size, 0xFFFF,
      +                           MOTOR_OVERSHOOT_NO_OVERSHOOT);
 22312  00B2D2  C175  F099         	movff	_os+17,motor_move_degrees_int@distance	;volatile
 22313  00B2D6  C176  F09A         	movff	_os+18,motor_move_degrees_int@distance+1	;volatile
 22314  00B2DA  0EFF               	movlw	255
 22315  00B2DC  0100               	movlb	0	; () banked
 22316  00B2DE  6F9C               	movwf	(motor_move_degrees_int@speed+1)& (0+255),b
 22317  00B2E0  699B               	setf	motor_move_degrees_int@speed& (0+255),b
 22318  00B2E2  0E01               	movlw	1
 22319  00B2E4  6F9D               	movwf	motor_move_degrees_int@overshoot& (0+255),b
 22320  00B2E6  0EFF               	movlw	255
 22321  00B2E8  ECD0  F0A9         	call	_motor_move_degrees_int
 22322                           
 22323                           ;encoder.c: 309: };encoder.c: 310: break;
 22324  00B2EC  D27A               	goto	l2812
 22325  00B2EE                     
 22326                           ;encoder.c: 316: if(os.button1==1 || os.button2==1)
 22327  00B2EE  0101               	movlb	1	; () banked
 22328  00B2F0  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 22329  00B2F2  B4D8               	btfsc	status,2,c
 22330  00B2F4  D003               	goto	u18100
 22331                           
 22332                           ; BSR set to: 1
 22333  00B2F6  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 22334  00B2F8  A4D8               	btfss	status,2,c
 22335  00B2FA  D003               	goto	l2832
 22336  00B2FC                     u18100:
 22337                           
 22338                           ; BSR set to: 1
 22339                           ;encoder.c: 317: {;encoder.c: 318: motor_set_zero(MOTOR_DIRECTION_CCW);
 22340                           
 22341                           ; BSR set to: 1
 22342  00B2FC  0EFF               	movlw	255
 22343  00B2FE  EC49  F0AB         	call	_motor_set_zero
 22344  00B302                     l2832:
 22345                           
 22346                           ;encoder.c: 319: };encoder.c: 320: if(os.encoder1Count+os.encoder2Count>0)
 22347  00B302  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 22348  00B306  0100               	movlb	0	; () banked
 22349  00B308  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22350  00B30A  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 22351  00B30C  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22352  00B30E  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22353  00B312  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22354  00B314  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22355  00B316  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22356  00B318  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 22357  00B31A  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22358  00B31C  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22359  00B31E  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22360  00B320  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 22361  00B322  D008               	goto	l2835
 22362  00B324  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 22363  00B326  E103               	bnz	u18110
 22364  00B328  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 22365  00B32A  A0D8               	btfss	status,0,c
 22366  00B32C  D003               	goto	l2835
 22367  00B32E                     u18110:
 22368                           
 22369                           ; BSR set to: 0
 22370                           ;encoder.c: 321: os.displayState = DISPLAY_STATE_SETUP2_CW;
 22371  00B32E  0E22               	movlw	34
 22372  00B330  0101               	movlb	1	; () banked
 22373  00B332  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22374  00B334                     l2835:
 22375                           
 22376                           ;encoder.c: 322: if(os.encoder1Count+os.encoder2Count<0)
 22377                           
 22378                           ; BSR set to: 1
 22379  00B334  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 22380  00B338  0100               	movlb	0	; () banked
 22381  00B33A  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22382  00B33C  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 22383  00B33E  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22384  00B340  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22385  00B344  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22386  00B346  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22387  00B348  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22388  00B34A  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 22389  00B34C  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22390  00B34E  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22391  00B350  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22392  00B352  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 22393  00B354  D246               	goto	l2812
 22394                           
 22395                           ; BSR set to: 0
 22396                           ;encoder.c: 323: os.displayState = DISPLAY_STATE_SETUP2_CW;
 22397  00B356  0E22               	movlw	34
 22398  00B358  D20D               	goto	L22
 22399  00B35A                     
 22400                           ; BSR set to: 1
 22401                           ;encoder.c: 326: if(os.button1==1 || os.button2==1)
 22402                           
 22403                           ; BSR set to: 1
 22404  00B35A  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 22405  00B35C  B4D8               	btfsc	status,2,c
 22406  00B35E  D003               	goto	u18140
 22407                           
 22408                           ; BSR set to: 1
 22409  00B360  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 22410  00B362  A4D8               	btfss	status,2,c
 22411  00B364  D003               	goto	l2839
 22412  00B366                     u18140:
 22413                           
 22414                           ; BSR set to: 1
 22415                           ;encoder.c: 327: {;encoder.c: 328: motor_set_zero(MOTOR_DIRECTION_CW);
 22416                           
 22417                           ; BSR set to: 1
 22418  00B366  0E01               	movlw	1
 22419  00B368  EC49  F0AB         	call	_motor_set_zero
 22420  00B36C                     l2839:
 22421                           
 22422                           ;encoder.c: 329: };encoder.c: 330: if(os.encoder1Count+os.encoder2Count>0)
 22423  00B36C  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 22424  00B370  0100               	movlb	0	; () banked
 22425  00B372  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22426  00B374  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 22427  00B376  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22428  00B378  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22429  00B37C  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22430  00B37E  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22431  00B380  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22432  00B382  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 22433  00B384  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22434  00B386  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22435  00B388  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22436  00B38A  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 22437  00B38C  D008               	goto	l2842
 22438  00B38E  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 22439  00B390  E103               	bnz	u18150
 22440  00B392  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 22441  00B394  A0D8               	btfss	status,0,c
 22442  00B396  D003               	goto	l2842
 22443  00B398                     u18150:
 22444                           
 22445                           ; BSR set to: 0
 22446                           ;encoder.c: 331: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 22447  00B398  0E21               	movlw	33
 22448  00B39A  0101               	movlb	1	; () banked
 22449  00B39C  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22450  00B39E                     l2842:
 22451                           
 22452                           ;encoder.c: 332: if(os.encoder1Count+os.encoder2Count<0)
 22453                           
 22454                           ; BSR set to: 1
 22455  00B39E  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 22456  00B3A2  0100               	movlb	0	; () banked
 22457  00B3A4  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22458  00B3A6  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 22459  00B3A8  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22460  00B3AA  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22461  00B3AE  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22462  00B3B0  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22463  00B3B2  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22464  00B3B4  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 22465  00B3B6  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22466  00B3B8  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22467  00B3BA  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22468  00B3BC  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 22469  00B3BE  D211               	goto	l2812
 22470                           
 22471                           ; BSR set to: 0
 22472                           ;encoder.c: 333: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 22473  00B3C0  0E21               	movlw	33
 22474  00B3C2  D1D8               	goto	L22
 22475  00B3C4                     
 22476                           ; BSR set to: 1
 22477  00B3C4  0101               	movlb	1	; () banked
 22478  00B3C6  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 22479                           
 22480                           ; Switch size 1, requested type "space"
 22481                           ; Number of cases is 2, Range of values is 33 to 34
 22482                           ; switch strategies available:
 22483                           ; Name         Instructions Cycles
 22484                           ; simple_byte            7     4 (average)
 22485                           ;	Chosen strategy is simple_byte
 22486  00B3C8  0A21               	xorlw	33	; case 33
 22487  00B3CA  B4D8               	btfsc	status,2,c
 22488  00B3CC  D790               	goto	l2831
 22489  00B3CE  0A03               	xorlw	3	; case 34
 22490  00B3D0  B4D8               	btfsc	status,2,c
 22491  00B3D2  D7C3               	goto	l2838
 22492                           
 22493                           ; BSR set to: 1
 22494                           ;encoder.c: 336: break;
 22495  00B3D4  D206               	goto	l2812
 22496  00B3D6                     
 22497                           ; BSR set to: 1
 22498                           ;encoder.c: 342: if(os.button1==1)
 22499                           
 22500                           ; BSR set to: 1
 22501  00B3D6  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 22502  00B3D8  A4D8               	btfss	status,2,c
 22503  00B3DA  D005               	goto	l2847
 22504                           
 22505                           ; BSR set to: 1
 22506                           ;encoder.c: 343: {;encoder.c: 345: motor_divide_jump_to_nearest();
 22507  00B3DC  EC3C  F07C         	call	_motor_divide_jump_to_nearest	;wreg free
 22508                           
 22509                           ;encoder.c: 346: os.displayState = DISPLAY_STATE_DIVIDE2_NORMAL;
 22510  00B3E0  0E41               	movlw	65
 22511  00B3E2  0101               	movlb	1	; () banked
 22512  00B3E4  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22513  00B3E6                     l2847:
 22514                           
 22515                           ; BSR set to: 1
 22516                           ;encoder.c: 347: };encoder.c: 348: if(os.encoder1Count>0)
 22517                           
 22518                           ; BSR set to: 1
 22519  00B3E6  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 22520  00B3E8  0A80               	xorlw	128
 22521  00B3EA  0F7F               	addlw	-129
 22522  00B3EC  A0D8               	btfss	status,0,c
 22523  00B3EE  D002               	goto	l2848
 22524                           
 22525                           ; BSR set to: 1
 22526                           ;encoder.c: 349: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
 22527  00B3F0  0E32               	movlw	50
 22528  00B3F2  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22529  00B3F4                     l2848:
 22530                           
 22531                           ; BSR set to: 1
 22532                           ;encoder.c: 350: if(os.encoder1Count<0)
 22533                           
 22534                           ; BSR set to: 1
 22535  00B3F4  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 22536  00B3F6  D01B               	goto	l2850
 22537                           
 22538                           ; BSR set to: 1
 22539                           ;encoder.c: 351: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
 22540  00B3F8  0E32               	movlw	50
 22541  00B3FA  D00F               	goto	L13
 22542  00B3FC                     
 22543                           ; BSR set to: 1
 22544                           ;encoder.c: 354: if(os.button1==1)
 22545                           
 22546                           ; BSR set to: 1
 22547  00B3FC  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 22548  00B3FE  A4D8               	btfss	status,2,c
 22549  00B400  D002               	goto	l2852
 22550                           
 22551                           ; BSR set to: 1
 22552                           ;encoder.c: 355: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 22553  00B402  0E02               	movlw	2
 22554  00B404  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22555  00B406                     l2852:
 22556                           
 22557                           ; BSR set to: 1
 22558                           ;encoder.c: 356: if(os.encoder1Count>0)
 22559                           
 22560                           ; BSR set to: 1
 22561  00B406  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 22562  00B408  0A80               	xorlw	128
 22563  00B40A  0F7F               	addlw	-129
 22564  00B40C  A0D8               	btfss	status,0,c
 22565  00B40E  D002               	goto	l2853
 22566                           
 22567                           ; BSR set to: 1
 22568                           ;encoder.c: 357: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 22569  00B410  0E31               	movlw	49
 22570  00B412  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22571  00B414                     l2853:
 22572                           
 22573                           ; BSR set to: 1
 22574                           ;encoder.c: 358: if(os.encoder1Count<0)
 22575                           
 22576                           ; BSR set to: 1
 22577  00B414  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 22578  00B416  D00B               	goto	l2850
 22579                           
 22580                           ; BSR set to: 1
 22581                           ;encoder.c: 359: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 22582  00B418  0E31               	movlw	49
 22583  00B41A                     L13:
 22584  00B41A  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22585                           
 22586                           ; BSR set to: 1
 22587                           ;encoder.c: 361: }
 22588                           
 22589                           ; BSR set to: 1
 22590                           ;encoder.c: 360: break;
 22591  00B41C  D008               	goto	l2850
 22592  00B41E                     
 22593                           ; BSR set to: 1
 22594  00B41E  0101               	movlb	1	; () banked
 22595  00B420  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 22596                           
 22597                           ; Switch size 1, requested type "space"
 22598                           ; Number of cases is 2, Range of values is 49 to 50
 22599                           ; switch strategies available:
 22600                           ; Name         Instructions Cycles
 22601                           ; simple_byte            7     4 (average)
 22602                           ;	Chosen strategy is simple_byte
 22603  00B422  0A31               	xorlw	49	; case 49
 22604  00B424  B4D8               	btfsc	status,2,c
 22605  00B426  D7D7               	goto	l2846
 22606  00B428  0A03               	xorlw	3	; case 50
 22607  00B42A  B4D8               	btfsc	status,2,c
 22608  00B42C  D7E7               	goto	l2851
 22609  00B42E                     l2850:
 22610                           
 22611                           ; BSR set to: 1
 22612                           ;encoder.c: 362: if(os.button2==1)
 22613                           
 22614                           ; BSR set to: 1
 22615  00B42E  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 22616  00B430  A4D8               	btfss	status,2,c
 22617  00B432  D005               	goto	l2855
 22618                           
 22619                           ; BSR set to: 1
 22620                           ;encoder.c: 363: {;encoder.c: 364: os.divide_step_size = _encoder_next_divide_step_size(
      +                          os.divide_step_size);
 22621  00B434  517A               	movf	(_os+22)& (0+255),w,b	;volatile
 22622  00B436  EC0F  F0AD         	call	__encoder_next_divide_step_size
 22623  00B43A  0101               	movlb	1	; () banked
 22624  00B43C  6F7A               	movwf	(_os+22)& (0+255),b	;volatile
 22625  00B43E                     l2855:
 22626                           
 22627                           ; BSR set to: 1
 22628                           ;encoder.c: 365: };encoder.c: 366: if(os.encoder2Count>0)
 22629                           
 22630                           ; BSR set to: 1
 22631  00B43E  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 22632  00B440  0A80               	xorlw	128
 22633  00B442  0F7F               	addlw	-129
 22634  00B444  A0D8               	btfss	status,0,c
 22635  00B446  D004               	goto	l2856
 22636                           
 22637                           ; BSR set to: 1
 22638                           ;encoder.c: 367: {;encoder.c: 368: os.division += os.divide_step_size;
 22639  00B448  517A               	movf	(_os+22)& (0+255),w,b	;volatile
 22640  00B44A  2778               	addwf	(_os+20)& (0+255),f,b	;volatile
 22641  00B44C  0E00               	movlw	0
 22642  00B44E  2379               	addwfc	(_os+21)& (0+255),f,b	;volatile
 22643  00B450                     l2856:
 22644                           
 22645                           ; BSR set to: 1
 22646                           ;encoder.c: 369: };encoder.c: 370: if(os.encoder2Count<0)
 22647  00B450  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 22648  00B452  D1C7               	goto	l2812
 22649                           
 22650                           ; BSR set to: 1
 22651                           ;encoder.c: 371: {;encoder.c: 372: if(os.division>os.divide_step_size)
 22652  00B454  517A               	movf	(_os+22)& (0+255),w,b	;volatile
 22653  00B456  0100               	movlb	0	; () banked
 22654  00B458  6FA8               	movwf	??_encoder_statemachine& (0+255),b
 22655  00B45A  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22656  00B45C  0101               	movlb	1	; () banked
 22657  00B45E  5178               	movf	(_os+20)& (0+255),w,b	;volatile
 22658  00B460  0100               	movlb	0	; () banked
 22659  00B462  5DA8               	subwf	??_encoder_statemachine& (0+255),w,b
 22660  00B464  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22661  00B466  0A80               	xorlw	128
 22662  00B468  6FAA               	movwf	(??_encoder_statemachine+2)& (0+255),b
 22663  00B46A  0101               	movlb	1	; () banked
 22664  00B46C  5179               	movf	(_os+21)& (0+255),w,b	;volatile
 22665  00B46E  0A80               	xorlw	128
 22666  00B470  0100               	movlb	0	; () banked
 22667  00B472  59AA               	subwfb	(??_encoder_statemachine+2)& (0+255),w,b
 22668  00B474  B0D8               	btfsc	status,0,c
 22669  00B476  D006               	goto	l2858
 22670                           
 22671                           ; BSR set to: 0
 22672                           ;encoder.c: 373: {;encoder.c: 374: os.division -= os.divide_step_size;
 22673  00B478  0101               	movlb	1	; () banked
 22674  00B47A  517A               	movf	(_os+22)& (0+255),w,b	;volatile
 22675  00B47C  5F78               	subwf	(_os+20)& (0+255),f,b	;volatile
 22676  00B47E  0E00               	movlw	0
 22677  00B480  5B79               	subwfb	(_os+21)& (0+255),f,b	;volatile
 22678                           
 22679                           ;encoder.c: 375: }
 22680  00B482  D1AF               	goto	l2812
 22681  00B484                     l2858:
 22682                           
 22683                           ;encoder.c: 376: else;encoder.c: 377: {;encoder.c: 378: os.division = 1;
 22684                           
 22685                           ; BSR set to: 1
 22686  00B484  0E00               	movlw	0
 22687  00B486  0101               	movlb	1	; () banked
 22688  00B488  6F79               	movwf	(_os+21)& (0+255),b	;volatile
 22689  00B48A  0E01               	movlw	1
 22690  00B48C  6F78               	movwf	(_os+20)& (0+255),b	;volatile
 22691                           
 22692                           ; BSR set to: 1
 22693                           ;encoder.c: 379: };encoder.c: 380: };encoder.c: 381: break;
 22694                           
 22695                           ; BSR set to: 1
 22696  00B48E  D1A9               	goto	l2812
 22697  00B490                     
 22698                           ;encoder.c: 384: if(os.button1==1)
 22699                           
 22700                           ; BSR set to: 1
 22701  00B490  0101               	movlb	1	; () banked
 22702  00B492  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 22703  00B494  A4D8               	btfss	status,2,c
 22704  00B496  D002               	goto	l2861
 22705                           
 22706                           ; BSR set to: 1
 22707                           ;encoder.c: 385: {;encoder.c: 386: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 22708  00B498  0E02               	movlw	2
 22709  00B49A  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22710  00B49C                     l2861:
 22711                           
 22712                           ; BSR set to: 1
 22713                           ;encoder.c: 387: };encoder.c: 388: if(os.button2==1)
 22714                           
 22715                           ; BSR set to: 1
 22716  00B49C  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 22717  00B49E  B4D8               	btfsc	status,2,c
 22718                           
 22719                           ; BSR set to: 1
 22720                           ;encoder.c: 389: {;encoder.c: 390: motor_divide_jump();
 22721  00B4A0  ECC4  F097         	call	_motor_divide_jump	;wreg free
 22722                           
 22723                           ;encoder.c: 391: };encoder.c: 392: if(os.encoder2Count>0)
 22724  00B4A4  0101               	movlb	1	; () banked
 22725  00B4A6  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 22726  00B4A8  0A80               	xorlw	128
 22727  00B4AA  0F7F               	addlw	-129
 22728  00B4AC  B0D8               	btfsc	status,0,c
 22729                           
 22730                           ; BSR set to: 1
 22731                           ;encoder.c: 393: {;encoder.c: 394: _divide_jump_size_increment();
 22732  00B4AE  EC0A  F0AB         	call	__divide_jump_size_increment	;wreg free
 22733                           
 22734                           ;encoder.c: 395: };encoder.c: 396: if(os.encoder2Count<0)
 22735  00B4B2  0101               	movlb	1	; () banked
 22736  00B4B4  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 22737  00B4B6  D195               	goto	l2812
 22738                           
 22739                           ; BSR set to: 1
 22740                           ;encoder.c: 397: {;encoder.c: 398: _divide_jump_size_decrement();
 22741  00B4B8  ECA0  F0A2         	call	__divide_jump_size_decrement	;wreg free
 22742                           
 22743                           ;encoder.c: 399: };encoder.c: 400: break;
 22744  00B4BC  D192               	goto	l2812
 22745  00B4BE                     
 22746                           ;encoder.c: 406: if(os.button1==1)
 22747  00B4BE  0101               	movlb	1	; () banked
 22748  00B4C0  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 22749  00B4C2  A4D8               	btfss	status,2,c
 22750  00B4C4  D002               	goto	l2868
 22751                           
 22752                           ; BSR set to: 1
 22753                           ;encoder.c: 407: {;encoder.c: 408: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 22754  00B4C6  0E62               	movlw	98
 22755  00B4C8  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22756  00B4CA                     l2868:
 22757                           
 22758                           ; BSR set to: 1
 22759                           ;encoder.c: 409: };encoder.c: 410: if(os.encoder1Count>0)
 22760                           
 22761                           ; BSR set to: 1
 22762  00B4CA  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 22763  00B4CC  0A80               	xorlw	128
 22764  00B4CE  0F7F               	addlw	-129
 22765  00B4D0  A0D8               	btfss	status,0,c
 22766  00B4D2  D002               	goto	l2869
 22767                           
 22768                           ; BSR set to: 1
 22769                           ;encoder.c: 411: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
 22770  00B4D4  0E52               	movlw	82
 22771  00B4D6  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22772  00B4D8                     l2869:
 22773                           
 22774                           ; BSR set to: 1
 22775                           ;encoder.c: 412: if(os.encoder1Count<0)
 22776                           
 22777                           ; BSR set to: 1
 22778  00B4D8  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 22779  00B4DA  D01B               	goto	l2871
 22780                           
 22781                           ; BSR set to: 1
 22782                           ;encoder.c: 413: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
 22783  00B4DC  0E52               	movlw	82
 22784  00B4DE  D00F               	goto	L14
 22785  00B4E0                     
 22786                           ; BSR set to: 1
 22787                           ;encoder.c: 416: if(os.button1==1)
 22788                           
 22789                           ; BSR set to: 1
 22790  00B4E0  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 22791  00B4E2  A4D8               	btfss	status,2,c
 22792  00B4E4  D002               	goto	l2873
 22793                           
 22794                           ; BSR set to: 1
 22795                           ;encoder.c: 417: os.displayState = DISPLAY_STATE_MAIN_ARC;
 22796  00B4E6  0E03               	movlw	3
 22797  00B4E8  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22798  00B4EA                     l2873:
 22799                           
 22800                           ; BSR set to: 1
 22801                           ;encoder.c: 418: if(os.encoder1Count>0)
 22802                           
 22803                           ; BSR set to: 1
 22804  00B4EA  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 22805  00B4EC  0A80               	xorlw	128
 22806  00B4EE  0F7F               	addlw	-129
 22807  00B4F0  A0D8               	btfss	status,0,c
 22808  00B4F2  D002               	goto	l2874
 22809                           
 22810                           ; BSR set to: 1
 22811                           ;encoder.c: 419: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 22812  00B4F4  0E51               	movlw	81
 22813  00B4F6  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22814  00B4F8                     l2874:
 22815                           
 22816                           ; BSR set to: 1
 22817                           ;encoder.c: 420: if(os.encoder1Count<0)
 22818                           
 22819                           ; BSR set to: 1
 22820  00B4F8  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 22821  00B4FA  D00B               	goto	l2871
 22822                           
 22823                           ; BSR set to: 1
 22824                           ;encoder.c: 421: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 22825  00B4FC  0E51               	movlw	81
 22826  00B4FE                     L14:
 22827  00B4FE  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22828                           
 22829                           ; BSR set to: 1
 22830                           ;encoder.c: 423: }
 22831                           
 22832                           ; BSR set to: 1
 22833                           ;encoder.c: 422: break;
 22834  00B500  D008               	goto	l2871
 22835  00B502                     
 22836                           ; BSR set to: 1
 22837  00B502  0101               	movlb	1	; () banked
 22838  00B504  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 22839                           
 22840                           ; Switch size 1, requested type "space"
 22841                           ; Number of cases is 2, Range of values is 81 to 82
 22842                           ; switch strategies available:
 22843                           ; Name         Instructions Cycles
 22844                           ; simple_byte            7     4 (average)
 22845                           ;	Chosen strategy is simple_byte
 22846  00B506  0A51               	xorlw	81	; case 81
 22847  00B508  B4D8               	btfsc	status,2,c
 22848  00B50A  D7D9               	goto	l2867
 22849  00B50C  0A03               	xorlw	3	; case 82
 22850  00B50E  B4D8               	btfsc	status,2,c
 22851  00B510  D7E7               	goto	l2872
 22852  00B512                     l2871:
 22853                           
 22854                           ; BSR set to: 1
 22855                           ;encoder.c: 424: if(os.button2==1)
 22856                           
 22857                           ; BSR set to: 1
 22858  00B512  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 22859  00B514  A4D8               	btfss	status,2,c
 22860  00B516  D00A               	goto	l2876
 22861                           
 22862                           ; BSR set to: 1
 22863                           ;encoder.c: 425: {;encoder.c: 426: os.arc_step_size = _encoder_next_arc_step_size(os.arc
      +                          _step_size);
 22864  00B518  C17F  F060         	movff	_os+27,__encoder_next_arc_step_size@old_stepsize	;volatile
 22865  00B51C  C180  F061         	movff	_os+28,__encoder_next_arc_step_size@old_stepsize+1	;volatile
 22866  00B520  EC31  F0A2         	call	__encoder_next_arc_step_size	;wreg free
 22867  00B524  C060  F17F         	movff	?__encoder_next_arc_step_size,_os+27	;volatile
 22868  00B528  C061  F180         	movff	?__encoder_next_arc_step_size+1,_os+28	;volatile
 22869  00B52C                     l2876:
 22870                           
 22871                           ;encoder.c: 427: };encoder.c: 428: if(os.encoder2Count>0)
 22872  00B52C  0101               	movlb	1	; () banked
 22873  00B52E  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 22874  00B530  0A80               	xorlw	128
 22875  00B532  0F7F               	addlw	-129
 22876  00B534  A0D8               	btfss	status,0,c
 22877  00B536  D01C               	goto	l2878
 22878                           
 22879                           ; BSR set to: 1
 22880                           ;encoder.c: 429: {;encoder.c: 430: os.arc_size += os.arc_step_size;
 22881  00B538  517F               	movf	(_os+27)& (0+255),w,b	;volatile
 22882  00B53A  2781               	addwf	(_os+29)& (0+255),f,b	;volatile
 22883  00B53C  5180               	movf	(_os+28)& (0+255),w,b	;volatile
 22884  00B53E  2382               	addwfc	(_os+30)& (0+255),f,b	;volatile
 22885  00B540  0E00               	movlw	0
 22886  00B542  2383               	addwfc	(_os+31)& (0+255),f,b	;volatile
 22887  00B544  0E00               	movlw	0
 22888  00B546  2384               	addwfc	(_os+32)& (0+255),f,b	;volatile
 22889                           
 22890                           ; BSR set to: 1
 22891                           ;encoder.c: 431: if(os.arc_size>100000)
 22892  00B548  BF84               	btfsc	(_os+32)& (0+255),7,b	;volatile
 22893  00B54A  D012               	goto	l2878
 22894  00B54C  5184               	movf	(_os+32)& (0+255),w,b	;volatile
 22895  00B54E  E108               	bnz	u18390
 22896  00B550  0EA1               	movlw	161
 22897  00B552  5D81               	subwf	(_os+29)& (0+255),w,b	;volatile
 22898  00B554  0E86               	movlw	134
 22899  00B556  5982               	subwfb	(_os+30)& (0+255),w,b	;volatile
 22900  00B558  0E01               	movlw	1
 22901  00B55A  5983               	subwfb	(_os+31)& (0+255),w,b	;volatile
 22902  00B55C  A0D8               	btfss	status,0,c
 22903  00B55E  D008               	goto	l2878
 22904  00B560                     u18390:
 22905                           
 22906                           ; BSR set to: 1
 22907                           ;encoder.c: 432: os.arc_size = 100000;
 22908  00B560  0EA0               	movlw	160
 22909  00B562  6F81               	movwf	(_os+29)& (0+255),b	;volatile
 22910  00B564  0E86               	movlw	134
 22911  00B566  6F82               	movwf	(_os+30)& (0+255),b	;volatile
 22912  00B568  0E01               	movlw	1
 22913  00B56A  6F83               	movwf	(_os+31)& (0+255),b	;volatile
 22914  00B56C  0E00               	movlw	0
 22915  00B56E  6F84               	movwf	(_os+32)& (0+255),b	;volatile
 22916  00B570                     l2878:
 22917                           
 22918                           ; BSR set to: 1
 22919                           ;encoder.c: 433: };encoder.c: 434: if(os.encoder2Count<0)
 22920                           
 22921                           ; BSR set to: 1
 22922                           
 22923                           ; BSR set to: 1
 22924  00B570  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 22925  00B572  D137               	goto	l2812
 22926                           
 22927                           ; BSR set to: 1
 22928                           ;encoder.c: 435: {;encoder.c: 436: os.arc_size -= os.arc_step_size;
 22929  00B574  517F               	movf	(_os+27)& (0+255),w,b	;volatile
 22930  00B576  0100               	movlb	0	; () banked
 22931  00B578  6FA8               	movwf	??_encoder_statemachine& (0+255),b
 22932  00B57A  0101               	movlb	1	; () banked
 22933  00B57C  5180               	movf	(_os+28)& (0+255),w,b	;volatile
 22934  00B57E  0100               	movlb	0	; () banked
 22935  00B580  6FA9               	movwf	(??_encoder_statemachine+1)& (0+255),b
 22936  00B582  6BAA               	clrf	(??_encoder_statemachine+2)& (0+255),b
 22937  00B584  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22938  00B586  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 22939  00B588  0101               	movlb	1	; () banked
 22940  00B58A  5F81               	subwf	(_os+29)& (0+255),f,b	;volatile
 22941  00B58C  0100               	movlb	0	; () banked
 22942  00B58E  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22943  00B590  0101               	movlb	1	; () banked
 22944  00B592  5B82               	subwfb	(_os+30)& (0+255),f,b	;volatile
 22945  00B594  0100               	movlb	0	; () banked
 22946  00B596  51AA               	movf	(??_encoder_statemachine+2)& (0+255),w,b
 22947  00B598  0101               	movlb	1	; () banked
 22948  00B59A  5B83               	subwfb	(_os+31)& (0+255),f,b	;volatile
 22949  00B59C  0100               	movlb	0	; () banked
 22950  00B59E  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 22951  00B5A0  0101               	movlb	1	; () banked
 22952  00B5A2  5B84               	subwfb	(_os+32)& (0+255),f,b	;volatile
 22953                           
 22954                           ;encoder.c: 437: if(os.arc_size<1)
 22955  00B5A4  BF84               	btfsc	(_os+32)& (0+255),7,b	;volatile
 22956  00B5A6  D007               	goto	u18410
 22957  00B5A8  5184               	movf	(_os+32)& (0+255),w,b	;volatile
 22958  00B5AA  1183               	iorwf	(_os+31)& (0+255),w,b	;volatile
 22959  00B5AC  1182               	iorwf	(_os+30)& (0+255),w,b	;volatile
 22960  00B5AE  E102               	bnz	u18411
 22961  00B5B0  0581               	decf	(_os+29)& (0+255),w,b	;volatile
 22962  00B5B2  B0D8               	btfsc	status,0,c
 22963  00B5B4                     u18411:
 22964  00B5B4  D116               	goto	l2812
 22965  00B5B6                     u18410:
 22966                           
 22967                           ; BSR set to: 1
 22968                           ;encoder.c: 438: os.arc_size = 1;
 22969  00B5B6  0E01               	movlw	1
 22970  00B5B8  6F81               	movwf	(_os+29)& (0+255),b	;volatile
 22971  00B5BA  0E00               	movlw	0
 22972  00B5BC  6F82               	movwf	(_os+30)& (0+255),b	;volatile
 22973  00B5BE  0E00               	movlw	0
 22974  00B5C0  6F83               	movwf	(_os+31)& (0+255),b	;volatile
 22975  00B5C2  0E00               	movlw	0
 22976  00B5C4  6F84               	movwf	(_os+32)& (0+255),b	;volatile
 22977                           
 22978                           ; BSR set to: 1
 22979                           ;encoder.c: 439: };encoder.c: 440: break;
 22980                           
 22981                           ; BSR set to: 1
 22982  00B5C6  D10D               	goto	l2812
 22983  00B5C8                     
 22984                           ;encoder.c: 443: if(os.encoder1Count>0)
 22985                           
 22986                           ; BSR set to: 1
 22987  00B5C8  0101               	movlb	1	; () banked
 22988  00B5CA  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 22989  00B5CC  0A80               	xorlw	128
 22990  00B5CE  0F7F               	addlw	-129
 22991  00B5D0  A0D8               	btfss	status,0,c
 22992  00B5D2  D011               	goto	l2884
 22993                           
 22994                           ; BSR set to: 1
 22995                           ;encoder.c: 444: {;encoder.c: 445: if(os.arc_speed<config.maximum_speed_arc)
 22996  00B5D4  51A4               	movf	(_config+15)& (0+255),w,b
 22997  00B5D6  5D85               	subwf	(_os+33)& (0+255),w,b	;volatile
 22998  00B5D8  51A5               	movf	(_config+16)& (0+255),w,b
 22999  00B5DA  5986               	subwfb	(_os+34)& (0+255),w,b	;volatile
 23000  00B5DC  B0D8               	btfsc	status,0,c
 23001  00B5DE  D002               	goto	l2883
 23002                           
 23003                           ; BSR set to: 1
 23004                           ;encoder.c: 446: ++os.arc_speed;
 23005  00B5E0  4B85               	infsnz	(_os+33)& (0+255),f,b	;volatile
 23006  00B5E2  2B86               	incf	(_os+34)& (0+255),f,b	;volatile
 23007  00B5E4                     l2883:
 23008                           
 23009                           ; BSR set to: 1
 23010                           ;encoder.c: 447: if(os.busy)
 23011                           
 23012                           ; BSR set to: 1
 23013  00B5E4  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 23014  00B5E6  B4D8               	btfsc	status,2,c
 23015  00B5E8  D006               	goto	l2884
 23016                           
 23017                           ; BSR set to: 1
 23018                           ;encoder.c: 448: motor_change_speed(os.arc_speed);
 23019  00B5EA  C185  F060         	movff	_os+33,motor_change_speed@new_speed	;volatile
 23020  00B5EE  C186  F061         	movff	_os+34,motor_change_speed@new_speed+1	;volatile
 23021  00B5F2  ECA7  F0AF         	call	_motor_change_speed	;wreg free
 23022  00B5F6                     l2884:
 23023                           
 23024                           ;encoder.c: 449: };encoder.c: 450: if(os.encoder1Count<0)
 23025  00B5F6  0101               	movlb	1	; () banked
 23026  00B5F8  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 23027  00B5FA  D046               	goto	l2888
 23028                           
 23029                           ; BSR set to: 1
 23030                           ;encoder.c: 451: {;encoder.c: 452: if(os.arc_speed>config.minimum_speed)
 23031  00B5FC  5185               	movf	(_os+33)& (0+255),w,b	;volatile
 23032  00B5FE  5D9E               	subwf	(_config+9)& (0+255),w,b
 23033  00B600  5186               	movf	(_os+34)& (0+255),w,b	;volatile
 23034  00B602  599F               	subwfb	(_config+10)& (0+255),w,b
 23035  00B604  B0D8               	btfsc	status,0,c
 23036  00B606  D003               	goto	l2886
 23037                           
 23038                           ; BSR set to: 1
 23039                           ;encoder.c: 453: --os.arc_speed;
 23040  00B608  0785               	decf	(_os+33)& (0+255),f,b	;volatile
 23041  00B60A  A0D8               	btfss	status,0,c
 23042  00B60C  0786               	decf	(_os+34)& (0+255),f,b	;volatile
 23043  00B60E                     l2886:
 23044                           
 23045                           ; BSR set to: 1
 23046                           ;encoder.c: 454: if(os.busy)
 23047                           
 23048                           ; BSR set to: 1
 23049  00B60E  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 23050  00B610  B4D8               	btfsc	status,2,c
 23051  00B612  D03A               	goto	l2888
 23052                           
 23053                           ; BSR set to: 1
 23054                           ;encoder.c: 455: motor_change_speed(os.arc_speed);
 23055  00B614  C185  F060         	movff	_os+33,motor_change_speed@new_speed	;volatile
 23056  00B618  C186  F061         	movff	_os+34,motor_change_speed@new_speed+1	;volatile
 23057  00B61C  ECA7  F0AF         	call	_motor_change_speed	;wreg free
 23058                           
 23059                           ;encoder.c: 456: };encoder.c: 457: switch(os.displayState)
 23060  00B620  D033               	goto	l2888
 23061  00B622                     
 23062                           ;encoder.c: 460: if(os.button2==1)
 23063  00B622  0101               	movlb	1	; () banked
 23064  00B624  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 23065  00B626  A4D8               	btfss	status,2,c
 23066  00B628  D006               	goto	l2890
 23067                           
 23068                           ; BSR set to: 1
 23069                           ;encoder.c: 461: {;encoder.c: 462: motor_arc_move(MOTOR_DIRECTION_CCW);
 23070  00B62A  0EFF               	movlw	255
 23071  00B62C  EC51  F090         	call	_motor_arc_move
 23072                           
 23073                           ;encoder.c: 463: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 23074  00B630  0E62               	movlw	98
 23075  00B632  0101               	movlb	1	; () banked
 23076  00B634  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23077  00B636                     l2890:
 23078                           
 23079                           ; BSR set to: 1
 23080                           ;encoder.c: 464: };encoder.c: 465: if(os.encoder2Count>0)
 23081                           
 23082                           ; BSR set to: 1
 23083  00B636  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 23084  00B638  0A80               	xorlw	128
 23085  00B63A  0F7F               	addlw	-129
 23086  00B63C  A0D8               	btfss	status,0,c
 23087  00B63E  D0D1               	goto	l2812
 23088                           
 23089                           ; BSR set to: 1
 23090                           ;encoder.c: 466: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 23091  00B640  0E62               	movlw	98
 23092  00B642  D099               	goto	L21
 23093  00B644                     
 23094                           ; BSR set to: 1
 23095                           ;encoder.c: 469: if(os.button2==1)
 23096                           
 23097                           ; BSR set to: 1
 23098  00B644  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 23099  00B646  A4D8               	btfss	status,2,c
 23100  00B648  D007               	goto	l2894
 23101                           
 23102                           ; BSR set to: 1
 23103                           ;encoder.c: 470: {;encoder.c: 471: if(os.busy)
 23104  00B64A  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 23105  00B64C  A4D8               	btfss	status,2,c
 23106                           
 23107                           ; BSR set to: 1
 23108                           ;encoder.c: 472: motor_stop();
 23109  00B64E  EC33  F0A9         	call	_motor_stop	;wreg free
 23110                           
 23111                           ;encoder.c: 473: os.displayState = DISPLAY_STATE_MAIN_ARC;
 23112  00B652  0E03               	movlw	3
 23113  00B654  0101               	movlb	1	; () banked
 23114  00B656  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23115  00B658                     l2894:
 23116                           
 23117                           ; BSR set to: 1
 23118                           ;encoder.c: 474: };encoder.c: 475: if(os.encoder2Count>0)
 23119                           
 23120                           ; BSR set to: 1
 23121  00B658  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 23122  00B65A  0A80               	xorlw	128
 23123  00B65C  0F7F               	addlw	-129
 23124  00B65E  A0D8               	btfss	status,0,c
 23125  00B660  D002               	goto	l2896
 23126                           
 23127                           ; BSR set to: 1
 23128                           ;encoder.c: 476: os.displayState = DISPLAY_STATE_ARC2_CW;
 23129  00B662  0E63               	movlw	99
 23130  00B664  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23131  00B666                     l2896:
 23132                           
 23133                           ; BSR set to: 1
 23134                           ;encoder.c: 477: if(os.encoder2Count<0)
 23135                           
 23136                           ; BSR set to: 1
 23137  00B666  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 23138  00B668  D0BC               	goto	l2812
 23139                           
 23140                           ; BSR set to: 1
 23141                           ;encoder.c: 478: os.displayState = DISPLAY_STATE_ARC2_CCW;
 23142  00B66A  0E61               	movlw	97
 23143  00B66C  D084               	goto	L21
 23144  00B66E                     
 23145                           ; BSR set to: 1
 23146                           ;encoder.c: 481: if(os.button2==1)
 23147                           
 23148                           ; BSR set to: 1
 23149  00B66E  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 23150  00B670  A4D8               	btfss	status,2,c
 23151  00B672  D006               	goto	l2899
 23152                           
 23153                           ; BSR set to: 1
 23154                           ;encoder.c: 482: {;encoder.c: 483: motor_arc_move(MOTOR_DIRECTION_CW);
 23155  00B674  0E01               	movlw	1
 23156  00B676  EC51  F090         	call	_motor_arc_move
 23157                           
 23158                           ;encoder.c: 484: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 23159  00B67A  0E62               	movlw	98
 23160  00B67C  0101               	movlb	1	; () banked
 23161  00B67E  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23162  00B680                     l2899:
 23163                           
 23164                           ; BSR set to: 1
 23165                           ;encoder.c: 485: };encoder.c: 486: if(os.encoder2Count<0)
 23166                           
 23167                           ; BSR set to: 1
 23168  00B680  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 23169  00B682  D0AF               	goto	l2812
 23170                           
 23171                           ; BSR set to: 1
 23172                           ;encoder.c: 487: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 23173  00B684  0E62               	movlw	98
 23174  00B686  D077               	goto	L21
 23175  00B688                     l2888:
 23176                           
 23177                           ; BSR set to: 1
 23178  00B688  0101               	movlb	1	; () banked
 23179  00B68A  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 23180                           
 23181                           ; Switch size 1, requested type "space"
 23182                           ; Number of cases is 3, Range of values is 97 to 99
 23183                           ; switch strategies available:
 23184                           ; Name         Instructions Cycles
 23185                           ; simple_byte           10     6 (average)
 23186                           ;	Chosen strategy is simple_byte
 23187  00B68C  0A61               	xorlw	97	; case 97
 23188  00B68E  B4D8               	btfsc	status,2,c
 23189  00B690  D7C8               	goto	l2889
 23190  00B692  0A03               	xorlw	3	; case 98
 23191  00B694  B4D8               	btfsc	status,2,c
 23192  00B696  D7D6               	goto	l2893
 23193  00B698  0A01               	xorlw	1	; case 99
 23194  00B69A  B4D8               	btfsc	status,2,c
 23195  00B69C  D7E8               	goto	l2898
 23196                           
 23197                           ; BSR set to: 1
 23198                           ;encoder.c: 490: break;
 23199  00B69E  D0A1               	goto	l2812
 23200  00B6A0                     
 23201                           ;encoder.c: 493: if(os.button2==1)
 23202                           
 23203                           ; BSR set to: 1
 23204  00B6A0  0101               	movlb	1	; () banked
 23205  00B6A2  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 23206  00B6A4  A4D8               	btfss	status,2,c
 23207  00B6A6  D018               	goto	l2902
 23208                           
 23209                           ; BSR set to: 1
 23210                           ;encoder.c: 494: {;encoder.c: 496: motor_goto_steps(MOTOR_DIRECTION_SHORTEST, 0, 0xFFFF,
      +                           MOTOR_OVERSHOOT_WITH_OVERSHOOT);
 23211  00B6A8  0E00               	movlw	0
 23212  00B6AA  0100               	movlb	0	; () banked
 23213  00B6AC  6F92               	movwf	motor_goto_steps@position& (0+255),b
 23214  00B6AE  0E00               	movlw	0
 23215  00B6B0  6F93               	movwf	(motor_goto_steps@position+1)& (0+255),b
 23216  00B6B2  0E00               	movlw	0
 23217  00B6B4  6F94               	movwf	(motor_goto_steps@position+2)& (0+255),b
 23218  00B6B6  0E00               	movlw	0
 23219  00B6B8  6F95               	movwf	(motor_goto_steps@position+3)& (0+255),b
 23220  00B6BA  0EFF               	movlw	255
 23221  00B6BC  6F97               	movwf	(motor_goto_steps@speed+1)& (0+255),b
 23222  00B6BE  6996               	setf	motor_goto_steps@speed& (0+255),b
 23223  00B6C0  0E00               	movlw	0
 23224  00B6C2  6F98               	movwf	motor_goto_steps@overshoot& (0+255),b
 23225  00B6C4  0E00               	movlw	0
 23226  00B6C6  ECCB  F09B         	call	_motor_goto_steps
 23227                           
 23228                           ;encoder.c: 498: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 23229  00B6CA  0E05               	movlw	5
 23230  00B6CC  0101               	movlb	1	; () banked
 23231  00B6CE  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23232                           
 23233                           ; BSR set to: 1
 23234                           ;encoder.c: 499: os.divide_position = 0;
 23235  00B6D0  0E00               	movlw	0
 23236  00B6D2  6F7C               	movwf	(_os+24)& (0+255),b	;volatile
 23237  00B6D4  0E00               	movlw	0
 23238  00B6D6  6F7B               	movwf	(_os+23)& (0+255),b	;volatile
 23239  00B6D8                     l2902:
 23240                           
 23241                           ; BSR set to: 1
 23242                           ;encoder.c: 500: };encoder.c: 501: if(os.button1==1)
 23243                           
 23244                           ; BSR set to: 1
 23245  00B6D8  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 23246  00B6DA  A4D8               	btfss	status,2,c
 23247  00B6DC  D082               	goto	l2812
 23248                           
 23249                           ; BSR set to: 1
 23250                           ;encoder.c: 502: {;encoder.c: 503: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 23251  00B6DE  0E05               	movlw	5
 23252  00B6E0  D04A               	goto	L21
 23253  00B6E2                     
 23254                           ;encoder.c: 508: if(os.encoder1Count>0)
 23255                           
 23256                           ; BSR set to: 1
 23257  00B6E2  0101               	movlb	1	; () banked
 23258  00B6E4  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 23259  00B6E6  0A80               	xorlw	128
 23260  00B6E8  0F7F               	addlw	-129
 23261  00B6EA  B0D8               	btfsc	status,0,c
 23262                           
 23263                           ; BSR set to: 1
 23264                           ;encoder.c: 509: {;encoder.c: 510: motor_increase_manual_speed();
 23265  00B6EC  EC0D  F0AF         	call	_motor_increase_manual_speed	;wreg free
 23266                           
 23267                           ;encoder.c: 511: };encoder.c: 512: if(os.encoder1Count<0)
 23268  00B6F0  0101               	movlb	1	; () banked
 23269  00B6F2  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 23270  00B6F4  D042               	goto	l2907
 23271                           
 23272                           ; BSR set to: 1
 23273                           ;encoder.c: 513: {;encoder.c: 514: motor_decrease_manual_speed();
 23274  00B6F6  ECA4  F0AE         	call	_motor_decrease_manual_speed	;wreg free
 23275                           
 23276                           ;encoder.c: 515: };encoder.c: 516: switch(os.displayState)
 23277  00B6FA  D03F               	goto	l2907
 23278  00B6FC                     
 23279                           ;encoder.c: 519: if(os.button2==1)
 23280  00B6FC  0101               	movlb	1	; () banked
 23281  00B6FE  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 23282  00B700  A4D8               	btfss	status,2,c
 23283  00B702  D00A               	goto	l2909
 23284                           
 23285                           ; BSR set to: 1
 23286                           ;encoder.c: 520: {;encoder.c: 521: motor_move_endless(MOTOR_DIRECTION_CCW, os.manual_spe
      +                          ed);
 23287  00B704  C188  F08C         	movff	_os+36,motor_move_endless@speed	;volatile
 23288  00B708  C189  F08D         	movff	_os+37,motor_move_endless@speed+1	;volatile
 23289  00B70C  0EFF               	movlw	255
 23290  00B70E  EC3D  F0AD         	call	_motor_move_endless
 23291                           
 23292                           ;encoder.c: 522: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 23293  00B712  0E84               	movlw	132
 23294  00B714  0101               	movlb	1	; () banked
 23295  00B716  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23296  00B718                     l2909:
 23297                           
 23298                           ; BSR set to: 1
 23299                           ;encoder.c: 523: };encoder.c: 524: if(os.encoder2Count>0)
 23300                           
 23301                           ; BSR set to: 1
 23302  00B718  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 23303  00B71A  0A80               	xorlw	128
 23304  00B71C  0F7F               	addlw	-129
 23305  00B71E  A0D8               	btfss	status,0,c
 23306  00B720  D060               	goto	l2812
 23307                           
 23308                           ; BSR set to: 1
 23309                           ;encoder.c: 525: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 23310  00B722  0E82               	movlw	130
 23311  00B724  D028               	goto	L21
 23312  00B726                     
 23313                           ; BSR set to: 1
 23314                           ;encoder.c: 528: if(os.button2==1)
 23315                           
 23316                           ; BSR set to: 1
 23317  00B726  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 23318  00B728  A4D8               	btfss	status,2,c
 23319  00B72A  D002               	goto	l2913
 23320                           
 23321                           ; BSR set to: 1
 23322                           ;encoder.c: 529: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 23323  00B72C  0E04               	movlw	4
 23324  00B72E  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23325  00B730                     l2913:
 23326                           
 23327                           ; BSR set to: 1
 23328                           ;encoder.c: 530: if(os.encoder2Count>0)
 23329                           
 23330                           ; BSR set to: 1
 23331  00B730  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 23332  00B732  0A80               	xorlw	128
 23333  00B734  0F7F               	addlw	-129
 23334  00B736  A0D8               	btfss	status,0,c
 23335  00B738  D002               	goto	l2914
 23336                           
 23337                           ; BSR set to: 1
 23338                           ;encoder.c: 531: os.displayState = DISPLAY_STATE_MANUAL_CW;
 23339  00B73A  0E83               	movlw	131
 23340  00B73C  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23341  00B73E                     l2914:
 23342                           
 23343                           ; BSR set to: 1
 23344                           ;encoder.c: 532: if(os.encoder2Count<0)
 23345                           
 23346                           ; BSR set to: 1
 23347  00B73E  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 23348  00B740  D050               	goto	l2812
 23349                           
 23350                           ; BSR set to: 1
 23351                           ;encoder.c: 533: os.displayState = DISPLAY_STATE_MANUAL_CCW;
 23352  00B742  0E81               	movlw	129
 23353  00B744  D018               	goto	L21
 23354  00B746                     
 23355                           ; BSR set to: 1
 23356                           ;encoder.c: 536: if(os.button2==1)
 23357                           
 23358                           ; BSR set to: 1
 23359  00B746  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 23360  00B748  A4D8               	btfss	status,2,c
 23361  00B74A  D009               	goto	l2917
 23362                           
 23363                           ; BSR set to: 1
 23364                           ;encoder.c: 537: {;encoder.c: 538: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 23365  00B74C  0E84               	movlw	132
 23366  00B74E  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23367                           
 23368                           ; BSR set to: 1
 23369                           ;encoder.c: 539: motor_move_endless(MOTOR_DIRECTION_CW, os.manual_speed);
 23370  00B750  C188  F08C         	movff	_os+36,motor_move_endless@speed	;volatile
 23371  00B754  C189  F08D         	movff	_os+37,motor_move_endless@speed+1	;volatile
 23372  00B758  0E01               	movlw	1
 23373  00B75A  EC3D  F0AD         	call	_motor_move_endless
 23374  00B75E                     l2917:
 23375                           
 23376                           ;encoder.c: 540: };encoder.c: 541: if(os.encoder2Count<0)
 23377  00B75E  0101               	movlb	1	; () banked
 23378  00B760  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 23379  00B762  D03F               	goto	l2812
 23380                           
 23381                           ; BSR set to: 1
 23382                           ;encoder.c: 542: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 23383  00B764  0E82               	movlw	130
 23384  00B766  D007               	goto	L21
 23385  00B768                     
 23386                           ; BSR set to: 1
 23387                           ;encoder.c: 545: if(os.button2==1)
 23388                           
 23389                           ; BSR set to: 1
 23390  00B768  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 23391  00B76A  A4D8               	btfss	status,2,c
 23392  00B76C  D03A               	goto	l2812
 23393                           
 23394                           ; BSR set to: 1
 23395                           ;encoder.c: 546: {;encoder.c: 547: motor_stop();
 23396  00B76E  EC33  F0A9         	call	_motor_stop	;wreg free
 23397                           
 23398                           ;encoder.c: 548: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 23399  00B772  0E82               	movlw	130
 23400  00B774                     L22:
 23401  00B774  0101               	movlb	1	; () banked
 23402  00B776                     L21:
 23403  00B776  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23404                           
 23405                           ; BSR set to: 1
 23406                           ;encoder.c: 551: }
 23407                           
 23408                           ; BSR set to: 1
 23409                           ;encoder.c: 549: };encoder.c: 550: break;
 23410  00B778  D034               	goto	l2812
 23411  00B77A                     l2907:
 23412                           
 23413                           ; BSR set to: 1
 23414  00B77A  0101               	movlb	1	; () banked
 23415  00B77C  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 23416                           
 23417                           ; Switch size 1, requested type "space"
 23418                           ; Number of cases is 4, Range of values is 129 to 132
 23419                           ; switch strategies available:
 23420                           ; Name         Instructions Cycles
 23421                           ; simple_byte           13     7 (average)
 23422                           ;	Chosen strategy is simple_byte
 23423  00B77E  0A81               	xorlw	129	; case 129
 23424  00B780  B4D8               	btfsc	status,2,c
 23425  00B782  D7BC               	goto	l2908
 23426  00B784  0A03               	xorlw	3	; case 130
 23427  00B786  B4D8               	btfsc	status,2,c
 23428  00B788  D7CE               	goto	l2912
 23429  00B78A  0A01               	xorlw	1	; case 131
 23430  00B78C  B4D8               	btfsc	status,2,c
 23431  00B78E  D7DB               	goto	l2916
 23432  00B790  0A07               	xorlw	7	; case 132
 23433  00B792  B4D8               	btfsc	status,2,c
 23434  00B794  D7E9               	goto	l2919
 23435                           
 23436                           ; BSR set to: 1
 23437                           ;encoder.c: 553: }
 23438                           
 23439                           ; BSR set to: 1
 23440                           ;encoder.c: 552: break;
 23441  00B796  D025               	goto	l2812
 23442  00B798                     l2777:
 23443                           
 23444                           ; BSR set to: 1
 23445                           
 23446                           ; BSR set to: 1
 23447  00B798  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 23448  00B79A  0BF0               	andlw	240
 23449  00B79C  0100               	movlb	0	; () banked
 23450  00B79E  6FA8               	movwf	??_encoder_statemachine& (0+255),b
 23451  00B7A0  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 23452                           
 23453                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23454                           ; Switch size 1, requested type "space"
 23455                           ; Number of cases is 1, Range of values is 0 to 0
 23456                           ; switch strategies available:
 23457                           ; Name         Instructions Cycles
 23458                           ; simple_byte            4     3 (average)
 23459                           ;	Chosen strategy is simple_byte
 23460  00B7A2  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 23461  00B7A4  0A00               	xorlw	0	; case 0
 23462  00B7A6  A4D8               	btfss	status,2,c
 23463  00B7A8  D01C               	goto	l2812
 23464                           
 23465                           ; BSR set to: 0
 23466                           ; Switch size 1, requested type "space"
 23467                           ; Number of cases is 9, Range of values is 0 to 128
 23468                           ; switch strategies available:
 23469                           ; Name         Instructions Cycles
 23470                           ; simple_byte           28    15 (average)
 23471                           ;	Chosen strategy is simple_byte
 23472  00B7AA  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 23473  00B7AC  0A00               	xorlw	0	; case 0
 23474  00B7AE  B4D8               	btfsc	status,2,c
 23475  00B7B0  D51F               	goto	l2779
 23476  00B7B2  0A10               	xorlw	16	; case 16
 23477  00B7B4  B4D8               	btfsc	status,2,c
 23478  00B7B6  D55C               	goto	l2814
 23479  00B7B8  0A30               	xorlw	48	; case 32
 23480  00B7BA  B4D8               	btfsc	status,2,c
 23481  00B7BC  D603               	goto	l2830
 23482  00B7BE  0A10               	xorlw	16	; case 48
 23483  00B7C0  B4D8               	btfsc	status,2,c
 23484  00B7C2  D62D               	goto	l2845
 23485  00B7C4  0A70               	xorlw	112	; case 64
 23486  00B7C6  B4D8               	btfsc	status,2,c
 23487  00B7C8  D663               	goto	l2860
 23488  00B7CA  0A10               	xorlw	16	; case 80
 23489  00B7CC  B4D8               	btfsc	status,2,c
 23490  00B7CE  D699               	goto	l2866
 23491  00B7D0  0A30               	xorlw	48	; case 96
 23492  00B7D2  B4D8               	btfsc	status,2,c
 23493  00B7D4  D6F9               	goto	l2881
 23494  00B7D6  0A10               	xorlw	16	; case 112
 23495  00B7D8  B4D8               	btfsc	status,2,c
 23496  00B7DA  D762               	goto	l2901
 23497  00B7DC  0AF0               	xorlw	240	; case 128
 23498  00B7DE  B4D8               	btfsc	status,2,c
 23499  00B7E0  D780               	goto	l2904
 23500  00B7E2                     l2812:
 23501                           
 23502                           ;encoder.c: 556: os.encoder1Count = 0;
 23503                           
 23504                           ; BSR set to: 0
 23505  00B7E2  0E00               	movlw	0
 23506  00B7E4  0101               	movlb	1	; () banked
 23507  00B7E6  6F67               	movwf	(_os+3)& (0+255),b	;volatile
 23508                           
 23509                           ;encoder.c: 557: os.encoder2Count = 0;
 23510  00B7E8  0E00               	movlw	0
 23511  00B7EA  6F69               	movwf	(_os+5)& (0+255),b	;volatile
 23512                           
 23513                           ;encoder.c: 558: os.button1 = 0;
 23514  00B7EC  0E00               	movlw	0
 23515  00B7EE  6F68               	movwf	(_os+4)& (0+255),b	;volatile
 23516                           
 23517                           ;encoder.c: 559: os.button2 = 0;
 23518  00B7F0  0E00               	movlw	0
 23519  00B7F2  6F6A               	movwf	(_os+6)& (0+255),b	;volatile
 23520                           
 23521                           ; BSR set to: 1
 23522  00B7F4  0012               	return		;funcret
 23523  00B7F6                     __end_of_encoder_statemachine:
 23524                           	opt stack 0
 23525                           tblptru	equ	0xFF8
 23526                           tblptrh	equ	0xFF7
 23527                           tblptrl	equ	0xFF6
 23528                           tablat	equ	0xFF5
 23529                           prodh	equ	0xFF4
 23530                           prodl	equ	0xFF3
 23531                           intcon	equ	0xFF2
 23532                           postinc0	equ	0xFEE
 23533                           wreg	equ	0xFE8
 23534                           indf1	equ	0xFE7
 23535                           postinc1	equ	0xFE6
 23536                           postdec1	equ	0xFE5
 23537                           plusw1	equ	0xFE3
 23538                           fsr1h	equ	0xFE2
 23539                           fsr1l	equ	0xFE1
 23540                           indf2	equ	0xFDF
 23541                           postinc2	equ	0xFDE
 23542                           postdec2	equ	0xFDD
 23543                           plusw2	equ	0xFDB
 23544                           fsr2h	equ	0xFDA
 23545                           fsr2l	equ	0xFD9
 23546                           status	equ	0xFD8
 23547                           
 23548 ;; *************** function _motor_move_degrees_int *****************
 23549 ;; Defined at:
 23550 ;;		line 1014 in file "motor.c"
 23551 ;; Parameters:    Size  Location     Type
 23552 ;;  direction       1    wreg     enum E6622
 23553 ;;  distance        2   57[BANK0 ] unsigned int 
 23554 ;;  speed           2   59[BANK0 ] unsigned int 
 23555 ;;  overshoot       1   61[BANK0 ] enum E6635
 23556 ;; Auto vars:     Size  Location     Type
 23557 ;;  direction       1   66[BANK0 ] enum E6622
 23558 ;;  distance_in_    4   62[BANK0 ] unsigned long 
 23559 ;; Return value:  Size  Location     Type
 23560 ;;                  1    wreg      enum E6639
 23561 ;; Registers used:
 23562 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23563 ;; Tracked objects:
 23564 ;;		On entry : 0/0
 23565 ;;		On exit  : 0/0
 23566 ;;		Unchanged: 0/0
 23567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23568 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23569 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23571 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23572 ;;Total ram usage:       10 bytes
 23573 ;; Hardware stack levels used:    1
 23574 ;; Hardware stack levels required when called:   13
 23575 ;; This function calls:
 23576 ;;		__motor_move_steps
 23577 ;;		__motor_steps_from_degrees_int
 23578 ;; This function is called by:
 23579 ;;		_encoder_statemachine
 23580 ;; This function uses a non-reentrant model
 23581 ;;
 23582                           
 23583                           	psect	text92
 23584  0153A0                     __ptext92:
 23585                           	opt stack 0
 23586  0153A0                     _motor_move_degrees_int:
 23587                           	opt stack 16
 23588                           
 23589                           ; BSR set to: 1
 23590                           ;incstack = 0
 23591                           ;motor_move_degrees_int@direction stored from wreg
 23592  0153A0  0100               	movlb	0	; () banked
 23593  0153A2  6FA2               	movwf	motor_move_degrees_int@direction& (0+255),b
 23594                           
 23595                           ;motor.c: 1017: uint32_t distance_in_steps = _motor_steps_from_degrees_int(distance);
 23596  0153A4  C099  F091         	movff	motor_move_degrees_int@distance,__motor_steps_from_degrees_int@degrees
 23597  0153A8  C09A  F092         	movff	motor_move_degrees_int@distance+1,__motor_steps_from_degrees_int@degrees+1
 23598  0153AC  EC48  F086         	call	__motor_steps_from_degrees_int	;wreg free
 23599  0153B0  C091  F09E         	movff	?__motor_steps_from_degrees_int,motor_move_degrees_int@distance_in_steps
 23600  0153B4  C092  F09F         	movff	?__motor_steps_from_degrees_int+1,motor_move_degrees_int@distance_in_steps+1
 23601  0153B8  C093  F0A0         	movff	?__motor_steps_from_degrees_int+2,motor_move_degrees_int@distance_in_steps+2
 23602  0153BC  C094  F0A1         	movff	?__motor_steps_from_degrees_int+3,motor_move_degrees_int@distance_in_steps+3
 23603                           
 23604                           ;motor.c: 1020: return _motor_move_steps(direction, distance_in_steps, speed, overshoot,
      +                           MOTOR_MOVE_TYPE_NORMAL);;	Return value of _motor_move_degrees_int is never used
 23605  0153C0  C09E  F07D         	movff	motor_move_degrees_int@distance_in_steps,__motor_move_steps@distance_in_steps
 23606  0153C4  C09F  F07E         	movff	motor_move_degrees_int@distance_in_steps+1,__motor_move_steps@distance_in_steps+1
 23607  0153C8  C0A0  F07F         	movff	motor_move_degrees_int@distance_in_steps+2,__motor_move_steps@distance_in_steps+2
 23608  0153CC  C0A1  F080         	movff	motor_move_degrees_int@distance_in_steps+3,__motor_move_steps@distance_in_steps+3
 23609  0153D0  C09B  F081         	movff	motor_move_degrees_int@speed,__motor_move_steps@speed
 23610  0153D4  C09C  F082         	movff	motor_move_degrees_int@speed+1,__motor_move_steps@speed+1
 23611  0153D8  C09D  F083         	movff	motor_move_degrees_int@overshoot,__motor_move_steps@overshoot
 23612  0153DC  0E00               	movlw	0
 23613  0153DE  0100               	movlb	0	; () banked
 23614  0153E0  6F84               	movwf	__motor_move_steps@type& (0+255),b
 23615  0153E2  51A2               	movf	motor_move_degrees_int@direction& (0+255),w,b
 23616  0153E4  EC3E  F077         	call	__motor_move_steps
 23617  0153E8  0012               	return	
 23618  0153EA                     __end_of_motor_move_degrees_int:
 23619                           	opt stack 0
 23620                           tblptru	equ	0xFF8
 23621                           tblptrh	equ	0xFF7
 23622                           tblptrl	equ	0xFF6
 23623                           tablat	equ	0xFF5
 23624                           prodh	equ	0xFF4
 23625                           prodl	equ	0xFF3
 23626                           intcon	equ	0xFF2
 23627                           postinc0	equ	0xFEE
 23628                           wreg	equ	0xFE8
 23629                           indf1	equ	0xFE7
 23630                           postinc1	equ	0xFE6
 23631                           postdec1	equ	0xFE5
 23632                           plusw1	equ	0xFE3
 23633                           fsr1h	equ	0xFE2
 23634                           fsr1l	equ	0xFE1
 23635                           indf2	equ	0xFDF
 23636                           postinc2	equ	0xFDE
 23637                           postdec2	equ	0xFDD
 23638                           plusw2	equ	0xFDB
 23639                           fsr2h	equ	0xFDA
 23640                           fsr2l	equ	0xFD9
 23641                           status	equ	0xFD8
 23642                           
 23643 ;; *************** function __motor_steps_from_degrees_int *****************
 23644 ;; Defined at:
 23645 ;;		line 426 in file "motor.c"
 23646 ;; Parameters:    Size  Location     Type
 23647 ;;  degrees         2   49[BANK0 ] unsigned int 
 23648 ;; Auto vars:     Size  Location     Type
 23649 ;;  temp            4   53[BANK0 ] unsigned int 
 23650 ;; Return value:  Size  Location     Type
 23651 ;;                  4   49[BANK0 ] unsigned long 
 23652 ;; Registers used:
 23653 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 23654 ;; Tracked objects:
 23655 ;;		On entry : 0/0
 23656 ;;		On exit  : 0/0
 23657 ;;		Unchanged: 0/0
 23658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23659 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23660 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23662 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23663 ;;Total ram usage:        8 bytes
 23664 ;; Hardware stack levels used:    1
 23665 ;; Hardware stack levels required when called:   11
 23666 ;; This function calls:
 23667 ;;		___fladd
 23668 ;;		___fldiv
 23669 ;;		___flmul
 23670 ;;		___fltol
 23671 ;;		___xxtofl
 23672 ;; This function is called by:
 23673 ;;		_motor_move_degrees_int
 23674 ;;		_motor_goto_degrees_int
 23675 ;; This function uses a non-reentrant model
 23676 ;;
 23677                           
 23678                           	psect	text93
 23679  010C90                     __ptext93:
 23680                           	opt stack 0
 23681  010C90                     __motor_steps_from_degrees_int:
 23682                           	opt stack 17
 23683                           
 23684                           ;motor.c: 428: double temp;;motor.c: 431: if(degrees==0)
 23685                           
 23686                           ;incstack = 0
 23687  010C90  0100               	movlb	0	; () banked
 23688  010C92  5191               	movf	__motor_steps_from_degrees_int@degrees& (0+255),w,b
 23689  010C94  1192               	iorwf	(__motor_steps_from_degrees_int@degrees+1)& (0+255),w,b
 23690  010C96  A4D8               	btfss	status,2,c
 23691  010C98  D009               	goto	l2514
 23692                           
 23693                           ; BSR set to: 0
 23694                           ;motor.c: 432: {;motor.c: 433: return 0;
 23695  010C9A  0E00               	movlw	0
 23696  010C9C  6F91               	movwf	?__motor_steps_from_degrees_int& (0+255),b
 23697  010C9E  0E00               	movlw	0
 23698  010CA0  6F92               	movwf	(?__motor_steps_from_degrees_int+1)& (0+255),b
 23699  010CA2  0E00               	movlw	0
 23700  010CA4  6F93               	movwf	(?__motor_steps_from_degrees_int+2)& (0+255),b
 23701  010CA6  0E00               	movlw	0
 23702  010CA8  6F94               	movwf	(?__motor_steps_from_degrees_int+3)& (0+255),b
 23703                           
 23704                           ; BSR set to: 0
 23705  010CAA  0012               	return	
 23706  010CAC                     l2514:
 23707                           
 23708                           ; BSR set to: 0
 23709                           ;motor.c: 434: };motor.c: 437: temp = (float) degrees;
 23710                           
 23711                           ; BSR set to: 0
 23712  010CAC  C091  F06A         	movff	__motor_steps_from_degrees_int@degrees,___xxtofl@val
 23713  010CB0  C092  F06B         	movff	__motor_steps_from_degrees_int@degrees+1,___xxtofl@val+1
 23714  010CB4  6B6C               	clrf	(___xxtofl@val+2)& (0+255),b
 23715  010CB6  6B6D               	clrf	(___xxtofl@val+3)& (0+255),b
 23716  010CB8  0E00               	movlw	0
 23717  010CBA  EC7A  F081         	call	___xxtofl
 23718  010CBE  C06A  F095         	movff	?___xxtofl,__motor_steps_from_degrees_int@temp
 23719  010CC2  C06B  F096         	movff	?___xxtofl+1,__motor_steps_from_degrees_int@temp+1
 23720  010CC6  C06C  F097         	movff	?___xxtofl+2,__motor_steps_from_degrees_int@temp+2
 23721  010CCA  C06D  F098         	movff	?___xxtofl+3,__motor_steps_from_degrees_int@temp+3
 23722                           
 23723                           ;motor.c: 440: temp *= config.full_circle_in_steps;
 23724  010CCE  C095  F078         	movff	__motor_steps_from_degrees_int@temp,___flmul@b
 23725  010CD2  C096  F079         	movff	__motor_steps_from_degrees_int@temp+1,___flmul@b+1
 23726  010CD6  C097  F07A         	movff	__motor_steps_from_degrees_int@temp+2,___flmul@b+2
 23727  010CDA  C098  F07B         	movff	__motor_steps_from_degrees_int@temp+3,___flmul@b+3
 23728  010CDE  C195  F06A         	movff	_config,___xxtofl@val
 23729  010CE2  C196  F06B         	movff	_config+1,___xxtofl@val+1
 23730  010CE6  C197  F06C         	movff	_config+2,___xxtofl@val+2
 23731  010CEA  C198  F06D         	movff	_config+3,___xxtofl@val+3
 23732  010CEE  0E00               	movlw	0
 23733  010CF0  EC7A  F081         	call	___xxtofl
 23734  010CF4  C06A  F07C         	movff	?___xxtofl,___flmul@a
 23735  010CF8  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 23736  010CFC  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 23737  010D00  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 23738  010D04  ECED  F064         	call	___flmul	;wreg free
 23739  010D08  C078  F095         	movff	?___flmul,__motor_steps_from_degrees_int@temp
 23740  010D0C  C079  F096         	movff	?___flmul+1,__motor_steps_from_degrees_int@temp+1
 23741  010D10  C07A  F097         	movff	?___flmul+2,__motor_steps_from_degrees_int@temp+2
 23742  010D14  C07B  F098         	movff	?___flmul+3,__motor_steps_from_degrees_int@temp+3
 23743                           
 23744                           ;motor.c: 441: temp /= 36000.0;
 23745  010D18  C095  F078         	movff	__motor_steps_from_degrees_int@temp,___fldiv@b
 23746  010D1C  C096  F079         	movff	__motor_steps_from_degrees_int@temp+1,___fldiv@b+1
 23747  010D20  C097  F07A         	movff	__motor_steps_from_degrees_int@temp+2,___fldiv@b+2
 23748  010D24  C098  F07B         	movff	__motor_steps_from_degrees_int@temp+3,___fldiv@b+3
 23749  010D28  0E00               	movlw	0
 23750  010D2A  0100               	movlb	0	; () banked
 23751  010D2C  6F7C               	movwf	___fldiv@a& (0+255),b
 23752  010D2E  0EA0               	movlw	160
 23753  010D30  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 23754  010D32  0E0C               	movlw	12
 23755  010D34  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 23756  010D36  0E47               	movlw	71
 23757  010D38  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 23758  010D3A  EC15  F06B         	call	___fldiv	;wreg free
 23759  010D3E  C078  F095         	movff	?___fldiv,__motor_steps_from_degrees_int@temp
 23760  010D42  C079  F096         	movff	?___fldiv+1,__motor_steps_from_degrees_int@temp+1
 23761  010D46  C07A  F097         	movff	?___fldiv+2,__motor_steps_from_degrees_int@temp+2
 23762  010D4A  C07B  F098         	movff	?___fldiv+3,__motor_steps_from_degrees_int@temp+3
 23763                           
 23764                           ;motor.c: 442: temp += 0.5;
 23765  010D4E  C095  F07C         	movff	__motor_steps_from_degrees_int@temp,___fladd@b
 23766  010D52  C096  F07D         	movff	__motor_steps_from_degrees_int@temp+1,___fladd@b+1
 23767  010D56  C097  F07E         	movff	__motor_steps_from_degrees_int@temp+2,___fladd@b+2
 23768  010D5A  C098  F07F         	movff	__motor_steps_from_degrees_int@temp+3,___fladd@b+3
 23769  010D5E  0E00               	movlw	0
 23770  010D60  0100               	movlb	0	; () banked
 23771  010D62  6F80               	movwf	___fladd@a& (0+255),b
 23772  010D64  0E00               	movlw	0
 23773  010D66  6F81               	movwf	(___fladd@a+1)& (0+255),b
 23774  010D68  0E00               	movlw	0
 23775  010D6A  6F82               	movwf	(___fladd@a+2)& (0+255),b
 23776  010D6C  0E3F               	movlw	63
 23777  010D6E  6F83               	movwf	(___fladd@a+3)& (0+255),b
 23778  010D70  EC96  F066         	call	___fladd	;wreg free
 23779  010D74  C07C  F095         	movff	?___fladd,__motor_steps_from_degrees_int@temp
 23780  010D78  C07D  F096         	movff	?___fladd+1,__motor_steps_from_degrees_int@temp+1
 23781  010D7C  C07E  F097         	movff	?___fladd+2,__motor_steps_from_degrees_int@temp+2
 23782  010D80  C07F  F098         	movff	?___fladd+3,__motor_steps_from_degrees_int@temp+3
 23783                           
 23784                           ;motor.c: 445: return (uint32_t) temp;
 23785  010D84  C095  F060         	movff	__motor_steps_from_degrees_int@temp,___fltol@f1
 23786  010D88  C096  F061         	movff	__motor_steps_from_degrees_int@temp+1,___fltol@f1+1
 23787  010D8C  C097  F062         	movff	__motor_steps_from_degrees_int@temp+2,___fltol@f1+2
 23788  010D90  C098  F063         	movff	__motor_steps_from_degrees_int@temp+3,___fltol@f1+3
 23789  010D94  EC13  F092         	call	___fltol	;wreg free
 23790  010D98  C060  F091         	movff	?___fltol,?__motor_steps_from_degrees_int
 23791  010D9C  C061  F092         	movff	?___fltol+1,?__motor_steps_from_degrees_int+1
 23792  010DA0  C062  F093         	movff	?___fltol+2,?__motor_steps_from_degrees_int+2
 23793  010DA4  C063  F094         	movff	?___fltol+3,?__motor_steps_from_degrees_int+3
 23794  010DA8  0012               	return	
 23795  010DAA                     __end_of__motor_steps_from_degrees_int:
 23796                           	opt stack 0
 23797                           tblptru	equ	0xFF8
 23798                           tblptrh	equ	0xFF7
 23799                           tblptrl	equ	0xFF6
 23800                           tablat	equ	0xFF5
 23801                           prodh	equ	0xFF4
 23802                           prodl	equ	0xFF3
 23803                           intcon	equ	0xFF2
 23804                           postinc0	equ	0xFEE
 23805                           wreg	equ	0xFE8
 23806                           indf1	equ	0xFE7
 23807                           postinc1	equ	0xFE6
 23808                           postdec1	equ	0xFE5
 23809                           plusw1	equ	0xFE3
 23810                           fsr1h	equ	0xFE2
 23811                           fsr1l	equ	0xFE1
 23812                           indf2	equ	0xFDF
 23813                           postinc2	equ	0xFDE
 23814                           postdec2	equ	0xFDD
 23815                           plusw2	equ	0xFDB
 23816                           fsr2h	equ	0xFDA
 23817                           fsr2l	equ	0xFD9
 23818                           status	equ	0xFD8
 23819                           
 23820 ;; *************** function _motor_increase_manual_speed *****************
 23821 ;; Defined at:
 23822 ;;		line 866 in file "motor.c"
 23823 ;; Parameters:    Size  Location     Type
 23824 ;;		None
 23825 ;; Auto vars:     Size  Location     Type
 23826 ;;		None
 23827 ;; Return value:  Size  Location     Type
 23828 ;;                  1    wreg      void 
 23829 ;; Registers used:
 23830 ;;		wreg, status,2, status,0, cstack
 23831 ;; Tracked objects:
 23832 ;;		On entry : 0/0
 23833 ;;		On exit  : 0/0
 23834 ;;		Unchanged: 0/0
 23835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23840 ;;Total ram usage:        0 bytes
 23841 ;; Hardware stack levels used:    1
 23842 ;; Hardware stack levels required when called:   12
 23843 ;; This function calls:
 23844 ;;		_motor_set_manual_speed
 23845 ;; This function is called by:
 23846 ;;		_encoder_statemachine
 23847 ;; This function uses a non-reentrant model
 23848 ;;
 23849                           
 23850                           	psect	text94
 23851  015E1A                     __ptext94:
 23852                           	opt stack 0
 23853  015E1A                     _motor_increase_manual_speed:
 23854                           	opt stack 17
 23855                           
 23856                           ;motor.c: 869: {;motor.c: 870: motor_set_manual_speed(os.manual_speed+1);
 23857                           
 23858                           ;incstack = 0
 23859  015E1A  0E01               	movlw	1
 23860  015E1C  0101               	movlb	1	; () banked
 23861  015E1E  2588               	addwf	(_os+36)& (0+255),w,b	;volatile
 23862  015E20  0100               	movlb	0	; () banked
 23863  015E22  6F62               	movwf	motor_set_manual_speed@new_speed& (0+255),b
 23864  015E24  0E00               	movlw	0
 23865  015E26  0101               	movlb	1	; () banked
 23866  015E28  2189               	addwfc	(_os+37)& (0+255),w,b	;volatile
 23867  015E2A  0100               	movlb	0	; () banked
 23868  015E2C  6F63               	movwf	(motor_set_manual_speed@new_speed+1)& (0+255),b
 23869  015E2E  EC5B  F0A9         	call	_motor_set_manual_speed	;wreg free
 23870  015E32  0012               	return	
 23871  015E34                     __end_of_motor_increase_manual_speed:
 23872                           	opt stack 0
 23873                           tblptru	equ	0xFF8
 23874                           tblptrh	equ	0xFF7
 23875                           tblptrl	equ	0xFF6
 23876                           tablat	equ	0xFF5
 23877                           prodh	equ	0xFF4
 23878                           prodl	equ	0xFF3
 23879                           intcon	equ	0xFF2
 23880                           postinc0	equ	0xFEE
 23881                           wreg	equ	0xFE8
 23882                           indf1	equ	0xFE7
 23883                           postinc1	equ	0xFE6
 23884                           postdec1	equ	0xFE5
 23885                           plusw1	equ	0xFE3
 23886                           fsr1h	equ	0xFE2
 23887                           fsr1l	equ	0xFE1
 23888                           indf2	equ	0xFDF
 23889                           postinc2	equ	0xFDE
 23890                           postdec2	equ	0xFDD
 23891                           plusw2	equ	0xFDB
 23892                           fsr2h	equ	0xFDA
 23893                           fsr2l	equ	0xFD9
 23894                           status	equ	0xFD8
 23895                           
 23896 ;; *************** function _motor_divide_jump_to_nearest *****************
 23897 ;; Defined at:
 23898 ;;		line 935 in file "motor.c"
 23899 ;; Parameters:    Size  Location     Type
 23900 ;;		None
 23901 ;; Auto vars:     Size  Location     Type
 23902 ;;  divide_posit    4   68[BANK0 ] float 
 23903 ;;  nearest_posi    4   62[BANK0 ] unsigned long 
 23904 ;;  nearest_divi    2   66[BANK0 ] int 
 23905 ;; Return value:  Size  Location     Type
 23906 ;;                  1    wreg      void 
 23907 ;; Registers used:
 23908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23909 ;; Tracked objects:
 23910 ;;		On entry : 0/0
 23911 ;;		On exit  : 0/0
 23912 ;;		Unchanged: 0/0
 23913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23915 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23917 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23918 ;;Total ram usage:       10 bytes
 23919 ;; Hardware stack levels used:    1
 23920 ;; Hardware stack levels required when called:   14
 23921 ;; This function calls:
 23922 ;;		___fladd
 23923 ;;		___fldiv
 23924 ;;		___flmul
 23925 ;;		___fltol
 23926 ;;		___xxtofl
 23927 ;;		__step_position_from_divide_position
 23928 ;;		_motor_goto_steps
 23929 ;; This function is called by:
 23930 ;;		_encoder_statemachine
 23931 ;; This function uses a non-reentrant model
 23932 ;;
 23933                           
 23934                           	psect	text95
 23935  00F878                     __ptext95:
 23936                           	opt stack 0
 23937  00F878                     _motor_divide_jump_to_nearest:
 23938                           	opt stack 15
 23939                           
 23940                           ;motor.c: 937: float divide_position_float;;motor.c: 938: int16_t nearest_divide_positio
      +                          n;;motor.c: 939: uint32_t nearest_position_in_steps;;motor.c: 941: divide_position_float
      +                           = (float) os.current_position_in_steps;
 23941                           
 23942                           ;incstack = 0
 23943  00F878  C16B  F06A         	movff	_os+7,___xxtofl@val	;volatile
 23944  00F87C  C16C  F06B         	movff	_os+8,___xxtofl@val+1	;volatile
 23945  00F880  C16D  F06C         	movff	_os+9,___xxtofl@val+2	;volatile
 23946  00F884  C16E  F06D         	movff	_os+10,___xxtofl@val+3	;volatile
 23947  00F888  0E00               	movlw	0
 23948  00F88A  EC7A  F081         	call	___xxtofl
 23949  00F88E  C06A  F0A4         	movff	?___xxtofl,motor_divide_jump_to_nearest@divide_position_float
 23950  00F892  C06B  F0A5         	movff	?___xxtofl+1,motor_divide_jump_to_nearest@divide_position_float+1
 23951  00F896  C06C  F0A6         	movff	?___xxtofl+2,motor_divide_jump_to_nearest@divide_position_float+2
 23952  00F89A  C06D  F0A7         	movff	?___xxtofl+3,motor_divide_jump_to_nearest@divide_position_float+3
 23953                           
 23954                           ;motor.c: 942: divide_position_float *= (float) os.division;
 23955  00F89E  C0A4  F078         	movff	motor_divide_jump_to_nearest@divide_position_float,___flmul@b
 23956  00F8A2  C0A5  F079         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___flmul@b+1
 23957  00F8A6  C0A6  F07A         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___flmul@b+2
 23958  00F8AA  C0A7  F07B         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___flmul@b+3
 23959  00F8AE  EE21  F078         	lfsr	2,_os+20	;volatile
 23960  00F8B2  CFDE F06A          	movff	postinc2,___xxtofl@val
 23961  00F8B6  CFDD F06B          	movff	postdec2,___xxtofl@val+1
 23962  00F8BA  0100               	movlb	0	; () banked
 23963  00F8BC  0E00               	movlw	0
 23964  00F8BE  BF6B               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 23965  00F8C0  0EFF               	movlw	-1
 23966  00F8C2  6F6C               	movwf	(___xxtofl@val+2)& (0+255),b
 23967  00F8C4  6F6D               	movwf	(___xxtofl@val+3)& (0+255),b
 23968  00F8C6  0E01               	movlw	1
 23969  00F8C8  EC7A  F081         	call	___xxtofl
 23970  00F8CC  C06A  F07C         	movff	?___xxtofl,___flmul@a
 23971  00F8D0  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 23972  00F8D4  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 23973  00F8D8  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 23974  00F8DC  ECED  F064         	call	___flmul	;wreg free
 23975  00F8E0  C078  F0A4         	movff	?___flmul,motor_divide_jump_to_nearest@divide_position_float
 23976  00F8E4  C079  F0A5         	movff	?___flmul+1,motor_divide_jump_to_nearest@divide_position_float+1
 23977  00F8E8  C07A  F0A6         	movff	?___flmul+2,motor_divide_jump_to_nearest@divide_position_float+2
 23978  00F8EC  C07B  F0A7         	movff	?___flmul+3,motor_divide_jump_to_nearest@divide_position_float+3
 23979                           
 23980                           ;motor.c: 943: divide_position_float /= (float) config.full_circle_in_steps;
 23981  00F8F0  C0A4  F078         	movff	motor_divide_jump_to_nearest@divide_position_float,___fldiv@b
 23982  00F8F4  C0A5  F079         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fldiv@b+1
 23983  00F8F8  C0A6  F07A         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fldiv@b+2
 23984  00F8FC  C0A7  F07B         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fldiv@b+3
 23985  00F900  C195  F06A         	movff	_config,___xxtofl@val
 23986  00F904  C196  F06B         	movff	_config+1,___xxtofl@val+1
 23987  00F908  C197  F06C         	movff	_config+2,___xxtofl@val+2
 23988  00F90C  C198  F06D         	movff	_config+3,___xxtofl@val+3
 23989  00F910  0E00               	movlw	0
 23990  00F912  EC7A  F081         	call	___xxtofl
 23991  00F916  C06A  F07C         	movff	?___xxtofl,___fldiv@a
 23992  00F91A  C06B  F07D         	movff	?___xxtofl+1,___fldiv@a+1
 23993  00F91E  C06C  F07E         	movff	?___xxtofl+2,___fldiv@a+2
 23994  00F922  C06D  F07F         	movff	?___xxtofl+3,___fldiv@a+3
 23995  00F926  EC15  F06B         	call	___fldiv	;wreg free
 23996  00F92A  C078  F0A4         	movff	?___fldiv,motor_divide_jump_to_nearest@divide_position_float
 23997  00F92E  C079  F0A5         	movff	?___fldiv+1,motor_divide_jump_to_nearest@divide_position_float+1
 23998  00F932  C07A  F0A6         	movff	?___fldiv+2,motor_divide_jump_to_nearest@divide_position_float+2
 23999  00F936  C07B  F0A7         	movff	?___fldiv+3,motor_divide_jump_to_nearest@divide_position_float+3
 24000                           
 24001                           ;motor.c: 944: divide_position_float += 0.5;
 24002  00F93A  C0A4  F07C         	movff	motor_divide_jump_to_nearest@divide_position_float,___fladd@b
 24003  00F93E  C0A5  F07D         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fladd@b+1
 24004  00F942  C0A6  F07E         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fladd@b+2
 24005  00F946  C0A7  F07F         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fladd@b+3
 24006  00F94A  0E00               	movlw	0
 24007  00F94C  0100               	movlb	0	; () banked
 24008  00F94E  6F80               	movwf	___fladd@a& (0+255),b
 24009  00F950  0E00               	movlw	0
 24010  00F952  6F81               	movwf	(___fladd@a+1)& (0+255),b
 24011  00F954  0E00               	movlw	0
 24012  00F956  6F82               	movwf	(___fladd@a+2)& (0+255),b
 24013  00F958  0E3F               	movlw	63
 24014  00F95A  6F83               	movwf	(___fladd@a+3)& (0+255),b
 24015  00F95C  EC96  F066         	call	___fladd	;wreg free
 24016  00F960  C07C  F0A4         	movff	?___fladd,motor_divide_jump_to_nearest@divide_position_float
 24017  00F964  C07D  F0A5         	movff	?___fladd+1,motor_divide_jump_to_nearest@divide_position_float+1
 24018  00F968  C07E  F0A6         	movff	?___fladd+2,motor_divide_jump_to_nearest@divide_position_float+2
 24019  00F96C  C07F  F0A7         	movff	?___fladd+3,motor_divide_jump_to_nearest@divide_position_float+3
 24020                           
 24021                           ;motor.c: 945: nearest_divide_position = (int16_t) divide_position_float;
 24022  00F970  C0A4  F060         	movff	motor_divide_jump_to_nearest@divide_position_float,___fltol@f1
 24023  00F974  C0A5  F061         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fltol@f1+1
 24024  00F978  C0A6  F062         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fltol@f1+2
 24025  00F97C  C0A7  F063         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fltol@f1+3
 24026  00F980  EC13  F092         	call	___fltol	;wreg free
 24027  00F984  C060  F0A2         	movff	?___fltol,motor_divide_jump_to_nearest@nearest_divide_position
 24028  00F988  C061  F0A3         	movff	?___fltol+1,motor_divide_jump_to_nearest@nearest_divide_position+1
 24029                           
 24030                           ;motor.c: 948: nearest_position_in_steps = _step_position_from_divide_position(nearest_d
      +                          ivide_position);
 24031  00F98C  C0A2  F091         	movff	motor_divide_jump_to_nearest@nearest_divide_position,__step_position_from_divide_
      +                          position@divide_position
 24032  00F990  C0A3  F092         	movff	motor_divide_jump_to_nearest@nearest_divide_position+1,__step_position_from_divid
      +                          e_position@divide_position+1
 24033  00F994  EC7E  F08E         	call	__step_position_from_divide_position	;wreg free
 24034  00F998  C091  F09E         	movff	?__step_position_from_divide_position,motor_divide_jump_to_nearest@nearest_positi
      +                          on_in_steps
 24035  00F99C  C092  F09F         	movff	?__step_position_from_divide_position+1,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+1
 24036  00F9A0  C093  F0A0         	movff	?__step_position_from_divide_position+2,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+2
 24037  00F9A4  C094  F0A1         	movff	?__step_position_from_divide_position+3,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+3
 24038                           
 24039                           ;motor.c: 951: os.divide_position = nearest_divide_position;
 24040  00F9A8  C0A2  F17B         	movff	motor_divide_jump_to_nearest@nearest_divide_position,_os+23	;volatile
 24041  00F9AC  C0A3  F17C         	movff	motor_divide_jump_to_nearest@nearest_divide_position+1,_os+24	;volatile
 24042                           
 24043                           ;motor.c: 952: motor_goto_steps(MOTOR_DIRECTION_SHORTEST, nearest_position_in_steps, 0xF
      +                          FFF, MOTOR_OVERSHOOT_WITH_OVERSHOOT);
 24044  00F9B0  C09E  F092         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps,motor_goto_steps@position
 24045  00F9B4  C09F  F093         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+1,motor_goto_steps@positio
      +                          n+1
 24046  00F9B8  C0A0  F094         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+2,motor_goto_steps@positio
      +                          n+2
 24047  00F9BC  C0A1  F095         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+3,motor_goto_steps@positio
      +                          n+3
 24048  00F9C0  0EFF               	movlw	255
 24049  00F9C2  0100               	movlb	0	; () banked
 24050  00F9C4  6F97               	movwf	(motor_goto_steps@speed+1)& (0+255),b
 24051  00F9C6  6996               	setf	motor_goto_steps@speed& (0+255),b
 24052  00F9C8  0E00               	movlw	0
 24053  00F9CA  6F98               	movwf	motor_goto_steps@overshoot& (0+255),b
 24054  00F9CC  0E00               	movlw	0
 24055  00F9CE  ECCB  F09B         	call	_motor_goto_steps
 24056  00F9D2  0012               	return		;funcret
 24057  00F9D4                     __end_of_motor_divide_jump_to_nearest:
 24058                           	opt stack 0
 24059                           tblptru	equ	0xFF8
 24060                           tblptrh	equ	0xFF7
 24061                           tblptrl	equ	0xFF6
 24062                           tablat	equ	0xFF5
 24063                           prodh	equ	0xFF4
 24064                           prodl	equ	0xFF3
 24065                           intcon	equ	0xFF2
 24066                           postinc0	equ	0xFEE
 24067                           wreg	equ	0xFE8
 24068                           indf1	equ	0xFE7
 24069                           postinc1	equ	0xFE6
 24070                           postdec1	equ	0xFE5
 24071                           plusw1	equ	0xFE3
 24072                           fsr1h	equ	0xFE2
 24073                           fsr1l	equ	0xFE1
 24074                           indf2	equ	0xFDF
 24075                           postinc2	equ	0xFDE
 24076                           postdec2	equ	0xFDD
 24077                           plusw2	equ	0xFDB
 24078                           fsr2h	equ	0xFDA
 24079                           fsr2l	equ	0xFD9
 24080                           status	equ	0xFD8
 24081                           
 24082 ;; *************** function _motor_divide_jump *****************
 24083 ;; Defined at:
 24084 ;;		line 904 in file "motor.c"
 24085 ;; Parameters:    Size  Location     Type
 24086 ;;		None
 24087 ;; Auto vars:     Size  Location     Type
 24088 ;;  target_posit    4   63[BANK0 ] unsigned long 
 24089 ;;  target_divid    2   67[BANK0 ] int 
 24090 ;; Return value:  Size  Location     Type
 24091 ;;                  1    wreg      void 
 24092 ;; Registers used:
 24093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24094 ;; Tracked objects:
 24095 ;;		On entry : 0/0
 24096 ;;		On exit  : 0/0
 24097 ;;		Unchanged: 0/0
 24098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24100 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24101 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24102 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24103 ;;Total ram usage:        7 bytes
 24104 ;; Hardware stack levels used:    1
 24105 ;; Hardware stack levels required when called:   14
 24106 ;; This function calls:
 24107 ;;		__step_position_from_divide_position
 24108 ;;		_motor_goto_steps
 24109 ;; This function is called by:
 24110 ;;		_encoder_statemachine
 24111 ;; This function uses a non-reentrant model
 24112 ;;
 24113                           
 24114                           	psect	text96
 24115  012F88                     __ptext96:
 24116                           	opt stack 0
 24117  012F88                     _motor_divide_jump:
 24118                           	opt stack 15
 24119                           
 24120                           ;motor.c: 906: int16_t target_divide_position;;motor.c: 907: uint32_t target_position_in
      +                          _steps;;motor.c: 910: if(os.divide_jump_size>0)
 24121                           
 24122                           ;incstack = 0
 24123  012F88  0101               	movlb	1	; () banked
 24124  012F8A  BF7E               	btfsc	(_os+26)& (0+255),7,b	;volatile
 24125  012F8C  D023               	goto	l2621
 24126  012F8E  517E               	movf	(_os+26)& (0+255),w,b	;volatile
 24127  012F90  E103               	bnz	u17190
 24128  012F92  057D               	decf	(_os+25)& (0+255),w,b	;volatile
 24129  012F94  A0D8               	btfss	status,0,c
 24130  012F96  D01E               	goto	l2621
 24131  012F98                     u17190:
 24132                           
 24133                           ; BSR set to: 1
 24134                           ;motor.c: 911: {;motor.c: 912: target_divide_position = os.divide_position + os.divide_j
      +                          ump_size;
 24135  012F98  517D               	movf	(_os+25)& (0+255),w,b	;volatile
 24136  012F9A  257B               	addwf	(_os+23)& (0+255),w,b	;volatile
 24137  012F9C  0100               	movlb	0	; () banked
 24138  012F9E  6FA3               	movwf	motor_divide_jump@target_divide_position& (0+255),b
 24139  012FA0  0101               	movlb	1	; () banked
 24140  012FA2  517E               	movf	(_os+26)& (0+255),w,b	;volatile
 24141  012FA4  217C               	addwfc	(_os+24)& (0+255),w,b	;volatile
 24142  012FA6  0100               	movlb	0	; () banked
 24143  012FA8  6FA4               	movwf	(motor_divide_jump@target_divide_position+1)& (0+255),b
 24144                           
 24145                           ;motor.c: 913: if(target_divide_position>=os.division)
 24146  012FAA  0101               	movlb	1	; () banked
 24147  012FAC  5178               	movf	(_os+20)& (0+255),w,b	;volatile
 24148  012FAE  0100               	movlb	0	; () banked
 24149  012FB0  5DA3               	subwf	motor_divide_jump@target_divide_position& (0+255),w,b
 24150  012FB2  51A4               	movf	(motor_divide_jump@target_divide_position+1)& (0+255),w,b
 24151  012FB4  0A80               	xorlw	128
 24152  012FB6  6F9E               	movwf	??_motor_divide_jump& (0+255),b
 24153  012FB8  0101               	movlb	1	; () banked
 24154  012FBA  5179               	movf	(_os+21)& (0+255),w,b	;volatile
 24155  012FBC  0A80               	xorlw	128
 24156  012FBE  0100               	movlb	0	; () banked
 24157  012FC0  599E               	subwfb	??_motor_divide_jump& (0+255),w,b
 24158  012FC2  A0D8               	btfss	status,0,c
 24159  012FC4  D019               	goto	l2624
 24160                           
 24161                           ; BSR set to: 0
 24162                           ;motor.c: 914: {;motor.c: 915: target_divide_position -= os.division;
 24163  012FC6  EE21  F078         	lfsr	2,_os+20	;volatile
 24164  012FCA  50DE               	movf	postinc2,w,c
 24165  012FCC  5FA3               	subwf	motor_divide_jump@target_divide_position& (0+255),f,b
 24166  012FCE  50DD               	movf	postdec2,w,c
 24167  012FD0  5BA4               	subwfb	(motor_divide_jump@target_divide_position+1)& (0+255),f,b
 24168                           
 24169                           ; BSR set to: 0
 24170                           ;motor.c: 916: };motor.c: 917: }
 24171  012FD2  D012               	goto	l2624
 24172  012FD4                     l2621:
 24173                           
 24174                           ;motor.c: 918: else;motor.c: 919: {;motor.c: 920: target_divide_position = os.divide_pos
      +                          ition + os.divide_jump_size;
 24175                           
 24176                           ; BSR set to: 0
 24177  012FD4  0101               	movlb	1	; () banked
 24178  012FD6  517D               	movf	(_os+25)& (0+255),w,b	;volatile
 24179  012FD8  257B               	addwf	(_os+23)& (0+255),w,b	;volatile
 24180  012FDA  0100               	movlb	0	; () banked
 24181  012FDC  6FA3               	movwf	motor_divide_jump@target_divide_position& (0+255),b
 24182  012FDE  0101               	movlb	1	; () banked
 24183  012FE0  517E               	movf	(_os+26)& (0+255),w,b	;volatile
 24184  012FE2  217C               	addwfc	(_os+24)& (0+255),w,b	;volatile
 24185  012FE4  0100               	movlb	0	; () banked
 24186  012FE6  6FA4               	movwf	(motor_divide_jump@target_divide_position+1)& (0+255),b
 24187                           
 24188                           ;motor.c: 921: if(target_divide_position<0)
 24189  012FE8  AFA4               	btfss	(motor_divide_jump@target_divide_position+1)& (0+255),7,b
 24190  012FEA  D006               	goto	l2624
 24191                           
 24192                           ; BSR set to: 0
 24193                           ;motor.c: 922: {;motor.c: 923: target_divide_position += os.division;
 24194  012FEC  EE21  F078         	lfsr	2,_os+20	;volatile
 24195  012FF0  50DE               	movf	postinc2,w,c
 24196  012FF2  27A3               	addwf	motor_divide_jump@target_divide_position& (0+255),f,b
 24197  012FF4  50DD               	movf	postdec2,w,c
 24198  012FF6  23A4               	addwfc	(motor_divide_jump@target_divide_position+1)& (0+255),f,b
 24199  012FF8                     l2624:
 24200                           
 24201                           ; BSR set to: 0
 24202                           ;motor.c: 924: };motor.c: 925: };motor.c: 928: target_position_in_steps = _step_position
      +                          _from_divide_position(target_divide_position);
 24203                           
 24204                           ; BSR set to: 0
 24205                           
 24206                           ; BSR set to: 0
 24207  012FF8  C0A3  F091         	movff	motor_divide_jump@target_divide_position,__step_position_from_divide_position@div
      +                          ide_position
 24208  012FFC  C0A4  F092         	movff	motor_divide_jump@target_divide_position+1,__step_position_from_divide_position@d
      +                          ivide_position+1
 24209  013000  EC7E  F08E         	call	__step_position_from_divide_position	;wreg free
 24210  013004  C091  F09F         	movff	?__step_position_from_divide_position,motor_divide_jump@target_position_in_steps
 24211  013008  C092  F0A0         	movff	?__step_position_from_divide_position+1,motor_divide_jump@target_position_in_step
      +                          s+1
 24212  01300C  C093  F0A1         	movff	?__step_position_from_divide_position+2,motor_divide_jump@target_position_in_step
      +                          s+2
 24213  013010  C094  F0A2         	movff	?__step_position_from_divide_position+3,motor_divide_jump@target_position_in_step
      +                          s+3
 24214                           
 24215                           ;motor.c: 931: os.divide_position = target_divide_position;
 24216  013014  C0A3  F17B         	movff	motor_divide_jump@target_divide_position,_os+23	;volatile
 24217  013018  C0A4  F17C         	movff	motor_divide_jump@target_divide_position+1,_os+24	;volatile
 24218                           
 24219                           ;motor.c: 932: motor_goto_steps(MOTOR_DIRECTION_SHORTEST, target_position_in_steps, 0xFF
      +                          FF, MOTOR_OVERSHOOT_WITH_OVERSHOOT);
 24220  01301C  C09F  F092         	movff	motor_divide_jump@target_position_in_steps,motor_goto_steps@position
 24221  013020  C0A0  F093         	movff	motor_divide_jump@target_position_in_steps+1,motor_goto_steps@position+1
 24222  013024  C0A1  F094         	movff	motor_divide_jump@target_position_in_steps+2,motor_goto_steps@position+2
 24223  013028  C0A2  F095         	movff	motor_divide_jump@target_position_in_steps+3,motor_goto_steps@position+3
 24224  01302C  0EFF               	movlw	255
 24225  01302E  0100               	movlb	0	; () banked
 24226  013030  6F97               	movwf	(motor_goto_steps@speed+1)& (0+255),b
 24227  013032  6996               	setf	motor_goto_steps@speed& (0+255),b
 24228  013034  0E00               	movlw	0
 24229  013036  6F98               	movwf	motor_goto_steps@overshoot& (0+255),b
 24230  013038  0E00               	movlw	0
 24231  01303A  ECCB  F09B         	call	_motor_goto_steps
 24232  01303E  0012               	return		;funcret
 24233  013040                     __end_of_motor_divide_jump:
 24234                           	opt stack 0
 24235                           tblptru	equ	0xFF8
 24236                           tblptrh	equ	0xFF7
 24237                           tblptrl	equ	0xFF6
 24238                           tablat	equ	0xFF5
 24239                           prodh	equ	0xFF4
 24240                           prodl	equ	0xFF3
 24241                           intcon	equ	0xFF2
 24242                           postinc0	equ	0xFEE
 24243                           wreg	equ	0xFE8
 24244                           indf1	equ	0xFE7
 24245                           postinc1	equ	0xFE6
 24246                           postdec1	equ	0xFE5
 24247                           plusw1	equ	0xFE3
 24248                           fsr1h	equ	0xFE2
 24249                           fsr1l	equ	0xFE1
 24250                           indf2	equ	0xFDF
 24251                           postinc2	equ	0xFDE
 24252                           postdec2	equ	0xFDD
 24253                           plusw2	equ	0xFDB
 24254                           fsr2h	equ	0xFDA
 24255                           fsr2l	equ	0xFD9
 24256                           status	equ	0xFD8
 24257                           
 24258 ;; *************** function __step_position_from_divide_position *****************
 24259 ;; Defined at:
 24260 ;;		line 581 in file "motor.c"
 24261 ;; Parameters:    Size  Location     Type
 24262 ;;  divide_posit    2   49[BANK0 ] int 
 24263 ;; Auto vars:     Size  Location     Type
 24264 ;;  target_posit    4   53[BANK0 ] float 
 24265 ;; Return value:  Size  Location     Type
 24266 ;;                  4   49[BANK0 ] unsigned long 
 24267 ;; Registers used:
 24268 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24269 ;; Tracked objects:
 24270 ;;		On entry : 0/0
 24271 ;;		On exit  : 0/0
 24272 ;;		Unchanged: 0/0
 24273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24274 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24275 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24277 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24278 ;;Total ram usage:        8 bytes
 24279 ;; Hardware stack levels used:    1
 24280 ;; Hardware stack levels required when called:   11
 24281 ;; This function calls:
 24282 ;;		___fldiv
 24283 ;;		___flmul
 24284 ;;		___fltol
 24285 ;;		___xxtofl
 24286 ;; This function is called by:
 24287 ;;		_motor_divide_jump
 24288 ;;		_motor_divide_jump_to_nearest
 24289 ;; This function uses a non-reentrant model
 24290 ;;
 24291                           
 24292                           	psect	text97
 24293  011CFC                     __ptext97:
 24294                           	opt stack 0
 24295  011CFC                     __step_position_from_divide_position:
 24296                           	opt stack 17
 24297                           
 24298                           ;motor.c: 583: float target_position;;motor.c: 586: target_position = (float) config.ful
      +                          l_circle_in_steps;
 24299                           
 24300                           ;incstack = 0
 24301  011CFC  C195  F06A         	movff	_config,___xxtofl@val
 24302  011D00  C196  F06B         	movff	_config+1,___xxtofl@val+1
 24303  011D04  C197  F06C         	movff	_config+2,___xxtofl@val+2
 24304  011D08  C198  F06D         	movff	_config+3,___xxtofl@val+3
 24305  011D0C  0E00               	movlw	0
 24306  011D0E  EC7A  F081         	call	___xxtofl
 24307  011D12  C06A  F095         	movff	?___xxtofl,__step_position_from_divide_position@target_position
 24308  011D16  C06B  F096         	movff	?___xxtofl+1,__step_position_from_divide_position@target_position+1
 24309  011D1A  C06C  F097         	movff	?___xxtofl+2,__step_position_from_divide_position@target_position+2
 24310  011D1E  C06D  F098         	movff	?___xxtofl+3,__step_position_from_divide_position@target_position+3
 24311                           
 24312                           ;motor.c: 587: target_position *= (float) divide_position;
 24313  011D22  C095  F078         	movff	__step_position_from_divide_position@target_position,___flmul@b
 24314  011D26  C096  F079         	movff	__step_position_from_divide_position@target_position+1,___flmul@b+1
 24315  011D2A  C097  F07A         	movff	__step_position_from_divide_position@target_position+2,___flmul@b+2
 24316  011D2E  C098  F07B         	movff	__step_position_from_divide_position@target_position+3,___flmul@b+3
 24317  011D32  C091  F06A         	movff	__step_position_from_divide_position@divide_position,___xxtofl@val
 24318  011D36  C092  F06B         	movff	__step_position_from_divide_position@divide_position+1,___xxtofl@val+1
 24319  011D3A  0100               	movlb	0	; () banked
 24320  011D3C  0E00               	movlw	0
 24321  011D3E  BF6B               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 24322  011D40  0EFF               	movlw	-1
 24323  011D42  6F6C               	movwf	(___xxtofl@val+2)& (0+255),b
 24324  011D44  6F6D               	movwf	(___xxtofl@val+3)& (0+255),b
 24325  011D46  0E01               	movlw	1
 24326  011D48  EC7A  F081         	call	___xxtofl
 24327  011D4C  C06A  F07C         	movff	?___xxtofl,___flmul@a
 24328  011D50  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 24329  011D54  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 24330  011D58  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 24331  011D5C  ECED  F064         	call	___flmul	;wreg free
 24332  011D60  C078  F095         	movff	?___flmul,__step_position_from_divide_position@target_position
 24333  011D64  C079  F096         	movff	?___flmul+1,__step_position_from_divide_position@target_position+1
 24334  011D68  C07A  F097         	movff	?___flmul+2,__step_position_from_divide_position@target_position+2
 24335  011D6C  C07B  F098         	movff	?___flmul+3,__step_position_from_divide_position@target_position+3
 24336                           
 24337                           ;motor.c: 588: target_position /= (float) os.division;
 24338  011D70  C095  F078         	movff	__step_position_from_divide_position@target_position,___fldiv@b
 24339  011D74  C096  F079         	movff	__step_position_from_divide_position@target_position+1,___fldiv@b+1
 24340  011D78  C097  F07A         	movff	__step_position_from_divide_position@target_position+2,___fldiv@b+2
 24341  011D7C  C098  F07B         	movff	__step_position_from_divide_position@target_position+3,___fldiv@b+3
 24342  011D80  EE21  F078         	lfsr	2,_os+20	;volatile
 24343  011D84  CFDE F06A          	movff	postinc2,___xxtofl@val
 24344  011D88  CFDD F06B          	movff	postdec2,___xxtofl@val+1
 24345  011D8C  0100               	movlb	0	; () banked
 24346  011D8E  0E00               	movlw	0
 24347  011D90  BF6B               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 24348  011D92  0EFF               	movlw	-1
 24349  011D94  6F6C               	movwf	(___xxtofl@val+2)& (0+255),b
 24350  011D96  6F6D               	movwf	(___xxtofl@val+3)& (0+255),b
 24351  011D98  0E01               	movlw	1
 24352  011D9A  EC7A  F081         	call	___xxtofl
 24353  011D9E  C06A  F07C         	movff	?___xxtofl,___fldiv@a
 24354  011DA2  C06B  F07D         	movff	?___xxtofl+1,___fldiv@a+1
 24355  011DA6  C06C  F07E         	movff	?___xxtofl+2,___fldiv@a+2
 24356  011DAA  C06D  F07F         	movff	?___xxtofl+3,___fldiv@a+3
 24357  011DAE  EC15  F06B         	call	___fldiv	;wreg free
 24358  011DB2  C078  F095         	movff	?___fldiv,__step_position_from_divide_position@target_position
 24359  011DB6  C079  F096         	movff	?___fldiv+1,__step_position_from_divide_position@target_position+1
 24360  011DBA  C07A  F097         	movff	?___fldiv+2,__step_position_from_divide_position@target_position+2
 24361  011DBE  C07B  F098         	movff	?___fldiv+3,__step_position_from_divide_position@target_position+3
 24362                           
 24363                           ;motor.c: 590: return (uint32_t) target_position;
 24364  011DC2  C095  F060         	movff	__step_position_from_divide_position@target_position,___fltol@f1
 24365  011DC6  C096  F061         	movff	__step_position_from_divide_position@target_position+1,___fltol@f1+1
 24366  011DCA  C097  F062         	movff	__step_position_from_divide_position@target_position+2,___fltol@f1+2
 24367  011DCE  C098  F063         	movff	__step_position_from_divide_position@target_position+3,___fltol@f1+3
 24368  011DD2  EC13  F092         	call	___fltol	;wreg free
 24369  011DD6  C060  F091         	movff	?___fltol,?__step_position_from_divide_position
 24370  011DDA  C061  F092         	movff	?___fltol+1,?__step_position_from_divide_position+1
 24371  011DDE  C062  F093         	movff	?___fltol+2,?__step_position_from_divide_position+2
 24372  011DE2  C063  F094         	movff	?___fltol+3,?__step_position_from_divide_position+3
 24373  011DE6  0012               	return	
 24374  011DE8                     __end_of__step_position_from_divide_position:
 24375                           	opt stack 0
 24376                           tblptru	equ	0xFF8
 24377                           tblptrh	equ	0xFF7
 24378                           tblptrl	equ	0xFF6
 24379                           tablat	equ	0xFF5
 24380                           prodh	equ	0xFF4
 24381                           prodl	equ	0xFF3
 24382                           intcon	equ	0xFF2
 24383                           postinc0	equ	0xFEE
 24384                           wreg	equ	0xFE8
 24385                           indf1	equ	0xFE7
 24386                           postinc1	equ	0xFE6
 24387                           postdec1	equ	0xFE5
 24388                           plusw1	equ	0xFE3
 24389                           fsr1h	equ	0xFE2
 24390                           fsr1l	equ	0xFE1
 24391                           indf2	equ	0xFDF
 24392                           postinc2	equ	0xFDE
 24393                           postdec2	equ	0xFDD
 24394                           plusw2	equ	0xFDB
 24395                           fsr2h	equ	0xFDA
 24396                           fsr2l	equ	0xFD9
 24397                           status	equ	0xFD8
 24398                           
 24399 ;; *************** function _motor_decrease_manual_speed *****************
 24400 ;; Defined at:
 24401 ;;		line 874 in file "motor.c"
 24402 ;; Parameters:    Size  Location     Type
 24403 ;;		None
 24404 ;; Auto vars:     Size  Location     Type
 24405 ;;		None
 24406 ;; Return value:  Size  Location     Type
 24407 ;;                  1    wreg      void 
 24408 ;; Registers used:
 24409 ;;		wreg, status,2, status,0, cstack
 24410 ;; Tracked objects:
 24411 ;;		On entry : 0/0
 24412 ;;		On exit  : 0/0
 24413 ;;		Unchanged: 0/0
 24414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24419 ;;Total ram usage:        0 bytes
 24420 ;; Hardware stack levels used:    1
 24421 ;; Hardware stack levels required when called:   12
 24422 ;; This function calls:
 24423 ;;		_motor_set_manual_speed
 24424 ;; This function is called by:
 24425 ;;		_encoder_statemachine
 24426 ;; This function uses a non-reentrant model
 24427 ;;
 24428                           
 24429                           	psect	text98
 24430  015D48                     __ptext98:
 24431                           	opt stack 0
 24432  015D48                     _motor_decrease_manual_speed:
 24433                           	opt stack 17
 24434                           
 24435                           ;motor.c: 876: if(os.manual_speed>0)
 24436                           
 24437                           ;incstack = 0
 24438  015D48  0101               	movlb	1	; () banked
 24439  015D4A  5188               	movf	(_os+36)& (0+255),w,b	;volatile
 24440  015D4C  1189               	iorwf	(_os+37)& (0+255),w,b	;volatile
 24441  015D4E  B4D8               	btfsc	status,2,c
 24442  015D50  0012               	return	
 24443                           
 24444                           ; BSR set to: 1
 24445                           ;motor.c: 877: {;motor.c: 878: motor_set_manual_speed(os.manual_speed-1);
 24446  015D52  0EFF               	movlw	255
 24447  015D54  2588               	addwf	(_os+36)& (0+255),w,b	;volatile
 24448  015D56  0100               	movlb	0	; () banked
 24449  015D58  6F62               	movwf	motor_set_manual_speed@new_speed& (0+255),b
 24450  015D5A  0EFF               	movlw	255
 24451  015D5C  0101               	movlb	1	; () banked
 24452  015D5E  2189               	addwfc	(_os+37)& (0+255),w,b	;volatile
 24453  015D60  0100               	movlb	0	; () banked
 24454  015D62  6F63               	movwf	(motor_set_manual_speed@new_speed+1)& (0+255),b
 24455  015D64  EC5B  F0A9         	call	_motor_set_manual_speed	;wreg free
 24456  015D68  0012               	return	
 24457  015D6A                     __end_of_motor_decrease_manual_speed:
 24458                           	opt stack 0
 24459                           tblptru	equ	0xFF8
 24460                           tblptrh	equ	0xFF7
 24461                           tblptrl	equ	0xFF6
 24462                           tablat	equ	0xFF5
 24463                           prodh	equ	0xFF4
 24464                           prodl	equ	0xFF3
 24465                           intcon	equ	0xFF2
 24466                           postinc0	equ	0xFEE
 24467                           wreg	equ	0xFE8
 24468                           indf1	equ	0xFE7
 24469                           postinc1	equ	0xFE6
 24470                           postdec1	equ	0xFE5
 24471                           plusw1	equ	0xFE3
 24472                           fsr1h	equ	0xFE2
 24473                           fsr1l	equ	0xFE1
 24474                           indf2	equ	0xFDF
 24475                           postinc2	equ	0xFDE
 24476                           postdec2	equ	0xFDD
 24477                           plusw2	equ	0xFDB
 24478                           fsr2h	equ	0xFDA
 24479                           fsr2l	equ	0xFD9
 24480                           status	equ	0xFD8
 24481                           
 24482 ;; *************** function _motor_arc_move *****************
 24483 ;; Defined at:
 24484 ;;		line 955 in file "motor.c"
 24485 ;; Parameters:    Size  Location     Type
 24486 ;;  direction       1    wreg     enum E6622
 24487 ;; Auto vars:     Size  Location     Type
 24488 ;;  direction       1   52[BANK0 ] enum E6622
 24489 ;;  arc_in_steps    4   53[BANK0 ] float 
 24490 ;; Return value:  Size  Location     Type
 24491 ;;                  1    wreg      void 
 24492 ;; Registers used:
 24493 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24494 ;; Tracked objects:
 24495 ;;		On entry : 0/0
 24496 ;;		On exit  : 0/0
 24497 ;;		Unchanged: 0/0
 24498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24500 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24502 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24503 ;;Total ram usage:        5 bytes
 24504 ;; Hardware stack levels used:    1
 24505 ;; Hardware stack levels required when called:   14
 24506 ;; This function calls:
 24507 ;;		___fldiv
 24508 ;;		___flmul
 24509 ;;		___fltol
 24510 ;;		___xxtofl
 24511 ;;		_motor_move_steps
 24512 ;; This function is called by:
 24513 ;;		_encoder_statemachine
 24514 ;; This function uses a non-reentrant model
 24515 ;;
 24516                           
 24517                           	psect	text99
 24518  0120A2                     __ptext99:
 24519                           	opt stack 0
 24520  0120A2                     _motor_arc_move:
 24521                           	opt stack 15
 24522                           
 24523                           ;incstack = 0
 24524                           ;motor_arc_move@direction stored from wreg
 24525  0120A2  0100               	movlb	0	; () banked
 24526  0120A4  6F94               	movwf	motor_arc_move@direction& (0+255),b
 24527                           
 24528                           ;motor.c: 957: float arc_in_steps;;motor.c: 960: arc_in_steps = (float) os.arc_size;
 24529  0120A6  C181  F06A         	movff	_os+29,___xxtofl@val	;volatile
 24530  0120AA  C182  F06B         	movff	_os+30,___xxtofl@val+1	;volatile
 24531  0120AE  C183  F06C         	movff	_os+31,___xxtofl@val+2	;volatile
 24532  0120B2  C184  F06D         	movff	_os+32,___xxtofl@val+3	;volatile
 24533  0120B6  0E01               	movlw	1
 24534  0120B8  EC7A  F081         	call	___xxtofl
 24535  0120BC  C06A  F095         	movff	?___xxtofl,motor_arc_move@arc_in_steps
 24536  0120C0  C06B  F096         	movff	?___xxtofl+1,motor_arc_move@arc_in_steps+1
 24537  0120C4  C06C  F097         	movff	?___xxtofl+2,motor_arc_move@arc_in_steps+2
 24538  0120C8  C06D  F098         	movff	?___xxtofl+3,motor_arc_move@arc_in_steps+3
 24539                           
 24540                           ;motor.c: 961: arc_in_steps *= (float) config.full_circle_in_steps;
 24541  0120CC  C095  F078         	movff	motor_arc_move@arc_in_steps,___flmul@b
 24542  0120D0  C096  F079         	movff	motor_arc_move@arc_in_steps+1,___flmul@b+1
 24543  0120D4  C097  F07A         	movff	motor_arc_move@arc_in_steps+2,___flmul@b+2
 24544  0120D8  C098  F07B         	movff	motor_arc_move@arc_in_steps+3,___flmul@b+3
 24545  0120DC  C195  F06A         	movff	_config,___xxtofl@val
 24546  0120E0  C196  F06B         	movff	_config+1,___xxtofl@val+1
 24547  0120E4  C197  F06C         	movff	_config+2,___xxtofl@val+2
 24548  0120E8  C198  F06D         	movff	_config+3,___xxtofl@val+3
 24549  0120EC  0E00               	movlw	0
 24550  0120EE  EC7A  F081         	call	___xxtofl
 24551  0120F2  C06A  F07C         	movff	?___xxtofl,___flmul@a
 24552  0120F6  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 24553  0120FA  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 24554  0120FE  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 24555  012102  ECED  F064         	call	___flmul	;wreg free
 24556  012106  C078  F095         	movff	?___flmul,motor_arc_move@arc_in_steps
 24557  01210A  C079  F096         	movff	?___flmul+1,motor_arc_move@arc_in_steps+1
 24558  01210E  C07A  F097         	movff	?___flmul+2,motor_arc_move@arc_in_steps+2
 24559  012112  C07B  F098         	movff	?___flmul+3,motor_arc_move@arc_in_steps+3
 24560                           
 24561                           ;motor.c: 962: arc_in_steps /= (float) 36000.0;
 24562  012116  C095  F078         	movff	motor_arc_move@arc_in_steps,___fldiv@b
 24563  01211A  C096  F079         	movff	motor_arc_move@arc_in_steps+1,___fldiv@b+1
 24564  01211E  C097  F07A         	movff	motor_arc_move@arc_in_steps+2,___fldiv@b+2
 24565  012122  C098  F07B         	movff	motor_arc_move@arc_in_steps+3,___fldiv@b+3
 24566  012126  0E00               	movlw	0
 24567  012128  0100               	movlb	0	; () banked
 24568  01212A  6F7C               	movwf	___fldiv@a& (0+255),b
 24569  01212C  0EA0               	movlw	160
 24570  01212E  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 24571  012130  0E0C               	movlw	12
 24572  012132  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 24573  012134  0E47               	movlw	71
 24574  012136  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 24575  012138  EC15  F06B         	call	___fldiv	;wreg free
 24576  01213C  C078  F095         	movff	?___fldiv,motor_arc_move@arc_in_steps
 24577  012140  C079  F096         	movff	?___fldiv+1,motor_arc_move@arc_in_steps+1
 24578  012144  C07A  F097         	movff	?___fldiv+2,motor_arc_move@arc_in_steps+2
 24579  012148  C07B  F098         	movff	?___fldiv+3,motor_arc_move@arc_in_steps+3
 24580                           
 24581                           ;motor.c: 965: motor_move_steps(direction, (uint32_t) arc_in_steps, os.arc_speed, MOTOR_
      +                          OVERSHOOT_NO_OVERSHOOT);
 24582  01214C  C095  F060         	movff	motor_arc_move@arc_in_steps,___fltol@f1
 24583  012150  C096  F061         	movff	motor_arc_move@arc_in_steps+1,___fltol@f1+1
 24584  012154  C097  F062         	movff	motor_arc_move@arc_in_steps+2,___fltol@f1+2
 24585  012158  C098  F063         	movff	motor_arc_move@arc_in_steps+3,___fltol@f1+3
 24586  01215C  EC13  F092         	call	___fltol	;wreg free
 24587  012160  C060  F08C         	movff	?___fltol,motor_move_steps@distance
 24588  012164  C061  F08D         	movff	?___fltol+1,motor_move_steps@distance+1
 24589  012168  C062  F08E         	movff	?___fltol+2,motor_move_steps@distance+2
 24590  01216C  C063  F08F         	movff	?___fltol+3,motor_move_steps@distance+3
 24591  012170  C185  F090         	movff	_os+33,motor_move_steps@speed	;volatile
 24592  012174  C186  F091         	movff	_os+34,motor_move_steps@speed+1	;volatile
 24593  012178  0E01               	movlw	1
 24594  01217A  0100               	movlb	0	; () banked
 24595  01217C  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 24596  01217E  5194               	movf	motor_arc_move@direction& (0+255),w,b
 24597  012180  EC54  F0AD         	call	_motor_move_steps
 24598  012184  0012               	return		;funcret
 24599  012186                     __end_of_motor_arc_move:
 24600                           	opt stack 0
 24601                           tblptru	equ	0xFF8
 24602                           tblptrh	equ	0xFF7
 24603                           tblptrl	equ	0xFF6
 24604                           tablat	equ	0xFF5
 24605                           prodh	equ	0xFF4
 24606                           prodl	equ	0xFF3
 24607                           intcon	equ	0xFF2
 24608                           postinc0	equ	0xFEE
 24609                           wreg	equ	0xFE8
 24610                           indf1	equ	0xFE7
 24611                           postinc1	equ	0xFE6
 24612                           postdec1	equ	0xFE5
 24613                           plusw1	equ	0xFE3
 24614                           fsr1h	equ	0xFE2
 24615                           fsr1l	equ	0xFE1
 24616                           indf2	equ	0xFDF
 24617                           postinc2	equ	0xFDE
 24618                           postdec2	equ	0xFDD
 24619                           plusw2	equ	0xFDB
 24620                           fsr2h	equ	0xFDA
 24621                           fsr2l	equ	0xFD9
 24622                           status	equ	0xFD8
 24623                           
 24624 ;; *************** function __encoder_next_setup_stepsize *****************
 24625 ;; Defined at:
 24626 ;;		line 24 in file "encoder.c"
 24627 ;; Parameters:    Size  Location     Type
 24628 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 24629 ;; Auto vars:     Size  Location     Type
 24630 ;;		None
 24631 ;; Return value:  Size  Location     Type
 24632 ;;                  2    0[BANK0 ] unsigned int 
 24633 ;; Registers used:
 24634 ;;		wreg, status,2, status,0
 24635 ;; Tracked objects:
 24636 ;;		On entry : 0/0
 24637 ;;		On exit  : 0/0
 24638 ;;		Unchanged: 0/0
 24639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24640 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24642 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24643 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24644 ;;Total ram usage:        4 bytes
 24645 ;; Hardware stack levels used:    1
 24646 ;; Hardware stack levels required when called:   10
 24647 ;; This function calls:
 24648 ;;		Nothing
 24649 ;; This function is called by:
 24650 ;;		_encoder_statemachine
 24651 ;; This function uses a non-reentrant model
 24652 ;;
 24653                           
 24654                           	psect	text100
 24655  0143F2                     __ptext100:
 24656                           	opt stack 0
 24657  0143F2                     __encoder_next_setup_stepsize:
 24658                           	opt stack 19
 24659                           
 24660                           ;encoder.c: 26: switch(old_stepsize)
 24661                           
 24662                           ;incstack = 0
 24663  0143F2  D01A               	goto	l2708
 24664  0143F4                     
 24665                           ;encoder.c: 29: return 100;
 24666  0143F4  0E00               	movlw	0
 24667  0143F6  0100               	movlb	0	; () banked
 24668  0143F8  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24669  0143FA  0E64               	movlw	100
 24670  0143FC  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24671                           
 24672                           ; BSR set to: 0
 24673  0143FE  0012               	return	
 24674  014400                     
 24675                           ; BSR set to: 0
 24676                           ;encoder.c: 31: return 10;
 24677                           
 24678                           ; BSR set to: 0
 24679  014400  0E00               	movlw	0
 24680  014402  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24681  014404  0E0A               	movlw	10
 24682  014406  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24683                           
 24684                           ; BSR set to: 0
 24685  014408  0012               	return	
 24686  01440A                     
 24687                           ; BSR set to: 0
 24688                           ;encoder.c: 33: return 1;
 24689                           
 24690                           ; BSR set to: 0
 24691  01440A  0E00               	movlw	0
 24692  01440C  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24693  01440E  0E01               	movlw	1
 24694  014410  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24695                           
 24696                           ; BSR set to: 0
 24697  014412  0012               	return	
 24698  014414                     
 24699                           ; BSR set to: 0
 24700                           ;encoder.c: 35: return 1000;
 24701                           
 24702                           ; BSR set to: 0
 24703  014414  0E03               	movlw	3
 24704  014416  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24705  014418  0EE8               	movlw	232
 24706  01441A  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24707                           
 24708                           ; BSR set to: 0
 24709  01441C  0012               	return	
 24710  01441E                     
 24711                           ; BSR set to: 0
 24712                           ;encoder.c: 37: return 100;
 24713                           
 24714                           ; BSR set to: 0
 24715  01441E  0E00               	movlw	0
 24716  014420  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24717  014422  0E64               	movlw	100
 24718  014424  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24719                           
 24720                           ; BSR set to: 0
 24721                           ;encoder.c: 38: }
 24722                           
 24723                           ; BSR set to: 0
 24724  014426  0012               	return	
 24725  014428                     l2708:
 24726                           
 24727                           ; BSR set to: 0
 24728  014428  C060  F062         	movff	__encoder_next_setup_stepsize@old_stepsize,??__encoder_next_setup_stepsize
 24729  01442C  C061  F063         	movff	__encoder_next_setup_stepsize@old_stepsize+1,??__encoder_next_setup_stepsize+1
 24730                           
 24731                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 24732                           ; Switch size 1, requested type "space"
 24733                           ; Number of cases is 2, Range of values is 0 to 3
 24734                           ; switch strategies available:
 24735                           ; Name         Instructions Cycles
 24736                           ; simple_byte            7     4 (average)
 24737                           ;	Chosen strategy is simple_byte
 24738  014430  0100               	movlb	0	; () banked
 24739  014432  5163               	movf	(??__encoder_next_setup_stepsize+1)& (0+255),w,b
 24740  014434  0A00               	xorlw	0	; case 0
 24741  014436  B4D8               	btfsc	status,2,c
 24742  014438  D004               	goto	l20074
 24743  01443A  0A03               	xorlw	3	; case 3
 24744  01443C  B4D8               	btfsc	status,2,c
 24745  01443E  D00C               	goto	l20076
 24746  014440  D7EE               	goto	l2714
 24747  014442                     l20074:
 24748                           
 24749                           ; BSR set to: 0
 24750                           ; Switch size 1, requested type "space"
 24751                           ; Number of cases is 3, Range of values is 1 to 100
 24752                           ; switch strategies available:
 24753                           ; Name         Instructions Cycles
 24754                           ; simple_byte           10     6 (average)
 24755                           ;	Chosen strategy is simple_byte
 24756  014442  5162               	movf	??__encoder_next_setup_stepsize& (0+255),w,b
 24757  014444  0A01               	xorlw	1	; case 1
 24758  014446  B4D8               	btfsc	status,2,c
 24759  014448  D7E5               	goto	l2713
 24760  01444A  0A0B               	xorlw	11	; case 10
 24761  01444C  B4D8               	btfsc	status,2,c
 24762  01444E  D7DD               	goto	l2712
 24763  014450  0A6E               	xorlw	110	; case 100
 24764  014452  B4D8               	btfsc	status,2,c
 24765  014454  D7D5               	goto	l2711
 24766  014456  D7E3               	goto	l2714
 24767  014458                     l20076:
 24768                           
 24769                           ; BSR set to: 0
 24770                           ; Switch size 1, requested type "space"
 24771                           ; Number of cases is 1, Range of values is 232 to 232
 24772                           ; switch strategies available:
 24773                           ; Name         Instructions Cycles
 24774                           ; simple_byte            4     3 (average)
 24775                           ;	Chosen strategy is simple_byte
 24776  014458  5162               	movf	??__encoder_next_setup_stepsize& (0+255),w,b
 24777  01445A  0AE8               	xorlw	232	; case 232
 24778  01445C  B4D8               	btfsc	status,2,c
 24779  01445E  D7CA               	goto	l2709
 24780  014460  D7DE               	goto	l2714
 24781  014462                     __end_of__encoder_next_setup_stepsize:
 24782                           	opt stack 0
 24783                           tblptru	equ	0xFF8
 24784                           tblptrh	equ	0xFF7
 24785                           tblptrl	equ	0xFF6
 24786                           tablat	equ	0xFF5
 24787                           prodh	equ	0xFF4
 24788                           prodl	equ	0xFF3
 24789                           intcon	equ	0xFF2
 24790                           postinc0	equ	0xFEE
 24791                           wreg	equ	0xFE8
 24792                           indf1	equ	0xFE7
 24793                           postinc1	equ	0xFE6
 24794                           postdec1	equ	0xFE5
 24795                           plusw1	equ	0xFE3
 24796                           fsr1h	equ	0xFE2
 24797                           fsr1l	equ	0xFE1
 24798                           indf2	equ	0xFDF
 24799                           postinc2	equ	0xFDE
 24800                           postdec2	equ	0xFDD
 24801                           plusw2	equ	0xFDB
 24802                           fsr2h	equ	0xFDA
 24803                           fsr2l	equ	0xFD9
 24804                           status	equ	0xFD8
 24805                           
 24806 ;; *************** function __encoder_next_divide_step_size *****************
 24807 ;; Defined at:
 24808 ;;		line 41 in file "encoder.c"
 24809 ;; Parameters:    Size  Location     Type
 24810 ;;  old_stepsize    1    wreg     unsigned char 
 24811 ;; Auto vars:     Size  Location     Type
 24812 ;;  old_stepsize    1    0[BANK0 ] unsigned char 
 24813 ;; Return value:  Size  Location     Type
 24814 ;;                  1    wreg      unsigned char 
 24815 ;; Registers used:
 24816 ;;		wreg, status,2, status,0
 24817 ;; Tracked objects:
 24818 ;;		On entry : 0/0
 24819 ;;		On exit  : 0/0
 24820 ;;		Unchanged: 0/0
 24821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24823 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24825 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24826 ;;Total ram usage:        1 bytes
 24827 ;; Hardware stack levels used:    1
 24828 ;; Hardware stack levels required when called:   10
 24829 ;; This function calls:
 24830 ;;		Nothing
 24831 ;; This function is called by:
 24832 ;;		_encoder_statemachine
 24833 ;; This function uses a non-reentrant model
 24834 ;;
 24835                           
 24836                           	psect	text101
 24837  015A1E                     __ptext101:
 24838                           	opt stack 0
 24839  015A1E                     __encoder_next_divide_step_size:
 24840                           	opt stack 19
 24841                           
 24842                           ; BSR set to: 0
 24843                           ;incstack = 0
 24844                           ;__encoder_next_divide_step_size@old_stepsize stored from wreg
 24845  015A1E  0100               	movlb	0	; () banked
 24846  015A20  6F60               	movwf	__encoder_next_divide_step_size@old_stepsize& (0+255),b
 24847                           
 24848                           ;encoder.c: 43: switch(old_stepsize)
 24849  015A22  D008               	goto	l2718
 24850  015A24                     
 24851                           ;encoder.c: 46: return 10;
 24852  015A24  0E0A               	movlw	10
 24853  015A26  0012               	return	
 24854  015A28                     
 24855                           ;encoder.c: 48: return 1;
 24856  015A28  0E01               	movlw	1
 24857  015A2A  0012               	return	
 24858  015A2C                     
 24859                           ;encoder.c: 50: return 100;
 24860  015A2C  0E64               	movlw	100
 24861  015A2E  0012               	return	
 24862  015A30                     
 24863                           ;encoder.c: 52: return 1;
 24864  015A30  0E01               	movlw	1
 24865                           
 24866                           ;encoder.c: 53: }
 24867  015A32  0012               	return	
 24868  015A34                     l2718:
 24869  015A34  0100               	movlb	0	; () banked
 24870  015A36  5160               	movf	__encoder_next_divide_step_size@old_stepsize& (0+255),w,b
 24871                           
 24872                           ; Switch size 1, requested type "space"
 24873                           ; Number of cases is 3, Range of values is 1 to 100
 24874                           ; switch strategies available:
 24875                           ; Name         Instructions Cycles
 24876                           ; simple_byte           10     6 (average)
 24877                           ;	Chosen strategy is simple_byte
 24878  015A38  0A01               	xorlw	1	; case 1
 24879  015A3A  B4D8               	btfsc	status,2,c
 24880  015A3C  D7F7               	goto	l2722
 24881  015A3E  0A0B               	xorlw	11	; case 10
 24882  015A40  B4D8               	btfsc	status,2,c
 24883  015A42  D7F2               	goto	l2721
 24884  015A44  0A6E               	xorlw	110	; case 100
 24885  015A46  B4D8               	btfsc	status,2,c
 24886  015A48  D7ED               	goto	l2719
 24887  015A4A  D7F2               	goto	l2723
 24888  015A4C                     __end_of__encoder_next_divide_step_size:
 24889                           	opt stack 0
 24890                           tblptru	equ	0xFF8
 24891                           tblptrh	equ	0xFF7
 24892                           tblptrl	equ	0xFF6
 24893                           tablat	equ	0xFF5
 24894                           prodh	equ	0xFF4
 24895                           prodl	equ	0xFF3
 24896                           intcon	equ	0xFF2
 24897                           postinc0	equ	0xFEE
 24898                           wreg	equ	0xFE8
 24899                           indf1	equ	0xFE7
 24900                           postinc1	equ	0xFE6
 24901                           postdec1	equ	0xFE5
 24902                           plusw1	equ	0xFE3
 24903                           fsr1h	equ	0xFE2
 24904                           fsr1l	equ	0xFE1
 24905                           indf2	equ	0xFDF
 24906                           postinc2	equ	0xFDE
 24907                           postdec2	equ	0xFDD
 24908                           plusw2	equ	0xFDB
 24909                           fsr2h	equ	0xFDA
 24910                           fsr2l	equ	0xFD9
 24911                           status	equ	0xFD8
 24912                           
 24913 ;; *************** function __encoder_next_arc_step_size *****************
 24914 ;; Defined at:
 24915 ;;		line 56 in file "encoder.c"
 24916 ;; Parameters:    Size  Location     Type
 24917 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 24918 ;; Auto vars:     Size  Location     Type
 24919 ;;		None
 24920 ;; Return value:  Size  Location     Type
 24921 ;;                  2    0[BANK0 ] unsigned int 
 24922 ;; Registers used:
 24923 ;;		wreg, status,2, status,0
 24924 ;; Tracked objects:
 24925 ;;		On entry : 0/0
 24926 ;;		On exit  : 0/0
 24927 ;;		Unchanged: 0/0
 24928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24929 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24931 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24932 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24933 ;;Total ram usage:        4 bytes
 24934 ;; Hardware stack levels used:    1
 24935 ;; Hardware stack levels required when called:   10
 24936 ;; This function calls:
 24937 ;;		Nothing
 24938 ;; This function is called by:
 24939 ;;		_encoder_statemachine
 24940 ;; This function uses a non-reentrant model
 24941 ;;
 24942                           
 24943                           	psect	text102
 24944  014462                     __ptext102:
 24945                           	opt stack 0
 24946  014462                     __encoder_next_arc_step_size:
 24947                           	opt stack 19
 24948                           
 24949                           ;encoder.c: 58: switch(old_stepsize)
 24950                           
 24951                           ;incstack = 0
 24952  014462  D01A               	goto	l2727
 24953  014464                     
 24954                           ;encoder.c: 61: return 100;
 24955  014464  0E00               	movlw	0
 24956  014466  0100               	movlb	0	; () banked
 24957  014468  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24958  01446A  0E64               	movlw	100
 24959  01446C  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24960                           
 24961                           ; BSR set to: 0
 24962  01446E  0012               	return	
 24963  014470                     
 24964                           ; BSR set to: 0
 24965                           ;encoder.c: 63: return 10;
 24966                           
 24967                           ; BSR set to: 0
 24968  014470  0E00               	movlw	0
 24969  014472  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24970  014474  0E0A               	movlw	10
 24971  014476  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24972                           
 24973                           ; BSR set to: 0
 24974  014478  0012               	return	
 24975  01447A                     
 24976                           ; BSR set to: 0
 24977                           ;encoder.c: 65: return 1;
 24978                           
 24979                           ; BSR set to: 0
 24980  01447A  0E00               	movlw	0
 24981  01447C  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24982  01447E  0E01               	movlw	1
 24983  014480  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24984                           
 24985                           ; BSR set to: 0
 24986  014482  0012               	return	
 24987  014484                     
 24988                           ; BSR set to: 0
 24989                           ;encoder.c: 67: return 1000;
 24990                           
 24991                           ; BSR set to: 0
 24992  014484  0E03               	movlw	3
 24993  014486  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24994  014488  0EE8               	movlw	232
 24995  01448A  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24996                           
 24997                           ; BSR set to: 0
 24998  01448C  0012               	return	
 24999  01448E                     
 25000                           ; BSR set to: 0
 25001                           ;encoder.c: 69: return 100;
 25002                           
 25003                           ; BSR set to: 0
 25004  01448E  0E00               	movlw	0
 25005  014490  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 25006  014492  0E64               	movlw	100
 25007  014494  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 25008                           
 25009                           ; BSR set to: 0
 25010                           ;encoder.c: 70: }
 25011                           
 25012                           ; BSR set to: 0
 25013  014496  0012               	return	
 25014  014498                     l2727:
 25015                           
 25016                           ; BSR set to: 0
 25017  014498  C060  F062         	movff	__encoder_next_arc_step_size@old_stepsize,??__encoder_next_arc_step_size
 25018  01449C  C061  F063         	movff	__encoder_next_arc_step_size@old_stepsize+1,??__encoder_next_arc_step_size+1
 25019                           
 25020                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 25021                           ; Switch size 1, requested type "space"
 25022                           ; Number of cases is 2, Range of values is 0 to 3
 25023                           ; switch strategies available:
 25024                           ; Name         Instructions Cycles
 25025                           ; simple_byte            7     4 (average)
 25026                           ;	Chosen strategy is simple_byte
 25027  0144A0  0100               	movlb	0	; () banked
 25028  0144A2  5163               	movf	(??__encoder_next_arc_step_size+1)& (0+255),w,b
 25029  0144A4  0A00               	xorlw	0	; case 0
 25030  0144A6  B4D8               	btfsc	status,2,c
 25031  0144A8  D004               	goto	l20078
 25032  0144AA  0A03               	xorlw	3	; case 3
 25033  0144AC  B4D8               	btfsc	status,2,c
 25034  0144AE  D00C               	goto	l20080
 25035  0144B0  D7EE               	goto	l2733
 25036  0144B2                     l20078:
 25037                           
 25038                           ; BSR set to: 0
 25039                           ; Switch size 1, requested type "space"
 25040                           ; Number of cases is 3, Range of values is 1 to 100
 25041                           ; switch strategies available:
 25042                           ; Name         Instructions Cycles
 25043                           ; simple_byte           10     6 (average)
 25044                           ;	Chosen strategy is simple_byte
 25045  0144B2  5162               	movf	??__encoder_next_arc_step_size& (0+255),w,b
 25046  0144B4  0A01               	xorlw	1	; case 1
 25047  0144B6  B4D8               	btfsc	status,2,c
 25048  0144B8  D7E5               	goto	l2732
 25049  0144BA  0A0B               	xorlw	11	; case 10
 25050  0144BC  B4D8               	btfsc	status,2,c
 25051  0144BE  D7DD               	goto	l2731
 25052  0144C0  0A6E               	xorlw	110	; case 100
 25053  0144C2  B4D8               	btfsc	status,2,c
 25054  0144C4  D7D5               	goto	l2730
 25055  0144C6  D7E3               	goto	l2733
 25056  0144C8                     l20080:
 25057                           
 25058                           ; BSR set to: 0
 25059                           ; Switch size 1, requested type "space"
 25060                           ; Number of cases is 1, Range of values is 232 to 232
 25061                           ; switch strategies available:
 25062                           ; Name         Instructions Cycles
 25063                           ; simple_byte            4     3 (average)
 25064                           ;	Chosen strategy is simple_byte
 25065  0144C8  5162               	movf	??__encoder_next_arc_step_size& (0+255),w,b
 25066  0144CA  0AE8               	xorlw	232	; case 232
 25067  0144CC  B4D8               	btfsc	status,2,c
 25068  0144CE  D7CA               	goto	l2728
 25069  0144D0  D7DE               	goto	l2733
 25070  0144D2                     __end_of__encoder_next_arc_step_size:
 25071                           	opt stack 0
 25072                           tblptru	equ	0xFF8
 25073                           tblptrh	equ	0xFF7
 25074                           tblptrl	equ	0xFF6
 25075                           tablat	equ	0xFF5
 25076                           prodh	equ	0xFF4
 25077                           prodl	equ	0xFF3
 25078                           intcon	equ	0xFF2
 25079                           postinc0	equ	0xFEE
 25080                           wreg	equ	0xFE8
 25081                           indf1	equ	0xFE7
 25082                           postinc1	equ	0xFE6
 25083                           postdec1	equ	0xFE5
 25084                           plusw1	equ	0xFE3
 25085                           fsr1h	equ	0xFE2
 25086                           fsr1l	equ	0xFE1
 25087                           indf2	equ	0xFDF
 25088                           postinc2	equ	0xFDE
 25089                           postdec2	equ	0xFDD
 25090                           plusw2	equ	0xFDB
 25091                           fsr2h	equ	0xFDA
 25092                           fsr2l	equ	0xFD9
 25093                           status	equ	0xFD8
 25094                           
 25095 ;; *************** function __divide_jump_size_increment *****************
 25096 ;; Defined at:
 25097 ;;		line 73 in file "encoder.c"
 25098 ;; Parameters:    Size  Location     Type
 25099 ;;		None
 25100 ;; Auto vars:     Size  Location     Type
 25101 ;;		None
 25102 ;; Return value:  Size  Location     Type
 25103 ;;                  1    wreg      void 
 25104 ;; Registers used:
 25105 ;;		wreg, status,2, status,0
 25106 ;; Tracked objects:
 25107 ;;		On entry : 0/0
 25108 ;;		On exit  : 0/0
 25109 ;;		Unchanged: 0/0
 25110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25113 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25114 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25115 ;;Total ram usage:        1 bytes
 25116 ;; Hardware stack levels used:    1
 25117 ;; Hardware stack levels required when called:   10
 25118 ;; This function calls:
 25119 ;;		Nothing
 25120 ;; This function is called by:
 25121 ;;		_encoder_statemachine
 25122 ;; This function uses a non-reentrant model
 25123 ;;
 25124                           
 25125                           	psect	text103
 25126  015614                     __ptext103:
 25127                           	opt stack 0
 25128  015614                     __divide_jump_size_increment:
 25129                           	opt stack 19
 25130                           
 25131                           ;encoder.c: 75: ++os.divide_jump_size;
 25132                           
 25133                           ; BSR set to: 0
 25134                           ;incstack = 0
 25135  015614  0101               	movlb	1	; () banked
 25136  015616  4B7D               	infsnz	(_os+25)& (0+255),f,b	;volatile
 25137  015618  2B7E               	incf	(_os+26)& (0+255),f,b	;volatile
 25138                           
 25139                           ; BSR set to: 1
 25140                           ;encoder.c: 76: if(os.divide_jump_size==0)
 25141  01561A  517D               	movf	(_os+25)& (0+255),w,b	;volatile
 25142  01561C  117E               	iorwf	(_os+26)& (0+255),w,b	;volatile
 25143  01561E  A4D8               	btfss	status,2,c
 25144  015620  D004               	goto	l2737
 25145                           
 25146                           ; BSR set to: 1
 25147                           ;encoder.c: 77: os.divide_jump_size = 1;
 25148  015622  0E00               	movlw	0
 25149  015624  6F7E               	movwf	(_os+26)& (0+255),b	;volatile
 25150  015626  0E01               	movlw	1
 25151  015628  6F7D               	movwf	(_os+25)& (0+255),b	;volatile
 25152  01562A                     l2737:
 25153                           
 25154                           ; BSR set to: 1
 25155                           ;encoder.c: 78: if(os.divide_jump_size>=os.division)
 25156                           
 25157                           ; BSR set to: 1
 25158  01562A  5178               	movf	(_os+20)& (0+255),w,b	;volatile
 25159  01562C  5D7D               	subwf	(_os+25)& (0+255),w,b	;volatile
 25160  01562E  517E               	movf	(_os+26)& (0+255),w,b	;volatile
 25161  015630  0A80               	xorlw	128
 25162  015632  0100               	movlb	0	; () banked
 25163  015634  6F60               	movwf	??__divide_jump_size_increment& (0+255),b
 25164  015636  0101               	movlb	1	; () banked
 25165  015638  5179               	movf	(_os+21)& (0+255),w,b	;volatile
 25166  01563A  0A80               	xorlw	128
 25167  01563C  0100               	movlb	0	; () banked
 25168  01563E  5960               	subwfb	??__divide_jump_size_increment& (0+255),w,b
 25169  015640  A0D8               	btfss	status,0,c
 25170  015642  0012               	return	
 25171                           
 25172                           ; BSR set to: 0
 25173                           ;encoder.c: 79: os.divide_jump_size = os.division - 1;
 25174  015644  0EFF               	movlw	255
 25175  015646  0101               	movlb	1	; () banked
 25176  015648  2578               	addwf	(_os+20)& (0+255),w,b	;volatile
 25177  01564A  6F7D               	movwf	(_os+25)& (0+255),b	;volatile
 25178  01564C  0EFF               	movlw	255
 25179  01564E  2179               	addwfc	(_os+21)& (0+255),w,b	;volatile
 25180  015650  6F7E               	movwf	(_os+26)& (0+255),b	;volatile
 25181  015652  0012               	return	
 25182  015654                     __end_of__divide_jump_size_increment:
 25183                           	opt stack 0
 25184                           tblptru	equ	0xFF8
 25185                           tblptrh	equ	0xFF7
 25186                           tblptrl	equ	0xFF6
 25187                           tablat	equ	0xFF5
 25188                           prodh	equ	0xFF4
 25189                           prodl	equ	0xFF3
 25190                           intcon	equ	0xFF2
 25191                           postinc0	equ	0xFEE
 25192                           wreg	equ	0xFE8
 25193                           indf1	equ	0xFE7
 25194                           postinc1	equ	0xFE6
 25195                           postdec1	equ	0xFE5
 25196                           plusw1	equ	0xFE3
 25197                           fsr1h	equ	0xFE2
 25198                           fsr1l	equ	0xFE1
 25199                           indf2	equ	0xFDF
 25200                           postinc2	equ	0xFDE
 25201                           postdec2	equ	0xFDD
 25202                           plusw2	equ	0xFDB
 25203                           fsr2h	equ	0xFDA
 25204                           fsr2l	equ	0xFD9
 25205                           status	equ	0xFD8
 25206                           
 25207 ;; *************** function __divide_jump_size_decrement *****************
 25208 ;; Defined at:
 25209 ;;		line 82 in file "encoder.c"
 25210 ;; Parameters:    Size  Location     Type
 25211 ;;		None
 25212 ;; Auto vars:     Size  Location     Type
 25213 ;;		None
 25214 ;; Return value:  Size  Location     Type
 25215 ;;                  1    wreg      void 
 25216 ;; Registers used:
 25217 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25218 ;; Tracked objects:
 25219 ;;		On entry : 0/0
 25220 ;;		On exit  : 0/0
 25221 ;;		Unchanged: 0/0
 25222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25225 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25226 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25227 ;;Total ram usage:        3 bytes
 25228 ;; Hardware stack levels used:    1
 25229 ;; Hardware stack levels required when called:   10
 25230 ;; This function calls:
 25231 ;;		Nothing
 25232 ;; This function is called by:
 25233 ;;		_encoder_statemachine
 25234 ;; This function uses a non-reentrant model
 25235 ;;
 25236                           
 25237                           	psect	text104
 25238  014540                     __ptext104:
 25239                           	opt stack 0
 25240  014540                     __divide_jump_size_decrement:
 25241                           	opt stack 19
 25242                           
 25243                           ;encoder.c: 84: --os.divide_jump_size;
 25244                           
 25245                           ;incstack = 0
 25246  014540  0101               	movlb	1	; () banked
 25247  014542  077D               	decf	(_os+25)& (0+255),f,b	;volatile
 25248  014544  A0D8               	btfss	status,0,c
 25249  014546  077E               	decf	(_os+26)& (0+255),f,b	;volatile
 25250                           
 25251                           ; BSR set to: 1
 25252                           ;encoder.c: 85: if(os.divide_jump_size==0)
 25253  014548  517D               	movf	(_os+25)& (0+255),w,b	;volatile
 25254  01454A  117E               	iorwf	(_os+26)& (0+255),w,b	;volatile
 25255  01454C  A4D8               	btfss	status,2,c
 25256  01454E  D002               	goto	l2742
 25257                           
 25258                           ; BSR set to: 1
 25259                           ;encoder.c: 86: os.divide_jump_size = -1;
 25260  014550  697D               	setf	(_os+25)& (0+255),b	;volatile
 25261  014552  697E               	setf	(_os+26)& (0+255),b	;volatile
 25262  014554                     l2742:
 25263                           
 25264                           ; BSR set to: 1
 25265                           ;encoder.c: 87: if(os.divide_jump_size<=(-os.division))
 25266                           
 25267                           ; BSR set to: 1
 25268  014554  EE21  F078         	lfsr	2,_os+20	;volatile
 25269  014558  CFDE F060          	movff	postinc2,??__divide_jump_size_decrement
 25270  01455C  CFDD F061          	movff	postdec2,??__divide_jump_size_decrement+1
 25271  014560  0100               	movlb	0	; () banked
 25272  014562  1F60               	comf	??__divide_jump_size_decrement& (0+255),f,b
 25273  014564  1F61               	comf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 25274  014566  4B60               	infsnz	??__divide_jump_size_decrement& (0+255),f,b
 25275  014568  2B61               	incf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 25276  01456A  0101               	movlb	1	; () banked
 25277  01456C  517D               	movf	(_os+25)& (0+255),w,b	;volatile
 25278  01456E  0100               	movlb	0	; () banked
 25279  014570  5D60               	subwf	??__divide_jump_size_decrement& (0+255),w,b
 25280  014572  5161               	movf	(??__divide_jump_size_decrement+1)& (0+255),w,b
 25281  014574  0A80               	xorlw	128
 25282  014576  6F62               	movwf	(??__divide_jump_size_decrement+2)& (0+255),b
 25283  014578  0101               	movlb	1	; () banked
 25284  01457A  517E               	movf	(_os+26)& (0+255),w,b	;volatile
 25285  01457C  0A80               	xorlw	128
 25286  01457E  0100               	movlb	0	; () banked
 25287  014580  5962               	subwfb	(??__divide_jump_size_decrement+2)& (0+255),w,b
 25288  014582  A0D8               	btfss	status,0,c
 25289  014584  0012               	return	
 25290                           
 25291                           ; BSR set to: 0
 25292                           ;encoder.c: 88: os.divide_jump_size = 1 - os.division;
 25293  014586  EE21  F078         	lfsr	2,_os+20	;volatile
 25294  01458A  CFDE F060          	movff	postinc2,??__divide_jump_size_decrement
 25295  01458E  CFDD F061          	movff	postdec2,??__divide_jump_size_decrement+1
 25296  014592  1F60               	comf	??__divide_jump_size_decrement& (0+255),f,b
 25297  014594  1F61               	comf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 25298  014596  4B60               	infsnz	??__divide_jump_size_decrement& (0+255),f,b
 25299  014598  2B61               	incf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 25300  01459A  0E01               	movlw	1
 25301  01459C  2560               	addwf	??__divide_jump_size_decrement& (0+255),w,b
 25302  01459E  0101               	movlb	1	; () banked
 25303  0145A0  6F7D               	movwf	(_os+25)& (0+255),b	;volatile
 25304  0145A2  0E00               	movlw	0
 25305  0145A4  0100               	movlb	0	; () banked
 25306  0145A6  2161               	addwfc	(??__divide_jump_size_decrement+1)& (0+255),w,b
 25307  0145A8  0101               	movlb	1	; () banked
 25308  0145AA  6F7E               	movwf	(_os+26)& (0+255),b	;volatile
 25309  0145AC  0012               	return	
 25310  0145AE                     __end_of__divide_jump_size_decrement:
 25311                           	opt stack 0
 25312                           tblptru	equ	0xFF8
 25313                           tblptrh	equ	0xFF7
 25314                           tblptrl	equ	0xFF6
 25315                           tablat	equ	0xFF5
 25316                           prodh	equ	0xFF4
 25317                           prodl	equ	0xFF3
 25318                           intcon	equ	0xFF2
 25319                           postinc0	equ	0xFEE
 25320                           wreg	equ	0xFE8
 25321                           indf1	equ	0xFE7
 25322                           postinc1	equ	0xFE6
 25323                           postdec1	equ	0xFE5
 25324                           plusw1	equ	0xFE3
 25325                           fsr1h	equ	0xFE2
 25326                           fsr1l	equ	0xFE1
 25327                           indf2	equ	0xFDF
 25328                           postinc2	equ	0xFDE
 25329                           postdec2	equ	0xFDD
 25330                           plusw2	equ	0xFDB
 25331                           fsr2h	equ	0xFDA
 25332                           fsr2l	equ	0xFD9
 25333                           status	equ	0xFD8
 25334                           
 25335 ;; *************** function _display_prepare *****************
 25336 ;; Defined at:
 25337 ;;		line 296 in file "display.c"
 25338 ;; Parameters:    Size  Location     Type
 25339 ;;		None
 25340 ;; Auto vars:     Size  Location     Type
 25341 ;;  temp           10  104[BANK0 ] unsigned char [10]
 25342 ;;  cntr            1  115[BANK0 ] unsigned char 
 25343 ;;  space           1  114[BANK0 ] unsigned char 
 25344 ;; Return value:  Size  Location     Type
 25345 ;;                  1    wreg      void 
 25346 ;; Registers used:
 25347 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25348 ;; Tracked objects:
 25349 ;;		On entry : 0/0
 25350 ;;		On exit  : 0/0
 25351 ;;		Unchanged: 0/0
 25352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25354 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25355 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25356 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25357 ;;Total ram usage:       14 bytes
 25358 ;; Hardware stack levels used:    1
 25359 ;; Hardware stack levels required when called:   15
 25360 ;; This function calls:
 25361 ;;		__display_clear
 25362 ;;		__display_itoa
 25363 ;;		__display_itoa_long
 25364 ;;		__display_padded_itoa
 25365 ;;		__display_position_in_degrees
 25366 ;;		__display_signed_itoa
 25367 ;;		_memcpy
 25368 ;;		_motor_speed_from_index
 25369 ;;		_strlen
 25370 ;; This function is called by:
 25371 ;;		_main
 25372 ;; This function uses a non-reentrant model
 25373 ;;
 25374                           
 25375                           	psect	text105
 25376  00A344                     __ptext105:
 25377                           	opt stack 0
 25378  00A344                     _display_prepare:
 25379                           	opt stack 15
 25380                           
 25381                           ;display.c: 298: uint8_t cntr;;display.c: 299: uint8_t space;;display.c: 300: char temp[
      +                          10];;display.c: 302: switch(os.displayState & 0xF0)
 25382                           
 25383                           ;incstack = 0
 25384  00A344  EFAA  F057         	goto	l1395
 25385  00A348                     
 25386                           ;display.c: 306: memcpy(display_content, dc_main, sizeof display_content);
 25387  00A348  0E44               	movlw	low _display_content
 25388  00A34A  0100               	movlb	0	; () banked
 25389  00A34C  6F60               	movwf	memcpy@d1& (0+255),b
 25390  00A34E  0E02               	movlw	high _display_content
 25391  00A350  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25392  00A352  0E6E               	movlw	low _dc_main
 25393  00A354  6F62               	movwf	memcpy@s1& (0+255),b
 25394  00A356  0EA0               	movlw	high _dc_main
 25395  00A358  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25396  00A35A  0E00               	movlw	0
 25397  00A35C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25398  00A35E  0E50               	movlw	80
 25399  00A360  6F64               	movwf	memcpy@n& (0+255),b
 25400  00A362  EC71  F0A4         	call	_memcpy	;wreg free
 25401                           
 25402                           ;display.c: 307: switch(os.displayState)
 25403  00A366  D00F               	goto	l1397
 25404  00A368                     
 25405                           ;display.c: 310: display_content[1][0] = '>';
 25406  00A368  0E3E               	movlw	62
 25407  00A36A  0102               	movlb	2	; () banked
 25408  00A36C  6F58               	movwf	(_display_content+20)& (0+255),b
 25409                           
 25410                           ;display.c: 311: break;
 25411  00A36E  EFD8  F057         	goto	l1404
 25412  00A372                     
 25413                           ;display.c: 313: display_content[1][9] = '>';
 25414                           
 25415                           ; BSR set to: 2
 25416  00A372  0E3E               	movlw	62
 25417  00A374  0102               	movlb	2	; () banked
 25418  00A376  6F61               	movwf	(_display_content+29)& (0+255),b
 25419                           
 25420                           ;display.c: 314: break;
 25421  00A378  EFD8  F057         	goto	l1404
 25422  00A37C                     
 25423                           ;display.c: 319: display_content[2][9] = '>';
 25424                           
 25425                           ; BSR set to: 2
 25426  00A37C  0E3E               	movlw	62
 25427  00A37E  0102               	movlb	2	; () banked
 25428  00A380  6F75               	movwf	(_display_content+49)& (0+255),b
 25429                           
 25430                           ;display.c: 320: break;
 25431  00A382  EFD8  F057         	goto	l1404
 25432  00A386                     l1397:
 25433                           
 25434                           ; BSR set to: 2
 25435  00A386  0101               	movlb	1	; () banked
 25436  00A388  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 25437                           
 25438                           ; Switch size 1, requested type "space"
 25439                           ; Number of cases is 5, Range of values is 1 to 5
 25440                           ; switch strategies available:
 25441                           ; Name         Instructions Cycles
 25442                           ; simple_byte           16     9 (average)
 25443                           ;	Chosen strategy is simple_byte
 25444  00A38A  0A01               	xorlw	1	; case 1
 25445  00A38C  B4D8               	btfsc	status,2,c
 25446  00A38E  D7EC               	goto	l1398
 25447  00A390  0A03               	xorlw	3	; case 2
 25448  00A392  B4D8               	btfsc	status,2,c
 25449  00A394  D7EE               	goto	l1400
 25450  00A396  0A01               	xorlw	1	; case 3
 25451  00A398  B4D8               	btfsc	status,2,c
 25452  00A39A  D067               	goto	l1417
 25453  00A39C  0A07               	xorlw	7	; case 4
 25454  00A39E  B4D8               	btfsc	status,2,c
 25455  00A3A0  D7ED               	goto	l1402
 25456  00A3A2  0A01               	xorlw	1	; case 5
 25457  00A3A4  D072               	goto	L88
 25458  00A3A6                     
 25459                           ;display.c: 328: memcpy(display_content, dc_setup1, sizeof display_content);
 25460                           
 25461                           ; BSR set to: 1
 25462  00A3A6  0E44               	movlw	low _display_content
 25463  00A3A8  0100               	movlb	0	; () banked
 25464  00A3AA  6F60               	movwf	memcpy@d1& (0+255),b
 25465  00A3AC  0E02               	movlw	high _display_content
 25466  00A3AE  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25467  00A3B0  0E1E               	movlw	low _dc_setup1
 25468  00A3B2  6F62               	movwf	memcpy@s1& (0+255),b
 25469  00A3B4  0EA0               	movlw	high _dc_setup1
 25470  00A3B6  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25471  00A3B8  0E00               	movlw	0
 25472  00A3BA  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25473  00A3BC  0E50               	movlw	80
 25474  00A3BE  6F64               	movwf	memcpy@n& (0+255),b
 25475  00A3C0  EC71  F0A4         	call	_memcpy	;wreg free
 25476                           
 25477                           ;display.c: 329: _display_itoa(os.setup_step_size, 2, temp);
 25478  00A3C4  C175  F09F         	movff	_os+17,__display_itoa@value	;volatile
 25479  00A3C8  C176  F0A0         	movff	_os+18,__display_itoa@value+1	;volatile
 25480  00A3CC  0E02               	movlw	2
 25481  00A3CE  0100               	movlb	0	; () banked
 25482  00A3D0  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 25483  00A3D2  0EC8               	movlw	low display_prepare@temp
 25484  00A3D4  6FA2               	movwf	__display_itoa@text& (0+255),b
 25485  00A3D6  0E00               	movlw	high display_prepare@temp
 25486  00A3D8  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 25487  00A3DA  EC4A  F072         	call	__display_itoa	;wreg free
 25488                           
 25489                           ;display.c: 330: if(os.setup_step_size>999)
 25490  00A3DE  0EE8               	movlw	232
 25491  00A3E0  0101               	movlb	1	; () banked
 25492  00A3E2  5D75               	subwf	(_os+17)& (0+255),w,b	;volatile
 25493  00A3E4  0E03               	movlw	3
 25494  00A3E6  5976               	subwfb	(_os+18)& (0+255),w,b	;volatile
 25495  00A3E8  A0D8               	btfss	status,0,c
 25496  00A3EA  D002               	goto	l1406
 25497                           
 25498                           ; BSR set to: 1
 25499                           ;display.c: 331: space = 0;
 25500  00A3EC  0E00               	movlw	0
 25501  00A3EE  D001               	goto	L23
 25502  00A3F0                     l1406:
 25503                           
 25504                           ;display.c: 332: else;display.c: 333: space = 1;
 25505                           
 25506                           ; BSR set to: 0
 25507  00A3F0  0E01               	movlw	1
 25508  00A3F2                     L23:
 25509  00A3F2  0100               	movlb	0	; () banked
 25510  00A3F4  6FD2               	movwf	display_prepare@space& (0+255),b
 25511                           
 25512                           ; BSR set to: 0
 25513                           ;display.c: 334: for(cntr=0; temp[cntr]; ++cntr)
 25514  00A3F6  0E00               	movlw	0
 25515  00A3F8  6FD3               	movwf	display_prepare@cntr& (0+255),b
 25516  00A3FA  D018               	goto	l1408
 25517  00A3FC                     
 25518                           ; BSR set to: 0
 25519                           ;display.c: 335: {;display.c: 336: display_content[3][space+cntr] = temp[cntr];
 25520                           
 25521                           ; BSR set to: 0
 25522  00A3FC  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25523  00A3FE  0D01               	mullw	1
 25524  00A400  0EC8               	movlw	low display_prepare@temp
 25525  00A402  24F3               	addwf	prodl,w,c
 25526  00A404  6ED9               	movwf	fsr2l,c
 25527  00A406  0E00               	movlw	high display_prepare@temp
 25528  00A408  20F4               	addwfc	prodh,w,c
 25529  00A40A  6EDA               	movwf	fsr2h,c
 25530  00A40C  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25531  00A40E  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 25532  00A412  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25533  00A414  27C6               	addwf	??_display_prepare& (0+255),f,b
 25534  00A416  0E00               	movlw	0
 25535  00A418  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25536  00A41A  0E80               	movlw	low (_display_content+60)
 25537  00A41C  25C6               	addwf	??_display_prepare& (0+255),w,b
 25538  00A41E  6EE1               	movwf	fsr1l,c
 25539  00A420  0E02               	movlw	high (_display_content+60)
 25540  00A422  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25541  00A424  6EE2               	movwf	fsr1h,c
 25542  00A426  CFDF FFE7          	movff	indf2,indf1
 25543                           
 25544                           ; BSR set to: 0
 25545  00A42A  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 25546  00A42C                     l1408:
 25547                           
 25548                           ; BSR set to: 0
 25549                           
 25550                           ; BSR set to: 0
 25551  00A42C  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25552  00A42E  0D01               	mullw	1
 25553  00A430  0EC8               	movlw	low display_prepare@temp
 25554  00A432  24F3               	addwf	prodl,w,c
 25555  00A434  6ED9               	movwf	fsr2l,c
 25556  00A436  0E00               	movlw	high display_prepare@temp
 25557  00A438  20F4               	addwfc	prodh,w,c
 25558  00A43A  6EDA               	movwf	fsr2h,c
 25559  00A43C  50DF               	movf	indf2,w,c
 25560  00A43E  A4D8               	btfss	status,2,c
 25561  00A440  D7DD               	goto	l1409
 25562                           
 25563                           ; BSR set to: 2
 25564                           
 25565                           ; BSR set to: 2
 25566                           ;display.c: 346: }
 25567                           
 25568                           ;display.c: 345: break;
 25569                           
 25570                           ;display.c: 344: display_content[3][12] = '>';
 25571                           
 25572                           ; BSR set to: 2
 25573                           
 25574                           ;display.c: 343: case DISPLAY_STATE_SETUP1_CANCEL:
 25575                           
 25576                           ;display.c: 342: break;
 25577                           
 25578                           ;display.c: 341: display_content[2][12] = '>';
 25579                           
 25580                           ; BSR set to: 0
 25581                           
 25582                           ;display.c: 339: {;display.c: 340: case DISPLAY_STATE_SETUP1_CONFIRM:
 25583                           
 25584                           ; BSR set to: 0
 25585                           ;display.c: 337: };display.c: 338: switch(os.displayState)
 25586  00A442  0101               	movlb	1	; () banked
 25587  00A444  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 25588                           
 25589                           ; Switch size 1, requested type "space"
 25590                           ; Number of cases is 2, Range of values is 17 to 18
 25591                           ; switch strategies available:
 25592                           ; Name         Instructions Cycles
 25593                           ; simple_byte            7     4 (average)
 25594                           ;	Chosen strategy is simple_byte
 25595  00A446  0A11               	xorlw	17	; case 17
 25596  00A448  D08E               	goto	L29
 25597  00A44A                     
 25598                           ;display.c: 350: memcpy(display_content, dc_setup2, sizeof display_content);
 25599                           
 25600                           ; BSR set to: 1
 25601  00A44A  0E44               	movlw	low _display_content
 25602  00A44C  0100               	movlb	0	; () banked
 25603  00A44E  6F60               	movwf	memcpy@d1& (0+255),b
 25604  00A450  0E02               	movlw	high _display_content
 25605  00A452  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25606  00A454  0ECE               	movlw	low _dc_setup2
 25607  00A456  6F62               	movwf	memcpy@s1& (0+255),b
 25608  00A458  0E9F               	movlw	high _dc_setup2
 25609  00A45A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25610  00A45C  0E00               	movlw	0
 25611  00A45E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25612  00A460  0E50               	movlw	80
 25613  00A462  6F64               	movwf	memcpy@n& (0+255),b
 25614  00A464  EC71  F0A4         	call	_memcpy	;wreg free
 25615                           
 25616                           ;display.c: 351: switch(os.displayState)
 25617  00A468  D00A               	goto	l1416
 25618  00A46A                     l1417:
 25619                           
 25620                           ;display.c: 354: display_content[2][0] = '>';
 25621  00A46A  0E3E               	movlw	62
 25622  00A46C  0102               	movlb	2	; () banked
 25623  00A46E  6F6C               	movwf	(_display_content+40)& (0+255),b
 25624                           
 25625                           ;display.c: 355: break;
 25626  00A470  EFD8  F057         	goto	l1404
 25627  00A474                     l1419:
 25628                           
 25629                           ;display.c: 357: display_content[3][0] = '>';
 25630                           
 25631                           ; BSR set to: 2
 25632  00A474  0E3E               	movlw	62
 25633  00A476  0102               	movlb	2	; () banked
 25634  00A478  6F80               	movwf	(_display_content+60)& (0+255),b
 25635                           
 25636                           ; BSR set to: 2
 25637                           ;display.c: 359: }
 25638                           
 25639                           ;display.c: 358: break;
 25640  00A47A  EFD8  F057         	goto	l1404
 25641  00A47E                     l1416:
 25642                           
 25643                           ; BSR set to: 2
 25644  00A47E  0101               	movlb	1	; () banked
 25645  00A480  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 25646                           
 25647                           ; Switch size 1, requested type "space"
 25648                           ; Number of cases is 2, Range of values is 33 to 34
 25649                           ; switch strategies available:
 25650                           ; Name         Instructions Cycles
 25651                           ; simple_byte            7     4 (average)
 25652                           ;	Chosen strategy is simple_byte
 25653  00A482  0A21               	xorlw	33	; case 33
 25654  00A484  B4D8               	btfsc	status,2,c
 25655  00A486  D7F1               	goto	l1417
 25656  00A488  0A03               	xorlw	3	; case 34
 25657  00A48A                     L88:
 25658  00A48A  B4D8               	btfsc	status,2,c
 25659  00A48C  D7F3               	goto	l1419
 25660                           
 25661                           ; BSR set to: 1
 25662                           ;display.c: 360: break;
 25663  00A48E  EFD8  F057         	goto	l1404
 25664  00A492                     
 25665                           ;display.c: 363: memcpy(display_content, dc_divide1, sizeof display_content);
 25666                           
 25667                           ; BSR set to: 1
 25668  00A492  0E44               	movlw	low _display_content
 25669  00A494  0100               	movlb	0	; () banked
 25670  00A496  6F60               	movwf	memcpy@d1& (0+255),b
 25671  00A498  0E02               	movlw	high _display_content
 25672  00A49A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25673  00A49C  0E7E               	movlw	low _dc_divide1
 25674  00A49E  6F62               	movwf	memcpy@s1& (0+255),b
 25675  00A4A0  0E9F               	movlw	high _dc_divide1
 25676  00A4A2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25677  00A4A4  0E00               	movlw	0
 25678  00A4A6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25679  00A4A8  0E50               	movlw	80
 25680  00A4AA  6F64               	movwf	memcpy@n& (0+255),b
 25681  00A4AC  EC71  F0A4         	call	_memcpy	;wreg free
 25682                           
 25683                           ;display.c: 365: _display_padded_itoa(os.divide_step_size, 3, temp);
 25684  00A4B0  C17A  F078         	movff	_os+22,__display_padded_itoa@value	;volatile
 25685  00A4B4  0100               	movlb	0	; () banked
 25686  00A4B6  6B79               	clrf	(__display_padded_itoa@value+1)& (0+255),b
 25687  00A4B8  0E03               	movlw	3
 25688  00A4BA  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25689  00A4BC  0EC8               	movlw	low display_prepare@temp
 25690  00A4BE  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25691  00A4C0  0E00               	movlw	high display_prepare@temp
 25692  00A4C2  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25693  00A4C4  ECC3  F090         	call	__display_padded_itoa	;wreg free
 25694                           
 25695                           ;display.c: 366: for(cntr=0; cntr<3; ++cntr)
 25696  00A4C8  0E00               	movlw	0
 25697  00A4CA  0100               	movlb	0	; () banked
 25698  00A4CC  6FD3               	movwf	display_prepare@cntr& (0+255),b
 25699  00A4CE                     l18784:
 25700                           
 25701                           ; BSR set to: 0
 25702  00A4CE  0E02               	movlw	2
 25703  00A4D0  65D3               	cpfsgt	display_prepare@cntr& (0+255),b
 25704  00A4D2  D001               	goto	l1421
 25705  00A4D4  D014               	goto	u18800
 25706  00A4D6                     l1421:
 25707                           
 25708                           ; BSR set to: 0
 25709                           ;display.c: 367: {;display.c: 368: display_content[2][cntr] = temp[cntr];
 25710                           
 25711                           ; BSR set to: 0
 25712  00A4D6  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25713  00A4D8  0D01               	mullw	1
 25714  00A4DA  0EC8               	movlw	low display_prepare@temp
 25715  00A4DC  24F3               	addwf	prodl,w,c
 25716  00A4DE  6ED9               	movwf	fsr2l,c
 25717  00A4E0  0E00               	movlw	high display_prepare@temp
 25718  00A4E2  20F4               	addwfc	prodh,w,c
 25719  00A4E4  6EDA               	movwf	fsr2h,c
 25720  00A4E6  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25721  00A4E8  0D01               	mullw	1
 25722  00A4EA  0E6C               	movlw	low (_display_content+40)
 25723  00A4EC  24F3               	addwf	prodl,w,c
 25724  00A4EE  6EE1               	movwf	fsr1l,c
 25725  00A4F0  0E02               	movlw	high (_display_content+40)
 25726  00A4F2  20F4               	addwfc	prodh,w,c
 25727  00A4F4  6EE2               	movwf	fsr1h,c
 25728  00A4F6  CFDF FFE7          	movff	indf2,indf1
 25729                           
 25730                           ; BSR set to: 0
 25731  00A4FA  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 25732  00A4FC  D7E8               	goto	l18784
 25733  00A4FE                     u18800:
 25734                           
 25735                           ; BSR set to: 0
 25736                           ;display.c: 369: };display.c: 371: _display_padded_itoa(os.division, 4, temp);
 25737                           
 25738                           ; BSR set to: 0
 25739  00A4FE  C178  F078         	movff	_os+20,__display_padded_itoa@value	;volatile
 25740  00A502  C179  F079         	movff	_os+21,__display_padded_itoa@value+1	;volatile
 25741  00A506  0E04               	movlw	4
 25742  00A508  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25743  00A50A  0EC8               	movlw	low display_prepare@temp
 25744  00A50C  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25745  00A50E  0E00               	movlw	high display_prepare@temp
 25746  00A510  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25747  00A512  ECC3  F090         	call	__display_padded_itoa	;wreg free
 25748                           
 25749                           ;display.c: 372: for(cntr=0; cntr<4; ++cntr)
 25750  00A516  0E00               	movlw	0
 25751  00A518  0100               	movlb	0	; () banked
 25752  00A51A  6FD3               	movwf	display_prepare@cntr& (0+255),b
 25753  00A51C                     l18798:
 25754                           
 25755                           ; BSR set to: 0
 25756  00A51C  0E03               	movlw	3
 25757  00A51E  65D3               	cpfsgt	display_prepare@cntr& (0+255),b
 25758  00A520  D001               	goto	l1423
 25759  00A522  D01E               	goto	l1425
 25760  00A524                     l1423:
 25761                           
 25762                           ; BSR set to: 0
 25763                           ;display.c: 373: {;display.c: 374: display_content[3][cntr] = temp[cntr];
 25764                           
 25765                           ; BSR set to: 0
 25766  00A524  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25767  00A526  0D01               	mullw	1
 25768  00A528  0EC8               	movlw	low display_prepare@temp
 25769  00A52A  24F3               	addwf	prodl,w,c
 25770  00A52C  6ED9               	movwf	fsr2l,c
 25771  00A52E  0E00               	movlw	high display_prepare@temp
 25772  00A530  20F4               	addwfc	prodh,w,c
 25773  00A532  6EDA               	movwf	fsr2h,c
 25774  00A534  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25775  00A536  0D01               	mullw	1
 25776  00A538  0E80               	movlw	low (_display_content+60)
 25777  00A53A  24F3               	addwf	prodl,w,c
 25778  00A53C  6EE1               	movwf	fsr1l,c
 25779  00A53E  0E02               	movlw	high (_display_content+60)
 25780  00A540  20F4               	addwfc	prodh,w,c
 25781  00A542  6EE2               	movwf	fsr1h,c
 25782  00A544  CFDF FFE7          	movff	indf2,indf1
 25783                           
 25784                           ; BSR set to: 0
 25785  00A548  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 25786  00A54A  D7E8               	goto	l18798
 25787  00A54C                     
 25788                           ;display.c: 379: display_content[2][12] = '>';
 25789                           
 25790                           ; BSR set to: 0
 25791  00A54C  0E3E               	movlw	62
 25792  00A54E  0102               	movlb	2	; () banked
 25793  00A550  6F78               	movwf	(_display_content+52)& (0+255),b
 25794                           
 25795                           ;display.c: 380: break;
 25796  00A552  EFD8  F057         	goto	l1404
 25797  00A556                     
 25798                           ;display.c: 382: display_content[3][12] = '>';
 25799                           
 25800                           ; BSR set to: 2
 25801  00A556  0E3E               	movlw	62
 25802  00A558  0102               	movlb	2	; () banked
 25803  00A55A  6F8C               	movwf	(_display_content+72)& (0+255),b
 25804                           
 25805                           ; BSR set to: 2
 25806                           ;display.c: 384: }
 25807                           
 25808                           ;display.c: 383: break;
 25809  00A55C  EFD8  F057         	goto	l1404
 25810  00A560                     l1425:
 25811                           
 25812                           ; BSR set to: 2
 25813  00A560  0101               	movlb	1	; () banked
 25814  00A562  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 25815                           
 25816                           ; Switch size 1, requested type "space"
 25817                           ; Number of cases is 2, Range of values is 49 to 50
 25818                           ; switch strategies available:
 25819                           ; Name         Instructions Cycles
 25820                           ; simple_byte            7     4 (average)
 25821                           ;	Chosen strategy is simple_byte
 25822  00A564  0A31               	xorlw	49	; case 49
 25823  00A566                     L29:
 25824  00A566  B4D8               	btfsc	status,2,c
 25825  00A568  D7F1               	goto	l1426
 25826  00A56A  0A03               	xorlw	3	; case 50
 25827  00A56C  B4D8               	btfsc	status,2,c
 25828  00A56E  D7F3               	goto	l1428
 25829                           
 25830                           ; BSR set to: 1
 25831                           ;display.c: 385: break;
 25832  00A570  EFD8  F057         	goto	l1404
 25833  00A574                     
 25834                           ;display.c: 388: memcpy(display_content, dc_divide2, sizeof display_content);
 25835                           
 25836                           ; BSR set to: 1
 25837  00A574  0E44               	movlw	low _display_content
 25838  00A576  0100               	movlb	0	; () banked
 25839  00A578  6F60               	movwf	memcpy@d1& (0+255),b
 25840  00A57A  0E02               	movlw	high _display_content
 25841  00A57C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25842  00A57E  0E2E               	movlw	low _dc_divide2
 25843  00A580  6F62               	movwf	memcpy@s1& (0+255),b
 25844  00A582  0E9F               	movlw	high _dc_divide2
 25845  00A584  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25846  00A586  0E00               	movlw	0
 25847  00A588  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25848  00A58A  0E50               	movlw	80
 25849  00A58C  6F64               	movwf	memcpy@n& (0+255),b
 25850  00A58E  EC71  F0A4         	call	_memcpy	;wreg free
 25851                           
 25852                           ;display.c: 390: _display_padded_itoa(os.division, 0, temp);
 25853  00A592  C178  F078         	movff	_os+20,__display_padded_itoa@value	;volatile
 25854  00A596  C179  F079         	movff	_os+21,__display_padded_itoa@value+1	;volatile
 25855  00A59A  0E00               	movlw	0
 25856  00A59C  0100               	movlb	0	; () banked
 25857  00A59E  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25858  00A5A0  0EC8               	movlw	low display_prepare@temp
 25859  00A5A2  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25860  00A5A4  0E00               	movlw	high display_prepare@temp
 25861  00A5A6  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25862  00A5A8  ECC3  F090         	call	__display_padded_itoa	;wreg free
 25863                           
 25864                           ;display.c: 391: for(cntr=0; temp[cntr]; ++cntr)
 25865  00A5AC  0E00               	movlw	0
 25866  00A5AE  0100               	movlb	0	; () banked
 25867  00A5B0  6FD3               	movwf	display_prepare@cntr& (0+255),b
 25868  00A5B2  D018               	goto	l1430
 25869  00A5B4                     
 25870                           ; BSR set to: 0
 25871                           ;display.c: 392: {;display.c: 393: display_content[0][cntr+8] = temp[cntr];
 25872                           
 25873                           ; BSR set to: 0
 25874  00A5B4  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25875  00A5B6  0D01               	mullw	1
 25876  00A5B8  0EC8               	movlw	low display_prepare@temp
 25877  00A5BA  24F3               	addwf	prodl,w,c
 25878  00A5BC  6ED9               	movwf	fsr2l,c
 25879  00A5BE  0E00               	movlw	high display_prepare@temp
 25880  00A5C0  20F4               	addwfc	prodh,w,c
 25881  00A5C2  6EDA               	movwf	fsr2h,c
 25882  00A5C4  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25883  00A5C6  6FC6               	movwf	??_display_prepare& (0+255),b
 25884  00A5C8  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25885  00A5CA  0E08               	movlw	8
 25886  00A5CC  27C6               	addwf	??_display_prepare& (0+255),f,b
 25887  00A5CE  0E00               	movlw	0
 25888  00A5D0  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25889  00A5D2  0E44               	movlw	low _display_content
 25890  00A5D4  25C6               	addwf	??_display_prepare& (0+255),w,b
 25891  00A5D6  6EE1               	movwf	fsr1l,c
 25892  00A5D8  0E02               	movlw	high _display_content
 25893  00A5DA  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25894  00A5DC  6EE2               	movwf	fsr1h,c
 25895  00A5DE  CFDF FFE7          	movff	indf2,indf1
 25896                           
 25897                           ; BSR set to: 0
 25898  00A5E2  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 25899  00A5E4                     l1430:
 25900                           
 25901                           ; BSR set to: 0
 25902                           
 25903                           ; BSR set to: 0
 25904  00A5E4  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25905  00A5E6  0D01               	mullw	1
 25906  00A5E8  0EC8               	movlw	low display_prepare@temp
 25907  00A5EA  24F3               	addwf	prodl,w,c
 25908  00A5EC  6ED9               	movwf	fsr2l,c
 25909  00A5EE  0E00               	movlw	high display_prepare@temp
 25910  00A5F0  20F4               	addwfc	prodh,w,c
 25911  00A5F2  6EDA               	movwf	fsr2h,c
 25912  00A5F4  50DF               	movf	indf2,w,c
 25913  00A5F6  A4D8               	btfss	status,2,c
 25914  00A5F8  D7DD               	goto	l1431
 25915                           
 25916                           ; BSR set to: 0
 25917                           ;display.c: 394: };display.c: 396: display_content[0][cntr+8] = ',';
 25918                           
 25919                           ; BSR set to: 0
 25920  00A5FA  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25921  00A5FC  6FC6               	movwf	??_display_prepare& (0+255),b
 25922  00A5FE  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25923  00A600  0E08               	movlw	8
 25924  00A602  27C6               	addwf	??_display_prepare& (0+255),f,b
 25925  00A604  0E00               	movlw	0
 25926  00A606  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25927  00A608  0E44               	movlw	low _display_content
 25928  00A60A  25C6               	addwf	??_display_prepare& (0+255),w,b
 25929  00A60C  6ED9               	movwf	fsr2l,c
 25930  00A60E  0E02               	movlw	high _display_content
 25931  00A610  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25932  00A612  6EDA               	movwf	fsr2h,c
 25933  00A614  0E2C               	movlw	44
 25934  00A616  6EDF               	movwf	indf2,c
 25935                           
 25936                           ; BSR set to: 0
 25937                           ;display.c: 397: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 25938  00A618  0101               	movlb	1	; () banked
 25939  00A61A  2977               	incf	(_os+19)& (0+255),w,b	;volatile
 25940  00A61C  A4D8               	btfss	status,2,c
 25941  00A61E  D024               	goto	l1433
 25942                           
 25943                           ; BSR set to: 1
 25944                           ;display.c: 398: {;display.c: 399: display_content[0][cntr+10] = 'C';
 25945  00A620  0100               	movlb	0	; () banked
 25946  00A622  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25947  00A624  6FC6               	movwf	??_display_prepare& (0+255),b
 25948  00A626  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25949  00A628  0E0A               	movlw	10
 25950  00A62A  27C6               	addwf	??_display_prepare& (0+255),f,b
 25951  00A62C  0E00               	movlw	0
 25952  00A62E  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25953  00A630  0E44               	movlw	low _display_content
 25954  00A632  25C6               	addwf	??_display_prepare& (0+255),w,b
 25955  00A634  6ED9               	movwf	fsr2l,c
 25956  00A636  0E02               	movlw	high _display_content
 25957  00A638  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25958  00A63A  6EDA               	movwf	fsr2h,c
 25959  00A63C  0E43               	movlw	67
 25960  00A63E  6EDF               	movwf	indf2,c
 25961                           
 25962                           ;display.c: 400: display_content[0][cntr+11] = 'C';
 25963  00A640  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25964  00A642  6FC6               	movwf	??_display_prepare& (0+255),b
 25965  00A644  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25966  00A646  0E0B               	movlw	11
 25967  00A648  27C6               	addwf	??_display_prepare& (0+255),f,b
 25968  00A64A  0E00               	movlw	0
 25969  00A64C  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25970  00A64E  0E44               	movlw	low _display_content
 25971  00A650  25C6               	addwf	??_display_prepare& (0+255),w,b
 25972  00A652  6ED9               	movwf	fsr2l,c
 25973  00A654  0E02               	movlw	high _display_content
 25974  00A656  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25975  00A658  6EDA               	movwf	fsr2h,c
 25976  00A65A  0E43               	movlw	67
 25977  00A65C  6EDF               	movwf	indf2,c
 25978                           
 25979                           ;display.c: 401: display_content[0][cntr+12] = 'W';
 25980  00A65E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25981  00A660  6FC6               	movwf	??_display_prepare& (0+255),b
 25982  00A662  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25983  00A664  0E0C               	movlw	12
 25984  00A666  D014               	goto	L30
 25985  00A668                     l1433:
 25986                           
 25987                           ;display.c: 403: else;display.c: 404: {;display.c: 405: display_content[0][cntr+10] = 'C
      +                          ';
 25988                           
 25989                           ; BSR set to: 0
 25990  00A668  0100               	movlb	0	; () banked
 25991  00A66A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25992  00A66C  6FC6               	movwf	??_display_prepare& (0+255),b
 25993  00A66E  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25994  00A670  0E0A               	movlw	10
 25995  00A672  27C6               	addwf	??_display_prepare& (0+255),f,b
 25996  00A674  0E00               	movlw	0
 25997  00A676  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25998  00A678  0E44               	movlw	low _display_content
 25999  00A67A  25C6               	addwf	??_display_prepare& (0+255),w,b
 26000  00A67C  6ED9               	movwf	fsr2l,c
 26001  00A67E  0E02               	movlw	high _display_content
 26002  00A680  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26003  00A682  6EDA               	movwf	fsr2h,c
 26004  00A684  0E43               	movlw	67
 26005  00A686  6EDF               	movwf	indf2,c
 26006                           
 26007                           ;display.c: 406: display_content[0][cntr+11] = 'W';
 26008  00A688  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26009  00A68A  6FC6               	movwf	??_display_prepare& (0+255),b
 26010  00A68C  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26011  00A68E  0E0B               	movlw	11
 26012  00A690                     L30:
 26013  00A690  27C6               	addwf	??_display_prepare& (0+255),f,b
 26014  00A692  0E00               	movlw	0
 26015  00A694  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26016  00A696  0E44               	movlw	low _display_content
 26017  00A698  25C6               	addwf	??_display_prepare& (0+255),w,b
 26018  00A69A  6ED9               	movwf	fsr2l,c
 26019  00A69C  0E02               	movlw	high _display_content
 26020  00A69E  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26021  00A6A0  6EDA               	movwf	fsr2h,c
 26022  00A6A2  0E57               	movlw	87
 26023  00A6A4  6EDF               	movwf	indf2,c
 26024                           
 26025                           ; BSR set to: 0
 26026                           ;display.c: 407: };display.c: 409: _display_padded_itoa(os.divide_position, 0, temp);
 26027                           
 26028                           ; BSR set to: 0
 26029  00A6A6  C17B  F078         	movff	_os+23,__display_padded_itoa@value	;volatile
 26030  00A6AA  C17C  F079         	movff	_os+24,__display_padded_itoa@value+1	;volatile
 26031  00A6AE  0E00               	movlw	0
 26032  00A6B0  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 26033  00A6B2  0EC8               	movlw	low display_prepare@temp
 26034  00A6B4  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 26035  00A6B6  0E00               	movlw	high display_prepare@temp
 26036  00A6B8  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 26037  00A6BA  ECC3  F090         	call	__display_padded_itoa	;wreg free
 26038                           
 26039                           ;display.c: 410: for(cntr=0; temp[cntr]; ++cntr)
 26040  00A6BE  0E00               	movlw	0
 26041  00A6C0  0100               	movlb	0	; () banked
 26042  00A6C2  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26043  00A6C4  D018               	goto	l1435
 26044  00A6C6                     
 26045                           ; BSR set to: 0
 26046                           ;display.c: 411: {;display.c: 412: display_content[1][cntr+5] = temp[cntr];
 26047                           
 26048                           ; BSR set to: 0
 26049  00A6C6  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26050  00A6C8  0D01               	mullw	1
 26051  00A6CA  0EC8               	movlw	low display_prepare@temp
 26052  00A6CC  24F3               	addwf	prodl,w,c
 26053  00A6CE  6ED9               	movwf	fsr2l,c
 26054  00A6D0  0E00               	movlw	high display_prepare@temp
 26055  00A6D2  20F4               	addwfc	prodh,w,c
 26056  00A6D4  6EDA               	movwf	fsr2h,c
 26057  00A6D6  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26058  00A6D8  6FC6               	movwf	??_display_prepare& (0+255),b
 26059  00A6DA  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26060  00A6DC  0E05               	movlw	5
 26061  00A6DE  27C6               	addwf	??_display_prepare& (0+255),f,b
 26062  00A6E0  0E00               	movlw	0
 26063  00A6E2  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26064  00A6E4  0E58               	movlw	low (_display_content+20)
 26065  00A6E6  25C6               	addwf	??_display_prepare& (0+255),w,b
 26066  00A6E8  6EE1               	movwf	fsr1l,c
 26067  00A6EA  0E02               	movlw	high (_display_content+20)
 26068  00A6EC  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26069  00A6EE  6EE2               	movwf	fsr1h,c
 26070  00A6F0  CFDF FFE7          	movff	indf2,indf1
 26071                           
 26072                           ; BSR set to: 0
 26073  00A6F4  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26074  00A6F6                     l1435:
 26075                           
 26076                           ; BSR set to: 0
 26077                           
 26078                           ; BSR set to: 0
 26079  00A6F6  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26080  00A6F8  0D01               	mullw	1
 26081  00A6FA  0EC8               	movlw	low display_prepare@temp
 26082  00A6FC  24F3               	addwf	prodl,w,c
 26083  00A6FE  6ED9               	movwf	fsr2l,c
 26084  00A700  0E00               	movlw	high display_prepare@temp
 26085  00A702  20F4               	addwfc	prodh,w,c
 26086  00A704  6EDA               	movwf	fsr2h,c
 26087  00A706  50DF               	movf	indf2,w,c
 26088  00A708  A4D8               	btfss	status,2,c
 26089  00A70A  D7DD               	goto	l1436
 26090                           
 26091                           ; BSR set to: 0
 26092                           ;display.c: 413: };display.c: 415: display_content[1][cntr+6] = '(';
 26093                           
 26094                           ; BSR set to: 0
 26095  00A70C  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26096  00A70E  6FC6               	movwf	??_display_prepare& (0+255),b
 26097  00A710  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26098  00A712  0E06               	movlw	6
 26099  00A714  27C6               	addwf	??_display_prepare& (0+255),f,b
 26100  00A716  0E00               	movlw	0
 26101  00A718  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26102  00A71A  0E58               	movlw	low (_display_content+20)
 26103  00A71C  25C6               	addwf	??_display_prepare& (0+255),w,b
 26104  00A71E  6ED9               	movwf	fsr2l,c
 26105  00A720  0E02               	movlw	high (_display_content+20)
 26106  00A722  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26107  00A724  6EDA               	movwf	fsr2h,c
 26108  00A726  0E28               	movlw	40
 26109  00A728  6EDF               	movwf	indf2,c
 26110                           
 26111                           ; BSR set to: 0
 26112                           ;display.c: 416: space = cntr + 7;
 26113  00A72A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26114  00A72C  0F07               	addlw	7
 26115  00A72E  6FD2               	movwf	display_prepare@space& (0+255),b
 26116                           
 26117                           ; BSR set to: 0
 26118                           ;display.c: 417: _display_itoa_long(_display_position_in_degrees(), 2, temp);
 26119  00A730  ECE3  F0A8         	call	__display_position_in_degrees	;wreg free
 26120  00A734  C060  F0B7         	movff	?__display_position_in_degrees,__display_itoa_long@value
 26121  00A738  C061  F0B8         	movff	?__display_position_in_degrees+1,__display_itoa_long@value+1
 26122  00A73C  C062  F0B9         	movff	?__display_position_in_degrees+2,__display_itoa_long@value+2
 26123  00A740  C063  F0BA         	movff	?__display_position_in_degrees+3,__display_itoa_long@value+3
 26124  00A744  0E02               	movlw	2
 26125  00A746  0100               	movlb	0	; () banked
 26126  00A748  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 26127  00A74A  0EC8               	movlw	low display_prepare@temp
 26128  00A74C  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 26129  00A74E  0E00               	movlw	high display_prepare@temp
 26130  00A750  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26131  00A752  ECED  F087         	call	__display_itoa_long	;wreg free
 26132                           
 26133                           ;display.c: 418: for(cntr=0; temp[cntr]; ++cntr)
 26134  00A756  0E00               	movlw	0
 26135  00A758  0100               	movlb	0	; () banked
 26136  00A75A  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26137  00A75C  D018               	goto	l1438
 26138  00A75E                     
 26139                           ; BSR set to: 0
 26140                           ;display.c: 419: {;display.c: 420: display_content[1][cntr+space] = temp[cntr];
 26141                           
 26142                           ; BSR set to: 0
 26143  00A75E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26144  00A760  0D01               	mullw	1
 26145  00A762  0EC8               	movlw	low display_prepare@temp
 26146  00A764  24F3               	addwf	prodl,w,c
 26147  00A766  6ED9               	movwf	fsr2l,c
 26148  00A768  0E00               	movlw	high display_prepare@temp
 26149  00A76A  20F4               	addwfc	prodh,w,c
 26150  00A76C  6EDA               	movwf	fsr2h,c
 26151  00A76E  51D2               	movf	display_prepare@space& (0+255),w,b
 26152  00A770  C0D3  F0C6         	movff	display_prepare@cntr,??_display_prepare
 26153  00A774  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26154  00A776  27C6               	addwf	??_display_prepare& (0+255),f,b
 26155  00A778  0E00               	movlw	0
 26156  00A77A  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26157  00A77C  0E58               	movlw	low (_display_content+20)
 26158  00A77E  25C6               	addwf	??_display_prepare& (0+255),w,b
 26159  00A780  6EE1               	movwf	fsr1l,c
 26160  00A782  0E02               	movlw	high (_display_content+20)
 26161  00A784  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26162  00A786  6EE2               	movwf	fsr1h,c
 26163  00A788  CFDF FFE7          	movff	indf2,indf1
 26164                           
 26165                           ; BSR set to: 0
 26166  00A78C  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26167  00A78E                     l1438:
 26168                           
 26169                           ; BSR set to: 0
 26170                           
 26171                           ; BSR set to: 0
 26172  00A78E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26173  00A790  0D01               	mullw	1
 26174  00A792  0EC8               	movlw	low display_prepare@temp
 26175  00A794  24F3               	addwf	prodl,w,c
 26176  00A796  6ED9               	movwf	fsr2l,c
 26177  00A798  0E00               	movlw	high display_prepare@temp
 26178  00A79A  20F4               	addwfc	prodh,w,c
 26179  00A79C  6EDA               	movwf	fsr2h,c
 26180  00A79E  50DF               	movf	indf2,w,c
 26181  00A7A0  A4D8               	btfss	status,2,c
 26182  00A7A2  D7DD               	goto	l1439
 26183                           
 26184                           ; BSR set to: 0
 26185                           ;display.c: 421: };display.c: 422: display_content[1][cntr+space] = 0x01;
 26186                           
 26187                           ; BSR set to: 0
 26188  00A7A4  51D2               	movf	display_prepare@space& (0+255),w,b
 26189  00A7A6  C0D3  F0C6         	movff	display_prepare@cntr,??_display_prepare
 26190  00A7AA  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26191  00A7AC  27C6               	addwf	??_display_prepare& (0+255),f,b
 26192  00A7AE  0E00               	movlw	0
 26193  00A7B0  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26194  00A7B2  0E58               	movlw	low (_display_content+20)
 26195  00A7B4  25C6               	addwf	??_display_prepare& (0+255),w,b
 26196  00A7B6  6ED9               	movwf	fsr2l,c
 26197  00A7B8  0E02               	movlw	high (_display_content+20)
 26198  00A7BA  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26199  00A7BC  6EDA               	movwf	fsr2h,c
 26200  00A7BE  0E01               	movlw	1
 26201  00A7C0  6EDF               	movwf	indf2,c
 26202                           
 26203                           ;display.c: 423: display_content[1][cntr+space+1] = ')';
 26204  00A7C2  51D2               	movf	display_prepare@space& (0+255),w,b
 26205  00A7C4  C0D3  F0C6         	movff	display_prepare@cntr,??_display_prepare
 26206  00A7C8  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26207  00A7CA  27C6               	addwf	??_display_prepare& (0+255),f,b
 26208  00A7CC  0E00               	movlw	0
 26209  00A7CE  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26210  00A7D0  0E01               	movlw	1
 26211  00A7D2  27C6               	addwf	??_display_prepare& (0+255),f,b
 26212  00A7D4  0E00               	movlw	0
 26213  00A7D6  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26214  00A7D8  0E58               	movlw	low (_display_content+20)
 26215  00A7DA  25C6               	addwf	??_display_prepare& (0+255),w,b
 26216  00A7DC  6ED9               	movwf	fsr2l,c
 26217  00A7DE  0E02               	movlw	high (_display_content+20)
 26218  00A7E0  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26219  00A7E2  6EDA               	movwf	fsr2h,c
 26220  00A7E4  0E29               	movlw	41
 26221  00A7E6  6EDF               	movwf	indf2,c
 26222                           
 26223                           ; BSR set to: 0
 26224                           ;display.c: 425: _display_signed_itoa(os.divide_jump_size, temp);
 26225  00A7E8  C17D  F08F         	movff	_os+25,__display_signed_itoa@value	;volatile
 26226  00A7EC  C17E  F090         	movff	_os+26,__display_signed_itoa@value+1	;volatile
 26227  00A7F0  0EC8               	movlw	low display_prepare@temp
 26228  00A7F2  6F91               	movwf	__display_signed_itoa@text& (0+255),b
 26229  00A7F4  0E00               	movlw	high display_prepare@temp
 26230  00A7F6  6F92               	movwf	(__display_signed_itoa@text+1)& (0+255),b
 26231  00A7F8  EC62  F0AA         	call	__display_signed_itoa	;wreg free
 26232                           
 26233                           ;display.c: 426: for(cntr=0; temp[cntr]; ++cntr)
 26234  00A7FC  0E00               	movlw	0
 26235  00A7FE  0100               	movlb	0	; () banked
 26236  00A800  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26237  00A802  D018               	goto	l1441
 26238  00A804                     
 26239                           ; BSR set to: 0
 26240                           ;display.c: 427: {;display.c: 428: display_content[2][cntr+11] = temp[cntr];
 26241                           
 26242                           ; BSR set to: 0
 26243  00A804  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26244  00A806  0D01               	mullw	1
 26245  00A808  0EC8               	movlw	low display_prepare@temp
 26246  00A80A  24F3               	addwf	prodl,w,c
 26247  00A80C  6ED9               	movwf	fsr2l,c
 26248  00A80E  0E00               	movlw	high display_prepare@temp
 26249  00A810  20F4               	addwfc	prodh,w,c
 26250  00A812  6EDA               	movwf	fsr2h,c
 26251  00A814  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26252  00A816  6FC6               	movwf	??_display_prepare& (0+255),b
 26253  00A818  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26254  00A81A  0E0B               	movlw	11
 26255  00A81C  27C6               	addwf	??_display_prepare& (0+255),f,b
 26256  00A81E  0E00               	movlw	0
 26257  00A820  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26258  00A822  0E6C               	movlw	low (_display_content+40)
 26259  00A824  25C6               	addwf	??_display_prepare& (0+255),w,b
 26260  00A826  6EE1               	movwf	fsr1l,c
 26261  00A828  0E02               	movlw	high (_display_content+40)
 26262  00A82A  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26263  00A82C  6EE2               	movwf	fsr1h,c
 26264  00A82E  CFDF FFE7          	movff	indf2,indf1
 26265                           
 26266                           ; BSR set to: 0
 26267  00A832  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26268  00A834                     l1441:
 26269                           
 26270                           ; BSR set to: 0
 26271                           
 26272                           ; BSR set to: 0
 26273  00A834  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26274  00A836  0D01               	mullw	1
 26275  00A838  0EC8               	movlw	low display_prepare@temp
 26276  00A83A  24F3               	addwf	prodl,w,c
 26277  00A83C  6ED9               	movwf	fsr2l,c
 26278  00A83E  0E00               	movlw	high display_prepare@temp
 26279  00A840  20F4               	addwfc	prodh,w,c
 26280  00A842  6EDA               	movwf	fsr2h,c
 26281  00A844  50DF               	movf	indf2,w,c
 26282  00A846  B4D8               	btfsc	status,2,c
 26283  00A848  D3B3               	goto	l1404
 26284  00A84A  D7DC               	goto	l1442
 26285  00A84C                     
 26286                           ; BSR set to: 0
 26287                           ;display.c: 433: memcpy(display_content, dc_arc1, sizeof display_content);
 26288                           
 26289                           ; BSR set to: 0
 26290  00A84C  0E44               	movlw	low _display_content
 26291  00A84E  6F60               	movwf	memcpy@d1& (0+255),b
 26292  00A850  0E02               	movlw	high _display_content
 26293  00A852  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26294  00A854  0EDE               	movlw	low _dc_arc1
 26295  00A856  6F62               	movwf	memcpy@s1& (0+255),b
 26296  00A858  0E9E               	movlw	high _dc_arc1
 26297  00A85A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26298  00A85C  0E00               	movlw	0
 26299  00A85E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26300  00A860  0E50               	movlw	80
 26301  00A862  6F64               	movwf	memcpy@n& (0+255),b
 26302  00A864  EC71  F0A4         	call	_memcpy	;wreg free
 26303                           
 26304                           ;display.c: 434: switch(os.displayState)
 26305  00A868  D008               	goto	l1445
 26306  00A86A                     
 26307                           ;display.c: 437: display_content[2][12] = '>';
 26308  00A86A  0E3E               	movlw	62
 26309  00A86C  0102               	movlb	2	; () banked
 26310  00A86E  6F78               	movwf	(_display_content+52)& (0+255),b
 26311                           
 26312                           ;display.c: 438: break;
 26313  00A870  D00C               	goto	l1447
 26314  00A872                     
 26315                           ;display.c: 440: display_content[3][12] = '>';
 26316                           
 26317                           ; BSR set to: 2
 26318  00A872  0E3E               	movlw	62
 26319  00A874  0102               	movlb	2	; () banked
 26320  00A876  6F8C               	movwf	(_display_content+72)& (0+255),b
 26321                           
 26322                           ; BSR set to: 2
 26323                           ;display.c: 442: }
 26324                           
 26325                           ;display.c: 441: break;
 26326  00A878  D008               	goto	l1447
 26327  00A87A                     l1445:
 26328                           
 26329                           ; BSR set to: 2
 26330  00A87A  0101               	movlb	1	; () banked
 26331  00A87C  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 26332                           
 26333                           ; Switch size 1, requested type "space"
 26334                           ; Number of cases is 2, Range of values is 81 to 82
 26335                           ; switch strategies available:
 26336                           ; Name         Instructions Cycles
 26337                           ; simple_byte            7     4 (average)
 26338                           ;	Chosen strategy is simple_byte
 26339  00A87E  0A51               	xorlw	81	; case 81
 26340  00A880  B4D8               	btfsc	status,2,c
 26341  00A882  D7F3               	goto	l1446
 26342  00A884  0A03               	xorlw	3	; case 82
 26343  00A886  B4D8               	btfsc	status,2,c
 26344  00A888  D7F4               	goto	l1448
 26345  00A88A                     l1447:
 26346                           
 26347                           ;display.c: 445: _display_itoa_long(os.arc_size, 2, temp);
 26348                           
 26349                           ; BSR set to: 1
 26350  00A88A  C181  F0B7         	movff	_os+29,__display_itoa_long@value	;volatile
 26351  00A88E  C182  F0B8         	movff	_os+30,__display_itoa_long@value+1	;volatile
 26352  00A892  C183  F0B9         	movff	_os+31,__display_itoa_long@value+2	;volatile
 26353  00A896  C184  F0BA         	movff	_os+32,__display_itoa_long@value+3	;volatile
 26354  00A89A  0E02               	movlw	2
 26355  00A89C  0100               	movlb	0	; () banked
 26356  00A89E  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 26357  00A8A0  0EC8               	movlw	low display_prepare@temp
 26358  00A8A2  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 26359  00A8A4  0E00               	movlw	high display_prepare@temp
 26360  00A8A6  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26361  00A8A8  ECED  F087         	call	__display_itoa_long	;wreg free
 26362                           
 26363                           ;display.c: 446: for(cntr=0; temp[cntr]; ++cntr)
 26364  00A8AC  0E00               	movlw	0
 26365  00A8AE  0100               	movlb	0	; () banked
 26366  00A8B0  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26367  00A8B2  D018               	goto	l1449
 26368  00A8B4                     
 26369                           ; BSR set to: 0
 26370                           ;display.c: 447: {;display.c: 448: display_content[1][10+cntr] = temp[cntr];
 26371                           
 26372                           ; BSR set to: 0
 26373  00A8B4  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26374  00A8B6  0D01               	mullw	1
 26375  00A8B8  0EC8               	movlw	low display_prepare@temp
 26376  00A8BA  24F3               	addwf	prodl,w,c
 26377  00A8BC  6ED9               	movwf	fsr2l,c
 26378  00A8BE  0E00               	movlw	high display_prepare@temp
 26379  00A8C0  20F4               	addwfc	prodh,w,c
 26380  00A8C2  6EDA               	movwf	fsr2h,c
 26381  00A8C4  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26382  00A8C6  6FC6               	movwf	??_display_prepare& (0+255),b
 26383  00A8C8  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26384  00A8CA  0E0A               	movlw	10
 26385  00A8CC  27C6               	addwf	??_display_prepare& (0+255),f,b
 26386  00A8CE  0E00               	movlw	0
 26387  00A8D0  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26388  00A8D2  0E58               	movlw	low (_display_content+20)
 26389  00A8D4  25C6               	addwf	??_display_prepare& (0+255),w,b
 26390  00A8D6  6EE1               	movwf	fsr1l,c
 26391  00A8D8  0E02               	movlw	high (_display_content+20)
 26392  00A8DA  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26393  00A8DC  6EE2               	movwf	fsr1h,c
 26394  00A8DE  CFDF FFE7          	movff	indf2,indf1
 26395                           
 26396                           ; BSR set to: 0
 26397  00A8E2  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26398  00A8E4                     l1449:
 26399                           
 26400                           ; BSR set to: 0
 26401                           
 26402                           ; BSR set to: 0
 26403  00A8E4  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26404  00A8E6  0D01               	mullw	1
 26405  00A8E8  0EC8               	movlw	low display_prepare@temp
 26406  00A8EA  24F3               	addwf	prodl,w,c
 26407  00A8EC  6ED9               	movwf	fsr2l,c
 26408  00A8EE  0E00               	movlw	high display_prepare@temp
 26409  00A8F0  20F4               	addwfc	prodh,w,c
 26410  00A8F2  6EDA               	movwf	fsr2h,c
 26411  00A8F4  50DF               	movf	indf2,w,c
 26412  00A8F6  A4D8               	btfss	status,2,c
 26413  00A8F8  D7DD               	goto	l1450
 26414                           
 26415                           ; BSR set to: 0
 26416                           ;display.c: 449: };display.c: 450: display_content[1][10+cntr] = 0x01;
 26417                           
 26418                           ; BSR set to: 0
 26419  00A8FA  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26420  00A8FC  6FC6               	movwf	??_display_prepare& (0+255),b
 26421  00A8FE  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26422  00A900  0E0A               	movlw	10
 26423  00A902  27C6               	addwf	??_display_prepare& (0+255),f,b
 26424  00A904  0E00               	movlw	0
 26425  00A906  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26426  00A908  0E58               	movlw	low (_display_content+20)
 26427  00A90A  25C6               	addwf	??_display_prepare& (0+255),w,b
 26428  00A90C  6ED9               	movwf	fsr2l,c
 26429  00A90E  0E02               	movlw	high (_display_content+20)
 26430  00A910  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26431  00A912  6EDA               	movwf	fsr2h,c
 26432  00A914  0E01               	movlw	1
 26433  00A916  6EDF               	movwf	indf2,c
 26434                           
 26435                           ; BSR set to: 0
 26436                           ;display.c: 453: _display_itoa(os.arc_step_size, 2, temp);
 26437  00A918  C17F  F09F         	movff	_os+27,__display_itoa@value	;volatile
 26438  00A91C  C180  F0A0         	movff	_os+28,__display_itoa@value+1	;volatile
 26439  00A920  0E02               	movlw	2
 26440  00A922  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 26441  00A924  0EC8               	movlw	low display_prepare@temp
 26442  00A926  6FA2               	movwf	__display_itoa@text& (0+255),b
 26443  00A928  0E00               	movlw	high display_prepare@temp
 26444  00A92A  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 26445  00A92C  EC4A  F072         	call	__display_itoa	;wreg free
 26446                           
 26447                           ;display.c: 454: if(os.arc_step_size>999)
 26448  00A930  0EE8               	movlw	232
 26449  00A932  0101               	movlb	1	; () banked
 26450  00A934  5D7F               	subwf	(_os+27)& (0+255),w,b	;volatile
 26451  00A936  0E03               	movlw	3
 26452  00A938  5980               	subwfb	(_os+28)& (0+255),w,b	;volatile
 26453  00A93A  A0D8               	btfss	status,0,c
 26454  00A93C  D002               	goto	l1452
 26455                           
 26456                           ; BSR set to: 1
 26457                           ;display.c: 455: space = 0;
 26458  00A93E  0E00               	movlw	0
 26459  00A940  D001               	goto	L24
 26460  00A942                     l1452:
 26461                           
 26462                           ;display.c: 456: else;display.c: 457: space = 1;
 26463                           
 26464                           ; BSR set to: 0
 26465  00A942  0E01               	movlw	1
 26466  00A944                     L24:
 26467  00A944  0100               	movlb	0	; () banked
 26468  00A946  6FD2               	movwf	display_prepare@space& (0+255),b
 26469                           
 26470                           ; BSR set to: 0
 26471                           ;display.c: 458: for(cntr=0; temp[cntr]; ++cntr)
 26472  00A948  0E00               	movlw	0
 26473  00A94A  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26474  00A94C  D018               	goto	l1454
 26475  00A94E                     
 26476                           ; BSR set to: 0
 26477                           ;display.c: 459: {;display.c: 460: display_content[3][space+cntr] = temp[cntr];
 26478                           
 26479                           ; BSR set to: 0
 26480  00A94E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26481  00A950  0D01               	mullw	1
 26482  00A952  0EC8               	movlw	low display_prepare@temp
 26483  00A954  24F3               	addwf	prodl,w,c
 26484  00A956  6ED9               	movwf	fsr2l,c
 26485  00A958  0E00               	movlw	high display_prepare@temp
 26486  00A95A  20F4               	addwfc	prodh,w,c
 26487  00A95C  6EDA               	movwf	fsr2h,c
 26488  00A95E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26489  00A960  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 26490  00A964  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26491  00A966  27C6               	addwf	??_display_prepare& (0+255),f,b
 26492  00A968  0E00               	movlw	0
 26493  00A96A  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26494  00A96C  0E80               	movlw	low (_display_content+60)
 26495  00A96E  25C6               	addwf	??_display_prepare& (0+255),w,b
 26496  00A970  6EE1               	movwf	fsr1l,c
 26497  00A972  0E02               	movlw	high (_display_content+60)
 26498  00A974  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26499  00A976  6EE2               	movwf	fsr1h,c
 26500  00A978  CFDF FFE7          	movff	indf2,indf1
 26501                           
 26502                           ; BSR set to: 0
 26503  00A97C  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26504  00A97E                     l1454:
 26505                           
 26506                           ; BSR set to: 0
 26507                           
 26508                           ; BSR set to: 0
 26509  00A97E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26510  00A980  0D01               	mullw	1
 26511  00A982  0EC8               	movlw	low display_prepare@temp
 26512  00A984  24F3               	addwf	prodl,w,c
 26513  00A986  6ED9               	movwf	fsr2l,c
 26514  00A988  0E00               	movlw	high display_prepare@temp
 26515  00A98A  20F4               	addwfc	prodh,w,c
 26516  00A98C  6EDA               	movwf	fsr2h,c
 26517  00A98E  50DF               	movf	indf2,w,c
 26518  00A990  A4D8               	btfss	status,2,c
 26519  00A992  D7DD               	goto	l1455
 26520                           
 26521                           ; BSR set to: 0
 26522                           ;display.c: 461: };display.c: 462: display_content[3][space+cntr] = 0x01 ;
 26523                           
 26524                           ; BSR set to: 0
 26525  00A994  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26526  00A996  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 26527  00A99A  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26528  00A99C  27C6               	addwf	??_display_prepare& (0+255),f,b
 26529  00A99E  0E00               	movlw	0
 26530  00A9A0  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26531  00A9A2  0E80               	movlw	low (_display_content+60)
 26532  00A9A4  25C6               	addwf	??_display_prepare& (0+255),w,b
 26533  00A9A6  6ED9               	movwf	fsr2l,c
 26534  00A9A8  0E02               	movlw	high (_display_content+60)
 26535  00A9AA  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26536  00A9AC  6EDA               	movwf	fsr2h,c
 26537  00A9AE  0E01               	movlw	1
 26538  00A9B0  D268               	goto	L27
 26539  00A9B2                     
 26540                           ; BSR set to: 0
 26541                           ;display.c: 467: memcpy(display_content, dc_arc2, sizeof display_content);
 26542                           
 26543                           ; BSR set to: 0
 26544  00A9B2  0E44               	movlw	low _display_content
 26545  00A9B4  6F60               	movwf	memcpy@d1& (0+255),b
 26546  00A9B6  0E02               	movlw	high _display_content
 26547  00A9B8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26548  00A9BA  0E8E               	movlw	low _dc_arc2
 26549  00A9BC  6F62               	movwf	memcpy@s1& (0+255),b
 26550  00A9BE  0E9E               	movlw	high _dc_arc2
 26551  00A9C0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26552  00A9C2  0E00               	movlw	0
 26553  00A9C4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26554  00A9C6  0E50               	movlw	80
 26555  00A9C8  6F64               	movwf	memcpy@n& (0+255),b
 26556  00A9CA  EC71  F0A4         	call	_memcpy	;wreg free
 26557                           
 26558                           ;display.c: 468: switch(os.displayState)
 26559  00A9CE  D025               	goto	l1458
 26560  00A9D0                     
 26561                           ;display.c: 471: display_content[2][6] = 'W';
 26562  00A9D0  0E57               	movlw	87
 26563  00A9D2  0102               	movlb	2	; () banked
 26564  00A9D4  6F72               	movwf	(_display_content+46)& (0+255),b
 26565                           
 26566                           ;display.c: 472: display_content[2][7] = ' ';
 26567  00A9D6  0E20               	movlw	32
 26568  00A9D8  6F73               	movwf	(_display_content+47)& (0+255),b
 26569                           
 26570                           ;display.c: 473: break;
 26571  00A9DA  D027               	goto	l1460
 26572  00A9DC                     
 26573                           ;display.c: 475: memcpy(display_content[2], "        ", 8);
 26574                           
 26575                           ; BSR set to: 2
 26576  00A9DC  0E6C               	movlw	low (_display_content+40)
 26577  00A9DE  0100               	movlb	0	; () banked
 26578  00A9E0  6F60               	movwf	memcpy@d1& (0+255),b
 26579  00A9E2  0E02               	movlw	high (_display_content+40)
 26580  00A9E4  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26581  00A9E6  0E29               	movlw	low STR_1
 26582  00A9E8  6F62               	movwf	memcpy@s1& (0+255),b
 26583  00A9EA  0EA3               	movlw	high STR_1
 26584  00A9EC  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26585  00A9EE  0E00               	movlw	0
 26586  00A9F0  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26587  00A9F2  0E08               	movlw	8
 26588  00A9F4  6F64               	movwf	memcpy@n& (0+255),b
 26589  00A9F6  EC71  F0A4         	call	_memcpy	;wreg free
 26590                           
 26591                           ;display.c: 476: memcpy(display_content[3], "Cancel", 6);
 26592  00A9FA  0E80               	movlw	low (_display_content+60)
 26593  00A9FC  0100               	movlb	0	; () banked
 26594  00A9FE  6F60               	movwf	memcpy@d1& (0+255),b
 26595  00AA00  0E02               	movlw	high (_display_content+60)
 26596  00AA02  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26597  00AA04  0E32               	movlw	low STR_2
 26598  00AA06  6F62               	movwf	memcpy@s1& (0+255),b
 26599  00AA08  0EA3               	movlw	high STR_2
 26600  00AA0A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26601  00AA0C  0E00               	movlw	0
 26602  00AA0E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26603  00AA10  0E06               	movlw	6
 26604  00AA12  6F64               	movwf	memcpy@n& (0+255),b
 26605  00AA14  EC71  F0A4         	call	_memcpy	;wreg free
 26606                           
 26607                           ;display.c: 478: }
 26608                           
 26609                           ;display.c: 477: break;
 26610  00AA18  D008               	goto	l1460
 26611  00AA1A                     l1458:
 26612  00AA1A  0101               	movlb	1	; () banked
 26613  00AA1C  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 26614                           
 26615                           ; Switch size 1, requested type "space"
 26616                           ; Number of cases is 2, Range of values is 98 to 99
 26617                           ; switch strategies available:
 26618                           ; Name         Instructions Cycles
 26619                           ; simple_byte            7     4 (average)
 26620                           ;	Chosen strategy is simple_byte
 26621  00AA1E  0A62               	xorlw	98	; case 98
 26622  00AA20  B4D8               	btfsc	status,2,c
 26623  00AA22  D7DC               	goto	l1461
 26624  00AA24  0A01               	xorlw	1	; case 99
 26625  00AA26  B4D8               	btfsc	status,2,c
 26626  00AA28  D7D3               	goto	l1459
 26627  00AA2A                     l1460:
 26628                           
 26629                           ;display.c: 481: _display_itoa_long(os.arc_size, 2, temp);
 26630                           
 26631                           ; BSR set to: 1
 26632  00AA2A  C181  F0B7         	movff	_os+29,__display_itoa_long@value	;volatile
 26633  00AA2E  C182  F0B8         	movff	_os+30,__display_itoa_long@value+1	;volatile
 26634  00AA32  C183  F0B9         	movff	_os+31,__display_itoa_long@value+2	;volatile
 26635  00AA36  C184  F0BA         	movff	_os+32,__display_itoa_long@value+3	;volatile
 26636  00AA3A  0E02               	movlw	2
 26637  00AA3C  0100               	movlb	0	; () banked
 26638  00AA3E  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 26639  00AA40  0EC8               	movlw	low display_prepare@temp
 26640  00AA42  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 26641  00AA44  0E00               	movlw	high display_prepare@temp
 26642  00AA46  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26643  00AA48  ECED  F087         	call	__display_itoa_long	;wreg free
 26644                           
 26645                           ;display.c: 482: for(cntr=0; temp[cntr]; ++cntr)
 26646  00AA4C  0E00               	movlw	0
 26647  00AA4E  0100               	movlb	0	; () banked
 26648  00AA50  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26649  00AA52  D018               	goto	l1462
 26650  00AA54                     
 26651                           ; BSR set to: 0
 26652                           ;display.c: 483: {;display.c: 484: display_content[0][10+cntr] = temp[cntr];
 26653                           
 26654                           ; BSR set to: 0
 26655  00AA54  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26656  00AA56  0D01               	mullw	1
 26657  00AA58  0EC8               	movlw	low display_prepare@temp
 26658  00AA5A  24F3               	addwf	prodl,w,c
 26659  00AA5C  6ED9               	movwf	fsr2l,c
 26660  00AA5E  0E00               	movlw	high display_prepare@temp
 26661  00AA60  20F4               	addwfc	prodh,w,c
 26662  00AA62  6EDA               	movwf	fsr2h,c
 26663  00AA64  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26664  00AA66  6FC6               	movwf	??_display_prepare& (0+255),b
 26665  00AA68  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26666  00AA6A  0E0A               	movlw	10
 26667  00AA6C  27C6               	addwf	??_display_prepare& (0+255),f,b
 26668  00AA6E  0E00               	movlw	0
 26669  00AA70  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26670  00AA72  0E44               	movlw	low _display_content
 26671  00AA74  25C6               	addwf	??_display_prepare& (0+255),w,b
 26672  00AA76  6EE1               	movwf	fsr1l,c
 26673  00AA78  0E02               	movlw	high _display_content
 26674  00AA7A  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26675  00AA7C  6EE2               	movwf	fsr1h,c
 26676  00AA7E  CFDF FFE7          	movff	indf2,indf1
 26677                           
 26678                           ; BSR set to: 0
 26679  00AA82  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26680  00AA84                     l1462:
 26681                           
 26682                           ; BSR set to: 0
 26683                           
 26684                           ; BSR set to: 0
 26685  00AA84  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26686  00AA86  0D01               	mullw	1
 26687  00AA88  0EC8               	movlw	low display_prepare@temp
 26688  00AA8A  24F3               	addwf	prodl,w,c
 26689  00AA8C  6ED9               	movwf	fsr2l,c
 26690  00AA8E  0E00               	movlw	high display_prepare@temp
 26691  00AA90  20F4               	addwfc	prodh,w,c
 26692  00AA92  6EDA               	movwf	fsr2h,c
 26693  00AA94  50DF               	movf	indf2,w,c
 26694  00AA96  A4D8               	btfss	status,2,c
 26695  00AA98  D7DD               	goto	l1463
 26696                           
 26697                           ; BSR set to: 0
 26698                           ;display.c: 485: };display.c: 486: display_content[0][10+cntr] = 0x01;
 26699                           
 26700                           ; BSR set to: 0
 26701  00AA9A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26702  00AA9C  6FC6               	movwf	??_display_prepare& (0+255),b
 26703  00AA9E  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26704  00AAA0  0E0A               	movlw	10
 26705  00AAA2  27C6               	addwf	??_display_prepare& (0+255),f,b
 26706  00AAA4  0E00               	movlw	0
 26707  00AAA6  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26708  00AAA8  0E44               	movlw	low _display_content
 26709  00AAAA  25C6               	addwf	??_display_prepare& (0+255),w,b
 26710  00AAAC  6ED9               	movwf	fsr2l,c
 26711  00AAAE  0E02               	movlw	high _display_content
 26712  00AAB0  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26713  00AAB2  6EDA               	movwf	fsr2h,c
 26714  00AAB4  0E01               	movlw	1
 26715  00AAB6  6EDF               	movwf	indf2,c
 26716                           
 26717                           ; BSR set to: 0
 26718                           ;display.c: 489: _display_itoa_long(_display_position_in_degrees(), 2, temp);
 26719  00AAB8  ECE3  F0A8         	call	__display_position_in_degrees	;wreg free
 26720  00AABC  C060  F0B7         	movff	?__display_position_in_degrees,__display_itoa_long@value
 26721  00AAC0  C061  F0B8         	movff	?__display_position_in_degrees+1,__display_itoa_long@value+1
 26722  00AAC4  C062  F0B9         	movff	?__display_position_in_degrees+2,__display_itoa_long@value+2
 26723  00AAC8  C063  F0BA         	movff	?__display_position_in_degrees+3,__display_itoa_long@value+3
 26724  00AACC  0E02               	movlw	2
 26725  00AACE  0100               	movlb	0	; () banked
 26726  00AAD0  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 26727  00AAD2  0EC8               	movlw	low display_prepare@temp
 26728  00AAD4  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 26729  00AAD6  0E00               	movlw	high display_prepare@temp
 26730  00AAD8  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26731  00AADA  ECED  F087         	call	__display_itoa_long	;wreg free
 26732                           
 26733                           ;display.c: 490: space = 6-strlen(temp);
 26734  00AADE  0EC8               	movlw	low display_prepare@temp
 26735  00AAE0  0100               	movlb	0	; () banked
 26736  00AAE2  6F60               	movwf	strlen@s& (0+255),b
 26737  00AAE4  0E00               	movlw	high display_prepare@temp
 26738  00AAE6  6F61               	movwf	(strlen@s+1)& (0+255),b
 26739  00AAE8  EC2A  F0AB         	call	_strlen	;wreg free
 26740  00AAEC  0100               	movlb	0	; () banked
 26741  00AAEE  5160               	movf	?_strlen& (0+255),w,b
 26742  00AAF0  0800               	sublw	0
 26743  00AAF2  0F06               	addlw	6
 26744  00AAF4  6FD2               	movwf	display_prepare@space& (0+255),b
 26745                           
 26746                           ; BSR set to: 0
 26747                           ;display.c: 491: for(cntr=0; temp[cntr]; ++cntr)
 26748  00AAF6  0E00               	movlw	0
 26749  00AAF8  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26750  00AAFA  D01C               	goto	l1465
 26751  00AAFC                     
 26752                           ; BSR set to: 0
 26753                           ;display.c: 492: {;display.c: 493: display_content[1][13+space+cntr] = temp[cntr];
 26754                           
 26755                           ; BSR set to: 0
 26756  00AAFC  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26757  00AAFE  0D01               	mullw	1
 26758  00AB00  0EC8               	movlw	low display_prepare@temp
 26759  00AB02  24F3               	addwf	prodl,w,c
 26760  00AB04  6ED9               	movwf	fsr2l,c
 26761  00AB06  0E00               	movlw	high display_prepare@temp
 26762  00AB08  20F4               	addwfc	prodh,w,c
 26763  00AB0A  6EDA               	movwf	fsr2h,c
 26764  00AB0C  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26765  00AB0E  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 26766  00AB12  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26767  00AB14  27C6               	addwf	??_display_prepare& (0+255),f,b
 26768  00AB16  0E00               	movlw	0
 26769  00AB18  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26770  00AB1A  0E0D               	movlw	13
 26771  00AB1C  27C6               	addwf	??_display_prepare& (0+255),f,b
 26772  00AB1E  0E00               	movlw	0
 26773  00AB20  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26774  00AB22  0E58               	movlw	low (_display_content+20)
 26775  00AB24  25C6               	addwf	??_display_prepare& (0+255),w,b
 26776  00AB26  6EE1               	movwf	fsr1l,c
 26777  00AB28  0E02               	movlw	high (_display_content+20)
 26778  00AB2A  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26779  00AB2C  6EE2               	movwf	fsr1h,c
 26780  00AB2E  CFDF FFE7          	movff	indf2,indf1
 26781                           
 26782                           ; BSR set to: 0
 26783  00AB32  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26784  00AB34                     l1465:
 26785                           
 26786                           ; BSR set to: 0
 26787                           
 26788                           ; BSR set to: 0
 26789  00AB34  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26790  00AB36  0D01               	mullw	1
 26791  00AB38  0EC8               	movlw	low display_prepare@temp
 26792  00AB3A  24F3               	addwf	prodl,w,c
 26793  00AB3C  6ED9               	movwf	fsr2l,c
 26794  00AB3E  0E00               	movlw	high display_prepare@temp
 26795  00AB40  20F4               	addwfc	prodh,w,c
 26796  00AB42  6EDA               	movwf	fsr2h,c
 26797  00AB44  50DF               	movf	indf2,w,c
 26798  00AB46  A4D8               	btfss	status,2,c
 26799  00AB48  D7D9               	goto	l1466
 26800                           
 26801                           ; BSR set to: 0
 26802                           ;display.c: 494: };display.c: 497: _display_itoa(motor_speed_from_index(os.arc_speed), 2
      +                          , temp);
 26803                           
 26804                           ; BSR set to: 0
 26805  00AB4A  C185  F09D         	movff	_os+33,motor_speed_from_index@speed_index	;volatile
 26806  00AB4E  C186  F09E         	movff	_os+34,motor_speed_from_index@speed_index+1	;volatile
 26807  00AB52  EC33  F0AF         	call	_motor_speed_from_index	;wreg free
 26808  00AB56  C09D  F09F         	movff	?_motor_speed_from_index,__display_itoa@value
 26809  00AB5A  C09E  F0A0         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 26810  00AB5E  0E02               	movlw	2
 26811  00AB60  0100               	movlb	0	; () banked
 26812  00AB62  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 26813  00AB64  0EC8               	movlw	low display_prepare@temp
 26814  00AB66  6FA2               	movwf	__display_itoa@text& (0+255),b
 26815  00AB68  0E00               	movlw	high display_prepare@temp
 26816  00AB6A  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 26817  00AB6C  EC4A  F072         	call	__display_itoa	;wreg free
 26818                           
 26819                           ;display.c: 498: for(cntr=0; temp[cntr]; ++cntr)
 26820  00AB70  0E00               	movlw	0
 26821  00AB72  0100               	movlb	0	; () banked
 26822  00AB74  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26823  00AB76  D018               	goto	l1468
 26824  00AB78                     
 26825                           ; BSR set to: 0
 26826                           ;display.c: 499: {;display.c: 500: display_content[3][11+cntr] = temp[cntr];
 26827                           
 26828                           ; BSR set to: 0
 26829  00AB78  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26830  00AB7A  0D01               	mullw	1
 26831  00AB7C  0EC8               	movlw	low display_prepare@temp
 26832  00AB7E  24F3               	addwf	prodl,w,c
 26833  00AB80  6ED9               	movwf	fsr2l,c
 26834  00AB82  0E00               	movlw	high display_prepare@temp
 26835  00AB84  20F4               	addwfc	prodh,w,c
 26836  00AB86  6EDA               	movwf	fsr2h,c
 26837  00AB88  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26838  00AB8A  6FC6               	movwf	??_display_prepare& (0+255),b
 26839  00AB8C  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26840  00AB8E  0E0B               	movlw	11
 26841  00AB90  27C6               	addwf	??_display_prepare& (0+255),f,b
 26842  00AB92  0E00               	movlw	0
 26843  00AB94  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26844  00AB96  0E80               	movlw	low (_display_content+60)
 26845  00AB98  25C6               	addwf	??_display_prepare& (0+255),w,b
 26846  00AB9A  6EE1               	movwf	fsr1l,c
 26847  00AB9C  0E02               	movlw	high (_display_content+60)
 26848  00AB9E  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26849  00ABA0  6EE2               	movwf	fsr1h,c
 26850  00ABA2  CFDF FFE7          	movff	indf2,indf1
 26851                           
 26852                           ; BSR set to: 0
 26853  00ABA6  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26854  00ABA8                     l1468:
 26855                           
 26856                           ; BSR set to: 0
 26857                           
 26858                           ; BSR set to: 0
 26859  00ABA8  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26860  00ABAA  0D01               	mullw	1
 26861  00ABAC  0EC8               	movlw	low display_prepare@temp
 26862  00ABAE  24F3               	addwf	prodl,w,c
 26863  00ABB0  6ED9               	movwf	fsr2l,c
 26864  00ABB2  0E00               	movlw	high display_prepare@temp
 26865  00ABB4  20F4               	addwfc	prodh,w,c
 26866  00ABB6  6EDA               	movwf	fsr2h,c
 26867  00ABB8  50DF               	movf	indf2,w,c
 26868  00ABBA  A4D8               	btfss	status,2,c
 26869  00ABBC  D7DD               	goto	l1469
 26870  00ABBE  D135               	goto	L89
 26871  00ABC0                     
 26872                           ; BSR set to: 0
 26873                           ;display.c: 513: memcpy(display_content, dc_zero, sizeof display_content);
 26874                           
 26875                           ; BSR set to: 0
 26876  00ABC0  0E44               	movlw	low _display_content
 26877  00ABC2  6F60               	movwf	memcpy@d1& (0+255),b
 26878  00ABC4  0E02               	movlw	high _display_content
 26879  00ABC6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26880  00ABC8  0E3E               	movlw	low _dc_zero
 26881  00ABCA  6F62               	movwf	memcpy@s1& (0+255),b
 26882  00ABCC  0E9E               	movlw	high _dc_zero
 26883  00ABCE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26884  00ABD0  0E00               	movlw	0
 26885  00ABD2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26886  00ABD4  0E50               	movlw	80
 26887  00ABD6  6F64               	movwf	memcpy@n& (0+255),b
 26888  00ABD8  EC71  F0A4         	call	_memcpy	;wreg free
 26889                           
 26890                           ;display.c: 516: _display_itoa_long(_display_position_in_degrees(), 2, temp);
 26891  00ABDC  ECE3  F0A8         	call	__display_position_in_degrees	;wreg free
 26892  00ABE0  C060  F0B7         	movff	?__display_position_in_degrees,__display_itoa_long@value
 26893  00ABE4  C061  F0B8         	movff	?__display_position_in_degrees+1,__display_itoa_long@value+1
 26894  00ABE8  C062  F0B9         	movff	?__display_position_in_degrees+2,__display_itoa_long@value+2
 26895  00ABEC  C063  F0BA         	movff	?__display_position_in_degrees+3,__display_itoa_long@value+3
 26896  00ABF0  0E02               	movlw	2
 26897  00ABF2  0100               	movlb	0	; () banked
 26898  00ABF4  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 26899  00ABF6  0EC8               	movlw	low display_prepare@temp
 26900  00ABF8  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 26901  00ABFA  0E00               	movlw	high display_prepare@temp
 26902  00ABFC  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26903  00ABFE  ECED  F087         	call	__display_itoa_long	;wreg free
 26904                           
 26905                           ;display.c: 517: for(cntr=0; temp[cntr]; ++cntr)
 26906  00AC02  0E00               	movlw	0
 26907  00AC04  0100               	movlb	0	; () banked
 26908  00AC06  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26909  00AC08  D018               	goto	l1472
 26910  00AC0A                     
 26911                           ; BSR set to: 0
 26912                           ;display.c: 518: {;display.c: 519: display_content[1][13+cntr] = temp[cntr];
 26913                           
 26914                           ; BSR set to: 0
 26915  00AC0A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26916  00AC0C  0D01               	mullw	1
 26917  00AC0E  0EC8               	movlw	low display_prepare@temp
 26918  00AC10  24F3               	addwf	prodl,w,c
 26919  00AC12  6ED9               	movwf	fsr2l,c
 26920  00AC14  0E00               	movlw	high display_prepare@temp
 26921  00AC16  20F4               	addwfc	prodh,w,c
 26922  00AC18  6EDA               	movwf	fsr2h,c
 26923  00AC1A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26924  00AC1C  6FC6               	movwf	??_display_prepare& (0+255),b
 26925  00AC1E  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26926  00AC20  0E0D               	movlw	13
 26927  00AC22  27C6               	addwf	??_display_prepare& (0+255),f,b
 26928  00AC24  0E00               	movlw	0
 26929  00AC26  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26930  00AC28  0E58               	movlw	low (_display_content+20)
 26931  00AC2A  25C6               	addwf	??_display_prepare& (0+255),w,b
 26932  00AC2C  6EE1               	movwf	fsr1l,c
 26933  00AC2E  0E02               	movlw	high (_display_content+20)
 26934  00AC30  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26935  00AC32  6EE2               	movwf	fsr1h,c
 26936  00AC34  CFDF FFE7          	movff	indf2,indf1
 26937                           
 26938                           ; BSR set to: 0
 26939  00AC38  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26940  00AC3A                     l1472:
 26941                           
 26942                           ; BSR set to: 0
 26943                           
 26944                           ; BSR set to: 0
 26945  00AC3A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26946  00AC3C  0D01               	mullw	1
 26947  00AC3E  0EC8               	movlw	low display_prepare@temp
 26948  00AC40  24F3               	addwf	prodl,w,c
 26949  00AC42  6ED9               	movwf	fsr2l,c
 26950  00AC44  0E00               	movlw	high display_prepare@temp
 26951  00AC46  20F4               	addwfc	prodh,w,c
 26952  00AC48  6EDA               	movwf	fsr2h,c
 26953  00AC4A  50DF               	movf	indf2,w,c
 26954  00AC4C  A4D8               	btfss	status,2,c
 26955  00AC4E  D7DD               	goto	l1473
 26956                           
 26957                           ; BSR set to: 0
 26958                           ;display.c: 520: };display.c: 521: display_content[1][13+cntr] = 0x01;
 26959                           
 26960                           ; BSR set to: 0
 26961  00AC50  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26962  00AC52  6FC6               	movwf	??_display_prepare& (0+255),b
 26963  00AC54  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26964  00AC56  0E0D               	movlw	13
 26965  00AC58  27C6               	addwf	??_display_prepare& (0+255),f,b
 26966  00AC5A  0E00               	movlw	0
 26967  00AC5C  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26968  00AC5E  0E58               	movlw	low (_display_content+20)
 26969  00AC60  25C6               	addwf	??_display_prepare& (0+255),w,b
 26970  00AC62  6ED9               	movwf	fsr2l,c
 26971  00AC64  0E02               	movlw	high (_display_content+20)
 26972  00AC66  D6A1               	goto	L36
 26973  00AC68                     
 26974                           ; BSR set to: 0
 26975                           ;display.c: 526: memcpy(display_content, dc_manual, sizeof display_content);
 26976                           
 26977                           ; BSR set to: 0
 26978  00AC68  0E44               	movlw	low _display_content
 26979  00AC6A  6F60               	movwf	memcpy@d1& (0+255),b
 26980  00AC6C  0E02               	movlw	high _display_content
 26981  00AC6E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26982  00AC70  0EEE               	movlw	low _dc_manual
 26983  00AC72  6F62               	movwf	memcpy@s1& (0+255),b
 26984  00AC74  0E9D               	movlw	high _dc_manual
 26985  00AC76  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26986  00AC78  0E00               	movlw	0
 26987  00AC7A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26988  00AC7C  0E50               	movlw	80
 26989  00AC7E  6F64               	movwf	memcpy@n& (0+255),b
 26990  00AC80  EC71  F0A4         	call	_memcpy	;wreg free
 26991                           
 26992                           ;display.c: 527: switch(os.displayState)
 26993  00AC84  D044               	goto	l1476
 26994  00AC86                     
 26995                           ;display.c: 530: display_content[2][6] = 'W';
 26996  00AC86  0E57               	movlw	87
 26997  00AC88  0102               	movlb	2	; () banked
 26998  00AC8A  6F72               	movwf	(_display_content+46)& (0+255),b
 26999                           
 27000                           ;display.c: 531: display_content[2][7] = ' ';
 27001  00AC8C  0E20               	movlw	32
 27002  00AC8E  6F73               	movwf	(_display_content+47)& (0+255),b
 27003                           
 27004                           ;display.c: 532: break;
 27005  00AC90  D049               	goto	l1478
 27006  00AC92                     
 27007                           ;display.c: 534: memcpy(display_content[2], "        ", 8);
 27008                           
 27009                           ; BSR set to: 2
 27010  00AC92  0E6C               	movlw	low (_display_content+40)
 27011  00AC94  0100               	movlb	0	; () banked
 27012  00AC96  6F60               	movwf	memcpy@d1& (0+255),b
 27013  00AC98  0E02               	movlw	high (_display_content+40)
 27014  00AC9A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27015  00AC9C  0E29               	movlw	low STR_1
 27016  00AC9E  6F62               	movwf	memcpy@s1& (0+255),b
 27017  00ACA0  0EA3               	movlw	high STR_1
 27018  00ACA2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27019  00ACA4  0E00               	movlw	0
 27020  00ACA6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27021  00ACA8  0E08               	movlw	8
 27022  00ACAA  6F64               	movwf	memcpy@n& (0+255),b
 27023  00ACAC  EC71  F0A4         	call	_memcpy	;wreg free
 27024                           
 27025                           ;display.c: 535: memcpy(display_content[3], "Cancel", 6);
 27026  00ACB0  0E80               	movlw	low (_display_content+60)
 27027  00ACB2  0100               	movlb	0	; () banked
 27028  00ACB4  6F60               	movwf	memcpy@d1& (0+255),b
 27029  00ACB6  0E02               	movlw	high (_display_content+60)
 27030  00ACB8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27031  00ACBA  0E32               	movlw	low STR_2
 27032  00ACBC  6F62               	movwf	memcpy@s1& (0+255),b
 27033  00ACBE  0EA3               	movlw	high STR_2
 27034  00ACC0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27035  00ACC2  0E00               	movlw	0
 27036  00ACC4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27037  00ACC6  0E06               	movlw	6
 27038  00ACC8  6F64               	movwf	memcpy@n& (0+255),b
 27039  00ACCA  EC71  F0A4         	call	_memcpy	;wreg free
 27040                           
 27041                           ;display.c: 536: break;
 27042  00ACCE  D02A               	goto	l1478
 27043  00ACD0                     
 27044                           ;display.c: 538: memcpy(&display_content[2][0], "        ", 8);
 27045  00ACD0  0E6C               	movlw	low (_display_content+40)
 27046  00ACD2  0100               	movlb	0	; () banked
 27047  00ACD4  6F60               	movwf	memcpy@d1& (0+255),b
 27048  00ACD6  0E02               	movlw	high (_display_content+40)
 27049  00ACD8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27050  00ACDA  0E29               	movlw	low STR_1
 27051  00ACDC  6F62               	movwf	memcpy@s1& (0+255),b
 27052  00ACDE  0EA3               	movlw	high STR_1
 27053  00ACE0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27054  00ACE2  0E00               	movlw	0
 27055  00ACE4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27056  00ACE6  0E08               	movlw	8
 27057  00ACE8  6F64               	movwf	memcpy@n& (0+255),b
 27058  00ACEA  EC71  F0A4         	call	_memcpy	;wreg free
 27059                           
 27060                           ;display.c: 539: memcpy(&display_content[3][0], "Stop ", 5);
 27061  00ACEE  0E80               	movlw	low (_display_content+60)
 27062  00ACF0  0100               	movlb	0	; () banked
 27063  00ACF2  6F60               	movwf	memcpy@d1& (0+255),b
 27064  00ACF4  0E02               	movlw	high (_display_content+60)
 27065  00ACF6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27066  00ACF8  0E39               	movlw	low STR_6
 27067  00ACFA  6F62               	movwf	memcpy@s1& (0+255),b
 27068  00ACFC  0EA3               	movlw	high STR_6
 27069  00ACFE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27070  00AD00  0E00               	movlw	0
 27071  00AD02  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27072  00AD04  0E05               	movlw	5
 27073  00AD06  6F64               	movwf	memcpy@n& (0+255),b
 27074  00AD08  EC71  F0A4         	call	_memcpy	;wreg free
 27075                           
 27076                           ;display.c: 541: }
 27077                           
 27078                           ;display.c: 540: break;
 27079  00AD0C  D00B               	goto	l1478
 27080  00AD0E                     l1476:
 27081  00AD0E  0101               	movlb	1	; () banked
 27082  00AD10  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 27083                           
 27084                           ; Switch size 1, requested type "space"
 27085                           ; Number of cases is 3, Range of values is 130 to 132
 27086                           ; switch strategies available:
 27087                           ; Name         Instructions Cycles
 27088                           ; simple_byte           10     6 (average)
 27089                           ;	Chosen strategy is simple_byte
 27090  00AD12  0A82               	xorlw	130	; case 130
 27091  00AD14  B4D8               	btfsc	status,2,c
 27092  00AD16  D7BD               	goto	l1479
 27093  00AD18  0A01               	xorlw	1	; case 131
 27094  00AD1A  B4D8               	btfsc	status,2,c
 27095  00AD1C  D7B4               	goto	l1477
 27096  00AD1E  0A07               	xorlw	7	; case 132
 27097  00AD20  B4D8               	btfsc	status,2,c
 27098  00AD22  D7D6               	goto	l1480
 27099  00AD24                     l1478:
 27100                           
 27101                           ;display.c: 544: _display_itoa_long(_display_position_in_degrees(), 2, temp);
 27102                           
 27103                           ; BSR set to: 1
 27104  00AD24  ECE3  F0A8         	call	__display_position_in_degrees	;wreg free
 27105  00AD28  C060  F0B7         	movff	?__display_position_in_degrees,__display_itoa_long@value
 27106  00AD2C  C061  F0B8         	movff	?__display_position_in_degrees+1,__display_itoa_long@value+1
 27107  00AD30  C062  F0B9         	movff	?__display_position_in_degrees+2,__display_itoa_long@value+2
 27108  00AD34  C063  F0BA         	movff	?__display_position_in_degrees+3,__display_itoa_long@value+3
 27109  00AD38  0E02               	movlw	2
 27110  00AD3A  0100               	movlb	0	; () banked
 27111  00AD3C  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 27112  00AD3E  0EC8               	movlw	low display_prepare@temp
 27113  00AD40  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 27114  00AD42  0E00               	movlw	high display_prepare@temp
 27115  00AD44  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 27116  00AD46  ECED  F087         	call	__display_itoa_long	;wreg free
 27117                           
 27118                           ;display.c: 545: space = 7-strlen(temp);
 27119  00AD4A  0EC8               	movlw	low display_prepare@temp
 27120  00AD4C  0100               	movlb	0	; () banked
 27121  00AD4E  6F60               	movwf	strlen@s& (0+255),b
 27122  00AD50  0E00               	movlw	high display_prepare@temp
 27123  00AD52  6F61               	movwf	(strlen@s+1)& (0+255),b
 27124  00AD54  EC2A  F0AB         	call	_strlen	;wreg free
 27125  00AD58  0100               	movlb	0	; () banked
 27126  00AD5A  5160               	movf	?_strlen& (0+255),w,b
 27127  00AD5C  0800               	sublw	0
 27128  00AD5E  0F07               	addlw	7
 27129  00AD60  6FD2               	movwf	display_prepare@space& (0+255),b
 27130                           
 27131                           ; BSR set to: 0
 27132                           ;display.c: 546: for(cntr=0; temp[cntr]; ++cntr)
 27133  00AD62  0E00               	movlw	0
 27134  00AD64  6FD3               	movwf	display_prepare@cntr& (0+255),b
 27135  00AD66  D01C               	goto	l1481
 27136  00AD68                     
 27137                           ; BSR set to: 0
 27138                           ;display.c: 547: {;display.c: 548: display_content[1][12+space+cntr] = temp[cntr];
 27139                           
 27140                           ; BSR set to: 0
 27141  00AD68  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27142  00AD6A  0D01               	mullw	1
 27143  00AD6C  0EC8               	movlw	low display_prepare@temp
 27144  00AD6E  24F3               	addwf	prodl,w,c
 27145  00AD70  6ED9               	movwf	fsr2l,c
 27146  00AD72  0E00               	movlw	high display_prepare@temp
 27147  00AD74  20F4               	addwfc	prodh,w,c
 27148  00AD76  6EDA               	movwf	fsr2h,c
 27149  00AD78  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27150  00AD7A  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 27151  00AD7E  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27152  00AD80  27C6               	addwf	??_display_prepare& (0+255),f,b
 27153  00AD82  0E00               	movlw	0
 27154  00AD84  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27155  00AD86  0E0C               	movlw	12
 27156  00AD88  27C6               	addwf	??_display_prepare& (0+255),f,b
 27157  00AD8A  0E00               	movlw	0
 27158  00AD8C  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27159  00AD8E  0E58               	movlw	low (_display_content+20)
 27160  00AD90  25C6               	addwf	??_display_prepare& (0+255),w,b
 27161  00AD92  6EE1               	movwf	fsr1l,c
 27162  00AD94  0E02               	movlw	high (_display_content+20)
 27163  00AD96  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27164  00AD98  6EE2               	movwf	fsr1h,c
 27165  00AD9A  CFDF FFE7          	movff	indf2,indf1
 27166                           
 27167                           ; BSR set to: 0
 27168  00AD9E  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 27169  00ADA0                     l1481:
 27170                           
 27171                           ; BSR set to: 0
 27172                           
 27173                           ; BSR set to: 0
 27174  00ADA0  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27175  00ADA2  0D01               	mullw	1
 27176  00ADA4  0EC8               	movlw	low display_prepare@temp
 27177  00ADA6  24F3               	addwf	prodl,w,c
 27178  00ADA8  6ED9               	movwf	fsr2l,c
 27179  00ADAA  0E00               	movlw	high display_prepare@temp
 27180  00ADAC  20F4               	addwfc	prodh,w,c
 27181  00ADAE  6EDA               	movwf	fsr2h,c
 27182  00ADB0  50DF               	movf	indf2,w,c
 27183  00ADB2  A4D8               	btfss	status,2,c
 27184  00ADB4  D7D9               	goto	l1482
 27185                           
 27186                           ; BSR set to: 0
 27187                           ;display.c: 549: };display.c: 552: _display_itoa(motor_speed_from_index(os.manual_speed)
      +                          , 2, temp);
 27188                           
 27189                           ; BSR set to: 0
 27190  00ADB6  C188  F09D         	movff	_os+36,motor_speed_from_index@speed_index	;volatile
 27191  00ADBA  C189  F09E         	movff	_os+37,motor_speed_from_index@speed_index+1	;volatile
 27192  00ADBE  EC33  F0AF         	call	_motor_speed_from_index	;wreg free
 27193  00ADC2  C09D  F09F         	movff	?_motor_speed_from_index,__display_itoa@value
 27194  00ADC6  C09E  F0A0         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 27195  00ADCA  0E02               	movlw	2
 27196  00ADCC  0100               	movlb	0	; () banked
 27197  00ADCE  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 27198  00ADD0  0EC8               	movlw	low display_prepare@temp
 27199  00ADD2  6FA2               	movwf	__display_itoa@text& (0+255),b
 27200  00ADD4  0E00               	movlw	high display_prepare@temp
 27201  00ADD6  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 27202  00ADD8  EC4A  F072         	call	__display_itoa	;wreg free
 27203                           
 27204                           ;display.c: 553: for(cntr=0; temp[cntr]; ++cntr)
 27205  00ADDC  0E00               	movlw	0
 27206  00ADDE  0100               	movlb	0	; () banked
 27207  00ADE0  6FD3               	movwf	display_prepare@cntr& (0+255),b
 27208  00ADE2  D018               	goto	l1484
 27209  00ADE4                     
 27210                           ; BSR set to: 0
 27211                           ;display.c: 554: {;display.c: 555: display_content[3][11+cntr] = temp[cntr];
 27212                           
 27213                           ; BSR set to: 0
 27214  00ADE4  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27215  00ADE6  0D01               	mullw	1
 27216  00ADE8  0EC8               	movlw	low display_prepare@temp
 27217  00ADEA  24F3               	addwf	prodl,w,c
 27218  00ADEC  6ED9               	movwf	fsr2l,c
 27219  00ADEE  0E00               	movlw	high display_prepare@temp
 27220  00ADF0  20F4               	addwfc	prodh,w,c
 27221  00ADF2  6EDA               	movwf	fsr2h,c
 27222  00ADF4  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27223  00ADF6  6FC6               	movwf	??_display_prepare& (0+255),b
 27224  00ADF8  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27225  00ADFA  0E0B               	movlw	11
 27226  00ADFC  27C6               	addwf	??_display_prepare& (0+255),f,b
 27227  00ADFE  0E00               	movlw	0
 27228  00AE00  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27229  00AE02  0E80               	movlw	low (_display_content+60)
 27230  00AE04  25C6               	addwf	??_display_prepare& (0+255),w,b
 27231  00AE06  6EE1               	movwf	fsr1l,c
 27232  00AE08  0E02               	movlw	high (_display_content+60)
 27233  00AE0A  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27234  00AE0C  6EE2               	movwf	fsr1h,c
 27235  00AE0E  CFDF FFE7          	movff	indf2,indf1
 27236                           
 27237                           ; BSR set to: 0
 27238  00AE12  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 27239  00AE14                     l1484:
 27240                           
 27241                           ; BSR set to: 0
 27242                           
 27243                           ; BSR set to: 0
 27244  00AE14  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27245  00AE16  0D01               	mullw	1
 27246  00AE18  0EC8               	movlw	low display_prepare@temp
 27247  00AE1A  24F3               	addwf	prodl,w,c
 27248  00AE1C  6ED9               	movwf	fsr2l,c
 27249  00AE1E  0E00               	movlw	high display_prepare@temp
 27250  00AE20  20F4               	addwfc	prodh,w,c
 27251  00AE22  6EDA               	movwf	fsr2h,c
 27252  00AE24  50DF               	movf	indf2,w,c
 27253  00AE26  A4D8               	btfss	status,2,c
 27254  00AE28  D7DD               	goto	l1485
 27255  00AE2A                     L89:
 27256                           
 27257                           ; BSR set to: 0
 27258                           ;display.c: 556: };display.c: 557: display_content[3][11+cntr] = 0x01;
 27259                           
 27260                           ; BSR set to: 0
 27261  00AE2A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27262  00AE2C  6FC6               	movwf	??_display_prepare& (0+255),b
 27263  00AE2E  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27264  00AE30  0E0B               	movlw	11
 27265  00AE32  27C6               	addwf	??_display_prepare& (0+255),f,b
 27266  00AE34  0E00               	movlw	0
 27267  00AE36  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27268  00AE38  0E80               	movlw	low (_display_content+60)
 27269  00AE3A  25C6               	addwf	??_display_prepare& (0+255),w,b
 27270  00AE3C  6ED9               	movwf	fsr2l,c
 27271  00AE3E  0E02               	movlw	high (_display_content+60)
 27272  00AE40  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27273  00AE42  6EDA               	movwf	fsr2h,c
 27274  00AE44  0E01               	movlw	1
 27275  00AE46  6EDF               	movwf	indf2,c
 27276                           
 27277                           ;display.c: 558: display_content[3][12+cntr] = '/';
 27278  00AE48  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27279  00AE4A  6FC6               	movwf	??_display_prepare& (0+255),b
 27280  00AE4C  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27281  00AE4E  0E0C               	movlw	12
 27282  00AE50  27C6               	addwf	??_display_prepare& (0+255),f,b
 27283  00AE52  0E00               	movlw	0
 27284  00AE54  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27285  00AE56  0E80               	movlw	low (_display_content+60)
 27286  00AE58  25C6               	addwf	??_display_prepare& (0+255),w,b
 27287  00AE5A  6ED9               	movwf	fsr2l,c
 27288  00AE5C  0E02               	movlw	high (_display_content+60)
 27289  00AE5E  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27290  00AE60  6EDA               	movwf	fsr2h,c
 27291  00AE62  0E2F               	movlw	47
 27292  00AE64  6EDF               	movwf	indf2,c
 27293                           
 27294                           ;display.c: 559: display_content[3][13+cntr] = 's';
 27295  00AE66  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27296  00AE68  6FC6               	movwf	??_display_prepare& (0+255),b
 27297  00AE6A  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27298  00AE6C  0E0D               	movlw	13
 27299  00AE6E  27C6               	addwf	??_display_prepare& (0+255),f,b
 27300  00AE70  0E00               	movlw	0
 27301  00AE72  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27302  00AE74  0E80               	movlw	low (_display_content+60)
 27303  00AE76  25C6               	addwf	??_display_prepare& (0+255),w,b
 27304  00AE78  6ED9               	movwf	fsr2l,c
 27305  00AE7A  0E02               	movlw	high (_display_content+60)
 27306  00AE7C  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27307  00AE7E  6EDA               	movwf	fsr2h,c
 27308  00AE80  0E73               	movlw	115
 27309  00AE82                     L27:
 27310  00AE82  6EDF               	movwf	indf2,c
 27311                           
 27312                           ;display.c: 560: break;
 27313  00AE84  D095               	goto	l1404
 27314  00AE86                     
 27315                           ; BSR set to: 0
 27316                           ;display.c: 563: _display_clear();
 27317                           
 27318                           ; BSR set to: 0
 27319  00AE86  ECF5  F0A9         	call	__display_clear	;wreg free
 27320                           
 27321                           ;display.c: 564: _display_itoa((int16_t) (os.encoder1Count), 0, display_content[0]);
 27322  00AE8A  0101               	movlb	1	; () banked
 27323  00AE8C  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 27324  00AE8E  0100               	movlb	0	; () banked
 27325  00AE90  6F9F               	movwf	__display_itoa@value& (0+255),b
 27326  00AE92  6BA0               	clrf	(__display_itoa@value+1)& (0+255),b
 27327  00AE94  BF9F               	btfsc	__display_itoa@value& (0+255),7,b
 27328  00AE96  07A0               	decf	(__display_itoa@value+1)& (0+255),f,b
 27329  00AE98  0E00               	movlw	0
 27330  00AE9A  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 27331  00AE9C  0E44               	movlw	low _display_content
 27332  00AE9E  6FA2               	movwf	__display_itoa@text& (0+255),b
 27333  00AEA0  0E02               	movlw	high _display_content
 27334  00AEA2  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 27335  00AEA4  EC4A  F072         	call	__display_itoa	;wreg free
 27336                           
 27337                           ;display.c: 565: if(PORTEbits.RE2)
 27338  00AEA8  A484               	btfss	3972,2,c	;volatile
 27339  00AEAA  D002               	goto	l1488
 27340                           
 27341                           ;display.c: 566: display_content[0][8] = 'H';
 27342  00AEAC  0E48               	movlw	72
 27343  00AEAE  D001               	goto	L31
 27344  00AEB0                     l1488:
 27345                           
 27346                           ;display.c: 567: else;display.c: 568: display_content[0][8] = 'L';
 27347                           
 27348                           ; BSR set to: 2
 27349  00AEB0  0E4C               	movlw	76
 27350  00AEB2                     L31:
 27351  00AEB2  0102               	movlb	2	; () banked
 27352  00AEB4  6F4C               	movwf	(_display_content+8)& (0+255),b
 27353                           
 27354                           ; BSR set to: 2
 27355                           ;display.c: 569: if(PORTEbits.RE0)
 27356                           
 27357                           ; BSR set to: 2
 27358  00AEB6  A084               	btfss	3972,0,c	;volatile
 27359  00AEB8  D002               	goto	l1490
 27360                           
 27361                           ; BSR set to: 2
 27362                           ;display.c: 570: display_content[0][9] = 'H';
 27363  00AEBA  0E48               	movlw	72
 27364  00AEBC  D001               	goto	L32
 27365  00AEBE                     l1490:
 27366                           
 27367                           ; BSR set to: 2
 27368                           ;display.c: 571: else;display.c: 572: display_content[0][9] = 'L';
 27369                           
 27370                           ; BSR set to: 2
 27371  00AEBE  0E4C               	movlw	76
 27372  00AEC0                     L32:
 27373  00AEC0  6F4D               	movwf	(_display_content+9)& (0+255),b
 27374                           
 27375                           ; BSR set to: 2
 27376                           ;display.c: 573: _display_itoa((int16_t) (os.button1), 0, display_content[1]);
 27377                           
 27378                           ; BSR set to: 2
 27379  00AEC2  0101               	movlb	1	; () banked
 27380  00AEC4  5168               	movf	(_os+4)& (0+255),w,b	;volatile
 27381  00AEC6  0100               	movlb	0	; () banked
 27382  00AEC8  6F9F               	movwf	__display_itoa@value& (0+255),b
 27383  00AECA  6BA0               	clrf	(__display_itoa@value+1)& (0+255),b
 27384  00AECC  BF9F               	btfsc	__display_itoa@value& (0+255),7,b
 27385  00AECE  07A0               	decf	(__display_itoa@value+1)& (0+255),f,b
 27386  00AED0  0E00               	movlw	0
 27387  00AED2  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 27388  00AED4  0E58               	movlw	low (_display_content+20)
 27389  00AED6  6FA2               	movwf	__display_itoa@text& (0+255),b
 27390  00AED8  0E02               	movlw	high (_display_content+20)
 27391  00AEDA  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 27392  00AEDC  EC4A  F072         	call	__display_itoa	;wreg free
 27393                           
 27394                           ;display.c: 574: if(PORTEbits.RE1)
 27395  00AEE0  A284               	btfss	3972,1,c	;volatile
 27396  00AEE2  D002               	goto	l1492
 27397                           
 27398                           ;display.c: 575: display_content[1][8] = 'H';
 27399  00AEE4  0E48               	movlw	72
 27400  00AEE6  D001               	goto	L33
 27401  00AEE8                     l1492:
 27402                           
 27403                           ;display.c: 576: else;display.c: 577: display_content[1][8] = 'L';
 27404                           
 27405                           ; BSR set to: 2
 27406  00AEE8  0E4C               	movlw	76
 27407  00AEEA                     L33:
 27408  00AEEA  0102               	movlb	2	; () banked
 27409  00AEEC  6F60               	movwf	(_display_content+28)& (0+255),b
 27410                           
 27411                           ; BSR set to: 2
 27412                           ;display.c: 578: _display_itoa((int16_t) (os.encoder2Count), 0, display_content[2]);
 27413                           
 27414                           ; BSR set to: 2
 27415  00AEEE  0101               	movlb	1	; () banked
 27416  00AEF0  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 27417  00AEF2  0100               	movlb	0	; () banked
 27418  00AEF4  6F9F               	movwf	__display_itoa@value& (0+255),b
 27419  00AEF6  6BA0               	clrf	(__display_itoa@value+1)& (0+255),b
 27420  00AEF8  BF9F               	btfsc	__display_itoa@value& (0+255),7,b
 27421  00AEFA  07A0               	decf	(__display_itoa@value+1)& (0+255),f,b
 27422  00AEFC  0E00               	movlw	0
 27423  00AEFE  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 27424  00AF00  0E6C               	movlw	low (_display_content+40)
 27425  00AF02  6FA2               	movwf	__display_itoa@text& (0+255),b
 27426  00AF04  0E02               	movlw	high (_display_content+40)
 27427  00AF06  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 27428  00AF08  EC4A  F072         	call	__display_itoa	;wreg free
 27429                           
 27430                           ;display.c: 579: if(PORTAbits.RA0)
 27431  00AF0C  A080               	btfss	3968,0,c	;volatile
 27432  00AF0E  D002               	goto	l1494
 27433                           
 27434                           ;display.c: 580: display_content[2][8] = 'H';
 27435  00AF10  0E48               	movlw	72
 27436  00AF12  D001               	goto	L34
 27437  00AF14                     l1494:
 27438                           
 27439                           ;display.c: 581: else;display.c: 582: display_content[2][8] = 'L';
 27440                           
 27441                           ; BSR set to: 2
 27442  00AF14  0E4C               	movlw	76
 27443  00AF16                     L34:
 27444  00AF16  0102               	movlb	2	; () banked
 27445  00AF18  6F74               	movwf	(_display_content+48)& (0+255),b
 27446                           
 27447                           ; BSR set to: 2
 27448                           ;display.c: 583: if(PORTAbits.RA2)
 27449                           
 27450                           ; BSR set to: 2
 27451  00AF1A  A480               	btfss	3968,2,c	;volatile
 27452  00AF1C  D002               	goto	l1496
 27453                           
 27454                           ; BSR set to: 2
 27455                           ;display.c: 584: display_content[2][9] = 'H';
 27456  00AF1E  0E48               	movlw	72
 27457  00AF20  D001               	goto	L35
 27458  00AF22                     l1496:
 27459                           
 27460                           ; BSR set to: 2
 27461                           ;display.c: 585: else;display.c: 586: display_content[2][9] = 'L';
 27462                           
 27463                           ; BSR set to: 2
 27464  00AF22  0E4C               	movlw	76
 27465  00AF24                     L35:
 27466  00AF24  6F75               	movwf	(_display_content+49)& (0+255),b
 27467                           
 27468                           ; BSR set to: 2
 27469                           ;display.c: 587: _display_itoa((int16_t) (os.button2), 0, display_content[3]);
 27470                           
 27471                           ; BSR set to: 2
 27472  00AF26  0101               	movlb	1	; () banked
 27473  00AF28  516A               	movf	(_os+6)& (0+255),w,b	;volatile
 27474  00AF2A  0100               	movlb	0	; () banked
 27475  00AF2C  6F9F               	movwf	__display_itoa@value& (0+255),b
 27476  00AF2E  6BA0               	clrf	(__display_itoa@value+1)& (0+255),b
 27477  00AF30  BF9F               	btfsc	__display_itoa@value& (0+255),7,b
 27478  00AF32  07A0               	decf	(__display_itoa@value+1)& (0+255),f,b
 27479  00AF34  0E00               	movlw	0
 27480  00AF36  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 27481  00AF38  0E80               	movlw	low (_display_content+60)
 27482  00AF3A  6FA2               	movwf	__display_itoa@text& (0+255),b
 27483  00AF3C  0E02               	movlw	high (_display_content+60)
 27484  00AF3E  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 27485  00AF40  EC4A  F072         	call	__display_itoa	;wreg free
 27486                           
 27487                           ;display.c: 588: if(PORTAbits.RA1)
 27488  00AF44  A280               	btfss	3968,1,c	;volatile
 27489  00AF46  D002               	goto	l1498
 27490                           
 27491                           ;display.c: 589: display_content[3][8] = 'H';
 27492  00AF48  0E48               	movlw	72
 27493  00AF4A  D001               	goto	L28
 27494  00AF4C                     l1498:
 27495                           
 27496                           ;display.c: 590: else;display.c: 591: display_content[3][8] = 'L';
 27497                           
 27498                           ; BSR set to: 2
 27499  00AF4C  0E4C               	movlw	76
 27500  00AF4E                     L28:
 27501  00AF4E  0102               	movlb	2	; () banked
 27502  00AF50  6F88               	movwf	(_display_content+68)& (0+255),b
 27503                           
 27504                           ; BSR set to: 2
 27505                           ;display.c: 593: }
 27506                           
 27507                           ; BSR set to: 2
 27508                           ;display.c: 592: break;
 27509  00AF52  D02E               	goto	l1404
 27510  00AF54                     l1395:
 27511                           
 27512                           ; BSR set to: 2
 27513  00AF54  0101               	movlb	1	; () banked
 27514  00AF56  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 27515  00AF58  0BF0               	andlw	240
 27516  00AF5A  0100               	movlb	0	; () banked
 27517  00AF5C  6FC6               	movwf	??_display_prepare& (0+255),b
 27518  00AF5E  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27519                           
 27520                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27521                           ; Switch size 1, requested type "space"
 27522                           ; Number of cases is 1, Range of values is 0 to 0
 27523                           ; switch strategies available:
 27524                           ; Name         Instructions Cycles
 27525                           ; simple_byte            4     3 (average)
 27526                           ;	Chosen strategy is simple_byte
 27527  00AF60  51C7               	movf	(??_display_prepare+1)& (0+255),w,b
 27528  00AF62  0A00               	xorlw	0	; case 0
 27529  00AF64  A4D8               	btfss	status,2,c
 27530  00AF66  D024               	goto	l1404
 27531                           
 27532                           ; BSR set to: 0
 27533                           ; Switch size 1, requested type "space"
 27534                           ; Number of cases is 10, Range of values is 0 to 240
 27535                           ; switch strategies available:
 27536                           ; Name         Instructions Cycles
 27537                           ; simple_byte           31    16 (average)
 27538                           ;	Chosen strategy is simple_byte
 27539  00AF68  51C6               	movf	??_display_prepare& (0+255),w,b
 27540  00AF6A  0A00               	xorlw	0	; case 0
 27541  00AF6C  B4D8               	btfsc	status,2,c
 27542  00AF6E  EFA4  F051         	goto	l1396
 27543  00AF72  0A10               	xorlw	16	; case 16
 27544  00AF74  B4D8               	btfsc	status,2,c
 27545  00AF76  EFD3  F051         	goto	l1405
 27546  00AF7A  0A30               	xorlw	48	; case 32
 27547  00AF7C  B4D8               	btfsc	status,2,c
 27548  00AF7E  EF25  F052         	goto	l1415
 27549  00AF82  0A10               	xorlw	16	; case 48
 27550  00AF84  B4D8               	btfsc	status,2,c
 27551  00AF86  EF49  F052         	goto	l1420
 27552  00AF8A  0A70               	xorlw	112	; case 64
 27553  00AF8C  B4D8               	btfsc	status,2,c
 27554  00AF8E  EFBA  F052         	goto	l1429
 27555  00AF92  0A10               	xorlw	16	; case 80
 27556  00AF94  B4D8               	btfsc	status,2,c
 27557  00AF96  D45A               	goto	l1444
 27558  00AF98  0A30               	xorlw	48	; case 96
 27559  00AF9A  B4D8               	btfsc	status,2,c
 27560  00AF9C  D50A               	goto	l1457
 27561  00AF9E  0A10               	xorlw	16	; case 112
 27562  00AFA0  B4D8               	btfsc	status,2,c
 27563  00AFA2  D60E               	goto	l1471
 27564  00AFA4  0AF0               	xorlw	240	; case 128
 27565  00AFA6  B4D8               	btfsc	status,2,c
 27566  00AFA8  D65F               	goto	l1475
 27567  00AFAA  0A70               	xorlw	112	; case 240
 27568  00AFAC  B4D8               	btfsc	status,2,c
 27569  00AFAE  D76B               	goto	l1487
 27570  00AFB0                     l1404:
 27571                           
 27572                           ;display.c: 595: if(!PORTDbits.RD2)
 27573  00AFB0  B483               	btfsc	3971,2,c	;volatile
 27574  00AFB2  0012               	return	
 27575                           
 27576                           ;display.c: 596: {;display.c: 597: display_content[0][0] = 'E';
 27577  00AFB4  0E45               	movlw	69
 27578  00AFB6  0102               	movlb	2	; () banked
 27579  00AFB8  6F44               	movwf	_display_content& (0+255),b
 27580                           
 27581                           ;display.c: 598: display_content[0][1] = 'R';
 27582  00AFBA  0E52               	movlw	82
 27583  00AFBC  6F45               	movwf	(_display_content+1)& (0+255),b
 27584                           
 27585                           ;display.c: 599: display_content[0][2] = 'R';
 27586  00AFBE  0E52               	movlw	82
 27587  00AFC0  6F46               	movwf	(_display_content+2)& (0+255),b
 27588                           
 27589                           ;display.c: 600: display_content[0][3] = 'O';
 27590  00AFC2  0E4F               	movlw	79
 27591  00AFC4  6F47               	movwf	(_display_content+3)& (0+255),b
 27592                           
 27593                           ;display.c: 601: display_content[0][4] = 'R';
 27594  00AFC6  0E52               	movlw	82
 27595  00AFC8  6F48               	movwf	(_display_content+4)& (0+255),b
 27596  00AFCA  0012               	return	
 27597  00AFCC                     __end_of_display_prepare:
 27598                           	opt stack 0
 27599                           tblptru	equ	0xFF8
 27600                           tblptrh	equ	0xFF7
 27601                           tblptrl	equ	0xFF6
 27602                           tablat	equ	0xFF5
 27603                           prodh	equ	0xFF4
 27604                           prodl	equ	0xFF3
 27605                           intcon	equ	0xFF2
 27606                           postinc0	equ	0xFEE
 27607                           wreg	equ	0xFE8
 27608                           indf1	equ	0xFE7
 27609                           postinc1	equ	0xFE6
 27610                           postdec1	equ	0xFE5
 27611                           plusw1	equ	0xFE3
 27612                           fsr1h	equ	0xFE2
 27613                           fsr1l	equ	0xFE1
 27614                           indf2	equ	0xFDF
 27615                           postinc2	equ	0xFDE
 27616                           postdec2	equ	0xFDD
 27617                           plusw2	equ	0xFDB
 27618                           fsr2h	equ	0xFDA
 27619                           fsr2l	equ	0xFD9
 27620                           status	equ	0xFD8
 27621                           
 27622 ;; *************** function _motor_speed_from_index *****************
 27623 ;; Defined at:
 27624 ;;		line 603 in file "motor.c"
 27625 ;; Parameters:    Size  Location     Type
 27626 ;;  speed_index     2   61[BANK0 ] unsigned int 
 27627 ;; Auto vars:     Size  Location     Type
 27628 ;;		None
 27629 ;; Return value:  Size  Location     Type
 27630 ;;                  2   61[BANK0 ] unsigned int 
 27631 ;; Registers used:
 27632 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27633 ;; Tracked objects:
 27634 ;;		On entry : 0/0
 27635 ;;		On exit  : 0/0
 27636 ;;		Unchanged: 0/0
 27637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27638 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27641 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27642 ;;Total ram usage:        2 bytes
 27643 ;; Hardware stack levels used:    1
 27644 ;; Hardware stack levels required when called:   12
 27645 ;; This function calls:
 27646 ;;		__motor_get_speed_in_degrees
 27647 ;; This function is called by:
 27648 ;;		_display_prepare
 27649 ;; This function uses a non-reentrant model
 27650 ;;
 27651                           
 27652                           	psect	text106
 27653  015E66                     __ptext106:
 27654                           	opt stack 0
 27655  015E66                     _motor_speed_from_index:
 27656                           	opt stack 17
 27657                           
 27658                           ;motor.c: 605: return _motor_get_speed_in_degrees(speed_index);
 27659                           
 27660                           ;incstack = 0
 27661  015E66  C09D  F091         	movff	motor_speed_from_index@speed_index,__motor_get_speed_in_degrees@speed_index
 27662  015E6A  C09E  F092         	movff	motor_speed_from_index@speed_index+1,__motor_get_speed_in_degrees@speed_index+1
 27663  015E6E  ECBA  F082         	call	__motor_get_speed_in_degrees	;wreg free
 27664  015E72  C091  F09D         	movff	?__motor_get_speed_in_degrees,?_motor_speed_from_index
 27665  015E76  C092  F09E         	movff	?__motor_get_speed_in_degrees+1,?_motor_speed_from_index+1
 27666  015E7A  0012               	return	
 27667  015E7C                     __end_of_motor_speed_from_index:
 27668                           	opt stack 0
 27669                           tblptru	equ	0xFF8
 27670                           tblptrh	equ	0xFF7
 27671                           tblptrl	equ	0xFF6
 27672                           tablat	equ	0xFF5
 27673                           prodh	equ	0xFF4
 27674                           prodl	equ	0xFF3
 27675                           intcon	equ	0xFF2
 27676                           postinc0	equ	0xFEE
 27677                           wreg	equ	0xFE8
 27678                           indf1	equ	0xFE7
 27679                           postinc1	equ	0xFE6
 27680                           postdec1	equ	0xFE5
 27681                           plusw1	equ	0xFE3
 27682                           fsr1h	equ	0xFE2
 27683                           fsr1l	equ	0xFE1
 27684                           indf2	equ	0xFDF
 27685                           postinc2	equ	0xFDE
 27686                           postdec2	equ	0xFDD
 27687                           plusw2	equ	0xFDB
 27688                           fsr2h	equ	0xFDA
 27689                           fsr2l	equ	0xFD9
 27690                           status	equ	0xFD8
 27691                           
 27692 ;; *************** function __motor_get_speed_in_degrees *****************
 27693 ;; Defined at:
 27694 ;;		line 564 in file "motor.c"
 27695 ;; Parameters:    Size  Location     Type
 27696 ;;  speed_index     2   49[BANK0 ] unsigned int 
 27697 ;; Auto vars:     Size  Location     Type
 27698 ;;  lookup          4   57[BANK0 ] unsigned long 
 27699 ;;  speed           4   53[BANK0 ] float 
 27700 ;; Return value:  Size  Location     Type
 27701 ;;                  2   49[BANK0 ] unsigned int 
 27702 ;; Registers used:
 27703 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27704 ;; Tracked objects:
 27705 ;;		On entry : 0/0
 27706 ;;		On exit  : 0/0
 27707 ;;		Unchanged: 0/0
 27708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27709 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27710 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27711 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27712 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27713 ;;Total ram usage:       12 bytes
 27714 ;; Hardware stack levels used:    1
 27715 ;; Hardware stack levels required when called:   11
 27716 ;; This function calls:
 27717 ;;		___fldiv
 27718 ;;		___fltol
 27719 ;;		___lmul
 27720 ;;		___xxtofl
 27721 ;; This function is called by:
 27722 ;;		_motor_speed_from_index
 27723 ;;		_motor_get_maximum_speed
 27724 ;;		_motor_get_current_speed
 27725 ;; This function uses a non-reentrant model
 27726 ;;
 27727                           
 27728                           	psect	text107
 27729  010574                     __ptext107:
 27730                           	opt stack 0
 27731  010574                     __motor_get_speed_in_degrees:
 27732                           	opt stack 17
 27733                           
 27734                           ;motor.c: 566: uint32_t lookup;;motor.c: 567: float speed;;motor.c: 569: lookup = motor_
      +                          speed_lookup[speed_index];
 27735                           
 27736                           ;incstack = 0
 27737  010574  90D8               	bcf	status,0,c
 27738  010576  0100               	movlb	0	; () banked
 27739  010578  3591               	rlcf	__motor_get_speed_in_degrees@speed_index& (0+255),w,b
 27740  01057A  6EF6               	movwf	tblptrl,c
 27741  01057C  3592               	rlcf	(__motor_get_speed_in_degrees@speed_index+1)& (0+255),w,b
 27742  01057E  6EF7               	movwf	tblptrh,c
 27743  010580  0E93               	movlw	low _motor_speed_lookup
 27744  010582  26F6               	addwf	tblptrl,f,c
 27745  010584  0E90               	movlw	high _motor_speed_lookup
 27746  010586  22F7               	addwfc	tblptrh,f,c
 27747  010588                     	if	1	;There are 3 active tblptr bytes
 27748  010588  6AF8               	clrf	tblptru,c
 27749  01058A  0E00               	movlw	low (__mediumconst shr (0+16))
 27750  01058C  22F8               	addwfc	tblptru,f,c
 27751  01058E                     	endif
 27752  01058E  0009               	tblrd		*+
 27753  010590  CFF5 F093          	movff	tablat,??__motor_get_speed_in_degrees
 27754  010594  0009               	tblrd		*+
 27755  010596  CFF5 F094          	movff	tablat,??__motor_get_speed_in_degrees+1
 27756  01059A  C093  F099         	movff	??__motor_get_speed_in_degrees,__motor_get_speed_in_degrees@lookup
 27757  01059E  C094  F09A         	movff	??__motor_get_speed_in_degrees+1,__motor_get_speed_in_degrees@lookup+1
 27758  0105A2  6B9B               	clrf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),b
 27759  0105A4  6B9C               	clrf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),b
 27760                           
 27761                           ; BSR set to: 0
 27762                           ;motor.c: 570: lookup *= 16;
 27763  0105A6  0E04               	movlw	4
 27764  0105A8                     u15755:
 27765  0105A8  90D8               	bcf	status,0,c
 27766  0105AA  3799               	rlcf	__motor_get_speed_in_degrees@lookup& (0+255),f,b
 27767  0105AC  379A               	rlcf	(__motor_get_speed_in_degrees@lookup+1)& (0+255),f,b
 27768  0105AE  379B               	rlcf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),f,b
 27769  0105B0  379C               	rlcf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),f,b
 27770  0105B2  2EE8               	decfsz	wreg,f,c
 27771  0105B4  D7F9               	goto	u15755
 27772                           
 27773                           ; BSR set to: 0
 27774                           ;motor.c: 571: lookup *= 360;
 27775  0105B6  C099  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 27776  0105BA  C09A  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 27777  0105BE  C09B  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 27778  0105C2  C09C  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 27779  0105C6  0E68               	movlw	104
 27780  0105C8  6F64               	movwf	___lmul@multiplicand& (0+255),b
 27781  0105CA  0E01               	movlw	1
 27782  0105CC  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 27783  0105CE  0E00               	movlw	0
 27784  0105D0  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 27785  0105D2  0E00               	movlw	0
 27786  0105D4  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 27787  0105D6  ECC1  F0A6         	call	___lmul	;wreg free
 27788  0105DA  C060  F099         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 27789  0105DE  C061  F09A         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 27790  0105E2  C062  F09B         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 27791  0105E6  C063  F09C         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 27792                           
 27793                           ;motor.c: 572: lookup *= 100;
 27794  0105EA  C099  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 27795  0105EE  C09A  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 27796  0105F2  C09B  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 27797  0105F6  C09C  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 27798  0105FA  0E64               	movlw	100
 27799  0105FC  0100               	movlb	0	; () banked
 27800  0105FE  6F64               	movwf	___lmul@multiplicand& (0+255),b
 27801  010600  0E00               	movlw	0
 27802  010602  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 27803  010604  0E00               	movlw	0
 27804  010606  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 27805  010608  0E00               	movlw	0
 27806  01060A  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 27807  01060C  ECC1  F0A6         	call	___lmul	;wreg free
 27808  010610  C060  F099         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 27809  010614  C061  F09A         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 27810  010618  C062  F09B         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 27811  01061C  C063  F09C         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 27812                           
 27813                           ;motor.c: 574: speed = (float) lookup;
 27814  010620  C099  F06A         	movff	__motor_get_speed_in_degrees@lookup,___xxtofl@val
 27815  010624  C09A  F06B         	movff	__motor_get_speed_in_degrees@lookup+1,___xxtofl@val+1
 27816  010628  C09B  F06C         	movff	__motor_get_speed_in_degrees@lookup+2,___xxtofl@val+2
 27817  01062C  C09C  F06D         	movff	__motor_get_speed_in_degrees@lookup+3,___xxtofl@val+3
 27818  010630  0E00               	movlw	0
 27819  010632  EC7A  F081         	call	___xxtofl
 27820  010636  C06A  F095         	movff	?___xxtofl,__motor_get_speed_in_degrees@speed
 27821  01063A  C06B  F096         	movff	?___xxtofl+1,__motor_get_speed_in_degrees@speed+1
 27822  01063E  C06C  F097         	movff	?___xxtofl+2,__motor_get_speed_in_degrees@speed+2
 27823  010642  C06D  F098         	movff	?___xxtofl+3,__motor_get_speed_in_degrees@speed+3
 27824                           
 27825                           ;motor.c: 575: speed /= config.full_circle_in_steps;
 27826  010646  C095  F078         	movff	__motor_get_speed_in_degrees@speed,___fldiv@b
 27827  01064A  C096  F079         	movff	__motor_get_speed_in_degrees@speed+1,___fldiv@b+1
 27828  01064E  C097  F07A         	movff	__motor_get_speed_in_degrees@speed+2,___fldiv@b+2
 27829  010652  C098  F07B         	movff	__motor_get_speed_in_degrees@speed+3,___fldiv@b+3
 27830  010656  C195  F06A         	movff	_config,___xxtofl@val
 27831  01065A  C196  F06B         	movff	_config+1,___xxtofl@val+1
 27832  01065E  C197  F06C         	movff	_config+2,___xxtofl@val+2
 27833  010662  C198  F06D         	movff	_config+3,___xxtofl@val+3
 27834  010666  0E00               	movlw	0
 27835  010668  EC7A  F081         	call	___xxtofl
 27836  01066C  C06A  F07C         	movff	?___xxtofl,___fldiv@a
 27837  010670  C06B  F07D         	movff	?___xxtofl+1,___fldiv@a+1
 27838  010674  C06C  F07E         	movff	?___xxtofl+2,___fldiv@a+2
 27839  010678  C06D  F07F         	movff	?___xxtofl+3,___fldiv@a+3
 27840  01067C  EC15  F06B         	call	___fldiv	;wreg free
 27841  010680  C078  F095         	movff	?___fldiv,__motor_get_speed_in_degrees@speed
 27842  010684  C079  F096         	movff	?___fldiv+1,__motor_get_speed_in_degrees@speed+1
 27843  010688  C07A  F097         	movff	?___fldiv+2,__motor_get_speed_in_degrees@speed+2
 27844  01068C  C07B  F098         	movff	?___fldiv+3,__motor_get_speed_in_degrees@speed+3
 27845                           
 27846                           ;motor.c: 578: return (uint16_t) speed;
 27847  010690  C095  F060         	movff	__motor_get_speed_in_degrees@speed,___fltol@f1
 27848  010694  C096  F061         	movff	__motor_get_speed_in_degrees@speed+1,___fltol@f1+1
 27849  010698  C097  F062         	movff	__motor_get_speed_in_degrees@speed+2,___fltol@f1+2
 27850  01069C  C098  F063         	movff	__motor_get_speed_in_degrees@speed+3,___fltol@f1+3
 27851  0106A0  EC13  F092         	call	___fltol	;wreg free
 27852  0106A4  C060  F091         	movff	?___fltol,?__motor_get_speed_in_degrees
 27853  0106A8  C061  F092         	movff	?___fltol+1,?__motor_get_speed_in_degrees+1
 27854  0106AC  0012               	return	
 27855  0106AE                     __end_of__motor_get_speed_in_degrees:
 27856                           	opt stack 0
 27857                           tblptru	equ	0xFF8
 27858                           tblptrh	equ	0xFF7
 27859                           tblptrl	equ	0xFF6
 27860                           tablat	equ	0xFF5
 27861                           prodh	equ	0xFF4
 27862                           prodl	equ	0xFF3
 27863                           intcon	equ	0xFF2
 27864                           postinc0	equ	0xFEE
 27865                           wreg	equ	0xFE8
 27866                           indf1	equ	0xFE7
 27867                           postinc1	equ	0xFE6
 27868                           postdec1	equ	0xFE5
 27869                           plusw1	equ	0xFE3
 27870                           fsr1h	equ	0xFE2
 27871                           fsr1l	equ	0xFE1
 27872                           indf2	equ	0xFDF
 27873                           postinc2	equ	0xFDE
 27874                           postdec2	equ	0xFDD
 27875                           plusw2	equ	0xFDB
 27876                           fsr2h	equ	0xFDA
 27877                           fsr2l	equ	0xFD9
 27878                           status	equ	0xFD8
 27879                           
 27880 ;; *************** function ___fldiv *****************
 27881 ;; Defined at:
 27882 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
 27883 ;; Parameters:    Size  Location     Type
 27884 ;;  b               4   24[BANK0 ] unsigned int 
 27885 ;;  a               4   28[BANK0 ] unsigned int 
 27886 ;; Auto vars:     Size  Location     Type
 27887 ;;  grs             4   43[BANK0 ] unsigned long 
 27888 ;;  rem             4   36[BANK0 ] unsigned long 
 27889 ;;  new_exp         2   41[BANK0 ] int 
 27890 ;;  aexp            1   48[BANK0 ] unsigned char 
 27891 ;;  bexp            1   47[BANK0 ] unsigned char 
 27892 ;;  sign            1   40[BANK0 ] unsigned char 
 27893 ;; Return value:  Size  Location     Type
 27894 ;;                  4   24[BANK0 ] unsigned char 
 27895 ;; Registers used:
 27896 ;;		wreg, status,2, status,0
 27897 ;; Tracked objects:
 27898 ;;		On entry : 0/0
 27899 ;;		On exit  : 0/0
 27900 ;;		Unchanged: 0/0
 27901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27902 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27903 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27904 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27905 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27906 ;;Total ram usage:       25 bytes
 27907 ;; Hardware stack levels used:    1
 27908 ;; Hardware stack levels required when called:   10
 27909 ;; This function calls:
 27910 ;;		Nothing
 27911 ;; This function is called by:
 27912 ;;		__motor_steps_from_degrees_int
 27913 ;;		_motor_calculate_position_in_degrees
 27914 ;;		__motor_get_speed_in_degrees
 27915 ;;		__step_position_from_divide_position
 27916 ;;		_motor_divide_jump_to_nearest
 27917 ;;		_motor_arc_move
 27918 ;;		__steps_from_degrees
 27919 ;;		__motor_steps_from_degrees_float
 27920 ;;		_motor_steps_from_degrees
 27921 ;; This function uses a non-reentrant model
 27922 ;;
 27923                           
 27924                           	psect	text108
 27925  00D62A                     __ptext108:
 27926                           	opt stack 0
 27927  00D62A                     ___fldiv:
 27928                           	opt stack 18
 27929                           
 27930                           ;incstack = 0
 27931  00D62A  0100               	movlb	0	; () banked
 27932  00D62C  517B               	movf	(___fldiv@b+3)& (0+255),w,b
 27933  00D62E  0B80               	andlw	128
 27934  00D630  6F88               	movwf	___fldiv@sign& (0+255),b
 27935  00D632  517B               	movf	(___fldiv@b+3)& (0+255),w,b
 27936  00D634  257B               	addwf	(___fldiv@b+3)& (0+255),w,b
 27937  00D636  6F8F               	movwf	___fldiv@bexp& (0+255),b
 27938                           
 27939                           ; BSR set to: 0
 27940  00D638  BF7A               	btfsc	(___fldiv@b+2)& (0+255),7,b
 27941                           
 27942                           ; BSR set to: 0
 27943  00D63A  818F               	bsf	___fldiv@bexp& (0+255),0,b
 27944                           
 27945                           ; BSR set to: 0
 27946                           
 27947                           ; BSR set to: 0
 27948  00D63C  518F               	movf	___fldiv@bexp& (0+255),w,b
 27949  00D63E  B4D8               	btfsc	status,2,c
 27950  00D640  D00D               	goto	l3650
 27951                           
 27952                           ; BSR set to: 0
 27953  00D642  298F               	incf	___fldiv@bexp& (0+255),w,b
 27954  00D644  A4D8               	btfss	status,2,c
 27955  00D646  D008               	goto	l3651
 27956                           
 27957                           ; BSR set to: 0
 27958  00D648  0E00               	movlw	0
 27959  00D64A  6F78               	movwf	___fldiv@b& (0+255),b
 27960  00D64C  0E00               	movlw	0
 27961  00D64E  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 27962  00D650  0E00               	movlw	0
 27963  00D652  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 27964  00D654  0E00               	movlw	0
 27965  00D656  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 27966  00D658                     l3651:
 27967                           
 27968                           ; BSR set to: 0
 27969                           
 27970                           ; BSR set to: 0
 27971  00D658  8F7A               	bsf	(___fldiv@b+2)& (0+255),7,b
 27972  00D65A  D006               	goto	L37
 27973  00D65C                     l3650:
 27974                           
 27975                           ; BSR set to: 0
 27976                           
 27977                           ; BSR set to: 0
 27978  00D65C  0E00               	movlw	0
 27979  00D65E  6F78               	movwf	___fldiv@b& (0+255),b
 27980  00D660  0E00               	movlw	0
 27981  00D662  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 27982  00D664  0E00               	movlw	0
 27983  00D666  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 27984  00D668                     L37:
 27985  00D668  0E00               	movlw	0
 27986  00D66A  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 27987                           
 27988                           ; BSR set to: 0
 27989                           
 27990                           ; BSR set to: 0
 27991  00D66C  517F               	movf	(___fldiv@a+3)& (0+255),w,b
 27992  00D66E  0B80               	andlw	128
 27993  00D670  1B88               	xorwf	___fldiv@sign& (0+255),f,b
 27994                           
 27995                           ; BSR set to: 0
 27996  00D672  517F               	movf	(___fldiv@a+3)& (0+255),w,b
 27997  00D674  257F               	addwf	(___fldiv@a+3)& (0+255),w,b
 27998  00D676  6F90               	movwf	___fldiv@aexp& (0+255),b
 27999                           
 28000                           ; BSR set to: 0
 28001  00D678  BF7E               	btfsc	(___fldiv@a+2)& (0+255),7,b
 28002                           
 28003                           ; BSR set to: 0
 28004  00D67A  8190               	bsf	___fldiv@aexp& (0+255),0,b
 28005                           
 28006                           ; BSR set to: 0
 28007                           
 28008                           ; BSR set to: 0
 28009  00D67C  5190               	movf	___fldiv@aexp& (0+255),w,b
 28010  00D67E  B4D8               	btfsc	status,2,c
 28011  00D680  D00D               	goto	l3654
 28012                           
 28013                           ; BSR set to: 0
 28014  00D682  2990               	incf	___fldiv@aexp& (0+255),w,b
 28015  00D684  A4D8               	btfss	status,2,c
 28016  00D686  D008               	goto	l3655
 28017                           
 28018                           ; BSR set to: 0
 28019  00D688  0E00               	movlw	0
 28020  00D68A  6F7C               	movwf	___fldiv@a& (0+255),b
 28021  00D68C  0E00               	movlw	0
 28022  00D68E  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 28023  00D690  0E00               	movlw	0
 28024  00D692  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 28025  00D694  0E00               	movlw	0
 28026  00D696  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 28027  00D698                     l3655:
 28028                           
 28029                           ; BSR set to: 0
 28030                           
 28031                           ; BSR set to: 0
 28032  00D698  8F7E               	bsf	(___fldiv@a+2)& (0+255),7,b
 28033  00D69A  D006               	goto	L38
 28034  00D69C                     l3654:
 28035                           
 28036                           ; BSR set to: 0
 28037                           
 28038                           ; BSR set to: 0
 28039  00D69C  0E00               	movlw	0
 28040  00D69E  6F7C               	movwf	___fldiv@a& (0+255),b
 28041  00D6A0  0E00               	movlw	0
 28042  00D6A2  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 28043  00D6A4  0E00               	movlw	0
 28044  00D6A6  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 28045  00D6A8                     L38:
 28046  00D6A8  0E00               	movlw	0
 28047  00D6AA  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 28048                           
 28049                           ; BSR set to: 0
 28050                           
 28051                           ; BSR set to: 0
 28052  00D6AC  517C               	movf	___fldiv@a& (0+255),w,b
 28053  00D6AE  117D               	iorwf	(___fldiv@a+1)& (0+255),w,b
 28054  00D6B0  117E               	iorwf	(___fldiv@a+2)& (0+255),w,b
 28055  00D6B2  117F               	iorwf	(___fldiv@a+3)& (0+255),w,b
 28056  00D6B4  A4D8               	btfss	status,2,c
 28057  00D6B6  D017               	goto	l3657
 28058                           
 28059                           ; BSR set to: 0
 28060  00D6B8  0E00               	movlw	0
 28061  00D6BA  6F78               	movwf	___fldiv@b& (0+255),b
 28062  00D6BC  0E00               	movlw	0
 28063  00D6BE  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 28064  00D6C0  0E00               	movlw	0
 28065  00D6C2  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 28066  00D6C4  0E00               	movlw	0
 28067  00D6C6  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 28068                           
 28069                           ; BSR set to: 0
 28070  00D6C8  0E80               	movlw	128
 28071  00D6CA  137A               	iorwf	(___fldiv@b+2)& (0+255),f,b
 28072  00D6CC  0E7F               	movlw	127
 28073  00D6CE  137B               	iorwf	(___fldiv@b+3)& (0+255),f,b
 28074                           
 28075                           ; BSR set to: 0
 28076  00D6D0  5188               	movf	___fldiv@sign& (0+255),w,b
 28077  00D6D2  137B               	iorwf	(___fldiv@b+3)& (0+255),f,b
 28078                           
 28079                           ; BSR set to: 0
 28080  00D6D4  C078  F078         	movff	___fldiv@b,?___fldiv
 28081  00D6D8  C079  F079         	movff	___fldiv@b+1,?___fldiv+1
 28082  00D6DC  C07A  F07A         	movff	___fldiv@b+2,?___fldiv+2
 28083  00D6E0  C07B  F07B         	movff	___fldiv@b+3,?___fldiv+3
 28084                           
 28085                           ; BSR set to: 0
 28086  00D6E4  0012               	return	
 28087  00D6E6                     l3657:
 28088                           
 28089                           ; BSR set to: 0
 28090                           
 28091                           ; BSR set to: 0
 28092  00D6E6  518F               	movf	___fldiv@bexp& (0+255),w,b
 28093  00D6E8  A4D8               	btfss	status,2,c
 28094  00D6EA  D011               	goto	l3659
 28095                           
 28096                           ; BSR set to: 0
 28097  00D6EC  0E00               	movlw	0
 28098  00D6EE  6F78               	movwf	___fldiv@b& (0+255),b
 28099  00D6F0  0E00               	movlw	0
 28100  00D6F2  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 28101  00D6F4  0E00               	movlw	0
 28102  00D6F6  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 28103  00D6F8  0E00               	movlw	0
 28104  00D6FA  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 28105                           
 28106                           ; BSR set to: 0
 28107  00D6FC  C078  F078         	movff	___fldiv@b,?___fldiv
 28108  00D700  C079  F079         	movff	___fldiv@b+1,?___fldiv+1
 28109  00D704  C07A  F07A         	movff	___fldiv@b+2,?___fldiv+2
 28110  00D708  C07B  F07B         	movff	___fldiv@b+3,?___fldiv+3
 28111                           
 28112                           ; BSR set to: 0
 28113  00D70C  0012               	return	
 28114  00D70E                     l3659:
 28115                           
 28116                           ; BSR set to: 0
 28117                           
 28118                           ; BSR set to: 0
 28119  00D70E  5190               	movf	___fldiv@aexp& (0+255),w,b
 28120  00D710  6F80               	movwf	??___fldiv& (0+255),b
 28121  00D712  6B81               	clrf	(??___fldiv+1)& (0+255),b
 28122  00D714  1F80               	comf	??___fldiv& (0+255),f,b
 28123  00D716  1F81               	comf	(??___fldiv+1)& (0+255),f,b
 28124  00D718  4B80               	infsnz	??___fldiv& (0+255),f,b
 28125  00D71A  2B81               	incf	(??___fldiv+1)& (0+255),f,b
 28126  00D71C  518F               	movf	___fldiv@bexp& (0+255),w,b
 28127  00D71E  6F82               	movwf	(??___fldiv+2)& (0+255),b
 28128  00D720  6B83               	clrf	(??___fldiv+3)& (0+255),b
 28129  00D722  5180               	movf	??___fldiv& (0+255),w,b
 28130  00D724  2782               	addwf	(??___fldiv+2)& (0+255),f,b
 28131  00D726  5181               	movf	(??___fldiv+1)& (0+255),w,b
 28132  00D728  2383               	addwfc	(??___fldiv+3)& (0+255),f,b
 28133  00D72A  0E7F               	movlw	127
 28134  00D72C  2582               	addwf	(??___fldiv+2)& (0+255),w,b
 28135  00D72E  6F89               	movwf	___fldiv@new_exp& (0+255),b
 28136  00D730  0E00               	movlw	0
 28137  00D732  2183               	addwfc	(??___fldiv+3)& (0+255),w,b
 28138  00D734  6F8A               	movwf	(___fldiv@new_exp+1)& (0+255),b
 28139                           
 28140                           ; BSR set to: 0
 28141  00D736  C078  F084         	movff	___fldiv@b,___fldiv@rem
 28142  00D73A  C079  F085         	movff	___fldiv@b+1,___fldiv@rem+1
 28143  00D73E  C07A  F086         	movff	___fldiv@b+2,___fldiv@rem+2
 28144  00D742  C07B  F087         	movff	___fldiv@b+3,___fldiv@rem+3
 28145                           
 28146                           ; BSR set to: 0
 28147  00D746  0E00               	movlw	0
 28148  00D748  6F78               	movwf	___fldiv@b& (0+255),b
 28149  00D74A  0E00               	movlw	0
 28150  00D74C  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 28151  00D74E  0E00               	movlw	0
 28152  00D750  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 28153  00D752  0E00               	movlw	0
 28154  00D754  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 28155                           
 28156                           ; BSR set to: 0
 28157  00D756  0E00               	movlw	0
 28158  00D758  6F8B               	movwf	___fldiv@grs& (0+255),b
 28159  00D75A  0E00               	movlw	0
 28160  00D75C  6F8C               	movwf	(___fldiv@grs+1)& (0+255),b
 28161  00D75E  0E00               	movlw	0
 28162  00D760  6F8D               	movwf	(___fldiv@grs+2)& (0+255),b
 28163  00D762  0E00               	movlw	0
 28164  00D764  6F8E               	movwf	(___fldiv@grs+3)& (0+255),b
 28165                           
 28166                           ; BSR set to: 0
 28167  00D766  0E00               	movlw	0
 28168  00D768  6F90               	movwf	___fldiv@aexp& (0+255),b
 28169  00D76A  D028               	goto	l3660
 28170  00D76C                     
 28171                           ; BSR set to: 0
 28172                           
 28173                           ; BSR set to: 0
 28174  00D76C  5190               	movf	___fldiv@aexp& (0+255),w,b
 28175  00D76E  B4D8               	btfsc	status,2,c
 28176  00D770  D011               	goto	l3662
 28177                           
 28178                           ; BSR set to: 0
 28179  00D772  90D8               	bcf	status,0,c
 28180  00D774  3784               	rlcf	___fldiv@rem& (0+255),f,b
 28181  00D776  3785               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 28182  00D778  3786               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 28183  00D77A  3787               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 28184  00D77C  90D8               	bcf	status,0,c
 28185  00D77E  3778               	rlcf	___fldiv@b& (0+255),f,b
 28186  00D780  3779               	rlcf	(___fldiv@b+1)& (0+255),f,b
 28187  00D782  377A               	rlcf	(___fldiv@b+2)& (0+255),f,b
 28188  00D784  377B               	rlcf	(___fldiv@b+3)& (0+255),f,b
 28189                           
 28190                           ; BSR set to: 0
 28191  00D786  BF8E               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 28192                           
 28193                           ; BSR set to: 0
 28194  00D788  8178               	bsf	___fldiv@b& (0+255),0,b
 28195                           
 28196                           ; BSR set to: 0
 28197  00D78A  90D8               	bcf	status,0,c
 28198  00D78C  378B               	rlcf	___fldiv@grs& (0+255),f,b
 28199  00D78E  378C               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 28200  00D790  378D               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 28201  00D792  378E               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 28202  00D794                     l3662:
 28203                           
 28204                           ; BSR set to: 0
 28205                           
 28206                           ; BSR set to: 0
 28207  00D794  517C               	movf	___fldiv@a& (0+255),w,b
 28208  00D796  5D84               	subwf	___fldiv@rem& (0+255),w,b
 28209  00D798  517D               	movf	(___fldiv@a+1)& (0+255),w,b
 28210  00D79A  5985               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 28211  00D79C  517E               	movf	(___fldiv@a+2)& (0+255),w,b
 28212  00D79E  5986               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 28213  00D7A0  517F               	movf	(___fldiv@a+3)& (0+255),w,b
 28214  00D7A2  5987               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 28215  00D7A4  A0D8               	btfss	status,0,c
 28216  00D7A6  D009               	goto	l3664
 28217                           
 28218                           ; BSR set to: 0
 28219  00D7A8  8D8E               	bsf	(___fldiv@grs+3)& (0+255),6,b
 28220                           
 28221                           ; BSR set to: 0
 28222  00D7AA  517C               	movf	___fldiv@a& (0+255),w,b
 28223  00D7AC  5F84               	subwf	___fldiv@rem& (0+255),f,b
 28224  00D7AE  517D               	movf	(___fldiv@a+1)& (0+255),w,b
 28225  00D7B0  5B85               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 28226  00D7B2  517E               	movf	(___fldiv@a+2)& (0+255),w,b
 28227  00D7B4  5B86               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 28228  00D7B6  517F               	movf	(___fldiv@a+3)& (0+255),w,b
 28229  00D7B8  5B87               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 28230  00D7BA                     l3664:
 28231                           
 28232                           ; BSR set to: 0
 28233                           
 28234                           ; BSR set to: 0
 28235  00D7BA  2B90               	incf	___fldiv@aexp& (0+255),f,b
 28236  00D7BC                     l3660:
 28237                           
 28238                           ; BSR set to: 0
 28239  00D7BC  0E19               	movlw	25
 28240  00D7BE  6590               	cpfsgt	___fldiv@aexp& (0+255),b
 28241  00D7C0  D7D5               	goto	l3661
 28242                           
 28243                           ; BSR set to: 0
 28244                           
 28245                           ; BSR set to: 0
 28246  00D7C2  5184               	movf	___fldiv@rem& (0+255),w,b
 28247  00D7C4  1185               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 28248  00D7C6  1186               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 28249  00D7C8  1187               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 28250  00D7CA  B4D8               	btfsc	status,2,c
 28251  00D7CC  D011               	goto	l3667
 28252                           
 28253                           ; BSR set to: 0
 28254  00D7CE  818B               	bsf	___fldiv@grs& (0+255),0,b
 28255                           
 28256                           ; BSR set to: 0
 28257  00D7D0  D00F               	goto	l3667
 28258  00D7D2                     
 28259                           ; BSR set to: 0
 28260                           
 28261                           ; BSR set to: 0
 28262  00D7D2  90D8               	bcf	status,0,c
 28263  00D7D4  3778               	rlcf	___fldiv@b& (0+255),f,b
 28264  00D7D6  3779               	rlcf	(___fldiv@b+1)& (0+255),f,b
 28265  00D7D8  377A               	rlcf	(___fldiv@b+2)& (0+255),f,b
 28266  00D7DA  377B               	rlcf	(___fldiv@b+3)& (0+255),f,b
 28267                           
 28268                           ; BSR set to: 0
 28269  00D7DC  BF8E               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 28270                           
 28271                           ; BSR set to: 0
 28272  00D7DE  8178               	bsf	___fldiv@b& (0+255),0,b
 28273                           
 28274                           ; BSR set to: 0
 28275  00D7E0  90D8               	bcf	status,0,c
 28276  00D7E2  378B               	rlcf	___fldiv@grs& (0+255),f,b
 28277  00D7E4  378C               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 28278  00D7E6  378D               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 28279  00D7E8  378E               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 28280  00D7EA  0789               	decf	___fldiv@new_exp& (0+255),f,b
 28281  00D7EC  A0D8               	btfss	status,0,c
 28282  00D7EE  078A               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 28283  00D7F0                     l3667:
 28284                           
 28285                           ; BSR set to: 0
 28286                           
 28287                           ; BSR set to: 0
 28288  00D7F0  AF7A               	btfss	(___fldiv@b+2)& (0+255),7,b
 28289  00D7F2  D7EF               	goto	l3668
 28290                           
 28291                           ; BSR set to: 0
 28292                           
 28293                           ; BSR set to: 0
 28294  00D7F4  0E00               	movlw	0
 28295  00D7F6  6F90               	movwf	___fldiv@aexp& (0+255),b
 28296                           
 28297                           ; BSR set to: 0
 28298  00D7F8  AF8E               	btfss	(___fldiv@grs+3)& (0+255),7,b
 28299  00D7FA  D016               	goto	l3674
 28300                           
 28301                           ; BSR set to: 0
 28302  00D7FC  0EFF               	movlw	255
 28303  00D7FE  158B               	andwf	___fldiv@grs& (0+255),w,b
 28304  00D800  6F80               	movwf	??___fldiv& (0+255),b
 28305  00D802  0EFF               	movlw	255
 28306  00D804  158C               	andwf	(___fldiv@grs+1)& (0+255),w,b
 28307  00D806  6F81               	movwf	(??___fldiv+1)& (0+255),b
 28308  00D808  0EFF               	movlw	255
 28309  00D80A  158D               	andwf	(___fldiv@grs+2)& (0+255),w,b
 28310  00D80C  6F82               	movwf	(??___fldiv+2)& (0+255),b
 28311  00D80E  0E7F               	movlw	127
 28312  00D810  158E               	andwf	(___fldiv@grs+3)& (0+255),w,b
 28313  00D812  6F83               	movwf	(??___fldiv+3)& (0+255),b
 28314  00D814  5180               	movf	??___fldiv& (0+255),w,b
 28315  00D816  1181               	iorwf	(??___fldiv+1)& (0+255),w,b
 28316  00D818  1182               	iorwf	(??___fldiv+2)& (0+255),w,b
 28317  00D81A  1183               	iorwf	(??___fldiv+3)& (0+255),w,b
 28318  00D81C  A4D8               	btfss	status,2,c
 28319  00D81E  D002               	goto	u13050
 28320                           
 28321                           ; BSR set to: 0
 28322                           
 28323                           ; BSR set to: 0
 28324  00D820  A178               	btfss	___fldiv@b& (0+255),0,b
 28325  00D822  D002               	goto	l3674
 28326  00D824                     u13050:
 28327                           
 28328                           ; BSR set to: 0
 28329  00D824  0E01               	movlw	1
 28330  00D826  6F90               	movwf	___fldiv@aexp& (0+255),b
 28331  00D828                     l3674:
 28332                           
 28333                           ; BSR set to: 0
 28334                           
 28335                           ; BSR set to: 0
 28336                           
 28337                           ; BSR set to: 0
 28338  00D828  5190               	movf	___fldiv@aexp& (0+255),w,b
 28339  00D82A  B4D8               	btfsc	status,2,c
 28340  00D82C  D01F               	goto	l3676
 28341                           
 28342                           ; BSR set to: 0
 28343  00D82E  0E01               	movlw	1
 28344  00D830  2778               	addwf	___fldiv@b& (0+255),f,b
 28345  00D832  0E00               	movlw	0
 28346  00D834  2379               	addwfc	(___fldiv@b+1)& (0+255),f,b
 28347  00D836  237A               	addwfc	(___fldiv@b+2)& (0+255),f,b
 28348  00D838  237B               	addwfc	(___fldiv@b+3)& (0+255),f,b
 28349                           
 28350                           ; BSR set to: 0
 28351  00D83A  A17B               	btfss	(___fldiv@b+3)& (0+255),0,b
 28352  00D83C  D017               	goto	l3676
 28353                           
 28354                           ; BSR set to: 0
 28355  00D83E  C078  F080         	movff	___fldiv@b,??___fldiv
 28356  00D842  C079  F081         	movff	___fldiv@b+1,??___fldiv+1
 28357  00D846  C07A  F082         	movff	___fldiv@b+2,??___fldiv+2
 28358  00D84A  C07B  F083         	movff	___fldiv@b+3,??___fldiv+3
 28359  00D84E  3583               	rlcf	(??___fldiv+3)& (0+255),w,b
 28360  00D850  3383               	rrcf	(??___fldiv+3)& (0+255),f,b
 28361  00D852  3382               	rrcf	(??___fldiv+2)& (0+255),f,b
 28362  00D854  3381               	rrcf	(??___fldiv+1)& (0+255),f,b
 28363  00D856  3380               	rrcf	??___fldiv& (0+255),f,b
 28364  00D858  C080  F078         	movff	??___fldiv,___fldiv@b
 28365  00D85C  C081  F079         	movff	??___fldiv+1,___fldiv@b+1
 28366  00D860  C082  F07A         	movff	??___fldiv+2,___fldiv@b+2
 28367  00D864  C083  F07B         	movff	??___fldiv+3,___fldiv@b+3
 28368                           
 28369                           ; BSR set to: 0
 28370  00D868  4B89               	infsnz	___fldiv@new_exp& (0+255),f,b
 28371  00D86A  2B8A               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 28372  00D86C                     l3676:
 28373                           
 28374                           ; BSR set to: 0
 28375                           
 28376                           ; BSR set to: 0
 28377                           
 28378                           ; BSR set to: 0
 28379  00D86C  BF8A               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 28380  00D86E  D010               	goto	l3677
 28381  00D870  518A               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 28382  00D872  E103               	bnz	u13080
 28383  00D874  2989               	incf	___fldiv@new_exp& (0+255),w,b
 28384  00D876  A0D8               	btfss	status,0,c
 28385  00D878  D00B               	goto	l3677
 28386  00D87A                     u13080:
 28387                           
 28388                           ; BSR set to: 0
 28389  00D87A  0E00               	movlw	0
 28390  00D87C  6F8A               	movwf	(___fldiv@new_exp+1)& (0+255),b
 28391  00D87E  6989               	setf	___fldiv@new_exp& (0+255),b
 28392  00D880  0E00               	movlw	0
 28393  00D882  6F78               	movwf	___fldiv@b& (0+255),b
 28394  00D884  0E00               	movlw	0
 28395  00D886  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 28396  00D888  0E00               	movlw	0
 28397  00D88A  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 28398  00D88C  0E00               	movlw	0
 28399  00D88E  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 28400  00D890                     l3677:
 28401                           
 28402                           ; BSR set to: 0
 28403                           
 28404                           ; BSR set to: 0
 28405  00D890  BF8A               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 28406  00D892  D005               	goto	u13090
 28407  00D894  518A               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 28408  00D896  E111               	bnz	l14270
 28409  00D898  0589               	decf	___fldiv@new_exp& (0+255),w,b
 28410  00D89A  B0D8               	btfsc	status,0,c
 28411  00D89C  D00E               	goto	l3678
 28412  00D89E                     u13090:
 28413                           
 28414                           ; BSR set to: 0
 28415  00D89E  0E00               	movlw	0
 28416  00D8A0  6F8A               	movwf	(___fldiv@new_exp+1)& (0+255),b
 28417  00D8A2  0E00               	movlw	0
 28418  00D8A4  6F89               	movwf	___fldiv@new_exp& (0+255),b
 28419  00D8A6  0E00               	movlw	0
 28420  00D8A8  6F78               	movwf	___fldiv@b& (0+255),b
 28421  00D8AA  0E00               	movlw	0
 28422  00D8AC  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 28423  00D8AE  0E00               	movlw	0
 28424  00D8B0  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 28425  00D8B2  0E00               	movlw	0
 28426  00D8B4  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 28427  00D8B6  0E00               	movlw	0
 28428  00D8B8  6F88               	movwf	___fldiv@sign& (0+255),b
 28429  00D8BA                     l3678:
 28430  00D8BA                     l14270:
 28431                           
 28432                           ; BSR set to: 0
 28433  00D8BA  C089  F08F         	movff	___fldiv@new_exp,___fldiv@bexp
 28434                           
 28435                           ; BSR set to: 0
 28436  00D8BE  A18F               	btfss	___fldiv@bexp& (0+255),0,b
 28437  00D8C0  D002               	goto	l3679
 28438                           
 28439                           ; BSR set to: 0
 28440  00D8C2  8F7A               	bsf	(___fldiv@b+2)& (0+255),7,b
 28441  00D8C4  D001               	goto	l3680
 28442  00D8C6                     l3679:
 28443                           
 28444                           ; BSR set to: 0
 28445                           
 28446                           ; BSR set to: 0
 28447  00D8C6  9F7A               	bcf	(___fldiv@b+2)& (0+255),7,b
 28448  00D8C8                     l3680:
 28449                           
 28450                           ; BSR set to: 0
 28451                           
 28452                           ; BSR set to: 0
 28453  00D8C8  90D8               	bcf	status,0,c
 28454  00D8CA  318F               	rrcf	___fldiv@bexp& (0+255),w,b
 28455  00D8CC  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 28456                           
 28457                           ; BSR set to: 0
 28458  00D8CE  5188               	movf	___fldiv@sign& (0+255),w,b
 28459  00D8D0  137B               	iorwf	(___fldiv@b+3)& (0+255),f,b
 28460                           
 28461                           ; BSR set to: 0
 28462  00D8D2  C078  F078         	movff	___fldiv@b,?___fldiv
 28463  00D8D6  C079  F079         	movff	___fldiv@b+1,?___fldiv+1
 28464  00D8DA  C07A  F07A         	movff	___fldiv@b+2,?___fldiv+2
 28465  00D8DE  C07B  F07B         	movff	___fldiv@b+3,?___fldiv+3
 28466  00D8E2  0012               	return	
 28467  00D8E4                     __end_of___fldiv:
 28468                           	opt stack 0
 28469                           tblptru	equ	0xFF8
 28470                           tblptrh	equ	0xFF7
 28471                           tblptrl	equ	0xFF6
 28472                           tablat	equ	0xFF5
 28473                           prodh	equ	0xFF4
 28474                           prodl	equ	0xFF3
 28475                           intcon	equ	0xFF2
 28476                           postinc0	equ	0xFEE
 28477                           wreg	equ	0xFE8
 28478                           indf1	equ	0xFE7
 28479                           postinc1	equ	0xFE6
 28480                           postdec1	equ	0xFE5
 28481                           plusw1	equ	0xFE3
 28482                           fsr1h	equ	0xFE2
 28483                           fsr1l	equ	0xFE1
 28484                           indf2	equ	0xFDF
 28485                           postinc2	equ	0xFDE
 28486                           postdec2	equ	0xFDD
 28487                           plusw2	equ	0xFDB
 28488                           fsr2h	equ	0xFDA
 28489                           fsr2l	equ	0xFD9
 28490                           status	equ	0xFD8
 28491                           
 28492 ;; *************** function __display_signed_itoa *****************
 28493 ;; Defined at:
 28494 ;;		line 121 in file "display.c"
 28495 ;; Parameters:    Size  Location     Type
 28496 ;;  value           2   47[BANK0 ] int 
 28497 ;;  text            2   49[BANK0 ] PTR unsigned char 
 28498 ;;		 -> display_prepare@temp(10), 
 28499 ;; Auto vars:     Size  Location     Type
 28500 ;;		None
 28501 ;; Return value:  Size  Location     Type
 28502 ;;                  1    wreg      void 
 28503 ;; Registers used:
 28504 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28505 ;; Tracked objects:
 28506 ;;		On entry : 0/0
 28507 ;;		On exit  : 0/0
 28508 ;;		Unchanged: 0/0
 28509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28510 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28513 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28514 ;;Total ram usage:        4 bytes
 28515 ;; Hardware stack levels used:    1
 28516 ;; Hardware stack levels required when called:   14
 28517 ;; This function calls:
 28518 ;;		__display_padded_itoa
 28519 ;; This function is called by:
 28520 ;;		_display_prepare
 28521 ;; This function uses a non-reentrant model
 28522 ;;
 28523                           
 28524                           	psect	text109
 28525  0154C4                     __ptext109:
 28526                           	opt stack 0
 28527  0154C4                     __display_signed_itoa:
 28528                           	opt stack 15
 28529                           
 28530                           ;display.c: 123: if(value<0)
 28531                           
 28532                           ; BSR set to: 0
 28533                           ;incstack = 0
 28534  0154C4  0100               	movlb	0	; () banked
 28535  0154C6  AF90               	btfss	(__display_signed_itoa@value+1)& (0+255),7,b
 28536  0154C8  D00A               	goto	l1340
 28537                           
 28538                           ; BSR set to: 0
 28539                           ;display.c: 124: {;display.c: 125: value = -value;
 28540  0154CA  6D8F               	negf	__display_signed_itoa@value& (0+255),b
 28541  0154CC  1F90               	comf	(__display_signed_itoa@value+1)& (0+255),f,b
 28542  0154CE  B0D8               	btfsc	status,0,c
 28543  0154D0  2B90               	incf	(__display_signed_itoa@value+1)& (0+255),f,b
 28544                           
 28545                           ; BSR set to: 0
 28546                           ;display.c: 126: text[0] = '-';
 28547  0154D2  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 28548  0154D6  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 28549  0154DA  0E2D               	movlw	45
 28550  0154DC  D005               	goto	L39
 28551  0154DE                     l1340:
 28552                           
 28553                           ; BSR set to: 0
 28554                           ;display.c: 128: else;display.c: 129: {;display.c: 130: text[0] = '+';
 28555                           
 28556                           ; BSR set to: 0
 28557  0154DE  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 28558  0154E2  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 28559  0154E6  0E2B               	movlw	43
 28560  0154E8                     L39:
 28561  0154E8  6EDF               	movwf	indf2,c
 28562                           
 28563                           ; BSR set to: 0
 28564                           ;display.c: 131: };display.c: 132: _display_padded_itoa(value, 0, &text[1]);
 28565                           
 28566                           ; BSR set to: 0
 28567  0154EA  C08F  F078         	movff	__display_signed_itoa@value,__display_padded_itoa@value
 28568  0154EE  C090  F079         	movff	__display_signed_itoa@value+1,__display_padded_itoa@value+1
 28569  0154F2  0E00               	movlw	0
 28570  0154F4  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 28571  0154F6  0E01               	movlw	1
 28572  0154F8  2591               	addwf	__display_signed_itoa@text& (0+255),w,b
 28573  0154FA  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 28574  0154FC  0E00               	movlw	0
 28575  0154FE  2192               	addwfc	(__display_signed_itoa@text+1)& (0+255),w,b
 28576  015500  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 28577  015502  ECC3  F090         	call	__display_padded_itoa	;wreg free
 28578  015506  0012               	return		;funcret
 28579  015508                     __end_of__display_signed_itoa:
 28580                           	opt stack 0
 28581                           tblptru	equ	0xFF8
 28582                           tblptrh	equ	0xFF7
 28583                           tblptrl	equ	0xFF6
 28584                           tablat	equ	0xFF5
 28585                           prodh	equ	0xFF4
 28586                           prodl	equ	0xFF3
 28587                           intcon	equ	0xFF2
 28588                           postinc0	equ	0xFEE
 28589                           wreg	equ	0xFE8
 28590                           indf1	equ	0xFE7
 28591                           postinc1	equ	0xFE6
 28592                           postdec1	equ	0xFE5
 28593                           plusw1	equ	0xFE3
 28594                           fsr1h	equ	0xFE2
 28595                           fsr1l	equ	0xFE1
 28596                           indf2	equ	0xFDF
 28597                           postinc2	equ	0xFDE
 28598                           postdec2	equ	0xFDD
 28599                           plusw2	equ	0xFDB
 28600                           fsr2h	equ	0xFDA
 28601                           fsr2l	equ	0xFD9
 28602                           status	equ	0xFD8
 28603                           
 28604 ;; *************** function __display_padded_itoa *****************
 28605 ;; Defined at:
 28606 ;;		line 99 in file "display.c"
 28607 ;; Parameters:    Size  Location     Type
 28608 ;;  value           2   24[BANK0 ] int 
 28609 ;;  length          1   26[BANK0 ] unsigned char 
 28610 ;;  text            2   27[BANK0 ] PTR unsigned char 
 28611 ;;		 -> display_prepare@temp(10), 
 28612 ;; Auto vars:     Size  Location     Type
 28613 ;;  tmp            10   34[BANK0 ] unsigned char [10]
 28614 ;;  padding         1   46[BANK0 ] unsigned char 
 28615 ;;  pos             1   45[BANK0 ] unsigned char 
 28616 ;;  len             1   44[BANK0 ] unsigned char 
 28617 ;; Return value:  Size  Location     Type
 28618 ;;                  1    wreg      void 
 28619 ;; Registers used:
 28620 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28621 ;; Tracked objects:
 28622 ;;		On entry : 0/0
 28623 ;;		On exit  : 0/0
 28624 ;;		Unchanged: 0/0
 28625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28626 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28627 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28628 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28629 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28630 ;;Total ram usage:       23 bytes
 28631 ;; Hardware stack levels used:    1
 28632 ;; Hardware stack levels required when called:   13
 28633 ;; This function calls:
 28634 ;;		_itoa
 28635 ;;		_strlen
 28636 ;; This function is called by:
 28637 ;;		__display_signed_itoa
 28638 ;;		_display_prepare
 28639 ;; This function uses a non-reentrant model
 28640 ;;
 28641                           
 28642                           	psect	text110
 28643  012186                     __ptext110:
 28644                           	opt stack 0
 28645  012186                     __display_padded_itoa:
 28646                           	opt stack 15
 28647                           
 28648                           ;display.c: 101: uint8_t pos;;display.c: 102: uint8_t padding;;display.c: 104: uint8_t l
      +                          en;;display.c: 105: char tmp[10];;display.c: 106: itoa(tmp, value, 10);
 28649                           
 28650                           ;incstack = 0
 28651  012186  0E82               	movlw	low __display_padded_itoa@tmp
 28652  012188  0100               	movlb	0	; () banked
 28653  01218A  6F70               	movwf	itoa@buf& (0+255),b
 28654  01218C  0E00               	movlw	high __display_padded_itoa@tmp
 28655  01218E  6F71               	movwf	(itoa@buf+1)& (0+255),b
 28656  012190  C078  F072         	movff	__display_padded_itoa@value,itoa@val
 28657  012194  C079  F073         	movff	__display_padded_itoa@value+1,itoa@val+1
 28658  012198  0E00               	movlw	0
 28659  01219A  6F75               	movwf	(itoa@base+1)& (0+255),b
 28660  01219C  0E0A               	movlw	10
 28661  01219E  6F74               	movwf	itoa@base& (0+255),b
 28662  0121A0  EC84  F0AA         	call	_itoa	;wreg free
 28663                           
 28664                           ;display.c: 107: len = strlen(tmp);
 28665  0121A4  0E82               	movlw	low __display_padded_itoa@tmp
 28666  0121A6  0100               	movlb	0	; () banked
 28667  0121A8  6F60               	movwf	strlen@s& (0+255),b
 28668  0121AA  0E00               	movlw	high __display_padded_itoa@tmp
 28669  0121AC  6F61               	movwf	(strlen@s+1)& (0+255),b
 28670  0121AE  EC2A  F0AB         	call	_strlen	;wreg free
 28671  0121B2  0100               	movlb	0	; () banked
 28672  0121B4  5160               	movf	?_strlen& (0+255),w,b
 28673  0121B6  6F8C               	movwf	__display_padded_itoa@len& (0+255),b
 28674                           
 28675                           ; BSR set to: 0
 28676                           ;display.c: 108: padding = 0;
 28677  0121B8  0E00               	movlw	0
 28678  0121BA  6F8E               	movwf	__display_padded_itoa@padding& (0+255),b
 28679                           
 28680                           ;display.c: 109: while((padding+len)<length)
 28681  0121BC  D00B               	goto	l1331
 28682  0121BE                     
 28683                           ; BSR set to: 0
 28684                           ;display.c: 110: {;display.c: 111: text[padding] = ' ';
 28685                           
 28686                           ; BSR set to: 0
 28687  0121BE  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 28688  0121C0  0D01               	mullw	1
 28689  0121C2  50F3               	movf	prodl,w,c
 28690  0121C4  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 28691  0121C6  6ED9               	movwf	fsr2l,c
 28692  0121C8  50F4               	movf	prodh,w,c
 28693  0121CA  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 28694  0121CC  6EDA               	movwf	fsr2h,c
 28695  0121CE  0E20               	movlw	32
 28696  0121D0  6EDF               	movwf	indf2,c
 28697                           
 28698                           ; BSR set to: 0
 28699                           ;display.c: 112: ++padding;
 28700  0121D2  2B8E               	incf	__display_padded_itoa@padding& (0+255),f,b
 28701  0121D4                     l1331:
 28702                           
 28703                           ; BSR set to: 0
 28704                           
 28705                           ; BSR set to: 0
 28706  0121D4  517A               	movf	__display_padded_itoa@length& (0+255),w,b
 28707  0121D6  6F7D               	movwf	??__display_padded_itoa& (0+255),b
 28708  0121D8  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 28709  0121DA  518C               	movf	__display_padded_itoa@len& (0+255),w,b
 28710  0121DC  C08E  F07F         	movff	__display_padded_itoa@padding,??__display_padded_itoa+2
 28711  0121E0  6B80               	clrf	(??__display_padded_itoa+3)& (0+255),b
 28712  0121E2  277F               	addwf	(??__display_padded_itoa+2)& (0+255),f,b
 28713  0121E4  0E00               	movlw	0
 28714  0121E6  2380               	addwfc	(??__display_padded_itoa+3)& (0+255),f,b
 28715  0121E8  517D               	movf	??__display_padded_itoa& (0+255),w,b
 28716  0121EA  5D7F               	subwf	(??__display_padded_itoa+2)& (0+255),w,b
 28717  0121EC  5180               	movf	(??__display_padded_itoa+3)& (0+255),w,b
 28718  0121EE  0A80               	xorlw	128
 28719  0121F0  6F81               	movwf	(??__display_padded_itoa+4)& (0+255),b
 28720  0121F2  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 28721  0121F4  0A80               	xorlw	128
 28722  0121F6  5981               	subwfb	(??__display_padded_itoa+4)& (0+255),w,b
 28723  0121F8  A0D8               	btfss	status,0,c
 28724  0121FA  D7E1               	goto	l1332
 28725                           
 28726                           ; BSR set to: 0
 28727                           ;display.c: 113: };display.c: 114: for(pos=0; tmp[pos]; ++pos)
 28728                           
 28729                           ; BSR set to: 0
 28730  0121FC  0E00               	movlw	0
 28731  0121FE  6F8D               	movwf	__display_padded_itoa@pos& (0+255),b
 28732  012200  D018               	goto	l1334
 28733  012202                     
 28734                           ; BSR set to: 0
 28735                           ;display.c: 115: {;display.c: 116: text[pos+padding] = tmp[pos];
 28736                           
 28737                           ; BSR set to: 0
 28738  012202  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 28739  012204  0D01               	mullw	1
 28740  012206  0E82               	movlw	low __display_padded_itoa@tmp
 28741  012208  24F3               	addwf	prodl,w,c
 28742  01220A  6ED9               	movwf	fsr2l,c
 28743  01220C  0E00               	movlw	high __display_padded_itoa@tmp
 28744  01220E  20F4               	addwfc	prodh,w,c
 28745  012210  6EDA               	movwf	fsr2h,c
 28746  012212  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 28747  012214  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 28748  012218  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 28749  01221A  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 28750  01221C  0E00               	movlw	0
 28751  01221E  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 28752  012220  517D               	movf	??__display_padded_itoa& (0+255),w,b
 28753  012222  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 28754  012224  6EE1               	movwf	fsr1l,c
 28755  012226  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 28756  012228  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 28757  01222A  6EE2               	movwf	fsr1h,c
 28758  01222C  CFDF FFE7          	movff	indf2,indf1
 28759                           
 28760                           ; BSR set to: 0
 28761  012230  2B8D               	incf	__display_padded_itoa@pos& (0+255),f,b
 28762  012232                     l1334:
 28763                           
 28764                           ; BSR set to: 0
 28765                           
 28766                           ; BSR set to: 0
 28767  012232  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 28768  012234  0D01               	mullw	1
 28769  012236  0E82               	movlw	low __display_padded_itoa@tmp
 28770  012238  24F3               	addwf	prodl,w,c
 28771  01223A  6ED9               	movwf	fsr2l,c
 28772  01223C  0E00               	movlw	high __display_padded_itoa@tmp
 28773  01223E  20F4               	addwfc	prodh,w,c
 28774  012240  6EDA               	movwf	fsr2h,c
 28775  012242  50DF               	movf	indf2,w,c
 28776  012244  A4D8               	btfss	status,2,c
 28777  012246  D7DD               	goto	l1335
 28778                           
 28779                           ; BSR set to: 0
 28780                           ;display.c: 117: };display.c: 118: text[pos+padding] = 0x00;
 28781                           
 28782                           ; BSR set to: 0
 28783  012248  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 28784  01224A  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 28785  01224E  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 28786  012250  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 28787  012252  0E00               	movlw	0
 28788  012254  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 28789  012256  517D               	movf	??__display_padded_itoa& (0+255),w,b
 28790  012258  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 28791  01225A  6ED9               	movwf	fsr2l,c
 28792  01225C  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 28793  01225E  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 28794  012260  6EDA               	movwf	fsr2h,c
 28795  012262  0E00               	movlw	0
 28796  012264  6EDF               	movwf	indf2,c
 28797                           
 28798                           ; BSR set to: 0
 28799  012266  0012               	return		;funcret
 28800  012268                     __end_of__display_padded_itoa:
 28801                           	opt stack 0
 28802                           tblptru	equ	0xFF8
 28803                           tblptrh	equ	0xFF7
 28804                           tblptrl	equ	0xFF6
 28805                           tablat	equ	0xFF5
 28806                           prodh	equ	0xFF4
 28807                           prodl	equ	0xFF3
 28808                           intcon	equ	0xFF2
 28809                           postinc0	equ	0xFEE
 28810                           wreg	equ	0xFE8
 28811                           indf1	equ	0xFE7
 28812                           postinc1	equ	0xFE6
 28813                           postdec1	equ	0xFE5
 28814                           plusw1	equ	0xFE3
 28815                           fsr1h	equ	0xFE2
 28816                           fsr1l	equ	0xFE1
 28817                           indf2	equ	0xFDF
 28818                           postinc2	equ	0xFDE
 28819                           postdec2	equ	0xFDD
 28820                           plusw2	equ	0xFDB
 28821                           fsr2h	equ	0xFDA
 28822                           fsr2l	equ	0xFD9
 28823                           status	equ	0xFD8
 28824                           
 28825 ;; *************** function __display_position_in_degrees *****************
 28826 ;; Defined at:
 28827 ;;		line 258 in file "display.c"
 28828 ;; Parameters:    Size  Location     Type
 28829 ;;		None
 28830 ;; Auto vars:     Size  Location     Type
 28831 ;;  position        4    4[BANK0 ] long 
 28832 ;; Return value:  Size  Location     Type
 28833 ;;                  4    0[BANK0 ] long 
 28834 ;; Registers used:
 28835 ;;		wreg, status,2, status,0
 28836 ;; Tracked objects:
 28837 ;;		On entry : 0/0
 28838 ;;		On exit  : 0/0
 28839 ;;		Unchanged: 0/0
 28840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28841 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28842 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28844 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28845 ;;Total ram usage:        8 bytes
 28846 ;; Hardware stack levels used:    1
 28847 ;; Hardware stack levels required when called:   10
 28848 ;; This function calls:
 28849 ;;		Nothing
 28850 ;; This function is called by:
 28851 ;;		_display_prepare
 28852 ;; This function uses a non-reentrant model
 28853 ;;
 28854                           
 28855                           	psect	text111
 28856  0151C6                     __ptext111:
 28857                           	opt stack 0
 28858  0151C6                     __display_position_in_degrees:
 28859                           	opt stack 19
 28860                           
 28861                           ;display.c: 260: int32_t position;;display.c: 261: position = (int32_t) os.current_posit
      +                          ion_in_degrees;
 28862                           
 28863                           ; BSR set to: 0
 28864                           ;incstack = 0
 28865  0151C6  C171  F064         	movff	_os+13,__display_position_in_degrees@position	;volatile
 28866  0151CA  C172  F065         	movff	_os+14,__display_position_in_degrees@position+1	;volatile
 28867  0151CE  0100               	movlb	0	; () banked
 28868  0151D0  6B66               	clrf	(__display_position_in_degrees@position+2)& (0+255),b
 28869  0151D2  6B67               	clrf	(__display_position_in_degrees@position+3)& (0+255),b
 28870                           
 28871                           ; BSR set to: 0
 28872                           ;display.c: 263: if(config.position_display_180==1)
 28873  0151D4  0101               	movlb	1	; () banked
 28874  0151D6  05BD               	decf	(_config+40)& (0+255),w,b
 28875  0151D8  A4D8               	btfss	status,2,c
 28876  0151DA  D014               	goto	l1385
 28877                           
 28878                           ; BSR set to: 1
 28879                           ;display.c: 264: {;display.c: 265: if(position>18000)
 28880  0151DC  0100               	movlb	0	; () banked
 28881  0151DE  BF67               	btfsc	(__display_position_in_degrees@position+3)& (0+255),7,b
 28882  0151E0  D011               	goto	l1385
 28883  0151E2  5167               	movf	(__display_position_in_degrees@position+3)& (0+255),w,b
 28884  0151E4  1166               	iorwf	(__display_position_in_degrees@position+2)& (0+255),w,b
 28885  0151E6  E106               	bnz	u17080
 28886  0151E8  0E51               	movlw	81
 28887  0151EA  5D64               	subwf	__display_position_in_degrees@position& (0+255),w,b
 28888  0151EC  0E46               	movlw	70
 28889  0151EE  5965               	subwfb	(__display_position_in_degrees@position+1)& (0+255),w,b
 28890  0151F0  A0D8               	btfss	status,0,c
 28891  0151F2  D008               	goto	l1385
 28892  0151F4                     u17080:
 28893                           
 28894                           ; BSR set to: 0
 28895                           ;display.c: 266: {;display.c: 267: position -= 36000;
 28896  0151F4  0E60               	movlw	96
 28897  0151F6  2764               	addwf	__display_position_in_degrees@position& (0+255),f,b
 28898  0151F8  0E73               	movlw	115
 28899  0151FA  2365               	addwfc	(__display_position_in_degrees@position+1)& (0+255),f,b
 28900  0151FC  0EFF               	movlw	255
 28901  0151FE  2366               	addwfc	(__display_position_in_degrees@position+2)& (0+255),f,b
 28902  015200  0EFF               	movlw	255
 28903  015202  2367               	addwfc	(__display_position_in_degrees@position+3)& (0+255),f,b
 28904  015204                     l1385:
 28905                           
 28906                           ;display.c: 268: };display.c: 269: };display.c: 271: return position;
 28907                           
 28908                           ; BSR set to: 0
 28909                           
 28910                           ; BSR set to: 0
 28911  015204  C064  F060         	movff	__display_position_in_degrees@position,?__display_position_in_degrees
 28912  015208  C065  F061         	movff	__display_position_in_degrees@position+1,?__display_position_in_degrees+1
 28913  01520C  C066  F062         	movff	__display_position_in_degrees@position+2,?__display_position_in_degrees+2
 28914  015210  C067  F063         	movff	__display_position_in_degrees@position+3,?__display_position_in_degrees+3
 28915  015214  0012               	return	
 28916  015216                     __end_of__display_position_in_degrees:
 28917                           	opt stack 0
 28918                           tblptru	equ	0xFF8
 28919                           tblptrh	equ	0xFF7
 28920                           tblptrl	equ	0xFF6
 28921                           tablat	equ	0xFF5
 28922                           prodh	equ	0xFF4
 28923                           prodl	equ	0xFF3
 28924                           intcon	equ	0xFF2
 28925                           postinc0	equ	0xFEE
 28926                           wreg	equ	0xFE8
 28927                           indf1	equ	0xFE7
 28928                           postinc1	equ	0xFE6
 28929                           postdec1	equ	0xFE5
 28930                           plusw1	equ	0xFE3
 28931                           fsr1h	equ	0xFE2
 28932                           fsr1l	equ	0xFE1
 28933                           indf2	equ	0xFDF
 28934                           postinc2	equ	0xFDE
 28935                           postdec2	equ	0xFDD
 28936                           plusw2	equ	0xFDB
 28937                           fsr2h	equ	0xFDA
 28938                           fsr2l	equ	0xFD9
 28939                           status	equ	0xFD8
 28940                           
 28941 ;; *************** function __display_itoa_long *****************
 28942 ;; Defined at:
 28943 ;;		line 203 in file "display.c"
 28944 ;; Parameters:    Size  Location     Type
 28945 ;;  value           4   87[BANK0 ] long 
 28946 ;;  decimals        1   91[BANK0 ] unsigned char 
 28947 ;;  text            2   92[BANK0 ] PTR unsigned char 
 28948 ;;		 -> display_prepare@temp(10), 
 28949 ;; Auto vars:     Size  Location     Type
 28950 ;;  short_value     2   99[BANK0 ] int 
 28951 ;;  last_digit      1  101[BANK0 ] char 
 28952 ;;  length          1   98[BANK0 ] unsigned char 
 28953 ;; Return value:  Size  Location     Type
 28954 ;;                  1    wreg      void 
 28955 ;; Registers used:
 28956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28957 ;; Tracked objects:
 28958 ;;		On entry : 0/0
 28959 ;;		On exit  : 0/0
 28960 ;;		Unchanged: 0/0
 28961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28962 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28963 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28964 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28965 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28966 ;;Total ram usage:       15 bytes
 28967 ;; Hardware stack levels used:    1
 28968 ;; Hardware stack levels required when called:   14
 28969 ;; This function calls:
 28970 ;;		___aldiv
 28971 ;;		___almod
 28972 ;;		__display_itoa
 28973 ;;		_strlen
 28974 ;; This function is called by:
 28975 ;;		_display_prepare
 28976 ;; This function uses a non-reentrant model
 28977 ;;
 28978                           
 28979                           	psect	text112
 28980  010FDA                     __ptext112:
 28981                           	opt stack 0
 28982  010FDA                     __display_itoa_long:
 28983                           	opt stack 15
 28984                           
 28985                           ;display.c: 205: int16_t short_value;;display.c: 206: int8_t last_digit;;display.c: 207:
      +                           uint8_t length;;display.c: 209: short_value = (int16_t) value;
 28986                           
 28987                           ;incstack = 0
 28988  010FDA  C0B7  F0C3         	movff	__display_itoa_long@value,__display_itoa_long@short_value
 28989  010FDE  C0B8  F0C4         	movff	__display_itoa_long@value+1,__display_itoa_long@short_value+1
 28990                           
 28991                           ;display.c: 210: if(short_value==value)
 28992  010FE2  C0C3  F0BE         	movff	__display_itoa_long@short_value,??__display_itoa_long
 28993  010FE6  C0C4  F0BF         	movff	__display_itoa_long@short_value+1,??__display_itoa_long+1
 28994  010FEA  0E00               	movlw	0
 28995  010FEC  0100               	movlb	0	; () banked
 28996  010FEE  BFBF               	btfsc	(??__display_itoa_long+1)& (0+255),7,b
 28997  010FF0  0EFF               	movlw	255
 28998  010FF2  6FC0               	movwf	(??__display_itoa_long+2)& (0+255),b
 28999  010FF4  6FC1               	movwf	(??__display_itoa_long+3)& (0+255),b
 29000  010FF6  51B7               	movf	__display_itoa_long@value& (0+255),w,b
 29001  010FF8  19BE               	xorwf	??__display_itoa_long& (0+255),w,b
 29002  010FFA  E117               	bnz	l17578
 29003  010FFC  51B8               	movf	(__display_itoa_long@value+1)& (0+255),w,b
 29004  010FFE  19BF               	xorwf	(??__display_itoa_long+1)& (0+255),w,b
 29005  011000  E114               	bnz	l17578
 29006  011002  51B9               	movf	(__display_itoa_long@value+2)& (0+255),w,b
 29007  011004  19C0               	xorwf	(??__display_itoa_long+2)& (0+255),w,b
 29008  011006  E111               	bnz	l17578
 29009  011008  51BA               	movf	(__display_itoa_long@value+3)& (0+255),w,b
 29010  01100A  19C1               	xorwf	(??__display_itoa_long+3)& (0+255),w,b
 29011  01100C  A4D8               	btfss	status,2,c
 29012  01100E  D00D               	goto	l1367
 29013                           
 29014                           ; BSR set to: 0
 29015                           ;display.c: 211: {;display.c: 212: _display_itoa(short_value, decimals, text);
 29016  011010  C0C3  F09F         	movff	__display_itoa_long@short_value,__display_itoa@value
 29017  011014  C0C4  F0A0         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 29018  011018  C0BB  F0A1         	movff	__display_itoa_long@decimals,__display_itoa@decimals
 29019  01101C  C0BC  F0A2         	movff	__display_itoa_long@text,__display_itoa@text
 29020  011020  C0BD  F0A3         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 29021  011024  EC4A  F072         	call	__display_itoa	;wreg free
 29022                           
 29023                           ;display.c: 213: }
 29024  011028  0012               	return	
 29025  01102A                     l1367:
 29026  01102A                     l17578:
 29027                           
 29028                           ;display.c: 214: else;display.c: 215: {;display.c: 216: short_value = value / 10;
 29029  01102A  C0B7  F060         	movff	__display_itoa_long@value,___aldiv@dividend
 29030  01102E  C0B8  F061         	movff	__display_itoa_long@value+1,___aldiv@dividend+1
 29031  011032  C0B9  F062         	movff	__display_itoa_long@value+2,___aldiv@dividend+2
 29032  011036  C0BA  F063         	movff	__display_itoa_long@value+3,___aldiv@dividend+3
 29033  01103A  0E0A               	movlw	10
 29034  01103C  0100               	movlb	0	; () banked
 29035  01103E  6F64               	movwf	___aldiv@divisor& (0+255),b
 29036  011040  0E00               	movlw	0
 29037  011042  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 29038  011044  0E00               	movlw	0
 29039  011046  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 29040  011048  0E00               	movlw	0
 29041  01104A  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 29042  01104C  ECDB  F095         	call	___aldiv	;wreg free
 29043  011050  C060  F0C3         	movff	?___aldiv,__display_itoa_long@short_value
 29044  011054  C061  F0C4         	movff	?___aldiv+1,__display_itoa_long@short_value+1
 29045                           
 29046                           ;display.c: 217: _display_itoa(short_value, decimals-1, text);
 29047  011058  C0C3  F09F         	movff	__display_itoa_long@short_value,__display_itoa@value
 29048  01105C  C0C4  F0A0         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 29049  011060  0100               	movlb	0	; () banked
 29050  011062  05BB               	decf	__display_itoa_long@decimals& (0+255),w,b
 29051  011064  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 29052  011066  C0BC  F0A2         	movff	__display_itoa_long@text,__display_itoa@text
 29053  01106A  C0BD  F0A3         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 29054  01106E  EC4A  F072         	call	__display_itoa	;wreg free
 29055                           
 29056                           ;display.c: 218: length = strlen(text);
 29057  011072  C0BC  F060         	movff	__display_itoa_long@text,strlen@s
 29058  011076  C0BD  F061         	movff	__display_itoa_long@text+1,strlen@s+1
 29059  01107A  EC2A  F0AB         	call	_strlen	;wreg free
 29060  01107E  0100               	movlb	0	; () banked
 29061  011080  5160               	movf	?_strlen& (0+255),w,b
 29062  011082  6FC2               	movwf	__display_itoa_long@length& (0+255),b
 29063                           
 29064                           ; BSR set to: 0
 29065                           ;display.c: 219: last_digit = value % 10;
 29066  011084  C0B7  F060         	movff	__display_itoa_long@value,___almod@dividend
 29067  011088  C0B8  F061         	movff	__display_itoa_long@value+1,___almod@dividend+1
 29068  01108C  C0B9  F062         	movff	__display_itoa_long@value+2,___almod@dividend+2
 29069  011090  C0BA  F063         	movff	__display_itoa_long@value+3,___almod@dividend+3
 29070  011094  0E0A               	movlw	10
 29071  011096  6F64               	movwf	___almod@divisor& (0+255),b
 29072  011098  0E00               	movlw	0
 29073  01109A  6F65               	movwf	(___almod@divisor+1)& (0+255),b
 29074  01109C  0E00               	movlw	0
 29075  01109E  6F66               	movwf	(___almod@divisor+2)& (0+255),b
 29076  0110A0  0E00               	movlw	0
 29077  0110A2  6F67               	movwf	(___almod@divisor+3)& (0+255),b
 29078  0110A4  EC86  F099         	call	___almod	;wreg free
 29079  0110A8  0100               	movlb	0	; () banked
 29080  0110AA  5160               	movf	?___almod& (0+255),w,b
 29081  0110AC  6FC5               	movwf	__display_itoa_long@last_digit& (0+255),b
 29082                           
 29083                           ; BSR set to: 0
 29084                           ;display.c: 220: if(last_digit<0)
 29085  0110AE  BFC5               	btfsc	__display_itoa_long@last_digit& (0+255),7,b
 29086                           
 29087                           ; BSR set to: 0
 29088                           ;display.c: 221: last_digit = -last_digit;
 29089  0110B0  6DC5               	negf	__display_itoa_long@last_digit& (0+255),b
 29090                           
 29091                           ; BSR set to: 0
 29092                           ;display.c: 222: text[length] = last_digit + 0x30;
 29093                           
 29094                           ; BSR set to: 0
 29095  0110B2  51C2               	movf	__display_itoa_long@length& (0+255),w,b
 29096  0110B4  0D01               	mullw	1
 29097  0110B6  50F3               	movf	prodl,w,c
 29098  0110B8  25BC               	addwf	__display_itoa_long@text& (0+255),w,b
 29099  0110BA  6ED9               	movwf	fsr2l,c
 29100  0110BC  50F4               	movf	prodh,w,c
 29101  0110BE  21BD               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 29102  0110C0  6EDA               	movwf	fsr2h,c
 29103  0110C2  51C5               	movf	__display_itoa_long@last_digit& (0+255),w,b
 29104  0110C4  0F30               	addlw	48
 29105  0110C6  6EDF               	movwf	indf2,c
 29106                           
 29107                           ; BSR set to: 0
 29108                           ;display.c: 223: text[length+1] = 0x00;
 29109  0110C8  51C2               	movf	__display_itoa_long@length& (0+255),w,b
 29110  0110CA  6FBE               	movwf	??__display_itoa_long& (0+255),b
 29111  0110CC  6BBF               	clrf	(??__display_itoa_long+1)& (0+255),b
 29112  0110CE  0E01               	movlw	1
 29113  0110D0  27BE               	addwf	??__display_itoa_long& (0+255),f,b
 29114  0110D2  0E00               	movlw	0
 29115  0110D4  23BF               	addwfc	(??__display_itoa_long+1)& (0+255),f,b
 29116  0110D6  51BE               	movf	??__display_itoa_long& (0+255),w,b
 29117  0110D8  25BC               	addwf	__display_itoa_long@text& (0+255),w,b
 29118  0110DA  6ED9               	movwf	fsr2l,c
 29119  0110DC  51BF               	movf	(??__display_itoa_long+1)& (0+255),w,b
 29120  0110DE  21BD               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 29121  0110E0  6EDA               	movwf	fsr2h,c
 29122  0110E2  0E00               	movlw	0
 29123  0110E4  6EDF               	movwf	indf2,c
 29124  0110E6  0012               	return	
 29125  0110E8                     __end_of__display_itoa_long:
 29126                           	opt stack 0
 29127                           tblptru	equ	0xFF8
 29128                           tblptrh	equ	0xFF7
 29129                           tblptrl	equ	0xFF6
 29130                           tablat	equ	0xFF5
 29131                           prodh	equ	0xFF4
 29132                           prodl	equ	0xFF3
 29133                           intcon	equ	0xFF2
 29134                           postinc0	equ	0xFEE
 29135                           wreg	equ	0xFE8
 29136                           indf1	equ	0xFE7
 29137                           postinc1	equ	0xFE6
 29138                           postdec1	equ	0xFE5
 29139                           plusw1	equ	0xFE3
 29140                           fsr1h	equ	0xFE2
 29141                           fsr1l	equ	0xFE1
 29142                           indf2	equ	0xFDF
 29143                           postinc2	equ	0xFDE
 29144                           postdec2	equ	0xFDD
 29145                           plusw2	equ	0xFDB
 29146                           fsr2h	equ	0xFDA
 29147                           fsr2l	equ	0xFD9
 29148                           status	equ	0xFD8
 29149                           
 29150 ;; *************** function __display_itoa *****************
 29151 ;; Defined at:
 29152 ;;		line 135 in file "display.c"
 29153 ;; Parameters:    Size  Location     Type
 29154 ;;  value           2   63[BANK0 ] int 
 29155 ;;  decimals        1   65[BANK0 ] unsigned char 
 29156 ;;  text            2   66[BANK0 ] PTR unsigned char 
 29157 ;;		 -> display_prepare@temp(10), display_content(80), 
 29158 ;; Auto vars:     Size  Location     Type
 29159 ;;  tmp            10   74[BANK0 ] unsigned char [10]
 29160 ;;  pos             1   86[BANK0 ] unsigned char 
 29161 ;;  missing         1   85[BANK0 ] char 
 29162 ;;  len             1   84[BANK0 ] unsigned char 
 29163 ;; Return value:  Size  Location     Type
 29164 ;;                  1    wreg      void 
 29165 ;; Registers used:
 29166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29167 ;; Tracked objects:
 29168 ;;		On entry : 0/0
 29169 ;;		On exit  : 0/0
 29170 ;;		Unchanged: 0/0
 29171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29172 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29173 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29174 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29175 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29176 ;;Total ram usage:       24 bytes
 29177 ;; Hardware stack levels used:    1
 29178 ;; Hardware stack levels required when called:   13
 29179 ;; This function calls:
 29180 ;;		_itoa
 29181 ;;		_strlen
 29182 ;; This function is called by:
 29183 ;;		__display_itoa_long
 29184 ;;		_display_prepare
 29185 ;; This function uses a non-reentrant model
 29186 ;;
 29187                           
 29188                           	psect	text113
 29189  00E494                     __ptext113:
 29190                           	opt stack 0
 29191  00E494                     __display_itoa:
 29192                           	opt stack 15
 29193                           
 29194                           ;display.c: 137: uint8_t pos;;display.c: 138: uint8_t len;;display.c: 139: int8_t missin
      +                          g;;display.c: 140: char tmp[10];;display.c: 141: itoa(tmp, value, 10);
 29195                           
 29196                           ;incstack = 0
 29197  00E494  0EAA               	movlw	low __display_itoa@tmp
 29198  00E496  0100               	movlb	0	; () banked
 29199  00E498  6F70               	movwf	itoa@buf& (0+255),b
 29200  00E49A  0E00               	movlw	high __display_itoa@tmp
 29201  00E49C  6F71               	movwf	(itoa@buf+1)& (0+255),b
 29202  00E49E  C09F  F072         	movff	__display_itoa@value,itoa@val
 29203  00E4A2  C0A0  F073         	movff	__display_itoa@value+1,itoa@val+1
 29204  00E4A6  0E00               	movlw	0
 29205  00E4A8  6F75               	movwf	(itoa@base+1)& (0+255),b
 29206  00E4AA  0E0A               	movlw	10
 29207  00E4AC  6F74               	movwf	itoa@base& (0+255),b
 29208  00E4AE  EC84  F0AA         	call	_itoa	;wreg free
 29209                           
 29210                           ;display.c: 142: len = strlen(tmp);
 29211  00E4B2  0EAA               	movlw	low __display_itoa@tmp
 29212  00E4B4  0100               	movlb	0	; () banked
 29213  00E4B6  6F60               	movwf	strlen@s& (0+255),b
 29214  00E4B8  0E00               	movlw	high __display_itoa@tmp
 29215  00E4BA  6F61               	movwf	(strlen@s+1)& (0+255),b
 29216  00E4BC  EC2A  F0AB         	call	_strlen	;wreg free
 29217  00E4C0  0100               	movlb	0	; () banked
 29218  00E4C2  5160               	movf	?_strlen& (0+255),w,b
 29219  00E4C4  6FB4               	movwf	__display_itoa@len& (0+255),b
 29220                           
 29221                           ; BSR set to: 0
 29222                           ;display.c: 144: if(value<0)
 29223  00E4C6  AFA0               	btfss	(__display_itoa@value+1)& (0+255),7,b
 29224  00E4C8  D054               	goto	l1345
 29225                           
 29226                           ; BSR set to: 0
 29227                           ;display.c: 145: {;display.c: 146: missing = decimals + 2 - len;
 29228  00E4CA  51B4               	movf	__display_itoa@len& (0+255),w,b
 29229  00E4CC  0800               	sublw	0
 29230  00E4CE  25A1               	addwf	__display_itoa@decimals& (0+255),w,b
 29231  00E4D0  0F02               	addlw	2
 29232  00E4D2  6FB5               	movwf	__display_itoa@missing& (0+255),b
 29233                           
 29234                           ;display.c: 147: if(missing>0)
 29235  00E4D4  51B5               	movf	__display_itoa@missing& (0+255),w,b
 29236  00E4D6  0A80               	xorlw	128
 29237  00E4D8  0F7F               	addlw	-129
 29238  00E4DA  A0D8               	btfss	status,0,c
 29239  00E4DC  D090               	goto	l1352
 29240                           
 29241                           ; BSR set to: 0
 29242                           ;display.c: 148: {;display.c: 149: for(pos=decimals;pos!=0xFF;--pos)
 29243  00E4DE  C0A1  F0B6         	movff	__display_itoa@decimals,__display_itoa@pos
 29244  00E4E2                     l16128:
 29245                           
 29246                           ; BSR set to: 0
 29247  00E4E2  29B6               	incf	__display_itoa@pos& (0+255),w,b
 29248  00E4E4  B4D8               	btfsc	status,2,c
 29249  00E4E6  D042               	goto	u15240
 29250                           
 29251                           ; BSR set to: 0
 29252                           ;display.c: 150: {;display.c: 151: if(pos>=missing)
 29253                           
 29254                           ; BSR set to: 0
 29255                           
 29256                           ; BSR set to: 0
 29257  00E4E8  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29258  00E4EA  BFB5               	btfsc	__display_itoa@missing& (0+255),7,b
 29259  00E4EC  D004               	goto	u15230
 29260  00E4EE  0AFF               	xorlw	255
 29261  00E4F0  25B5               	addwf	__display_itoa@missing& (0+255),w,b
 29262  00E4F2  B0D8               	btfsc	status,0,c
 29263  00E4F4  D02A               	goto	l1349
 29264  00E4F6                     u15230:
 29265                           
 29266                           ; BSR set to: 0
 29267                           ;display.c: 152: {;display.c: 153: tmp[pos+1] = tmp[pos+1-missing];
 29268  00E4F6  C0B5  F0A4         	movff	__display_itoa@missing,??__display_itoa
 29269  00E4FA  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 29270  00E4FC  BFA4               	btfsc	??__display_itoa& (0+255),7,b
 29271  00E4FE  07A5               	decf	(??__display_itoa+1)& (0+255),f,b
 29272  00E500  1FA4               	comf	??__display_itoa& (0+255),f,b
 29273  00E502  1FA5               	comf	(??__display_itoa+1)& (0+255),f,b
 29274  00E504  4BA4               	infsnz	??__display_itoa& (0+255),f,b
 29275  00E506  2BA5               	incf	(??__display_itoa+1)& (0+255),f,b
 29276  00E508  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29277  00E50A  6FA6               	movwf	(??__display_itoa+2)& (0+255),b
 29278  00E50C  6BA7               	clrf	(??__display_itoa+3)& (0+255),b
 29279  00E50E  51A4               	movf	??__display_itoa& (0+255),w,b
 29280  00E510  27A6               	addwf	(??__display_itoa+2)& (0+255),f,b
 29281  00E512  51A5               	movf	(??__display_itoa+1)& (0+255),w,b
 29282  00E514  23A7               	addwfc	(??__display_itoa+3)& (0+255),f,b
 29283  00E516  0E01               	movlw	1
 29284  00E518  27A6               	addwf	(??__display_itoa+2)& (0+255),f,b
 29285  00E51A  0E00               	movlw	0
 29286  00E51C  23A7               	addwfc	(??__display_itoa+3)& (0+255),f,b
 29287  00E51E  0EAA               	movlw	low __display_itoa@tmp
 29288  00E520  25A6               	addwf	(??__display_itoa+2)& (0+255),w,b
 29289  00E522  6ED9               	movwf	fsr2l,c
 29290  00E524  0E00               	movlw	high __display_itoa@tmp
 29291  00E526  21A7               	addwfc	(??__display_itoa+3)& (0+255),w,b
 29292  00E528  6EDA               	movwf	fsr2h,c
 29293  00E52A  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29294  00E52C  6FA8               	movwf	(??__display_itoa+4)& (0+255),b
 29295  00E52E  6BA9               	clrf	(??__display_itoa+5)& (0+255),b
 29296  00E530  0E01               	movlw	1
 29297  00E532  27A8               	addwf	(??__display_itoa+4)& (0+255),f,b
 29298  00E534  0E00               	movlw	0
 29299  00E536  23A9               	addwfc	(??__display_itoa+5)& (0+255),f,b
 29300  00E538  0EAA               	movlw	low __display_itoa@tmp
 29301  00E53A  25A8               	addwf	(??__display_itoa+4)& (0+255),w,b
 29302  00E53C  6EE1               	movwf	fsr1l,c
 29303  00E53E  0E00               	movlw	high __display_itoa@tmp
 29304  00E540  21A9               	addwfc	(??__display_itoa+5)& (0+255),w,b
 29305  00E542  6EE2               	movwf	fsr1h,c
 29306  00E544  CFDF FFE7          	movff	indf2,indf1
 29307                           
 29308                           ;display.c: 154: }
 29309  00E548  D00F               	goto	l1350
 29310  00E54A                     l1349:
 29311                           
 29312                           ; BSR set to: 0
 29313                           ;display.c: 155: else;display.c: 156: {;display.c: 157: tmp[pos+1] = '0';
 29314                           
 29315                           ; BSR set to: 0
 29316  00E54A  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29317  00E54C  6FA4               	movwf	??__display_itoa& (0+255),b
 29318  00E54E  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 29319  00E550  0E01               	movlw	1
 29320  00E552  27A4               	addwf	??__display_itoa& (0+255),f,b
 29321  00E554  0E00               	movlw	0
 29322  00E556  23A5               	addwfc	(??__display_itoa+1)& (0+255),f,b
 29323  00E558  0EAA               	movlw	low __display_itoa@tmp
 29324  00E55A  25A4               	addwf	??__display_itoa& (0+255),w,b
 29325  00E55C  6ED9               	movwf	fsr2l,c
 29326  00E55E  0E00               	movlw	high __display_itoa@tmp
 29327  00E560  21A5               	addwfc	(??__display_itoa+1)& (0+255),w,b
 29328  00E562  6EDA               	movwf	fsr2h,c
 29329  00E564  0E30               	movlw	48
 29330  00E566  6EDF               	movwf	indf2,c
 29331  00E568                     l1350:
 29332                           
 29333                           ; BSR set to: 0
 29334                           
 29335                           ; BSR set to: 0
 29336  00E568  07B6               	decf	__display_itoa@pos& (0+255),f,b
 29337  00E56A  D7BB               	goto	l16128
 29338  00E56C                     u15240:
 29339                           
 29340                           ; BSR set to: 0
 29341                           ;display.c: 158: };display.c: 159: };display.c: 160: len = decimals + 2;
 29342                           
 29343                           ; BSR set to: 0
 29344  00E56C  51A1               	movf	__display_itoa@decimals& (0+255),w,b
 29345  00E56E  0F02               	addlw	2
 29346  00E570  D045               	goto	L40
 29347  00E572                     l1345:
 29348                           
 29349                           ; BSR set to: 0
 29350                           ;display.c: 163: else;display.c: 164: {;display.c: 165: missing = decimals + 1 - len;
 29351                           
 29352                           ; BSR set to: 0
 29353  00E572  51B4               	movf	__display_itoa@len& (0+255),w,b
 29354  00E574  0800               	sublw	0
 29355  00E576  25A1               	addwf	__display_itoa@decimals& (0+255),w,b
 29356  00E578  6FA4               	movwf	??__display_itoa& (0+255),b
 29357  00E57A  29A4               	incf	??__display_itoa& (0+255),w,b
 29358  00E57C  6FB5               	movwf	__display_itoa@missing& (0+255),b
 29359                           
 29360                           ;display.c: 166: if(missing>0)
 29361  00E57E  51B5               	movf	__display_itoa@missing& (0+255),w,b
 29362  00E580  0A80               	xorlw	128
 29363  00E582  0F7F               	addlw	-129
 29364  00E584  A0D8               	btfss	status,0,c
 29365  00E586  D03B               	goto	l1352
 29366                           
 29367                           ; BSR set to: 0
 29368                           ;display.c: 167: {;display.c: 168: for(pos=decimals;pos!=0xFF;--pos)
 29369  00E588  C0A1  F0B6         	movff	__display_itoa@decimals,__display_itoa@pos
 29370  00E58C                     l16148:
 29371                           
 29372                           ; BSR set to: 0
 29373  00E58C  29B6               	incf	__display_itoa@pos& (0+255),w,b
 29374  00E58E  B4D8               	btfsc	status,2,c
 29375  00E590  D034               	goto	u15280
 29376                           
 29377                           ; BSR set to: 0
 29378                           ;display.c: 169: {;display.c: 170: if(pos>=missing)
 29379                           
 29380                           ; BSR set to: 0
 29381                           
 29382                           ; BSR set to: 0
 29383  00E592  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29384  00E594  BFB5               	btfsc	__display_itoa@missing& (0+255),7,b
 29385  00E596  D004               	goto	u15270
 29386  00E598  0AFF               	xorlw	255
 29387  00E59A  25B5               	addwf	__display_itoa@missing& (0+255),w,b
 29388  00E59C  B0D8               	btfsc	status,0,c
 29389  00E59E  D021               	goto	l1355
 29390  00E5A0                     u15270:
 29391                           
 29392                           ; BSR set to: 0
 29393                           ;display.c: 171: {;display.c: 172: tmp[pos] = tmp[pos-missing];
 29394  00E5A0  C0B5  F0A4         	movff	__display_itoa@missing,??__display_itoa
 29395  00E5A4  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 29396  00E5A6  BFA4               	btfsc	??__display_itoa& (0+255),7,b
 29397  00E5A8  07A5               	decf	(??__display_itoa+1)& (0+255),f,b
 29398  00E5AA  1FA4               	comf	??__display_itoa& (0+255),f,b
 29399  00E5AC  1FA5               	comf	(??__display_itoa+1)& (0+255),f,b
 29400  00E5AE  4BA4               	infsnz	??__display_itoa& (0+255),f,b
 29401  00E5B0  2BA5               	incf	(??__display_itoa+1)& (0+255),f,b
 29402  00E5B2  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29403  00E5B4  6FA6               	movwf	(??__display_itoa+2)& (0+255),b
 29404  00E5B6  6BA7               	clrf	(??__display_itoa+3)& (0+255),b
 29405  00E5B8  51A4               	movf	??__display_itoa& (0+255),w,b
 29406  00E5BA  27A6               	addwf	(??__display_itoa+2)& (0+255),f,b
 29407  00E5BC  51A5               	movf	(??__display_itoa+1)& (0+255),w,b
 29408  00E5BE  23A7               	addwfc	(??__display_itoa+3)& (0+255),f,b
 29409  00E5C0  0EAA               	movlw	low __display_itoa@tmp
 29410  00E5C2  25A6               	addwf	(??__display_itoa+2)& (0+255),w,b
 29411  00E5C4  6ED9               	movwf	fsr2l,c
 29412  00E5C6  0E00               	movlw	high __display_itoa@tmp
 29413  00E5C8  21A7               	addwfc	(??__display_itoa+3)& (0+255),w,b
 29414  00E5CA  6EDA               	movwf	fsr2h,c
 29415  00E5CC  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29416  00E5CE  0D01               	mullw	1
 29417  00E5D0  0EAA               	movlw	low __display_itoa@tmp
 29418  00E5D2  24F3               	addwf	prodl,w,c
 29419  00E5D4  6EE1               	movwf	fsr1l,c
 29420  00E5D6  0E00               	movlw	high __display_itoa@tmp
 29421  00E5D8  20F4               	addwfc	prodh,w,c
 29422  00E5DA  6EE2               	movwf	fsr1h,c
 29423  00E5DC  CFDF FFE7          	movff	indf2,indf1
 29424                           
 29425                           ;display.c: 173: }
 29426  00E5E0  D00A               	goto	l1356
 29427  00E5E2                     l1355:
 29428                           
 29429                           ; BSR set to: 0
 29430                           ;display.c: 174: else;display.c: 175: {;display.c: 176: tmp[pos] = '0';
 29431                           
 29432                           ; BSR set to: 0
 29433  00E5E2  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29434  00E5E4  0D01               	mullw	1
 29435  00E5E6  0EAA               	movlw	low __display_itoa@tmp
 29436  00E5E8  24F3               	addwf	prodl,w,c
 29437  00E5EA  6ED9               	movwf	fsr2l,c
 29438  00E5EC  0E00               	movlw	high __display_itoa@tmp
 29439  00E5EE  20F4               	addwfc	prodh,w,c
 29440  00E5F0  6EDA               	movwf	fsr2h,c
 29441  00E5F2  0E30               	movlw	48
 29442  00E5F4  6EDF               	movwf	indf2,c
 29443  00E5F6                     l1356:
 29444                           
 29445                           ; BSR set to: 0
 29446                           
 29447                           ; BSR set to: 0
 29448  00E5F6  07B6               	decf	__display_itoa@pos& (0+255),f,b
 29449  00E5F8  D7C9               	goto	l16148
 29450  00E5FA                     u15280:
 29451                           
 29452                           ; BSR set to: 0
 29453                           ;display.c: 177: };display.c: 178: };display.c: 179: len = decimals + 1;
 29454                           
 29455                           ; BSR set to: 0
 29456  00E5FA  29A1               	incf	__display_itoa@decimals& (0+255),w,b
 29457  00E5FC                     L40:
 29458  00E5FC  6FB4               	movwf	__display_itoa@len& (0+255),b
 29459  00E5FE                     l1352:
 29460                           
 29461                           ; BSR set to: 0
 29462                           ;display.c: 180: };display.c: 181: };display.c: 183: decimals = len - decimals - 1;
 29463                           
 29464                           ; BSR set to: 0
 29465  00E5FE  51A1               	movf	__display_itoa@decimals& (0+255),w,b
 29466  00E600  0800               	sublw	0
 29467  00E602  25B4               	addwf	__display_itoa@len& (0+255),w,b
 29468  00E604  6FA4               	movwf	??__display_itoa& (0+255),b
 29469  00E606  05A4               	decf	??__display_itoa& (0+255),w,b
 29470  00E608  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 29471                           
 29472                           ; BSR set to: 0
 29473                           ;display.c: 185: for(pos=0;pos<len;++pos)
 29474  00E60A  0E00               	movlw	0
 29475  00E60C  6FB6               	movwf	__display_itoa@pos& (0+255),b
 29476  00E60E  D023               	goto	l1357
 29477  00E610                     
 29478                           ; BSR set to: 0
 29479                           ;display.c: 186: {;display.c: 187: text[pos] = tmp[pos];
 29480                           
 29481                           ; BSR set to: 0
 29482  00E610  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29483  00E612  0D01               	mullw	1
 29484  00E614  0EAA               	movlw	low __display_itoa@tmp
 29485  00E616  24F3               	addwf	prodl,w,c
 29486  00E618  6ED9               	movwf	fsr2l,c
 29487  00E61A  0E00               	movlw	high __display_itoa@tmp
 29488  00E61C  20F4               	addwfc	prodh,w,c
 29489  00E61E  6EDA               	movwf	fsr2h,c
 29490  00E620  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29491  00E622  0D01               	mullw	1
 29492  00E624  50F3               	movf	prodl,w,c
 29493  00E626  25A2               	addwf	__display_itoa@text& (0+255),w,b
 29494  00E628  6EE1               	movwf	fsr1l,c
 29495  00E62A  50F4               	movf	prodh,w,c
 29496  00E62C  21A3               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 29497  00E62E  6EE2               	movwf	fsr1h,c
 29498  00E630  CFDF FFE7          	movff	indf2,indf1
 29499                           
 29500                           ; BSR set to: 0
 29501                           ;display.c: 188: if(pos==decimals)
 29502  00E634  51A1               	movf	__display_itoa@decimals& (0+255),w,b
 29503  00E636  19B6               	xorwf	__display_itoa@pos& (0+255),w,b
 29504  00E638  A4D8               	btfss	status,2,c
 29505  00E63A  D00C               	goto	l1359
 29506                           
 29507                           ; BSR set to: 0
 29508                           ;display.c: 189: {;display.c: 191: ++pos;
 29509  00E63C  2BB6               	incf	__display_itoa@pos& (0+255),f,b
 29510                           
 29511                           ; BSR set to: 0
 29512                           ;display.c: 192: text[pos] = '.';
 29513  00E63E  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29514  00E640  0D01               	mullw	1
 29515  00E642  50F3               	movf	prodl,w,c
 29516  00E644  25A2               	addwf	__display_itoa@text& (0+255),w,b
 29517  00E646  6ED9               	movwf	fsr2l,c
 29518  00E648  50F4               	movf	prodh,w,c
 29519  00E64A  21A3               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 29520  00E64C  6EDA               	movwf	fsr2h,c
 29521  00E64E  0E2E               	movlw	46
 29522  00E650  6EDF               	movwf	indf2,c
 29523                           
 29524                           ;display.c: 193: break;
 29525  00E652  D01E               	goto	l1361
 29526  00E654                     l1359:
 29527                           
 29528                           ; BSR set to: 0
 29529                           
 29530                           ; BSR set to: 0
 29531  00E654  2BB6               	incf	__display_itoa@pos& (0+255),f,b
 29532  00E656                     l1357:
 29533                           
 29534                           ; BSR set to: 0
 29535                           
 29536                           ; BSR set to: 0
 29537  00E656  51B4               	movf	__display_itoa@len& (0+255),w,b
 29538  00E658  5DB6               	subwf	__display_itoa@pos& (0+255),w,b
 29539  00E65A  B0D8               	btfsc	status,0,c
 29540  00E65C  D019               	goto	l1361
 29541  00E65E  D7D8               	goto	l1358
 29542  00E660                     
 29543                           ; BSR set to: 0
 29544                           ;display.c: 197: {;display.c: 198: text[pos+1] = tmp[pos];
 29545                           
 29546                           ; BSR set to: 0
 29547  00E660  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29548  00E662  0D01               	mullw	1
 29549  00E664  0EAA               	movlw	low __display_itoa@tmp
 29550  00E666  24F3               	addwf	prodl,w,c
 29551  00E668  6ED9               	movwf	fsr2l,c
 29552  00E66A  0E00               	movlw	high __display_itoa@tmp
 29553  00E66C  20F4               	addwfc	prodh,w,c
 29554  00E66E  6EDA               	movwf	fsr2h,c
 29555  00E670  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29556  00E672  6FA4               	movwf	??__display_itoa& (0+255),b
 29557  00E674  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 29558  00E676  0E01               	movlw	1
 29559  00E678  27A4               	addwf	??__display_itoa& (0+255),f,b
 29560  00E67A  0E00               	movlw	0
 29561  00E67C  23A5               	addwfc	(??__display_itoa+1)& (0+255),f,b
 29562  00E67E  51A4               	movf	??__display_itoa& (0+255),w,b
 29563  00E680  25A2               	addwf	__display_itoa@text& (0+255),w,b
 29564  00E682  6EE1               	movwf	fsr1l,c
 29565  00E684  51A5               	movf	(??__display_itoa+1)& (0+255),w,b
 29566  00E686  21A3               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 29567  00E688  6EE2               	movwf	fsr1h,c
 29568  00E68A  CFDF FFE7          	movff	indf2,indf1
 29569                           
 29570                           ; BSR set to: 0
 29571  00E68E  2BB6               	incf	__display_itoa@pos& (0+255),f,b
 29572  00E690                     l1361:
 29573                           
 29574                           ; BSR set to: 0
 29575                           
 29576                           ; BSR set to: 0
 29577  00E690  51B4               	movf	__display_itoa@len& (0+255),w,b
 29578  00E692  5DB6               	subwf	__display_itoa@pos& (0+255),w,b
 29579  00E694  A0D8               	btfss	status,0,c
 29580  00E696  D7E4               	goto	l1362
 29581                           
 29582                           ; BSR set to: 0
 29583                           ;display.c: 199: };display.c: 200: text[pos+1] = 0;
 29584                           
 29585                           ; BSR set to: 0
 29586  00E698  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29587  00E69A  6FA4               	movwf	??__display_itoa& (0+255),b
 29588  00E69C  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 29589  00E69E  0E01               	movlw	1
 29590  00E6A0  27A4               	addwf	??__display_itoa& (0+255),f,b
 29591  00E6A2  0E00               	movlw	0
 29592  00E6A4  23A5               	addwfc	(??__display_itoa+1)& (0+255),f,b
 29593  00E6A6  51A4               	movf	??__display_itoa& (0+255),w,b
 29594  00E6A8  25A2               	addwf	__display_itoa@text& (0+255),w,b
 29595  00E6AA  6ED9               	movwf	fsr2l,c
 29596  00E6AC  51A5               	movf	(??__display_itoa+1)& (0+255),w,b
 29597  00E6AE  21A3               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 29598  00E6B0  6EDA               	movwf	fsr2h,c
 29599  00E6B2  0E00               	movlw	0
 29600  00E6B4  6EDF               	movwf	indf2,c
 29601                           
 29602                           ; BSR set to: 0
 29603  00E6B6  0012               	return		;funcret
 29604  00E6B8                     __end_of__display_itoa:
 29605                           	opt stack 0
 29606                           tblptru	equ	0xFF8
 29607                           tblptrh	equ	0xFF7
 29608                           tblptrl	equ	0xFF6
 29609                           tablat	equ	0xFF5
 29610                           prodh	equ	0xFF4
 29611                           prodl	equ	0xFF3
 29612                           intcon	equ	0xFF2
 29613                           postinc0	equ	0xFEE
 29614                           wreg	equ	0xFE8
 29615                           indf1	equ	0xFE7
 29616                           postinc1	equ	0xFE6
 29617                           postdec1	equ	0xFE5
 29618                           plusw1	equ	0xFE3
 29619                           fsr1h	equ	0xFE2
 29620                           fsr1l	equ	0xFE1
 29621                           indf2	equ	0xFDF
 29622                           postinc2	equ	0xFDE
 29623                           postdec2	equ	0xFDD
 29624                           plusw2	equ	0xFDB
 29625                           fsr2h	equ	0xFDA
 29626                           fsr2l	equ	0xFD9
 29627                           status	equ	0xFD8
 29628                           
 29629 ;; *************** function _strlen *****************
 29630 ;; Defined at:
 29631 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
 29632 ;; Parameters:    Size  Location     Type
 29633 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 29634 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 29635 ;; Auto vars:     Size  Location     Type
 29636 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 29637 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 29638 ;; Return value:  Size  Location     Type
 29639 ;;                  2    0[BANK0 ] unsigned int 
 29640 ;; Registers used:
 29641 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29642 ;; Tracked objects:
 29643 ;;		On entry : 0/0
 29644 ;;		On exit  : 0/0
 29645 ;;		Unchanged: 0/0
 29646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29647 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29648 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29649 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29650 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29651 ;;Total ram usage:        6 bytes
 29652 ;; Hardware stack levels used:    1
 29653 ;; Hardware stack levels required when called:   10
 29654 ;; This function calls:
 29655 ;;		Nothing
 29656 ;; This function is called by:
 29657 ;;		__display_padded_itoa
 29658 ;;		__display_itoa
 29659 ;;		__display_itoa_long
 29660 ;;		_display_prepare
 29661 ;; This function uses a non-reentrant model
 29662 ;;
 29663                           
 29664                           	psect	text114
 29665  015654                     __ptext114:
 29666                           	opt stack 0
 29667  015654                     _strlen:
 29668                           	opt stack 19
 29669                           
 29670                           ; BSR set to: 0
 29671                           ;incstack = 0
 29672  015654  C060  F064         	movff	strlen@s,strlen@cp
 29673  015658  C061  F065         	movff	strlen@s+1,strlen@cp+1
 29674  01565C  D003               	goto	l3834
 29675  01565E  0100               	movlb	0	; () banked
 29676  015660  4B64               	infsnz	strlen@cp& (0+255),f,b
 29677  015662  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 29678  015664                     l3834:
 29679                           
 29680                           ; BSR set to: 0
 29681  015664  C064  FFD9         	movff	strlen@cp,fsr2l
 29682  015668  C065  FFDA         	movff	strlen@cp+1,fsr2h
 29683  01566C  50DF               	movf	indf2,w,c
 29684  01566E  A4D8               	btfss	status,2,c
 29685  015670  D7F6               	goto	l3835
 29686  015672  C060  F062         	movff	strlen@s,??_strlen
 29687  015676  C061  F063         	movff	strlen@s+1,??_strlen+1
 29688  01567A  0100               	movlb	0	; () banked
 29689  01567C  1F62               	comf	??_strlen& (0+255),f,b
 29690  01567E  1F63               	comf	(??_strlen+1)& (0+255),f,b
 29691  015680  4B62               	infsnz	??_strlen& (0+255),f,b
 29692  015682  2B63               	incf	(??_strlen+1)& (0+255),f,b
 29693  015684  5164               	movf	strlen@cp& (0+255),w,b
 29694  015686  2562               	addwf	??_strlen& (0+255),w,b
 29695  015688  6F60               	movwf	?_strlen& (0+255),b
 29696  01568A  5165               	movf	(strlen@cp+1)& (0+255),w,b
 29697  01568C  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 29698  01568E  6F61               	movwf	(?_strlen+1)& (0+255),b
 29699  015690  0012               	return	
 29700  015692                     __end_of_strlen:
 29701                           	opt stack 0
 29702                           tblptru	equ	0xFF8
 29703                           tblptrh	equ	0xFF7
 29704                           tblptrl	equ	0xFF6
 29705                           tablat	equ	0xFF5
 29706                           prodh	equ	0xFF4
 29707                           prodl	equ	0xFF3
 29708                           intcon	equ	0xFF2
 29709                           postinc0	equ	0xFEE
 29710                           wreg	equ	0xFE8
 29711                           indf1	equ	0xFE7
 29712                           postinc1	equ	0xFE6
 29713                           postdec1	equ	0xFE5
 29714                           plusw1	equ	0xFE3
 29715                           fsr1h	equ	0xFE2
 29716                           fsr1l	equ	0xFE1
 29717                           indf2	equ	0xFDF
 29718                           postinc2	equ	0xFDE
 29719                           postdec2	equ	0xFDD
 29720                           plusw2	equ	0xFDB
 29721                           fsr2h	equ	0xFDA
 29722                           fsr2l	equ	0xFD9
 29723                           status	equ	0xFD8
 29724                           
 29725 ;; *************** function _itoa *****************
 29726 ;; Defined at:
 29727 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 29728 ;; Parameters:    Size  Location     Type
 29729 ;;  buf             2   16[BANK0 ] PTR unsigned char 
 29730 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 29731 ;;  val             2   18[BANK0 ] int 
 29732 ;;  base            2   20[BANK0 ] int 
 29733 ;; Auto vars:     Size  Location     Type
 29734 ;;  cp              2   22[BANK0 ] PTR unsigned char 
 29735 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 29736 ;; Return value:  Size  Location     Type
 29737 ;;                  2   16[BANK0 ] PTR unsigned char 
 29738 ;; Registers used:
 29739 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29740 ;; Tracked objects:
 29741 ;;		On entry : 0/0
 29742 ;;		On exit  : 0/0
 29743 ;;		Unchanged: 0/0
 29744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29745 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29746 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29748 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29749 ;;Total ram usage:        8 bytes
 29750 ;; Hardware stack levels used:    1
 29751 ;; Hardware stack levels required when called:   12
 29752 ;; This function calls:
 29753 ;;		_utoa
 29754 ;; This function is called by:
 29755 ;;		__display_padded_itoa
 29756 ;;		__display_itoa
 29757 ;;		__display_itoa_u16
 29758 ;; This function uses a non-reentrant model
 29759 ;;
 29760                           
 29761                           	psect	text115
 29762  015508                     __ptext115:
 29763                           	opt stack 0
 29764  015508                     _itoa:
 29765                           	opt stack 14
 29766                           
 29767                           ; BSR set to: 0
 29768                           ;incstack = 0
 29769  015508  C070  F076         	movff	itoa@buf,itoa@cp
 29770  01550C  C071  F077         	movff	itoa@buf+1,itoa@cp+1
 29771  015510  0100               	movlb	0	; () banked
 29772  015512  AF73               	btfss	(itoa@val+1)& (0+255),7,b
 29773  015514  D00C               	goto	l3786
 29774                           
 29775                           ; BSR set to: 0
 29776  015516  C070  FFD9         	movff	itoa@buf,fsr2l
 29777  01551A  C071  FFDA         	movff	itoa@buf+1,fsr2h
 29778  01551E  0E2D               	movlw	45
 29779  015520  6EDF               	movwf	indf2,c
 29780                           
 29781                           ; BSR set to: 0
 29782  015522  4B70               	infsnz	itoa@buf& (0+255),f,b
 29783  015524  2B71               	incf	(itoa@buf+1)& (0+255),f,b
 29784                           
 29785                           ; BSR set to: 0
 29786  015526  6D72               	negf	itoa@val& (0+255),b
 29787  015528  1F73               	comf	(itoa@val+1)& (0+255),f,b
 29788  01552A  B0D8               	btfsc	status,0,c
 29789  01552C  2B73               	incf	(itoa@val+1)& (0+255),f,b
 29790  01552E                     l3786:
 29791                           
 29792                           ; BSR set to: 0
 29793                           
 29794                           ; BSR set to: 0
 29795  01552E  C070  F067         	movff	itoa@buf,utoa@buf
 29796  015532  C071  F068         	movff	itoa@buf+1,utoa@buf+1
 29797  015536  C072  F069         	movff	itoa@val,utoa@val
 29798  01553A  C073  F06A         	movff	itoa@val+1,utoa@val+1
 29799  01553E  C074  F06B         	movff	itoa@base,utoa@base
 29800  015542  C075  F06C         	movff	itoa@base+1,utoa@base+1
 29801  015546  ECDD  F099         	call	_utoa	;wreg free
 29802  01554A  0012               	return	
 29803  01554C                     __end_of_itoa:
 29804                           	opt stack 0
 29805                           tblptru	equ	0xFF8
 29806                           tblptrh	equ	0xFF7
 29807                           tblptrl	equ	0xFF6
 29808                           tablat	equ	0xFF5
 29809                           prodh	equ	0xFF4
 29810                           prodl	equ	0xFF3
 29811                           intcon	equ	0xFF2
 29812                           postinc0	equ	0xFEE
 29813                           wreg	equ	0xFE8
 29814                           indf1	equ	0xFE7
 29815                           postinc1	equ	0xFE6
 29816                           postdec1	equ	0xFE5
 29817                           plusw1	equ	0xFE3
 29818                           fsr1h	equ	0xFE2
 29819                           fsr1l	equ	0xFE1
 29820                           indf2	equ	0xFDF
 29821                           postinc2	equ	0xFDE
 29822                           postdec2	equ	0xFDD
 29823                           plusw2	equ	0xFDB
 29824                           fsr2h	equ	0xFDA
 29825                           fsr2l	equ	0xFD9
 29826                           status	equ	0xFD8
 29827                           
 29828 ;; *************** function _utoa *****************
 29829 ;; Defined at:
 29830 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 29831 ;; Parameters:    Size  Location     Type
 29832 ;;  buf             2    7[BANK0 ] PTR unsigned char 
 29833 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 29834 ;;  val             2    9[BANK0 ] unsigned int 
 29835 ;;  base            2   11[BANK0 ] int 
 29836 ;; Auto vars:     Size  Location     Type
 29837 ;;  v               2   13[BANK0 ] unsigned int 
 29838 ;;  c               1   15[BANK0 ] unsigned char 
 29839 ;; Return value:  Size  Location     Type
 29840 ;;                  2    7[BANK0 ] PTR unsigned char 
 29841 ;; Registers used:
 29842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29843 ;; Tracked objects:
 29844 ;;		On entry : 0/0
 29845 ;;		On exit  : 0/0
 29846 ;;		Unchanged: 0/0
 29847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29848 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29849 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29851 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29852 ;;Total ram usage:        9 bytes
 29853 ;; Hardware stack levels used:    1
 29854 ;; Hardware stack levels required when called:   11
 29855 ;; This function calls:
 29856 ;;		___lwdiv
 29857 ;;		___lwmod
 29858 ;; This function is called by:
 29859 ;;		_itoa
 29860 ;; This function uses a non-reentrant model
 29861 ;;
 29862                           
 29863                           	psect	text116
 29864  0133BA                     __ptext116:
 29865                           	opt stack 0
 29866  0133BA                     _utoa:
 29867                           	opt stack 14
 29868                           
 29869                           ;incstack = 0
 29870  0133BA  C069  F06D         	movff	utoa@val,utoa@v
 29871  0133BE  C06A  F06E         	movff	utoa@val+1,utoa@v+1
 29872  0133C2  C06D  F060         	movff	utoa@v,___lwdiv@dividend
 29873  0133C6  C06E  F061         	movff	utoa@v+1,___lwdiv@dividend+1
 29874  0133CA  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 29875  0133CE  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 29876  0133D2  ECEE  F0A7         	call	___lwdiv	;wreg free
 29877  0133D6  C060  F06D         	movff	?___lwdiv,utoa@v
 29878  0133DA  C061  F06E         	movff	?___lwdiv+1,utoa@v+1
 29879  0133DE  0100               	movlb	0	; () banked
 29880  0133E0  4B67               	infsnz	utoa@buf& (0+255),f,b
 29881  0133E2  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 29882                           
 29883                           ; BSR set to: 0
 29884  0133E4  516D               	movf	utoa@v& (0+255),w,b
 29885  0133E6  116E               	iorwf	(utoa@v+1)& (0+255),w,b
 29886  0133E8  A4D8               	btfss	status,2,c
 29887  0133EA  D7EB               	goto	l3790
 29888                           
 29889                           ; BSR set to: 0
 29890                           
 29891                           ; BSR set to: 0
 29892  0133EC  C067  FFD9         	movff	utoa@buf,fsr2l
 29893  0133F0  C068  FFDA         	movff	utoa@buf+1,fsr2h
 29894  0133F4  0E00               	movlw	0
 29895  0133F6  6EDF               	movwf	indf2,c
 29896                           
 29897                           ; BSR set to: 0
 29898  0133F8  0767               	decf	utoa@buf& (0+255),f,b
 29899  0133FA  A0D8               	btfss	status,0,c
 29900  0133FC  0768               	decf	(utoa@buf+1)& (0+255),f,b
 29901  0133FE                     
 29902                           ; BSR set to: 0
 29903                           
 29904                           ; BSR set to: 0
 29905  0133FE  C069  F060         	movff	utoa@val,___lwmod@dividend
 29906  013402  C06A  F061         	movff	utoa@val+1,___lwmod@dividend+1
 29907  013406  C06B  F062         	movff	utoa@base,___lwmod@divisor
 29908  01340A  C06C  F063         	movff	utoa@base+1,___lwmod@divisor+1
 29909  01340E  ECA6  F0AA         	call	___lwmod	;wreg free
 29910  013412  0100               	movlb	0	; () banked
 29911  013414  5160               	movf	?___lwmod& (0+255),w,b
 29912  013416  6F6F               	movwf	utoa@c& (0+255),b
 29913                           
 29914                           ; BSR set to: 0
 29915  013418  C069  F060         	movff	utoa@val,___lwdiv@dividend
 29916  01341C  C06A  F061         	movff	utoa@val+1,___lwdiv@dividend+1
 29917  013420  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 29918  013424  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 29919  013428  ECEE  F0A7         	call	___lwdiv	;wreg free
 29920  01342C  C060  F069         	movff	?___lwdiv,utoa@val
 29921  013430  C061  F06A         	movff	?___lwdiv+1,utoa@val+1
 29922  013434  0E09               	movlw	9
 29923  013436  0100               	movlb	0	; () banked
 29924  013438  656F               	cpfsgt	utoa@c& (0+255),b
 29925  01343A  D002               	goto	l3793
 29926                           
 29927                           ; BSR set to: 0
 29928  01343C  0E07               	movlw	7
 29929  01343E  276F               	addwf	utoa@c& (0+255),f,b
 29930  013440                     l3793:
 29931                           
 29932                           ; BSR set to: 0
 29933  013440  0E30               	movlw	48
 29934  013442  276F               	addwf	utoa@c& (0+255),f,b
 29935                           
 29936                           ; BSR set to: 0
 29937  013444  C067  FFD9         	movff	utoa@buf,fsr2l
 29938  013448  C068  FFDA         	movff	utoa@buf+1,fsr2h
 29939  01344C  C06F  FFDF         	movff	utoa@c,indf2
 29940                           
 29941                           ; BSR set to: 0
 29942  013450  0767               	decf	utoa@buf& (0+255),f,b
 29943  013452  A0D8               	btfss	status,0,c
 29944  013454  0768               	decf	(utoa@buf+1)& (0+255),f,b
 29945                           
 29946                           ; BSR set to: 0
 29947  013456  5169               	movf	utoa@val& (0+255),w,b
 29948  013458  116A               	iorwf	(utoa@val+1)& (0+255),w,b
 29949  01345A  A4D8               	btfss	status,2,c
 29950  01345C  D7D0               	goto	l3792
 29951                           
 29952                           ; BSR set to: 0
 29953                           ;	Return value of _utoa is never used
 29954                           
 29955                           ; BSR set to: 0
 29956  01345E  4B67               	infsnz	utoa@buf& (0+255),f,b
 29957  013460  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 29958  013462  0012               	return	
 29959  013464                     __end_of_utoa:
 29960                           	opt stack 0
 29961                           tblptru	equ	0xFF8
 29962                           tblptrh	equ	0xFF7
 29963                           tblptrl	equ	0xFF6
 29964                           tablat	equ	0xFF5
 29965                           prodh	equ	0xFF4
 29966                           prodl	equ	0xFF3
 29967                           intcon	equ	0xFF2
 29968                           postinc0	equ	0xFEE
 29969                           wreg	equ	0xFE8
 29970                           indf1	equ	0xFE7
 29971                           postinc1	equ	0xFE6
 29972                           postdec1	equ	0xFE5
 29973                           plusw1	equ	0xFE3
 29974                           fsr1h	equ	0xFE2
 29975                           fsr1l	equ	0xFE1
 29976                           indf2	equ	0xFDF
 29977                           postinc2	equ	0xFDE
 29978                           postdec2	equ	0xFDD
 29979                           plusw2	equ	0xFDB
 29980                           fsr2h	equ	0xFDA
 29981                           fsr2l	equ	0xFD9
 29982                           status	equ	0xFD8
 29983                           
 29984 ;; *************** function ___lwmod *****************
 29985 ;; Defined at:
 29986 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 29987 ;; Parameters:    Size  Location     Type
 29988 ;;  dividend        2    0[BANK0 ] unsigned int 
 29989 ;;  divisor         2    2[BANK0 ] unsigned int 
 29990 ;; Auto vars:     Size  Location     Type
 29991 ;;  counter         1    4[BANK0 ] unsigned char 
 29992 ;; Return value:  Size  Location     Type
 29993 ;;                  2    0[BANK0 ] unsigned int 
 29994 ;; Registers used:
 29995 ;;		wreg, status,2, status,0
 29996 ;; Tracked objects:
 29997 ;;		On entry : 0/0
 29998 ;;		On exit  : 0/0
 29999 ;;		Unchanged: 0/0
 30000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30001 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30002 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30004 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30005 ;;Total ram usage:        5 bytes
 30006 ;; Hardware stack levels used:    1
 30007 ;; Hardware stack levels required when called:   10
 30008 ;; This function calls:
 30009 ;;		Nothing
 30010 ;; This function is called by:
 30011 ;;		_utoa
 30012 ;; This function uses a non-reentrant model
 30013 ;;
 30014                           
 30015                           	psect	text117
 30016  01554C                     __ptext117:
 30017                           	opt stack 0
 30018  01554C                     ___lwmod:
 30019                           	opt stack 14
 30020                           
 30021                           ; BSR set to: 0
 30022                           ;incstack = 0
 30023  01554C  0100               	movlb	0	; () banked
 30024  01554E  5162               	movf	___lwmod@divisor& (0+255),w,b
 30025  015550  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 30026  015552  B4D8               	btfsc	status,2,c
 30027  015554  D018               	goto	l3583
 30028                           
 30029                           ; BSR set to: 0
 30030  015556  0E01               	movlw	1
 30031  015558  6F64               	movwf	___lwmod@counter& (0+255),b
 30032  01555A  D004               	goto	l3578
 30033  01555C                     
 30034                           ; BSR set to: 0
 30035                           
 30036                           ; BSR set to: 0
 30037  01555C  90D8               	bcf	status,0,c
 30038  01555E  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 30039  015560  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 30040  015562  2B64               	incf	___lwmod@counter& (0+255),f,b
 30041  015564                     l3578:
 30042                           
 30043                           ; BSR set to: 0
 30044                           
 30045                           ; BSR set to: 0
 30046  015564  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 30047  015566  D7FA               	goto	l3579
 30048  015568                     u11000:
 30049                           
 30050                           ; BSR set to: 0
 30051                           
 30052                           ; BSR set to: 0
 30053                           
 30054                           ; BSR set to: 0
 30055  015568  5162               	movf	___lwmod@divisor& (0+255),w,b
 30056  01556A  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 30057  01556C  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 30058  01556E  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 30059  015570  A0D8               	btfss	status,0,c
 30060  015572  D004               	goto	l3582
 30061                           
 30062                           ; BSR set to: 0
 30063  015574  5162               	movf	___lwmod@divisor& (0+255),w,b
 30064  015576  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 30065  015578  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 30066  01557A  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 30067  01557C                     l3582:
 30068                           
 30069                           ; BSR set to: 0
 30070                           
 30071                           ; BSR set to: 0
 30072  01557C  90D8               	bcf	status,0,c
 30073  01557E  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 30074  015580  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 30075                           
 30076                           ; BSR set to: 0
 30077  015582  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 30078  015584  D7F1               	goto	u11000
 30079  015586                     l3583:
 30080                           
 30081                           ; BSR set to: 0
 30082                           
 30083                           ; BSR set to: 0
 30084  015586  C060  F060         	movff	___lwmod@dividend,?___lwmod
 30085  01558A  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 30086                           
 30087                           ; BSR set to: 0
 30088  01558E  0012               	return		;funcret
 30089  015590                     __end_of___lwmod:
 30090                           	opt stack 0
 30091                           tblptru	equ	0xFF8
 30092                           tblptrh	equ	0xFF7
 30093                           tblptrl	equ	0xFF6
 30094                           tablat	equ	0xFF5
 30095                           prodh	equ	0xFF4
 30096                           prodl	equ	0xFF3
 30097                           intcon	equ	0xFF2
 30098                           postinc0	equ	0xFEE
 30099                           wreg	equ	0xFE8
 30100                           indf1	equ	0xFE7
 30101                           postinc1	equ	0xFE6
 30102                           postdec1	equ	0xFE5
 30103                           plusw1	equ	0xFE3
 30104                           fsr1h	equ	0xFE2
 30105                           fsr1l	equ	0xFE1
 30106                           indf2	equ	0xFDF
 30107                           postinc2	equ	0xFDE
 30108                           postdec2	equ	0xFDD
 30109                           plusw2	equ	0xFDB
 30110                           fsr2h	equ	0xFDA
 30111                           fsr2l	equ	0xFD9
 30112                           status	equ	0xFD8
 30113                           
 30114 ;; *************** function ___lwdiv *****************
 30115 ;; Defined at:
 30116 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 30117 ;; Parameters:    Size  Location     Type
 30118 ;;  dividend        2    0[BANK0 ] unsigned int 
 30119 ;;  divisor         2    2[BANK0 ] unsigned int 
 30120 ;; Auto vars:     Size  Location     Type
 30121 ;;  quotient        2    4[BANK0 ] unsigned int 
 30122 ;;  counter         1    6[BANK0 ] unsigned char 
 30123 ;; Return value:  Size  Location     Type
 30124 ;;                  2    0[BANK0 ] unsigned int 
 30125 ;; Registers used:
 30126 ;;		wreg, status,2, status,0
 30127 ;; Tracked objects:
 30128 ;;		On entry : 0/0
 30129 ;;		On exit  : 0/0
 30130 ;;		Unchanged: 0/0
 30131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30132 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30133 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30135 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30136 ;;Total ram usage:        7 bytes
 30137 ;; Hardware stack levels used:    1
 30138 ;; Hardware stack levels required when called:   10
 30139 ;; This function calls:
 30140 ;;		Nothing
 30141 ;; This function is called by:
 30142 ;;		_utoa
 30143 ;; This function uses a non-reentrant model
 30144 ;;
 30145                           
 30146                           	psect	text118
 30147  014FDC                     __ptext118:
 30148                           	opt stack 0
 30149  014FDC                     ___lwdiv:
 30150                           	opt stack 14
 30151                           
 30152                           ; BSR set to: 0
 30153                           ;incstack = 0
 30154  014FDC  0E00               	movlw	0
 30155  014FDE  0100               	movlb	0	; () banked
 30156  014FE0  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
 30157  014FE2  0E00               	movlw	0
 30158  014FE4  6F64               	movwf	___lwdiv@quotient& (0+255),b
 30159                           
 30160                           ; BSR set to: 0
 30161  014FE6  5162               	movf	___lwdiv@divisor& (0+255),w,b
 30162  014FE8  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 30163  014FEA  B4D8               	btfsc	status,2,c
 30164  014FEC  D01C               	goto	l3573
 30165                           
 30166                           ; BSR set to: 0
 30167  014FEE  0E01               	movlw	1
 30168  014FF0  6F66               	movwf	___lwdiv@counter& (0+255),b
 30169  014FF2  D004               	goto	l3568
 30170  014FF4                     
 30171                           ; BSR set to: 0
 30172                           
 30173                           ; BSR set to: 0
 30174  014FF4  90D8               	bcf	status,0,c
 30175  014FF6  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 30176  014FF8  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 30177  014FFA  2B66               	incf	___lwdiv@counter& (0+255),f,b
 30178  014FFC                     l3568:
 30179                           
 30180                           ; BSR set to: 0
 30181                           
 30182                           ; BSR set to: 0
 30183  014FFC  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 30184  014FFE  D7FA               	goto	l3569
 30185  015000                     u10970:
 30186                           
 30187                           ; BSR set to: 0
 30188                           
 30189                           ; BSR set to: 0
 30190                           
 30191                           ; BSR set to: 0
 30192  015000  90D8               	bcf	status,0,c
 30193  015002  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
 30194  015004  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 30195                           
 30196                           ; BSR set to: 0
 30197  015006  5162               	movf	___lwdiv@divisor& (0+255),w,b
 30198  015008  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 30199  01500A  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 30200  01500C  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 30201  01500E  A0D8               	btfss	status,0,c
 30202  015010  D005               	goto	l3572
 30203                           
 30204                           ; BSR set to: 0
 30205  015012  5162               	movf	___lwdiv@divisor& (0+255),w,b
 30206  015014  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 30207  015016  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 30208  015018  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 30209                           
 30210                           ; BSR set to: 0
 30211  01501A  8164               	bsf	___lwdiv@quotient& (0+255),0,b
 30212  01501C                     l3572:
 30213                           
 30214                           ; BSR set to: 0
 30215                           
 30216                           ; BSR set to: 0
 30217  01501C  90D8               	bcf	status,0,c
 30218  01501E  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 30219  015020  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 30220                           
 30221                           ; BSR set to: 0
 30222  015022  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
 30223  015024  D7ED               	goto	u10970
 30224  015026                     l3573:
 30225                           
 30226                           ; BSR set to: 0
 30227                           
 30228                           ; BSR set to: 0
 30229  015026  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
 30230  01502A  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 30231                           
 30232                           ; BSR set to: 0
 30233  01502E  0012               	return		;funcret
 30234  015030                     __end_of___lwdiv:
 30235                           	opt stack 0
 30236                           tblptru	equ	0xFF8
 30237                           tblptrh	equ	0xFF7
 30238                           tblptrl	equ	0xFF6
 30239                           tablat	equ	0xFF5
 30240                           prodh	equ	0xFF4
 30241                           prodl	equ	0xFF3
 30242                           intcon	equ	0xFF2
 30243                           postinc0	equ	0xFEE
 30244                           wreg	equ	0xFE8
 30245                           indf1	equ	0xFE7
 30246                           postinc1	equ	0xFE6
 30247                           postdec1	equ	0xFE5
 30248                           plusw1	equ	0xFE3
 30249                           fsr1h	equ	0xFE2
 30250                           fsr1l	equ	0xFE1
 30251                           indf2	equ	0xFDF
 30252                           postinc2	equ	0xFDE
 30253                           postdec2	equ	0xFDD
 30254                           plusw2	equ	0xFDB
 30255                           fsr2h	equ	0xFDA
 30256                           fsr2l	equ	0xFD9
 30257                           status	equ	0xFD8
 30258                           
 30259 ;; *************** function ___almod *****************
 30260 ;; Defined at:
 30261 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\almod.c"
 30262 ;; Parameters:    Size  Location     Type
 30263 ;;  dividend        4    0[BANK0 ] long 
 30264 ;;  divisor         4    4[BANK0 ] long 
 30265 ;; Auto vars:     Size  Location     Type
 30266 ;;  sign            1    9[BANK0 ] unsigned char 
 30267 ;;  counter         1    8[BANK0 ] unsigned char 
 30268 ;; Return value:  Size  Location     Type
 30269 ;;                  4    0[BANK0 ] long 
 30270 ;; Registers used:
 30271 ;;		wreg, status,2, status,0
 30272 ;; Tracked objects:
 30273 ;;		On entry : 0/0
 30274 ;;		On exit  : 0/0
 30275 ;;		Unchanged: 0/0
 30276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30277 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30278 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30280 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30281 ;;Total ram usage:       10 bytes
 30282 ;; Hardware stack levels used:    1
 30283 ;; Hardware stack levels required when called:   10
 30284 ;; This function calls:
 30285 ;;		Nothing
 30286 ;; This function is called by:
 30287 ;;		__display_itoa_long
 30288 ;; This function uses a non-reentrant model
 30289 ;;
 30290                           
 30291                           	psect	text119
 30292  01330C                     __ptext119:
 30293                           	opt stack 0
 30294  01330C                     ___almod:
 30295                           	opt stack 18
 30296                           
 30297                           ; BSR set to: 0
 30298                           ;incstack = 0
 30299  01330C  0E00               	movlw	0
 30300  01330E  0100               	movlb	0	; () banked
 30301  013310  6F69               	movwf	___almod@sign& (0+255),b
 30302                           
 30303                           ; BSR set to: 0
 30304  013312  AF63               	btfss	(___almod@dividend+3)& (0+255),7,b
 30305  013314  D00A               	goto	l3170
 30306                           
 30307                           ; BSR set to: 0
 30308  013316  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 30309  013318  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 30310  01331A  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 30311  01331C  6D60               	negf	___almod@dividend& (0+255),b
 30312  01331E  0E00               	movlw	0
 30313  013320  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 30314  013322  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 30315  013324  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 30316                           
 30317                           ; BSR set to: 0
 30318  013326  0E01               	movlw	1
 30319  013328  6F69               	movwf	___almod@sign& (0+255),b
 30320  01332A                     l3170:
 30321                           
 30322                           ; BSR set to: 0
 30323                           
 30324                           ; BSR set to: 0
 30325  01332A  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 30326  01332C  D008               	goto	l3171
 30327                           
 30328                           ; BSR set to: 0
 30329  01332E  1F67               	comf	(___almod@divisor+3)& (0+255),f,b
 30330  013330  1F66               	comf	(___almod@divisor+2)& (0+255),f,b
 30331  013332  1F65               	comf	(___almod@divisor+1)& (0+255),f,b
 30332  013334  6D64               	negf	___almod@divisor& (0+255),b
 30333  013336  0E00               	movlw	0
 30334  013338  2365               	addwfc	(___almod@divisor+1)& (0+255),f,b
 30335  01333A  2366               	addwfc	(___almod@divisor+2)& (0+255),f,b
 30336  01333C  2367               	addwfc	(___almod@divisor+3)& (0+255),f,b
 30337  01333E                     l3171:
 30338                           
 30339                           ; BSR set to: 0
 30340                           
 30341                           ; BSR set to: 0
 30342  01333E  5164               	movf	___almod@divisor& (0+255),w,b
 30343  013340  1165               	iorwf	(___almod@divisor+1)& (0+255),w,b
 30344  013342  1166               	iorwf	(___almod@divisor+2)& (0+255),w,b
 30345  013344  1167               	iorwf	(___almod@divisor+3)& (0+255),w,b
 30346  013346  B4D8               	btfsc	status,2,c
 30347  013348  D024               	goto	l3178
 30348                           
 30349                           ; BSR set to: 0
 30350  01334A  0E01               	movlw	1
 30351  01334C  6F68               	movwf	___almod@counter& (0+255),b
 30352  01334E  D006               	goto	l3173
 30353  013350                     
 30354                           ; BSR set to: 0
 30355                           
 30356                           ; BSR set to: 0
 30357  013350  90D8               	bcf	status,0,c
 30358  013352  3764               	rlcf	___almod@divisor& (0+255),f,b
 30359  013354  3765               	rlcf	(___almod@divisor+1)& (0+255),f,b
 30360  013356  3766               	rlcf	(___almod@divisor+2)& (0+255),f,b
 30361  013358  3767               	rlcf	(___almod@divisor+3)& (0+255),f,b
 30362  01335A  2B68               	incf	___almod@counter& (0+255),f,b
 30363  01335C                     l3173:
 30364                           
 30365                           ; BSR set to: 0
 30366                           
 30367                           ; BSR set to: 0
 30368  01335C  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 30369  01335E  D7F8               	goto	l3174
 30370  013360                     u16150:
 30371                           
 30372                           ; BSR set to: 0
 30373                           
 30374                           ; BSR set to: 0
 30375                           
 30376                           ; BSR set to: 0
 30377  013360  5164               	movf	___almod@divisor& (0+255),w,b
 30378  013362  5D60               	subwf	___almod@dividend& (0+255),w,b
 30379  013364  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 30380  013366  5961               	subwfb	(___almod@dividend+1)& (0+255),w,b
 30381  013368  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 30382  01336A  5962               	subwfb	(___almod@dividend+2)& (0+255),w,b
 30383  01336C  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 30384  01336E  5963               	subwfb	(___almod@dividend+3)& (0+255),w,b
 30385  013370  A0D8               	btfss	status,0,c
 30386  013372  D008               	goto	l3177
 30387                           
 30388                           ; BSR set to: 0
 30389  013374  5164               	movf	___almod@divisor& (0+255),w,b
 30390  013376  5F60               	subwf	___almod@dividend& (0+255),f,b
 30391  013378  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 30392  01337A  5B61               	subwfb	(___almod@dividend+1)& (0+255),f,b
 30393  01337C  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 30394  01337E  5B62               	subwfb	(___almod@dividend+2)& (0+255),f,b
 30395  013380  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 30396  013382  5B63               	subwfb	(___almod@dividend+3)& (0+255),f,b
 30397  013384                     l3177:
 30398                           
 30399                           ; BSR set to: 0
 30400                           
 30401                           ; BSR set to: 0
 30402  013384  90D8               	bcf	status,0,c
 30403  013386  3367               	rrcf	(___almod@divisor+3)& (0+255),f,b
 30404  013388  3366               	rrcf	(___almod@divisor+2)& (0+255),f,b
 30405  01338A  3365               	rrcf	(___almod@divisor+1)& (0+255),f,b
 30406  01338C  3364               	rrcf	___almod@divisor& (0+255),f,b
 30407                           
 30408                           ; BSR set to: 0
 30409  01338E  2F68               	decfsz	___almod@counter& (0+255),f,b
 30410  013390  D7E7               	goto	u16150
 30411  013392                     l3178:
 30412                           
 30413                           ; BSR set to: 0
 30414                           
 30415                           ; BSR set to: 0
 30416                           
 30417                           ; BSR set to: 0
 30418  013392  5169               	movf	___almod@sign& (0+255),w,b
 30419  013394  B4D8               	btfsc	status,2,c
 30420  013396  D008               	goto	l3179
 30421                           
 30422                           ; BSR set to: 0
 30423  013398  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 30424  01339A  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 30425  01339C  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 30426  01339E  6D60               	negf	___almod@dividend& (0+255),b
 30427  0133A0  0E00               	movlw	0
 30428  0133A2  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 30429  0133A4  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 30430  0133A6  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 30431  0133A8                     l3179:
 30432                           
 30433                           ; BSR set to: 0
 30434                           
 30435                           ; BSR set to: 0
 30436  0133A8  C060  F060         	movff	___almod@dividend,?___almod
 30437  0133AC  C061  F061         	movff	___almod@dividend+1,?___almod+1
 30438  0133B0  C062  F062         	movff	___almod@dividend+2,?___almod+2
 30439  0133B4  C063  F063         	movff	___almod@dividend+3,?___almod+3
 30440  0133B8  0012               	return	
 30441  0133BA                     __end_of___almod:
 30442                           	opt stack 0
 30443                           tblptru	equ	0xFF8
 30444                           tblptrh	equ	0xFF7
 30445                           tblptrl	equ	0xFF6
 30446                           tablat	equ	0xFF5
 30447                           prodh	equ	0xFF4
 30448                           prodl	equ	0xFF3
 30449                           intcon	equ	0xFF2
 30450                           postinc0	equ	0xFEE
 30451                           wreg	equ	0xFE8
 30452                           indf1	equ	0xFE7
 30453                           postinc1	equ	0xFE6
 30454                           postdec1	equ	0xFE5
 30455                           plusw1	equ	0xFE3
 30456                           fsr1h	equ	0xFE2
 30457                           fsr1l	equ	0xFE1
 30458                           indf2	equ	0xFDF
 30459                           postinc2	equ	0xFDE
 30460                           postdec2	equ	0xFDD
 30461                           plusw2	equ	0xFDB
 30462                           fsr2h	equ	0xFDA
 30463                           fsr2l	equ	0xFD9
 30464                           status	equ	0xFD8
 30465                           
 30466 ;; *************** function ___aldiv *****************
 30467 ;; Defined at:
 30468 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
 30469 ;; Parameters:    Size  Location     Type
 30470 ;;  dividend        4    0[BANK0 ] long 
 30471 ;;  divisor         4    4[BANK0 ] long 
 30472 ;; Auto vars:     Size  Location     Type
 30473 ;;  quotient        4   10[BANK0 ] long 
 30474 ;;  sign            1    9[BANK0 ] unsigned char 
 30475 ;;  counter         1    8[BANK0 ] unsigned char 
 30476 ;; Return value:  Size  Location     Type
 30477 ;;                  4    0[BANK0 ] long 
 30478 ;; Registers used:
 30479 ;;		wreg, status,2, status,0
 30480 ;; Tracked objects:
 30481 ;;		On entry : 0/0
 30482 ;;		On exit  : 0/0
 30483 ;;		Unchanged: 0/0
 30484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30485 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30486 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30488 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30489 ;;Total ram usage:       14 bytes
 30490 ;; Hardware stack levels used:    1
 30491 ;; Hardware stack levels required when called:   10
 30492 ;; This function calls:
 30493 ;;		Nothing
 30494 ;; This function is called by:
 30495 ;;		__display_itoa_long
 30496 ;; This function uses a non-reentrant model
 30497 ;;
 30498                           
 30499                           	psect	text120
 30500  012BB6                     __ptext120:
 30501                           	opt stack 0
 30502  012BB6                     ___aldiv:
 30503                           	opt stack 18
 30504                           
 30505                           ; BSR set to: 0
 30506                           ;incstack = 0
 30507  012BB6  0E00               	movlw	0
 30508  012BB8  0100               	movlb	0	; () banked
 30509  012BBA  6F69               	movwf	___aldiv@sign& (0+255),b
 30510                           
 30511                           ; BSR set to: 0
 30512  012BBC  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 30513  012BBE  D00A               	goto	l3157
 30514                           
 30515                           ; BSR set to: 0
 30516  012BC0  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
 30517  012BC2  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
 30518  012BC4  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
 30519  012BC6  6D64               	negf	___aldiv@divisor& (0+255),b
 30520  012BC8  0E00               	movlw	0
 30521  012BCA  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 30522  012BCC  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 30523  012BCE  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 30524                           
 30525                           ; BSR set to: 0
 30526  012BD0  0E01               	movlw	1
 30527  012BD2  6F69               	movwf	___aldiv@sign& (0+255),b
 30528  012BD4                     l3157:
 30529                           
 30530                           ; BSR set to: 0
 30531                           
 30532                           ; BSR set to: 0
 30533  012BD4  AF63               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 30534  012BD6  D00A               	goto	l3158
 30535                           
 30536                           ; BSR set to: 0
 30537  012BD8  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
 30538  012BDA  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
 30539  012BDC  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
 30540  012BDE  6D60               	negf	___aldiv@dividend& (0+255),b
 30541  012BE0  0E00               	movlw	0
 30542  012BE2  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 30543  012BE4  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 30544  012BE6  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 30545                           
 30546                           ; BSR set to: 0
 30547  012BE8  0E01               	movlw	1
 30548  012BEA  1B69               	xorwf	___aldiv@sign& (0+255),f,b
 30549  012BEC                     l3158:
 30550                           
 30551                           ; BSR set to: 0
 30552                           
 30553                           ; BSR set to: 0
 30554  012BEC  0E00               	movlw	0
 30555  012BEE  6F6A               	movwf	___aldiv@quotient& (0+255),b
 30556  012BF0  0E00               	movlw	0
 30557  012BF2  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
 30558  012BF4  0E00               	movlw	0
 30559  012BF6  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
 30560  012BF8  0E00               	movlw	0
 30561  012BFA  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
 30562                           
 30563                           ; BSR set to: 0
 30564  012BFC  5164               	movf	___aldiv@divisor& (0+255),w,b
 30565  012BFE  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 30566  012C00  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 30567  012C02  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 30568  012C04  B4D8               	btfsc	status,2,c
 30569  012C06  D02A               	goto	l3165
 30570                           
 30571                           ; BSR set to: 0
 30572  012C08  0E01               	movlw	1
 30573  012C0A  6F68               	movwf	___aldiv@counter& (0+255),b
 30574  012C0C  D006               	goto	l3160
 30575  012C0E                     
 30576                           ; BSR set to: 0
 30577                           
 30578                           ; BSR set to: 0
 30579  012C0E  90D8               	bcf	status,0,c
 30580  012C10  3764               	rlcf	___aldiv@divisor& (0+255),f,b
 30581  012C12  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 30582  012C14  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 30583  012C16  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 30584  012C18  2B68               	incf	___aldiv@counter& (0+255),f,b
 30585  012C1A                     l3160:
 30586                           
 30587                           ; BSR set to: 0
 30588                           
 30589                           ; BSR set to: 0
 30590  012C1A  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 30591  012C1C  D7F8               	goto	l3161
 30592  012C1E                     u16090:
 30593                           
 30594                           ; BSR set to: 0
 30595                           
 30596                           ; BSR set to: 0
 30597                           
 30598                           ; BSR set to: 0
 30599  012C1E  90D8               	bcf	status,0,c
 30600  012C20  376A               	rlcf	___aldiv@quotient& (0+255),f,b
 30601  012C22  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 30602  012C24  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 30603  012C26  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 30604                           
 30605                           ; BSR set to: 0
 30606  012C28  5164               	movf	___aldiv@divisor& (0+255),w,b
 30607  012C2A  5D60               	subwf	___aldiv@dividend& (0+255),w,b
 30608  012C2C  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 30609  012C2E  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 30610  012C30  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 30611  012C32  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 30612  012C34  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 30613  012C36  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 30614  012C38  A0D8               	btfss	status,0,c
 30615  012C3A  D009               	goto	l3164
 30616                           
 30617                           ; BSR set to: 0
 30618  012C3C  5164               	movf	___aldiv@divisor& (0+255),w,b
 30619  012C3E  5F60               	subwf	___aldiv@dividend& (0+255),f,b
 30620  012C40  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 30621  012C42  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 30622  012C44  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 30623  012C46  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 30624  012C48  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 30625  012C4A  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 30626                           
 30627                           ; BSR set to: 0
 30628  012C4C  816A               	bsf	___aldiv@quotient& (0+255),0,b
 30629  012C4E                     l3164:
 30630                           
 30631                           ; BSR set to: 0
 30632                           
 30633                           ; BSR set to: 0
 30634  012C4E  90D8               	bcf	status,0,c
 30635  012C50  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 30636  012C52  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 30637  012C54  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 30638  012C56  3364               	rrcf	___aldiv@divisor& (0+255),f,b
 30639                           
 30640                           ; BSR set to: 0
 30641  012C58  2F68               	decfsz	___aldiv@counter& (0+255),f,b
 30642  012C5A  D7E1               	goto	u16090
 30643  012C5C                     l3165:
 30644                           
 30645                           ; BSR set to: 0
 30646                           
 30647                           ; BSR set to: 0
 30648                           
 30649                           ; BSR set to: 0
 30650  012C5C  5169               	movf	___aldiv@sign& (0+255),w,b
 30651  012C5E  B4D8               	btfsc	status,2,c
 30652  012C60  D008               	goto	l3166
 30653                           
 30654                           ; BSR set to: 0
 30655  012C62  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
 30656  012C64  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
 30657  012C66  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
 30658  012C68  6D6A               	negf	___aldiv@quotient& (0+255),b
 30659  012C6A  0E00               	movlw	0
 30660  012C6C  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 30661  012C6E  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 30662  012C70  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 30663  012C72                     l3166:
 30664                           
 30665                           ; BSR set to: 0
 30666                           
 30667                           ; BSR set to: 0
 30668  012C72  C06A  F060         	movff	___aldiv@quotient,?___aldiv
 30669  012C76  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
 30670  012C7A  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
 30671  012C7E  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
 30672  012C82  0012               	return	
 30673  012C84                     __end_of___aldiv:
 30674                           	opt stack 0
 30675                           tblptru	equ	0xFF8
 30676                           tblptrh	equ	0xFF7
 30677                           tblptrl	equ	0xFF6
 30678                           tablat	equ	0xFF5
 30679                           prodh	equ	0xFF4
 30680                           prodl	equ	0xFF3
 30681                           intcon	equ	0xFF2
 30682                           postinc0	equ	0xFEE
 30683                           wreg	equ	0xFE8
 30684                           indf1	equ	0xFE7
 30685                           postinc1	equ	0xFE6
 30686                           postdec1	equ	0xFE5
 30687                           plusw1	equ	0xFE3
 30688                           fsr1h	equ	0xFE2
 30689                           fsr1l	equ	0xFE1
 30690                           indf2	equ	0xFDF
 30691                           postinc2	equ	0xFDE
 30692                           postdec2	equ	0xFDD
 30693                           plusw2	equ	0xFDB
 30694                           fsr2h	equ	0xFDA
 30695                           fsr2l	equ	0xFD9
 30696                           status	equ	0xFD8
 30697                           
 30698 ;; *************** function __display_clear *****************
 30699 ;; Defined at:
 30700 ;;		line 86 in file "display.c"
 30701 ;; Parameters:    Size  Location     Type
 30702 ;;		None
 30703 ;; Auto vars:     Size  Location     Type
 30704 ;;  col             1    3[BANK0 ] unsigned char 
 30705 ;;  row             1    2[BANK0 ] unsigned char 
 30706 ;; Return value:  Size  Location     Type
 30707 ;;                  1    wreg      void 
 30708 ;; Registers used:
 30709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30710 ;; Tracked objects:
 30711 ;;		On entry : 0/0
 30712 ;;		On exit  : 0/0
 30713 ;;		Unchanged: 0/0
 30714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30716 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30717 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30718 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30719 ;;Total ram usage:        4 bytes
 30720 ;; Hardware stack levels used:    1
 30721 ;; Hardware stack levels required when called:   10
 30722 ;; This function calls:
 30723 ;;		Nothing
 30724 ;; This function is called by:
 30725 ;;		_display_prepare
 30726 ;; This function uses a non-reentrant model
 30727 ;;
 30728                           
 30729                           	psect	text121
 30730  0153EA                     __ptext121:
 30731                           	opt stack 0
 30732  0153EA                     __display_clear:
 30733                           	opt stack 19
 30734                           
 30735                           ;display.c: 88: uint8_t row;;display.c: 89: uint8_t col;;display.c: 90: for(row=0;row<4;
      +                          ++row)
 30736                           
 30737                           ; BSR set to: 0
 30738                           ;incstack = 0
 30739  0153EA  0E00               	movlw	0
 30740  0153EC  0100               	movlb	0	; () banked
 30741  0153EE  6F62               	movwf	__display_clear@row& (0+255),b
 30742  0153F0                     l17542:
 30743                           
 30744                           ; BSR set to: 0
 30745  0153F0  0E03               	movlw	3
 30746  0153F2  6562               	cpfsgt	__display_clear@row& (0+255),b
 30747  0153F4  D001               	goto	l1324
 30748  0153F6  0012               	return	
 30749  0153F8                     l1324:
 30750                           
 30751                           ; BSR set to: 0
 30752                           ;display.c: 91: {;display.c: 92: for(col=0;col<20;++col)
 30753                           
 30754                           ; BSR set to: 0
 30755  0153F8  0E00               	movlw	0
 30756  0153FA  6F63               	movwf	__display_clear@col& (0+255),b
 30757  0153FC                     l17548:
 30758                           
 30759                           ; BSR set to: 0
 30760  0153FC  0E13               	movlw	19
 30761  0153FE  6563               	cpfsgt	__display_clear@col& (0+255),b
 30762  015400  D001               	goto	l1326
 30763  015402  D016               	goto	u17020
 30764  015404                     l1326:
 30765                           
 30766                           ; BSR set to: 0
 30767                           ;display.c: 93: {;display.c: 94: display_content[row][col] = ' ';
 30768                           
 30769                           ; BSR set to: 0
 30770  015404  5162               	movf	__display_clear@row& (0+255),w,b
 30771  015406  0D14               	mullw	20
 30772  015408  0E44               	movlw	low _display_content
 30773  01540A  6F60               	movwf	??__display_clear& (0+255),b
 30774  01540C  0E02               	movlw	high _display_content
 30775  01540E  6F61               	movwf	(??__display_clear+1)& (0+255),b
 30776  015410  50F3               	movf	prodl,w,c
 30777  015412  2760               	addwf	??__display_clear& (0+255),f,b
 30778  015414  50F4               	movf	prodh,w,c
 30779  015416  2361               	addwfc	(??__display_clear+1)& (0+255),f,b
 30780  015418  5163               	movf	__display_clear@col& (0+255),w,b
 30781  01541A  0D01               	mullw	1
 30782  01541C  50F3               	movf	prodl,w,c
 30783  01541E  2560               	addwf	??__display_clear& (0+255),w,b
 30784  015420  6ED9               	movwf	fsr2l,c
 30785  015422  50F4               	movf	prodh,w,c
 30786  015424  2161               	addwfc	(??__display_clear+1)& (0+255),w,b
 30787  015426  6EDA               	movwf	fsr2h,c
 30788  015428  0E20               	movlw	32
 30789  01542A  6EDF               	movwf	indf2,c
 30790                           
 30791                           ; BSR set to: 0
 30792  01542C  2B63               	incf	__display_clear@col& (0+255),f,b
 30793  01542E  D7E6               	goto	l17548
 30794  015430                     u17020:
 30795                           
 30796                           ; BSR set to: 0
 30797                           
 30798                           ; BSR set to: 0
 30799  015430  2B62               	incf	__display_clear@row& (0+255),f,b
 30800  015432  D7DE               	goto	l17542
 30801  015434                     __end_of__display_clear:
 30802                           	opt stack 0
 30803                           tblptru	equ	0xFF8
 30804                           tblptrh	equ	0xFF7
 30805                           tblptrl	equ	0xFF6
 30806                           tablat	equ	0xFF5
 30807                           prodh	equ	0xFF4
 30808                           prodl	equ	0xFF3
 30809                           intcon	equ	0xFF2
 30810                           postinc0	equ	0xFEE
 30811                           wreg	equ	0xFE8
 30812                           indf1	equ	0xFE7
 30813                           postinc1	equ	0xFE6
 30814                           postdec1	equ	0xFE5
 30815                           plusw1	equ	0xFE3
 30816                           fsr1h	equ	0xFE2
 30817                           fsr1l	equ	0xFE1
 30818                           indf2	equ	0xFDF
 30819                           postinc2	equ	0xFDE
 30820                           postdec2	equ	0xFDD
 30821                           plusw2	equ	0xFDB
 30822                           fsr2h	equ	0xFDA
 30823                           fsr2l	equ	0xFD9
 30824                           status	equ	0xFD8
 30825                           
 30826 ;; *************** function _adc_read_temperature *****************
 30827 ;; Defined at:
 30828 ;;		line 44 in file "adc.c"
 30829 ;; Parameters:    Size  Location     Type
 30830 ;;		None
 30831 ;; Auto vars:     Size  Location     Type
 30832 ;;  temperature     4   53[BANK0 ] float 
 30833 ;;  adc_result      2   51[BANK0 ] unsigned int 
 30834 ;; Return value:  Size  Location     Type
 30835 ;;                  1    wreg      void 
 30836 ;; Registers used:
 30837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30838 ;; Tracked objects:
 30839 ;;		On entry : 0/0
 30840 ;;		On exit  : 0/0
 30841 ;;		Unchanged: 0/0
 30842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30844 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30845 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30846 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30847 ;;Total ram usage:        8 bytes
 30848 ;; Hardware stack levels used:    1
 30849 ;; Hardware stack levels required when called:   11
 30850 ;; This function calls:
 30851 ;;		___fladd
 30852 ;;		___flmul
 30853 ;;		___flneg
 30854 ;;		___fltol
 30855 ;;		___xxtofl
 30856 ;; This function is called by:
 30857 ;;		_main
 30858 ;; This function uses a non-reentrant model
 30859 ;;
 30860                           
 30861                           	psect	text122
 30862  00EAC6                     __ptext122:
 30863                           	opt stack 0
 30864  00EAC6                     _adc_read_temperature:
 30865                           	opt stack 19
 30866                           
 30867                           ;adc.c: 46: uint16_t adc_result;;adc.c: 47: float temperature;;adc.c: 50: adc_result = A
      +                          DRESH;
 30868                           
 30869                           ; BSR set to: 0
 30870                           ;incstack = 0
 30871  00EAC6  CFC4 F093          	movff	4036,adc_read_temperature@adc_result	;volatile
 30872  00EACA  0100               	movlb	0	; () banked
 30873  00EACC  6B94               	clrf	(adc_read_temperature@adc_result+1)& (0+255),b
 30874                           
 30875                           ; BSR set to: 0
 30876                           ;adc.c: 51: adc_result <<= 8;
 30877  00EACE  5193               	movf	adc_read_temperature@adc_result& (0+255),w,b
 30878  00EAD0  6F94               	movwf	(adc_read_temperature@adc_result+1)& (0+255),b
 30879  00EAD2  6B93               	clrf	adc_read_temperature@adc_result& (0+255),b
 30880                           
 30881                           ; BSR set to: 0
 30882                           ;adc.c: 52: adc_result |= ADRESL;
 30883  00EAD4  50C3               	movf	4035,w,c	;volatile
 30884  00EAD6  1393               	iorwf	adc_read_temperature@adc_result& (0+255),f,b
 30885                           
 30886                           ; BSR set to: 0
 30887                           ;adc.c: 55: params.temperature_adc_sum[params.temperature_source] += adc_result;
 30888  00EAD8  0102               	movlb	2	; () banked
 30889  00EADA  5131               	movf	_params& (0+255),w,b
 30890  00EADC  0D02               	mullw	2
 30891  00EADE  0E32               	movlw	low (_params+1)
 30892  00EAE0  24F3               	addwf	prodl,w,c
 30893  00EAE2  6ED9               	movwf	fsr2l,c
 30894  00EAE4  0E02               	movlw	high (_params+1)
 30895  00EAE6  20F4               	addwfc	prodh,w,c
 30896  00EAE8  6EDA               	movwf	fsr2h,c
 30897  00EAEA  0100               	movlb	0	; () banked
 30898  00EAEC  5193               	movf	adc_read_temperature@adc_result& (0+255),w,b
 30899  00EAEE  26DE               	addwf	postinc2,f,c
 30900  00EAF0  5194               	movf	(adc_read_temperature@adc_result+1)& (0+255),w,b
 30901  00EAF2  22DD               	addwfc	postdec2,f,c
 30902                           
 30903                           ; BSR set to: 0
 30904                           ;adc.c: 56: ++params.temperature_count[params.temperature_source];
 30905  00EAF4  0102               	movlb	2	; () banked
 30906  00EAF6  5131               	movf	_params& (0+255),w,b
 30907  00EAF8  0D01               	mullw	1
 30908  00EAFA  0E36               	movlw	low (_params+5)
 30909  00EAFC  24F3               	addwf	prodl,w,c
 30910  00EAFE  6ED9               	movwf	fsr2l,c
 30911  00EB00  0E02               	movlw	high (_params+5)
 30912  00EB02  20F4               	addwfc	prodh,w,c
 30913  00EB04  6EDA               	movwf	fsr2h,c
 30914  00EB06  2ADF               	incf	indf2,f,c
 30915                           
 30916                           ; BSR set to: 2
 30917                           ;adc.c: 59: ADCON0bits.GO = 1;
 30918  00EB08  82C2               	bsf	4034,1,c	;volatile
 30919                           
 30920                           ; BSR set to: 2
 30921                           ;adc.c: 62: if(params.temperature_count[params.temperature_source]==8)
 30922  00EB0A  5131               	movf	_params& (0+255),w,b
 30923  00EB0C  0D01               	mullw	1
 30924  00EB0E  0E36               	movlw	low (_params+5)
 30925  00EB10  24F3               	addwf	prodl,w,c
 30926  00EB12  6ED9               	movwf	fsr2l,c
 30927  00EB14  0E02               	movlw	high (_params+5)
 30928  00EB16  20F4               	addwfc	prodh,w,c
 30929  00EB18  6EDA               	movwf	fsr2h,c
 30930  00EB1A  0E08               	movlw	8
 30931  00EB1C  18DE               	xorwf	postinc2,w,c
 30932  00EB1E  A4D8               	btfss	status,2,c
 30933  00EB20  D0AF               	goto	l2946
 30934                           
 30935                           ; BSR set to: 2
 30936                           ;adc.c: 63: {;adc.c: 67: temperature = 21064.0 - (float) params.temperature_adc_sum[para
      +                          ms.temperature_source];
 30937  00EB22  5131               	movf	_params& (0+255),w,b
 30938  00EB24  0D02               	mullw	2
 30939  00EB26  0E32               	movlw	low (_params+1)
 30940  00EB28  24F3               	addwf	prodl,w,c
 30941  00EB2A  6ED9               	movwf	fsr2l,c
 30942  00EB2C  0E02               	movlw	high (_params+1)
 30943  00EB2E  20F4               	addwfc	prodh,w,c
 30944  00EB30  6EDA               	movwf	fsr2h,c
 30945  00EB32  CFDE F091          	movff	postinc2,??_adc_read_temperature
 30946  00EB36  CFDD F092          	movff	postdec2,??_adc_read_temperature+1
 30947  00EB3A  C091  F06A         	movff	??_adc_read_temperature,___xxtofl@val
 30948  00EB3E  C092  F06B         	movff	??_adc_read_temperature+1,___xxtofl@val+1
 30949  00EB42  0100               	movlb	0	; () banked
 30950  00EB44  6B6C               	clrf	(___xxtofl@val+2)& (0+255),b
 30951  00EB46  6B6D               	clrf	(___xxtofl@val+3)& (0+255),b
 30952  00EB48  0E00               	movlw	0
 30953  00EB4A  EC7A  F081         	call	___xxtofl
 30954  00EB4E  C06A  F078         	movff	?___xxtofl,___flneg@f1
 30955  00EB52  C06B  F079         	movff	?___xxtofl+1,___flneg@f1+1
 30956  00EB56  C06C  F07A         	movff	?___xxtofl+2,___flneg@f1+2
 30957  00EB5A  C06D  F07B         	movff	?___xxtofl+3,___flneg@f1+3
 30958  00EB5E  ECC7  F0AC         	call	___flneg	;wreg free
 30959  00EB62  C078  F07C         	movff	?___flneg,___fladd@b
 30960  00EB66  C079  F07D         	movff	?___flneg+1,___fladd@b+1
 30961  00EB6A  C07A  F07E         	movff	?___flneg+2,___fladd@b+2
 30962  00EB6E  C07B  F07F         	movff	?___flneg+3,___fladd@b+3
 30963  00EB72  0E00               	movlw	0
 30964  00EB74  0100               	movlb	0	; () banked
 30965  00EB76  6F80               	movwf	___fladd@a& (0+255),b
 30966  00EB78  0E90               	movlw	144
 30967  00EB7A  6F81               	movwf	(___fladd@a+1)& (0+255),b
 30968  00EB7C  0EA4               	movlw	164
 30969  00EB7E  6F82               	movwf	(___fladd@a+2)& (0+255),b
 30970  00EB80  0E46               	movlw	70
 30971  00EB82  6F83               	movwf	(___fladd@a+3)& (0+255),b
 30972  00EB84  EC96  F066         	call	___fladd	;wreg free
 30973  00EB88  C07C  F095         	movff	?___fladd,adc_read_temperature@temperature
 30974  00EB8C  C07D  F096         	movff	?___fladd+1,adc_read_temperature@temperature+1
 30975  00EB90  C07E  F097         	movff	?___fladd+2,adc_read_temperature@temperature+2
 30976  00EB94  C07F  F098         	movff	?___fladd+3,adc_read_temperature@temperature+3
 30977                           
 30978                           ;adc.c: 68: temperature *= 0.7405;
 30979  00EB98  C095  F078         	movff	adc_read_temperature@temperature,___flmul@b
 30980  00EB9C  C096  F079         	movff	adc_read_temperature@temperature+1,___flmul@b+1
 30981  00EBA0  C097  F07A         	movff	adc_read_temperature@temperature+2,___flmul@b+2
 30982  00EBA4  C098  F07B         	movff	adc_read_temperature@temperature+3,___flmul@b+3
 30983  00EBA8  0E68               	movlw	104
 30984  00EBAA  0100               	movlb	0	; () banked
 30985  00EBAC  6F7C               	movwf	___flmul@a& (0+255),b
 30986  00EBAE  0E91               	movlw	145
 30987  00EBB0  6F7D               	movwf	(___flmul@a+1)& (0+255),b
 30988  00EBB2  0E3D               	movlw	61
 30989  00EBB4  6F7E               	movwf	(___flmul@a+2)& (0+255),b
 30990  00EBB6  0E3F               	movlw	63
 30991  00EBB8  6F7F               	movwf	(___flmul@a+3)& (0+255),b
 30992  00EBBA  ECED  F064         	call	___flmul	;wreg free
 30993  00EBBE  C078  F095         	movff	?___flmul,adc_read_temperature@temperature
 30994  00EBC2  C079  F096         	movff	?___flmul+1,adc_read_temperature@temperature+1
 30995  00EBC6  C07A  F097         	movff	?___flmul+2,adc_read_temperature@temperature+2
 30996  00EBCA  C07B  F098         	movff	?___flmul+3,adc_read_temperature@temperature+3
 30997                           
 30998                           ;adc.c: 71: os.temperature[params.temperature_source] = (int16_t) temperature;
 30999  00EBCE  C095  F060         	movff	adc_read_temperature@temperature,___fltol@f1
 31000  00EBD2  C096  F061         	movff	adc_read_temperature@temperature+1,___fltol@f1+1
 31001  00EBD6  C097  F062         	movff	adc_read_temperature@temperature+2,___fltol@f1+2
 31002  00EBDA  C098  F063         	movff	adc_read_temperature@temperature+3,___fltol@f1+3
 31003  00EBDE  EC13  F092         	call	___fltol	;wreg free
 31004  00EBE2  0102               	movlb	2	; () banked
 31005  00EBE4  5131               	movf	_params& (0+255),w,b
 31006  00EBE6  0D02               	mullw	2
 31007  00EBE8  0E8C               	movlw	low (_os+40)
 31008  00EBEA  24F3               	addwf	prodl,w,c
 31009  00EBEC  6ED9               	movwf	fsr2l,c
 31010  00EBEE  0E01               	movlw	high (_os+40)
 31011  00EBF0  20F4               	addwfc	prodh,w,c
 31012  00EBF2  6EDA               	movwf	fsr2h,c
 31013  00EBF4  0100               	movlb	0	; () banked
 31014  00EBF6  C060  FFDE         	movff	?___fltol,postinc2
 31015  00EBFA  C061  FFDD         	movff	?___fltol+1,postdec2
 31016                           
 31017                           ; BSR set to: 0
 31018                           ;adc.c: 74: params.temperature_adc_sum[params.temperature_source] = 0;
 31019  00EBFE  0102               	movlb	2	; () banked
 31020  00EC00  5131               	movf	_params& (0+255),w,b
 31021  00EC02  0D02               	mullw	2
 31022  00EC04  0E32               	movlw	low (_params+1)
 31023  00EC06  24F3               	addwf	prodl,w,c
 31024  00EC08  6ED9               	movwf	fsr2l,c
 31025  00EC0A  0E02               	movlw	high (_params+1)
 31026  00EC0C  20F4               	addwfc	prodh,w,c
 31027  00EC0E  6EDA               	movwf	fsr2h,c
 31028  00EC10  0E00               	movlw	0
 31029  00EC12  6EDE               	movwf	postinc2,c
 31030  00EC14  0E00               	movlw	0
 31031  00EC16  6EDD               	movwf	postdec2,c
 31032                           
 31033                           ; BSR set to: 2
 31034                           ;adc.c: 75: params.temperature_count[params.temperature_source] = 0;
 31035  00EC18  5131               	movf	_params& (0+255),w,b
 31036  00EC1A  0D01               	mullw	1
 31037  00EC1C  0E36               	movlw	low (_params+5)
 31038  00EC1E  24F3               	addwf	prodl,w,c
 31039  00EC20  6ED9               	movwf	fsr2l,c
 31040  00EC22  0E02               	movlw	high (_params+5)
 31041  00EC24  20F4               	addwfc	prodh,w,c
 31042  00EC26  6EDA               	movwf	fsr2h,c
 31043  00EC28  0E00               	movlw	0
 31044  00EC2A  6EDF               	movwf	indf2,c
 31045                           
 31046                           ; BSR set to: 2
 31047                           ;adc.c: 78: if(os.fan_on)
 31048  00EC2C  0101               	movlb	1	; () banked
 31049  00EC2E  5193               	movf	(_os+47)& (0+255),w,b	;volatile
 31050  00EC30  B4D8               	btfsc	status,2,c
 31051  00EC32  D013               	goto	l2943
 31052                           
 31053                           ; BSR set to: 1
 31054                           ;adc.c: 79: {;adc.c: 80: if((os.temperature[TEMPERATURE_SOURCE_INTERNAL]<2400) && (os.te
      +                          mperature[TEMPERATURE_SOURCE_EXTERNAL]<2400))
 31055  00EC34  BF8D               	btfsc	(_os+41)& (0+255),7,b	;volatile
 31056  00EC36  D006               	goto	u18720
 31057  00EC38  0E60               	movlw	96
 31058  00EC3A  5D8C               	subwf	(_os+40)& (0+255),w,b	;volatile
 31059  00EC3C  0E09               	movlw	9
 31060  00EC3E  598D               	subwfb	(_os+41)& (0+255),w,b	;volatile
 31061  00EC40  B0D8               	btfsc	status,0,c
 31062  00EC42  D01E               	goto	l2946
 31063  00EC44                     u18720:
 31064                           
 31065                           ; BSR set to: 1
 31066  00EC44  BF8F               	btfsc	(_os+43)& (0+255),7,b	;volatile
 31067  00EC46  D006               	goto	u18730
 31068  00EC48  0E60               	movlw	96
 31069  00EC4A  5D8E               	subwf	(_os+42)& (0+255),w,b	;volatile
 31070  00EC4C  0E09               	movlw	9
 31071  00EC4E  598F               	subwfb	(_os+43)& (0+255),w,b	;volatile
 31072  00EC50  B0D8               	btfsc	status,0,c
 31073  00EC52  D016               	goto	l2946
 31074  00EC54                     u18730:
 31075                           
 31076                           ; BSR set to: 1
 31077                           ;adc.c: 81: {;adc.c: 82: LATCbits.LC6 = 0;
 31078  00EC54  9C8B               	bcf	3979,6,c	;volatile
 31079                           
 31080                           ; BSR set to: 1
 31081                           ;adc.c: 83: os.fan_on = 0;
 31082  00EC56  0E00               	movlw	0
 31083  00EC58  D012               	goto	L41
 31084  00EC5A                     l2943:
 31085                           
 31086                           ; BSR set to: 1
 31087                           ;adc.c: 86: else;adc.c: 87: {;adc.c: 88: if((os.temperature[TEMPERATURE_SOURCE_INTERNAL]
      +                          >2500) || (os.temperature[TEMPERATURE_SOURCE_EXTERNAL]>2500))
 31088                           
 31089                           ; BSR set to: 1
 31090  00EC5A  BF8D               	btfsc	(_os+41)& (0+255),7,b	;volatile
 31091  00EC5C  D006               	goto	u18740
 31092  00EC5E  0EC5               	movlw	197
 31093  00EC60  5D8C               	subwf	(_os+40)& (0+255),w,b	;volatile
 31094  00EC62  0E09               	movlw	9
 31095  00EC64  598D               	subwfb	(_os+41)& (0+255),w,b	;volatile
 31096  00EC66  B0D8               	btfsc	status,0,c
 31097  00EC68  D008               	goto	u18750
 31098  00EC6A                     u18740:
 31099                           
 31100                           ; BSR set to: 1
 31101  00EC6A  BF8F               	btfsc	(_os+43)& (0+255),7,b	;volatile
 31102  00EC6C  D009               	goto	l2946
 31103  00EC6E  0EC5               	movlw	197
 31104  00EC70  5D8E               	subwf	(_os+42)& (0+255),w,b	;volatile
 31105  00EC72  0E09               	movlw	9
 31106  00EC74  598F               	subwfb	(_os+43)& (0+255),w,b	;volatile
 31107  00EC76  A0D8               	btfss	status,0,c
 31108  00EC78  D003               	goto	l2946
 31109  00EC7A                     u18750:
 31110                           
 31111                           ; BSR set to: 1
 31112                           ;adc.c: 89: {;adc.c: 90: LATCbits.LC6 = 1;
 31113  00EC7A  8C8B               	bsf	3979,6,c	;volatile
 31114                           
 31115                           ; BSR set to: 1
 31116                           ;adc.c: 91: os.fan_on = 1;
 31117  00EC7C  0E01               	movlw	1
 31118  00EC7E                     L41:
 31119  00EC7E  6F93               	movwf	(_os+47)& (0+255),b	;volatile
 31120  00EC80                     l2946:
 31121                           
 31122                           ;adc.c: 92: };adc.c: 93: };adc.c: 94: };adc.c: 97: if(params.temperature_source==TEMPERA
      +                          TURE_SOURCE_INTERNAL)
 31123                           
 31124                           ; BSR set to: 1
 31125                           
 31126                           ; BSR set to: 1
 31127  00EC80  0102               	movlb	2	; () banked
 31128  00EC82  5131               	movf	_params& (0+255),w,b
 31129  00EC84  A4D8               	btfss	status,2,c
 31130  00EC86  D007               	goto	l2949
 31131                           
 31132                           ; BSR set to: 2
 31133                           ;adc.c: 98: {;adc.c: 99: ADCON0bits.CHS = 0b1011;
 31134  00EC88  50C2               	movf	4034,w,c	;volatile
 31135  00EC8A  0BC3               	andlw	-61
 31136  00EC8C  092C               	iorlw	44
 31137  00EC8E  6EC2               	movwf	4034,c	;volatile
 31138                           
 31139                           ;adc.c: 100: params.temperature_source = TEMPERATURE_SOURCE_EXTERNAL;
 31140  00EC90  0E01               	movlw	1
 31141  00EC92  6F31               	movwf	_params& (0+255),b
 31142                           
 31143                           ;adc.c: 101: }
 31144  00EC94  0012               	return	
 31145  00EC96                     l2949:
 31146                           
 31147                           ; BSR set to: 2
 31148                           ;adc.c: 102: else;adc.c: 103: {;adc.c: 104: ADCON0bits.CHS = 0b1001;
 31149                           
 31150                           ; BSR set to: 2
 31151  00EC96  50C2               	movf	4034,w,c	;volatile
 31152  00EC98  0BC3               	andlw	-61
 31153  00EC9A  0924               	iorlw	36
 31154  00EC9C  6EC2               	movwf	4034,c	;volatile
 31155                           
 31156                           ;adc.c: 105: params.temperature_source = TEMPERATURE_SOURCE_INTERNAL;
 31157  00EC9E  0E00               	movlw	0
 31158  00ECA0  6F31               	movwf	_params& (0+255),b
 31159  00ECA2  0012               	return	
 31160  00ECA4                     __end_of_adc_read_temperature:
 31161                           	opt stack 0
 31162                           tblptru	equ	0xFF8
 31163                           tblptrh	equ	0xFF7
 31164                           tblptrl	equ	0xFF6
 31165                           tablat	equ	0xFF5
 31166                           prodh	equ	0xFF4
 31167                           prodl	equ	0xFF3
 31168                           intcon	equ	0xFF2
 31169                           postinc0	equ	0xFEE
 31170                           wreg	equ	0xFE8
 31171                           indf1	equ	0xFE7
 31172                           postinc1	equ	0xFE6
 31173                           postdec1	equ	0xFE5
 31174                           plusw1	equ	0xFE3
 31175                           fsr1h	equ	0xFE2
 31176                           fsr1l	equ	0xFE1
 31177                           indf2	equ	0xFDF
 31178                           postinc2	equ	0xFDE
 31179                           postdec2	equ	0xFDD
 31180                           plusw2	equ	0xFDB
 31181                           fsr2h	equ	0xFDA
 31182                           fsr2l	equ	0xFD9
 31183                           status	equ	0xFD8
 31184                           
 31185 ;; *************** function ___xxtofl *****************
 31186 ;; Defined at:
 31187 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
 31188 ;; Parameters:    Size  Location     Type
 31189 ;;  sign            1    wreg     unsigned char 
 31190 ;;  val             4   10[BANK0 ] long 
 31191 ;; Auto vars:     Size  Location     Type
 31192 ;;  sign            1   18[BANK0 ] unsigned char 
 31193 ;;  arg             4   20[BANK0 ] unsigned long 
 31194 ;;  exp             1   19[BANK0 ] unsigned char 
 31195 ;; Return value:  Size  Location     Type
 31196 ;;                  4   10[BANK0 ] unsigned char 
 31197 ;; Registers used:
 31198 ;;		wreg, status,2, status,0
 31199 ;; Tracked objects:
 31200 ;;		On entry : 0/0
 31201 ;;		On exit  : 0/0
 31202 ;;		Unchanged: 0/0
 31203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31204 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31205 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31206 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31207 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31208 ;;Total ram usage:       14 bytes
 31209 ;; Hardware stack levels used:    1
 31210 ;; Hardware stack levels required when called:   10
 31211 ;; This function calls:
 31212 ;;		Nothing
 31213 ;; This function is called by:
 31214 ;;		__motor_steps_from_degrees_int
 31215 ;;		_motor_calculate_position_in_degrees
 31216 ;;		__motor_get_speed_in_degrees
 31217 ;;		__step_position_from_divide_position
 31218 ;;		_motor_divide_jump_to_nearest
 31219 ;;		_motor_arc_move
 31220 ;;		_adc_read_temperature
 31221 ;;		__steps_from_degrees
 31222 ;;		__motor_steps_from_degrees_float
 31223 ;;		_motor_steps_from_degrees
 31224 ;; This function uses a non-reentrant model
 31225 ;;
 31226                           
 31227                           	psect	text123
 31228  0102F4                     __ptext123:
 31229                           	opt stack 0
 31230  0102F4                     ___xxtofl:
 31231                           	opt stack 18
 31232                           
 31233                           ; BSR set to: 2
 31234                           ;incstack = 0
 31235                           ;___xxtofl@sign stored from wreg
 31236  0102F4  0100               	movlb	0	; () banked
 31237  0102F6  6F72               	movwf	___xxtofl@sign& (0+255),b
 31238  0102F8  0100               	movlb	0	; () banked
 31239  0102FA  5172               	movf	___xxtofl@sign& (0+255),w,b
 31240  0102FC  A4D8               	btfss	status,2,c
 31241                           
 31242                           ; BSR set to: 0
 31243  0102FE  AF6D               	btfss	(___xxtofl@val+3)& (0+255),7,b
 31244  010300  D01A               	goto	l3731
 31245                           
 31246                           ; BSR set to: 0
 31247  010302  C06A  F06E         	movff	___xxtofl@val,??___xxtofl
 31248  010306  C06B  F06F         	movff	___xxtofl@val+1,??___xxtofl+1
 31249  01030A  C06C  F070         	movff	___xxtofl@val+2,??___xxtofl+2
 31250  01030E  C06D  F071         	movff	___xxtofl@val+3,??___xxtofl+3
 31251  010312  1F6E               	comf	??___xxtofl& (0+255),f,b
 31252  010314  1F6F               	comf	(??___xxtofl+1)& (0+255),f,b
 31253  010316  1F70               	comf	(??___xxtofl+2)& (0+255),f,b
 31254  010318  1F71               	comf	(??___xxtofl+3)& (0+255),f,b
 31255  01031A  2B6E               	incf	??___xxtofl& (0+255),f,b
 31256  01031C  0E00               	movlw	0
 31257  01031E  236F               	addwfc	(??___xxtofl+1)& (0+255),f,b
 31258  010320  2370               	addwfc	(??___xxtofl+2)& (0+255),f,b
 31259  010322  2371               	addwfc	(??___xxtofl+3)& (0+255),f,b
 31260  010324  C06E  F074         	movff	??___xxtofl,___xxtofl@arg
 31261  010328  C06F  F075         	movff	??___xxtofl+1,___xxtofl@arg+1
 31262  01032C  C070  F076         	movff	??___xxtofl+2,___xxtofl@arg+2
 31263  010330  C071  F077         	movff	??___xxtofl+3,___xxtofl@arg+3
 31264  010334  D008               	goto	l3732
 31265  010336                     l3731:
 31266                           
 31267                           ; BSR set to: 0
 31268  010336  C06A  F074         	movff	___xxtofl@val,___xxtofl@arg
 31269  01033A  C06B  F075         	movff	___xxtofl@val+1,___xxtofl@arg+1
 31270  01033E  C06C  F076         	movff	___xxtofl@val+2,___xxtofl@arg+2
 31271  010342  C06D  F077         	movff	___xxtofl@val+3,___xxtofl@arg+3
 31272  010346                     l3732:
 31273                           
 31274                           ; BSR set to: 0
 31275                           
 31276                           ; BSR set to: 0
 31277  010346  516A               	movf	___xxtofl@val& (0+255),w,b
 31278  010348  116B               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 31279  01034A  116C               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 31280  01034C  116D               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 31281  01034E  A4D8               	btfss	status,2,c
 31282  010350  D009               	goto	l3733
 31283                           
 31284                           ; BSR set to: 0
 31285  010352  0E00               	movlw	0
 31286  010354  6F6A               	movwf	?___xxtofl& (0+255),b
 31287  010356  0E00               	movlw	0
 31288  010358  6F6B               	movwf	(?___xxtofl+1)& (0+255),b
 31289  01035A  0E00               	movlw	0
 31290  01035C  6F6C               	movwf	(?___xxtofl+2)& (0+255),b
 31291  01035E  0E00               	movlw	0
 31292  010360  6F6D               	movwf	(?___xxtofl+3)& (0+255),b
 31293                           
 31294                           ; BSR set to: 0
 31295  010362  0012               	return	
 31296  010364                     l3733:
 31297                           
 31298                           ; BSR set to: 0
 31299                           
 31300                           ; BSR set to: 0
 31301  010364  0E96               	movlw	150
 31302  010366  6F73               	movwf	___xxtofl@exp& (0+255),b
 31303  010368  D006               	goto	l3735
 31304  01036A                     
 31305                           ; BSR set to: 0
 31306                           
 31307                           ; BSR set to: 0
 31308  01036A  2B73               	incf	___xxtofl@exp& (0+255),f,b
 31309  01036C  90D8               	bcf	status,0,c
 31310  01036E  3377               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 31311  010370  3376               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 31312  010372  3375               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 31313  010374  3374               	rrcf	___xxtofl@arg& (0+255),f,b
 31314  010376                     l3735:
 31315                           
 31316                           ; BSR set to: 0
 31317                           
 31318                           ; BSR set to: 0
 31319  010376  0E00               	movlw	0
 31320  010378  1574               	andwf	___xxtofl@arg& (0+255),w,b
 31321  01037A  6F6E               	movwf	??___xxtofl& (0+255),b
 31322  01037C  0E00               	movlw	0
 31323  01037E  1575               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 31324  010380  6F6F               	movwf	(??___xxtofl+1)& (0+255),b
 31325  010382  0E00               	movlw	0
 31326  010384  1576               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 31327  010386  6F70               	movwf	(??___xxtofl+2)& (0+255),b
 31328  010388  0EFE               	movlw	254
 31329  01038A  1577               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 31330  01038C  6F71               	movwf	(??___xxtofl+3)& (0+255),b
 31331  01038E  516E               	movf	??___xxtofl& (0+255),w,b
 31332  010390  116F               	iorwf	(??___xxtofl+1)& (0+255),w,b
 31333  010392  1170               	iorwf	(??___xxtofl+2)& (0+255),w,b
 31334  010394  1171               	iorwf	(??___xxtofl+3)& (0+255),w,b
 31335  010396  B4D8               	btfsc	status,2,c
 31336  010398  D00D               	goto	l3738
 31337  01039A  D7E7               	goto	l3736
 31338  01039C                     
 31339                           ; BSR set to: 0
 31340                           
 31341                           ; BSR set to: 0
 31342  01039C  2B73               	incf	___xxtofl@exp& (0+255),f,b
 31343                           
 31344                           ; BSR set to: 0
 31345  01039E  0E01               	movlw	1
 31346  0103A0  2774               	addwf	___xxtofl@arg& (0+255),f,b
 31347  0103A2  0E00               	movlw	0
 31348  0103A4  2375               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 31349  0103A6  2376               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 31350  0103A8  2377               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 31351                           
 31352                           ; BSR set to: 0
 31353  0103AA  90D8               	bcf	status,0,c
 31354  0103AC  3377               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 31355  0103AE  3376               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 31356  0103B0  3375               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 31357  0103B2  3374               	rrcf	___xxtofl@arg& (0+255),f,b
 31358  0103B4                     l3738:
 31359                           
 31360                           ; BSR set to: 0
 31361  0103B4  0E00               	movlw	0
 31362  0103B6  1574               	andwf	___xxtofl@arg& (0+255),w,b
 31363  0103B8  6F6E               	movwf	??___xxtofl& (0+255),b
 31364  0103BA  0E00               	movlw	0
 31365  0103BC  1575               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 31366  0103BE  6F6F               	movwf	(??___xxtofl+1)& (0+255),b
 31367  0103C0  0E00               	movlw	0
 31368  0103C2  1576               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 31369  0103C4  6F70               	movwf	(??___xxtofl+2)& (0+255),b
 31370  0103C6  0EFF               	movlw	255
 31371  0103C8  1577               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 31372  0103CA  6F71               	movwf	(??___xxtofl+3)& (0+255),b
 31373  0103CC  516E               	movf	??___xxtofl& (0+255),w,b
 31374  0103CE  116F               	iorwf	(??___xxtofl+1)& (0+255),w,b
 31375  0103D0  1170               	iorwf	(??___xxtofl+2)& (0+255),w,b
 31376  0103D2  1171               	iorwf	(??___xxtofl+3)& (0+255),w,b
 31377  0103D4  B4D8               	btfsc	status,2,c
 31378  0103D6  D007               	goto	l3741
 31379  0103D8  D7E1               	goto	l3739
 31380  0103DA                     
 31381                           ; BSR set to: 0
 31382                           
 31383                           ; BSR set to: 0
 31384  0103DA  0773               	decf	___xxtofl@exp& (0+255),f,b
 31385  0103DC  90D8               	bcf	status,0,c
 31386  0103DE  3774               	rlcf	___xxtofl@arg& (0+255),f,b
 31387  0103E0  3775               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 31388  0103E2  3776               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 31389  0103E4  3777               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 31390  0103E6                     l3741:
 31391                           
 31392                           ; BSR set to: 0
 31393                           
 31394                           ; BSR set to: 0
 31395  0103E6  BF76               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 31396  0103E8  D003               	goto	u13480
 31397                           
 31398                           ; BSR set to: 0
 31399  0103EA  0E02               	movlw	2
 31400  0103EC  6173               	cpfslt	___xxtofl@exp& (0+255),b
 31401  0103EE  D7F5               	goto	l3742
 31402  0103F0                     u13480:
 31403                           
 31404                           ; BSR set to: 0
 31405                           
 31406                           ; BSR set to: 0
 31407  0103F0  A173               	btfss	___xxtofl@exp& (0+255),0,b
 31408                           
 31409                           ; BSR set to: 0
 31410  0103F2  9F76               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 31411                           
 31412                           ; BSR set to: 0
 31413                           
 31414                           ; BSR set to: 0
 31415  0103F4  90D8               	bcf	status,0,c
 31416  0103F6  3373               	rrcf	___xxtofl@exp& (0+255),f,b
 31417                           
 31418                           ; BSR set to: 0
 31419  0103F8  C073  F06E         	movff	___xxtofl@exp,??___xxtofl
 31420  0103FC  6B6F               	clrf	(??___xxtofl+1)& (0+255),b
 31421  0103FE  6B70               	clrf	(??___xxtofl+2)& (0+255),b
 31422  010400  6B71               	clrf	(??___xxtofl+3)& (0+255),b
 31423  010402  C06E  F071         	movff	??___xxtofl,??___xxtofl+3
 31424  010406  6B70               	clrf	(??___xxtofl+2)& (0+255),b
 31425  010408  6B6F               	clrf	(??___xxtofl+1)& (0+255),b
 31426  01040A  6B6E               	clrf	??___xxtofl& (0+255),b
 31427  01040C  516E               	movf	??___xxtofl& (0+255),w,b
 31428  01040E  1374               	iorwf	___xxtofl@arg& (0+255),f,b
 31429  010410  516F               	movf	(??___xxtofl+1)& (0+255),w,b
 31430  010412  1375               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 31431  010414  5170               	movf	(??___xxtofl+2)& (0+255),w,b
 31432  010416  1376               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 31433  010418  5171               	movf	(??___xxtofl+3)& (0+255),w,b
 31434  01041A  1377               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 31435                           
 31436                           ; BSR set to: 0
 31437  01041C  5172               	movf	___xxtofl@sign& (0+255),w,b
 31438  01041E  A4D8               	btfss	status,2,c
 31439                           
 31440                           ; BSR set to: 0
 31441  010420  AF6D               	btfss	(___xxtofl@val+3)& (0+255),7,b
 31442  010422  D001               	goto	l3747
 31443                           
 31444                           ; BSR set to: 0
 31445  010424  8F77               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 31446  010426                     l3747:
 31447                           
 31448                           ; BSR set to: 0
 31449                           
 31450                           ; BSR set to: 0
 31451  010426  C074  F06A         	movff	___xxtofl@arg,?___xxtofl
 31452  01042A  C075  F06B         	movff	___xxtofl@arg+1,?___xxtofl+1
 31453  01042E  C076  F06C         	movff	___xxtofl@arg+2,?___xxtofl+2
 31454  010432  C077  F06D         	movff	___xxtofl@arg+3,?___xxtofl+3
 31455  010436  0012               	return	
 31456  010438                     __end_of___xxtofl:
 31457                           	opt stack 0
 31458                           tblptru	equ	0xFF8
 31459                           tblptrh	equ	0xFF7
 31460                           tblptrl	equ	0xFF6
 31461                           tablat	equ	0xFF5
 31462                           prodh	equ	0xFF4
 31463                           prodl	equ	0xFF3
 31464                           intcon	equ	0xFF2
 31465                           postinc0	equ	0xFEE
 31466                           wreg	equ	0xFE8
 31467                           indf1	equ	0xFE7
 31468                           postinc1	equ	0xFE6
 31469                           postdec1	equ	0xFE5
 31470                           plusw1	equ	0xFE3
 31471                           fsr1h	equ	0xFE2
 31472                           fsr1l	equ	0xFE1
 31473                           indf2	equ	0xFDF
 31474                           postinc2	equ	0xFDE
 31475                           postdec2	equ	0xFDD
 31476                           plusw2	equ	0xFDB
 31477                           fsr2h	equ	0xFDA
 31478                           fsr2l	equ	0xFD9
 31479                           status	equ	0xFD8
 31480                           
 31481 ;; *************** function ___fltol *****************
 31482 ;; Defined at:
 31483 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
 31484 ;; Parameters:    Size  Location     Type
 31485 ;;  f1              4    0[BANK0 ] unsigned char 
 31486 ;; Auto vars:     Size  Location     Type
 31487 ;;  exp1            1    9[BANK0 ] unsigned char 
 31488 ;;  sign1           1    8[BANK0 ] unsigned char 
 31489 ;; Return value:  Size  Location     Type
 31490 ;;                  4    0[BANK0 ] long 
 31491 ;; Registers used:
 31492 ;;		wreg, status,2, status,0
 31493 ;; Tracked objects:
 31494 ;;		On entry : 0/0
 31495 ;;		On exit  : 0/0
 31496 ;;		Unchanged: 0/0
 31497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31498 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31499 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31500 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31501 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31502 ;;Total ram usage:       10 bytes
 31503 ;; Hardware stack levels used:    1
 31504 ;; Hardware stack levels required when called:   10
 31505 ;; This function calls:
 31506 ;;		Nothing
 31507 ;; This function is called by:
 31508 ;;		__motor_steps_from_degrees_int
 31509 ;;		_motor_calculate_position_in_degrees
 31510 ;;		__motor_get_speed_in_degrees
 31511 ;;		__step_position_from_divide_position
 31512 ;;		_motor_divide_jump_to_nearest
 31513 ;;		_motor_arc_move
 31514 ;;		_adc_read_temperature
 31515 ;;		__steps_from_degrees
 31516 ;;		__motor_steps_from_degrees_float
 31517 ;;		_motor_steps_from_degrees
 31518 ;; This function uses a non-reentrant model
 31519 ;;
 31520                           
 31521                           	psect	text124
 31522  012426                     __ptext124:
 31523                           	opt stack 0
 31524  012426                     ___fltol:
 31525                           	opt stack 18
 31526                           
 31527                           ; BSR set to: 0
 31528                           ;incstack = 0
 31529  012426  0100               	movlb	0	; () banked
 31530  012428  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
 31531  01242A  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
 31532  01242C  6F69               	movwf	___fltol@exp1& (0+255),b
 31533  01242E  5169               	movf	___fltol@exp1& (0+255),w,b
 31534  012430  A4D8               	btfss	status,2,c
 31535  012432  D009               	goto	l3376
 31536                           
 31537                           ; BSR set to: 0
 31538  012434  0E00               	movlw	0
 31539  012436  6F60               	movwf	?___fltol& (0+255),b
 31540  012438  0E00               	movlw	0
 31541  01243A  6F61               	movwf	(?___fltol+1)& (0+255),b
 31542  01243C  0E00               	movlw	0
 31543  01243E  6F62               	movwf	(?___fltol+2)& (0+255),b
 31544  012440  0E00               	movlw	0
 31545  012442  6F63               	movwf	(?___fltol+3)& (0+255),b
 31546                           
 31547                           ; BSR set to: 0
 31548  012444  0012               	return	
 31549  012446                     l3376:
 31550                           
 31551                           ; BSR set to: 0
 31552                           
 31553                           ; BSR set to: 0
 31554  012446  C060  F064         	movff	___fltol@f1,??___fltol
 31555  01244A  C061  F065         	movff	___fltol@f1+1,??___fltol+1
 31556  01244E  C062  F066         	movff	___fltol@f1+2,??___fltol+2
 31557  012452  C063  F067         	movff	___fltol@f1+3,??___fltol+3
 31558  012456  0E20               	movlw	32
 31559  012458  D005               	goto	u13360
 31560  01245A                     u13365:
 31561  01245A  90D8               	bcf	status,0,c
 31562  01245C  3367               	rrcf	(??___fltol+3)& (0+255),f,b
 31563  01245E  3366               	rrcf	(??___fltol+2)& (0+255),f,b
 31564  012460  3365               	rrcf	(??___fltol+1)& (0+255),f,b
 31565  012462  3364               	rrcf	??___fltol& (0+255),f,b
 31566  012464                     u13360:
 31567  012464  2EE8               	decfsz	wreg,f,c
 31568  012466  D7F9               	goto	u13365
 31569  012468  5164               	movf	??___fltol& (0+255),w,b
 31570  01246A  6F68               	movwf	___fltol@sign1& (0+255),b
 31571                           
 31572                           ; BSR set to: 0
 31573  01246C  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
 31574                           
 31575                           ; BSR set to: 0
 31576  01246E  0EFF               	movlw	255
 31577  012470  1760               	andwf	___fltol@f1& (0+255),f,b
 31578  012472  0EFF               	movlw	255
 31579  012474  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
 31580  012476  0EFF               	movlw	255
 31581  012478  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
 31582  01247A  0E00               	movlw	0
 31583  01247C  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
 31584                           
 31585                           ; BSR set to: 0
 31586  01247E  0E96               	movlw	150
 31587  012480  5F69               	subwf	___fltol@exp1& (0+255),f,b
 31588                           
 31589                           ; BSR set to: 0
 31590  012482  AF69               	btfss	___fltol@exp1& (0+255),7,b
 31591  012484  D016               	goto	l3378
 31592                           
 31593                           ; BSR set to: 0
 31594  012486  5169               	movf	___fltol@exp1& (0+255),w,b
 31595  012488  0A80               	xorlw	128
 31596  01248A  0F97               	addlw	151
 31597  01248C  B0D8               	btfsc	status,0,c
 31598  01248E  D009               	goto	l3379
 31599                           
 31600                           ; BSR set to: 0
 31601  012490  0E00               	movlw	0
 31602  012492  6F60               	movwf	?___fltol& (0+255),b
 31603  012494  0E00               	movlw	0
 31604  012496  6F61               	movwf	(?___fltol+1)& (0+255),b
 31605  012498  0E00               	movlw	0
 31606  01249A  6F62               	movwf	(?___fltol+2)& (0+255),b
 31607  01249C  0E00               	movlw	0
 31608  01249E  6F63               	movwf	(?___fltol+3)& (0+255),b
 31609                           
 31610                           ; BSR set to: 0
 31611  0124A0  0012               	return	
 31612  0124A2                     l3379:
 31613                           
 31614                           ; BSR set to: 0
 31615                           
 31616                           ; BSR set to: 0
 31617                           
 31618                           ; BSR set to: 0
 31619  0124A2  90D8               	bcf	status,0,c
 31620  0124A4  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
 31621  0124A6  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
 31622  0124A8  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
 31623  0124AA  3360               	rrcf	___fltol@f1& (0+255),f,b
 31624                           
 31625                           ; BSR set to: 0
 31626  0124AC  3F69               	incfsz	___fltol@exp1& (0+255),f,b
 31627  0124AE  D7F9               	goto	l3379
 31628                           
 31629                           ; BSR set to: 0
 31630  0124B0  D015               	goto	u13400
 31631  0124B2                     l3378:
 31632                           
 31633                           ; BSR set to: 0
 31634                           
 31635                           ; BSR set to: 0
 31636  0124B2  0E1F               	movlw	31
 31637  0124B4  6569               	cpfsgt	___fltol@exp1& (0+255),b
 31638  0124B6  D00F               	goto	l3384
 31639                           
 31640                           ; BSR set to: 0
 31641  0124B8  0E00               	movlw	0
 31642  0124BA  6F60               	movwf	?___fltol& (0+255),b
 31643  0124BC  0E00               	movlw	0
 31644  0124BE  6F61               	movwf	(?___fltol+1)& (0+255),b
 31645  0124C0  0E00               	movlw	0
 31646  0124C2  6F62               	movwf	(?___fltol+2)& (0+255),b
 31647  0124C4  0E00               	movlw	0
 31648  0124C6  6F63               	movwf	(?___fltol+3)& (0+255),b
 31649                           
 31650                           ; BSR set to: 0
 31651  0124C8  0012               	return	
 31652  0124CA                     
 31653                           ; BSR set to: 0
 31654                           
 31655                           ; BSR set to: 0
 31656  0124CA  90D8               	bcf	status,0,c
 31657  0124CC  3760               	rlcf	___fltol@f1& (0+255),f,b
 31658  0124CE  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
 31659  0124D0  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
 31660  0124D2  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
 31661  0124D4  0769               	decf	___fltol@exp1& (0+255),f,b
 31662  0124D6                     l3384:
 31663                           
 31664                           ; BSR set to: 0
 31665                           
 31666                           ; BSR set to: 0
 31667  0124D6  5169               	movf	___fltol@exp1& (0+255),w,b
 31668  0124D8  A4D8               	btfss	status,2,c
 31669  0124DA  D7F7               	goto	l3385
 31670  0124DC                     u13400:
 31671                           
 31672                           ; BSR set to: 0
 31673                           
 31674                           ; BSR set to: 0
 31675                           
 31676                           ; BSR set to: 0
 31677  0124DC  5168               	movf	___fltol@sign1& (0+255),w,b
 31678  0124DE  B4D8               	btfsc	status,2,c
 31679  0124E0  D008               	goto	l3387
 31680                           
 31681                           ; BSR set to: 0
 31682  0124E2  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
 31683  0124E4  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
 31684  0124E6  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
 31685  0124E8  6D60               	negf	___fltol@f1& (0+255),b
 31686  0124EA  0E00               	movlw	0
 31687  0124EC  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
 31688  0124EE  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
 31689  0124F0  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
 31690  0124F2                     l3387:
 31691                           
 31692                           ; BSR set to: 0
 31693                           
 31694                           ; BSR set to: 0
 31695  0124F2  C060  F060         	movff	___fltol@f1,?___fltol
 31696  0124F6  C061  F061         	movff	___fltol@f1+1,?___fltol+1
 31697  0124FA  C062  F062         	movff	___fltol@f1+2,?___fltol+2
 31698  0124FE  C063  F063         	movff	___fltol@f1+3,?___fltol+3
 31699  012502  0012               	return	
 31700  012504                     __end_of___fltol:
 31701                           	opt stack 0
 31702                           tblptru	equ	0xFF8
 31703                           tblptrh	equ	0xFF7
 31704                           tblptrl	equ	0xFF6
 31705                           tablat	equ	0xFF5
 31706                           prodh	equ	0xFF4
 31707                           prodl	equ	0xFF3
 31708                           intcon	equ	0xFF2
 31709                           postinc0	equ	0xFEE
 31710                           wreg	equ	0xFE8
 31711                           indf1	equ	0xFE7
 31712                           postinc1	equ	0xFE6
 31713                           postdec1	equ	0xFE5
 31714                           plusw1	equ	0xFE3
 31715                           fsr1h	equ	0xFE2
 31716                           fsr1l	equ	0xFE1
 31717                           indf2	equ	0xFDF
 31718                           postinc2	equ	0xFDE
 31719                           postdec2	equ	0xFDD
 31720                           plusw2	equ	0xFDB
 31721                           fsr2h	equ	0xFDA
 31722                           fsr2l	equ	0xFD9
 31723                           status	equ	0xFD8
 31724                           
 31725 ;; *************** function ___flneg *****************
 31726 ;; Defined at:
 31727 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
 31728 ;; Parameters:    Size  Location     Type
 31729 ;;  f1              4   24[BANK0 ] long 
 31730 ;; Auto vars:     Size  Location     Type
 31731 ;;		None
 31732 ;; Return value:  Size  Location     Type
 31733 ;;                  4   24[BANK0 ] long 
 31734 ;; Registers used:
 31735 ;;		wreg, status,2, status,0
 31736 ;; Tracked objects:
 31737 ;;		On entry : 0/0
 31738 ;;		On exit  : 0/0
 31739 ;;		Unchanged: 0/0
 31740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31741 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31744 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31745 ;;Total ram usage:        4 bytes
 31746 ;; Hardware stack levels used:    1
 31747 ;; Hardware stack levels required when called:   10
 31748 ;; This function calls:
 31749 ;;		Nothing
 31750 ;; This function is called by:
 31751 ;;		_adc_read_temperature
 31752 ;;		__motor_steps_from_degrees_float
 31753 ;; This function uses a non-reentrant model
 31754 ;;
 31755                           
 31756                           	psect	text125
 31757  01598E                     __ptext125:
 31758                           	opt stack 0
 31759  01598E                     ___flneg:
 31760                           	opt stack 19
 31761                           
 31762                           ; BSR set to: 0
 31763                           ;incstack = 0
 31764  01598E  0100               	movlb	0	; () banked
 31765  015990  5178               	movf	___flneg@f1& (0+255),w,b
 31766  015992  1179               	iorwf	(___flneg@f1+1)& (0+255),w,b
 31767  015994  117A               	iorwf	(___flneg@f1+2)& (0+255),w,b
 31768  015996  117B               	iorwf	(___flneg@f1+3)& (0+255),w,b
 31769  015998  B4D8               	btfsc	status,2,c
 31770  01599A  D008               	goto	l3353
 31771                           
 31772                           ; BSR set to: 0
 31773  01599C  0E00               	movlw	0
 31774  01599E  1B78               	xorwf	___flneg@f1& (0+255),f,b
 31775  0159A0  0E00               	movlw	0
 31776  0159A2  1B79               	xorwf	(___flneg@f1+1)& (0+255),f,b
 31777  0159A4  0E00               	movlw	0
 31778  0159A6  1B7A               	xorwf	(___flneg@f1+2)& (0+255),f,b
 31779  0159A8  0E80               	movlw	128
 31780  0159AA  1B7B               	xorwf	(___flneg@f1+3)& (0+255),f,b
 31781  0159AC                     l3353:
 31782                           
 31783                           ; BSR set to: 0
 31784                           
 31785                           ; BSR set to: 0
 31786  0159AC  C078  F078         	movff	___flneg@f1,?___flneg
 31787  0159B0  C079  F079         	movff	___flneg@f1+1,?___flneg+1
 31788  0159B4  C07A  F07A         	movff	___flneg@f1+2,?___flneg+2
 31789  0159B8  C07B  F07B         	movff	___flneg@f1+3,?___flneg+3
 31790  0159BC  0012               	return	
 31791  0159BE                     __end_of___flneg:
 31792                           	opt stack 0
 31793                           tblptru	equ	0xFF8
 31794                           tblptrh	equ	0xFF7
 31795                           tblptrl	equ	0xFF6
 31796                           tablat	equ	0xFF5
 31797                           prodh	equ	0xFF4
 31798                           prodl	equ	0xFF3
 31799                           intcon	equ	0xFF2
 31800                           postinc0	equ	0xFEE
 31801                           wreg	equ	0xFE8
 31802                           indf1	equ	0xFE7
 31803                           postinc1	equ	0xFE6
 31804                           postdec1	equ	0xFE5
 31805                           plusw1	equ	0xFE3
 31806                           fsr1h	equ	0xFE2
 31807                           fsr1l	equ	0xFE1
 31808                           indf2	equ	0xFDF
 31809                           postinc2	equ	0xFDE
 31810                           postdec2	equ	0xFDD
 31811                           plusw2	equ	0xFDB
 31812                           fsr2h	equ	0xFDA
 31813                           fsr2l	equ	0xFD9
 31814                           status	equ	0xFD8
 31815                           
 31816 ;; *************** function ___flmul *****************
 31817 ;; Defined at:
 31818 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
 31819 ;; Parameters:    Size  Location     Type
 31820 ;;  b               4   24[BANK0 ] long 
 31821 ;;  a               4   28[BANK0 ] long 
 31822 ;; Auto vars:     Size  Location     Type
 31823 ;;  prod            4   43[BANK0 ] struct .
 31824 ;;  grs             4   37[BANK0 ] unsigned long 
 31825 ;;  temp            2   47[BANK0 ] struct .
 31826 ;;  bexp            1   42[BANK0 ] unsigned char 
 31827 ;;  aexp            1   41[BANK0 ] unsigned char 
 31828 ;;  sign            1   36[BANK0 ] unsigned char 
 31829 ;; Return value:  Size  Location     Type
 31830 ;;                  4   24[BANK0 ] unsigned char 
 31831 ;; Registers used:
 31832 ;;		wreg, status,2, status,0, prodl, prodh
 31833 ;; Tracked objects:
 31834 ;;		On entry : 0/0
 31835 ;;		On exit  : 0/0
 31836 ;;		Unchanged: 0/0
 31837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31838 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31839 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31840 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31841 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31842 ;;Total ram usage:       25 bytes
 31843 ;; Hardware stack levels used:    1
 31844 ;; Hardware stack levels required when called:   10
 31845 ;; This function calls:
 31846 ;;		Nothing
 31847 ;; This function is called by:
 31848 ;;		__motor_steps_from_degrees_int
 31849 ;;		_motor_calculate_position_in_degrees
 31850 ;;		__step_position_from_divide_position
 31851 ;;		_motor_divide_jump_to_nearest
 31852 ;;		_motor_arc_move
 31853 ;;		_adc_read_temperature
 31854 ;;		__steps_from_degrees
 31855 ;;		__motor_steps_from_degrees_float
 31856 ;;		_motor_steps_from_degrees
 31857 ;; This function uses a non-reentrant model
 31858 ;;
 31859                           
 31860                           	psect	text126
 31861  00C9DA                     __ptext126:
 31862                           	opt stack 0
 31863  00C9DA                     ___flmul:
 31864                           	opt stack 18
 31865                           
 31866                           ; BSR set to: 0
 31867                           ;incstack = 0
 31868  00C9DA  0100               	movlb	0	; () banked
 31869  00C9DC  517B               	movf	(___flmul@b+3)& (0+255),w,b
 31870  00C9DE  0B80               	andlw	128
 31871  00C9E0  6F84               	movwf	___flmul@sign& (0+255),b
 31872  00C9E2  517B               	movf	(___flmul@b+3)& (0+255),w,b
 31873  00C9E4  257B               	addwf	(___flmul@b+3)& (0+255),w,b
 31874  00C9E6  6F8A               	movwf	___flmul@bexp& (0+255),b
 31875                           
 31876                           ; BSR set to: 0
 31877  00C9E8  BF7A               	btfsc	(___flmul@b+2)& (0+255),7,b
 31878                           
 31879                           ; BSR set to: 0
 31880  00C9EA  818A               	bsf	___flmul@bexp& (0+255),0,b
 31881                           
 31882                           ; BSR set to: 0
 31883                           
 31884                           ; BSR set to: 0
 31885  00C9EC  518A               	movf	___flmul@bexp& (0+255),w,b
 31886  00C9EE  B4D8               	btfsc	status,2,c
 31887  00C9F0  D00D               	goto	l3684
 31888                           
 31889                           ; BSR set to: 0
 31890  00C9F2  298A               	incf	___flmul@bexp& (0+255),w,b
 31891  00C9F4  A4D8               	btfss	status,2,c
 31892  00C9F6  D008               	goto	l3685
 31893                           
 31894                           ; BSR set to: 0
 31895  00C9F8  0E00               	movlw	0
 31896  00C9FA  6F78               	movwf	___flmul@b& (0+255),b
 31897  00C9FC  0E00               	movlw	0
 31898  00C9FE  6F79               	movwf	(___flmul@b+1)& (0+255),b
 31899  00CA00  0E00               	movlw	0
 31900  00CA02  6F7A               	movwf	(___flmul@b+2)& (0+255),b
 31901  00CA04  0E00               	movlw	0
 31902  00CA06  6F7B               	movwf	(___flmul@b+3)& (0+255),b
 31903  00CA08                     l3685:
 31904                           
 31905                           ; BSR set to: 0
 31906                           
 31907                           ; BSR set to: 0
 31908  00CA08  8F7A               	bsf	(___flmul@b+2)& (0+255),7,b
 31909  00CA0A  D008               	goto	l3686
 31910  00CA0C                     l3684:
 31911                           
 31912                           ; BSR set to: 0
 31913                           
 31914                           ; BSR set to: 0
 31915  00CA0C  0E00               	movlw	0
 31916  00CA0E  6F78               	movwf	___flmul@b& (0+255),b
 31917  00CA10  0E00               	movlw	0
 31918  00CA12  6F79               	movwf	(___flmul@b+1)& (0+255),b
 31919  00CA14  0E00               	movlw	0
 31920  00CA16  6F7A               	movwf	(___flmul@b+2)& (0+255),b
 31921  00CA18  0E00               	movlw	0
 31922  00CA1A  6F7B               	movwf	(___flmul@b+3)& (0+255),b
 31923  00CA1C                     l3686:
 31924                           
 31925                           ; BSR set to: 0
 31926                           
 31927                           ; BSR set to: 0
 31928  00CA1C  517F               	movf	(___flmul@a+3)& (0+255),w,b
 31929  00CA1E  0B80               	andlw	128
 31930  00CA20  1B84               	xorwf	___flmul@sign& (0+255),f,b
 31931                           
 31932                           ; BSR set to: 0
 31933  00CA22  517F               	movf	(___flmul@a+3)& (0+255),w,b
 31934  00CA24  257F               	addwf	(___flmul@a+3)& (0+255),w,b
 31935  00CA26  6F89               	movwf	___flmul@aexp& (0+255),b
 31936                           
 31937                           ; BSR set to: 0
 31938  00CA28  BF7E               	btfsc	(___flmul@a+2)& (0+255),7,b
 31939                           
 31940                           ; BSR set to: 0
 31941  00CA2A  8189               	bsf	___flmul@aexp& (0+255),0,b
 31942                           
 31943                           ; BSR set to: 0
 31944                           
 31945                           ; BSR set to: 0
 31946  00CA2C  5189               	movf	___flmul@aexp& (0+255),w,b
 31947  00CA2E  B4D8               	btfsc	status,2,c
 31948  00CA30  D00D               	goto	l3688
 31949                           
 31950                           ; BSR set to: 0
 31951  00CA32  2989               	incf	___flmul@aexp& (0+255),w,b
 31952  00CA34  A4D8               	btfss	status,2,c
 31953  00CA36  D008               	goto	l3689
 31954                           
 31955                           ; BSR set to: 0
 31956  00CA38  0E00               	movlw	0
 31957  00CA3A  6F7C               	movwf	___flmul@a& (0+255),b
 31958  00CA3C  0E00               	movlw	0
 31959  00CA3E  6F7D               	movwf	(___flmul@a+1)& (0+255),b
 31960  00CA40  0E00               	movlw	0
 31961  00CA42  6F7E               	movwf	(___flmul@a+2)& (0+255),b
 31962  00CA44  0E00               	movlw	0
 31963  00CA46  6F7F               	movwf	(___flmul@a+3)& (0+255),b
 31964  00CA48                     l3689:
 31965                           
 31966                           ; BSR set to: 0
 31967                           
 31968                           ; BSR set to: 0
 31969  00CA48  8F7E               	bsf	(___flmul@a+2)& (0+255),7,b
 31970  00CA4A  D008               	goto	l3690
 31971  00CA4C                     l3688:
 31972                           
 31973                           ; BSR set to: 0
 31974                           
 31975                           ; BSR set to: 0
 31976  00CA4C  0E00               	movlw	0
 31977  00CA4E  6F7C               	movwf	___flmul@a& (0+255),b
 31978  00CA50  0E00               	movlw	0
 31979  00CA52  6F7D               	movwf	(___flmul@a+1)& (0+255),b
 31980  00CA54  0E00               	movlw	0
 31981  00CA56  6F7E               	movwf	(___flmul@a+2)& (0+255),b
 31982  00CA58  0E00               	movlw	0
 31983  00CA5A  6F7F               	movwf	(___flmul@a+3)& (0+255),b
 31984  00CA5C                     l3690:
 31985                           
 31986                           ; BSR set to: 0
 31987  00CA5C  5189               	movf	___flmul@aexp& (0+255),w,b
 31988  00CA5E  B4D8               	btfsc	status,2,c
 31989  00CA60  D003               	goto	u13180
 31990                           
 31991                           ; BSR set to: 0
 31992  00CA62  518A               	movf	___flmul@bexp& (0+255),w,b
 31993  00CA64  A4D8               	btfss	status,2,c
 31994  00CA66  D009               	goto	l3691
 31995  00CA68                     u13180:
 31996                           
 31997                           ; BSR set to: 0
 31998                           
 31999                           ; BSR set to: 0
 32000  00CA68  0E00               	movlw	0
 32001  00CA6A  6F78               	movwf	?___flmul& (0+255),b
 32002  00CA6C  0E00               	movlw	0
 32003  00CA6E  6F79               	movwf	(?___flmul+1)& (0+255),b
 32004  00CA70  0E00               	movlw	0
 32005  00CA72  6F7A               	movwf	(?___flmul+2)& (0+255),b
 32006  00CA74  0E00               	movlw	0
 32007  00CA76  6F7B               	movwf	(?___flmul+3)& (0+255),b
 32008                           
 32009                           ; BSR set to: 0
 32010  00CA78  0012               	return	
 32011  00CA7A                     l3691:
 32012                           
 32013                           ; BSR set to: 0
 32014                           
 32015                           ; BSR set to: 0
 32016  00CA7A  517E               	movf	(___flmul@a+2)& (0+255),w,b
 32017  00CA7C  0378               	mulwf	___flmul@b& (0+255),b
 32018  00CA7E  CFF3 F08F          	movff	prodl,___flmul@temp
 32019  00CA82  CFF4 F090          	movff	prodh,___flmul@temp+1
 32020                           
 32021                           ; BSR set to: 0
 32022  00CA86  518F               	movf	___flmul@temp& (0+255),w,b
 32023  00CA88  6F85               	movwf	___flmul@grs& (0+255),b
 32024  00CA8A  6B86               	clrf	(___flmul@grs+1)& (0+255),b
 32025  00CA8C  6B87               	clrf	(___flmul@grs+2)& (0+255),b
 32026  00CA8E  6B88               	clrf	(___flmul@grs+3)& (0+255),b
 32027                           
 32028                           ; BSR set to: 0
 32029  00CA90  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32030  00CA92  6F8B               	movwf	___flmul@prod& (0+255),b
 32031  00CA94  6B8C               	clrf	(___flmul@prod+1)& (0+255),b
 32032  00CA96  6B8D               	clrf	(___flmul@prod+2)& (0+255),b
 32033  00CA98  6B8E               	clrf	(___flmul@prod+3)& (0+255),b
 32034  00CA9A  517D               	movf	(___flmul@a+1)& (0+255),w,b
 32035  00CA9C  0379               	mulwf	(___flmul@b+1)& (0+255),b
 32036  00CA9E  CFF3 F08F          	movff	prodl,___flmul@temp
 32037  00CAA2  CFF4 F090          	movff	prodh,___flmul@temp+1
 32038                           
 32039                           ; BSR set to: 0
 32040  00CAA6  518F               	movf	___flmul@temp& (0+255),w,b
 32041  00CAA8  2785               	addwf	___flmul@grs& (0+255),f,b
 32042  00CAAA  0E00               	movlw	0
 32043  00CAAC  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 32044  00CAAE  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 32045  00CAB0  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 32046                           
 32047                           ; BSR set to: 0
 32048  00CAB2  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32049  00CAB4  278B               	addwf	___flmul@prod& (0+255),f,b
 32050  00CAB6  0E00               	movlw	0
 32051  00CAB8  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32052  00CABA  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32053  00CABC  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32054  00CABE  517C               	movf	___flmul@a& (0+255),w,b
 32055  00CAC0  037A               	mulwf	(___flmul@b+2)& (0+255),b
 32056  00CAC2  CFF3 F08F          	movff	prodl,___flmul@temp
 32057  00CAC6  CFF4 F090          	movff	prodh,___flmul@temp+1
 32058                           
 32059                           ; BSR set to: 0
 32060  00CACA  518F               	movf	___flmul@temp& (0+255),w,b
 32061  00CACC  2785               	addwf	___flmul@grs& (0+255),f,b
 32062  00CACE  0E00               	movlw	0
 32063  00CAD0  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 32064  00CAD2  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 32065  00CAD4  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 32066                           
 32067                           ; BSR set to: 0
 32068  00CAD6  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32069  00CAD8  278B               	addwf	___flmul@prod& (0+255),f,b
 32070  00CADA  0E00               	movlw	0
 32071  00CADC  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32072  00CADE  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32073  00CAE0  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32074                           
 32075                           ; BSR set to: 0
 32076  00CAE2  C087  F088         	movff	___flmul@grs+2,___flmul@grs+3
 32077  00CAE6  C086  F087         	movff	___flmul@grs+1,___flmul@grs+2
 32078  00CAEA  C085  F086         	movff	___flmul@grs,___flmul@grs+1
 32079  00CAEE  6B85               	clrf	___flmul@grs& (0+255),b
 32080                           
 32081                           ; BSR set to: 0
 32082  00CAF0  517C               	movf	___flmul@a& (0+255),w,b
 32083  00CAF2  0379               	mulwf	(___flmul@b+1)& (0+255),b
 32084  00CAF4  CFF3 F08F          	movff	prodl,___flmul@temp
 32085  00CAF8  CFF4 F090          	movff	prodh,___flmul@temp+1
 32086                           
 32087                           ; BSR set to: 0
 32088  00CAFC  518F               	movf	___flmul@temp& (0+255),w,b
 32089  00CAFE  2785               	addwf	___flmul@grs& (0+255),f,b
 32090  00CB00  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32091  00CB02  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 32092  00CB04  0E00               	movlw	0
 32093  00CB06  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 32094  00CB08  0E00               	movlw	0
 32095  00CB0A  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 32096                           
 32097                           ; BSR set to: 0
 32098  00CB0C  517D               	movf	(___flmul@a+1)& (0+255),w,b
 32099  00CB0E  0378               	mulwf	___flmul@b& (0+255),b
 32100  00CB10  CFF3 F08F          	movff	prodl,___flmul@temp
 32101  00CB14  CFF4 F090          	movff	prodh,___flmul@temp+1
 32102                           
 32103                           ; BSR set to: 0
 32104  00CB18  518F               	movf	___flmul@temp& (0+255),w,b
 32105  00CB1A  2785               	addwf	___flmul@grs& (0+255),f,b
 32106  00CB1C  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32107  00CB1E  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 32108  00CB20  0E00               	movlw	0
 32109  00CB22  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 32110  00CB24  0E00               	movlw	0
 32111  00CB26  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 32112                           
 32113                           ; BSR set to: 0
 32114  00CB28  C087  F088         	movff	___flmul@grs+2,___flmul@grs+3
 32115  00CB2C  C086  F087         	movff	___flmul@grs+1,___flmul@grs+2
 32116  00CB30  C085  F086         	movff	___flmul@grs,___flmul@grs+1
 32117  00CB34  6B85               	clrf	___flmul@grs& (0+255),b
 32118  00CB36  517C               	movf	___flmul@a& (0+255),w,b
 32119  00CB38  0378               	mulwf	___flmul@b& (0+255),b
 32120  00CB3A  CFF3 F08F          	movff	prodl,___flmul@temp
 32121  00CB3E  CFF4 F090          	movff	prodh,___flmul@temp+1
 32122                           
 32123                           ; BSR set to: 0
 32124  00CB42  518F               	movf	___flmul@temp& (0+255),w,b
 32125  00CB44  2785               	addwf	___flmul@grs& (0+255),f,b
 32126  00CB46  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32127  00CB48  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 32128  00CB4A  0E00               	movlw	0
 32129  00CB4C  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 32130  00CB4E  0E00               	movlw	0
 32131  00CB50  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 32132                           
 32133                           ; BSR set to: 0
 32134  00CB52  517E               	movf	(___flmul@a+2)& (0+255),w,b
 32135  00CB54  0379               	mulwf	(___flmul@b+1)& (0+255),b
 32136  00CB56  CFF3 F08F          	movff	prodl,___flmul@temp
 32137  00CB5A  CFF4 F090          	movff	prodh,___flmul@temp+1
 32138  00CB5E  518F               	movf	___flmul@temp& (0+255),w,b
 32139  00CB60  278B               	addwf	___flmul@prod& (0+255),f,b
 32140  00CB62  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32141  00CB64  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32142  00CB66  0E00               	movlw	0
 32143  00CB68  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32144  00CB6A  0E00               	movlw	0
 32145  00CB6C  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32146                           
 32147                           ; BSR set to: 0
 32148  00CB6E  517D               	movf	(___flmul@a+1)& (0+255),w,b
 32149  00CB70  037A               	mulwf	(___flmul@b+2)& (0+255),b
 32150  00CB72  CFF3 F08F          	movff	prodl,___flmul@temp
 32151  00CB76  CFF4 F090          	movff	prodh,___flmul@temp+1
 32152                           
 32153                           ; BSR set to: 0
 32154  00CB7A  518F               	movf	___flmul@temp& (0+255),w,b
 32155  00CB7C  278B               	addwf	___flmul@prod& (0+255),f,b
 32156  00CB7E  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32157  00CB80  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32158  00CB82  0E00               	movlw	0
 32159  00CB84  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32160  00CB86  0E00               	movlw	0
 32161  00CB88  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32162  00CB8A  517E               	movf	(___flmul@a+2)& (0+255),w,b
 32163  00CB8C  037A               	mulwf	(___flmul@b+2)& (0+255),b
 32164  00CB8E  CFF3 F08F          	movff	prodl,___flmul@temp
 32165  00CB92  CFF4 F090          	movff	prodh,___flmul@temp+1
 32166                           
 32167                           ; BSR set to: 0
 32168  00CB96  518F               	movf	___flmul@temp& (0+255),w,b
 32169  00CB98  6F80               	movwf	??___flmul& (0+255),b
 32170  00CB9A  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32171  00CB9C  6F81               	movwf	(??___flmul+1)& (0+255),b
 32172  00CB9E  6B82               	clrf	(??___flmul+2)& (0+255),b
 32173  00CBA0  6B83               	clrf	(??___flmul+3)& (0+255),b
 32174  00CBA2  C082  F083         	movff	??___flmul+2,??___flmul+3
 32175  00CBA6  C081  F082         	movff	??___flmul+1,??___flmul+2
 32176  00CBAA  C080  F081         	movff	??___flmul,??___flmul+1
 32177  00CBAE  6B80               	clrf	??___flmul& (0+255),b
 32178  00CBB0  5180               	movf	??___flmul& (0+255),w,b
 32179  00CBB2  278B               	addwf	___flmul@prod& (0+255),f,b
 32180  00CBB4  5181               	movf	(??___flmul+1)& (0+255),w,b
 32181  00CBB6  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32182  00CBB8  5182               	movf	(??___flmul+2)& (0+255),w,b
 32183  00CBBA  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32184  00CBBC  5183               	movf	(??___flmul+3)& (0+255),w,b
 32185  00CBBE  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32186                           
 32187                           ; BSR set to: 0
 32188  00CBC0  C085  F080         	movff	___flmul@grs,??___flmul
 32189  00CBC4  C086  F081         	movff	___flmul@grs+1,??___flmul+1
 32190  00CBC8  C087  F082         	movff	___flmul@grs+2,??___flmul+2
 32191  00CBCC  C088  F083         	movff	___flmul@grs+3,??___flmul+3
 32192  00CBD0  0E19               	movlw	25
 32193  00CBD2  D005               	goto	u13190
 32194  00CBD4                     u13195:
 32195  00CBD4  90D8               	bcf	status,0,c
 32196  00CBD6  3383               	rrcf	(??___flmul+3)& (0+255),f,b
 32197  00CBD8  3382               	rrcf	(??___flmul+2)& (0+255),f,b
 32198  00CBDA  3381               	rrcf	(??___flmul+1)& (0+255),f,b
 32199  00CBDC  3380               	rrcf	??___flmul& (0+255),f,b
 32200  00CBDE                     u13190:
 32201  00CBDE  2EE8               	decfsz	wreg,f,c
 32202  00CBE0  D7F9               	goto	u13195
 32203  00CBE2  5180               	movf	??___flmul& (0+255),w,b
 32204  00CBE4  278B               	addwf	___flmul@prod& (0+255),f,b
 32205  00CBE6  5181               	movf	(??___flmul+1)& (0+255),w,b
 32206  00CBE8  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32207  00CBEA  5182               	movf	(??___flmul+2)& (0+255),w,b
 32208  00CBEC  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32209  00CBEE  5183               	movf	(??___flmul+3)& (0+255),w,b
 32210  00CBF0  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32211                           
 32212                           ; BSR set to: 0
 32213  00CBF2  C087  F088         	movff	___flmul@grs+2,___flmul@grs+3
 32214  00CBF6  C086  F087         	movff	___flmul@grs+1,___flmul@grs+2
 32215  00CBFA  C085  F086         	movff	___flmul@grs,___flmul@grs+1
 32216  00CBFE  6B85               	clrf	___flmul@grs& (0+255),b
 32217                           
 32218                           ; BSR set to: 0
 32219  00CC00  5189               	movf	___flmul@aexp& (0+255),w,b
 32220  00CC02  C08A  F080         	movff	___flmul@bexp,??___flmul
 32221  00CC06  6B81               	clrf	(??___flmul+1)& (0+255),b
 32222  00CC08  2780               	addwf	??___flmul& (0+255),f,b
 32223  00CC0A  0E00               	movlw	0
 32224  00CC0C  2381               	addwfc	(??___flmul+1)& (0+255),f,b
 32225  00CC0E  0E82               	movlw	130
 32226  00CC10  2580               	addwf	??___flmul& (0+255),w,b
 32227  00CC12  6F8F               	movwf	___flmul@temp& (0+255),b
 32228  00CC14  0EFF               	movlw	255
 32229  00CC16  2181               	addwfc	(??___flmul+1)& (0+255),w,b
 32230  00CC18  6F90               	movwf	(___flmul@temp+1)& (0+255),b
 32231  00CC1A  D00F               	goto	l3695
 32232  00CC1C                     
 32233                           ; BSR set to: 0
 32234                           
 32235                           ; BSR set to: 0
 32236  00CC1C  90D8               	bcf	status,0,c
 32237  00CC1E  378B               	rlcf	___flmul@prod& (0+255),f,b
 32238  00CC20  378C               	rlcf	(___flmul@prod+1)& (0+255),f,b
 32239  00CC22  378D               	rlcf	(___flmul@prod+2)& (0+255),f,b
 32240  00CC24  378E               	rlcf	(___flmul@prod+3)& (0+255),f,b
 32241                           
 32242                           ; BSR set to: 0
 32243  00CC26  BF88               	btfsc	(___flmul@grs+3)& (0+255),7,b
 32244                           
 32245                           ; BSR set to: 0
 32246  00CC28  818B               	bsf	___flmul@prod& (0+255),0,b
 32247                           
 32248                           ; BSR set to: 0
 32249  00CC2A  90D8               	bcf	status,0,c
 32250  00CC2C  3785               	rlcf	___flmul@grs& (0+255),f,b
 32251  00CC2E  3786               	rlcf	(___flmul@grs+1)& (0+255),f,b
 32252  00CC30  3787               	rlcf	(___flmul@grs+2)& (0+255),f,b
 32253  00CC32  3788               	rlcf	(___flmul@grs+3)& (0+255),f,b
 32254  00CC34  078F               	decf	___flmul@temp& (0+255),f,b
 32255  00CC36  A0D8               	btfss	status,0,c
 32256  00CC38  0790               	decf	(___flmul@temp+1)& (0+255),f,b
 32257  00CC3A                     l3695:
 32258                           
 32259                           ; BSR set to: 0
 32260                           
 32261                           ; BSR set to: 0
 32262  00CC3A  AF8D               	btfss	(___flmul@prod+2)& (0+255),7,b
 32263  00CC3C  D7EF               	goto	l3696
 32264                           
 32265                           ; BSR set to: 0
 32266                           
 32267                           ; BSR set to: 0
 32268  00CC3E  0E00               	movlw	0
 32269  00CC40  6F89               	movwf	___flmul@aexp& (0+255),b
 32270                           
 32271                           ; BSR set to: 0
 32272  00CC42  AF88               	btfss	(___flmul@grs+3)& (0+255),7,b
 32273  00CC44  D016               	goto	l3702
 32274                           
 32275                           ; BSR set to: 0
 32276  00CC46  0EFF               	movlw	255
 32277  00CC48  1585               	andwf	___flmul@grs& (0+255),w,b
 32278  00CC4A  6F80               	movwf	??___flmul& (0+255),b
 32279  00CC4C  0EFF               	movlw	255
 32280  00CC4E  1586               	andwf	(___flmul@grs+1)& (0+255),w,b
 32281  00CC50  6F81               	movwf	(??___flmul+1)& (0+255),b
 32282  00CC52  0EFF               	movlw	255
 32283  00CC54  1587               	andwf	(___flmul@grs+2)& (0+255),w,b
 32284  00CC56  6F82               	movwf	(??___flmul+2)& (0+255),b
 32285  00CC58  0E7F               	movlw	127
 32286  00CC5A  1588               	andwf	(___flmul@grs+3)& (0+255),w,b
 32287  00CC5C  6F83               	movwf	(??___flmul+3)& (0+255),b
 32288  00CC5E  5180               	movf	??___flmul& (0+255),w,b
 32289  00CC60  1181               	iorwf	(??___flmul+1)& (0+255),w,b
 32290  00CC62  1182               	iorwf	(??___flmul+2)& (0+255),w,b
 32291  00CC64  1183               	iorwf	(??___flmul+3)& (0+255),w,b
 32292  00CC66  A4D8               	btfss	status,2,c
 32293  00CC68  D002               	goto	u13240
 32294                           
 32295                           ; BSR set to: 0
 32296                           
 32297                           ; BSR set to: 0
 32298  00CC6A  A18B               	btfss	___flmul@prod& (0+255),0,b
 32299  00CC6C  D002               	goto	l3702
 32300  00CC6E                     u13240:
 32301                           
 32302                           ; BSR set to: 0
 32303  00CC6E  0E01               	movlw	1
 32304  00CC70  6F89               	movwf	___flmul@aexp& (0+255),b
 32305  00CC72                     l3702:
 32306                           
 32307                           ; BSR set to: 0
 32308                           
 32309                           ; BSR set to: 0
 32310                           
 32311                           ; BSR set to: 0
 32312  00CC72  5189               	movf	___flmul@aexp& (0+255),w,b
 32313  00CC74  B4D8               	btfsc	status,2,c
 32314  00CC76  D01F               	goto	l3704
 32315                           
 32316                           ; BSR set to: 0
 32317  00CC78  0E01               	movlw	1
 32318  00CC7A  278B               	addwf	___flmul@prod& (0+255),f,b
 32319  00CC7C  0E00               	movlw	0
 32320  00CC7E  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32321  00CC80  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32322  00CC82  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32323                           
 32324                           ; BSR set to: 0
 32325  00CC84  A18E               	btfss	(___flmul@prod+3)& (0+255),0,b
 32326  00CC86  D017               	goto	l3704
 32327                           
 32328                           ; BSR set to: 0
 32329  00CC88  C08B  F080         	movff	___flmul@prod,??___flmul
 32330  00CC8C  C08C  F081         	movff	___flmul@prod+1,??___flmul+1
 32331  00CC90  C08D  F082         	movff	___flmul@prod+2,??___flmul+2
 32332  00CC94  C08E  F083         	movff	___flmul@prod+3,??___flmul+3
 32333  00CC98  3583               	rlcf	(??___flmul+3)& (0+255),w,b
 32334  00CC9A  3383               	rrcf	(??___flmul+3)& (0+255),f,b
 32335  00CC9C  3382               	rrcf	(??___flmul+2)& (0+255),f,b
 32336  00CC9E  3381               	rrcf	(??___flmul+1)& (0+255),f,b
 32337  00CCA0  3380               	rrcf	??___flmul& (0+255),f,b
 32338  00CCA2  C080  F08B         	movff	??___flmul,___flmul@prod
 32339  00CCA6  C081  F08C         	movff	??___flmul+1,___flmul@prod+1
 32340  00CCAA  C082  F08D         	movff	??___flmul+2,___flmul@prod+2
 32341  00CCAE  C083  F08E         	movff	??___flmul+3,___flmul@prod+3
 32342                           
 32343                           ; BSR set to: 0
 32344  00CCB2  4B8F               	infsnz	___flmul@temp& (0+255),f,b
 32345  00CCB4  2B90               	incf	(___flmul@temp+1)& (0+255),f,b
 32346  00CCB6                     l3704:
 32347                           
 32348                           ; BSR set to: 0
 32349                           
 32350                           ; BSR set to: 0
 32351                           
 32352                           ; BSR set to: 0
 32353  00CCB6  BF90               	btfsc	(___flmul@temp+1)& (0+255),7,b
 32354  00CCB8  D00D               	goto	l3705
 32355  00CCBA  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32356  00CCBC  E103               	bnz	u13270
 32357  00CCBE  298F               	incf	___flmul@temp& (0+255),w,b
 32358  00CCC0  A0D8               	btfss	status,0,c
 32359  00CCC2  D008               	goto	l3705
 32360  00CCC4                     u13270:
 32361                           
 32362                           ; BSR set to: 0
 32363  00CCC4  0E00               	movlw	0
 32364  00CCC6  6F8B               	movwf	___flmul@prod& (0+255),b
 32365  00CCC8  0E00               	movlw	0
 32366  00CCCA  6F8C               	movwf	(___flmul@prod+1)& (0+255),b
 32367  00CCCC  0E80               	movlw	128
 32368  00CCCE  6F8D               	movwf	(___flmul@prod+2)& (0+255),b
 32369  00CCD0  0E7F               	movlw	127
 32370  00CCD2  D020               	goto	L42
 32371  00CCD4                     l3705:
 32372                           
 32373                           ; BSR set to: 0
 32374                           
 32375                           ; BSR set to: 0
 32376  00CCD4  BF90               	btfsc	(___flmul@temp+1)& (0+255),7,b
 32377  00CCD6  D005               	goto	u13280
 32378  00CCD8  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32379  00CCDA  E10E               	bnz	l3707
 32380  00CCDC  058F               	decf	___flmul@temp& (0+255),w,b
 32381  00CCDE  B0D8               	btfsc	status,0,c
 32382  00CCE0  D00B               	goto	l3707
 32383  00CCE2                     u13280:
 32384                           
 32385                           ; BSR set to: 0
 32386  00CCE2  0E00               	movlw	0
 32387  00CCE4  6F8B               	movwf	___flmul@prod& (0+255),b
 32388  00CCE6  0E00               	movlw	0
 32389  00CCE8  6F8C               	movwf	(___flmul@prod+1)& (0+255),b
 32390  00CCEA  0E00               	movlw	0
 32391  00CCEC  6F8D               	movwf	(___flmul@prod+2)& (0+255),b
 32392  00CCEE  0E00               	movlw	0
 32393  00CCF0  6F8E               	movwf	(___flmul@prod+3)& (0+255),b
 32394  00CCF2  0E00               	movlw	0
 32395  00CCF4  6F84               	movwf	___flmul@sign& (0+255),b
 32396  00CCF6  D00F               	goto	l3708
 32397  00CCF8                     l3707:
 32398                           
 32399                           ; BSR set to: 0
 32400  00CCF8  C08F  F08A         	movff	___flmul@temp,___flmul@bexp
 32401                           
 32402                           ; BSR set to: 0
 32403  00CCFC  0EFF               	movlw	255
 32404  00CCFE  178B               	andwf	___flmul@prod& (0+255),f,b
 32405  00CD00  0EFF               	movlw	255
 32406  00CD02  178C               	andwf	(___flmul@prod+1)& (0+255),f,b
 32407  00CD04  0E7F               	movlw	127
 32408  00CD06  178D               	andwf	(___flmul@prod+2)& (0+255),f,b
 32409  00CD08  0E00               	movlw	0
 32410  00CD0A  178E               	andwf	(___flmul@prod+3)& (0+255),f,b
 32411                           
 32412                           ; BSR set to: 0
 32413  00CD0C  B18A               	btfsc	___flmul@bexp& (0+255),0,b
 32414                           
 32415                           ; BSR set to: 0
 32416  00CD0E  8F8D               	bsf	(___flmul@prod+2)& (0+255),7,b
 32417                           
 32418                           ; BSR set to: 0
 32419                           
 32420                           ; BSR set to: 0
 32421  00CD10  90D8               	bcf	status,0,c
 32422  00CD12  318A               	rrcf	___flmul@bexp& (0+255),w,b
 32423  00CD14                     L42:
 32424  00CD14  6F8E               	movwf	(___flmul@prod+3)& (0+255),b
 32425  00CD16                     l3708:
 32426                           
 32427                           ; BSR set to: 0
 32428                           
 32429                           ; BSR set to: 0
 32430                           
 32431                           ; BSR set to: 0
 32432  00CD16  5184               	movf	___flmul@sign& (0+255),w,b
 32433  00CD18  138E               	iorwf	(___flmul@prod+3)& (0+255),f,b
 32434                           
 32435                           ; BSR set to: 0
 32436  00CD1A  C08B  F078         	movff	___flmul@prod,?___flmul
 32437  00CD1E  C08C  F079         	movff	___flmul@prod+1,?___flmul+1
 32438  00CD22  C08D  F07A         	movff	___flmul@prod+2,?___flmul+2
 32439  00CD26  C08E  F07B         	movff	___flmul@prod+3,?___flmul+3
 32440  00CD2A  0012               	return	
 32441  00CD2C                     __end_of___flmul:
 32442                           	opt stack 0
 32443                           tblptru	equ	0xFF8
 32444                           tblptrh	equ	0xFF7
 32445                           tblptrl	equ	0xFF6
 32446                           tablat	equ	0xFF5
 32447                           prodh	equ	0xFF4
 32448                           prodl	equ	0xFF3
 32449                           intcon	equ	0xFF2
 32450                           postinc0	equ	0xFEE
 32451                           wreg	equ	0xFE8
 32452                           indf1	equ	0xFE7
 32453                           postinc1	equ	0xFE6
 32454                           postdec1	equ	0xFE5
 32455                           plusw1	equ	0xFE3
 32456                           fsr1h	equ	0xFE2
 32457                           fsr1l	equ	0xFE1
 32458                           indf2	equ	0xFDF
 32459                           postinc2	equ	0xFDE
 32460                           postdec2	equ	0xFDD
 32461                           plusw2	equ	0xFDB
 32462                           fsr2h	equ	0xFDA
 32463                           fsr2l	equ	0xFD9
 32464                           status	equ	0xFD8
 32465                           
 32466 ;; *************** function ___fladd *****************
 32467 ;; Defined at:
 32468 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
 32469 ;; Parameters:    Size  Location     Type
 32470 ;;  b               4   28[BANK0 ] unsigned char 
 32471 ;;  a               4   32[BANK0 ] unsigned char 
 32472 ;; Auto vars:     Size  Location     Type
 32473 ;;  grs             1   47[BANK0 ] unsigned char 
 32474 ;;  bexp            1   46[BANK0 ] unsigned char 
 32475 ;;  aexp            1   45[BANK0 ] unsigned char 
 32476 ;;  signs           1   44[BANK0 ] unsigned char 
 32477 ;; Return value:  Size  Location     Type
 32478 ;;                  4   28[BANK0 ] unsigned char 
 32479 ;; Registers used:
 32480 ;;		wreg, status,2, status,0
 32481 ;; Tracked objects:
 32482 ;;		On entry : 0/0
 32483 ;;		On exit  : 0/0
 32484 ;;		Unchanged: 0/0
 32485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32486 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32487 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32488 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32489 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32490 ;;Total ram usage:       20 bytes
 32491 ;; Hardware stack levels used:    1
 32492 ;; Hardware stack levels required when called:   10
 32493 ;; This function calls:
 32494 ;;		Nothing
 32495 ;; This function is called by:
 32496 ;;		__motor_steps_from_degrees_int
 32497 ;;		_motor_divide_jump_to_nearest
 32498 ;;		_adc_read_temperature
 32499 ;;		__motor_steps_from_degrees_float
 32500 ;; This function uses a non-reentrant model
 32501 ;;
 32502                           
 32503                           	psect	text127
 32504  00CD2C                     __ptext127:
 32505                           	opt stack 0
 32506  00CD2C                     ___fladd:
 32507                           	opt stack 17
 32508                           
 32509                           ; BSR set to: 0
 32510                           ;incstack = 0
 32511  00CD2C  0100               	movlb	0	; () banked
 32512  00CD2E  517F               	movf	(___fladd@b+3)& (0+255),w,b
 32513  00CD30  0B80               	andlw	128
 32514  00CD32  6F8C               	movwf	___fladd@signs& (0+255),b
 32515  00CD34  517F               	movf	(___fladd@b+3)& (0+255),w,b
 32516  00CD36  257F               	addwf	(___fladd@b+3)& (0+255),w,b
 32517  00CD38  6F8E               	movwf	___fladd@bexp& (0+255),b
 32518                           
 32519                           ; BSR set to: 0
 32520  00CD3A  BF7E               	btfsc	(___fladd@b+2)& (0+255),7,b
 32521                           
 32522                           ; BSR set to: 0
 32523  00CD3C  818E               	bsf	___fladd@bexp& (0+255),0,b
 32524                           
 32525                           ; BSR set to: 0
 32526                           
 32527                           ; BSR set to: 0
 32528  00CD3E  518E               	movf	___fladd@bexp& (0+255),w,b
 32529  00CD40  B4D8               	btfsc	status,2,c
 32530  00CD42  D00D               	goto	l3593
 32531                           
 32532                           ; BSR set to: 0
 32533  00CD44  298E               	incf	___fladd@bexp& (0+255),w,b
 32534  00CD46  A4D8               	btfss	status,2,c
 32535  00CD48  D008               	goto	l3594
 32536                           
 32537                           ; BSR set to: 0
 32538  00CD4A  0E00               	movlw	0
 32539  00CD4C  6F7C               	movwf	___fladd@b& (0+255),b
 32540  00CD4E  0E00               	movlw	0
 32541  00CD50  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 32542  00CD52  0E00               	movlw	0
 32543  00CD54  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 32544  00CD56  0E00               	movlw	0
 32545  00CD58  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 32546  00CD5A                     l3594:
 32547                           
 32548                           ; BSR set to: 0
 32549                           
 32550                           ; BSR set to: 0
 32551  00CD5A  8F7E               	bsf	(___fladd@b+2)& (0+255),7,b
 32552  00CD5C  D006               	goto	L43
 32553  00CD5E                     l3593:
 32554                           
 32555                           ; BSR set to: 0
 32556                           
 32557                           ; BSR set to: 0
 32558  00CD5E  0E00               	movlw	0
 32559  00CD60  6F7C               	movwf	___fladd@b& (0+255),b
 32560  00CD62  0E00               	movlw	0
 32561  00CD64  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 32562  00CD66  0E00               	movlw	0
 32563  00CD68  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 32564  00CD6A                     L43:
 32565  00CD6A  0E00               	movlw	0
 32566  00CD6C  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 32567                           
 32568                           ; BSR set to: 0
 32569                           
 32570                           ; BSR set to: 0
 32571  00CD6E  5183               	movf	(___fladd@a+3)& (0+255),w,b
 32572  00CD70  0B80               	andlw	128
 32573  00CD72  6F8D               	movwf	___fladd@aexp& (0+255),b
 32574                           
 32575                           ; BSR set to: 0
 32576  00CD74  518C               	movf	___fladd@signs& (0+255),w,b
 32577  00CD76  198D               	xorwf	___fladd@aexp& (0+255),w,b
 32578  00CD78  A4D8               	btfss	status,2,c
 32579                           
 32580                           ; BSR set to: 0
 32581  00CD7A  8D8C               	bsf	___fladd@signs& (0+255),6,b
 32582                           
 32583                           ; BSR set to: 0
 32584                           
 32585                           ; BSR set to: 0
 32586  00CD7C  5183               	movf	(___fladd@a+3)& (0+255),w,b
 32587  00CD7E  2583               	addwf	(___fladd@a+3)& (0+255),w,b
 32588  00CD80  6F8D               	movwf	___fladd@aexp& (0+255),b
 32589                           
 32590                           ; BSR set to: 0
 32591  00CD82  BF82               	btfsc	(___fladd@a+2)& (0+255),7,b
 32592                           
 32593                           ; BSR set to: 0
 32594  00CD84  818D               	bsf	___fladd@aexp& (0+255),0,b
 32595                           
 32596                           ; BSR set to: 0
 32597                           
 32598                           ; BSR set to: 0
 32599  00CD86  518D               	movf	___fladd@aexp& (0+255),w,b
 32600  00CD88  B4D8               	btfsc	status,2,c
 32601  00CD8A  D00D               	goto	l3598
 32602                           
 32603                           ; BSR set to: 0
 32604  00CD8C  298D               	incf	___fladd@aexp& (0+255),w,b
 32605  00CD8E  A4D8               	btfss	status,2,c
 32606  00CD90  D008               	goto	l3599
 32607                           
 32608                           ; BSR set to: 0
 32609  00CD92  0E00               	movlw	0
 32610  00CD94  6F80               	movwf	___fladd@a& (0+255),b
 32611  00CD96  0E00               	movlw	0
 32612  00CD98  6F81               	movwf	(___fladd@a+1)& (0+255),b
 32613  00CD9A  0E00               	movlw	0
 32614  00CD9C  6F82               	movwf	(___fladd@a+2)& (0+255),b
 32615  00CD9E  0E00               	movlw	0
 32616  00CDA0  6F83               	movwf	(___fladd@a+3)& (0+255),b
 32617  00CDA2                     l3599:
 32618                           
 32619                           ; BSR set to: 0
 32620                           
 32621                           ; BSR set to: 0
 32622  00CDA2  8F82               	bsf	(___fladd@a+2)& (0+255),7,b
 32623  00CDA4  D006               	goto	L44
 32624  00CDA6                     l3598:
 32625                           
 32626                           ; BSR set to: 0
 32627                           
 32628                           ; BSR set to: 0
 32629  00CDA6  0E00               	movlw	0
 32630  00CDA8  6F80               	movwf	___fladd@a& (0+255),b
 32631  00CDAA  0E00               	movlw	0
 32632  00CDAC  6F81               	movwf	(___fladd@a+1)& (0+255),b
 32633  00CDAE  0E00               	movlw	0
 32634  00CDB0  6F82               	movwf	(___fladd@a+2)& (0+255),b
 32635  00CDB2                     L44:
 32636  00CDB2  0E00               	movlw	0
 32637  00CDB4  6F83               	movwf	(___fladd@a+3)& (0+255),b
 32638                           
 32639                           ; BSR set to: 0
 32640                           
 32641                           ; BSR set to: 0
 32642  00CDB6  518E               	movf	___fladd@bexp& (0+255),w,b
 32643  00CDB8  5D8D               	subwf	___fladd@aexp& (0+255),w,b
 32644  00CDBA  B0D8               	btfsc	status,0,c
 32645  00CDBC  D022               	goto	l3601
 32646                           
 32647                           ; BSR set to: 0
 32648  00CDBE  AD8C               	btfss	___fladd@signs& (0+255),6,b
 32649  00CDC0  D002               	goto	l3602
 32650                           
 32651                           ; BSR set to: 0
 32652  00CDC2  0E80               	movlw	128
 32653  00CDC4  1B8C               	xorwf	___fladd@signs& (0+255),f,b
 32654  00CDC6                     l3602:
 32655                           
 32656                           ; BSR set to: 0
 32657                           
 32658                           ; BSR set to: 0
 32659  00CDC6  C08E  F08F         	movff	___fladd@bexp,___fladd@grs
 32660                           
 32661                           ; BSR set to: 0
 32662  00CDCA  C08D  F08E         	movff	___fladd@aexp,___fladd@bexp
 32663                           
 32664                           ; BSR set to: 0
 32665  00CDCE  C08F  F08D         	movff	___fladd@grs,___fladd@aexp
 32666                           
 32667                           ; BSR set to: 0
 32668  00CDD2  C07C  F08F         	movff	___fladd@b,___fladd@grs
 32669                           
 32670                           ; BSR set to: 0
 32671  00CDD6  C080  F07C         	movff	___fladd@a,___fladd@b
 32672                           
 32673                           ; BSR set to: 0
 32674  00CDDA  C08F  F080         	movff	___fladd@grs,___fladd@a
 32675                           
 32676                           ; BSR set to: 0
 32677  00CDDE  C07D  F08F         	movff	___fladd@b+1,___fladd@grs
 32678                           
 32679                           ; BSR set to: 0
 32680  00CDE2  C081  F07D         	movff	___fladd@a+1,___fladd@b+1
 32681                           
 32682                           ; BSR set to: 0
 32683  00CDE6  C08F  F081         	movff	___fladd@grs,___fladd@a+1
 32684                           
 32685                           ; BSR set to: 0
 32686  00CDEA  C07E  F08F         	movff	___fladd@b+2,___fladd@grs
 32687                           
 32688                           ; BSR set to: 0
 32689  00CDEE  C082  F07E         	movff	___fladd@a+2,___fladd@b+2
 32690                           
 32691                           ; BSR set to: 0
 32692  00CDF2  C08F  F082         	movff	___fladd@grs,___fladd@a+2
 32693                           
 32694                           ; BSR set to: 0
 32695  00CDF6  C07F  F08F         	movff	___fladd@b+3,___fladd@grs
 32696                           
 32697                           ; BSR set to: 0
 32698  00CDFA  C083  F07F         	movff	___fladd@a+3,___fladd@b+3
 32699                           
 32700                           ; BSR set to: 0
 32701  00CDFE  C08F  F083         	movff	___fladd@grs,___fladd@a+3
 32702  00CE02                     l3601:
 32703                           
 32704                           ; BSR set to: 0
 32705                           
 32706                           ; BSR set to: 0
 32707  00CE02  0E00               	movlw	0
 32708  00CE04  6F8F               	movwf	___fladd@grs& (0+255),b
 32709                           
 32710                           ; BSR set to: 0
 32711  00CE06  518E               	movf	___fladd@bexp& (0+255),w,b
 32712  00CE08  6F84               	movwf	??___fladd& (0+255),b
 32713  00CE0A  6B85               	clrf	(??___fladd+1)& (0+255),b
 32714  00CE0C  1F84               	comf	??___fladd& (0+255),f,b
 32715  00CE0E  1F85               	comf	(??___fladd+1)& (0+255),f,b
 32716  00CE10  4B84               	infsnz	??___fladd& (0+255),f,b
 32717  00CE12  2B85               	incf	(??___fladd+1)& (0+255),f,b
 32718  00CE14  518D               	movf	___fladd@aexp& (0+255),w,b
 32719  00CE16  6F86               	movwf	(??___fladd+2)& (0+255),b
 32720  00CE18  6B87               	clrf	(??___fladd+3)& (0+255),b
 32721  00CE1A  5184               	movf	??___fladd& (0+255),w,b
 32722  00CE1C  2786               	addwf	(??___fladd+2)& (0+255),f,b
 32723  00CE1E  5185               	movf	(??___fladd+1)& (0+255),w,b
 32724  00CE20  2387               	addwfc	(??___fladd+3)& (0+255),f,b
 32725  00CE22  BF87               	btfsc	(??___fladd+3)& (0+255),7,b
 32726  00CE24  D02C               	goto	l3605
 32727  00CE26  5187               	movf	(??___fladd+3)& (0+255),w,b
 32728  00CE28  E104               	bnz	u14610
 32729  00CE2A  0E1A               	movlw	26
 32730  00CE2C  5D86               	subwf	(??___fladd+2)& (0+255),w,b
 32731  00CE2E  A0D8               	btfss	status,0,c
 32732  00CE30  D026               	goto	l3605
 32733  00CE32                     u14610:
 32734                           
 32735                           ; BSR set to: 0
 32736  00CE32  517C               	movf	___fladd@b& (0+255),w,b
 32737  00CE34  117D               	iorwf	(___fladd@b+1)& (0+255),w,b
 32738  00CE36  117E               	iorwf	(___fladd@b+2)& (0+255),w,b
 32739  00CE38  117F               	iorwf	(___fladd@b+3)& (0+255),w,b
 32740  00CE3A  B4D8               	btfsc	status,2,c
 32741  00CE3C  D002               	goto	u14620
 32742  00CE3E  0E01               	movlw	1
 32743  00CE40  D001               	goto	u14630
 32744  00CE42                     u14620:
 32745  00CE42  0E00               	movlw	0
 32746  00CE44                     u14630:
 32747  00CE44  6F8F               	movwf	___fladd@grs& (0+255),b
 32748                           
 32749                           ; BSR set to: 0
 32750  00CE46  0E00               	movlw	0
 32751  00CE48  6F7C               	movwf	___fladd@b& (0+255),b
 32752  00CE4A  0E00               	movlw	0
 32753  00CE4C  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 32754  00CE4E  0E00               	movlw	0
 32755  00CE50  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 32756  00CE52  0E00               	movlw	0
 32757  00CE54  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 32758                           
 32759                           ; BSR set to: 0
 32760  00CE56  C08D  F08E         	movff	___fladd@aexp,___fladd@bexp
 32761  00CE5A  D015               	goto	u14660
 32762  00CE5C                     l3606:
 32763                           
 32764                           ; BSR set to: 0
 32765  00CE5C  A18F               	btfss	___fladd@grs& (0+255),0,b
 32766  00CE5E  D005               	goto	l3607
 32767                           
 32768                           ; BSR set to: 0
 32769  00CE60  90D8               	bcf	status,0,c
 32770  00CE62  318F               	rrcf	___fladd@grs& (0+255),w,b
 32771  00CE64  0901               	iorlw	1
 32772  00CE66  6F8F               	movwf	___fladd@grs& (0+255),b
 32773  00CE68  D002               	goto	l3608
 32774  00CE6A                     l3607:
 32775                           
 32776                           ; BSR set to: 0
 32777                           
 32778                           ; BSR set to: 0
 32779  00CE6A  90D8               	bcf	status,0,c
 32780  00CE6C  338F               	rrcf	___fladd@grs& (0+255),f,b
 32781  00CE6E                     l3608:
 32782                           
 32783                           ; BSR set to: 0
 32784                           
 32785                           ; BSR set to: 0
 32786  00CE6E  B17C               	btfsc	___fladd@b& (0+255),0,b
 32787                           
 32788                           ; BSR set to: 0
 32789  00CE70  8F8F               	bsf	___fladd@grs& (0+255),7,b
 32790                           
 32791                           ; BSR set to: 0
 32792                           
 32793                           ; BSR set to: 0
 32794  00CE72  357F               	rlcf	(___fladd@b+3)& (0+255),w,b
 32795  00CE74  337F               	rrcf	(___fladd@b+3)& (0+255),f,b
 32796  00CE76  337E               	rrcf	(___fladd@b+2)& (0+255),f,b
 32797  00CE78  337D               	rrcf	(___fladd@b+1)& (0+255),f,b
 32798  00CE7A  337C               	rrcf	___fladd@b& (0+255),f,b
 32799                           
 32800                           ; BSR set to: 0
 32801  00CE7C  2B8E               	incf	___fladd@bexp& (0+255),f,b
 32802  00CE7E                     l3605:
 32803                           
 32804                           ; BSR set to: 0
 32805  00CE7E  518D               	movf	___fladd@aexp& (0+255),w,b
 32806  00CE80  5D8E               	subwf	___fladd@bexp& (0+255),w,b
 32807  00CE82  A0D8               	btfss	status,0,c
 32808  00CE84  D7EB               	goto	l3606
 32809  00CE86                     u14660:
 32810                           
 32811                           ; BSR set to: 0
 32812                           
 32813                           ; BSR set to: 0
 32814  00CE86  BD8C               	btfsc	___fladd@signs& (0+255),6,b
 32815  00CE88  D028               	goto	l3611
 32816                           
 32817                           ; BSR set to: 0
 32818  00CE8A  518E               	movf	___fladd@bexp& (0+255),w,b
 32819  00CE8C  A4D8               	btfss	status,2,c
 32820  00CE8E  D009               	goto	l3612
 32821                           
 32822                           ; BSR set to: 0
 32823  00CE90  0E00               	movlw	0
 32824  00CE92  6F7C               	movwf	?___fladd& (0+255),b
 32825  00CE94  0E00               	movlw	0
 32826  00CE96  6F7D               	movwf	(?___fladd+1)& (0+255),b
 32827  00CE98  0E00               	movlw	0
 32828  00CE9A  6F7E               	movwf	(?___fladd+2)& (0+255),b
 32829  00CE9C  0E00               	movlw	0
 32830  00CE9E  6F7F               	movwf	(?___fladd+3)& (0+255),b
 32831                           
 32832                           ; BSR set to: 0
 32833  00CEA0  0012               	return	
 32834  00CEA2                     l3612:
 32835                           
 32836                           ; BSR set to: 0
 32837                           
 32838                           ; BSR set to: 0
 32839  00CEA2  5180               	movf	___fladd@a& (0+255),w,b
 32840  00CEA4  277C               	addwf	___fladd@b& (0+255),f,b
 32841  00CEA6  5181               	movf	(___fladd@a+1)& (0+255),w,b
 32842  00CEA8  237D               	addwfc	(___fladd@b+1)& (0+255),f,b
 32843  00CEAA  5182               	movf	(___fladd@a+2)& (0+255),w,b
 32844  00CEAC  237E               	addwfc	(___fladd@b+2)& (0+255),f,b
 32845  00CEAE  5183               	movf	(___fladd@a+3)& (0+255),w,b
 32846  00CEB0  237F               	addwfc	(___fladd@b+3)& (0+255),f,b
 32847                           
 32848                           ; BSR set to: 0
 32849  00CEB2  A17F               	btfss	(___fladd@b+3)& (0+255),0,b
 32850  00CEB4  D082               	goto	u14790
 32851                           
 32852                           ; BSR set to: 0
 32853  00CEB6  A18F               	btfss	___fladd@grs& (0+255),0,b
 32854  00CEB8  D005               	goto	l3615
 32855                           
 32856                           ; BSR set to: 0
 32857  00CEBA  90D8               	bcf	status,0,c
 32858  00CEBC  318F               	rrcf	___fladd@grs& (0+255),w,b
 32859  00CEBE  0901               	iorlw	1
 32860  00CEC0  6F8F               	movwf	___fladd@grs& (0+255),b
 32861  00CEC2  D002               	goto	l3616
 32862  00CEC4                     l3615:
 32863                           
 32864                           ; BSR set to: 0
 32865                           
 32866                           ; BSR set to: 0
 32867  00CEC4  90D8               	bcf	status,0,c
 32868  00CEC6  338F               	rrcf	___fladd@grs& (0+255),f,b
 32869  00CEC8                     l3616:
 32870                           
 32871                           ; BSR set to: 0
 32872                           
 32873                           ; BSR set to: 0
 32874  00CEC8  B17C               	btfsc	___fladd@b& (0+255),0,b
 32875                           
 32876                           ; BSR set to: 0
 32877  00CECA  8F8F               	bsf	___fladd@grs& (0+255),7,b
 32878                           
 32879                           ; BSR set to: 0
 32880                           
 32881                           ; BSR set to: 0
 32882  00CECC  357F               	rlcf	(___fladd@b+3)& (0+255),w,b
 32883  00CECE  337F               	rrcf	(___fladd@b+3)& (0+255),f,b
 32884  00CED0  337E               	rrcf	(___fladd@b+2)& (0+255),f,b
 32885  00CED2  337D               	rrcf	(___fladd@b+1)& (0+255),f,b
 32886  00CED4  337C               	rrcf	___fladd@b& (0+255),f,b
 32887                           
 32888                           ; BSR set to: 0
 32889  00CED6  2B8E               	incf	___fladd@bexp& (0+255),f,b
 32890                           
 32891                           ; BSR set to: 0
 32892  00CED8  D070               	goto	u14790
 32893  00CEDA                     l3611:
 32894                           
 32895                           ; BSR set to: 0
 32896                           
 32897                           ; BSR set to: 0
 32898  00CEDA  5180               	movf	___fladd@a& (0+255),w,b
 32899  00CEDC  5D7C               	subwf	___fladd@b& (0+255),w,b
 32900  00CEDE  5181               	movf	(___fladd@a+1)& (0+255),w,b
 32901  00CEE0  597D               	subwfb	(___fladd@b+1)& (0+255),w,b
 32902  00CEE2  5182               	movf	(___fladd@a+2)& (0+255),w,b
 32903  00CEE4  597E               	subwfb	(___fladd@b+2)& (0+255),w,b
 32904  00CEE6  517F               	movf	(___fladd@b+3)& (0+255),w,b
 32905  00CEE8  0A80               	xorlw	128
 32906  00CEEA  6F84               	movwf	??___fladd& (0+255),b
 32907  00CEEC  5183               	movf	(___fladd@a+3)& (0+255),w,b
 32908  00CEEE  0A80               	xorlw	128
 32909  00CEF0  5984               	subwfb	??___fladd& (0+255),w,b
 32910  00CEF2  B0D8               	btfsc	status,0,c
 32911  00CEF4  D036               	goto	l3619
 32912                           
 32913                           ; BSR set to: 0
 32914  00CEF6  C07C  F084         	movff	___fladd@b,??___fladd
 32915  00CEFA  C07D  F085         	movff	___fladd@b+1,??___fladd+1
 32916  00CEFE  C07E  F086         	movff	___fladd@b+2,??___fladd+2
 32917  00CF02  C07F  F087         	movff	___fladd@b+3,??___fladd+3
 32918  00CF06  1F84               	comf	??___fladd& (0+255),f,b
 32919  00CF08  1F85               	comf	(??___fladd+1)& (0+255),f,b
 32920  00CF0A  1F86               	comf	(??___fladd+2)& (0+255),f,b
 32921  00CF0C  1F87               	comf	(??___fladd+3)& (0+255),f,b
 32922  00CF0E  2B84               	incf	??___fladd& (0+255),f,b
 32923  00CF10  0E00               	movlw	0
 32924  00CF12  2385               	addwfc	(??___fladd+1)& (0+255),f,b
 32925  00CF14  2386               	addwfc	(??___fladd+2)& (0+255),f,b
 32926  00CF16  2387               	addwfc	(??___fladd+3)& (0+255),f,b
 32927  00CF18  5180               	movf	___fladd@a& (0+255),w,b
 32928  00CF1A  2584               	addwf	??___fladd& (0+255),w,b
 32929  00CF1C  6F88               	movwf	(??___fladd+4)& (0+255),b
 32930  00CF1E  5181               	movf	(___fladd@a+1)& (0+255),w,b
 32931  00CF20  2185               	addwfc	(??___fladd+1)& (0+255),w,b
 32932  00CF22  6F89               	movwf	(??___fladd+5)& (0+255),b
 32933  00CF24  5182               	movf	(___fladd@a+2)& (0+255),w,b
 32934  00CF26  2186               	addwfc	(??___fladd+2)& (0+255),w,b
 32935  00CF28  6F8A               	movwf	(??___fladd+6)& (0+255),b
 32936  00CF2A  5183               	movf	(___fladd@a+3)& (0+255),w,b
 32937  00CF2C  2187               	addwfc	(??___fladd+3)& (0+255),w,b
 32938  00CF2E  6F8B               	movwf	(??___fladd+7)& (0+255),b
 32939  00CF30  0EFF               	movlw	255
 32940  00CF32  2588               	addwf	(??___fladd+4)& (0+255),w,b
 32941  00CF34  6F7C               	movwf	___fladd@b& (0+255),b
 32942  00CF36  0EFF               	movlw	255
 32943  00CF38  2189               	addwfc	(??___fladd+5)& (0+255),w,b
 32944  00CF3A  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 32945  00CF3C  0EFF               	movlw	255
 32946  00CF3E  218A               	addwfc	(??___fladd+6)& (0+255),w,b
 32947  00CF40  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 32948  00CF42  0EFF               	movlw	255
 32949  00CF44  218B               	addwfc	(??___fladd+7)& (0+255),w,b
 32950  00CF46  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 32951  00CF48  0E80               	movlw	128
 32952  00CF4A  1B8C               	xorwf	___fladd@signs& (0+255),f,b
 32953                           
 32954                           ; BSR set to: 0
 32955  00CF4C  6D8F               	negf	___fladd@grs& (0+255),b
 32956                           
 32957                           ; BSR set to: 0
 32958  00CF4E  518F               	movf	___fladd@grs& (0+255),w,b
 32959  00CF50  A4D8               	btfss	status,2,c
 32960  00CF52  D00F               	goto	l3621
 32961                           
 32962                           ; BSR set to: 0
 32963  00CF54  0E01               	movlw	1
 32964  00CF56  277C               	addwf	___fladd@b& (0+255),f,b
 32965  00CF58  0E00               	movlw	0
 32966  00CF5A  237D               	addwfc	(___fladd@b+1)& (0+255),f,b
 32967  00CF5C  237E               	addwfc	(___fladd@b+2)& (0+255),f,b
 32968  00CF5E  237F               	addwfc	(___fladd@b+3)& (0+255),f,b
 32969                           
 32970                           ; BSR set to: 0
 32971  00CF60  D008               	goto	l3621
 32972  00CF62                     l3619:
 32973                           
 32974                           ; BSR set to: 0
 32975                           
 32976                           ; BSR set to: 0
 32977  00CF62  5180               	movf	___fladd@a& (0+255),w,b
 32978  00CF64  5F7C               	subwf	___fladd@b& (0+255),f,b
 32979  00CF66  5181               	movf	(___fladd@a+1)& (0+255),w,b
 32980  00CF68  5B7D               	subwfb	(___fladd@b+1)& (0+255),f,b
 32981  00CF6A  5182               	movf	(___fladd@a+2)& (0+255),w,b
 32982  00CF6C  5B7E               	subwfb	(___fladd@b+2)& (0+255),f,b
 32983  00CF6E  5183               	movf	(___fladd@a+3)& (0+255),w,b
 32984  00CF70  5B7F               	subwfb	(___fladd@b+3)& (0+255),f,b
 32985  00CF72                     l3621:
 32986                           
 32987                           ; BSR set to: 0
 32988  00CF72  517C               	movf	___fladd@b& (0+255),w,b
 32989  00CF74  117D               	iorwf	(___fladd@b+1)& (0+255),w,b
 32990  00CF76  117E               	iorwf	(___fladd@b+2)& (0+255),w,b
 32991  00CF78  117F               	iorwf	(___fladd@b+3)& (0+255),w,b
 32992  00CF7A  A4D8               	btfss	status,2,c
 32993  00CF7C  D01C               	goto	l3628
 32994                           
 32995                           ; BSR set to: 0
 32996  00CF7E  518F               	movf	___fladd@grs& (0+255),w,b
 32997  00CF80  A4D8               	btfss	status,2,c
 32998  00CF82  D019               	goto	l3628
 32999                           
 33000                           ; BSR set to: 0
 33001  00CF84  0E00               	movlw	0
 33002  00CF86  6F7C               	movwf	?___fladd& (0+255),b
 33003  00CF88  0E00               	movlw	0
 33004  00CF8A  6F7D               	movwf	(?___fladd+1)& (0+255),b
 33005  00CF8C  0E00               	movlw	0
 33006  00CF8E  6F7E               	movwf	(?___fladd+2)& (0+255),b
 33007  00CF90  0E00               	movlw	0
 33008  00CF92  6F7F               	movwf	(?___fladd+3)& (0+255),b
 33009                           
 33010                           ; BSR set to: 0
 33011  00CF94  0012               	return	
 33012  00CF96                     
 33013                           ; BSR set to: 0
 33014                           
 33015                           ; BSR set to: 0
 33016  00CF96  90D8               	bcf	status,0,c
 33017  00CF98  377C               	rlcf	___fladd@b& (0+255),f,b
 33018  00CF9A  377D               	rlcf	(___fladd@b+1)& (0+255),f,b
 33019  00CF9C  377E               	rlcf	(___fladd@b+2)& (0+255),f,b
 33020  00CF9E  377F               	rlcf	(___fladd@b+3)& (0+255),f,b
 33021                           
 33022                           ; BSR set to: 0
 33023  00CFA0  BF8F               	btfsc	___fladd@grs& (0+255),7,b
 33024                           
 33025                           ; BSR set to: 0
 33026  00CFA2  817C               	bsf	___fladd@b& (0+255),0,b
 33027                           
 33028                           ; BSR set to: 0
 33029                           
 33030                           ; BSR set to: 0
 33031  00CFA4  A18F               	btfss	___fladd@grs& (0+255),0,b
 33032  00CFA6  D002               	goto	l3626
 33033                           
 33034                           ; BSR set to: 0
 33035  00CFA8  80D8               	bsf	status,0,c
 33036  00CFAA  D001               	goto	L45
 33037  00CFAC                     l3626:
 33038                           
 33039                           ; BSR set to: 0
 33040                           
 33041                           ; BSR set to: 0
 33042  00CFAC  90D8               	bcf	status,0,c
 33043  00CFAE                     L45:
 33044  00CFAE  378F               	rlcf	___fladd@grs& (0+255),f,b
 33045                           
 33046                           ; BSR set to: 0
 33047                           
 33048                           ; BSR set to: 0
 33049  00CFB0  518E               	movf	___fladd@bexp& (0+255),w,b
 33050  00CFB2  A4D8               	btfss	status,2,c
 33051                           
 33052                           ; BSR set to: 0
 33053  00CFB4  078E               	decf	___fladd@bexp& (0+255),f,b
 33054  00CFB6                     l3628:
 33055                           
 33056                           ; BSR set to: 0
 33057                           
 33058                           ; BSR set to: 0
 33059                           
 33060                           ; BSR set to: 0
 33061  00CFB6  AF7E               	btfss	(___fladd@b+2)& (0+255),7,b
 33062  00CFB8  D7EE               	goto	l3624
 33063  00CFBA                     u14790:
 33064                           
 33065                           ; BSR set to: 0
 33066                           
 33067                           ; BSR set to: 0
 33068                           
 33069                           ; BSR set to: 0
 33070  00CFBA  0E00               	movlw	0
 33071  00CFBC  6F8D               	movwf	___fladd@aexp& (0+255),b
 33072                           
 33073                           ; BSR set to: 0
 33074  00CFBE  AF8F               	btfss	___fladd@grs& (0+255),7,b
 33075  00CFC0  D00A               	goto	l3633
 33076                           
 33077                           ; BSR set to: 0
 33078  00CFC2  C08F  F084         	movff	___fladd@grs,??___fladd
 33079  00CFC6  0E7F               	movlw	127
 33080  00CFC8  1784               	andwf	??___fladd& (0+255),f,b
 33081  00CFCA  A4D8               	btfss	status,2,c
 33082  00CFCC  D002               	goto	u14820
 33083                           
 33084                           ; BSR set to: 0
 33085                           
 33086                           ; BSR set to: 0
 33087  00CFCE  A17C               	btfss	___fladd@b& (0+255),0,b
 33088  00CFD0  D002               	goto	l3633
 33089  00CFD2                     u14820:
 33090                           
 33091                           ; BSR set to: 0
 33092  00CFD2  0E01               	movlw	1
 33093  00CFD4  6F8D               	movwf	___fladd@aexp& (0+255),b
 33094  00CFD6                     l3633:
 33095                           
 33096                           ; BSR set to: 0
 33097                           
 33098                           ; BSR set to: 0
 33099                           
 33100                           ; BSR set to: 0
 33101  00CFD6  518D               	movf	___fladd@aexp& (0+255),w,b
 33102  00CFD8  B4D8               	btfsc	status,2,c
 33103  00CFDA  D020               	goto	l3636
 33104                           
 33105                           ; BSR set to: 0
 33106  00CFDC  0E01               	movlw	1
 33107  00CFDE  277C               	addwf	___fladd@b& (0+255),f,b
 33108  00CFE0  0E00               	movlw	0
 33109  00CFE2  237D               	addwfc	(___fladd@b+1)& (0+255),f,b
 33110  00CFE4  237E               	addwfc	(___fladd@b+2)& (0+255),f,b
 33111  00CFE6  237F               	addwfc	(___fladd@b+3)& (0+255),f,b
 33112                           
 33113                           ; BSR set to: 0
 33114  00CFE8  A17F               	btfss	(___fladd@b+3)& (0+255),0,b
 33115  00CFEA  D018               	goto	l3636
 33116                           
 33117                           ; BSR set to: 0
 33118  00CFEC  C07C  F084         	movff	___fladd@b,??___fladd
 33119  00CFF0  C07D  F085         	movff	___fladd@b+1,??___fladd+1
 33120  00CFF4  C07E  F086         	movff	___fladd@b+2,??___fladd+2
 33121  00CFF8  C07F  F087         	movff	___fladd@b+3,??___fladd+3
 33122  00CFFC  3587               	rlcf	(??___fladd+3)& (0+255),w,b
 33123  00CFFE  3387               	rrcf	(??___fladd+3)& (0+255),f,b
 33124  00D000  3386               	rrcf	(??___fladd+2)& (0+255),f,b
 33125  00D002  3385               	rrcf	(??___fladd+1)& (0+255),f,b
 33126  00D004  3384               	rrcf	??___fladd& (0+255),f,b
 33127  00D006  C084  F07C         	movff	??___fladd,___fladd@b
 33128  00D00A  C085  F07D         	movff	??___fladd+1,___fladd@b+1
 33129  00D00E  C086  F07E         	movff	??___fladd+2,___fladd@b+2
 33130  00D012  C087  F07F         	movff	??___fladd+3,___fladd@b+3
 33131  00D016  298E               	incf	___fladd@bexp& (0+255),w,b
 33132  00D018  A4D8               	btfss	status,2,c
 33133                           
 33134                           ; BSR set to: 0
 33135  00D01A  2B8E               	incf	___fladd@bexp& (0+255),f,b
 33136  00D01C                     l3636:
 33137                           
 33138                           ; BSR set to: 0
 33139                           
 33140                           ; BSR set to: 0
 33141                           
 33142                           ; BSR set to: 0
 33143                           
 33144                           ; BSR set to: 0
 33145  00D01C  298E               	incf	___fladd@bexp& (0+255),w,b
 33146  00D01E  B4D8               	btfsc	status,2,c
 33147  00D020  D003               	goto	u14870
 33148                           
 33149                           ; BSR set to: 0
 33150  00D022  518E               	movf	___fladd@bexp& (0+255),w,b
 33151  00D024  A4D8               	btfss	status,2,c
 33152  00D026  D00D               	goto	l3640
 33153  00D028                     u14870:
 33154                           
 33155                           ; BSR set to: 0
 33156                           
 33157                           ; BSR set to: 0
 33158  00D028  0E00               	movlw	0
 33159  00D02A  6F7C               	movwf	___fladd@b& (0+255),b
 33160  00D02C  0E00               	movlw	0
 33161  00D02E  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 33162  00D030  0E00               	movlw	0
 33163  00D032  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 33164  00D034  0E00               	movlw	0
 33165  00D036  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 33166  00D038  518E               	movf	___fladd@bexp& (0+255),w,b
 33167  00D03A  A4D8               	btfss	status,2,c
 33168  00D03C  D002               	goto	l3640
 33169                           
 33170                           ; BSR set to: 0
 33171  00D03E  0E00               	movlw	0
 33172  00D040  6F8C               	movwf	___fladd@signs& (0+255),b
 33173  00D042                     l3640:
 33174                           
 33175                           ; BSR set to: 0
 33176                           
 33177                           ; BSR set to: 0
 33178                           
 33179                           ; BSR set to: 0
 33180  00D042  A18E               	btfss	___fladd@bexp& (0+255),0,b
 33181  00D044  D002               	goto	l3641
 33182                           
 33183                           ; BSR set to: 0
 33184  00D046  8F7E               	bsf	(___fladd@b+2)& (0+255),7,b
 33185  00D048  D001               	goto	l3642
 33186  00D04A                     l3641:
 33187                           
 33188                           ; BSR set to: 0
 33189                           
 33190                           ; BSR set to: 0
 33191  00D04A  9F7E               	bcf	(___fladd@b+2)& (0+255),7,b
 33192  00D04C                     l3642:
 33193                           
 33194                           ; BSR set to: 0
 33195                           
 33196                           ; BSR set to: 0
 33197  00D04C  90D8               	bcf	status,0,c
 33198  00D04E  318E               	rrcf	___fladd@bexp& (0+255),w,b
 33199  00D050  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 33200                           
 33201                           ; BSR set to: 0
 33202  00D052  BF8C               	btfsc	___fladd@signs& (0+255),7,b
 33203                           
 33204                           ; BSR set to: 0
 33205  00D054  8F7F               	bsf	(___fladd@b+3)& (0+255),7,b
 33206                           
 33207                           ; BSR set to: 0
 33208                           
 33209                           ; BSR set to: 0
 33210  00D056  C07C  F07C         	movff	___fladd@b,?___fladd
 33211  00D05A  C07D  F07D         	movff	___fladd@b+1,?___fladd+1
 33212  00D05E  C07E  F07E         	movff	___fladd@b+2,?___fladd+2
 33213  00D062  C07F  F07F         	movff	___fladd@b+3,?___fladd+3
 33214  00D066  0012               	return	
 33215  00D068                     __end_of___fladd:
 33216                           	opt stack 0
 33217                           tblptru	equ	0xFF8
 33218                           tblptrh	equ	0xFF7
 33219                           tblptrl	equ	0xFF6
 33220                           tablat	equ	0xFF5
 33221                           prodh	equ	0xFF4
 33222                           prodl	equ	0xFF3
 33223                           intcon	equ	0xFF2
 33224                           postinc0	equ	0xFEE
 33225                           wreg	equ	0xFE8
 33226                           indf1	equ	0xFE7
 33227                           postinc1	equ	0xFE6
 33228                           postdec1	equ	0xFE5
 33229                           plusw1	equ	0xFE3
 33230                           fsr1h	equ	0xFE2
 33231                           fsr1l	equ	0xFE1
 33232                           indf2	equ	0xFDF
 33233                           postinc2	equ	0xFDE
 33234                           postdec2	equ	0xFDD
 33235                           plusw2	equ	0xFDB
 33236                           fsr2h	equ	0xFDA
 33237                           fsr2l	equ	0xFD9
 33238                           status	equ	0xFD8
 33239                           
 33240 ;; *************** function _USBDeviceInit *****************
 33241 ;; Defined at:
 33242 ;;		line 277 in file "usb_device.c"
 33243 ;; Parameters:    Size  Location     Type
 33244 ;;		None
 33245 ;; Auto vars:     Size  Location     Type
 33246 ;;  i               1    8[BANK0 ] unsigned char 
 33247 ;; Return value:  Size  Location     Type
 33248 ;;                  1    wreg      void 
 33249 ;; Registers used:
 33250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33251 ;; Tracked objects:
 33252 ;;		On entry : 0/0
 33253 ;;		On exit  : 0/0
 33254 ;;		Unchanged: 0/0
 33255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33257 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33259 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33260 ;;Total ram usage:        1 bytes
 33261 ;; Hardware stack levels used:    1
 33262 ;; Hardware stack levels required when called:   11
 33263 ;; This function calls:
 33264 ;;		_memset
 33265 ;; This function is called by:
 33266 ;;		_main
 33267 ;; This function uses a non-reentrant model
 33268 ;;
 33269                           
 33270                           	psect	text128
 33271  00FDD4                     __ptext128:
 33272                           	opt stack 0
 33273  00FDD4                     _USBDeviceInit:
 33274                           	opt stack 19
 33275                           
 33276                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 33277                           
 33278                           ; BSR set to: 0
 33279                           ;incstack = 0
 33280  00FDD4  98A0               	bcf	4000,4,c	;volatile
 33281                           
 33282                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 33283  00FDD6  0E00               	movlw	0
 33284  00FDD8  6E63               	movwf	3939,c	;volatile
 33285                           
 33286                           ;usb_device.c: 291: {UIR = 0;};
 33287  00FDDA  0E00               	movlw	0
 33288  00FDDC  6E62               	movwf	3938,c	;volatile
 33289                           
 33290                           ;usb_device.c: 294: UEP0 = 0;
 33291  00FDDE  0E00               	movlw	0
 33292  00FDE0  010F               	movlb	15	; () banked
 33293  00FDE2  6F26               	movwf	38,b	;volatile
 33294                           
 33295                           ; BSR set to: 15
 33296                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 33297  00FDE4  0E27               	movlw	39
 33298  00FDE6  0100               	movlb	0	; () banked
 33299  00FDE8  6F60               	movwf	memset@p1& (0+255),b
 33300  00FDEA  0E0F               	movlw	15
 33301  00FDEC  6F61               	movwf	(memset@p1+1)& (0+255),b
 33302  00FDEE  0E00               	movlw	0
 33303  00FDF0  6F63               	movwf	(memset@c+1)& (0+255),b
 33304  00FDF2  0E00               	movlw	0
 33305  00FDF4  6F62               	movwf	memset@c& (0+255),b
 33306  00FDF6  0E00               	movlw	0
 33307  00FDF8  6F65               	movwf	(memset@n+1)& (0+255),b
 33308  00FDFA  0E02               	movlw	2
 33309  00FDFC  6F64               	movwf	memset@n& (0+255),b
 33310  00FDFE  ECDF  F0AC         	call	_memset	;wreg free
 33311                           
 33312                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 33313  00FE02  0E16               	movlw	22
 33314  00FE04  010F               	movlb	15	; () banked
 33315  00FE06  6F39               	movwf	57,b	;volatile
 33316                           
 33317                           ; BSR set to: 15
 33318  00FE08  0E9F               	movlw	159
 33319  00FE0A  6F37               	movwf	55,b	;volatile
 33320                           
 33321                           ; BSR set to: 15
 33322  00FE0C  0E7B               	movlw	123
 33323  00FE0E  6F36               	movwf	54,b	;volatile
 33324                           
 33325                           ; BSR set to: 15
 33326                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 33327  00FE10  0E00               	movlw	0
 33328  00FE12  0100               	movlb	0	; () banked
 33329  00FE14  6F68               	movwf	USBDeviceInit@i& (0+255),b
 33330  00FE16                     l17954:
 33331                           
 33332                           ; BSR set to: 0
 33333  00FE16  0E0B               	movlw	11
 33334  00FE18  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 33335  00FE1A  D001               	goto	l145
 33336  00FE1C  D00E               	goto	u17330
 33337  00FE1E                     l145:
 33338                           
 33339                           ; BSR set to: 0
 33340                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 33341                           
 33342                           ; BSR set to: 0
 33343  00FE1E  5168               	movf	USBDeviceInit@i& (0+255),w,b
 33344  00FE20  0D04               	mullw	4
 33345  00FE22  0E00               	movlw	0
 33346  00FE24  24F3               	addwf	prodl,w,c
 33347  00FE26  6ED9               	movwf	fsr2l,c
 33348  00FE28  0E0D               	movlw	13
 33349  00FE2A  20F4               	addwfc	prodh,w,c
 33350  00FE2C  6EDA               	movwf	fsr2h,c
 33351  00FE2E  6ADE               	clrf	postinc2,c
 33352  00FE30  6ADE               	clrf	postinc2,c
 33353  00FE32  6ADE               	clrf	postinc2,c
 33354  00FE34  6ADD               	clrf	postdec2,c
 33355                           
 33356                           ; BSR set to: 0
 33357  00FE36  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 33358  00FE38  D7EE               	goto	l17954
 33359  00FE3A                     u17330:
 33360                           
 33361                           ; BSR set to: 0
 33362                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 33363  00FE3A  8C65               	bsf	3941,6,c	;volatile
 33364                           
 33365                           ; BSR set to: 0
 33366                           ;usb_device.c: 316: UADDR = 0x00;
 33367  00FE3C  0E00               	movlw	0
 33368  00FE3E  010F               	movlb	15	; () banked
 33369  00FE40  6F38               	movwf	56,b	;volatile
 33370                           
 33371                           ; BSR set to: 15
 33372                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 33373  00FE42  9865               	bcf	3941,4,c	;volatile
 33374                           
 33375                           ; BSR set to: 15
 33376                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 33377  00FE44  9C65               	bcf	3941,6,c	;volatile
 33378  00FE46                     
 33379                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 33380                           
 33381                           ; BSR set to: 15
 33382  00FE46  9662               	bcf	3938,3,c	;volatile
 33383                           
 33384                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 33385  00FE48  0E00               	movlw	0
 33386  00FE4A  6E56               	movwf	_inPipes+3,c	;volatile
 33387                           
 33388                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 33389  00FE4C  0E00               	movlw	0
 33390  00FE4E  0101               	movlb	1	; () banked
 33391  00FE50  6F03               	movwf	(_outPipes+3)& (0+255),b	;volatile
 33392                           
 33393                           ; BSR set to: 1
 33394                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 33395  00FE52  0E00               	movlw	0
 33396  00FE54  6F05               	movwf	(_outPipes+5)& (0+255),b	;volatile
 33397  00FE56  0E00               	movlw	0
 33398  00FE58  6F04               	movwf	(_outPipes+4)& (0+255),b	;volatile
 33399                           
 33400                           ; BSR set to: 1
 33401                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 33402  00FE5A  B662               	btfsc	3938,3,c	;volatile
 33403  00FE5C  D7F4               	goto	l147
 33404                           
 33405                           ; BSR set to: 1
 33406                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 33407                           
 33408                           ; BSR set to: 1
 33409  00FE5E  0E01               	movlw	1
 33410  00FE60  6F5B               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 33411                           
 33412                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 33413  00FE62  0E01               	movlw	1
 33414  00FE64  6F5A               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 33415                           
 33416                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 33417  00FE66  0E00               	movlw	0
 33418  00FE68  6F59               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 33419                           
 33420                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 33421  00FE6A  0E00               	movlw	0
 33422  00FE6C  6F58               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 33423                           
 33424                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 33425  00FE6E  0E00               	movlw	0
 33426  00FE70  6F60               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 33427                           
 33428                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 33429  00FE72  0E00               	movlw	0
 33430  00FE74  0100               	movlb	0	; () banked
 33431  00FE76  6F68               	movwf	USBDeviceInit@i& (0+255),b
 33432  00FE78                     l17982:
 33433                           
 33434                           ; BSR set to: 0
 33435  00FE78  0E02               	movlw	2
 33436  00FE7A  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 33437  00FE7C  D001               	goto	l149
 33438  00FE7E  D02E               	goto	u17360
 33439  00FE80                     l149:
 33440                           
 33441                           ; BSR set to: 0
 33442                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 33443                           
 33444                           ; BSR set to: 0
 33445  00FE80  5168               	movf	USBDeviceInit@i& (0+255),w,b
 33446  00FE82  0D02               	mullw	2
 33447  00FE84  0E09               	movlw	low _pBDTEntryIn
 33448  00FE86  24F3               	addwf	prodl,w,c
 33449  00FE88  6ED9               	movwf	fsr2l,c
 33450  00FE8A  0E01               	movlw	high _pBDTEntryIn
 33451  00FE8C  20F4               	addwfc	prodh,w,c
 33452  00FE8E  6EDA               	movwf	fsr2h,c
 33453  00FE90  0E00               	movlw	0
 33454  00FE92  6EDE               	movwf	postinc2,c
 33455  00FE94  0E00               	movlw	0
 33456  00FE96  6EDD               	movwf	postdec2,c
 33457                           
 33458                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 33459  00FE98  5168               	movf	USBDeviceInit@i& (0+255),w,b
 33460  00FE9A  0D02               	mullw	2
 33461  00FE9C  0E0F               	movlw	low _pBDTEntryOut
 33462  00FE9E  24F3               	addwf	prodl,w,c
 33463  00FEA0  6ED9               	movwf	fsr2l,c
 33464  00FEA2  0E01               	movlw	high _pBDTEntryOut
 33465  00FEA4  20F4               	addwfc	prodh,w,c
 33466  00FEA6  6EDA               	movwf	fsr2h,c
 33467  00FEA8  0E00               	movlw	0
 33468  00FEAA  6EDE               	movwf	postinc2,c
 33469  00FEAC  0E00               	movlw	0
 33470  00FEAE  6EDD               	movwf	postdec2,c
 33471                           
 33472                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 33473  00FEB0  5168               	movf	USBDeviceInit@i& (0+255),w,b
 33474  00FEB2  0D01               	mullw	1
 33475  00FEB4  0E2E               	movlw	low _ep_data_in
 33476  00FEB6  24F3               	addwf	prodl,w,c
 33477  00FEB8  6ED9               	movwf	fsr2l,c
 33478  00FEBA  0E01               	movlw	high _ep_data_in
 33479  00FEBC  20F4               	addwfc	prodh,w,c
 33480  00FEBE  6EDA               	movwf	fsr2h,c
 33481  00FEC0  0E00               	movlw	0
 33482  00FEC2  6EDF               	movwf	indf2,c
 33483                           
 33484                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 33485  00FEC4  5168               	movf	USBDeviceInit@i& (0+255),w,b
 33486  00FEC6  0D01               	mullw	1
 33487  00FEC8  0E2B               	movlw	low _ep_data_out
 33488  00FECA  24F3               	addwf	prodl,w,c
 33489  00FECC  6ED9               	movwf	fsr2l,c
 33490  00FECE  0E01               	movlw	high _ep_data_out
 33491  00FED0  20F4               	addwfc	prodh,w,c
 33492  00FED2  6EDA               	movwf	fsr2h,c
 33493  00FED4  0E00               	movlw	0
 33494  00FED6  6EDF               	movwf	indf2,c
 33495                           
 33496                           ; BSR set to: 0
 33497  00FED8  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 33498  00FEDA  D7CE               	goto	l17982
 33499  00FEDC                     u17360:
 33500                           
 33501                           ; BSR set to: 0
 33502                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 33503                           
 33504                           ; BSR set to: 0
 33505  00FEDC  0E08               	movlw	8
 33506  00FEDE  0101               	movlb	1	; () banked
 33507  00FEE0  6F09               	movwf	_pBDTEntryIn& (0+255),b
 33508  00FEE2  0E0D               	movlw	13
 33509  00FEE4  6F0A               	movwf	(_pBDTEntryIn+1)& (0+255),b
 33510                           
 33511                           ; BSR set to: 1
 33512                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 33513  00FEE6  0E16               	movlw	22
 33514  00FEE8  010F               	movlb	15	; () banked
 33515  00FEEA  6F26               	movwf	38,b	;volatile
 33516                           
 33517                           ; BSR set to: 15
 33518                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 33519  00FEEC  0E0D               	movlw	13
 33520  00FEEE  010D               	movlb	13	; () banked
 33521  00FEF0  6F03               	movwf	3,b	;volatile
 33522  00FEF2  0E30               	movlw	48
 33523  00FEF4  6F02               	movwf	2,b	;volatile
 33524                           
 33525                           ; BSR set to: 13
 33526                           ;usb_device.c: 359: BDT[0].CNT = 8;
 33527  00FEF6  0E08               	movlw	8
 33528  00FEF8  6F01               	movwf	1,b	;volatile
 33529                           
 33530                           ; BSR set to: 13
 33531                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 33532  00FEFA  0E04               	movlw	4
 33533  00FEFC  6F00               	movwf	0,b	;volatile
 33534                           
 33535                           ; BSR set to: 13
 33536                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 33537  00FEFE  8F00               	bsf	0,7,b	;volatile
 33538                           
 33539                           ; BSR set to: 13
 33540                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 33541  00FF00  0E00               	movlw	0
 33542  00FF02  0101               	movlb	1	; () banked
 33543  00FF04  6FC2               	movwf	_USBActiveConfiguration& (0+255),b	;volatile
 33544                           
 33545                           ; BSR set to: 1
 33546                           ;usb_device.c: 366: USB1msTickCount = 0;
 33547  00FF06  0E00               	movlw	0
 33548  00FF08  6F21               	movwf	_USB1msTickCount& (0+255),b	;volatile
 33549  00FF0A  0E00               	movlw	0
 33550  00FF0C  6F22               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 33551  00FF0E  0E00               	movlw	0
 33552  00FF10  6F23               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 33553  00FF12  0E00               	movlw	0
 33554  00FF14  6F24               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 33555                           
 33556                           ; BSR set to: 1
 33557                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 33558  00FF16  0E00               	movlw	0
 33559  00FF18  6F57               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 33560                           
 33561                           ; BSR set to: 1
 33562                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 33563  00FF1A  0E00               	movlw	0
 33564  00FF1C  6E5D               	movwf	_USBDeviceState,c	;volatile
 33565                           
 33566                           ; BSR set to: 1
 33567  00FF1E  0012               	return		;funcret
 33568  00FF20                     __end_of_USBDeviceInit:
 33569                           	opt stack 0
 33570                           tblptru	equ	0xFF8
 33571                           tblptrh	equ	0xFF7
 33572                           tblptrl	equ	0xFF6
 33573                           tablat	equ	0xFF5
 33574                           prodh	equ	0xFF4
 33575                           prodl	equ	0xFF3
 33576                           intcon	equ	0xFF2
 33577                           postinc0	equ	0xFEE
 33578                           wreg	equ	0xFE8
 33579                           indf1	equ	0xFE7
 33580                           postinc1	equ	0xFE6
 33581                           postdec1	equ	0xFE5
 33582                           plusw1	equ	0xFE3
 33583                           fsr1h	equ	0xFE2
 33584                           fsr1l	equ	0xFE1
 33585                           indf2	equ	0xFDF
 33586                           postinc2	equ	0xFDE
 33587                           postdec2	equ	0xFDD
 33588                           plusw2	equ	0xFDB
 33589                           fsr2h	equ	0xFDA
 33590                           fsr2l	equ	0xFD9
 33591                           status	equ	0xFD8
 33592                           
 33593 ;; *************** function _memset *****************
 33594 ;; Defined at:
 33595 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 33596 ;; Parameters:    Size  Location     Type
 33597 ;;  p1              2    0[BANK0 ] PTR void 
 33598 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 33599 ;;  c               2    2[BANK0 ] int 
 33600 ;;  n               2    4[BANK0 ] unsigned int 
 33601 ;; Auto vars:     Size  Location     Type
 33602 ;;  p               2    6[BANK0 ] PTR unsigned char 
 33603 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 33604 ;; Return value:  Size  Location     Type
 33605 ;;                  2    0[BANK0 ] PTR void 
 33606 ;; Registers used:
 33607 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33608 ;; Tracked objects:
 33609 ;;		On entry : 0/0
 33610 ;;		On exit  : 0/0
 33611 ;;		Unchanged: 0/0
 33612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33613 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33614 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33616 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33617 ;;Total ram usage:        8 bytes
 33618 ;; Hardware stack levels used:    1
 33619 ;; Hardware stack levels required when called:   10
 33620 ;; This function calls:
 33621 ;;		Nothing
 33622 ;; This function is called by:
 33623 ;;		_USBDeviceInit
 33624 ;; This function uses a non-reentrant model
 33625 ;;
 33626                           
 33627                           	psect	text129
 33628  0159BE                     __ptext129:
 33629                           	opt stack 0
 33630  0159BE                     _memset:
 33631                           	opt stack 19
 33632                           
 33633                           ; BSR set to: 1
 33634                           ;incstack = 0
 33635  0159BE  C060  F066         	movff	memset@p1,memset@p
 33636  0159C2  C061  F067         	movff	memset@p1+1,memset@p+1
 33637  0159C6  D009               	goto	l3818
 33638  0159C8                     l16986:
 33639  0159C8  C066  FFD9         	movff	memset@p,fsr2l
 33640  0159CC  C067  FFDA         	movff	memset@p+1,fsr2h
 33641  0159D0  C062  FFDF         	movff	memset@c,indf2
 33642  0159D4  0100               	movlb	0	; () banked
 33643  0159D6  4B66               	infsnz	memset@p& (0+255),f,b
 33644  0159D8  2B67               	incf	(memset@p+1)& (0+255),f,b
 33645  0159DA                     l3818:
 33646                           
 33647                           ; BSR set to: 0
 33648  0159DA  0100               	movlb	0	; () banked
 33649  0159DC  0764               	decf	memset@n& (0+255),f,b
 33650  0159DE  A0D8               	btfss	status,0,c
 33651  0159E0  0765               	decf	(memset@n+1)& (0+255),f,b
 33652  0159E2  2964               	incf	memset@n& (0+255),w,b
 33653  0159E4  E1F1               	bnz	l16986
 33654  0159E6  2965               	incf	(memset@n+1)& (0+255),w,b
 33655  0159E8  B4D8               	btfsc	status,2,c
 33656  0159EA  0012               	return	
 33657  0159EC  D7ED               	goto	l3819
 33658  0159EE                     __end_of_memset:
 33659                           	opt stack 0
 33660                           tblptru	equ	0xFF8
 33661                           tblptrh	equ	0xFF7
 33662                           tblptrl	equ	0xFF6
 33663                           tablat	equ	0xFF5
 33664                           prodh	equ	0xFF4
 33665                           prodl	equ	0xFF3
 33666                           intcon	equ	0xFF2
 33667                           postinc0	equ	0xFEE
 33668                           wreg	equ	0xFE8
 33669                           indf1	equ	0xFE7
 33670                           postinc1	equ	0xFE6
 33671                           postdec1	equ	0xFE5
 33672                           plusw1	equ	0xFE3
 33673                           fsr1h	equ	0xFE2
 33674                           fsr1l	equ	0xFE1
 33675                           indf2	equ	0xFDF
 33676                           postinc2	equ	0xFDE
 33677                           postdec2	equ	0xFDD
 33678                           plusw2	equ	0xFDB
 33679                           fsr2h	equ	0xFDA
 33680                           fsr2l	equ	0xFD9
 33681                           status	equ	0xFD8
 33682                           
 33683 ;; *************** function _USBDeviceAttach *****************
 33684 ;; Defined at:
 33685 ;;		line 1354 in file "usb_device.c"
 33686 ;; Parameters:    Size  Location     Type
 33687 ;;		None
 33688 ;; Auto vars:     Size  Location     Type
 33689 ;;		None
 33690 ;; Return value:  Size  Location     Type
 33691 ;;                  1    wreg      void 
 33692 ;; Registers used:
 33693 ;;		wreg, status,2
 33694 ;; Tracked objects:
 33695 ;;		On entry : 0/0
 33696 ;;		On exit  : 0/0
 33697 ;;		Unchanged: 0/0
 33698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33703 ;;Total ram usage:        0 bytes
 33704 ;; Hardware stack levels used:    1
 33705 ;; Hardware stack levels required when called:   10
 33706 ;; This function calls:
 33707 ;;		Nothing
 33708 ;; This function is called by:
 33709 ;;		_main
 33710 ;; This function uses a non-reentrant model
 33711 ;;
 33712                           
 33713                           	psect	text130
 33714  01592C                     __ptext130:
 33715                           	opt stack 0
 33716  01592C                     _USBDeviceAttach:
 33717                           	opt stack 20
 33718                           
 33719                           ;usb_device.c: 1358: {;usb_device.c: 1359: if(1 == 1)
 33720                           
 33721                           ; BSR set to: 0
 33722                           ;incstack = 0
 33723  01592C  505D               	movf	_USBDeviceState,w,c	;volatile
 33724  01592E  A4D8               	btfss	status,2,c
 33725  015930  0012               	return	
 33726                           
 33727                           ;usb_device.c: 1360: {;usb_device.c: 1362: UCON = 0;
 33728  015932  0E00               	movlw	0
 33729  015934  6E65               	movwf	3941,c	;volatile
 33730                           
 33731                           ;usb_device.c: 1365: UIE = 0;
 33732  015936  0E00               	movlw	0
 33733  015938  010F               	movlb	15	; () banked
 33734  01593A  6F36               	movwf	54,b	;volatile
 33735                           
 33736                           ;usb_device.c: 1369: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 33737  01593C  0E16               	movlw	22
 33738  01593E  6F39               	movwf	57,b	;volatile
 33739  015940  0E9F               	movlw	159
 33740  015942  6F37               	movwf	55,b	;volatile
 33741  015944  0E7B               	movlw	123
 33742  015946  6F36               	movwf	54,b	;volatile
 33743                           
 33744                           ; BSR set to: 15
 33745                           ;usb_device.c: 1371: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 33746  015948  8ED0               	bsf	4048,7,c	;volatile
 33747                           
 33748                           ; BSR set to: 15
 33749  01594A  88A2               	bsf	4002,4,c	;volatile
 33750                           
 33751                           ; BSR set to: 15
 33752  01594C  88A0               	bsf	4000,4,c	;volatile
 33753                           
 33754                           ; BSR set to: 15
 33755  01594E  8EF2               	bsf	intcon,7,c	;volatile
 33756                           
 33757                           ;usb_device.c: 1374: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 33758  015950  D001               	goto	l206
 33759  015952                     l207:
 33760  015952  8665               	bsf	3941,3,c	;volatile
 33761  015954                     l206:
 33762  015954  A665               	btfss	3941,3,c	;volatile
 33763  015956  D7FD               	goto	l207
 33764                           
 33765                           ;usb_device.c: 1377: USBDeviceState = ATTACHED_STATE;
 33766  015958  0E01               	movlw	1
 33767  01595A  6E5D               	movwf	_USBDeviceState,c	;volatile
 33768  01595C  0012               	return	
 33769  01595E                     __end_of_USBDeviceAttach:
 33770                           	opt stack 0
 33771                           tblptru	equ	0xFF8
 33772                           tblptrh	equ	0xFF7
 33773                           tblptrl	equ	0xFF6
 33774                           tablat	equ	0xFF5
 33775                           prodh	equ	0xFF4
 33776                           prodl	equ	0xFF3
 33777                           intcon	equ	0xFF2
 33778                           postinc0	equ	0xFEE
 33779                           wreg	equ	0xFE8
 33780                           indf1	equ	0xFE7
 33781                           postinc1	equ	0xFE6
 33782                           postdec1	equ	0xFE5
 33783                           plusw1	equ	0xFE3
 33784                           fsr1h	equ	0xFE2
 33785                           fsr1l	equ	0xFE1
 33786                           indf2	equ	0xFDF
 33787                           postinc2	equ	0xFDE
 33788                           postdec2	equ	0xFDD
 33789                           plusw2	equ	0xFDB
 33790                           fsr2h	equ	0xFDA
 33791                           fsr2l	equ	0xFD9
 33792                           status	equ	0xFD8
 33793                           
 33794 ;; *************** function _SYSTEM_Initialize *****************
 33795 ;; Defined at:
 33796 ;;		line 39 in file "system.c"
 33797 ;; Parameters:    Size  Location     Type
 33798 ;;  state           1    wreg     enum E6623
 33799 ;; Auto vars:     Size  Location     Type
 33800 ;;  state           1    4[BANK0 ] enum E6623
 33801 ;;  pll_startup_    2    2[BANK0 ] unsigned int 
 33802 ;;  pll_startup_    2    0[BANK0 ] unsigned int 
 33803 ;; Return value:  Size  Location     Type
 33804 ;;                  1    wreg      void 
 33805 ;; Registers used:
 33806 ;;		wreg, status,2, status,0
 33807 ;; Tracked objects:
 33808 ;;		On entry : 0/0
 33809 ;;		On exit  : 0/0
 33810 ;;		Unchanged: 0/0
 33811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33813 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33815 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33816 ;;Total ram usage:        5 bytes
 33817 ;; Hardware stack levels used:    1
 33818 ;; Hardware stack levels required when called:   10
 33819 ;; This function calls:
 33820 ;;		Nothing
 33821 ;; This function is called by:
 33822 ;;		_main
 33823 ;; This function uses a non-reentrant model
 33824 ;;
 33825                           
 33826                           	psect	text131
 33827  014B6C                     __ptext131:
 33828                           	opt stack 0
 33829  014B6C                     _SYSTEM_Initialize:
 33830                           	opt stack 20
 33831                           
 33832                           ;incstack = 0
 33833                           ;SYSTEM_Initialize@state stored from wreg
 33834  014B6C  0100               	movlb	0	; () banked
 33835  014B6E  6F64               	movwf	SYSTEM_Initialize@state& (0+255),b
 33836                           
 33837                           ;system.c: 41: switch(state)
 33838  014B70  D01E               	goto	l897
 33839  014B72                     
 33840                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 33841  014B72  0E02               	movlw	2
 33842  014B74  0100               	movlb	0	; () banked
 33843  014B76  6F61               	movwf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),b
 33844  014B78  0E58               	movlw	88
 33845  014B7A  6F60               	movwf	SYSTEM_Initialize@pll_startup_counter& (0+255),b
 33846                           
 33847                           ; BSR set to: 0
 33848                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 33849  014B7C  8C9B               	bsf	3995,6,c	;volatile
 33850  014B7E                     l18134:
 33851                           
 33852                           ; BSR set to: 0
 33853  014B7E  0760               	decf	SYSTEM_Initialize@pll_startup_counter& (0+255),f,b
 33854  014B80  A0D8               	btfss	status,0,c
 33855  014B82  0761               	decf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),f,b
 33856  014B84  2960               	incf	SYSTEM_Initialize@pll_startup_counter& (0+255),w,b
 33857  014B86  E1FB               	bnz	l18134
 33858  014B88  2961               	incf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),w,b
 33859  014B8A  B4D8               	btfsc	status,2,c
 33860  014B8C  0012               	return	
 33861  014B8E  D7F7               	goto	l900
 33862  014B90                     
 33863                           ; BSR set to: 0
 33864                           ;system.c: 78: OSCCON = 0x70;
 33865                           
 33866                           ; BSR set to: 0
 33867  014B90  0E70               	movlw	112
 33868  014B92  6ED3               	movwf	4051,c	;volatile
 33869                           
 33870                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 33871  014B94  0E03               	movlw	3
 33872  014B96  6F63               	movwf	(SYSTEM_Initialize@pll_startup_counter_3143+1)& (0+255),b
 33873  014B98  0E20               	movlw	32
 33874  014B9A  6F62               	movwf	SYSTEM_Initialize@pll_startup_counter_3143& (0+255),b
 33875  014B9C                     l18138:
 33876                           
 33877                           ; BSR set to: 0
 33878  014B9C  0762               	decf	SYSTEM_Initialize@pll_startup_counter_3143& (0+255),f,b
 33879  014B9E  A0D8               	btfss	status,0,c
 33880  014BA0  0763               	decf	(SYSTEM_Initialize@pll_startup_counter_3143+1)& (0+255),f,b
 33881  014BA2  2962               	incf	SYSTEM_Initialize@pll_startup_counter_3143& (0+255),w,b
 33882  014BA4  E1FB               	bnz	l18138
 33883  014BA6  2963               	incf	(SYSTEM_Initialize@pll_startup_counter_3143+1)& (0+255),w,b
 33884  014BA8  B4D8               	btfsc	status,2,c
 33885  014BAA  0012               	return	
 33886  014BAC  D7F7               	goto	l906
 33887  014BAE                     l897:
 33888                           
 33889                           ; BSR set to: 0
 33890  014BAE  0100               	movlb	0	; () banked
 33891  014BB0  5164               	movf	SYSTEM_Initialize@state& (0+255),w,b
 33892                           
 33893                           ; Switch size 1, requested type "space"
 33894                           ; Number of cases is 3, Range of values is 0 to 2
 33895                           ; switch strategies available:
 33896                           ; Name         Instructions Cycles
 33897                           ; simple_byte           10     6 (average)
 33898                           ;	Chosen strategy is simple_byte
 33899  014BB2  0A00               	xorlw	0	; case 0
 33900  014BB4  B4D8               	btfsc	status,2,c
 33901  014BB6  D7DD               	goto	l898
 33902  014BB8  0A01               	xorlw	1	; case 1
 33903  014BBA  B4D8               	btfsc	status,2,c
 33904  014BBC  0012               	return	
 33905  014BBE  0A03               	xorlw	3	; case 2
 33906  014BC0  A4D8               	btfss	status,2,c
 33907  014BC2  0012               	return	
 33908  014BC4  D7E5               	goto	l904
 33909  014BC6                     __end_of_SYSTEM_Initialize:
 33910                           	opt stack 0
 33911                           tblptru	equ	0xFF8
 33912                           tblptrh	equ	0xFF7
 33913                           tblptrl	equ	0xFF6
 33914                           tablat	equ	0xFF5
 33915                           prodh	equ	0xFF4
 33916                           prodl	equ	0xFF3
 33917                           intcon	equ	0xFF2
 33918                           postinc0	equ	0xFEE
 33919                           wreg	equ	0xFE8
 33920                           indf1	equ	0xFE7
 33921                           postinc1	equ	0xFE6
 33922                           postdec1	equ	0xFE5
 33923                           plusw1	equ	0xFE3
 33924                           fsr1h	equ	0xFE2
 33925                           fsr1l	equ	0xFE1
 33926                           indf2	equ	0xFDF
 33927                           postinc2	equ	0xFDE
 33928                           postdec2	equ	0xFDD
 33929                           plusw2	equ	0xFDB
 33930                           fsr2h	equ	0xFDA
 33931                           fsr2l	equ	0xFD9
 33932                           status	equ	0xFD8
 33933                           
 33934 ;; *************** function _APP_DeviceMSDTasks *****************
 33935 ;; Defined at:
 33936 ;;		line 110 in file "app_device_msd.c"
 33937 ;; Parameters:    Size  Location     Type
 33938 ;;		None
 33939 ;; Auto vars:     Size  Location     Type
 33940 ;;		None
 33941 ;; Return value:  Size  Location     Type
 33942 ;;                  1    wreg      void 
 33943 ;; Registers used:
 33944 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 33945 ;; Tracked objects:
 33946 ;;		On entry : 0/0
 33947 ;;		On exit  : 0/0
 33948 ;;		Unchanged: 0/0
 33949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33954 ;;Total ram usage:        0 bytes
 33955 ;; Hardware stack levels used:    1
 33956 ;; Hardware stack levels required when called:   21
 33957 ;; This function calls:
 33958 ;;		_MSDTasks
 33959 ;; This function is called by:
 33960 ;;		_main
 33961 ;; This function uses a non-reentrant model
 33962 ;;
 33963                           
 33964                           	psect	text132
 33965  015E90                     __ptext132:
 33966                           	opt stack 0
 33967  015E90                     _APP_DeviceMSDTasks:
 33968                           	opt stack 9
 33969                           
 33970                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 33971                           
 33972                           ; BSR set to: 0
 33973                           ;incstack = 0
 33974  015E90  0E20               	movlw	32
 33975  015E92  605D               	cpfslt	_USBDeviceState,c	;volatile
 33976  015E94  D001               	goto	l986
 33977  015E96  0012               	return	
 33978  015E98                     l986:
 33979                           
 33980                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 33981  015E98  B265               	btfsc	3941,1,c	;volatile
 33982  015E9A  0012               	return	
 33983                           
 33984                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 33985                           
 33986                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 33987  015E9C  ECEA  F06E         	call	_MSDTasks	;wreg free
 33988  015EA0  0012               	return		;funcret
 33989  015EA2                     __end_of_APP_DeviceMSDTasks:
 33990                           	opt stack 0
 33991                           tblptru	equ	0xFF8
 33992                           tblptrh	equ	0xFF7
 33993                           tblptrl	equ	0xFF6
 33994                           tablat	equ	0xFF5
 33995                           prodh	equ	0xFF4
 33996                           prodl	equ	0xFF3
 33997                           intcon	equ	0xFF2
 33998                           postinc0	equ	0xFEE
 33999                           wreg	equ	0xFE8
 34000                           indf1	equ	0xFE7
 34001                           postinc1	equ	0xFE6
 34002                           postdec1	equ	0xFE5
 34003                           plusw1	equ	0xFE3
 34004                           fsr1h	equ	0xFE2
 34005                           fsr1l	equ	0xFE1
 34006                           indf2	equ	0xFDF
 34007                           postinc2	equ	0xFDE
 34008                           postdec2	equ	0xFDD
 34009                           plusw2	equ	0xFDB
 34010                           fsr2h	equ	0xFDA
 34011                           fsr2l	equ	0xFD9
 34012                           status	equ	0xFD8
 34013                           
 34014 ;; *************** function _MSDTasks *****************
 34015 ;; Defined at:
 34016 ;;		line 335 in file "usb_device_msd.c"
 34017 ;; Parameters:    Size  Location     Type
 34018 ;;		None
 34019 ;; Auto vars:     Size  Location     Type
 34020 ;;  i               1   81[BANK0 ] unsigned char 
 34021 ;; Return value:  Size  Location     Type
 34022 ;;                  1    wreg      unsigned char 
 34023 ;; Registers used:
 34024 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 34025 ;; Tracked objects:
 34026 ;;		On entry : 0/0
 34027 ;;		On exit  : 0/0
 34028 ;;		Unchanged: 0/0
 34029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34031 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34032 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34033 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34034 ;;Total ram usage:        6 bytes
 34035 ;; Hardware stack levels used:    1
 34036 ;; Hardware stack levels required when called:   20
 34037 ;; This function calls:
 34038 ;;		_MSDProcessCommand
 34039 ;;		_USBStallEndpoint
 34040 ;;		_USBTransferOnePacket
 34041 ;; This function is called by:
 34042 ;;		_APP_DeviceMSDTasks
 34043 ;; This function uses a non-reentrant model
 34044 ;;
 34045                           
 34046                           	psect	text133
 34047  00DDD4                     __ptext133:
 34048                           	opt stack 0
 34049  00DDD4                     _MSDTasks:
 34050                           	opt stack 9
 34051                           
 34052                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 34053                           
 34054                           ;incstack = 0
 34055  00DDD4  0E20               	movlw	32
 34056  00DDD6  185D               	xorwf	_USBDeviceState,w,c	;volatile
 34057  00DDD8  A4D8               	btfss	status,2,c
 34058  00DDDA  0012               	return	
 34059                           
 34060                           ;usb_device_msd.c: 345: };usb_device_msd.c: 353: {PIE2bits.USBIE = 0;};
 34061                           
 34062                           ;usb_device_msd.c: 343: {;usb_device_msd.c: 344: return 0x00;;	Return value of _MSDTasks
      +                           is never used
 34063  00DDDC  98A0               	bcf	4000,4,c	;volatile
 34064                           
 34065                           ;usb_device_msd.c: 357: switch(MSD_State)
 34066  00DDDE  D11C               	goto	l570
 34067  00DDE0                     
 34068                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 34069  00DDE0  0101               	movlb	1	; () banked
 34070  00DDE2  513F               	movf	_USBMSDOutHandle& (0+255),w,b
 34071  00DDE4  1140               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 34072  00DDE6  B4D8               	btfsc	status,2,c
 34073  00DDE8  D006               	goto	u16320
 34074                           
 34075                           ; BSR set to: 1
 34076  00DDEA  C13F  FFD9         	movff	_USBMSDOutHandle,fsr2l
 34077  00DDEE  C140  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 34078  00DDF2  BEDF               	btfsc	indf2,7,c
 34079  00DDF4  D120               	goto	l586
 34080  00DDF6                     u16320:
 34081                           
 34082                           ; BSR set to: 1
 34083                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 34084                           
 34085                           ; BSR set to: 1
 34086  00DDF6  0E00               	movlw	0
 34087  00DDF8  0100               	movlb	0	; () banked
 34088  00DDFA  6FB1               	movwf	MSDTasks@i& (0+255),b
 34089  00DDFC                     l17072:
 34090                           
 34091                           ; BSR set to: 0
 34092  00DDFC  0E1E               	movlw	30
 34093  00DDFE  65B1               	cpfsgt	MSDTasks@i& (0+255),b
 34094  00DE00  D001               	goto	l575
 34095  00DE02  D014               	goto	u16340
 34096  00DE04                     l575:
 34097                           
 34098                           ; BSR set to: 0
 34099                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 34100                           
 34101                           ; BSR set to: 0
 34102  00DE04  51B1               	movf	MSDTasks@i& (0+255),w,b
 34103  00DE06  0D01               	mullw	1
 34104  00DE08  0E40               	movlw	64
 34105  00DE0A  24F3               	addwf	prodl,w,c
 34106  00DE0C  6ED9               	movwf	fsr2l,c
 34107  00DE0E  0E0D               	movlw	13
 34108  00DE10  20F4               	addwfc	prodh,w,c
 34109  00DE12  6EDA               	movwf	fsr2h,c
 34110  00DE14  51B1               	movf	MSDTasks@i& (0+255),w,b
 34111  00DE16  0D01               	mullw	1
 34112  00DE18  0E00               	movlw	low _gblCBW
 34113  00DE1A  24F3               	addwf	prodl,w,c
 34114  00DE1C  6EE1               	movwf	fsr1l,c
 34115  00DE1E  0E02               	movlw	high _gblCBW
 34116  00DE20  20F4               	addwfc	prodh,w,c
 34117  00DE22  6EE2               	movwf	fsr1h,c
 34118  00DE24  CFDF FFE7          	movff	indf2,indf1
 34119                           
 34120                           ; BSR set to: 0
 34121  00DE28  2BB1               	incf	MSDTasks@i& (0+255),f,b
 34122  00DE2A  D7E8               	goto	l17072
 34123  00DE2C                     u16340:
 34124                           
 34125                           ; BSR set to: 0
 34126                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 34127                           
 34128                           ; BSR set to: 0
 34129  00DE2C  0101               	movlb	1	; () banked
 34130  00DE2E  EE20 F001          	lfsr	2,1
 34131  00DE32  513F               	movf	_USBMSDOutHandle& (0+255),w,b
 34132  00DE34  26D9               	addwf	fsr2l,f,c
 34133  00DE36  5140               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 34134  00DE38  22DA               	addwfc	fsr2h,f,c
 34135  00DE3A  0E1F               	movlw	31
 34136  00DE3C  18DE               	xorwf	postinc2,w,c
 34137  00DE3E  A4D8               	btfss	status,2,c
 34138  00DE40  D075               	goto	l577
 34139                           
 34140                           ; BSR set to: 1
 34141  00DE42  0E55               	movlw	85
 34142  00DE44  0102               	movlb	2	; () banked
 34143  00DE46  1900               	xorwf	_gblCBW& (0+255),w,b
 34144  00DE48  E171               	bnz	l577
 34145  00DE4A  0E53               	movlw	83
 34146  00DE4C  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 34147  00DE4E  E16E               	bnz	l577
 34148  00DE50  0E42               	movlw	66
 34149  00DE52  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 34150  00DE54  E16B               	bnz	l577
 34151  00DE56  0E43               	movlw	67
 34152  00DE58  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 34153  00DE5A  A4D8               	btfss	status,2,c
 34154  00DE5C  D067               	goto	l577
 34155                           
 34156                           ; BSR set to: 2
 34157                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 34158  00DE5E  0E01               	movlw	1
 34159  00DE60  0101               	movlb	1	; () banked
 34160  00DE62  6F4E               	movwf	_MSDCBWValid& (0+255),b
 34161                           
 34162                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 34163  00DE64  0102               	movlb	2	; () banked
 34164  00DE66  510D               	movf	(_gblCBW+13)& (0+255),w,b
 34165  00DE68  A4D8               	btfss	status,2,c
 34166  00DE6A  D053               	goto	l578
 34167                           
 34168                           ; BSR set to: 2
 34169  00DE6C  0E11               	movlw	17
 34170  00DE6E  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 34171  00DE70  D050               	goto	l578
 34172                           
 34173                           ; BSR set to: 2
 34174  00DE72  510E               	movf	(_gblCBW+14)& (0+255),w,b
 34175  00DE74  B4D8               	btfsc	status,2,c
 34176  00DE76  D04D               	goto	l578
 34177                           
 34178                           ; BSR set to: 2
 34179  00DE78  C20C  F0AC         	movff	_gblCBW+12,??_MSDTasks
 34180  00DE7C  0E3F               	movlw	63
 34181  00DE7E  0100               	movlb	0	; () banked
 34182  00DE80  17AC               	andwf	??_MSDTasks& (0+255),f,b
 34183  00DE82  A4D8               	btfss	status,2,c
 34184  00DE84  D046               	goto	l578
 34185                           
 34186                           ; BSR set to: 0
 34187                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 34188  00DE86  0E55               	movlw	85
 34189  00DE88  010D               	movlb	13	; () banked
 34190  00DE8A  6F80               	movwf	128,b	;volatile
 34191  00DE8C  0E53               	movlw	83
 34192  00DE8E  6F81               	movwf	129,b	;volatile
 34193  00DE90  0E42               	movlw	66
 34194  00DE92  6F82               	movwf	130,b	;volatile
 34195  00DE94  0E53               	movlw	83
 34196  00DE96  6F83               	movwf	131,b	;volatile
 34197                           
 34198                           ; BSR set to: 13
 34199                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 34200  00DE98  C204  FD84         	movff	_gblCBW+4,3460	;volatile
 34201  00DE9C  C205  FD85         	movff	_gblCBW+5,3461	;volatile
 34202  00DEA0  C206  FD86         	movff	_gblCBW+6,3462	;volatile
 34203  00DEA4  C207  FD87         	movff	_gblCBW+7,3463	;volatile
 34204                           
 34205                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 34206  00DEA8  0E00               	movlw	0
 34207  00DEAA  6F88               	movwf	136,b	;volatile
 34208  00DEAC  0E00               	movlw	0
 34209  00DEAE  6F89               	movwf	137,b	;volatile
 34210  00DEB0  0E00               	movlw	0
 34211  00DEB2  6F8A               	movwf	138,b	;volatile
 34212  00DEB4  0E00               	movlw	0
 34213  00DEB6  6F8B               	movwf	139,b	;volatile
 34214                           
 34215                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 34216  00DEB8  0E00               	movlw	0
 34217  00DEBA  6F8C               	movwf	140,b	;volatile
 34218                           
 34219                           ; BSR set to: 13
 34220                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 34221  00DEBC  0101               	movlb	1	; () banked
 34222  00DEBE  6955               	setf	_MSDCommandState& (0+255),b
 34223                           
 34224                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 34225  00DEC0  0E00               	movlw	0
 34226  00DEC2  6F54               	movwf	_MSDReadState& (0+255),b
 34227                           
 34228                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 34229  00DEC4  0E00               	movlw	0
 34230  00DEC6  6F53               	movwf	_MSDWriteState& (0+255),b
 34231                           
 34232                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 34233  00DEC8  0E00               	movlw	0
 34234  00DECA  6F52               	movwf	_MSDRetryAttempt& (0+255),b
 34235                           
 34236                           ; BSR set to: 1
 34237                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 34238  00DECC  0E03               	movlw	3
 34239  00DECE  0102               	movlb	2	; () banked
 34240  00DED0  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 34241  00DED2  B4D8               	btfsc	status,2,c
 34242  00DED4  D008               	goto	l579
 34243                           
 34244                           ; BSR set to: 2
 34245                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 34246  00DED6  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 34247  00DED8  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 34248  00DEDA  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 34249  00DEDC  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 34250                           
 34251                           ; BSR set to: 2
 34252                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 34253  00DEDE  0E00               	movlw	0
 34254  00DEE0  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 34255                           
 34256                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 34257  00DEE2  0E00               	movlw	0
 34258  00DEE4  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 34259  00DEE6                     l579:
 34260                           
 34261                           ; BSR set to: 2
 34262                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 34263                           
 34264                           ; BSR set to: 2
 34265  00DEE6  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 34266  00DEE8  D002               	goto	l580
 34267                           
 34268                           ; BSR set to: 2
 34269                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 34270  00DEEA  0E01               	movlw	1
 34271  00DEEC  D001               	goto	L47
 34272  00DEEE                     l580:
 34273                           
 34274                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 34275                           
 34276                           ; BSR set to: 1
 34277  00DEEE  0E02               	movlw	2
 34278  00DEF0                     L47:
 34279  00DEF0  0101               	movlb	1	; () banked
 34280  00DEF2  6F56               	movwf	_MSD_State& (0+255),b
 34281                           
 34282                           ; BSR set to: 1
 34283                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 34284                           
 34285                           ; BSR set to: 1
 34286  00DEF4  0102               	movlb	2	; () banked
 34287  00DEF6  5108               	movf	(_gblCBW+8)& (0+255),w,b
 34288  00DEF8  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 34289  00DEFA  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 34290  00DEFC  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 34291  00DEFE  B4D8               	btfsc	status,2,c
 34292  00DF00  D002               	goto	l582
 34293                           
 34294                           ; BSR set to: 2
 34295                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 34296  00DF02  0E00               	movlw	0
 34297  00DF04  D001               	goto	L48
 34298  00DF06                     l582:
 34299                           
 34300                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 34301                           
 34302                           ; BSR set to: 1
 34303  00DF06  0E01               	movlw	1
 34304  00DF08                     L48:
 34305  00DF08  0101               	movlb	1	; () banked
 34306  00DF0A  6F4F               	movwf	_MSDHostNoData& (0+255),b
 34307                           
 34308                           ; BSR set to: 1
 34309                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 34310                           
 34311                           ; BSR set to: 1
 34312  00DF0C  C20F  F155         	movff	_gblCBW+15,_MSDCommandState
 34313                           
 34314                           ;usb_device_msd.c: 454: }
 34315  00DF10  D092               	goto	l586
 34316  00DF12                     l578:
 34317                           
 34318                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 34319                           
 34320                           ; BSR set to: 1
 34321  00DF12  0E01               	movlw	1
 34322  00DF14  0100               	movlb	0	; () banked
 34323  00DF16  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34324  00DF18  0E02               	movlw	2
 34325  00DF1A  EC82  F089         	call	_USBStallEndpoint
 34326                           
 34327                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 34328  00DF1E  0E00               	movlw	0
 34329  00DF20  0100               	movlb	0	; () banked
 34330  00DF22  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34331  00DF24  0E02               	movlw	2
 34332  00DF26  EC82  F089         	call	_USBStallEndpoint
 34333                           
 34334                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 34335  00DF2A  D085               	goto	l586
 34336  00DF2C                     l577:
 34337                           
 34338                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 34339  00DF2C  0E01               	movlw	1
 34340  00DF2E  0100               	movlb	0	; () banked
 34341  00DF30  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34342  00DF32  0E02               	movlw	2
 34343  00DF34  EC82  F089         	call	_USBStallEndpoint
 34344                           
 34345                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 34346  00DF38  0E00               	movlw	0
 34347  00DF3A  0100               	movlb	0	; () banked
 34348  00DF3C  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34349  00DF3E  0E02               	movlw	2
 34350  00DF40  EC82  F089         	call	_USBStallEndpoint
 34351                           
 34352                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 34353  00DF44  0E00               	movlw	0
 34354  00DF46  0101               	movlb	1	; () banked
 34355  00DF48  6F4E               	movwf	_MSDCBWValid& (0+255),b
 34356                           
 34357                           ; BSR set to: 1
 34358                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 34359                           
 34360                           ; BSR set to: 1
 34361  00DF4A  D075               	goto	l586
 34362  00DF4C                     
 34363                           ; BSR set to: 1
 34364                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 34365                           
 34366                           ; BSR set to: 1
 34367  00DF4C  ECF2  F083         	call	_MSDProcessCommand	;wreg free
 34368  00DF50  0AFF               	xorlw	255
 34369  00DF52  A4D8               	btfss	status,2,c
 34370  00DF54  D070               	goto	l586
 34371  00DF56  D011               	goto	l591
 34372  00DF58                     
 34373                           ; BSR set to: 1
 34374                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 34375                           
 34376                           ; BSR set to: 1
 34377  00DF58  ECF2  F083         	call	_MSDProcessCommand	;wreg free
 34378  00DF5C  0AFF               	xorlw	255
 34379  00DF5E  A4D8               	btfss	status,2,c
 34380  00DF60  D06A               	goto	l586
 34381                           
 34382                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 34383  00DF62  010D               	movlb	13	; () banked
 34384  00DF64  518C               	movf	140,w,b	;volatile
 34385  00DF66  A4D8               	btfss	status,2,c
 34386  00DF68  D008               	goto	l591
 34387                           
 34388                           ; BSR set to: 13
 34389  00DF6A  5188               	movf	136,w,b	;volatile
 34390  00DF6C  1189               	iorwf	137,w,b	;volatile
 34391  00DF6E  118A               	iorwf	138,w,b	;volatile
 34392  00DF70  118B               	iorwf	139,w,b	;volatile
 34393  00DF72  B4D8               	btfsc	status,2,c
 34394  00DF74  D002               	goto	l591
 34395                           
 34396                           ; BSR set to: 13
 34397                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 34398  00DF76  0E02               	movlw	2
 34399  00DF78  6F8C               	movwf	140,b	;volatile
 34400  00DF7A                     l591:
 34401                           
 34402                           ; BSR set to: 13
 34403                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 34404  00DF7A  0E03               	movlw	3
 34405  00DF7C  D03E               	goto	L46
 34406  00DF7E                     
 34407                           ; BSR set to: 1
 34408                           
 34409                           ; BSR set to: 1
 34410  00DF7E  C10D  F0AD         	movff	_pBDTEntryIn+4,_MSDTasks$2588
 34411  00DF82  C10E  F0AE         	movff	_pBDTEntryIn+5,_MSDTasks$2588+1
 34412                           
 34413                           ; BSR set to: 1
 34414                           
 34415                           ; BSR set to: 1
 34416                           
 34417                           ; BSR set to: 1
 34418  00DF86  0100               	movlb	0	; () banked
 34419  00DF88  51AD               	movf	_MSDTasks$2588& (0+255),w,b
 34420  00DF8A  11AE               	iorwf	(_MSDTasks$2588+1)& (0+255),w,b
 34421  00DF8C  B4D8               	btfsc	status,2,c
 34422  00DF8E  D00A               	goto	l593
 34423                           
 34424                           ; BSR set to: 0
 34425  00DF90  C10D  F0AF         	movff	_pBDTEntryIn+4,_MSDTasks$2589
 34426  00DF94  C10E  F0B0         	movff	_pBDTEntryIn+5,_MSDTasks$2589+1
 34427                           
 34428                           ; BSR set to: 0
 34429                           
 34430                           ; BSR set to: 0
 34431                           
 34432                           ; BSR set to: 0
 34433                           
 34434                           ; BSR set to: 0
 34435  00DF98  C0AF  FFD9         	movff	_MSDTasks$2589,fsr2l
 34436  00DF9C  C0B0  FFDA         	movff	_MSDTasks$2589+1,fsr2h
 34437  00DFA0  BEDF               	btfsc	indf2,7,c
 34438  00DFA2  D049               	goto	l586
 34439  00DFA4                     l593:
 34440                           
 34441                           ; BSR set to: 0
 34442                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 34443                           
 34444                           ; BSR set to: 0
 34445  00DFA4  0E01               	movlw	1
 34446  00DFA6  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 34447  00DFA8  0E80               	movlw	128
 34448  00DFAA  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 34449  00DFAC  0E0D               	movlw	13
 34450  00DFAE  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 34451  00DFB0  0E0D               	movlw	13
 34452  00DFB2  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 34453  00DFB4  0E02               	movlw	2
 34454  00DFB6  EC07  F08A         	call	_USBTransferOnePacket
 34455  00DFBA  C060  F13D         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 34456  00DFBE  C061  F13E         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 34457                           
 34458                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 34459  00DFC2  0101               	movlb	1	; () banked
 34460  00DFC4  513F               	movf	_USBMSDOutHandle& (0+255),w,b
 34461  00DFC6  1140               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 34462  00DFC8  B4D8               	btfsc	status,2,c
 34463  00DFCA  D006               	goto	u16510
 34464                           
 34465                           ; BSR set to: 1
 34466  00DFCC  C13F  FFD9         	movff	_USBMSDOutHandle,fsr2l
 34467  00DFD0  C140  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 34468  00DFD4  BEDF               	btfsc	indf2,7,c
 34469  00DFD6  D010               	goto	l602
 34470  00DFD8                     u16510:
 34471                           
 34472                           ; BSR set to: 1
 34473                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 34474                           
 34475                           ; BSR set to: 1
 34476  00DFD8  0E00               	movlw	0
 34477  00DFDA  0100               	movlb	0	; () banked
 34478  00DFDC  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 34479  00DFDE  0E40               	movlw	64
 34480  00DFE0  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 34481  00DFE2  0E0D               	movlw	13
 34482  00DFE4  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 34483  00DFE6  0E40               	movlw	64
 34484  00DFE8  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 34485  00DFEA  0E02               	movlw	2
 34486  00DFEC  EC07  F08A         	call	_USBTransferOnePacket
 34487  00DFF0  C060  F13F         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 34488  00DFF4  C061  F140         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 34489  00DFF8                     l602:
 34490                           
 34491                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 34492  00DFF8  0E00               	movlw	0
 34493  00DFFA                     L46:
 34494  00DFFA  0101               	movlb	1	; () banked
 34495  00DFFC  6F56               	movwf	_MSD_State& (0+255),b
 34496                           
 34497                           ;usb_device_msd.c: 513: break;
 34498  00DFFE  D01B               	goto	l586
 34499  00E000                     
 34500                           ; BSR set to: 1
 34501                           ;usb_device_msd.c: 518: MSD_State=0x00;
 34502                           
 34503                           ; BSR set to: 1
 34504  00E000  0E00               	movlw	0
 34505  00E002  6F56               	movwf	_MSD_State& (0+255),b
 34506                           
 34507                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 34508  00E004  0E02               	movlw	2
 34509  00E006  010D               	movlb	13	; () banked
 34510  00E008  6F8C               	movwf	140,b	;volatile
 34511                           
 34512                           ; BSR set to: 13
 34513                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 34514  00E00A  0E00               	movlw	0
 34515  00E00C  0100               	movlb	0	; () banked
 34516  00E00E  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34517  00E010  0E02               	movlw	2
 34518  00E012  EC82  F089         	call	_USBStallEndpoint
 34519                           
 34520                           ;usb_device_msd.c: 521: }
 34521  00E016  D00F               	goto	l586
 34522  00E018                     l570:
 34523  00E018  0101               	movlb	1	; () banked
 34524  00E01A  5156               	movf	_MSD_State& (0+255),w,b
 34525                           
 34526                           ; Switch size 1, requested type "space"
 34527                           ; Number of cases is 4, Range of values is 0 to 3
 34528                           ; switch strategies available:
 34529                           ; Name         Instructions Cycles
 34530                           ; simple_byte           13     7 (average)
 34531                           ;	Chosen strategy is simple_byte
 34532  00E01C  0A00               	xorlw	0	; case 0
 34533  00E01E  B4D8               	btfsc	status,2,c
 34534  00E020  D6DF               	goto	l571
 34535  00E022  0A01               	xorlw	1	; case 1
 34536  00E024  B4D8               	btfsc	status,2,c
 34537  00E026  D792               	goto	l587
 34538  00E028  0A03               	xorlw	3	; case 2
 34539  00E02A  B4D8               	btfsc	status,2,c
 34540  00E02C  D795               	goto	l589
 34541  00E02E  0A01               	xorlw	1	; case 3
 34542  00E030  B4D8               	btfsc	status,2,c
 34543  00E032  D7A5               	goto	l592
 34544  00E034  D7E5               	goto	l605
 34545  00E036                     l586:
 34546                           
 34547                           ;usb_device_msd.c: 524: {PIE2bits.USBIE = 1;};
 34548  00E036  88A0               	bsf	4000,4,c	;volatile
 34549                           
 34550                           ;usb_device_msd.c: 526: return MSD_State;;	Return value of _MSDTasks is never used
 34551  00E038  0012               	return		;funcret
 34552  00E03A                     __end_of_MSDTasks:
 34553                           	opt stack 0
 34554                           tblptru	equ	0xFF8
 34555                           tblptrh	equ	0xFF7
 34556                           tblptrl	equ	0xFF6
 34557                           tablat	equ	0xFF5
 34558                           prodh	equ	0xFF4
 34559                           prodl	equ	0xFF3
 34560                           intcon	equ	0xFF2
 34561                           postinc0	equ	0xFEE
 34562                           wreg	equ	0xFE8
 34563                           indf1	equ	0xFE7
 34564                           postinc1	equ	0xFE6
 34565                           postdec1	equ	0xFE5
 34566                           plusw1	equ	0xFE3
 34567                           fsr1h	equ	0xFE2
 34568                           fsr1l	equ	0xFE1
 34569                           indf2	equ	0xFDF
 34570                           postinc2	equ	0xFDE
 34571                           postdec2	equ	0xFDD
 34572                           plusw2	equ	0xFDB
 34573                           fsr2h	equ	0xFDA
 34574                           fsr2l	equ	0xFD9
 34575                           status	equ	0xFD8
 34576                           
 34577 ;; *************** function _MSDProcessCommand *****************
 34578 ;; Defined at:
 34579 ;;		line 553 in file "usb_device_msd.c"
 34580 ;; Parameters:    Size  Location     Type
 34581 ;;		None
 34582 ;; Auto vars:     Size  Location     Type
 34583 ;;		None
 34584 ;; Return value:  Size  Location     Type
 34585 ;;                  1    wreg      unsigned char 
 34586 ;; Registers used:
 34587 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 34588 ;; Tracked objects:
 34589 ;;		On entry : 0/0
 34590 ;;		On exit  : 0/0
 34591 ;;		Unchanged: 0/0
 34592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34595 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34596 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34597 ;;Total ram usage:        5 bytes
 34598 ;; Hardware stack levels used:    1
 34599 ;; Hardware stack levels required when called:   19
 34600 ;; This function calls:
 34601 ;;		_ExternalFlash_MediaDetect
 34602 ;;		_ExternalFlash_MediaInitialize
 34603 ;;		_MSDProcessCommandMediaAbsent
 34604 ;;		_MSDProcessCommandMediaPresent
 34605 ;; This function is called by:
 34606 ;;		_MSDTasks
 34607 ;; This function uses a non-reentrant model
 34608 ;;
 34609                           
 34610                           	psect	text134
 34611  0107E4                     __ptext134:
 34612                           	opt stack 0
 34613  0107E4                     _MSDProcessCommand:
 34614                           	opt stack 9
 34615                           
 34616                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 34617                           
 34618                           ;incstack = 0
 34619  0107E4  C2AE  F060         	movff	_LUN+21,ExternalFlash_MediaDetect@config
 34620  0107E8  C2AF  F061         	movff	_LUN+22,ExternalFlash_MediaDetect@config+1
 34621  0107EC  EE22  F0A2         	lfsr	2,_LUN+9
 34622  0107F0  D801               	call	u15008
 34623  0107F2  D00A               	goto	u15009
 34624  0107F4                     u15008:
 34625  0107F4  0005               	push	
 34626  0107F6  6EFA               	movwf	pclath,c
 34627  0107F8  50DE               	movf	postinc2,w,c
 34628  0107FA  6EFD               	movwf	tosl,c
 34629  0107FC  50DE               	movf	postinc2,w,c
 34630  0107FE  6EFE               	movwf	tosh,c
 34631  010800  50DE               	movf	postinc2,w,c
 34632  010802  6EFF               	movwf	tosu,c
 34633  010804  50FA               	movf	pclath,w,c
 34634  010806  0012               	return		;indir
 34635  010808                     u15009:
 34636  010808  0900               	iorlw	0
 34637  01080A  B4D8               	btfsc	status,2,c
 34638  01080C  D00C               	goto	u15020
 34639  01080E  0102               	movlb	2	; () banked
 34640  010810  510D               	movf	(_gblCBW+13)& (0+255),w,b
 34641  010812  0D01               	mullw	1
 34642  010814  0E50               	movlw	low _SoftDetach
 34643  010816  24F3               	addwf	prodl,w,c
 34644  010818  6ED9               	movwf	fsr2l,c
 34645  01081A  0E01               	movlw	high _SoftDetach
 34646  01081C  20F4               	addwfc	prodh,w,c
 34647  01081E  6EDA               	movwf	fsr2h,c
 34648  010820  04DE               	decf	postinc2,w,c
 34649  010822  A4D8               	btfss	status,2,c
 34650  010824  D01D               	goto	l608
 34651  010826                     u15020:
 34652                           
 34653                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 34654                           
 34655                           ; BSR set to: 2
 34656  010826  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 34657  01082A  0E01               	movlw	1
 34658  01082C  0100               	movlb	0	; () banked
 34659  01082E  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 34660  010830  0E00               	movlw	0
 34661  010832  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 34662  010834  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 34663  010836  D003               	goto	u15034
 34664  010838                     u15035:
 34665  010838  90D8               	bcf	status,0,c
 34666  01083A  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 34667  01083C  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 34668  01083E                     u15034:
 34669  01083E  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 34670  010840  D7FB               	goto	u15035
 34671  010842  0100               	movlb	0	; () banked
 34672  010844  1DA8               	comf	(??_MSDProcessCommand+1)& (0+255),w,b
 34673  010846  6FAA               	movwf	(??_MSDProcessCommand+3)& (0+255),b
 34674  010848  1DA9               	comf	(??_MSDProcessCommand+2)& (0+255),w,b
 34675  01084A  6FAB               	movwf	(??_MSDProcessCommand+4)& (0+255),b
 34676  01084C  51AA               	movf	(??_MSDProcessCommand+3)& (0+255),w,b
 34677  01084E  0101               	movlb	1	; () banked
 34678  010850  1739               	andwf	_gblMediaPresent& (0+255),f,b
 34679  010852  0100               	movlb	0	; () banked
 34680  010854  51AB               	movf	(??_MSDProcessCommand+4)& (0+255),w,b
 34681  010856  0101               	movlb	1	; () banked
 34682  010858  173A               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 34683                           
 34684                           ; BSR set to: 1
 34685                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 34686  01085A  ECDE  F0A3         	call	_MSDProcessCommandMediaAbsent	;wreg free
 34687                           
 34688                           ;usb_device_msd.c: 563: }
 34689  01085E  D059               	goto	l615
 34690  010860                     l608:
 34691                           
 34692                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 34693  010860  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 34694  010864  0E01               	movlw	1
 34695  010866  0100               	movlb	0	; () banked
 34696  010868  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 34697  01086A  0E00               	movlw	0
 34698  01086C  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 34699  01086E  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 34700  010870  D003               	goto	u15044
 34701  010872                     u15045:
 34702  010872  90D8               	bcf	status,0,c
 34703  010874  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 34704  010876  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 34705  010878                     u15044:
 34706  010878  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 34707  01087A  D7FB               	goto	u15045
 34708  01087C  0101               	movlb	1	; () banked
 34709  01087E  5139               	movf	_gblMediaPresent& (0+255),w,b
 34710  010880  0100               	movlb	0	; () banked
 34711  010882  17A8               	andwf	(??_MSDProcessCommand+1)& (0+255),f,b
 34712  010884  0101               	movlb	1	; () banked
 34713  010886  513A               	movf	(_gblMediaPresent+1)& (0+255),w,b
 34714  010888  0100               	movlb	0	; () banked
 34715  01088A  17A9               	andwf	(??_MSDProcessCommand+2)& (0+255),f,b
 34716  01088C  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 34717  01088E  11A9               	iorwf	(??_MSDProcessCommand+2)& (0+255),w,b
 34718  010890  A4D8               	btfss	status,2,c
 34719  010892  D03D               	goto	l612
 34720                           
 34721                           ; BSR set to: 0
 34722                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 34723  010894  C2AE  F060         	movff	_LUN+21,ExternalFlash_MediaInitialize@config
 34724  010898  C2AF  F061         	movff	_LUN+22,ExternalFlash_MediaInitialize@config+1
 34725  01089C  D801               	call	u15068
 34726  01089E  D00B               	goto	u15069
 34727  0108A0                     u15068:
 34728  0108A0  0005               	push	
 34729  0108A2  6EFA               	movwf	pclath,c
 34730  0108A4  0102               	movlb	2	; () banked
 34731  0108A6  5199               	movf	_LUN& (0+255),w,b
 34732  0108A8  6EFD               	movwf	tosl,c
 34733  0108AA  519A               	movf	(_LUN+1)& (0+255),w,b
 34734  0108AC  6EFE               	movwf	tosh,c
 34735  0108AE  519B               	movf	(_LUN+2)& (0+255),w,b
 34736  0108B0  6EFF               	movwf	tosu,c
 34737  0108B2  50FA               	movf	pclath,w,c
 34738  0108B4  0012               	return		;indir
 34739  0108B6                     u15069:
 34740  0108B6  0100               	movlb	0	; () banked
 34741  0108B8  5160               	movf	?_ExternalFlash_MediaInitialize& (0+255),w,b
 34742  0108BA  1161               	iorwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),w,b
 34743  0108BC  B4D8               	btfsc	status,2,c
 34744  0108BE  D024               	goto	l613
 34745                           
 34746                           ; BSR set to: 0
 34747                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 34748  0108C0  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 34749  0108C4  0E01               	movlw	1
 34750  0108C6  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 34751  0108C8  0E00               	movlw	0
 34752  0108CA  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 34753  0108CC  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 34754  0108CE  D003               	goto	u15084
 34755  0108D0                     u15085:
 34756  0108D0  90D8               	bcf	status,0,c
 34757  0108D2  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 34758  0108D4  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 34759  0108D6                     u15084:
 34760  0108D6  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 34761  0108D8  D7FB               	goto	u15085
 34762  0108DA  0100               	movlb	0	; () banked
 34763  0108DC  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 34764  0108DE  0101               	movlb	1	; () banked
 34765  0108E0  1339               	iorwf	_gblMediaPresent& (0+255),f,b
 34766  0108E2  0100               	movlb	0	; () banked
 34767  0108E4  51A9               	movf	(??_MSDProcessCommand+2)& (0+255),w,b
 34768  0108E6  0101               	movlb	1	; () banked
 34769  0108E8  133A               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 34770                           
 34771                           ; BSR set to: 1
 34772                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 34773  0108EA  0102               	movlb	2	; () banked
 34774  0108EC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 34775  0108EE  0BF0               	andlw	-16
 34776  0108F0  0906               	iorlw	6
 34777  0108F2  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 34778                           
 34779                           ; BSR set to: 2
 34780                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 34781  0108F4  0E28               	movlw	40
 34782  0108F6  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 34783                           
 34784                           ; BSR set to: 2
 34785                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 34786  0108F8  0E00               	movlw	0
 34787  0108FA  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 34788                           
 34789                           ; BSR set to: 2
 34790                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 34791  0108FC  0E01               	movlw	1
 34792  0108FE  010D               	movlb	13	; () banked
 34793  010900  6F8C               	movwf	140,b	;volatile
 34794                           
 34795                           ; BSR set to: 13
 34796                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 34797  010902  ECF6  F062         	call	_MSDProcessCommandMediaPresent	;wreg free
 34798                           
 34799                           ;usb_device_msd.c: 589: }
 34800  010906  D005               	goto	l615
 34801  010908                     l613:
 34802                           
 34803                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 34804  010908  ECDE  F0A3         	call	_MSDProcessCommandMediaAbsent	;wreg free
 34805                           
 34806                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 34807  01090C  D002               	goto	l615
 34808  01090E                     l612:
 34809                           
 34810                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 34811  01090E  ECF6  F062         	call	_MSDProcessCommandMediaPresent	;wreg free
 34812  010912                     l615:
 34813                           
 34814                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 34815  010912  0101               	movlb	1	; () banked
 34816  010914  5155               	movf	_MSDCommandState& (0+255),w,b
 34817  010916  0012               	return	
 34818  010918                     __end_of_MSDProcessCommand:
 34819                           	opt stack 0
 34820                           tosu	equ	0xFFF
 34821                           tosh	equ	0xFFE
 34822                           tosl	equ	0xFFD
 34823                           pclath	equ	0xFFA
 34824                           tblptru	equ	0xFF8
 34825                           tblptrh	equ	0xFF7
 34826                           tblptrl	equ	0xFF6
 34827                           tablat	equ	0xFF5
 34828                           prodh	equ	0xFF4
 34829                           prodl	equ	0xFF3
 34830                           intcon	equ	0xFF2
 34831                           postinc0	equ	0xFEE
 34832                           wreg	equ	0xFE8
 34833                           indf1	equ	0xFE7
 34834                           postinc1	equ	0xFE6
 34835                           postdec1	equ	0xFE5
 34836                           plusw1	equ	0xFE3
 34837                           fsr1h	equ	0xFE2
 34838                           fsr1l	equ	0xFE1
 34839                           indf2	equ	0xFDF
 34840                           postinc2	equ	0xFDE
 34841                           postdec2	equ	0xFDD
 34842                           plusw2	equ	0xFDB
 34843                           fsr2h	equ	0xFDA
 34844                           fsr2l	equ	0xFD9
 34845                           status	equ	0xFD8
 34846                           
 34847 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 34848 ;; Defined at:
 34849 ;;		line 635 in file "usb_device_msd.c"
 34850 ;; Parameters:    Size  Location     Type
 34851 ;;		None
 34852 ;; Auto vars:     Size  Location     Type
 34853 ;;		None
 34854 ;; Return value:  Size  Location     Type
 34855 ;;                  1    wreg      void 
 34856 ;; Registers used:
 34857 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 34858 ;; Tracked objects:
 34859 ;;		On entry : 0/0
 34860 ;;		On exit  : 0/0
 34861 ;;		Unchanged: 0/0
 34862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34867 ;;Total ram usage:        0 bytes
 34868 ;; Hardware stack levels used:    1
 34869 ;; Hardware stack levels required when called:   18
 34870 ;; This function calls:
 34871 ;;		_MSDErrorHandler
 34872 ;;		_MSDProcessCommandMediaPresent
 34873 ;;		_ResetSenseData
 34874 ;; This function is called by:
 34875 ;;		_MSDProcessCommand
 34876 ;; This function uses a non-reentrant model
 34877 ;;
 34878                           
 34879                           	psect	text135
 34880  0147BC                     __ptext135:
 34881                           	opt stack 0
 34882  0147BC                     _MSDProcessCommandMediaAbsent:
 34883                           	opt stack 9
 34884                           
 34885                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 34886                           
 34887                           ; BSR set to: 1
 34888                           ;incstack = 0
 34889  0147BC  D01E               	goto	l619
 34890  0147BE                     
 34891                           ;usb_device_msd.c: 646: ResetSenseData();
 34892  0147BE  EC0F  F0A4         	call	_ResetSenseData	;wreg free
 34893                           
 34894                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 34895  0147C2  0102               	movlb	2	; () banked
 34896  0147C4  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 34897  0147C6  0BF0               	andlw	-16
 34898  0147C8  0902               	iorlw	2
 34899  0147CA  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 34900                           
 34901                           ; BSR set to: 2
 34902                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 34903  0147CC  0E3A               	movlw	58
 34904  0147CE  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 34905                           
 34906                           ; BSR set to: 2
 34907                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 34908  0147D0  0E00               	movlw	0
 34909  0147D2  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 34910                           
 34911                           ; BSR set to: 2
 34912                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 34913  0147D4  ECF6  F062         	call	_MSDProcessCommandMediaPresent	;wreg free
 34914                           
 34915                           ;usb_device_msd.c: 655: break;
 34916  0147D8  0012               	return	
 34917  0147DA                     
 34918                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 34919  0147DA  0E01               	movlw	1
 34920  0147DC  010D               	movlb	13	; () banked
 34921  0147DE  6F8C               	movwf	140,b	;volatile
 34922                           
 34923                           ; BSR set to: 13
 34924                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 34925  0147E0  0101               	movlb	1	; () banked
 34926  0147E2  6955               	setf	_MSDCommandState& (0+255),b
 34927                           
 34928                           ;usb_device_msd.c: 665: break;
 34929  0147E4  0012               	return	
 34930  0147E6                     
 34931                           ; BSR set to: 1
 34932                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 34933                           
 34934                           ; BSR set to: 1
 34935  0147E6  ECF6  F062         	call	_MSDProcessCommandMediaPresent	;wreg free
 34936                           
 34937                           ;usb_device_msd.c: 671: break;
 34938  0147EA  0012               	return	
 34939  0147EC                     
 34940                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 34941  0147EC  ECF6  F062         	call	_MSDProcessCommandMediaPresent	;wreg free
 34942                           
 34943                           ;usb_device_msd.c: 677: break;
 34944  0147F0  0012               	return	
 34945  0147F2                     
 34946                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 34947  0147F2  0E7F               	movlw	127
 34948  0147F4  ECD5  F086         	call	_MSDErrorHandler
 34949                           
 34950                           ;usb_device_msd.c: 685: }
 34951                           
 34952                           ;usb_device_msd.c: 684: break;
 34953  0147F8  0012               	return	
 34954  0147FA                     l619:
 34955  0147FA  0101               	movlb	1	; () banked
 34956  0147FC  5155               	movf	_MSDCommandState& (0+255),w,b
 34957                           
 34958                           ; Switch size 1, requested type "space"
 34959                           ; Number of cases is 5, Range of values is 0 to 253
 34960                           ; switch strategies available:
 34961                           ; Name         Instructions Cycles
 34962                           ; simple_byte           16     9 (average)
 34963                           ;	Chosen strategy is simple_byte
 34964  0147FE  0A00               	xorlw	0	; case 0
 34965  014800  B4D8               	btfsc	status,2,c
 34966  014802  D7EB               	goto	l622
 34967  014804  0A03               	xorlw	3	; case 3
 34968  014806  B4D8               	btfsc	status,2,c
 34969  014808  D7DA               	goto	l620
 34970  01480A  0A11               	xorlw	17	; case 18
 34971  01480C  B4D8               	btfsc	status,2,c
 34972  01480E  D7EB               	goto	l624
 34973  014810  0A0C               	xorlw	12	; case 30
 34974  014812  B4D8               	btfsc	status,2,c
 34975  014814  D7E2               	goto	l622
 34976  014816  0AE3               	xorlw	227	; case 253
 34977  014818  B4D8               	btfsc	status,2,c
 34978  01481A  D7E8               	goto	l625
 34979  01481C  D7EA               	goto	l626
 34980  01481E                     __end_of_MSDProcessCommandMediaAbsent:
 34981                           	opt stack 0
 34982                           tosu	equ	0xFFF
 34983                           tosh	equ	0xFFE
 34984                           tosl	equ	0xFFD
 34985                           pclath	equ	0xFFA
 34986                           tblptru	equ	0xFF8
 34987                           tblptrh	equ	0xFF7
 34988                           tblptrl	equ	0xFF6
 34989                           tablat	equ	0xFF5
 34990                           prodh	equ	0xFF4
 34991                           prodl	equ	0xFF3
 34992                           intcon	equ	0xFF2
 34993                           postinc0	equ	0xFEE
 34994                           wreg	equ	0xFE8
 34995                           indf1	equ	0xFE7
 34996                           postinc1	equ	0xFE6
 34997                           postdec1	equ	0xFE5
 34998                           plusw1	equ	0xFE3
 34999                           fsr1h	equ	0xFE2
 35000                           fsr1l	equ	0xFE1
 35001                           indf2	equ	0xFDF
 35002                           postinc2	equ	0xFDE
 35003                           postdec2	equ	0xFDD
 35004                           plusw2	equ	0xFDB
 35005                           fsr2h	equ	0xFDA
 35006                           fsr2l	equ	0xFD9
 35007                           status	equ	0xFD8
 35008                           
 35009 ;; *************** function _MSDProcessCommandMediaPresent *****************
 35010 ;; Defined at:
 35011 ;;		line 712 in file "usb_device_msd.c"
 35012 ;; Parameters:    Size  Location     Type
 35013 ;;		None
 35014 ;; Auto vars:     Size  Location     Type
 35015 ;;  capacity        4   66[BANK0 ] struct .
 35016 ;;  sectorSize      4   62[BANK0 ] struct .
 35017 ;;  i               1   70[BANK0 ] unsigned char 
 35018 ;;  NumBytesInPa    1   61[BANK0 ] unsigned char 
 35019 ;; Return value:  Size  Location     Type
 35020 ;;                  1    wreg      void 
 35021 ;; Registers used:
 35022 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 35023 ;; Tracked objects:
 35024 ;;		On entry : 0/0
 35025 ;;		On exit  : 0/0
 35026 ;;		Unchanged: 0/0
 35027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35029 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35030 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35031 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35032 ;;Total ram usage:       14 bytes
 35033 ;; Hardware stack levels used:    1
 35034 ;; Hardware stack levels required when called:   17
 35035 ;; This function calls:
 35036 ;;		_ExternalFlash_CapacityRead
 35037 ;;		_ExternalFlash_SectorSizeRead
 35038 ;;		_ExternalFlash_WriteProtectStateGet
 35039 ;;		_MSDCheckForErrorCases
 35040 ;;		_MSDComputeDeviceInAndResidue
 35041 ;;		_MSDErrorHandler
 35042 ;;		_MSDReadHandler
 35043 ;;		_MSDWriteHandler
 35044 ;;		_ResetSenseData
 35045 ;;		_USBTransferOnePacket
 35046 ;;		_memcpy
 35047 ;; This function is called by:
 35048 ;;		_MSDProcessCommand
 35049 ;;		_MSDProcessCommandMediaAbsent
 35050 ;; This function uses a non-reentrant model
 35051 ;;
 35052                           
 35053                           	psect	text136
 35054  00C5EC                     __ptext136:
 35055                           	opt stack 0
 35056  00C5EC                     _MSDProcessCommandMediaPresent:
 35057                           	opt stack 10
 35058                           
 35059                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 35060                           
 35061                           ;incstack = 0
 35062  00C5EC  D1D1               	goto	l630
 35063  00C5EE                     
 35064                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 35065  00C5EE  EC6E  F074         	call	_MSDReadHandler	;wreg free
 35066  00C5F2  0900               	iorlw	0
 35067  00C5F4  A4D8               	btfss	status,2,c
 35068  00C5F6  0012               	return	
 35069                           
 35070                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 35071  00C5F8  0101               	movlb	1	; () banked
 35072  00C5FA  6955               	setf	_MSDCommandState& (0+255),b
 35073                           
 35074                           ; BSR set to: 1
 35075                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 35076  00C5FC  0012               	return	
 35077  00C5FE                     
 35078                           ; BSR set to: 1
 35079                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 35080                           
 35081                           ; BSR set to: 1
 35082  00C5FE  EC34  F068         	call	_MSDWriteHandler	;wreg free
 35083  00C602  0900               	iorlw	0
 35084  00C604  A4D8               	btfss	status,2,c
 35085  00C606  0012               	return	
 35086                           
 35087                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 35088  00C608  0101               	movlb	1	; () banked
 35089  00C60A  6955               	setf	_MSDCommandState& (0+255),b
 35090                           
 35091                           ; BSR set to: 1
 35092                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 35093  00C60C  0012               	return	
 35094  00C60E                     
 35095                           ; BSR set to: 1
 35096                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 35097                           
 35098                           ; BSR set to: 1
 35099  00C60E  054F               	decf	_MSDHostNoData& (0+255),w,b
 35100  00C610  A4D8               	btfss	status,2,c
 35101  00C612  D002               	goto	l637
 35102                           
 35103                           ; BSR set to: 1
 35104                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 35105  00C614  6955               	setf	_MSDCommandState& (0+255),b
 35106                           
 35107                           ;usb_device_msd.c: 751: break;
 35108  00C616  0012               	return	
 35109  00C618                     l637:
 35110                           
 35111                           ; BSR set to: 1
 35112                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 35113  00C618  C212  F138         	movff	_gblCBW+18,_TransferLength+1
 35114                           
 35115                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 35116  00C61C  C213  F137         	movff	_gblCBW+19,_TransferLength
 35117                           
 35118                           ; BSR set to: 1
 35119                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 35120  00C620  C137  F06A         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 35121  00C624  C138  F06B         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 35122  00C628  0100               	movlb	0	; () banked
 35123  00C62A  6B6C               	clrf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 35124  00C62C  6B6D               	clrf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 35125  00C62E  EC62  F087         	call	_MSDCheckForErrorCases	;wreg free
 35126  00C632  0900               	iorlw	0
 35127  00C634  A4D8               	btfss	status,2,c
 35128  00C636  0012               	return	
 35129                           
 35130                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 35131                           
 35132                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 35133  00C638  0E00               	movlw	0
 35134  00C63A  0100               	movlb	0	; () banked
 35135  00C63C  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 35136  00C63E  0E24               	movlw	36
 35137  00C640  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 35138  00C642  EC06  F097         	call	_MSDComputeDeviceInAndResidue	;wreg free
 35139                           
 35140                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 35141  00C646  0E00               	movlw	0
 35142  00C648  0100               	movlb	0	; () banked
 35143  00C64A  6F60               	movwf	memcpy@d1& (0+255),b
 35144  00C64C  0E06               	movlw	6
 35145  00C64E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 35146  00C650  0E60               	movlw	low _inq_resp
 35147  00C652  6F62               	movwf	memcpy@s1& (0+255),b
 35148  00C654  0EA1               	movlw	high _inq_resp
 35149  00C656  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 35150  00C658  0E00               	movlw	0
 35151  00C65A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 35152  00C65C  0E24               	movlw	36
 35153  00C65E  6F64               	movwf	memcpy@n& (0+255),b
 35154  00C660  EC71  F0A4         	call	_memcpy	;wreg free
 35155                           
 35156                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 35157  00C664  0EFD               	movlw	253
 35158  00C666  0101               	movlb	1	; () banked
 35159  00C668  6F55               	movwf	_MSDCommandState& (0+255),b
 35160                           
 35161                           ;usb_device_msd.c: 773: break;
 35162  00C66A  0012               	return	
 35163  00C66C                     
 35164                           ; BSR set to: 1
 35165                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 35166                           
 35167                           ; BSR set to: 1
 35168  00C66C  C2AE  F060         	movff	_LUN+21,ExternalFlash_CapacityRead@config
 35169  00C670  C2AF  F061         	movff	_LUN+22,ExternalFlash_CapacityRead@config+1
 35170  00C674  EE22  F09C         	lfsr	2,_LUN+3
 35171  00C678  D801               	call	u12358
 35172  00C67A  D00A               	goto	u12359
 35173  00C67C                     u12358:
 35174  00C67C  0005               	push	
 35175  00C67E  6EFA               	movwf	pclath,c
 35176  00C680  50DE               	movf	postinc2,w,c
 35177  00C682  6EFD               	movwf	tosl,c
 35178  00C684  50DE               	movf	postinc2,w,c
 35179  00C686  6EFE               	movwf	tosh,c
 35180  00C688  50DE               	movf	postinc2,w,c
 35181  00C68A  6EFF               	movwf	tosu,c
 35182  00C68C  50FA               	movf	pclath,w,c
 35183  00C68E  0012               	return		;indir
 35184  00C690                     u12359:
 35185  00C690  C060  F0A2         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 35186  00C694  C061  F0A3         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 35187  00C698  C062  F0A4         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 35188  00C69C  C063  F0A5         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 35189                           
 35190                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 35191  00C6A0  C2AE  F060         	movff	_LUN+21,ExternalFlash_SectorSizeRead@config
 35192  00C6A4  C2AF  F061         	movff	_LUN+22,ExternalFlash_SectorSizeRead@config+1
 35193  00C6A8  EE22  F09F         	lfsr	2,_LUN+6
 35194  00C6AC  D801               	call	u12368
 35195  00C6AE  D00A               	goto	u12369
 35196  00C6B0                     u12368:
 35197  00C6B0  0005               	push	
 35198  00C6B2  6EFA               	movwf	pclath,c
 35199  00C6B4  50DE               	movf	postinc2,w,c
 35200  00C6B6  6EFD               	movwf	tosl,c
 35201  00C6B8  50DE               	movf	postinc2,w,c
 35202  00C6BA  6EFE               	movwf	tosh,c
 35203  00C6BC  50DE               	movf	postinc2,w,c
 35204  00C6BE  6EFF               	movwf	tosu,c
 35205  00C6C0  50FA               	movf	pclath,w,c
 35206  00C6C2  0012               	return		;indir
 35207  00C6C4                     u12369:
 35208  00C6C4  0100               	movlb	0	; () banked
 35209  00C6C6  C060  F09E         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 35210  00C6CA  C061  F09F         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 35211  00C6CE  6BA0               	clrf	(MSDProcessCommandMediaPresent@sectorSize+2)& (0+255),b
 35212  00C6D0  6BA1               	clrf	(MSDProcessCommandMediaPresent@sectorSize+3)& (0+255),b
 35213                           
 35214                           ; BSR set to: 0
 35215                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 35216  00C6D2  EE26 F000          	lfsr	2,1536
 35217  00C6D6  C0A5  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 35218                           
 35219                           ; BSR set to: 0
 35220                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 35221  00C6DA  EE26 F001          	lfsr	2,1537	;volatile
 35222  00C6DE  C0A4  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 35223                           
 35224                           ; BSR set to: 0
 35225                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 35226  00C6E2  EE26 F002          	lfsr	2,1538	;volatile
 35227  00C6E6  C0A3  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 35228                           
 35229                           ; BSR set to: 0
 35230                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 35231  00C6EA  EE26 F003          	lfsr	2,1539	;volatile
 35232  00C6EE  C0A2  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 35233                           
 35234                           ; BSR set to: 0
 35235                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 35236  00C6F2  EE26 F004          	lfsr	2,1540	;volatile
 35237  00C6F6  C0A1  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 35238                           
 35239                           ; BSR set to: 0
 35240                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 35241  00C6FA  EE26 F005          	lfsr	2,1541	;volatile
 35242  00C6FE  C0A0  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 35243                           
 35244                           ; BSR set to: 0
 35245                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 35246  00C702  EE26 F006          	lfsr	2,1542	;volatile
 35247  00C706  C09F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 35248                           
 35249                           ; BSR set to: 0
 35250                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 35251  00C70A  EE26 F007          	lfsr	2,1543	;volatile
 35252  00C70E  C09E  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 35253                           
 35254                           ; BSR set to: 0
 35255                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 35256  00C712  0E00               	movlw	0
 35257  00C714  0101               	movlb	1	; () banked
 35258  00C716  6F38               	movwf	(_TransferLength+1)& (0+255),b
 35259  00C718  0E08               	movlw	8
 35260  00C71A  6F37               	movwf	_TransferLength& (0+255),b
 35261                           
 35262                           ; BSR set to: 1
 35263                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 35264  00C71C  0E00               	movlw	0
 35265  00C71E  0100               	movlb	0	; () banked
 35266  00C720  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 35267  00C722  0E08               	movlw	8
 35268  00C724  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 35269  00C726  EC06  F097         	call	_MSDComputeDeviceInAndResidue	;wreg free
 35270                           
 35271                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 35272  00C72A  0EFD               	movlw	253
 35273  00C72C  0101               	movlb	1	; () banked
 35274  00C72E  6F55               	movwf	_MSDCommandState& (0+255),b
 35275                           
 35276                           ;usb_device_msd.c: 802: break;
 35277  00C730  0012               	return	
 35278  00C732                     
 35279                           ; BSR set to: 1
 35280                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 35281                           
 35282                           ; BSR set to: 1
 35283  00C732  054F               	decf	_MSDHostNoData& (0+255),w,b
 35284  00C734  A4D8               	btfss	status,2,c
 35285  00C736  D002               	goto	l641
 35286                           
 35287                           ; BSR set to: 1
 35288                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 35289  00C738  6955               	setf	_MSDCommandState& (0+255),b
 35290                           
 35291                           ;usb_device_msd.c: 814: break;
 35292  00C73A  0012               	return	
 35293  00C73C                     l641:
 35294                           
 35295                           ; BSR set to: 1
 35296                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 35297                           
 35298                           ; BSR set to: 1
 35299  00C73C  0E00               	movlw	0
 35300  00C73E  6F38               	movwf	(_TransferLength+1)& (0+255),b
 35301  00C740  0E12               	movlw	18
 35302  00C742  6F37               	movwf	_TransferLength& (0+255),b
 35303                           
 35304                           ; BSR set to: 1
 35305                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 35306  00C744  0E00               	movlw	0
 35307  00C746  0100               	movlb	0	; () banked
 35308  00C748  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 35309  00C74A  0E12               	movlw	18
 35310  00C74C  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 35311  00C74E  EC06  F097         	call	_MSDComputeDeviceInAndResidue	;wreg free
 35312                           
 35313                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 35314  00C752  0E00               	movlw	0
 35315  00C754  0100               	movlb	0	; () banked
 35316  00C756  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 35317  00C758                     l13808:
 35318                           
 35319                           ; BSR set to: 0
 35320  00C758  0E11               	movlw	17
 35321  00C75A  65A6               	cpfsgt	MSDProcessCommandMediaPresent@i& (0+255),b
 35322  00C75C  D001               	goto	l642
 35323  00C75E  D014               	goto	u12390
 35324  00C760                     l642:
 35325                           
 35326                           ; BSR set to: 0
 35327                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 35328                           
 35329                           ; BSR set to: 0
 35330  00C760  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 35331  00C762  0D01               	mullw	1
 35332  00C764  0E1F               	movlw	low _gblSenseData
 35333  00C766  24F3               	addwf	prodl,w,c
 35334  00C768  6ED9               	movwf	fsr2l,c
 35335  00C76A  0E02               	movlw	high _gblSenseData
 35336  00C76C  20F4               	addwfc	prodh,w,c
 35337  00C76E  6EDA               	movwf	fsr2h,c
 35338  00C770  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 35339  00C772  0D01               	mullw	1
 35340  00C774  0E00               	movlw	0
 35341  00C776  24F3               	addwf	prodl,w,c
 35342  00C778  6EE1               	movwf	fsr1l,c
 35343  00C77A  0E06               	movlw	6
 35344  00C77C  20F4               	addwfc	prodh,w,c
 35345  00C77E  6EE2               	movwf	fsr1h,c
 35346  00C780  CFDF FFE7          	movff	indf2,indf1
 35347                           
 35348                           ; BSR set to: 0
 35349  00C784  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 35350  00C786  D7E8               	goto	l13808
 35351  00C788                     u12390:
 35352                           
 35353                           ; BSR set to: 0
 35354                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 35355                           
 35356                           ; BSR set to: 0
 35357  00C788  0EFD               	movlw	253
 35358  00C78A  0101               	movlb	1	; () banked
 35359  00C78C  6F55               	movwf	_MSDCommandState& (0+255),b
 35360                           
 35361                           ;usb_device_msd.c: 827: break;
 35362  00C78E  0012               	return	
 35363  00C790                     l644:
 35364                           
 35365                           ; BSR set to: 1
 35366                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 35367  00C790  0E03               	movlw	3
 35368  00C792  CFE8 F600          	movff	wreg,1536
 35369                           
 35370                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 35371  00C796  0E00               	movlw	0
 35372  00C798  CFE8 F601          	movff	wreg,1537	;volatile
 35373                           
 35374                           ; BSR set to: 1
 35375                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 35376  00C79C  C2AE  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 35377  00C7A0  C2AF  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 35378  00C7A4  EE22  F0A8         	lfsr	2,_LUN+15
 35379  00C7A8  D801               	call	u12408
 35380  00C7AA  D00A               	goto	u12409
 35381  00C7AC                     u12408:
 35382  00C7AC  0005               	push	
 35383  00C7AE  6EFA               	movwf	pclath,c
 35384  00C7B0  50DE               	movf	postinc2,w,c
 35385  00C7B2  6EFD               	movwf	tosl,c
 35386  00C7B4  50DE               	movf	postinc2,w,c
 35387  00C7B6  6EFE               	movwf	tosh,c
 35388  00C7B8  50DE               	movf	postinc2,w,c
 35389  00C7BA  6EFF               	movwf	tosu,c
 35390  00C7BC  50FA               	movf	pclath,w,c
 35391  00C7BE  0012               	return		;indir
 35392  00C7C0                     u12409:
 35393  00C7C0  0900               	iorlw	0
 35394  00C7C2  A4D8               	btfss	status,2,c
 35395  00C7C4  D005               	goto	l646
 35396  00C7C6  0E00               	movlw	0
 35397  00C7C8  0100               	movlb	0	; () banked
 35398  00C7CA  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2606+1)& (0+255),b
 35399  00C7CC  0E00               	movlw	0
 35400  00C7CE  D004               	goto	L49
 35401  00C7D0                     l646:
 35402                           
 35403                           ; BSR set to: 0
 35404  00C7D0  0E00               	movlw	0
 35405  00C7D2  0100               	movlb	0	; () banked
 35406  00C7D4  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2606+1)& (0+255),b
 35407  00C7D6  0E80               	movlw	128
 35408  00C7D8                     L49:
 35409  00C7D8  6F9B               	movwf	_MSDProcessCommandMediaPresent$2606& (0+255),b
 35410                           
 35411                           ; BSR set to: 0
 35412                           
 35413                           ; BSR set to: 0
 35414  00C7DA  EE26 F002          	lfsr	2,1538	;volatile
 35415  00C7DE  C09B  FFDF         	movff	_MSDProcessCommandMediaPresent$2606,indf2
 35416                           
 35417                           ; BSR set to: 0
 35418                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 35419  00C7E2  0E00               	movlw	0
 35420  00C7E4  CFE8 F603          	movff	wreg,1539	;volatile
 35421                           
 35422                           ; BSR set to: 0
 35423                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 35424  00C7E8  0E00               	movlw	0
 35425  00C7EA  0101               	movlb	1	; () banked
 35426  00C7EC  6F38               	movwf	(_TransferLength+1)& (0+255),b
 35427  00C7EE  0E04               	movlw	4
 35428  00C7F0  6F37               	movwf	_TransferLength& (0+255),b
 35429                           
 35430                           ; BSR set to: 1
 35431                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 35432  00C7F2  0E00               	movlw	0
 35433  00C7F4  0100               	movlb	0	; () banked
 35434  00C7F6  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 35435  00C7F8  0E04               	movlw	4
 35436  00C7FA  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 35437  00C7FC  EC06  F097         	call	_MSDComputeDeviceInAndResidue	;wreg free
 35438                           
 35439                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 35440  00C800  0EFD               	movlw	253
 35441  00C802  0101               	movlb	1	; () banked
 35442  00C804  6F55               	movwf	_MSDCommandState& (0+255),b
 35443                           
 35444                           ;usb_device_msd.c: 839: break;
 35445  00C806  0012               	return	
 35446  00C808                     
 35447                           ; BSR set to: 1
 35448                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 35449                           
 35450                           ; BSR set to: 1
 35451  00C808  0102               	movlb	2	; () banked
 35452  00C80A  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 35453  00C80C  0BF0               	andlw	-16
 35454  00C80E  0905               	iorlw	5
 35455  00C810  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 35456                           
 35457                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 35458  00C812  0E20               	movlw	32
 35459  00C814  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 35460                           
 35461                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 35462  00C816  0E00               	movlw	0
 35463  00C818  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 35464                           
 35465                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 35466  00C81A  0E01               	movlw	1
 35467  00C81C  010D               	movlb	13	; () banked
 35468  00C81E  6F8C               	movwf	140,b	;volatile
 35469                           
 35470                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 35471  00C820  0E00               	movlw	0
 35472  00C822  6F88               	movwf	136,b	;volatile
 35473  00C824  0E00               	movlw	0
 35474  00C826  6F89               	movwf	137,b	;volatile
 35475  00C828  0E00               	movlw	0
 35476  00C82A  6F8A               	movwf	138,b	;volatile
 35477  00C82C  0E00               	movlw	0
 35478  00C82E  6F8B               	movwf	139,b	;volatile
 35479                           
 35480                           ; BSR set to: 13
 35481                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 35482  00C830  0101               	movlb	1	; () banked
 35483  00C832  6955               	setf	_MSDCommandState& (0+255),b
 35484                           
 35485                           ;usb_device_msd.c: 848: break;
 35486  00C834  0012               	return	
 35487  00C836                     
 35488                           ; BSR set to: 1
 35489                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 35490                           
 35491                           ; BSR set to: 1
 35492  00C836  0E00               	movlw	0
 35493  00C838  0100               	movlb	0	; () banked
 35494  00C83A  6F6A               	movwf	MSDCheckForErrorCases@DeviceBytes& (0+255),b
 35495  00C83C  0E00               	movlw	0
 35496  00C83E  6F6B               	movwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),b
 35497  00C840  0E00               	movlw	0
 35498  00C842  6F6C               	movwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 35499  00C844  0E00               	movlw	0
 35500  00C846  6F6D               	movwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 35501  00C848  EC62  F087         	call	_MSDCheckForErrorCases	;wreg free
 35502  00C84C  0900               	iorlw	0
 35503  00C84E  A4D8               	btfss	status,2,c
 35504  00C850  0012               	return	
 35505                           
 35506                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 35507                           
 35508                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 35509  00C852  0102               	movlb	2	; () banked
 35510  00C854  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 35511  00C856  0B0F               	andlw	15
 35512  00C858  0A06               	xorlw	6
 35513  00C85A  A4D8               	btfss	status,2,c
 35514  00C85C  D007               	goto	l652
 35515                           
 35516                           ; BSR set to: 2
 35517  00C85E  010D               	movlb	13	; () banked
 35518  00C860  058C               	decf	140,w,b	;volatile
 35519  00C862  A4D8               	btfss	status,2,c
 35520  00C864  D003               	goto	l652
 35521                           
 35522                           ; BSR set to: 13
 35523                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 35524  00C866  0101               	movlb	1	; () banked
 35525  00C868  6955               	setf	_MSDCommandState& (0+255),b
 35526                           
 35527                           ;usb_device_msd.c: 870: }
 35528  00C86A  0012               	return	
 35529  00C86C                     l652:
 35530                           
 35531                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 35532                           
 35533                           ; BSR set to: 1
 35534  00C86C  EC0F  F0A4         	call	_ResetSenseData	;wreg free
 35535                           
 35536                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 35537  00C870  0E00               	movlw	0
 35538  00C872  010D               	movlb	13	; () banked
 35539  00C874  6F88               	movwf	136,b	;volatile
 35540  00C876  0E00               	movlw	0
 35541  00C878  6F89               	movwf	137,b	;volatile
 35542  00C87A  0E00               	movlw	0
 35543  00C87C  6F8A               	movwf	138,b	;volatile
 35544  00C87E  0E00               	movlw	0
 35545  00C880  6F8B               	movwf	139,b	;volatile
 35546                           
 35547                           ; BSR set to: 13
 35548                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 35549  00C882  0101               	movlb	1	; () banked
 35550  00C884  6955               	setf	_MSDCommandState& (0+255),b
 35551                           
 35552                           ; BSR set to: 1
 35553                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 35554  00C886  0012               	return	
 35555  00C888                     
 35556                           ; BSR set to: 1
 35557                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 35558                           
 35559                           ; BSR set to: 1
 35560                           
 35561                           ; BSR set to: 1
 35562  00C888  0E00               	movlw	0
 35563  00C88A  010D               	movlb	13	; () banked
 35564  00C88C  6F88               	movwf	136,b	;volatile
 35565  00C88E  0E00               	movlw	0
 35566  00C890  6F89               	movwf	137,b	;volatile
 35567  00C892  0E00               	movlw	0
 35568  00C894  6F8A               	movwf	138,b	;volatile
 35569  00C896  0E00               	movlw	0
 35570  00C898  6F8B               	movwf	139,b	;volatile
 35571                           
 35572                           ; BSR set to: 13
 35573                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 35574  00C89A  0101               	movlb	1	; () banked
 35575  00C89C  6955               	setf	_MSDCommandState& (0+255),b
 35576                           
 35577                           ;usb_device_msd.c: 885: break;
 35578  00C89E  0012               	return	
 35579  00C8A0                     
 35580                           ; BSR set to: 1
 35581                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 35582                           
 35583                           ; BSR set to: 1
 35584  00C8A0  513D               	movf	_USBMSDInHandle& (0+255),w,b
 35585  00C8A2  113E               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 35586  00C8A4  B4D8               	btfsc	status,2,c
 35587  00C8A6  D006               	goto	u12460
 35588                           
 35589                           ; BSR set to: 1
 35590  00C8A8  C13D  FFD9         	movff	_USBMSDInHandle,fsr2l
 35591  00C8AC  C13E  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 35592  00C8B0  BEDF               	btfsc	indf2,7,c
 35593  00C8B2  0012               	return	
 35594  00C8B4                     u12460:
 35595                           
 35596                           ; BSR set to: 1
 35597                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 35598                           
 35599                           ; BSR set to: 1
 35600  00C8B4  0102               	movlb	2	; () banked
 35601  00C8B6  510B               	movf	(_gblCBW+11)& (0+255),w,b
 35602  00C8B8  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 35603  00C8BA  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 35604  00C8BC  E104               	bnz	u12470
 35605  00C8BE  0E40               	movlw	64
 35606  00C8C0  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 35607  00C8C2  A0D8               	btfss	status,0,c
 35608  00C8C4  D00B               	goto	l660
 35609  00C8C6                     u12470:
 35610                           
 35611                           ; BSR set to: 2
 35612                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 35613  00C8C6  0E40               	movlw	64
 35614  00C8C8  0100               	movlb	0	; () banked
 35615  00C8CA  6F9D               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),b
 35616                           
 35617                           ; BSR set to: 0
 35618                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 35619  00C8CC  0E40               	movlw	64
 35620  00C8CE  0102               	movlb	2	; () banked
 35621  00C8D0  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 35622  00C8D2  0E00               	movlw	0
 35623  00C8D4  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 35624  00C8D6  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 35625  00C8D8  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 35626                           
 35627                           ;usb_device_msd.c: 900: }
 35628  00C8DA  D00A               	goto	l661
 35629  00C8DC                     l660:
 35630                           
 35631                           ; BSR set to: 2
 35632                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 35633  00C8DC  C208  F09D         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 35634                           
 35635                           ; BSR set to: 2
 35636                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 35637  00C8E0  0E00               	movlw	0
 35638  00C8E2  6F08               	movwf	(_gblCBW+8)& (0+255),b
 35639  00C8E4  0E00               	movlw	0
 35640  00C8E6  6F09               	movwf	(_gblCBW+9)& (0+255),b
 35641  00C8E8  0E00               	movlw	0
 35642  00C8EA  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 35643  00C8EC  0E00               	movlw	0
 35644  00C8EE  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 35645  00C8F0                     l661:
 35646                           
 35647                           ; BSR set to: 2
 35648                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 35649                           
 35650                           ; BSR set to: 2
 35651  00C8F0  0100               	movlb	0	; () banked
 35652  00C8F2  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 35653  00C8F4  6F99               	movwf	??_MSDProcessCommandMediaPresent& (0+255),b
 35654  00C8F6  6B9A               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),b
 35655  00C8F8  5199               	movf	??_MSDProcessCommandMediaPresent& (0+255),w,b
 35656  00C8FA  0101               	movlb	1	; () banked
 35657  00C8FC  5D37               	subwf	_TransferLength& (0+255),w,b
 35658  00C8FE  0100               	movlb	0	; () banked
 35659  00C900  519A               	movf	(??_MSDProcessCommandMediaPresent+1)& (0+255),w,b
 35660  00C902  0101               	movlb	1	; () banked
 35661  00C904  5938               	subwfb	(_TransferLength+1)& (0+255),w,b
 35662  00C906  A0D8               	btfss	status,0,c
 35663  00C908  D007               	goto	l662
 35664                           
 35665                           ; BSR set to: 1
 35666                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 35667  00C90A  0100               	movlb	0	; () banked
 35668  00C90C  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 35669  00C90E  0101               	movlb	1	; () banked
 35670  00C910  5F37               	subwf	_TransferLength& (0+255),f,b
 35671  00C912  0E00               	movlw	0
 35672  00C914  5B38               	subwfb	(_TransferLength+1)& (0+255),f,b
 35673                           
 35674                           ;usb_device_msd.c: 918: }
 35675  00C916  D01E               	goto	u12500
 35676  00C918                     l662:
 35677                           
 35678                           ; BSR set to: 1
 35679                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 35680                           
 35681                           ; BSR set to: 1
 35682  00C918  0E00               	movlw	0
 35683  00C91A  0100               	movlb	0	; () banked
 35684  00C91C  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 35685  00C91E  D016               	goto	l664
 35686  00C920                     
 35687                           ; BSR set to: 0
 35688                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 35689                           
 35690                           ; BSR set to: 0
 35691  00C920  0101               	movlb	1	; () banked
 35692  00C922  5137               	movf	_TransferLength& (0+255),w,b
 35693  00C924  1138               	iorwf	(_TransferLength+1)& (0+255),w,b
 35694  00C926  B4D8               	btfsc	status,2,c
 35695  00C928  D004               	goto	l666
 35696                           
 35697                           ; BSR set to: 1
 35698                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 35699  00C92A  0737               	decf	_TransferLength& (0+255),f,b
 35700  00C92C  A0D8               	btfss	status,0,c
 35701  00C92E  0738               	decf	(_TransferLength+1)& (0+255),f,b
 35702                           
 35703                           ;usb_device_msd.c: 932: }
 35704  00C930  D00B               	goto	l667
 35705  00C932                     l666:
 35706                           
 35707                           ; BSR set to: 1
 35708                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 35709                           
 35710                           ; BSR set to: 1
 35711  00C932  0100               	movlb	0	; () banked
 35712  00C934  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 35713  00C936  0D01               	mullw	1
 35714  00C938  0E00               	movlw	0
 35715  00C93A  24F3               	addwf	prodl,w,c
 35716  00C93C  6ED9               	movwf	fsr2l,c
 35717  00C93E  0E06               	movlw	6
 35718  00C940  20F4               	addwfc	prodh,w,c
 35719  00C942  6EDA               	movwf	fsr2h,c
 35720  00C944  0E00               	movlw	0
 35721  00C946  6EDF               	movwf	indf2,c
 35722  00C948                     l667:
 35723                           
 35724                           ; BSR set to: 0
 35725  00C948  0100               	movlb	0	; () banked
 35726  00C94A  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 35727  00C94C                     l664:
 35728                           
 35729                           ; BSR set to: 0
 35730                           
 35731                           ; BSR set to: 0
 35732  00C94C  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 35733  00C94E  5DA6               	subwf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 35734  00C950  A0D8               	btfss	status,0,c
 35735  00C952  D7E6               	goto	l665
 35736  00C954                     u12500:
 35737                           
 35738                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 35739                           
 35740                           ; BSR set to: 0
 35741                           
 35742                           ; BSR set to: 0
 35743  00C954  0E01               	movlw	1
 35744  00C956  0100               	movlb	0	; () banked
 35745  00C958  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 35746  00C95A  0E00               	movlw	0
 35747  00C95C  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 35748  00C95E  0E06               	movlw	6
 35749  00C960  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 35750  00C962  C09D  F063         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 35751  00C966  0E02               	movlw	2
 35752  00C968  EC07  F08A         	call	_USBTransferOnePacket
 35753  00C96C  C060  F13D         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 35754  00C970  C061  F13E         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 35755                           
 35756                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 35757  00C974  0102               	movlb	2	; () banked
 35758  00C976  5108               	movf	(_gblCBW+8)& (0+255),w,b
 35759  00C978  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 35760  00C97A  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 35761  00C97C  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 35762  00C97E  A4D8               	btfss	status,2,c
 35763  00C980  0012               	return	
 35764                           
 35765                           ; BSR set to: 2
 35766                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 35767  00C982  0101               	movlb	1	; () banked
 35768  00C984  6955               	setf	_MSDCommandState& (0+255),b
 35769                           
 35770                           ; BSR set to: 1
 35771                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 35772                           
 35773                           ; BSR set to: 1
 35774                           
 35775                           ;usb_device_msd.c: 949: break;
 35776  00C986  0012               	return	
 35777  00C988                     
 35778                           ; BSR set to: 1
 35779                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 35780                           
 35781                           ; BSR set to: 1
 35782                           
 35783                           ;usb_device_msd.c: 954: default:
 35784                           
 35785                           ; BSR set to: 1
 35786  00C988  0E7F               	movlw	127
 35787  00C98A  ECD5  F086         	call	_MSDErrorHandler
 35788                           
 35789                           ;usb_device_msd.c: 960: }
 35790                           
 35791                           ;usb_device_msd.c: 959: break;
 35792  00C98E  0012               	return	
 35793  00C990                     l630:
 35794  00C990  0101               	movlb	1	; () banked
 35795  00C992  5155               	movf	_MSDCommandState& (0+255),w,b
 35796                           
 35797                           ; Switch size 1, requested type "space"
 35798                           ; Number of cases is 12, Range of values is 0 to 254
 35799                           ; switch strategies available:
 35800                           ; Name         Instructions Cycles
 35801                           ; simple_byte           37    19 (average)
 35802                           ;	Chosen strategy is simple_byte
 35803  00C994  0A00               	xorlw	0	; case 0
 35804  00C996  B4D8               	btfsc	status,2,c
 35805  00C998  D74E               	goto	l650
 35806  00C99A  0A03               	xorlw	3	; case 3
 35807  00C99C  B4D8               	btfsc	status,2,c
 35808  00C99E  D6C9               	goto	l640
 35809  00C9A0  0A11               	xorlw	17	; case 18
 35810  00C9A2  B4D8               	btfsc	status,2,c
 35811  00C9A4  D634               	goto	l636
 35812  00C9A6  0A08               	xorlw	8	; case 26
 35813  00C9A8  B4D8               	btfsc	status,2,c
 35814  00C9AA  D6F2               	goto	l644
 35815  00C9AC  0A01               	xorlw	1	; case 27
 35816  00C9AE  B4D8               	btfsc	status,2,c
 35817  00C9B0  D76B               	goto	l654
 35818  00C9B2  0A05               	xorlw	5	; case 30
 35819  00C9B4  B4D8               	btfsc	status,2,c
 35820  00C9B6  D728               	goto	l649
 35821  00C9B8  0A3B               	xorlw	59	; case 37
 35822  00C9BA  B4D8               	btfsc	status,2,c
 35823  00C9BC  D657               	goto	l639
 35824  00C9BE  0A0D               	xorlw	13	; case 40
 35825  00C9C0  B4D8               	btfsc	status,2,c
 35826  00C9C2  D615               	goto	l631
 35827  00C9C4  0A02               	xorlw	2	; case 42
 35828  00C9C6  B4D8               	btfsc	status,2,c
 35829  00C9C8  D61A               	goto	l634
 35830  00C9CA  0A05               	xorlw	5	; case 47
 35831  00C9CC  B4D8               	btfsc	status,2,c
 35832  00C9CE  D75C               	goto	l654
 35833  00C9D0  0AD2               	xorlw	210	; case 253
 35834  00C9D2  B4D8               	btfsc	status,2,c
 35835  00C9D4  D765               	goto	l656
 35836  00C9D6  0A03               	xorlw	3	; case 254
 35837  00C9D8  D7D7               	goto	l670
 35838  00C9DA                     __end_of_MSDProcessCommandMediaPresent:
 35839                           	opt stack 0
 35840                           tosu	equ	0xFFF
 35841                           tosh	equ	0xFFE
 35842                           tosl	equ	0xFFD
 35843                           pclath	equ	0xFFA
 35844                           tblptru	equ	0xFF8
 35845                           tblptrh	equ	0xFF7
 35846                           tblptrl	equ	0xFF6
 35847                           tablat	equ	0xFF5
 35848                           prodh	equ	0xFF4
 35849                           prodl	equ	0xFF3
 35850                           intcon	equ	0xFF2
 35851                           postinc0	equ	0xFEE
 35852                           wreg	equ	0xFE8
 35853                           indf1	equ	0xFE7
 35854                           postinc1	equ	0xFE6
 35855                           postdec1	equ	0xFE5
 35856                           plusw1	equ	0xFE3
 35857                           fsr1h	equ	0xFE2
 35858                           fsr1l	equ	0xFE1
 35859                           indf2	equ	0xFDF
 35860                           postinc2	equ	0xFDE
 35861                           postdec2	equ	0xFDD
 35862                           plusw2	equ	0xFDB
 35863                           fsr2h	equ	0xFDA
 35864                           fsr2l	equ	0xFD9
 35865                           status	equ	0xFD8
 35866                           
 35867 ;; *************** function _MSDWriteHandler *****************
 35868 ;; Defined at:
 35869 ;;		line 1188 in file "usb_device_msd.c"
 35870 ;; Parameters:    Size  Location     Type
 35871 ;;		None
 35872 ;; Auto vars:     Size  Location     Type
 35873 ;;		None
 35874 ;; Return value:  Size  Location     Type
 35875 ;;                  1    wreg      unsigned char 
 35876 ;; Registers used:
 35877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 35878 ;; Tracked objects:
 35879 ;;		On entry : 0/0
 35880 ;;		On exit  : 0/0
 35881 ;;		Unchanged: 0/0
 35882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35885 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35886 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35887 ;;Total ram usage:        5 bytes
 35888 ;; Hardware stack levels used:    1
 35889 ;; Hardware stack levels required when called:   16
 35890 ;; This function calls:
 35891 ;;		_ExternalFlash_SectorWrite
 35892 ;;		_ExternalFlash_WriteProtectStateGet
 35893 ;;		_MSDCheckForErrorCases
 35894 ;;		_USBStallEndpoint
 35895 ;;		_USBTransferOnePacket
 35896 ;; This function is called by:
 35897 ;;		_MSDProcessCommandMediaPresent
 35898 ;; This function uses a non-reentrant model
 35899 ;;
 35900                           
 35901                           	psect	text137
 35902  00D068                     __ptext137:
 35903                           	opt stack 0
 35904  00D068                     _MSDWriteHandler:
 35905                           	opt stack 10
 35906                           
 35907                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 35908                           
 35909                           ;incstack = 0
 35910  00D068  D160               	goto	l700
 35911  00D06A                     l701:
 35912                           
 35913                           ; BSR set to: 1
 35914                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 35915  00D06A  C211  F120         	movff	_gblCBW+17,_LBA+3
 35916                           
 35917                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 35918  00D06E  C212  F11F         	movff	_gblCBW+18,_LBA+2
 35919                           
 35920                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 35921  00D072  C213  F11E         	movff	_gblCBW+19,_LBA+1
 35922                           
 35923                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 35924  00D076  C214  F11D         	movff	_gblCBW+20,_LBA
 35925                           
 35926                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 35927  00D07A  C216  F138         	movff	_gblCBW+22,_TransferLength+1
 35928                           
 35929                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 35930  00D07E  C217  F137         	movff	_gblCBW+23,_TransferLength
 35931                           
 35932                           ; BSR set to: 1
 35933                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 35934  00D082  5137               	movf	_TransferLength& (0+255),w,b
 35935  00D084  0100               	movlb	0	; () banked
 35936  00D086  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 35937  00D088  0101               	movlb	1	; () banked
 35938  00D08A  5138               	movf	(_TransferLength+1)& (0+255),w,b
 35939  00D08C  0100               	movlb	0	; () banked
 35940  00D08E  6F90               	movwf	(??_MSDWriteHandler+1)& (0+255),b
 35941  00D090  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 35942  00D092  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 35943  00D094  0E09               	movlw	9
 35944  00D096                     u11255:
 35945  00D096  90D8               	bcf	status,0,c
 35946  00D098  378F               	rlcf	??_MSDWriteHandler& (0+255),f,b
 35947  00D09A  3790               	rlcf	(??_MSDWriteHandler+1)& (0+255),f,b
 35948  00D09C  3791               	rlcf	(??_MSDWriteHandler+2)& (0+255),f,b
 35949  00D09E  3792               	rlcf	(??_MSDWriteHandler+3)& (0+255),f,b
 35950  00D0A0  2EE8               	decfsz	wreg,f,c
 35951  00D0A2  D7F9               	goto	u11255
 35952  00D0A4  C08F  F06A         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 35953  00D0A8  C090  F06B         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 35954  00D0AC  C091  F06C         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 35955  00D0B0  C092  F06D         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 35956  00D0B4  EC62  F087         	call	_MSDCheckForErrorCases	;wreg free
 35957  00D0B8  0900               	iorlw	0
 35958  00D0BA  A4D8               	btfss	status,2,c
 35959  00D0BC  D148               	goto	l703
 35960                           
 35961                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 35962                           
 35963                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 35964  00D0BE  C2AE  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 35965  00D0C2  C2AF  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 35966  00D0C6  EE22  F0A8         	lfsr	2,_LUN+15
 35967  00D0CA  D801               	call	u11278
 35968  00D0CC  D00A               	goto	u11279
 35969  00D0CE                     u11278:
 35970  00D0CE  0005               	push	
 35971  00D0D0  6EFA               	movwf	pclath,c
 35972  00D0D2  50DE               	movf	postinc2,w,c
 35973  00D0D4  6EFD               	movwf	tosl,c
 35974  00D0D6  50DE               	movf	postinc2,w,c
 35975  00D0D8  6EFE               	movwf	tosh,c
 35976  00D0DA  50DE               	movf	postinc2,w,c
 35977  00D0DC  6EFF               	movwf	tosu,c
 35978  00D0DE  50FA               	movf	pclath,w,c
 35979  00D0E0  0012               	return		;indir
 35980  00D0E2                     u11279:
 35981  00D0E2  0900               	iorlw	0
 35982  00D0E4  B4D8               	btfsc	status,2,c
 35983  00D0E6  D017               	goto	l704
 35984                           
 35985                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 35986  00D0E8  0E01               	movlw	1
 35987  00D0EA  010D               	movlb	13	; () banked
 35988  00D0EC  6F8C               	movwf	140,b	;volatile
 35989                           
 35990                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 35991  00D0EE  0102               	movlb	2	; () banked
 35992  00D0F0  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 35993  00D0F2  0BF0               	andlw	-16
 35994  00D0F4  0907               	iorlw	7
 35995  00D0F6  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 35996                           
 35997                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 35998  00D0F8  0E27               	movlw	39
 35999  00D0FA  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 36000                           
 36001                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 36002  00D0FC  0E00               	movlw	0
 36003  00D0FE  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 36004                           
 36005                           ; BSR set to: 2
 36006                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 36007  00D100  0E00               	movlw	0
 36008  00D102  0100               	movlb	0	; () banked
 36009  00D104  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 36010  00D106  0E02               	movlw	2
 36011  00D108  EC82  F089         	call	_USBStallEndpoint
 36012                           
 36013                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 36014  00D10C  0E00               	movlw	0
 36015  00D10E  0101               	movlb	1	; () banked
 36016  00D110  6F53               	movwf	_MSDWriteState& (0+255),b
 36017                           
 36018                           ; BSR set to: 1
 36019                           ;usb_device_msd.c: 1228: return MSDWriteState;
 36020  00D112  5153               	movf	_MSDWriteState& (0+255),w,b
 36021                           
 36022                           ; BSR set to: 1
 36023  00D114  0012               	return	
 36024  00D116                     l704:
 36025                           
 36026                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 36027                           
 36028                           ; BSR set to: 1
 36029  00D116  0E01               	movlw	1
 36030  00D118  0101               	movlb	1	; () banked
 36031  00D11A  6F56               	movwf	_MSD_State& (0+255),b
 36032  00D11C                     
 36033                           ; BSR set to: 1
 36034                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 36035                           
 36036                           ; BSR set to: 1
 36037  00D11C  5137               	movf	_TransferLength& (0+255),w,b
 36038  00D11E  1138               	iorwf	(_TransferLength+1)& (0+255),w,b
 36039  00D120  A4D8               	btfss	status,2,c
 36040  00D122  D002               	goto	l707
 36041                           
 36042                           ; BSR set to: 1
 36043                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 36044  00D124  0E00               	movlw	0
 36045  00D126  D0FF               	goto	L53
 36046  00D128                     l707:
 36047                           
 36048                           ; BSR set to: 1
 36049                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 36050                           
 36051                           ; BSR set to: 1
 36052  00D128  0E03               	movlw	3
 36053  00D12A  6F53               	movwf	_MSDWriteState& (0+255),b
 36054                           
 36055                           ; BSR set to: 1
 36056                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 36057  00D12C  0E00               	movlw	0
 36058  00D12E  6F41               	movwf	_ptrNextData& (0+255),b
 36059  00D130  0E06               	movlw	6
 36060  00D132  6F42               	movwf	(_ptrNextData+1)& (0+255),b
 36061                           
 36062                           ; BSR set to: 1
 36063                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 36064  00D134  0E00               	movlw	0
 36065  00D136  010D               	movlb	13	; () banked
 36066  00D138  6F88               	movwf	136,b	;volatile
 36067  00D13A  0E02               	movlw	2
 36068  00D13C  6F89               	movwf	137,b	;volatile
 36069  00D13E  0E00               	movlw	0
 36070  00D140  6F8A               	movwf	138,b	;volatile
 36071  00D142  0E00               	movlw	0
 36072  00D144  6F8B               	movwf	139,b	;volatile
 36073  00D146                     l708:
 36074                           
 36075                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 36076  00D146  010D               	movlb	13	; () banked
 36077  00D148  5188               	movf	136,w,b	;volatile
 36078  00D14A  1189               	iorwf	137,w,b	;volatile
 36079  00D14C  118A               	iorwf	138,w,b	;volatile
 36080  00D14E  118B               	iorwf	139,w,b	;volatile
 36081  00D150  B4D8               	btfsc	status,2,c
 36082  00D152  D01F               	goto	l709
 36083                           
 36084                           ; BSR set to: 13
 36085                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 36086  00D154  0101               	movlb	1	; () banked
 36087  00D156  513F               	movf	_USBMSDOutHandle& (0+255),w,b
 36088  00D158  1140               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 36089  00D15A  B4D8               	btfsc	status,2,c
 36090  00D15C  D006               	goto	l710
 36091                           
 36092                           ; BSR set to: 1
 36093  00D15E  C13F  FFD9         	movff	_USBMSDOutHandle,fsr2l
 36094  00D162  C140  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 36095  00D166  BEDF               	btfsc	indf2,7,c
 36096  00D168  D0F2               	goto	l703
 36097  00D16A                     l710:
 36098                           
 36099                           ; BSR set to: 1
 36100                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 36101                           
 36102                           ; BSR set to: 1
 36103  00D16A  0E00               	movlw	0
 36104  00D16C  0100               	movlb	0	; () banked
 36105  00D16E  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 36106  00D170  C141  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 36107  00D174  C142  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 36108  00D178  0E40               	movlw	64
 36109  00D17A  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 36110  00D17C  0E02               	movlw	2
 36111  00D17E  EC07  F08A         	call	_USBTransferOnePacket
 36112  00D182  C060  F13F         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 36113  00D186  C061  F140         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 36114                           
 36115                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 36116  00D18A  0E04               	movlw	4
 36117  00D18C  0101               	movlb	1	; () banked
 36118  00D18E  6F53               	movwf	_MSDWriteState& (0+255),b
 36119                           
 36120                           ;usb_device_msd.c: 1260: }
 36121  00D190  D023               	goto	l711
 36122  00D192                     l709:
 36123                           
 36124                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 36125                           
 36126                           ; BSR set to: 1
 36127  00D192  C2AE  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 36128  00D196  C2AF  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 36129  00D19A  EE22  F0A8         	lfsr	2,_LUN+15
 36130  00D19E  D801               	call	u11338
 36131  00D1A0  D00A               	goto	u11339
 36132  00D1A2                     u11338:
 36133  00D1A2  0005               	push	
 36134  00D1A4  6EFA               	movwf	pclath,c
 36135  00D1A6  50DE               	movf	postinc2,w,c
 36136  00D1A8  6EFD               	movwf	tosl,c
 36137  00D1AA  50DE               	movf	postinc2,w,c
 36138  00D1AC  6EFE               	movwf	tosh,c
 36139  00D1AE  50DE               	movf	postinc2,w,c
 36140  00D1B0  6EFF               	movwf	tosu,c
 36141  00D1B2  50FA               	movf	pclath,w,c
 36142  00D1B4  0012               	return		;indir
 36143  00D1B6                     u11339:
 36144  00D1B6  0900               	iorlw	0
 36145  00D1B8  B4D8               	btfsc	status,2,c
 36146  00D1BA  D00C               	goto	l712
 36147                           
 36148                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 36149  00D1BC  0E01               	movlw	1
 36150  00D1BE  010D               	movlb	13	; () banked
 36151  00D1C0  6F8C               	movwf	140,b	;volatile
 36152                           
 36153                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 36154  00D1C2  0102               	movlb	2	; () banked
 36155  00D1C4  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 36156  00D1C6  0BF0               	andlw	-16
 36157  00D1C8  0902               	iorlw	2
 36158  00D1CA  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 36159                           
 36160                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 36161  00D1CC  0E27               	movlw	39
 36162  00D1CE  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 36163                           
 36164                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 36165  00D1D0  0E00               	movlw	0
 36166  00D1D2  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 36167  00D1D4                     l712:
 36168                           
 36169                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 36170  00D1D4  0E02               	movlw	2
 36171  00D1D6  D0A6               	goto	L90
 36172  00D1D8                     l711:
 36173                           
 36174                           ; BSR set to: 1
 36175                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 36176                           
 36177                           ; BSR set to: 1
 36178                           
 36179                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 36180                           
 36181                           ; BSR set to: 1
 36182  00D1D8  513F               	movf	_USBMSDOutHandle& (0+255),w,b
 36183  00D1DA  1140               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 36184  00D1DC  B4D8               	btfsc	status,2,c
 36185  00D1DE  D006               	goto	l714
 36186                           
 36187                           ; BSR set to: 1
 36188  00D1E0  C13F  FFD9         	movff	_USBMSDOutHandle,fsr2l
 36189  00D1E4  C140  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 36190  00D1E8  BEDF               	btfsc	indf2,7,c
 36191  00D1EA  D0B1               	goto	l703
 36192  00D1EC                     l714:
 36193                           
 36194                           ; BSR set to: 1
 36195                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 36196                           
 36197                           ; BSR set to: 1
 36198  00D1EC  EE20 F001          	lfsr	2,1
 36199  00D1F0  513F               	movf	_USBMSDOutHandle& (0+255),w,b
 36200  00D1F2  26D9               	addwf	fsr2l,f,c
 36201  00D1F4  5140               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 36202  00D1F6  22DA               	addwfc	fsr2h,f,c
 36203  00D1F8  50DF               	movf	indf2,w,c
 36204  00D1FA  0100               	movlb	0	; () banked
 36205  00D1FC  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 36206  00D1FE  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 36207  00D202  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 36208  00D204  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 36209  00D206  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 36210  00D208  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 36211  00D20A  0102               	movlb	2	; () banked
 36212  00D20C  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 36213  00D20E  0100               	movlb	0	; () banked
 36214  00D210  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 36215  00D212  0102               	movlb	2	; () banked
 36216  00D214  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 36217  00D216  0100               	movlb	0	; () banked
 36218  00D218  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 36219  00D21A  0102               	movlb	2	; () banked
 36220  00D21C  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 36221  00D21E  0100               	movlb	0	; () banked
 36222  00D220  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 36223  00D222  0102               	movlb	2	; () banked
 36224  00D224  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 36225                           
 36226                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 36227  00D226  0101               	movlb	1	; () banked
 36228  00D228  EE20 F001          	lfsr	2,1
 36229  00D22C  513F               	movf	_USBMSDOutHandle& (0+255),w,b
 36230  00D22E  26D9               	addwf	fsr2l,f,c
 36231  00D230  5140               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 36232  00D232  22DA               	addwfc	fsr2h,f,c
 36233  00D234  50DF               	movf	indf2,w,c
 36234  00D236  0100               	movlb	0	; () banked
 36235  00D238  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 36236  00D23A  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 36237  00D23E  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 36238  00D240  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 36239  00D242  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 36240  00D244  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 36241  00D246  010D               	movlb	13	; () banked
 36242  00D248  5F88               	subwf	136,f,b	;volatile
 36243  00D24A  0100               	movlb	0	; () banked
 36244  00D24C  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 36245  00D24E  010D               	movlb	13	; () banked
 36246  00D250  5B89               	subwfb	137,f,b	;volatile
 36247  00D252  0100               	movlb	0	; () banked
 36248  00D254  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 36249  00D256  010D               	movlb	13	; () banked
 36250  00D258  5B8A               	subwfb	138,f,b	;volatile
 36251  00D25A  0100               	movlb	0	; () banked
 36252  00D25C  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 36253  00D25E  010D               	movlb	13	; () banked
 36254  00D260  5B8B               	subwfb	139,f,b	;volatile
 36255                           
 36256                           ; BSR set to: 13
 36257                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 36258  00D262  0E40               	movlw	64
 36259  00D264  0101               	movlb	1	; () banked
 36260  00D266  2741               	addwf	_ptrNextData& (0+255),f,b
 36261  00D268  0E00               	movlw	0
 36262  00D26A  2342               	addwfc	(_ptrNextData+1)& (0+255),f,b
 36263                           
 36264                           ; BSR set to: 1
 36265                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 36266  00D26C  0E03               	movlw	3
 36267  00D26E  D05B               	goto	L53
 36268  00D270                     
 36269                           ; BSR set to: 1
 36270                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 36271                           
 36272                           ; BSR set to: 1
 36273  00D270  010D               	movlb	13	; () banked
 36274  00D272  518C               	movf	140,w,b	;volatile
 36275  00D274  A4D8               	btfss	status,2,c
 36276  00D276  D040               	goto	l719
 36277                           
 36278                           ; BSR set to: 13
 36279                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 36280  00D278  C2AE  F084         	movff	_LUN+21,ExternalFlash_SectorWrite@config
 36281  00D27C  C2AF  F085         	movff	_LUN+22,ExternalFlash_SectorWrite@config+1
 36282  00D280  C11D  F086         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 36283  00D284  C11E  F087         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 36284  00D288  C11F  F088         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 36285  00D28C  C120  F089         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 36286  00D290  0E00               	movlw	0
 36287  00D292  0100               	movlb	0	; () banked
 36288  00D294  6F8A               	movwf	ExternalFlash_SectorWrite@buffer& (0+255),b
 36289  00D296  0E06               	movlw	6
 36290  00D298  6F8B               	movwf	(ExternalFlash_SectorWrite@buffer+1)& (0+255),b
 36291  00D29A  0101               	movlb	1	; () banked
 36292  00D29C  511D               	movf	_LBA& (0+255),w,b
 36293  00D29E  111E               	iorwf	(_LBA+1)& (0+255),w,b
 36294  00D2A0  111F               	iorwf	(_LBA+2)& (0+255),w,b
 36295  00D2A2  1120               	iorwf	(_LBA+3)& (0+255),w,b
 36296  00D2A4  A4D8               	btfss	status,2,c
 36297  00D2A6  D002               	goto	u11380
 36298  00D2A8  0E01               	movlw	1
 36299  00D2AA  D001               	goto	u11390
 36300  00D2AC                     u11380:
 36301  00D2AC  0E00               	movlw	0
 36302  00D2AE                     u11390:
 36303  00D2AE  0100               	movlb	0	; () banked
 36304  00D2B0  6F8C               	movwf	ExternalFlash_SectorWrite@allowWriteToZero& (0+255),b
 36305  00D2B2  EE22  F0AB         	lfsr	2,_LUN+18
 36306  00D2B6  D801               	call	u11408
 36307  00D2B8  D00A               	goto	u11409
 36308  00D2BA                     u11408:
 36309  00D2BA  0005               	push	
 36310  00D2BC  6EFA               	movwf	pclath,c
 36311  00D2BE  50DE               	movf	postinc2,w,c
 36312  00D2C0  6EFD               	movwf	tosl,c
 36313  00D2C2  50DE               	movf	postinc2,w,c
 36314  00D2C4  6EFE               	movwf	tosh,c
 36315  00D2C6  50DE               	movf	postinc2,w,c
 36316  00D2C8  6EFF               	movwf	tosu,c
 36317  00D2CA  50FA               	movf	pclath,w,c
 36318  00D2CC  0012               	return		;indir
 36319  00D2CE                     u11409:
 36320  00D2CE  06E8               	decf	wreg,f,c
 36321  00D2D0  B4D8               	btfsc	status,2,c
 36322  00D2D2  D012               	goto	l719
 36323                           
 36324                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 36325  00D2D4  0E64               	movlw	100
 36326  00D2D6  0101               	movlb	1	; () banked
 36327  00D2D8  6152               	cpfslt	_MSDRetryAttempt& (0+255),b
 36328  00D2DA  D002               	goto	l718
 36329                           
 36330                           ; BSR set to: 1
 36331                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 36332  00D2DC  2B52               	incf	_MSDRetryAttempt& (0+255),f,b
 36333                           
 36334                           ;usb_device_msd.c: 1314: break;
 36335  00D2DE  D037               	goto	l703
 36336  00D2E0                     l718:
 36337                           
 36338                           ; BSR set to: 1
 36339                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 36340                           
 36341                           ; BSR set to: 1
 36342  00D2E0  0E01               	movlw	1
 36343  00D2E2  010D               	movlb	13	; () banked
 36344  00D2E4  6F8C               	movwf	140,b	;volatile
 36345                           
 36346                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 36347  00D2E6  0102               	movlb	2	; () banked
 36348  00D2E8  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 36349  00D2EA  0BF0               	andlw	-16
 36350  00D2EC  0903               	iorlw	3
 36351  00D2EE  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 36352                           
 36353                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 36354  00D2F0  0E00               	movlw	0
 36355  00D2F2  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 36356                           
 36357                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 36358  00D2F4  0E00               	movlw	0
 36359  00D2F6  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 36360  00D2F8                     l719:
 36361                           
 36362                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 36363                           
 36364                           ; BSR set to: 2
 36365                           
 36366                           ; BSR set to: 2
 36367                           
 36368                           ; BSR set to: 2
 36369  00D2F8  0E01               	movlw	1
 36370  00D2FA  0101               	movlb	1	; () banked
 36371  00D2FC  271D               	addwf	_LBA& (0+255),f,b
 36372  00D2FE  0E00               	movlw	0
 36373  00D300  231E               	addwfc	(_LBA+1)& (0+255),f,b
 36374  00D302  231F               	addwfc	(_LBA+2)& (0+255),f,b
 36375  00D304  2320               	addwfc	(_LBA+3)& (0+255),f,b
 36376                           
 36377                           ; BSR set to: 1
 36378                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 36379  00D306  0737               	decf	_TransferLength& (0+255),f,b
 36380  00D308  A0D8               	btfss	status,0,c
 36381  00D30A  0738               	decf	(_TransferLength+1)& (0+255),f,b
 36382                           
 36383                           ; BSR set to: 1
 36384                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 36385  00D30C  0E01               	movlw	1
 36386  00D30E  D00B               	goto	L53
 36387  00D310                     
 36388                           ; BSR set to: 1
 36389                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 36390                           
 36391                           ; BSR set to: 1
 36392  00D310  0E02               	movlw	2
 36393  00D312  010D               	movlb	13	; () banked
 36394  00D314  6F8C               	movwf	140,b	;volatile
 36395                           
 36396                           ; BSR set to: 13
 36397                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 36398  00D316  0E00               	movlw	0
 36399  00D318  0100               	movlb	0	; () banked
 36400  00D31A  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 36401  00D31C  0E02               	movlw	2
 36402  00D31E  EC82  F089         	call	_USBStallEndpoint
 36403                           
 36404                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 36405  00D322  0E00               	movlw	0
 36406  00D324                     L90:
 36407  00D324  0101               	movlb	1	; () banked
 36408  00D326                     L53:
 36409  00D326  6F53               	movwf	_MSDWriteState& (0+255),b
 36410                           
 36411                           ; BSR set to: 1
 36412                           ;usb_device_msd.c: 1345: }
 36413                           
 36414                           ;usb_device_msd.c: 1344: break;
 36415  00D328  D012               	goto	l703
 36416  00D32A                     l700:
 36417                           
 36418                           ; BSR set to: 1
 36419  00D32A  0101               	movlb	1	; () banked
 36420  00D32C  5153               	movf	_MSDWriteState& (0+255),w,b
 36421                           
 36422                           ; Switch size 1, requested type "space"
 36423                           ; Number of cases is 5, Range of values is 0 to 4
 36424                           ; switch strategies available:
 36425                           ; Name         Instructions Cycles
 36426                           ; simple_byte           16     9 (average)
 36427                           ;	Chosen strategy is simple_byte
 36428  00D32E  0A00               	xorlw	0	; case 0
 36429  00D330  B4D8               	btfsc	status,2,c
 36430  00D332  D69B               	goto	l701
 36431  00D334  0A01               	xorlw	1	; case 1
 36432  00D336  B4D8               	btfsc	status,2,c
 36433  00D338  D6F1               	goto	l706
 36434  00D33A  0A03               	xorlw	3	; case 2
 36435  00D33C  B4D8               	btfsc	status,2,c
 36436  00D33E  D798               	goto	l715
 36437  00D340  0A01               	xorlw	1	; case 3
 36438  00D342  B4D8               	btfsc	status,2,c
 36439  00D344  D700               	goto	l708
 36440  00D346  0A07               	xorlw	7	; case 4
 36441  00D348  B4D8               	btfsc	status,2,c
 36442  00D34A  D746               	goto	l711
 36443  00D34C  D7E1               	goto	l720
 36444  00D34E                     l703:
 36445                           
 36446                           ;usb_device_msd.c: 1347: return MSDWriteState;
 36447                           
 36448                           ; BSR set to: 1
 36449  00D34E  0101               	movlb	1	; () banked
 36450  00D350  5153               	movf	_MSDWriteState& (0+255),w,b
 36451  00D352  0012               	return	
 36452  00D354                     __end_of_MSDWriteHandler:
 36453                           	opt stack 0
 36454                           tosu	equ	0xFFF
 36455                           tosh	equ	0xFFE
 36456                           tosl	equ	0xFFD
 36457                           pclath	equ	0xFFA
 36458                           tblptru	equ	0xFF8
 36459                           tblptrh	equ	0xFF7
 36460                           tblptrl	equ	0xFF6
 36461                           tablat	equ	0xFF5
 36462                           prodh	equ	0xFF4
 36463                           prodl	equ	0xFF3
 36464                           intcon	equ	0xFF2
 36465                           postinc0	equ	0xFEE
 36466                           wreg	equ	0xFE8
 36467                           indf1	equ	0xFE7
 36468                           postinc1	equ	0xFE6
 36469                           postdec1	equ	0xFE5
 36470                           plusw1	equ	0xFE3
 36471                           fsr1h	equ	0xFE2
 36472                           fsr1l	equ	0xFE1
 36473                           indf2	equ	0xFDF
 36474                           postinc2	equ	0xFDE
 36475                           postdec2	equ	0xFDD
 36476                           plusw2	equ	0xFDB
 36477                           fsr2h	equ	0xFDA
 36478                           fsr2l	equ	0xFD9
 36479                           status	equ	0xFD8
 36480                           
 36481 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 36482 ;; Defined at:
 36483 ;;		line 34 in file "external_flash.c"
 36484 ;; Parameters:    Size  Location     Type
 36485 ;;  config          2    0[BANK0 ] PTR void 
 36486 ;;		 -> NULL(0), 
 36487 ;; Auto vars:     Size  Location     Type
 36488 ;;		None
 36489 ;; Return value:  Size  Location     Type
 36490 ;;                  1    wreg      unsigned char 
 36491 ;; Registers used:
 36492 ;;		wreg
 36493 ;; Tracked objects:
 36494 ;;		On entry : 0/0
 36495 ;;		On exit  : 0/0
 36496 ;;		Unchanged: 0/0
 36497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36498 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36501 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36502 ;;Total ram usage:        2 bytes
 36503 ;; Hardware stack levels used:    1
 36504 ;; Hardware stack levels required when called:   10
 36505 ;; This function calls:
 36506 ;;		Nothing
 36507 ;; This function is called by:
 36508 ;;		_MSDWriteHandler
 36509 ;;		_MSDProcessCommandMediaPresent
 36510 ;; This function uses a non-reentrant model
 36511 ;;
 36512                           
 36513                           	psect	text138
 36514  015F84                     __ptext138:
 36515                           	opt stack 0
 36516  015F84                     _ExternalFlash_WriteProtectStateGet:
 36517                           	opt stack 15
 36518                           
 36519                           ;external_flash.c: 37: return 0;
 36520                           
 36521                           ; BSR set to: 1
 36522                           ;incstack = 0
 36523  015F84  0E00               	movlw	0
 36524  015F86  0012               	return	
 36525  015F88                     __end_of_ExternalFlash_WriteProtectStateGet:
 36526                           	opt stack 0
 36527                           tosu	equ	0xFFF
 36528                           tosh	equ	0xFFE
 36529                           tosl	equ	0xFFD
 36530                           pclath	equ	0xFFA
 36531                           tblptru	equ	0xFF8
 36532                           tblptrh	equ	0xFF7
 36533                           tblptrl	equ	0xFF6
 36534                           tablat	equ	0xFF5
 36535                           prodh	equ	0xFF4
 36536                           prodl	equ	0xFF3
 36537                           intcon	equ	0xFF2
 36538                           postinc0	equ	0xFEE
 36539                           wreg	equ	0xFE8
 36540                           indf1	equ	0xFE7
 36541                           postinc1	equ	0xFE6
 36542                           postdec1	equ	0xFE5
 36543                           plusw1	equ	0xFE3
 36544                           fsr1h	equ	0xFE2
 36545                           fsr1l	equ	0xFE1
 36546                           indf2	equ	0xFDF
 36547                           postinc2	equ	0xFDE
 36548                           postdec2	equ	0xFDD
 36549                           plusw2	equ	0xFDB
 36550                           fsr2h	equ	0xFDA
 36551                           fsr2l	equ	0xFD9
 36552                           status	equ	0xFD8
 36553                           
 36554 ;; *************** function _ExternalFlash_SectorWrite *****************
 36555 ;; Defined at:
 36556 ;;		line 56 in file "external_flash.c"
 36557 ;; Parameters:    Size  Location     Type
 36558 ;;  config          2   36[BANK0 ] PTR void 
 36559 ;;		 -> NULL(0), 
 36560 ;;  sector_addr     4   38[BANK0 ] unsigned long 
 36561 ;;  buffer          2   42[BANK0 ] PTR unsigned char 
 36562 ;;		 -> msd_buffer(512), 
 36563 ;;  allowWriteTo    1   44[BANK0 ] unsigned char 
 36564 ;; Auto vars:     Size  Location     Type
 36565 ;;  page            2   45[BANK0 ] unsigned int 
 36566 ;; Return value:  Size  Location     Type
 36567 ;;                  1    wreg      unsigned char 
 36568 ;; Registers used:
 36569 ;;		wreg, status,2, status,0, cstack
 36570 ;; Tracked objects:
 36571 ;;		On entry : 0/0
 36572 ;;		On exit  : 0/0
 36573 ;;		Unchanged: 0/0
 36574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36575 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36576 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36578 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36579 ;;Total ram usage:       11 bytes
 36580 ;; Hardware stack levels used:    1
 36581 ;; Hardware stack levels required when called:   15
 36582 ;; This function calls:
 36583 ;;		_flash_sector_write
 36584 ;; This function is called by:
 36585 ;;		_MSDWriteHandler
 36586 ;; This function uses a non-reentrant model
 36587 ;;
 36588                           
 36589                           	psect	text139
 36590  01585C                     __ptext139:
 36591                           	opt stack 0
 36592  01585C                     _ExternalFlash_SectorWrite:
 36593                           	opt stack 10
 36594                           
 36595                           ;external_flash.c: 58: uint16_t page = (uint16_t) sector_addr;
 36596                           
 36597                           ;incstack = 0
 36598  01585C  C086  F08D         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 36599  015860  C087  F08E         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 36600                           
 36601                           ;external_flash.c: 61: if(sector_addr >= 8192)
 36602  015864  0100               	movlb	0	; () banked
 36603  015866  5189               	movf	(ExternalFlash_SectorWrite@sector_addr+3)& (0+255),w,b
 36604  015868  1188               	iorwf	(ExternalFlash_SectorWrite@sector_addr+2)& (0+255),w,b
 36605  01586A  E104               	bnz	u10820
 36606  01586C  0E20               	movlw	32
 36607  01586E  5D87               	subwf	(ExternalFlash_SectorWrite@sector_addr+1)& (0+255),w,b
 36608  015870  A0D8               	btfss	status,0,c
 36609  015872  D002               	goto	l1700
 36610  015874                     u10820:
 36611                           
 36612                           ; BSR set to: 0
 36613                           ;external_flash.c: 62: {;external_flash.c: 63: return 0;
 36614  015874  0E00               	movlw	0
 36615                           
 36616                           ; BSR set to: 0
 36617  015876  0012               	return	
 36618  015878                     l1700:
 36619                           
 36620                           ; BSR set to: 0
 36621                           ;external_flash.c: 64: };external_flash.c: 67: flash_sector_write(page, buffer);
 36622                           
 36623                           ; BSR set to: 0
 36624  015878  C08D  F07F         	movff	ExternalFlash_SectorWrite@page,flash_sector_write@page
 36625  01587C  C08E  F080         	movff	ExternalFlash_SectorWrite@page+1,flash_sector_write@page+1
 36626  015880  C08A  F081         	movff	ExternalFlash_SectorWrite@buffer,flash_sector_write@data
 36627  015884  C08B  F082         	movff	ExternalFlash_SectorWrite@buffer+1,flash_sector_write@data+1
 36628  015888  EC0B  F0A9         	call	_flash_sector_write	;wreg free
 36629                           
 36630                           ;external_flash.c: 69: return 1;
 36631  01588C  0E01               	movlw	1
 36632  01588E  0012               	return	
 36633  015890                     __end_of_ExternalFlash_SectorWrite:
 36634                           	opt stack 0
 36635                           tosu	equ	0xFFF
 36636                           tosh	equ	0xFFE
 36637                           tosl	equ	0xFFD
 36638                           pclath	equ	0xFFA
 36639                           tblptru	equ	0xFF8
 36640                           tblptrh	equ	0xFF7
 36641                           tblptrl	equ	0xFF6
 36642                           tablat	equ	0xFF5
 36643                           prodh	equ	0xFF4
 36644                           prodl	equ	0xFF3
 36645                           intcon	equ	0xFF2
 36646                           postinc0	equ	0xFEE
 36647                           wreg	equ	0xFE8
 36648                           indf1	equ	0xFE7
 36649                           postinc1	equ	0xFE6
 36650                           postdec1	equ	0xFE5
 36651                           plusw1	equ	0xFE3
 36652                           fsr1h	equ	0xFE2
 36653                           fsr1l	equ	0xFE1
 36654                           indf2	equ	0xFDF
 36655                           postinc2	equ	0xFDE
 36656                           postdec2	equ	0xFDD
 36657                           plusw2	equ	0xFDB
 36658                           fsr2h	equ	0xFDA
 36659                           fsr2l	equ	0xFD9
 36660                           status	equ	0xFD8
 36661                           
 36662 ;; *************** function _flash_sector_write *****************
 36663 ;; Defined at:
 36664 ;;		line 434 in file "flash.c"
 36665 ;; Parameters:    Size  Location     Type
 36666 ;;  page            2   31[BANK0 ] unsigned int 
 36667 ;;  data            2   33[BANK0 ] PTR unsigned char 
 36668 ;;		 -> buffer(512), msd_buffer(512), 
 36669 ;; Auto vars:     Size  Location     Type
 36670 ;;  match           1   35[BANK0 ] enum E7062
 36671 ;; Return value:  Size  Location     Type
 36672 ;;                  1    wreg      void 
 36673 ;; Registers used:
 36674 ;;		wreg, status,2, status,0, cstack
 36675 ;; Tracked objects:
 36676 ;;		On entry : 0/0
 36677 ;;		On exit  : 0/0
 36678 ;;		Unchanged: 0/0
 36679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36680 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36681 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36683 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36684 ;;Total ram usage:        5 bytes
 36685 ;; Hardware stack levels used:    1
 36686 ;; Hardware stack levels required when called:   14
 36687 ;; This function calls:
 36688 ;;		__flash_compare_page_to_buffer
 36689 ;;		__flash_write_page_from_buffer
 36690 ;;		__flash_write_to_buffer
 36691 ;; This function is called by:
 36692 ;;		_ExternalFlash_SectorWrite
 36693 ;;		__make_cluster_chain
 36694 ;;		_fat_restore_mbr_fbr
 36695 ;;		_fat_format
 36696 ;; This function uses a non-reentrant model
 36697 ;;
 36698                           
 36699                           	psect	text140
 36700  015216                     __ptext140:
 36701                           	opt stack 0
 36702  015216                     _flash_sector_write:
 36703                           	opt stack 13
 36704                           
 36705                           ;flash.c: 436: flashMatchResult_t match;;flash.c: 439: _flash_write_to_buffer(0, data, 5
      +                          12, FLASH_BUFFER_1);
 36706                           
 36707                           ;incstack = 0
 36708  015216  0E00               	movlw	0
 36709  015218  0100               	movlb	0	; () banked
 36710  01521A  6F74               	movwf	(__flash_write_to_buffer@start+1)& (0+255),b
 36711  01521C  0E00               	movlw	0
 36712  01521E  6F73               	movwf	__flash_write_to_buffer@start& (0+255),b
 36713  015220  C081  F075         	movff	flash_sector_write@data,__flash_write_to_buffer@data
 36714  015224  C082  F076         	movff	flash_sector_write@data+1,__flash_write_to_buffer@data+1
 36715  015228  0E02               	movlw	2
 36716  01522A  6F78               	movwf	(__flash_write_to_buffer@data_length+1)& (0+255),b
 36717  01522C  0E00               	movlw	0
 36718  01522E  6F77               	movwf	__flash_write_to_buffer@data_length& (0+255),b
 36719  015230  0E00               	movlw	0
 36720  015232  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 36721  015234  EC42  F0A8         	call	__flash_write_to_buffer	;wreg free
 36722                           
 36723                           ;flash.c: 442: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 36724  015238  C07F  F073         	movff	flash_sector_write@page,__flash_compare_page_to_buffer@page
 36725  01523C  C080  F074         	movff	flash_sector_write@page+1,__flash_compare_page_to_buffer@page+1
 36726  015240  0E00               	movlw	0
 36727  015242  0100               	movlb	0	; () banked
 36728  015244  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 36729  015246  ECC8  F0A0         	call	__flash_compare_page_to_buffer	;wreg free
 36730  01524A  0100               	movlb	0	; () banked
 36731  01524C  6F83               	movwf	flash_sector_write@match& (0+255),b
 36732                           
 36733                           ; BSR set to: 0
 36734                           ;flash.c: 445: if(match==DATA_DOES_NOT_MATCH)
 36735  01524E  0583               	decf	flash_sector_write@match& (0+255),w,b
 36736  015250  A4D8               	btfss	status,2,c
 36737  015252  0012               	return	
 36738                           
 36739                           ; BSR set to: 0
 36740                           ;flash.c: 446: {;flash.c: 447: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 36741  015254  C07F  F073         	movff	flash_sector_write@page,__flash_write_page_from_buffer@page
 36742  015258  C080  F074         	movff	flash_sector_write@page+1,__flash_write_page_from_buffer@page+1
 36743  01525C  0E00               	movlw	0
 36744  01525E  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 36745  015260  ECE3  F0A5         	call	__flash_write_page_from_buffer	;wreg free
 36746  015264  0012               	return	
 36747  015266                     __end_of_flash_sector_write:
 36748                           	opt stack 0
 36749                           tosu	equ	0xFFF
 36750                           tosh	equ	0xFFE
 36751                           tosl	equ	0xFFD
 36752                           pclath	equ	0xFFA
 36753                           tblptru	equ	0xFF8
 36754                           tblptrh	equ	0xFF7
 36755                           tblptrl	equ	0xFF6
 36756                           tablat	equ	0xFF5
 36757                           prodh	equ	0xFF4
 36758                           prodl	equ	0xFF3
 36759                           intcon	equ	0xFF2
 36760                           postinc0	equ	0xFEE
 36761                           wreg	equ	0xFE8
 36762                           indf1	equ	0xFE7
 36763                           postinc1	equ	0xFE6
 36764                           postdec1	equ	0xFE5
 36765                           plusw1	equ	0xFE3
 36766                           fsr1h	equ	0xFE2
 36767                           fsr1l	equ	0xFE1
 36768                           indf2	equ	0xFDF
 36769                           postinc2	equ	0xFDE
 36770                           postdec2	equ	0xFDD
 36771                           plusw2	equ	0xFDB
 36772                           fsr2h	equ	0xFDA
 36773                           fsr2l	equ	0xFD9
 36774                           status	equ	0xFD8
 36775                           
 36776 ;; *************** function __flash_write_to_buffer *****************
 36777 ;; Defined at:
 36778 ;;		line 236 in file "flash.c"
 36779 ;; Parameters:    Size  Location     Type
 36780 ;;  start           2   19[BANK0 ] unsigned int 
 36781 ;;  data            2   21[BANK0 ] PTR unsigned char 
 36782 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 36783 ;;		 -> _delete_root@deleted_value(1), buffer(512), msd_buffer(512), 
 36784 ;;  data_length     2   23[BANK0 ] unsigned int 
 36785 ;;  buffer          1   25[BANK0 ] enum E7058
 36786 ;; Auto vars:     Size  Location     Type
 36787 ;;  command         4   26[BANK0 ] unsigned char [4]
 36788 ;; Return value:  Size  Location     Type
 36789 ;;                  1    wreg      void 
 36790 ;; Registers used:
 36791 ;;		wreg, status,2, status,0, cstack
 36792 ;; Tracked objects:
 36793 ;;		On entry : 0/0
 36794 ;;		On exit  : 0/0
 36795 ;;		Unchanged: 0/0
 36796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36797 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36798 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36800 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36801 ;;Total ram usage:       11 bytes
 36802 ;; Hardware stack levels used:    1
 36803 ;; Hardware stack levels required when called:   13
 36804 ;; This function calls:
 36805 ;;		__flash_is_busy
 36806 ;;		_spi_tx_tx
 36807 ;; This function is called by:
 36808 ;;		_flash_sector_write
 36809 ;;		_flash_partial_write
 36810 ;;		_flash_write_to_buffer
 36811 ;; This function uses a non-reentrant model
 36812 ;;
 36813                           
 36814                           	psect	text141
 36815  015084                     __ptext141:
 36816                           	opt stack 0
 36817  015084                     __flash_write_to_buffer:
 36818                           	opt stack 13
 36819                           
 36820                           ;flash.c: 238: uint8_t command[4];;flash.c: 241: while(_flash_is_busy());
 36821                           
 36822                           ;incstack = 0
 36823  015084  EC70  F0AE         	call	__flash_is_busy	;wreg free
 36824  015088  0900               	iorlw	0
 36825  01508A  A4D8               	btfss	status,2,c
 36826  01508C  D7FB               	goto	__flash_write_to_buffer
 36827                           
 36828                           ;flash.c: 244: if(buffer==FLASH_BUFFER_1)
 36829  01508E  0100               	movlb	0	; () banked
 36830  015090  5179               	movf	__flash_write_to_buffer@buffer& (0+255),w,b
 36831  015092  A4D8               	btfss	status,2,c
 36832  015094  D002               	goto	l1586
 36833                           
 36834                           ; BSR set to: 0
 36835                           ;flash.c: 245: command[0] = 0x84;
 36836  015096  0E84               	movlw	132
 36837  015098  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 36838  01509A                     l1586:
 36839                           
 36840                           ; BSR set to: 0
 36841                           ;flash.c: 246: if(buffer==FLASH_BUFFER_2)
 36842                           
 36843                           ; BSR set to: 0
 36844  01509A  0579               	decf	__flash_write_to_buffer@buffer& (0+255),w,b
 36845  01509C  A4D8               	btfss	status,2,c
 36846  01509E  D002               	goto	l1587
 36847                           
 36848                           ; BSR set to: 0
 36849                           ;flash.c: 247: command[0] = 0x87;
 36850  0150A0  0E87               	movlw	135
 36851  0150A2  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 36852  0150A4                     l1587:
 36853                           
 36854                           ; BSR set to: 0
 36855                           ;flash.c: 249: command[1] = 0x00;
 36856  0150A4  0E00               	movlw	0
 36857  0150A6  6F7B               	movwf	(__flash_write_to_buffer@command+1)& (0+255),b
 36858                           
 36859                           ;flash.c: 250: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 36860  0150A8  5174               	movf	(__flash_write_to_buffer@start+1)& (0+255),w,b
 36861  0150AA  6F7C               	movwf	(__flash_write_to_buffer@command+2)& (0+255),b
 36862                           
 36863                           ; BSR set to: 0
 36864                           ;flash.c: 251: command[3] = ((unsigned char)((start)&0xFF));
 36865  0150AC  C073  F07D         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 36866                           
 36867                           ; BSR set to: 0
 36868                           ;flash.c: 254: spi_tx_tx(command, 4, data, data_length);
 36869  0150B0  0E7A               	movlw	low __flash_write_to_buffer@command
 36870  0150B2  6F60               	movwf	spi_tx_tx@command& (0+255),b
 36871  0150B4  0E00               	movlw	high __flash_write_to_buffer@command
 36872  0150B6  6F61               	movwf	(spi_tx_tx@command+1)& (0+255),b
 36873  0150B8  0E00               	movlw	0
 36874  0150BA  6F63               	movwf	(spi_tx_tx@command_length+1)& (0+255),b
 36875  0150BC  0E04               	movlw	4
 36876  0150BE  6F62               	movwf	spi_tx_tx@command_length& (0+255),b
 36877  0150C0  C075  F064         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
 36878  0150C4  C076  F065         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
 36879  0150C8  C077  F066         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
 36880  0150CC  C078  F067         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
 36881  0150D0  EC6F  F09E         	call	_spi_tx_tx	;wreg free
 36882  0150D4  0012               	return		;funcret
 36883  0150D6                     __end_of__flash_write_to_buffer:
 36884                           	opt stack 0
 36885                           tosu	equ	0xFFF
 36886                           tosh	equ	0xFFE
 36887                           tosl	equ	0xFFD
 36888                           pclath	equ	0xFFA
 36889                           tblptru	equ	0xFF8
 36890                           tblptrh	equ	0xFF7
 36891                           tblptrl	equ	0xFF6
 36892                           tablat	equ	0xFF5
 36893                           prodh	equ	0xFF4
 36894                           prodl	equ	0xFF3
 36895                           intcon	equ	0xFF2
 36896                           postinc0	equ	0xFEE
 36897                           wreg	equ	0xFE8
 36898                           indf1	equ	0xFE7
 36899                           postinc1	equ	0xFE6
 36900                           postdec1	equ	0xFE5
 36901                           plusw1	equ	0xFE3
 36902                           fsr1h	equ	0xFE2
 36903                           fsr1l	equ	0xFE1
 36904                           indf2	equ	0xFDF
 36905                           postinc2	equ	0xFDE
 36906                           postdec2	equ	0xFDD
 36907                           plusw2	equ	0xFDB
 36908                           fsr2h	equ	0xFDA
 36909                           fsr2l	equ	0xFD9
 36910                           status	equ	0xFD8
 36911                           
 36912 ;; *************** function _spi_tx_tx *****************
 36913 ;; Defined at:
 36914 ;;		line 146 in file "spi.c"
 36915 ;; Parameters:    Size  Location     Type
 36916 ;;  command         2    0[BANK0 ] PTR unsigned char 
 36917 ;;		 -> _flash_write_to_buffer@command(4), 
 36918 ;;  command_leng    2    2[BANK0 ] unsigned int 
 36919 ;;  data            2    4[BANK0 ] PTR unsigned char 
 36920 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 36921 ;;		 -> _delete_root@deleted_value(1), buffer(512), msd_buffer(512), 
 36922 ;;  data_length     2    6[BANK0 ] unsigned int 
 36923 ;; Auto vars:     Size  Location     Type
 36924 ;;		None
 36925 ;; Return value:  Size  Location     Type
 36926 ;;                  1    wreg      void 
 36927 ;; Registers used:
 36928 ;;		wreg, status,2, status,0
 36929 ;; Tracked objects:
 36930 ;;		On entry : 0/0
 36931 ;;		On exit  : 0/0
 36932 ;;		Unchanged: 0/0
 36933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36934 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36936 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36937 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36938 ;;Total ram usage:       12 bytes
 36939 ;; Hardware stack levels used:    1
 36940 ;; Hardware stack levels required when called:   10
 36941 ;; This function calls:
 36942 ;;		Nothing
 36943 ;; This function is called by:
 36944 ;;		__flash_write_to_buffer
 36945 ;; This function uses a non-reentrant model
 36946 ;;
 36947                           
 36948                           	psect	text142
 36949  013CDE                     __ptext142:
 36950                           	opt stack 0
 36951  013CDE                     _spi_tx_tx:
 36952                           	opt stack 15
 36953                           
 36954                           ;spi.c: 149: DMACON1bits.SSCON1 = 0;
 36955                           
 36956                           ;incstack = 0
 36957  013CDE  9E88               	bcf	3976,7,c	;volatile
 36958                           
 36959                           ;spi.c: 150: DMACON1bits.SSCON0 = 0;
 36960  013CE0  9C88               	bcf	3976,6,c	;volatile
 36961                           
 36962                           ;spi.c: 152: DMACON1bits.TXINC = 1;
 36963  013CE2  8A88               	bsf	3976,5,c	;volatile
 36964                           
 36965                           ;spi.c: 154: DMACON1bits.RXINC = 0;
 36966  013CE4  9888               	bcf	3976,4,c	;volatile
 36967                           
 36968                           ;spi.c: 156: DMACON1bits.DUPLEX1 = 0;
 36969  013CE6  9688               	bcf	3976,3,c	;volatile
 36970                           
 36971                           ;spi.c: 157: DMACON1bits.DUPLEX0 = 1;
 36972  013CE8  8488               	bsf	3976,2,c	;volatile
 36973                           
 36974                           ;spi.c: 159: DMACON1bits.DLYINTEN = 0;
 36975  013CEA  9288               	bcf	3976,1,c	;volatile
 36976                           
 36977                           ;spi.c: 161: DMACON2bits.DLYCYC = 0b0000;
 36978  013CEC  9886               	bcf	3974,4,c	;volatile
 36979  013CEE  9A86               	bcf	3974,5,c	;volatile
 36980  013CF0  9C86               	bcf	3974,6,c	;volatile
 36981  013CF2  9E86               	bcf	3974,7,c	;volatile
 36982                           
 36983                           ;spi.c: 163: DMACON2bits.INTLVL = 0b0000;
 36984  013CF4  9086               	bcf	3974,0,c	;volatile
 36985  013CF6  9286               	bcf	3974,1,c	;volatile
 36986  013CF8  9486               	bcf	3974,2,c	;volatile
 36987  013CFA  9686               	bcf	3974,3,c	;volatile
 36988                           
 36989                           ;spi.c: 166: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 36990  013CFC  0100               	movlb	0	; () banked
 36991  013CFE  5161               	movf	(spi_tx_tx@command+1)& (0+255),w,b
 36992  013D00  6E6A               	movwf	3946,c	;volatile
 36993                           
 36994                           ; BSR set to: 0
 36995                           ;spi.c: 167: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 36996  013D02  C060  FF6B         	movff	spi_tx_tx@command,3947	;volatile
 36997                           
 36998                           ; BSR set to: 0
 36999                           ;spi.c: 170: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 37000  013D06  0EFF               	movlw	255
 37001  013D08  6F68               	movwf	??_spi_tx_tx& (0+255),b
 37002  013D0A  0EFF               	movlw	255
 37003  013D0C  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
 37004  013D0E  C062  F06A         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
 37005  013D12  C063  F06B         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
 37006  013D16  5168               	movf	??_spi_tx_tx& (0+255),w,b
 37007  013D18  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
 37008  013D1A  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
 37009  013D1C  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
 37010  013D1E  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 37011  013D22  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
 37012  013D24  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
 37013  013D26  6E66               	movwf	3942,c	;volatile
 37014                           
 37015                           ; BSR set to: 0
 37016                           ;spi.c: 171: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 37017  013D28  0562               	decf	spi_tx_tx@command_length& (0+255),w,b
 37018  013D2A  6E67               	movwf	3943,c	;volatile
 37019                           
 37020                           ; BSR set to: 0
 37021                           ;spi.c: 174: LATDbits.LD7 = 0;
 37022  013D2C  9E8C               	bcf	3980,7,c	;volatile
 37023                           
 37024                           ; BSR set to: 0
 37025                           ;spi.c: 177: DMACON1bits.DMAEN = 1;
 37026  013D2E  8088               	bsf	3976,0,c	;volatile
 37027  013D30                     
 37028                           ; BSR set to: 0
 37029  013D30  B088               	btfsc	3976,0,c	;volatile
 37030  013D32  D7FE               	goto	l2202
 37031                           
 37032                           ;spi.c: 181: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 37033  013D34  0100               	movlb	0	; () banked
 37034  013D36  5165               	movf	(spi_tx_tx@data+1)& (0+255),w,b
 37035  013D38  6E6A               	movwf	3946,c	;volatile
 37036                           
 37037                           ; BSR set to: 0
 37038                           ;spi.c: 182: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 37039  013D3A  C064  FF6B         	movff	spi_tx_tx@data,3947	;volatile
 37040                           
 37041                           ; BSR set to: 0
 37042                           ;spi.c: 185: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 37043  013D3E  0EFF               	movlw	255
 37044  013D40  6F68               	movwf	??_spi_tx_tx& (0+255),b
 37045  013D42  0EFF               	movlw	255
 37046  013D44  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
 37047  013D46  C066  F06A         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
 37048  013D4A  C067  F06B         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
 37049  013D4E  5168               	movf	??_spi_tx_tx& (0+255),w,b
 37050  013D50  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
 37051  013D52  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
 37052  013D54  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
 37053  013D56  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 37054  013D5A  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
 37055  013D5C  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
 37056  013D5E  6E66               	movwf	3942,c	;volatile
 37057                           
 37058                           ; BSR set to: 0
 37059                           ;spi.c: 186: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 37060  013D60  0566               	decf	spi_tx_tx@data_length& (0+255),w,b
 37061  013D62  6E67               	movwf	3943,c	;volatile
 37062                           
 37063                           ; BSR set to: 0
 37064                           ;spi.c: 189: DMACON1bits.DMAEN = 1;
 37065  013D64  8088               	bsf	3976,0,c	;volatile
 37066  013D66                     
 37067                           ; BSR set to: 0
 37068  013D66  B088               	btfsc	3976,0,c	;volatile
 37069  013D68  D7FE               	goto	l2205
 37070                           
 37071                           ;spi.c: 193: LATDbits.LD7 = 1;
 37072  013D6A  8E8C               	bsf	3980,7,c	;volatile
 37073  013D6C  0012               	return		;funcret
 37074  013D6E                     __end_of_spi_tx_tx:
 37075                           	opt stack 0
 37076                           tosu	equ	0xFFF
 37077                           tosh	equ	0xFFE
 37078                           tosl	equ	0xFFD
 37079                           pclath	equ	0xFFA
 37080                           tblptru	equ	0xFF8
 37081                           tblptrh	equ	0xFF7
 37082                           tblptrl	equ	0xFF6
 37083                           tablat	equ	0xFF5
 37084                           prodh	equ	0xFF4
 37085                           prodl	equ	0xFF3
 37086                           intcon	equ	0xFF2
 37087                           postinc0	equ	0xFEE
 37088                           wreg	equ	0xFE8
 37089                           indf1	equ	0xFE7
 37090                           postinc1	equ	0xFE6
 37091                           postdec1	equ	0xFE5
 37092                           plusw1	equ	0xFE3
 37093                           fsr1h	equ	0xFE2
 37094                           fsr1l	equ	0xFE1
 37095                           indf2	equ	0xFDF
 37096                           postinc2	equ	0xFDE
 37097                           postdec2	equ	0xFDD
 37098                           plusw2	equ	0xFDB
 37099                           fsr2h	equ	0xFDA
 37100                           fsr2l	equ	0xFD9
 37101                           status	equ	0xFD8
 37102                           
 37103 ;; *************** function __flash_write_page_from_buffer *****************
 37104 ;; Defined at:
 37105 ;;		line 258 in file "flash.c"
 37106 ;; Parameters:    Size  Location     Type
 37107 ;;  page            2   19[BANK0 ] unsigned int 
 37108 ;;  buffer          1   21[BANK0 ] enum E7058
 37109 ;; Auto vars:     Size  Location     Type
 37110 ;;  command         4   25[BANK0 ] unsigned char [4]
 37111 ;; Return value:  Size  Location     Type
 37112 ;;                  1    wreg      void 
 37113 ;; Registers used:
 37114 ;;		wreg, status,2, status,0, cstack
 37115 ;; Tracked objects:
 37116 ;;		On entry : 0/0
 37117 ;;		On exit  : 0/0
 37118 ;;		Unchanged: 0/0
 37119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37120 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37121 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37122 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37123 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37124 ;;Total ram usage:       10 bytes
 37125 ;; Hardware stack levels used:    1
 37126 ;; Hardware stack levels required when called:   13
 37127 ;; This function calls:
 37128 ;;		__flash_is_busy
 37129 ;;		_spi_tx
 37130 ;; This function is called by:
 37131 ;;		_flash_sector_write
 37132 ;;		_flash_partial_write
 37133 ;;		_flash_write_page_from_buffer
 37134 ;; This function uses a non-reentrant model
 37135 ;;
 37136                           
 37137                           	psect	text143
 37138  014BC6                     __ptext143:
 37139                           	opt stack 0
 37140  014BC6                     __flash_write_page_from_buffer:
 37141                           	opt stack 13
 37142                           
 37143                           ;flash.c: 260: uint8_t command[4];;flash.c: 263: while(_flash_is_busy());
 37144                           
 37145                           ;incstack = 0
 37146  014BC6  EC70  F0AE         	call	__flash_is_busy	;wreg free
 37147  014BCA  0900               	iorlw	0
 37148  014BCC  A4D8               	btfss	status,2,c
 37149  014BCE  D7FB               	goto	__flash_write_page_from_buffer
 37150                           
 37151                           ;flash.c: 266: if(buffer==FLASH_BUFFER_1)
 37152  014BD0  0100               	movlb	0	; () banked
 37153  014BD2  5175               	movf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 37154  014BD4  A4D8               	btfss	status,2,c
 37155  014BD6  D002               	goto	l1594
 37156                           
 37157                           ; BSR set to: 0
 37158                           ;flash.c: 267: command[0] = 0x83;
 37159  014BD8  0E83               	movlw	131
 37160  014BDA  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 37161  014BDC                     l1594:
 37162                           
 37163                           ; BSR set to: 0
 37164                           ;flash.c: 268: if(buffer==FLASH_BUFFER_2)
 37165                           
 37166                           ; BSR set to: 0
 37167  014BDC  0575               	decf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 37168  014BDE  A4D8               	btfss	status,2,c
 37169  014BE0  D002               	goto	l1595
 37170                           
 37171                           ; BSR set to: 0
 37172                           ;flash.c: 269: command[0] = 0x86;
 37173  014BE2  0E86               	movlw	134
 37174  014BE4  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 37175  014BE6                     l1595:
 37176                           
 37177                           ; BSR set to: 0
 37178                           ;flash.c: 271: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 37179                           
 37180                           ; BSR set to: 0
 37181  014BE6  C073  F076         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 37182  014BEA  C074  F077         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 37183  014BEE  0E07               	movlw	7
 37184  014BF0  6F78               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),b
 37185  014BF2                     u10215:
 37186  014BF2  90D8               	bcf	status,0,c
 37187  014BF4  3377               	rrcf	(??__flash_write_page_from_buffer+1)& (0+255),f,b
 37188  014BF6  3376               	rrcf	??__flash_write_page_from_buffer& (0+255),f,b
 37189  014BF8  2F78               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,b
 37190  014BFA  D7FB               	goto	u10215
 37191  014BFC  5176               	movf	??__flash_write_page_from_buffer& (0+255),w,b
 37192  014BFE  6F7A               	movwf	(__flash_write_page_from_buffer@command+1)& (0+255),b
 37193                           
 37194                           ; BSR set to: 0
 37195                           ;flash.c: 272: command[2] = ((unsigned char)((page<<1)&0xFF));
 37196  014C00  5173               	movf	__flash_write_page_from_buffer@page& (0+255),w,b
 37197  014C02  2573               	addwf	__flash_write_page_from_buffer@page& (0+255),w,b
 37198  014C04  6F7B               	movwf	(__flash_write_page_from_buffer@command+2)& (0+255),b
 37199                           
 37200                           ;flash.c: 273: command[3] = 0x00;
 37201  014C06  0E00               	movlw	0
 37202  014C08  6F7C               	movwf	(__flash_write_page_from_buffer@command+3)& (0+255),b
 37203                           
 37204                           ; BSR set to: 0
 37205                           ;flash.c: 276: spi_tx(command, 4);
 37206  014C0A  0E79               	movlw	low __flash_write_page_from_buffer@command
 37207  014C0C  6F60               	movwf	spi_tx@data& (0+255),b
 37208  014C0E  0E00               	movlw	high __flash_write_page_from_buffer@command
 37209  014C10  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 37210  014C12  0E00               	movlw	0
 37211  014C14  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 37212  014C16  0E04               	movlw	4
 37213  014C18  6F62               	movwf	spi_tx@length& (0+255),b
 37214  014C1A  EC10  F0A6         	call	_spi_tx	;wreg free
 37215  014C1E  0012               	return		;funcret
 37216  014C20                     __end_of__flash_write_page_from_buffer:
 37217                           	opt stack 0
 37218                           tosu	equ	0xFFF
 37219                           tosh	equ	0xFFE
 37220                           tosl	equ	0xFFD
 37221                           pclath	equ	0xFFA
 37222                           tblptru	equ	0xFF8
 37223                           tblptrh	equ	0xFF7
 37224                           tblptrl	equ	0xFF6
 37225                           tablat	equ	0xFF5
 37226                           prodh	equ	0xFF4
 37227                           prodl	equ	0xFF3
 37228                           intcon	equ	0xFF2
 37229                           postinc0	equ	0xFEE
 37230                           wreg	equ	0xFE8
 37231                           indf1	equ	0xFE7
 37232                           postinc1	equ	0xFE6
 37233                           postdec1	equ	0xFE5
 37234                           plusw1	equ	0xFE3
 37235                           fsr1h	equ	0xFE2
 37236                           fsr1l	equ	0xFE1
 37237                           indf2	equ	0xFDF
 37238                           postinc2	equ	0xFDE
 37239                           postdec2	equ	0xFDD
 37240                           plusw2	equ	0xFDB
 37241                           fsr2h	equ	0xFDA
 37242                           fsr2l	equ	0xFD9
 37243                           status	equ	0xFD8
 37244                           
 37245 ;; *************** function __flash_compare_page_to_buffer *****************
 37246 ;; Defined at:
 37247 ;;		line 176 in file "flash.c"
 37248 ;; Parameters:    Size  Location     Type
 37249 ;;  page            2   19[BANK0 ] unsigned int 
 37250 ;;  buffer          1   21[BANK0 ] enum E7058
 37251 ;; Auto vars:     Size  Location     Type
 37252 ;;  command         4   27[BANK0 ] unsigned char [4]
 37253 ;;  status          2   25[BANK0 ] unsigned int 
 37254 ;; Return value:  Size  Location     Type
 37255 ;;                  1    wreg      enum E7062
 37256 ;; Registers used:
 37257 ;;		wreg, status,2, status,0, cstack
 37258 ;; Tracked objects:
 37259 ;;		On entry : 0/0
 37260 ;;		On exit  : 0/0
 37261 ;;		Unchanged: 0/0
 37262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37263 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37264 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37265 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37266 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37267 ;;Total ram usage:       12 bytes
 37268 ;; Hardware stack levels used:    1
 37269 ;; Hardware stack levels required when called:   13
 37270 ;; This function calls:
 37271 ;;		__flash_get_status
 37272 ;;		__flash_is_busy
 37273 ;;		_spi_tx
 37274 ;; This function is called by:
 37275 ;;		_flash_sector_write
 37276 ;;		_flash_partial_write
 37277 ;; This function uses a non-reentrant model
 37278 ;;
 37279                           
 37280                           	psect	text144
 37281  014190                     __ptext144:
 37282                           	opt stack 0
 37283  014190                     __flash_compare_page_to_buffer:
 37284                           	opt stack 13
 37285                           
 37286                           ;flash.c: 178: uint8_t command[4];;flash.c: 179: uint16_t status;;flash.c: 182: while(_f
      +                          lash_is_busy());
 37287                           
 37288                           ;incstack = 0
 37289  014190  EC70  F0AE         	call	__flash_is_busy	;wreg free
 37290  014194  0900               	iorlw	0
 37291  014196  A4D8               	btfss	status,2,c
 37292  014198  D7FB               	goto	__flash_compare_page_to_buffer
 37293                           
 37294                           ;flash.c: 185: if(buffer==FLASH_BUFFER_1)
 37295  01419A  0100               	movlb	0	; () banked
 37296  01419C  5175               	movf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 37297  01419E  A4D8               	btfss	status,2,c
 37298  0141A0  D002               	goto	l1567
 37299                           
 37300                           ; BSR set to: 0
 37301                           ;flash.c: 186: command[0] = 0x60;
 37302  0141A2  0E60               	movlw	96
 37303  0141A4  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 37304  0141A6                     l1567:
 37305                           
 37306                           ; BSR set to: 0
 37307                           ;flash.c: 187: if(buffer==FLASH_BUFFER_2)
 37308                           
 37309                           ; BSR set to: 0
 37310  0141A6  0575               	decf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 37311  0141A8  A4D8               	btfss	status,2,c
 37312  0141AA  D002               	goto	l1568
 37313                           
 37314                           ; BSR set to: 0
 37315                           ;flash.c: 188: command[0] = 0x60;
 37316  0141AC  0E60               	movlw	96
 37317  0141AE  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 37318  0141B0                     l1568:
 37319                           
 37320                           ; BSR set to: 0
 37321                           ;flash.c: 190: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 37322                           
 37323                           ; BSR set to: 0
 37324  0141B0  C073  F076         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 37325  0141B4  C074  F077         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 37326  0141B8  0E07               	movlw	7
 37327  0141BA  6F78               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),b
 37328  0141BC                     u10125:
 37329  0141BC  90D8               	bcf	status,0,c
 37330  0141BE  3377               	rrcf	(??__flash_compare_page_to_buffer+1)& (0+255),f,b
 37331  0141C0  3376               	rrcf	??__flash_compare_page_to_buffer& (0+255),f,b
 37332  0141C2  2F78               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,b
 37333  0141C4  D7FB               	goto	u10125
 37334  0141C6  5176               	movf	??__flash_compare_page_to_buffer& (0+255),w,b
 37335  0141C8  6F7C               	movwf	(__flash_compare_page_to_buffer@command+1)& (0+255),b
 37336                           
 37337                           ; BSR set to: 0
 37338                           ;flash.c: 191: command[2] = ((unsigned char)((page<<1)&0xFF));
 37339  0141CA  5173               	movf	__flash_compare_page_to_buffer@page& (0+255),w,b
 37340  0141CC  2573               	addwf	__flash_compare_page_to_buffer@page& (0+255),w,b
 37341  0141CE  6F7D               	movwf	(__flash_compare_page_to_buffer@command+2)& (0+255),b
 37342                           
 37343                           ;flash.c: 192: command[3] = 0x00;
 37344  0141D0  0E00               	movlw	0
 37345  0141D2  6F7E               	movwf	(__flash_compare_page_to_buffer@command+3)& (0+255),b
 37346                           
 37347                           ; BSR set to: 0
 37348                           ;flash.c: 195: spi_tx(command, 4);
 37349  0141D4  0E7B               	movlw	low __flash_compare_page_to_buffer@command
 37350  0141D6  6F60               	movwf	spi_tx@data& (0+255),b
 37351  0141D8  0E00               	movlw	high __flash_compare_page_to_buffer@command
 37352  0141DA  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 37353  0141DC  0E00               	movlw	0
 37354  0141DE  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 37355  0141E0  0E04               	movlw	4
 37356  0141E2  6F62               	movwf	spi_tx@length& (0+255),b
 37357  0141E4  EC10  F0A6         	call	_spi_tx	;wreg free
 37358  0141E8  EC70  F0AE         	call	__flash_is_busy	;wreg free
 37359  0141EC  0900               	iorlw	0
 37360  0141EE  A4D8               	btfss	status,2,c
 37361  0141F0  D7FB               	goto	l1570
 37362                           
 37363                           ;flash.c: 201: status = _flash_get_status();
 37364  0141F2  EC62  F0AC         	call	__flash_get_status	;wreg free
 37365  0141F6  C06C  F079         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 37366  0141FA  C06D  F07A         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 37367                           
 37368                           ;flash.c: 204: if(status & 0b0000000001000000)
 37369  0141FE  0100               	movlb	0	; () banked
 37370  014200  AD79               	btfss	__flash_compare_page_to_buffer@status& (0+255),6,b
 37371  014202  D002               	goto	l1572
 37372                           
 37373                           ; BSR set to: 0
 37374                           ;flash.c: 205: {;flash.c: 207: return DATA_DOES_NOT_MATCH;
 37375  014204  0E01               	movlw	1
 37376                           
 37377                           ; BSR set to: 0
 37378                           ;flash.c: 208: }
 37379                           
 37380                           ; BSR set to: 0
 37381  014206  0012               	return	
 37382  014208                     l1572:
 37383                           
 37384                           ; BSR set to: 0
 37385                           ;flash.c: 209: else;flash.c: 210: {;flash.c: 212: return DATA_DOES_MATCH;
 37386                           
 37387                           ; BSR set to: 0
 37388  014208  0E00               	movlw	0
 37389                           
 37390                           ; BSR set to: 0
 37391  01420A  0012               	return	
 37392  01420C                     __end_of__flash_compare_page_to_buffer:
 37393                           	opt stack 0
 37394                           tosu	equ	0xFFF
 37395                           tosh	equ	0xFFE
 37396                           tosl	equ	0xFFD
 37397                           pclath	equ	0xFFA
 37398                           tblptru	equ	0xFF8
 37399                           tblptrh	equ	0xFF7
 37400                           tblptrl	equ	0xFF6
 37401                           tablat	equ	0xFF5
 37402                           prodh	equ	0xFF4
 37403                           prodl	equ	0xFF3
 37404                           intcon	equ	0xFF2
 37405                           postinc0	equ	0xFEE
 37406                           wreg	equ	0xFE8
 37407                           indf1	equ	0xFE7
 37408                           postinc1	equ	0xFE6
 37409                           postdec1	equ	0xFE5
 37410                           plusw1	equ	0xFE3
 37411                           fsr1h	equ	0xFE2
 37412                           fsr1l	equ	0xFE1
 37413                           indf2	equ	0xFDF
 37414                           postinc2	equ	0xFDE
 37415                           postdec2	equ	0xFDD
 37416                           plusw2	equ	0xFDB
 37417                           fsr2h	equ	0xFDA
 37418                           fsr2l	equ	0xFD9
 37419                           status	equ	0xFD8
 37420                           
 37421 ;; *************** function _MSDReadHandler *****************
 37422 ;; Defined at:
 37423 ;;		line 1038 in file "usb_device_msd.c"
 37424 ;; Parameters:    Size  Location     Type
 37425 ;;		None
 37426 ;; Auto vars:     Size  Location     Type
 37427 ;;		None
 37428 ;; Return value:  Size  Location     Type
 37429 ;;                  1    wreg      unsigned char 
 37430 ;; Registers used:
 37431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 37432 ;; Tracked objects:
 37433 ;;		On entry : 0/0
 37434 ;;		On exit  : 0/0
 37435 ;;		Unchanged: 0/0
 37436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37439 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37440 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37441 ;;Total ram usage:        4 bytes
 37442 ;; Hardware stack levels used:    1
 37443 ;; Hardware stack levels required when called:   16
 37444 ;; This function calls:
 37445 ;;		_ExternalFlash_SectorRead
 37446 ;;		_MSDCheckForErrorCases
 37447 ;;		_USBStallEndpoint
 37448 ;;		_USBTransferOnePacket
 37449 ;; This function is called by:
 37450 ;;		_MSDProcessCommandMediaPresent
 37451 ;; This function uses a non-reentrant model
 37452 ;;
 37453                           
 37454                           	psect	text145
 37455  00E8DC                     __ptext145:
 37456                           	opt stack 0
 37457  00E8DC                     _MSDReadHandler:
 37458                           	opt stack 10
 37459                           
 37460                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 37461                           
 37462                           ; BSR set to: 0
 37463                           ;incstack = 0
 37464  00E8DC  D0DF               	goto	l681
 37465  00E8DE                     l682:
 37466                           
 37467                           ; BSR set to: 1
 37468                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 37469  00E8DE  C211  F120         	movff	_gblCBW+17,_LBA+3
 37470                           
 37471                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 37472  00E8E2  C212  F11F         	movff	_gblCBW+18,_LBA+2
 37473                           
 37474                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 37475  00E8E6  C213  F11E         	movff	_gblCBW+19,_LBA+1
 37476                           
 37477                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 37478  00E8EA  C214  F11D         	movff	_gblCBW+20,_LBA
 37479                           
 37480                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 37481  00E8EE  C216  F138         	movff	_gblCBW+22,_TransferLength+1
 37482                           
 37483                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 37484  00E8F2  C217  F137         	movff	_gblCBW+23,_TransferLength
 37485                           
 37486                           ; BSR set to: 1
 37487                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 37488  00E8F6  5137               	movf	_TransferLength& (0+255),w,b
 37489  00E8F8  0100               	movlb	0	; () banked
 37490  00E8FA  6F95               	movwf	??_MSDReadHandler& (0+255),b
 37491  00E8FC  0101               	movlb	1	; () banked
 37492  00E8FE  5138               	movf	(_TransferLength+1)& (0+255),w,b
 37493  00E900  0100               	movlb	0	; () banked
 37494  00E902  6F96               	movwf	(??_MSDReadHandler+1)& (0+255),b
 37495  00E904  6B97               	clrf	(??_MSDReadHandler+2)& (0+255),b
 37496  00E906  6B98               	clrf	(??_MSDReadHandler+3)& (0+255),b
 37497  00E908  0E09               	movlw	9
 37498  00E90A                     u11145:
 37499  00E90A  90D8               	bcf	status,0,c
 37500  00E90C  3795               	rlcf	??_MSDReadHandler& (0+255),f,b
 37501  00E90E  3796               	rlcf	(??_MSDReadHandler+1)& (0+255),f,b
 37502  00E910  3797               	rlcf	(??_MSDReadHandler+2)& (0+255),f,b
 37503  00E912  3798               	rlcf	(??_MSDReadHandler+3)& (0+255),f,b
 37504  00E914  2EE8               	decfsz	wreg,f,c
 37505  00E916  D7F9               	goto	u11145
 37506  00E918  C095  F06A         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 37507  00E91C  C096  F06B         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 37508  00E920  C097  F06C         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 37509  00E924  C098  F06D         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 37510  00E928  EC62  F087         	call	_MSDCheckForErrorCases	;wreg free
 37511  00E92C  0900               	iorlw	0
 37512  00E92E  A4D8               	btfss	status,2,c
 37513  00E930  D0C7               	goto	l684
 37514                           
 37515                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 37516                           
 37517                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 37518  00E932  0E01               	movlw	1
 37519  00E934  0101               	movlb	1	; () banked
 37520  00E936  6F54               	movwf	_MSDReadState& (0+255),b
 37521  00E938                     
 37522                           ; BSR set to: 1
 37523                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 37524                           
 37525                           ; BSR set to: 1
 37526  00E938  5137               	movf	_TransferLength& (0+255),w,b
 37527  00E93A  1138               	iorwf	(_TransferLength+1)& (0+255),w,b
 37528  00E93C  A4D8               	btfss	status,2,c
 37529  00E93E  D002               	goto	l686
 37530                           
 37531                           ; BSR set to: 1
 37532                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 37533  00E940  0E00               	movlw	0
 37534  00E942  D04A               	goto	L54
 37535  00E944                     l686:
 37536                           
 37537                           ; BSR set to: 1
 37538                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 37539                           
 37540                           ; BSR set to: 1
 37541  00E944  0737               	decf	_TransferLength& (0+255),f,b
 37542  00E946  A0D8               	btfss	status,0,c
 37543  00E948  0738               	decf	(_TransferLength+1)& (0+255),f,b
 37544                           
 37545                           ; BSR set to: 1
 37546                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 37547  00E94A  0E02               	movlw	2
 37548  00E94C  6F54               	movwf	_MSDReadState& (0+255),b
 37549  00E94E                     
 37550                           ; BSR set to: 1
 37551                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 37552                           
 37553                           ; BSR set to: 1
 37554  00E94E  513D               	movf	_USBMSDInHandle& (0+255),w,b
 37555  00E950  113E               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 37556  00E952  B4D8               	btfsc	status,2,c
 37557  00E954  D006               	goto	l688
 37558                           
 37559                           ; BSR set to: 1
 37560  00E956  C13D  FFD9         	movff	_USBMSDInHandle,fsr2l
 37561  00E95A  C13E  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 37562  00E95E  BEDF               	btfsc	indf2,7,c
 37563  00E960  D0AF               	goto	l684
 37564  00E962                     l688:
 37565                           
 37566                           ; BSR set to: 1
 37567                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 37568                           
 37569                           ; BSR set to: 1
 37570  00E962  C2AE  F08B         	movff	_LUN+21,ExternalFlash_SectorRead@config
 37571  00E966  C2AF  F08C         	movff	_LUN+22,ExternalFlash_SectorRead@config+1
 37572  00E96A  C11D  F08D         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 37573  00E96E  C11E  F08E         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 37574  00E972  C11F  F08F         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 37575  00E976  C120  F090         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 37576  00E97A  0E00               	movlw	0
 37577  00E97C  0100               	movlb	0	; () banked
 37578  00E97E  6F91               	movwf	ExternalFlash_SectorRead@buffer& (0+255),b
 37579  00E980  0E06               	movlw	6
 37580  00E982  6F92               	movwf	(ExternalFlash_SectorRead@buffer+1)& (0+255),b
 37581  00E984  EE22  F0A5         	lfsr	2,_LUN+12
 37582  00E988  D801               	call	u11198
 37583  00E98A  D00A               	goto	u11199
 37584  00E98C                     u11198:
 37585  00E98C  0005               	push	
 37586  00E98E  6EFA               	movwf	pclath,c
 37587  00E990  50DE               	movf	postinc2,w,c
 37588  00E992  6EFD               	movwf	tosl,c
 37589  00E994  50DE               	movf	postinc2,w,c
 37590  00E996  6EFE               	movwf	tosh,c
 37591  00E998  50DE               	movf	postinc2,w,c
 37592  00E99A  6EFF               	movwf	tosu,c
 37593  00E99C  50FA               	movf	pclath,w,c
 37594  00E99E  0012               	return		;indir
 37595  00E9A0                     u11199:
 37596  00E9A0  06E8               	decf	wreg,f,c
 37597  00E9A2  B4D8               	btfsc	status,2,c
 37598  00E9A4  D01B               	goto	l691
 37599                           
 37600                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 37601  00E9A6  0E64               	movlw	100
 37602  00E9A8  0101               	movlb	1	; () banked
 37603  00E9AA  6152               	cpfslt	_MSDRetryAttempt& (0+255),b
 37604  00E9AC  D002               	goto	l690
 37605                           
 37606                           ; BSR set to: 1
 37607                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 37608  00E9AE  2B52               	incf	_MSDRetryAttempt& (0+255),f,b
 37609                           
 37610                           ;usb_device_msd.c: 1088: break;
 37611  00E9B0  D087               	goto	l684
 37612  00E9B2                     l690:
 37613                           
 37614                           ; BSR set to: 1
 37615                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 37616                           
 37617                           ; BSR set to: 1
 37618  00E9B2  0E02               	movlw	2
 37619  00E9B4  010D               	movlb	13	; () banked
 37620  00E9B6  6F8C               	movwf	140,b	;volatile
 37621                           
 37622                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 37623  00E9B8  0102               	movlb	2	; () banked
 37624  00E9BA  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 37625  00E9BC  0BF0               	andlw	-16
 37626  00E9BE  0903               	iorlw	3
 37627  00E9C0  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 37628                           
 37629                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 37630  00E9C2  0E00               	movlw	0
 37631  00E9C4  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 37632                           
 37633                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 37634  00E9C6  0E00               	movlw	0
 37635  00E9C8  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 37636                           
 37637                           ; BSR set to: 2
 37638                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 37639  00E9CA  0E01               	movlw	1
 37640  00E9CC  0100               	movlb	0	; () banked
 37641  00E9CE  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 37642  00E9D0  0E02               	movlw	2
 37643  00E9D2  EC82  F089         	call	_USBStallEndpoint
 37644  00E9D6  D05F               	goto	l13116
 37645  00E9D8                     L54:
 37646  00E9D8  6F54               	movwf	_MSDReadState& (0+255),b
 37647                           
 37648                           ;usb_device_msd.c: 1109: break;
 37649  00E9DA  D072               	goto	l684
 37650  00E9DC                     l691:
 37651                           
 37652                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 37653                           
 37654                           ; BSR set to: 1
 37655                           
 37656                           ; BSR set to: 1
 37657  00E9DC  0E01               	movlw	1
 37658  00E9DE  0101               	movlb	1	; () banked
 37659  00E9E0  271D               	addwf	_LBA& (0+255),f,b
 37660  00E9E2  0E00               	movlw	0
 37661  00E9E4  231E               	addwfc	(_LBA+1)& (0+255),f,b
 37662  00E9E6  231F               	addwfc	(_LBA+2)& (0+255),f,b
 37663  00E9E8  2320               	addwfc	(_LBA+3)& (0+255),f,b
 37664                           
 37665                           ; BSR set to: 1
 37666                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 37667  00E9EA  0E00               	movlw	0
 37668  00E9EC  010D               	movlb	13	; () banked
 37669  00E9EE  6F88               	movwf	136,b	;volatile
 37670  00E9F0  0E02               	movlw	2
 37671  00E9F2  6F89               	movwf	137,b	;volatile
 37672  00E9F4  0E00               	movlw	0
 37673  00E9F6  6F8A               	movwf	138,b	;volatile
 37674  00E9F8  0E00               	movlw	0
 37675  00E9FA  6F8B               	movwf	139,b	;volatile
 37676                           
 37677                           ; BSR set to: 13
 37678                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 37679  00E9FC  0E00               	movlw	0
 37680  00E9FE  0101               	movlb	1	; () banked
 37681  00EA00  6F41               	movwf	_ptrNextData& (0+255),b
 37682  00EA02  0E06               	movlw	6
 37683  00EA04  6F42               	movwf	(_ptrNextData+1)& (0+255),b
 37684                           
 37685                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 37686  00EA06  0E03               	movlw	3
 37687  00EA08  6F54               	movwf	_MSDReadState& (0+255),b
 37688  00EA0A                     
 37689                           ; BSR set to: 1
 37690                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 37691                           
 37692                           ; BSR set to: 1
 37693  00EA0A  010D               	movlb	13	; () banked
 37694  00EA0C  5188               	movf	136,w,b	;volatile
 37695  00EA0E  1189               	iorwf	137,w,b	;volatile
 37696  00EA10  118A               	iorwf	138,w,b	;volatile
 37697  00EA12  118B               	iorwf	139,w,b	;volatile
 37698  00EA14  A4D8               	btfss	status,2,c
 37699  00EA16  D002               	goto	l693
 37700                           
 37701                           ; BSR set to: 13
 37702                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 37703  00EA18  0E01               	movlw	1
 37704  00EA1A  D03E               	goto	L56
 37705  00EA1C                     l693:
 37706                           
 37707                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 37708                           
 37709                           ; BSR set to: 1
 37710  00EA1C  0E04               	movlw	4
 37711  00EA1E  0101               	movlb	1	; () banked
 37712  00EA20  6F54               	movwf	_MSDReadState& (0+255),b
 37713  00EA22                     
 37714                           ; BSR set to: 1
 37715                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 37716                           
 37717                           ; BSR set to: 1
 37718  00EA22  513D               	movf	_USBMSDInHandle& (0+255),w,b
 37719  00EA24  113E               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 37720  00EA26  B4D8               	btfsc	status,2,c
 37721  00EA28  D006               	goto	l695
 37722                           
 37723                           ; BSR set to: 1
 37724  00EA2A  C13D  FFD9         	movff	_USBMSDInHandle,fsr2l
 37725  00EA2E  C13E  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 37726  00EA32  BEDF               	btfsc	indf2,7,c
 37727  00EA34  D045               	goto	l684
 37728  00EA36                     l695:
 37729                           
 37730                           ; BSR set to: 1
 37731                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 37732                           
 37733                           ; BSR set to: 1
 37734  00EA36  0E01               	movlw	1
 37735  00EA38  0100               	movlb	0	; () banked
 37736  00EA3A  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 37737  00EA3C  C141  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 37738  00EA40  C142  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 37739  00EA44  0E40               	movlw	64
 37740  00EA46  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 37741  00EA48  0E02               	movlw	2
 37742  00EA4A  EC07  F08A         	call	_USBTransferOnePacket
 37743  00EA4E  C060  F13D         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 37744  00EA52  C061  F13E         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 37745                           
 37746                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 37747  00EA56  0E03               	movlw	3
 37748  00EA58  0101               	movlb	1	; () banked
 37749  00EA5A  6F54               	movwf	_MSDReadState& (0+255),b
 37750                           
 37751                           ; BSR set to: 1
 37752                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 37753  00EA5C  0E40               	movlw	64
 37754  00EA5E  0102               	movlb	2	; () banked
 37755  00EA60  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 37756  00EA62  0E00               	movlw	0
 37757  00EA64  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 37758  00EA66  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 37759  00EA68  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 37760                           
 37761                           ; BSR set to: 2
 37762                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 37763  00EA6A  0E40               	movlw	64
 37764  00EA6C  010D               	movlb	13	; () banked
 37765  00EA6E  5F88               	subwf	136,f,b	;volatile
 37766  00EA70  0E00               	movlw	0
 37767  00EA72  5B89               	subwfb	137,f,b	;volatile
 37768  00EA74  5B8A               	subwfb	138,f,b	;volatile
 37769  00EA76  5B8B               	subwfb	139,f,b	;volatile
 37770                           
 37771                           ; BSR set to: 13
 37772                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 37773  00EA78  0E40               	movlw	64
 37774  00EA7A  0101               	movlb	1	; () banked
 37775  00EA7C  2741               	addwf	_ptrNextData& (0+255),f,b
 37776  00EA7E  0E00               	movlw	0
 37777  00EA80  2342               	addwfc	(_ptrNextData+1)& (0+255),f,b
 37778                           
 37779                           ;usb_device_msd.c: 1149: break;
 37780  00EA82  D01E               	goto	l684
 37781  00EA84                     
 37782                           ; BSR set to: 1
 37783                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 37784                           
 37785                           ; BSR set to: 1
 37786  00EA84  0E02               	movlw	2
 37787  00EA86  010D               	movlb	13	; () banked
 37788  00EA88  6F8C               	movwf	140,b	;volatile
 37789                           
 37790                           ; BSR set to: 13
 37791                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 37792  00EA8A  0E01               	movlw	1
 37793  00EA8C  0100               	movlb	0	; () banked
 37794  00EA8E  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 37795  00EA90  0E02               	movlw	2
 37796  00EA92  EC82  F089         	call	_USBStallEndpoint
 37797  00EA96                     l13116:
 37798                           
 37799                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 37800  00EA96  0E00               	movlw	0
 37801  00EA98                     L56:
 37802  00EA98  0101               	movlb	1	; () banked
 37803  00EA9A  D79E               	goto	L54
 37804  00EA9C                     l681:
 37805                           
 37806                           ; BSR set to: 1
 37807  00EA9C  0101               	movlb	1	; () banked
 37808  00EA9E  5154               	movf	_MSDReadState& (0+255),w,b
 37809                           
 37810                           ; Switch size 1, requested type "space"
 37811                           ; Number of cases is 5, Range of values is 0 to 4
 37812                           ; switch strategies available:
 37813                           ; Name         Instructions Cycles
 37814                           ; simple_byte           16     9 (average)
 37815                           ;	Chosen strategy is simple_byte
 37816  00EAA0  0A00               	xorlw	0	; case 0
 37817  00EAA2  B4D8               	btfsc	status,2,c
 37818  00EAA4  D71C               	goto	l682
 37819  00EAA6  0A01               	xorlw	1	; case 1
 37820  00EAA8  B4D8               	btfsc	status,2,c
 37821  00EAAA  D746               	goto	l685
 37822  00EAAC  0A03               	xorlw	3	; case 2
 37823  00EAAE  B4D8               	btfsc	status,2,c
 37824  00EAB0  D74E               	goto	l687
 37825  00EAB2  0A01               	xorlw	1	; case 3
 37826  00EAB4  B4D8               	btfsc	status,2,c
 37827  00EAB6  D7A9               	goto	l692
 37828  00EAB8  0A07               	xorlw	7	; case 4
 37829  00EABA  B4D8               	btfsc	status,2,c
 37830  00EABC  D7B2               	goto	l694
 37831  00EABE  D7E2               	goto	l696
 37832  00EAC0                     l684:
 37833                           
 37834                           ;usb_device_msd.c: 1161: return MSDReadState;
 37835                           
 37836                           ; BSR set to: 1
 37837  00EAC0  0101               	movlb	1	; () banked
 37838  00EAC2  5154               	movf	_MSDReadState& (0+255),w,b
 37839  00EAC4  0012               	return	
 37840  00EAC6                     __end_of_MSDReadHandler:
 37841                           	opt stack 0
 37842                           tosu	equ	0xFFF
 37843                           tosh	equ	0xFFE
 37844                           tosl	equ	0xFFD
 37845                           pclath	equ	0xFFA
 37846                           tblptru	equ	0xFF8
 37847                           tblptrh	equ	0xFF7
 37848                           tblptrl	equ	0xFF6
 37849                           tablat	equ	0xFF5
 37850                           prodh	equ	0xFF4
 37851                           prodl	equ	0xFF3
 37852                           intcon	equ	0xFF2
 37853                           postinc0	equ	0xFEE
 37854                           wreg	equ	0xFE8
 37855                           indf1	equ	0xFE7
 37856                           postinc1	equ	0xFE6
 37857                           postdec1	equ	0xFE5
 37858                           plusw1	equ	0xFE3
 37859                           fsr1h	equ	0xFE2
 37860                           fsr1l	equ	0xFE1
 37861                           indf2	equ	0xFDF
 37862                           postinc2	equ	0xFDE
 37863                           postdec2	equ	0xFDD
 37864                           plusw2	equ	0xFDB
 37865                           fsr2h	equ	0xFDA
 37866                           fsr2l	equ	0xFD9
 37867                           status	equ	0xFD8
 37868                           
 37869 ;; *************** function _MSDCheckForErrorCases *****************
 37870 ;; Defined at:
 37871 ;;		line 1434 in file "usb_device_msd.c"
 37872 ;; Parameters:    Size  Location     Type
 37873 ;;  DeviceBytes     4   10[BANK0 ] unsigned long 
 37874 ;; Auto vars:     Size  Location     Type
 37875 ;;  DeviceNoData    1   16[BANK0 ] unsigned char 
 37876 ;;  MSDErrorCase    1   15[BANK0 ] unsigned char 
 37877 ;;  HostMoreData    1   14[BANK0 ] unsigned char 
 37878 ;; Return value:  Size  Location     Type
 37879 ;;                  1    wreg      unsigned char 
 37880 ;; Registers used:
 37881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37882 ;; Tracked objects:
 37883 ;;		On entry : 0/0
 37884 ;;		On exit  : 0/0
 37885 ;;		Unchanged: 0/0
 37886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37887 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37888 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37890 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37891 ;;Total ram usage:        7 bytes
 37892 ;; Hardware stack levels used:    1
 37893 ;; Hardware stack levels required when called:   12
 37894 ;; This function calls:
 37895 ;;		_MSDErrorHandler
 37896 ;; This function is called by:
 37897 ;;		_MSDProcessCommandMediaPresent
 37898 ;;		_MSDReadHandler
 37899 ;;		_MSDWriteHandler
 37900 ;; This function uses a non-reentrant model
 37901 ;;
 37902                           
 37903                           	psect	text146
 37904  010EC4                     __ptext146:
 37905                           	opt stack 0
 37906  010EC4                     _MSDCheckForErrorCases:
 37907                           	opt stack 13
 37908                           
 37909                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 37910                           
 37911                           ; BSR set to: 1
 37912                           ;incstack = 0
 37913  010EC4  0100               	movlb	0	; () banked
 37914  010EC6  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 37915  010EC8  116B               	iorwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 37916  010ECA  116C               	iorwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 37917  010ECC  116D               	iorwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 37918  010ECE  A4D8               	btfss	status,2,c
 37919  010ED0  D002               	goto	l726
 37920                           
 37921                           ; BSR set to: 0
 37922                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 37923  010ED2  0E01               	movlw	1
 37924  010ED4  D001               	goto	L57
 37925  010ED6                     l726:
 37926                           
 37927                           ; BSR set to: 0
 37928                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 37929                           
 37930                           ; BSR set to: 0
 37931  010ED6  0E00               	movlw	0
 37932  010ED8                     L57:
 37933  010ED8  6F70               	movwf	MSDCheckForErrorCases@DeviceNoData& (0+255),b
 37934                           
 37935                           ; BSR set to: 0
 37936                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 37937                           
 37938                           ; BSR set to: 0
 37939  010EDA  0101               	movlb	1	; () banked
 37940  010EDC  054F               	decf	_MSDHostNoData& (0+255),w,b
 37941  010EDE  A4D8               	btfss	status,2,c
 37942  010EE0  D006               	goto	l728
 37943                           
 37944                           ; BSR set to: 1
 37945  010EE2  0100               	movlb	0	; () banked
 37946  010EE4  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 37947  010EE6  A4D8               	btfss	status,2,c
 37948  010EE8  D002               	goto	l728
 37949                           
 37950                           ; BSR set to: 0
 37951                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 37952  010EEA  0E00               	movlw	0
 37953                           
 37954                           ; BSR set to: 0
 37955  010EEC  0012               	return	
 37956  010EEE                     l728:
 37957                           
 37958                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 37959                           
 37960                           ; BSR set to: 0
 37961  010EEE  0100               	movlb	0	; () banked
 37962  010EF0  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 37963  010EF2  0102               	movlb	2	; () banked
 37964  010EF4  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 37965  010EF6  E120               	bnz	l12708
 37966  010EF8  0100               	movlb	0	; () banked
 37967  010EFA  516B               	movf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 37968  010EFC  0102               	movlb	2	; () banked
 37969  010EFE  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 37970  010F00  E11B               	bnz	l12708
 37971  010F02  0100               	movlb	0	; () banked
 37972  010F04  516C               	movf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 37973  010F06  0102               	movlb	2	; () banked
 37974  010F08  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 37975  010F0A  E116               	bnz	l12708
 37976  010F0C  0100               	movlb	0	; () banked
 37977  010F0E  516D               	movf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 37978  010F10  0102               	movlb	2	; () banked
 37979  010F12  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 37980  010F14  A4D8               	btfss	status,2,c
 37981  010F16  D010               	goto	l734
 37982                           
 37983                           ; BSR set to: 2
 37984                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 37985  010F18  0101               	movlb	1	; () banked
 37986  010F1A  0556               	decf	_MSD_State& (0+255),w,b
 37987  010F1C  A4D8               	btfss	status,2,c
 37988  010F1E  D006               	goto	l731
 37989                           
 37990                           ; BSR set to: 1
 37991                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 37992  010F20  0E2A               	movlw	42
 37993  010F22  1955               	xorwf	_MSDCommandState& (0+255),w,b
 37994  010F24  B4D8               	btfsc	status,2,c
 37995  010F26  D008               	goto	l734
 37996                           
 37997                           ; BSR set to: 1
 37998                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 37999  010F28  0E00               	movlw	0
 38000                           
 38001                           ; BSR set to: 1
 38002  010F2A  0012               	return	
 38003  010F2C                     l731:
 38004                           
 38005                           ; BSR set to: 1
 38006                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 38007                           
 38008                           ; BSR set to: 1
 38009  010F2C  0E2A               	movlw	42
 38010  010F2E  1955               	xorwf	_MSDCommandState& (0+255),w,b
 38011  010F30  A4D8               	btfss	status,2,c
 38012  010F32  D002               	goto	l734
 38013                           
 38014                           ; BSR set to: 1
 38015                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 38016  010F34  0E00               	movlw	0
 38017                           
 38018                           ; BSR set to: 1
 38019  010F36  0012               	return	
 38020  010F38                     l734:
 38021  010F38                     l12708:
 38022                           
 38023                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 38024  010F38  0102               	movlb	2	; () banked
 38025  010F3A  5108               	movf	(_gblCBW+8)& (0+255),w,b
 38026  010F3C  0100               	movlb	0	; () banked
 38027  010F3E  5D6A               	subwf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 38028  010F40  0102               	movlb	2	; () banked
 38029  010F42  5109               	movf	(_gblCBW+9)& (0+255),w,b
 38030  010F44  0100               	movlb	0	; () banked
 38031  010F46  596B               	subwfb	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 38032  010F48  0102               	movlb	2	; () banked
 38033  010F4A  510A               	movf	(_gblCBW+10)& (0+255),w,b
 38034  010F4C  0100               	movlb	0	; () banked
 38035  010F4E  596C               	subwfb	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 38036  010F50  0102               	movlb	2	; () banked
 38037  010F52  510B               	movf	(_gblCBW+11)& (0+255),w,b
 38038  010F54  0100               	movlb	0	; () banked
 38039  010F56  596D               	subwfb	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 38040  010F58  B0D8               	btfsc	status,0,c
 38041  010F5A  D002               	goto	l735
 38042                           
 38043                           ; BSR set to: 0
 38044                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 38045  010F5C  0E01               	movlw	1
 38046  010F5E  D001               	goto	L58
 38047  010F60                     l735:
 38048                           
 38049                           ; BSR set to: 0
 38050                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 38051                           
 38052                           ; BSR set to: 0
 38053  010F60  0E00               	movlw	0
 38054  010F62                     L58:
 38055  010F62  6F6E               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),b
 38056                           
 38057                           ; BSR set to: 0
 38058                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 38059                           
 38060                           ; BSR set to: 0
 38061  010F64  0E02               	movlw	2
 38062  010F66  0101               	movlb	1	; () banked
 38063  010F68  1956               	xorwf	_MSD_State& (0+255),w,b
 38064  010F6A  A4D8               	btfss	status,2,c
 38065  010F6C  D017               	goto	l737
 38066                           
 38067                           ; BSR set to: 1
 38068                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 38069  010F6E  0E2A               	movlw	42
 38070  010F70  1955               	xorwf	_MSDCommandState& (0+255),w,b
 38071  010F72  B4D8               	btfsc	status,2,c
 38072  010F74  D006               	goto	l738
 38073                           
 38074                           ; BSR set to: 1
 38075  010F76  0100               	movlb	0	; () banked
 38076  010F78  5170               	movf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 38077  010F7A  A4D8               	btfss	status,2,c
 38078  010F7C  D002               	goto	l738
 38079  010F7E                     u10710:
 38080                           
 38081                           ; BSR set to: 0
 38082                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 38083  010F7E  0E05               	movlw	5
 38084  010F80  D025               	goto	L63
 38085  010F82                     l738:
 38086                           
 38087                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 38088                           
 38089                           ; BSR set to: 0
 38090  010F82  0101               	movlb	1	; () banked
 38091  010F84  054F               	decf	_MSDHostNoData& (0+255),w,b
 38092  010F86  B4D8               	btfsc	status,2,c
 38093  010F88  D014               	goto	u10760
 38094                           
 38095                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 38096                           
 38097                           ; BSR set to: 0
 38098                           
 38099                           ; BSR set to: 1
 38100                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 38101  010F8A  0100               	movlb	0	; () banked
 38102  010F8C  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 38103  010F8E  B4D8               	btfsc	status,2,c
 38104  010F90  D003               	goto	u10740
 38105                           
 38106                           ; BSR set to: 0
 38107                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 38108                           
 38109                           ; BSR set to: 0
 38110                           
 38111                           ; BSR set to: 0
 38112                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 38113  010F92  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 38114  010F94  A4D8               	btfss	status,2,c
 38115  010F96  D7F3               	goto	u10710
 38116  010F98                     u10740:
 38117                           
 38118                           ; BSR set to: 0
 38119                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 38120  010F98  0E04               	movlw	4
 38121  010F9A  D018               	goto	L63
 38122  010F9C                     l737:
 38123                           
 38124                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 38125                           
 38126                           ; BSR set to: 0
 38127  010F9C  0E2A               	movlw	42
 38128  010F9E  0101               	movlb	1	; () banked
 38129  010FA0  1955               	xorwf	_MSDCommandState& (0+255),w,b
 38130  010FA2  A4D8               	btfss	status,2,c
 38131  010FA4  D002               	goto	l747
 38132                           
 38133                           ; BSR set to: 1
 38134                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 38135  010FA6  0E03               	movlw	3
 38136  010FA8  D005               	goto	L62
 38137  010FAA                     l747:
 38138                           
 38139                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 38140                           
 38141                           ; BSR set to: 0
 38142  010FAA  0101               	movlb	1	; () banked
 38143  010FAC  054F               	decf	_MSDHostNoData& (0+255),w,b
 38144  010FAE  A4D8               	btfss	status,2,c
 38145  010FB0  D003               	goto	l749
 38146  010FB2                     u10760:
 38147                           
 38148                           ; BSR set to: 1
 38149                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 38150  010FB2  0E01               	movlw	1
 38151  010FB4                     L62:
 38152  010FB4  0100               	movlb	0	; () banked
 38153  010FB6  D00A               	goto	L63
 38154  010FB8                     l749:
 38155                           
 38156                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 38157                           
 38158                           ; BSR set to: 0
 38159  010FB8  0100               	movlb	0	; () banked
 38160  010FBA  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 38161  010FBC  B4D8               	btfsc	status,2,c
 38162  010FBE  D003               	goto	u10780
 38163                           
 38164                           ; BSR set to: 0
 38165                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 38166                           
 38167                           ; BSR set to: 0
 38168                           
 38169                           ; BSR set to: 0
 38170                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 38171  010FC0  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 38172  010FC2  A4D8               	btfss	status,2,c
 38173  010FC4  D002               	goto	l753
 38174  010FC6                     u10780:
 38175                           
 38176                           ; BSR set to: 0
 38177                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 38178  010FC6  0E02               	movlw	2
 38179  010FC8  D001               	goto	L63
 38180  010FCA                     l753:
 38181                           
 38182                           ; BSR set to: 0
 38183                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 38184                           
 38185                           ; BSR set to: 0
 38186  010FCA  0E03               	movlw	3
 38187  010FCC                     L63:
 38188  010FCC  6F6F               	movwf	MSDCheckForErrorCases@MSDErrorCase& (0+255),b
 38189                           
 38190                           ; BSR set to: 0
 38191                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 38192                           
 38193                           ; BSR set to: 0
 38194                           
 38195                           ; BSR set to: 0
 38196                           
 38197                           ; BSR set to: 0
 38198                           
 38199                           ; BSR set to: 0
 38200                           
 38201                           ; BSR set to: 0
 38202  010FCE  516F               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 38203  010FD0  ECD5  F086         	call	_MSDErrorHandler
 38204                           
 38205                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 38206  010FD4  0100               	movlb	0	; () banked
 38207  010FD6  516F               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 38208  010FD8  0012               	return	
 38209  010FDA                     __end_of_MSDCheckForErrorCases:
 38210                           	opt stack 0
 38211                           tosu	equ	0xFFF
 38212                           tosh	equ	0xFFE
 38213                           tosl	equ	0xFFD
 38214                           pclath	equ	0xFFA
 38215                           tblptru	equ	0xFF8
 38216                           tblptrh	equ	0xFF7
 38217                           tblptrl	equ	0xFF6
 38218                           tablat	equ	0xFF5
 38219                           prodh	equ	0xFF4
 38220                           prodl	equ	0xFF3
 38221                           intcon	equ	0xFF2
 38222                           postinc0	equ	0xFEE
 38223                           wreg	equ	0xFE8
 38224                           indf1	equ	0xFE7
 38225                           postinc1	equ	0xFE6
 38226                           postdec1	equ	0xFE5
 38227                           plusw1	equ	0xFE3
 38228                           fsr1h	equ	0xFE2
 38229                           fsr1l	equ	0xFE1
 38230                           indf2	equ	0xFDF
 38231                           postinc2	equ	0xFDE
 38232                           postdec2	equ	0xFDD
 38233                           plusw2	equ	0xFDB
 38234                           fsr2h	equ	0xFDA
 38235                           fsr2l	equ	0xFD9
 38236                           status	equ	0xFD8
 38237                           
 38238 ;; *************** function _MSDErrorHandler *****************
 38239 ;; Defined at:
 38240 ;;		line 1577 in file "usb_device_msd.c"
 38241 ;; Parameters:    Size  Location     Type
 38242 ;;  ErrorCase       1    wreg     unsigned char 
 38243 ;; Auto vars:     Size  Location     Type
 38244 ;;  ErrorCase       1    8[BANK0 ] unsigned char 
 38245 ;;  OldMSD_State    1    9[BANK0 ] unsigned char 
 38246 ;; Return value:  Size  Location     Type
 38247 ;;                  1    wreg      void 
 38248 ;; Registers used:
 38249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38250 ;; Tracked objects:
 38251 ;;		On entry : 0/0
 38252 ;;		On exit  : 0/0
 38253 ;;		Unchanged: 0/0
 38254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38256 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38258 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38259 ;;Total ram usage:        2 bytes
 38260 ;; Hardware stack levels used:    1
 38261 ;; Hardware stack levels required when called:   11
 38262 ;; This function calls:
 38263 ;;		_ResetSenseData
 38264 ;;		_USBStallEndpoint
 38265 ;; This function is called by:
 38266 ;;		_MSDProcessCommandMediaAbsent
 38267 ;;		_MSDProcessCommandMediaPresent
 38268 ;;		_MSDCheckForErrorCases
 38269 ;; This function uses a non-reentrant model
 38270 ;;
 38271                           
 38272                           	psect	text147
 38273  010DAA                     __ptext147:
 38274                           	opt stack 0
 38275  010DAA                     _MSDErrorHandler:
 38276                           	opt stack 13
 38277                           
 38278                           ;incstack = 0
 38279                           ;MSDErrorHandler@ErrorCase stored from wreg
 38280  010DAA  0100               	movlb	0	; () banked
 38281  010DAC  6F68               	movwf	MSDErrorHandler@ErrorCase& (0+255),b
 38282                           
 38283                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 38284  010DAE  0101               	movlb	1	; () banked
 38285  010DB0  513D               	movf	_USBMSDInHandle& (0+255),w,b
 38286  010DB2  113E               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 38287  010DB4  B4D8               	btfsc	status,2,c
 38288  010DB6  D006               	goto	u10360
 38289                           
 38290                           ; BSR set to: 1
 38291  010DB8  C13D  FFD9         	movff	_USBMSDInHandle,fsr2l
 38292  010DBC  C13E  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 38293  010DC0  BEDF               	btfsc	indf2,7,c
 38294  010DC2  0012               	return	
 38295  010DC4                     u10360:
 38296                           
 38297                           ; BSR set to: 1
 38298                           
 38299                           ; BSR set to: 1
 38300  010DC4  513F               	movf	_USBMSDOutHandle& (0+255),w,b
 38301  010DC6  1140               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 38302  010DC8  B4D8               	btfsc	status,2,c
 38303  010DCA  D006               	goto	l757
 38304                           
 38305                           ; BSR set to: 1
 38306  010DCC  C13F  FFD9         	movff	_USBMSDOutHandle,fsr2l
 38307  010DD0  C140  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 38308  010DD4  BEDF               	btfsc	indf2,7,c
 38309  010DD6  0012               	return	
 38310  010DD8                     l757:
 38311                           
 38312                           ; BSR set to: 1
 38313                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 38314  010DD8  C156  F069         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 38315                           
 38316                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 38317  010DDC  6955               	setf	_MSDCommandState& (0+255),b
 38318                           
 38319                           ; BSR set to: 1
 38320                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 38321  010DDE  0E00               	movlw	0
 38322  010DE0  6F54               	movwf	_MSDReadState& (0+255),b
 38323                           
 38324                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 38325  010DE2  0E00               	movlw	0
 38326  010DE4  6F53               	movwf	_MSDWriteState& (0+255),b
 38327                           
 38328                           ; BSR set to: 1
 38329                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 38330  010DE6  C208  FD88         	movff	_gblCBW+8,3464	;volatile
 38331  010DEA  C209  FD89         	movff	_gblCBW+9,3465	;volatile
 38332  010DEE  C20A  FD8A         	movff	_gblCBW+10,3466	;volatile
 38333  010DF2  C20B  FD8B         	movff	_gblCBW+11,3467	;volatile
 38334                           
 38335                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 38336  010DF6  0E01               	movlw	1
 38337  010DF8  010D               	movlb	13	; () banked
 38338  010DFA  6F8C               	movwf	140,b	;volatile
 38339                           
 38340                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 38341  010DFC  0E03               	movlw	3
 38342  010DFE  0101               	movlb	1	; () banked
 38343  010E00  6F56               	movwf	_MSD_State& (0+255),b
 38344                           
 38345                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 38346  010E02  D04B               	goto	l763
 38347  010E04                     
 38348                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 38349                           
 38350                           ; BSR set to: 1
 38351  010E04  0E02               	movlw	2
 38352  010E06  010D               	movlb	13	; () banked
 38353  010E08  6F8C               	movwf	140,b	;volatile
 38354                           
 38355                           ;usb_device_msd.c: 1607: break;
 38356  010E0A  0012               	return	
 38357  010E0C                     
 38358                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 38359                           
 38360                           ; BSR set to: 13
 38361  010E0C  0E01               	movlw	1
 38362  010E0E  0100               	movlb	0	; () banked
 38363  010E10  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 38364  010E12  0E02               	movlw	2
 38365  010E14  EC82  F089         	call	_USBStallEndpoint
 38366                           
 38367                           ;usb_device_msd.c: 1611: break;
 38368  010E18  0012               	return	
 38369  010E1A                     
 38370                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 38371  010E1A  0E02               	movlw	2
 38372  010E1C  010D               	movlb	13	; () banked
 38373  010E1E  6F8C               	movwf	140,b	;volatile
 38374                           
 38375                           ; BSR set to: 13
 38376                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 38377  010E20  0E01               	movlw	1
 38378  010E22  0100               	movlb	0	; () banked
 38379  010E24  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 38380  010E26  0E02               	movlw	2
 38381  010E28  EC82  F089         	call	_USBStallEndpoint
 38382                           
 38383                           ;usb_device_msd.c: 1616: break;
 38384  010E2C  0012               	return	
 38385  010E2E                     
 38386                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 38387  010E2E  0E00               	movlw	0
 38388  010E30  0100               	movlb	0	; () banked
 38389  010E32  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 38390  010E34  0E02               	movlw	2
 38391  010E36  EC82  F089         	call	_USBStallEndpoint
 38392                           
 38393                           ;usb_device_msd.c: 1620: break;
 38394  010E3A  0012               	return	
 38395  010E3C                     
 38396                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 38397  010E3C  0E02               	movlw	2
 38398  010E3E  010D               	movlb	13	; () banked
 38399  010E40  6F8C               	movwf	140,b	;volatile
 38400                           
 38401                           ; BSR set to: 13
 38402                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 38403  010E42  0E00               	movlw	0
 38404  010E44  0100               	movlb	0	; () banked
 38405  010E46  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 38406  010E48  0E02               	movlw	2
 38407  010E4A  EC82  F089         	call	_USBStallEndpoint
 38408                           
 38409                           ;usb_device_msd.c: 1625: break;
 38410  010E4E  0012               	return	
 38411  010E50                     
 38412                           ;usb_device_msd.c: 1628: ResetSenseData();
 38413  010E50  EC0F  F0A4         	call	_ResetSenseData	;wreg free
 38414                           
 38415                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 38416  010E54  0102               	movlb	2	; () banked
 38417  010E56  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 38418  010E58  0BF0               	andlw	-16
 38419  010E5A  0905               	iorlw	5
 38420  010E5C  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 38421                           
 38422                           ; BSR set to: 2
 38423                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 38424  010E5E  0E20               	movlw	32
 38425  010E60  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 38426                           
 38427                           ; BSR set to: 2
 38428                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 38429  010E62  0E00               	movlw	0
 38430  010E64  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 38431                           
 38432                           ; BSR set to: 2
 38433                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 38434  010E66  0E02               	movlw	2
 38435  010E68  0100               	movlb	0	; () banked
 38436  010E6A  1969               	xorwf	MSDErrorHandler@OldMSD_State& (0+255),w,b
 38437  010E6C  A4D8               	btfss	status,2,c
 38438  010E6E  D00E               	goto	l771
 38439                           
 38440                           ; BSR set to: 0
 38441  010E70  0102               	movlb	2	; () banked
 38442  010E72  5108               	movf	(_gblCBW+8)& (0+255),w,b
 38443  010E74  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 38444  010E76  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 38445  010E78  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 38446  010E7A  B4D8               	btfsc	status,2,c
 38447  010E7C  D007               	goto	l771
 38448                           
 38449                           ; BSR set to: 2
 38450                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 38451  010E7E  0E00               	movlw	0
 38452  010E80  0100               	movlb	0	; () banked
 38453  010E82  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 38454  010E84  0E02               	movlw	2
 38455  010E86  EC82  F089         	call	_USBStallEndpoint
 38456                           
 38457                           ;usb_device_msd.c: 1636: }
 38458  010E8A  0012               	return	
 38459  010E8C                     l771:
 38460                           
 38461                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 38462  010E8C  0E01               	movlw	1
 38463  010E8E  0100               	movlb	0	; () banked
 38464  010E90  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 38465  010E92  0E02               	movlw	2
 38466  010E94  EC82  F089         	call	_USBStallEndpoint
 38467                           
 38468                           ;usb_device_msd.c: 1644: }
 38469                           
 38470                           ;usb_device_msd.c: 1643: break;
 38471                           
 38472                           ;usb_device_msd.c: 1642: default:
 38473                           
 38474                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 38475  010E98  0012               	return	
 38476  010E9A                     l763:
 38477  010E9A  0100               	movlb	0	; () banked
 38478  010E9C  5168               	movf	MSDErrorHandler@ErrorCase& (0+255),w,b
 38479                           
 38480                           ; Switch size 1, requested type "space"
 38481                           ; Number of cases is 6, Range of values is 1 to 127
 38482                           ; switch strategies available:
 38483                           ; Name         Instructions Cycles
 38484                           ; simple_byte           19    10 (average)
 38485                           ;	Chosen strategy is simple_byte
 38486  010E9E  0A01               	xorlw	1	; case 1
 38487  010EA0  B4D8               	btfsc	status,2,c
 38488  010EA2  D7B0               	goto	l764
 38489  010EA4  0A03               	xorlw	3	; case 2
 38490  010EA6  B4D8               	btfsc	status,2,c
 38491  010EA8  D7B1               	goto	l766
 38492  010EAA  0A01               	xorlw	1	; case 3
 38493  010EAC  B4D8               	btfsc	status,2,c
 38494  010EAE  D7B5               	goto	l767
 38495  010EB0  0A07               	xorlw	7	; case 4
 38496  010EB2  B4D8               	btfsc	status,2,c
 38497  010EB4  D7BC               	goto	l768
 38498  010EB6  0A01               	xorlw	1	; case 5
 38499  010EB8  B4D8               	btfsc	status,2,c
 38500  010EBA  D7C0               	goto	l769
 38501  010EBC  0A7A               	xorlw	122	; case 127
 38502  010EBE  A4D8               	btfss	status,2,c
 38503  010EC0  0012               	return	
 38504  010EC2  D7C6               	goto	l770
 38505  010EC4                     __end_of_MSDErrorHandler:
 38506                           	opt stack 0
 38507                           tosu	equ	0xFFF
 38508                           tosh	equ	0xFFE
 38509                           tosl	equ	0xFFD
 38510                           pclath	equ	0xFFA
 38511                           tblptru	equ	0xFF8
 38512                           tblptrh	equ	0xFF7
 38513                           tblptrl	equ	0xFF6
 38514                           tablat	equ	0xFF5
 38515                           prodh	equ	0xFF4
 38516                           prodl	equ	0xFF3
 38517                           intcon	equ	0xFF2
 38518                           postinc0	equ	0xFEE
 38519                           wreg	equ	0xFE8
 38520                           indf1	equ	0xFE7
 38521                           postinc1	equ	0xFE6
 38522                           postdec1	equ	0xFE5
 38523                           plusw1	equ	0xFE3
 38524                           fsr1h	equ	0xFE2
 38525                           fsr1l	equ	0xFE1
 38526                           indf2	equ	0xFDF
 38527                           postinc2	equ	0xFDE
 38528                           postdec2	equ	0xFDD
 38529                           plusw2	equ	0xFDB
 38530                           fsr2h	equ	0xFDA
 38531                           fsr2l	equ	0xFD9
 38532                           status	equ	0xFD8
 38533                           
 38534 ;; *************** function _USBStallEndpoint *****************
 38535 ;; Defined at:
 38536 ;;		line 1073 in file "usb_device.c"
 38537 ;; Parameters:    Size  Location     Type
 38538 ;;  ep              1    wreg     unsigned char 
 38539 ;;  dir             1    0[BANK0 ] unsigned char 
 38540 ;; Auto vars:     Size  Location     Type
 38541 ;;  ep              1    5[BANK0 ] unsigned char 
 38542 ;;  p               2    6[BANK0 ] PTR struct __BDT
 38543 ;;		 -> BDT(48), 
 38544 ;; Return value:  Size  Location     Type
 38545 ;;                  1    wreg      void 
 38546 ;; Registers used:
 38547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38548 ;; Tracked objects:
 38549 ;;		On entry : 0/0
 38550 ;;		On exit  : 0/0
 38551 ;;		Unchanged: 0/0
 38552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38553 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38554 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38555 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38556 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38557 ;;Total ram usage:        8 bytes
 38558 ;; Hardware stack levels used:    1
 38559 ;; Hardware stack levels required when called:   10
 38560 ;; This function calls:
 38561 ;;		Nothing
 38562 ;; This function is called by:
 38563 ;;		_MSDTasks
 38564 ;;		_MSDReadHandler
 38565 ;;		_MSDWriteHandler
 38566 ;;		_MSDErrorHandler
 38567 ;; This function uses a non-reentrant model
 38568 ;;
 38569                           
 38570                           	psect	text148
 38571  011304                     __ptext148:
 38572                           	opt stack 0
 38573  011304                     _USBStallEndpoint:
 38574                           	opt stack 18
 38575                           
 38576                           ;incstack = 0
 38577                           ;USBStallEndpoint@ep stored from wreg
 38578  011304  0100               	movlb	0	; () banked
 38579  011306  6F65               	movwf	USBStallEndpoint@ep& (0+255),b
 38580                           
 38581                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 38582  011308  0100               	movlb	0	; () banked
 38583  01130A  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 38584  01130C  A4D8               	btfss	status,2,c
 38585  01130E  D02B               	goto	l192
 38586                           
 38587                           ; BSR set to: 0
 38588                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 38589  011310  EE20 F001          	lfsr	2,1
 38590  011314  5059               	movf	_pBDTEntryEP0OutNext,w,c
 38591  011316  26D9               	addwf	fsr2l,f,c
 38592  011318  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 38593  01131A  22DA               	addwfc	fsr2h,f,c
 38594  01131C  0E08               	movlw	8
 38595  01131E  6EDF               	movwf	indf2,c
 38596                           
 38597                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 38598  011320  EE20 F002          	lfsr	2,2
 38599  011324  5059               	movf	_pBDTEntryEP0OutNext,w,c
 38600  011326  26D9               	addwf	fsr2l,f,c
 38601  011328  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 38602  01132A  22DA               	addwfc	fsr2h,f,c
 38603  01132C  0E30               	movlw	48
 38604  01132E  6EDE               	movwf	postinc2,c
 38605  011330  0E0D               	movlw	13
 38606  011332  6EDD               	movwf	postdec2,c
 38607                           
 38608                           ; BSR set to: 0
 38609                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 38610  011334  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 38611  011338  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 38612  01133C  0E0C               	movlw	12
 38613  01133E  6EDF               	movwf	indf2,c
 38614                           
 38615                           ; BSR set to: 0
 38616                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 38617  011340  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 38618  011344  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 38619  011348  0E00               	movlw	0
 38620  01134A  8EDB               	bsf	plusw2,7,c
 38621                           
 38622                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 38623  01134C  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 38624  011350  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 38625  011354  0E04               	movlw	4
 38626  011356  6EDF               	movwf	indf2,c
 38627                           
 38628                           ; BSR set to: 0
 38629                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 38630  011358  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 38631  01135C  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 38632  011360  0E00               	movlw	0
 38633  011362  8EDB               	bsf	plusw2,7,c
 38634                           
 38635                           ;usb_device.c: 1089: }
 38636  011364  0012               	return	
 38637  011366                     l192:
 38638                           
 38639                           ; BSR set to: 0
 38640                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 38641                           
 38642                           ; BSR set to: 0
 38643  011366  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 38644  011368  6F61               	movwf	??_USBStallEndpoint& (0+255),b
 38645  01136A  6B62               	clrf	(??_USBStallEndpoint+1)& (0+255),b
 38646  01136C  90D8               	bcf	status,0,c
 38647  01136E  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 38648  011370  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 38649  011372  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 38650  011374  6F63               	movwf	(??_USBStallEndpoint+2)& (0+255),b
 38651  011376  6B64               	clrf	(??_USBStallEndpoint+3)& (0+255),b
 38652  011378  90D8               	bcf	status,0,c
 38653  01137A  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 38654  01137C  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 38655  01137E  90D8               	bcf	status,0,c
 38656  011380  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 38657  011382  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 38658  011384  5161               	movf	??_USBStallEndpoint& (0+255),w,b
 38659  011386  2763               	addwf	(??_USBStallEndpoint+2)& (0+255),f,b
 38660  011388  5162               	movf	(??_USBStallEndpoint+1)& (0+255),w,b
 38661  01138A  2364               	addwfc	(??_USBStallEndpoint+3)& (0+255),f,b
 38662  01138C  90D8               	bcf	status,0,c
 38663  01138E  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 38664  011390  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 38665  011392  90D8               	bcf	status,0,c
 38666  011394  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 38667  011396  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 38668  011398  0E00               	movlw	0
 38669  01139A  2563               	addwf	(??_USBStallEndpoint+2)& (0+255),w,b
 38670  01139C  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 38671  01139E  0E0D               	movlw	13
 38672  0113A0  2164               	addwfc	(??_USBStallEndpoint+3)& (0+255),w,b
 38673  0113A2  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 38674                           
 38675                           ; BSR set to: 0
 38676                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 38677  0113A4  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 38678  0113A8  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 38679  0113AC  0E00               	movlw	0
 38680  0113AE  84DB               	bsf	plusw2,2,c
 38681                           
 38682                           ; BSR set to: 0
 38683                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 38684  0113B0  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 38685  0113B4  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 38686  0113B8  0E00               	movlw	0
 38687  0113BA  8EDB               	bsf	plusw2,7,c
 38688                           
 38689                           ; BSR set to: 0
 38690                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 38691  0113BC  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 38692  0113BE  0D04               	mullw	4
 38693  0113C0  CFF3 F061          	movff	prodl,??_USBStallEndpoint
 38694  0113C4  CFF4 F062          	movff	prodh,??_USBStallEndpoint+1
 38695  0113C8  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 38696  0113CA  0D02               	mullw	2
 38697  0113CC  50F3               	movf	prodl,w,c
 38698  0113CE  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 38699  0113D0  50F4               	movf	prodh,w,c
 38700  0113D2  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 38701  0113D4  90D8               	bcf	status,0,c
 38702  0113D6  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 38703  0113D8  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 38704  0113DA  90D8               	bcf	status,0,c
 38705  0113DC  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 38706  0113DE  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 38707  0113E0  0E04               	movlw	4
 38708  0113E2  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 38709  0113E4  0E00               	movlw	0
 38710  0113E6  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 38711  0113E8  0E00               	movlw	0
 38712  0113EA  2561               	addwf	??_USBStallEndpoint& (0+255),w,b
 38713  0113EC  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 38714  0113EE  0E0D               	movlw	13
 38715  0113F0  2162               	addwfc	(??_USBStallEndpoint+1)& (0+255),w,b
 38716  0113F2  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 38717                           
 38718                           ; BSR set to: 0
 38719                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 38720  0113F4  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 38721  0113F8  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 38722  0113FC  0E00               	movlw	0
 38723  0113FE  84DB               	bsf	plusw2,2,c
 38724                           
 38725                           ; BSR set to: 0
 38726                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 38727  011400  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 38728  011404  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 38729  011408  0E00               	movlw	0
 38730  01140A  8EDB               	bsf	plusw2,7,c
 38731  01140C  0012               	return	
 38732  01140E                     __end_of_USBStallEndpoint:
 38733                           	opt stack 0
 38734                           tosu	equ	0xFFF
 38735                           tosh	equ	0xFFE
 38736                           tosl	equ	0xFFD
 38737                           pclath	equ	0xFFA
 38738                           tblptru	equ	0xFF8
 38739                           tblptrh	equ	0xFF7
 38740                           tblptrl	equ	0xFF6
 38741                           tablat	equ	0xFF5
 38742                           prodh	equ	0xFF4
 38743                           prodl	equ	0xFF3
 38744                           intcon	equ	0xFF2
 38745                           postinc0	equ	0xFEE
 38746                           wreg	equ	0xFE8
 38747                           indf1	equ	0xFE7
 38748                           postinc1	equ	0xFE6
 38749                           postdec1	equ	0xFE5
 38750                           plusw1	equ	0xFE3
 38751                           fsr1h	equ	0xFE2
 38752                           fsr1l	equ	0xFE1
 38753                           indf2	equ	0xFDF
 38754                           postinc2	equ	0xFDE
 38755                           postdec2	equ	0xFDD
 38756                           plusw2	equ	0xFDB
 38757                           fsr2h	equ	0xFDA
 38758                           fsr2l	equ	0xFD9
 38759                           status	equ	0xFD8
 38760                           
 38761 ;; *************** function _ResetSenseData *****************
 38762 ;; Defined at:
 38763 ;;		line 1373 in file "usb_device_msd.c"
 38764 ;; Parameters:    Size  Location     Type
 38765 ;;		None
 38766 ;; Auto vars:     Size  Location     Type
 38767 ;;		None
 38768 ;; Return value:  Size  Location     Type
 38769 ;;                  1    wreg      void 
 38770 ;; Registers used:
 38771 ;;		wreg, status,2
 38772 ;; Tracked objects:
 38773 ;;		On entry : 0/0
 38774 ;;		On exit  : 0/0
 38775 ;;		Unchanged: 0/0
 38776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38781 ;;Total ram usage:        0 bytes
 38782 ;; Hardware stack levels used:    1
 38783 ;; Hardware stack levels required when called:   10
 38784 ;; This function calls:
 38785 ;;		Nothing
 38786 ;; This function is called by:
 38787 ;;		_MSDProcessCommandMediaAbsent
 38788 ;;		_MSDProcessCommandMediaPresent
 38789 ;;		_MSDErrorHandler
 38790 ;; This function uses a non-reentrant model
 38791 ;;
 38792                           
 38793                           	psect	text149
 38794  01481E                     __ptext149:
 38795                           	opt stack 0
 38796  01481E                     _ResetSenseData:
 38797                           	opt stack 16
 38798                           
 38799                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 38800                           
 38801                           ; BSR set to: 0
 38802                           ;incstack = 0
 38803  01481E  0102               	movlb	2	; () banked
 38804  014820  911F               	bcf	_gblSenseData& (0+255),0,b
 38805  014822  931F               	bcf	_gblSenseData& (0+255),1,b
 38806  014824  951F               	bcf	_gblSenseData& (0+255),2,b
 38807  014826  971F               	bcf	_gblSenseData& (0+255),3,b
 38808  014828  891F               	bsf	_gblSenseData& (0+255),4,b
 38809  01482A  8B1F               	bsf	_gblSenseData& (0+255),5,b
 38810  01482C  8D1F               	bsf	_gblSenseData& (0+255),6,b
 38811                           
 38812                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 38813  01482E  9F1F               	bcf	_gblSenseData& (0+255),7,b
 38814                           
 38815                           ; BSR set to: 2
 38816                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 38817  014830  0E00               	movlw	0
 38818  014832  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 38819                           
 38820                           ; BSR set to: 2
 38821                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 38822  014834  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 38823  014836  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 38824  014838  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 38825  01483A  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 38826                           
 38827                           ; BSR set to: 2
 38828                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 38829  01483C  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 38830                           
 38831                           ; BSR set to: 2
 38832                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 38833  01483E  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 38834                           
 38835                           ; BSR set to: 2
 38836                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 38837  014840  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 38838                           
 38839                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 38840  014842  0E00               	movlw	0
 38841  014844  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 38842                           
 38843                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 38844  014846  0E00               	movlw	0
 38845  014848  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 38846                           
 38847                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 38848  01484A  0E00               	movlw	0
 38849  01484C  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 38850                           
 38851                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 38852  01484E  0E00               	movlw	0
 38853  014850  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 38854                           
 38855                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 38856  014852  0E0A               	movlw	10
 38857  014854  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 38858                           
 38859                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 38860  014856  0E00               	movlw	0
 38861  014858  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 38862  01485A  0E00               	movlw	0
 38863  01485C  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 38864  01485E  0E00               	movlw	0
 38865  014860  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 38866  014862  0E00               	movlw	0
 38867  014864  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 38868                           
 38869                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 38870  014866  0E00               	movlw	0
 38871  014868  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 38872                           
 38873                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 38874  01486A  0E00               	movlw	0
 38875  01486C  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 38876                           
 38877                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 38878  01486E  0E00               	movlw	0
 38879  014870  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 38880                           
 38881                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 38882  014872  0E00               	movlw	0
 38883  014874  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 38884                           
 38885                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 38886  014876  0E00               	movlw	0
 38887  014878  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 38888                           
 38889                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 38890  01487A  0E00               	movlw	0
 38891  01487C  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 38892                           
 38893                           ; BSR set to: 2
 38894  01487E  0012               	return		;funcret
 38895  014880                     __end_of_ResetSenseData:
 38896                           	opt stack 0
 38897                           tosu	equ	0xFFF
 38898                           tosh	equ	0xFFE
 38899                           tosl	equ	0xFFD
 38900                           pclath	equ	0xFFA
 38901                           tblptru	equ	0xFF8
 38902                           tblptrh	equ	0xFF7
 38903                           tblptrl	equ	0xFF6
 38904                           tablat	equ	0xFF5
 38905                           prodh	equ	0xFF4
 38906                           prodl	equ	0xFF3
 38907                           intcon	equ	0xFF2
 38908                           postinc0	equ	0xFEE
 38909                           wreg	equ	0xFE8
 38910                           indf1	equ	0xFE7
 38911                           postinc1	equ	0xFE6
 38912                           postdec1	equ	0xFE5
 38913                           plusw1	equ	0xFE3
 38914                           fsr1h	equ	0xFE2
 38915                           fsr1l	equ	0xFE1
 38916                           indf2	equ	0xFDF
 38917                           postinc2	equ	0xFDE
 38918                           postdec2	equ	0xFDD
 38919                           plusw2	equ	0xFDB
 38920                           fsr2h	equ	0xFDA
 38921                           fsr2l	equ	0xFD9
 38922                           status	equ	0xFD8
 38923                           
 38924 ;; *************** function _ExternalFlash_SectorRead *****************
 38925 ;; Defined at:
 38926 ;;		line 40 in file "external_flash.c"
 38927 ;; Parameters:    Size  Location     Type
 38928 ;;  config          2   43[BANK0 ] PTR void 
 38929 ;;		 -> NULL(0), 
 38930 ;;  sector_addr     4   45[BANK0 ] unsigned long 
 38931 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 38932 ;;		 -> msd_buffer(512), 
 38933 ;; Auto vars:     Size  Location     Type
 38934 ;;  page            2   51[BANK0 ] unsigned int 
 38935 ;; Return value:  Size  Location     Type
 38936 ;;                  1    wreg      unsigned char 
 38937 ;; Registers used:
 38938 ;;		wreg, status,2, status,0, cstack
 38939 ;; Tracked objects:
 38940 ;;		On entry : 0/0
 38941 ;;		On exit  : 0/0
 38942 ;;		Unchanged: 0/0
 38943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38944 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38945 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38947 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38948 ;;Total ram usage:       10 bytes
 38949 ;; Hardware stack levels used:    1
 38950 ;; Hardware stack levels required when called:   15
 38951 ;; This function calls:
 38952 ;;		_flash_sector_read
 38953 ;; This function is called by:
 38954 ;;		_MSDReadHandler
 38955 ;; This function uses a non-reentrant model
 38956 ;;
 38957                           
 38958                           	psect	text150
 38959  015890                     __ptext150:
 38960                           	opt stack 0
 38961  015890                     _ExternalFlash_SectorRead:
 38962                           	opt stack 10
 38963                           
 38964                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 38965                           
 38966                           ; BSR set to: 2
 38967                           ;incstack = 0
 38968  015890  C08D  F093         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 38969  015894  C08E  F094         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 38970                           
 38971                           ;external_flash.c: 45: if(sector_addr >= 8192)
 38972  015898  0100               	movlb	0	; () banked
 38973  01589A  5190               	movf	(ExternalFlash_SectorRead@sector_addr+3)& (0+255),w,b
 38974  01589C  118F               	iorwf	(ExternalFlash_SectorRead@sector_addr+2)& (0+255),w,b
 38975  01589E  E104               	bnz	u10810
 38976  0158A0  0E20               	movlw	32
 38977  0158A2  5D8E               	subwf	(ExternalFlash_SectorRead@sector_addr+1)& (0+255),w,b
 38978  0158A4  A0D8               	btfss	status,0,c
 38979  0158A6  D002               	goto	l1696
 38980  0158A8                     u10810:
 38981                           
 38982                           ; BSR set to: 0
 38983                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 38984  0158A8  0E00               	movlw	0
 38985                           
 38986                           ; BSR set to: 0
 38987  0158AA  0012               	return	
 38988  0158AC                     l1696:
 38989                           
 38990                           ; BSR set to: 0
 38991                           ;external_flash.c: 48: };external_flash.c: 51: flash_sector_read(page, buffer);
 38992                           
 38993                           ; BSR set to: 0
 38994  0158AC  C093  F087         	movff	ExternalFlash_SectorRead@page,flash_sector_read@page
 38995  0158B0  C094  F088         	movff	ExternalFlash_SectorRead@page+1,flash_sector_read@page+1
 38996  0158B4  C091  F089         	movff	ExternalFlash_SectorRead@buffer,flash_sector_read@data
 38997  0158B8  C092  F08A         	movff	ExternalFlash_SectorRead@buffer+1,flash_sector_read@data+1
 38998  0158BC  EC12  F0AE         	call	_flash_sector_read	;wreg free
 38999                           
 39000                           ;external_flash.c: 53: return 1;
 39001  0158C0  0E01               	movlw	1
 39002  0158C2  0012               	return	
 39003  0158C4                     __end_of_ExternalFlash_SectorRead:
 39004                           	opt stack 0
 39005                           tosu	equ	0xFFF
 39006                           tosh	equ	0xFFE
 39007                           tosl	equ	0xFFD
 39008                           pclath	equ	0xFFA
 39009                           tblptru	equ	0xFF8
 39010                           tblptrh	equ	0xFF7
 39011                           tblptrl	equ	0xFF6
 39012                           tablat	equ	0xFF5
 39013                           prodh	equ	0xFF4
 39014                           prodl	equ	0xFF3
 39015                           intcon	equ	0xFF2
 39016                           postinc0	equ	0xFEE
 39017                           wreg	equ	0xFE8
 39018                           indf1	equ	0xFE7
 39019                           postinc1	equ	0xFE6
 39020                           postdec1	equ	0xFE5
 39021                           plusw1	equ	0xFE3
 39022                           fsr1h	equ	0xFE2
 39023                           fsr1l	equ	0xFE1
 39024                           indf2	equ	0xFDF
 39025                           postinc2	equ	0xFDE
 39026                           postdec2	equ	0xFDD
 39027                           plusw2	equ	0xFDB
 39028                           fsr2h	equ	0xFDA
 39029                           fsr2l	equ	0xFD9
 39030                           status	equ	0xFD8
 39031                           
 39032 ;; *************** function _flash_sector_read *****************
 39033 ;; Defined at:
 39034 ;;		line 426 in file "flash.c"
 39035 ;; Parameters:    Size  Location     Type
 39036 ;;  page            2   39[BANK0 ] unsigned int 
 39037 ;;  data            2   41[BANK0 ] PTR unsigned char 
 39038 ;;		 -> buffer(512), msd_buffer(512), 
 39039 ;; Auto vars:     Size  Location     Type
 39040 ;;		None
 39041 ;; Return value:  Size  Location     Type
 39042 ;;                  1    wreg      void 
 39043 ;; Registers used:
 39044 ;;		wreg, status,2, status,0, cstack
 39045 ;; Tracked objects:
 39046 ;;		On entry : 0/0
 39047 ;;		On exit  : 0/0
 39048 ;;		Unchanged: 0/0
 39049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39050 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39053 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39054 ;;Total ram usage:        4 bytes
 39055 ;; Hardware stack levels used:    1
 39056 ;; Hardware stack levels required when called:   14
 39057 ;; This function calls:
 39058 ;;		__flash_partial_read
 39059 ;; This function is called by:
 39060 ;;		_ExternalFlash_SectorRead
 39061 ;;		__get_available_cluster
 39062 ;;		__find_nth_cluster
 39063 ;;		__make_cluster_chain
 39064 ;;		_fat_find_file
 39065 ;;		_fat_get_format_status
 39066 ;; This function uses a non-reentrant model
 39067 ;;
 39068                           
 39069                           	psect	text151
 39070  015C24                     __ptext151:
 39071                           	opt stack 0
 39072  015C24                     _flash_sector_read:
 39073                           	opt stack 13
 39074                           
 39075                           ;flash.c: 429: _flash_partial_read(page, 0, 512, data);
 39076                           
 39077                           ;incstack = 0
 39078  015C24  C087  F073         	movff	flash_sector_read@page,__flash_partial_read@page
 39079  015C28  C088  F074         	movff	flash_sector_read@page+1,__flash_partial_read@page+1
 39080  015C2C  0E00               	movlw	0
 39081  015C2E  0100               	movlb	0	; () banked
 39082  015C30  6F76               	movwf	(__flash_partial_read@start+1)& (0+255),b
 39083  015C32  0E00               	movlw	0
 39084  015C34  6F75               	movwf	__flash_partial_read@start& (0+255),b
 39085  015C36  0E02               	movlw	2
 39086  015C38  6F78               	movwf	(__flash_partial_read@length+1)& (0+255),b
 39087  015C3A  0E00               	movlw	0
 39088  015C3C  6F77               	movwf	__flash_partial_read@length& (0+255),b
 39089  015C3E  C089  F079         	movff	flash_sector_read@data,__flash_partial_read@data
 39090  015C42  C08A  F07A         	movff	flash_sector_read@data+1,__flash_partial_read@data+1
 39091  015C46  EC80  F0A1         	call	__flash_partial_read	;wreg free
 39092  015C4A  0012               	return		;funcret
 39093  015C4C                     __end_of_flash_sector_read:
 39094                           	opt stack 0
 39095                           tosu	equ	0xFFF
 39096                           tosh	equ	0xFFE
 39097                           tosl	equ	0xFFD
 39098                           pclath	equ	0xFFA
 39099                           tblptru	equ	0xFF8
 39100                           tblptrh	equ	0xFF7
 39101                           tblptrl	equ	0xFF6
 39102                           tablat	equ	0xFF5
 39103                           prodh	equ	0xFF4
 39104                           prodl	equ	0xFF3
 39105                           intcon	equ	0xFF2
 39106                           postinc0	equ	0xFEE
 39107                           wreg	equ	0xFE8
 39108                           indf1	equ	0xFE7
 39109                           postinc1	equ	0xFE6
 39110                           postdec1	equ	0xFE5
 39111                           plusw1	equ	0xFE3
 39112                           fsr1h	equ	0xFE2
 39113                           fsr1l	equ	0xFE1
 39114                           indf2	equ	0xFDF
 39115                           postinc2	equ	0xFDE
 39116                           postdec2	equ	0xFDD
 39117                           plusw2	equ	0xFDB
 39118                           fsr2h	equ	0xFDA
 39119                           fsr2l	equ	0xFD9
 39120                           status	equ	0xFD8
 39121                           
 39122 ;; *************** function __flash_partial_read *****************
 39123 ;; Defined at:
 39124 ;;		line 309 in file "flash.c"
 39125 ;; Parameters:    Size  Location     Type
 39126 ;;  page            2   19[BANK0 ] unsigned int 
 39127 ;;  start           2   21[BANK0 ] unsigned int 
 39128 ;;  length          2   23[BANK0 ] unsigned int 
 39129 ;;  data            2   25[BANK0 ] PTR unsigned char 
 39130 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 39131 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 39132 ;;		 -> _root_is_available@first_byte(1), buffer(512), msd_buffer(512), 
 39133 ;; Auto vars:     Size  Location     Type
 39134 ;;  command         4   31[BANK0 ] unsigned char [4]
 39135 ;;  address         4   35[BANK0 ] unsigned long 
 39136 ;; Return value:  Size  Location     Type
 39137 ;;                  1    wreg      void 
 39138 ;; Registers used:
 39139 ;;		wreg, status,2, status,0, cstack
 39140 ;; Tracked objects:
 39141 ;;		On entry : 0/0
 39142 ;;		On exit  : 0/0
 39143 ;;		Unchanged: 0/0
 39144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39145 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39146 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39147 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39148 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39149 ;;Total ram usage:       20 bytes
 39150 ;; Hardware stack levels used:    1
 39151 ;; Hardware stack levels required when called:   13
 39152 ;; This function calls:
 39153 ;;		__flash_is_busy
 39154 ;;		_spi_tx_rx
 39155 ;; This function is called by:
 39156 ;;		_flash_sector_read
 39157 ;;		_flash_partial_read
 39158 ;; This function uses a non-reentrant model
 39159 ;;
 39160                           
 39161                           	psect	text152
 39162  014300                     __ptext152:
 39163                           	opt stack 0
 39164  014300                     __flash_partial_read:
 39165                           	opt stack 13
 39166                           
 39167                           ;flash.c: 311: uint32_t address;;flash.c: 312: uint8_t command[4];;flash.c: 315: while(_
      +                          flash_is_busy());
 39168                           
 39169                           ;incstack = 0
 39170  014300  EC70  F0AE         	call	__flash_is_busy	;wreg free
 39171  014304  0900               	iorlw	0
 39172  014306  A4D8               	btfss	status,2,c
 39173  014308  D7FB               	goto	__flash_partial_read
 39174                           
 39175                           ;flash.c: 318: address = page;
 39176  01430A  C073  F083         	movff	__flash_partial_read@page,__flash_partial_read@address
 39177  01430E  C074  F084         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 39178  014312  0100               	movlb	0	; () banked
 39179  014314  6B85               	clrf	(__flash_partial_read@address+2)& (0+255),b
 39180  014316  6B86               	clrf	(__flash_partial_read@address+3)& (0+255),b
 39181                           
 39182                           ; BSR set to: 0
 39183                           ;flash.c: 319: address <<= 9;
 39184  014318  0E09               	movlw	9
 39185  01431A                     u10235:
 39186  01431A  90D8               	bcf	status,0,c
 39187  01431C  3783               	rlcf	__flash_partial_read@address& (0+255),f,b
 39188  01431E  3784               	rlcf	(__flash_partial_read@address+1)& (0+255),f,b
 39189  014320  3785               	rlcf	(__flash_partial_read@address+2)& (0+255),f,b
 39190  014322  3786               	rlcf	(__flash_partial_read@address+3)& (0+255),f,b
 39191  014324  2EE8               	decfsz	wreg,f,c
 39192  014326  D7F9               	goto	u10235
 39193                           
 39194                           ; BSR set to: 0
 39195                           ;flash.c: 320: address |= start;
 39196  014328  5175               	movf	__flash_partial_read@start& (0+255),w,b
 39197  01432A  6F7B               	movwf	??__flash_partial_read& (0+255),b
 39198  01432C  5176               	movf	(__flash_partial_read@start+1)& (0+255),w,b
 39199  01432E  6F7C               	movwf	(??__flash_partial_read+1)& (0+255),b
 39200  014330  6B7D               	clrf	(??__flash_partial_read+2)& (0+255),b
 39201  014332  6B7E               	clrf	(??__flash_partial_read+3)& (0+255),b
 39202  014334  517B               	movf	??__flash_partial_read& (0+255),w,b
 39203  014336  1383               	iorwf	__flash_partial_read@address& (0+255),f,b
 39204  014338  517C               	movf	(??__flash_partial_read+1)& (0+255),w,b
 39205  01433A  1384               	iorwf	(__flash_partial_read@address+1)& (0+255),f,b
 39206  01433C  517D               	movf	(??__flash_partial_read+2)& (0+255),w,b
 39207  01433E  1385               	iorwf	(__flash_partial_read@address+2)& (0+255),f,b
 39208  014340  517E               	movf	(??__flash_partial_read+3)& (0+255),w,b
 39209  014342  1386               	iorwf	(__flash_partial_read@address+3)& (0+255),f,b
 39210                           
 39211                           ; BSR set to: 0
 39212                           ;flash.c: 323: command[0] = 0x03;
 39213  014344  0E03               	movlw	3
 39214  014346  6F7F               	movwf	__flash_partial_read@command& (0+255),b
 39215                           
 39216                           ; BSR set to: 0
 39217                           ;flash.c: 324: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 39218  014348  C085  F080         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 39219                           
 39220                           ; BSR set to: 0
 39221                           ;flash.c: 325: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 39222  01434C  5184               	movf	(__flash_partial_read@address+1)& (0+255),w,b
 39223  01434E  6F81               	movwf	(__flash_partial_read@command+2)& (0+255),b
 39224                           
 39225                           ; BSR set to: 0
 39226                           ;flash.c: 326: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 39227  014350  C083  F082         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 39228                           
 39229                           ; BSR set to: 0
 39230                           ;flash.c: 329: spi_tx_rx(command, 4, data, length);
 39231  014354  0E7F               	movlw	low __flash_partial_read@command
 39232  014356  6F60               	movwf	spi_tx_rx@command& (0+255),b
 39233  014358  0E00               	movlw	high __flash_partial_read@command
 39234  01435A  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 39235  01435C  0E00               	movlw	0
 39236  01435E  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 39237  014360  0E04               	movlw	4
 39238  014362  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 39239  014364  C079  F064         	movff	__flash_partial_read@data,spi_tx_rx@data
 39240  014368  C07A  F065         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 39241  01436C  C077  F066         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 39242  014370  C078  F067         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 39243  014374  EC65  F09C         	call	_spi_tx_rx	;wreg free
 39244  014378  0012               	return		;funcret
 39245  01437A                     __end_of__flash_partial_read:
 39246                           	opt stack 0
 39247                           tosu	equ	0xFFF
 39248                           tosh	equ	0xFFE
 39249                           tosl	equ	0xFFD
 39250                           pclath	equ	0xFFA
 39251                           tblptru	equ	0xFF8
 39252                           tblptrh	equ	0xFF7
 39253                           tblptrl	equ	0xFF6
 39254                           tablat	equ	0xFF5
 39255                           prodh	equ	0xFF4
 39256                           prodl	equ	0xFF3
 39257                           intcon	equ	0xFF2
 39258                           postinc0	equ	0xFEE
 39259                           wreg	equ	0xFE8
 39260                           indf1	equ	0xFE7
 39261                           postinc1	equ	0xFE6
 39262                           postdec1	equ	0xFE5
 39263                           plusw1	equ	0xFE3
 39264                           fsr1h	equ	0xFE2
 39265                           fsr1l	equ	0xFE1
 39266                           indf2	equ	0xFDF
 39267                           postinc2	equ	0xFDE
 39268                           postdec2	equ	0xFDD
 39269                           plusw2	equ	0xFDB
 39270                           fsr2h	equ	0xFDA
 39271                           fsr2l	equ	0xFD9
 39272                           status	equ	0xFD8
 39273                           
 39274 ;; *************** function __flash_is_busy *****************
 39275 ;; Defined at:
 39276 ;;		line 281 in file "flash.c"
 39277 ;; Parameters:    Size  Location     Type
 39278 ;;		None
 39279 ;; Auto vars:     Size  Location     Type
 39280 ;;  status          2   17[BANK0 ] unsigned int 
 39281 ;; Return value:  Size  Location     Type
 39282 ;;                  1    wreg      unsigned char 
 39283 ;; Registers used:
 39284 ;;		wreg, status,2, status,0, cstack
 39285 ;; Tracked objects:
 39286 ;;		On entry : 0/0
 39287 ;;		On exit  : 0/0
 39288 ;;		Unchanged: 0/0
 39289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39291 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39293 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39294 ;;Total ram usage:        2 bytes
 39295 ;; Hardware stack levels used:    1
 39296 ;; Hardware stack levels required when called:   12
 39297 ;; This function calls:
 39298 ;;		__flash_get_status
 39299 ;;		__flash_wakeup
 39300 ;; This function is called by:
 39301 ;;		__flash_set_page_size
 39302 ;;		__flash_copy_page_to_buffer
 39303 ;;		__flash_compare_page_to_buffer
 39304 ;;		__flash_write_to_buffer
 39305 ;;		__flash_write_page_from_buffer
 39306 ;;		__flash_partial_read
 39307 ;;		_flash_partial_write
 39308 ;;		__flash_erase_page
 39309 ;;		__flash_buffer_read
 39310 ;;		_flash_is_busy
 39311 ;;		_flash_set_power_state
 39312 ;; This function uses a non-reentrant model
 39313 ;;
 39314                           
 39315                           	psect	text153
 39316  015CE0                     __ptext153:
 39317                           	opt stack 0
 39318  015CE0                     __flash_is_busy:
 39319                           	opt stack 15
 39320                           
 39321                           ;flash.c: 283: uint16_t status;;flash.c: 286: if(power_state!=FLASH_POWER_STATE_NORMAL)
 39322                           
 39323                           ;incstack = 0
 39324  015CE0  0101               	movlb	1	; () banked
 39325  015CE2  514D               	movf	_power_state& (0+255),w,b
 39326  015CE4  A4D8               	btfss	status,2,c
 39327                           
 39328                           ; BSR set to: 1
 39329                           ;flash.c: 287: {;flash.c: 288: _flash_wakeup();
 39330  015CE6  EC95  F0A6         	call	__flash_wakeup	;wreg free
 39331                           
 39332                           ;flash.c: 289: };flash.c: 292: status = _flash_get_status();
 39333  015CEA  EC62  F0AC         	call	__flash_get_status	;wreg free
 39334  015CEE  C06C  F071         	movff	?__flash_get_status,__flash_is_busy@status
 39335  015CF2  C06D  F072         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 39336                           
 39337                           ;flash.c: 295: if(status & 0b0000000010000000)
 39338  015CF6  0100               	movlb	0	; () banked
 39339  015CF8  AF71               	btfss	__flash_is_busy@status& (0+255),7,b
 39340  015CFA  D002               	goto	l1600
 39341                           
 39342                           ; BSR set to: 0
 39343                           ;flash.c: 296: {;flash.c: 298: return 0;
 39344  015CFC  0E00               	movlw	0
 39345                           
 39346                           ; BSR set to: 0
 39347                           ;flash.c: 299: }
 39348                           
 39349                           ; BSR set to: 0
 39350  015CFE  0012               	return	
 39351  015D00                     l1600:
 39352                           
 39353                           ; BSR set to: 0
 39354                           ;flash.c: 300: else;flash.c: 301: {;flash.c: 303: return 1;
 39355                           
 39356                           ; BSR set to: 0
 39357  015D00  0E01               	movlw	1
 39358                           
 39359                           ; BSR set to: 0
 39360  015D02  0012               	return	
 39361  015D04                     __end_of__flash_is_busy:
 39362                           	opt stack 0
 39363                           tosu	equ	0xFFF
 39364                           tosh	equ	0xFFE
 39365                           tosl	equ	0xFFD
 39366                           pclath	equ	0xFFA
 39367                           tblptru	equ	0xFF8
 39368                           tblptrh	equ	0xFF7
 39369                           tblptrl	equ	0xFF6
 39370                           tablat	equ	0xFF5
 39371                           prodh	equ	0xFF4
 39372                           prodl	equ	0xFF3
 39373                           intcon	equ	0xFF2
 39374                           postinc0	equ	0xFEE
 39375                           wreg	equ	0xFE8
 39376                           indf1	equ	0xFE7
 39377                           postinc1	equ	0xFE6
 39378                           postdec1	equ	0xFE5
 39379                           plusw1	equ	0xFE3
 39380                           fsr1h	equ	0xFE2
 39381                           fsr1l	equ	0xFE1
 39382                           indf2	equ	0xFDF
 39383                           postinc2	equ	0xFDE
 39384                           postdec2	equ	0xFDD
 39385                           plusw2	equ	0xFDB
 39386                           fsr2h	equ	0xFDA
 39387                           fsr2l	equ	0xFD9
 39388                           status	equ	0xFD8
 39389                           
 39390 ;; *************** function __flash_wakeup *****************
 39391 ;; Defined at:
 39392 ;;		line 128 in file "flash.c"
 39393 ;; Parameters:    Size  Location     Type
 39394 ;;		None
 39395 ;; Auto vars:     Size  Location     Type
 39396 ;;  command         1    8[BANK0 ] unsigned char 
 39397 ;; Return value:  Size  Location     Type
 39398 ;;                  1    wreg      void 
 39399 ;; Registers used:
 39400 ;;		wreg, status,2, status,0, cstack
 39401 ;; Tracked objects:
 39402 ;;		On entry : 0/0
 39403 ;;		On exit  : 0/0
 39404 ;;		Unchanged: 0/0
 39405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39407 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39409 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39410 ;;Total ram usage:        1 bytes
 39411 ;; Hardware stack levels used:    1
 39412 ;; Hardware stack levels required when called:   11
 39413 ;; This function calls:
 39414 ;;		_spi_tx
 39415 ;; This function is called by:
 39416 ;;		__flash_is_busy
 39417 ;;		_flash_set_power_state
 39418 ;; This function uses a non-reentrant model
 39419 ;;
 39420                           
 39421                           	psect	text154
 39422  014D2A                     __ptext154:
 39423                           	opt stack 0
 39424  014D2A                     __flash_wakeup:
 39425                           	opt stack 15
 39426                           
 39427                           ;flash.c: 130: uint8_t command;;flash.c: 132: switch(power_state)
 39428                           
 39429                           ; BSR set to: 0
 39430                           ;incstack = 0
 39431  014D2A  D022               	goto	l1549
 39432  014D2C                     
 39433                           ;flash.c: 135: command = 0xAB;
 39434  014D2C  0EAB               	movlw	171
 39435  014D2E  0100               	movlb	0	; () banked
 39436  014D30  6F68               	movwf	__flash_wakeup@command& (0+255),b
 39437                           
 39438                           ; BSR set to: 0
 39439                           ;flash.c: 136: spi_tx(&command, 1);
 39440  014D32  0E68               	movlw	low __flash_wakeup@command
 39441  014D34  6F60               	movwf	spi_tx@data& (0+255),b
 39442  014D36  0E00               	movlw	high __flash_wakeup@command
 39443  014D38  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 39444  014D3A  0E00               	movlw	0
 39445  014D3C  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 39446  014D3E  0E01               	movlw	1
 39447  014D40  6F62               	movwf	spi_tx@length& (0+255),b
 39448  014D42  EC10  F0A6         	call	_spi_tx	;wreg free
 39449                           
 39450                           ;flash.c: 137: _delay((unsigned long)((35)*(8000000/4000000.0)));
 39451  014D46  0E17               	movlw	23
 39452  014D48                     u19987:
 39453  014D48  2EE8               	decfsz	wreg,f,c
 39454  014D4A  D7FE               	bra	u19987
 39455  014D4C  F000               	nop	
 39456                           
 39457                           ;flash.c: 138: power_state = FLASH_POWER_STATE_NORMAL;
 39458  014D4E  0E00               	movlw	0
 39459  014D50  0101               	movlb	1	; () banked
 39460  014D52  6F4D               	movwf	_power_state& (0+255),b
 39461                           
 39462                           ;flash.c: 139: break;
 39463  014D54  0012               	return	
 39464  014D56                     l1552:
 39465                           
 39466                           ; BSR set to: 1
 39467                           ;flash.c: 144: LATDbits.LD7 = 0;
 39468  014D56  9E8C               	bcf	3980,7,c	;volatile
 39469                           
 39470                           ; BSR set to: 1
 39471                           ;flash.c: 145: _delay((unsigned long)((20)*(8000000/4000000.0)));
 39472  014D58  0E0D               	movlw	13
 39473  014D5A                     u19997:
 39474  014D5A  2EE8               	decfsz	wreg,f,c
 39475  014D5C  D7FE               	bra	u19997
 39476  014D5E  F000               	nop	
 39477                           
 39478                           ;flash.c: 146: LATDbits.LD7 = 1;
 39479  014D60  8E8C               	bsf	3980,7,c	;volatile
 39480                           
 39481                           ;flash.c: 147: _delay((unsigned long)((120)*(8000000/4000000.0)));
 39482  014D62  0E50               	movlw	80
 39483  014D64                     u20007:
 39484  014D64  2EE8               	decfsz	wreg,f,c
 39485  014D66  D7FE               	bra	u20007
 39486                           
 39487                           ;flash.c: 148: power_state = FLASH_POWER_STATE_NORMAL;
 39488  014D68  0E00               	movlw	0
 39489  014D6A  0101               	movlb	1	; () banked
 39490  014D6C  6F4D               	movwf	_power_state& (0+255),b
 39491                           
 39492                           ; BSR set to: 1
 39493                           ;flash.c: 150: }
 39494                           
 39495                           ;flash.c: 149: break;
 39496  014D6E  0012               	return	
 39497  014D70                     l1549:
 39498                           
 39499                           ; BSR set to: 1
 39500  014D70  0101               	movlb	1	; () banked
 39501  014D72  514D               	movf	_power_state& (0+255),w,b
 39502                           
 39503                           ; Switch size 1, requested type "space"
 39504                           ; Number of cases is 2, Range of values is 1 to 2
 39505                           ; switch strategies available:
 39506                           ; Name         Instructions Cycles
 39507                           ; simple_byte            7     4 (average)
 39508                           ;	Chosen strategy is simple_byte
 39509  014D74  0A01               	xorlw	1	; case 1
 39510  014D76  B4D8               	btfsc	status,2,c
 39511  014D78  D7D9               	goto	l1550
 39512  014D7A  0A03               	xorlw	3	; case 2
 39513  014D7C  A4D8               	btfss	status,2,c
 39514  014D7E  0012               	return	
 39515  014D80  D7EA               	goto	l1552
 39516  014D82                     __end_of__flash_wakeup:
 39517                           	opt stack 0
 39518                           tosu	equ	0xFFF
 39519                           tosh	equ	0xFFE
 39520                           tosl	equ	0xFFD
 39521                           pclath	equ	0xFFA
 39522                           tblptru	equ	0xFF8
 39523                           tblptrh	equ	0xFF7
 39524                           tblptrl	equ	0xFF6
 39525                           tablat	equ	0xFF5
 39526                           prodh	equ	0xFF4
 39527                           prodl	equ	0xFF3
 39528                           intcon	equ	0xFF2
 39529                           postinc0	equ	0xFEE
 39530                           wreg	equ	0xFE8
 39531                           indf1	equ	0xFE7
 39532                           postinc1	equ	0xFE6
 39533                           postdec1	equ	0xFE5
 39534                           plusw1	equ	0xFE3
 39535                           fsr1h	equ	0xFE2
 39536                           fsr1l	equ	0xFE1
 39537                           indf2	equ	0xFDF
 39538                           postinc2	equ	0xFDE
 39539                           postdec2	equ	0xFDD
 39540                           plusw2	equ	0xFDB
 39541                           fsr2h	equ	0xFDA
 39542                           fsr2l	equ	0xFD9
 39543                           status	equ	0xFD8
 39544                           
 39545 ;; *************** function _spi_tx *****************
 39546 ;; Defined at:
 39547 ;;		line 108 in file "spi.c"
 39548 ;; Parameters:    Size  Location     Type
 39549 ;;  data            2    0[BANK0 ] PTR unsigned char 
 39550 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 39551 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 39552 ;;  length          2    2[BANK0 ] unsigned int 
 39553 ;; Auto vars:     Size  Location     Type
 39554 ;;		None
 39555 ;; Return value:  Size  Location     Type
 39556 ;;                  1    wreg      void 
 39557 ;; Registers used:
 39558 ;;		wreg, status,2, status,0
 39559 ;; Tracked objects:
 39560 ;;		On entry : 0/0
 39561 ;;		On exit  : 0/0
 39562 ;;		Unchanged: 0/0
 39563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39564 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39566 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39567 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39568 ;;Total ram usage:        8 bytes
 39569 ;; Hardware stack levels used:    1
 39570 ;; Hardware stack levels required when called:   10
 39571 ;; This function calls:
 39572 ;;		Nothing
 39573 ;; This function is called by:
 39574 ;;		__flash_set_page_size
 39575 ;;		__flash_wakeup
 39576 ;;		__flash_copy_page_to_buffer
 39577 ;;		__flash_compare_page_to_buffer
 39578 ;;		__flash_write_page_from_buffer
 39579 ;;		__flash_erase_page
 39580 ;;		_flash_set_power_state
 39581 ;; This function uses a non-reentrant model
 39582 ;;
 39583                           
 39584                           	psect	text155
 39585  014C20                     __ptext155:
 39586                           	opt stack 0
 39587  014C20                     _spi_tx:
 39588                           	opt stack 17
 39589                           
 39590                           ;spi.c: 111: DMACON1bits.SSCON1 = 0;
 39591                           
 39592                           ; BSR set to: 1
 39593                           ;incstack = 0
 39594  014C20  9E88               	bcf	3976,7,c	;volatile
 39595                           
 39596                           ;spi.c: 112: DMACON1bits.SSCON0 = 0;
 39597  014C22  9C88               	bcf	3976,6,c	;volatile
 39598                           
 39599                           ;spi.c: 114: DMACON1bits.TXINC = 1;
 39600  014C24  8A88               	bsf	3976,5,c	;volatile
 39601                           
 39602                           ;spi.c: 116: DMACON1bits.RXINC = 0;
 39603  014C26  9888               	bcf	3976,4,c	;volatile
 39604                           
 39605                           ;spi.c: 118: DMACON1bits.DUPLEX1 = 0;
 39606  014C28  9688               	bcf	3976,3,c	;volatile
 39607                           
 39608                           ;spi.c: 119: DMACON1bits.DUPLEX0 = 1;
 39609  014C2A  8488               	bsf	3976,2,c	;volatile
 39610                           
 39611                           ;spi.c: 121: DMACON1bits.DLYINTEN = 0;
 39612  014C2C  9288               	bcf	3976,1,c	;volatile
 39613                           
 39614                           ;spi.c: 123: DMACON2bits.DLYCYC = 0b0000;
 39615  014C2E  9886               	bcf	3974,4,c	;volatile
 39616  014C30  9A86               	bcf	3974,5,c	;volatile
 39617  014C32  9C86               	bcf	3974,6,c	;volatile
 39618  014C34  9E86               	bcf	3974,7,c	;volatile
 39619                           
 39620                           ;spi.c: 125: DMACON2bits.INTLVL = 0b0000;
 39621  014C36  9086               	bcf	3974,0,c	;volatile
 39622  014C38  9286               	bcf	3974,1,c	;volatile
 39623  014C3A  9486               	bcf	3974,2,c	;volatile
 39624  014C3C  9686               	bcf	3974,3,c	;volatile
 39625                           
 39626                           ;spi.c: 128: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 39627  014C3E  0100               	movlb	0	; () banked
 39628  014C40  5161               	movf	(spi_tx@data+1)& (0+255),w,b
 39629  014C42  6E6A               	movwf	3946,c	;volatile
 39630                           
 39631                           ; BSR set to: 0
 39632                           ;spi.c: 129: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 39633  014C44  C060  FF6B         	movff	spi_tx@data,3947	;volatile
 39634                           
 39635                           ; BSR set to: 0
 39636                           ;spi.c: 132: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 39637  014C48  0EFF               	movlw	255
 39638  014C4A  6F64               	movwf	??_spi_tx& (0+255),b
 39639  014C4C  0EFF               	movlw	255
 39640  014C4E  6F65               	movwf	(??_spi_tx+1)& (0+255),b
 39641  014C50  C062  F066         	movff	spi_tx@length,??_spi_tx+2
 39642  014C54  C063  F067         	movff	spi_tx@length+1,??_spi_tx+3
 39643  014C58  5164               	movf	??_spi_tx& (0+255),w,b
 39644  014C5A  2766               	addwf	(??_spi_tx+2)& (0+255),f,b
 39645  014C5C  5165               	movf	(??_spi_tx+1)& (0+255),w,b
 39646  014C5E  2367               	addwfc	(??_spi_tx+3)& (0+255),f,b
 39647  014C60  C067  F066         	movff	??_spi_tx+3,??_spi_tx+2
 39648  014C64  6B67               	clrf	(??_spi_tx+3)& (0+255),b
 39649  014C66  5166               	movf	(??_spi_tx+2)& (0+255),w,b
 39650  014C68  6E66               	movwf	3942,c	;volatile
 39651                           
 39652                           ; BSR set to: 0
 39653                           ;spi.c: 133: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 39654  014C6A  0562               	decf	spi_tx@length& (0+255),w,b
 39655  014C6C  6E67               	movwf	3943,c	;volatile
 39656                           
 39657                           ; BSR set to: 0
 39658                           ;spi.c: 136: LATDbits.LD7 = 0;
 39659  014C6E  9E8C               	bcf	3980,7,c	;volatile
 39660                           
 39661                           ; BSR set to: 0
 39662                           ;spi.c: 137: DMACON1bits.DMAEN = 1;
 39663  014C70  8088               	bsf	3976,0,c	;volatile
 39664  014C72                     
 39665                           ; BSR set to: 0
 39666  014C72  B088               	btfsc	3976,0,c	;volatile
 39667  014C74  D7FE               	goto	l2196
 39668                           
 39669                           ;spi.c: 139: LATDbits.LD7 = 1;
 39670  014C76  8E8C               	bsf	3980,7,c	;volatile
 39671  014C78  0012               	return		;funcret
 39672  014C7A                     __end_of_spi_tx:
 39673                           	opt stack 0
 39674                           tosu	equ	0xFFF
 39675                           tosh	equ	0xFFE
 39676                           tosl	equ	0xFFD
 39677                           pclath	equ	0xFFA
 39678                           tblptru	equ	0xFF8
 39679                           tblptrh	equ	0xFF7
 39680                           tblptrl	equ	0xFF6
 39681                           tablat	equ	0xFF5
 39682                           prodh	equ	0xFF4
 39683                           prodl	equ	0xFF3
 39684                           intcon	equ	0xFF2
 39685                           postinc0	equ	0xFEE
 39686                           wreg	equ	0xFE8
 39687                           indf1	equ	0xFE7
 39688                           postinc1	equ	0xFE6
 39689                           postdec1	equ	0xFE5
 39690                           plusw1	equ	0xFE3
 39691                           fsr1h	equ	0xFE2
 39692                           fsr1l	equ	0xFE1
 39693                           indf2	equ	0xFDF
 39694                           postinc2	equ	0xFDE
 39695                           postdec2	equ	0xFDD
 39696                           plusw2	equ	0xFDB
 39697                           fsr2h	equ	0xFDA
 39698                           fsr2l	equ	0xFD9
 39699                           status	equ	0xFD8
 39700                           
 39701 ;; *************** function __flash_get_status *****************
 39702 ;; Defined at:
 39703 ;;		line 117 in file "flash.c"
 39704 ;; Parameters:    Size  Location     Type
 39705 ;;		None
 39706 ;; Auto vars:     Size  Location     Type
 39707 ;;  status          2   15[BANK0 ] unsigned int 
 39708 ;;  command         1   14[BANK0 ] unsigned char 
 39709 ;; Return value:  Size  Location     Type
 39710 ;;                  2   12[BANK0 ] unsigned int 
 39711 ;; Registers used:
 39712 ;;		wreg, status,2, status,0, cstack
 39713 ;; Tracked objects:
 39714 ;;		On entry : 0/0
 39715 ;;		On exit  : 0/0
 39716 ;;		Unchanged: 0/0
 39717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39718 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39719 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39721 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39722 ;;Total ram usage:        5 bytes
 39723 ;; Hardware stack levels used:    1
 39724 ;; Hardware stack levels required when called:   11
 39725 ;; This function calls:
 39726 ;;		_spi_tx_rx
 39727 ;; This function is called by:
 39728 ;;		__flash_compare_page_to_buffer
 39729 ;;		__flash_is_busy
 39730 ;; This function uses a non-reentrant model
 39731 ;;
 39732                           
 39733                           	psect	text156
 39734  0158C4                     __ptext156:
 39735                           	opt stack 0
 39736  0158C4                     __flash_get_status:
 39737                           	opt stack 15
 39738                           
 39739                           ;flash.c: 121: uint8_t command = 0xD7;
 39740                           
 39741                           ;incstack = 0
 39742  0158C4  0ED7               	movlw	215
 39743  0158C6  0100               	movlb	0	; () banked
 39744  0158C8  6F6E               	movwf	__flash_get_status@command& (0+255),b
 39745                           
 39746                           ; BSR set to: 0
 39747                           ;flash.c: 122: uint16_t status;;flash.c: 123: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 39748  0158CA  0E6E               	movlw	low __flash_get_status@command
 39749  0158CC  6F60               	movwf	spi_tx_rx@command& (0+255),b
 39750  0158CE  0E00               	movlw	high __flash_get_status@command
 39751  0158D0  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 39752  0158D2  0E00               	movlw	0
 39753  0158D4  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 39754  0158D6  0E01               	movlw	1
 39755  0158D8  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 39756  0158DA  0E6F               	movlw	low __flash_get_status@status
 39757  0158DC  6F64               	movwf	spi_tx_rx@data& (0+255),b
 39758  0158DE  0E00               	movlw	high __flash_get_status@status
 39759  0158E0  6F65               	movwf	(spi_tx_rx@data+1)& (0+255),b
 39760  0158E2  0E00               	movlw	0
 39761  0158E4  6F67               	movwf	(spi_tx_rx@data_length+1)& (0+255),b
 39762  0158E6  0E02               	movlw	2
 39763  0158E8  6F66               	movwf	spi_tx_rx@data_length& (0+255),b
 39764  0158EA  EC65  F09C         	call	_spi_tx_rx	;wreg free
 39765                           
 39766                           ;flash.c: 124: return status;
 39767  0158EE  C06F  F06C         	movff	__flash_get_status@status,?__flash_get_status
 39768  0158F2  C070  F06D         	movff	__flash_get_status@status+1,?__flash_get_status+1
 39769  0158F6  0012               	return	
 39770  0158F8                     __end_of__flash_get_status:
 39771                           	opt stack 0
 39772                           tosu	equ	0xFFF
 39773                           tosh	equ	0xFFE
 39774                           tosl	equ	0xFFD
 39775                           pclath	equ	0xFFA
 39776                           tblptru	equ	0xFF8
 39777                           tblptrh	equ	0xFF7
 39778                           tblptrl	equ	0xFF6
 39779                           tablat	equ	0xFF5
 39780                           prodh	equ	0xFF4
 39781                           prodl	equ	0xFF3
 39782                           intcon	equ	0xFF2
 39783                           postinc0	equ	0xFEE
 39784                           wreg	equ	0xFE8
 39785                           indf1	equ	0xFE7
 39786                           postinc1	equ	0xFE6
 39787                           postdec1	equ	0xFE5
 39788                           plusw1	equ	0xFE3
 39789                           fsr1h	equ	0xFE2
 39790                           fsr1l	equ	0xFE1
 39791                           indf2	equ	0xFDF
 39792                           postinc2	equ	0xFDE
 39793                           postdec2	equ	0xFDD
 39794                           plusw2	equ	0xFDB
 39795                           fsr2h	equ	0xFDA
 39796                           fsr2l	equ	0xFD9
 39797                           status	equ	0xFD8
 39798                           
 39799 ;; *************** function _spi_tx_rx *****************
 39800 ;; Defined at:
 39801 ;;		line 199 in file "spi.c"
 39802 ;; Parameters:    Size  Location     Type
 39803 ;;  command         2    0[BANK0 ] PTR unsigned char 
 39804 ;;		 -> _flash_buffer_read@command(4), _flash_partial_read@command(4), _flash_get_status@command(1), 
 39805 ;;  command_leng    2    2[BANK0 ] unsigned int 
 39806 ;;  data            2    4[BANK0 ] PTR unsigned char 
 39807 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 39808 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 39809 ;;		 -> _root_is_available@first_byte(1), buffer(512), _flash_get_status@status(2), msd_buffer(512), 
 39810 ;;  data_length     2    6[BANK0 ] unsigned int 
 39811 ;; Auto vars:     Size  Location     Type
 39812 ;;		None
 39813 ;; Return value:  Size  Location     Type
 39814 ;;                  1    wreg      void 
 39815 ;; Registers used:
 39816 ;;		wreg, status,2, status,0
 39817 ;; Tracked objects:
 39818 ;;		On entry : 0/0
 39819 ;;		On exit  : 0/0
 39820 ;;		Unchanged: 0/0
 39821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39822 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39824 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39825 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39826 ;;Total ram usage:       12 bytes
 39827 ;; Hardware stack levels used:    1
 39828 ;; Hardware stack levels required when called:   10
 39829 ;; This function calls:
 39830 ;;		Nothing
 39831 ;; This function is called by:
 39832 ;;		__flash_get_status
 39833 ;;		__flash_partial_read
 39834 ;;		__flash_buffer_read
 39835 ;; This function uses a non-reentrant model
 39836 ;;
 39837                           
 39838                           	psect	text157
 39839  0138CA                     __ptext157:
 39840                           	opt stack 0
 39841  0138CA                     _spi_tx_rx:
 39842                           	opt stack 15
 39843                           
 39844                           ;spi.c: 202: DMACON1bits.SSCON1 = 0;
 39845                           
 39846                           ;incstack = 0
 39847  0138CA  9E88               	bcf	3976,7,c	;volatile
 39848                           
 39849                           ;spi.c: 203: DMACON1bits.SSCON0 = 0;
 39850  0138CC  9C88               	bcf	3976,6,c	;volatile
 39851                           
 39852                           ;spi.c: 205: DMACON1bits.TXINC = 1;
 39853  0138CE  8A88               	bsf	3976,5,c	;volatile
 39854                           
 39855                           ;spi.c: 207: DMACON1bits.RXINC = 0;
 39856  0138D0  9888               	bcf	3976,4,c	;volatile
 39857                           
 39858                           ;spi.c: 209: DMACON1bits.DUPLEX1 = 0;
 39859  0138D2  9688               	bcf	3976,3,c	;volatile
 39860                           
 39861                           ;spi.c: 210: DMACON1bits.DUPLEX0 = 1;
 39862  0138D4  8488               	bsf	3976,2,c	;volatile
 39863                           
 39864                           ;spi.c: 212: DMACON1bits.DLYINTEN = 0;
 39865  0138D6  9288               	bcf	3976,1,c	;volatile
 39866                           
 39867                           ;spi.c: 214: DMACON2bits.DLYCYC = 0b0000;
 39868  0138D8  9886               	bcf	3974,4,c	;volatile
 39869  0138DA  9A86               	bcf	3974,5,c	;volatile
 39870  0138DC  9C86               	bcf	3974,6,c	;volatile
 39871  0138DE  9E86               	bcf	3974,7,c	;volatile
 39872                           
 39873                           ;spi.c: 216: DMACON2bits.INTLVL = 0b0000;
 39874  0138E0  9086               	bcf	3974,0,c	;volatile
 39875  0138E2  9286               	bcf	3974,1,c	;volatile
 39876  0138E4  9486               	bcf	3974,2,c	;volatile
 39877  0138E6  9686               	bcf	3974,3,c	;volatile
 39878                           
 39879                           ;spi.c: 219: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 39880  0138E8  0100               	movlb	0	; () banked
 39881  0138EA  5161               	movf	(spi_tx_rx@command+1)& (0+255),w,b
 39882  0138EC  6E6A               	movwf	3946,c	;volatile
 39883                           
 39884                           ; BSR set to: 0
 39885                           ;spi.c: 220: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 39886  0138EE  C060  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 39887                           
 39888                           ; BSR set to: 0
 39889                           ;spi.c: 223: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 39890  0138F2  0EFF               	movlw	255
 39891  0138F4  6F68               	movwf	??_spi_tx_rx& (0+255),b
 39892  0138F6  0EFF               	movlw	255
 39893  0138F8  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 39894  0138FA  C062  F06A         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 39895  0138FE  C063  F06B         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 39896  013902  5168               	movf	??_spi_tx_rx& (0+255),w,b
 39897  013904  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 39898  013906  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 39899  013908  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 39900  01390A  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 39901  01390E  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 39902  013910  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 39903  013912  6E66               	movwf	3942,c	;volatile
 39904                           
 39905                           ; BSR set to: 0
 39906                           ;spi.c: 224: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 39907  013914  0562               	decf	spi_tx_rx@command_length& (0+255),w,b
 39908  013916  6E67               	movwf	3943,c	;volatile
 39909                           
 39910                           ; BSR set to: 0
 39911                           ;spi.c: 227: LATDbits.LD7 = 0;
 39912  013918  9E8C               	bcf	3980,7,c	;volatile
 39913                           
 39914                           ; BSR set to: 0
 39915                           ;spi.c: 230: DMACON1bits.DMAEN = 1;
 39916  01391A  8088               	bsf	3976,0,c	;volatile
 39917  01391C                     
 39918                           ; BSR set to: 0
 39919  01391C  B088               	btfsc	3976,0,c	;volatile
 39920  01391E  D7FE               	goto	l2211
 39921                           
 39922                           ;spi.c: 234: DMACON1bits.TXINC = 0;
 39923  013920  9A88               	bcf	3976,5,c	;volatile
 39924                           
 39925                           ;spi.c: 236: DMACON1bits.RXINC = 1;
 39926  013922  8888               	bsf	3976,4,c	;volatile
 39927                           
 39928                           ;spi.c: 238: DMACON1bits.DUPLEX1 = 0;
 39929  013924  9688               	bcf	3976,3,c	;volatile
 39930                           
 39931                           ;spi.c: 239: DMACON1bits.DUPLEX0 = 0;
 39932  013926  9488               	bcf	3976,2,c	;volatile
 39933                           
 39934                           ;spi.c: 242: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 39935  013928  0100               	movlb	0	; () banked
 39936  01392A  5165               	movf	(spi_tx_rx@data+1)& (0+255),w,b
 39937  01392C  6E68               	movwf	3944,c	;volatile
 39938                           
 39939                           ; BSR set to: 0
 39940                           ;spi.c: 243: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 39941  01392E  C064  FF69         	movff	spi_tx_rx@data,3945	;volatile
 39942                           
 39943                           ; BSR set to: 0
 39944                           ;spi.c: 246: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 39945  013932  0EFF               	movlw	255
 39946  013934  6F68               	movwf	??_spi_tx_rx& (0+255),b
 39947  013936  0EFF               	movlw	255
 39948  013938  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 39949  01393A  C066  F06A         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 39950  01393E  C067  F06B         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 39951  013942  5168               	movf	??_spi_tx_rx& (0+255),w,b
 39952  013944  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 39953  013946  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 39954  013948  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 39955  01394A  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 39956  01394E  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 39957  013950  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 39958  013952  6E66               	movwf	3942,c	;volatile
 39959                           
 39960                           ; BSR set to: 0
 39961                           ;spi.c: 247: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 39962  013954  0566               	decf	spi_tx_rx@data_length& (0+255),w,b
 39963  013956  6E67               	movwf	3943,c	;volatile
 39964                           
 39965                           ; BSR set to: 0
 39966                           ;spi.c: 250: DMACON1bits.DMAEN = 1;
 39967  013958  8088               	bsf	3976,0,c	;volatile
 39968  01395A                     
 39969                           ; BSR set to: 0
 39970  01395A  B088               	btfsc	3976,0,c	;volatile
 39971  01395C  D7FE               	goto	l2214
 39972                           
 39973                           ;spi.c: 254: LATDbits.LD7 = 1;
 39974  01395E  8E8C               	bsf	3980,7,c	;volatile
 39975  013960  0012               	return		;funcret
 39976  013962                     __end_of_spi_tx_rx:
 39977                           	opt stack 0
 39978                           tosu	equ	0xFFF
 39979                           tosh	equ	0xFFE
 39980                           tosl	equ	0xFFD
 39981                           pclath	equ	0xFFA
 39982                           tblptru	equ	0xFF8
 39983                           tblptrh	equ	0xFF7
 39984                           tblptrl	equ	0xFF6
 39985                           tablat	equ	0xFF5
 39986                           prodh	equ	0xFF4
 39987                           prodl	equ	0xFF3
 39988                           intcon	equ	0xFF2
 39989                           postinc0	equ	0xFEE
 39990                           wreg	equ	0xFE8
 39991                           indf1	equ	0xFE7
 39992                           postinc1	equ	0xFE6
 39993                           postdec1	equ	0xFE5
 39994                           plusw1	equ	0xFE3
 39995                           fsr1h	equ	0xFE2
 39996                           fsr1l	equ	0xFE1
 39997                           indf2	equ	0xFDF
 39998                           postinc2	equ	0xFDE
 39999                           postdec2	equ	0xFDD
 40000                           plusw2	equ	0xFDB
 40001                           fsr2h	equ	0xFDA
 40002                           fsr2l	equ	0xFD9
 40003                           status	equ	0xFD8
 40004                           
 40005 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 40006 ;; Defined at:
 40007 ;;		line 993 in file "usb_device_msd.c"
 40008 ;; Parameters:    Size  Location     Type
 40009 ;;  DiExpected      2    0[BANK0 ] unsigned int 
 40010 ;; Auto vars:     Size  Location     Type
 40011 ;;		None
 40012 ;; Return value:  Size  Location     Type
 40013 ;;                  1    wreg      void 
 40014 ;; Registers used:
 40015 ;;		wreg, status,2, status,0
 40016 ;; Tracked objects:
 40017 ;;		On entry : 0/0
 40018 ;;		On exit  : 0/0
 40019 ;;		Unchanged: 0/0
 40020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40021 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40023 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40024 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40025 ;;Total ram usage:        6 bytes
 40026 ;; Hardware stack levels used:    1
 40027 ;; Hardware stack levels required when called:   10
 40028 ;; This function calls:
 40029 ;;		Nothing
 40030 ;; This function is called by:
 40031 ;;		_MSDProcessCommandMediaPresent
 40032 ;; This function uses a non-reentrant model
 40033 ;;
 40034                           
 40035                           	psect	text158
 40036  012E0C                     __ptext158:
 40037                           	opt stack 0
 40038  012E0C                     _MSDComputeDeviceInAndResidue:
 40039                           	opt stack 16
 40040                           
 40041                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 40042                           
 40043                           ;incstack = 0
 40044  012E0C  0100               	movlb	0	; () banked
 40045  012E0E  5160               	movf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 40046  012E10  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 40047  012E12  5161               	movf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 40048  012E14  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 40049  012E16  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 40050  012E18  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 40051  012E1A  5162               	movf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 40052  012E1C  0102               	movlb	2	; () banked
 40053  012E1E  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 40054  012E20  0100               	movlb	0	; () banked
 40055  012E22  5163               	movf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 40056  012E24  0102               	movlb	2	; () banked
 40057  012E26  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 40058  012E28  0100               	movlb	0	; () banked
 40059  012E2A  5164               	movf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 40060  012E2C  0102               	movlb	2	; () banked
 40061  012E2E  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 40062  012E30  0100               	movlb	0	; () banked
 40063  012E32  5165               	movf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 40064  012E34  0102               	movlb	2	; () banked
 40065  012E36  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 40066  012E38  B0D8               	btfsc	status,0,c
 40067  012E3A  D00E               	goto	l675
 40068                           
 40069                           ; BSR set to: 2
 40070                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 40071  012E3C  0E00               	movlw	0
 40072  012E3E  010D               	movlb	13	; () banked
 40073  012E40  6F88               	movwf	136,b	;volatile
 40074  012E42  0E00               	movlw	0
 40075  012E44  6F89               	movwf	137,b	;volatile
 40076  012E46  0E00               	movlw	0
 40077  012E48  6F8A               	movwf	138,b	;volatile
 40078  012E4A  0E00               	movlw	0
 40079  012E4C  6F8B               	movwf	139,b	;volatile
 40080                           
 40081                           ; BSR set to: 13
 40082                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 40083  012E4E  C208  F137         	movff	_gblCBW+8,_TransferLength
 40084  012E52  C209  F138         	movff	_gblCBW+9,_TransferLength+1
 40085                           
 40086                           ;usb_device_msd.c: 1002: }
 40087  012E56  0012               	return	
 40088  012E58                     l675:
 40089                           
 40090                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 40091                           
 40092                           ; BSR set to: 13
 40093  012E58  0101               	movlb	1	; () banked
 40094  012E5A  5137               	movf	_TransferLength& (0+255),w,b
 40095  012E5C  0100               	movlb	0	; () banked
 40096  012E5E  5D60               	subwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 40097  012E60  0101               	movlb	1	; () banked
 40098  012E62  5138               	movf	(_TransferLength+1)& (0+255),w,b
 40099  012E64  0100               	movlb	0	; () banked
 40100  012E66  5961               	subwfb	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 40101  012E68  B0D8               	btfsc	status,0,c
 40102  012E6A  D004               	goto	l677
 40103                           
 40104                           ; BSR set to: 0
 40105                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 40106  012E6C  C060  F137         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 40107  012E70  C061  F138         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 40108  012E74                     l677:
 40109                           
 40110                           ; BSR set to: 0
 40111                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 40112                           
 40113                           ; BSR set to: 0
 40114  012E74  0101               	movlb	1	; () banked
 40115  012E76  5137               	movf	_TransferLength& (0+255),w,b
 40116  012E78  0100               	movlb	0	; () banked
 40117  012E7A  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 40118  012E7C  0101               	movlb	1	; () banked
 40119  012E7E  5138               	movf	(_TransferLength+1)& (0+255),w,b
 40120  012E80  0100               	movlb	0	; () banked
 40121  012E82  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 40122  012E84  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 40123  012E86  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 40124  012E88  1F62               	comf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 40125  012E8A  1F63               	comf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 40126  012E8C  1F64               	comf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 40127  012E8E  1F65               	comf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 40128  012E90  2B62               	incf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 40129  012E92  0E00               	movlw	0
 40130  012E94  2363               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 40131  012E96  2364               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 40132  012E98  2365               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 40133  012E9A  0102               	movlb	2	; () banked
 40134  012E9C  5108               	movf	(_gblCBW+8)& (0+255),w,b
 40135  012E9E  0100               	movlb	0	; () banked
 40136  012EA0  2562               	addwf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 40137  012EA2  010D               	movlb	13	; () banked
 40138  012EA4  6F88               	movwf	136,b	;volatile
 40139  012EA6  0102               	movlb	2	; () banked
 40140  012EA8  5109               	movf	(_gblCBW+9)& (0+255),w,b
 40141  012EAA  0100               	movlb	0	; () banked
 40142  012EAC  2163               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 40143  012EAE  010D               	movlb	13	; () banked
 40144  012EB0  6F89               	movwf	137,b	;volatile
 40145  012EB2  0102               	movlb	2	; () banked
 40146  012EB4  510A               	movf	(_gblCBW+10)& (0+255),w,b
 40147  012EB6  0100               	movlb	0	; () banked
 40148  012EB8  2164               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 40149  012EBA  010D               	movlb	13	; () banked
 40150  012EBC  6F8A               	movwf	138,b	;volatile
 40151  012EBE  0102               	movlb	2	; () banked
 40152  012EC0  510B               	movf	(_gblCBW+11)& (0+255),w,b
 40153  012EC2  0100               	movlb	0	; () banked
 40154  012EC4  2165               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 40155  012EC6  010D               	movlb	13	; () banked
 40156  012EC8  6F8B               	movwf	139,b	;volatile
 40157  012ECA  0012               	return	
 40158  012ECC                     __end_of_MSDComputeDeviceInAndResidue:
 40159                           	opt stack 0
 40160                           tosu	equ	0xFFF
 40161                           tosh	equ	0xFFE
 40162                           tosl	equ	0xFFD
 40163                           pclath	equ	0xFFA
 40164                           tblptru	equ	0xFF8
 40165                           tblptrh	equ	0xFF7
 40166                           tblptrl	equ	0xFF6
 40167                           tablat	equ	0xFF5
 40168                           prodh	equ	0xFF4
 40169                           prodl	equ	0xFF3
 40170                           intcon	equ	0xFF2
 40171                           postinc0	equ	0xFEE
 40172                           wreg	equ	0xFE8
 40173                           indf1	equ	0xFE7
 40174                           postinc1	equ	0xFE6
 40175                           postdec1	equ	0xFE5
 40176                           plusw1	equ	0xFE3
 40177                           fsr1h	equ	0xFE2
 40178                           fsr1l	equ	0xFE1
 40179                           indf2	equ	0xFDF
 40180                           postinc2	equ	0xFDE
 40181                           postdec2	equ	0xFDD
 40182                           plusw2	equ	0xFDB
 40183                           fsr2h	equ	0xFDA
 40184                           fsr2l	equ	0xFD9
 40185                           status	equ	0xFD8
 40186                           
 40187 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 40188 ;; Defined at:
 40189 ;;		line 18 in file "external_flash.c"
 40190 ;; Parameters:    Size  Location     Type
 40191 ;;  config          2    0[BANK0 ] PTR void 
 40192 ;;		 -> NULL(0), 
 40193 ;; Auto vars:     Size  Location     Type
 40194 ;;		None
 40195 ;; Return value:  Size  Location     Type
 40196 ;;                  2    0[BANK0 ] unsigned int 
 40197 ;; Registers used:
 40198 ;;		wreg, status,2
 40199 ;; Tracked objects:
 40200 ;;		On entry : 0/0
 40201 ;;		On exit  : 0/0
 40202 ;;		Unchanged: 0/0
 40203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40204 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40207 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40208 ;;Total ram usage:        2 bytes
 40209 ;; Hardware stack levels used:    1
 40210 ;; Hardware stack levels required when called:   10
 40211 ;; This function calls:
 40212 ;;		Nothing
 40213 ;; This function is called by:
 40214 ;;		_MSDProcessCommandMediaPresent
 40215 ;; This function uses a non-reentrant model
 40216 ;;
 40217                           
 40218                           	psect	text159
 40219  015EF8                     __ptext159:
 40220                           	opt stack 0
 40221  015EF8                     _ExternalFlash_SectorSizeRead:
 40222                           	opt stack 16
 40223                           
 40224                           ;external_flash.c: 20: return 512;
 40225                           
 40226                           ; BSR set to: 13
 40227                           ;incstack = 0
 40228  015EF8  0E02               	movlw	2
 40229  015EFA  0100               	movlb	0	; () banked
 40230  015EFC  6F61               	movwf	(?_ExternalFlash_SectorSizeRead+1)& (0+255),b
 40231  015EFE  0E00               	movlw	0
 40232  015F00  6F60               	movwf	?_ExternalFlash_SectorSizeRead& (0+255),b
 40233  015F02  0012               	return	
 40234  015F04                     __end_of_ExternalFlash_SectorSizeRead:
 40235                           	opt stack 0
 40236                           tosu	equ	0xFFF
 40237                           tosh	equ	0xFFE
 40238                           tosl	equ	0xFFD
 40239                           pclath	equ	0xFFA
 40240                           tblptru	equ	0xFF8
 40241                           tblptrh	equ	0xFF7
 40242                           tblptrl	equ	0xFF6
 40243                           tablat	equ	0xFF5
 40244                           prodh	equ	0xFF4
 40245                           prodl	equ	0xFF3
 40246                           intcon	equ	0xFF2
 40247                           postinc0	equ	0xFEE
 40248                           wreg	equ	0xFE8
 40249                           indf1	equ	0xFE7
 40250                           postinc1	equ	0xFE6
 40251                           postdec1	equ	0xFE5
 40252                           plusw1	equ	0xFE3
 40253                           fsr1h	equ	0xFE2
 40254                           fsr1l	equ	0xFE1
 40255                           indf2	equ	0xFDF
 40256                           postinc2	equ	0xFDE
 40257                           postdec2	equ	0xFDD
 40258                           plusw2	equ	0xFDB
 40259                           fsr2h	equ	0xFDA
 40260                           fsr2l	equ	0xFD9
 40261                           status	equ	0xFD8
 40262                           
 40263 ;; *************** function _ExternalFlash_CapacityRead *****************
 40264 ;; Defined at:
 40265 ;;		line 23 in file "external_flash.c"
 40266 ;; Parameters:    Size  Location     Type
 40267 ;;  config          2    0[BANK0 ] PTR void 
 40268 ;;		 -> NULL(0), 
 40269 ;; Auto vars:     Size  Location     Type
 40270 ;;		None
 40271 ;; Return value:  Size  Location     Type
 40272 ;;                  4    0[BANK0 ] unsigned long 
 40273 ;; Registers used:
 40274 ;;		wreg, status,2
 40275 ;; Tracked objects:
 40276 ;;		On entry : 0/0
 40277 ;;		On exit  : 0/0
 40278 ;;		Unchanged: 0/0
 40279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40280 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40283 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40284 ;;Total ram usage:        4 bytes
 40285 ;; Hardware stack levels used:    1
 40286 ;; Hardware stack levels required when called:   10
 40287 ;; This function calls:
 40288 ;;		Nothing
 40289 ;; This function is called by:
 40290 ;;		_MSDProcessCommandMediaPresent
 40291 ;; This function uses a non-reentrant model
 40292 ;;
 40293                           
 40294                           	psect	text160
 40295  015E7C                     __ptext160:
 40296                           	opt stack 0
 40297  015E7C                     _ExternalFlash_CapacityRead:
 40298                           	opt stack 16
 40299                           
 40300                           ;external_flash.c: 26: return ((uint32_t) 8192 - 1);
 40301                           
 40302                           ; BSR set to: 0
 40303                           ;incstack = 0
 40304  015E7C  0EFF               	movlw	255
 40305  015E7E  0100               	movlb	0	; () banked
 40306  015E80  6F60               	movwf	?_ExternalFlash_CapacityRead& (0+255),b
 40307  015E82  0E1F               	movlw	31
 40308  015E84  6F61               	movwf	(?_ExternalFlash_CapacityRead+1)& (0+255),b
 40309  015E86  0E00               	movlw	0
 40310  015E88  6F62               	movwf	(?_ExternalFlash_CapacityRead+2)& (0+255),b
 40311  015E8A  0E00               	movlw	0
 40312  015E8C  6F63               	movwf	(?_ExternalFlash_CapacityRead+3)& (0+255),b
 40313  015E8E  0012               	return	
 40314  015E90                     __end_of_ExternalFlash_CapacityRead:
 40315                           	opt stack 0
 40316                           tosu	equ	0xFFF
 40317                           tosh	equ	0xFFE
 40318                           tosl	equ	0xFFD
 40319                           pclath	equ	0xFFA
 40320                           tblptru	equ	0xFF8
 40321                           tblptrh	equ	0xFF7
 40322                           tblptrl	equ	0xFF6
 40323                           tablat	equ	0xFF5
 40324                           prodh	equ	0xFF4
 40325                           prodl	equ	0xFF3
 40326                           intcon	equ	0xFF2
 40327                           postinc0	equ	0xFEE
 40328                           wreg	equ	0xFE8
 40329                           indf1	equ	0xFE7
 40330                           postinc1	equ	0xFE6
 40331                           postdec1	equ	0xFE5
 40332                           plusw1	equ	0xFE3
 40333                           fsr1h	equ	0xFE2
 40334                           fsr1l	equ	0xFE1
 40335                           indf2	equ	0xFDF
 40336                           postinc2	equ	0xFDE
 40337                           postdec2	equ	0xFDD
 40338                           plusw2	equ	0xFDB
 40339                           fsr2h	equ	0xFDA
 40340                           fsr2l	equ	0xFD9
 40341                           status	equ	0xFD8
 40342                           
 40343 ;; *************** function _ExternalFlash_MediaInitialize *****************
 40344 ;; Defined at:
 40345 ;;		line 10 in file "external_flash.c"
 40346 ;; Parameters:    Size  Location     Type
 40347 ;;  config          2    0[BANK0 ] PTR void 
 40348 ;;		 -> NULL(0), 
 40349 ;; Auto vars:     Size  Location     Type
 40350 ;;		None
 40351 ;; Return value:  Size  Location     Type
 40352 ;;                  2    0[BANK0 ] PTR struct .
 40353 ;; Registers used:
 40354 ;;		wreg, status,2, status,0
 40355 ;; Tracked objects:
 40356 ;;		On entry : 0/0
 40357 ;;		On exit  : 0/0
 40358 ;;		Unchanged: 0/0
 40359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40360 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40363 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40364 ;;Total ram usage:        2 bytes
 40365 ;; Hardware stack levels used:    1
 40366 ;; Hardware stack levels required when called:   10
 40367 ;; This function calls:
 40368 ;;		Nothing
 40369 ;; This function is called by:
 40370 ;;		_USBMSDInit
 40371 ;;		_MSDProcessCommand
 40372 ;; This function uses a non-reentrant model
 40373 ;;
 40374                           
 40375                           	psect	text161
 40376  015D6A                     __ptext161:
 40377                           	opt stack 0
 40378  015D6A                     _ExternalFlash_MediaInitialize:
 40379                           	opt stack 0
 40380                           
 40381                           ; BSR set to: 0
 40382                           ;Skip over the trampoline to the duplicate function for level 2
 40383  015D6A  B25F               	btfsc	btemp,1,c
 40384  015D6C  EF1A  F0AF         	goto	i2_ExternalFlash_MediaInitialize
 40385  015D70                     _ExternalFlash_MediaInitialize$intlevel0:
 40386                           	opt stack 17
 40387                           
 40388                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 40389                           
 40390                           ;incstack = 0
 40391  015D70  0102               	movlb	2	; () banked
 40392  015D72  8195               	bsf	(_mediaInformation+1)& (0+255),0,b
 40393                           
 40394                           ; BSR set to: 2
 40395                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 40396  015D74  0E02               	movlw	2
 40397  015D76  6F97               	movwf	(_mediaInformation+3)& (0+255),b
 40398  015D78  0E00               	movlw	0
 40399  015D7A  6F96               	movwf	(_mediaInformation+2)& (0+255),b
 40400                           
 40401                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 40402  015D7C  0E00               	movlw	0
 40403  015D7E  6F94               	movwf	_mediaInformation& (0+255),b
 40404                           
 40405                           ; BSR set to: 2
 40406                           ;external_flash.c: 15: return &mediaInformation;
 40407  015D80  0E94               	movlw	low _mediaInformation
 40408  015D82  0100               	movlb	0	; () banked
 40409  015D84  6F60               	movwf	?_ExternalFlash_MediaInitialize& (0+255),b
 40410  015D86  0E02               	movlw	high _mediaInformation
 40411  015D88  6F61               	movwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),b
 40412  015D8A  0012               	return	
 40413  015D8C                     __end_of_ExternalFlash_MediaInitialize:
 40414                           	opt stack 0
 40415                           tosu	equ	0xFFF
 40416                           tosh	equ	0xFFE
 40417                           tosl	equ	0xFFD
 40418                           pclath	equ	0xFFA
 40419                           tblptru	equ	0xFF8
 40420                           tblptrh	equ	0xFF7
 40421                           tblptrl	equ	0xFF6
 40422                           tablat	equ	0xFF5
 40423                           prodh	equ	0xFF4
 40424                           prodl	equ	0xFF3
 40425                           intcon	equ	0xFF2
 40426                           postinc0	equ	0xFEE
 40427                           wreg	equ	0xFE8
 40428                           indf1	equ	0xFE7
 40429                           postinc1	equ	0xFE6
 40430                           postdec1	equ	0xFE5
 40431                           plusw1	equ	0xFE3
 40432                           fsr1h	equ	0xFE2
 40433                           fsr1l	equ	0xFE1
 40434                           indf2	equ	0xFDF
 40435                           postinc2	equ	0xFDE
 40436                           postdec2	equ	0xFDD
 40437                           plusw2	equ	0xFDB
 40438                           fsr2h	equ	0xFDA
 40439                           fsr2l	equ	0xFD9
 40440                           status	equ	0xFD8
 40441                           
 40442 ;; *************** function _ExternalFlash_MediaDetect *****************
 40443 ;; Defined at:
 40444 ;;		line 29 in file "external_flash.c"
 40445 ;; Parameters:    Size  Location     Type
 40446 ;;  config          2    0[BANK0 ] PTR void 
 40447 ;;		 -> NULL(0), 
 40448 ;; Auto vars:     Size  Location     Type
 40449 ;;		None
 40450 ;; Return value:  Size  Location     Type
 40451 ;;                  1    wreg      unsigned char 
 40452 ;; Registers used:
 40453 ;;		wreg
 40454 ;; Tracked objects:
 40455 ;;		On entry : 0/0
 40456 ;;		On exit  : 0/0
 40457 ;;		Unchanged: 0/0
 40458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40459 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40462 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40463 ;;Total ram usage:        2 bytes
 40464 ;; Hardware stack levels used:    1
 40465 ;; Hardware stack levels required when called:   10
 40466 ;; This function calls:
 40467 ;;		Nothing
 40468 ;; This function is called by:
 40469 ;;		_USBMSDInit
 40470 ;;		_MSDProcessCommand
 40471 ;; This function uses a non-reentrant model
 40472 ;;
 40473                           
 40474                           	psect	text162
 40475  015F44                     __ptext162:
 40476                           	opt stack 0
 40477  015F44                     _ExternalFlash_MediaDetect:
 40478                           	opt stack 0
 40479                           
 40480                           ; BSR set to: 0
 40481                           ;Skip over the trampoline to the duplicate function for level 2
 40482  015F44  B25F               	btfsc	btemp,1,c
 40483  015F46  EFC4  F0AF         	goto	i2_ExternalFlash_MediaDetect
 40484  015F4A                     _ExternalFlash_MediaDetect$intlevel0:
 40485                           	opt stack 17
 40486                           
 40487                           ;external_flash.c: 31: return 1;
 40488                           
 40489                           ;incstack = 0
 40490  015F4A  0E01               	movlw	1
 40491  015F4C  0012               	return	
 40492  015F4E                     __end_of_ExternalFlash_MediaDetect:
 40493                           	opt stack 0
 40494                           tosu	equ	0xFFF
 40495                           tosh	equ	0xFFE
 40496                           tosl	equ	0xFFD
 40497                           pclath	equ	0xFFA
 40498                           tblptru	equ	0xFF8
 40499                           tblptrh	equ	0xFF7
 40500                           tblptrl	equ	0xFF6
 40501                           tablat	equ	0xFF5
 40502                           prodh	equ	0xFF4
 40503                           prodl	equ	0xFF3
 40504                           intcon	equ	0xFF2
 40505                           postinc0	equ	0xFEE
 40506                           wreg	equ	0xFE8
 40507                           indf1	equ	0xFE7
 40508                           postinc1	equ	0xFE6
 40509                           postdec1	equ	0xFE5
 40510                           plusw1	equ	0xFE3
 40511                           fsr1h	equ	0xFE2
 40512                           fsr1l	equ	0xFE1
 40513                           indf2	equ	0xFDF
 40514                           postinc2	equ	0xFDE
 40515                           postdec2	equ	0xFDD
 40516                           plusw2	equ	0xFDB
 40517                           fsr2h	equ	0xFDA
 40518                           fsr2l	equ	0xFD9
 40519                           status	equ	0xFD8
 40520                           
 40521 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 40522 ;; Defined at:
 40523 ;;		line 73 in file "app_device_custom_hid.c"
 40524 ;; Parameters:    Size  Location     Type
 40525 ;;		None
 40526 ;; Auto vars:     Size  Location     Type
 40527 ;;  idx             1    0        unsigned char 
 40528 ;; Return value:  Size  Location     Type
 40529 ;;                  1    wreg      void 
 40530 ;; Registers used:
 40531 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40532 ;; Tracked objects:
 40533 ;;		On entry : 0/0
 40534 ;;		On exit  : 0/0
 40535 ;;		Unchanged: 0/0
 40536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40541 ;;Total ram usage:        0 bytes
 40542 ;; Hardware stack levels used:    1
 40543 ;; Hardware stack levels required when called:   17
 40544 ;; This function calls:
 40545 ;;		_USBTransferOnePacket
 40546 ;;		_api_parse
 40547 ;;		_api_prepare
 40548 ;; This function is called by:
 40549 ;;		_main
 40550 ;; This function uses a non-reentrant model
 40551 ;;
 40552                           
 40553                           	psect	text163
 40554  01350E                     __ptext163:
 40555                           	opt stack 0
 40556  01350E                     _APP_DeviceCustomHIDTasks:
 40557                           	opt stack 13
 40558                           
 40559                           ;app_device_custom_hid.c: 75: uint8_t idx;;app_device_custom_hid.c: 80: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 40560                           
 40561                           ;incstack = 0
 40562  01350E  0E20               	movlw	32
 40563  013510  605D               	cpfslt	_USBDeviceState,c	;volatile
 40564  013512  D001               	goto	l944
 40565  013514  0012               	return	
 40566  013516                     l944:
 40567                           
 40568                           ;app_device_custom_hid.c: 83: };app_device_custom_hid.c: 89: if( UCONbits.SUSPND== 1 )
 40569  013516  B265               	btfsc	3941,1,c	;volatile
 40570  013518  0012               	return	
 40571                           
 40572                           ;app_device_custom_hid.c: 92: };app_device_custom_hid.c: 95: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 40573                           
 40574                           ;app_device_custom_hid.c: 90: {;app_device_custom_hid.c: 91: return;
 40575  01351A  0101               	movlb	1	; () banked
 40576  01351C  5135               	movf	_USBOutHandle& (0+255),w,b
 40577  01351E  1136               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 40578  013520  B4D8               	btfsc	status,2,c
 40579  013522  D006               	goto	u17710
 40580                           
 40581                           ; BSR set to: 1
 40582  013524  C135  FFD9         	movff	_USBOutHandle,fsr2l
 40583  013528  C136  FFDA         	movff	_USBOutHandle+1,fsr2h
 40584  01352C  BEDF               	btfsc	indf2,7,c
 40585  01352E  0012               	return	
 40586  013530                     u17710:
 40587                           
 40588                           ; BSR set to: 1
 40589                           ;app_device_custom_hid.c: 96: {;app_device_custom_hid.c: 101: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 40590                           
 40591                           ; BSR set to: 1
 40592  013530  5133               	movf	_USBInHandle& (0+255),w,b
 40593  013532  1134               	iorwf	(_USBInHandle+1)& (0+255),w,b
 40594  013534  B4D8               	btfsc	status,2,c
 40595  013536  D006               	goto	u17730
 40596                           
 40597                           ; BSR set to: 1
 40598  013538  C133  FFD9         	movff	_USBInHandle,fsr2l
 40599  01353C  C134  FFDA         	movff	_USBInHandle+1,fsr2h
 40600  013540  BEDF               	btfsc	indf2,7,c
 40601  013542  D01B               	goto	l950
 40602  013544                     u17730:
 40603                           
 40604                           ; BSR set to: 1
 40605                           ;app_device_custom_hid.c: 102: {;app_device_custom_hid.c: 104: api_prepare((uint8_t*) Re
      +                          ceivedDataBuffer, (uint8_t*) ToSendDataBuffer);
 40606                           
 40607                           ; BSR set to: 1
 40608  013544  0E80               	movlw	low _ReceivedDataBuffer
 40609  013546  0100               	movlb	0	; () banked
 40610  013548  6F70               	movwf	api_prepare@inBuffer& (0+255),b
 40611  01354A  0E03               	movlw	high _ReceivedDataBuffer
 40612  01354C  6F71               	movwf	(api_prepare@inBuffer+1)& (0+255),b
 40613  01354E  0E40               	movlw	low _ToSendDataBuffer
 40614  013550  6F72               	movwf	api_prepare@outBuffer& (0+255),b
 40615  013552  0E03               	movlw	high _ToSendDataBuffer
 40616  013554  6F73               	movwf	(api_prepare@outBuffer+1)& (0+255),b
 40617  013556  EC82  F092         	call	_api_prepare	;wreg free
 40618                           
 40619                           ;app_device_custom_hid.c: 106: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 40620  01355A  0E01               	movlw	1
 40621  01355C  0100               	movlb	0	; () banked
 40622  01355E  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 40623  013560  0E40               	movlw	low _ToSendDataBuffer
 40624  013562  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 40625  013564  0E03               	movlw	high _ToSendDataBuffer
 40626  013566  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 40627  013568  0E40               	movlw	64
 40628  01356A  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 40629  01356C  0E01               	movlw	1
 40630  01356E  EC07  F08A         	call	_USBTransferOnePacket
 40631  013572  C060  F133         	movff	?_USBTransferOnePacket,_USBInHandle
 40632  013576  C061  F134         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 40633  01357A                     l950:
 40634                           
 40635                           ;app_device_custom_hid.c: 107: };app_device_custom_hid.c: 110: api_parse(ReceivedDataBuf
      +                          fer, 64, ToSendDataBuffer);
 40636  01357A  0E80               	movlw	low _ReceivedDataBuffer
 40637  01357C  0100               	movlb	0	; () banked
 40638  01357E  6FA7               	movwf	api_parse@inBuffer& (0+255),b
 40639  013580  0E03               	movlw	high _ReceivedDataBuffer
 40640  013582  6FA8               	movwf	(api_parse@inBuffer+1)& (0+255),b
 40641  013584  0E40               	movlw	64
 40642  013586  6FA9               	movwf	api_parse@receivedDataLength& (0+255),b
 40643  013588  0E40               	movlw	low _ToSendDataBuffer
 40644  01358A  6FAA               	movwf	api_parse@outBuffer& (0+255),b
 40645  01358C  0E03               	movlw	high _ToSendDataBuffer
 40646  01358E  6FAB               	movwf	(api_parse@outBuffer+1)& (0+255),b
 40647  013590  EC22  F085         	call	_api_parse	;wreg free
 40648                           
 40649                           ;app_device_custom_hid.c: 114: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 40650  013594  0E00               	movlw	0
 40651  013596  0100               	movlb	0	; () banked
 40652  013598  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 40653  01359A  0E80               	movlw	low _ReceivedDataBuffer
 40654  01359C  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 40655  01359E  0E03               	movlw	high _ReceivedDataBuffer
 40656  0135A0  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 40657  0135A2  0E40               	movlw	64
 40658  0135A4  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 40659  0135A6  0E01               	movlw	1
 40660  0135A8  EC07  F08A         	call	_USBTransferOnePacket
 40661  0135AC  C060  F135         	movff	?_USBTransferOnePacket,_USBOutHandle
 40662  0135B0  C061  F136         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 40663  0135B4  0012               	return	
 40664  0135B6                     __end_of_APP_DeviceCustomHIDTasks:
 40665                           	opt stack 0
 40666                           tosu	equ	0xFFF
 40667                           tosh	equ	0xFFE
 40668                           tosl	equ	0xFFD
 40669                           pclath	equ	0xFFA
 40670                           tblptru	equ	0xFF8
 40671                           tblptrh	equ	0xFF7
 40672                           tblptrl	equ	0xFF6
 40673                           tablat	equ	0xFF5
 40674                           prodh	equ	0xFF4
 40675                           prodl	equ	0xFF3
 40676                           intcon	equ	0xFF2
 40677                           postinc0	equ	0xFEE
 40678                           wreg	equ	0xFE8
 40679                           indf1	equ	0xFE7
 40680                           postinc1	equ	0xFE6
 40681                           postdec1	equ	0xFE5
 40682                           plusw1	equ	0xFE3
 40683                           fsr1h	equ	0xFE2
 40684                           fsr1l	equ	0xFE1
 40685                           indf2	equ	0xFDF
 40686                           postinc2	equ	0xFDE
 40687                           postdec2	equ	0xFDD
 40688                           plusw2	equ	0xFDB
 40689                           fsr2h	equ	0xFDA
 40690                           fsr2l	equ	0xFD9
 40691                           status	equ	0xFD8
 40692                           
 40693 ;; *************** function _api_prepare *****************
 40694 ;; Defined at:
 40695 ;;		line 38 in file "api.c"
 40696 ;; Parameters:    Size  Location     Type
 40697 ;;  inBuffer        2   16[BANK0 ] PTR unsigned char 
 40698 ;;		 -> ReceivedDataBuffer(64), 
 40699 ;;  outBuffer       2   18[BANK0 ] PTR unsigned char 
 40700 ;;		 -> ToSendDataBuffer(64), 
 40701 ;; Auto vars:     Size  Location     Type
 40702 ;;  command         1   20[BANK0 ] enum E6715
 40703 ;; Return value:  Size  Location     Type
 40704 ;;                  1    wreg      void 
 40705 ;; Registers used:
 40706 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40707 ;; Tracked objects:
 40708 ;;		On entry : 0/0
 40709 ;;		On exit  : 0/0
 40710 ;;		Unchanged: 0/0
 40711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40712 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40713 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40715 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40716 ;;Total ram usage:        5 bytes
 40717 ;; Hardware stack levels used:    1
 40718 ;; Hardware stack levels required when called:   12
 40719 ;; This function calls:
 40720 ;;		__fill_buffer_get_display
 40721 ;;		__fill_buffer_get_mode_details
 40722 ;;		__fill_buffer_get_status
 40723 ;;		_memcpy
 40724 ;; This function is called by:
 40725 ;;		_APP_DeviceCustomHIDTasks
 40726 ;; This function uses a non-reentrant model
 40727 ;;
 40728                           
 40729                           	psect	text164
 40730  012504                     __ptext164:
 40731                           	opt stack 0
 40732  012504                     _api_prepare:
 40733                           	opt stack 17
 40734                           
 40735                           ;api.c: 40: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 40736                           
 40737                           ;incstack = 0
 40738  012504  C070  FFD9         	movff	api_prepare@inBuffer,fsr2l
 40739  012508  C071  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 40740  01250C  50DF               	movf	indf2,w,c
 40741  01250E  0100               	movlb	0	; () banked
 40742  012510  6F74               	movwf	api_prepare@command& (0+255),b
 40743                           
 40744                           ; BSR set to: 0
 40745                           ;api.c: 42: if(command>0x7F)
 40746  012512  0E7F               	movlw	127
 40747  012514  6574               	cpfsgt	api_prepare@command& (0+255),b
 40748  012516  D051               	goto	l2262
 40749                           
 40750                           ; BSR set to: 0
 40751                           ;api.c: 49: outBuffer[0] = 0x99;
 40752                           
 40753                           ; BSR set to: 0
 40754                           
 40755                           ;api.c: 45: {;api.c: 48: default:
 40756                           
 40757                           ; BSR set to: 0
 40758                           ;api.c: 43: {;api.c: 44: switch(command)
 40759  012518  C072  FFD9         	movff	api_prepare@outBuffer,fsr2l
 40760  01251C  C073  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 40761  012520  0E99               	movlw	153
 40762  012522  6EDF               	movwf	indf2,c
 40763                           
 40764                           ; BSR set to: 0
 40765                           ;api.c: 50: outBuffer[1] = 0x99;
 40766  012524  EE20 F001          	lfsr	2,1
 40767  012528  5172               	movf	api_prepare@outBuffer& (0+255),w,b
 40768  01252A  26D9               	addwf	fsr2l,f,c
 40769  01252C  5173               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 40770  01252E  22DA               	addwfc	fsr2h,f,c
 40771  012530  0E99               	movlw	153
 40772  012532  6EDF               	movwf	indf2,c
 40773                           
 40774                           ;api.c: 51: }
 40775  012534  0012               	return	
 40776  012536                     
 40777                           ; BSR set to: 0
 40778                           ;api.c: 64: _fill_buffer_get_status(outBuffer);
 40779                           
 40780                           ; BSR set to: 0
 40781  012536  C072  F06B         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 40782  01253A  C073  F06C         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 40783  01253E  EC5C  F073         	call	__fill_buffer_get_status	;wreg free
 40784                           
 40785                           ;api.c: 65: break;
 40786  012542  0012               	return	
 40787  012544                     
 40788                           ;api.c: 69: _fill_buffer_get_display(outBuffer, 0);
 40789  012544  C072  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 40790  012548  C073  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 40791  01254C  0E00               	movlw	0
 40792  01254E  0100               	movlb	0	; () banked
 40793  012550  6F66               	movwf	__fill_buffer_get_display@secondHalf& (0+255),b
 40794  012552  EC20  F098         	call	__fill_buffer_get_display	;wreg free
 40795                           
 40796                           ;api.c: 70: break;
 40797  012556  0012               	return	
 40798  012558                     
 40799                           ;api.c: 74: _fill_buffer_get_display(outBuffer, 1);
 40800  012558  C072  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 40801  01255C  C073  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 40802  012560  0E01               	movlw	1
 40803  012562  0100               	movlb	0	; () banked
 40804  012564  6F66               	movwf	__fill_buffer_get_display@secondHalf& (0+255),b
 40805  012566  EC20  F098         	call	__fill_buffer_get_display	;wreg free
 40806                           
 40807                           ;api.c: 75: break;
 40808  01256A  0012               	return	
 40809  01256C                     
 40810                           ;api.c: 79: _fill_buffer_get_mode_details(outBuffer);
 40811  01256C  C072  F060         	movff	api_prepare@outBuffer,__fill_buffer_get_mode_details@outBuffer
 40812  012570  C073  F061         	movff	api_prepare@outBuffer+1,__fill_buffer_get_mode_details@outBuffer+1
 40813  012574  EC03  F079         	call	__fill_buffer_get_mode_details	;wreg free
 40814                           
 40815                           ;api.c: 80: break;
 40816  012578  0012               	return	
 40817  01257A                     
 40818                           ;api.c: 84: memcpy(outBuffer, inBuffer, 64);
 40819  01257A  C072  F060         	movff	api_prepare@outBuffer,memcpy@d1
 40820  01257E  C073  F061         	movff	api_prepare@outBuffer+1,memcpy@d1+1
 40821  012582  C070  F062         	movff	api_prepare@inBuffer,memcpy@s1
 40822  012586  C071  F063         	movff	api_prepare@inBuffer+1,memcpy@s1+1
 40823  01258A  0E00               	movlw	0
 40824  01258C  0100               	movlb	0	; () banked
 40825  01258E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 40826  012590  0E40               	movlw	64
 40827  012592  6F64               	movwf	memcpy@n& (0+255),b
 40828  012594  EC71  F0A4         	call	_memcpy	;wreg free
 40829                           
 40830                           ;api.c: 85: break;
 40831  012598  0012               	return	
 40832  01259A                     
 40833                           ;api.c: 88: outBuffer[0] = 0x99;
 40834  01259A  C072  FFD9         	movff	api_prepare@outBuffer,fsr2l
 40835  01259E  C073  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 40836  0125A2  0E99               	movlw	153
 40837  0125A4  6EDF               	movwf	indf2,c
 40838                           
 40839                           ;api.c: 89: outBuffer[1] = 0x99;
 40840  0125A6  0100               	movlb	0	; () banked
 40841  0125A8  EE20 F001          	lfsr	2,1
 40842  0125AC  5172               	movf	api_prepare@outBuffer& (0+255),w,b
 40843  0125AE  26D9               	addwf	fsr2l,f,c
 40844  0125B0  5173               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 40845  0125B2  22DA               	addwfc	fsr2h,f,c
 40846  0125B4  0E99               	movlw	153
 40847  0125B6  6EDF               	movwf	indf2,c
 40848                           
 40849                           ;api.c: 90: }
 40850  0125B8  0012               	return	
 40851  0125BA                     l2262:
 40852                           
 40853                           ; BSR set to: 0
 40854                           
 40855                           ; BSR set to: 0
 40856  0125BA  5174               	movf	api_prepare@command& (0+255),w,b
 40857                           
 40858                           ; Switch size 1, requested type "space"
 40859                           ; Number of cases is 6, Range of values is 0 to 32
 40860                           ; switch strategies available:
 40861                           ; Name         Instructions Cycles
 40862                           ; simple_byte           19    10 (average)
 40863                           ;	Chosen strategy is simple_byte
 40864  0125BC  0A00               	xorlw	0	; case 0
 40865  0125BE  B4D8               	btfsc	status,2,c
 40866  0125C0  0012               	return	
 40867  0125C2  0A10               	xorlw	16	; case 16
 40868  0125C4  B4D8               	btfsc	status,2,c
 40869  0125C6  D7B7               	goto	l2265
 40870  0125C8  0A01               	xorlw	1	; case 17
 40871  0125CA  B4D8               	btfsc	status,2,c
 40872  0125CC  D7BB               	goto	l2266
 40873  0125CE  0A03               	xorlw	3	; case 18
 40874  0125D0  B4D8               	btfsc	status,2,c
 40875  0125D2  D7C2               	goto	l2267
 40876  0125D4  0A01               	xorlw	1	; case 19
 40877  0125D6  B4D8               	btfsc	status,2,c
 40878  0125D8  D7C9               	goto	l2268
 40879  0125DA  0A33               	xorlw	51	; case 32
 40880  0125DC  B4D8               	btfsc	status,2,c
 40881  0125DE  D7CD               	goto	l2269
 40882  0125E0  D7DC               	goto	l2270
 40883  0125E2                     __end_of_api_prepare:
 40884                           	opt stack 0
 40885                           tosu	equ	0xFFF
 40886                           tosh	equ	0xFFE
 40887                           tosl	equ	0xFFD
 40888                           pclath	equ	0xFFA
 40889                           tblptru	equ	0xFF8
 40890                           tblptrh	equ	0xFF7
 40891                           tblptrl	equ	0xFF6
 40892                           tablat	equ	0xFF5
 40893                           prodh	equ	0xFF4
 40894                           prodl	equ	0xFF3
 40895                           intcon	equ	0xFF2
 40896                           postinc0	equ	0xFEE
 40897                           wreg	equ	0xFE8
 40898                           indf1	equ	0xFE7
 40899                           postinc1	equ	0xFE6
 40900                           postdec1	equ	0xFE5
 40901                           plusw1	equ	0xFE3
 40902                           fsr1h	equ	0xFE2
 40903                           fsr1l	equ	0xFE1
 40904                           indf2	equ	0xFDF
 40905                           postinc2	equ	0xFDE
 40906                           postdec2	equ	0xFDD
 40907                           plusw2	equ	0xFDB
 40908                           fsr2h	equ	0xFDA
 40909                           fsr2l	equ	0xFD9
 40910                           status	equ	0xFD8
 40911                           
 40912 ;; *************** function __fill_buffer_get_status *****************
 40913 ;; Defined at:
 40914 ;;		line 171 in file "api.c"
 40915 ;; Parameters:    Size  Location     Type
 40916 ;;  outBuffer       2   11[BANK0 ] PTR unsigned char 
 40917 ;;		 -> ToSendDataBuffer(64), 
 40918 ;; Auto vars:     Size  Location     Type
 40919 ;;		None
 40920 ;; Return value:  Size  Location     Type
 40921 ;;                  1    wreg      void 
 40922 ;; Registers used:
 40923 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 40924 ;; Tracked objects:
 40925 ;;		On entry : 0/0
 40926 ;;		On exit  : 0/0
 40927 ;;		Unchanged: 0/0
 40928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40929 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40932 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40933 ;;Total ram usage:        2 bytes
 40934 ;; Hardware stack levels used:    1
 40935 ;; Hardware stack levels required when called:   11
 40936 ;; This function calls:
 40937 ;;		_memcpy
 40938 ;; This function is called by:
 40939 ;;		_api_prepare
 40940 ;; This function uses a non-reentrant model
 40941 ;;
 40942                           
 40943                           	psect	text165
 40944  00E6B8                     __ptext165:
 40945                           	opt stack 0
 40946  00E6B8                     __fill_buffer_get_status:
 40947                           	opt stack 17
 40948                           
 40949                           ;api.c: 174: outBuffer[0] = DATAREQUEST_GET_STATUS;
 40950                           
 40951                           ;incstack = 0
 40952  00E6B8  C06B  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 40953  00E6BC  C06C  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 40954  00E6C0  0E10               	movlw	16
 40955  00E6C2  6EDF               	movwf	indf2,c
 40956                           
 40957                           ;api.c: 177: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 40958  00E6C4  0100               	movlb	0	; () banked
 40959  00E6C6  EE20 F001          	lfsr	2,1
 40960  00E6CA  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40961  00E6CC  26D9               	addwf	fsr2l,f,c
 40962  00E6CE  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40963  00E6D0  22DA               	addwfc	fsr2h,f,c
 40964  00E6D2  0EBC               	movlw	188
 40965  00E6D4  6EDF               	movwf	indf2,c
 40966                           
 40967                           ; BSR set to: 0
 40968                           ;api.c: 178: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 40969  00E6D6  EE20 F002          	lfsr	2,2
 40970  00E6DA  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40971  00E6DC  26D9               	addwf	fsr2l,f,c
 40972  00E6DE  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40973  00E6E0  22DA               	addwfc	fsr2h,f,c
 40974  00E6E2  0E26               	movlw	38
 40975  00E6E4  6EDF               	movwf	indf2,c
 40976                           
 40977                           ; BSR set to: 0
 40978                           ;api.c: 181: outBuffer[3] = 0x00;
 40979  00E6E6  EE20 F003          	lfsr	2,3
 40980  00E6EA  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40981  00E6EC  26D9               	addwf	fsr2l,f,c
 40982  00E6EE  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40983  00E6F0  22DA               	addwfc	fsr2h,f,c
 40984  00E6F2  0E00               	movlw	0
 40985  00E6F4  6EDF               	movwf	indf2,c
 40986                           
 40987                           ; BSR set to: 0
 40988                           ;api.c: 182: outBuffer[4] = 0x06;
 40989  00E6F6  EE20 F004          	lfsr	2,4
 40990  00E6FA  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40991  00E6FC  26D9               	addwf	fsr2l,f,c
 40992  00E6FE  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40993  00E700  22DA               	addwfc	fsr2h,f,c
 40994  00E702  0E06               	movlw	6
 40995  00E704  6EDF               	movwf	indf2,c
 40996                           
 40997                           ; BSR set to: 0
 40998                           ;api.c: 183: outBuffer[5] = 0x02;
 40999  00E706  EE20 F005          	lfsr	2,5
 41000  00E70A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41001  00E70C  26D9               	addwf	fsr2l,f,c
 41002  00E70E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41003  00E710  22DA               	addwfc	fsr2h,f,c
 41004  00E712  0E02               	movlw	2
 41005  00E714  6EDF               	movwf	indf2,c
 41006                           
 41007                           ; BSR set to: 0
 41008                           ;api.c: 186: outBuffer[6] = os.subTimeSlot;
 41009  00E716  EE20 F006          	lfsr	2,6
 41010  00E71A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41011  00E71C  26D9               	addwf	fsr2l,f,c
 41012  00E71E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41013  00E720  22DA               	addwfc	fsr2h,f,c
 41014  00E722  C164  FFDF         	movff	_os,indf2	;volatile
 41015                           
 41016                           ; BSR set to: 0
 41017                           ;api.c: 187: outBuffer[7] = os.timeSlot;
 41018  00E726  EE20 F007          	lfsr	2,7
 41019  00E72A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41020  00E72C  26D9               	addwf	fsr2l,f,c
 41021  00E72E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41022  00E730  22DA               	addwfc	fsr2h,f,c
 41023  00E732  C165  FFDF         	movff	_os+1,indf2	;volatile
 41024                           
 41025                           ; BSR set to: 0
 41026                           ;api.c: 188: outBuffer[8] = os.done;
 41027  00E736  EE20 F008          	lfsr	2,8
 41028  00E73A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41029  00E73C  26D9               	addwf	fsr2l,f,c
 41030  00E73E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41031  00E740  22DA               	addwfc	fsr2h,f,c
 41032  00E742  C166  FFDF         	movff	_os+2,indf2	;volatile
 41033                           
 41034                           ; BSR set to: 0
 41035                           ;api.c: 189: outBuffer[9] = os.encoder1Count;
 41036  00E746  EE20 F009          	lfsr	2,9
 41037  00E74A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41038  00E74C  26D9               	addwf	fsr2l,f,c
 41039  00E74E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41040  00E750  22DA               	addwfc	fsr2h,f,c
 41041  00E752  C167  FFDF         	movff	_os+3,indf2	;volatile
 41042                           
 41043                           ; BSR set to: 0
 41044                           ;api.c: 190: outBuffer[10] = os.button1;
 41045  00E756  EE20 F00A          	lfsr	2,10
 41046  00E75A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41047  00E75C  26D9               	addwf	fsr2l,f,c
 41048  00E75E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41049  00E760  22DA               	addwfc	fsr2h,f,c
 41050  00E762  C168  FFDF         	movff	_os+4,indf2	;volatile
 41051                           
 41052                           ; BSR set to: 0
 41053                           ;api.c: 191: outBuffer[11] = os.encoder2Count;
 41054  00E766  EE20 F00B          	lfsr	2,11
 41055  00E76A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41056  00E76C  26D9               	addwf	fsr2l,f,c
 41057  00E76E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41058  00E770  22DA               	addwfc	fsr2h,f,c
 41059  00E772  C169  FFDF         	movff	_os+5,indf2	;volatile
 41060                           
 41061                           ; BSR set to: 0
 41062                           ;api.c: 192: outBuffer[12] = os.button2;
 41063  00E776  EE20 F00C          	lfsr	2,12
 41064  00E77A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41065  00E77C  26D9               	addwf	fsr2l,f,c
 41066  00E77E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41067  00E780  22DA               	addwfc	fsr2h,f,c
 41068  00E782  C16A  FFDF         	movff	_os+6,indf2	;volatile
 41069                           
 41070                           ; BSR set to: 0
 41071                           ;api.c: 193: memcpy(&outBuffer[13], &os.current_position_in_steps, 4);
 41072  00E786  0E0D               	movlw	13
 41073  00E788  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41074  00E78A  6F60               	movwf	memcpy@d1& (0+255),b
 41075  00E78C  0E00               	movlw	0
 41076  00E78E  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41077  00E790  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 41078  00E792  0E6B               	movlw	low (_os+7)
 41079  00E794  6F62               	movwf	memcpy@s1& (0+255),b
 41080  00E796  0E01               	movlw	high (_os+7)
 41081  00E798  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 41082  00E79A  0E00               	movlw	0
 41083  00E79C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 41084  00E79E  0E04               	movlw	4
 41085  00E7A0  6F64               	movwf	memcpy@n& (0+255),b
 41086  00E7A2  EC71  F0A4         	call	_memcpy	;wreg free
 41087                           
 41088                           ;api.c: 198: memcpy(&outBuffer[17], &os.current_position_in_degrees, 4);
 41089  00E7A6  0E11               	movlw	17
 41090  00E7A8  0100               	movlb	0	; () banked
 41091  00E7AA  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41092  00E7AC  6F60               	movwf	memcpy@d1& (0+255),b
 41093  00E7AE  0E00               	movlw	0
 41094  00E7B0  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41095  00E7B2  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 41096  00E7B4  0E71               	movlw	low (_os+13)
 41097  00E7B6  6F62               	movwf	memcpy@s1& (0+255),b
 41098  00E7B8  0E01               	movlw	high (_os+13)
 41099  00E7BA  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 41100  00E7BC  0E00               	movlw	0
 41101  00E7BE  6F65               	movwf	(memcpy@n+1)& (0+255),b
 41102  00E7C0  0E04               	movlw	4
 41103  00E7C2  6F64               	movwf	memcpy@n& (0+255),b
 41104  00E7C4  EC71  F0A4         	call	_memcpy	;wreg free
 41105                           
 41106                           ;api.c: 203: outBuffer[21] = os.displayState;
 41107  00E7C8  0100               	movlb	0	; () banked
 41108  00E7CA  EE20 F015          	lfsr	2,21
 41109  00E7CE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41110  00E7D0  26D9               	addwf	fsr2l,f,c
 41111  00E7D2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41112  00E7D4  22DA               	addwfc	fsr2h,f,c
 41113  00E7D6  C173  FFDF         	movff	_os+15,indf2	;volatile
 41114                           
 41115                           ; BSR set to: 0
 41116                           ;api.c: 204: outBuffer[22] = os.beep_count;
 41117  00E7DA  EE20 F016          	lfsr	2,22
 41118  00E7DE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41119  00E7E0  26D9               	addwf	fsr2l,f,c
 41120  00E7E2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41121  00E7E4  22DA               	addwfc	fsr2h,f,c
 41122  00E7E6  C18B  FFDF         	movff	_os+39,indf2	;volatile
 41123                           
 41124                           ; BSR set to: 0
 41125                           ;api.c: 205: outBuffer[23] = ((unsigned char)((os.temperature[TEMPERATURE_SOURCE_INTERNA
      +                          L])&0xFF));
 41126  00E7EA  EE20 F017          	lfsr	2,23
 41127  00E7EE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41128  00E7F0  26D9               	addwf	fsr2l,f,c
 41129  00E7F2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41130  00E7F4  22DA               	addwfc	fsr2h,f,c
 41131  00E7F6  C18C  FFDF         	movff	_os+40,indf2	;volatile
 41132                           
 41133                           ; BSR set to: 0
 41134                           ;api.c: 206: outBuffer[24] = ((unsigned char)(((os.temperature[TEMPERATURE_SOURCE_INTERN
      +                          AL])>>8)&0xFF));
 41135  00E7FA  EE20 F018          	lfsr	2,24
 41136  00E7FE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41137  00E800  26D9               	addwf	fsr2l,f,c
 41138  00E802  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41139  00E804  22DA               	addwfc	fsr2h,f,c
 41140  00E806  0101               	movlb	1	; () banked
 41141  00E808  518D               	movf	(_os+41)& (0+255),w,b	;volatile
 41142  00E80A  6EDF               	movwf	indf2,c
 41143                           
 41144                           ; BSR set to: 1
 41145                           ;api.c: 207: outBuffer[25] = ((unsigned char)((os.temperature[TEMPERATURE_SOURCE_EXTERNA
      +                          L])&0xFF));
 41146  00E80C  0100               	movlb	0	; () banked
 41147  00E80E  EE20 F019          	lfsr	2,25
 41148  00E812  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41149  00E814  26D9               	addwf	fsr2l,f,c
 41150  00E816  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41151  00E818  22DA               	addwfc	fsr2h,f,c
 41152  00E81A  C18E  FFDF         	movff	_os+42,indf2	;volatile
 41153                           
 41154                           ; BSR set to: 0
 41155                           ;api.c: 208: outBuffer[26] = ((unsigned char)(((os.temperature[TEMPERATURE_SOURCE_EXTERN
      +                          AL])>>8)&0xFF));
 41156  00E81E  EE20 F01A          	lfsr	2,26
 41157  00E822  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41158  00E824  26D9               	addwf	fsr2l,f,c
 41159  00E826  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41160  00E828  22DA               	addwfc	fsr2h,f,c
 41161  00E82A  0101               	movlb	1	; () banked
 41162  00E82C  518F               	movf	(_os+43)& (0+255),w,b	;volatile
 41163  00E82E  6EDF               	movwf	indf2,c
 41164                           
 41165                           ; BSR set to: 1
 41166                           ;api.c: 209: outBuffer[27] = os.fan_on;
 41167  00E830  0100               	movlb	0	; () banked
 41168  00E832  EE20 F01B          	lfsr	2,27
 41169  00E836  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41170  00E838  26D9               	addwf	fsr2l,f,c
 41171  00E83A  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41172  00E83C  22DA               	addwfc	fsr2h,f,c
 41173  00E83E  C193  FFDF         	movff	_os+47,indf2	;volatile
 41174                           
 41175                           ; BSR set to: 0
 41176                           ;api.c: 210: outBuffer[28] = os.brake_on;
 41177  00E842  EE20 F01C          	lfsr	2,28
 41178  00E846  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41179  00E848  26D9               	addwf	fsr2l,f,c
 41180  00E84A  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41181  00E84C  22DA               	addwfc	fsr2h,f,c
 41182  00E84E  C194  FFDF         	movff	_os+48,indf2	;volatile
 41183                           
 41184                           ; BSR set to: 0
 41185                           ;api.c: 211: outBuffer[29] = os.busy;
 41186  00E852  EE20 F01D          	lfsr	2,29
 41187  00E856  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41188  00E858  26D9               	addwf	fsr2l,f,c
 41189  00E85A  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41190  00E85C  22DA               	addwfc	fsr2h,f,c
 41191  00E85E  C174  FFDF         	movff	_os+16,indf2	;volatile
 41192                           
 41193                           ; BSR set to: 0
 41194                           ;api.c: 213: outBuffer[30] = ((unsigned char)((os.manual_speed)&0xFF));
 41195  00E862  EE20 F01E          	lfsr	2,30
 41196  00E866  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41197  00E868  26D9               	addwf	fsr2l,f,c
 41198  00E86A  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41199  00E86C  22DA               	addwfc	fsr2h,f,c
 41200  00E86E  C188  FFDF         	movff	_os+36,indf2	;volatile
 41201                           
 41202                           ; BSR set to: 0
 41203                           ;api.c: 214: outBuffer[31] = ((unsigned char)(((os.manual_speed)>>8)&0xFF));
 41204  00E872  EE20 F01F          	lfsr	2,31
 41205  00E876  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41206  00E878  26D9               	addwf	fsr2l,f,c
 41207  00E87A  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41208  00E87C  22DA               	addwfc	fsr2h,f,c
 41209  00E87E  0101               	movlb	1	; () banked
 41210  00E880  5189               	movf	(_os+37)& (0+255),w,b	;volatile
 41211  00E882  6EDF               	movwf	indf2,c
 41212                           
 41213                           ; BSR set to: 1
 41214                           ;api.c: 215: outBuffer[32] = ((unsigned char)((os.absolute_position)&0xFF));
 41215  00E884  0100               	movlb	0	; () banked
 41216  00E886  EE20 F020          	lfsr	2,32
 41217  00E88A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41218  00E88C  26D9               	addwf	fsr2l,f,c
 41219  00E88E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41220  00E890  22DA               	addwfc	fsr2h,f,c
 41221  00E892  C16F  FFDF         	movff	_os+11,indf2	;volatile
 41222                           
 41223                           ; BSR set to: 0
 41224                           ;api.c: 216: outBuffer[33] = ((unsigned char)(((os.absolute_position)>>8)&0xFF));
 41225  00E896  EE20 F021          	lfsr	2,33
 41226  00E89A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41227  00E89C  26D9               	addwf	fsr2l,f,c
 41228  00E89E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41229  00E8A0  22DA               	addwfc	fsr2h,f,c
 41230  00E8A2  0101               	movlb	1	; () banked
 41231  00E8A4  5170               	movf	(_os+12)& (0+255),w,b	;volatile
 41232  00E8A6  6EDF               	movwf	indf2,c
 41233                           
 41234                           ; BSR set to: 1
 41235                           ;api.c: 218: outBuffer[34] = config.position_display_180;
 41236  00E8A8  0100               	movlb	0	; () banked
 41237  00E8AA  EE20 F022          	lfsr	2,34
 41238  00E8AE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41239  00E8B0  26D9               	addwf	fsr2l,f,c
 41240  00E8B2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41241  00E8B4  22DA               	addwfc	fsr2h,f,c
 41242  00E8B6  C1BD  FFDF         	movff	_config+40,indf2
 41243                           
 41244                           ; BSR set to: 0
 41245                           ;api.c: 232: memcpy(&outBuffer[42], &config, 22);
 41246  00E8BA  0E2A               	movlw	42
 41247  00E8BC  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41248  00E8BE  6F60               	movwf	memcpy@d1& (0+255),b
 41249  00E8C0  0E00               	movlw	0
 41250  00E8C2  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41251  00E8C4  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 41252  00E8C6  0E95               	movlw	low _config
 41253  00E8C8  6F62               	movwf	memcpy@s1& (0+255),b
 41254  00E8CA  0E01               	movlw	high _config
 41255  00E8CC  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 41256  00E8CE  0E00               	movlw	0
 41257  00E8D0  6F65               	movwf	(memcpy@n+1)& (0+255),b
 41258  00E8D2  0E16               	movlw	22
 41259  00E8D4  6F64               	movwf	memcpy@n& (0+255),b
 41260  00E8D6  EC71  F0A4         	call	_memcpy	;wreg free
 41261  00E8DA  0012               	return		;funcret
 41262  00E8DC                     __end_of__fill_buffer_get_status:
 41263                           	opt stack 0
 41264                           tosu	equ	0xFFF
 41265                           tosh	equ	0xFFE
 41266                           tosl	equ	0xFFD
 41267                           pclath	equ	0xFFA
 41268                           tblptru	equ	0xFF8
 41269                           tblptrh	equ	0xFF7
 41270                           tblptrl	equ	0xFF6
 41271                           tablat	equ	0xFF5
 41272                           prodh	equ	0xFF4
 41273                           prodl	equ	0xFF3
 41274                           intcon	equ	0xFF2
 41275                           postinc0	equ	0xFEE
 41276                           wreg	equ	0xFE8
 41277                           indf1	equ	0xFE7
 41278                           postinc1	equ	0xFE6
 41279                           postdec1	equ	0xFE5
 41280                           plusw1	equ	0xFE3
 41281                           fsr1h	equ	0xFE2
 41282                           fsr1l	equ	0xFE1
 41283                           indf2	equ	0xFDF
 41284                           postinc2	equ	0xFDE
 41285                           postdec2	equ	0xFDD
 41286                           plusw2	equ	0xFDB
 41287                           fsr2h	equ	0xFDA
 41288                           fsr2l	equ	0xFD9
 41289                           status	equ	0xFD8
 41290                           
 41291 ;; *************** function _memcpy *****************
 41292 ;; Defined at:
 41293 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 41294 ;; Parameters:    Size  Location     Type
 41295 ;;  d1              2    0[BANK0 ] PTR void 
 41296 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), i2c_eeprom_save_position@b
      +uffer(7), 
 41297 ;;		 -> os.absolute_position(2), os.current_position_in_steps(4), ToSendDataBuffer(64), os(49), 
 41298 ;;		 -> msd_buffer(512), SetupPkt(8), 
 41299 ;;  s1              2    2[BANK0 ] PTR const void 
 41300 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 41301 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 41302 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 41303 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 41304 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main(80), dc_startup(80), 
 41305 ;;		 -> i2c_eeprom_recover_position@buffer(7), config(41), os.current_position_in_degrees(2), os.current_position_in_ste
      +ps(4), 
 41306 ;;		 -> ReceivedDataBuffer(64), os(49), inq_resp(36), RAM(3759), 
 41307 ;;  n               2    4[BANK0 ] unsigned int 
 41308 ;; Auto vars:     Size  Location     Type
 41309 ;;  s               2    8[BANK0 ] PTR const unsigned char 
 41310 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 41311 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 41312 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 41313 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 41314 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main(80), dc_startup(80), 
 41315 ;;		 -> i2c_eeprom_recover_position@buffer(7), config(41), os.current_position_in_degrees(2), os.current_position_in_ste
      +ps(4), 
 41316 ;;		 -> ReceivedDataBuffer(64), os(49), inq_resp(36), RAM(3759), 
 41317 ;;  d               2    6[BANK0 ] PTR unsigned char 
 41318 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), i2c_eeprom_save_position@b
      +uffer(7), 
 41319 ;;		 -> os.absolute_position(2), os.current_position_in_steps(4), ToSendDataBuffer(64), os(49), 
 41320 ;;		 -> msd_buffer(512), SetupPkt(8), 
 41321 ;;  tmp             1   10[BANK0 ] unsigned char 
 41322 ;; Return value:  Size  Location     Type
 41323 ;;                  2    0[BANK0 ] PTR void 
 41324 ;; Registers used:
 41325 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 41326 ;; Tracked objects:
 41327 ;;		On entry : 0/0
 41328 ;;		On exit  : 0/0
 41329 ;;		Unchanged: 0/0
 41330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41331 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41332 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41334 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41335 ;;Total ram usage:       11 bytes
 41336 ;; Hardware stack levels used:    1
 41337 ;; Hardware stack levels required when called:   10
 41338 ;; This function calls:
 41339 ;;		Nothing
 41340 ;; This function is called by:
 41341 ;;		_MSDProcessCommandMediaPresent
 41342 ;;		_i2c_eeprom_recover_position
 41343 ;;		__display_start
 41344 ;;		_display_prepare
 41345 ;;		__flash_set_page_size
 41346 ;;		_fat_create_file
 41347 ;;		_api_prepare
 41348 ;;		__fill_buffer_get_status
 41349 ;; This function uses a non-reentrant model
 41350 ;;
 41351                           
 41352                           	psect	text166
 41353  0148E2                     __ptext166:
 41354                           	opt stack 0
 41355  0148E2                     _memcpy:
 41356                           	opt stack 18
 41357                           
 41358                           ;incstack = 0
 41359  0148E2  C062  F068         	movff	memcpy@s1,memcpy@s
 41360  0148E6  C063  F069         	movff	memcpy@s1+1,memcpy@s+1
 41361  0148EA  C060  F066         	movff	memcpy@d1,memcpy@d
 41362  0148EE  C061  F067         	movff	memcpy@d1+1,memcpy@d+1
 41363  0148F2  D01D               	goto	l3812
 41364  0148F4                     l13038:
 41365  0148F4  C068  FFF6         	movff	memcpy@s,tblptrl
 41366  0148F8  C069  FFF7         	movff	memcpy@s+1,tblptrh
 41367  0148FC  0E00               	movlw	low (__mediumconst shr (0+16))
 41368  0148FE  6EF8               	movwf	tblptru,c
 41369  014900  0E0E               	movlw	(high __ramtop+-1)
 41370  014902  64F7               	cpfsgt	tblptrh,c
 41371  014904  D003               	bra	u11127
 41372  014906  0008               	tblrd		*
 41373  014908  50F5               	movf	tablat,w,c
 41374  01490A  D005               	bra	u11120
 41375  01490C                     u11127:
 41376  01490C  CFF6 FFE9          	movff	tblptrl,fsr0l
 41377  014910  CFF7 FFEA          	movff	tblptrh,fsr0h
 41378  014914  50EF               	movf	indf0,w,c
 41379  014916                     u11120:
 41380  014916  0100               	movlb	0	; () banked
 41381  014918  6F6A               	movwf	memcpy@tmp& (0+255),b
 41382                           
 41383                           ; BSR set to: 0
 41384  01491A  4B68               	infsnz	memcpy@s& (0+255),f,b
 41385  01491C  2B69               	incf	(memcpy@s+1)& (0+255),f,b
 41386                           
 41387                           ; BSR set to: 0
 41388  01491E  C066  FFD9         	movff	memcpy@d,fsr2l
 41389  014922  C067  FFDA         	movff	memcpy@d+1,fsr2h
 41390  014926  C06A  FFDF         	movff	memcpy@tmp,indf2
 41391                           
 41392                           ; BSR set to: 0
 41393  01492A  4B66               	infsnz	memcpy@d& (0+255),f,b
 41394  01492C  2B67               	incf	(memcpy@d+1)& (0+255),f,b
 41395  01492E                     l3812:
 41396                           
 41397                           ; BSR set to: 0
 41398  01492E  0100               	movlb	0	; () banked
 41399  014930  0764               	decf	memcpy@n& (0+255),f,b
 41400  014932  A0D8               	btfss	status,0,c
 41401  014934  0765               	decf	(memcpy@n+1)& (0+255),f,b
 41402  014936  2964               	incf	memcpy@n& (0+255),w,b
 41403  014938  E1DD               	bnz	l13038
 41404  01493A  2965               	incf	(memcpy@n+1)& (0+255),w,b
 41405  01493C  B4D8               	btfsc	status,2,c
 41406  01493E  0012               	return	
 41407  014940  D7D9               	goto	l3813
 41408  014942                     __end_of_memcpy:
 41409                           	opt stack 0
 41410                           tosu	equ	0xFFF
 41411                           tosh	equ	0xFFE
 41412                           tosl	equ	0xFFD
 41413                           pclath	equ	0xFFA
 41414                           tblptru	equ	0xFF8
 41415                           tblptrh	equ	0xFF7
 41416                           tblptrl	equ	0xFF6
 41417                           tablat	equ	0xFF5
 41418                           prodh	equ	0xFF4
 41419                           prodl	equ	0xFF3
 41420                           intcon	equ	0xFF2
 41421                           indf0	equ	0xFEF
 41422                           postinc0	equ	0xFEE
 41423                           fsr0h	equ	0xFEA
 41424                           fsr0l	equ	0xFE9
 41425                           wreg	equ	0xFE8
 41426                           indf1	equ	0xFE7
 41427                           postinc1	equ	0xFE6
 41428                           postdec1	equ	0xFE5
 41429                           plusw1	equ	0xFE3
 41430                           fsr1h	equ	0xFE2
 41431                           fsr1l	equ	0xFE1
 41432                           indf2	equ	0xFDF
 41433                           postinc2	equ	0xFDE
 41434                           postdec2	equ	0xFDD
 41435                           plusw2	equ	0xFDB
 41436                           fsr2h	equ	0xFDA
 41437                           fsr2l	equ	0xFD9
 41438                           status	equ	0xFD8
 41439                           
 41440 ;; *************** function __fill_buffer_get_mode_details *****************
 41441 ;; Defined at:
 41442 ;;		line 277 in file "api.c"
 41443 ;; Parameters:    Size  Location     Type
 41444 ;;  outBuffer       2    0[BANK0 ] PTR unsigned char 
 41445 ;;		 -> ToSendDataBuffer(64), 
 41446 ;; Auto vars:     Size  Location     Type
 41447 ;;		None
 41448 ;; Return value:  Size  Location     Type
 41449 ;;                  1    wreg      void 
 41450 ;; Registers used:
 41451 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 41452 ;; Tracked objects:
 41453 ;;		On entry : 0/0
 41454 ;;		On exit  : 0/0
 41455 ;;		Unchanged: 0/0
 41456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41457 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41459 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41460 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41461 ;;Total ram usage:        4 bytes
 41462 ;; Hardware stack levels used:    1
 41463 ;; Hardware stack levels required when called:   10
 41464 ;; This function calls:
 41465 ;;		Nothing
 41466 ;; This function is called by:
 41467 ;;		_api_prepare
 41468 ;; This function uses a non-reentrant model
 41469 ;;
 41470                           
 41471                           	psect	text167
 41472  00F206                     __ptext167:
 41473                           	opt stack 0
 41474  00F206                     __fill_buffer_get_mode_details:
 41475                           	opt stack 18
 41476                           
 41477                           ;api.c: 280: outBuffer[0] = DATAREQUEST_GET_MODE_DETAILS;
 41478                           
 41479                           ; BSR set to: 0
 41480                           ;incstack = 0
 41481  00F206  C060  FFD9         	movff	__fill_buffer_get_mode_details@outBuffer,fsr2l
 41482  00F20A  C061  FFDA         	movff	__fill_buffer_get_mode_details@outBuffer+1,fsr2h
 41483  00F20E  0E13               	movlw	19
 41484  00F210  6EDF               	movwf	indf2,c
 41485                           
 41486                           ;api.c: 283: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 41487  00F212  0100               	movlb	0	; () banked
 41488  00F214  EE20 F001          	lfsr	2,1
 41489  00F218  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41490  00F21A  26D9               	addwf	fsr2l,f,c
 41491  00F21C  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41492  00F21E  22DA               	addwfc	fsr2h,f,c
 41493  00F220  0EBC               	movlw	188
 41494  00F222  6EDF               	movwf	indf2,c
 41495                           
 41496                           ; BSR set to: 0
 41497                           ;api.c: 284: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 41498  00F224  EE20 F002          	lfsr	2,2
 41499  00F228  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41500  00F22A  26D9               	addwf	fsr2l,f,c
 41501  00F22C  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41502  00F22E  22DA               	addwfc	fsr2h,f,c
 41503  00F230  0E26               	movlw	38
 41504  00F232  6EDF               	movwf	indf2,c
 41505                           
 41506                           ; BSR set to: 0
 41507                           ;api.c: 287: outBuffer[3] = os.displayState;
 41508  00F234  EE20 F003          	lfsr	2,3
 41509  00F238  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41510  00F23A  26D9               	addwf	fsr2l,f,c
 41511  00F23C  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41512  00F23E  22DA               	addwfc	fsr2h,f,c
 41513  00F240  C173  FFDF         	movff	_os+15,indf2	;volatile
 41514                           
 41515                           ;api.c: 289: switch(os.displayState & 0x0F)
 41516  00F244  D090               	goto	l2305
 41517  00F246                     
 41518                           ; BSR set to: 0
 41519                           ;api.c: 295: case DISPLAY_STATE_SETUP2:;api.c: 296: outBuffer[4] = os.setup_step_size;
 41520                           
 41521                           ; BSR set to: 0
 41522                           
 41523                           ; BSR set to: 0
 41524  00F246  EE20 F004          	lfsr	2,4
 41525  00F24A  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41526  00F24C  26D9               	addwf	fsr2l,f,c
 41527  00F24E  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41528  00F250  22DA               	addwfc	fsr2h,f,c
 41529  00F252  C175  FFDF         	movff	_os+17,indf2	;volatile
 41530                           
 41531                           ;api.c: 297: break;
 41532  00F256  0012               	return	
 41533  00F258                     
 41534                           ; BSR set to: 0
 41535                           ;api.c: 300: case DISPLAY_STATE_DIVIDE2:;api.c: 302: outBuffer[4] = os.divide_step_size;
 41536                           
 41537                           ; BSR set to: 0
 41538                           
 41539                           ; BSR set to: 0
 41540  00F258  EE20 F004          	lfsr	2,4
 41541  00F25C  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41542  00F25E  26D9               	addwf	fsr2l,f,c
 41543  00F260  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41544  00F262  22DA               	addwfc	fsr2h,f,c
 41545  00F264  C17A  FFDF         	movff	_os+22,indf2	;volatile
 41546                           
 41547                           ;api.c: 303: outBuffer[5] = ((unsigned char)(((os.division)>>8)&0xFF));
 41548  00F268  EE20 F005          	lfsr	2,5
 41549  00F26C  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41550  00F26E  26D9               	addwf	fsr2l,f,c
 41551  00F270  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41552  00F272  22DA               	addwfc	fsr2h,f,c
 41553  00F274  0101               	movlb	1	; () banked
 41554  00F276  5179               	movf	(_os+21)& (0+255),w,b	;volatile
 41555  00F278  6EDF               	movwf	indf2,c
 41556                           
 41557                           ;api.c: 304: outBuffer[6] = ((unsigned char)((os.division)&0xFF));
 41558  00F27A  0100               	movlb	0	; () banked
 41559  00F27C  EE20 F006          	lfsr	2,6
 41560  00F280  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41561  00F282  26D9               	addwf	fsr2l,f,c
 41562  00F284  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41563  00F286  22DA               	addwfc	fsr2h,f,c
 41564  00F288  C178  FFDF         	movff	_os+20,indf2	;volatile
 41565                           
 41566                           ;api.c: 305: outBuffer[7] = ((unsigned char)(((os.divide_jump_size)>>8)&0xFF));
 41567  00F28C  EE20 F007          	lfsr	2,7
 41568  00F290  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41569  00F292  26D9               	addwf	fsr2l,f,c
 41570  00F294  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41571  00F296  22DA               	addwfc	fsr2h,f,c
 41572  00F298  0101               	movlb	1	; () banked
 41573  00F29A  517E               	movf	(_os+26)& (0+255),w,b	;volatile
 41574  00F29C  6EDF               	movwf	indf2,c
 41575                           
 41576                           ;api.c: 306: outBuffer[8] = ((unsigned char)((os.divide_jump_size)&0xFF));
 41577  00F29E  0100               	movlb	0	; () banked
 41578  00F2A0  EE20 F008          	lfsr	2,8
 41579  00F2A4  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41580  00F2A6  26D9               	addwf	fsr2l,f,c
 41581  00F2A8  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41582  00F2AA  22DA               	addwfc	fsr2h,f,c
 41583  00F2AC  C17D  FFDF         	movff	_os+25,indf2	;volatile
 41584                           
 41585                           ;api.c: 307: outBuffer[9] = ((unsigned char)(((os.divide_position)>>8)&0xFF));
 41586  00F2B0  EE20 F009          	lfsr	2,9
 41587  00F2B4  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41588  00F2B6  26D9               	addwf	fsr2l,f,c
 41589  00F2B8  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41590  00F2BA  22DA               	addwfc	fsr2h,f,c
 41591  00F2BC  0101               	movlb	1	; () banked
 41592  00F2BE  517C               	movf	(_os+24)& (0+255),w,b	;volatile
 41593  00F2C0  6EDF               	movwf	indf2,c
 41594                           
 41595                           ;api.c: 308: outBuffer[10] = ((unsigned char)((os.divide_position)&0xFF));
 41596  00F2C2  0100               	movlb	0	; () banked
 41597  00F2C4  EE20 F00A          	lfsr	2,10
 41598  00F2C8  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41599  00F2CA  26D9               	addwf	fsr2l,f,c
 41600  00F2CC  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41601  00F2CE  22DA               	addwfc	fsr2h,f,c
 41602  00F2D0  C17B  FFDF         	movff	_os+23,indf2	;volatile
 41603                           
 41604                           ;api.c: 309: break;
 41605  00F2D4  0012               	return	
 41606  00F2D6                     
 41607                           ; BSR set to: 0
 41608                           ;api.c: 312: case DISPLAY_STATE_ARC2:;api.c: 313: outBuffer[4] = ((unsigned char)(((os.a
      +                          rc_step_size)>>8)&0xFF));
 41609                           
 41610                           ; BSR set to: 0
 41611                           
 41612                           ; BSR set to: 0
 41613  00F2D6  EE20 F004          	lfsr	2,4
 41614  00F2DA  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41615  00F2DC  26D9               	addwf	fsr2l,f,c
 41616  00F2DE  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41617  00F2E0  22DA               	addwfc	fsr2h,f,c
 41618  00F2E2  0101               	movlb	1	; () banked
 41619  00F2E4  5180               	movf	(_os+28)& (0+255),w,b	;volatile
 41620  00F2E6  6EDF               	movwf	indf2,c
 41621                           
 41622                           ;api.c: 314: outBuffer[5] = ((unsigned char)((os.arc_step_size)&0xFF));
 41623  00F2E8  0100               	movlb	0	; () banked
 41624  00F2EA  EE20 F005          	lfsr	2,5
 41625  00F2EE  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41626  00F2F0  26D9               	addwf	fsr2l,f,c
 41627  00F2F2  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41628  00F2F4  22DA               	addwfc	fsr2h,f,c
 41629  00F2F6  C17F  FFDF         	movff	_os+27,indf2	;volatile
 41630                           
 41631                           ;api.c: 315: outBuffer[6] = os.arc_direction;
 41632  00F2FA  EE20 F006          	lfsr	2,6
 41633  00F2FE  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41634  00F300  26D9               	addwf	fsr2l,f,c
 41635  00F302  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41636  00F304  22DA               	addwfc	fsr2h,f,c
 41637  00F306  C187  FFDF         	movff	_os+35,indf2	;volatile
 41638                           
 41639                           ;api.c: 316: outBuffer[7] = ((unsigned char)(((os.arc_speed)>>8)&0xFF));
 41640  00F30A  EE20 F007          	lfsr	2,7
 41641  00F30E  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41642  00F310  26D9               	addwf	fsr2l,f,c
 41643  00F312  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41644  00F314  22DA               	addwfc	fsr2h,f,c
 41645  00F316  0101               	movlb	1	; () banked
 41646  00F318  5186               	movf	(_os+34)& (0+255),w,b	;volatile
 41647  00F31A  6EDF               	movwf	indf2,c
 41648                           
 41649                           ;api.c: 317: outBuffer[8] = ((unsigned char)((os.arc_speed)&0xFF));
 41650  00F31C  0100               	movlb	0	; () banked
 41651  00F31E  EE20 F008          	lfsr	2,8
 41652  00F322  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41653  00F324  26D9               	addwf	fsr2l,f,c
 41654  00F326  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41655  00F328  22DA               	addwfc	fsr2h,f,c
 41656  00F32A  C185  FFDF         	movff	_os+33,indf2	;volatile
 41657                           
 41658                           ; BSR set to: 0
 41659                           ;api.c: 321: break;
 41660                           
 41661                           ;api.c: 320: case DISPLAY_STATE_ZERO:
 41662                           
 41663                           ;api.c: 318: break;
 41664  00F32E  0012               	return	
 41665  00F330                     
 41666                           ; BSR set to: 0
 41667                           ;api.c: 324: outBuffer[4] = os.manual_direction;
 41668                           
 41669                           ; BSR set to: 0
 41670  00F330  EE20 F004          	lfsr	2,4
 41671  00F334  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41672  00F336  26D9               	addwf	fsr2l,f,c
 41673  00F338  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41674  00F33A  22DA               	addwfc	fsr2h,f,c
 41675  00F33C  C18A  FFDF         	movff	_os+38,indf2	;volatile
 41676                           
 41677                           ;api.c: 325: outBuffer[5] = ((unsigned char)(((os.manual_speed)>>8)&0xFF));
 41678  00F340  EE20 F005          	lfsr	2,5
 41679  00F344  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41680  00F346  26D9               	addwf	fsr2l,f,c
 41681  00F348  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41682  00F34A  22DA               	addwfc	fsr2h,f,c
 41683  00F34C  0101               	movlb	1	; () banked
 41684  00F34E  5189               	movf	(_os+37)& (0+255),w,b	;volatile
 41685  00F350  6EDF               	movwf	indf2,c
 41686                           
 41687                           ;api.c: 326: outBuffer[6] = ((unsigned char)((os.manual_speed)&0xFF));
 41688  00F352  0100               	movlb	0	; () banked
 41689  00F354  EE20 F006          	lfsr	2,6
 41690  00F358  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41691  00F35A  26D9               	addwf	fsr2l,f,c
 41692  00F35C  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41693  00F35E  22DA               	addwfc	fsr2h,f,c
 41694  00F360  C188  FFDF         	movff	_os+36,indf2	;volatile
 41695                           
 41696                           ; BSR set to: 0
 41697                           ;api.c: 328: }
 41698                           
 41699                           ;api.c: 327: break;
 41700  00F364  0012               	return	
 41701  00F366                     l2305:
 41702                           
 41703                           ; BSR set to: 0
 41704                           
 41705                           ; BSR set to: 0
 41706  00F366  0101               	movlb	1	; () banked
 41707  00F368  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 41708  00F36A  0B0F               	andlw	15
 41709  00F36C  0100               	movlb	0	; () banked
 41710  00F36E  6F62               	movwf	??__fill_buffer_get_mode_details& (0+255),b
 41711  00F370  6B63               	clrf	(??__fill_buffer_get_mode_details+1)& (0+255),b
 41712                           
 41713                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 41714                           ; Switch size 1, requested type "space"
 41715                           ; Number of cases is 1, Range of values is 0 to 0
 41716                           ; switch strategies available:
 41717                           ; Name         Instructions Cycles
 41718                           ; simple_byte            4     3 (average)
 41719                           ;	Chosen strategy is simple_byte
 41720  00F372  5163               	movf	(??__fill_buffer_get_mode_details+1)& (0+255),w,b
 41721  00F374  0A00               	xorlw	0	; case 0
 41722  00F376  A4D8               	btfss	status,2,c
 41723  00F378  0012               	return	
 41724                           
 41725                           ; BSR set to: 0
 41726                           ; Switch size 1, requested type "space"
 41727                           ; Number of cases is 9, Range of values is 0 to 128
 41728                           ; switch strategies available:
 41729                           ; Name         Instructions Cycles
 41730                           ; simple_byte           28    15 (average)
 41731                           ;	Chosen strategy is simple_byte
 41732  00F37A  5162               	movf	??__fill_buffer_get_mode_details& (0+255),w,b
 41733  00F37C  0A00               	xorlw	0	; case 0
 41734  00F37E  B4D8               	btfsc	status,2,c
 41735  00F380  0012               	return	
 41736  00F382  0A10               	xorlw	16	; case 16
 41737  00F384  B4D8               	btfsc	status,2,c
 41738  00F386  D75F               	goto	l2308
 41739  00F388  0A30               	xorlw	48	; case 32
 41740  00F38A  B4D8               	btfsc	status,2,c
 41741  00F38C  D75C               	goto	l2308
 41742  00F38E  0A10               	xorlw	16	; case 48
 41743  00F390  B4D8               	btfsc	status,2,c
 41744  00F392  D762               	goto	l2310
 41745  00F394  0A70               	xorlw	112	; case 64
 41746  00F396  B4D8               	btfsc	status,2,c
 41747  00F398  D75F               	goto	l2310
 41748  00F39A  0A10               	xorlw	16	; case 80
 41749  00F39C  B4D8               	btfsc	status,2,c
 41750  00F39E  D79B               	goto	l2312
 41751  00F3A0  0A30               	xorlw	48	; case 96
 41752  00F3A2  B4D8               	btfsc	status,2,c
 41753  00F3A4  D798               	goto	l2312
 41754  00F3A6  0A10               	xorlw	16	; case 112
 41755  00F3A8  B4D8               	btfsc	status,2,c
 41756  00F3AA  0012               	return	
 41757  00F3AC  0AF0               	xorlw	240	; case 128
 41758  00F3AE  A4D8               	btfss	status,2,c
 41759  00F3B0  0012               	return	
 41760  00F3B2  D7BE               	goto	l2315
 41761  00F3B4                     __end_of__fill_buffer_get_mode_details:
 41762                           	opt stack 0
 41763                           tosu	equ	0xFFF
 41764                           tosh	equ	0xFFE
 41765                           tosl	equ	0xFFD
 41766                           pclath	equ	0xFFA
 41767                           tblptru	equ	0xFF8
 41768                           tblptrh	equ	0xFF7
 41769                           tblptrl	equ	0xFF6
 41770                           tablat	equ	0xFF5
 41771                           prodh	equ	0xFF4
 41772                           prodl	equ	0xFF3
 41773                           intcon	equ	0xFF2
 41774                           indf0	equ	0xFEF
 41775                           postinc0	equ	0xFEE
 41776                           fsr0h	equ	0xFEA
 41777                           fsr0l	equ	0xFE9
 41778                           wreg	equ	0xFE8
 41779                           indf1	equ	0xFE7
 41780                           postinc1	equ	0xFE6
 41781                           postdec1	equ	0xFE5
 41782                           plusw1	equ	0xFE3
 41783                           fsr1h	equ	0xFE2
 41784                           fsr1l	equ	0xFE1
 41785                           indf2	equ	0xFDF
 41786                           postinc2	equ	0xFDE
 41787                           postdec2	equ	0xFDD
 41788                           plusw2	equ	0xFDB
 41789                           fsr2h	equ	0xFDA
 41790                           fsr2l	equ	0xFD9
 41791                           status	equ	0xFD8
 41792                           
 41793 ;; *************** function __fill_buffer_get_display *****************
 41794 ;; Defined at:
 41795 ;;		line 236 in file "api.c"
 41796 ;; Parameters:    Size  Location     Type
 41797 ;;  outBuffer       2    4[BANK0 ] PTR unsigned char 
 41798 ;;		 -> ToSendDataBuffer(64), 
 41799 ;;  secondHalf      1    6[BANK0 ] unsigned char 
 41800 ;; Auto vars:     Size  Location     Type
 41801 ;;  position        1   15[BANK0 ] unsigned char 
 41802 ;;  start_line      1   14[BANK0 ] unsigned char 
 41803 ;;  line            1   13[BANK0 ] unsigned char 
 41804 ;;  cntr            1   12[BANK0 ] unsigned char 
 41805 ;; Return value:  Size  Location     Type
 41806 ;;                  1    wreg      void 
 41807 ;; Registers used:
 41808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41809 ;; Tracked objects:
 41810 ;;		On entry : 0/0
 41811 ;;		On exit  : 0/0
 41812 ;;		Unchanged: 0/0
 41813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41814 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41815 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41816 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41817 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41818 ;;Total ram usage:       12 bytes
 41819 ;; Hardware stack levels used:    1
 41820 ;; Hardware stack levels required when called:   11
 41821 ;; This function calls:
 41822 ;;		_display_get_character
 41823 ;; This function is called by:
 41824 ;;		_api_prepare
 41825 ;; This function uses a non-reentrant model
 41826 ;;
 41827                           
 41828                           	psect	text168
 41829  013040                     __ptext168:
 41830                           	opt stack 0
 41831  013040                     __fill_buffer_get_display:
 41832                           	opt stack 17
 41833                           
 41834                           ;api.c: 238: uint8_t cntr;;api.c: 239: uint8_t line;;api.c: 240: uint8_t start_line;;api
      +                          .c: 241: uint8_t position;;api.c: 244: if(secondHalf)
 41835                           
 41836                           ; BSR set to: 0
 41837                           ;incstack = 0
 41838  013040  0100               	movlb	0	; () banked
 41839  013042  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 41840  013044  B4D8               	btfsc	status,2,c
 41841  013046  D006               	goto	l2293
 41842                           
 41843                           ; BSR set to: 0
 41844                           ;api.c: 245: {;api.c: 246: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 41845  013048  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 41846  01304C  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 41847  013050  0E12               	movlw	18
 41848  013052  D005               	goto	L64
 41849  013054                     l2293:
 41850                           
 41851                           ; BSR set to: 0
 41852                           ;api.c: 248: else;api.c: 249: {;api.c: 250: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 41853                           
 41854                           ; BSR set to: 0
 41855  013054  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 41856  013058  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 41857  01305C  0E11               	movlw	17
 41858  01305E                     L64:
 41859  01305E  6EDF               	movwf	indf2,c
 41860                           
 41861                           ; BSR set to: 0
 41862                           ;api.c: 251: };api.c: 254: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 41863                           
 41864                           ; BSR set to: 0
 41865  013060  EE20 F001          	lfsr	2,1
 41866  013064  5164               	movf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 41867  013066  26D9               	addwf	fsr2l,f,c
 41868  013068  5165               	movf	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 41869  01306A  22DA               	addwfc	fsr2h,f,c
 41870  01306C  0EBC               	movlw	188
 41871  01306E  6EDF               	movwf	indf2,c
 41872                           
 41873                           ; BSR set to: 0
 41874                           ;api.c: 255: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 41875  013070  EE20 F002          	lfsr	2,2
 41876  013074  5164               	movf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 41877  013076  26D9               	addwf	fsr2l,f,c
 41878  013078  5165               	movf	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 41879  01307A  22DA               	addwfc	fsr2h,f,c
 41880  01307C  0E26               	movlw	38
 41881  01307E  6EDF               	movwf	indf2,c
 41882                           
 41883                           ; BSR set to: 0
 41884                           ;api.c: 258: cntr = 3;
 41885  013080  0E03               	movlw	3
 41886  013082  6F6C               	movwf	__fill_buffer_get_display@cntr& (0+255),b
 41887                           
 41888                           ; BSR set to: 0
 41889                           ;api.c: 259: if(secondHalf)
 41890  013084  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 41891  013086  B4D8               	btfsc	status,2,c
 41892  013088  D002               	goto	l2295
 41893                           
 41894                           ; BSR set to: 0
 41895                           ;api.c: 260: {;api.c: 261: start_line = 2;
 41896  01308A  0E02               	movlw	2
 41897  01308C  D001               	goto	L65
 41898  01308E                     l2295:
 41899                           
 41900                           ; BSR set to: 0
 41901                           ;api.c: 263: else;api.c: 264: {;api.c: 265: start_line = 0;
 41902                           
 41903                           ; BSR set to: 0
 41904  01308E  0E00               	movlw	0
 41905  013090                     L65:
 41906  013090  6F6E               	movwf	__fill_buffer_get_display@start_line& (0+255),b
 41907                           
 41908                           ; BSR set to: 0
 41909                           ;api.c: 266: };api.c: 267: for(line=start_line; line<start_line+2; ++line)
 41910                           
 41911                           ; BSR set to: 0
 41912  013092  C06E  F06D         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 41913  013096  D01B               	goto	l2297
 41914  013098                     
 41915                           ; BSR set to: 0
 41916                           ;api.c: 268: {;api.c: 269: for(position=0; position<20; ++position)
 41917                           
 41918                           ; BSR set to: 0
 41919  013098  0E00               	movlw	0
 41920  01309A  6F6F               	movwf	__fill_buffer_get_display@position& (0+255),b
 41921  01309C                     l16544:
 41922                           
 41923                           ; BSR set to: 0
 41924  01309C  0E13               	movlw	19
 41925  01309E  656F               	cpfsgt	__fill_buffer_get_display@position& (0+255),b
 41926  0130A0  D001               	goto	l2299
 41927  0130A2  D014               	goto	u15690
 41928  0130A4                     l2299:
 41929                           
 41930                           ; BSR set to: 0
 41931                           ;api.c: 270: {;api.c: 271: outBuffer[cntr] = (uint8_t) display_get_character(line, posit
      +                          ion);
 41932                           
 41933                           ; BSR set to: 0
 41934  0130A4  C06F  F060         	movff	__fill_buffer_get_display@position,display_get_character@position
 41935  0130A8  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 41936  0130AA  EC26  F0AD         	call	_display_get_character
 41937  0130AE  0100               	movlb	0	; () banked
 41938  0130B0  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 41939  0130B2  516C               	movf	__fill_buffer_get_display@cntr& (0+255),w,b
 41940  0130B4  0D01               	mullw	1
 41941  0130B6  50F3               	movf	prodl,w,c
 41942  0130B8  2564               	addwf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 41943  0130BA  6ED9               	movwf	fsr2l,c
 41944  0130BC  50F4               	movf	prodh,w,c
 41945  0130BE  2165               	addwfc	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 41946  0130C0  6EDA               	movwf	fsr2h,c
 41947  0130C2  C067  FFDF         	movff	??__fill_buffer_get_display,indf2
 41948                           
 41949                           ; BSR set to: 0
 41950                           ;api.c: 272: ++cntr;
 41951  0130C6  2B6C               	incf	__fill_buffer_get_display@cntr& (0+255),f,b
 41952                           
 41953                           ; BSR set to: 0
 41954  0130C8  2B6F               	incf	__fill_buffer_get_display@position& (0+255),f,b
 41955  0130CA  D7E8               	goto	l16544
 41956  0130CC                     u15690:
 41957                           
 41958                           ; BSR set to: 0
 41959                           
 41960                           ; BSR set to: 0
 41961  0130CC  2B6D               	incf	__fill_buffer_get_display@line& (0+255),f,b
 41962  0130CE                     l2297:
 41963                           
 41964                           ; BSR set to: 0
 41965                           
 41966                           ; BSR set to: 0
 41967  0130CE  516E               	movf	__fill_buffer_get_display@start_line& (0+255),w,b
 41968  0130D0  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 41969  0130D2  6B68               	clrf	(??__fill_buffer_get_display+1)& (0+255),b
 41970  0130D4  0E02               	movlw	2
 41971  0130D6  2767               	addwf	??__fill_buffer_get_display& (0+255),f,b
 41972  0130D8  0E00               	movlw	0
 41973  0130DA  2368               	addwfc	(??__fill_buffer_get_display+1)& (0+255),f,b
 41974  0130DC  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 41975  0130DE  6F69               	movwf	(??__fill_buffer_get_display+2)& (0+255),b
 41976  0130E0  6B6A               	clrf	(??__fill_buffer_get_display+3)& (0+255),b
 41977  0130E2  5167               	movf	??__fill_buffer_get_display& (0+255),w,b
 41978  0130E4  5D69               	subwf	(??__fill_buffer_get_display+2)& (0+255),w,b
 41979  0130E6  516A               	movf	(??__fill_buffer_get_display+3)& (0+255),w,b
 41980  0130E8  0A80               	xorlw	128
 41981  0130EA  6F6B               	movwf	(??__fill_buffer_get_display+4)& (0+255),b
 41982  0130EC  5168               	movf	(??__fill_buffer_get_display+1)& (0+255),w,b
 41983  0130EE  0A80               	xorlw	128
 41984  0130F0  596B               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,b
 41985  0130F2  B0D8               	btfsc	status,0,c
 41986  0130F4  0012               	return	
 41987  0130F6  D7D0               	goto	l2298
 41988  0130F8                     __end_of__fill_buffer_get_display:
 41989                           	opt stack 0
 41990                           tosu	equ	0xFFF
 41991                           tosh	equ	0xFFE
 41992                           tosl	equ	0xFFD
 41993                           pclath	equ	0xFFA
 41994                           tblptru	equ	0xFF8
 41995                           tblptrh	equ	0xFF7
 41996                           tblptrl	equ	0xFF6
 41997                           tablat	equ	0xFF5
 41998                           prodh	equ	0xFF4
 41999                           prodl	equ	0xFF3
 42000                           intcon	equ	0xFF2
 42001                           indf0	equ	0xFEF
 42002                           postinc0	equ	0xFEE
 42003                           fsr0h	equ	0xFEA
 42004                           fsr0l	equ	0xFE9
 42005                           wreg	equ	0xFE8
 42006                           indf1	equ	0xFE7
 42007                           postinc1	equ	0xFE6
 42008                           postdec1	equ	0xFE5
 42009                           plusw1	equ	0xFE3
 42010                           fsr1h	equ	0xFE2
 42011                           fsr1l	equ	0xFE1
 42012                           indf2	equ	0xFDF
 42013                           postinc2	equ	0xFDE
 42014                           postdec2	equ	0xFDD
 42015                           plusw2	equ	0xFDB
 42016                           fsr2h	equ	0xFDA
 42017                           fsr2l	equ	0xFD9
 42018                           status	equ	0xFD8
 42019                           
 42020 ;; *************** function _display_get_character *****************
 42021 ;; Defined at:
 42022 ;;		line 646 in file "display.c"
 42023 ;; Parameters:    Size  Location     Type
 42024 ;;  line            1    wreg     unsigned char 
 42025 ;;  position        1    0[BANK0 ] unsigned char 
 42026 ;; Auto vars:     Size  Location     Type
 42027 ;;  line            1    3[BANK0 ] unsigned char 
 42028 ;; Return value:  Size  Location     Type
 42029 ;;                  1    wreg      unsigned char 
 42030 ;; Registers used:
 42031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 42032 ;; Tracked objects:
 42033 ;;		On entry : 0/0
 42034 ;;		On exit  : 0/0
 42035 ;;		Unchanged: 0/0
 42036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42037 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42038 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42039 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42040 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42041 ;;Total ram usage:        4 bytes
 42042 ;; Hardware stack levels used:    1
 42043 ;; Hardware stack levels required when called:   10
 42044 ;; This function calls:
 42045 ;;		Nothing
 42046 ;; This function is called by:
 42047 ;;		__fill_buffer_get_display
 42048 ;; This function uses a non-reentrant model
 42049 ;;
 42050                           
 42051                           	psect	text169
 42052  015A4C                     __ptext169:
 42053                           	opt stack 0
 42054  015A4C                     _display_get_character:
 42055                           	opt stack 17
 42056                           
 42057                           ; BSR set to: 0
 42058                           ;incstack = 0
 42059                           ;display_get_character@line stored from wreg
 42060  015A4C  0100               	movlb	0	; () banked
 42061  015A4E  6F63               	movwf	display_get_character@line& (0+255),b
 42062                           
 42063                           ;display.c: 648: return display_content[line][position];
 42064  015A50  0100               	movlb	0	; () banked
 42065  015A52  5163               	movf	display_get_character@line& (0+255),w,b
 42066  015A54  0D14               	mullw	20
 42067  015A56  0E44               	movlw	low _display_content
 42068  015A58  6F61               	movwf	??_display_get_character& (0+255),b
 42069  015A5A  0E02               	movlw	high _display_content
 42070  015A5C  6F62               	movwf	(??_display_get_character+1)& (0+255),b
 42071  015A5E  50F3               	movf	prodl,w,c
 42072  015A60  2761               	addwf	??_display_get_character& (0+255),f,b
 42073  015A62  50F4               	movf	prodh,w,c
 42074  015A64  2362               	addwfc	(??_display_get_character+1)& (0+255),f,b
 42075  015A66  5160               	movf	display_get_character@position& (0+255),w,b
 42076  015A68  0D01               	mullw	1
 42077  015A6A  50F3               	movf	prodl,w,c
 42078  015A6C  2561               	addwf	??_display_get_character& (0+255),w,b
 42079  015A6E  6ED9               	movwf	fsr2l,c
 42080  015A70  50F4               	movf	prodh,w,c
 42081  015A72  2162               	addwfc	(??_display_get_character+1)& (0+255),w,b
 42082  015A74  6EDA               	movwf	fsr2h,c
 42083  015A76  50DF               	movf	indf2,w,c
 42084  015A78  0012               	return	
 42085  015A7A                     __end_of_display_get_character:
 42086                           	opt stack 0
 42087                           tosu	equ	0xFFF
 42088                           tosh	equ	0xFFE
 42089                           tosl	equ	0xFFD
 42090                           pclath	equ	0xFFA
 42091                           tblptru	equ	0xFF8
 42092                           tblptrh	equ	0xFF7
 42093                           tblptrl	equ	0xFF6
 42094                           tablat	equ	0xFF5
 42095                           prodh	equ	0xFF4
 42096                           prodl	equ	0xFF3
 42097                           intcon	equ	0xFF2
 42098                           indf0	equ	0xFEF
 42099                           postinc0	equ	0xFEE
 42100                           fsr0h	equ	0xFEA
 42101                           fsr0l	equ	0xFE9
 42102                           wreg	equ	0xFE8
 42103                           indf1	equ	0xFE7
 42104                           postinc1	equ	0xFE6
 42105                           postdec1	equ	0xFE5
 42106                           plusw1	equ	0xFE3
 42107                           fsr1h	equ	0xFE2
 42108                           fsr1l	equ	0xFE1
 42109                           indf2	equ	0xFDF
 42110                           postinc2	equ	0xFDE
 42111                           postdec2	equ	0xFDD
 42112                           plusw2	equ	0xFDB
 42113                           fsr2h	equ	0xFDA
 42114                           fsr2l	equ	0xFD9
 42115                           status	equ	0xFD8
 42116                           
 42117 ;; *************** function _api_parse *****************
 42118 ;; Defined at:
 42119 ;;		line 94 in file "api.c"
 42120 ;; Parameters:    Size  Location     Type
 42121 ;;  inBuffer        2   71[BANK0 ] PTR unsigned char 
 42122 ;;		 -> ReceivedDataBuffer(64), 
 42123 ;;  receivedData    1   73[BANK0 ] unsigned char 
 42124 ;;  outBuffer       2   74[BANK0 ] PTR unsigned char 
 42125 ;;		 -> ToSendDataBuffer(64), 
 42126 ;; Auto vars:     Size  Location     Type
 42127 ;;  out_idx_ptr     2   78[BANK0 ] PTR unsigned char 
 42128 ;;		 -> api_parse@out_idx(1), 
 42129 ;;  in_idx          1   81[BANK0 ] unsigned char 
 42130 ;;  out_idx         1   80[BANK0 ] unsigned char 
 42131 ;; Return value:  Size  Location     Type
 42132 ;;                  1    wreg      void 
 42133 ;; Registers used:
 42134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42135 ;; Tracked objects:
 42136 ;;		On entry : 0/0
 42137 ;;		On exit  : 0/0
 42138 ;;		Unchanged: 0/0
 42139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42140 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42141 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42142 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42143 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42144 ;;Total ram usage:       11 bytes
 42145 ;; Hardware stack levels used:    1
 42146 ;; Hardware stack levels required when called:   16
 42147 ;; This function calls:
 42148 ;;		__parse_command_long
 42149 ;;		__parse_command_short
 42150 ;; This function is called by:
 42151 ;;		_APP_DeviceCustomHIDTasks
 42152 ;; This function uses a non-reentrant model
 42153 ;;
 42154                           
 42155                           	psect	text170
 42156  010A44                     __ptext170:
 42157                           	opt stack 0
 42158  010A44                     _api_parse:
 42159                           	opt stack 13
 42160                           
 42161                           ;api.c: 98: uint8_t in_idx;;api.c: 99: uint8_t out_idx;;api.c: 100: uint8_t *out_idx_ptr
      +                          ;;api.c: 102: out_idx = 0;
 42162                           
 42163                           ; BSR set to: 0
 42164                           ;incstack = 0
 42165  010A44  0E00               	movlw	0
 42166  010A46  0100               	movlb	0	; () banked
 42167  010A48  6FB0               	movwf	api_parse@out_idx& (0+255),b
 42168                           
 42169                           ; BSR set to: 0
 42170                           ;api.c: 103: out_idx_ptr = &out_idx;
 42171  010A4A  0EB0               	movlw	low api_parse@out_idx
 42172  010A4C  6FAE               	movwf	api_parse@out_idx_ptr& (0+255),b
 42173  010A4E  0E00               	movlw	high api_parse@out_idx
 42174  010A50  6FAF               	movwf	(api_parse@out_idx_ptr+1)& (0+255),b
 42175                           
 42176                           ; BSR set to: 0
 42177                           ;api.c: 105: if(inBuffer[0]>0x7F)
 42178  010A52  C0A7  FFD9         	movff	api_parse@inBuffer,fsr2l
 42179  010A56  C0A8  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 42180  010A5A  0E7F               	movlw	127
 42181  010A5C  64DF               	cpfsgt	indf2,c
 42182  010A5E  D001               	goto	l2274
 42183  010A60  0012               	return	
 42184  010A62                     l2274:
 42185                           
 42186                           ; BSR set to: 0
 42187                           ;api.c: 110: };api.c: 112: if(inBuffer[0]==DATAREQUEST_GET_ECHO)
 42188                           
 42189                           ; BSR set to: 0
 42190  010A62  C0A7  FFD9         	movff	api_parse@inBuffer,fsr2l
 42191  010A66  C0A8  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 42192  010A6A  0E20               	movlw	32
 42193  010A6C  18DE               	xorwf	postinc2,w,c
 42194  010A6E  B4D8               	btfsc	status,2,c
 42195  010A70  0012               	return	
 42196                           
 42197                           ; BSR set to: 0
 42198                           ;api.c: 117: };api.c: 119: if(inBuffer[0]==DATAREQUEST_GET_COMMAND_RESPONSE)
 42199                           
 42200                           ; BSR set to: 0
 42201                           
 42202                           ; BSR set to: 0
 42203                           ;api.c: 113: {;api.c: 116: return;
 42204  010A72  C0A7  FFD9         	movff	api_parse@inBuffer,fsr2l
 42205  010A76  C0A8  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 42206  010A7A  50DF               	movf	indf2,w,c
 42207  010A7C  A4D8               	btfss	status,2,c
 42208  010A7E  D018               	goto	l2277
 42209                           
 42210                           ; BSR set to: 0
 42211                           ;api.c: 120: {;api.c: 122: outBuffer[0] = DATAREQUEST_GET_COMMAND_RESPONSE;
 42212  010A80  C0AA  FFD9         	movff	api_parse@outBuffer,fsr2l
 42213  010A84  C0AB  FFDA         	movff	api_parse@outBuffer+1,fsr2h
 42214  010A88  0E00               	movlw	0
 42215  010A8A  6EDF               	movwf	indf2,c
 42216                           
 42217                           ; BSR set to: 0
 42218                           ;api.c: 125: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 42219  010A8C  EE20 F001          	lfsr	2,1
 42220  010A90  51AA               	movf	api_parse@outBuffer& (0+255),w,b
 42221  010A92  26D9               	addwf	fsr2l,f,c
 42222  010A94  51AB               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 42223  010A96  22DA               	addwfc	fsr2h,f,c
 42224  010A98  0EBC               	movlw	188
 42225  010A9A  6EDF               	movwf	indf2,c
 42226                           
 42227                           ; BSR set to: 0
 42228                           ;api.c: 126: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 42229  010A9C  EE20 F002          	lfsr	2,2
 42230  010AA0  51AA               	movf	api_parse@outBuffer& (0+255),w,b
 42231  010AA2  26D9               	addwf	fsr2l,f,c
 42232  010AA4  51AB               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 42233  010AA6  22DA               	addwfc	fsr2h,f,c
 42234  010AA8  0E26               	movlw	38
 42235  010AAA  6EDF               	movwf	indf2,c
 42236                           
 42237                           ; BSR set to: 0
 42238                           ;api.c: 129: out_idx = 3;
 42239  010AAC  0E03               	movlw	3
 42240  010AAE  6FB0               	movwf	api_parse@out_idx& (0+255),b
 42241  010AB0                     l2277:
 42242                           
 42243                           ; BSR set to: 0
 42244                           ;api.c: 130: };api.c: 132: in_idx = 1;
 42245                           
 42246                           ; BSR set to: 0
 42247  010AB0  0E01               	movlw	1
 42248  010AB2  6FB1               	movwf	api_parse@in_idx& (0+255),b
 42249                           
 42250                           ;api.c: 133: while(in_idx<receivedDataLength)
 42251  010AB4  D057               	goto	l2283
 42252  010AB6                     
 42253                           ; BSR set to: 0
 42254                           ;api.c: 134: {;api.c: 136: if(inBuffer[in_idx]==COMMAND_STOP_PARSING)
 42255                           
 42256                           ; BSR set to: 0
 42257  010AB6  51B1               	movf	api_parse@in_idx& (0+255),w,b
 42258  010AB8  0D01               	mullw	1
 42259  010ABA  50F3               	movf	prodl,w,c
 42260  010ABC  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 42261  010ABE  6ED9               	movwf	fsr2l,c
 42262  010AC0  50F4               	movf	prodh,w,c
 42263  010AC2  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 42264  010AC4  6EDA               	movwf	fsr2h,c
 42265  010AC6  0E99               	movlw	153
 42266  010AC8  18DE               	xorwf	postinc2,w,c
 42267  010ACA  B4D8               	btfsc	status,2,c
 42268  010ACC  0012               	return	
 42269  010ACE  D02F               	goto	l2281
 42270  010AD0                     
 42271                           ; BSR set to: 0
 42272                           ;api.c: 144: _parse_command_short(inBuffer[in_idx]);
 42273                           
 42274                           ; BSR set to: 0
 42275  010AD0  51B1               	movf	api_parse@in_idx& (0+255),w,b
 42276  010AD2  0D01               	mullw	1
 42277  010AD4  50F3               	movf	prodl,w,c
 42278  010AD6  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 42279  010AD8  6ED9               	movwf	fsr2l,c
 42280  010ADA  50F4               	movf	prodh,w,c
 42281  010ADC  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 42282  010ADE  6EDA               	movwf	fsr2h,c
 42283  010AE0  50DF               	movf	indf2,w,c
 42284  010AE2  ECEA  F07C         	call	__parse_command_short
 42285  010AE6  D00B               	goto	l17250
 42286  010AE8                     
 42287                           ; BSR set to: 0
 42288                           ;api.c: 149: _parse_command_short(inBuffer[in_idx]);
 42289                           
 42290                           ; BSR set to: 0
 42291  010AE8  51B1               	movf	api_parse@in_idx& (0+255),w,b
 42292  010AEA  0D01               	mullw	1
 42293  010AEC  50F3               	movf	prodl,w,c
 42294  010AEE  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 42295  010AF0  6ED9               	movwf	fsr2l,c
 42296  010AF2  50F4               	movf	prodh,w,c
 42297  010AF4  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 42298  010AF6  6EDA               	movwf	fsr2h,c
 42299  010AF8  50DF               	movf	indf2,w,c
 42300  010AFA  ECEA  F07C         	call	__parse_command_short
 42301  010AFE                     l17250:
 42302                           
 42303                           ;api.c: 150: ++in_idx;
 42304  010AFE  0100               	movlb	0	; () banked
 42305  010B00  2BB1               	incf	api_parse@in_idx& (0+255),f,b
 42306                           
 42307                           ;api.c: 151: break;
 42308  010B02  D030               	goto	l2283
 42309  010B04                     
 42310                           ; BSR set to: 0
 42311                           ;api.c: 154: in_idx += _parse_command_long(&inBuffer[in_idx], outBuffer, out_idx_ptr);
 42312                           
 42313                           ; BSR set to: 0
 42314  010B04  51B1               	movf	api_parse@in_idx& (0+255),w,b
 42315  010B06  0D01               	mullw	1
 42316  010B08  50F3               	movf	prodl,w,c
 42317  010B0A  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 42318  010B0C  6FA0               	movwf	__parse_command_long@data& (0+255),b
 42319  010B0E  50F4               	movf	prodh,w,c
 42320  010B10  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 42321  010B12  6FA1               	movwf	(__parse_command_long@data+1)& (0+255),b
 42322  010B14  C0AA  F0A2         	movff	api_parse@outBuffer,__parse_command_long@out_buffer
 42323  010B18  C0AB  F0A3         	movff	api_parse@outBuffer+1,__parse_command_long@out_buffer+1
 42324  010B1C  C0AE  F0A4         	movff	api_parse@out_idx_ptr,__parse_command_long@out_idx_ptr
 42325  010B20  C0AF  F0A5         	movff	api_parse@out_idx_ptr+1,__parse_command_long@out_idx_ptr+1
 42326  010B24  ECFF  F09E         	call	__parse_command_long	;wreg free
 42327  010B28  0100               	movlb	0	; () banked
 42328  010B2A  27B1               	addwf	api_parse@in_idx& (0+255),f,b
 42329                           
 42330                           ;api.c: 155: break;
 42331  010B2C  D01B               	goto	l2283
 42332  010B2E                     l2281:
 42333                           
 42334                           ; BSR set to: 0
 42335                           
 42336                           ; BSR set to: 0
 42337  010B2E  51B1               	movf	api_parse@in_idx& (0+255),w,b
 42338  010B30  0D01               	mullw	1
 42339  010B32  50F3               	movf	prodl,w,c
 42340  010B34  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 42341  010B36  6ED9               	movwf	fsr2l,c
 42342  010B38  50F4               	movf	prodh,w,c
 42343  010B3A  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 42344  010B3C  6EDA               	movwf	fsr2h,c
 42345  010B3E  50DF               	movf	indf2,w,c
 42346  010B40  0BF0               	andlw	240
 42347  010B42  6FAC               	movwf	??_api_parse& (0+255),b
 42348  010B44  6BAD               	clrf	(??_api_parse+1)& (0+255),b
 42349                           
 42350                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 42351                           ; Switch size 1, requested type "space"
 42352                           ; Number of cases is 1, Range of values is 0 to 0
 42353                           ; switch strategies available:
 42354                           ; Name         Instructions Cycles
 42355                           ; simple_byte            4     3 (average)
 42356                           ;	Chosen strategy is simple_byte
 42357  010B46  51AD               	movf	(??_api_parse+1)& (0+255),w,b
 42358  010B48  0A00               	xorlw	0	; case 0
 42359  010B4A  A4D8               	btfss	status,2,c
 42360  010B4C  0012               	return	
 42361                           
 42362                           ; BSR set to: 0
 42363                           ; Switch size 1, requested type "space"
 42364                           ; Number of cases is 3, Range of values is 32 to 144
 42365                           ; switch strategies available:
 42366                           ; Name         Instructions Cycles
 42367                           ; simple_byte           10     6 (average)
 42368                           ;	Chosen strategy is simple_byte
 42369  010B4E  51AC               	movf	??_api_parse& (0+255),w,b
 42370  010B50  0A20               	xorlw	32	; case 32
 42371  010B52  B4D8               	btfsc	status,2,c
 42372  010B54  D7BD               	goto	l2282
 42373  010B56  0A10               	xorlw	16	; case 48
 42374  010B58  B4D8               	btfsc	status,2,c
 42375  010B5A  D7C6               	goto	l2284
 42376  010B5C  0AA0               	xorlw	160	; case 144
 42377  010B5E  A4D8               	btfss	status,2,c
 42378  010B60  0012               	return	
 42379  010B62  D7D0               	goto	l2285
 42380  010B64                     l2283:
 42381                           
 42382                           ; BSR set to: 0
 42383                           
 42384                           ; BSR set to: 0
 42385                           
 42386                           ; BSR set to: 0
 42387  010B64  51A9               	movf	api_parse@receivedDataLength& (0+255),w,b
 42388  010B66  5DB1               	subwf	api_parse@in_idx& (0+255),w,b
 42389  010B68  B0D8               	btfsc	status,0,c
 42390  010B6A  0012               	return	
 42391  010B6C  D7A4               	goto	l2279
 42392  010B6E                     __end_of_api_parse:
 42393                           	opt stack 0
 42394                           tosu	equ	0xFFF
 42395                           tosh	equ	0xFFE
 42396                           tosl	equ	0xFFD
 42397                           pclath	equ	0xFFA
 42398                           tblptru	equ	0xFF8
 42399                           tblptrh	equ	0xFF7
 42400                           tblptrl	equ	0xFF6
 42401                           tablat	equ	0xFF5
 42402                           prodh	equ	0xFF4
 42403                           prodl	equ	0xFF3
 42404                           intcon	equ	0xFF2
 42405                           indf0	equ	0xFEF
 42406                           postinc0	equ	0xFEE
 42407                           fsr0h	equ	0xFEA
 42408                           fsr0l	equ	0xFE9
 42409                           wreg	equ	0xFE8
 42410                           indf1	equ	0xFE7
 42411                           postinc1	equ	0xFE6
 42412                           postdec1	equ	0xFE5
 42413                           plusw1	equ	0xFE3
 42414                           fsr1h	equ	0xFE2
 42415                           fsr1l	equ	0xFE1
 42416                           indf2	equ	0xFDF
 42417                           postinc2	equ	0xFDE
 42418                           postdec2	equ	0xFDD
 42419                           plusw2	equ	0xFDB
 42420                           fsr2h	equ	0xFDA
 42421                           fsr2l	equ	0xFD9
 42422                           status	equ	0xFD8
 42423                           
 42424 ;; *************** function __parse_command_short *****************
 42425 ;; Defined at:
 42426 ;;		line 331 in file "api.c"
 42427 ;; Parameters:    Size  Location     Type
 42428 ;;  cmd             1    wreg     unsigned char 
 42429 ;; Auto vars:     Size  Location     Type
 42430 ;;  cmd             1   62[BANK0 ] unsigned char 
 42431 ;; Return value:  Size  Location     Type
 42432 ;;                  1    wreg      void 
 42433 ;; Registers used:
 42434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42435 ;; Tracked objects:
 42436 ;;		On entry : 0/0
 42437 ;;		On exit  : 0/0
 42438 ;;		Unchanged: 0/0
 42439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42441 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42443 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42444 ;;Total ram usage:        1 bytes
 42445 ;; Hardware stack levels used:    1
 42446 ;; Hardware stack levels required when called:   14
 42447 ;; This function calls:
 42448 ;;		_motor_clear_command_cue
 42449 ;;		_motor_goto_steps
 42450 ;;		_motor_move_endless
 42451 ;;		_motor_set_zero
 42452 ;;		_motor_stop
 42453 ;; This function is called by:
 42454 ;;		_api_parse
 42455 ;; This function uses a non-reentrant model
 42456 ;;
 42457                           
 42458                           	psect	text171
 42459  00F9D4                     __ptext171:
 42460                           	opt stack 0
 42461  00F9D4                     __parse_command_short:
 42462                           	opt stack 14
 42463                           
 42464                           ; BSR set to: 0
 42465                           ;incstack = 0
 42466                           ;__parse_command_short@cmd stored from wreg
 42467  00F9D4  0100               	movlb	0	; () banked
 42468  00F9D6  6F9E               	movwf	__parse_command_short@cmd& (0+255),b
 42469                           
 42470                           ;api.c: 333: switch(cmd)
 42471  00F9D8  D072               	goto	l2319
 42472  00F9DA                     
 42473                           ;api.c: 351: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 42474  00F9DA  0E01               	movlw	1
 42475  00F9DC  0101               	movlb	1	; () banked
 42476  00F9DE  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 42477                           
 42478                           ;api.c: 352: break;
 42479  00F9E0  0012               	return	
 42480  00F9E2                     
 42481                           ;api.c: 355: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 42482                           
 42483                           ; BSR set to: 1
 42484  00F9E2  0E11               	movlw	17
 42485  00F9E4  0101               	movlb	1	; () banked
 42486  00F9E6  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 42487                           
 42488                           ;api.c: 356: break;
 42489  00F9E8  0012               	return	
 42490  00F9EA                     
 42491                           ;api.c: 359: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 42492                           
 42493                           ; BSR set to: 1
 42494  00F9EA  0E31               	movlw	49
 42495  00F9EC  0101               	movlb	1	; () banked
 42496  00F9EE  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 42497                           
 42498                           ;api.c: 360: break;
 42499  00F9F0  0012               	return	
 42500  00F9F2                     
 42501                           ;api.c: 363: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 42502                           
 42503                           ; BSR set to: 1
 42504  00F9F2  0E51               	movlw	81
 42505  00F9F4  0101               	movlb	1	; () banked
 42506  00F9F6  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 42507                           
 42508                           ;api.c: 364: break;
 42509  00F9F8  0012               	return	
 42510  00F9FA                     
 42511                           ;api.c: 367: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 42512                           
 42513                           ; BSR set to: 1
 42514  00F9FA  0E82               	movlw	130
 42515  00F9FC  0101               	movlb	1	; () banked
 42516  00F9FE  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 42517                           
 42518                           ;api.c: 368: break;
 42519  00FA00  0012               	return	
 42520  00FA02                     
 42521                           ;api.c: 371: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
 42522                           
 42523                           ; BSR set to: 1
 42524  00FA02  0E71               	movlw	113
 42525  00FA04  0101               	movlb	1	; () banked
 42526  00FA06  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 42527                           
 42528                           ;api.c: 372: break;
 42529  00FA08  0012               	return	
 42530  00FA0A                     
 42531                           ;api.c: 375: motor_set_zero(MOTOR_DIRECTION_CCW);
 42532                           
 42533                           ; BSR set to: 1
 42534  00FA0A  0EFF               	movlw	255
 42535  00FA0C  EC49  F0AB         	call	_motor_set_zero
 42536                           
 42537                           ;api.c: 376: break;
 42538  00FA10  0012               	return	
 42539  00FA12                     
 42540                           ;api.c: 379: motor_set_zero(MOTOR_DIRECTION_CW);
 42541  00FA12  0E01               	movlw	1
 42542  00FA14  EC49  F0AB         	call	_motor_set_zero
 42543                           
 42544                           ;api.c: 380: break;
 42545  00FA18  0012               	return	
 42546  00FA1A                     
 42547                           ;api.c: 383: motor_goto_steps(MOTOR_DIRECTION_SHORTEST, 0, 0xFFFF, MOTOR_OVERSHOOT_WITH_
      +                          OVERSHOOT);
 42548  00FA1A  0E00               	movlw	0
 42549  00FA1C  0100               	movlb	0	; () banked
 42550  00FA1E  6F92               	movwf	motor_goto_steps@position& (0+255),b
 42551  00FA20  0E00               	movlw	0
 42552  00FA22  6F93               	movwf	(motor_goto_steps@position+1)& (0+255),b
 42553  00FA24  0E00               	movlw	0
 42554  00FA26  6F94               	movwf	(motor_goto_steps@position+2)& (0+255),b
 42555  00FA28  0E00               	movlw	0
 42556  00FA2A  6F95               	movwf	(motor_goto_steps@position+3)& (0+255),b
 42557  00FA2C  0EFF               	movlw	255
 42558  00FA2E  6F97               	movwf	(motor_goto_steps@speed+1)& (0+255),b
 42559  00FA30  6996               	setf	motor_goto_steps@speed& (0+255),b
 42560  00FA32  0E00               	movlw	0
 42561  00FA34  6F98               	movwf	motor_goto_steps@overshoot& (0+255),b
 42562  00FA36  0E00               	movlw	0
 42563  00FA38  ECCB  F09B         	call	_motor_goto_steps
 42564                           
 42565                           ;api.c: 385: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 42566  00FA3C  0E05               	movlw	5
 42567  00FA3E  0101               	movlb	1	; () banked
 42568  00FA40  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 42569                           
 42570                           ; BSR set to: 1
 42571                           ;api.c: 386: os.divide_position = 0;
 42572  00FA42  0E00               	movlw	0
 42573  00FA44  6F7C               	movwf	(_os+24)& (0+255),b	;volatile
 42574  00FA46  0E00               	movlw	0
 42575  00FA48  6F7B               	movwf	(_os+23)& (0+255),b	;volatile
 42576  00FA4A                     
 42577                           ;api.c: 389: --os.encoder2Count;
 42578                           
 42579                           ; BSR set to: 1
 42580  00FA4A  0101               	movlb	1	; () banked
 42581  00FA4C  0769               	decf	(_os+5)& (0+255),f,b	;volatile
 42582                           
 42583                           ;api.c: 390: break;
 42584  00FA4E  0012               	return	
 42585  00FA50                     
 42586                           ;api.c: 393: ++os.encoder2Count;
 42587                           
 42588                           ; BSR set to: 1
 42589  00FA50  0101               	movlb	1	; () banked
 42590  00FA52  2B69               	incf	(_os+5)& (0+255),f,b	;volatile
 42591                           
 42592                           ;api.c: 394: break;
 42593  00FA54  0012               	return	
 42594  00FA56                     
 42595                           ;api.c: 397: ++os.button2;
 42596                           
 42597                           ; BSR set to: 1
 42598  00FA56  0101               	movlb	1	; () banked
 42599  00FA58  2B6A               	incf	(_os+6)& (0+255),f,b	;volatile
 42600                           
 42601                           ;api.c: 398: break;
 42602  00FA5A  0012               	return	
 42603  00FA5C                     
 42604                           ;api.c: 401: --os.encoder1Count;
 42605                           
 42606                           ; BSR set to: 1
 42607  00FA5C  0101               	movlb	1	; () banked
 42608  00FA5E  0767               	decf	(_os+3)& (0+255),f,b	;volatile
 42609                           
 42610                           ;api.c: 402: break;
 42611  00FA60  0012               	return	
 42612  00FA62                     
 42613                           ;api.c: 405: ++os.encoder1Count;
 42614                           
 42615                           ; BSR set to: 1
 42616  00FA62  0101               	movlb	1	; () banked
 42617  00FA64  2B67               	incf	(_os+3)& (0+255),f,b	;volatile
 42618                           
 42619                           ;api.c: 406: break;
 42620  00FA66  0012               	return	
 42621  00FA68                     
 42622                           ;api.c: 409: ++os.button1;
 42623                           
 42624                           ; BSR set to: 1
 42625  00FA68  0101               	movlb	1	; () banked
 42626  00FA6A  2B68               	incf	(_os+4)& (0+255),f,b	;volatile
 42627                           
 42628                           ;api.c: 410: break;
 42629  00FA6C  0012               	return	
 42630  00FA6E                     
 42631                           ;api.c: 413: if(!os.busy)
 42632                           
 42633                           ; BSR set to: 1
 42634  00FA6E  0101               	movlb	1	; () banked
 42635  00FA70  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 42636  00FA72  A4D8               	btfss	status,2,c
 42637  00FA74  0012               	return	
 42638                           
 42639                           ; BSR set to: 1
 42640                           ;api.c: 414: {;api.c: 415: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 42641  00FA76  0E84               	movlw	132
 42642  00FA78  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 42643                           
 42644                           ; BSR set to: 1
 42645                           ;api.c: 416: motor_move_endless(MOTOR_DIRECTION_CCW, os.manual_speed);
 42646  00FA7A  C188  F08C         	movff	_os+36,motor_move_endless@speed	;volatile
 42647  00FA7E  C189  F08D         	movff	_os+37,motor_move_endless@speed+1	;volatile
 42648  00FA82  0EFF               	movlw	255
 42649  00FA84  EC3D  F0AD         	call	_motor_move_endless
 42650                           
 42651                           ;api.c: 417: };api.c: 418: break;
 42652  00FA88  0012               	return	
 42653  00FA8A                     
 42654                           ;api.c: 421: if(!os.busy)
 42655  00FA8A  0101               	movlb	1	; () banked
 42656  00FA8C  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 42657  00FA8E  A4D8               	btfss	status,2,c
 42658  00FA90  0012               	return	
 42659                           
 42660                           ; BSR set to: 1
 42661                           ;api.c: 422: {;api.c: 423: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 42662  00FA92  0E84               	movlw	132
 42663  00FA94  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 42664                           
 42665                           ; BSR set to: 1
 42666                           ;api.c: 424: motor_move_endless(MOTOR_DIRECTION_CW, os.manual_speed);
 42667  00FA96  C188  F08C         	movff	_os+36,motor_move_endless@speed	;volatile
 42668  00FA9A  C189  F08D         	movff	_os+37,motor_move_endless@speed+1	;volatile
 42669  00FA9E  0E01               	movlw	1
 42670  00FAA0  EC3D  F0AD         	call	_motor_move_endless
 42671                           
 42672                           ;api.c: 425: };api.c: 426: break;
 42673  00FAA4  0012               	return	
 42674  00FAA6                     
 42675                           ;api.c: 429: if(os.busy)
 42676  00FAA6  0101               	movlb	1	; () banked
 42677  00FAA8  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 42678  00FAAA  B4D8               	btfsc	status,2,c
 42679  00FAAC  0012               	return	
 42680                           
 42681                           ; BSR set to: 1
 42682                           ;api.c: 430: {;api.c: 431: motor_stop();
 42683  00FAAE  EC33  F0A9         	call	_motor_stop	;wreg free
 42684                           
 42685                           ;api.c: 432: motor_clear_command_cue();
 42686  00FAB2  EC82  F0AF         	call	_motor_clear_command_cue	;wreg free
 42687                           
 42688                           ;api.c: 433: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 42689  00FAB6  0E82               	movlw	130
 42690  00FAB8  0101               	movlb	1	; () banked
 42691  00FABA  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 42692                           
 42693                           ; BSR set to: 1
 42694                           ;api.c: 436: }
 42695                           
 42696                           ; BSR set to: 1
 42697                           ;api.c: 434: };api.c: 435: break;
 42698  00FABC  0012               	return	
 42699  00FABE                     l2319:
 42700                           
 42701                           ; BSR set to: 1
 42702  00FABE  0100               	movlb	0	; () banked
 42703  00FAC0  519E               	movf	__parse_command_short@cmd& (0+255),w,b
 42704                           
 42705                           ; Switch size 1, requested type "space"
 42706                           ; Number of cases is 18, Range of values is 32 to 56
 42707                           ; switch strategies available:
 42708                           ; Name         Instructions Cycles
 42709                           ; simple_byte           55    28 (average)
 42710                           ;	Chosen strategy is simple_byte
 42711  00FAC2  0A20               	xorlw	32	; case 32
 42712  00FAC4  B4D8               	btfsc	status,2,c
 42713  00FAC6  D789               	goto	l2320
 42714  00FAC8  0A01               	xorlw	1	; case 33
 42715  00FACA  B4D8               	btfsc	status,2,c
 42716  00FACC  D78A               	goto	l2322
 42717  00FACE  0A03               	xorlw	3	; case 34
 42718  00FAD0  B4D8               	btfsc	status,2,c
 42719  00FAD2  D78B               	goto	l2323
 42720  00FAD4  0A01               	xorlw	1	; case 35
 42721  00FAD6  B4D8               	btfsc	status,2,c
 42722  00FAD8  D78C               	goto	l2324
 42723  00FADA  0A07               	xorlw	7	; case 36
 42724  00FADC  B4D8               	btfsc	status,2,c
 42725  00FADE  D78D               	goto	l2325
 42726  00FAE0  0A01               	xorlw	1	; case 37
 42727  00FAE2  B4D8               	btfsc	status,2,c
 42728  00FAE4  D78E               	goto	l2326
 42729  00FAE6  0A03               	xorlw	3	; case 38
 42730  00FAE8  B4D8               	btfsc	status,2,c
 42731  00FAEA  D78F               	goto	l2327
 42732  00FAEC  0A01               	xorlw	1	; case 39
 42733  00FAEE  B4D8               	btfsc	status,2,c
 42734  00FAF0  D790               	goto	l2328
 42735  00FAF2  0A0F               	xorlw	15	; case 40
 42736  00FAF4  B4D8               	btfsc	status,2,c
 42737  00FAF6  D791               	goto	l2329
 42738  00FAF8  0A18               	xorlw	24	; case 48
 42739  00FAFA  B4D8               	btfsc	status,2,c
 42740  00FAFC  D7A6               	goto	l2330
 42741  00FAFE  0A01               	xorlw	1	; case 49
 42742  00FB00  B4D8               	btfsc	status,2,c
 42743  00FB02  D7A6               	goto	l2331
 42744  00FB04  0A03               	xorlw	3	; case 50
 42745  00FB06  B4D8               	btfsc	status,2,c
 42746  00FB08  D7A6               	goto	l2332
 42747  00FB0A  0A01               	xorlw	1	; case 51
 42748  00FB0C  B4D8               	btfsc	status,2,c
 42749  00FB0E  D7A6               	goto	l2333
 42750  00FB10  0A07               	xorlw	7	; case 52
 42751  00FB12  B4D8               	btfsc	status,2,c
 42752  00FB14  D7A6               	goto	l2334
 42753  00FB16  0A01               	xorlw	1	; case 53
 42754  00FB18  B4D8               	btfsc	status,2,c
 42755  00FB1A  D7A6               	goto	l2335
 42756  00FB1C  0A03               	xorlw	3	; case 54
 42757  00FB1E  B4D8               	btfsc	status,2,c
 42758  00FB20  D7A6               	goto	l2336
 42759  00FB22  0A01               	xorlw	1	; case 55
 42760  00FB24  B4D8               	btfsc	status,2,c
 42761  00FB26  D7B1               	goto	l2338
 42762  00FB28  0A0F               	xorlw	15	; case 56
 42763  00FB2A  A4D8               	btfss	status,2,c
 42764  00FB2C  0012               	return	
 42765  00FB2E  D7BB               	goto	l2340
 42766  00FB30                     __end_of__parse_command_short:
 42767                           	opt stack 0
 42768                           tosu	equ	0xFFF
 42769                           tosh	equ	0xFFE
 42770                           tosl	equ	0xFFD
 42771                           pclath	equ	0xFFA
 42772                           tblptru	equ	0xFF8
 42773                           tblptrh	equ	0xFF7
 42774                           tblptrl	equ	0xFF6
 42775                           tablat	equ	0xFF5
 42776                           prodh	equ	0xFF4
 42777                           prodl	equ	0xFF3
 42778                           intcon	equ	0xFF2
 42779                           indf0	equ	0xFEF
 42780                           postinc0	equ	0xFEE
 42781                           fsr0h	equ	0xFEA
 42782                           fsr0l	equ	0xFE9
 42783                           wreg	equ	0xFE8
 42784                           indf1	equ	0xFE7
 42785                           postinc1	equ	0xFE6
 42786                           postdec1	equ	0xFE5
 42787                           plusw1	equ	0xFE3
 42788                           fsr1h	equ	0xFE2
 42789                           fsr1l	equ	0xFE1
 42790                           indf2	equ	0xFDF
 42791                           postinc2	equ	0xFDE
 42792                           postdec2	equ	0xFDD
 42793                           plusw2	equ	0xFDB
 42794                           fsr2h	equ	0xFDA
 42795                           fsr2l	equ	0xFD9
 42796                           status	equ	0xFD8
 42797                           
 42798 ;; *************** function _motor_stop *****************
 42799 ;; Defined at:
 42800 ;;		line 853 in file "motor.c"
 42801 ;; Parameters:    Size  Location     Type
 42802 ;;		None
 42803 ;; Auto vars:     Size  Location     Type
 42804 ;;		None
 42805 ;; Return value:  Size  Location     Type
 42806 ;;                  1    wreg      void 
 42807 ;; Registers used:
 42808 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 42809 ;; Tracked objects:
 42810 ;;		On entry : 0/0
 42811 ;;		On exit  : 0/0
 42812 ;;		Unchanged: 0/0
 42813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42816 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42817 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42818 ;;Total ram usage:        2 bytes
 42819 ;; Hardware stack levels used:    1
 42820 ;; Hardware stack levels required when called:   10
 42821 ;; This function calls:
 42822 ;;		Nothing
 42823 ;; This function is called by:
 42824 ;;		__parse_command_short
 42825 ;;		_encoder_statemachine
 42826 ;; This function uses a non-reentrant model
 42827 ;;
 42828                           
 42829                           	psect	text172
 42830  015266                     __ptext172:
 42831                           	opt stack 0
 42832  015266                     _motor_stop:
 42833                           	opt stack 19
 42834                           
 42835                           ;motor.c: 856: INTCONbits.GIE = 0;
 42836                           
 42837                           ;incstack = 0
 42838  015266  9EF2               	bcf	intcon,7,c	;volatile
 42839                           
 42840                           ;motor.c: 859: motor_move_type=MOTOR_MOVE_TYPE_NORMAL;
 42841  015268  0E00               	movlw	0
 42842  01526A  0101               	movlb	1	; () banked
 42843  01526C  6F49               	movwf	_motor_move_type& (0+255),b
 42844                           
 42845                           ; BSR set to: 1
 42846                           ;motor.c: 860: motor_final_stepcount = motor_current_stepcount + motor_steps_lookup[moto
      +                          r_current_speed];
 42847  01526E  90D8               	bcf	status,0,c
 42848  015270  0100               	movlb	0	; () banked
 42849  015272  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 42850  015274  6EF6               	movwf	tblptrl,c
 42851  015276  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 42852  015278  6EF7               	movwf	tblptrh,c
 42853  01527A  0E61               	movlw	low _motor_steps_lookup
 42854  01527C  26F6               	addwf	tblptrl,f,c
 42855  01527E  0E94               	movlw	high _motor_steps_lookup
 42856  015280  22F7               	addwfc	tblptrh,f,c
 42857  015282                     	if	1	;There are 3 active tblptr bytes
 42858  015282  6AF8               	clrf	tblptru,c
 42859  015284  0E00               	movlw	low (__mediumconst shr (0+16))
 42860  015286  22F8               	addwfc	tblptru,f,c
 42861  015288                     	endif
 42862  015288  0009               	tblrd		*+
 42863  01528A  CFF5 F060          	movff	tablat,??_motor_stop
 42864  01528E  0009               	tblrd		*+
 42865  015290  CFF5 F061          	movff	tablat,??_motor_stop+1
 42866  015294  5160               	movf	??_motor_stop& (0+255),w,b
 42867  015296  0101               	movlb	1	; () banked
 42868  015298  2519               	addwf	_motor_current_stepcount& (0+255),w,b	;volatile
 42869  01529A  6F15               	movwf	_motor_final_stepcount& (0+255),b	;volatile
 42870  01529C  0100               	movlb	0	; () banked
 42871  01529E  5161               	movf	(??_motor_stop+1)& (0+255),w,b
 42872  0152A0  0101               	movlb	1	; () banked
 42873  0152A2  211A               	addwfc	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 42874  0152A4  6F16               	movwf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 42875  0152A6  0E00               	movlw	0
 42876  0152A8  211B               	addwfc	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 42877  0152AA  6F17               	movwf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 42878  0152AC  0E00               	movlw	0
 42879  0152AE  211C               	addwfc	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 42880  0152B0  6F18               	movwf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 42881                           
 42882                           ; BSR set to: 1
 42883                           ;motor.c: 863: INTCONbits.GIE = 1;
 42884  0152B2  8EF2               	bsf	intcon,7,c	;volatile
 42885                           
 42886                           ; BSR set to: 1
 42887  0152B4  0012               	return		;funcret
 42888  0152B6                     __end_of_motor_stop:
 42889                           	opt stack 0
 42890                           tosu	equ	0xFFF
 42891                           tosh	equ	0xFFE
 42892                           tosl	equ	0xFFD
 42893                           pclath	equ	0xFFA
 42894                           tblptru	equ	0xFF8
 42895                           tblptrh	equ	0xFF7
 42896                           tblptrl	equ	0xFF6
 42897                           tablat	equ	0xFF5
 42898                           prodh	equ	0xFF4
 42899                           prodl	equ	0xFF3
 42900                           intcon	equ	0xFF2
 42901                           indf0	equ	0xFEF
 42902                           postinc0	equ	0xFEE
 42903                           fsr0h	equ	0xFEA
 42904                           fsr0l	equ	0xFE9
 42905                           wreg	equ	0xFE8
 42906                           indf1	equ	0xFE7
 42907                           postinc1	equ	0xFE6
 42908                           postdec1	equ	0xFE5
 42909                           plusw1	equ	0xFE3
 42910                           fsr1h	equ	0xFE2
 42911                           fsr1l	equ	0xFE1
 42912                           indf2	equ	0xFDF
 42913                           postinc2	equ	0xFDE
 42914                           postdec2	equ	0xFDD
 42915                           plusw2	equ	0xFDB
 42916                           fsr2h	equ	0xFDA
 42917                           fsr2l	equ	0xFD9
 42918                           status	equ	0xFD8
 42919                           
 42920 ;; *************** function _motor_set_zero *****************
 42921 ;; Defined at:
 42922 ;;		line 968 in file "motor.c"
 42923 ;; Parameters:    Size  Location     Type
 42924 ;;  direction       1    wreg     enum E6622
 42925 ;; Auto vars:     Size  Location     Type
 42926 ;;  direction       1   10[BANK0 ] enum E6622
 42927 ;; Return value:  Size  Location     Type
 42928 ;;                  1    wreg      void 
 42929 ;; Registers used:
 42930 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 42931 ;; Tracked objects:
 42932 ;;		On entry : 0/0
 42933 ;;		On exit  : 0/0
 42934 ;;		Unchanged: 0/0
 42935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42937 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42939 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42940 ;;Total ram usage:        1 bytes
 42941 ;; Hardware stack levels used:    1
 42942 ;; Hardware stack levels required when called:   13
 42943 ;; This function calls:
 42944 ;;		__motor_move_back_forth
 42945 ;; This function is called by:
 42946 ;;		__parse_command_short
 42947 ;;		_encoder_statemachine
 42948 ;; This function uses a non-reentrant model
 42949 ;;
 42950                           
 42951                           	psect	text173
 42952  015692                     __ptext173:
 42953                           	opt stack 0
 42954  015692                     _motor_set_zero:
 42955                           	opt stack 16
 42956                           
 42957                           ; BSR set to: 1
 42958                           ;incstack = 0
 42959                           ;motor_set_zero@direction stored from wreg
 42960  015692  0100               	movlb	0	; () banked
 42961  015694  6F6A               	movwf	motor_set_zero@direction& (0+255),b
 42962                           
 42963                           ;motor.c: 971: os.approach_direction = direction;
 42964  015696  C06A  F177         	movff	motor_set_zero@direction,_os+19	;volatile
 42965                           
 42966                           ;motor.c: 972: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 42967  01569A  0E01               	movlw	1
 42968  01569C  0101               	movlb	1	; () banked
 42969  01569E  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 42970                           
 42971                           ; BSR set to: 1
 42972                           ;motor.c: 973: os.current_position_in_steps = 0;
 42973  0156A0  0E00               	movlw	0
 42974  0156A2  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
 42975  0156A4  0E00               	movlw	0
 42976  0156A6  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
 42977  0156A8  0E00               	movlw	0
 42978  0156AA  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
 42979  0156AC  0E00               	movlw	0
 42980  0156AE  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
 42981                           
 42982                           ; BSR set to: 1
 42983                           ;motor.c: 974: os.absolute_position = 0;
 42984  0156B0  0E00               	movlw	0
 42985  0156B2  6F70               	movwf	(_os+12)& (0+255),b	;volatile
 42986  0156B4  0E00               	movlw	0
 42987  0156B6  6F6F               	movwf	(_os+11)& (0+255),b	;volatile
 42988                           
 42989                           ; BSR set to: 1
 42990                           ;motor.c: 975: os.current_position_in_degrees = 0;
 42991  0156B8  0E00               	movlw	0
 42992  0156BA  6F72               	movwf	(_os+14)& (0+255),b	;volatile
 42993  0156BC  0E00               	movlw	0
 42994  0156BE  6F71               	movwf	(_os+13)& (0+255),b	;volatile
 42995                           
 42996                           ; BSR set to: 1
 42997                           ;motor.c: 976: os.divide_position = 0;
 42998  0156C0  0E00               	movlw	0
 42999  0156C2  6F7C               	movwf	(_os+24)& (0+255),b	;volatile
 43000  0156C4  0E00               	movlw	0
 43001  0156C6  6F7B               	movwf	(_os+23)& (0+255),b	;volatile
 43002                           
 43003                           ; BSR set to: 1
 43004                           ;motor.c: 979: _motor_move_back_forth();
 43005  0156C8  EC32  F09A         	call	__motor_move_back_forth	;wreg free
 43006  0156CC  0012               	return		;funcret
 43007  0156CE                     __end_of_motor_set_zero:
 43008                           	opt stack 0
 43009                           tosu	equ	0xFFF
 43010                           tosh	equ	0xFFE
 43011                           tosl	equ	0xFFD
 43012                           pclath	equ	0xFFA
 43013                           tblptru	equ	0xFF8
 43014                           tblptrh	equ	0xFF7
 43015                           tblptrl	equ	0xFF6
 43016                           tablat	equ	0xFF5
 43017                           prodh	equ	0xFF4
 43018                           prodl	equ	0xFF3
 43019                           intcon	equ	0xFF2
 43020                           indf0	equ	0xFEF
 43021                           postinc0	equ	0xFEE
 43022                           fsr0h	equ	0xFEA
 43023                           fsr0l	equ	0xFE9
 43024                           wreg	equ	0xFE8
 43025                           indf1	equ	0xFE7
 43026                           postinc1	equ	0xFE6
 43027                           postdec1	equ	0xFE5
 43028                           plusw1	equ	0xFE3
 43029                           fsr1h	equ	0xFE2
 43030                           fsr1l	equ	0xFE1
 43031                           indf2	equ	0xFDF
 43032                           postinc2	equ	0xFDE
 43033                           postdec2	equ	0xFDD
 43034                           plusw2	equ	0xFDB
 43035                           fsr2h	equ	0xFDA
 43036                           fsr2l	equ	0xFD9
 43037                           status	equ	0xFD8
 43038                           
 43039 ;; *************** function __motor_move_back_forth *****************
 43040 ;; Defined at:
 43041 ;;		line 296 in file "motor.c"
 43042 ;; Parameters:    Size  Location     Type
 43043 ;;		None
 43044 ;; Auto vars:     Size  Location     Type
 43045 ;;  return_value    1    9[BANK0 ] enum E6639
 43046 ;;  return_value    1    8[BANK0 ] enum E6639
 43047 ;; Return value:  Size  Location     Type
 43048 ;;                  1    wreg      enum E6639
 43049 ;; Registers used:
 43050 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43051 ;; Tracked objects:
 43052 ;;		On entry : 0/0
 43053 ;;		On exit  : 0/0
 43054 ;;		Unchanged: 0/0
 43055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43057 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43059 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43060 ;;Total ram usage:        2 bytes
 43061 ;; Hardware stack levels used:    1
 43062 ;; Hardware stack levels required when called:   12
 43063 ;; This function calls:
 43064 ;;		__motor_schedule_command
 43065 ;;		_motor_items_in_cue
 43066 ;; This function is called by:
 43067 ;;		_motor_set_zero
 43068 ;; This function uses a non-reentrant model
 43069 ;;
 43070                           
 43071                           	psect	text174
 43072  013464                     __ptext174:
 43073                           	opt stack 0
 43074  013464                     __motor_move_back_forth:
 43075                           	opt stack 16
 43076                           
 43077                           ;motor.c: 298: motorReturnValue_t return_value_1;;motor.c: 299: motorReturnValue_t retur
      +                          n_value_2;;motor.c: 301: if(os.busy || motor_items_in_cue()!=0)
 43078                           
 43079                           ;incstack = 0
 43080  013464  0101               	movlb	1	; () banked
 43081  013466  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 43082  013468  A4D8               	btfss	status,2,c
 43083  01346A  0012               	return	
 43084                           
 43085                           ; BSR set to: 1
 43086  01346C  EC88  F0AF         	call	_motor_items_in_cue	;wreg free
 43087  013470  0900               	iorlw	0
 43088  013472  A4D8               	btfss	status,2,c
 43089  013474  0012               	return	
 43090                           
 43091                           ;motor.c: 305: };motor.c: 307: if(config.overshoot_in_steps==0)
 43092                           
 43093                           ;motor.c: 302: {;motor.c: 304: return MOTOR_RETURN_VALUE_BUSY;;	Return value of __motor_
      +                          move_back_forth is never used
 43094  013476  0101               	movlb	1	; () banked
 43095  013478  519A               	movf	(_config+5)& (0+255),w,b
 43096  01347A  119B               	iorwf	(_config+6)& (0+255),w,b
 43097  01347C  B4D8               	btfsc	status,2,c
 43098  01347E  0012               	return	
 43099                           
 43100                           ; BSR set to: 1
 43101                           ;motor.c: 311: };motor.c: 313: if(os.approach_direction==MOTOR_DIRECTION_CW)
 43102                           
 43103                           ; BSR set to: 1
 43104                           
 43105                           ; BSR set to: 1
 43106                           ;motor.c: 308: {;motor.c: 310: return MOTOR_RETURN_VALUE_OK;;	Return value of __motor_mo
      +                          ve_back_forth is never used
 43107  013480  0577               	decf	(_os+19)& (0+255),w,b	;volatile
 43108  013482  A4D8               	btfss	status,2,c
 43109  013484  D022               	goto	l2492
 43110                           
 43111                           ; BSR set to: 1
 43112                           ;motor.c: 314: {;motor.c: 315: return_value_1 = _motor_schedule_command(MOTOR_DIRECTION_
      +                          CCW, config.overshoot_in_steps, 0xFFFF, MOTOR_MOVE_TYPE_NORMAL);
 43113  013486  C19A  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 43114  01348A  C19B  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 43115  01348E  0100               	movlb	0	; () banked
 43116  013490  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 43117  013492  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 43118  013494  0EFF               	movlw	255
 43119  013496  6F65               	movwf	(__motor_schedule_command@speed+1)& (0+255),b
 43120  013498  6964               	setf	__motor_schedule_command@speed& (0+255),b
 43121  01349A  0E00               	movlw	0
 43122  01349C  6F66               	movwf	__motor_schedule_command@type& (0+255),b
 43123  01349E  0EFF               	movlw	255
 43124  0134A0  ECF4  F08E         	call	__motor_schedule_command
 43125  0134A4  0100               	movlb	0	; () banked
 43126  0134A6  6F68               	movwf	__motor_move_back_forth@return_value_1& (0+255),b
 43127                           
 43128                           ;motor.c: 316: return_value_2 = _motor_schedule_command(MOTOR_DIRECTION_CW, config.overs
      +                          hoot_in_steps, 0xFFFF, MOTOR_MOVE_TYPE_NORMAL);
 43129  0134A8  C19A  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 43130  0134AC  C19B  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 43131  0134B0  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 43132  0134B2  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 43133  0134B4  0EFF               	movlw	255
 43134  0134B6  6F65               	movwf	(__motor_schedule_command@speed+1)& (0+255),b
 43135  0134B8  6964               	setf	__motor_schedule_command@speed& (0+255),b
 43136  0134BA  0E00               	movlw	0
 43137  0134BC  6F66               	movwf	__motor_schedule_command@type& (0+255),b
 43138  0134BE  0E01               	movlw	1
 43139  0134C0  ECF4  F08E         	call	__motor_schedule_command
 43140  0134C4  0100               	movlb	0	; () banked
 43141  0134C6  6F69               	movwf	__motor_move_back_forth@return_value_2& (0+255),b
 43142                           
 43143                           ;motor.c: 317: }
 43144  0134C8  0012               	return	
 43145  0134CA                     l2492:
 43146                           
 43147                           ;motor.c: 318: else;motor.c: 319: {;motor.c: 320: return_value_1 = _motor_schedule_comma
      +                          nd(MOTOR_DIRECTION_CW, config.overshoot_in_steps, 0xFFFF, MOTOR_MOVE_TYPE_NORMAL);
 43148                           
 43149                           ; BSR set to: 0
 43150  0134CA  C19A  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 43151  0134CE  C19B  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 43152  0134D2  0100               	movlb	0	; () banked
 43153  0134D4  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 43154  0134D6  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 43155  0134D8  0EFF               	movlw	255
 43156  0134DA  6F65               	movwf	(__motor_schedule_command@speed+1)& (0+255),b
 43157  0134DC  6964               	setf	__motor_schedule_command@speed& (0+255),b
 43158  0134DE  0E00               	movlw	0
 43159  0134E0  6F66               	movwf	__motor_schedule_command@type& (0+255),b
 43160  0134E2  0E01               	movlw	1
 43161  0134E4  ECF4  F08E         	call	__motor_schedule_command
 43162  0134E8  0100               	movlb	0	; () banked
 43163  0134EA  6F68               	movwf	__motor_move_back_forth@return_value_1& (0+255),b
 43164                           
 43165                           ;motor.c: 321: return_value_2 = _motor_schedule_command(MOTOR_DIRECTION_CCW, config.over
      +                          shoot_in_steps, 0xFFFF, MOTOR_MOVE_TYPE_NORMAL);
 43166  0134EC  C19A  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 43167  0134F0  C19B  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 43168  0134F4  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 43169  0134F6  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 43170  0134F8  0EFF               	movlw	255
 43171  0134FA  6F65               	movwf	(__motor_schedule_command@speed+1)& (0+255),b
 43172  0134FC  6964               	setf	__motor_schedule_command@speed& (0+255),b
 43173  0134FE  0E00               	movlw	0
 43174  013500  6F66               	movwf	__motor_schedule_command@type& (0+255),b
 43175  013502  0EFF               	movlw	255
 43176  013504  ECF4  F08E         	call	__motor_schedule_command
 43177  013508  0100               	movlb	0	; () banked
 43178  01350A  6F69               	movwf	__motor_move_back_forth@return_value_2& (0+255),b
 43179                           
 43180                           ; BSR set to: 0
 43181                           ;motor.c: 330: else;motor.c: 331: {;motor.c: 332: return return_value_2;;	Return value o
      +                          f __motor_move_back_forth is never used
 43182                           
 43183                           ; BSR set to: 0
 43184                           ;motor.c: 329: }
 43185                           
 43186                           ; BSR set to: 0
 43187                           ;motor.c: 327: {;motor.c: 328: return return_value_1;;	Return value of __motor_move_back
      +                          _forth is never used
 43188                           
 43189                           ; BSR set to: 0
 43190                           
 43191                           ; BSR set to: 0
 43192  01350C  0012               	return	
 43193  01350E                     __end_of__motor_move_back_forth:
 43194                           	opt stack 0
 43195                           tosu	equ	0xFFF
 43196                           tosh	equ	0xFFE
 43197                           tosl	equ	0xFFD
 43198                           pclath	equ	0xFFA
 43199                           tblptru	equ	0xFF8
 43200                           tblptrh	equ	0xFF7
 43201                           tblptrl	equ	0xFF6
 43202                           tablat	equ	0xFF5
 43203                           prodh	equ	0xFF4
 43204                           prodl	equ	0xFF3
 43205                           intcon	equ	0xFF2
 43206                           indf0	equ	0xFEF
 43207                           postinc0	equ	0xFEE
 43208                           fsr0h	equ	0xFEA
 43209                           fsr0l	equ	0xFE9
 43210                           wreg	equ	0xFE8
 43211                           indf1	equ	0xFE7
 43212                           postinc1	equ	0xFE6
 43213                           postdec1	equ	0xFE5
 43214                           plusw1	equ	0xFE3
 43215                           fsr1h	equ	0xFE2
 43216                           fsr1l	equ	0xFE1
 43217                           indf2	equ	0xFDF
 43218                           postinc2	equ	0xFDE
 43219                           postdec2	equ	0xFDD
 43220                           plusw2	equ	0xFDB
 43221                           fsr2h	equ	0xFDA
 43222                           fsr2l	equ	0xFD9
 43223                           status	equ	0xFD8
 43224                           
 43225 ;; *************** function _motor_move_endless *****************
 43226 ;; Defined at:
 43227 ;;		line 1100 in file "motor.c"
 43228 ;; Parameters:    Size  Location     Type
 43229 ;;  direction       1    wreg     enum E6622
 43230 ;;  speed           2   44[BANK0 ] unsigned int 
 43231 ;; Auto vars:     Size  Location     Type
 43232 ;;  direction       1   46[BANK0 ] enum E6622
 43233 ;; Return value:  Size  Location     Type
 43234 ;;                  1    wreg      enum E6782
 43235 ;; Registers used:
 43236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43237 ;; Tracked objects:
 43238 ;;		On entry : 0/0
 43239 ;;		On exit  : 0/0
 43240 ;;		Unchanged: 0/0
 43241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43242 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43243 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43245 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43246 ;;Total ram usage:        3 bytes
 43247 ;; Hardware stack levels used:    1
 43248 ;; Hardware stack levels required when called:   13
 43249 ;; This function calls:
 43250 ;;		__motor_move_steps
 43251 ;; This function is called by:
 43252 ;;		__parse_command_short
 43253 ;;		_encoder_statemachine
 43254 ;; This function uses a non-reentrant model
 43255 ;;
 43256                           
 43257                           	psect	text175
 43258  015A7A                     __ptext175:
 43259                           	opt stack 0
 43260  015A7A                     _motor_move_endless:
 43261                           	opt stack 16
 43262                           
 43263                           ;incstack = 0
 43264                           ;motor_move_endless@direction stored from wreg
 43265  015A7A  0100               	movlb	0	; () banked
 43266  015A7C  6F8E               	movwf	motor_move_endless@direction& (0+255),b
 43267                           
 43268                           ;motor.c: 1102: return _motor_move_steps(direction, 0xFFFFFFFF, speed, MOTOR_OVERSHOOT_N
      +                          O_OVERSHOOT, MOTOR_MOVE_TYPE_ENDLESS);;	Return value of _motor_move_endless is never use
      +                          d
 43269  015A7E  0EFF               	movlw	255
 43270  015A80  0100               	movlb	0	; () banked
 43271  015A82  6F7D               	movwf	__motor_move_steps@distance_in_steps& (0+255),b
 43272  015A84  0EFF               	movlw	255
 43273  015A86  6F7E               	movwf	(__motor_move_steps@distance_in_steps+1)& (0+255),b
 43274  015A88  0EFF               	movlw	255
 43275  015A8A  6F7F               	movwf	(__motor_move_steps@distance_in_steps+2)& (0+255),b
 43276  015A8C  0EFF               	movlw	255
 43277  015A8E  6F80               	movwf	(__motor_move_steps@distance_in_steps+3)& (0+255),b
 43278  015A90  C08C  F081         	movff	motor_move_endless@speed,__motor_move_steps@speed
 43279  015A94  C08D  F082         	movff	motor_move_endless@speed+1,__motor_move_steps@speed+1
 43280  015A98  0E01               	movlw	1
 43281  015A9A  6F83               	movwf	__motor_move_steps@overshoot& (0+255),b
 43282  015A9C  0E01               	movlw	1
 43283  015A9E  6F84               	movwf	__motor_move_steps@type& (0+255),b
 43284  015AA0  518E               	movf	motor_move_endless@direction& (0+255),w,b
 43285  015AA2  EC3E  F077         	call	__motor_move_steps
 43286  015AA6  0012               	return	
 43287  015AA8                     __end_of_motor_move_endless:
 43288                           	opt stack 0
 43289                           tosu	equ	0xFFF
 43290                           tosh	equ	0xFFE
 43291                           tosl	equ	0xFFD
 43292                           pclath	equ	0xFFA
 43293                           tblptru	equ	0xFF8
 43294                           tblptrh	equ	0xFF7
 43295                           tblptrl	equ	0xFF6
 43296                           tablat	equ	0xFF5
 43297                           prodh	equ	0xFF4
 43298                           prodl	equ	0xFF3
 43299                           intcon	equ	0xFF2
 43300                           indf0	equ	0xFEF
 43301                           postinc0	equ	0xFEE
 43302                           fsr0h	equ	0xFEA
 43303                           fsr0l	equ	0xFE9
 43304                           wreg	equ	0xFE8
 43305                           indf1	equ	0xFE7
 43306                           postinc1	equ	0xFE6
 43307                           postdec1	equ	0xFE5
 43308                           plusw1	equ	0xFE3
 43309                           fsr1h	equ	0xFE2
 43310                           fsr1l	equ	0xFE1
 43311                           indf2	equ	0xFDF
 43312                           postinc2	equ	0xFDE
 43313                           postdec2	equ	0xFDD
 43314                           plusw2	equ	0xFDB
 43315                           fsr2h	equ	0xFDA
 43316                           fsr2l	equ	0xFD9
 43317                           status	equ	0xFD8
 43318                           
 43319 ;; *************** function _motor_goto_steps *****************
 43320 ;; Defined at:
 43321 ;;		line 1023 in file "motor.c"
 43322 ;; Parameters:    Size  Location     Type
 43323 ;;  direction       1    wreg     enum E6622
 43324 ;;  position        4   50[BANK0 ] unsigned long 
 43325 ;;  speed           2   54[BANK0 ] unsigned int 
 43326 ;;  overshoot       1   56[BANK0 ] enum E6635
 43327 ;; Auto vars:     Size  Location     Type
 43328 ;;  direction       1   61[BANK0 ] enum E6622
 43329 ;;  distance_in_    4   57[BANK0 ] unsigned long 
 43330 ;; Return value:  Size  Location     Type
 43331 ;;                  1    wreg      enum E6782
 43332 ;; Registers used:
 43333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43334 ;; Tracked objects:
 43335 ;;		On entry : 0/0
 43336 ;;		On exit  : 0/0
 43337 ;;		Unchanged: 0/0
 43338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43339 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43340 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43342 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43343 ;;Total ram usage:       12 bytes
 43344 ;; Hardware stack levels used:    1
 43345 ;; Hardware stack levels required when called:   13
 43346 ;; This function calls:
 43347 ;;		__motor_calculate_distance
 43348 ;;		__motor_decide_direction
 43349 ;;		__motor_move_steps
 43350 ;; This function is called by:
 43351 ;;		__parse_command_short
 43352 ;;		_motor_divide_jump
 43353 ;;		_motor_divide_jump_to_nearest
 43354 ;;		_encoder_statemachine
 43355 ;; This function uses a non-reentrant model
 43356 ;;
 43357                           
 43358                           	psect	text176
 43359  013796                     __ptext176:
 43360                           	opt stack 0
 43361  013796                     _motor_goto_steps:
 43362                           	opt stack 16
 43363                           
 43364                           ;incstack = 0
 43365                           ;motor_goto_steps@direction stored from wreg
 43366  013796  0100               	movlb	0	; () banked
 43367  013798  6F9D               	movwf	motor_goto_steps@direction& (0+255),b
 43368                           
 43369                           ;motor.c: 1025: uint32_t distance_in_steps;;motor.c: 1027: if(position>=config.full_circ
      +                          le_in_steps)
 43370  01379A  0101               	movlb	1	; () banked
 43371  01379C  5195               	movf	_config& (0+255),w,b
 43372  01379E  0100               	movlb	0	; () banked
 43373  0137A0  5D92               	subwf	motor_goto_steps@position& (0+255),w,b
 43374  0137A2  0101               	movlb	1	; () banked
 43375  0137A4  5196               	movf	(_config+1)& (0+255),w,b
 43376  0137A6  0100               	movlb	0	; () banked
 43377  0137A8  5993               	subwfb	(motor_goto_steps@position+1)& (0+255),w,b
 43378  0137AA  0101               	movlb	1	; () banked
 43379  0137AC  5197               	movf	(_config+2)& (0+255),w,b
 43380  0137AE  0100               	movlb	0	; () banked
 43381  0137B0  5994               	subwfb	(motor_goto_steps@position+2)& (0+255),w,b
 43382  0137B2  0101               	movlb	1	; () banked
 43383  0137B4  5198               	movf	(_config+3)& (0+255),w,b
 43384  0137B6  0100               	movlb	0	; () banked
 43385  0137B8  5995               	subwfb	(motor_goto_steps@position+3)& (0+255),w,b
 43386  0137BA  B0D8               	btfsc	status,0,c
 43387  0137BC  0012               	return	
 43388                           
 43389                           ; BSR set to: 0
 43390                           ;motor.c: 1031: };motor.c: 1034: if(direction==MOTOR_DIRECTION_SHORTEST)
 43391                           
 43392                           ; BSR set to: 0
 43393                           
 43394                           ; BSR set to: 0
 43395                           ;motor.c: 1028: {;motor.c: 1030: return MOTOR_RETURN_VALUE_INVALID_POSITION;;	Return val
      +                          ue of _motor_goto_steps is never used
 43396  0137BE  519D               	movf	motor_goto_steps@direction& (0+255),w,b
 43397  0137C0  A4D8               	btfss	status,2,c
 43398  0137C2  D00E               	goto	l2650
 43399                           
 43400                           ; BSR set to: 0
 43401                           ;motor.c: 1035: {;motor.c: 1036: direction = _motor_decide_direction(position, overshoot
      +                          );
 43402  0137C4  C092  F07D         	movff	motor_goto_steps@position,__motor_decide_direction@target_position_in_steps
 43403  0137C8  C093  F07E         	movff	motor_goto_steps@position+1,__motor_decide_direction@target_position_in_steps+1
 43404  0137CC  C094  F07F         	movff	motor_goto_steps@position+2,__motor_decide_direction@target_position_in_steps+2
 43405  0137D0  C095  F080         	movff	motor_goto_steps@position+3,__motor_decide_direction@target_position_in_steps+3
 43406  0137D4  C098  F081         	movff	motor_goto_steps@overshoot,__motor_decide_direction@overshoot
 43407  0137D8  ECAC  F07A         	call	__motor_decide_direction	;wreg free
 43408  0137DC  0100               	movlb	0	; () banked
 43409  0137DE  6F9D               	movwf	motor_goto_steps@direction& (0+255),b
 43410  0137E0                     l2650:
 43411                           
 43412                           ; BSR set to: 0
 43413                           ;motor.c: 1037: };motor.c: 1040: distance_in_steps = _motor_calculate_distance(direction
      +                          , position);
 43414                           
 43415                           ; BSR set to: 0
 43416  0137E0  C092  F060         	movff	motor_goto_steps@position,__motor_calculate_distance@target_position
 43417  0137E4  C093  F061         	movff	motor_goto_steps@position+1,__motor_calculate_distance@target_position+1
 43418  0137E8  C094  F062         	movff	motor_goto_steps@position+2,__motor_calculate_distance@target_position+2
 43419  0137EC  C095  F063         	movff	motor_goto_steps@position+3,__motor_calculate_distance@target_position+3
 43420  0137F0  519D               	movf	motor_goto_steps@direction& (0+255),w,b
 43421  0137F2  EC34  F091         	call	__motor_calculate_distance
 43422  0137F6  C060  F099         	movff	?__motor_calculate_distance,motor_goto_steps@distance_in_steps
 43423  0137FA  C061  F09A         	movff	?__motor_calculate_distance+1,motor_goto_steps@distance_in_steps+1
 43424  0137FE  C062  F09B         	movff	?__motor_calculate_distance+2,motor_goto_steps@distance_in_steps+2
 43425  013802  C063  F09C         	movff	?__motor_calculate_distance+3,motor_goto_steps@distance_in_steps+3
 43426                           
 43427                           ;motor.c: 1043: return _motor_move_steps(direction, distance_in_steps, speed, overshoot,
      +                           MOTOR_MOVE_TYPE_NORMAL);;	Return value of _motor_goto_steps is never used
 43428  013806  C099  F07D         	movff	motor_goto_steps@distance_in_steps,__motor_move_steps@distance_in_steps
 43429  01380A  C09A  F07E         	movff	motor_goto_steps@distance_in_steps+1,__motor_move_steps@distance_in_steps+1
 43430  01380E  C09B  F07F         	movff	motor_goto_steps@distance_in_steps+2,__motor_move_steps@distance_in_steps+2
 43431  013812  C09C  F080         	movff	motor_goto_steps@distance_in_steps+3,__motor_move_steps@distance_in_steps+3
 43432  013816  C096  F081         	movff	motor_goto_steps@speed,__motor_move_steps@speed
 43433  01381A  C097  F082         	movff	motor_goto_steps@speed+1,__motor_move_steps@speed+1
 43434  01381E  C098  F083         	movff	motor_goto_steps@overshoot,__motor_move_steps@overshoot
 43435  013822  0E00               	movlw	0
 43436  013824  0100               	movlb	0	; () banked
 43437  013826  6F84               	movwf	__motor_move_steps@type& (0+255),b
 43438  013828  519D               	movf	motor_goto_steps@direction& (0+255),w,b
 43439  01382A  EC3E  F077         	call	__motor_move_steps
 43440  01382E  0012               	return	
 43441  013830                     __end_of_motor_goto_steps:
 43442                           	opt stack 0
 43443                           tosu	equ	0xFFF
 43444                           tosh	equ	0xFFE
 43445                           tosl	equ	0xFFD
 43446                           pclath	equ	0xFFA
 43447                           tblptru	equ	0xFF8
 43448                           tblptrh	equ	0xFF7
 43449                           tblptrl	equ	0xFF6
 43450                           tablat	equ	0xFF5
 43451                           prodh	equ	0xFF4
 43452                           prodl	equ	0xFF3
 43453                           intcon	equ	0xFF2
 43454                           indf0	equ	0xFEF
 43455                           postinc0	equ	0xFEE
 43456                           fsr0h	equ	0xFEA
 43457                           fsr0l	equ	0xFE9
 43458                           wreg	equ	0xFE8
 43459                           indf1	equ	0xFE7
 43460                           postinc1	equ	0xFE6
 43461                           postdec1	equ	0xFE5
 43462                           plusw1	equ	0xFE3
 43463                           fsr1h	equ	0xFE2
 43464                           fsr1l	equ	0xFE1
 43465                           indf2	equ	0xFDF
 43466                           postinc2	equ	0xFDE
 43467                           postdec2	equ	0xFDD
 43468                           plusw2	equ	0xFDB
 43469                           fsr2h	equ	0xFDA
 43470                           fsr2l	equ	0xFD9
 43471                           status	equ	0xFD8
 43472                           
 43473 ;; *************** function __motor_decide_direction *****************
 43474 ;; Defined at:
 43475 ;;		line 336 in file "motor.c"
 43476 ;; Parameters:    Size  Location     Type
 43477 ;;  target_posit    4   29[BANK0 ] unsigned long 
 43478 ;;  overshoot       1   33[BANK0 ] enum E6635
 43479 ;; Auto vars:     Size  Location     Type
 43480 ;;  distance_to_    4   46[BANK0 ] unsigned long 
 43481 ;;  distance_to_    4   42[BANK0 ] unsigned long 
 43482 ;;  distance_to_    4   38[BANK0 ] long 
 43483 ;;  distance_to_    4   34[BANK0 ] long 
 43484 ;; Return value:  Size  Location     Type
 43485 ;;                  1    wreg      enum E6622
 43486 ;; Registers used:
 43487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 43488 ;; Tracked objects:
 43489 ;;		On entry : 0/0
 43490 ;;		On exit  : 0/0
 43491 ;;		Unchanged: 0/0
 43492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43493 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43494 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43496 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43497 ;;Total ram usage:       21 bytes
 43498 ;; Hardware stack levels used:    1
 43499 ;; Hardware stack levels required when called:   12
 43500 ;; This function calls:
 43501 ;;		__motor_calculate_distance
 43502 ;;		__motor_distance_to_limit
 43503 ;; This function is called by:
 43504 ;;		_motor_goto_steps
 43505 ;;		_motor_goto_degrees_float
 43506 ;;		_motor_goto_degrees_int
 43507 ;; This function uses a non-reentrant model
 43508 ;;
 43509                           
 43510                           	psect	text177
 43511  00F558                     __ptext177:
 43512                           	opt stack 0
 43513  00F558                     __motor_decide_direction:
 43514                           	opt stack 16
 43515                           
 43516                           ;motor.c: 343: uint32_t distance_to_target_cw;;motor.c: 344: uint32_t distance_to_target
      +                          _ccw;;motor.c: 346: int32_t distance_to_limit_cw;;motor.c: 347: int32_t distance_to_limi
      +                          t_ccw;;motor.c: 350: distance_to_target_cw = _motor_calculate_distance(MOTOR_DIRECTION_C
      +                          W, target_position_in_steps);
 43517                           
 43518                           ;incstack = 0
 43519  00F558  C07D  F060         	movff	__motor_decide_direction@target_position_in_steps,__motor_calculate_distance@targ
      +                          et_position
 43520  00F55C  C07E  F061         	movff	__motor_decide_direction@target_position_in_steps+1,__motor_calculate_distance@ta
      +                          rget_position+1
 43521  00F560  C07F  F062         	movff	__motor_decide_direction@target_position_in_steps+2,__motor_calculate_distance@ta
      +                          rget_position+2
 43522  00F564  C080  F063         	movff	__motor_decide_direction@target_position_in_steps+3,__motor_calculate_distance@ta
      +                          rget_position+3
 43523  00F568  0E01               	movlw	1
 43524  00F56A  EC34  F091         	call	__motor_calculate_distance
 43525  00F56E  C060  F08A         	movff	?__motor_calculate_distance,__motor_decide_direction@distance_to_target_cw
 43526  00F572  C061  F08B         	movff	?__motor_calculate_distance+1,__motor_decide_direction@distance_to_target_cw+1
 43527  00F576  C062  F08C         	movff	?__motor_calculate_distance+2,__motor_decide_direction@distance_to_target_cw+2
 43528  00F57A  C063  F08D         	movff	?__motor_calculate_distance+3,__motor_decide_direction@distance_to_target_cw+3
 43529                           
 43530                           ;motor.c: 351: distance_to_target_ccw = _motor_calculate_distance(MOTOR_DIRECTION_CCW, t
      +                          arget_position_in_steps);
 43531  00F57E  C07D  F060         	movff	__motor_decide_direction@target_position_in_steps,__motor_calculate_distance@targ
      +                          et_position
 43532  00F582  C07E  F061         	movff	__motor_decide_direction@target_position_in_steps+1,__motor_calculate_distance@ta
      +                          rget_position+1
 43533  00F586  C07F  F062         	movff	__motor_decide_direction@target_position_in_steps+2,__motor_calculate_distance@ta
      +                          rget_position+2
 43534  00F58A  C080  F063         	movff	__motor_decide_direction@target_position_in_steps+3,__motor_calculate_distance@ta
      +                          rget_position+3
 43535  00F58E  0EFF               	movlw	255
 43536  00F590  EC34  F091         	call	__motor_calculate_distance
 43537  00F594  C060  F08E         	movff	?__motor_calculate_distance,__motor_decide_direction@distance_to_target_ccw
 43538  00F598  C061  F08F         	movff	?__motor_calculate_distance+1,__motor_decide_direction@distance_to_target_ccw+1
 43539  00F59C  C062  F090         	movff	?__motor_calculate_distance+2,__motor_decide_direction@distance_to_target_ccw+2
 43540  00F5A0  C063  F091         	movff	?__motor_calculate_distance+3,__motor_decide_direction@distance_to_target_ccw+3
 43541                           
 43542                           ;motor.c: 354: distance_to_limit_cw = _motor_distance_to_limit(MOTOR_DIRECTION_CW);
 43543  00F5A4  0E01               	movlw	1
 43544  00F5A6  EC90  F07F         	call	__motor_distance_to_limit
 43545  00F5AA  C06C  F082         	movff	?__motor_distance_to_limit,__motor_decide_direction@distance_to_limit_cw
 43546  00F5AE  C06D  F083         	movff	?__motor_distance_to_limit+1,__motor_decide_direction@distance_to_limit_cw+1
 43547  00F5B2  C06E  F084         	movff	?__motor_distance_to_limit+2,__motor_decide_direction@distance_to_limit_cw+2
 43548  00F5B6  C06F  F085         	movff	?__motor_distance_to_limit+3,__motor_decide_direction@distance_to_limit_cw+3
 43549                           
 43550                           ;motor.c: 355: distance_to_limit_ccw = _motor_distance_to_limit(MOTOR_DIRECTION_CCW);
 43551  00F5BA  0EFF               	movlw	255
 43552  00F5BC  EC90  F07F         	call	__motor_distance_to_limit
 43553  00F5C0  C06C  F086         	movff	?__motor_distance_to_limit,__motor_decide_direction@distance_to_limit_ccw
 43554  00F5C4  C06D  F087         	movff	?__motor_distance_to_limit+1,__motor_decide_direction@distance_to_limit_ccw+1
 43555  00F5C8  C06E  F088         	movff	?__motor_distance_to_limit+2,__motor_decide_direction@distance_to_limit_ccw+2
 43556  00F5CC  C06F  F089         	movff	?__motor_distance_to_limit+3,__motor_decide_direction@distance_to_limit_ccw+3
 43557                           
 43558                           ;motor.c: 359: if((distance_to_target_cw>distance_to_limit_cw) && (distance_to_target_cc
      +                          w>distance_to_limit_ccw))
 43559  00F5D0  0100               	movlb	0	; () banked
 43560  00F5D2  518A               	movf	__motor_decide_direction@distance_to_target_cw& (0+255),w,b
 43561  00F5D4  5D82               	subwf	__motor_decide_direction@distance_to_limit_cw& (0+255),w,b
 43562  00F5D6  518B               	movf	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),w,b
 43563  00F5D8  5983               	subwfb	(__motor_decide_direction@distance_to_limit_cw+1)& (0+255),w,b
 43564  00F5DA  518C               	movf	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),w,b
 43565  00F5DC  5984               	subwfb	(__motor_decide_direction@distance_to_limit_cw+2)& (0+255),w,b
 43566  00F5DE  518D               	movf	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),w,b
 43567  00F5E0  5985               	subwfb	(__motor_decide_direction@distance_to_limit_cw+3)& (0+255),w,b
 43568  00F5E2  B0D8               	btfsc	status,0,c
 43569  00F5E4  D00C               	goto	l2498
 43570                           
 43571                           ; BSR set to: 0
 43572  00F5E6  518E               	movf	__motor_decide_direction@distance_to_target_ccw& (0+255),w,b
 43573  00F5E8  5D86               	subwf	__motor_decide_direction@distance_to_limit_ccw& (0+255),w,b
 43574  00F5EA  518F               	movf	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),w,b
 43575  00F5EC  5987               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+1)& (0+255),w,b
 43576  00F5EE  5190               	movf	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),w,b
 43577  00F5F0  5988               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+2)& (0+255),w,b
 43578  00F5F2  5191               	movf	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),w,b
 43579  00F5F4  5989               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+3)& (0+255),w,b
 43580  00F5F6  B0D8               	btfsc	status,0,c
 43581  00F5F8  D002               	goto	l2498
 43582                           
 43583                           ; BSR set to: 0
 43584                           ;motor.c: 360: {;motor.c: 361: return MOTOR_DIRECTION_SHORTEST;
 43585  00F5FA  0E00               	movlw	0
 43586                           
 43587                           ; BSR set to: 0
 43588  00F5FC  0012               	return	
 43589  00F5FE                     l2498:
 43590                           
 43591                           ; BSR set to: 0
 43592                           ;motor.c: 362: };motor.c: 363: if(distance_to_target_cw>distance_to_limit_cw)
 43593                           
 43594                           ; BSR set to: 0
 43595  00F5FE  518A               	movf	__motor_decide_direction@distance_to_target_cw& (0+255),w,b
 43596  00F600  5D82               	subwf	__motor_decide_direction@distance_to_limit_cw& (0+255),w,b
 43597  00F602  518B               	movf	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),w,b
 43598  00F604  5983               	subwfb	(__motor_decide_direction@distance_to_limit_cw+1)& (0+255),w,b
 43599  00F606  518C               	movf	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),w,b
 43600  00F608  5984               	subwfb	(__motor_decide_direction@distance_to_limit_cw+2)& (0+255),w,b
 43601  00F60A  518D               	movf	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),w,b
 43602  00F60C  5985               	subwfb	(__motor_decide_direction@distance_to_limit_cw+3)& (0+255),w,b
 43603  00F60E  B0D8               	btfsc	status,0,c
 43604  00F610  D002               	goto	l2500
 43605                           
 43606                           ; BSR set to: 0
 43607                           ;motor.c: 364: {;motor.c: 365: return MOTOR_DIRECTION_CCW;
 43608  00F612  0EFF               	movlw	255
 43609                           
 43610                           ; BSR set to: 0
 43611  00F614  0012               	return	
 43612  00F616                     l2500:
 43613                           
 43614                           ; BSR set to: 0
 43615                           ;motor.c: 366: };motor.c: 367: if(distance_to_target_ccw>distance_to_limit_ccw)
 43616                           
 43617                           ; BSR set to: 0
 43618  00F616  518E               	movf	__motor_decide_direction@distance_to_target_ccw& (0+255),w,b
 43619  00F618  5D86               	subwf	__motor_decide_direction@distance_to_limit_ccw& (0+255),w,b
 43620  00F61A  518F               	movf	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),w,b
 43621  00F61C  5987               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+1)& (0+255),w,b
 43622  00F61E  5190               	movf	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),w,b
 43623  00F620  5988               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+2)& (0+255),w,b
 43624  00F622  5191               	movf	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),w,b
 43625  00F624  5989               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+3)& (0+255),w,b
 43626  00F626  B0D8               	btfsc	status,0,c
 43627  00F628  D002               	goto	l2501
 43628                           
 43629                           ; BSR set to: 0
 43630                           ;motor.c: 368: {;motor.c: 369: return MOTOR_DIRECTION_CW;
 43631  00F62A  0E01               	movlw	1
 43632                           
 43633                           ; BSR set to: 0
 43634  00F62C  0012               	return	
 43635  00F62E                     l2501:
 43636                           
 43637                           ; BSR set to: 0
 43638                           ;motor.c: 370: };motor.c: 374: if(overshoot==MOTOR_OVERSHOOT_WITH_OVERSHOOT)
 43639                           
 43640                           ; BSR set to: 0
 43641  00F62E  5181               	movf	__motor_decide_direction@overshoot& (0+255),w,b
 43642  00F630  A4D8               	btfss	status,2,c
 43643  00F632  D04E               	goto	l2504
 43644                           
 43645                           ; BSR set to: 0
 43646                           ;motor.c: 375: {;motor.c: 376: if(os.approach_direction==MOTOR_DIRECTION_CW)
 43647  00F634  0101               	movlb	1	; () banked
 43648  00F636  0577               	decf	(_os+19)& (0+255),w,b	;volatile
 43649  00F638  A4D8               	btfss	status,2,c
 43650  00F63A  D023               	goto	l2503
 43651                           
 43652                           ; BSR set to: 1
 43653                           ;motor.c: 377: {;motor.c: 379: distance_to_target_ccw += config.overshoot_in_steps;
 43654  00F63C  519A               	movf	(_config+5)& (0+255),w,b
 43655  00F63E  0100               	movlb	0	; () banked
 43656  00F640  278E               	addwf	__motor_decide_direction@distance_to_target_ccw& (0+255),f,b
 43657  00F642  0101               	movlb	1	; () banked
 43658  00F644  519B               	movf	(_config+6)& (0+255),w,b
 43659  00F646  0100               	movlb	0	; () banked
 43660  00F648  238F               	addwfc	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),f,b
 43661  00F64A  0E00               	movlw	0
 43662  00F64C  2390               	addwfc	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),f,b
 43663  00F64E  0E00               	movlw	0
 43664  00F650  2391               	addwfc	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),f,b
 43665                           
 43666                           ;motor.c: 380: distance_to_target_ccw += config.overshoot_in_steps;
 43667  00F652  0101               	movlb	1	; () banked
 43668  00F654  519A               	movf	(_config+5)& (0+255),w,b
 43669  00F656  0100               	movlb	0	; () banked
 43670  00F658  278E               	addwf	__motor_decide_direction@distance_to_target_ccw& (0+255),f,b
 43671  00F65A  0101               	movlb	1	; () banked
 43672  00F65C  519B               	movf	(_config+6)& (0+255),w,b
 43673  00F65E  0100               	movlb	0	; () banked
 43674  00F660  238F               	addwfc	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),f,b
 43675  00F662  0E00               	movlw	0
 43676  00F664  2390               	addwfc	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),f,b
 43677  00F666  0E00               	movlw	0
 43678  00F668  2391               	addwfc	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),f,b
 43679                           
 43680                           ;motor.c: 381: distance_to_target_ccw += config.overshoot_cost_in_steps;
 43681  00F66A  0101               	movlb	1	; () banked
 43682  00F66C  519C               	movf	(_config+7)& (0+255),w,b
 43683  00F66E  0100               	movlb	0	; () banked
 43684  00F670  278E               	addwf	__motor_decide_direction@distance_to_target_ccw& (0+255),f,b
 43685  00F672  0101               	movlb	1	; () banked
 43686  00F674  519D               	movf	(_config+8)& (0+255),w,b
 43687  00F676  0100               	movlb	0	; () banked
 43688  00F678  238F               	addwfc	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),f,b
 43689  00F67A  0E00               	movlw	0
 43690  00F67C  2390               	addwfc	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),f,b
 43691  00F67E  0E00               	movlw	0
 43692  00F680  2391               	addwfc	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),f,b
 43693  00F682                     l2503:
 43694                           
 43695                           ;motor.c: 382: };motor.c: 383: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 43696                           
 43697                           ; BSR set to: 0
 43698  00F682  0101               	movlb	1	; () banked
 43699  00F684  2977               	incf	(_os+19)& (0+255),w,b	;volatile
 43700  00F686  A4D8               	btfss	status,2,c
 43701  00F688  D023               	goto	l2504
 43702                           
 43703                           ; BSR set to: 1
 43704                           ;motor.c: 384: {;motor.c: 386: distance_to_target_cw += config.overshoot_in_steps;
 43705  00F68A  519A               	movf	(_config+5)& (0+255),w,b
 43706  00F68C  0100               	movlb	0	; () banked
 43707  00F68E  278A               	addwf	__motor_decide_direction@distance_to_target_cw& (0+255),f,b
 43708  00F690  0101               	movlb	1	; () banked
 43709  00F692  519B               	movf	(_config+6)& (0+255),w,b
 43710  00F694  0100               	movlb	0	; () banked
 43711  00F696  238B               	addwfc	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),f,b
 43712  00F698  0E00               	movlw	0
 43713  00F69A  238C               	addwfc	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),f,b
 43714  00F69C  0E00               	movlw	0
 43715  00F69E  238D               	addwfc	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),f,b
 43716                           
 43717                           ;motor.c: 387: distance_to_target_cw += config.overshoot_in_steps;
 43718  00F6A0  0101               	movlb	1	; () banked
 43719  00F6A2  519A               	movf	(_config+5)& (0+255),w,b
 43720  00F6A4  0100               	movlb	0	; () banked
 43721  00F6A6  278A               	addwf	__motor_decide_direction@distance_to_target_cw& (0+255),f,b
 43722  00F6A8  0101               	movlb	1	; () banked
 43723  00F6AA  519B               	movf	(_config+6)& (0+255),w,b
 43724  00F6AC  0100               	movlb	0	; () banked
 43725  00F6AE  238B               	addwfc	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),f,b
 43726  00F6B0  0E00               	movlw	0
 43727  00F6B2  238C               	addwfc	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),f,b
 43728  00F6B4  0E00               	movlw	0
 43729  00F6B6  238D               	addwfc	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),f,b
 43730                           
 43731                           ;motor.c: 388: distance_to_target_cw += config.overshoot_cost_in_steps;
 43732  00F6B8  0101               	movlb	1	; () banked
 43733  00F6BA  519C               	movf	(_config+7)& (0+255),w,b
 43734  00F6BC  0100               	movlb	0	; () banked
 43735  00F6BE  278A               	addwf	__motor_decide_direction@distance_to_target_cw& (0+255),f,b
 43736  00F6C0  0101               	movlb	1	; () banked
 43737  00F6C2  519D               	movf	(_config+8)& (0+255),w,b
 43738  00F6C4  0100               	movlb	0	; () banked
 43739  00F6C6  238B               	addwfc	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),f,b
 43740  00F6C8  0E00               	movlw	0
 43741  00F6CA  238C               	addwfc	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),f,b
 43742  00F6CC  0E00               	movlw	0
 43743  00F6CE  238D               	addwfc	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),f,b
 43744  00F6D0                     l2504:
 43745                           
 43746                           ;motor.c: 389: };motor.c: 390: };motor.c: 393: if(distance_to_target_ccw<distance_to_tar
      +                          get_cw)
 43747                           
 43748                           ; BSR set to: 0
 43749                           
 43750                           ; BSR set to: 0
 43751  00F6D0  0100               	movlb	0	; () banked
 43752  00F6D2  518A               	movf	__motor_decide_direction@distance_to_target_cw& (0+255),w,b
 43753  00F6D4  5D8E               	subwf	__motor_decide_direction@distance_to_target_ccw& (0+255),w,b
 43754  00F6D6  518B               	movf	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),w,b
 43755  00F6D8  598F               	subwfb	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),w,b
 43756  00F6DA  518C               	movf	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),w,b
 43757  00F6DC  5990               	subwfb	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),w,b
 43758  00F6DE  518D               	movf	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),w,b
 43759  00F6E0  5991               	subwfb	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),w,b
 43760  00F6E2  B0D8               	btfsc	status,0,c
 43761  00F6E4  D002               	goto	l2505
 43762                           
 43763                           ; BSR set to: 0
 43764                           ;motor.c: 394: {;motor.c: 395: return MOTOR_DIRECTION_CCW;
 43765  00F6E6  0EFF               	movlw	255
 43766                           
 43767                           ; BSR set to: 0
 43768                           ;motor.c: 396: }
 43769                           
 43770                           ; BSR set to: 0
 43771  00F6E8  0012               	return	
 43772  00F6EA                     l2505:
 43773                           
 43774                           ; BSR set to: 0
 43775                           ;motor.c: 397: else;motor.c: 398: {;motor.c: 399: return MOTOR_DIRECTION_CW;
 43776                           
 43777                           ; BSR set to: 0
 43778  00F6EA  0E01               	movlw	1
 43779                           
 43780                           ; BSR set to: 0
 43781  00F6EC  0012               	return	
 43782  00F6EE                     __end_of__motor_decide_direction:
 43783                           	opt stack 0
 43784                           tosu	equ	0xFFF
 43785                           tosh	equ	0xFFE
 43786                           tosl	equ	0xFFD
 43787                           pclath	equ	0xFFA
 43788                           tblptru	equ	0xFF8
 43789                           tblptrh	equ	0xFF7
 43790                           tblptrl	equ	0xFF6
 43791                           tablat	equ	0xFF5
 43792                           prodh	equ	0xFF4
 43793                           prodl	equ	0xFF3
 43794                           intcon	equ	0xFF2
 43795                           indf0	equ	0xFEF
 43796                           postinc0	equ	0xFEE
 43797                           fsr0h	equ	0xFEA
 43798                           fsr0l	equ	0xFE9
 43799                           wreg	equ	0xFE8
 43800                           indf1	equ	0xFE7
 43801                           postinc1	equ	0xFE6
 43802                           postdec1	equ	0xFE5
 43803                           plusw1	equ	0xFE3
 43804                           fsr1h	equ	0xFE2
 43805                           fsr1l	equ	0xFE1
 43806                           indf2	equ	0xFDF
 43807                           postinc2	equ	0xFDE
 43808                           postdec2	equ	0xFDD
 43809                           plusw2	equ	0xFDB
 43810                           fsr2h	equ	0xFDA
 43811                           fsr2l	equ	0xFD9
 43812                           status	equ	0xFD8
 43813                           
 43814 ;; *************** function __motor_calculate_distance *****************
 43815 ;; Defined at:
 43816 ;;		line 482 in file "motor.c"
 43817 ;; Parameters:    Size  Location     Type
 43818 ;;  direction       1    wreg     enum E6622
 43819 ;;  target_posit    4    0[BANK0 ] unsigned long 
 43820 ;; Auto vars:     Size  Location     Type
 43821 ;;  direction       1    8[BANK0 ] enum E6622
 43822 ;;  distance        4    9[BANK0 ] unsigned long 
 43823 ;; Return value:  Size  Location     Type
 43824 ;;                  4    0[BANK0 ] unsigned long 
 43825 ;; Registers used:
 43826 ;;		wreg, status,2, status,0
 43827 ;; Tracked objects:
 43828 ;;		On entry : 0/0
 43829 ;;		On exit  : 0/0
 43830 ;;		Unchanged: 0/0
 43831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43832 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43833 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43834 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43835 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43836 ;;Total ram usage:       13 bytes
 43837 ;; Hardware stack levels used:    1
 43838 ;; Hardware stack levels required when called:   10
 43839 ;; This function calls:
 43840 ;;		Nothing
 43841 ;; This function is called by:
 43842 ;;		__motor_decide_direction
 43843 ;;		_motor_goto_steps
 43844 ;;		_motor_goto_degrees_float
 43845 ;;		_motor_goto_degrees_int
 43846 ;; This function uses a non-reentrant model
 43847 ;;
 43848                           
 43849                           	psect	text178
 43850  012268                     __ptext178:
 43851                           	opt stack 0
 43852  012268                     __motor_calculate_distance:
 43853                           	opt stack 17
 43854                           
 43855                           ; BSR set to: 0
 43856                           ;incstack = 0
 43857                           ;__motor_calculate_distance@direction stored from wreg
 43858  012268  0100               	movlb	0	; () banked
 43859  01226A  6F68               	movwf	__motor_calculate_distance@direction& (0+255),b
 43860                           
 43861                           ;motor.c: 484: uint32_t distance;;motor.c: 487: if(direction==MOTOR_DIRECTION_CW)
 43862  01226C  0100               	movlb	0	; () banked
 43863  01226E  0568               	decf	__motor_calculate_distance@direction& (0+255),w,b
 43864  012270  A4D8               	btfss	status,2,c
 43865  012272  D01C               	goto	l2525
 43866                           
 43867                           ; BSR set to: 0
 43868                           ;motor.c: 488: {;motor.c: 489: distance = target_position - os.current_position_in_steps
      +                          ;
 43869  012274  C16B  F064         	movff	_os+7,??__motor_calculate_distance	;volatile
 43870  012278  C16C  F065         	movff	_os+8,??__motor_calculate_distance+1	;volatile
 43871  01227C  C16D  F066         	movff	_os+9,??__motor_calculate_distance+2	;volatile
 43872  012280  C16E  F067         	movff	_os+10,??__motor_calculate_distance+3	;volatile
 43873  012284  1F64               	comf	??__motor_calculate_distance& (0+255),f,b
 43874  012286  1F65               	comf	(??__motor_calculate_distance+1)& (0+255),f,b
 43875  012288  1F66               	comf	(??__motor_calculate_distance+2)& (0+255),f,b
 43876  01228A  1F67               	comf	(??__motor_calculate_distance+3)& (0+255),f,b
 43877  01228C  2B64               	incf	??__motor_calculate_distance& (0+255),f,b
 43878  01228E  0E00               	movlw	0
 43879  012290  2365               	addwfc	(??__motor_calculate_distance+1)& (0+255),f,b
 43880  012292  2366               	addwfc	(??__motor_calculate_distance+2)& (0+255),f,b
 43881  012294  2367               	addwfc	(??__motor_calculate_distance+3)& (0+255),f,b
 43882  012296  5160               	movf	__motor_calculate_distance@target_position& (0+255),w,b
 43883  012298  2564               	addwf	??__motor_calculate_distance& (0+255),w,b
 43884  01229A  6F69               	movwf	__motor_calculate_distance@distance& (0+255),b
 43885  01229C  5161               	movf	(__motor_calculate_distance@target_position+1)& (0+255),w,b
 43886  01229E  2165               	addwfc	(??__motor_calculate_distance+1)& (0+255),w,b
 43887  0122A0  6F6A               	movwf	(__motor_calculate_distance@distance+1)& (0+255),b
 43888  0122A2  5162               	movf	(__motor_calculate_distance@target_position+2)& (0+255),w,b
 43889  0122A4  2166               	addwfc	(??__motor_calculate_distance+2)& (0+255),w,b
 43890  0122A6  6F6B               	movwf	(__motor_calculate_distance@distance+2)& (0+255),b
 43891  0122A8  5163               	movf	(__motor_calculate_distance@target_position+3)& (0+255),w,b
 43892  0122AA  D023               	goto	L91
 43893  0122AC                     l2525:
 43894                           
 43895                           ; BSR set to: 0
 43896                           ;motor.c: 496: else;motor.c: 497: {;motor.c: 498: distance = os.current_position_in_step
      +                          s - target_position;
 43897                           
 43898                           ; BSR set to: 0
 43899  0122AC  C060  F064         	movff	__motor_calculate_distance@target_position,??__motor_calculate_distance
 43900  0122B0  C061  F065         	movff	__motor_calculate_distance@target_position+1,??__motor_calculate_distance+1
 43901  0122B4  C062  F066         	movff	__motor_calculate_distance@target_position+2,??__motor_calculate_distance+2
 43902  0122B8  C063  F067         	movff	__motor_calculate_distance@target_position+3,??__motor_calculate_distance+3
 43903  0122BC  1F64               	comf	??__motor_calculate_distance& (0+255),f,b
 43904  0122BE  1F65               	comf	(??__motor_calculate_distance+1)& (0+255),f,b
 43905  0122C0  1F66               	comf	(??__motor_calculate_distance+2)& (0+255),f,b
 43906  0122C2  1F67               	comf	(??__motor_calculate_distance+3)& (0+255),f,b
 43907  0122C4  2B64               	incf	??__motor_calculate_distance& (0+255),f,b
 43908  0122C6  0E00               	movlw	0
 43909  0122C8  2365               	addwfc	(??__motor_calculate_distance+1)& (0+255),f,b
 43910  0122CA  2366               	addwfc	(??__motor_calculate_distance+2)& (0+255),f,b
 43911  0122CC  2367               	addwfc	(??__motor_calculate_distance+3)& (0+255),f,b
 43912  0122CE  0101               	movlb	1	; () banked
 43913  0122D0  516B               	movf	(_os+7)& (0+255),w,b	;volatile
 43914  0122D2  0100               	movlb	0	; () banked
 43915  0122D4  2564               	addwf	??__motor_calculate_distance& (0+255),w,b
 43916  0122D6  6F69               	movwf	__motor_calculate_distance@distance& (0+255),b
 43917  0122D8  0101               	movlb	1	; () banked
 43918  0122DA  516C               	movf	(_os+8)& (0+255),w,b	;volatile
 43919  0122DC  0100               	movlb	0	; () banked
 43920  0122DE  2165               	addwfc	(??__motor_calculate_distance+1)& (0+255),w,b
 43921  0122E0  6F6A               	movwf	(__motor_calculate_distance@distance+1)& (0+255),b
 43922  0122E2  0101               	movlb	1	; () banked
 43923  0122E4  516D               	movf	(_os+9)& (0+255),w,b	;volatile
 43924  0122E6  0100               	movlb	0	; () banked
 43925  0122E8  2166               	addwfc	(??__motor_calculate_distance+2)& (0+255),w,b
 43926  0122EA  6F6B               	movwf	(__motor_calculate_distance@distance+2)& (0+255),b
 43927  0122EC  0101               	movlb	1	; () banked
 43928  0122EE  516E               	movf	(_os+10)& (0+255),w,b	;volatile
 43929  0122F0  0100               	movlb	0	; () banked
 43930  0122F2                     L91:
 43931  0122F2  2167               	addwfc	(??__motor_calculate_distance+3)& (0+255),w,b
 43932  0122F4  6F6C               	movwf	(__motor_calculate_distance@distance+3)& (0+255),b
 43933                           
 43934                           ;motor.c: 499: if(distance>config.full_circle_in_steps)
 43935  0122F6  5169               	movf	__motor_calculate_distance@distance& (0+255),w,b
 43936  0122F8  0101               	movlb	1	; () banked
 43937  0122FA  5D95               	subwf	_config& (0+255),w,b
 43938  0122FC  0100               	movlb	0	; () banked
 43939  0122FE  516A               	movf	(__motor_calculate_distance@distance+1)& (0+255),w,b
 43940  012300  0101               	movlb	1	; () banked
 43941  012302  5996               	subwfb	(_config+1)& (0+255),w,b
 43942  012304  0100               	movlb	0	; () banked
 43943  012306  516B               	movf	(__motor_calculate_distance@distance+2)& (0+255),w,b
 43944  012308  0101               	movlb	1	; () banked
 43945  01230A  5997               	subwfb	(_config+2)& (0+255),w,b
 43946  01230C  0100               	movlb	0	; () banked
 43947  01230E  516C               	movf	(__motor_calculate_distance@distance+3)& (0+255),w,b
 43948  012310  0101               	movlb	1	; () banked
 43949  012312  5998               	subwfb	(_config+3)& (0+255),w,b
 43950  012314  B0D8               	btfsc	status,0,c
 43951  012316  D00F               	goto	l2528
 43952                           
 43953                           ; BSR set to: 1
 43954                           ;motor.c: 500: {;motor.c: 502: distance += config.full_circle_in_steps;
 43955  012318  5195               	movf	_config& (0+255),w,b
 43956  01231A  0100               	movlb	0	; () banked
 43957  01231C  2769               	addwf	__motor_calculate_distance@distance& (0+255),f,b
 43958  01231E  0101               	movlb	1	; () banked
 43959  012320  5196               	movf	(_config+1)& (0+255),w,b
 43960  012322  0100               	movlb	0	; () banked
 43961  012324  236A               	addwfc	(__motor_calculate_distance@distance+1)& (0+255),f,b
 43962  012326  0101               	movlb	1	; () banked
 43963  012328  5197               	movf	(_config+2)& (0+255),w,b
 43964  01232A  0100               	movlb	0	; () banked
 43965  01232C  236B               	addwfc	(__motor_calculate_distance@distance+2)& (0+255),f,b
 43966  01232E  0101               	movlb	1	; () banked
 43967  012330  5198               	movf	(_config+3)& (0+255),w,b
 43968  012332  0100               	movlb	0	; () banked
 43969  012334  236C               	addwfc	(__motor_calculate_distance@distance+3)& (0+255),f,b
 43970  012336                     l2528:
 43971                           
 43972                           ;motor.c: 503: };motor.c: 504: };motor.c: 506: return distance;
 43973                           
 43974                           ; BSR set to: 0
 43975                           
 43976                           ; BSR set to: 0
 43977  012336  C069  F060         	movff	__motor_calculate_distance@distance,?__motor_calculate_distance
 43978  01233A  C06A  F061         	movff	__motor_calculate_distance@distance+1,?__motor_calculate_distance+1
 43979  01233E  C06B  F062         	movff	__motor_calculate_distance@distance+2,?__motor_calculate_distance+2
 43980  012342  C06C  F063         	movff	__motor_calculate_distance@distance+3,?__motor_calculate_distance+3
 43981  012346  0012               	return	
 43982  012348                     __end_of__motor_calculate_distance:
 43983                           	opt stack 0
 43984                           tosu	equ	0xFFF
 43985                           tosh	equ	0xFFE
 43986                           tosl	equ	0xFFD
 43987                           pclath	equ	0xFFA
 43988                           tblptru	equ	0xFF8
 43989                           tblptrh	equ	0xFF7
 43990                           tblptrl	equ	0xFF6
 43991                           tablat	equ	0xFF5
 43992                           prodh	equ	0xFF4
 43993                           prodl	equ	0xFF3
 43994                           intcon	equ	0xFF2
 43995                           indf0	equ	0xFEF
 43996                           postinc0	equ	0xFEE
 43997                           fsr0h	equ	0xFEA
 43998                           fsr0l	equ	0xFE9
 43999                           wreg	equ	0xFE8
 44000                           indf1	equ	0xFE7
 44001                           postinc1	equ	0xFE6
 44002                           postdec1	equ	0xFE5
 44003                           plusw1	equ	0xFE3
 44004                           fsr1h	equ	0xFE2
 44005                           fsr1l	equ	0xFE1
 44006                           indf2	equ	0xFDF
 44007                           postinc2	equ	0xFDE
 44008                           postdec2	equ	0xFDD
 44009                           plusw2	equ	0xFDB
 44010                           fsr2h	equ	0xFDA
 44011                           fsr2l	equ	0xFD9
 44012                           status	equ	0xFD8
 44013                           
 44014 ;; *************** function _motor_clear_command_cue *****************
 44015 ;; Defined at:
 44016 ;;		line 613 in file "motor.c"
 44017 ;; Parameters:    Size  Location     Type
 44018 ;;		None
 44019 ;; Auto vars:     Size  Location     Type
 44020 ;;		None
 44021 ;; Return value:  Size  Location     Type
 44022 ;;                  1    wreg      void 
 44023 ;; Registers used:
 44024 ;;		wreg, status,2
 44025 ;; Tracked objects:
 44026 ;;		On entry : 0/0
 44027 ;;		On exit  : 0/0
 44028 ;;		Unchanged: 0/0
 44029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44034 ;;Total ram usage:        0 bytes
 44035 ;; Hardware stack levels used:    1
 44036 ;; Hardware stack levels required when called:   10
 44037 ;; This function calls:
 44038 ;;		Nothing
 44039 ;; This function is called by:
 44040 ;;		__parse_command_short
 44041 ;; This function uses a non-reentrant model
 44042 ;;
 44043                           
 44044                           	psect	text179
 44045  015F04                     __ptext179:
 44046                           	opt stack 0
 44047  015F04                     _motor_clear_command_cue:
 44048                           	opt stack 17
 44049                           
 44050                           ;motor.c: 616: motor_cue_read_index = 0;
 44051                           
 44052                           ;incstack = 0
 44053  015F04  0E00               	movlw	0
 44054  015F06  0101               	movlb	1	; () banked
 44055  015F08  6F4B               	movwf	_motor_cue_read_index& (0+255),b
 44056                           
 44057                           ;motor.c: 617: motor_cue_write_index = 0;
 44058  015F0A  0E00               	movlw	0
 44059  015F0C  6F4A               	movwf	_motor_cue_write_index& (0+255),b
 44060                           
 44061                           ; BSR set to: 1
 44062  015F0E  0012               	return		;funcret
 44063  015F10                     __end_of_motor_clear_command_cue:
 44064                           	opt stack 0
 44065                           tosu	equ	0xFFF
 44066                           tosh	equ	0xFFE
 44067                           tosl	equ	0xFFD
 44068                           pclath	equ	0xFFA
 44069                           tblptru	equ	0xFF8
 44070                           tblptrh	equ	0xFF7
 44071                           tblptrl	equ	0xFF6
 44072                           tablat	equ	0xFF5
 44073                           prodh	equ	0xFF4
 44074                           prodl	equ	0xFF3
 44075                           intcon	equ	0xFF2
 44076                           indf0	equ	0xFEF
 44077                           postinc0	equ	0xFEE
 44078                           fsr0h	equ	0xFEA
 44079                           fsr0l	equ	0xFE9
 44080                           wreg	equ	0xFE8
 44081                           indf1	equ	0xFE7
 44082                           postinc1	equ	0xFE6
 44083                           postdec1	equ	0xFE5
 44084                           plusw1	equ	0xFE3
 44085                           fsr1h	equ	0xFE2
 44086                           fsr1l	equ	0xFE1
 44087                           indf2	equ	0xFDF
 44088                           postinc2	equ	0xFDE
 44089                           postdec2	equ	0xFDD
 44090                           plusw2	equ	0xFDB
 44091                           fsr2h	equ	0xFDA
 44092                           fsr2l	equ	0xFD9
 44093                           status	equ	0xFD8
 44094                           
 44095 ;; *************** function __parse_command_long *****************
 44096 ;; Defined at:
 44097 ;;		line 439 in file "api.c"
 44098 ;; Parameters:    Size  Location     Type
 44099 ;;  data            2   64[BANK0 ] PTR unsigned char 
 44100 ;;		 -> ReceivedDataBuffer(64), 
 44101 ;;  out_buffer      2   66[BANK0 ] PTR unsigned char 
 44102 ;;		 -> ToSendDataBuffer(64), 
 44103 ;;  out_idx_ptr     2   68[BANK0 ] PTR unsigned char 
 44104 ;;		 -> api_parse@out_idx(1), 
 44105 ;; Auto vars:     Size  Location     Type
 44106 ;;  length          1   70[BANK0 ] unsigned char 
 44107 ;; Return value:  Size  Location     Type
 44108 ;;                  1    wreg      unsigned char 
 44109 ;; Registers used:
 44110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44111 ;; Tracked objects:
 44112 ;;		On entry : 0/0
 44113 ;;		On exit  : 0/0
 44114 ;;		Unchanged: 0/0
 44115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44116 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44117 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44119 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44120 ;;Total ram usage:        7 bytes
 44121 ;; Hardware stack levels used:    1
 44122 ;; Hardware stack levels required when called:   15
 44123 ;; This function calls:
 44124 ;;		__parse_jump_steps
 44125 ;;		__parse_jump_steps_with_overshoot
 44126 ;;		__parse_set_manual_speed
 44127 ;; This function is called by:
 44128 ;;		_api_parse
 44129 ;; This function uses a non-reentrant model
 44130 ;;
 44131                           
 44132                           	psect	text180
 44133  013DFE                     __ptext180:
 44134                           	opt stack 0
 44135  013DFE                     __parse_command_long:
 44136                           	opt stack 13
 44137                           
 44138                           ;api.c: 441: uint8_t length = 65;
 44139                           
 44140                           ; BSR set to: 1
 44141                           ;incstack = 0
 44142  013DFE  0E41               	movlw	65
 44143  013E00  0100               	movlb	0	; () banked
 44144  013E02  6FA6               	movwf	__parse_command_long@length& (0+255),b
 44145                           
 44146                           ;api.c: 443: switch(data[0])
 44147  013E04  D02F               	goto	l2345
 44148  013E06                     
 44149                           ; BSR set to: 0
 44150                           ;api.c: 450: length = _parse_jump_steps(data, out_buffer, out_idx_ptr);
 44151                           
 44152                           ; BSR set to: 0
 44153  013E06  C0A0  F094         	movff	__parse_command_long@data,__parse_jump_steps@data
 44154  013E0A  C0A1  F095         	movff	__parse_command_long@data+1,__parse_jump_steps@data+1
 44155  013E0E  C0A2  F096         	movff	__parse_command_long@out_buffer,__parse_jump_steps@out_buffer
 44156  013E12  C0A3  F097         	movff	__parse_command_long@out_buffer+1,__parse_jump_steps@out_buffer+1
 44157  013E16  C0A4  F098         	movff	__parse_command_long@out_idx_ptr,__parse_jump_steps@out_idx_ptr
 44158  013E1A  C0A5  F099         	movff	__parse_command_long@out_idx_ptr+1,__parse_jump_steps@out_idx_ptr+1
 44159  013E1E  EC41  F07E         	call	__parse_jump_steps	;wreg free
 44160  013E22  D01D               	goto	L67
 44161  013E24                     
 44162                           ; BSR set to: 0
 44163                           ;api.c: 454: length = _parse_jump_steps_with_overshoot(data, out_buffer, out_idx_ptr);
 44164                           
 44165                           ; BSR set to: 0
 44166  013E24  C0A0  F094         	movff	__parse_command_long@data,__parse_jump_steps_with_overshoot@data
 44167  013E28  C0A1  F095         	movff	__parse_command_long@data+1,__parse_jump_steps_with_overshoot@data+1
 44168  013E2C  C0A2  F096         	movff	__parse_command_long@out_buffer,__parse_jump_steps_with_overshoot@out_buffer
 44169  013E30  C0A3  F097         	movff	__parse_command_long@out_buffer+1,__parse_jump_steps_with_overshoot@out_buffer+1
 44170  013E34  C0A4  F098         	movff	__parse_command_long@out_idx_ptr,__parse_jump_steps_with_overshoot@out_idx_ptr
 44171  013E38  C0A5  F099         	movff	__parse_command_long@out_idx_ptr+1,__parse_jump_steps_with_overshoot@out_idx_ptr+
      +                          1
 44172  013E3C  EC98  F07D         	call	__parse_jump_steps_with_overshoot	;wreg free
 44173  013E40  D00E               	goto	L67
 44174  013E42                     
 44175                           ; BSR set to: 0
 44176                           ;api.c: 458: length = _parse_set_manual_speed(data, out_buffer, out_idx_ptr);
 44177                           
 44178                           ; BSR set to: 0
 44179  013E42  C0A0  F064         	movff	__parse_command_long@data,__parse_set_manual_speed@data
 44180  013E46  C0A1  F065         	movff	__parse_command_long@data+1,__parse_set_manual_speed@data+1
 44181  013E4A  C0A2  F066         	movff	__parse_command_long@out_buffer,__parse_set_manual_speed@out_buffer
 44182  013E4E  C0A3  F067         	movff	__parse_command_long@out_buffer+1,__parse_set_manual_speed@out_buffer+1
 44183  013E52  C0A4  F068         	movff	__parse_command_long@out_idx_ptr,__parse_set_manual_speed@out_idx_ptr
 44184  013E56  C0A5  F069         	movff	__parse_command_long@out_idx_ptr+1,__parse_set_manual_speed@out_idx_ptr+1
 44185  013E5A  ECC7  F09F         	call	__parse_set_manual_speed	;wreg free
 44186  013E5E                     L67:
 44187  013E5E  0100               	movlb	0	; () banked
 44188  013E60  6FA6               	movwf	__parse_command_long@length& (0+255),b
 44189                           
 44190                           ; BSR set to: 0
 44191                           ;api.c: 460: }
 44192                           
 44193                           ;api.c: 459: break;
 44194  013E62  D00E               	goto	l2347
 44195  013E64                     l2345:
 44196                           
 44197                           ; BSR set to: 0
 44198                           
 44199                           ; BSR set to: 0
 44200  013E64  C0A0  FFD9         	movff	__parse_command_long@data,fsr2l
 44201  013E68  C0A1  FFDA         	movff	__parse_command_long@data+1,fsr2h
 44202  013E6C  50DF               	movf	indf2,w,c
 44203                           
 44204                           ; Switch size 1, requested type "space"
 44205                           ; Number of cases is 3, Range of values is 144 to 146
 44206                           ; switch strategies available:
 44207                           ; Name         Instructions Cycles
 44208                           ; simple_byte           10     6 (average)
 44209                           ;	Chosen strategy is simple_byte
 44210  013E6E  0A90               	xorlw	144	; case 144
 44211  013E70  B4D8               	btfsc	status,2,c
 44212  013E72  D7C9               	goto	l2346
 44213  013E74  0A01               	xorlw	1	; case 145
 44214  013E76  B4D8               	btfsc	status,2,c
 44215  013E78  D7D5               	goto	l2348
 44216  013E7A  0A03               	xorlw	3	; case 146
 44217  013E7C  B4D8               	btfsc	status,2,c
 44218  013E7E  D7E1               	goto	l2349
 44219  013E80                     l2347:
 44220                           
 44221                           ; BSR set to: 0
 44222                           ;api.c: 464: return length;
 44223                           
 44224                           ; BSR set to: 0
 44225  013E80  51A6               	movf	__parse_command_long@length& (0+255),w,b
 44226  013E82  0012               	return	
 44227  013E84                     __end_of__parse_command_long:
 44228                           	opt stack 0
 44229                           tosu	equ	0xFFF
 44230                           tosh	equ	0xFFE
 44231                           tosl	equ	0xFFD
 44232                           pclath	equ	0xFFA
 44233                           tblptru	equ	0xFF8
 44234                           tblptrh	equ	0xFF7
 44235                           tblptrl	equ	0xFF6
 44236                           tablat	equ	0xFF5
 44237                           prodh	equ	0xFF4
 44238                           prodl	equ	0xFF3
 44239                           intcon	equ	0xFF2
 44240                           indf0	equ	0xFEF
 44241                           postinc0	equ	0xFEE
 44242                           fsr0h	equ	0xFEA
 44243                           fsr0l	equ	0xFE9
 44244                           wreg	equ	0xFE8
 44245                           indf1	equ	0xFE7
 44246                           postinc1	equ	0xFE6
 44247                           postdec1	equ	0xFE5
 44248                           plusw1	equ	0xFE3
 44249                           fsr1h	equ	0xFE2
 44250                           fsr1l	equ	0xFE1
 44251                           indf2	equ	0xFDF
 44252                           postinc2	equ	0xFDE
 44253                           postdec2	equ	0xFDD
 44254                           plusw2	equ	0xFDB
 44255                           fsr2h	equ	0xFDA
 44256                           fsr2l	equ	0xFD9
 44257                           status	equ	0xFD8
 44258                           
 44259 ;; *************** function __parse_set_manual_speed *****************
 44260 ;; Defined at:
 44261 ;;		line 559 in file "api.c"
 44262 ;; Parameters:    Size  Location     Type
 44263 ;;  data            2    4[BANK0 ] PTR unsigned char 
 44264 ;;		 -> ReceivedDataBuffer(64), 
 44265 ;;  out_buffer      2    6[BANK0 ] PTR unsigned char 
 44266 ;;		 -> ToSendDataBuffer(64), 
 44267 ;;  out_idx_ptr     2    8[BANK0 ] PTR unsigned char 
 44268 ;;		 -> api_parse@out_idx(1), 
 44269 ;; Auto vars:     Size  Location     Type
 44270 ;;  new_speed       2   11[BANK0 ] unsigned int 
 44271 ;; Return value:  Size  Location     Type
 44272 ;;                  1    wreg      unsigned char 
 44273 ;; Registers used:
 44274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44275 ;; Tracked objects:
 44276 ;;		On entry : 0/0
 44277 ;;		On exit  : 0/0
 44278 ;;		Unchanged: 0/0
 44279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44280 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44281 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44282 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44283 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44284 ;;Total ram usage:        9 bytes
 44285 ;; Hardware stack levels used:    1
 44286 ;; Hardware stack levels required when called:   12
 44287 ;; This function calls:
 44288 ;;		_motor_set_manual_speed
 44289 ;; This function is called by:
 44290 ;;		__parse_command_long
 44291 ;; This function uses a non-reentrant model
 44292 ;;
 44293                           
 44294                           	psect	text181
 44295  013F8E                     __ptext181:
 44296                           	opt stack 0
 44297  013F8E                     __parse_set_manual_speed:
 44298                           	opt stack 15
 44299                           
 44300                           ;api.c: 563: uint16_t new_speed;;api.c: 565: new_speed = data[1];
 44301                           
 44302                           ; BSR set to: 0
 44303                           ;incstack = 0
 44304  013F8E  0100               	movlb	0	; () banked
 44305  013F90  EE20 F001          	lfsr	2,1
 44306  013F94  5164               	movf	__parse_set_manual_speed@data& (0+255),w,b
 44307  013F96  26D9               	addwf	fsr2l,f,c
 44308  013F98  5165               	movf	(__parse_set_manual_speed@data+1)& (0+255),w,b
 44309  013F9A  22DA               	addwfc	fsr2h,f,c
 44310  013F9C  50DF               	movf	indf2,w,c
 44311  013F9E  6F6A               	movwf	??__parse_set_manual_speed& (0+255),b
 44312  013FA0  516A               	movf	??__parse_set_manual_speed& (0+255),w,b
 44313  013FA2  6F6B               	movwf	__parse_set_manual_speed@new_speed& (0+255),b
 44314  013FA4  6B6C               	clrf	(__parse_set_manual_speed@new_speed+1)& (0+255),b
 44315                           
 44316                           ; BSR set to: 0
 44317                           ;api.c: 566: new_speed <<= 8;
 44318  013FA6  516B               	movf	__parse_set_manual_speed@new_speed& (0+255),w,b
 44319  013FA8  6F6C               	movwf	(__parse_set_manual_speed@new_speed+1)& (0+255),b
 44320  013FAA  6B6B               	clrf	__parse_set_manual_speed@new_speed& (0+255),b
 44321                           
 44322                           ; BSR set to: 0
 44323                           ;api.c: 567: new_speed |= data[2];
 44324  013FAC  EE20 F002          	lfsr	2,2
 44325  013FB0  5164               	movf	__parse_set_manual_speed@data& (0+255),w,b
 44326  013FB2  26D9               	addwf	fsr2l,f,c
 44327  013FB4  5165               	movf	(__parse_set_manual_speed@data+1)& (0+255),w,b
 44328  013FB6  22DA               	addwfc	fsr2h,f,c
 44329  013FB8  50DF               	movf	indf2,w,c
 44330  013FBA  6F6A               	movwf	??__parse_set_manual_speed& (0+255),b
 44331  013FBC  516A               	movf	??__parse_set_manual_speed& (0+255),w,b
 44332  013FBE  136B               	iorwf	__parse_set_manual_speed@new_speed& (0+255),f,b
 44333                           
 44334                           ; BSR set to: 0
 44335                           ;api.c: 569: motor_set_manual_speed(new_speed);
 44336  013FC0  C06B  F062         	movff	__parse_set_manual_speed@new_speed,motor_set_manual_speed@new_speed
 44337  013FC4  C06C  F063         	movff	__parse_set_manual_speed@new_speed+1,motor_set_manual_speed@new_speed+1
 44338  013FC8  EC5B  F0A9         	call	_motor_set_manual_speed	;wreg free
 44339                           
 44340                           ;api.c: 572: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 44341  013FCC  C068  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 44342  013FD0  C069  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 44343  013FD4  50DF               	movf	indf2,w,c
 44344  013FD6  B4D8               	btfsc	status,2,c
 44345  013FD8  D01A               	goto	l2365
 44346  013FDA  C068  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 44347  013FDE  C069  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 44348  013FE2  0E3F               	movlw	63
 44349  013FE4  60DF               	cpfslt	indf2,c
 44350  013FE6  D013               	goto	l2365
 44351                           
 44352                           ;api.c: 573: {;api.c: 574: out_buffer[(*out_idx_ptr)++] = COMMAND_SET_MANUAL_SPEED;
 44353  013FE8  C068  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 44354  013FEC  C069  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 44355  013FF0  CFDF F06A          	movff	indf2,??__parse_set_manual_speed
 44356  013FF4  0E01               	movlw	1
 44357  013FF6  26DF               	addwf	indf2,f,c
 44358  013FF8  0100               	movlb	0	; () banked
 44359  013FFA  516A               	movf	??__parse_set_manual_speed& (0+255),w,b
 44360  013FFC  0D01               	mullw	1
 44361  013FFE  50F3               	movf	prodl,w,c
 44362  014000  2566               	addwf	__parse_set_manual_speed@out_buffer& (0+255),w,b
 44363  014002  6ED9               	movwf	fsr2l,c
 44364  014004  50F4               	movf	prodh,w,c
 44365  014006  2167               	addwfc	(__parse_set_manual_speed@out_buffer+1)& (0+255),w,b
 44366  014008  6EDA               	movwf	fsr2h,c
 44367  01400A  0E92               	movlw	146
 44368  01400C  6EDF               	movwf	indf2,c
 44369  01400E                     l2365:
 44370                           
 44371                           ;api.c: 575: };api.c: 577: return 3;
 44372                           
 44373                           ; BSR set to: 0
 44374  01400E  0E03               	movlw	3
 44375  014010  0012               	return	
 44376  014012                     __end_of__parse_set_manual_speed:
 44377                           	opt stack 0
 44378                           tosu	equ	0xFFF
 44379                           tosh	equ	0xFFE
 44380                           tosl	equ	0xFFD
 44381                           pclath	equ	0xFFA
 44382                           tblptru	equ	0xFF8
 44383                           tblptrh	equ	0xFF7
 44384                           tblptrl	equ	0xFF6
 44385                           tablat	equ	0xFF5
 44386                           prodh	equ	0xFF4
 44387                           prodl	equ	0xFF3
 44388                           intcon	equ	0xFF2
 44389                           indf0	equ	0xFEF
 44390                           postinc0	equ	0xFEE
 44391                           fsr0h	equ	0xFEA
 44392                           fsr0l	equ	0xFE9
 44393                           wreg	equ	0xFE8
 44394                           indf1	equ	0xFE7
 44395                           postinc1	equ	0xFE6
 44396                           postdec1	equ	0xFE5
 44397                           plusw1	equ	0xFE3
 44398                           fsr1h	equ	0xFE2
 44399                           fsr1l	equ	0xFE1
 44400                           indf2	equ	0xFDF
 44401                           postinc2	equ	0xFDE
 44402                           postdec2	equ	0xFDD
 44403                           plusw2	equ	0xFDB
 44404                           fsr2h	equ	0xFDA
 44405                           fsr2l	equ	0xFD9
 44406                           status	equ	0xFD8
 44407                           
 44408 ;; *************** function _motor_set_manual_speed *****************
 44409 ;; Defined at:
 44410 ;;		line 882 in file "motor.c"
 44411 ;; Parameters:    Size  Location     Type
 44412 ;;  new_speed       2    2[BANK0 ] unsigned int 
 44413 ;; Auto vars:     Size  Location     Type
 44414 ;;		None
 44415 ;; Return value:  Size  Location     Type
 44416 ;;                  1    wreg      void 
 44417 ;; Registers used:
 44418 ;;		wreg, status,2, status,0, cstack
 44419 ;; Tracked objects:
 44420 ;;		On entry : 0/0
 44421 ;;		On exit  : 0/0
 44422 ;;		Unchanged: 0/0
 44423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44424 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44427 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44428 ;;Total ram usage:        2 bytes
 44429 ;; Hardware stack levels used:    1
 44430 ;; Hardware stack levels required when called:   11
 44431 ;; This function calls:
 44432 ;;		_motor_change_speed
 44433 ;; This function is called by:
 44434 ;;		__parse_set_manual_speed
 44435 ;;		_motor_increase_manual_speed
 44436 ;;		_motor_decrease_manual_speed
 44437 ;; This function uses a non-reentrant model
 44438 ;;
 44439                           
 44440                           	psect	text182
 44441  0152B6                     __ptext182:
 44442                           	opt stack 0
 44443  0152B6                     _motor_set_manual_speed:
 44444                           	opt stack 17
 44445                           
 44446                           ;motor.c: 884: if(new_speed>config.maximum_speed_manual)
 44447                           
 44448                           ;incstack = 0
 44449  0152B6  0100               	movlb	0	; () banked
 44450  0152B8  5162               	movf	motor_set_manual_speed@new_speed& (0+255),w,b
 44451  0152BA  0101               	movlb	1	; () banked
 44452  0152BC  5DA8               	subwf	(_config+19)& (0+255),w,b
 44453  0152BE  0100               	movlb	0	; () banked
 44454  0152C0  5163               	movf	(motor_set_manual_speed@new_speed+1)& (0+255),w,b
 44455  0152C2  0101               	movlb	1	; () banked
 44456  0152C4  59A9               	subwfb	(_config+20)& (0+255),w,b
 44457  0152C6  B0D8               	btfsc	status,0,c
 44458  0152C8  D005               	goto	l2611
 44459                           
 44460                           ; BSR set to: 1
 44461                           ;motor.c: 885: {;motor.c: 886: os.manual_speed = config.maximum_speed_manual;
 44462  0152CA  C1A8  F188         	movff	_config+19,_os+36	;volatile
 44463  0152CE  C1A9  F189         	movff	_config+20,_os+37	;volatile
 44464                           
 44465                           ;motor.c: 887: }
 44466  0152D2  D012               	goto	l2614
 44467  0152D4                     l2611:
 44468                           
 44469                           ; BSR set to: 1
 44470                           ;motor.c: 888: else if(new_speed<config.minimum_speed)
 44471                           
 44472                           ; BSR set to: 1
 44473  0152D4  519E               	movf	(_config+9)& (0+255),w,b
 44474  0152D6  0100               	movlb	0	; () banked
 44475  0152D8  5D62               	subwf	motor_set_manual_speed@new_speed& (0+255),w,b
 44476  0152DA  0101               	movlb	1	; () banked
 44477  0152DC  519F               	movf	(_config+10)& (0+255),w,b
 44478  0152DE  0100               	movlb	0	; () banked
 44479  0152E0  5963               	subwfb	(motor_set_manual_speed@new_speed+1)& (0+255),w,b
 44480  0152E2  B0D8               	btfsc	status,0,c
 44481  0152E4  D005               	goto	l2613
 44482                           
 44483                           ; BSR set to: 0
 44484                           ;motor.c: 889: {;motor.c: 890: os.manual_speed = config.minimum_speed;
 44485  0152E6  C19E  F188         	movff	_config+9,_os+36	;volatile
 44486  0152EA  C19F  F189         	movff	_config+10,_os+37	;volatile
 44487                           
 44488                           ;motor.c: 891: }
 44489  0152EE  D004               	goto	l2614
 44490  0152F0                     l2613:
 44491                           
 44492                           ; BSR set to: 0
 44493                           ;motor.c: 892: else;motor.c: 893: {;motor.c: 894: os.manual_speed = new_speed;
 44494  0152F0  C062  F188         	movff	motor_set_manual_speed@new_speed,_os+36	;volatile
 44495  0152F4  C063  F189         	movff	motor_set_manual_speed@new_speed+1,_os+37	;volatile
 44496  0152F8                     l2614:
 44497                           
 44498                           ;motor.c: 895: };motor.c: 896: motor_change_speed(new_speed);
 44499                           
 44500                           ; BSR set to: 0
 44501                           
 44502                           ; BSR set to: 0
 44503  0152F8  C062  F060         	movff	motor_set_manual_speed@new_speed,motor_change_speed@new_speed
 44504  0152FC  C063  F061         	movff	motor_set_manual_speed@new_speed+1,motor_change_speed@new_speed+1
 44505  015300  ECA7  F0AF         	call	_motor_change_speed	;wreg free
 44506  015304  0012               	return		;funcret
 44507  015306                     __end_of_motor_set_manual_speed:
 44508                           	opt stack 0
 44509                           tosu	equ	0xFFF
 44510                           tosh	equ	0xFFE
 44511                           tosl	equ	0xFFD
 44512                           pclath	equ	0xFFA
 44513                           tblptru	equ	0xFF8
 44514                           tblptrh	equ	0xFF7
 44515                           tblptrl	equ	0xFF6
 44516                           tablat	equ	0xFF5
 44517                           prodh	equ	0xFF4
 44518                           prodl	equ	0xFF3
 44519                           intcon	equ	0xFF2
 44520                           indf0	equ	0xFEF
 44521                           postinc0	equ	0xFEE
 44522                           fsr0h	equ	0xFEA
 44523                           fsr0l	equ	0xFE9
 44524                           wreg	equ	0xFE8
 44525                           indf1	equ	0xFE7
 44526                           postinc1	equ	0xFE6
 44527                           postdec1	equ	0xFE5
 44528                           plusw1	equ	0xFE3
 44529                           fsr1h	equ	0xFE2
 44530                           fsr1l	equ	0xFE1
 44531                           indf2	equ	0xFDF
 44532                           postinc2	equ	0xFDE
 44533                           postdec2	equ	0xFDD
 44534                           plusw2	equ	0xFDB
 44535                           fsr2h	equ	0xFDA
 44536                           fsr2l	equ	0xFD9
 44537                           status	equ	0xFD8
 44538                           
 44539 ;; *************** function _motor_change_speed *****************
 44540 ;; Defined at:
 44541 ;;		line 899 in file "motor.c"
 44542 ;; Parameters:    Size  Location     Type
 44543 ;;  new_speed       2    0[BANK0 ] unsigned int 
 44544 ;; Auto vars:     Size  Location     Type
 44545 ;;		None
 44546 ;; Return value:  Size  Location     Type
 44547 ;;                  1    wreg      void 
 44548 ;; Registers used:
 44549 ;;		None
 44550 ;; Tracked objects:
 44551 ;;		On entry : 0/0
 44552 ;;		On exit  : 0/0
 44553 ;;		Unchanged: 0/0
 44554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44555 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44558 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44559 ;;Total ram usage:        2 bytes
 44560 ;; Hardware stack levels used:    1
 44561 ;; Hardware stack levels required when called:   10
 44562 ;; This function calls:
 44563 ;;		Nothing
 44564 ;; This function is called by:
 44565 ;;		_motor_set_manual_speed
 44566 ;;		_encoder_statemachine
 44567 ;; This function uses a non-reentrant model
 44568 ;;
 44569                           
 44570                           	psect	text183
 44571  015F4E                     __ptext183:
 44572                           	opt stack 0
 44573  015F4E                     _motor_change_speed:
 44574                           	opt stack 17
 44575                           
 44576                           ;motor.c: 901: motor_maximum_speed = new_speed;
 44577                           
 44578                           ;incstack = 0
 44579  015F4E  C060  F131         	movff	motor_change_speed@new_speed,_motor_maximum_speed
 44580  015F52  C061  F132         	movff	motor_change_speed@new_speed+1,_motor_maximum_speed+1
 44581  015F56  0012               	return		;funcret
 44582  015F58                     __end_of_motor_change_speed:
 44583                           	opt stack 0
 44584                           tosu	equ	0xFFF
 44585                           tosh	equ	0xFFE
 44586                           tosl	equ	0xFFD
 44587                           pclath	equ	0xFFA
 44588                           tblptru	equ	0xFF8
 44589                           tblptrh	equ	0xFF7
 44590                           tblptrl	equ	0xFF6
 44591                           tablat	equ	0xFF5
 44592                           prodh	equ	0xFF4
 44593                           prodl	equ	0xFF3
 44594                           intcon	equ	0xFF2
 44595                           indf0	equ	0xFEF
 44596                           postinc0	equ	0xFEE
 44597                           fsr0h	equ	0xFEA
 44598                           fsr0l	equ	0xFE9
 44599                           wreg	equ	0xFE8
 44600                           indf1	equ	0xFE7
 44601                           postinc1	equ	0xFE6
 44602                           postdec1	equ	0xFE5
 44603                           plusw1	equ	0xFE3
 44604                           fsr1h	equ	0xFE2
 44605                           fsr1l	equ	0xFE1
 44606                           indf2	equ	0xFDF
 44607                           postinc2	equ	0xFDE
 44608                           postdec2	equ	0xFDD
 44609                           plusw2	equ	0xFDB
 44610                           fsr2h	equ	0xFDA
 44611                           fsr2l	equ	0xFD9
 44612                           status	equ	0xFD8
 44613                           
 44614 ;; *************** function __parse_jump_steps_with_overshoot *****************
 44615 ;; Defined at:
 44616 ;;		line 525 in file "api.c"
 44617 ;; Parameters:    Size  Location     Type
 44618 ;;  data            2   52[BANK0 ] PTR unsigned char 
 44619 ;;		 -> ReceivedDataBuffer(64), 
 44620 ;;  out_buffer      2   54[BANK0 ] PTR unsigned char 
 44621 ;;		 -> ToSendDataBuffer(64), 
 44622 ;;  out_idx_ptr     2   56[BANK0 ] PTR unsigned char 
 44623 ;;		 -> api_parse@out_idx(1), 
 44624 ;; Auto vars:     Size  Location     Type
 44625 ;;  number_of_st    4   60[BANK0 ] long 
 44626 ;;  return_value    1   59[BANK0 ] unsigned char 
 44627 ;; Return value:  Size  Location     Type
 44628 ;;                  1    wreg      unsigned char 
 44629 ;; Registers used:
 44630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44631 ;; Tracked objects:
 44632 ;;		On entry : 0/0
 44633 ;;		On exit  : 0/0
 44634 ;;		Unchanged: 0/0
 44635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44636 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44637 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44638 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44639 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44640 ;;Total ram usage:       12 bytes
 44641 ;; Hardware stack levels used:    1
 44642 ;; Hardware stack levels required when called:   14
 44643 ;; This function calls:
 44644 ;;		_motor_move_steps
 44645 ;; This function is called by:
 44646 ;;		__parse_command_long
 44647 ;; This function uses a non-reentrant model
 44648 ;;
 44649                           
 44650                           	psect	text184
 44651  00FB30                     __ptext184:
 44652                           	opt stack 0
 44653  00FB30                     __parse_jump_steps_with_overshoot:
 44654                           	opt stack 13
 44655                           
 44656                           ;api.c: 528: uint8_t return_value;;api.c: 529: int32_t number_of_steps;;api.c: 531: numb
      +                          er_of_steps = data[1];
 44657                           
 44658                           ;incstack = 0
 44659  00FB30  0100               	movlb	0	; () banked
 44660  00FB32  EE20 F001          	lfsr	2,1
 44661  00FB36  5194               	movf	__parse_jump_steps_with_overshoot@data& (0+255),w,b
 44662  00FB38  26D9               	addwf	fsr2l,f,c
 44663  00FB3A  5195               	movf	(__parse_jump_steps_with_overshoot@data+1)& (0+255),w,b
 44664  00FB3C  22DA               	addwfc	fsr2h,f,c
 44665  00FB3E  50DF               	movf	indf2,w,c
 44666  00FB40  6F9A               	movwf	??__parse_jump_steps_with_overshoot& (0+255),b
 44667  00FB42  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 44668  00FB44  6F9C               	movwf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 44669  00FB46  6B9D               	clrf	(__parse_jump_steps_with_overshoot@number_of_steps+1)& (0+255),b
 44670  00FB48  6B9E               	clrf	(__parse_jump_steps_with_overshoot@number_of_steps+2)& (0+255),b
 44671  00FB4A  6B9F               	clrf	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),b
 44672                           
 44673                           ; BSR set to: 0
 44674                           ;api.c: 532: number_of_steps <<= 8;
 44675  00FB4C  C09E  F09F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+3
 44676  00FB50  C09D  F09E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+2
 44677  00FB54  C09C  F09D         	movff	__parse_jump_steps_with_overshoot@number_of_steps,__parse_jump_steps_with_oversho
      +                          ot@number_of_steps+1
 44678  00FB58  6B9C               	clrf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 44679                           
 44680                           ; BSR set to: 0
 44681                           ;api.c: 533: number_of_steps |= data[2];
 44682  00FB5A  EE20 F002          	lfsr	2,2
 44683  00FB5E  5194               	movf	__parse_jump_steps_with_overshoot@data& (0+255),w,b
 44684  00FB60  26D9               	addwf	fsr2l,f,c
 44685  00FB62  5195               	movf	(__parse_jump_steps_with_overshoot@data+1)& (0+255),w,b
 44686  00FB64  22DA               	addwfc	fsr2h,f,c
 44687  00FB66  50DF               	movf	indf2,w,c
 44688  00FB68  6F9A               	movwf	??__parse_jump_steps_with_overshoot& (0+255),b
 44689  00FB6A  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 44690  00FB6C  139C               	iorwf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),f,b
 44691                           
 44692                           ;api.c: 534: number_of_steps <<= 8;
 44693  00FB6E  C09E  F09F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+3
 44694  00FB72  C09D  F09E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+2
 44695  00FB76  C09C  F09D         	movff	__parse_jump_steps_with_overshoot@number_of_steps,__parse_jump_steps_with_oversho
      +                          ot@number_of_steps+1
 44696  00FB7A  6B9C               	clrf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 44697                           
 44698                           ; BSR set to: 0
 44699                           ;api.c: 535: number_of_steps |= data[3];
 44700  00FB7C  EE20 F003          	lfsr	2,3
 44701  00FB80  5194               	movf	__parse_jump_steps_with_overshoot@data& (0+255),w,b
 44702  00FB82  26D9               	addwf	fsr2l,f,c
 44703  00FB84  5195               	movf	(__parse_jump_steps_with_overshoot@data+1)& (0+255),w,b
 44704  00FB86  22DA               	addwfc	fsr2h,f,c
 44705  00FB88  50DF               	movf	indf2,w,c
 44706  00FB8A  6F9A               	movwf	??__parse_jump_steps_with_overshoot& (0+255),b
 44707  00FB8C  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 44708  00FB8E  139C               	iorwf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),f,b
 44709                           
 44710                           ; BSR set to: 0
 44711                           ;api.c: 536: number_of_steps <<= 8;
 44712  00FB90  C09E  F09F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+3
 44713  00FB94  C09D  F09E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+2
 44714  00FB98  C09C  F09D         	movff	__parse_jump_steps_with_overshoot@number_of_steps,__parse_jump_steps_with_oversho
      +                          ot@number_of_steps+1
 44715  00FB9C  6B9C               	clrf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 44716                           
 44717                           ;api.c: 537: number_of_steps |= data[4];
 44718  00FB9E  EE20 F004          	lfsr	2,4
 44719  00FBA2  5194               	movf	__parse_jump_steps_with_overshoot@data& (0+255),w,b
 44720  00FBA4  26D9               	addwf	fsr2l,f,c
 44721  00FBA6  5195               	movf	(__parse_jump_steps_with_overshoot@data+1)& (0+255),w,b
 44722  00FBA8  22DA               	addwfc	fsr2h,f,c
 44723  00FBAA  50DF               	movf	indf2,w,c
 44724  00FBAC  6F9A               	movwf	??__parse_jump_steps_with_overshoot& (0+255),b
 44725  00FBAE  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 44726  00FBB0  139C               	iorwf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),f,b
 44727                           
 44728                           ; BSR set to: 0
 44729                           ;api.c: 539: if(number_of_steps>0)
 44730  00FBB2  BF9F               	btfsc	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),7,b
 44731  00FBB4  D018               	goto	l2359
 44732  00FBB6  519F               	movf	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),w,b
 44733  00FBB8  119E               	iorwf	(__parse_jump_steps_with_overshoot@number_of_steps+2)& (0+255),w,b
 44734  00FBBA  119D               	iorwf	(__parse_jump_steps_with_overshoot@number_of_steps+1)& (0+255),w,b
 44735  00FBBC  E103               	bnz	u14290
 44736  00FBBE  059C               	decf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),w,b
 44737  00FBC0  A0D8               	btfss	status,0,c
 44738  00FBC2  D011               	goto	l2359
 44739  00FBC4                     u14290:
 44740                           
 44741                           ; BSR set to: 0
 44742                           ;api.c: 540: {;api.c: 541: motor_move_steps(MOTOR_DIRECTION_CW, (uint32_t) number_of_ste
      +                          ps, 0xFFFF, MOTOR_OVERSHOOT_WITH_OVERSHOOT);
 44743  00FBC4  C09C  F08C         	movff	__parse_jump_steps_with_overshoot@number_of_steps,motor_move_steps@distance
 44744  00FBC8  C09D  F08D         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,motor_move_steps@distance+1
 44745  00FBCC  C09E  F08E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,motor_move_steps@distance+2
 44746  00FBD0  C09F  F08F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+3,motor_move_steps@distance+3
 44747  00FBD4  0EFF               	movlw	255
 44748  00FBD6  6F91               	movwf	(motor_move_steps@speed+1)& (0+255),b
 44749  00FBD8  6990               	setf	motor_move_steps@speed& (0+255),b
 44750  00FBDA  0E00               	movlw	0
 44751  00FBDC  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 44752  00FBDE  0E01               	movlw	1
 44753  00FBE0  EC54  F0AD         	call	_motor_move_steps
 44754                           
 44755                           ;api.c: 542: }
 44756  00FBE4  D019               	goto	l2360
 44757  00FBE6                     l2359:
 44758                           
 44759                           ;api.c: 543: else;api.c: 544: {;api.c: 545: number_of_steps = -number_of_steps;
 44760  00FBE6  0100               	movlb	0	; () banked
 44761  00FBE8  1F9F               	comf	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),f,b
 44762  00FBEA  1F9E               	comf	(__parse_jump_steps_with_overshoot@number_of_steps+2)& (0+255),f,b
 44763  00FBEC  1F9D               	comf	(__parse_jump_steps_with_overshoot@number_of_steps+1)& (0+255),f,b
 44764  00FBEE  6D9C               	negf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 44765  00FBF0  0E00               	movlw	0
 44766  00FBF2  239D               	addwfc	(__parse_jump_steps_with_overshoot@number_of_steps+1)& (0+255),f,b
 44767  00FBF4  239E               	addwfc	(__parse_jump_steps_with_overshoot@number_of_steps+2)& (0+255),f,b
 44768  00FBF6  239F               	addwfc	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),f,b
 44769                           
 44770                           ; BSR set to: 0
 44771                           ;api.c: 546: motor_move_steps(MOTOR_DIRECTION_CCW, (uint32_t) number_of_steps, 0xFFFF, M
      +                          OTOR_OVERSHOOT_WITH_OVERSHOOT);
 44772  00FBF8  C09C  F08C         	movff	__parse_jump_steps_with_overshoot@number_of_steps,motor_move_steps@distance
 44773  00FBFC  C09D  F08D         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,motor_move_steps@distance+1
 44774  00FC00  C09E  F08E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,motor_move_steps@distance+2
 44775  00FC04  C09F  F08F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+3,motor_move_steps@distance+3
 44776  00FC08  0EFF               	movlw	255
 44777  00FC0A  6F91               	movwf	(motor_move_steps@speed+1)& (0+255),b
 44778  00FC0C  6990               	setf	motor_move_steps@speed& (0+255),b
 44779  00FC0E  0E00               	movlw	0
 44780  00FC10  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 44781  00FC12  0EFF               	movlw	255
 44782  00FC14  EC54  F0AD         	call	_motor_move_steps
 44783  00FC18                     l2360:
 44784                           
 44785                           ;api.c: 547: };api.c: 550: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<62))
 44786  00FC18  C098  FFD9         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr,fsr2l
 44787  00FC1C  C099  FFDA         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr+1,fsr2h
 44788  00FC20  50DF               	movf	indf2,w,c
 44789  00FC22  B4D8               	btfsc	status,2,c
 44790  00FC24  D02C               	goto	l2361
 44791  00FC26  C098  FFD9         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr,fsr2l
 44792  00FC2A  C099  FFDA         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr+1,fsr2h
 44793  00FC2E  0E3E               	movlw	62
 44794  00FC30  60DF               	cpfslt	indf2,c
 44795  00FC32  D025               	goto	l2361
 44796                           
 44797                           ;api.c: 551: {;api.c: 552: out_buffer[(*out_idx_ptr)++] = COMMAND_JUMP_STEPS_WITH_OVERSH
      +                          OOT;
 44798  00FC34  C098  FFD9         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr,fsr2l
 44799  00FC38  C099  FFDA         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr+1,fsr2h
 44800  00FC3C  CFDF F09A          	movff	indf2,??__parse_jump_steps_with_overshoot
 44801  00FC40  0E01               	movlw	1
 44802  00FC42  26DF               	addwf	indf2,f,c
 44803  00FC44  0100               	movlb	0	; () banked
 44804  00FC46  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 44805  00FC48  0D01               	mullw	1
 44806  00FC4A  50F3               	movf	prodl,w,c
 44807  00FC4C  2596               	addwf	__parse_jump_steps_with_overshoot@out_buffer& (0+255),w,b
 44808  00FC4E  6ED9               	movwf	fsr2l,c
 44809  00FC50  50F4               	movf	prodh,w,c
 44810  00FC52  2197               	addwfc	(__parse_jump_steps_with_overshoot@out_buffer+1)& (0+255),w,b
 44811  00FC54  6EDA               	movwf	fsr2h,c
 44812  00FC56  0E91               	movlw	145
 44813  00FC58  6EDF               	movwf	indf2,c
 44814                           
 44815                           ;api.c: 553: out_buffer[(*out_idx_ptr)++] = return_value;
 44816  00FC5A  C098  FFD9         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr,fsr2l
 44817  00FC5E  C099  FFDA         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr+1,fsr2h
 44818  00FC62  CFDF F09A          	movff	indf2,??__parse_jump_steps_with_overshoot
 44819  00FC66  0E01               	movlw	1
 44820  00FC68  26DF               	addwf	indf2,f,c
 44821  00FC6A  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 44822  00FC6C  0D01               	mullw	1
 44823  00FC6E  50F3               	movf	prodl,w,c
 44824  00FC70  2596               	addwf	__parse_jump_steps_with_overshoot@out_buffer& (0+255),w,b
 44825  00FC72  6ED9               	movwf	fsr2l,c
 44826  00FC74  50F4               	movf	prodh,w,c
 44827  00FC76  2197               	addwfc	(__parse_jump_steps_with_overshoot@out_buffer+1)& (0+255),w,b
 44828  00FC78  6EDA               	movwf	fsr2h,c
 44829  00FC7A  C09B  FFDF         	movff	__parse_jump_steps_with_overshoot@return_value,indf2
 44830  00FC7E                     l2361:
 44831                           
 44832                           ;api.c: 554: };api.c: 556: return 5;
 44833                           
 44834                           ; BSR set to: 0
 44835  00FC7E  0E05               	movlw	5
 44836  00FC80  0012               	return	
 44837  00FC82                     __end_of__parse_jump_steps_with_overshoot:
 44838                           	opt stack 0
 44839                           tosu	equ	0xFFF
 44840                           tosh	equ	0xFFE
 44841                           tosl	equ	0xFFD
 44842                           pclath	equ	0xFFA
 44843                           tblptru	equ	0xFF8
 44844                           tblptrh	equ	0xFF7
 44845                           tblptrl	equ	0xFF6
 44846                           tablat	equ	0xFF5
 44847                           prodh	equ	0xFF4
 44848                           prodl	equ	0xFF3
 44849                           intcon	equ	0xFF2
 44850                           indf0	equ	0xFEF
 44851                           postinc0	equ	0xFEE
 44852                           fsr0h	equ	0xFEA
 44853                           fsr0l	equ	0xFE9
 44854                           wreg	equ	0xFE8
 44855                           indf1	equ	0xFE7
 44856                           postinc1	equ	0xFE6
 44857                           postdec1	equ	0xFE5
 44858                           plusw1	equ	0xFE3
 44859                           fsr1h	equ	0xFE2
 44860                           fsr1l	equ	0xFE1
 44861                           indf2	equ	0xFDF
 44862                           postinc2	equ	0xFDE
 44863                           postdec2	equ	0xFDD
 44864                           plusw2	equ	0xFDB
 44865                           fsr2h	equ	0xFDA
 44866                           fsr2l	equ	0xFD9
 44867                           status	equ	0xFD8
 44868                           
 44869 ;; *************** function __parse_jump_steps *****************
 44870 ;; Defined at:
 44871 ;;		line 490 in file "api.c"
 44872 ;; Parameters:    Size  Location     Type
 44873 ;;  data            2   52[BANK0 ] PTR unsigned char 
 44874 ;;		 -> ReceivedDataBuffer(64), 
 44875 ;;  out_buffer      2   54[BANK0 ] PTR unsigned char 
 44876 ;;		 -> ToSendDataBuffer(64), 
 44877 ;;  out_idx_ptr     2   56[BANK0 ] PTR unsigned char 
 44878 ;;		 -> api_parse@out_idx(1), 
 44879 ;; Auto vars:     Size  Location     Type
 44880 ;;  number_of_st    4   60[BANK0 ] long 
 44881 ;;  return_value    1   59[BANK0 ] unsigned char 
 44882 ;; Return value:  Size  Location     Type
 44883 ;;                  1    wreg      unsigned char 
 44884 ;; Registers used:
 44885 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44886 ;; Tracked objects:
 44887 ;;		On entry : 0/0
 44888 ;;		On exit  : 0/0
 44889 ;;		Unchanged: 0/0
 44890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44891 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44892 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44893 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44894 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44895 ;;Total ram usage:       12 bytes
 44896 ;; Hardware stack levels used:    1
 44897 ;; Hardware stack levels required when called:   14
 44898 ;; This function calls:
 44899 ;;		_motor_move_steps
 44900 ;; This function is called by:
 44901 ;;		__parse_command_long
 44902 ;; This function uses a non-reentrant model
 44903 ;;
 44904                           
 44905                           	psect	text185
 44906  00FC82                     __ptext185:
 44907                           	opt stack 0
 44908  00FC82                     __parse_jump_steps:
 44909                           	opt stack 13
 44910                           
 44911                           ;api.c: 494: uint8_t return_value;;api.c: 495: int32_t number_of_steps;;api.c: 497: numb
      +                          er_of_steps = data[1];
 44912                           
 44913                           ;incstack = 0
 44914  00FC82  0100               	movlb	0	; () banked
 44915  00FC84  EE20 F001          	lfsr	2,1
 44916  00FC88  5194               	movf	__parse_jump_steps@data& (0+255),w,b
 44917  00FC8A  26D9               	addwf	fsr2l,f,c
 44918  00FC8C  5195               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 44919  00FC8E  22DA               	addwfc	fsr2h,f,c
 44920  00FC90  50DF               	movf	indf2,w,c
 44921  00FC92  6F9A               	movwf	??__parse_jump_steps& (0+255),b
 44922  00FC94  519A               	movf	??__parse_jump_steps& (0+255),w,b
 44923  00FC96  6F9C               	movwf	__parse_jump_steps@number_of_steps& (0+255),b
 44924  00FC98  6B9D               	clrf	(__parse_jump_steps@number_of_steps+1)& (0+255),b
 44925  00FC9A  6B9E               	clrf	(__parse_jump_steps@number_of_steps+2)& (0+255),b
 44926  00FC9C  6B9F               	clrf	(__parse_jump_steps@number_of_steps+3)& (0+255),b
 44927                           
 44928                           ; BSR set to: 0
 44929                           ;api.c: 498: number_of_steps <<= 8;
 44930  00FC9E  C09E  F09F         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 44931  00FCA2  C09D  F09E         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 44932  00FCA6  C09C  F09D         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 44933  00FCAA  6B9C               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 44934                           
 44935                           ; BSR set to: 0
 44936                           ;api.c: 499: number_of_steps |= data[2];
 44937  00FCAC  EE20 F002          	lfsr	2,2
 44938  00FCB0  5194               	movf	__parse_jump_steps@data& (0+255),w,b
 44939  00FCB2  26D9               	addwf	fsr2l,f,c
 44940  00FCB4  5195               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 44941  00FCB6  22DA               	addwfc	fsr2h,f,c
 44942  00FCB8  50DF               	movf	indf2,w,c
 44943  00FCBA  6F9A               	movwf	??__parse_jump_steps& (0+255),b
 44944  00FCBC  519A               	movf	??__parse_jump_steps& (0+255),w,b
 44945  00FCBE  139C               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 44946                           
 44947                           ;api.c: 500: number_of_steps <<= 8;
 44948  00FCC0  C09E  F09F         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 44949  00FCC4  C09D  F09E         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 44950  00FCC8  C09C  F09D         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 44951  00FCCC  6B9C               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 44952                           
 44953                           ; BSR set to: 0
 44954                           ;api.c: 501: number_of_steps |= data[3];
 44955  00FCCE  EE20 F003          	lfsr	2,3
 44956  00FCD2  5194               	movf	__parse_jump_steps@data& (0+255),w,b
 44957  00FCD4  26D9               	addwf	fsr2l,f,c
 44958  00FCD6  5195               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 44959  00FCD8  22DA               	addwfc	fsr2h,f,c
 44960  00FCDA  50DF               	movf	indf2,w,c
 44961  00FCDC  6F9A               	movwf	??__parse_jump_steps& (0+255),b
 44962  00FCDE  519A               	movf	??__parse_jump_steps& (0+255),w,b
 44963  00FCE0  139C               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 44964                           
 44965                           ; BSR set to: 0
 44966                           ;api.c: 502: number_of_steps <<= 8;
 44967  00FCE2  C09E  F09F         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 44968  00FCE6  C09D  F09E         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 44969  00FCEA  C09C  F09D         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 44970  00FCEE  6B9C               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 44971                           
 44972                           ;api.c: 503: number_of_steps |= data[4];
 44973  00FCF0  EE20 F004          	lfsr	2,4
 44974  00FCF4  5194               	movf	__parse_jump_steps@data& (0+255),w,b
 44975  00FCF6  26D9               	addwf	fsr2l,f,c
 44976  00FCF8  5195               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 44977  00FCFA  22DA               	addwfc	fsr2h,f,c
 44978  00FCFC  50DF               	movf	indf2,w,c
 44979  00FCFE  6F9A               	movwf	??__parse_jump_steps& (0+255),b
 44980  00FD00  519A               	movf	??__parse_jump_steps& (0+255),w,b
 44981  00FD02  139C               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 44982                           
 44983                           ; BSR set to: 0
 44984                           ;api.c: 505: if(number_of_steps>0)
 44985  00FD04  BF9F               	btfsc	(__parse_jump_steps@number_of_steps+3)& (0+255),7,b
 44986  00FD06  D018               	goto	l2353
 44987  00FD08  519F               	movf	(__parse_jump_steps@number_of_steps+3)& (0+255),w,b
 44988  00FD0A  119E               	iorwf	(__parse_jump_steps@number_of_steps+2)& (0+255),w,b
 44989  00FD0C  119D               	iorwf	(__parse_jump_steps@number_of_steps+1)& (0+255),w,b
 44990  00FD0E  E103               	bnz	u14260
 44991  00FD10  059C               	decf	__parse_jump_steps@number_of_steps& (0+255),w,b
 44992  00FD12  A0D8               	btfss	status,0,c
 44993  00FD14  D011               	goto	l2353
 44994  00FD16                     u14260:
 44995                           
 44996                           ; BSR set to: 0
 44997                           ;api.c: 506: {;api.c: 507: return_value = motor_move_steps(MOTOR_DIRECTION_CW, (uint32_t
      +                          ) number_of_steps, 0xFFFF, MOTOR_OVERSHOOT_NO_OVERSHOOT);
 44998  00FD16  C09C  F08C         	movff	__parse_jump_steps@number_of_steps,motor_move_steps@distance
 44999  00FD1A  C09D  F08D         	movff	__parse_jump_steps@number_of_steps+1,motor_move_steps@distance+1
 45000  00FD1E  C09E  F08E         	movff	__parse_jump_steps@number_of_steps+2,motor_move_steps@distance+2
 45001  00FD22  C09F  F08F         	movff	__parse_jump_steps@number_of_steps+3,motor_move_steps@distance+3
 45002  00FD26  0EFF               	movlw	255
 45003  00FD28  6F91               	movwf	(motor_move_steps@speed+1)& (0+255),b
 45004  00FD2A  6990               	setf	motor_move_steps@speed& (0+255),b
 45005  00FD2C  0E01               	movlw	1
 45006  00FD2E  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 45007  00FD30  0E01               	movlw	1
 45008  00FD32  EC54  F0AD         	call	_motor_move_steps
 45009  00FD36  D018               	goto	L68
 45010  00FD38                     l2353:
 45011                           
 45012                           ; BSR set to: 0
 45013                           ;api.c: 509: else;api.c: 510: {;api.c: 511: number_of_steps = -number_of_steps;
 45014                           
 45015                           ; BSR set to: 0
 45016  00FD38  1F9F               	comf	(__parse_jump_steps@number_of_steps+3)& (0+255),f,b
 45017  00FD3A  1F9E               	comf	(__parse_jump_steps@number_of_steps+2)& (0+255),f,b
 45018  00FD3C  1F9D               	comf	(__parse_jump_steps@number_of_steps+1)& (0+255),f,b
 45019  00FD3E  6D9C               	negf	__parse_jump_steps@number_of_steps& (0+255),b
 45020  00FD40  0E00               	movlw	0
 45021  00FD42  239D               	addwfc	(__parse_jump_steps@number_of_steps+1)& (0+255),f,b
 45022  00FD44  239E               	addwfc	(__parse_jump_steps@number_of_steps+2)& (0+255),f,b
 45023  00FD46  239F               	addwfc	(__parse_jump_steps@number_of_steps+3)& (0+255),f,b
 45024                           
 45025                           ; BSR set to: 0
 45026                           ;api.c: 512: return_value = motor_move_steps(MOTOR_DIRECTION_CCW, (uint32_t) number_of_s
      +                          teps, 0xFFFF, MOTOR_OVERSHOOT_NO_OVERSHOOT);
 45027  00FD48  C09C  F08C         	movff	__parse_jump_steps@number_of_steps,motor_move_steps@distance
 45028  00FD4C  C09D  F08D         	movff	__parse_jump_steps@number_of_steps+1,motor_move_steps@distance+1
 45029  00FD50  C09E  F08E         	movff	__parse_jump_steps@number_of_steps+2,motor_move_steps@distance+2
 45030  00FD54  C09F  F08F         	movff	__parse_jump_steps@number_of_steps+3,motor_move_steps@distance+3
 45031  00FD58  0EFF               	movlw	255
 45032  00FD5A  6F91               	movwf	(motor_move_steps@speed+1)& (0+255),b
 45033  00FD5C  6990               	setf	motor_move_steps@speed& (0+255),b
 45034  00FD5E  0E01               	movlw	1
 45035  00FD60  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 45036  00FD62  0EFF               	movlw	255
 45037  00FD64  EC54  F0AD         	call	_motor_move_steps
 45038  00FD68                     L68:
 45039  00FD68  0100               	movlb	0	; () banked
 45040  00FD6A  6F9B               	movwf	__parse_jump_steps@return_value& (0+255),b
 45041                           
 45042                           ; BSR set to: 0
 45043                           ;api.c: 513: };api.c: 516: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<62))
 45044                           
 45045                           ; BSR set to: 0
 45046  00FD6C  C098  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 45047  00FD70  C099  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 45048  00FD74  50DF               	movf	indf2,w,c
 45049  00FD76  B4D8               	btfsc	status,2,c
 45050  00FD78  D02B               	goto	l2355
 45051                           
 45052                           ; BSR set to: 0
 45053  00FD7A  C098  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 45054  00FD7E  C099  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 45055  00FD82  0E3E               	movlw	62
 45056  00FD84  60DF               	cpfslt	indf2,c
 45057  00FD86  D024               	goto	l2355
 45058                           
 45059                           ; BSR set to: 0
 45060                           ;api.c: 517: {;api.c: 518: out_buffer[(*out_idx_ptr)++] = COMMAND_JUMP_STEPS;
 45061  00FD88  C098  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 45062  00FD8C  C099  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 45063  00FD90  CFDF F09A          	movff	indf2,??__parse_jump_steps
 45064  00FD94  0E01               	movlw	1
 45065  00FD96  26DF               	addwf	indf2,f,c
 45066  00FD98  519A               	movf	??__parse_jump_steps& (0+255),w,b
 45067  00FD9A  0D01               	mullw	1
 45068  00FD9C  50F3               	movf	prodl,w,c
 45069  00FD9E  2596               	addwf	__parse_jump_steps@out_buffer& (0+255),w,b
 45070  00FDA0  6ED9               	movwf	fsr2l,c
 45071  00FDA2  50F4               	movf	prodh,w,c
 45072  00FDA4  2197               	addwfc	(__parse_jump_steps@out_buffer+1)& (0+255),w,b
 45073  00FDA6  6EDA               	movwf	fsr2h,c
 45074  00FDA8  0E90               	movlw	144
 45075  00FDAA  6EDF               	movwf	indf2,c
 45076                           
 45077                           ;api.c: 519: out_buffer[(*out_idx_ptr)++] = return_value;
 45078  00FDAC  C098  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 45079  00FDB0  C099  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 45080  00FDB4  CFDF F09A          	movff	indf2,??__parse_jump_steps
 45081  00FDB8  0E01               	movlw	1
 45082  00FDBA  26DF               	addwf	indf2,f,c
 45083  00FDBC  519A               	movf	??__parse_jump_steps& (0+255),w,b
 45084  00FDBE  0D01               	mullw	1
 45085  00FDC0  50F3               	movf	prodl,w,c
 45086  00FDC2  2596               	addwf	__parse_jump_steps@out_buffer& (0+255),w,b
 45087  00FDC4  6ED9               	movwf	fsr2l,c
 45088  00FDC6  50F4               	movf	prodh,w,c
 45089  00FDC8  2197               	addwfc	(__parse_jump_steps@out_buffer+1)& (0+255),w,b
 45090  00FDCA  6EDA               	movwf	fsr2h,c
 45091  00FDCC  C09B  FFDF         	movff	__parse_jump_steps@return_value,indf2
 45092  00FDD0                     l2355:
 45093                           
 45094                           ; BSR set to: 0
 45095                           ;api.c: 520: };api.c: 522: return 5;
 45096                           
 45097                           ; BSR set to: 0
 45098  00FDD0  0E05               	movlw	5
 45099  00FDD2  0012               	return	
 45100  00FDD4                     __end_of__parse_jump_steps:
 45101                           	opt stack 0
 45102                           tosu	equ	0xFFF
 45103                           tosh	equ	0xFFE
 45104                           tosl	equ	0xFFD
 45105                           pclath	equ	0xFFA
 45106                           tblptru	equ	0xFF8
 45107                           tblptrh	equ	0xFF7
 45108                           tblptrl	equ	0xFF6
 45109                           tablat	equ	0xFF5
 45110                           prodh	equ	0xFF4
 45111                           prodl	equ	0xFF3
 45112                           intcon	equ	0xFF2
 45113                           indf0	equ	0xFEF
 45114                           postinc0	equ	0xFEE
 45115                           fsr0h	equ	0xFEA
 45116                           fsr0l	equ	0xFE9
 45117                           wreg	equ	0xFE8
 45118                           indf1	equ	0xFE7
 45119                           postinc1	equ	0xFE6
 45120                           postdec1	equ	0xFE5
 45121                           plusw1	equ	0xFE3
 45122                           fsr1h	equ	0xFE2
 45123                           fsr1l	equ	0xFE1
 45124                           indf2	equ	0xFDF
 45125                           postinc2	equ	0xFDE
 45126                           postdec2	equ	0xFDD
 45127                           plusw2	equ	0xFDB
 45128                           fsr2h	equ	0xFDA
 45129                           fsr2l	equ	0xFD9
 45130                           status	equ	0xFD8
 45131                           
 45132 ;; *************** function _motor_move_steps *****************
 45133 ;; Defined at:
 45134 ;;		line 986 in file "motor.c"
 45135 ;; Parameters:    Size  Location     Type
 45136 ;;  direction       1    wreg     enum E6622
 45137 ;;  distance        4   44[BANK0 ] unsigned long 
 45138 ;;  speed           2   48[BANK0 ] unsigned int 
 45139 ;;  overshoot       1   50[BANK0 ] enum E6635
 45140 ;; Auto vars:     Size  Location     Type
 45141 ;;  direction       1   51[BANK0 ] enum E6622
 45142 ;; Return value:  Size  Location     Type
 45143 ;;                  1    wreg      enum E6782
 45144 ;; Registers used:
 45145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45146 ;; Tracked objects:
 45147 ;;		On entry : 0/0
 45148 ;;		On exit  : 0/0
 45149 ;;		Unchanged: 0/0
 45150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45151 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45152 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45154 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45155 ;;Total ram usage:        8 bytes
 45156 ;; Hardware stack levels used:    1
 45157 ;; Hardware stack levels required when called:   13
 45158 ;; This function calls:
 45159 ;;		__motor_move_steps
 45160 ;; This function is called by:
 45161 ;;		__parse_jump_steps
 45162 ;;		__parse_jump_steps_with_overshoot
 45163 ;;		_motor_arc_move
 45164 ;; This function uses a non-reentrant model
 45165 ;;
 45166                           
 45167                           	psect	text186
 45168  015AA8                     __ptext186:
 45169                           	opt stack 0
 45170  015AA8                     _motor_move_steps:
 45171                           	opt stack 15
 45172                           
 45173                           ; BSR set to: 0
 45174                           ;incstack = 0
 45175                           ;motor_move_steps@direction stored from wreg
 45176  015AA8  0100               	movlb	0	; () banked
 45177  015AAA  6F93               	movwf	motor_move_steps@direction& (0+255),b
 45178                           
 45179                           ;motor.c: 989: return _motor_move_steps(direction, distance, speed, overshoot, MOTOR_MOV
      +                          E_TYPE_NORMAL);
 45180  015AAC  C08C  F07D         	movff	motor_move_steps@distance,__motor_move_steps@distance_in_steps
 45181  015AB0  C08D  F07E         	movff	motor_move_steps@distance+1,__motor_move_steps@distance_in_steps+1
 45182  015AB4  C08E  F07F         	movff	motor_move_steps@distance+2,__motor_move_steps@distance_in_steps+2
 45183  015AB8  C08F  F080         	movff	motor_move_steps@distance+3,__motor_move_steps@distance_in_steps+3
 45184  015ABC  C090  F081         	movff	motor_move_steps@speed,__motor_move_steps@speed
 45185  015AC0  C091  F082         	movff	motor_move_steps@speed+1,__motor_move_steps@speed+1
 45186  015AC4  C092  F083         	movff	motor_move_steps@overshoot,__motor_move_steps@overshoot
 45187  015AC8  0E00               	movlw	0
 45188  015ACA  0100               	movlb	0	; () banked
 45189  015ACC  6F84               	movwf	__motor_move_steps@type& (0+255),b
 45190  015ACE  5193               	movf	motor_move_steps@direction& (0+255),w,b
 45191  015AD0  EC3E  F077         	call	__motor_move_steps
 45192  015AD4  0012               	return	
 45193  015AD6                     __end_of_motor_move_steps:
 45194                           	opt stack 0
 45195                           tosu	equ	0xFFF
 45196                           tosh	equ	0xFFE
 45197                           tosl	equ	0xFFD
 45198                           pclath	equ	0xFFA
 45199                           tblptru	equ	0xFF8
 45200                           tblptrh	equ	0xFF7
 45201                           tblptrl	equ	0xFF6
 45202                           tablat	equ	0xFF5
 45203                           prodh	equ	0xFF4
 45204                           prodl	equ	0xFF3
 45205                           intcon	equ	0xFF2
 45206                           indf0	equ	0xFEF
 45207                           postinc0	equ	0xFEE
 45208                           fsr0h	equ	0xFEA
 45209                           fsr0l	equ	0xFE9
 45210                           wreg	equ	0xFE8
 45211                           indf1	equ	0xFE7
 45212                           postinc1	equ	0xFE6
 45213                           postdec1	equ	0xFE5
 45214                           plusw1	equ	0xFE3
 45215                           fsr1h	equ	0xFE2
 45216                           fsr1l	equ	0xFE1
 45217                           indf2	equ	0xFDF
 45218                           postinc2	equ	0xFDE
 45219                           postdec2	equ	0xFDD
 45220                           plusw2	equ	0xFDB
 45221                           fsr2h	equ	0xFDA
 45222                           fsr2l	equ	0xFD9
 45223                           status	equ	0xFD8
 45224                           
 45225 ;; *************** function __motor_move_steps *****************
 45226 ;; Defined at:
 45227 ;;		line 187 in file "motor.c"
 45228 ;; Parameters:    Size  Location     Type
 45229 ;;  direction       1    wreg     enum E6622
 45230 ;;  distance_in_    4   29[BANK0 ] unsigned long 
 45231 ;;  speed           2   33[BANK0 ] unsigned int 
 45232 ;;  overshoot       1   35[BANK0 ] enum E6635
 45233 ;;  type            1   36[BANK0 ] enum E6631
 45234 ;; Auto vars:     Size  Location     Type
 45235 ;;  direction       1   43[BANK0 ] enum E6622
 45236 ;;  distance_to_    4   39[BANK0 ] long 
 45237 ;;  return_value    1   38[BANK0 ] enum E6639
 45238 ;;  return_value    1   37[BANK0 ] enum E6639
 45239 ;; Return value:  Size  Location     Type
 45240 ;;                  1    wreg      enum E6639
 45241 ;; Registers used:
 45242 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45243 ;; Tracked objects:
 45244 ;;		On entry : 0/0
 45245 ;;		On exit  : 0/0
 45246 ;;		Unchanged: 0/0
 45247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45248 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45249 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45251 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45252 ;;Total ram usage:       15 bytes
 45253 ;; Hardware stack levels used:    1
 45254 ;; Hardware stack levels required when called:   12
 45255 ;; This function calls:
 45256 ;;		__motor_distance_to_limit
 45257 ;;		__motor_schedule_command
 45258 ;;		_motor_items_in_cue
 45259 ;; This function is called by:
 45260 ;;		_motor_move_steps
 45261 ;;		_motor_move_degrees_int
 45262 ;;		_motor_goto_steps
 45263 ;;		_motor_move_endless
 45264 ;;		_motor_move_degrees_float
 45265 ;;		_motor_goto_degrees_float
 45266 ;;		_motor_goto_degrees_int
 45267 ;; This function uses a non-reentrant model
 45268 ;;
 45269                           
 45270                           	psect	text187
 45271  00EE7C                     __ptext187:
 45272                           	opt stack 0
 45273  00EE7C                     __motor_move_steps:
 45274                           	opt stack 16
 45275                           
 45276                           ;incstack = 0
 45277                           ;__motor_move_steps@direction stored from wreg
 45278  00EE7C  0100               	movlb	0	; () banked
 45279  00EE7E  6F8B               	movwf	__motor_move_steps@direction& (0+255),b
 45280                           
 45281                           ;motor.c: 189: int32_t distance_to_limit;;motor.c: 190: motorReturnValue_t return_value_
      +                          1;;motor.c: 191: motorReturnValue_t return_value_2;;motor.c: 193: if(os.busy || motor_it
      +                          ems_in_cue()!=0)
 45282  00EE80  0101               	movlb	1	; () banked
 45283  00EE82  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 45284  00EE84  A4D8               	btfss	status,2,c
 45285  00EE86  D005               	goto	u11640
 45286                           
 45287                           ; BSR set to: 1
 45288  00EE88  EC88  F0AF         	call	_motor_items_in_cue	;wreg free
 45289  00EE8C  0900               	iorlw	0
 45290  00EE8E  B4D8               	btfsc	status,2,c
 45291  00EE90  D002               	goto	l2468
 45292  00EE92                     u11640:
 45293                           
 45294                           ;motor.c: 194: {;motor.c: 196: return MOTOR_RETURN_VALUE_BUSY;
 45295  00EE92  0E01               	movlw	1
 45296  00EE94  0012               	return	
 45297  00EE96                     l2468:
 45298                           
 45299                           ;motor.c: 197: };motor.c: 199: if((direction!=MOTOR_DIRECTION_CW) && (direction!=MOTOR_D
      +                          IRECTION_CCW))
 45300  00EE96  0100               	movlb	0	; () banked
 45301  00EE98  058B               	decf	__motor_move_steps@direction& (0+255),w,b
 45302  00EE9A  B4D8               	btfsc	status,2,c
 45303  00EE9C  D005               	goto	l2472
 45304                           
 45305                           ; BSR set to: 0
 45306  00EE9E  298B               	incf	__motor_move_steps@direction& (0+255),w,b
 45307  00EEA0  B4D8               	btfsc	status,2,c
 45308  00EEA2  D002               	goto	l2472
 45309                           
 45310                           ; BSR set to: 0
 45311                           ;motor.c: 200: {;motor.c: 202: return MOTOR_RETURN_VALUE_INVALID_DIRECTION;
 45312  00EEA4  0E04               	movlw	4
 45313                           
 45314                           ; BSR set to: 0
 45315  00EEA6  0012               	return	
 45316  00EEA8                     l2472:
 45317                           
 45318                           ; BSR set to: 0
 45319                           ;motor.c: 203: };motor.c: 205: if(distance_in_steps==0)
 45320                           
 45321                           ; BSR set to: 0
 45322  00EEA8  517D               	movf	__motor_move_steps@distance_in_steps& (0+255),w,b
 45323  00EEAA  117E               	iorwf	(__motor_move_steps@distance_in_steps+1)& (0+255),w,b
 45324  00EEAC  117F               	iorwf	(__motor_move_steps@distance_in_steps+2)& (0+255),w,b
 45325  00EEAE  1180               	iorwf	(__motor_move_steps@distance_in_steps+3)& (0+255),w,b
 45326  00EEB0  A4D8               	btfss	status,2,c
 45327  00EEB2  D002               	goto	l2473
 45328                           
 45329                           ; BSR set to: 0
 45330                           ;motor.c: 206: {;motor.c: 208: return MOTOR_RETURN_VALUE_INVALID_DISTANCE;
 45331  00EEB4  0E03               	movlw	3
 45332                           
 45333                           ; BSR set to: 0
 45334  00EEB6  0012               	return	
 45335  00EEB8                     l2473:
 45336                           
 45337                           ; BSR set to: 0
 45338                           ;motor.c: 209: };motor.c: 211: if(speed==0)
 45339                           
 45340                           ; BSR set to: 0
 45341  00EEB8  5181               	movf	__motor_move_steps@speed& (0+255),w,b
 45342  00EEBA  1182               	iorwf	(__motor_move_steps@speed+1)& (0+255),w,b
 45343  00EEBC  A4D8               	btfss	status,2,c
 45344  00EEBE  D002               	goto	l2474
 45345                           
 45346                           ; BSR set to: 0
 45347                           ;motor.c: 212: {;motor.c: 214: return MOTOR_RETURN_VALUE_INVALID_SPEED;
 45348  00EEC0  0E02               	movlw	2
 45349                           
 45350                           ; BSR set to: 0
 45351  00EEC2  0012               	return	
 45352  00EEC4                     l2474:
 45353                           
 45354                           ; BSR set to: 0
 45355                           ;motor.c: 215: };motor.c: 217: if(!((type==MOTOR_MOVE_TYPE_NORMAL) || (type==MOTOR_MOVE_
      +                          TYPE_ENDLESS)))
 45356                           
 45357                           ; BSR set to: 0
 45358  00EEC4  5184               	movf	__motor_move_steps@type& (0+255),w,b
 45359  00EEC6  B4D8               	btfsc	status,2,c
 45360  00EEC8  D005               	goto	l2475
 45361                           
 45362                           ; BSR set to: 0
 45363  00EECA  0584               	decf	__motor_move_steps@type& (0+255),w,b
 45364  00EECC  B4D8               	btfsc	status,2,c
 45365  00EECE  D002               	goto	l2475
 45366                           
 45367                           ; BSR set to: 0
 45368                           ;motor.c: 218: {;motor.c: 220: return MOTOR_RETURN_VALUE_INVALID_MOVE_TYPE;
 45369  00EED0  0E05               	movlw	5
 45370                           
 45371                           ; BSR set to: 0
 45372  00EED2  0012               	return	
 45373  00EED4                     l2475:
 45374                           
 45375                           ; BSR set to: 0
 45376                           ;motor.c: 221: };motor.c: 223: if(!((overshoot==MOTOR_OVERSHOOT_NO_OVERSHOOT) || (oversh
      +                          oot==MOTOR_OVERSHOOT_WITH_OVERSHOOT)))
 45377                           
 45378                           ; BSR set to: 0
 45379  00EED4  0583               	decf	__motor_move_steps@overshoot& (0+255),w,b
 45380  00EED6  B4D8               	btfsc	status,2,c
 45381  00EED8  D005               	goto	l2476
 45382                           
 45383                           ; BSR set to: 0
 45384  00EEDA  5183               	movf	__motor_move_steps@overshoot& (0+255),w,b
 45385  00EEDC  B4D8               	btfsc	status,2,c
 45386  00EEDE  D002               	goto	l2476
 45387                           
 45388                           ; BSR set to: 0
 45389                           ;motor.c: 224: {;motor.c: 226: return MOTOR_RETURN_VALUE_INVALID_OVERSHOOT;
 45390  00EEE0  0E06               	movlw	6
 45391                           
 45392                           ; BSR set to: 0
 45393  00EEE2  0012               	return	
 45394  00EEE4                     l2476:
 45395                           
 45396                           ; BSR set to: 0
 45397                           ;motor.c: 227: };motor.c: 233: distance_to_limit = _motor_distance_to_limit(direction);
 45398                           
 45399                           ; BSR set to: 0
 45400  00EEE4  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 45401  00EEE6  EC90  F07F         	call	__motor_distance_to_limit
 45402  00EEEA  C06C  F087         	movff	?__motor_distance_to_limit,__motor_move_steps@distance_to_limit
 45403  00EEEE  C06D  F088         	movff	?__motor_distance_to_limit+1,__motor_move_steps@distance_to_limit+1
 45404  00EEF2  C06E  F089         	movff	?__motor_distance_to_limit+2,__motor_move_steps@distance_to_limit+2
 45405  00EEF6  C06F  F08A         	movff	?__motor_distance_to_limit+3,__motor_move_steps@distance_to_limit+3
 45406                           
 45407                           ;motor.c: 236: if(distance_to_limit<=0)
 45408  00EEFA  0100               	movlb	0	; () banked
 45409  00EEFC  BF8A               	btfsc	(__motor_move_steps@distance_to_limit+3)& (0+255),7,b
 45410  00EEFE  D007               	goto	u11730
 45411  00EF00  518A               	movf	(__motor_move_steps@distance_to_limit+3)& (0+255),w,b
 45412  00EF02  1189               	iorwf	(__motor_move_steps@distance_to_limit+2)& (0+255),w,b
 45413  00EF04  1188               	iorwf	(__motor_move_steps@distance_to_limit+1)& (0+255),w,b
 45414  00EF06  E105               	bnz	l13376
 45415  00EF08  0587               	decf	__motor_move_steps@distance_to_limit& (0+255),w,b
 45416  00EF0A  B0D8               	btfsc	status,0,c
 45417  00EF0C  D002               	goto	l2477
 45418  00EF0E                     u11730:
 45419                           
 45420                           ; BSR set to: 0
 45421                           ;motor.c: 237: {;motor.c: 238: return MOTOR_RETURN_VALUE_LIMIT_VIOLATED;
 45422  00EF0E  0E07               	movlw	7
 45423                           
 45424                           ; BSR set to: 0
 45425  00EF10  0012               	return	
 45426  00EF12                     l2477:
 45427  00EF12                     l13376:
 45428                           
 45429                           ; BSR set to: 0
 45430                           ;motor.c: 239: };motor.c: 242: if(distance_to_limit!=2147483647)
 45431  00EF12  2987               	incf	__motor_move_steps@distance_to_limit& (0+255),w,b
 45432  00EF14  E108               	bnz	u11740
 45433  00EF16  2988               	incf	(__motor_move_steps@distance_to_limit+1)& (0+255),w,b
 45434  00EF18  E106               	bnz	u11740
 45435  00EF1A  2989               	incf	(__motor_move_steps@distance_to_limit+2)& (0+255),w,b
 45436  00EF1C  E104               	bnz	u11740
 45437  00EF1E  0E7F               	movlw	127
 45438  00EF20  198A               	xorwf	(__motor_move_steps@distance_to_limit+3)& (0+255),w,b
 45439  00EF22  B4D8               	btfsc	status,2,c
 45440  00EF24  D002               	goto	l2478
 45441  00EF26                     u11740:
 45442                           
 45443                           ; BSR set to: 0
 45444                           ;motor.c: 243: {;motor.c: 244: type = MOTOR_MOVE_TYPE_NORMAL;
 45445  00EF26  0E00               	movlw	0
 45446  00EF28  6F84               	movwf	__motor_move_steps@type& (0+255),b
 45447  00EF2A                     l2478:
 45448                           
 45449                           ; BSR set to: 0
 45450                           ;motor.c: 245: };motor.c: 248: if(distance_in_steps>((uint32_t) distance_to_limit))
 45451                           
 45452                           ; BSR set to: 0
 45453  00EF2A  517D               	movf	__motor_move_steps@distance_in_steps& (0+255),w,b
 45454  00EF2C  5D87               	subwf	__motor_move_steps@distance_to_limit& (0+255),w,b
 45455  00EF2E  517E               	movf	(__motor_move_steps@distance_in_steps+1)& (0+255),w,b
 45456  00EF30  5988               	subwfb	(__motor_move_steps@distance_to_limit+1)& (0+255),w,b
 45457  00EF32  517F               	movf	(__motor_move_steps@distance_in_steps+2)& (0+255),w,b
 45458  00EF34  5989               	subwfb	(__motor_move_steps@distance_to_limit+2)& (0+255),w,b
 45459  00EF36  5180               	movf	(__motor_move_steps@distance_in_steps+3)& (0+255),w,b
 45460  00EF38  598A               	subwfb	(__motor_move_steps@distance_to_limit+3)& (0+255),w,b
 45461  00EF3A  B0D8               	btfsc	status,0,c
 45462  00EF3C  D008               	goto	l2479
 45463                           
 45464                           ; BSR set to: 0
 45465                           ;motor.c: 249: {;motor.c: 250: distance_in_steps = (uint32_t) distance_to_limit;
 45466  00EF3E  C087  F07D         	movff	__motor_move_steps@distance_to_limit,__motor_move_steps@distance_in_steps
 45467  00EF42  C088  F07E         	movff	__motor_move_steps@distance_to_limit+1,__motor_move_steps@distance_in_steps+1
 45468  00EF46  C089  F07F         	movff	__motor_move_steps@distance_to_limit+2,__motor_move_steps@distance_in_steps+2
 45469  00EF4A  C08A  F080         	movff	__motor_move_steps@distance_to_limit+3,__motor_move_steps@distance_in_steps+3
 45470  00EF4E                     l2479:
 45471                           
 45472                           ; BSR set to: 0
 45473                           ;motor.c: 251: };motor.c: 255: if(overshoot==MOTOR_OVERSHOOT_NO_OVERSHOOT)
 45474                           
 45475                           ; BSR set to: 0
 45476  00EF4E  0583               	decf	__motor_move_steps@overshoot& (0+255),w,b
 45477  00EF50  A4D8               	btfss	status,2,c
 45478  00EF52  D012               	goto	l2480
 45479                           
 45480                           ; BSR set to: 0
 45481                           ;motor.c: 256: {;motor.c: 258: return _motor_schedule_command(direction, distance_in_ste
      +                          ps, speed, type);
 45482  00EF54  C07D  F060         	movff	__motor_move_steps@distance_in_steps,__motor_schedule_command@distance_in_steps
 45483  00EF58  C07E  F061         	movff	__motor_move_steps@distance_in_steps+1,__motor_schedule_command@distance_in_steps
      +                          +1
 45484  00EF5C  C07F  F062         	movff	__motor_move_steps@distance_in_steps+2,__motor_schedule_command@distance_in_steps
      +                          +2
 45485  00EF60  C080  F063         	movff	__motor_move_steps@distance_in_steps+3,__motor_schedule_command@distance_in_steps
      +                          +3
 45486  00EF64  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 45487  00EF68  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 45488  00EF6C  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 45489  00EF70  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 45490  00EF72  ECF4  F08E         	call	__motor_schedule_command
 45491  00EF76  0012               	return	
 45492  00EF78                     l2480:
 45493                           
 45494                           ;motor.c: 260: };motor.c: 264: if(direction==os.approach_direction)
 45495  00EF78  0100               	movlb	0	; () banked
 45496  00EF7A  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 45497  00EF7C  0101               	movlb	1	; () banked
 45498  00EF7E  1977               	xorwf	(_os+19)& (0+255),w,b	;volatile
 45499  00EF80  A4D8               	btfss	status,2,c
 45500  00EF82  D013               	goto	l2481
 45501                           
 45502                           ; BSR set to: 1
 45503                           ;motor.c: 265: {;motor.c: 266: return _motor_schedule_command(direction, distance_in_ste
      +                          ps, speed, type);
 45504  00EF84  C07D  F060         	movff	__motor_move_steps@distance_in_steps,__motor_schedule_command@distance_in_steps
 45505  00EF88  C07E  F061         	movff	__motor_move_steps@distance_in_steps+1,__motor_schedule_command@distance_in_steps
      +                          +1
 45506  00EF8C  C07F  F062         	movff	__motor_move_steps@distance_in_steps+2,__motor_schedule_command@distance_in_steps
      +                          +2
 45507  00EF90  C080  F063         	movff	__motor_move_steps@distance_in_steps+3,__motor_schedule_command@distance_in_steps
      +                          +3
 45508  00EF94  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 45509  00EF98  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 45510  00EF9C  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 45511  00EFA0  0100               	movlb	0	; () banked
 45512  00EFA2  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 45513  00EFA4  ECF4  F08E         	call	__motor_schedule_command
 45514  00EFA8  0012               	return	
 45515  00EFAA                     l2481:
 45516                           
 45517                           ;motor.c: 267: };motor.c: 272: if(config.overshoot_in_steps==0)
 45518  00EFAA  0101               	movlb	1	; () banked
 45519  00EFAC  519A               	movf	(_config+5)& (0+255),w,b
 45520  00EFAE  119B               	iorwf	(_config+6)& (0+255),w,b
 45521  00EFB0  A4D8               	btfss	status,2,c
 45522  00EFB2  D013               	goto	l2482
 45523                           
 45524                           ; BSR set to: 1
 45525                           ;motor.c: 273: {;motor.c: 274: return _motor_schedule_command(direction, distance_in_ste
      +                          ps, speed, type);
 45526  00EFB4  C07D  F060         	movff	__motor_move_steps@distance_in_steps,__motor_schedule_command@distance_in_steps
 45527  00EFB8  C07E  F061         	movff	__motor_move_steps@distance_in_steps+1,__motor_schedule_command@distance_in_steps
      +                          +1
 45528  00EFBC  C07F  F062         	movff	__motor_move_steps@distance_in_steps+2,__motor_schedule_command@distance_in_steps
      +                          +2
 45529  00EFC0  C080  F063         	movff	__motor_move_steps@distance_in_steps+3,__motor_schedule_command@distance_in_steps
      +                          +3
 45530  00EFC4  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 45531  00EFC8  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 45532  00EFCC  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 45533  00EFD0  0100               	movlb	0	; () banked
 45534  00EFD2  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 45535  00EFD4  ECF4  F08E         	call	__motor_schedule_command
 45536  00EFD8  0012               	return	
 45537  00EFDA                     l2482:
 45538                           
 45539                           ;motor.c: 275: };motor.c: 280: distance_in_steps += config.overshoot_in_steps;
 45540  00EFDA  0101               	movlb	1	; () banked
 45541  00EFDC  519A               	movf	(_config+5)& (0+255),w,b
 45542  00EFDE  0100               	movlb	0	; () banked
 45543  00EFE0  277D               	addwf	__motor_move_steps@distance_in_steps& (0+255),f,b
 45544  00EFE2  0101               	movlb	1	; () banked
 45545  00EFE4  519B               	movf	(_config+6)& (0+255),w,b
 45546  00EFE6  0100               	movlb	0	; () banked
 45547  00EFE8  237E               	addwfc	(__motor_move_steps@distance_in_steps+1)& (0+255),f,b
 45548  00EFEA  0E00               	movlw	0
 45549  00EFEC  237F               	addwfc	(__motor_move_steps@distance_in_steps+2)& (0+255),f,b
 45550  00EFEE  0E00               	movlw	0
 45551  00EFF0  2380               	addwfc	(__motor_move_steps@distance_in_steps+3)& (0+255),f,b
 45552                           
 45553                           ; BSR set to: 0
 45554                           ;motor.c: 281: return_value_1 = _motor_schedule_command(direction, distance_in_steps, sp
      +                          eed, type);
 45555  00EFF2  C07D  F060         	movff	__motor_move_steps@distance_in_steps,__motor_schedule_command@distance_in_steps
 45556  00EFF6  C07E  F061         	movff	__motor_move_steps@distance_in_steps+1,__motor_schedule_command@distance_in_steps
      +                          +1
 45557  00EFFA  C07F  F062         	movff	__motor_move_steps@distance_in_steps+2,__motor_schedule_command@distance_in_steps
      +                          +2
 45558  00EFFE  C080  F063         	movff	__motor_move_steps@distance_in_steps+3,__motor_schedule_command@distance_in_steps
      +                          +3
 45559  00F002  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 45560  00F006  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 45561  00F00A  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 45562  00F00E  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 45563  00F010  ECF4  F08E         	call	__motor_schedule_command
 45564  00F014  0100               	movlb	0	; () banked
 45565  00F016  6F85               	movwf	__motor_move_steps@return_value_1& (0+255),b
 45566                           
 45567                           ; BSR set to: 0
 45568                           ;motor.c: 282: return_value_2 = _motor_schedule_command(os.approach_direction, (uint32_t
      +                          ) config.overshoot_in_steps, speed, type);
 45569  00F018  C19A  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 45570  00F01C  C19B  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 45571  00F020  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 45572  00F022  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 45573  00F024  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 45574  00F028  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 45575  00F02C  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 45576  00F030  0101               	movlb	1	; () banked
 45577  00F032  5177               	movf	(_os+19)& (0+255),w,b	;volatile
 45578  00F034  ECF4  F08E         	call	__motor_schedule_command
 45579  00F038  0100               	movlb	0	; () banked
 45580  00F03A  6F86               	movwf	__motor_move_steps@return_value_2& (0+255),b
 45581                           
 45582                           ; BSR set to: 0
 45583                           ;motor.c: 286: if(return_value_1 > return_value_2)
 45584  00F03C  5185               	movf	__motor_move_steps@return_value_1& (0+255),w,b
 45585  00F03E  5D86               	subwf	__motor_move_steps@return_value_2& (0+255),w,b
 45586  00F040  B0D8               	btfsc	status,0,c
 45587  00F042  D002               	goto	l2483
 45588                           
 45589                           ; BSR set to: 0
 45590                           ;motor.c: 287: {;motor.c: 288: return return_value_1;
 45591  00F044  5185               	movf	__motor_move_steps@return_value_1& (0+255),w,b
 45592                           
 45593                           ; BSR set to: 0
 45594                           ;motor.c: 289: }
 45595                           
 45596                           ; BSR set to: 0
 45597  00F046  0012               	return	
 45598  00F048                     l2483:
 45599                           
 45600                           ; BSR set to: 0
 45601                           ;motor.c: 290: else;motor.c: 291: {;motor.c: 292: return return_value_2;
 45602                           
 45603                           ; BSR set to: 0
 45604  00F048  5186               	movf	__motor_move_steps@return_value_2& (0+255),w,b
 45605                           
 45606                           ; BSR set to: 0
 45607  00F04A  0012               	return	
 45608  00F04C                     __end_of__motor_move_steps:
 45609                           	opt stack 0
 45610                           tosu	equ	0xFFF
 45611                           tosh	equ	0xFFE
 45612                           tosl	equ	0xFFD
 45613                           pclath	equ	0xFFA
 45614                           tblptru	equ	0xFF8
 45615                           tblptrh	equ	0xFF7
 45616                           tblptrl	equ	0xFF6
 45617                           tablat	equ	0xFF5
 45618                           prodh	equ	0xFF4
 45619                           prodl	equ	0xFF3
 45620                           intcon	equ	0xFF2
 45621                           indf0	equ	0xFEF
 45622                           postinc0	equ	0xFEE
 45623                           fsr0h	equ	0xFEA
 45624                           fsr0l	equ	0xFE9
 45625                           wreg	equ	0xFE8
 45626                           indf1	equ	0xFE7
 45627                           postinc1	equ	0xFE6
 45628                           postdec1	equ	0xFE5
 45629                           plusw1	equ	0xFE3
 45630                           fsr1h	equ	0xFE2
 45631                           fsr1l	equ	0xFE1
 45632                           indf2	equ	0xFDF
 45633                           postinc2	equ	0xFDE
 45634                           postdec2	equ	0xFDD
 45635                           plusw2	equ	0xFDB
 45636                           fsr2h	equ	0xFDA
 45637                           fsr2l	equ	0xFD9
 45638                           status	equ	0xFD8
 45639                           
 45640 ;; *************** function __motor_schedule_command *****************
 45641 ;; Defined at:
 45642 ;;		line 135 in file "motor.c"
 45643 ;; Parameters:    Size  Location     Type
 45644 ;;  direction       1    wreg     enum E6622
 45645 ;;  distance_in_    4    0[BANK0 ] unsigned long 
 45646 ;;  speed           2    4[BANK0 ] unsigned int 
 45647 ;;  type            1    6[BANK0 ] enum E6631
 45648 ;; Auto vars:     Size  Location     Type
 45649 ;;  direction       1    7[BANK0 ] enum E6622
 45650 ;; Return value:  Size  Location     Type
 45651 ;;                  1    wreg      enum E6639
 45652 ;; Registers used:
 45653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45654 ;; Tracked objects:
 45655 ;;		On entry : 0/0
 45656 ;;		On exit  : 0/0
 45657 ;;		Unchanged: 0/0
 45658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45659 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45660 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45662 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45663 ;;Total ram usage:        8 bytes
 45664 ;; Hardware stack levels used:    1
 45665 ;; Hardware stack levels required when called:   11
 45666 ;; This function calls:
 45667 ;;		_motor_items_in_cue
 45668 ;; This function is called by:
 45669 ;;		__motor_move_steps
 45670 ;;		__motor_move_back_forth
 45671 ;; This function uses a non-reentrant model
 45672 ;;
 45673                           
 45674                           	psect	text188
 45675  011DE8                     __ptext188:
 45676                           	opt stack 0
 45677  011DE8                     __motor_schedule_command:
 45678                           	opt stack 16
 45679                           
 45680                           ;incstack = 0
 45681                           ;__motor_schedule_command@direction stored from wreg
 45682  011DE8  0100               	movlb	0	; () banked
 45683  011DEA  6F67               	movwf	__motor_schedule_command@direction& (0+255),b
 45684                           
 45685                           ;motor.c: 137: if(motor_items_in_cue()==8-1)
 45686  011DEC  EC88  F0AF         	call	_motor_items_in_cue	;wreg free
 45687  011DF0  0A07               	xorlw	7
 45688  011DF2  A4D8               	btfss	status,2,c
 45689  011DF4  D002               	goto	l2459
 45690                           
 45691                           ;motor.c: 138: {;motor.c: 140: return MOTOR_RETURN_VALUE_BUFFER_FULL;
 45692  011DF6  0E08               	movlw	8
 45693  011DF8  0012               	return	
 45694  011DFA                     l2459:
 45695                           
 45696                           ;motor.c: 141: };motor.c: 143: if((direction!=MOTOR_DIRECTION_CW) && (direction!=MOTOR_D
      +                          IRECTION_CCW))
 45697  011DFA  0100               	movlb	0	; () banked
 45698  011DFC  0567               	decf	__motor_schedule_command@direction& (0+255),w,b
 45699  011DFE  B4D8               	btfsc	status,2,c
 45700  011E00  D005               	goto	l2461
 45701                           
 45702                           ; BSR set to: 0
 45703  011E02  2967               	incf	__motor_schedule_command@direction& (0+255),w,b
 45704  011E04  B4D8               	btfsc	status,2,c
 45705  011E06  D002               	goto	l2461
 45706                           
 45707                           ; BSR set to: 0
 45708                           ;motor.c: 144: {;motor.c: 146: return MOTOR_RETURN_VALUE_INVALID_DIRECTION;
 45709  011E08  0E04               	movlw	4
 45710                           
 45711                           ; BSR set to: 0
 45712  011E0A  0012               	return	
 45713  011E0C                     l2461:
 45714                           
 45715                           ; BSR set to: 0
 45716                           ;motor.c: 147: };motor.c: 149: if(distance_in_steps==0)
 45717                           
 45718                           ; BSR set to: 0
 45719  011E0C  5160               	movf	__motor_schedule_command@distance_in_steps& (0+255),w,b
 45720  011E0E  1161               	iorwf	(__motor_schedule_command@distance_in_steps+1)& (0+255),w,b
 45721  011E10  1162               	iorwf	(__motor_schedule_command@distance_in_steps+2)& (0+255),w,b
 45722  011E12  1163               	iorwf	(__motor_schedule_command@distance_in_steps+3)& (0+255),w,b
 45723  011E14  A4D8               	btfss	status,2,c
 45724  011E16  D002               	goto	l2462
 45725                           
 45726                           ; BSR set to: 0
 45727                           ;motor.c: 150: {;motor.c: 152: return MOTOR_RETURN_VALUE_INVALID_DISTANCE;
 45728  011E18  0E03               	movlw	3
 45729                           
 45730                           ; BSR set to: 0
 45731  011E1A  0012               	return	
 45732  011E1C                     l2462:
 45733                           
 45734                           ; BSR set to: 0
 45735                           ;motor.c: 153: };motor.c: 155: if((type!=MOTOR_MOVE_TYPE_NORMAL) && (type!=MOTOR_MOVE_TY
      +                          PE_ENDLESS))
 45736                           
 45737                           ; BSR set to: 0
 45738  011E1C  5166               	movf	__motor_schedule_command@type& (0+255),w,b
 45739  011E1E  B4D8               	btfsc	status,2,c
 45740  011E20  D005               	goto	l2463
 45741                           
 45742                           ; BSR set to: 0
 45743  011E22  0566               	decf	__motor_schedule_command@type& (0+255),w,b
 45744  011E24  B4D8               	btfsc	status,2,c
 45745  011E26  D002               	goto	l2463
 45746                           
 45747                           ; BSR set to: 0
 45748                           ;motor.c: 156: {;motor.c: 158: return MOTOR_RETURN_VALUE_INVALID_MOVE_TYPE;
 45749  011E28  0E05               	movlw	5
 45750                           
 45751                           ; BSR set to: 0
 45752  011E2A  0012               	return	
 45753  011E2C                     l2463:
 45754                           
 45755                           ; BSR set to: 0
 45756                           ;motor.c: 159: };motor.c: 161: if(speed==0)
 45757                           
 45758                           ; BSR set to: 0
 45759  011E2C  5164               	movf	__motor_schedule_command@speed& (0+255),w,b
 45760  011E2E  1165               	iorwf	(__motor_schedule_command@speed+1)& (0+255),w,b
 45761  011E30  A4D8               	btfss	status,2,c
 45762  011E32  D002               	goto	l2464
 45763                           
 45764                           ; BSR set to: 0
 45765                           ;motor.c: 162: {;motor.c: 164: return MOTOR_RETURN_VALUE_INVALID_SPEED;
 45766  011E34  0E02               	movlw	2
 45767                           
 45768                           ; BSR set to: 0
 45769  011E36  0012               	return	
 45770  011E38                     l2464:
 45771                           
 45772                           ; BSR set to: 0
 45773                           ;motor.c: 165: };motor.c: 168: if(speed>config.maximum_speed)
 45774                           
 45775                           ; BSR set to: 0
 45776  011E38  5164               	movf	__motor_schedule_command@speed& (0+255),w,b
 45777  011E3A  0101               	movlb	1	; () banked
 45778  011E3C  5DA0               	subwf	(_config+11)& (0+255),w,b
 45779  011E3E  0100               	movlb	0	; () banked
 45780  011E40  5165               	movf	(__motor_schedule_command@speed+1)& (0+255),w,b
 45781  011E42  0101               	movlb	1	; () banked
 45782  011E44  59A1               	subwfb	(_config+12)& (0+255),w,b
 45783  011E46  B0D8               	btfsc	status,0,c
 45784  011E48  D004               	goto	l2465
 45785                           
 45786                           ; BSR set to: 1
 45787                           ;motor.c: 169: {;motor.c: 170: speed = config.maximum_speed;
 45788  011E4A  C1A0  F064         	movff	_config+11,__motor_schedule_command@speed
 45789  011E4E  C1A1  F065         	movff	_config+12,__motor_schedule_command@speed+1
 45790  011E52                     l2465:
 45791                           
 45792                           ; BSR set to: 1
 45793                           ;motor.c: 171: };motor.c: 174: motor_command_cue[motor_cue_write_index].direction = dire
      +                          ction;
 45794                           
 45795                           ; BSR set to: 1
 45796  011E52  514A               	movf	_motor_cue_write_index& (0+255),w,b
 45797  011E54  0D08               	mullw	8
 45798  011E56  0E00               	movlw	low _motor_command_cue
 45799  011E58  24F3               	addwf	prodl,w,c
 45800  011E5A  6ED9               	movwf	fsr2l,c
 45801  011E5C  0E03               	movlw	high _motor_command_cue
 45802  011E5E  20F4               	addwfc	prodh,w,c
 45803  011E60  6EDA               	movwf	fsr2h,c
 45804  011E62  C067  FFDF         	movff	__motor_schedule_command@direction,indf2
 45805                           
 45806                           ;motor.c: 175: motor_command_cue[motor_cue_write_index].distance = distance_in_steps;
 45807  011E66  514A               	movf	_motor_cue_write_index& (0+255),w,b
 45808  011E68  0D08               	mullw	8
 45809  011E6A  0E01               	movlw	1
 45810  011E6C  26F3               	addwf	prodl,f,c
 45811  011E6E  0E00               	movlw	0
 45812  011E70  22F4               	addwfc	prodh,f,c
 45813  011E72  0E00               	movlw	low _motor_command_cue
 45814  011E74  24F3               	addwf	prodl,w,c
 45815  011E76  6ED9               	movwf	fsr2l,c
 45816  011E78  0E03               	movlw	high _motor_command_cue
 45817  011E7A  20F4               	addwfc	prodh,w,c
 45818  011E7C  6EDA               	movwf	fsr2h,c
 45819  011E7E  C060  FFDE         	movff	__motor_schedule_command@distance_in_steps,postinc2
 45820  011E82  C061  FFDE         	movff	__motor_schedule_command@distance_in_steps+1,postinc2
 45821  011E86  C062  FFDE         	movff	__motor_schedule_command@distance_in_steps+2,postinc2
 45822  011E8A  C063  FFDE         	movff	__motor_schedule_command@distance_in_steps+3,postinc2
 45823                           
 45824                           ;motor.c: 176: motor_command_cue[motor_cue_write_index].speed = speed;
 45825  011E8E  514A               	movf	_motor_cue_write_index& (0+255),w,b
 45826  011E90  0D08               	mullw	8
 45827  011E92  0E05               	movlw	5
 45828  011E94  26F3               	addwf	prodl,f,c
 45829  011E96  0E00               	movlw	0
 45830  011E98  22F4               	addwfc	prodh,f,c
 45831  011E9A  0E00               	movlw	low _motor_command_cue
 45832  011E9C  24F3               	addwf	prodl,w,c
 45833  011E9E  6ED9               	movwf	fsr2l,c
 45834  011EA0  0E03               	movlw	high _motor_command_cue
 45835  011EA2  20F4               	addwfc	prodh,w,c
 45836  011EA4  6EDA               	movwf	fsr2h,c
 45837  011EA6  C064  FFDE         	movff	__motor_schedule_command@speed,postinc2
 45838  011EAA  C065  FFDD         	movff	__motor_schedule_command@speed+1,postdec2
 45839                           
 45840                           ;motor.c: 177: motor_command_cue[motor_cue_write_index].type = type;
 45841  011EAE  514A               	movf	_motor_cue_write_index& (0+255),w,b
 45842  011EB0  0D08               	mullw	8
 45843  011EB2  0E07               	movlw	7
 45844  011EB4  26F3               	addwf	prodl,f,c
 45845  011EB6  0E00               	movlw	0
 45846  011EB8  22F4               	addwfc	prodh,f,c
 45847  011EBA  0E00               	movlw	low _motor_command_cue
 45848  011EBC  24F3               	addwf	prodl,w,c
 45849  011EBE  6ED9               	movwf	fsr2l,c
 45850  011EC0  0E03               	movlw	high _motor_command_cue
 45851  011EC2  20F4               	addwfc	prodh,w,c
 45852  011EC4  6EDA               	movwf	fsr2h,c
 45853  011EC6  C066  FFDF         	movff	__motor_schedule_command@type,indf2
 45854                           
 45855                           ; BSR set to: 1
 45856                           ;motor.c: 180: ++motor_cue_write_index;
 45857  011ECA  2B4A               	incf	_motor_cue_write_index& (0+255),f,b
 45858                           
 45859                           ; BSR set to: 1
 45860                           ;motor.c: 181: motor_cue_write_index &= 0b111;
 45861  011ECC  0E07               	movlw	7
 45862  011ECE  174A               	andwf	_motor_cue_write_index& (0+255),f,b
 45863                           
 45864                           ; BSR set to: 1
 45865                           ;motor.c: 184: return MOTOR_RETURN_VALUE_OK;
 45866  011ED0  0E00               	movlw	0
 45867  011ED2  0012               	return	
 45868  011ED4                     __end_of__motor_schedule_command:
 45869                           	opt stack 0
 45870                           tosu	equ	0xFFF
 45871                           tosh	equ	0xFFE
 45872                           tosl	equ	0xFFD
 45873                           pclath	equ	0xFFA
 45874                           tblptru	equ	0xFF8
 45875                           tblptrh	equ	0xFF7
 45876                           tblptrl	equ	0xFF6
 45877                           tablat	equ	0xFF5
 45878                           prodh	equ	0xFF4
 45879                           prodl	equ	0xFF3
 45880                           intcon	equ	0xFF2
 45881                           indf0	equ	0xFEF
 45882                           postinc0	equ	0xFEE
 45883                           fsr0h	equ	0xFEA
 45884                           fsr0l	equ	0xFE9
 45885                           wreg	equ	0xFE8
 45886                           indf1	equ	0xFE7
 45887                           postinc1	equ	0xFE6
 45888                           postdec1	equ	0xFE5
 45889                           plusw1	equ	0xFE3
 45890                           fsr1h	equ	0xFE2
 45891                           fsr1l	equ	0xFE1
 45892                           indf2	equ	0xFDF
 45893                           postinc2	equ	0xFDE
 45894                           postdec2	equ	0xFDD
 45895                           plusw2	equ	0xFDB
 45896                           fsr2h	equ	0xFDA
 45897                           fsr2l	equ	0xFD9
 45898                           status	equ	0xFD8
 45899                           
 45900 ;; *************** function _motor_items_in_cue *****************
 45901 ;; Defined at:
 45902 ;;		line 608 in file "motor.c"
 45903 ;; Parameters:    Size  Location     Type
 45904 ;;		None
 45905 ;; Auto vars:     Size  Location     Type
 45906 ;;		None
 45907 ;; Return value:  Size  Location     Type
 45908 ;;                  1    wreg      unsigned char 
 45909 ;; Registers used:
 45910 ;;		wreg, status,2, status,0
 45911 ;; Tracked objects:
 45912 ;;		On entry : 0/0
 45913 ;;		On exit  : 0/0
 45914 ;;		Unchanged: 0/0
 45915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45920 ;;Total ram usage:        0 bytes
 45921 ;; Hardware stack levels used:    1
 45922 ;; Hardware stack levels required when called:   10
 45923 ;; This function calls:
 45924 ;;		Nothing
 45925 ;; This function is called by:
 45926 ;;		__motor_schedule_command
 45927 ;;		__motor_move_steps
 45928 ;;		__motor_move_back_forth
 45929 ;;		_motor_process_cue
 45930 ;; This function uses a non-reentrant model
 45931 ;;
 45932                           
 45933                           	psect	text189
 45934  015F10                     __ptext189:
 45935                           	opt stack 0
 45936  015F10                     _motor_items_in_cue:
 45937                           	opt stack 19
 45938                           
 45939                           ;motor.c: 610: return ((motor_cue_write_index-motor_cue_read_index) & 0b111);
 45940                           
 45941                           ;incstack = 0
 45942  015F10  0101               	movlb	1	; () banked
 45943  015F12  514B               	movf	_motor_cue_read_index& (0+255),w,b
 45944  015F14  0800               	sublw	0
 45945  015F16  254A               	addwf	_motor_cue_write_index& (0+255),w,b
 45946  015F18  0B07               	andlw	7
 45947  015F1A  0012               	return	
 45948  015F1C                     __end_of_motor_items_in_cue:
 45949                           	opt stack 0
 45950                           tosu	equ	0xFFF
 45951                           tosh	equ	0xFFE
 45952                           tosl	equ	0xFFD
 45953                           pclath	equ	0xFFA
 45954                           tblptru	equ	0xFF8
 45955                           tblptrh	equ	0xFF7
 45956                           tblptrl	equ	0xFF6
 45957                           tablat	equ	0xFF5
 45958                           prodh	equ	0xFF4
 45959                           prodl	equ	0xFF3
 45960                           intcon	equ	0xFF2
 45961                           indf0	equ	0xFEF
 45962                           postinc0	equ	0xFEE
 45963                           fsr0h	equ	0xFEA
 45964                           fsr0l	equ	0xFE9
 45965                           wreg	equ	0xFE8
 45966                           indf1	equ	0xFE7
 45967                           postinc1	equ	0xFE6
 45968                           postdec1	equ	0xFE5
 45969                           plusw1	equ	0xFE3
 45970                           fsr1h	equ	0xFE2
 45971                           fsr1l	equ	0xFE1
 45972                           indf2	equ	0xFDF
 45973                           postinc2	equ	0xFDE
 45974                           postdec2	equ	0xFDD
 45975                           plusw2	equ	0xFDB
 45976                           fsr2h	equ	0xFDA
 45977                           fsr2l	equ	0xFD9
 45978                           status	equ	0xFD8
 45979                           
 45980 ;; *************** function __motor_distance_to_limit *****************
 45981 ;; Defined at:
 45982 ;;		line 448 in file "motor.c"
 45983 ;; Parameters:    Size  Location     Type
 45984 ;;  direction       1    wreg     enum E6622
 45985 ;; Auto vars:     Size  Location     Type
 45986 ;;  direction       1   24[BANK0 ] enum E6622
 45987 ;;  absolute_pos    4   25[BANK0 ] long 
 45988 ;;  distance_to_    4   20[BANK0 ] long 
 45989 ;; Return value:  Size  Location     Type
 45990 ;;                  4   12[BANK0 ] long 
 45991 ;; Registers used:
 45992 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 45993 ;; Tracked objects:
 45994 ;;		On entry : 0/0
 45995 ;;		On exit  : 0/0
 45996 ;;		Unchanged: 0/0
 45997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45998 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45999 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46000 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46001 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46002 ;;Total ram usage:       17 bytes
 46003 ;; Hardware stack levels used:    1
 46004 ;; Hardware stack levels required when called:   11
 46005 ;; This function calls:
 46006 ;;		___lmul
 46007 ;; This function is called by:
 46008 ;;		__motor_move_steps
 46009 ;;		__motor_decide_direction
 46010 ;; This function uses a non-reentrant model
 46011 ;;
 46012                           
 46013                           	psect	text190
 46014  00FF20                     __ptext190:
 46015                           	opt stack 0
 46016  00FF20                     __motor_distance_to_limit:
 46017                           	opt stack 16
 46018                           
 46019                           ; BSR set to: 1
 46020                           ;incstack = 0
 46021                           ;__motor_distance_to_limit@direction stored from wreg
 46022  00FF20  0100               	movlb	0	; () banked
 46023  00FF22  6F78               	movwf	__motor_distance_to_limit@direction& (0+255),b
 46024                           
 46025                           ;motor.c: 451: int32_t absolute_position_in_steps;;motor.c: 452: int32_t distance_to_lim
      +                          it_in_steps;;motor.c: 455: if(direction==MOTOR_DIRECTION_CCW && config.use_ccw_limit==0)
 46026  00FF24  0100               	movlb	0	; () banked
 46027  00FF26  2978               	incf	__motor_distance_to_limit@direction& (0+255),w,b
 46028  00FF28  A4D8               	btfss	status,2,c
 46029  00FF2A  D00E               	goto	l2518
 46030                           
 46031                           ; BSR set to: 0
 46032  00FF2C  0101               	movlb	1	; () banked
 46033  00FF2E  51B4               	movf	(_config+31)& (0+255),w,b
 46034  00FF30  A4D8               	btfss	status,2,c
 46035  00FF32  D00A               	goto	l2518
 46036                           
 46037                           ; BSR set to: 1
 46038                           ;motor.c: 456: {;motor.c: 457: return 2147483647;
 46039  00FF34  0EFF               	movlw	255
 46040  00FF36  0100               	movlb	0	; () banked
 46041  00FF38  6F6C               	movwf	?__motor_distance_to_limit& (0+255),b
 46042  00FF3A  0EFF               	movlw	255
 46043  00FF3C  6F6D               	movwf	(?__motor_distance_to_limit+1)& (0+255),b
 46044  00FF3E  0EFF               	movlw	255
 46045  00FF40  6F6E               	movwf	(?__motor_distance_to_limit+2)& (0+255),b
 46046  00FF42  0E7F               	movlw	127
 46047  00FF44  6F6F               	movwf	(?__motor_distance_to_limit+3)& (0+255),b
 46048                           
 46049                           ; BSR set to: 0
 46050  00FF46  0012               	return	
 46051  00FF48                     l2518:
 46052                           
 46053                           ;motor.c: 458: };motor.c: 459: if(direction==MOTOR_DIRECTION_CW && config.use_cw_limit==
      +                          0)
 46054                           
 46055                           ; BSR set to: 0
 46056  00FF48  0100               	movlb	0	; () banked
 46057  00FF4A  0578               	decf	__motor_distance_to_limit@direction& (0+255),w,b
 46058  00FF4C  A4D8               	btfss	status,2,c
 46059  00FF4E  D00E               	goto	l2520
 46060                           
 46061                           ; BSR set to: 0
 46062  00FF50  0101               	movlb	1	; () banked
 46063  00FF52  51AB               	movf	(_config+22)& (0+255),w,b
 46064  00FF54  A4D8               	btfss	status,2,c
 46065  00FF56  D00A               	goto	l2520
 46066                           
 46067                           ; BSR set to: 1
 46068                           ;motor.c: 460: {;motor.c: 461: return 2147483647;
 46069  00FF58  0EFF               	movlw	255
 46070  00FF5A  0100               	movlb	0	; () banked
 46071  00FF5C  6F6C               	movwf	?__motor_distance_to_limit& (0+255),b
 46072  00FF5E  0EFF               	movlw	255
 46073  00FF60  6F6D               	movwf	(?__motor_distance_to_limit+1)& (0+255),b
 46074  00FF62  0EFF               	movlw	255
 46075  00FF64  6F6E               	movwf	(?__motor_distance_to_limit+2)& (0+255),b
 46076  00FF66  0E7F               	movlw	127
 46077  00FF68  6F6F               	movwf	(?__motor_distance_to_limit+3)& (0+255),b
 46078                           
 46079                           ; BSR set to: 0
 46080  00FF6A  0012               	return	
 46081  00FF6C                     l2520:
 46082                           
 46083                           ;motor.c: 462: };motor.c: 465: absolute_position_in_steps = os.absolute_position;
 46084                           
 46085                           ; BSR set to: 0
 46086  00FF6C  EE21  F06F         	lfsr	2,_os+11	;volatile
 46087  00FF70  CFDE F079          	movff	postinc2,__motor_distance_to_limit@absolute_position_in_steps
 46088  00FF74  CFDD F07A          	movff	postdec2,__motor_distance_to_limit@absolute_position_in_steps+1
 46089  00FF78  0100               	movlb	0	; () banked
 46090  00FF7A  0E00               	movlw	0
 46091  00FF7C  BF7A               	btfsc	(__motor_distance_to_limit@absolute_position_in_steps+1)& (0+255),7,b
 46092  00FF7E  0EFF               	movlw	-1
 46093  00FF80  6F7B               	movwf	(__motor_distance_to_limit@absolute_position_in_steps+2)& (0+255),b
 46094  00FF82  6F7C               	movwf	(__motor_distance_to_limit@absolute_position_in_steps+3)& (0+255),b
 46095                           
 46096                           ; BSR set to: 0
 46097                           ;motor.c: 466: absolute_position_in_steps *= config.full_circle_in_steps;
 46098  00FF84  C079  F060         	movff	__motor_distance_to_limit@absolute_position_in_steps,___lmul@multiplier
 46099  00FF88  C07A  F061         	movff	__motor_distance_to_limit@absolute_position_in_steps+1,___lmul@multiplier+1
 46100  00FF8C  C07B  F062         	movff	__motor_distance_to_limit@absolute_position_in_steps+2,___lmul@multiplier+2
 46101  00FF90  C07C  F063         	movff	__motor_distance_to_limit@absolute_position_in_steps+3,___lmul@multiplier+3
 46102  00FF94  C195  F064         	movff	_config,___lmul@multiplicand
 46103  00FF98  C196  F065         	movff	_config+1,___lmul@multiplicand+1
 46104  00FF9C  C197  F066         	movff	_config+2,___lmul@multiplicand+2
 46105  00FFA0  C198  F067         	movff	_config+3,___lmul@multiplicand+3
 46106  00FFA4  ECC1  F0A6         	call	___lmul	;wreg free
 46107  00FFA8  C060  F079         	movff	?___lmul,__motor_distance_to_limit@absolute_position_in_steps
 46108  00FFAC  C061  F07A         	movff	?___lmul+1,__motor_distance_to_limit@absolute_position_in_steps+1
 46109  00FFB0  C062  F07B         	movff	?___lmul+2,__motor_distance_to_limit@absolute_position_in_steps+2
 46110  00FFB4  C063  F07C         	movff	?___lmul+3,__motor_distance_to_limit@absolute_position_in_steps+3
 46111                           
 46112                           ;motor.c: 467: absolute_position_in_steps += os.current_position_in_steps;
 46113  00FFB8  EE21  F06B         	lfsr	2,_os+7	;volatile
 46114  00FFBC  50DE               	movf	postinc2,w,c
 46115  00FFBE  0100               	movlb	0	; () banked
 46116  00FFC0  2779               	addwf	__motor_distance_to_limit@absolute_position_in_steps& (0+255),f,b
 46117  00FFC2  50DE               	movf	postinc2,w,c
 46118  00FFC4  237A               	addwfc	(__motor_distance_to_limit@absolute_position_in_steps+1)& (0+255),f,b
 46119  00FFC6  50DE               	movf	postinc2,w,c
 46120  00FFC8  237B               	addwfc	(__motor_distance_to_limit@absolute_position_in_steps+2)& (0+255),f,b
 46121  00FFCA  50DD               	movf	postdec2,w,c
 46122  00FFCC  237C               	addwfc	(__motor_distance_to_limit@absolute_position_in_steps+3)& (0+255),f,b
 46123                           
 46124                           ; BSR set to: 0
 46125                           ;motor.c: 470: if(direction==MOTOR_DIRECTION_CCW)
 46126  00FFCE  2978               	incf	__motor_distance_to_limit@direction& (0+255),w,b
 46127  00FFD0  A4D8               	btfss	status,2,c
 46128  00FFD2  D01C               	goto	l2521
 46129                           
 46130                           ; BSR set to: 0
 46131                           ;motor.c: 471: {;motor.c: 472: distance_to_limit_in_steps = absolute_position_in_steps -
      +                           config.ccw_limit_in_steps;
 46132  00FFD4  C1B9  F070         	movff	_config+36,??__motor_distance_to_limit
 46133  00FFD8  C1BA  F071         	movff	_config+37,??__motor_distance_to_limit+1
 46134  00FFDC  C1BB  F072         	movff	_config+38,??__motor_distance_to_limit+2
 46135  00FFE0  C1BC  F073         	movff	_config+39,??__motor_distance_to_limit+3
 46136  00FFE4  1F70               	comf	??__motor_distance_to_limit& (0+255),f,b
 46137  00FFE6  1F71               	comf	(??__motor_distance_to_limit+1)& (0+255),f,b
 46138  00FFE8  1F72               	comf	(??__motor_distance_to_limit+2)& (0+255),f,b
 46139  00FFEA  1F73               	comf	(??__motor_distance_to_limit+3)& (0+255),f,b
 46140  00FFEC  2B70               	incf	??__motor_distance_to_limit& (0+255),f,b
 46141  00FFEE  0E00               	movlw	0
 46142  00FFF0  2371               	addwfc	(??__motor_distance_to_limit+1)& (0+255),f,b
 46143  00FFF2  2372               	addwfc	(??__motor_distance_to_limit+2)& (0+255),f,b
 46144  00FFF4  2373               	addwfc	(??__motor_distance_to_limit+3)& (0+255),f,b
 46145  00FFF6  5179               	movf	__motor_distance_to_limit@absolute_position_in_steps& (0+255),w,b
 46146  00FFF8  2570               	addwf	??__motor_distance_to_limit& (0+255),w,b
 46147  00FFFA  6F74               	movwf	__motor_distance_to_limit@distance_to_limit_in_steps& (0+255),b
 46148  00FFFC  517A               	movf	(__motor_distance_to_limit@absolute_position_in_steps+1)& (0+255),w,b
 46149  00FFFE  2171               	addwfc	(??__motor_distance_to_limit+1)& (0+255),w,b
 46150  010000  6F75               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+1)& (0+255),b
 46151  010002  517B               	movf	(__motor_distance_to_limit@absolute_position_in_steps+2)& (0+255),w,b
 46152  010004  2172               	addwfc	(??__motor_distance_to_limit+2)& (0+255),w,b
 46153  010006  6F76               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+2)& (0+255),b
 46154  010008  517C               	movf	(__motor_distance_to_limit@absolute_position_in_steps+3)& (0+255),w,b
 46155  01000A  D023               	goto	L69
 46156  01000C                     l2521:
 46157                           
 46158                           ; BSR set to: 0
 46159                           ;motor.c: 474: else;motor.c: 475: {;motor.c: 476: distance_to_limit_in_steps = config.cw
      +                          _limit_in_steps - absolute_position_in_steps;
 46160                           
 46161                           ; BSR set to: 0
 46162  01000C  C079  F070         	movff	__motor_distance_to_limit@absolute_position_in_steps,??__motor_distance_to_limit
 46163  010010  C07A  F071         	movff	__motor_distance_to_limit@absolute_position_in_steps+1,??__motor_distance_to_limi
      +                          t+1
 46164  010014  C07B  F072         	movff	__motor_distance_to_limit@absolute_position_in_steps+2,??__motor_distance_to_limi
      +                          t+2
 46165  010018  C07C  F073         	movff	__motor_distance_to_limit@absolute_position_in_steps+3,??__motor_distance_to_limi
      +                          t+3
 46166  01001C  1F70               	comf	??__motor_distance_to_limit& (0+255),f,b
 46167  01001E  1F71               	comf	(??__motor_distance_to_limit+1)& (0+255),f,b
 46168  010020  1F72               	comf	(??__motor_distance_to_limit+2)& (0+255),f,b
 46169  010022  1F73               	comf	(??__motor_distance_to_limit+3)& (0+255),f,b
 46170  010024  2B70               	incf	??__motor_distance_to_limit& (0+255),f,b
 46171  010026  0E00               	movlw	0
 46172  010028  2371               	addwfc	(??__motor_distance_to_limit+1)& (0+255),f,b
 46173  01002A  2372               	addwfc	(??__motor_distance_to_limit+2)& (0+255),f,b
 46174  01002C  2373               	addwfc	(??__motor_distance_to_limit+3)& (0+255),f,b
 46175  01002E  0101               	movlb	1	; () banked
 46176  010030  51B0               	movf	(_config+27)& (0+255),w,b
 46177  010032  0100               	movlb	0	; () banked
 46178  010034  2570               	addwf	??__motor_distance_to_limit& (0+255),w,b
 46179  010036  6F74               	movwf	__motor_distance_to_limit@distance_to_limit_in_steps& (0+255),b
 46180  010038  0101               	movlb	1	; () banked
 46181  01003A  51B1               	movf	(_config+28)& (0+255),w,b
 46182  01003C  0100               	movlb	0	; () banked
 46183  01003E  2171               	addwfc	(??__motor_distance_to_limit+1)& (0+255),w,b
 46184  010040  6F75               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+1)& (0+255),b
 46185  010042  0101               	movlb	1	; () banked
 46186  010044  51B2               	movf	(_config+29)& (0+255),w,b
 46187  010046  0100               	movlb	0	; () banked
 46188  010048  2172               	addwfc	(??__motor_distance_to_limit+2)& (0+255),w,b
 46189  01004A  6F76               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+2)& (0+255),b
 46190  01004C  0101               	movlb	1	; () banked
 46191  01004E  51B3               	movf	(_config+30)& (0+255),w,b
 46192  010050  0100               	movlb	0	; () banked
 46193  010052                     L69:
 46194  010052  2173               	addwfc	(??__motor_distance_to_limit+3)& (0+255),w,b
 46195  010054  6F77               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+3)& (0+255),b
 46196                           
 46197                           ; BSR set to: 0
 46198                           ;motor.c: 477: };motor.c: 479: return distance_to_limit_in_steps;
 46199                           
 46200                           ; BSR set to: 0
 46201  010056  C074  F06C         	movff	__motor_distance_to_limit@distance_to_limit_in_steps,?__motor_distance_to_limit
 46202  01005A  C075  F06D         	movff	__motor_distance_to_limit@distance_to_limit_in_steps+1,?__motor_distance_to_limit
      +                          +1
 46203  01005E  C076  F06E         	movff	__motor_distance_to_limit@distance_to_limit_in_steps+2,?__motor_distance_to_limit
      +                          +2
 46204  010062  C077  F06F         	movff	__motor_distance_to_limit@distance_to_limit_in_steps+3,?__motor_distance_to_limit
      +                          +3
 46205  010066  0012               	return	
 46206  010068                     __end_of__motor_distance_to_limit:
 46207                           	opt stack 0
 46208                           tosu	equ	0xFFF
 46209                           tosh	equ	0xFFE
 46210                           tosl	equ	0xFFD
 46211                           pclath	equ	0xFFA
 46212                           tblptru	equ	0xFF8
 46213                           tblptrh	equ	0xFF7
 46214                           tblptrl	equ	0xFF6
 46215                           tablat	equ	0xFF5
 46216                           prodh	equ	0xFF4
 46217                           prodl	equ	0xFF3
 46218                           intcon	equ	0xFF2
 46219                           indf0	equ	0xFEF
 46220                           postinc0	equ	0xFEE
 46221                           fsr0h	equ	0xFEA
 46222                           fsr0l	equ	0xFE9
 46223                           wreg	equ	0xFE8
 46224                           indf1	equ	0xFE7
 46225                           postinc1	equ	0xFE6
 46226                           postdec1	equ	0xFE5
 46227                           plusw1	equ	0xFE3
 46228                           fsr1h	equ	0xFE2
 46229                           fsr1l	equ	0xFE1
 46230                           indf2	equ	0xFDF
 46231                           postinc2	equ	0xFDE
 46232                           postdec2	equ	0xFDD
 46233                           plusw2	equ	0xFDB
 46234                           fsr2h	equ	0xFDA
 46235                           fsr2l	equ	0xFD9
 46236                           status	equ	0xFD8
 46237                           
 46238 ;; *************** function ___lmul *****************
 46239 ;; Defined at:
 46240 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
 46241 ;; Parameters:    Size  Location     Type
 46242 ;;  multiplier      4    0[BANK0 ] unsigned long 
 46243 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 46244 ;; Auto vars:     Size  Location     Type
 46245 ;;  product         4    8[BANK0 ] unsigned long 
 46246 ;; Return value:  Size  Location     Type
 46247 ;;                  4    0[BANK0 ] unsigned long 
 46248 ;; Registers used:
 46249 ;;		wreg, status,2, status,0
 46250 ;; Tracked objects:
 46251 ;;		On entry : 0/0
 46252 ;;		On exit  : 0/0
 46253 ;;		Unchanged: 0/0
 46254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46255 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46256 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46258 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46259 ;;Total ram usage:       12 bytes
 46260 ;; Hardware stack levels used:    1
 46261 ;; Hardware stack levels required when called:   10
 46262 ;; This function calls:
 46263 ;;		Nothing
 46264 ;; This function is called by:
 46265 ;;		__motor_distance_to_limit
 46266 ;;		__motor_get_speed_in_degrees
 46267 ;;		_atol
 46268 ;; This function uses a non-reentrant model
 46269 ;;
 46270                           
 46271                           	psect	text191
 46272  014D82                     __ptext191:
 46273                           	opt stack 0
 46274  014D82                     ___lmul:
 46275                           	opt stack 16
 46276                           
 46277                           ; BSR set to: 0
 46278                           ;incstack = 0
 46279  014D82  0E00               	movlw	0
 46280  014D84  0100               	movlb	0	; () banked
 46281  014D86  6F68               	movwf	___lmul@product& (0+255),b
 46282  014D88  0E00               	movlw	0
 46283  014D8A  6F69               	movwf	(___lmul@product+1)& (0+255),b
 46284  014D8C  0E00               	movlw	0
 46285  014D8E  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 46286  014D90  0E00               	movlw	0
 46287  014D92  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 46288  014D94                     
 46289                           ; BSR set to: 0
 46290                           
 46291                           ; BSR set to: 0
 46292  014D94  A160               	btfss	___lmul@multiplier& (0+255),0,b
 46293  014D96  D008               	goto	l3098
 46294                           
 46295                           ; BSR set to: 0
 46296  014D98  5164               	movf	___lmul@multiplicand& (0+255),w,b
 46297  014D9A  2768               	addwf	___lmul@product& (0+255),f,b
 46298  014D9C  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 46299  014D9E  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 46300  014DA0  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 46301  014DA2  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 46302  014DA4  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 46303  014DA6  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 46304  014DA8                     l3098:
 46305                           
 46306                           ; BSR set to: 0
 46307                           
 46308                           ; BSR set to: 0
 46309  014DA8  90D8               	bcf	status,0,c
 46310  014DAA  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 46311  014DAC  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 46312  014DAE  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 46313  014DB0  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 46314                           
 46315                           ; BSR set to: 0
 46316  014DB2  90D8               	bcf	status,0,c
 46317  014DB4  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 46318  014DB6  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 46319  014DB8  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 46320  014DBA  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 46321  014DBC  5160               	movf	___lmul@multiplier& (0+255),w,b
 46322  014DBE  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 46323  014DC0  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 46324  014DC2  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 46325  014DC4  A4D8               	btfss	status,2,c
 46326  014DC6  D7E6               	goto	l3097
 46327                           
 46328                           ; BSR set to: 0
 46329  014DC8  C068  F060         	movff	___lmul@product,?___lmul
 46330  014DCC  C069  F061         	movff	___lmul@product+1,?___lmul+1
 46331  014DD0  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 46332  014DD4  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 46333                           
 46334                           ; BSR set to: 0
 46335  014DD8  0012               	return		;funcret
 46336  014DDA                     __end_of___lmul:
 46337                           	opt stack 0
 46338                           tosu	equ	0xFFF
 46339                           tosh	equ	0xFFE
 46340                           tosl	equ	0xFFD
 46341                           pclath	equ	0xFFA
 46342                           tblptru	equ	0xFF8
 46343                           tblptrh	equ	0xFF7
 46344                           tblptrl	equ	0xFF6
 46345                           tablat	equ	0xFF5
 46346                           prodh	equ	0xFF4
 46347                           prodl	equ	0xFF3
 46348                           intcon	equ	0xFF2
 46349                           indf0	equ	0xFEF
 46350                           postinc0	equ	0xFEE
 46351                           fsr0h	equ	0xFEA
 46352                           fsr0l	equ	0xFE9
 46353                           wreg	equ	0xFE8
 46354                           indf1	equ	0xFE7
 46355                           postinc1	equ	0xFE6
 46356                           postdec1	equ	0xFE5
 46357                           plusw1	equ	0xFE3
 46358                           fsr1h	equ	0xFE2
 46359                           fsr1l	equ	0xFE1
 46360                           indf2	equ	0xFDF
 46361                           postinc2	equ	0xFDE
 46362                           postdec2	equ	0xFDD
 46363                           plusw2	equ	0xFDB
 46364                           fsr2h	equ	0xFDA
 46365                           fsr2l	equ	0xFD9
 46366                           status	equ	0xFD8
 46367                           
 46368 ;; *************** function _USBTransferOnePacket *****************
 46369 ;; Defined at:
 46370 ;;		line 995 in file "usb_device.c"
 46371 ;; Parameters:    Size  Location     Type
 46372 ;;  ep              1    wreg     unsigned char 
 46373 ;;  dir             1    0[BANK0 ] unsigned char 
 46374 ;;  data            2    1[BANK0 ] PTR unsigned char 
 46375 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 46376 ;;		 -> msd_cbw(31), NULL(0), 
 46377 ;;  len             1    3[BANK0 ] unsigned char 
 46378 ;; Auto vars:     Size  Location     Type
 46379 ;;  ep              1    8[BANK0 ] unsigned char 
 46380 ;;  handle          2    9[BANK0 ] PTR volatile struct __BD
 46381 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 46382 ;; Return value:  Size  Location     Type
 46383 ;;                  2    0[BANK0 ] PTR void 
 46384 ;; Registers used:
 46385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 46386 ;; Tracked objects:
 46387 ;;		On entry : 0/0
 46388 ;;		On exit  : 0/0
 46389 ;;		Unchanged: 0/0
 46390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46391 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46392 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46393 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46394 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46395 ;;Total ram usage:       11 bytes
 46396 ;; Hardware stack levels used:    1
 46397 ;; Hardware stack levels required when called:   10
 46398 ;; This function calls:
 46399 ;;		Nothing
 46400 ;; This function is called by:
 46401 ;;		_MSDTasks
 46402 ;;		_MSDProcessCommandMediaPresent
 46403 ;;		_MSDReadHandler
 46404 ;;		_MSDWriteHandler
 46405 ;;		_APP_DeviceCustomHIDTasks
 46406 ;; This function uses a non-reentrant model
 46407 ;;
 46408                           
 46409                           	psect	text192
 46410  01140E                     __ptext192:
 46411                           	opt stack 0
 46412  01140E                     _USBTransferOnePacket:
 46413                           	opt stack 18
 46414                           
 46415                           ; BSR set to: 0
 46416                           ;incstack = 0
 46417                           ;USBTransferOnePacket@ep stored from wreg
 46418  01140E  0100               	movlb	0	; () banked
 46419  011410  6F68               	movwf	USBTransferOnePacket@ep& (0+255),b
 46420                           
 46421                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 46422  011412  0100               	movlb	0	; () banked
 46423  011414  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 46424  011416  B4D8               	btfsc	status,2,c
 46425  011418  D007               	goto	l184
 46426                           
 46427                           ; BSR set to: 0
 46428                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 46429  01141A  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 46430  01141C  0D02               	mullw	2
 46431  01141E  0E09               	movlw	low _pBDTEntryIn
 46432  011420  24F3               	addwf	prodl,w,c
 46433  011422  6ED9               	movwf	fsr2l,c
 46434  011424  0E01               	movlw	high _pBDTEntryIn
 46435  011426  D006               	goto	L70
 46436  011428                     l184:
 46437                           
 46438                           ; BSR set to: 0
 46439                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 46440                           
 46441                           ; BSR set to: 0
 46442  011428  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 46443  01142A  0D02               	mullw	2
 46444  01142C  0E0F               	movlw	low _pBDTEntryOut
 46445  01142E  24F3               	addwf	prodl,w,c
 46446  011430  6ED9               	movwf	fsr2l,c
 46447  011432  0E01               	movlw	high _pBDTEntryOut
 46448  011434                     L70:
 46449  011434  20F4               	addwfc	prodh,w,c
 46450  011436  6EDA               	movwf	fsr2h,c
 46451  011438  CFDE F069          	movff	postinc2,USBTransferOnePacket@handle
 46452  01143C  CFDD F06A          	movff	postdec2,USBTransferOnePacket@handle+1
 46453                           
 46454                           ; BSR set to: 0
 46455                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 46456                           
 46457                           ; BSR set to: 0
 46458  011440  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 46459  011442  116A               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 46460  011444  A4D8               	btfss	status,2,c
 46461  011446  D005               	goto	l186
 46462                           
 46463                           ; BSR set to: 0
 46464                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 46465  011448  0E00               	movlw	0
 46466  01144A  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 46467  01144C  0E00               	movlw	0
 46468  01144E  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 46469                           
 46470                           ; BSR set to: 0
 46471  011450  0012               	return	
 46472  011452                     l186:
 46473                           
 46474                           ; BSR set to: 0
 46475                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 46476                           
 46477                           ; BSR set to: 0
 46478  011452  EE20 F002          	lfsr	2,2
 46479  011456  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 46480  011458  26D9               	addwf	fsr2l,f,c
 46481  01145A  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 46482  01145C  22DA               	addwfc	fsr2h,f,c
 46483  01145E  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 46484  011462  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 46485                           
 46486                           ;usb_device.c: 1030: handle->CNT = len;
 46487  011466  EE20 F001          	lfsr	2,1
 46488  01146A  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 46489  01146C  26D9               	addwf	fsr2l,f,c
 46490  01146E  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 46491  011470  22DA               	addwfc	fsr2h,f,c
 46492  011472  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 46493                           
 46494                           ; BSR set to: 0
 46495                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 46496  011476  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 46497  01147A  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 46498  01147E  0E40               	movlw	64
 46499  011480  16DF               	andwf	indf2,f,c
 46500                           
 46501                           ; BSR set to: 0
 46502                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 46503  011482  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 46504  011486  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 46505  01148A  0E00               	movlw	0
 46506  01148C  86DB               	bsf	plusw2,3,c
 46507                           
 46508                           ; BSR set to: 0
 46509                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 46510  01148E  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 46511  011492  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 46512  011496  0E00               	movlw	0
 46513  011498  8EDB               	bsf	plusw2,7,c
 46514                           
 46515                           ; BSR set to: 0
 46516                           ;usb_device.c: 1036: if(dir != 0)
 46517  01149A  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 46518  01149C  B4D8               	btfsc	status,2,c
 46519  01149E  D018               	goto	l188
 46520                           
 46521                           ; BSR set to: 0
 46522                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 46523  0114A0  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 46524  0114A2  0D02               	mullw	2
 46525  0114A4  0E09               	movlw	low _pBDTEntryIn
 46526  0114A6  24F3               	addwf	prodl,w,c
 46527  0114A8  6ED9               	movwf	fsr2l,c
 46528  0114AA  0E01               	movlw	high _pBDTEntryIn
 46529  0114AC  20F4               	addwfc	prodh,w,c
 46530  0114AE  6EDA               	movwf	fsr2h,c
 46531  0114B0  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 46532  0114B4  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 46533  0114B8  0E04               	movlw	4
 46534  0114BA  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 46535  0114BC  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 46536  0114BE  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 46537  0114C0  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 46538  0114C2  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 46539  0114C4  0D02               	mullw	2
 46540  0114C6  0E09               	movlw	low _pBDTEntryIn
 46541  0114C8  24F3               	addwf	prodl,w,c
 46542  0114CA  6ED9               	movwf	fsr2l,c
 46543  0114CC  0E01               	movlw	high _pBDTEntryIn
 46544  0114CE  D017               	goto	L71
 46545  0114D0                     l188:
 46546                           
 46547                           ; BSR set to: 0
 46548                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 46549                           
 46550                           ; BSR set to: 0
 46551  0114D0  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 46552  0114D2  0D02               	mullw	2
 46553  0114D4  0E0F               	movlw	low _pBDTEntryOut
 46554  0114D6  24F3               	addwf	prodl,w,c
 46555  0114D8  6ED9               	movwf	fsr2l,c
 46556  0114DA  0E01               	movlw	high _pBDTEntryOut
 46557  0114DC  20F4               	addwfc	prodh,w,c
 46558  0114DE  6EDA               	movwf	fsr2h,c
 46559  0114E0  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 46560  0114E4  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 46561  0114E8  0E04               	movlw	4
 46562  0114EA  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 46563  0114EC  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 46564  0114EE  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 46565  0114F0  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 46566  0114F2  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 46567  0114F4  0D02               	mullw	2
 46568  0114F6  0E0F               	movlw	low _pBDTEntryOut
 46569  0114F8  24F3               	addwf	prodl,w,c
 46570  0114FA  6ED9               	movwf	fsr2l,c
 46571  0114FC  0E01               	movlw	high _pBDTEntryOut
 46572  0114FE                     L71:
 46573  0114FE  20F4               	addwfc	prodh,w,c
 46574  011500  6EDA               	movwf	fsr2h,c
 46575  011502  C066  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 46576  011506  C067  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 46577                           
 46578                           ; BSR set to: 0
 46579                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 46580                           
 46581                           ; BSR set to: 0
 46582  01150A  C069  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 46583  01150E  C06A  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 46584  011512  0012               	return	
 46585  011514                     __end_of_USBTransferOnePacket:
 46586                           	opt stack 0
 46587                           tosu	equ	0xFFF
 46588                           tosh	equ	0xFFE
 46589                           tosl	equ	0xFFD
 46590                           pclath	equ	0xFFA
 46591                           tblptru	equ	0xFF8
 46592                           tblptrh	equ	0xFF7
 46593                           tblptrl	equ	0xFF6
 46594                           tablat	equ	0xFF5
 46595                           prodh	equ	0xFF4
 46596                           prodl	equ	0xFF3
 46597                           intcon	equ	0xFF2
 46598                           indf0	equ	0xFEF
 46599                           postinc0	equ	0xFEE
 46600                           fsr0h	equ	0xFEA
 46601                           fsr0l	equ	0xFE9
 46602                           wreg	equ	0xFE8
 46603                           indf1	equ	0xFE7
 46604                           postinc1	equ	0xFE6
 46605                           postdec1	equ	0xFE5
 46606                           plusw1	equ	0xFE3
 46607                           fsr1h	equ	0xFE2
 46608                           fsr1l	equ	0xFE1
 46609                           indf2	equ	0xFDF
 46610                           postinc2	equ	0xFDE
 46611                           postdec2	equ	0xFDD
 46612                           plusw2	equ	0xFDB
 46613                           fsr2h	equ	0xFDA
 46614                           fsr2l	equ	0xFD9
 46615                           status	equ	0xFD8
 46616                           
 46617 ;; *************** function _SYS_InterruptHigh *****************
 46618 ;; Defined at:
 46619 ;;		line 162 in file "system.c"
 46620 ;; Parameters:    Size  Location     Type
 46621 ;;		None
 46622 ;; Auto vars:     Size  Location     Type
 46623 ;;		None
 46624 ;; Return value:  Size  Location     Type
 46625 ;;                  1    wreg      void 
 46626 ;; Registers used:
 46627 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 46628 ;; Tracked objects:
 46629 ;;		On entry : 0/0
 46630 ;;		On exit  : 0/0
 46631 ;;		Unchanged: 0/0
 46632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46635 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46636 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46637 ;;Total ram usage:       14 bytes
 46638 ;; Hardware stack levels used:    1
 46639 ;; Hardware stack levels required when called:    9
 46640 ;; This function calls:
 46641 ;;		_USBDeviceTasks
 46642 ;;		_motor_isr
 46643 ;;		_tmr0_isr
 46644 ;; This function is called by:
 46645 ;;		Interrupt level 2
 46646 ;; This function uses a non-reentrant model
 46647 ;;
 46648                           
 46649                           	psect	intcode
 46650  009008                     __pintcode:
 46651                           	opt stack 0
 46652  009008                     _SYS_InterruptHigh:
 46653                           	opt stack 9
 46654                           
 46655                           ; BSR set to: 0
 46656                           ;incstack = 0
 46657  009008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 46658  00900A  CFFA F045          	movff	pclath,??_SYS_InterruptHigh
 46659  00900E  CFFB F046          	movff	pclatu,??_SYS_InterruptHigh+1
 46660  009012  CFE9 F047          	movff	fsr0l,??_SYS_InterruptHigh+2
 46661  009016  CFEA F048          	movff	fsr0h,??_SYS_InterruptHigh+3
 46662  00901A  CFE1 F049          	movff	fsr1l,??_SYS_InterruptHigh+4
 46663  00901E  CFE2 F04A          	movff	fsr1h,??_SYS_InterruptHigh+5
 46664  009022  CFD9 F04B          	movff	fsr2l,??_SYS_InterruptHigh+6
 46665  009026  CFDA F04C          	movff	fsr2h,??_SYS_InterruptHigh+7
 46666  00902A  CFF3 F04D          	movff	prodl,??_SYS_InterruptHigh+8
 46667  00902E  CFF4 F04E          	movff	prodh,??_SYS_InterruptHigh+9
 46668  009032  CFF6 F04F          	movff	tblptrl,??_SYS_InterruptHigh+10
 46669  009036  CFF7 F050          	movff	tblptrh,??_SYS_InterruptHigh+11
 46670  00903A  CFF8 F051          	movff	tblptru,??_SYS_InterruptHigh+12
 46671  00903E  CFF5 F052          	movff	tablat,??_SYS_InterruptHigh+13
 46672                           
 46673                           ;system.c: 165: USBDeviceTasks();
 46674  009042  EC34  F080         	call	_USBDeviceTasks	;wreg free
 46675                           
 46676                           ;system.c: 169: if(PIR1bits.TMR2IF)
 46677  009046  B29E               	btfsc	3998,1,c	;volatile
 46678                           
 46679                           ;system.c: 170: {;system.c: 171: motor_isr();
 46680  009048  ECFB  F05B         	call	_motor_isr	;wreg free
 46681                           
 46682                           ;system.c: 172: };system.c: 174: if(INTCONbits.T0IF)
 46683  00904C  B4F2               	btfsc	intcon,2,c	;volatile
 46684                           
 46685                           ;system.c: 175: {;system.c: 176: tmr0_isr();
 46686  00904E  ECA2  F0AB         	call	_tmr0_isr	;wreg free
 46687  009052  C052  FFF5         	movff	??_SYS_InterruptHigh+13,tablat
 46688  009056  C051  FFF8         	movff	??_SYS_InterruptHigh+12,tblptru
 46689  00905A  C050  FFF7         	movff	??_SYS_InterruptHigh+11,tblptrh
 46690  00905E  C04F  FFF6         	movff	??_SYS_InterruptHigh+10,tblptrl
 46691  009062  C04E  FFF4         	movff	??_SYS_InterruptHigh+9,prodh
 46692  009066  C04D  FFF3         	movff	??_SYS_InterruptHigh+8,prodl
 46693  00906A  C04C  FFDA         	movff	??_SYS_InterruptHigh+7,fsr2h
 46694  00906E  C04B  FFD9         	movff	??_SYS_InterruptHigh+6,fsr2l
 46695  009072  C04A  FFE2         	movff	??_SYS_InterruptHigh+5,fsr1h
 46696  009076  C049  FFE1         	movff	??_SYS_InterruptHigh+4,fsr1l
 46697  00907A  C048  FFEA         	movff	??_SYS_InterruptHigh+3,fsr0h
 46698  00907E  C047  FFE9         	movff	??_SYS_InterruptHigh+2,fsr0l
 46699  009082  C046  FFFB         	movff	??_SYS_InterruptHigh+1,pclatu
 46700  009086  C045  FFFA         	movff	??_SYS_InterruptHigh,pclath
 46701  00908A  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 46702  00908C  0011               	retfie		f
 46703  00908E                     __end_of_SYS_InterruptHigh:
 46704                           	opt stack 0
 46705                           tosu	equ	0xFFF
 46706                           tosh	equ	0xFFE
 46707                           tosl	equ	0xFFD
 46708                           pclatu	equ	0xFFB
 46709                           pclath	equ	0xFFA
 46710                           tblptru	equ	0xFF8
 46711                           tblptrh	equ	0xFF7
 46712                           tblptrl	equ	0xFF6
 46713                           tablat	equ	0xFF5
 46714                           prodh	equ	0xFF4
 46715                           prodl	equ	0xFF3
 46716                           intcon	equ	0xFF2
 46717                           indf0	equ	0xFEF
 46718                           postinc0	equ	0xFEE
 46719                           fsr0h	equ	0xFEA
 46720                           fsr0l	equ	0xFE9
 46721                           wreg	equ	0xFE8
 46722                           indf1	equ	0xFE7
 46723                           postinc1	equ	0xFE6
 46724                           postdec1	equ	0xFE5
 46725                           plusw1	equ	0xFE3
 46726                           fsr1h	equ	0xFE2
 46727                           fsr1l	equ	0xFE1
 46728                           indf2	equ	0xFDF
 46729                           postinc2	equ	0xFDE
 46730                           postdec2	equ	0xFDD
 46731                           plusw2	equ	0xFDB
 46732                           fsr2h	equ	0xFDA
 46733                           fsr2l	equ	0xFD9
 46734                           status	equ	0xFD8
 46735                           
 46736 ;; *************** function _tmr0_isr *****************
 46737 ;; Defined at:
 46738 ;;		line 24 in file "os.c"
 46739 ;; Parameters:    Size  Location     Type
 46740 ;;		None
 46741 ;; Auto vars:     Size  Location     Type
 46742 ;;		None
 46743 ;; Return value:  Size  Location     Type
 46744 ;;                  1    wreg      void 
 46745 ;; Registers used:
 46746 ;;		wreg, status,2, status,0, cstack
 46747 ;; Tracked objects:
 46748 ;;		On entry : 0/0
 46749 ;;		On exit  : 0/0
 46750 ;;		Unchanged: 0/0
 46751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46756 ;;Total ram usage:        0 bytes
 46757 ;; Hardware stack levels used:    1
 46758 ;; Hardware stack levels required when called:    1
 46759 ;; This function calls:
 46760 ;;		_encoder_run
 46761 ;; This function is called by:
 46762 ;;		_SYS_InterruptHigh
 46763 ;; This function uses a non-reentrant model
 46764 ;;
 46765                           
 46766                           	psect	text194
 46767  015744                     __ptext194:
 46768                           	opt stack 0
 46769  015744                     _tmr0_isr:
 46770                           	opt stack 16
 46771                           
 46772                           ;os.c: 27: if(INTCONbits.T0IF)
 46773                           
 46774                           ;incstack = 0
 46775  015744  A4F2               	btfss	intcon,2,c	;volatile
 46776  015746  0012               	return	
 46777                           
 46778                           ;os.c: 28: {;os.c: 30: TMR0H = 0xFA;
 46779  015748  0EFA               	movlw	250
 46780  01574A  6ED7               	movwf	4055,c	;volatile
 46781                           
 46782                           ;os.c: 31: TMR0L = 0x24;
 46783  01574C  0E24               	movlw	36
 46784  01574E  6ED6               	movwf	4054,c	;volatile
 46785                           
 46786                           ;os.c: 34: INTCONbits.T0IF = 0;
 46787  015750  94F2               	bcf	intcon,2,c	;volatile
 46788                           
 46789                           ;os.c: 37: encoder_run();
 46790  015752  EC04  F08E         	call	_encoder_run	;wreg free
 46791                           
 46792                           ;os.c: 40: ++os.subTimeSlot;
 46793  015756  0101               	movlb	1	; () banked
 46794  015758  2B64               	incf	_os& (0+255),f,b	;volatile
 46795                           
 46796                           ; BSR set to: 1
 46797                           ;os.c: 41: if(os.subTimeSlot>=10)
 46798  01575A  0E09               	movlw	9
 46799  01575C  6564               	cpfsgt	_os& (0+255),b	;volatile
 46800  01575E  0012               	return	
 46801                           
 46802                           ; BSR set to: 1
 46803                           ;os.c: 42: {;os.c: 43: if(os.done)
 46804  015760  5166               	movf	(_os+2)& (0+255),w,b	;volatile
 46805  015762  B4D8               	btfsc	status,2,c
 46806  015764  0012               	return	
 46807                           
 46808                           ; BSR set to: 1
 46809                           ;os.c: 44: {;os.c: 45: ++os.timeSlot;
 46810  015766  2B65               	incf	(_os+1)& (0+255),f,b	;volatile
 46811                           
 46812                           ; BSR set to: 1
 46813                           ;os.c: 46: if(os.timeSlot==16)
 46814  015768  0E10               	movlw	16
 46815  01576A  1965               	xorwf	(_os+1)& (0+255),w,b	;volatile
 46816  01576C  A4D8               	btfss	status,2,c
 46817  01576E  D002               	goto	i2l1066
 46818                           
 46819                           ; BSR set to: 1
 46820                           ;os.c: 47: {;os.c: 48: os.timeSlot = 0;
 46821  015770  0E00               	movlw	0
 46822  015772  6F65               	movwf	(_os+1)& (0+255),b	;volatile
 46823  015774                     i2l1066:
 46824                           
 46825                           ; BSR set to: 1
 46826                           ;os.c: 49: };os.c: 50: os.subTimeSlot = 0;
 46827  015774  0E00               	movlw	0
 46828  015776  6F64               	movwf	_os& (0+255),b	;volatile
 46829                           
 46830                           ;os.c: 51: os.done = 0;
 46831  015778  0E00               	movlw	0
 46832  01577A  6F66               	movwf	(_os+2)& (0+255),b	;volatile
 46833                           
 46834                           ; BSR set to: 1
 46835                           
 46836                           ; BSR set to: 1
 46837  01577C  0012               	return	
 46838  01577E                     __end_of_tmr0_isr:
 46839                           	opt stack 0
 46840                           tosu	equ	0xFFF
 46841                           tosh	equ	0xFFE
 46842                           tosl	equ	0xFFD
 46843                           pclatu	equ	0xFFB
 46844                           pclath	equ	0xFFA
 46845                           tblptru	equ	0xFF8
 46846                           tblptrh	equ	0xFF7
 46847                           tblptrl	equ	0xFF6
 46848                           tablat	equ	0xFF5
 46849                           prodh	equ	0xFF4
 46850                           prodl	equ	0xFF3
 46851                           intcon	equ	0xFF2
 46852                           indf0	equ	0xFEF
 46853                           postinc0	equ	0xFEE
 46854                           fsr0h	equ	0xFEA
 46855                           fsr0l	equ	0xFE9
 46856                           wreg	equ	0xFE8
 46857                           indf1	equ	0xFE7
 46858                           postinc1	equ	0xFE6
 46859                           postdec1	equ	0xFE5
 46860                           plusw1	equ	0xFE3
 46861                           fsr1h	equ	0xFE2
 46862                           fsr1l	equ	0xFE1
 46863                           indf2	equ	0xFDF
 46864                           postinc2	equ	0xFDE
 46865                           postdec2	equ	0xFDD
 46866                           plusw2	equ	0xFDB
 46867                           fsr2h	equ	0xFDA
 46868                           fsr2l	equ	0xFD9
 46869                           status	equ	0xFD8
 46870                           
 46871 ;; *************** function _encoder_run *****************
 46872 ;; Defined at:
 46873 ;;		line 103 in file "encoder.c"
 46874 ;; Parameters:    Size  Location     Type
 46875 ;;		None
 46876 ;; Auto vars:     Size  Location     Type
 46877 ;;		None
 46878 ;; Return value:  Size  Location     Type
 46879 ;;                  1    wreg      void 
 46880 ;; Registers used:
 46881 ;;		wreg, status,2, status,0
 46882 ;; Tracked objects:
 46883 ;;		On entry : 0/0
 46884 ;;		On exit  : 0/0
 46885 ;;		Unchanged: 0/0
 46886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46891 ;;Total ram usage:        0 bytes
 46892 ;; Hardware stack levels used:    1
 46893 ;; This function calls:
 46894 ;;		Nothing
 46895 ;; This function is called by:
 46896 ;;		_tmr0_isr
 46897 ;; This function uses a non-reentrant model
 46898 ;;
 46899                           
 46900                           	psect	text195
 46901  011C08                     __ptext195:
 46902                           	opt stack 0
 46903  011C08                     _encoder_run:
 46904                           	opt stack 16
 46905                           
 46906                           ;encoder.c: 105: if(enc1 != (PORTE&0b00000111))
 46907                           
 46908                           ;incstack = 0
 46909  011C08  5084               	movf	3972,w,c	;volatile
 46910  011C0A  0B07               	andlw	7
 46911  011C0C  0101               	movlb	1	; () banked
 46912  011C0E  1946               	xorwf	_enc1& (0+255),w,b
 46913  011C10  B4D8               	btfsc	status,2,c
 46914  011C12  D033               	goto	i2l2750
 46915                           
 46916                           ; BSR set to: 1
 46917                           ;encoder.c: 106: {;encoder.c: 108: if(PORTEbits.RE0 && PORTEbits.RE2 && (!(enc1&0b000000
      +                          01)))
 46918  011C14  B084               	btfsc	3972,0,c	;volatile
 46919                           
 46920                           ; BSR set to: 1
 46921  011C16  A484               	btfss	3972,2,c	;volatile
 46922  011C18  D00D               	goto	i2l2753
 46923                           
 46924                           ; BSR set to: 1
 46925  011C1A  B146               	btfsc	_enc1& (0+255),0,b
 46926  011C1C  D00B               	goto	i2l2753
 46927                           
 46928                           ; BSR set to: 1
 46929                           ;encoder.c: 109: {;encoder.c: 110: if(os.encoder1Count<127)
 46930  011C1E  0E7F               	movlw	127
 46931  011C20  1967               	xorwf	(_os+3)& (0+255),w,b	;volatile
 46932  011C22  B4D8               	btfsc	status,2,c
 46933  011C24  D007               	goto	i2l2753
 46934                           
 46935                           ; BSR set to: 1
 46936                           ;encoder.c: 111: {;encoder.c: 112: ++os.encoder1Count;
 46937  011C26  2B67               	incf	(_os+3)& (0+255),f,b	;volatile
 46938                           
 46939                           ; BSR set to: 1
 46940                           ;encoder.c: 113: if(config.beep_duration)
 46941  011C28  51AA               	movf	(_config+21)& (0+255),w,b
 46942  011C2A  B4D8               	btfsc	status,2,c
 46943  011C2C  D003               	goto	i2l2753
 46944                           
 46945                           ; BSR set to: 1
 46946                           ;encoder.c: 114: {;encoder.c: 115: LATCbits.LC7 = 1;
 46947  011C2E  8E8B               	bsf	3979,7,c	;volatile
 46948                           
 46949                           ;encoder.c: 116: os.beep_count = config.beep_duration;
 46950  011C30  C1AA  F18B         	movff	_config+21,_os+39	;volatile
 46951  011C34                     i2l2753:
 46952                           
 46953                           ; BSR set to: 1
 46954                           ;encoder.c: 117: };encoder.c: 118: };encoder.c: 119: };encoder.c: 121: if(PORTEbits.RE2 
      +                          && PORTEbits.RE0 && (!(enc1&0b00000100)))
 46955                           
 46956                           ; BSR set to: 1
 46957                           
 46958                           ; BSR set to: 1
 46959  011C34  B484               	btfsc	3972,2,c	;volatile
 46960                           
 46961                           ; BSR set to: 1
 46962  011C36  A084               	btfss	3972,0,c	;volatile
 46963  011C38  D00E               	goto	i2l2756
 46964                           
 46965                           ; BSR set to: 1
 46966  011C3A  B546               	btfsc	_enc1& (0+255),2,b
 46967  011C3C  D00C               	goto	i2l2756
 46968                           
 46969                           ; BSR set to: 1
 46970                           ;encoder.c: 122: {;encoder.c: 123: if(os.encoder1Count>-128)
 46971  011C3E  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 46972  011C40  0A80               	xorlw	128
 46973  011C42  0FFF               	addlw	255
 46974  011C44  A0D8               	btfss	status,0,c
 46975  011C46  D007               	goto	i2l2756
 46976                           
 46977                           ; BSR set to: 1
 46978                           ;encoder.c: 124: {;encoder.c: 125: --os.encoder1Count;
 46979  011C48  0767               	decf	(_os+3)& (0+255),f,b	;volatile
 46980                           
 46981                           ; BSR set to: 1
 46982                           ;encoder.c: 126: if(config.beep_duration)
 46983  011C4A  51AA               	movf	(_config+21)& (0+255),w,b
 46984  011C4C  B4D8               	btfsc	status,2,c
 46985  011C4E  D003               	goto	i2l2756
 46986                           
 46987                           ; BSR set to: 1
 46988                           ;encoder.c: 127: {;encoder.c: 128: LATCbits.LC7 = 1;
 46989  011C50  8E8B               	bsf	3979,7,c	;volatile
 46990                           
 46991                           ;encoder.c: 129: os.beep_count = config.beep_duration;
 46992  011C52  C1AA  F18B         	movff	_config+21,_os+39	;volatile
 46993  011C56                     i2l2756:
 46994                           
 46995                           ; BSR set to: 1
 46996                           ;encoder.c: 130: };encoder.c: 131: };encoder.c: 132: };encoder.c: 134: if(PORTEbits.RE1 
      +                          && (!(enc1&0b00000010)))
 46997                           
 46998                           ; BSR set to: 1
 46999                           
 47000                           ; BSR set to: 1
 47001  011C56  B284               	btfsc	3972,1,c	;volatile
 47002                           
 47003                           ; BSR set to: 1
 47004  011C58  B346               	btfsc	_enc1& (0+255),1,b
 47005  011C5A  D008               	goto	i2l2758
 47006                           
 47007                           ; BSR set to: 1
 47008                           ;encoder.c: 135: {;encoder.c: 136: os.button1 = 1;
 47009  011C5C  0E01               	movlw	1
 47010  011C5E  6F68               	movwf	(_os+4)& (0+255),b	;volatile
 47011                           
 47012                           ;encoder.c: 137: if(config.beep_duration)
 47013  011C60  51AA               	movf	(_config+21)& (0+255),w,b
 47014  011C62  B4D8               	btfsc	status,2,c
 47015  011C64  D003               	goto	i2l2758
 47016                           
 47017                           ; BSR set to: 1
 47018                           ;encoder.c: 138: {;encoder.c: 139: LATCbits.LC7 = 1;
 47019  011C66  8E8B               	bsf	3979,7,c	;volatile
 47020                           
 47021                           ;encoder.c: 140: os.beep_count = config.beep_duration;
 47022  011C68  C1AA  F18B         	movff	_config+21,_os+39	;volatile
 47023  011C6C                     i2l2758:
 47024                           
 47025                           ; BSR set to: 1
 47026                           ;encoder.c: 141: };encoder.c: 142: };encoder.c: 144: if((!PORTEbits.RE1) && (enc1&0b0000
      +                          0010))
 47027                           
 47028                           ; BSR set to: 1
 47029  011C6C  A284               	btfss	3972,1,c	;volatile
 47030                           
 47031                           ; BSR set to: 1
 47032  011C6E  A346               	btfss	_enc1& (0+255),1,b
 47033  011C70  D001               	goto	i2l2759
 47034                           
 47035                           ; BSR set to: 1
 47036                           ;encoder.c: 145: {;encoder.c: 146: os.button1 = -1;
 47037  011C72  6968               	setf	(_os+4)& (0+255),b	;volatile
 47038  011C74                     i2l2759:
 47039                           
 47040                           ; BSR set to: 1
 47041                           ;encoder.c: 147: };encoder.c: 149: enc1 = PORTE & 0b00000111;
 47042                           
 47043                           ; BSR set to: 1
 47044  011C74  5084               	movf	3972,w,c	;volatile
 47045  011C76  0B07               	andlw	7
 47046  011C78  6F46               	movwf	_enc1& (0+255),b
 47047  011C7A                     i2l2750:
 47048                           
 47049                           ; BSR set to: 1
 47050                           ;encoder.c: 150: };encoder.c: 152: if(enc2 != (PORTA&0b00000111))
 47051  011C7A  5080               	movf	3968,w,c	;volatile
 47052  011C7C  0B07               	andlw	7
 47053  011C7E  1945               	xorwf	_enc2& (0+255),w,b
 47054  011C80  B4D8               	btfsc	status,2,c
 47055  011C82  D033               	goto	i2l2760
 47056                           
 47057                           ; BSR set to: 1
 47058                           ;encoder.c: 153: {;encoder.c: 155: if(PORTAbits.RA2 && PORTAbits.RA0 && (!(enc2&0b000001
      +                          00)))
 47059  011C84  B480               	btfsc	3968,2,c	;volatile
 47060                           
 47061                           ; BSR set to: 1
 47062  011C86  A080               	btfss	3968,0,c	;volatile
 47063  011C88  D00D               	goto	i2l2763
 47064                           
 47065                           ; BSR set to: 1
 47066  011C8A  B545               	btfsc	_enc2& (0+255),2,b
 47067  011C8C  D00B               	goto	i2l2763
 47068                           
 47069                           ; BSR set to: 1
 47070                           ;encoder.c: 156: {;encoder.c: 157: if(os.encoder2Count<127)
 47071  011C8E  0E7F               	movlw	127
 47072  011C90  1969               	xorwf	(_os+5)& (0+255),w,b	;volatile
 47073  011C92  B4D8               	btfsc	status,2,c
 47074  011C94  D007               	goto	i2l2763
 47075                           
 47076                           ; BSR set to: 1
 47077                           ;encoder.c: 158: {;encoder.c: 159: ++os.encoder2Count;
 47078  011C96  2B69               	incf	(_os+5)& (0+255),f,b	;volatile
 47079                           
 47080                           ; BSR set to: 1
 47081                           ;encoder.c: 160: if(config.beep_duration)
 47082  011C98  51AA               	movf	(_config+21)& (0+255),w,b
 47083  011C9A  B4D8               	btfsc	status,2,c
 47084  011C9C  D003               	goto	i2l2763
 47085                           
 47086                           ; BSR set to: 1
 47087                           ;encoder.c: 161: {;encoder.c: 162: LATCbits.LC7 = 1;
 47088  011C9E  8E8B               	bsf	3979,7,c	;volatile
 47089                           
 47090                           ;encoder.c: 163: os.beep_count = config.beep_duration;
 47091  011CA0  C1AA  F18B         	movff	_config+21,_os+39	;volatile
 47092  011CA4                     i2l2763:
 47093                           
 47094                           ; BSR set to: 1
 47095                           ;encoder.c: 164: };encoder.c: 165: };encoder.c: 166: };encoder.c: 168: if(PORTAbits.RA0 
      +                          && PORTAbits.RA2 && (!(enc2&0b00000001)))
 47096                           
 47097                           ; BSR set to: 1
 47098                           
 47099                           ; BSR set to: 1
 47100  011CA4  B080               	btfsc	3968,0,c	;volatile
 47101                           
 47102                           ; BSR set to: 1
 47103  011CA6  A480               	btfss	3968,2,c	;volatile
 47104  011CA8  D00E               	goto	i2l2766
 47105                           
 47106                           ; BSR set to: 1
 47107  011CAA  B145               	btfsc	_enc2& (0+255),0,b
 47108  011CAC  D00C               	goto	i2l2766
 47109                           
 47110                           ; BSR set to: 1
 47111                           ;encoder.c: 169: {;encoder.c: 170: if(os.encoder2Count>-128)
 47112  011CAE  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 47113  011CB0  0A80               	xorlw	128
 47114  011CB2  0FFF               	addlw	255
 47115  011CB4  A0D8               	btfss	status,0,c
 47116  011CB6  D007               	goto	i2l2766
 47117                           
 47118                           ; BSR set to: 1
 47119                           ;encoder.c: 171: {;encoder.c: 172: --os.encoder2Count;
 47120  011CB8  0769               	decf	(_os+5)& (0+255),f,b	;volatile
 47121                           
 47122                           ; BSR set to: 1
 47123                           ;encoder.c: 173: if(config.beep_duration)
 47124  011CBA  51AA               	movf	(_config+21)& (0+255),w,b
 47125  011CBC  B4D8               	btfsc	status,2,c
 47126  011CBE  D003               	goto	i2l2766
 47127                           
 47128                           ; BSR set to: 1
 47129                           ;encoder.c: 174: {;encoder.c: 175: LATCbits.LC7 = 1;
 47130  011CC0  8E8B               	bsf	3979,7,c	;volatile
 47131                           
 47132                           ;encoder.c: 176: os.beep_count = config.beep_duration;
 47133  011CC2  C1AA  F18B         	movff	_config+21,_os+39	;volatile
 47134  011CC6                     i2l2766:
 47135                           
 47136                           ; BSR set to: 1
 47137                           ;encoder.c: 177: };encoder.c: 178: };encoder.c: 179: };encoder.c: 181: if(PORTAbits.RA1 
      +                          && (!(enc2&0b00000010)))
 47138                           
 47139                           ; BSR set to: 1
 47140                           
 47141                           ; BSR set to: 1
 47142  011CC6  B280               	btfsc	3968,1,c	;volatile
 47143                           
 47144                           ; BSR set to: 1
 47145  011CC8  B345               	btfsc	_enc2& (0+255),1,b
 47146  011CCA  D008               	goto	i2l2768
 47147                           
 47148                           ; BSR set to: 1
 47149                           ;encoder.c: 182: {;encoder.c: 183: os.button2 = 1;
 47150  011CCC  0E01               	movlw	1
 47151  011CCE  6F6A               	movwf	(_os+6)& (0+255),b	;volatile
 47152                           
 47153                           ;encoder.c: 184: if(config.beep_duration)
 47154  011CD0  51AA               	movf	(_config+21)& (0+255),w,b
 47155  011CD2  B4D8               	btfsc	status,2,c
 47156  011CD4  D003               	goto	i2l2768
 47157                           
 47158                           ; BSR set to: 1
 47159                           ;encoder.c: 185: {;encoder.c: 186: LATCbits.LC7 = 1;
 47160  011CD6  8E8B               	bsf	3979,7,c	;volatile
 47161                           
 47162                           ;encoder.c: 187: os.beep_count = config.beep_duration;
 47163  011CD8  C1AA  F18B         	movff	_config+21,_os+39	;volatile
 47164  011CDC                     i2l2768:
 47165                           
 47166                           ; BSR set to: 1
 47167                           ;encoder.c: 188: };encoder.c: 189: };encoder.c: 191: if((!PORTAbits.RA1) && (enc2&0b0000
      +                          0010))
 47168                           
 47169                           ; BSR set to: 1
 47170  011CDC  A280               	btfss	3968,1,c	;volatile
 47171                           
 47172                           ; BSR set to: 1
 47173  011CDE  A345               	btfss	_enc2& (0+255),1,b
 47174  011CE0  D001               	goto	i2l2769
 47175                           
 47176                           ; BSR set to: 1
 47177                           ;encoder.c: 192: {;encoder.c: 193: os.button2 = -1;
 47178  011CE2  696A               	setf	(_os+6)& (0+255),b	;volatile
 47179  011CE4                     i2l2769:
 47180                           
 47181                           ; BSR set to: 1
 47182                           ;encoder.c: 194: };encoder.c: 196: enc2 = PORTA & 0b00000111;
 47183                           
 47184                           ; BSR set to: 1
 47185  011CE4  5080               	movf	3968,w,c	;volatile
 47186  011CE6  0B07               	andlw	7
 47187  011CE8  6F45               	movwf	_enc2& (0+255),b
 47188  011CEA                     i2l2760:
 47189                           
 47190                           ; BSR set to: 1
 47191                           ;encoder.c: 197: };encoder.c: 200: if(os.beep_count)
 47192                           
 47193                           ; BSR set to: 1
 47194  011CEA  518B               	movf	(_os+39)& (0+255),w,b	;volatile
 47195  011CEC  B4D8               	btfsc	status,2,c
 47196  011CEE  0012               	return	
 47197                           
 47198                           ; BSR set to: 1
 47199                           ;encoder.c: 201: {;encoder.c: 202: --os.beep_count;
 47200  011CF0  078B               	decf	(_os+39)& (0+255),f,b	;volatile
 47201                           
 47202                           ; BSR set to: 1
 47203                           ;encoder.c: 203: if(!os.beep_count)
 47204  011CF2  518B               	movf	(_os+39)& (0+255),w,b	;volatile
 47205  011CF4  A4D8               	btfss	status,2,c
 47206  011CF6  0012               	return	
 47207                           
 47208                           ; BSR set to: 1
 47209                           ;encoder.c: 204: {;encoder.c: 205: LATCbits.LC7 = 0;
 47210  011CF8  9E8B               	bcf	3979,7,c	;volatile
 47211                           
 47212                           ; BSR set to: 1
 47213  011CFA  0012               	return	
 47214  011CFC                     __end_of_encoder_run:
 47215                           	opt stack 0
 47216                           tosu	equ	0xFFF
 47217                           tosh	equ	0xFFE
 47218                           tosl	equ	0xFFD
 47219                           pclatu	equ	0xFFB
 47220                           pclath	equ	0xFFA
 47221                           tblptru	equ	0xFF8
 47222                           tblptrh	equ	0xFF7
 47223                           tblptrl	equ	0xFF6
 47224                           tablat	equ	0xFF5
 47225                           prodh	equ	0xFF4
 47226                           prodl	equ	0xFF3
 47227                           intcon	equ	0xFF2
 47228                           indf0	equ	0xFEF
 47229                           postinc0	equ	0xFEE
 47230                           fsr0h	equ	0xFEA
 47231                           fsr0l	equ	0xFE9
 47232                           wreg	equ	0xFE8
 47233                           indf1	equ	0xFE7
 47234                           postinc1	equ	0xFE6
 47235                           postdec1	equ	0xFE5
 47236                           plusw1	equ	0xFE3
 47237                           fsr1h	equ	0xFE2
 47238                           fsr1l	equ	0xFE1
 47239                           indf2	equ	0xFDF
 47240                           postinc2	equ	0xFDE
 47241                           postdec2	equ	0xFDD
 47242                           plusw2	equ	0xFDB
 47243                           fsr2h	equ	0xFDA
 47244                           fsr2l	equ	0xFD9
 47245                           status	equ	0xFD8
 47246                           
 47247 ;; *************** function _motor_isr *****************
 47248 ;; Defined at:
 47249 ;;		line 672 in file "motor.c"
 47250 ;; Parameters:    Size  Location     Type
 47251 ;;		None
 47252 ;; Auto vars:     Size  Location     Type
 47253 ;;  steps_remain    4   64[COMRAM] unsigned long 
 47254 ;;  steps_until_    2   62[COMRAM] unsigned int 
 47255 ;;  steps_until_    2   60[COMRAM] unsigned int 
 47256 ;; Return value:  Size  Location     Type
 47257 ;;                  1    wreg      void 
 47258 ;; Registers used:
 47259 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 47260 ;; Tracked objects:
 47261 ;;		On entry : 0/0
 47262 ;;		On exit  : 0/0
 47263 ;;		Unchanged: 0/0
 47264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47266 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47267 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47268 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47269 ;;Total ram usage:       24 bytes
 47270 ;; Hardware stack levels used:    1
 47271 ;; Hardware stack levels required when called:    4
 47272 ;; This function calls:
 47273 ;;		_i2c_eeprom_save_position
 47274 ;; This function is called by:
 47275 ;;		_SYS_InterruptHigh
 47276 ;; This function uses a non-reentrant model
 47277 ;;
 47278                           
 47279                           	psect	text196
 47280  00B7F6                     __ptext196:
 47281                           	opt stack 0
 47282  00B7F6                     _motor_isr:
 47283                           	opt stack 13
 47284                           
 47285                           ;motor.c: 674: uint32_t steps_remaining;;motor.c: 675: uint16_t steps_until_standstill;;
      +                          motor.c: 676: uint16_t steps_until_standstill_if_accelerate;;motor.c: 679: PIR1bits.TMR2
      +                          IF = 0;
 47286                           
 47287                           ; BSR set to: 1
 47288                           ;incstack = 0
 47289  00B7F6  929E               	bcf	3998,1,c	;volatile
 47290                           
 47291                           ;motor.c: 682: if(motor_move_type==MOTOR_MOVE_TYPE_ENDLESS)
 47292  00B7F8  0101               	movlb	1	; () banked
 47293  00B7FA  0549               	decf	_motor_move_type& (0+255),w,b
 47294  00B7FC  A4D8               	btfss	status,2,c
 47295  00B7FE  D004               	goto	i2l2576
 47296                           
 47297                           ; BSR set to: 1
 47298                           ;motor.c: 683: {;motor.c: 684: motor_final_stepcount = 0xFFFFFFFF;
 47299  00B800  6915               	setf	_motor_final_stepcount& (0+255),b	;volatile
 47300  00B802  6916               	setf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 47301  00B804  6917               	setf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 47302  00B806  6918               	setf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 47303  00B808                     i2l2576:
 47304                           
 47305                           ; BSR set to: 1
 47306                           ;motor.c: 685: };motor.c: 687: if(motor_mode==MOTOR_MODE_MANUAL)
 47307                           
 47308                           ; BSR set to: 1
 47309  00B808  5147               	movf	_motor_mode& (0+255),w,b	;volatile
 47310  00B80A  A4D8               	btfss	status,2,c
 47311  00B80C  D01A               	goto	i2l2581
 47312                           
 47313                           ; BSR set to: 1
 47314                           ;motor.c: 688: {;motor.c: 690: if(LATBbits.LB1)
 47315  00B80E  A28A               	btfss	3978,1,c	;volatile
 47316  00B810  D017               	goto	i2l2578
 47317                           
 47318                           ; BSR set to: 1
 47319                           ;motor.c: 691: {;motor.c: 693: LATBbits.LB1 = 0;
 47320  00B812  928A               	bcf	3978,1,c	;volatile
 47321                           
 47322                           ; BSR set to: 1
 47323                           ;motor.c: 696: if(motor_current_stepcount==motor_final_stepcount)
 47324  00B814  5115               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 47325  00B816  1919               	xorwf	_motor_current_stepcount& (0+255),w,b	;volatile
 47326  00B818  E109               	bnz	i2u1907_41
 47327  00B81A  5116               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 47328  00B81C  191A               	xorwf	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 47329  00B81E  E106               	bnz	i2u1907_41
 47330  00B820  5117               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 47331  00B822  191B               	xorwf	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 47332  00B824  E103               	bnz	i2u1907_41
 47333  00B826  5118               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 47334  00B828  191C               	xorwf	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 47335  00B82A  A4D8               	btfss	status,2,c
 47336  00B82C                     i2u1907_41:
 47337  00B82C  0012               	return	
 47338                           
 47339                           ; BSR set to: 1
 47340                           ;motor.c: 697: {;motor.c: 700: T2CONbits.TMR2ON = 0;
 47341  00B82E  94CA               	bcf	4042,2,c	;volatile
 47342                           
 47343                           ;motor.c: 702: PIR1bits.TMR2IF = 0;
 47344  00B830  929E               	bcf	3998,1,c	;volatile
 47345                           
 47346                           ;motor.c: 703: PIE1bits.TMR2IE = 0;
 47347  00B832  929D               	bcf	3997,1,c	;volatile
 47348                           
 47349                           ; BSR set to: 1
 47350                           ;motor.c: 705: i2c_eeprom_save_position();
 47351  00B834  EC44  F0A7         	call	_i2c_eeprom_save_position	;wreg free
 47352                           
 47353                           ;motor.c: 707: os.busy = 0;
 47354  00B838  0E00               	movlw	0
 47355  00B83A  0101               	movlb	1	; () banked
 47356  00B83C  6F74               	movwf	(_os+16)& (0+255),b	;volatile
 47357                           
 47358                           ; BSR set to: 1
 47359                           ;motor.c: 708: };motor.c: 711: return;
 47360                           
 47361                           ; BSR set to: 1
 47362  00B83E  0012               	return	
 47363  00B840                     i2l2578:
 47364                           
 47365                           ; BSR set to: 1
 47366                           ;motor.c: 713: else;motor.c: 714: {;motor.c: 716: LATBbits.LB1 = 1;
 47367  00B840  828A               	bsf	3978,1,c	;volatile
 47368  00B842                     i2l2581:
 47369                           
 47370                           ; BSR set to: 1
 47371                           ;motor.c: 717: };motor.c: 718: };motor.c: 720: ++motor_current_stepcount;
 47372                           
 47373                           ; BSR set to: 1
 47374                           
 47375                           ; BSR set to: 1
 47376  00B842  0E01               	movlw	1
 47377  00B844  2719               	addwf	_motor_current_stepcount& (0+255),f,b	;volatile
 47378  00B846  0E00               	movlw	0
 47379  00B848  231A               	addwfc	(_motor_current_stepcount+1)& (0+255),f,b	;volatile
 47380  00B84A  231B               	addwfc	(_motor_current_stepcount+2)& (0+255),f,b	;volatile
 47381  00B84C  231C               	addwfc	(_motor_current_stepcount+3)& (0+255),f,b	;volatile
 47382                           
 47383                           ;motor.c: 723: os.current_position_in_steps += motor_direction;
 47384  00B84E  5148               	movf	_motor_direction& (0+255),w,b
 47385  00B850  6E2D               	movwf	??_motor_isr& (0+255),c
 47386  00B852  0E00               	movlw	0
 47387  00B854  BE2D               	btfsc	??_motor_isr& (0+255),7,c
 47388  00B856  0EFF               	movlw	255
 47389  00B858  6E2E               	movwf	(??_motor_isr+1)& (0+255),c
 47390  00B85A  6E2F               	movwf	(??_motor_isr+2)& (0+255),c
 47391  00B85C  6E30               	movwf	(??_motor_isr+3)& (0+255),c
 47392  00B85E  502D               	movf	??_motor_isr,w,c
 47393  00B860  276B               	addwf	(_os+7)& (0+255),f,b	;volatile
 47394  00B862  502E               	movf	??_motor_isr+1,w,c
 47395  00B864  236C               	addwfc	(_os+8)& (0+255),f,b	;volatile
 47396  00B866  502F               	movf	??_motor_isr+2,w,c
 47397  00B868  236D               	addwfc	(_os+9)& (0+255),f,b	;volatile
 47398  00B86A  5030               	movf	??_motor_isr+3,w,c
 47399  00B86C  236E               	addwfc	(_os+10)& (0+255),f,b	;volatile
 47400                           
 47401                           ;motor.c: 724: if(os.current_position_in_steps==config.full_circle_in_steps)
 47402  00B86E  5195               	movf	_config& (0+255),w,b
 47403  00B870  196B               	xorwf	(_os+7)& (0+255),w,b	;volatile
 47404  00B872  E114               	bnz	i2l19092
 47405  00B874  5196               	movf	(_config+1)& (0+255),w,b
 47406  00B876  196C               	xorwf	(_os+8)& (0+255),w,b	;volatile
 47407  00B878  E111               	bnz	i2l19092
 47408  00B87A  5197               	movf	(_config+2)& (0+255),w,b
 47409  00B87C  196D               	xorwf	(_os+9)& (0+255),w,b	;volatile
 47410  00B87E  E10E               	bnz	i2l19092
 47411  00B880  5198               	movf	(_config+3)& (0+255),w,b
 47412  00B882  196E               	xorwf	(_os+10)& (0+255),w,b	;volatile
 47413  00B884  A4D8               	btfss	status,2,c
 47414  00B886  D00A               	goto	i2l2582
 47415                           
 47416                           ; BSR set to: 1
 47417                           ;motor.c: 725: {;motor.c: 726: os.current_position_in_steps = 0;
 47418  00B888  0E00               	movlw	0
 47419  00B88A  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
 47420  00B88C  0E00               	movlw	0
 47421  00B88E  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
 47422  00B890  0E00               	movlw	0
 47423  00B892  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
 47424  00B894  0E00               	movlw	0
 47425  00B896  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
 47426                           
 47427                           ; BSR set to: 1
 47428                           ;motor.c: 727: ++os.absolute_position;
 47429  00B898  4B6F               	infsnz	(_os+11)& (0+255),f,b	;volatile
 47430  00B89A  2B70               	incf	(_os+12)& (0+255),f,b	;volatile
 47431  00B89C                     i2l2582:
 47432  00B89C                     i2l19092:
 47433                           
 47434                           ; BSR set to: 1
 47435                           ;motor.c: 728: };motor.c: 729: if(os.current_position_in_steps==0xFFFFFFFF)
 47436  00B89C  296B               	incf	(_os+7)& (0+255),w,b	;volatile
 47437  00B89E  E116               	bnz	i2l19098
 47438  00B8A0  296C               	incf	(_os+8)& (0+255),w,b	;volatile
 47439  00B8A2  E114               	bnz	i2l19098
 47440  00B8A4  296D               	incf	(_os+9)& (0+255),w,b	;volatile
 47441  00B8A6  E112               	bnz	i2l19098
 47442  00B8A8  296E               	incf	(_os+10)& (0+255),w,b	;volatile
 47443  00B8AA  A4D8               	btfss	status,2,c
 47444  00B8AC  D00F               	goto	i2l2583
 47445                           
 47446                           ; BSR set to: 1
 47447                           ;motor.c: 730: {;motor.c: 731: os.current_position_in_steps = (config.full_circle_in_ste
      +                          ps-1);
 47448  00B8AE  0EFF               	movlw	255
 47449  00B8B0  2595               	addwf	_config& (0+255),w,b
 47450  00B8B2  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
 47451  00B8B4  0EFF               	movlw	255
 47452  00B8B6  2196               	addwfc	(_config+1)& (0+255),w,b
 47453  00B8B8  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
 47454  00B8BA  0EFF               	movlw	255
 47455  00B8BC  2197               	addwfc	(_config+2)& (0+255),w,b
 47456  00B8BE  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
 47457  00B8C0  0EFF               	movlw	255
 47458  00B8C2  2198               	addwfc	(_config+3)& (0+255),w,b
 47459  00B8C4  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
 47460                           
 47461                           ; BSR set to: 1
 47462                           ;motor.c: 732: --os.absolute_position;
 47463  00B8C6  076F               	decf	(_os+11)& (0+255),f,b	;volatile
 47464  00B8C8  A0D8               	btfss	status,0,c
 47465  00B8CA  0770               	decf	(_os+12)& (0+255),f,b	;volatile
 47466  00B8CC                     i2l2583:
 47467  00B8CC                     i2l19098:
 47468                           
 47469                           ; BSR set to: 1
 47470                           ;motor.c: 733: };motor.c: 736: if(motor_current_stepcount==motor_next_speed_check)
 47471  00B8CC  0102               	movlb	2	; () banked
 47472  00B8CE  5138               	movf	_motor_next_speed_check& (0+255),w,b	;volatile
 47473  00B8D0  0101               	movlb	1	; () banked
 47474  00B8D2  1919               	xorwf	_motor_current_stepcount& (0+255),w,b	;volatile
 47475  00B8D4  E10F               	bnz	i2u1910_41
 47476  00B8D6  0102               	movlb	2	; () banked
 47477  00B8D8  5139               	movf	(_motor_next_speed_check+1)& (0+255),w,b	;volatile
 47478  00B8DA  0101               	movlb	1	; () banked
 47479  00B8DC  191A               	xorwf	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 47480  00B8DE  E10A               	bnz	i2u1910_41
 47481  00B8E0  0102               	movlb	2	; () banked
 47482  00B8E2  513A               	movf	(_motor_next_speed_check+2)& (0+255),w,b	;volatile
 47483  00B8E4  0101               	movlb	1	; () banked
 47484  00B8E6  191B               	xorwf	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 47485  00B8E8  E105               	bnz	i2u1910_41
 47486  00B8EA  0102               	movlb	2	; () banked
 47487  00B8EC  513B               	movf	(_motor_next_speed_check+3)& (0+255),w,b	;volatile
 47488  00B8EE  0101               	movlb	1	; () banked
 47489  00B8F0  191C               	xorwf	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 47490  00B8F2  A4D8               	btfss	status,2,c
 47491  00B8F4                     i2u1910_41:
 47492  00B8F4  0012               	return	
 47493                           
 47494                           ; BSR set to: 1
 47495                           ;motor.c: 737: {;motor.c: 739: steps_remaining = motor_final_stepcount - motor_current_s
      +                          tepcount;
 47496  00B8F6  C119  F02D         	movff	_motor_current_stepcount,??_motor_isr	;volatile
 47497  00B8FA  C11A  F02E         	movff	_motor_current_stepcount+1,??_motor_isr+1	;volatile
 47498  00B8FE  C11B  F02F         	movff	_motor_current_stepcount+2,??_motor_isr+2	;volatile
 47499  00B902  C11C  F030         	movff	_motor_current_stepcount+3,??_motor_isr+3	;volatile
 47500  00B906  1E2D               	comf	??_motor_isr,f,c
 47501  00B908  1E2E               	comf	??_motor_isr+1,f,c
 47502  00B90A  1E2F               	comf	??_motor_isr+2,f,c
 47503  00B90C  1E30               	comf	??_motor_isr+3,f,c
 47504  00B90E  2A2D               	incf	??_motor_isr,f,c
 47505  00B910  0E00               	movlw	0
 47506  00B912  222E               	addwfc	??_motor_isr+1,f,c
 47507  00B914  222F               	addwfc	??_motor_isr+2,f,c
 47508  00B916  2230               	addwfc	??_motor_isr+3,f,c
 47509  00B918  5115               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 47510  00B91A  242D               	addwf	??_motor_isr,w,c
 47511  00B91C  6E41               	movwf	motor_isr@steps_remaining,c
 47512  00B91E  5116               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 47513  00B920  202E               	addwfc	??_motor_isr+1,w,c
 47514  00B922  6E42               	movwf	motor_isr@steps_remaining+1,c
 47515  00B924  5117               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 47516  00B926  202F               	addwfc	??_motor_isr+2,w,c
 47517  00B928  6E43               	movwf	motor_isr@steps_remaining+2,c
 47518  00B92A  5118               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 47519  00B92C  2030               	addwfc	??_motor_isr+3,w,c
 47520  00B92E  6E44               	movwf	motor_isr@steps_remaining+3,c
 47521                           
 47522                           ; BSR set to: 1
 47523                           ;motor.c: 740: steps_until_standstill = motor_steps_lookup[motor_current_speed];
 47524  00B930  90D8               	bcf	status,0,c
 47525  00B932  0100               	movlb	0	; () banked
 47526  00B934  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 47527  00B936  6EF6               	movwf	tblptrl,c
 47528  00B938  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47529  00B93A  6EF7               	movwf	tblptrh,c
 47530  00B93C  0E61               	movlw	low _motor_steps_lookup
 47531  00B93E  26F6               	addwf	tblptrl,f,c
 47532  00B940  0E94               	movlw	high _motor_steps_lookup
 47533  00B942  22F7               	addwfc	tblptrh,f,c
 47534  00B944                     	if	1	;There are 3 active tblptr bytes
 47535  00B944  6AF8               	clrf	tblptru,c
 47536  00B946  0E00               	movlw	low (__mediumconst shr (0+16))
 47537  00B948  22F8               	addwfc	tblptru,f,c
 47538  00B94A                     	endif
 47539  00B94A  0009               	tblrd		*+
 47540  00B94C  CFF5 F03D          	movff	tablat,motor_isr@steps_until_standstill
 47541  00B950  000A               	tblrd		*-
 47542  00B952  CFF5 F03E          	movff	tablat,motor_isr@steps_until_standstill+1
 47543                           
 47544                           ; BSR set to: 0
 47545                           ;motor.c: 741: steps_until_standstill_if_accelerate = motor_steps_lookup[motor_current_s
      +                          peed+2];
 47546  00B956  C0FE  F02D         	movff	_motor_current_speed,??_motor_isr	;volatile
 47547  00B95A  C0FF  F02E         	movff	_motor_current_speed+1,??_motor_isr+1	;volatile
 47548  00B95E  90D8               	bcf	status,0,c
 47549  00B960  362D               	rlcf	??_motor_isr,f,c
 47550  00B962  362E               	rlcf	??_motor_isr+1,f,c
 47551  00B964  0E04               	movlw	4
 47552  00B966  262D               	addwf	??_motor_isr,f,c
 47553  00B968  0E00               	movlw	0
 47554  00B96A  222E               	addwfc	??_motor_isr+1,f,c
 47555  00B96C  0E61               	movlw	low _motor_steps_lookup
 47556  00B96E  242D               	addwf	??_motor_isr,w,c
 47557  00B970  6EF6               	movwf	tblptrl,c
 47558  00B972  0E94               	movlw	high _motor_steps_lookup
 47559  00B974  202E               	addwfc	??_motor_isr+1,w,c
 47560  00B976  6EF7               	movwf	tblptrh,c
 47561  00B978                     	if	1	;There are 3 active tblptr bytes
 47562  00B978  6AF8               	clrf	tblptru,c
 47563  00B97A  0E00               	movlw	low (__mediumconst shr (0+16))
 47564  00B97C  22F8               	addwfc	tblptru,f,c
 47565  00B97E                     	endif
 47566  00B97E  0009               	tblrd		*+
 47567  00B980  CFF5 F03F          	movff	tablat,motor_isr@steps_until_standstill_if_accelerate
 47568  00B984  000A               	tblrd		*-
 47569  00B986  CFF5 F040          	movff	tablat,motor_isr@steps_until_standstill_if_accelerate+1
 47570                           
 47571                           ;motor.c: 743: if((motor_current_speed>motor_maximum_speed) || (steps_until_standstill>=
      +                          steps_remaining))
 47572  00B98A  51FE               	movf	_motor_current_speed& (0+255),w,b	;volatile
 47573  00B98C  0101               	movlb	1	; () banked
 47574  00B98E  5D31               	subwf	_motor_maximum_speed& (0+255),w,b
 47575  00B990  0100               	movlb	0	; () banked
 47576  00B992  51FF               	movf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47577  00B994  0101               	movlb	1	; () banked
 47578  00B996  5932               	subwfb	(_motor_maximum_speed+1)& (0+255),w,b
 47579  00B998  A0D8               	btfss	status,0,c
 47580  00B99A  D010               	goto	i2u1912_40
 47581                           
 47582                           ; BSR set to: 1
 47583  00B99C  503D               	movf	motor_isr@steps_until_standstill,w,c
 47584  00B99E  6E2D               	movwf	??_motor_isr& (0+255),c
 47585  00B9A0  503E               	movf	motor_isr@steps_until_standstill+1,w,c
 47586  00B9A2  6E2E               	movwf	(??_motor_isr+1)& (0+255),c
 47587  00B9A4  6A2F               	clrf	(??_motor_isr+2)& (0+255),c
 47588  00B9A6  6A30               	clrf	(??_motor_isr+3)& (0+255),c
 47589  00B9A8  5041               	movf	motor_isr@steps_remaining,w,c
 47590  00B9AA  5C2D               	subwf	??_motor_isr,w,c
 47591  00B9AC  5042               	movf	motor_isr@steps_remaining+1,w,c
 47592  00B9AE  582E               	subwfb	??_motor_isr+1,w,c
 47593  00B9B0  5043               	movf	motor_isr@steps_remaining+2,w,c
 47594  00B9B2  582F               	subwfb	??_motor_isr+2,w,c
 47595  00B9B4  5044               	movf	motor_isr@steps_remaining+3,w,c
 47596  00B9B6  5830               	subwfb	??_motor_isr+3,w,c
 47597  00B9B8  A0D8               	btfss	status,0,c
 47598  00B9BA  D0F3               	goto	i2l2585
 47599  00B9BC                     i2u1912_40:
 47600                           
 47601                           ; BSR set to: 1
 47602                           ;motor.c: 744: {;motor.c: 746: if(motor_current_speed>0)
 47603                           
 47604                           ; BSR set to: 1
 47605  00B9BC  0100               	movlb	0	; () banked
 47606  00B9BE  51FE               	movf	_motor_current_speed& (0+255),w,b	;volatile
 47607  00B9C0  11FF               	iorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47608  00B9C2  B4D8               	btfsc	status,2,c
 47609  00B9C4  D003               	goto	i2l2588
 47610                           
 47611                           ; BSR set to: 0
 47612                           ;motor.c: 747: {;motor.c: 748: --motor_current_speed;
 47613  00B9C6  07FE               	decf	_motor_current_speed& (0+255),f,b	;volatile
 47614  00B9C8  A0D8               	btfss	status,0,c
 47615  00B9CA  07FF               	decf	(_motor_current_speed+1)& (0+255),f,b	;volatile
 47616  00B9CC                     i2l2588:
 47617                           
 47618                           ; BSR set to: 0
 47619                           ;motor.c: 749: };motor.c: 752: if((motor_mode==MOTOR_MODE_PWM) && (motor_postscaler_look
      +                          up[motor_current_speed]>0))
 47620                           
 47621                           ; BSR set to: 0
 47622  00B9CC  0101               	movlb	1	; () banked
 47623  00B9CE  0547               	decf	_motor_mode& (0+255),w,b	;volatile
 47624  00B9D0  A4D8               	btfss	status,2,c
 47625  00B9D2  D026               	goto	i2l2589
 47626                           
 47627                           ; BSR set to: 1
 47628  00B9D4  0E2F               	movlw	low _motor_postscaler_lookup
 47629  00B9D6  0100               	movlb	0	; () banked
 47630  00B9D8  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 47631  00B9DA  6EF6               	movwf	tblptrl,c
 47632  00B9DC  0E98               	movlw	high _motor_postscaler_lookup
 47633  00B9DE  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47634  00B9E0  6EF7               	movwf	tblptrh,c
 47635  00B9E2                     	if	1	;There are 3 active tblptr bytes
 47636  00B9E2  6AF8               	clrf	tblptru,c
 47637  00B9E4  0E00               	movlw	low (__mediumconst shr (0+16))
 47638  00B9E6  22F8               	addwfc	tblptru,f,c
 47639  00B9E8                     	endif
 47640  00B9E8  0008               	tblrd		*
 47641  00B9EA  50F5               	movf	tablat,w,c
 47642  00B9EC  0900               	iorlw	0
 47643  00B9EE  B4D8               	btfsc	status,2,c
 47644  00B9F0  D017               	goto	i2l2589
 47645                           
 47646                           ; BSR set to: 0
 47647                           ;motor.c: 753: {;motor.c: 755: motor_mode = MOTOR_MODE_MANUAL;
 47648  00B9F2  0E00               	movlw	0
 47649  00B9F4  0101               	movlb	1	; () banked
 47650  00B9F6  6F47               	movwf	_motor_mode& (0+255),b	;volatile
 47651                           
 47652                           ; BSR set to: 1
 47653                           ;motor.c: 758: LATBbits.LB1 = 1;
 47654  00B9F8  828A               	bsf	3978,1,c	;volatile
 47655                           
 47656                           ;motor.c: 759: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 47657  00B9FA  0E55               	movlw	85
 47658  00B9FC  6EA7               	movwf	4007,c	;volsfr
 47659  00B9FE  0EAA               	movlw	170
 47660  00BA00  6EA7               	movwf	4007,c	;volsfr
 47661                           
 47662                           ; BSR set to: 1
 47663  00BA02  010E               	movlb	14	; () banked
 47664  00BA04  91BF               	bcf	191,0,b	;volatile
 47665                           
 47666                           ;motor.c: 760: RPOR4 = 0;
 47667  00BA06  0E00               	movlw	0
 47668  00BA08  6FC4               	movwf	196,b	;volatile
 47669                           
 47670                           ;motor.c: 761: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 47671  00BA0A  0E55               	movlw	85
 47672  00BA0C  6EA7               	movwf	4007,c	;volsfr
 47673  00BA0E  0EAA               	movlw	170
 47674  00BA10  6EA7               	movwf	4007,c	;volsfr
 47675                           
 47676                           ; BSR set to: 14
 47677  00BA12  81BF               	bsf	191,0,b	;volatile
 47678                           
 47679                           ;motor.c: 764: TMR2 = 0;
 47680  00BA14  0E00               	movlw	0
 47681  00BA16  6ECC               	movwf	4044,c	;volatile
 47682                           
 47683                           ; BSR set to: 14
 47684                           ;motor.c: 767: CCP1CONbits.CCP1M = 0b0000;
 47685  00BA18  90BA               	bcf	4026,0,c	;volatile
 47686  00BA1A  92BA               	bcf	4026,1,c	;volatile
 47687  00BA1C  94BA               	bcf	4026,2,c	;volatile
 47688  00BA1E  96BA               	bcf	4026,3,c	;volatile
 47689  00BA20                     i2l2589:
 47690                           
 47691                           ;motor.c: 768: };motor.c: 772: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_s
      +                          peed];
 47692                           
 47693                           ; BSR set to: 14
 47694  00BA20  0EFD               	movlw	low _motor_prescaler_lookup
 47695  00BA22  0100               	movlb	0	; () banked
 47696  00BA24  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 47697  00BA26  6EF6               	movwf	tblptrl,c
 47698  00BA28  0E9B               	movlw	high _motor_prescaler_lookup
 47699  00BA2A  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47700  00BA2C  6EF7               	movwf	tblptrh,c
 47701  00BA2E                     	if	1	;There are 3 active tblptr bytes
 47702  00BA2E  6AF8               	clrf	tblptru,c
 47703  00BA30  0E00               	movlw	low (__mediumconst shr (0+16))
 47704  00BA32  22F8               	addwfc	tblptru,f,c
 47705  00BA34                     	endif
 47706  00BA34  0008               	tblrd		*
 47707  00BA36  CFF5 F02D          	movff	tablat,??_motor_isr
 47708  00BA3A  50CA               	movf	4042,w,c	;volatile
 47709  00BA3C  182D               	xorwf	??_motor_isr,w,c
 47710  00BA3E  0BFC               	andlw	-4
 47711  00BA40  182D               	xorwf	??_motor_isr,w,c
 47712  00BA42  6ECA               	movwf	4042,c	;volatile
 47713                           
 47714                           ; BSR set to: 0
 47715                           ;motor.c: 774: PR2 = motor_period_lookup[motor_current_speed];
 47716  00BA44  0E16               	movlw	low _motor_period_lookup
 47717  00BA46  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 47718  00BA48  6EF6               	movwf	tblptrl,c
 47719  00BA4A  0E9A               	movlw	high _motor_period_lookup
 47720  00BA4C  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47721  00BA4E  6EF7               	movwf	tblptrh,c
 47722  00BA50                     	if	1	;There are 3 active tblptr bytes
 47723  00BA50  6AF8               	clrf	tblptru,c
 47724  00BA52  0E00               	movlw	low (__mediumconst shr (0+16))
 47725  00BA54  22F8               	addwfc	tblptru,f,c
 47726  00BA56                     	endif
 47727  00BA56  0008               	tblrd		*
 47728  00BA58  CFF5 FFCB          	movff	tablat,4043	;volatile
 47729                           
 47730                           ; BSR set to: 0
 47731                           ;motor.c: 776: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 47732  00BA5C  0E2F               	movlw	low _motor_postscaler_lookup
 47733  00BA5E  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 47734  00BA60  6EF6               	movwf	tblptrl,c
 47735  00BA62  0E98               	movlw	high _motor_postscaler_lookup
 47736  00BA64  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47737  00BA66  6EF7               	movwf	tblptrh,c
 47738  00BA68                     	if	1	;There are 3 active tblptr bytes
 47739  00BA68  6AF8               	clrf	tblptru,c
 47740  00BA6A  0E00               	movlw	low (__mediumconst shr (0+16))
 47741  00BA6C  22F8               	addwfc	tblptru,f,c
 47742  00BA6E                     	endif
 47743  00BA6E  0008               	tblrd		*
 47744  00BA70  CFF5 F02D          	movff	tablat,??_motor_isr
 47745  00BA74  462D               	rlncf	??_motor_isr,f,c
 47746  00BA76  462D               	rlncf	??_motor_isr,f,c
 47747  00BA78  462D               	rlncf	??_motor_isr,f,c
 47748  00BA7A  50CA               	movf	4042,w,c	;volatile
 47749  00BA7C  182D               	xorwf	??_motor_isr,w,c
 47750  00BA7E  0B87               	andlw	-121
 47751  00BA80  182D               	xorwf	??_motor_isr,w,c
 47752  00BA82  6ECA               	movwf	4042,c	;volatile
 47753                           
 47754                           ; BSR set to: 0
 47755                           ;motor.c: 778: CCPR1L = PR2>>1;
 47756  00BA84  90D8               	bcf	status,0,c
 47757  00BA86  30CB               	rrcf	4043,w,c	;volatile
 47758  00BA88  6EBB               	movwf	4027,c	;volatile
 47759                           
 47760                           ; BSR set to: 0
 47761                           ;motor.c: 781: if(motor_current_speed>0)
 47762  00BA8A  51FE               	movf	_motor_current_speed& (0+255),w,b	;volatile
 47763  00BA8C  11FF               	iorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47764  00BA8E  B4D8               	btfsc	status,2,c
 47765  00BA90  D060               	goto	i2l2590
 47766                           
 47767                           ; BSR set to: 0
 47768                           ;motor.c: 782: {;motor.c: 783: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed] - motor_steps_lookup[motor_current_speed-1];
 47769  00BA92  0EFE               	movlw	254
 47770  00BA94  6E2D               	movwf	??_motor_isr& (0+255),c
 47771  00BA96  0EFF               	movlw	255
 47772  00BA98  6E2E               	movwf	(??_motor_isr+1)& (0+255),c
 47773  00BA9A  C0FE  F02F         	movff	_motor_current_speed,??_motor_isr+2	;volatile
 47774  00BA9E  C0FF  F030         	movff	_motor_current_speed+1,??_motor_isr+3	;volatile
 47775  00BAA2  90D8               	bcf	status,0,c
 47776  00BAA4  362F               	rlcf	??_motor_isr+2,f,c
 47777  00BAA6  3630               	rlcf	??_motor_isr+3,f,c
 47778  00BAA8  502D               	movf	??_motor_isr,w,c
 47779  00BAAA  262F               	addwf	??_motor_isr+2,f,c
 47780  00BAAC  502E               	movf	??_motor_isr+1,w,c
 47781  00BAAE  2230               	addwfc	??_motor_isr+3,f,c
 47782  00BAB0  0E61               	movlw	low _motor_steps_lookup
 47783  00BAB2  242F               	addwf	??_motor_isr+2,w,c
 47784  00BAB4  6EF6               	movwf	tblptrl,c
 47785  00BAB6  0E94               	movlw	high _motor_steps_lookup
 47786  00BAB8  2030               	addwfc	??_motor_isr+3,w,c
 47787  00BABA  6EF7               	movwf	tblptrh,c
 47788  00BABC                     	if	1	;There are 3 active tblptr bytes
 47789  00BABC  6AF8               	clrf	tblptru,c
 47790  00BABE  0E00               	movlw	low (__mediumconst shr (0+16))
 47791  00BAC0  22F8               	addwfc	tblptru,f,c
 47792  00BAC2                     	endif
 47793  00BAC2  0009               	tblrd		*+
 47794  00BAC4  CFF5 F031          	movff	tablat,??_motor_isr+4
 47795  00BAC8  0009               	tblrd		*+
 47796  00BACA  CFF5 F032          	movff	tablat,??_motor_isr+5
 47797  00BACE  5031               	movf	??_motor_isr+4,w,c
 47798  00BAD0  6E33               	movwf	(??_motor_isr+6)& (0+255),c
 47799  00BAD2  5032               	movf	??_motor_isr+5,w,c
 47800  00BAD4  6E34               	movwf	(??_motor_isr+7)& (0+255),c
 47801  00BAD6  6A35               	clrf	(??_motor_isr+8)& (0+255),c
 47802  00BAD8  6A36               	clrf	(??_motor_isr+9)& (0+255),c
 47803  00BADA  1E33               	comf	??_motor_isr+6,f,c
 47804  00BADC  1E34               	comf	??_motor_isr+7,f,c
 47805  00BADE  1E35               	comf	??_motor_isr+8,f,c
 47806  00BAE0  1E36               	comf	??_motor_isr+9,f,c
 47807  00BAE2  2A33               	incf	??_motor_isr+6,f,c
 47808  00BAE4  0E00               	movlw	0
 47809  00BAE6  2234               	addwfc	??_motor_isr+7,f,c
 47810  00BAE8  2235               	addwfc	??_motor_isr+8,f,c
 47811  00BAEA  2236               	addwfc	??_motor_isr+9,f,c
 47812  00BAEC  90D8               	bcf	status,0,c
 47813  00BAEE  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 47814  00BAF0  6EF6               	movwf	tblptrl,c
 47815  00BAF2  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47816  00BAF4  6EF7               	movwf	tblptrh,c
 47817  00BAF6  0E61               	movlw	low _motor_steps_lookup
 47818  00BAF8  26F6               	addwf	tblptrl,f,c
 47819  00BAFA  0E94               	movlw	high _motor_steps_lookup
 47820  00BAFC  22F7               	addwfc	tblptrh,f,c
 47821  00BAFE                     	if	1	;There are 3 active tblptr bytes
 47822  00BAFE  6AF8               	clrf	tblptru,c
 47823  00BB00  0E00               	movlw	low (__mediumconst shr (0+16))
 47824  00BB02  22F8               	addwfc	tblptru,f,c
 47825  00BB04                     	endif
 47826  00BB04  0009               	tblrd		*+
 47827  00BB06  CFF5 F037          	movff	tablat,??_motor_isr+10
 47828  00BB0A  0009               	tblrd		*+
 47829  00BB0C  CFF5 F038          	movff	tablat,??_motor_isr+11
 47830  00BB10  5037               	movf	??_motor_isr+10,w,c
 47831  00BB12  2433               	addwf	??_motor_isr+6,w,c
 47832  00BB14  6E39               	movwf	(??_motor_isr+12)& (0+255),c
 47833  00BB16  5038               	movf	??_motor_isr+11,w,c
 47834  00BB18  2034               	addwfc	??_motor_isr+7,w,c
 47835  00BB1A  6E3A               	movwf	(??_motor_isr+13)& (0+255),c
 47836  00BB1C  0E00               	movlw	0
 47837  00BB1E  2035               	addwfc	??_motor_isr+8,w,c
 47838  00BB20  6E3B               	movwf	(??_motor_isr+14)& (0+255),c
 47839  00BB22  0E00               	movlw	0
 47840  00BB24  2036               	addwfc	??_motor_isr+9,w,c
 47841  00BB26  6E3C               	movwf	(??_motor_isr+15)& (0+255),c
 47842  00BB28  0101               	movlb	1	; () banked
 47843  00BB2A  5119               	movf	_motor_current_stepcount& (0+255),w,b	;volatile
 47844  00BB2C  2439               	addwf	??_motor_isr+12,w,c
 47845  00BB2E  0102               	movlb	2	; () banked
 47846  00BB30  6F38               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 47847  00BB32  0101               	movlb	1	; () banked
 47848  00BB34  511A               	movf	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 47849  00BB36  203A               	addwfc	??_motor_isr+13,w,c
 47850  00BB38  0102               	movlb	2	; () banked
 47851  00BB3A  6F39               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 47852  00BB3C  0101               	movlb	1	; () banked
 47853  00BB3E  511B               	movf	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 47854  00BB40  203B               	addwfc	??_motor_isr+14,w,c
 47855  00BB42  0102               	movlb	2	; () banked
 47856  00BB44  6F3A               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 47857  00BB46  0101               	movlb	1	; () banked
 47858  00BB48  511C               	movf	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 47859  00BB4A  203C               	addwfc	??_motor_isr+15,w,c
 47860  00BB4C  0102               	movlb	2	; () banked
 47861  00BB4E  6F3B               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 47862                           
 47863                           ;motor.c: 784: }
 47864  00BB50  0012               	return	
 47865  00BB52                     i2l2590:
 47866                           
 47867                           ;motor.c: 785: else;motor.c: 786: {;motor.c: 787: motor_next_speed_check = motor_current
      +                          _stepcount + motor_steps_lookup[motor_current_speed];
 47868                           
 47869                           ; BSR set to: 2
 47870  00BB52  90D8               	bcf	status,0,c
 47871  00BB54  0100               	movlb	0	; () banked
 47872  00BB56  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 47873  00BB58  6EF6               	movwf	tblptrl,c
 47874  00BB5A  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47875  00BB5C  6EF7               	movwf	tblptrh,c
 47876  00BB5E  0E61               	movlw	low _motor_steps_lookup
 47877  00BB60  26F6               	addwf	tblptrl,f,c
 47878  00BB62  0E94               	movlw	high _motor_steps_lookup
 47879  00BB64  22F7               	addwfc	tblptrh,f,c
 47880  00BB66                     	if	1	;There are 3 active tblptr bytes
 47881  00BB66  6AF8               	clrf	tblptru,c
 47882  00BB68  0E00               	movlw	low (__mediumconst shr (0+16))
 47883  00BB6A  22F8               	addwfc	tblptru,f,c
 47884  00BB6C                     	endif
 47885  00BB6C  0009               	tblrd		*+
 47886  00BB6E  CFF5 F02D          	movff	tablat,??_motor_isr
 47887  00BB72  0009               	tblrd		*+
 47888  00BB74  CFF5 F02E          	movff	tablat,??_motor_isr+1
 47889  00BB78  502D               	movf	??_motor_isr,w,c
 47890  00BB7A  0101               	movlb	1	; () banked
 47891  00BB7C  2519               	addwf	_motor_current_stepcount& (0+255),w,b	;volatile
 47892  00BB7E  0102               	movlb	2	; () banked
 47893  00BB80  6F38               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 47894  00BB82  502E               	movf	??_motor_isr+1,w,c
 47895  00BB84  0101               	movlb	1	; () banked
 47896  00BB86  211A               	addwfc	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 47897  00BB88  0102               	movlb	2	; () banked
 47898  00BB8A  6F39               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 47899  00BB8C  0E00               	movlw	0
 47900  00BB8E  0101               	movlb	1	; () banked
 47901  00BB90  211B               	addwfc	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 47902  00BB92  0102               	movlb	2	; () banked
 47903  00BB94  6F3A               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 47904  00BB96  0E00               	movlw	0
 47905  00BB98  0101               	movlb	1	; () banked
 47906  00BB9A  211C               	addwfc	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 47907  00BB9C  0102               	movlb	2	; () banked
 47908  00BB9E  6F3B               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 47909                           
 47910                           ; BSR set to: 2
 47911                           ;motor.c: 788: };motor.c: 789: }
 47912  00BBA0  0012               	return	
 47913  00BBA2                     i2l2585:
 47914                           
 47915                           ;motor.c: 790: else if((motor_current_speed==motor_maximum_speed) || (steps_until_stands
      +                          till_if_accelerate>=steps_remaining))
 47916                           
 47917                           ; BSR set to: 2
 47918  00BBA2  0101               	movlb	1	; () banked
 47919  00BBA4  5131               	movf	_motor_maximum_speed& (0+255),w,b
 47920  00BBA6  0100               	movlb	0	; () banked
 47921  00BBA8  19FE               	xorwf	_motor_current_speed& (0+255),w,b	;volatile
 47922  00BBAA  E106               	bnz	i2u1917_40
 47923  00BBAC  0101               	movlb	1	; () banked
 47924  00BBAE  5132               	movf	(_motor_maximum_speed+1)& (0+255),w,b
 47925  00BBB0  0100               	movlb	0	; () banked
 47926  00BBB2  19FF               	xorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47927  00BBB4  B4D8               	btfsc	status,2,c
 47928  00BBB6  D010               	goto	i2u1918_40
 47929  00BBB8                     i2u1917_40:
 47930                           
 47931                           ; BSR set to: 0
 47932  00BBB8  503F               	movf	motor_isr@steps_until_standstill_if_accelerate,w,c
 47933  00BBBA  6E2D               	movwf	??_motor_isr& (0+255),c
 47934  00BBBC  5040               	movf	motor_isr@steps_until_standstill_if_accelerate+1,w,c
 47935  00BBBE  6E2E               	movwf	(??_motor_isr+1)& (0+255),c
 47936  00BBC0  6A2F               	clrf	(??_motor_isr+2)& (0+255),c
 47937  00BBC2  6A30               	clrf	(??_motor_isr+3)& (0+255),c
 47938  00BBC4  5041               	movf	motor_isr@steps_remaining,w,c
 47939  00BBC6  5C2D               	subwf	??_motor_isr,w,c
 47940  00BBC8  5042               	movf	motor_isr@steps_remaining+1,w,c
 47941  00BBCA  582E               	subwfb	??_motor_isr+1,w,c
 47942  00BBCC  5043               	movf	motor_isr@steps_remaining+2,w,c
 47943  00BBCE  582F               	subwfb	??_motor_isr+2,w,c
 47944  00BBD0  5044               	movf	motor_isr@steps_remaining+3,w,c
 47945  00BBD2  5830               	subwfb	??_motor_isr+3,w,c
 47946  00BBD4  A0D8               	btfss	status,0,c
 47947  00BBD6  D05C               	goto	i2l2593
 47948  00BBD8                     i2u1918_40:
 47949                           
 47950                           ; BSR set to: 0
 47951                           ;motor.c: 791: {;motor.c: 794: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed+1] - motor_steps_lookup[motor_current_speed];
 47952                           
 47953                           ; BSR set to: 0
 47954  00BBD8  90D8               	bcf	status,0,c
 47955  00BBDA  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 47956  00BBDC  6EF6               	movwf	tblptrl,c
 47957  00BBDE  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47958  00BBE0  6EF7               	movwf	tblptrh,c
 47959  00BBE2  0E61               	movlw	low _motor_steps_lookup
 47960  00BBE4  26F6               	addwf	tblptrl,f,c
 47961  00BBE6  0E94               	movlw	high _motor_steps_lookup
 47962  00BBE8  22F7               	addwfc	tblptrh,f,c
 47963  00BBEA                     	if	1	;There are 3 active tblptr bytes
 47964  00BBEA  6AF8               	clrf	tblptru,c
 47965  00BBEC  0E00               	movlw	low (__mediumconst shr (0+16))
 47966  00BBEE  22F8               	addwfc	tblptru,f,c
 47967  00BBF0                     	endif
 47968  00BBF0  0009               	tblrd		*+
 47969  00BBF2  CFF5 F02D          	movff	tablat,??_motor_isr
 47970  00BBF6  0009               	tblrd		*+
 47971  00BBF8  CFF5 F02E          	movff	tablat,??_motor_isr+1
 47972  00BBFC  502D               	movf	??_motor_isr,w,c
 47973  00BBFE  6E2F               	movwf	(??_motor_isr+2)& (0+255),c
 47974  00BC00  502E               	movf	??_motor_isr+1,w,c
 47975  00BC02  6E30               	movwf	(??_motor_isr+3)& (0+255),c
 47976  00BC04  6A31               	clrf	(??_motor_isr+4)& (0+255),c
 47977  00BC06  6A32               	clrf	(??_motor_isr+5)& (0+255),c
 47978  00BC08  1E2F               	comf	??_motor_isr+2,f,c
 47979  00BC0A  1E30               	comf	??_motor_isr+3,f,c
 47980  00BC0C  1E31               	comf	??_motor_isr+4,f,c
 47981  00BC0E  1E32               	comf	??_motor_isr+5,f,c
 47982  00BC10  2A2F               	incf	??_motor_isr+2,f,c
 47983  00BC12  0E00               	movlw	0
 47984  00BC14  2230               	addwfc	??_motor_isr+3,f,c
 47985  00BC16  2231               	addwfc	??_motor_isr+4,f,c
 47986  00BC18  2232               	addwfc	??_motor_isr+5,f,c
 47987  00BC1A  C0FE  F033         	movff	_motor_current_speed,??_motor_isr+6	;volatile
 47988  00BC1E  C0FF  F034         	movff	_motor_current_speed+1,??_motor_isr+7	;volatile
 47989  00BC22  90D8               	bcf	status,0,c
 47990  00BC24  3633               	rlcf	??_motor_isr+6,f,c
 47991  00BC26  3634               	rlcf	??_motor_isr+7,f,c
 47992  00BC28  0E02               	movlw	2
 47993  00BC2A  2633               	addwf	??_motor_isr+6,f,c
 47994  00BC2C  0E00               	movlw	0
 47995  00BC2E  2234               	addwfc	??_motor_isr+7,f,c
 47996  00BC30  0E61               	movlw	low _motor_steps_lookup
 47997  00BC32  2433               	addwf	??_motor_isr+6,w,c
 47998  00BC34  6EF6               	movwf	tblptrl,c
 47999  00BC36  0E94               	movlw	high _motor_steps_lookup
 48000  00BC38  2034               	addwfc	??_motor_isr+7,w,c
 48001  00BC3A  6EF7               	movwf	tblptrh,c
 48002  00BC3C                     	if	1	;There are 3 active tblptr bytes
 48003  00BC3C  6AF8               	clrf	tblptru,c
 48004  00BC3E  0E00               	movlw	low (__mediumconst shr (0+16))
 48005  00BC40  22F8               	addwfc	tblptru,f,c
 48006  00BC42                     	endif
 48007  00BC42  0009               	tblrd		*+
 48008  00BC44  CFF5 F035          	movff	tablat,??_motor_isr+8
 48009  00BC48  0009               	tblrd		*+
 48010  00BC4A  CFF5 F036          	movff	tablat,??_motor_isr+9
 48011  00BC4E  5035               	movf	??_motor_isr+8,w,c
 48012  00BC50  242F               	addwf	??_motor_isr+2,w,c
 48013  00BC52  6E37               	movwf	(??_motor_isr+10)& (0+255),c
 48014  00BC54  5036               	movf	??_motor_isr+9,w,c
 48015  00BC56  2030               	addwfc	??_motor_isr+3,w,c
 48016  00BC58  6E38               	movwf	(??_motor_isr+11)& (0+255),c
 48017  00BC5A  0E00               	movlw	0
 48018  00BC5C  2031               	addwfc	??_motor_isr+4,w,c
 48019  00BC5E  6E39               	movwf	(??_motor_isr+12)& (0+255),c
 48020  00BC60  0E00               	movlw	0
 48021  00BC62  2032               	addwfc	??_motor_isr+5,w,c
 48022  00BC64  6E3A               	movwf	(??_motor_isr+13)& (0+255),c
 48023  00BC66  0101               	movlb	1	; () banked
 48024  00BC68  5119               	movf	_motor_current_stepcount& (0+255),w,b	;volatile
 48025  00BC6A  2437               	addwf	??_motor_isr+10,w,c
 48026  00BC6C  0102               	movlb	2	; () banked
 48027  00BC6E  6F38               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 48028  00BC70  0101               	movlb	1	; () banked
 48029  00BC72  511A               	movf	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 48030  00BC74  2038               	addwfc	??_motor_isr+11,w,c
 48031  00BC76  0102               	movlb	2	; () banked
 48032  00BC78  6F39               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 48033  00BC7A  0101               	movlb	1	; () banked
 48034  00BC7C  511B               	movf	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 48035  00BC7E  2039               	addwfc	??_motor_isr+12,w,c
 48036  00BC80  0102               	movlb	2	; () banked
 48037  00BC82  6F3A               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 48038  00BC84  0101               	movlb	1	; () banked
 48039  00BC86  511C               	movf	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 48040  00BC88  203A               	addwfc	??_motor_isr+13,w,c
 48041  00BC8A  0102               	movlb	2	; () banked
 48042  00BC8C  6F3B               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 48043                           
 48044                           ;motor.c: 795: }
 48045  00BC8E  0012               	return	
 48046  00BC90                     i2l2593:
 48047                           
 48048                           ;motor.c: 796: else;motor.c: 797: {;motor.c: 799: ++motor_current_speed;
 48049                           
 48050                           ; BSR set to: 2
 48051  00BC90  0100               	movlb	0	; () banked
 48052  00BC92  4BFE               	infsnz	_motor_current_speed& (0+255),f,b	;volatile
 48053  00BC94  2BFF               	incf	(_motor_current_speed+1)& (0+255),f,b	;volatile
 48054                           
 48055                           ; BSR set to: 0
 48056                           ;motor.c: 803: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_speed];
 48057  00BC96  0EFD               	movlw	low _motor_prescaler_lookup
 48058  00BC98  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 48059  00BC9A  6EF6               	movwf	tblptrl,c
 48060  00BC9C  0E9B               	movlw	high _motor_prescaler_lookup
 48061  00BC9E  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 48062  00BCA0  6EF7               	movwf	tblptrh,c
 48063  00BCA2                     	if	1	;There are 3 active tblptr bytes
 48064  00BCA2  6AF8               	clrf	tblptru,c
 48065  00BCA4  0E00               	movlw	low (__mediumconst shr (0+16))
 48066  00BCA6  22F8               	addwfc	tblptru,f,c
 48067  00BCA8                     	endif
 48068  00BCA8  0008               	tblrd		*
 48069  00BCAA  CFF5 F02D          	movff	tablat,??_motor_isr
 48070  00BCAE  50CA               	movf	4042,w,c	;volatile
 48071  00BCB0  182D               	xorwf	??_motor_isr,w,c
 48072  00BCB2  0BFC               	andlw	-4
 48073  00BCB4  182D               	xorwf	??_motor_isr,w,c
 48074  00BCB6  6ECA               	movwf	4042,c	;volatile
 48075                           
 48076                           ; BSR set to: 0
 48077                           ;motor.c: 805: PR2 = motor_period_lookup[motor_current_speed];
 48078  00BCB8  0E16               	movlw	low _motor_period_lookup
 48079  00BCBA  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 48080  00BCBC  6EF6               	movwf	tblptrl,c
 48081  00BCBE  0E9A               	movlw	high _motor_period_lookup
 48082  00BCC0  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 48083  00BCC2  6EF7               	movwf	tblptrh,c
 48084  00BCC4                     	if	1	;There are 3 active tblptr bytes
 48085  00BCC4  6AF8               	clrf	tblptru,c
 48086  00BCC6  0E00               	movlw	low (__mediumconst shr (0+16))
 48087  00BCC8  22F8               	addwfc	tblptru,f,c
 48088  00BCCA                     	endif
 48089  00BCCA  0008               	tblrd		*
 48090  00BCCC  CFF5 FFCB          	movff	tablat,4043	;volatile
 48091                           
 48092                           ; BSR set to: 0
 48093                           ;motor.c: 807: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 48094  00BCD0  0E2F               	movlw	low _motor_postscaler_lookup
 48095  00BCD2  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 48096  00BCD4  6EF6               	movwf	tblptrl,c
 48097  00BCD6  0E98               	movlw	high _motor_postscaler_lookup
 48098  00BCD8  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 48099  00BCDA  6EF7               	movwf	tblptrh,c
 48100  00BCDC                     	if	1	;There are 3 active tblptr bytes
 48101  00BCDC  6AF8               	clrf	tblptru,c
 48102  00BCDE  0E00               	movlw	low (__mediumconst shr (0+16))
 48103  00BCE0  22F8               	addwfc	tblptru,f,c
 48104  00BCE2                     	endif
 48105  00BCE2  0008               	tblrd		*
 48106  00BCE4  CFF5 F02D          	movff	tablat,??_motor_isr
 48107  00BCE8  462D               	rlncf	??_motor_isr,f,c
 48108  00BCEA  462D               	rlncf	??_motor_isr,f,c
 48109  00BCEC  462D               	rlncf	??_motor_isr,f,c
 48110  00BCEE  50CA               	movf	4042,w,c	;volatile
 48111  00BCF0  182D               	xorwf	??_motor_isr,w,c
 48112  00BCF2  0B87               	andlw	-121
 48113  00BCF4  182D               	xorwf	??_motor_isr,w,c
 48114  00BCF6  6ECA               	movwf	4042,c	;volatile
 48115                           
 48116                           ; BSR set to: 0
 48117                           ;motor.c: 809: CCPR1L = PR2>>1;
 48118  00BCF8  90D8               	bcf	status,0,c
 48119  00BCFA  30CB               	rrcf	4043,w,c	;volatile
 48120  00BCFC  6EBB               	movwf	4027,c	;volatile
 48121                           
 48122                           ; BSR set to: 0
 48123                           ;motor.c: 811: if((motor_mode==MOTOR_MODE_MANUAL) && (motor_postscaler_lookup[motor_curr
      +                          ent_speed]==0))
 48124  00BCFE  0101               	movlb	1	; () banked
 48125  00BD00  5147               	movf	_motor_mode& (0+255),w,b	;volatile
 48126  00BD02  A4D8               	btfss	status,2,c
 48127  00BD04  D023               	goto	i2l2597
 48128                           
 48129                           ; BSR set to: 1
 48130  00BD06  0E2F               	movlw	low _motor_postscaler_lookup
 48131  00BD08  0100               	movlb	0	; () banked
 48132  00BD0A  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 48133  00BD0C  6EF6               	movwf	tblptrl,c
 48134  00BD0E  0E98               	movlw	high _motor_postscaler_lookup
 48135  00BD10  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 48136  00BD12  6EF7               	movwf	tblptrh,c
 48137  00BD14                     	if	1	;There are 3 active tblptr bytes
 48138  00BD14  6AF8               	clrf	tblptru,c
 48139  00BD16  0E00               	movlw	low (__mediumconst shr (0+16))
 48140  00BD18  22F8               	addwfc	tblptru,f,c
 48141  00BD1A                     	endif
 48142  00BD1A  0008               	tblrd		*
 48143  00BD1C  50F5               	movf	tablat,w,c
 48144  00BD1E  0900               	iorlw	0
 48145  00BD20  A4D8               	btfss	status,2,c
 48146  00BD22  D014               	goto	i2l2597
 48147                           
 48148                           ; BSR set to: 0
 48149                           ;motor.c: 812: {;motor.c: 814: motor_mode = MOTOR_MODE_PWM;
 48150  00BD24  0E01               	movlw	1
 48151  00BD26  0101               	movlb	1	; () banked
 48152  00BD28  6F47               	movwf	_motor_mode& (0+255),b	;volatile
 48153                           
 48154                           ;motor.c: 817: CCP1CONbits.CCP1M = 0b1100;
 48155  00BD2A  50BA               	movf	4026,w,c	;volatile
 48156  00BD2C  0BF0               	andlw	-16
 48157  00BD2E  090C               	iorlw	12
 48158  00BD30  6EBA               	movwf	4026,c	;volatile
 48159                           
 48160                           ;motor.c: 820: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 48161  00BD32  0E55               	movlw	85
 48162  00BD34  6EA7               	movwf	4007,c	;volsfr
 48163  00BD36  0EAA               	movlw	170
 48164  00BD38  6EA7               	movwf	4007,c	;volsfr
 48165                           
 48166                           ; BSR set to: 1
 48167  00BD3A  010E               	movlb	14	; () banked
 48168  00BD3C  91BF               	bcf	191,0,b	;volatile
 48169                           
 48170                           ;motor.c: 821: RPOR4 = 14;
 48171  00BD3E  0E0E               	movlw	14
 48172  00BD40  6FC4               	movwf	196,b	;volatile
 48173                           
 48174                           ;motor.c: 822: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 48175  00BD42  0E55               	movlw	85
 48176  00BD44  6EA7               	movwf	4007,c	;volsfr
 48177  00BD46  0EAA               	movlw	170
 48178  00BD48  6EA7               	movwf	4007,c	;volsfr
 48179                           
 48180                           ; BSR set to: 14
 48181  00BD4A  81BF               	bsf	191,0,b	;volatile
 48182  00BD4C                     i2l2597:
 48183                           
 48184                           ;motor.c: 823: };motor.c: 826: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed+1] - motor_steps_lookup[motor_current_speed];
 48185                           
 48186                           ; BSR set to: 14
 48187  00BD4C  90D8               	bcf	status,0,c
 48188  00BD4E  0100               	movlb	0	; () banked
 48189  00BD50  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 48190  00BD52  6EF6               	movwf	tblptrl,c
 48191  00BD54  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 48192  00BD56  6EF7               	movwf	tblptrh,c
 48193  00BD58  0E61               	movlw	low _motor_steps_lookup
 48194  00BD5A  26F6               	addwf	tblptrl,f,c
 48195  00BD5C  0E94               	movlw	high _motor_steps_lookup
 48196  00BD5E  22F7               	addwfc	tblptrh,f,c
 48197  00BD60                     	if	1	;There are 3 active tblptr bytes
 48198  00BD60  6AF8               	clrf	tblptru,c
 48199  00BD62  0E00               	movlw	low (__mediumconst shr (0+16))
 48200  00BD64  22F8               	addwfc	tblptru,f,c
 48201  00BD66                     	endif
 48202  00BD66  0009               	tblrd		*+
 48203  00BD68  CFF5 F02D          	movff	tablat,??_motor_isr
 48204  00BD6C  0009               	tblrd		*+
 48205  00BD6E  CFF5 F02E          	movff	tablat,??_motor_isr+1
 48206  00BD72  502D               	movf	??_motor_isr,w,c
 48207  00BD74  6E2F               	movwf	(??_motor_isr+2)& (0+255),c
 48208  00BD76  502E               	movf	??_motor_isr+1,w,c
 48209  00BD78  6E30               	movwf	(??_motor_isr+3)& (0+255),c
 48210  00BD7A  6A31               	clrf	(??_motor_isr+4)& (0+255),c
 48211  00BD7C  6A32               	clrf	(??_motor_isr+5)& (0+255),c
 48212  00BD7E  1E2F               	comf	??_motor_isr+2,f,c
 48213  00BD80  1E30               	comf	??_motor_isr+3,f,c
 48214  00BD82  1E31               	comf	??_motor_isr+4,f,c
 48215  00BD84  1E32               	comf	??_motor_isr+5,f,c
 48216  00BD86  2A2F               	incf	??_motor_isr+2,f,c
 48217  00BD88  0E00               	movlw	0
 48218  00BD8A  2230               	addwfc	??_motor_isr+3,f,c
 48219  00BD8C  2231               	addwfc	??_motor_isr+4,f,c
 48220  00BD8E  2232               	addwfc	??_motor_isr+5,f,c
 48221  00BD90  C0FE  F033         	movff	_motor_current_speed,??_motor_isr+6	;volatile
 48222  00BD94  C0FF  F034         	movff	_motor_current_speed+1,??_motor_isr+7	;volatile
 48223  00BD98  90D8               	bcf	status,0,c
 48224  00BD9A  3633               	rlcf	??_motor_isr+6,f,c
 48225  00BD9C  3634               	rlcf	??_motor_isr+7,f,c
 48226  00BD9E  0E02               	movlw	2
 48227  00BDA0  2633               	addwf	??_motor_isr+6,f,c
 48228  00BDA2  0E00               	movlw	0
 48229  00BDA4  2234               	addwfc	??_motor_isr+7,f,c
 48230  00BDA6  0E61               	movlw	low _motor_steps_lookup
 48231  00BDA8  2433               	addwf	??_motor_isr+6,w,c
 48232  00BDAA  6EF6               	movwf	tblptrl,c
 48233  00BDAC  0E94               	movlw	high _motor_steps_lookup
 48234  00BDAE  2034               	addwfc	??_motor_isr+7,w,c
 48235  00BDB0  6EF7               	movwf	tblptrh,c
 48236  00BDB2                     	if	1	;There are 3 active tblptr bytes
 48237  00BDB2  6AF8               	clrf	tblptru,c
 48238  00BDB4  0E00               	movlw	low (__mediumconst shr (0+16))
 48239  00BDB6  22F8               	addwfc	tblptru,f,c
 48240  00BDB8                     	endif
 48241  00BDB8  0009               	tblrd		*+
 48242  00BDBA  CFF5 F035          	movff	tablat,??_motor_isr+8
 48243  00BDBE  0009               	tblrd		*+
 48244  00BDC0  CFF5 F036          	movff	tablat,??_motor_isr+9
 48245  00BDC4  5035               	movf	??_motor_isr+8,w,c
 48246  00BDC6  242F               	addwf	??_motor_isr+2,w,c
 48247  00BDC8  6E37               	movwf	(??_motor_isr+10)& (0+255),c
 48248  00BDCA  5036               	movf	??_motor_isr+9,w,c
 48249  00BDCC  2030               	addwfc	??_motor_isr+3,w,c
 48250  00BDCE  6E38               	movwf	(??_motor_isr+11)& (0+255),c
 48251  00BDD0  0E00               	movlw	0
 48252  00BDD2  2031               	addwfc	??_motor_isr+4,w,c
 48253  00BDD4  6E39               	movwf	(??_motor_isr+12)& (0+255),c
 48254  00BDD6  0E00               	movlw	0
 48255  00BDD8  2032               	addwfc	??_motor_isr+5,w,c
 48256  00BDDA  6E3A               	movwf	(??_motor_isr+13)& (0+255),c
 48257  00BDDC  0101               	movlb	1	; () banked
 48258  00BDDE  5119               	movf	_motor_current_stepcount& (0+255),w,b	;volatile
 48259  00BDE0  2437               	addwf	??_motor_isr+10,w,c
 48260  00BDE2  0102               	movlb	2	; () banked
 48261  00BDE4  6F38               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 48262  00BDE6  0101               	movlb	1	; () banked
 48263  00BDE8  511A               	movf	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 48264  00BDEA  2038               	addwfc	??_motor_isr+11,w,c
 48265  00BDEC  0102               	movlb	2	; () banked
 48266  00BDEE  6F39               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 48267  00BDF0  0101               	movlb	1	; () banked
 48268  00BDF2  511B               	movf	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 48269  00BDF4  2039               	addwfc	??_motor_isr+12,w,c
 48270  00BDF6  0102               	movlb	2	; () banked
 48271  00BDF8  6F3A               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 48272  00BDFA  0101               	movlb	1	; () banked
 48273  00BDFC  511C               	movf	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 48274  00BDFE  203A               	addwfc	??_motor_isr+13,w,c
 48275  00BE00  0102               	movlb	2	; () banked
 48276  00BE02  6F3B               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 48277                           
 48278                           ; BSR set to: 2
 48279                           
 48280                           ; BSR set to: 2
 48281  00BE04  0012               	return	
 48282  00BE06                     __end_of_motor_isr:
 48283                           	opt stack 0
 48284                           tosu	equ	0xFFF
 48285                           tosh	equ	0xFFE
 48286                           tosl	equ	0xFFD
 48287                           pclatu	equ	0xFFB
 48288                           pclath	equ	0xFFA
 48289                           tblptru	equ	0xFF8
 48290                           tblptrh	equ	0xFF7
 48291                           tblptrl	equ	0xFF6
 48292                           tablat	equ	0xFF5
 48293                           prodh	equ	0xFF4
 48294                           prodl	equ	0xFF3
 48295                           intcon	equ	0xFF2
 48296                           indf0	equ	0xFEF
 48297                           postinc0	equ	0xFEE
 48298                           fsr0h	equ	0xFEA
 48299                           fsr0l	equ	0xFE9
 48300                           wreg	equ	0xFE8
 48301                           indf1	equ	0xFE7
 48302                           postinc1	equ	0xFE6
 48303                           postdec1	equ	0xFE5
 48304                           plusw1	equ	0xFE3
 48305                           fsr1h	equ	0xFE2
 48306                           fsr1l	equ	0xFE1
 48307                           indf2	equ	0xFDF
 48308                           postinc2	equ	0xFDE
 48309                           postdec2	equ	0xFDD
 48310                           plusw2	equ	0xFDB
 48311                           fsr2h	equ	0xFDA
 48312                           fsr2l	equ	0xFD9
 48313                           status	equ	0xFD8
 48314                           
 48315 ;; *************** function _i2c_eeprom_save_position *****************
 48316 ;; Defined at:
 48317 ;;		line 293 in file "i2c.c"
 48318 ;; Parameters:    Size  Location     Type
 48319 ;;		None
 48320 ;; Auto vars:     Size  Location     Type
 48321 ;;  buffer          7   37[COMRAM] unsigned char [7]
 48322 ;; Return value:  Size  Location     Type
 48323 ;;                  1    wreg      void 
 48324 ;; Registers used:
 48325 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 48326 ;; Tracked objects:
 48327 ;;		On entry : 0/0
 48328 ;;		On exit  : 0/0
 48329 ;;		Unchanged: 0/0
 48330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48332 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48334 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48335 ;;Total ram usage:        7 bytes
 48336 ;; Hardware stack levels used:    1
 48337 ;; Hardware stack levels required when called:    3
 48338 ;; This function calls:
 48339 ;;		_i2c_eeprom_write
 48340 ;;		i2_memcpy
 48341 ;; This function is called by:
 48342 ;;		_motor_isr
 48343 ;; This function uses a non-reentrant model
 48344 ;;
 48345                           
 48346                           	psect	text197
 48347  014E88                     __ptext197:
 48348                           	opt stack 0
 48349  014E88                     _i2c_eeprom_save_position:
 48350                           	opt stack 13
 48351                           
 48352                           ;i2c.c: 295: uint8_t buffer[7];;i2c.c: 301: memcpy(&buffer[0], &os.current_position_in_s
      +                          teps, 4);
 48353                           
 48354                           ;incstack = 0
 48355  014E88  0E26               	movlw	low i2c_eeprom_save_position@buffer
 48356  014E8A  6E01               	movwf	i2memcpy@d1,c
 48357  014E8C  0E00               	movlw	high i2c_eeprom_save_position@buffer
 48358  014E8E  6E02               	movwf	i2memcpy@d1+1,c
 48359  014E90  0E6B               	movlw	low (_os+7)
 48360  014E92  6E03               	movwf	i2memcpy@s1,c
 48361  014E94  0E01               	movlw	high (_os+7)
 48362  014E96  6E04               	movwf	i2memcpy@s1+1,c
 48363  014E98  0E00               	movlw	0
 48364  014E9A  6E06               	movwf	i2memcpy@n+1,c
 48365  014E9C  0E04               	movlw	4
 48366  014E9E  6E05               	movwf	i2memcpy@n,c
 48367  014EA0  EC2E  F0A5         	call	i2_memcpy	;wreg free
 48368                           
 48369                           ;i2c.c: 302: memcpy(&buffer[4], &os.absolute_position, 2);
 48370  014EA4  0E2A               	movlw	low (i2c_eeprom_save_position@buffer+4)
 48371  014EA6  6E01               	movwf	i2memcpy@d1,c
 48372  014EA8  0E00               	movlw	high (i2c_eeprom_save_position@buffer+4)
 48373  014EAA  6E02               	movwf	i2memcpy@d1+1,c
 48374  014EAC  0E6F               	movlw	low (_os+11)
 48375  014EAE  6E03               	movwf	i2memcpy@s1,c
 48376  014EB0  0E01               	movlw	high (_os+11)
 48377  014EB2  6E04               	movwf	i2memcpy@s1+1,c
 48378  014EB4  0E00               	movlw	0
 48379  014EB6  6E06               	movwf	i2memcpy@n+1,c
 48380  014EB8  0E02               	movlw	2
 48381  014EBA  6E05               	movwf	i2memcpy@n,c
 48382  014EBC  EC2E  F0A5         	call	i2_memcpy	;wreg free
 48383                           
 48384                           ;i2c.c: 303: buffer[6] = os.approach_direction;
 48385  014EC0  C177  F02C         	movff	_os+19,i2c_eeprom_save_position@buffer+6	;volatile
 48386                           
 48387                           ;i2c.c: 306: i2c_eeprom_write(0x200, &buffer[0], 7);
 48388  014EC4  0E02               	movlw	2
 48389  014EC6  6E0C               	movwf	i2c_eeprom_write@address+1,c
 48390  014EC8  0E00               	movlw	0
 48391  014ECA  6E0B               	movwf	i2c_eeprom_write@address,c
 48392  014ECC  0E26               	movlw	low i2c_eeprom_save_position@buffer
 48393  014ECE  6E0D               	movwf	i2c_eeprom_write@data,c
 48394  014ED0  0E00               	movlw	high i2c_eeprom_save_position@buffer
 48395  014ED2  6E0E               	movwf	i2c_eeprom_write@data+1,c
 48396  014ED4  0E07               	movlw	7
 48397  014ED6  6E0F               	movwf	i2c_eeprom_write@length,c
 48398  014ED8  EC09  F0A0         	call	_i2c_eeprom_write	;wreg free
 48399  014EDC  0012               	return		;funcret
 48400  014EDE                     __end_of_i2c_eeprom_save_position:
 48401                           	opt stack 0
 48402                           tosu	equ	0xFFF
 48403                           tosh	equ	0xFFE
 48404                           tosl	equ	0xFFD
 48405                           pclatu	equ	0xFFB
 48406                           pclath	equ	0xFFA
 48407                           tblptru	equ	0xFF8
 48408                           tblptrh	equ	0xFF7
 48409                           tblptrl	equ	0xFF6
 48410                           tablat	equ	0xFF5
 48411                           prodh	equ	0xFF4
 48412                           prodl	equ	0xFF3
 48413                           intcon	equ	0xFF2
 48414                           indf0	equ	0xFEF
 48415                           postinc0	equ	0xFEE
 48416                           fsr0h	equ	0xFEA
 48417                           fsr0l	equ	0xFE9
 48418                           wreg	equ	0xFE8
 48419                           indf1	equ	0xFE7
 48420                           postinc1	equ	0xFE6
 48421                           postdec1	equ	0xFE5
 48422                           plusw1	equ	0xFE3
 48423                           fsr1h	equ	0xFE2
 48424                           fsr1l	equ	0xFE1
 48425                           indf2	equ	0xFDF
 48426                           postinc2	equ	0xFDE
 48427                           postdec2	equ	0xFDD
 48428                           plusw2	equ	0xFDB
 48429                           fsr2h	equ	0xFDA
 48430                           fsr2l	equ	0xFD9
 48431                           status	equ	0xFD8
 48432                           
 48433 ;; *************** function _i2c_eeprom_write *****************
 48434 ;; Defined at:
 48435 ;;		line 256 in file "i2c.c"
 48436 ;; Parameters:    Size  Location     Type
 48437 ;;  address         2   10[COMRAM] unsigned int 
 48438 ;;  data            2   12[COMRAM] PTR unsigned char 
 48439 ;;		 -> i2c_eeprom_save_position@buffer(7), i2c_eeprom_writeInt16@data(2), i2c_eeprom_writeUint32@data(4), i2c_eeprom_wr
      +iteUint16@data(2), 
 48440 ;;  length          1   14[COMRAM] unsigned char 
 48441 ;; Auto vars:     Size  Location     Type
 48442 ;;  dat            17   18[COMRAM] unsigned char [17]
 48443 ;;  cntr            1   36[COMRAM] unsigned char 
 48444 ;;  slave_addres    1   35[COMRAM] unsigned char 
 48445 ;; Return value:  Size  Location     Type
 48446 ;;                  1    wreg      void 
 48447 ;; Registers used:
 48448 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 48449 ;; Tracked objects:
 48450 ;;		On entry : 0/0
 48451 ;;		On exit  : 0/0
 48452 ;;		Unchanged: 0/0
 48453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48454 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48455 ;;      Locals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48456 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48457 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48458 ;;Total ram usage:       27 bytes
 48459 ;; Hardware stack levels used:    1
 48460 ;; Hardware stack levels required when called:    2
 48461 ;; This function calls:
 48462 ;;		i2__i2c_eeprom_busy
 48463 ;;		i2__i2c_write
 48464 ;; This function is called by:
 48465 ;;		_i2c_eeprom_save_position
 48466 ;;		_i2c_eeprom_writeUint16
 48467 ;;		_i2c_eeprom_writeUint32
 48468 ;;		_i2c_eeprom_writeInt16
 48469 ;; This function uses a non-reentrant model
 48470 ;;
 48471                           
 48472                           	psect	text198
 48473  014012                     __ptext198:
 48474                           	opt stack 0
 48475  014012                     _i2c_eeprom_write:
 48476                           	opt stack 13
 48477                           
 48478                           ;i2c.c: 258: uint8_t cntr;;i2c.c: 259: uint8_t slave_address;;i2c.c: 260: uint8_t dat[17
      +                          ];;i2c.c: 262: slave_address = 0b10100000 | ((address&0b0000011100000000)>>7);
 48479                           
 48480                           ;incstack = 0
 48481  014012  C00B  F010         	movff	i2c_eeprom_write@address,??_i2c_eeprom_write
 48482  014016  C00C  F011         	movff	i2c_eeprom_write@address+1,??_i2c_eeprom_write+1
 48483  01401A  0E07               	movlw	7
 48484  01401C  6E12               	movwf	(??_i2c_eeprom_write+2)& (0+255),c
 48485  01401E                     i2u1509_45:
 48486  01401E  90D8               	bcf	status,0,c
 48487  014020  3211               	rrcf	??_i2c_eeprom_write+1,f,c
 48488  014022  3210               	rrcf	??_i2c_eeprom_write,f,c
 48489  014024  2E12               	decfsz	(??_i2c_eeprom_write+2)& (0+255),f,c
 48490  014026  D7FB               	goto	i2u1509_45
 48491  014028  5010               	movf	??_i2c_eeprom_write,w,c
 48492  01402A  0B0E               	andlw	14
 48493  01402C  09A0               	iorlw	160
 48494  01402E  6E24               	movwf	i2c_eeprom_write@slave_address,c
 48495                           
 48496                           ;i2c.c: 263: dat[0] = address & 0xFF;
 48497  014030  C00B  F013         	movff	i2c_eeprom_write@address,i2c_eeprom_write@dat
 48498                           
 48499                           ;i2c.c: 265: length &= 0b00001111;
 48500  014034  0E0F               	movlw	15
 48501  014036  160F               	andwf	i2c_eeprom_write@length,f,c
 48502                           
 48503                           ;i2c.c: 266: for(cntr=0; cntr<length; ++cntr)
 48504  014038  0E00               	movlw	0
 48505  01403A  6E25               	movwf	i2c_eeprom_write@cntr,c
 48506  01403C  D018               	goto	i2l1211
 48507  01403E                     
 48508                           ;i2c.c: 267: {;i2c.c: 268: dat[cntr+1] = data[cntr];
 48509  01403E  5025               	movf	i2c_eeprom_write@cntr,w,c
 48510  014040  0D01               	mullw	1
 48511  014042  50F3               	movf	prodl,w,c
 48512  014044  240D               	addwf	i2c_eeprom_write@data,w,c
 48513  014046  6ED9               	movwf	fsr2l,c
 48514  014048  50F4               	movf	prodh,w,c
 48515  01404A  200E               	addwfc	i2c_eeprom_write@data+1,w,c
 48516  01404C  6EDA               	movwf	fsr2h,c
 48517  01404E  5025               	movf	i2c_eeprom_write@cntr,w,c
 48518  014050  6E10               	movwf	??_i2c_eeprom_write& (0+255),c
 48519  014052  6A11               	clrf	(??_i2c_eeprom_write+1)& (0+255),c
 48520  014054  0E01               	movlw	1
 48521  014056  2610               	addwf	??_i2c_eeprom_write,f,c
 48522  014058  0E00               	movlw	0
 48523  01405A  2211               	addwfc	??_i2c_eeprom_write+1,f,c
 48524  01405C  0E13               	movlw	low i2c_eeprom_write@dat
 48525  01405E  2410               	addwf	??_i2c_eeprom_write,w,c
 48526  014060  6EE1               	movwf	fsr1l,c
 48527  014062  0E00               	movlw	high i2c_eeprom_write@dat
 48528  014064  2011               	addwfc	??_i2c_eeprom_write+1,w,c
 48529  014066  6EE2               	movwf	fsr1h,c
 48530  014068  CFDF FFE7          	movff	indf2,indf1
 48531  01406C  2A25               	incf	i2c_eeprom_write@cntr,f,c
 48532  01406E                     i2l1211:
 48533  01406E  500F               	movf	i2c_eeprom_write@length,w,c
 48534  014070  5C25               	subwf	i2c_eeprom_write@cntr,w,c
 48535  014072  A0D8               	btfss	status,0,c
 48536  014074  D7E4               	goto	i2l1212
 48537  014076                     i2u1510_40:
 48538                           
 48539                           ;i2c.c: 269: };i2c.c: 272: while(_i2c_eeprom_busy());
 48540  014076  EC39  F0AE         	call	i2__i2c_eeprom_busy	;wreg free
 48541  01407A  0900               	iorlw	0
 48542  01407C  A4D8               	btfss	status,2,c
 48543  01407E  D7FB               	goto	i2u1510_40
 48544                           
 48545                           ;i2c.c: 274: _i2c_write(slave_address, &dat[0], length+1);
 48546  014080  0E13               	movlw	low i2c_eeprom_write@dat
 48547  014082  6E06               	movwf	i2__i2c_write@data,c
 48548  014084  0E00               	movlw	high i2c_eeprom_write@dat
 48549  014086  6E07               	movwf	i2__i2c_write@data+1,c
 48550  014088  280F               	incf	i2c_eeprom_write@length,w,c
 48551  01408A  6E08               	movwf	i2__i2c_write@length,c
 48552  01408C  5024               	movf	i2c_eeprom_write@slave_address,w,c
 48553  01408E  EC3E  F0AA         	call	i2__i2c_write
 48554  014092  0012               	return		;funcret
 48555  014094                     __end_of_i2c_eeprom_write:
 48556                           	opt stack 0
 48557                           tosu	equ	0xFFF
 48558                           tosh	equ	0xFFE
 48559                           tosl	equ	0xFFD
 48560                           pclatu	equ	0xFFB
 48561                           pclath	equ	0xFFA
 48562                           tblptru	equ	0xFF8
 48563                           tblptrh	equ	0xFF7
 48564                           tblptrl	equ	0xFF6
 48565                           tablat	equ	0xFF5
 48566                           prodh	equ	0xFF4
 48567                           prodl	equ	0xFF3
 48568                           intcon	equ	0xFF2
 48569                           indf0	equ	0xFEF
 48570                           postinc0	equ	0xFEE
 48571                           fsr0h	equ	0xFEA
 48572                           fsr0l	equ	0xFE9
 48573                           wreg	equ	0xFE8
 48574                           indf1	equ	0xFE7
 48575                           postinc1	equ	0xFE6
 48576                           postdec1	equ	0xFE5
 48577                           plusw1	equ	0xFE3
 48578                           fsr1h	equ	0xFE2
 48579                           fsr1l	equ	0xFE1
 48580                           indf2	equ	0xFDF
 48581                           postinc2	equ	0xFDE
 48582                           postdec2	equ	0xFDD
 48583                           plusw2	equ	0xFDB
 48584                           fsr2h	equ	0xFDA
 48585                           fsr2l	equ	0xFD9
 48586                           status	equ	0xFD8
 48587                           
 48588 ;; *************** function i2__i2c_write *****************
 48589 ;; Defined at:
 48590 ;;		line 86 in file "i2c.c"
 48591 ;; Parameters:    Size  Location     Type
 48592 ;;  slave_addres    1    wreg     unsigned char 
 48593 ;;  data            2    5[COMRAM] PTR unsigned char 
 48594 ;;		 -> i2c_display_program_custom_character@data_array(11), _ic2_display_set_cgram_address@data_array(3), _ic2_display_
      +set_ddram_address@data_array(2), i2c_display_init@init_sequence(9), 
 48595 ;;		 -> _i2c_display_send_init_sequence@init_sequence(9), i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_
      +readByte@addr(1), 
 48596 ;;		 -> i2c_eeprom_writeByte@dat(2), i2c_adc_start@configuration_byte(1), 
 48597 ;;  length          1    7[COMRAM] unsigned char 
 48598 ;; Auto vars:     Size  Location     Type
 48599 ;;  slave_addres    1    8[COMRAM] unsigned char 
 48600 ;;  _i2c_write      1    9[COMRAM] unsigned char 
 48601 ;; Return value:  Size  Location     Type
 48602 ;;                  1    wreg      void 
 48603 ;; Registers used:
 48604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 48605 ;; Tracked objects:
 48606 ;;		On entry : 0/0
 48607 ;;		On exit  : 0/0
 48608 ;;		Unchanged: 0/0
 48609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48610 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48611 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48613 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48614 ;;Total ram usage:        5 bytes
 48615 ;; Hardware stack levels used:    1
 48616 ;; Hardware stack levels required when called:    1
 48617 ;; This function calls:
 48618 ;;		i2__i2c_send
 48619 ;;		i2__i2c_start
 48620 ;;		i2__i2c_stop
 48621 ;;		i2__i2c_wait_idle
 48622 ;; This function is called by:
 48623 ;;		_i2c_eeprom_write
 48624 ;; This function uses a non-reentrant model
 48625 ;;
 48626                           
 48627                           	psect	text199
 48628  01547C                     __ptext199:
 48629                           	opt stack 0
 48630  01547C                     i2__i2c_write:
 48631                           	opt stack 13
 48632                           
 48633                           ;incstack = 0
 48634                           ;i2__i2c_write@slave_address stored from wreg
 48635  01547C  6E09               	movwf	i2__i2c_write@slave_address,c
 48636                           
 48637                           ;i2c.c: 88: uint8_t cntr;;i2c.c: 90: _i2c_wait_idle();
 48638  01547E  ECED  F0A6         	call	i2__i2c_wait_idle	;wreg free
 48639                           
 48640                           ;i2c.c: 91: _i2c_start();
 48641  015482  ECB8  F0AF         	call	i2__i2c_start	;wreg free
 48642                           
 48643                           ;i2c.c: 92: _i2c_wait_idle();
 48644  015486  ECED  F0A6         	call	i2__i2c_wait_idle	;wreg free
 48645                           
 48646                           ;i2c.c: 93: _i2c_send(slave_address);
 48647  01548A  5009               	movf	i2__i2c_write@slave_address,w,c
 48648  01548C  ECBC  F0AF         	call	i2__i2c_send
 48649                           
 48650                           ;i2c.c: 94: _i2c_wait_idle();
 48651  015490  ECED  F0A6         	call	i2__i2c_wait_idle	;wreg free
 48652                           
 48653                           ;i2c.c: 96: for(cntr=0; cntr<length; ++cntr)
 48654  015494  0E00               	movlw	0
 48655  015496  6E0A               	movwf	i2__i2c_write@cntr,c
 48656  015498  D00E               	goto	i2l1160
 48657  01549A                     
 48658                           ;i2c.c: 97: {;i2c.c: 98: _i2c_send(data[cntr]);
 48659  01549A  500A               	movf	i2__i2c_write@cntr,w,c
 48660  01549C  0D01               	mullw	1
 48661  01549E  50F3               	movf	prodl,w,c
 48662  0154A0  2406               	addwf	i2__i2c_write@data,w,c
 48663  0154A2  6ED9               	movwf	fsr2l,c
 48664  0154A4  50F4               	movf	prodh,w,c
 48665  0154A6  2007               	addwfc	i2__i2c_write@data+1,w,c
 48666  0154A8  6EDA               	movwf	fsr2h,c
 48667  0154AA  50DF               	movf	indf2,w,c
 48668  0154AC  ECBC  F0AF         	call	i2__i2c_send
 48669                           
 48670                           ;i2c.c: 99: _i2c_wait_idle();
 48671  0154B0  ECED  F0A6         	call	i2__i2c_wait_idle	;wreg free
 48672  0154B4  2A0A               	incf	i2__i2c_write@cntr,f,c
 48673  0154B6                     i2l1160:
 48674  0154B6  5008               	movf	i2__i2c_write@length,w,c
 48675  0154B8  5C0A               	subwf	i2__i2c_write@cntr,w,c
 48676  0154BA  A0D8               	btfss	status,0,c
 48677  0154BC  D7EE               	goto	i2l1161
 48678                           
 48679                           ;i2c.c: 100: };i2c.c: 102: _i2c_stop();
 48680  0154BE  ECB4  F0AF         	call	i2__i2c_stop	;wreg free
 48681  0154C2  0012               	return		;funcret
 48682  0154C4                     __end_ofi2__i2c_write:
 48683                           	opt stack 0
 48684                           tosu	equ	0xFFF
 48685                           tosh	equ	0xFFE
 48686                           tosl	equ	0xFFD
 48687                           pclatu	equ	0xFFB
 48688                           pclath	equ	0xFFA
 48689                           tblptru	equ	0xFF8
 48690                           tblptrh	equ	0xFF7
 48691                           tblptrl	equ	0xFF6
 48692                           tablat	equ	0xFF5
 48693                           prodh	equ	0xFF4
 48694                           prodl	equ	0xFF3
 48695                           intcon	equ	0xFF2
 48696                           indf0	equ	0xFEF
 48697                           postinc0	equ	0xFEE
 48698                           fsr0h	equ	0xFEA
 48699                           fsr0l	equ	0xFE9
 48700                           wreg	equ	0xFE8
 48701                           indf1	equ	0xFE7
 48702                           postinc1	equ	0xFE6
 48703                           postdec1	equ	0xFE5
 48704                           plusw1	equ	0xFE3
 48705                           fsr1h	equ	0xFE2
 48706                           fsr1l	equ	0xFE1
 48707                           indf2	equ	0xFDF
 48708                           postinc2	equ	0xFDE
 48709                           postdec2	equ	0xFDD
 48710                           plusw2	equ	0xFDB
 48711                           fsr2h	equ	0xFDA
 48712                           fsr2l	equ	0xFD9
 48713                           status	equ	0xFD8
 48714                           
 48715 ;; *************** function i2__i2c_eeprom_busy *****************
 48716 ;; Defined at:
 48717 ;;		line 171 in file "i2c.c"
 48718 ;; Parameters:    Size  Location     Type
 48719 ;;		None
 48720 ;; Auto vars:     Size  Location     Type
 48721 ;;  _i2c_eeprom_    1    5[COMRAM] unsigned char 
 48722 ;; Return value:  Size  Location     Type
 48723 ;;                  1    wreg      unsigned char 
 48724 ;; Registers used:
 48725 ;;		wreg, status,2, status,0, cstack
 48726 ;; Tracked objects:
 48727 ;;		On entry : 0/0
 48728 ;;		On exit  : 0/0
 48729 ;;		Unchanged: 0/0
 48730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48732 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48734 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48735 ;;Total ram usage:        1 bytes
 48736 ;; Hardware stack levels used:    1
 48737 ;; Hardware stack levels required when called:    1
 48738 ;; This function calls:
 48739 ;;		i2__i2c_send
 48740 ;;		i2__i2c_start
 48741 ;;		i2__i2c_stop
 48742 ;;		i2__i2c_wait_idle
 48743 ;; This function is called by:
 48744 ;;		_i2c_eeprom_write
 48745 ;; This function uses a non-reentrant model
 48746 ;;
 48747                           
 48748                           	psect	text200
 48749  015C72                     __ptext200:
 48750                           	opt stack 0
 48751  015C72                     i2__i2c_eeprom_busy:
 48752                           	opt stack 13
 48753                           
 48754                           ;i2c.c: 173: uint8_t busy;;i2c.c: 174: _i2c_wait_idle();
 48755                           
 48756                           ;incstack = 0
 48757  015C72  ECED  F0A6         	call	i2__i2c_wait_idle	;wreg free
 48758                           
 48759                           ;i2c.c: 175: _i2c_start();
 48760  015C76  ECB8  F0AF         	call	i2__i2c_start	;wreg free
 48761                           
 48762                           ;i2c.c: 176: _i2c_wait_idle();
 48763  015C7A  ECED  F0A6         	call	i2__i2c_wait_idle	;wreg free
 48764                           
 48765                           ;i2c.c: 177: _i2c_send(0b10100000);
 48766  015C7E  0EA0               	movlw	160
 48767  015C80  ECBC  F0AF         	call	i2__i2c_send
 48768                           
 48769                           ;i2c.c: 178: _i2c_wait_idle();
 48770  015C84  ECED  F0A6         	call	i2__i2c_wait_idle	;wreg free
 48771                           
 48772                           ;i2c.c: 182: busy = SSP1CON2bits.ACKSTAT;
 48773  015C88  0E00               	movlw	0
 48774  015C8A  BCC5               	btfsc	4037,6,c	;volatile
 48775  015C8C  0E01               	movlw	1
 48776  015C8E  6E06               	movwf	i2__i2c_eeprom_busy@busy,c
 48777                           
 48778                           ;i2c.c: 183: _i2c_stop();
 48779  015C90  ECB4  F0AF         	call	i2__i2c_stop	;wreg free
 48780                           
 48781                           ;i2c.c: 185: return 0;
 48782  015C94  0E00               	movlw	0
 48783  015C96  0012               	return	
 48784  015C98                     __end_ofi2__i2c_eeprom_busy:
 48785                           	opt stack 0
 48786                           tosu	equ	0xFFF
 48787                           tosh	equ	0xFFE
 48788                           tosl	equ	0xFFD
 48789                           pclatu	equ	0xFFB
 48790                           pclath	equ	0xFFA
 48791                           tblptru	equ	0xFF8
 48792                           tblptrh	equ	0xFF7
 48793                           tblptrl	equ	0xFF6
 48794                           tablat	equ	0xFF5
 48795                           prodh	equ	0xFF4
 48796                           prodl	equ	0xFF3
 48797                           intcon	equ	0xFF2
 48798                           indf0	equ	0xFEF
 48799                           postinc0	equ	0xFEE
 48800                           fsr0h	equ	0xFEA
 48801                           fsr0l	equ	0xFE9
 48802                           wreg	equ	0xFE8
 48803                           indf1	equ	0xFE7
 48804                           postinc1	equ	0xFE6
 48805                           postdec1	equ	0xFE5
 48806                           plusw1	equ	0xFE3
 48807                           fsr1h	equ	0xFE2
 48808                           fsr1l	equ	0xFE1
 48809                           indf2	equ	0xFDF
 48810                           postinc2	equ	0xFDE
 48811                           postdec2	equ	0xFDD
 48812                           plusw2	equ	0xFDB
 48813                           fsr2h	equ	0xFDA
 48814                           fsr2l	equ	0xFD9
 48815                           status	equ	0xFD8
 48816                           
 48817 ;; *************** function i2__i2c_wait_idle *****************
 48818 ;; Defined at:
 48819 ;;		line 42 in file "i2c.c"
 48820 ;; Parameters:    Size  Location     Type
 48821 ;;		None
 48822 ;; Auto vars:     Size  Location     Type
 48823 ;;		None
 48824 ;; Return value:  Size  Location     Type
 48825 ;;                  1    wreg      void 
 48826 ;; Registers used:
 48827 ;;		wreg, status,2, status,0
 48828 ;; Tracked objects:
 48829 ;;		On entry : 0/0
 48830 ;;		On exit  : 0/0
 48831 ;;		Unchanged: 0/0
 48832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48835 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48836 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48837 ;;Total ram usage:        5 bytes
 48838 ;; Hardware stack levels used:    1
 48839 ;; This function calls:
 48840 ;;		Nothing
 48841 ;; This function is called by:
 48842 ;;		i2__i2c_write
 48843 ;;		i2__i2c_eeprom_busy
 48844 ;; This function uses a non-reentrant model
 48845 ;;
 48846                           
 48847                           	psect	text201
 48848  014DDA                     __ptext201:
 48849                           	opt stack 0
 48850  014DDA                     i2__i2c_wait_idle:
 48851                           	opt stack 13
 48852                           
 48853                           ;i2c.c: 44: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 48854                           
 48855                           ;incstack = 0
 48856  014DDA  A4C7               	btfss	4039,2,c	;volatile
 48857  014DDC  D003               	goto	i2u1359_40
 48858  014DDE  6A01               	clrf	??i2__i2c_wait_idle& (0+255),c
 48859  014DE0  2A01               	incf	??i2__i2c_wait_idle& (0+255),f,c
 48860  014DE2  D001               	goto	i2u1359_48
 48861  014DE4                     i2u1359_40:
 48862  014DE4  6A01               	clrf	??i2__i2c_wait_idle& (0+255),c
 48863  014DE6                     i2u1359_48:
 48864  014DE6  A0C5               	btfss	4037,0,c	;volatile
 48865  014DE8  D003               	goto	i2u1360_40
 48866  014DEA  6A02               	clrf	(??i2__i2c_wait_idle+1)& (0+255),c
 48867  014DEC  2A02               	incf	(??i2__i2c_wait_idle+1)& (0+255),f,c
 48868  014DEE  D001               	goto	i2u1360_48
 48869  014DF0                     i2u1360_40:
 48870  014DF0  6A02               	clrf	(??i2__i2c_wait_idle+1)& (0+255),c
 48871  014DF2                     i2u1360_48:
 48872  014DF2  A2C5               	btfss	4037,1,c	;volatile
 48873  014DF4  D003               	goto	i2u1361_40
 48874  014DF6  6A03               	clrf	(??i2__i2c_wait_idle+2)& (0+255),c
 48875  014DF8  2A03               	incf	(??i2__i2c_wait_idle+2)& (0+255),f,c
 48876  014DFA  D001               	goto	i2u1361_48
 48877  014DFC                     i2u1361_40:
 48878  014DFC  6A03               	clrf	(??i2__i2c_wait_idle+2)& (0+255),c
 48879  014DFE                     i2u1361_48:
 48880  014DFE  A4C5               	btfss	4037,2,c	;volatile
 48881  014E00  D003               	goto	i2u1362_40
 48882  014E02  6A04               	clrf	(??i2__i2c_wait_idle+3)& (0+255),c
 48883  014E04  2A04               	incf	(??i2__i2c_wait_idle+3)& (0+255),f,c
 48884  014E06  D001               	goto	i2u1362_48
 48885  014E08                     i2u1362_40:
 48886  014E08  6A04               	clrf	(??i2__i2c_wait_idle+3)& (0+255),c
 48887  014E0A                     i2u1362_48:
 48888  014E0A  A6C5               	btfss	4037,3,c	;volatile
 48889  014E0C  D003               	goto	i2u1363_40
 48890  014E0E  6A05               	clrf	(??i2__i2c_wait_idle+4)& (0+255),c
 48891  014E10  2A05               	incf	(??i2__i2c_wait_idle+4)& (0+255),f,c
 48892  014E12  D001               	goto	i2u1363_48
 48893  014E14                     i2u1363_40:
 48894  014E14  6A05               	clrf	(??i2__i2c_wait_idle+4)& (0+255),c
 48895  014E16                     i2u1363_48:
 48896  014E16  A8C5               	btfss	4037,4,c	;volatile
 48897  014E18  D002               	goto	i2u1364_40
 48898  014E1A  0E01               	movlw	1
 48899  014E1C  D001               	goto	i2u1364_46
 48900  014E1E                     i2u1364_40:
 48901  014E1E  0E00               	movlw	0
 48902  014E20                     i2u1364_46:
 48903  014E20  1005               	iorwf	??i2__i2c_wait_idle+4,w,c
 48904  014E22  1004               	iorwf	??i2__i2c_wait_idle+3,w,c
 48905  014E24  1003               	iorwf	??i2__i2c_wait_idle+2,w,c
 48906  014E26  1002               	iorwf	??i2__i2c_wait_idle+1,w,c
 48907  014E28  1001               	iorwf	??i2__i2c_wait_idle,w,c
 48908  014E2A  0900               	iorlw	0
 48909  014E2C  B4D8               	btfsc	status,2,c
 48910  014E2E  0012               	return	
 48911  014E30  D7D4               	goto	i2__i2c_wait_idle
 48912  014E32                     __end_ofi2__i2c_wait_idle:
 48913                           	opt stack 0
 48914                           tosu	equ	0xFFF
 48915                           tosh	equ	0xFFE
 48916                           tosl	equ	0xFFD
 48917                           pclatu	equ	0xFFB
 48918                           pclath	equ	0xFFA
 48919                           tblptru	equ	0xFF8
 48920                           tblptrh	equ	0xFF7
 48921                           tblptrl	equ	0xFF6
 48922                           tablat	equ	0xFF5
 48923                           prodh	equ	0xFF4
 48924                           prodl	equ	0xFF3
 48925                           intcon	equ	0xFF2
 48926                           indf0	equ	0xFEF
 48927                           postinc0	equ	0xFEE
 48928                           fsr0h	equ	0xFEA
 48929                           fsr0l	equ	0xFE9
 48930                           wreg	equ	0xFE8
 48931                           indf1	equ	0xFE7
 48932                           postinc1	equ	0xFE6
 48933                           postdec1	equ	0xFE5
 48934                           plusw1	equ	0xFE3
 48935                           fsr1h	equ	0xFE2
 48936                           fsr1l	equ	0xFE1
 48937                           indf2	equ	0xFDF
 48938                           postinc2	equ	0xFDE
 48939                           postdec2	equ	0xFDD
 48940                           plusw2	equ	0xFDB
 48941                           fsr2h	equ	0xFDA
 48942                           fsr2l	equ	0xFD9
 48943                           status	equ	0xFD8
 48944                           
 48945 ;; *************** function i2__i2c_stop *****************
 48946 ;; Defined at:
 48947 ;;		line 65 in file "i2c.c"
 48948 ;; Parameters:    Size  Location     Type
 48949 ;;		None
 48950 ;; Auto vars:     Size  Location     Type
 48951 ;;		None
 48952 ;; Return value:  Size  Location     Type
 48953 ;;                  1    wreg      void 
 48954 ;; Registers used:
 48955 ;;		None
 48956 ;; Tracked objects:
 48957 ;;		On entry : 0/0
 48958 ;;		On exit  : 0/0
 48959 ;;		Unchanged: 0/0
 48960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48965 ;;Total ram usage:        0 bytes
 48966 ;; Hardware stack levels used:    1
 48967 ;; This function calls:
 48968 ;;		Nothing
 48969 ;; This function is called by:
 48970 ;;		i2__i2c_write
 48971 ;;		i2__i2c_eeprom_busy
 48972 ;; This function uses a non-reentrant model
 48973 ;;
 48974                           
 48975                           	psect	text202
 48976  015F68                     __ptext202:
 48977                           	opt stack 0
 48978  015F68                     i2__i2c_stop:
 48979                           	opt stack 13
 48980                           
 48981                           ;i2c.c: 67: SSP1CON2bits.PEN = 1;
 48982                           
 48983                           ;incstack = 0
 48984  015F68  84C5               	bsf	4037,2,c	;volatile
 48985  015F6A  A4C5               	btfss	4037,2,c	;volatile
 48986  015F6C  0012               	return	
 48987  015F6E  D7FD               	goto	i2l1143
 48988  015F70                     __end_ofi2__i2c_stop:
 48989                           	opt stack 0
 48990                           tosu	equ	0xFFF
 48991                           tosh	equ	0xFFE
 48992                           tosl	equ	0xFFD
 48993                           pclatu	equ	0xFFB
 48994                           pclath	equ	0xFFA
 48995                           tblptru	equ	0xFF8
 48996                           tblptrh	equ	0xFF7
 48997                           tblptrl	equ	0xFF6
 48998                           tablat	equ	0xFF5
 48999                           prodh	equ	0xFF4
 49000                           prodl	equ	0xFF3
 49001                           intcon	equ	0xFF2
 49002                           indf0	equ	0xFEF
 49003                           postinc0	equ	0xFEE
 49004                           fsr0h	equ	0xFEA
 49005                           fsr0l	equ	0xFE9
 49006                           wreg	equ	0xFE8
 49007                           indf1	equ	0xFE7
 49008                           postinc1	equ	0xFE6
 49009                           postdec1	equ	0xFE5
 49010                           plusw1	equ	0xFE3
 49011                           fsr1h	equ	0xFE2
 49012                           fsr1l	equ	0xFE1
 49013                           indf2	equ	0xFDF
 49014                           postinc2	equ	0xFDE
 49015                           postdec2	equ	0xFDD
 49016                           plusw2	equ	0xFDB
 49017                           fsr2h	equ	0xFDA
 49018                           fsr2l	equ	0xFD9
 49019                           status	equ	0xFD8
 49020                           
 49021 ;; *************** function i2__i2c_start *****************
 49022 ;; Defined at:
 49023 ;;		line 47 in file "i2c.c"
 49024 ;; Parameters:    Size  Location     Type
 49025 ;;		None
 49026 ;; Auto vars:     Size  Location     Type
 49027 ;;		None
 49028 ;; Return value:  Size  Location     Type
 49029 ;;                  1    wreg      void 
 49030 ;; Registers used:
 49031 ;;		None
 49032 ;; Tracked objects:
 49033 ;;		On entry : 0/0
 49034 ;;		On exit  : 0/0
 49035 ;;		Unchanged: 0/0
 49036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49041 ;;Total ram usage:        0 bytes
 49042 ;; Hardware stack levels used:    1
 49043 ;; This function calls:
 49044 ;;		Nothing
 49045 ;; This function is called by:
 49046 ;;		i2__i2c_write
 49047 ;;		i2__i2c_eeprom_busy
 49048 ;; This function uses a non-reentrant model
 49049 ;;
 49050                           
 49051                           	psect	text203
 49052  015F70                     __ptext203:
 49053                           	opt stack 0
 49054  015F70                     i2__i2c_start:
 49055                           	opt stack 13
 49056                           
 49057                           ;i2c.c: 49: SSP1CON2bits.SEN=1;
 49058                           
 49059                           ;incstack = 0
 49060  015F70  80C5               	bsf	4037,0,c	;volatile
 49061  015F72  A0C5               	btfss	4037,0,c	;volatile
 49062  015F74  0012               	return	
 49063  015F76  D7FD               	goto	i2l1128
 49064  015F78                     __end_ofi2__i2c_start:
 49065                           	opt stack 0
 49066                           tosu	equ	0xFFF
 49067                           tosh	equ	0xFFE
 49068                           tosl	equ	0xFFD
 49069                           pclatu	equ	0xFFB
 49070                           pclath	equ	0xFFA
 49071                           tblptru	equ	0xFF8
 49072                           tblptrh	equ	0xFF7
 49073                           tblptrl	equ	0xFF6
 49074                           tablat	equ	0xFF5
 49075                           prodh	equ	0xFF4
 49076                           prodl	equ	0xFF3
 49077                           intcon	equ	0xFF2
 49078                           indf0	equ	0xFEF
 49079                           postinc0	equ	0xFEE
 49080                           fsr0h	equ	0xFEA
 49081                           fsr0l	equ	0xFE9
 49082                           wreg	equ	0xFE8
 49083                           indf1	equ	0xFE7
 49084                           postinc1	equ	0xFE6
 49085                           postdec1	equ	0xFE5
 49086                           plusw1	equ	0xFE3
 49087                           fsr1h	equ	0xFE2
 49088                           fsr1l	equ	0xFE1
 49089                           indf2	equ	0xFDF
 49090                           postinc2	equ	0xFDE
 49091                           postdec2	equ	0xFDD
 49092                           plusw2	equ	0xFDB
 49093                           fsr2h	equ	0xFDA
 49094                           fsr2l	equ	0xFD9
 49095                           status	equ	0xFD8
 49096                           
 49097 ;; *************** function i2__i2c_send *****************
 49098 ;; Defined at:
 49099 ;;		line 53 in file "i2c.c"
 49100 ;; Parameters:    Size  Location     Type
 49101 ;;  dat             1    wreg     unsigned char 
 49102 ;; Auto vars:     Size  Location     Type
 49103 ;;  dat             1    0[COMRAM] unsigned char 
 49104 ;; Return value:  Size  Location     Type
 49105 ;;                  1    wreg      void 
 49106 ;; Registers used:
 49107 ;;		wreg
 49108 ;; Tracked objects:
 49109 ;;		On entry : 0/0
 49110 ;;		On exit  : 0/0
 49111 ;;		Unchanged: 0/0
 49112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49114 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49116 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49117 ;;Total ram usage:        1 bytes
 49118 ;; Hardware stack levels used:    1
 49119 ;; This function calls:
 49120 ;;		Nothing
 49121 ;; This function is called by:
 49122 ;;		i2__i2c_write
 49123 ;;		i2__i2c_eeprom_busy
 49124 ;; This function uses a non-reentrant model
 49125 ;;
 49126                           
 49127                           	psect	text204
 49128  015F78                     __ptext204:
 49129                           	opt stack 0
 49130  015F78                     i2__i2c_send:
 49131                           	opt stack 13
 49132                           
 49133                           ;incstack = 0
 49134                           ;i2__i2c_send@dat stored from wreg
 49135  015F78  6E01               	movwf	i2__i2c_send@dat,c
 49136                           
 49137                           ;i2c.c: 55: SSP1BUF = dat;
 49138  015F7A  C001  FFC9         	movff	i2__i2c_send@dat,4041	;volatile
 49139  015F7E  0012               	return		;funcret
 49140  015F80                     __end_ofi2__i2c_send:
 49141                           	opt stack 0
 49142                           tosu	equ	0xFFF
 49143                           tosh	equ	0xFFE
 49144                           tosl	equ	0xFFD
 49145                           pclatu	equ	0xFFB
 49146                           pclath	equ	0xFFA
 49147                           tblptru	equ	0xFF8
 49148                           tblptrh	equ	0xFF7
 49149                           tblptrl	equ	0xFF6
 49150                           tablat	equ	0xFF5
 49151                           prodh	equ	0xFF4
 49152                           prodl	equ	0xFF3
 49153                           intcon	equ	0xFF2
 49154                           indf0	equ	0xFEF
 49155                           postinc0	equ	0xFEE
 49156                           fsr0h	equ	0xFEA
 49157                           fsr0l	equ	0xFE9
 49158                           wreg	equ	0xFE8
 49159                           indf1	equ	0xFE7
 49160                           postinc1	equ	0xFE6
 49161                           postdec1	equ	0xFE5
 49162                           plusw1	equ	0xFE3
 49163                           fsr1h	equ	0xFE2
 49164                           fsr1l	equ	0xFE1
 49165                           indf2	equ	0xFDF
 49166                           postinc2	equ	0xFDE
 49167                           postdec2	equ	0xFDD
 49168                           plusw2	equ	0xFDB
 49169                           fsr2h	equ	0xFDA
 49170                           fsr2l	equ	0xFD9
 49171                           status	equ	0xFD8
 49172                           
 49173 ;; *************** function _USBDeviceTasks *****************
 49174 ;; Defined at:
 49175 ;;		line 477 in file "usb_device.c"
 49176 ;; Parameters:    Size  Location     Type
 49177 ;;		None
 49178 ;; Auto vars:     Size  Location     Type
 49179 ;;  i               1   30[COMRAM] unsigned char 
 49180 ;; Return value:  Size  Location     Type
 49181 ;;                  1    wreg      void 
 49182 ;; Registers used:
 49183 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 49184 ;; Tracked objects:
 49185 ;;		On entry : 0/0
 49186 ;;		On exit  : 0/0
 49187 ;;		Unchanged: 0/0
 49188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49190 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49192 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49193 ;;Total ram usage:        1 bytes
 49194 ;; Hardware stack levels used:    1
 49195 ;; Hardware stack levels required when called:    8
 49196 ;; This function calls:
 49197 ;;		_USBCtrlEPAllowStatusStage
 49198 ;;		_USBCtrlEPService
 49199 ;;		_USBIncrement1msInternalTimers
 49200 ;;		_USBStallHandler
 49201 ;;		_USBSuspend
 49202 ;;		_USBWakeFromSuspend
 49203 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 49204 ;;		i2_USBDeviceInit
 49205 ;; This function is called by:
 49206 ;;		_SYS_InterruptHigh
 49207 ;; This function uses a non-reentrant model
 49208 ;;
 49209                           
 49210                           	psect	text205
 49211  010068                     __ptext205:
 49212                           	opt stack 0
 49213  010068                     _USBDeviceTasks:
 49214                           	opt stack 9
 49215                           
 49216                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 49217                           
 49218                           ;incstack = 0
 49219  010068  045D               	decf	_USBDeviceState,w,c	;volatile
 49220  01006A  B4D8               	btfsc	status,2,c
 49221                           
 49222                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 49223  01006C  BA65               	btfsc	3941,5,c	;volatile
 49224  01006E  D007               	goto	i2l155
 49225                           
 49226                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 49227  010070  0E00               	movlw	0
 49228  010072  6E62               	movwf	3938,c	;volatile
 49229                           
 49230                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 49231  010074  010F               	movlb	15	; () banked
 49232  010076  8136               	bsf	54,0,b	;volatile
 49233                           
 49234                           ; BSR set to: 15
 49235                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 49236  010078  8936               	bsf	54,4,b	;volatile
 49237                           
 49238                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 49239  01007A  0E02               	movlw	2
 49240  01007C  6E5D               	movwf	_USBDeviceState,c	;volatile
 49241  01007E                     i2l155:
 49242                           
 49243                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 49244                           
 49245                           ; BSR set to: 15
 49246                           
 49247                           ; BSR set to: 15
 49248  01007E  A462               	btfss	3938,2,c	;volatile
 49249  010080  D006               	goto	i2l156
 49250  010082  010F               	movlb	15	; () banked
 49251  010084  A536               	btfss	54,2,b	;volatile
 49252  010086  D003               	goto	i2l156
 49253                           
 49254                           ; BSR set to: 15
 49255                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 49256  010088  9462               	bcf	3938,2,c	;volatile
 49257                           
 49258                           ; BSR set to: 15
 49259                           ;usb_device.c: 640: USBWakeFromSuspend();
 49260  01008A  ECF7  F0AB         	call	_USBWakeFromSuspend	;wreg free
 49261  01008E                     i2l156:
 49262                           
 49263                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 49264  01008E  A265               	btfss	3941,1,c	;volatile
 49265  010090  D002               	goto	i2l157
 49266                           
 49267                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 49268  010092  98A1               	bcf	4001,4,c	;volatile
 49269                           
 49270                           ;usb_device.c: 650: return;
 49271  010094  0012               	return	
 49272  010096                     i2l157:
 49273                           
 49274                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 49275  010096  A062               	btfss	3938,0,c	;volatile
 49276  010098  D009               	goto	i2l159
 49277  01009A  010F               	movlb	15	; () banked
 49278  01009C  A136               	btfss	54,0,b	;volatile
 49279  01009E  D006               	goto	i2l159
 49280                           
 49281                           ; BSR set to: 15
 49282                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 49283  0100A0  ECD7  F080         	call	i2_USBDeviceInit	;wreg free
 49284                           
 49285                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 49286  0100A4  88A0               	bsf	4000,4,c	;volatile
 49287                           
 49288                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 49289  0100A6  0E04               	movlw	4
 49290  0100A8  6E5D               	movwf	_USBDeviceState,c	;volatile
 49291                           
 49292                           ;usb_device.c: 681: (UIR &= 0xFE);
 49293  0100AA  9062               	bcf	3938,0,c	;volatile
 49294  0100AC                     i2l159:
 49295                           
 49296                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 49297  0100AC  A862               	btfss	3938,4,c	;volatile
 49298  0100AE  D004               	goto	i2l160
 49299  0100B0  010F               	movlb	15	; () banked
 49300  0100B2  B936               	btfsc	54,4,b	;volatile
 49301                           
 49302                           ; BSR set to: 15
 49303                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 49304  0100B4  ECF7  F0AC         	call	_USBSuspend	;wreg free
 49305  0100B8                     i2l160:
 49306                           
 49307                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 49308  0100B8  AC62               	btfss	3938,6,c	;volatile
 49309  0100BA  D01C               	goto	i2l164
 49310                           
 49311                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 49312  0100BC  010F               	movlb	15	; () banked
 49313  0100BE  AD36               	btfss	54,6,b	;volatile
 49314  0100C0  D00E               	goto	i2l162
 49315                           
 49316                           ; BSR set to: 15
 49317                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 49318  0100C2  0E00               	movlw	0
 49319  0100C4  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 49320  0100C6  0E73               	movlw	115
 49321  0100C8  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 49322  0100CA  0E00               	movlw	0
 49323  0100CC  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 49324  0100CE  0E00               	movlw	0
 49325  0100D0  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 49326  0100D2  0E00               	movlw	0
 49327  0100D4  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 49328  0100D6  0E01               	movlw	1
 49329  0100D8  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 49330  0100DA  EC42  F09F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 49331  0100DE                     i2l162:
 49332                           
 49333                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 49334  0100DE  9C62               	bcf	3938,6,c	;volatile
 49335                           
 49336                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 49337  0100E0  ECC6  F0AE         	call	_USBIncrement1msInternalTimers	;wreg free
 49338                           
 49339                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 49340  0100E4  0101               	movlb	1	; () banked
 49341  0100E6  515D               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b	;volatile
 49342  0100E8  A4D8               	btfss	status,2,c
 49343                           
 49344                           ; BSR set to: 1
 49345                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 49346  0100EA  075D               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b	;volatile
 49347                           
 49348                           ; BSR set to: 1
 49349                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 49350                           
 49351                           ; BSR set to: 1
 49352  0100EC  515D               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b	;volatile
 49353  0100EE  B4D8               	btfsc	status,2,c
 49354                           
 49355                           ; BSR set to: 1
 49356                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 49357  0100F0  EC42  F096         	call	_USBCtrlEPAllowStatusStage	;wreg free
 49358  0100F4                     i2l164:
 49359                           
 49360                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 49361  0100F4  AA62               	btfss	3938,5,c	;volatile
 49362  0100F6  D004               	goto	i2l165
 49363  0100F8  010F               	movlb	15	; () banked
 49364  0100FA  BB36               	btfsc	54,5,b	;volatile
 49365                           
 49366                           ; BSR set to: 15
 49367                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 49368  0100FC  ECC8  F0AA         	call	_USBStallHandler	;wreg free
 49369  010100                     i2l165:
 49370                           
 49371                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 49372  010100  A262               	btfss	3938,1,c	;volatile
 49373  010102  D012               	goto	i2l166
 49374  010104  010F               	movlb	15	; () banked
 49375  010106  A336               	btfss	54,1,b	;volatile
 49376  010108  D00F               	goto	i2l166
 49377                           
 49378                           ; BSR set to: 15
 49379                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 49380  01010A  0E7F               	movlw	127
 49381  01010C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 49382  01010E  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 49383  010110  0E00               	movlw	0
 49384  010112  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 49385  010114  0E00               	movlw	0
 49386  010116  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 49387  010118  0E00               	movlw	0
 49388  01011A  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 49389  01011C  0E01               	movlw	1
 49390  01011E  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 49391  010120  EC42  F09F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 49392                           
 49393                           ;usb_device.c: 759: {UEIR = 0;};
 49394  010124  0E00               	movlw	0
 49395  010126  6E63               	movwf	3939,c	;volatile
 49396  010128                     i2l166:
 49397                           
 49398                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 49399  010128  0E04               	movlw	4
 49400  01012A  605D               	cpfslt	_USBDeviceState,c	;volatile
 49401  01012C  D002               	goto	i2l167
 49402                           
 49403                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 49404  01012E  98A1               	bcf	4001,4,c	;volatile
 49405                           
 49406                           ;usb_device.c: 777: return;
 49407  010130  0012               	return	
 49408  010132                     i2l167:
 49409                           
 49410                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 49411  010132  010F               	movlb	15	; () banked
 49412  010134  A736               	btfss	54,3,b	;volatile
 49413  010136  D039               	goto	i2u1760_40
 49414                           
 49415                           ; BSR set to: 15
 49416                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 49417  010138  0E00               	movlw	0
 49418  01013A  6E1F               	movwf	USBDeviceTasks@i,c
 49419  01013C                     i2l18088:
 49420                           
 49421                           ; BSR set to: 15
 49422  01013C  0E03               	movlw	3
 49423  01013E  641F               	cpfsgt	USBDeviceTasks@i,c
 49424  010140  D001               	goto	i2l169
 49425  010142  D033               	goto	i2u1760_40
 49426  010144                     i2l169:
 49427                           
 49428                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 49429  010144  A662               	btfss	3938,3,c	;volatile
 49430  010146  D031               	goto	i2u1760_40
 49431                           
 49432                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 49433  010148  CF64 F05E          	movff	3940,_USTATcopy	;volatile
 49434                           
 49435                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 49436  01014C  305E               	rrcf	_USTATcopy,w,c	;volatile
 49437  01014E  32E8               	rrcf	wreg,f,c
 49438  010150  32E8               	rrcf	wreg,f,c
 49439  010152  0B0F               	andlw	15
 49440  010154  0101               	movlb	1	; () banked
 49441  010156  6F5F               	movwf	_endpoint_number& (0+255),b	;volatile
 49442                           
 49443                           ; BSR set to: 1
 49444                           ;usb_device.c: 793: (UIR &= 0xF7);
 49445  010158  9662               	bcf	3938,3,c	;volatile
 49446                           
 49447                           ; BSR set to: 1
 49448                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 49449  01015A  B45E               	btfsc	_USTATcopy,2,c	;volatile
 49450  01015C  D007               	goto	i2l172
 49451                           
 49452                           ; BSR set to: 1
 49453                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 49454  01015E  515F               	movf	_endpoint_number& (0+255),w,b	;volatile
 49455  010160  0D01               	mullw	1
 49456  010162  0E2B               	movlw	low _ep_data_out
 49457  010164  24F3               	addwf	prodl,w,c
 49458  010166  6ED9               	movwf	fsr2l,c
 49459  010168  0E01               	movlw	high _ep_data_out
 49460  01016A  D006               	goto	L72
 49461  01016C                     i2l172:
 49462                           
 49463                           ; BSR set to: 1
 49464                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 49465                           
 49466                           ; BSR set to: 1
 49467  01016C  515F               	movf	_endpoint_number& (0+255),w,b	;volatile
 49468  01016E  0D01               	mullw	1
 49469  010170  0E2E               	movlw	low _ep_data_in
 49470  010172  24F3               	addwf	prodl,w,c
 49471  010174  6ED9               	movwf	fsr2l,c
 49472  010176  0E01               	movlw	high _ep_data_in
 49473  010178                     L72:
 49474  010178  20F4               	addwfc	prodh,w,c
 49475  01017A  6EDA               	movwf	fsr2h,c
 49476  01017C  70DF               	btg	indf2,0,c
 49477                           
 49478                           ; BSR set to: 1
 49479                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 49480                           
 49481                           ; BSR set to: 1
 49482  01017E  515F               	movf	_endpoint_number& (0+255),w,b	;volatile
 49483  010180  A4D8               	btfss	status,2,c
 49484  010182  D003               	goto	i2l174
 49485                           
 49486                           ; BSR set to: 1
 49487                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 49488  010184  ECB1  F09C         	call	_USBCtrlEPService	;wreg free
 49489                           
 49490                           ;usb_device.c: 813: }
 49491  010188  D00E               	goto	i2l176
 49492  01018A                     i2l174:
 49493                           
 49494                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 49495  01018A  0E00               	movlw	0
 49496  01018C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 49497  01018E  0E72               	movlw	114
 49498  010190  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 49499  010192  0E5E               	movlw	low _USTATcopy
 49500  010194  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 49501  010196  0E00               	movlw	high _USTATcopy
 49502  010198  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 49503  01019A  0E00               	movlw	0
 49504  01019C  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 49505  01019E  0E00               	movlw	0
 49506  0101A0  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 49507  0101A2  EC42  F09F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 49508  0101A6                     i2l176:
 49509  0101A6  2A1F               	incf	USBDeviceTasks@i,f,c
 49510  0101A8  D7C9               	goto	i2l18088
 49511  0101AA                     i2u1760_40:
 49512                           
 49513                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 49514  0101AA  98A1               	bcf	4001,4,c	;volatile
 49515  0101AC  0012               	return		;funcret
 49516  0101AE                     __end_of_USBDeviceTasks:
 49517                           	opt stack 0
 49518                           tosu	equ	0xFFF
 49519                           tosh	equ	0xFFE
 49520                           tosl	equ	0xFFD
 49521                           pclatu	equ	0xFFB
 49522                           pclath	equ	0xFFA
 49523                           tblptru	equ	0xFF8
 49524                           tblptrh	equ	0xFF7
 49525                           tblptrl	equ	0xFF6
 49526                           tablat	equ	0xFF5
 49527                           prodh	equ	0xFF4
 49528                           prodl	equ	0xFF3
 49529                           intcon	equ	0xFF2
 49530                           indf0	equ	0xFEF
 49531                           postinc0	equ	0xFEE
 49532                           fsr0h	equ	0xFEA
 49533                           fsr0l	equ	0xFE9
 49534                           wreg	equ	0xFE8
 49535                           indf1	equ	0xFE7
 49536                           postinc1	equ	0xFE6
 49537                           postdec1	equ	0xFE5
 49538                           plusw1	equ	0xFE3
 49539                           fsr1h	equ	0xFE2
 49540                           fsr1l	equ	0xFE1
 49541                           indf2	equ	0xFDF
 49542                           postinc2	equ	0xFDE
 49543                           postdec2	equ	0xFDD
 49544                           plusw2	equ	0xFDB
 49545                           fsr2h	equ	0xFDA
 49546                           fsr2l	equ	0xFD9
 49547                           status	equ	0xFD8
 49548                           
 49549 ;; *************** function i2_USBDeviceInit *****************
 49550 ;; Defined at:
 49551 ;;		line 277 in file "usb_device.c"
 49552 ;; Parameters:    Size  Location     Type
 49553 ;;		None
 49554 ;; Auto vars:     Size  Location     Type
 49555 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 49556 ;; Return value:  Size  Location     Type
 49557 ;;                  1    wreg      void 
 49558 ;; Registers used:
 49559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 49560 ;; Tracked objects:
 49561 ;;		On entry : 0/0
 49562 ;;		On exit  : 0/0
 49563 ;;		Unchanged: 0/0
 49564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49566 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49568 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49569 ;;Total ram usage:        1 bytes
 49570 ;; Hardware stack levels used:    1
 49571 ;; Hardware stack levels required when called:    1
 49572 ;; This function calls:
 49573 ;;		i2_memset
 49574 ;; This function is called by:
 49575 ;;		_USBDeviceTasks
 49576 ;; This function uses a non-reentrant model
 49577 ;;
 49578                           
 49579                           	psect	text206
 49580  0101AE                     __ptext206:
 49581                           	opt stack 0
 49582  0101AE                     i2_USBDeviceInit:
 49583                           	opt stack 15
 49584                           
 49585                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 49586                           
 49587                           ;incstack = 0
 49588  0101AE  98A0               	bcf	4000,4,c	;volatile
 49589                           
 49590                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 49591  0101B0  0E00               	movlw	0
 49592  0101B2  6E63               	movwf	3939,c	;volatile
 49593                           
 49594                           ;usb_device.c: 291: {UIR = 0;};
 49595  0101B4  0E00               	movlw	0
 49596  0101B6  6E62               	movwf	3938,c	;volatile
 49597                           
 49598                           ;usb_device.c: 294: UEP0 = 0;
 49599  0101B8  0E00               	movlw	0
 49600  0101BA  010F               	movlb	15	; () banked
 49601  0101BC  6F26               	movwf	38,b	;volatile
 49602                           
 49603                           ; BSR set to: 15
 49604                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 49605  0101BE  0E27               	movlw	39
 49606  0101C0  6E01               	movwf	i2memset@p1,c
 49607  0101C2  0E0F               	movlw	15
 49608  0101C4  6E02               	movwf	i2memset@p1+1,c
 49609  0101C6  0E00               	movlw	0
 49610  0101C8  6E04               	movwf	i2memset@c+1,c
 49611  0101CA  0E00               	movlw	0
 49612  0101CC  6E03               	movwf	i2memset@c,c
 49613  0101CE  0E00               	movlw	0
 49614  0101D0  6E06               	movwf	i2memset@n+1,c
 49615  0101D2  0E02               	movlw	2
 49616  0101D4  6E05               	movwf	i2memset@n,c
 49617  0101D6  EC81  F0AD         	call	i2_memset	;wreg free
 49618                           
 49619                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 49620  0101DA  0E16               	movlw	22
 49621  0101DC  010F               	movlb	15	; () banked
 49622  0101DE  6F39               	movwf	57,b	;volatile
 49623                           
 49624                           ; BSR set to: 15
 49625  0101E0  0E9F               	movlw	159
 49626  0101E2  6F37               	movwf	55,b	;volatile
 49627                           
 49628                           ; BSR set to: 15
 49629  0101E4  0E7B               	movlw	123
 49630  0101E6  6F36               	movwf	54,b	;volatile
 49631                           
 49632                           ; BSR set to: 15
 49633                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 49634  0101E8  0E00               	movlw	0
 49635  0101EA  6E09               	movwf	i2USBDeviceInit@i,c
 49636  0101EC                     i2l17882:
 49637                           
 49638                           ; BSR set to: 15
 49639  0101EC  0E0B               	movlw	11
 49640  0101EE  6409               	cpfsgt	i2USBDeviceInit@i,c
 49641  0101F0  D001               	goto	i2l145
 49642  0101F2  D00E               	goto	i2u1728_40
 49643  0101F4                     i2l145:
 49644                           
 49645                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 49646                           
 49647                           ; BSR set to: 15
 49648  0101F4  5009               	movf	i2USBDeviceInit@i,w,c
 49649  0101F6  0D04               	mullw	4
 49650  0101F8  0E00               	movlw	0
 49651  0101FA  24F3               	addwf	prodl,w,c
 49652  0101FC  6ED9               	movwf	fsr2l,c
 49653  0101FE  0E0D               	movlw	13
 49654  010200  20F4               	addwfc	prodh,w,c
 49655  010202  6EDA               	movwf	fsr2h,c
 49656  010204  6ADE               	clrf	postinc2,c
 49657  010206  6ADE               	clrf	postinc2,c
 49658  010208  6ADE               	clrf	postinc2,c
 49659  01020A  6ADD               	clrf	postdec2,c
 49660  01020C  2A09               	incf	i2USBDeviceInit@i,f,c
 49661  01020E  D7EE               	goto	i2l17882
 49662  010210                     i2u1728_40:
 49663                           
 49664                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 49665  010210  8C65               	bsf	3941,6,c	;volatile
 49666                           
 49667                           ;usb_device.c: 316: UADDR = 0x00;
 49668  010212  0E00               	movlw	0
 49669  010214  010F               	movlb	15	; () banked
 49670  010216  6F38               	movwf	56,b	;volatile
 49671                           
 49672                           ; BSR set to: 15
 49673                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 49674  010218  9865               	bcf	3941,4,c	;volatile
 49675                           
 49676                           ; BSR set to: 15
 49677                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 49678  01021A  9C65               	bcf	3941,6,c	;volatile
 49679  01021C                     
 49680                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 49681                           
 49682                           ; BSR set to: 15
 49683  01021C  9662               	bcf	3938,3,c	;volatile
 49684                           
 49685                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 49686  01021E  0E00               	movlw	0
 49687  010220  6E56               	movwf	_inPipes+3,c	;volatile
 49688                           
 49689                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 49690  010222  0E00               	movlw	0
 49691  010224  0101               	movlb	1	; () banked
 49692  010226  6F03               	movwf	(_outPipes+3)& (0+255),b	;volatile
 49693                           
 49694                           ; BSR set to: 1
 49695                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 49696  010228  0E00               	movlw	0
 49697  01022A  6F05               	movwf	(_outPipes+5)& (0+255),b	;volatile
 49698  01022C  0E00               	movlw	0
 49699  01022E  6F04               	movwf	(_outPipes+4)& (0+255),b	;volatile
 49700                           
 49701                           ; BSR set to: 1
 49702                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 49703  010230  B662               	btfsc	3938,3,c	;volatile
 49704  010232  D7F4               	goto	i2l147
 49705                           
 49706                           ; BSR set to: 1
 49707                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 49708                           
 49709                           ; BSR set to: 1
 49710  010234  0E01               	movlw	1
 49711  010236  6F5B               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 49712                           
 49713                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 49714  010238  0E01               	movlw	1
 49715  01023A  6F5A               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 49716                           
 49717                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 49718  01023C  0E00               	movlw	0
 49719  01023E  6F59               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 49720                           
 49721                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 49722  010240  0E00               	movlw	0
 49723  010242  6F58               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 49724                           
 49725                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 49726  010244  0E00               	movlw	0
 49727  010246  6F60               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 49728                           
 49729                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 49730  010248  0E00               	movlw	0
 49731  01024A  6E09               	movwf	i2USBDeviceInit@i,c
 49732  01024C                     i2l17910:
 49733                           
 49734                           ; BSR set to: 1
 49735  01024C  0E02               	movlw	2
 49736  01024E  6409               	cpfsgt	i2USBDeviceInit@i,c
 49737  010250  D001               	goto	i2l149
 49738  010252  D02E               	goto	i2u1731_40
 49739  010254                     i2l149:
 49740                           
 49741                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 49742                           
 49743                           ; BSR set to: 1
 49744  010254  5009               	movf	i2USBDeviceInit@i,w,c
 49745  010256  0D02               	mullw	2
 49746  010258  0E09               	movlw	low _pBDTEntryIn
 49747  01025A  24F3               	addwf	prodl,w,c
 49748  01025C  6ED9               	movwf	fsr2l,c
 49749  01025E  0E01               	movlw	high _pBDTEntryIn
 49750  010260  20F4               	addwfc	prodh,w,c
 49751  010262  6EDA               	movwf	fsr2h,c
 49752  010264  0E00               	movlw	0
 49753  010266  6EDE               	movwf	postinc2,c
 49754  010268  0E00               	movlw	0
 49755  01026A  6EDD               	movwf	postdec2,c
 49756                           
 49757                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 49758  01026C  5009               	movf	i2USBDeviceInit@i,w,c
 49759  01026E  0D02               	mullw	2
 49760  010270  0E0F               	movlw	low _pBDTEntryOut
 49761  010272  24F3               	addwf	prodl,w,c
 49762  010274  6ED9               	movwf	fsr2l,c
 49763  010276  0E01               	movlw	high _pBDTEntryOut
 49764  010278  20F4               	addwfc	prodh,w,c
 49765  01027A  6EDA               	movwf	fsr2h,c
 49766  01027C  0E00               	movlw	0
 49767  01027E  6EDE               	movwf	postinc2,c
 49768  010280  0E00               	movlw	0
 49769  010282  6EDD               	movwf	postdec2,c
 49770                           
 49771                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 49772  010284  5009               	movf	i2USBDeviceInit@i,w,c
 49773  010286  0D01               	mullw	1
 49774  010288  0E2E               	movlw	low _ep_data_in
 49775  01028A  24F3               	addwf	prodl,w,c
 49776  01028C  6ED9               	movwf	fsr2l,c
 49777  01028E  0E01               	movlw	high _ep_data_in
 49778  010290  20F4               	addwfc	prodh,w,c
 49779  010292  6EDA               	movwf	fsr2h,c
 49780  010294  0E00               	movlw	0
 49781  010296  6EDF               	movwf	indf2,c
 49782                           
 49783                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 49784  010298  5009               	movf	i2USBDeviceInit@i,w,c
 49785  01029A  0D01               	mullw	1
 49786  01029C  0E2B               	movlw	low _ep_data_out
 49787  01029E  24F3               	addwf	prodl,w,c
 49788  0102A0  6ED9               	movwf	fsr2l,c
 49789  0102A2  0E01               	movlw	high _ep_data_out
 49790  0102A4  20F4               	addwfc	prodh,w,c
 49791  0102A6  6EDA               	movwf	fsr2h,c
 49792  0102A8  0E00               	movlw	0
 49793  0102AA  6EDF               	movwf	indf2,c
 49794  0102AC  2A09               	incf	i2USBDeviceInit@i,f,c
 49795  0102AE  D7CE               	goto	i2l17910
 49796  0102B0                     i2u1731_40:
 49797                           
 49798                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 49799  0102B0  0E08               	movlw	8
 49800  0102B2  0101               	movlb	1	; () banked
 49801  0102B4  6F09               	movwf	_pBDTEntryIn& (0+255),b
 49802  0102B6  0E0D               	movlw	13
 49803  0102B8  6F0A               	movwf	(_pBDTEntryIn+1)& (0+255),b
 49804                           
 49805                           ; BSR set to: 1
 49806                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 49807  0102BA  0E16               	movlw	22
 49808  0102BC  010F               	movlb	15	; () banked
 49809  0102BE  6F26               	movwf	38,b	;volatile
 49810                           
 49811                           ; BSR set to: 15
 49812                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 49813  0102C0  0E0D               	movlw	13
 49814  0102C2  010D               	movlb	13	; () banked
 49815  0102C4  6F03               	movwf	3,b	;volatile
 49816  0102C6  0E30               	movlw	48
 49817  0102C8  6F02               	movwf	2,b	;volatile
 49818                           
 49819                           ; BSR set to: 13
 49820                           ;usb_device.c: 359: BDT[0].CNT = 8;
 49821  0102CA  0E08               	movlw	8
 49822  0102CC  6F01               	movwf	1,b	;volatile
 49823                           
 49824                           ; BSR set to: 13
 49825                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 49826  0102CE  0E04               	movlw	4
 49827  0102D0  6F00               	movwf	0,b	;volatile
 49828                           
 49829                           ; BSR set to: 13
 49830                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 49831  0102D2  8F00               	bsf	0,7,b	;volatile
 49832                           
 49833                           ; BSR set to: 13
 49834                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 49835  0102D4  0E00               	movlw	0
 49836  0102D6  0101               	movlb	1	; () banked
 49837  0102D8  6FC2               	movwf	_USBActiveConfiguration& (0+255),b	;volatile
 49838                           
 49839                           ; BSR set to: 1
 49840                           ;usb_device.c: 366: USB1msTickCount = 0;
 49841  0102DA  0E00               	movlw	0
 49842  0102DC  6F21               	movwf	_USB1msTickCount& (0+255),b	;volatile
 49843  0102DE  0E00               	movlw	0
 49844  0102E0  6F22               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 49845  0102E2  0E00               	movlw	0
 49846  0102E4  6F23               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 49847  0102E6  0E00               	movlw	0
 49848  0102E8  6F24               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 49849                           
 49850                           ; BSR set to: 1
 49851                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 49852  0102EA  0E00               	movlw	0
 49853  0102EC  6F57               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 49854                           
 49855                           ; BSR set to: 1
 49856                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 49857  0102EE  0E00               	movlw	0
 49858  0102F0  6E5D               	movwf	_USBDeviceState,c	;volatile
 49859                           
 49860                           ; BSR set to: 1
 49861  0102F2  0012               	return		;funcret
 49862  0102F4                     __end_ofi2_USBDeviceInit:
 49863                           	opt stack 0
 49864                           tosu	equ	0xFFF
 49865                           tosh	equ	0xFFE
 49866                           tosl	equ	0xFFD
 49867                           pclatu	equ	0xFFB
 49868                           pclath	equ	0xFFA
 49869                           tblptru	equ	0xFF8
 49870                           tblptrh	equ	0xFF7
 49871                           tblptrl	equ	0xFF6
 49872                           tablat	equ	0xFF5
 49873                           prodh	equ	0xFF4
 49874                           prodl	equ	0xFF3
 49875                           intcon	equ	0xFF2
 49876                           indf0	equ	0xFEF
 49877                           postinc0	equ	0xFEE
 49878                           fsr0h	equ	0xFEA
 49879                           fsr0l	equ	0xFE9
 49880                           wreg	equ	0xFE8
 49881                           indf1	equ	0xFE7
 49882                           postinc1	equ	0xFE6
 49883                           postdec1	equ	0xFE5
 49884                           plusw1	equ	0xFE3
 49885                           fsr1h	equ	0xFE2
 49886                           fsr1l	equ	0xFE1
 49887                           indf2	equ	0xFDF
 49888                           postinc2	equ	0xFDE
 49889                           postdec2	equ	0xFDD
 49890                           plusw2	equ	0xFDB
 49891                           fsr2h	equ	0xFDA
 49892                           fsr2l	equ	0xFD9
 49893                           status	equ	0xFD8
 49894                           
 49895 ;; *************** function _USBWakeFromSuspend *****************
 49896 ;; Defined at:
 49897 ;;		line 2305 in file "usb_device.c"
 49898 ;; Parameters:    Size  Location     Type
 49899 ;;		None
 49900 ;; Auto vars:     Size  Location     Type
 49901 ;;		None
 49902 ;; Return value:  Size  Location     Type
 49903 ;;                  1    wreg      void 
 49904 ;; Registers used:
 49905 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 49906 ;; Tracked objects:
 49907 ;;		On entry : 0/0
 49908 ;;		On exit  : 0/0
 49909 ;;		Unchanged: 0/0
 49910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49915 ;;Total ram usage:        0 bytes
 49916 ;; Hardware stack levels used:    1
 49917 ;; Hardware stack levels required when called:    4
 49918 ;; This function calls:
 49919 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 49920 ;; This function is called by:
 49921 ;;		_USBDeviceTasks
 49922 ;; This function uses a non-reentrant model
 49923 ;;
 49924                           
 49925                           	psect	text207
 49926  0157EE                     __ptext207:
 49927                           	opt stack 0
 49928  0157EE                     _USBWakeFromSuspend:
 49929                           	opt stack 12
 49930                           
 49931                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 49932                           
 49933                           ; BSR set to: 1
 49934                           ;incstack = 0
 49935  0157EE  0E00               	movlw	0
 49936  0157F0  0101               	movlb	1	; () banked
 49937  0157F2  6F60               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 49938                           
 49939                           ; BSR set to: 1
 49940                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 49941  0157F4  0E00               	movlw	0
 49942  0157F6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 49943  0157F8  0E74               	movlw	116
 49944  0157FA  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 49945  0157FC  0E00               	movlw	0
 49946  0157FE  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 49947  015800  0E00               	movlw	0
 49948  015802  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 49949  015804  0E00               	movlw	0
 49950  015806  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 49951  015808  0E00               	movlw	0
 49952  01580A  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 49953  01580C  EC42  F09F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 49954                           
 49955                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 49956  015810  9265               	bcf	3941,1,c	;volatile
 49957                           
 49958                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 49959  015812  010F               	movlb	15	; () banked
 49960  015814  9536               	bcf	54,2,b	;volatile
 49961                           
 49962                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 49963  015816  D001               	goto	i2l315
 49964  015818                     
 49965                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 49966                           
 49967                           ; BSR set to: 15
 49968  015818  9462               	bcf	3938,2,c	;volatile
 49969  01581A                     i2l315:
 49970  01581A  B462               	btfsc	3938,2,c	;volatile
 49971  01581C  D7FD               	goto	i2l316
 49972                           
 49973                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 49974  01581E  0E00               	movlw	0
 49975  015820  0101               	movlb	1	; () banked
 49976  015822  6F57               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 49977                           
 49978                           ; BSR set to: 1
 49979  015824  0012               	return		;funcret
 49980  015826                     __end_of_USBWakeFromSuspend:
 49981                           	opt stack 0
 49982                           tosu	equ	0xFFF
 49983                           tosh	equ	0xFFE
 49984                           tosl	equ	0xFFD
 49985                           pclatu	equ	0xFFB
 49986                           pclath	equ	0xFFA
 49987                           tblptru	equ	0xFF8
 49988                           tblptrh	equ	0xFF7
 49989                           tblptrl	equ	0xFF6
 49990                           tablat	equ	0xFF5
 49991                           prodh	equ	0xFF4
 49992                           prodl	equ	0xFF3
 49993                           intcon	equ	0xFF2
 49994                           indf0	equ	0xFEF
 49995                           postinc0	equ	0xFEE
 49996                           fsr0h	equ	0xFEA
 49997                           fsr0l	equ	0xFE9
 49998                           wreg	equ	0xFE8
 49999                           indf1	equ	0xFE7
 50000                           postinc1	equ	0xFE6
 50001                           postdec1	equ	0xFE5
 50002                           plusw1	equ	0xFE3
 50003                           fsr1h	equ	0xFE2
 50004                           fsr1l	equ	0xFE1
 50005                           indf2	equ	0xFDF
 50006                           postinc2	equ	0xFDE
 50007                           postdec2	equ	0xFDD
 50008                           plusw2	equ	0xFDB
 50009                           fsr2h	equ	0xFDA
 50010                           fsr2l	equ	0xFD9
 50011                           status	equ	0xFD8
 50012                           
 50013 ;; *************** function _USBSuspend *****************
 50014 ;; Defined at:
 50015 ;;		line 2247 in file "usb_device.c"
 50016 ;; Parameters:    Size  Location     Type
 50017 ;;		None
 50018 ;; Auto vars:     Size  Location     Type
 50019 ;;		None
 50020 ;; Return value:  Size  Location     Type
 50021 ;;                  1    wreg      void 
 50022 ;; Registers used:
 50023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 50024 ;; Tracked objects:
 50025 ;;		On entry : 0/0
 50026 ;;		On exit  : 0/0
 50027 ;;		Unchanged: 0/0
 50028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50033 ;;Total ram usage:        0 bytes
 50034 ;; Hardware stack levels used:    1
 50035 ;; Hardware stack levels required when called:    4
 50036 ;; This function calls:
 50037 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 50038 ;; This function is called by:
 50039 ;;		_USBDeviceTasks
 50040 ;; This function uses a non-reentrant model
 50041 ;;
 50042                           
 50043                           	psect	text208
 50044  0159EE                     __ptext208:
 50045                           	opt stack 0
 50046  0159EE                     _USBSuspend:
 50047                           	opt stack 12
 50048                           
 50049                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 50050                           
 50051                           ; BSR set to: 1
 50052                           ;incstack = 0
 50053  0159EE  010F               	movlb	15	; () banked
 50054  0159F0  8536               	bsf	54,2,b	;volatile
 50055                           
 50056                           ; BSR set to: 15
 50057                           ;usb_device.c: 2273: (UIR &= 0xEF);
 50058  0159F2  9862               	bcf	3938,4,c	;volatile
 50059                           
 50060                           ; BSR set to: 15
 50061                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 50062  0159F4  8265               	bsf	3941,1,c	;volatile
 50063                           
 50064                           ; BSR set to: 15
 50065                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 50066  0159F6  0E01               	movlw	1
 50067  0159F8  0101               	movlb	1	; () banked
 50068  0159FA  6F60               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 50069                           
 50070                           ; BSR set to: 1
 50071                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 50072  0159FC  0E00               	movlw	0
 50073  0159FE  6F57               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 50074                           
 50075                           ; BSR set to: 1
 50076                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 50077  015A00  0E00               	movlw	0
 50078  015A02  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 50079  015A04  0E75               	movlw	117
 50080  015A06  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 50081  015A08  0E00               	movlw	0
 50082  015A0A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 50083  015A0C  0E00               	movlw	0
 50084  015A0E  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 50085  015A10  0E00               	movlw	0
 50086  015A12  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 50087  015A14  0E00               	movlw	0
 50088  015A16  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 50089  015A18  EC42  F09F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 50090  015A1C  0012               	return		;funcret
 50091  015A1E                     __end_of_USBSuspend:
 50092                           	opt stack 0
 50093                           tosu	equ	0xFFF
 50094                           tosh	equ	0xFFE
 50095                           tosl	equ	0xFFD
 50096                           pclatu	equ	0xFFB
 50097                           pclath	equ	0xFFA
 50098                           tblptru	equ	0xFF8
 50099                           tblptrh	equ	0xFF7
 50100                           tblptrl	equ	0xFF6
 50101                           tablat	equ	0xFF5
 50102                           prodh	equ	0xFF4
 50103                           prodl	equ	0xFF3
 50104                           intcon	equ	0xFF2
 50105                           indf0	equ	0xFEF
 50106                           postinc0	equ	0xFEE
 50107                           fsr0h	equ	0xFEA
 50108                           fsr0l	equ	0xFE9
 50109                           wreg	equ	0xFE8
 50110                           indf1	equ	0xFE7
 50111                           postinc1	equ	0xFE6
 50112                           postdec1	equ	0xFE5
 50113                           plusw1	equ	0xFE3
 50114                           fsr1h	equ	0xFE2
 50115                           fsr1l	equ	0xFE1
 50116                           indf2	equ	0xFDF
 50117                           postinc2	equ	0xFDE
 50118                           postdec2	equ	0xFDD
 50119                           plusw2	equ	0xFDB
 50120                           fsr2h	equ	0xFDA
 50121                           fsr2l	equ	0xFD9
 50122                           status	equ	0xFD8
 50123                           
 50124 ;; *************** function _USBStallHandler *****************
 50125 ;; Defined at:
 50126 ;;		line 2204 in file "usb_device.c"
 50127 ;; Parameters:    Size  Location     Type
 50128 ;;		None
 50129 ;; Auto vars:     Size  Location     Type
 50130 ;;		None
 50131 ;; Return value:  Size  Location     Type
 50132 ;;                  1    wreg      void 
 50133 ;; Registers used:
 50134 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 50135 ;; Tracked objects:
 50136 ;;		On entry : 0/0
 50137 ;;		On exit  : 0/0
 50138 ;;		Unchanged: 0/0
 50139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50142 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50143 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50144 ;;Total ram usage:        1 bytes
 50145 ;; Hardware stack levels used:    1
 50146 ;; This function calls:
 50147 ;;		Nothing
 50148 ;; This function is called by:
 50149 ;;		_USBDeviceTasks
 50150 ;; This function uses a non-reentrant model
 50151 ;;
 50152                           
 50153                           	psect	text209
 50154  015590                     __ptext209:
 50155                           	opt stack 0
 50156  015590                     _USBStallHandler:
 50157                           	opt stack 16
 50158                           
 50159                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 50160                           
 50161                           ;incstack = 0
 50162  015590  010F               	movlb	15	; () banked
 50163  015592  A126               	btfss	38,0,b	;volatile
 50164  015594  D01D               	goto	i2l307
 50165                           
 50166                           ; BSR set to: 15
 50167                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 50168  015596  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 50169  01559A  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 50170  01559E  0E80               	movlw	128
 50171  0155A0  18DE               	xorwf	postinc2,w,c
 50172  0155A2  A4D8               	btfss	status,2,c
 50173  0155A4  D014               	goto	i2l308
 50174                           
 50175                           ; BSR set to: 15
 50176  0155A6  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 50177  0155AA  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50178  0155AE  0E84               	movlw	132
 50179  0155B0  18DE               	xorwf	postinc2,w,c
 50180  0155B2  A4D8               	btfss	status,2,c
 50181  0155B4  D00C               	goto	i2l308
 50182                           
 50183                           ; BSR set to: 15
 50184                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 50185  0155B6  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 50186  0155BA  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 50187  0155BE  0E0C               	movlw	12
 50188  0155C0  6EDF               	movwf	indf2,c
 50189                           
 50190                           ; BSR set to: 15
 50191                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 50192  0155C2  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 50193  0155C6  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 50194  0155CA  0E00               	movlw	0
 50195  0155CC  8EDB               	bsf	plusw2,7,c
 50196  0155CE                     i2l308:
 50197                           
 50198                           ; BSR set to: 15
 50199                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 50200                           
 50201                           ; BSR set to: 15
 50202  0155CE  9126               	bcf	38,0,b	;volatile
 50203  0155D0                     i2l307:
 50204                           
 50205                           ; BSR set to: 15
 50206                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 50207  0155D0  9A62               	bcf	3938,5,c	;volatile
 50208                           
 50209                           ; BSR set to: 15
 50210  0155D2  0012               	return		;funcret
 50211  0155D4                     __end_of_USBStallHandler:
 50212                           	opt stack 0
 50213                           tosu	equ	0xFFF
 50214                           tosh	equ	0xFFE
 50215                           tosl	equ	0xFFD
 50216                           pclatu	equ	0xFFB
 50217                           pclath	equ	0xFFA
 50218                           tblptru	equ	0xFF8
 50219                           tblptrh	equ	0xFF7
 50220                           tblptrl	equ	0xFF6
 50221                           tablat	equ	0xFF5
 50222                           prodh	equ	0xFF4
 50223                           prodl	equ	0xFF3
 50224                           intcon	equ	0xFF2
 50225                           indf0	equ	0xFEF
 50226                           postinc0	equ	0xFEE
 50227                           fsr0h	equ	0xFEA
 50228                           fsr0l	equ	0xFE9
 50229                           wreg	equ	0xFE8
 50230                           indf1	equ	0xFE7
 50231                           postinc1	equ	0xFE6
 50232                           postdec1	equ	0xFE5
 50233                           plusw1	equ	0xFE3
 50234                           fsr1h	equ	0xFE2
 50235                           fsr1l	equ	0xFE1
 50236                           indf2	equ	0xFDF
 50237                           postinc2	equ	0xFDE
 50238                           postdec2	equ	0xFDD
 50239                           plusw2	equ	0xFDB
 50240                           fsr2h	equ	0xFDA
 50241                           fsr2l	equ	0xFD9
 50242                           status	equ	0xFD8
 50243                           
 50244 ;; *************** function _USBIncrement1msInternalTimers *****************
 50245 ;; Defined at:
 50246 ;;		line 3027 in file "usb_device.c"
 50247 ;; Parameters:    Size  Location     Type
 50248 ;;		None
 50249 ;; Auto vars:     Size  Location     Type
 50250 ;;		None
 50251 ;; Return value:  Size  Location     Type
 50252 ;;                  1    wreg      void 
 50253 ;; Registers used:
 50254 ;;		wreg, status,2, status,0
 50255 ;; Tracked objects:
 50256 ;;		On entry : 0/0
 50257 ;;		On exit  : 0/0
 50258 ;;		Unchanged: 0/0
 50259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50264 ;;Total ram usage:        0 bytes
 50265 ;; Hardware stack levels used:    1
 50266 ;; This function calls:
 50267 ;;		Nothing
 50268 ;; This function is called by:
 50269 ;;		_USBDeviceTasks
 50270 ;; This function uses a non-reentrant model
 50271 ;;
 50272                           
 50273                           	psect	text210
 50274  015D8C                     __ptext210:
 50275                           	opt stack 0
 50276  015D8C                     _USBIncrement1msInternalTimers:
 50277                           	opt stack 16
 50278                           
 50279                           ;usb_device.c: 3035: USB1msTickCount++;
 50280                           
 50281                           ; BSR set to: 15
 50282                           ;incstack = 0
 50283  015D8C  0E01               	movlw	1
 50284  015D8E  0101               	movlb	1	; () banked
 50285  015D90  2721               	addwf	_USB1msTickCount& (0+255),f,b	;volatile
 50286  015D92  0E00               	movlw	0
 50287  015D94  2322               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
 50288  015D96  2323               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
 50289  015D98  2324               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
 50290                           
 50291                           ; BSR set to: 1
 50292                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 50293  015D9A  5160               	movf	_USBBusIsSuspended& (0+255),w,b	;volatile
 50294  015D9C  A4D8               	btfss	status,2,c
 50295  015D9E  0012               	return	
 50296                           
 50297                           ; BSR set to: 1
 50298                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 50299  015DA0  2B57               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
 50300                           
 50301                           ; BSR set to: 1
 50302                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 50303  015DA2  5157               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
 50304  015DA4  A4D8               	btfss	status,2,c
 50305  015DA6  0012               	return	
 50306                           
 50307                           ; BSR set to: 1
 50308                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 50309  015DA8  6957               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 50310                           
 50311                           ; BSR set to: 1
 50312  015DAA  0012               	return	
 50313  015DAC                     __end_of_USBIncrement1msInternalTimers:
 50314                           	opt stack 0
 50315                           tosu	equ	0xFFF
 50316                           tosh	equ	0xFFE
 50317                           tosl	equ	0xFFD
 50318                           pclatu	equ	0xFFB
 50319                           pclath	equ	0xFFA
 50320                           tblptru	equ	0xFF8
 50321                           tblptrh	equ	0xFF7
 50322                           tblptrl	equ	0xFF6
 50323                           tablat	equ	0xFF5
 50324                           prodh	equ	0xFF4
 50325                           prodl	equ	0xFF3
 50326                           intcon	equ	0xFF2
 50327                           indf0	equ	0xFEF
 50328                           postinc0	equ	0xFEE
 50329                           fsr0h	equ	0xFEA
 50330                           fsr0l	equ	0xFE9
 50331                           wreg	equ	0xFE8
 50332                           indf1	equ	0xFE7
 50333                           postinc1	equ	0xFE6
 50334                           postdec1	equ	0xFE5
 50335                           plusw1	equ	0xFE3
 50336                           fsr1h	equ	0xFE2
 50337                           fsr1l	equ	0xFE1
 50338                           indf2	equ	0xFDF
 50339                           postinc2	equ	0xFDE
 50340                           postdec2	equ	0xFDD
 50341                           plusw2	equ	0xFDB
 50342                           fsr2h	equ	0xFDA
 50343                           fsr2l	equ	0xFD9
 50344                           status	equ	0xFD8
 50345                           
 50346 ;; *************** function _USBCtrlEPService *****************
 50347 ;; Defined at:
 50348 ;;		line 2374 in file "usb_device.c"
 50349 ;; Parameters:    Size  Location     Type
 50350 ;;		None
 50351 ;; Auto vars:     Size  Location     Type
 50352 ;;		None
 50353 ;; Return value:  Size  Location     Type
 50354 ;;                  1    wreg      void 
 50355 ;; Registers used:
 50356 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 50357 ;; Tracked objects:
 50358 ;;		On entry : 0/0
 50359 ;;		On exit  : 0/0
 50360 ;;		Unchanged: 0/0
 50361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50364 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50365 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50366 ;;Total ram usage:        1 bytes
 50367 ;; Hardware stack levels used:    1
 50368 ;; Hardware stack levels required when called:    7
 50369 ;; This function calls:
 50370 ;;		_USBCtrlTrfInHandler
 50371 ;;		_USBCtrlTrfOutHandler
 50372 ;;		_USBCtrlTrfSetupHandler
 50373 ;;		i2_memcpy
 50374 ;; This function is called by:
 50375 ;;		_USBDeviceTasks
 50376 ;; This function uses a non-reentrant model
 50377 ;;
 50378                           
 50379                           	psect	text211
 50380  013962                     __ptext211:
 50381                           	opt stack 0
 50382  013962                     _USBCtrlEPService:
 50383                           	opt stack 9
 50384                           
 50385                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 50386                           
 50387                           ; BSR set to: 1
 50388                           ;incstack = 0
 50389  013962  0E2D               	movlw	45
 50390  013964  0101               	movlb	1	; () banked
 50391  013966  6F5D               	movwf	_USBStatusStageTimeoutCounter& (0+255),b	;volatile
 50392                           
 50393                           ; BSR set to: 1
 50394                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 50395  013968  C05E  F01E         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 50396  01396C  0EFD               	movlw	253
 50397  01396E  161E               	andwf	??_USBCtrlEPService,f,c
 50398  013970  A4D8               	btfss	status,2,c
 50399  013972  D03B               	goto	i2l321
 50400                           
 50401                           ; BSR set to: 1
 50402                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 50403  013974  C05E  F01E         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 50404  013978  90D8               	bcf	status,0,c
 50405  01397A  321E               	rrcf	??_USBCtrlEPService,f,c
 50406  01397C  0E3F               	movlw	63
 50407  01397E  161E               	andwf	??_USBCtrlEPService,f,c
 50408  013980  501E               	movf	??_USBCtrlEPService,w,c
 50409  013982  0D04               	mullw	4
 50410  013984  0E00               	movlw	0
 50411  013986  24F3               	addwf	prodl,w,c
 50412  013988  6E5B               	movwf	_pBDTEntryEP0OutCurrent,c
 50413  01398A  0E0D               	movlw	13
 50414  01398C  20F4               	addwfc	prodh,w,c
 50415  01398E  6E5C               	movwf	_pBDTEntryEP0OutCurrent+1,c
 50416                           
 50417                           ; BSR set to: 1
 50418                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 50419  013990  C05B  F059         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 50420  013994  C05C  F05A         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 50421                           
 50422                           ; BSR set to: 1
 50423                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 50424  013998  0E04               	movlw	4
 50425  01399A  1859               	xorwf	_pBDTEntryEP0OutNext,w,c
 50426  01399C  6E59               	movwf	_pBDTEntryEP0OutNext,c
 50427  01399E  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 50428  0139A0  6E5A               	movwf	_pBDTEntryEP0OutNext+1,c
 50429                           
 50430                           ; BSR set to: 1
 50431                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 50432  0139A2  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 50433  0139A6  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 50434  0139AA  30DF               	rrcf	indf2,w,c
 50435  0139AC  32E8               	rrcf	wreg,f,c
 50436  0139AE  0B0F               	andlw	15
 50437  0139B0  0A0D               	xorlw	13
 50438  0139B2  A4D8               	btfss	status,2,c
 50439  0139B4  D017               	goto	i2l322
 50440                           
 50441                           ; BSR set to: 1
 50442                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 50443  0139B6  0E30               	movlw	48
 50444  0139B8  6E01               	movwf	i2memcpy@d1,c
 50445  0139BA  0E0D               	movlw	13
 50446  0139BC  6E02               	movwf	i2memcpy@d1+1,c
 50447  0139BE  EE20 F002          	lfsr	2,2
 50448  0139C2  505B               	movf	_pBDTEntryEP0OutCurrent,w,c
 50449  0139C4  26D9               	addwf	fsr2l,f,c
 50450  0139C6  505C               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 50451  0139C8  22DA               	addwfc	fsr2h,f,c
 50452  0139CA  CFDE F003          	movff	postinc2,i2memcpy@s1
 50453  0139CE  CFDD F004          	movff	postdec2,i2memcpy@s1+1
 50454  0139D2  0E00               	movlw	0
 50455  0139D4  6E06               	movwf	i2memcpy@n+1,c
 50456  0139D6  0E08               	movlw	8
 50457  0139D8  6E05               	movwf	i2memcpy@n,c
 50458  0139DA  EC2E  F0A5         	call	i2_memcpy	;wreg free
 50459                           
 50460                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 50461  0139DE  ECB7  F09E         	call	_USBCtrlTrfSetupHandler	;wreg free
 50462                           
 50463                           ;usb_device.c: 2411: }
 50464  0139E2  0012               	return	
 50465  0139E4                     i2l322:
 50466                           
 50467                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 50468  0139E4  ECA1  F0A4         	call	_USBCtrlTrfOutHandler	;wreg free
 50469                           
 50470                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 50471  0139E8  0012               	return	
 50472  0139EA                     i2l321:
 50473                           
 50474                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 50475  0139EA  505E               	movf	_USTATcopy,w,c	;volatile
 50476  0139EC  0BFD               	andlw	253
 50477  0139EE  0A04               	xorlw	4
 50478  0139F0  A4D8               	btfss	status,2,c
 50479  0139F2  0012               	return	
 50480                           
 50481                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 50482  0139F4  ECA4  F096         	call	_USBCtrlTrfInHandler	;wreg free
 50483  0139F8  0012               	return	
 50484  0139FA                     __end_of_USBCtrlEPService:
 50485                           	opt stack 0
 50486                           tosu	equ	0xFFF
 50487                           tosh	equ	0xFFE
 50488                           tosl	equ	0xFFD
 50489                           pclatu	equ	0xFFB
 50490                           pclath	equ	0xFFA
 50491                           tblptru	equ	0xFF8
 50492                           tblptrh	equ	0xFF7
 50493                           tblptrl	equ	0xFF6
 50494                           tablat	equ	0xFF5
 50495                           prodh	equ	0xFF4
 50496                           prodl	equ	0xFF3
 50497                           intcon	equ	0xFF2
 50498                           indf0	equ	0xFEF
 50499                           postinc0	equ	0xFEE
 50500                           fsr0h	equ	0xFEA
 50501                           fsr0l	equ	0xFE9
 50502                           wreg	equ	0xFE8
 50503                           indf1	equ	0xFE7
 50504                           postinc1	equ	0xFE6
 50505                           postdec1	equ	0xFE5
 50506                           plusw1	equ	0xFE3
 50507                           fsr1h	equ	0xFE2
 50508                           fsr1l	equ	0xFE1
 50509                           indf2	equ	0xFDF
 50510                           postinc2	equ	0xFDE
 50511                           postdec2	equ	0xFDD
 50512                           plusw2	equ	0xFDB
 50513                           fsr2h	equ	0xFDA
 50514                           fsr2l	equ	0xFD9
 50515                           status	equ	0xFD8
 50516                           
 50517 ;; *************** function i2_memcpy *****************
 50518 ;; Defined at:
 50519 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 50520 ;; Parameters:    Size  Location     Type
 50521 ;;  d1              2    0[COMRAM] PTR void 
 50522 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), i2c_eeprom_save_position@b
      +uffer(7), 
 50523 ;;		 -> ToSendDataBuffer(64), os(49), msd_buffer(512), SetupPkt(8), 
 50524 ;;  s1              2    2[COMRAM] PTR const void 
 50525 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 50526 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 50527 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 50528 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 50529 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main(80), dc_startup(80), 
 50530 ;;		 -> i2c_eeprom_recover_position@buffer(7), config(41), os.absolute_position(2), os.current_position_in_steps(4), 
 50531 ;;		 -> ReceivedDataBuffer(64), os(49), inq_resp(36), CtrlTrfData(8), 
 50532 ;;		 -> RAM(3759), SetupPkt(8), 
 50533 ;;  n               2    4[COMRAM] unsigned int 
 50534 ;; Auto vars:     Size  Location     Type
 50535 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
 50536 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 50537 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 50538 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 50539 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 50540 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main(80), dc_startup(80), 
 50541 ;;		 -> i2c_eeprom_recover_position@buffer(7), config(41), os.absolute_position(2), os.current_position_in_steps(4), 
 50542 ;;		 -> ReceivedDataBuffer(64), os(49), inq_resp(36), CtrlTrfData(8), 
 50543 ;;		 -> RAM(3759), SetupPkt(8), 
 50544 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
 50545 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), i2c_eeprom_save_position@b
      +uffer(7), 
 50546 ;;		 -> ToSendDataBuffer(64), os(49), msd_buffer(512), SetupPkt(8), 
 50547 ;;  memcpy          1   10[COMRAM] unsigned char 
 50548 ;; Return value:  Size  Location     Type
 50549 ;;                  2    0[COMRAM] PTR void 
 50550 ;; Registers used:
 50551 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 50552 ;; Tracked objects:
 50553 ;;		On entry : 0/0
 50554 ;;		On exit  : 0/0
 50555 ;;		Unchanged: 0/0
 50556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50557 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50558 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50560 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50561 ;;Total ram usage:       11 bytes
 50562 ;; Hardware stack levels used:    1
 50563 ;; This function calls:
 50564 ;;		Nothing
 50565 ;; This function is called by:
 50566 ;;		_USBCtrlEPService
 50567 ;;		_i2c_eeprom_save_position
 50568 ;; This function uses a non-reentrant model
 50569 ;;
 50570                           
 50571                           	psect	text212
 50572  014A5C                     __ptext212:
 50573                           	opt stack 0
 50574  014A5C                     i2_memcpy:
 50575                           	opt stack 15
 50576                           
 50577                           ;incstack = 0
 50578  014A5C  C003  F009         	movff	i2memcpy@s1,i2memcpy@s
 50579  014A60  C004  F00A         	movff	i2memcpy@s1+1,i2memcpy@s+1
 50580  014A64  C001  F007         	movff	i2memcpy@d1,i2memcpy@d
 50581  014A68  C002  F008         	movff	i2memcpy@d1+1,i2memcpy@d+1
 50582  014A6C  D01C               	goto	i2l3812
 50583  014A6E                     i2l16974:
 50584  014A6E  C009  FFF6         	movff	i2memcpy@s,tblptrl
 50585  014A72  C00A  FFF7         	movff	i2memcpy@s+1,tblptrh
 50586  014A76  0E00               	movlw	low (__mediumconst shr (0+16))
 50587  014A78  6EF8               	movwf	tblptru,c
 50588  014A7A  0E0E               	movlw	(high __ramtop+-1)
 50589  014A7C  64F7               	cpfsgt	tblptrh,c
 50590  014A7E  D003               	bra	i2u1618_47
 50591  014A80  0008               	tblrd		*
 50592  014A82  50F5               	movf	tablat,w,c
 50593  014A84  D005               	bra	i2u1618_40
 50594  014A86                     i2u1618_47:
 50595  014A86  CFF6 FFE9          	movff	tblptrl,fsr0l
 50596  014A8A  CFF7 FFEA          	movff	tblptrh,fsr0h
 50597  014A8E  50EF               	movf	indf0,w,c
 50598  014A90                     i2u1618_40:
 50599  014A90  6E0B               	movwf	i2memcpy@tmp,c
 50600  014A92  4A09               	infsnz	i2memcpy@s,f,c
 50601  014A94  2A0A               	incf	i2memcpy@s+1,f,c
 50602  014A96  C007  FFD9         	movff	i2memcpy@d,fsr2l
 50603  014A9A  C008  FFDA         	movff	i2memcpy@d+1,fsr2h
 50604  014A9E  C00B  FFDF         	movff	i2memcpy@tmp,indf2
 50605  014AA2  4A07               	infsnz	i2memcpy@d,f,c
 50606  014AA4  2A08               	incf	i2memcpy@d+1,f,c
 50607  014AA6                     i2l3812:
 50608  014AA6  0605               	decf	i2memcpy@n,f,c
 50609  014AA8  A0D8               	btfss	status,0,c
 50610  014AAA  0606               	decf	i2memcpy@n+1,f,c
 50611  014AAC  2805               	incf	i2memcpy@n,w,c
 50612  014AAE  E1DF               	bnz	i2l16974
 50613  014AB0  2806               	incf	i2memcpy@n+1,w,c
 50614  014AB2  B4D8               	btfsc	status,2,c
 50615  014AB4  0012               	return	
 50616  014AB6  D7DB               	goto	i2l3813
 50617  014AB8                     __end_ofi2_memcpy:
 50618                           	opt stack 0
 50619                           tosu	equ	0xFFF
 50620                           tosh	equ	0xFFE
 50621                           tosl	equ	0xFFD
 50622                           pclatu	equ	0xFFB
 50623                           pclath	equ	0xFFA
 50624                           tblptru	equ	0xFF8
 50625                           tblptrh	equ	0xFF7
 50626                           tblptrl	equ	0xFF6
 50627                           tablat	equ	0xFF5
 50628                           prodh	equ	0xFF4
 50629                           prodl	equ	0xFF3
 50630                           intcon	equ	0xFF2
 50631                           indf0	equ	0xFEF
 50632                           postinc0	equ	0xFEE
 50633                           fsr0h	equ	0xFEA
 50634                           fsr0l	equ	0xFE9
 50635                           wreg	equ	0xFE8
 50636                           indf1	equ	0xFE7
 50637                           postinc1	equ	0xFE6
 50638                           postdec1	equ	0xFE5
 50639                           plusw1	equ	0xFE3
 50640                           fsr1h	equ	0xFE2
 50641                           fsr1l	equ	0xFE1
 50642                           indf2	equ	0xFDF
 50643                           postinc2	equ	0xFDE
 50644                           postdec2	equ	0xFDD
 50645                           plusw2	equ	0xFDB
 50646                           fsr2h	equ	0xFDA
 50647                           fsr2l	equ	0xFD9
 50648                           status	equ	0xFD8
 50649                           
 50650 ;; *************** function _USBCtrlTrfSetupHandler *****************
 50651 ;; Defined at:
 50652 ;;		line 2467 in file "usb_device.c"
 50653 ;; Parameters:    Size  Location     Type
 50654 ;;		None
 50655 ;; Auto vars:     Size  Location     Type
 50656 ;;		None
 50657 ;; Return value:  Size  Location     Type
 50658 ;;                  1    wreg      void 
 50659 ;; Registers used:
 50660 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 50661 ;; Tracked objects:
 50662 ;;		On entry : 0/0
 50663 ;;		On exit  : 0/0
 50664 ;;		Unchanged: 0/0
 50665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50670 ;;Total ram usage:        0 bytes
 50671 ;; Hardware stack levels used:    1
 50672 ;; Hardware stack levels required when called:    6
 50673 ;; This function calls:
 50674 ;;		_USBCheckStdRequest
 50675 ;;		_USBCtrlEPServiceComplete
 50676 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 50677 ;; This function is called by:
 50678 ;;		_USBCtrlEPService
 50679 ;; This function uses a non-reentrant model
 50680 ;;
 50681                           
 50682                           	psect	text213
 50683  013D6E                     __ptext213:
 50684                           	opt stack 0
 50685  013D6E                     _USBCtrlTrfSetupHandler:
 50686                           	opt stack 9
 50687                           
 50688                           ;usb_device.c: 2472: shortPacketStatus = 0;
 50689                           
 50690                           ;incstack = 0
 50691  013D6E  0E00               	movlw	0
 50692  013D70  0101               	movlb	1	; () banked
 50693  013D72  6F63               	movwf	_shortPacketStatus& (0+255),b	;volatile
 50694                           
 50695                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 50696  013D74  0E00               	movlw	0
 50697  013D76  6F5C               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 50698                           
 50699                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 50700  013D78  0E00               	movlw	0
 50701  013D7A  6F59               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 50702                           
 50703                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 50704  013D7C  0E00               	movlw	0
 50705  013D7E  6F58               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 50706                           
 50707                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 50708  013D80  0E00               	movlw	0
 50709  013D82  6F5E               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 50710                           
 50711                           ;usb_device.c: 2477: controlTransferState = 0;
 50712  013D84  0E00               	movlw	0
 50713  013D86  6F62               	movwf	_controlTransferState& (0+255),b	;volatile
 50714                           
 50715                           ; BSR set to: 1
 50716                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 50717  013D88  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 50718  013D8C  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50719  013D90  0E7F               	movlw	127
 50720  013D92  16DF               	andwf	indf2,f,c
 50721                           
 50722                           ; BSR set to: 1
 50723                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 50724  013D94  0E04               	movlw	4
 50725  013D96  1909               	xorwf	_pBDTEntryIn& (0+255),w,b
 50726  013D98  6F09               	movwf	_pBDTEntryIn& (0+255),b
 50727  013D9A  510A               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 50728  013D9C  6F0A               	movwf	(_pBDTEntryIn+1)& (0+255),b
 50729                           
 50730                           ; BSR set to: 1
 50731                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 50732  013D9E  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 50733  013DA2  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50734  013DA6  0E7F               	movlw	127
 50735  013DA8  16DF               	andwf	indf2,f,c
 50736                           
 50737                           ; BSR set to: 1
 50738                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 50739  013DAA  0E04               	movlw	4
 50740  013DAC  1909               	xorwf	_pBDTEntryIn& (0+255),w,b
 50741  013DAE  6F09               	movwf	_pBDTEntryIn& (0+255),b
 50742  013DB0  510A               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 50743  013DB2  6F0A               	movwf	(_pBDTEntryIn+1)& (0+255),b
 50744                           
 50745                           ; BSR set to: 1
 50746                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 50747  013DB4  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50748  013DB8  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50749  013DBC  0E7F               	movlw	127
 50750  013DBE  16DF               	andwf	indf2,f,c
 50751                           
 50752                           ; BSR set to: 1
 50753                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 50754  013DC0  0E00               	movlw	0
 50755  013DC2  6E56               	movwf	_inPipes+3,c	;volatile
 50756                           
 50757                           ; BSR set to: 1
 50758                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 50759  013DC4  0E00               	movlw	0
 50760  013DC6  6E58               	movwf	_inPipes+5,c	;volatile
 50761  013DC8  0E00               	movlw	0
 50762  013DCA  6E57               	movwf	_inPipes+4,c	;volatile
 50763                           
 50764                           ; BSR set to: 1
 50765                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 50766  013DCC  0E00               	movlw	0
 50767  013DCE  6F03               	movwf	(_outPipes+3)& (0+255),b	;volatile
 50768                           
 50769                           ; BSR set to: 1
 50770                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 50771  013DD0  0E00               	movlw	0
 50772  013DD2  6F05               	movwf	(_outPipes+5)& (0+255),b	;volatile
 50773  013DD4  0E00               	movlw	0
 50774  013DD6  6F04               	movwf	(_outPipes+4)& (0+255),b	;volatile
 50775                           
 50776                           ; BSR set to: 1
 50777                           ;usb_device.c: 2502: USBCheckStdRequest();
 50778  013DD8  ECCC  F093         	call	_USBCheckStdRequest	;wreg free
 50779                           
 50780                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 50781  013DDC  0E00               	movlw	0
 50782  013DDE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 50783  013DE0  0E03               	movlw	3
 50784  013DE2  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 50785  013DE4  0E00               	movlw	0
 50786  013DE6  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 50787  013DE8  0E00               	movlw	0
 50788  013DEA  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 50789  013DEC  0E00               	movlw	0
 50790  013DEE  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 50791  013DF0  0E00               	movlw	0
 50792  013DF2  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 50793  013DF4  EC42  F09F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 50794                           
 50795                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 50796  013DF8  EC87  F08D         	call	_USBCtrlEPServiceComplete	;wreg free
 50797  013DFC  0012               	return		;funcret
 50798  013DFE                     __end_of_USBCtrlTrfSetupHandler:
 50799                           	opt stack 0
 50800                           tosu	equ	0xFFF
 50801                           tosh	equ	0xFFE
 50802                           tosl	equ	0xFFD
 50803                           pclatu	equ	0xFFB
 50804                           pclath	equ	0xFFA
 50805                           tblptru	equ	0xFF8
 50806                           tblptrh	equ	0xFF7
 50807                           tblptrl	equ	0xFF6
 50808                           tablat	equ	0xFF5
 50809                           prodh	equ	0xFF4
 50810                           prodl	equ	0xFF3
 50811                           intcon	equ	0xFF2
 50812                           indf0	equ	0xFEF
 50813                           postinc0	equ	0xFEE
 50814                           fsr0h	equ	0xFEA
 50815                           fsr0l	equ	0xFE9
 50816                           wreg	equ	0xFE8
 50817                           indf1	equ	0xFE7
 50818                           postinc1	equ	0xFE6
 50819                           postdec1	equ	0xFE5
 50820                           plusw1	equ	0xFE3
 50821                           fsr1h	equ	0xFE2
 50822                           fsr1l	equ	0xFE1
 50823                           indf2	equ	0xFDF
 50824                           postinc2	equ	0xFDE
 50825                           postdec2	equ	0xFDD
 50826                           plusw2	equ	0xFDB
 50827                           fsr2h	equ	0xFDA
 50828                           fsr2l	equ	0xFD9
 50829                           status	equ	0xFD8
 50830                           
 50831 ;; *************** function _USBCtrlEPServiceComplete *****************
 50832 ;; Defined at:
 50833 ;;		line 1618 in file "usb_device.c"
 50834 ;; Parameters:    Size  Location     Type
 50835 ;;		None
 50836 ;; Auto vars:     Size  Location     Type
 50837 ;;		None
 50838 ;; Return value:  Size  Location     Type
 50839 ;;                  1    wreg      void 
 50840 ;; Registers used:
 50841 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 50842 ;; Tracked objects:
 50843 ;;		On entry : 0/0
 50844 ;;		On exit  : 0/0
 50845 ;;		Unchanged: 0/0
 50846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50851 ;;Total ram usage:        0 bytes
 50852 ;; Hardware stack levels used:    1
 50853 ;; Hardware stack levels required when called:    2
 50854 ;; This function calls:
 50855 ;;		_USBCtrlEPAllowDataStage
 50856 ;;		_USBCtrlEPAllowStatusStage
 50857 ;; This function is called by:
 50858 ;;		_USBCtrlTrfSetupHandler
 50859 ;; This function uses a non-reentrant model
 50860 ;;
 50861                           
 50862                           	psect	text214
 50863  011B0E                     __ptext214:
 50864                           	opt stack 0
 50865  011B0E                     _USBCtrlEPServiceComplete:
 50866                           	opt stack 12
 50867                           
 50868                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 50869                           
 50870                           ;incstack = 0
 50871  011B0E  9865               	bcf	3941,4,c	;volatile
 50872                           
 50873                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 50874  011B10  BE56               	btfsc	_inPipes+3,7,c	;volatile
 50875  011B12  D03A               	goto	i2l231
 50876                           
 50877                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 50878  011B14  0101               	movlb	1	; () banked
 50879  011B16  AF03               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 50880  011B18  D00C               	goto	i2l232
 50881                           
 50882                           ; BSR set to: 1
 50883                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 50884  011B1A  0E02               	movlw	2
 50885  011B1C  6F62               	movwf	_controlTransferState& (0+255),b	;volatile
 50886                           
 50887                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 50888  011B1E  5158               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 50889  011B20  B4D8               	btfsc	status,2,c
 50890                           
 50891                           ; BSR set to: 1
 50892                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 50893  011B22  EC18  F09C         	call	_USBCtrlEPAllowDataStage	;wreg free
 50894                           
 50895                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 50896  011B26  0E00               	movlw	0
 50897  011B28  0101               	movlb	1	; () banked
 50898  011B2A  6F5A               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 50899                           
 50900                           ; BSR set to: 1
 50901                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 50902  011B2C  0E00               	movlw	0
 50903  011B2E  6F5B               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 50904                           
 50905                           ;usb_device.c: 1654: }
 50906  011B30  0012               	return	
 50907  011B32                     i2l232:
 50908                           
 50909                           ; BSR set to: 1
 50910                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 50911                           
 50912                           ; BSR set to: 1
 50913  011B32  EE20 F001          	lfsr	2,1
 50914  011B36  5059               	movf	_pBDTEntryEP0OutNext,w,c
 50915  011B38  26D9               	addwf	fsr2l,f,c
 50916  011B3A  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 50917  011B3C  22DA               	addwfc	fsr2h,f,c
 50918  011B3E  0E08               	movlw	8
 50919  011B40  6EDF               	movwf	indf2,c
 50920                           
 50921                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 50922  011B42  EE20 F002          	lfsr	2,2
 50923  011B46  5059               	movf	_pBDTEntryEP0OutNext,w,c
 50924  011B48  26D9               	addwf	fsr2l,f,c
 50925  011B4A  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 50926  011B4C  22DA               	addwfc	fsr2h,f,c
 50927  011B4E  0E30               	movlw	48
 50928  011B50  6EDE               	movwf	postinc2,c
 50929  011B52  0E0D               	movlw	13
 50930  011B54  6EDD               	movwf	postdec2,c
 50931                           
 50932                           ; BSR set to: 1
 50933                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 50934  011B56  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50935  011B5A  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50936  011B5E  0E0C               	movlw	12
 50937  011B60  6EDF               	movwf	indf2,c
 50938                           
 50939                           ; BSR set to: 1
 50940                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 50941  011B62  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50942  011B66  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50943  011B6A  0E00               	movlw	0
 50944  011B6C  8EDB               	bsf	plusw2,7,c
 50945                           
 50946                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 50947  011B6E  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 50948  011B72  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50949  011B76  0E04               	movlw	4
 50950  011B78  6EDF               	movwf	indf2,c
 50951                           
 50952                           ; BSR set to: 1
 50953                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 50954  011B7A  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 50955  011B7E  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50956  011B82  0E00               	movlw	0
 50957  011B84  8EDB               	bsf	plusw2,7,c
 50958                           
 50959                           ; BSR set to: 1
 50960                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 50961  011B86  0012               	return	
 50962  011B88                     i2l231:
 50963                           
 50964                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 50965  011B88  010D               	movlb	13	; () banked
 50966  011B8A  AF30               	btfss	48,7,b	;volatile
 50967  011B8C  D012               	goto	i2l236
 50968                           
 50969                           ; BSR set to: 13
 50970                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 50971  011B8E  0E01               	movlw	1
 50972  011B90  0101               	movlb	1	; () banked
 50973  011B92  6F62               	movwf	_controlTransferState& (0+255),b	;volatile
 50974                           
 50975                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 50976  011B94  5159               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 50977  011B96  B4D8               	btfsc	status,2,c
 50978                           
 50979                           ; BSR set to: 1
 50980                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 50981  011B98  EC18  F09C         	call	_USBCtrlEPAllowDataStage	;wreg free
 50982                           
 50983                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 50984  011B9C  0E00               	movlw	0
 50985  011B9E  0101               	movlb	1	; () banked
 50986  011BA0  6F5A               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 50987                           
 50988                           ; BSR set to: 1
 50989                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 50990  011BA2  0E00               	movlw	0
 50991  011BA4  6F5B               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 50992                           
 50993                           ; BSR set to: 1
 50994                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 50995  011BA6  515C               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 50996  011BA8  A4D8               	btfss	status,2,c
 50997  011BAA  0012               	return	
 50998                           
 50999                           ; BSR set to: 1
 51000                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 51001  011BAC  EC42  F096         	call	_USBCtrlEPAllowStatusStage	;wreg free
 51002                           
 51003                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 51004  011BB0  0012               	return	
 51005  011BB2                     i2l236:
 51006                           
 51007                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 51008  011BB2  0E02               	movlw	2
 51009  011BB4  0101               	movlb	1	; () banked
 51010  011BB6  6F62               	movwf	_controlTransferState& (0+255),b	;volatile
 51011                           
 51012                           ; BSR set to: 1
 51013                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 51014  011BB8  EE20 F001          	lfsr	2,1
 51015  011BBC  5059               	movf	_pBDTEntryEP0OutNext,w,c
 51016  011BBE  26D9               	addwf	fsr2l,f,c
 51017  011BC0  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 51018  011BC2  22DA               	addwfc	fsr2h,f,c
 51019  011BC4  0E08               	movlw	8
 51020  011BC6  6EDF               	movwf	indf2,c
 51021                           
 51022                           ; BSR set to: 1
 51023                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 51024  011BC8  EE20 F002          	lfsr	2,2
 51025  011BCC  5059               	movf	_pBDTEntryEP0OutNext,w,c
 51026  011BCE  26D9               	addwf	fsr2l,f,c
 51027  011BD0  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 51028  011BD2  22DA               	addwfc	fsr2h,f,c
 51029  011BD4  0E30               	movlw	48
 51030  011BD6  6EDE               	movwf	postinc2,c
 51031  011BD8  0E0D               	movlw	13
 51032  011BDA  6EDD               	movwf	postdec2,c
 51033                           
 51034                           ; BSR set to: 1
 51035                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 51036  011BDC  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 51037  011BE0  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 51038  011BE4  0E04               	movlw	4
 51039  011BE6  6EDF               	movwf	indf2,c
 51040                           
 51041                           ; BSR set to: 1
 51042                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 51043  011BE8  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 51044  011BEC  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 51045  011BF0  0E00               	movlw	0
 51046  011BF2  8EDB               	bsf	plusw2,7,c
 51047                           
 51048                           ; BSR set to: 1
 51049                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 51050  011BF4  0E00               	movlw	0
 51051  011BF6  6F5A               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 51052                           
 51053                           ; BSR set to: 1
 51054                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 51055  011BF8  0E00               	movlw	0
 51056  011BFA  6F5B               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 51057                           
 51058                           ; BSR set to: 1
 51059                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 51060  011BFC  515C               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 51061  011BFE  A4D8               	btfss	status,2,c
 51062  011C00  0012               	return	
 51063                           
 51064                           ; BSR set to: 1
 51065                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 51066  011C02  EC42  F096         	call	_USBCtrlEPAllowStatusStage	;wreg free
 51067  011C06  0012               	return	
 51068  011C08                     __end_of_USBCtrlEPServiceComplete:
 51069                           	opt stack 0
 51070                           tosu	equ	0xFFF
 51071                           tosh	equ	0xFFE
 51072                           tosl	equ	0xFFD
 51073                           pclatu	equ	0xFFB
 51074                           pclath	equ	0xFFA
 51075                           tblptru	equ	0xFF8
 51076                           tblptrh	equ	0xFF7
 51077                           tblptrl	equ	0xFF6
 51078                           tablat	equ	0xFF5
 51079                           prodh	equ	0xFF4
 51080                           prodl	equ	0xFF3
 51081                           intcon	equ	0xFF2
 51082                           indf0	equ	0xFEF
 51083                           postinc0	equ	0xFEE
 51084                           fsr0h	equ	0xFEA
 51085                           fsr0l	equ	0xFE9
 51086                           wreg	equ	0xFE8
 51087                           indf1	equ	0xFE7
 51088                           postinc1	equ	0xFE6
 51089                           postdec1	equ	0xFE5
 51090                           plusw1	equ	0xFE3
 51091                           fsr1h	equ	0xFE2
 51092                           fsr1l	equ	0xFE1
 51093                           indf2	equ	0xFDF
 51094                           postinc2	equ	0xFDE
 51095                           postdec2	equ	0xFDD
 51096                           plusw2	equ	0xFDB
 51097                           fsr2h	equ	0xFDA
 51098                           fsr2l	equ	0xFD9
 51099                           status	equ	0xFD8
 51100                           
 51101 ;; *************** function _USBCtrlEPAllowDataStage *****************
 51102 ;; Defined at:
 51103 ;;		line 1490 in file "usb_device.c"
 51104 ;; Parameters:    Size  Location     Type
 51105 ;;		None
 51106 ;; Auto vars:     Size  Location     Type
 51107 ;;		None
 51108 ;; Return value:  Size  Location     Type
 51109 ;;                  1    wreg      void 
 51110 ;; Registers used:
 51111 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 51112 ;; Tracked objects:
 51113 ;;		On entry : 0/0
 51114 ;;		On exit  : 0/0
 51115 ;;		Unchanged: 0/0
 51116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51121 ;;Total ram usage:        0 bytes
 51122 ;; Hardware stack levels used:    1
 51123 ;; Hardware stack levels required when called:    1
 51124 ;; This function calls:
 51125 ;;		_USBCtrlTrfTxService
 51126 ;; This function is called by:
 51127 ;;		_USBCtrlEPServiceComplete
 51128 ;; This function uses a non-reentrant model
 51129 ;;
 51130                           
 51131                           	psect	text215
 51132  013830                     __ptext215:
 51133                           	opt stack 0
 51134  013830                     _USBCtrlEPAllowDataStage:
 51135                           	opt stack 12
 51136                           
 51137                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 51138                           
 51139                           ;incstack = 0
 51140  013830  0E00               	movlw	0
 51141  013832  0101               	movlb	1	; () banked
 51142  013834  6F59               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 51143                           
 51144                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 51145  013836  0E00               	movlw	0
 51146  013838  6F58               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 51147                           
 51148                           ; BSR set to: 1
 51149                           ;usb_device.c: 1495: if(controlTransferState == 2)
 51150  01383A  0E02               	movlw	2
 51151  01383C  1962               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 51152  01383E  A4D8               	btfss	status,2,c
 51153  013840  D01F               	goto	i2l220
 51154                           
 51155                           ; BSR set to: 1
 51156                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 51157  013842  EE20 F001          	lfsr	2,1
 51158  013846  5059               	movf	_pBDTEntryEP0OutNext,w,c
 51159  013848  26D9               	addwf	fsr2l,f,c
 51160  01384A  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 51161  01384C  22DA               	addwfc	fsr2h,f,c
 51162  01384E  0E08               	movlw	8
 51163  013850  6EDF               	movwf	indf2,c
 51164                           
 51165                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 51166  013852  EE20 F002          	lfsr	2,2
 51167  013856  5059               	movf	_pBDTEntryEP0OutNext,w,c
 51168  013858  26D9               	addwf	fsr2l,f,c
 51169  01385A  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 51170  01385C  22DA               	addwfc	fsr2h,f,c
 51171  01385E  0E38               	movlw	56
 51172  013860  6EDE               	movwf	postinc2,c
 51173  013862  0E0D               	movlw	13
 51174  013864  6EDD               	movwf	postdec2,c
 51175                           
 51176                           ; BSR set to: 1
 51177                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 51178  013866  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 51179  01386A  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 51180  01386E  0E48               	movlw	72
 51181  013870  6EDF               	movwf	indf2,c
 51182                           
 51183                           ; BSR set to: 1
 51184                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 51185  013872  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 51186  013876  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 51187  01387A  0E00               	movlw	0
 51188  01387C  8EDB               	bsf	plusw2,7,c
 51189                           
 51190                           ;usb_device.c: 1502: }
 51191  01387E  0012               	return	
 51192  013880                     i2l220:
 51193                           
 51194                           ; BSR set to: 1
 51195                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 51196                           
 51197                           ; BSR set to: 1
 51198  013880  5057               	movf	_inPipes+4,w,c	;volatile
 51199  013882  010D               	movlb	13	; () banked
 51200  013884  5D36               	subwf	54,w,b	;volatile
 51201  013886  5058               	movf	_inPipes+5,w,c	;volatile
 51202  013888  5937               	subwfb	55,w,b	;volatile
 51203  01388A  B0D8               	btfsc	status,0,c
 51204  01388C  D004               	goto	i2l222
 51205                           
 51206                           ; BSR set to: 13
 51207                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 51208  01388E  CD36 F057          	movff	3382,_inPipes+4	;volatile
 51209  013892  CD37 F058          	movff	3383,_inPipes+5	;volatile
 51210  013896                     i2l222:
 51211                           
 51212                           ; BSR set to: 13
 51213                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 51214                           
 51215                           ; BSR set to: 13
 51216  013896  ECA3  F094         	call	_USBCtrlTrfTxService	;wreg free
 51217                           
 51218                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 51219  01389A  0101               	movlb	1	; () banked
 51220  01389C  EE20 F002          	lfsr	2,2
 51221  0138A0  5109               	movf	_pBDTEntryIn& (0+255),w,b
 51222  0138A2  26D9               	addwf	fsr2l,f,c
 51223  0138A4  510A               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 51224  0138A6  22DA               	addwfc	fsr2h,f,c
 51225  0138A8  0E38               	movlw	56
 51226  0138AA  6EDE               	movwf	postinc2,c
 51227  0138AC  0E0D               	movlw	13
 51228  0138AE  6EDD               	movwf	postdec2,c
 51229                           
 51230                           ; BSR set to: 1
 51231                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 51232  0138B0  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 51233  0138B4  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 51234  0138B8  0E48               	movlw	72
 51235  0138BA  6EDF               	movwf	indf2,c
 51236                           
 51237                           ; BSR set to: 1
 51238                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 51239  0138BC  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 51240  0138C0  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 51241  0138C4  0E00               	movlw	0
 51242  0138C6  8EDB               	bsf	plusw2,7,c
 51243  0138C8  0012               	return	
 51244  0138CA                     __end_of_USBCtrlEPAllowDataStage:
 51245                           	opt stack 0
 51246                           tosu	equ	0xFFF
 51247                           tosh	equ	0xFFE
 51248                           tosl	equ	0xFFD
 51249                           pclatu	equ	0xFFB
 51250                           pclath	equ	0xFFA
 51251                           tblptru	equ	0xFF8
 51252                           tblptrh	equ	0xFF7
 51253                           tblptrl	equ	0xFF6
 51254                           tablat	equ	0xFF5
 51255                           prodh	equ	0xFF4
 51256                           prodl	equ	0xFF3
 51257                           intcon	equ	0xFF2
 51258                           indf0	equ	0xFEF
 51259                           postinc0	equ	0xFEE
 51260                           fsr0h	equ	0xFEA
 51261                           fsr0l	equ	0xFE9
 51262                           wreg	equ	0xFE8
 51263                           indf1	equ	0xFE7
 51264                           postinc1	equ	0xFE6
 51265                           postdec1	equ	0xFE5
 51266                           plusw1	equ	0xFE3
 51267                           fsr1h	equ	0xFE2
 51268                           fsr1l	equ	0xFE1
 51269                           indf2	equ	0xFDF
 51270                           postinc2	equ	0xFDE
 51271                           postdec2	equ	0xFDD
 51272                           plusw2	equ	0xFDB
 51273                           fsr2h	equ	0xFDA
 51274                           fsr2l	equ	0xFD9
 51275                           status	equ	0xFD8
 51276                           
 51277 ;; *************** function _USBCheckStdRequest *****************
 51278 ;; Defined at:
 51279 ;;		line 2688 in file "usb_device.c"
 51280 ;; Parameters:    Size  Location     Type
 51281 ;;		None
 51282 ;; Auto vars:     Size  Location     Type
 51283 ;;		None
 51284 ;; Return value:  Size  Location     Type
 51285 ;;                  1    wreg      void 
 51286 ;; Registers used:
 51287 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 51288 ;; Tracked objects:
 51289 ;;		On entry : 0/0
 51290 ;;		On exit  : 0/0
 51291 ;;		Unchanged: 0/0
 51292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51297 ;;Total ram usage:        0 bytes
 51298 ;; Hardware stack levels used:    1
 51299 ;; Hardware stack levels required when called:    5
 51300 ;; This function calls:
 51301 ;;		_USBStdFeatureReqHandler
 51302 ;;		_USBStdGetDscHandler
 51303 ;;		_USBStdGetStatusHandler
 51304 ;;		_USBStdSetCfgHandler
 51305 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 51306 ;; This function is called by:
 51307 ;;		_USBCtrlTrfSetupHandler
 51308 ;; This function uses a non-reentrant model
 51309 ;;
 51310                           
 51311                           	psect	text216
 51312  012798                     __ptext216:
 51313                           	opt stack 0
 51314  012798                     _USBCheckStdRequest:
 51315                           	opt stack 9
 51316                           
 51317                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 51318                           
 51319                           ; BSR set to: 1
 51320                           ;incstack = 0
 51321  012798  010D               	movlb	13	; () banked
 51322  01279A  3930               	swapf	48,w,b	;volatile
 51323  01279C  32E8               	rrcf	wreg,f,c
 51324  01279E  0B03               	andlw	3
 51325  0127A0  0900               	iorlw	0
 51326  0127A2  A4D8               	btfss	status,2,c
 51327  0127A4  0012               	return	
 51328  0127A6  D042               	goto	i2l355
 51329  0127A8                     i2l356:
 51330                           
 51331                           ; BSR set to: 13
 51332                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 51333  0127A8  8E56               	bsf	_inPipes+3,7,c	;volatile
 51334                           
 51335                           ; BSR set to: 13
 51336                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 51337  0127AA  0E08               	movlw	8
 51338  0127AC  6E5D               	movwf	_USBDeviceState,c	;volatile
 51339                           
 51340                           ;usb_device.c: 2698: break;
 51341  0127AE  0012               	return	
 51342  0127B0                     
 51343                           ; BSR set to: 13
 51344                           ;usb_device.c: 2700: USBStdGetDscHandler();
 51345                           
 51346                           ; BSR set to: 13
 51347  0127B0  EC8C  F084         	call	_USBStdGetDscHandler	;wreg free
 51348                           
 51349                           ;usb_device.c: 2701: break;
 51350  0127B4  0012               	return	
 51351  0127B6                     
 51352                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 51353  0127B6  ECF1  F092         	call	_USBStdSetCfgHandler	;wreg free
 51354                           
 51355                           ;usb_device.c: 2704: break;
 51356  0127BA  0012               	return	
 51357  0127BC                     
 51358                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 51359  0127BC  0EC2               	movlw	low _USBActiveConfiguration
 51360  0127BE  6E53               	movwf	_inPipes,c	;volatile
 51361  0127C0  0E01               	movlw	high _USBActiveConfiguration
 51362  0127C2  6E54               	movwf	_inPipes+1,c	;volatile
 51363                           
 51364                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 51365  0127C4  8056               	bsf	_inPipes+3,0,c	;volatile
 51366                           
 51367                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 51368  0127C6  0E01               	movlw	1
 51369  0127C8  6E57               	movwf	_inPipes+4,c	;volatile
 51370                           
 51371                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 51372  0127CA  8E56               	bsf	_inPipes+3,7,c	;volatile
 51373                           
 51374                           ;usb_device.c: 2710: break;
 51375  0127CC  0012               	return	
 51376  0127CE                     
 51377                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 51378  0127CE  EC2E  F09B         	call	_USBStdGetStatusHandler	;wreg free
 51379                           
 51380                           ;usb_device.c: 2713: break;
 51381  0127D2  0012               	return	
 51382  0127D4                     
 51383                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 51384  0127D4  EC72  F06C         	call	_USBStdFeatureReqHandler	;wreg free
 51385                           
 51386                           ;usb_device.c: 2717: break;
 51387  0127D8  0012               	return	
 51388  0127DA                     
 51389                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 51390  0127DA  010D               	movlb	13	; () banked
 51391  0127DC  5134               	movf	52,w,b	;volatile
 51392  0127DE  0D01               	mullw	1
 51393  0127E0  0EBE               	movlw	low _USBAlternateInterface
 51394  0127E2  24F3               	addwf	prodl,w,c
 51395  0127E4  6E53               	movwf	_inPipes,c	;volatile
 51396  0127E6  0E01               	movlw	high _USBAlternateInterface
 51397  0127E8  20F4               	addwfc	prodh,w,c
 51398  0127EA  6E54               	movwf	_inPipes+1,c	;volatile
 51399                           
 51400                           ; BSR set to: 13
 51401                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 51402  0127EC  8056               	bsf	_inPipes+3,0,c	;volatile
 51403                           
 51404                           ; BSR set to: 13
 51405                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 51406  0127EE  0E01               	movlw	1
 51407  0127F0  6E57               	movwf	_inPipes+4,c	;volatile
 51408                           
 51409                           ; BSR set to: 13
 51410                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 51411  0127F2  8E56               	bsf	_inPipes+3,7,c	;volatile
 51412                           
 51413                           ;usb_device.c: 2723: break;
 51414  0127F4  0012               	return	
 51415  0127F6                     i2l365:
 51416                           
 51417                           ; BSR set to: 13
 51418                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 51419  0127F6  8E56               	bsf	_inPipes+3,7,c	;volatile
 51420                           
 51421                           ; BSR set to: 13
 51422                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 51423  0127F8  5134               	movf	52,w,b	;volatile
 51424  0127FA  0D01               	mullw	1
 51425  0127FC  0EBE               	movlw	low _USBAlternateInterface
 51426  0127FE  24F3               	addwf	prodl,w,c
 51427  012800  6ED9               	movwf	fsr2l,c
 51428  012802  0E01               	movlw	high _USBAlternateInterface
 51429  012804  20F4               	addwfc	prodh,w,c
 51430  012806  6EDA               	movwf	fsr2h,c
 51431  012808  CD32 FFDF          	movff	3378,indf2	;volatile
 51432                           
 51433                           ;usb_device.c: 2727: break;
 51434  01280C  0012               	return	
 51435  01280E                     
 51436                           ; BSR set to: 13
 51437                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 51438                           
 51439                           ; BSR set to: 13
 51440  01280E  0E00               	movlw	0
 51441  012810  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 51442  012812  0E02               	movlw	2
 51443  012814  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 51444  012816  0E00               	movlw	0
 51445  012818  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 51446  01281A  0E00               	movlw	0
 51447  01281C  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 51448  01281E  0E00               	movlw	0
 51449  012820  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 51450  012822  0E00               	movlw	0
 51451  012824  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 51452  012826  EC42  F09F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 51453                           
 51454                           ;usb_device.c: 2734: }
 51455                           
 51456                           ;usb_device.c: 2733: break;
 51457                           
 51458                           ;usb_device.c: 2732: default:
 51459                           
 51460                           ;usb_device.c: 2731: case 12:
 51461                           
 51462                           ;usb_device.c: 2730: break;
 51463  01282A  0012               	return	
 51464  01282C                     i2l355:
 51465  01282C  010D               	movlb	13	; () banked
 51466  01282E  5131               	movf	49,w,b	;volatile
 51467                           
 51468                           ; Switch size 1, requested type "space"
 51469                           ; Number of cases is 11, Range of values is 0 to 12
 51470                           ; switch strategies available:
 51471                           ; Name         Instructions Cycles
 51472                           ; simple_byte           34    18 (average)
 51473                           ;	Chosen strategy is simple_byte
 51474  012830  0A00               	xorlw	0	; case 0
 51475  012832  B4D8               	btfsc	status,2,c
 51476  012834  D7CC               	goto	i2l361
 51477  012836  0A01               	xorlw	1	; case 1
 51478  012838  B4D8               	btfsc	status,2,c
 51479  01283A  D7CC               	goto	i2l362
 51480  01283C  0A02               	xorlw	2	; case 3
 51481  01283E  B4D8               	btfsc	status,2,c
 51482  012840  D7C9               	goto	i2l362
 51483  012842  0A06               	xorlw	6	; case 5
 51484  012844  B4D8               	btfsc	status,2,c
 51485  012846  D7B0               	goto	i2l356
 51486  012848  0A03               	xorlw	3	; case 6
 51487  01284A  B4D8               	btfsc	status,2,c
 51488  01284C  D7B1               	goto	i2l358
 51489  01284E  0A01               	xorlw	1	; case 7
 51490  012850  B4D8               	btfsc	status,2,c
 51491  012852  D7DD               	goto	i2l366
 51492  012854  0A0F               	xorlw	15	; case 8
 51493  012856  B4D8               	btfsc	status,2,c
 51494  012858  D7B1               	goto	i2l360
 51495  01285A  0A01               	xorlw	1	; case 9
 51496  01285C  B4D8               	btfsc	status,2,c
 51497  01285E  D7AB               	goto	i2l359
 51498  012860  0A03               	xorlw	3	; case 10
 51499  012862  B4D8               	btfsc	status,2,c
 51500  012864  D7BA               	goto	i2l364
 51501  012866  0A01               	xorlw	1	; case 11
 51502  012868  B4D8               	btfsc	status,2,c
 51503  01286A  D7C5               	goto	i2l365
 51504  01286C  0A07               	xorlw	7	; case 12
 51505  01286E  0012               	return	
 51506  012870                     __end_of_USBCheckStdRequest:
 51507                           	opt stack 0
 51508                           tosu	equ	0xFFF
 51509                           tosh	equ	0xFFE
 51510                           tosl	equ	0xFFD
 51511                           pclatu	equ	0xFFB
 51512                           pclath	equ	0xFFA
 51513                           tblptru	equ	0xFF8
 51514                           tblptrh	equ	0xFF7
 51515                           tblptrl	equ	0xFF6
 51516                           tablat	equ	0xFF5
 51517                           prodh	equ	0xFF4
 51518                           prodl	equ	0xFF3
 51519                           intcon	equ	0xFF2
 51520                           indf0	equ	0xFEF
 51521                           postinc0	equ	0xFEE
 51522                           fsr0h	equ	0xFEA
 51523                           fsr0l	equ	0xFE9
 51524                           wreg	equ	0xFE8
 51525                           indf1	equ	0xFE7
 51526                           postinc1	equ	0xFE6
 51527                           postdec1	equ	0xFE5
 51528                           plusw1	equ	0xFE3
 51529                           fsr1h	equ	0xFE2
 51530                           fsr1l	equ	0xFE1
 51531                           indf2	equ	0xFDF
 51532                           postinc2	equ	0xFDE
 51533                           postdec2	equ	0xFDD
 51534                           plusw2	equ	0xFDB
 51535                           fsr2h	equ	0xFDA
 51536                           fsr2l	equ	0xFD9
 51537                           status	equ	0xFD8
 51538                           
 51539 ;; *************** function _USBStdSetCfgHandler *****************
 51540 ;; Defined at:
 51541 ;;		line 1970 in file "usb_device.c"
 51542 ;; Parameters:    Size  Location     Type
 51543 ;;		None
 51544 ;; Auto vars:     Size  Location     Type
 51545 ;;  i               1   23[COMRAM] unsigned char 
 51546 ;; Return value:  Size  Location     Type
 51547 ;;                  1    wreg      void 
 51548 ;; Registers used:
 51549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 51550 ;; Tracked objects:
 51551 ;;		On entry : 0/0
 51552 ;;		On exit  : 0/0
 51553 ;;		Unchanged: 0/0
 51554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51556 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51558 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51559 ;;Total ram usage:        1 bytes
 51560 ;; Hardware stack levels used:    1
 51561 ;; Hardware stack levels required when called:    4
 51562 ;; This function calls:
 51563 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 51564 ;;		i2_memset
 51565 ;; This function is called by:
 51566 ;;		_USBCheckStdRequest
 51567 ;; This function uses a non-reentrant model
 51568 ;;
 51569                           
 51570                           	psect	text217
 51571  0125E2                     __ptext217:
 51572                           	opt stack 0
 51573  0125E2                     _USBStdSetCfgHandler:
 51574                           	opt stack 9
 51575                           
 51576                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 51577                           
 51578                           ;incstack = 0
 51579  0125E2  8E56               	bsf	_inPipes+3,7,c	;volatile
 51580                           
 51581                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 51582  0125E4  0E27               	movlw	39
 51583  0125E6  6E01               	movwf	i2memset@p1,c
 51584  0125E8  0E0F               	movlw	15
 51585  0125EA  6E02               	movwf	i2memset@p1+1,c
 51586  0125EC  0E00               	movlw	0
 51587  0125EE  6E04               	movwf	i2memset@c+1,c
 51588  0125F0  0E00               	movlw	0
 51589  0125F2  6E03               	movwf	i2memset@c,c
 51590  0125F4  0E00               	movlw	0
 51591  0125F6  6E06               	movwf	i2memset@n+1,c
 51592  0125F8  0E02               	movlw	2
 51593  0125FA  6E05               	movwf	i2memset@n,c
 51594  0125FC  EC81  F0AD         	call	i2_memset	;wreg free
 51595                           
 51596                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 51597  012600  0E00               	movlw	0
 51598  012602  6E01               	movwf	i2memset@p1,c
 51599  012604  0E0D               	movlw	13
 51600  012606  6E02               	movwf	i2memset@p1+1,c
 51601  012608  0E00               	movlw	0
 51602  01260A  6E04               	movwf	i2memset@c+1,c
 51603  01260C  0E00               	movlw	0
 51604  01260E  6E03               	movwf	i2memset@c,c
 51605  012610  0E00               	movlw	0
 51606  012612  6E06               	movwf	i2memset@n+1,c
 51607  012614  0E30               	movlw	48
 51608  012616  6E05               	movwf	i2memset@n,c
 51609  012618  EC81  F0AD         	call	i2_memset	;wreg free
 51610                           
 51611                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 51612  01261C  8C65               	bsf	3941,6,c	;volatile
 51613                           
 51614                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 51615  01261E  0E00               	movlw	0
 51616  012620  6E18               	movwf	USBStdSetCfgHandler@i,c
 51617  012622                     i2l13576:
 51618  012622  0E02               	movlw	2
 51619  012624  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 51620  012626  D001               	goto	i2l272
 51621  012628  D016               	goto	i2u1200_40
 51622  01262A                     i2l272:
 51623                           
 51624                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 51625  01262A  5018               	movf	USBStdSetCfgHandler@i,w,c
 51626  01262C  0D01               	mullw	1
 51627  01262E  0E2E               	movlw	low _ep_data_in
 51628  012630  24F3               	addwf	prodl,w,c
 51629  012632  6ED9               	movwf	fsr2l,c
 51630  012634  0E01               	movlw	high _ep_data_in
 51631  012636  20F4               	addwfc	prodh,w,c
 51632  012638  6EDA               	movwf	fsr2h,c
 51633  01263A  0E00               	movlw	0
 51634  01263C  6EDF               	movwf	indf2,c
 51635                           
 51636                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 51637  01263E  5018               	movf	USBStdSetCfgHandler@i,w,c
 51638  012640  0D01               	mullw	1
 51639  012642  0E2B               	movlw	low _ep_data_out
 51640  012644  24F3               	addwf	prodl,w,c
 51641  012646  6ED9               	movwf	fsr2l,c
 51642  012648  0E01               	movlw	high _ep_data_out
 51643  01264A  20F4               	addwfc	prodh,w,c
 51644  01264C  6EDA               	movwf	fsr2h,c
 51645  01264E  0E00               	movlw	0
 51646  012650  6EDF               	movwf	indf2,c
 51647  012652  2A18               	incf	USBStdSetCfgHandler@i,f,c
 51648  012654  D7E6               	goto	i2l13576
 51649  012656                     i2u1200_40:
 51650                           
 51651                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 51652  012656  0EBE               	movlw	low _USBAlternateInterface
 51653  012658  6E01               	movwf	i2memset@p1,c
 51654  01265A  0E01               	movlw	high _USBAlternateInterface
 51655  01265C  6E02               	movwf	i2memset@p1+1,c
 51656  01265E  0E00               	movlw	0
 51657  012660  6E04               	movwf	i2memset@c+1,c
 51658  012662  0E00               	movlw	0
 51659  012664  6E03               	movwf	i2memset@c,c
 51660  012666  0E00               	movlw	0
 51661  012668  6E06               	movwf	i2memset@n+1,c
 51662  01266A  0E02               	movlw	2
 51663  01266C  6E05               	movwf	i2memset@n,c
 51664  01266E  EC81  F0AD         	call	i2_memset	;wreg free
 51665                           
 51666                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 51667  012672  9C65               	bcf	3941,6,c	;volatile
 51668                           
 51669                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 51670  012674  0E08               	movlw	8
 51671  012676  0101               	movlb	1	; () banked
 51672  012678  6F09               	movwf	_pBDTEntryIn& (0+255),b
 51673  01267A  0E0D               	movlw	13
 51674  01267C  6F0A               	movwf	(_pBDTEntryIn+1)& (0+255),b
 51675                           
 51676                           ; BSR set to: 1
 51677                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 51678  01267E  0E00               	movlw	0
 51679  012680  6E5B               	movwf	_pBDTEntryEP0OutCurrent,c
 51680  012682  0E0D               	movlw	13
 51681  012684  6E5C               	movwf	_pBDTEntryEP0OutCurrent+1,c
 51682                           
 51683                           ; BSR set to: 1
 51684                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 51685  012686  C05B  F059         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 51686  01268A  C05C  F05A         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 51687                           
 51688                           ; BSR set to: 1
 51689                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 51690  01268E  CD32 F1C2          	movff	3378,_USBActiveConfiguration	;volatile
 51691                           
 51692                           ; BSR set to: 1
 51693                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 51694  012692  51C2               	movf	_USBActiveConfiguration& (0+255),w,b	;volatile
 51695  012694  A4D8               	btfss	status,2,c
 51696  012696  D003               	goto	i2l274
 51697                           
 51698                           ; BSR set to: 1
 51699                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 51700  012698  0E10               	movlw	16
 51701  01269A  6E5D               	movwf	_USBDeviceState,c	;volatile
 51702                           
 51703                           ;usb_device.c: 2015: }
 51704  01269C  0012               	return	
 51705  01269E                     i2l274:
 51706                           
 51707                           ; BSR set to: 1
 51708                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 51709                           
 51710                           ; BSR set to: 1
 51711  01269E  0E00               	movlw	0
 51712  0126A0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 51713  0126A2  0E01               	movlw	1
 51714  0126A4  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 51715  0126A6  0EC2               	movlw	low _USBActiveConfiguration
 51716  0126A8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 51717  0126AA  0E01               	movlw	high _USBActiveConfiguration
 51718  0126AC  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 51719  0126AE  0E00               	movlw	0
 51720  0126B0  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 51721  0126B2  0E01               	movlw	1
 51722  0126B4  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 51723  0126B6  EC42  F09F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 51724                           
 51725                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 51726  0126BA  0E20               	movlw	32
 51727  0126BC  6E5D               	movwf	_USBDeviceState,c	;volatile
 51728  0126BE  0012               	return	
 51729  0126C0                     __end_of_USBStdSetCfgHandler:
 51730                           	opt stack 0
 51731                           tosu	equ	0xFFF
 51732                           tosh	equ	0xFFE
 51733                           tosl	equ	0xFFD
 51734                           pclatu	equ	0xFFB
 51735                           pclath	equ	0xFFA
 51736                           tblptru	equ	0xFF8
 51737                           tblptrh	equ	0xFF7
 51738                           tblptrl	equ	0xFF6
 51739                           tablat	equ	0xFF5
 51740                           prodh	equ	0xFF4
 51741                           prodl	equ	0xFF3
 51742                           intcon	equ	0xFF2
 51743                           indf0	equ	0xFEF
 51744                           postinc0	equ	0xFEE
 51745                           fsr0h	equ	0xFEA
 51746                           fsr0l	equ	0xFE9
 51747                           wreg	equ	0xFE8
 51748                           indf1	equ	0xFE7
 51749                           postinc1	equ	0xFE6
 51750                           postdec1	equ	0xFE5
 51751                           plusw1	equ	0xFE3
 51752                           fsr1h	equ	0xFE2
 51753                           fsr1l	equ	0xFE1
 51754                           indf2	equ	0xFDF
 51755                           postinc2	equ	0xFDE
 51756                           postdec2	equ	0xFDD
 51757                           plusw2	equ	0xFDB
 51758                           fsr2h	equ	0xFDA
 51759                           fsr2l	equ	0xFD9
 51760                           status	equ	0xFD8
 51761                           
 51762 ;; *************** function i2_memset *****************
 51763 ;; Defined at:
 51764 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 51765 ;; Parameters:    Size  Location     Type
 51766 ;;  p1              2    0[COMRAM] PTR void 
 51767 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 51768 ;;  c               2    2[COMRAM] int 
 51769 ;;  n               2    4[COMRAM] unsigned int 
 51770 ;; Auto vars:     Size  Location     Type
 51771 ;;  memset          2    6[COMRAM] PTR unsigned char 
 51772 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 51773 ;; Return value:  Size  Location     Type
 51774 ;;                  2    0[COMRAM] PTR void 
 51775 ;; Registers used:
 51776 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 51777 ;; Tracked objects:
 51778 ;;		On entry : 0/0
 51779 ;;		On exit  : 0/0
 51780 ;;		Unchanged: 0/0
 51781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51782 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51783 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51785 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51786 ;;Total ram usage:        8 bytes
 51787 ;; Hardware stack levels used:    1
 51788 ;; This function calls:
 51789 ;;		Nothing
 51790 ;; This function is called by:
 51791 ;;		_USBStdSetCfgHandler
 51792 ;;		i2_USBDeviceInit
 51793 ;; This function uses a non-reentrant model
 51794 ;;
 51795                           
 51796                           	psect	text218
 51797  015B02                     __ptext218:
 51798                           	opt stack 0
 51799  015B02                     i2_memset:
 51800                           	opt stack 15
 51801                           
 51802                           ;incstack = 0
 51803  015B02  C001  F007         	movff	i2memset@p1,i2memset@p
 51804  015B06  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 51805  015B0A  D008               	goto	i2l3818
 51806  015B0C                     i2l13506:
 51807  015B0C  C007  FFD9         	movff	i2memset@p,fsr2l
 51808  015B10  C008  FFDA         	movff	i2memset@p+1,fsr2h
 51809  015B14  C003  FFDF         	movff	i2memset@c,indf2
 51810  015B18  4A07               	infsnz	i2memset@p,f,c
 51811  015B1A  2A08               	incf	i2memset@p+1,f,c
 51812  015B1C                     i2l3818:
 51813  015B1C  0605               	decf	i2memset@n,f,c
 51814  015B1E  A0D8               	btfss	status,0,c
 51815  015B20  0606               	decf	i2memset@n+1,f,c
 51816  015B22  2805               	incf	i2memset@n,w,c
 51817  015B24  E1F3               	bnz	i2l13506
 51818  015B26  2806               	incf	i2memset@n+1,w,c
 51819  015B28  B4D8               	btfsc	status,2,c
 51820  015B2A  0012               	return	
 51821  015B2C  D7EF               	goto	i2l3819
 51822  015B2E                     __end_ofi2_memset:
 51823                           	opt stack 0
 51824                           tosu	equ	0xFFF
 51825                           tosh	equ	0xFFE
 51826                           tosl	equ	0xFFD
 51827                           pclatu	equ	0xFFB
 51828                           pclath	equ	0xFFA
 51829                           tblptru	equ	0xFF8
 51830                           tblptrh	equ	0xFF7
 51831                           tblptrl	equ	0xFF6
 51832                           tablat	equ	0xFF5
 51833                           prodh	equ	0xFF4
 51834                           prodl	equ	0xFF3
 51835                           intcon	equ	0xFF2
 51836                           indf0	equ	0xFEF
 51837                           postinc0	equ	0xFEE
 51838                           fsr0h	equ	0xFEA
 51839                           fsr0l	equ	0xFE9
 51840                           wreg	equ	0xFE8
 51841                           indf1	equ	0xFE7
 51842                           postinc1	equ	0xFE6
 51843                           postdec1	equ	0xFE5
 51844                           plusw1	equ	0xFE3
 51845                           fsr1h	equ	0xFE2
 51846                           fsr1l	equ	0xFE1
 51847                           indf2	equ	0xFDF
 51848                           postinc2	equ	0xFDE
 51849                           postdec2	equ	0xFDD
 51850                           plusw2	equ	0xFDB
 51851                           fsr2h	equ	0xFDA
 51852                           fsr2l	equ	0xFD9
 51853                           status	equ	0xFD8
 51854                           
 51855 ;; *************** function _USBStdGetStatusHandler *****************
 51856 ;; Defined at:
 51857 ;;		line 2131 in file "usb_device.c"
 51858 ;; Parameters:    Size  Location     Type
 51859 ;;		None
 51860 ;; Auto vars:     Size  Location     Type
 51861 ;;  p               2    1[COMRAM] PTR struct __BDT
 51862 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 51863 ;; Return value:  Size  Location     Type
 51864 ;;                  1    wreg      void 
 51865 ;; Registers used:
 51866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 51867 ;; Tracked objects:
 51868 ;;		On entry : 0/0
 51869 ;;		On exit  : 0/0
 51870 ;;		Unchanged: 0/0
 51871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51873 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51874 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51875 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51876 ;;Total ram usage:        3 bytes
 51877 ;; Hardware stack levels used:    1
 51878 ;; This function calls:
 51879 ;;		Nothing
 51880 ;; This function is called by:
 51881 ;;		_USBCheckStdRequest
 51882 ;; This function uses a non-reentrant model
 51883 ;;
 51884                           
 51885                           	psect	text219
 51886  01365C                     __ptext219:
 51887                           	opt stack 0
 51888  01365C                     _USBStdGetStatusHandler:
 51889                           	opt stack 13
 51890                           
 51891                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 51892                           
 51893                           ;incstack = 0
 51894  01365C  0E00               	movlw	0
 51895  01365E  010D               	movlb	13	; () banked
 51896  013660  6F38               	movwf	56,b	;volatile
 51897                           
 51898                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 51899  013662  0E00               	movlw	0
 51900  013664  6F39               	movwf	57,b	;volatile
 51901                           
 51902                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 51903  013666  D035               	goto	i2l293
 51904  013668                     i2l294:
 51905                           
 51906                           ; BSR set to: 13
 51907                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 51908  013668  8E56               	bsf	_inPipes+3,7,c	;volatile
 51909                           
 51910                           ; BSR set to: 13
 51911                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 51912                           
 51913                           ; BSR set to: 13
 51914                           
 51915                           ; BSR set to: 13
 51916                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 51917                           
 51918                           ;usb_device.c: 2144: if(0 == 1)
 51919  01366A  0101               	movlb	1	; () banked
 51920  01366C  0561               	decf	_RemoteWakeup& (0+255),w,b	;volatile
 51921  01366E  A4D8               	btfss	status,2,c
 51922  013670  D03B               	goto	i2l297
 51923                           
 51924                           ; BSR set to: 1
 51925                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 51926  013672  010D               	movlb	13	; () banked
 51927  013674  8338               	bsf	56,1,b	;volatile
 51928                           
 51929                           ; BSR set to: 13
 51930                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 51931  013676  D038               	goto	i2l297
 51932  013678                     i2l298:
 51933                           
 51934                           ; BSR set to: 13
 51935                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 51936  013678  8E56               	bsf	_inPipes+3,7,c	;volatile
 51937                           
 51938                           ;usb_device.c: 2156: break;
 51939  01367A  D036               	goto	i2l297
 51940  01367C                     i2l299:
 51941                           
 51942                           ; BSR set to: 13
 51943                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 51944  01367C  8E56               	bsf	_inPipes+3,7,c	;volatile
 51945                           
 51946                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 51947  01367E  BF34               	btfsc	52,7,b	;volatile
 51948  013680  D00A               	goto	i2l300
 51949                           
 51950                           ; BSR set to: 13
 51951                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 51952  013682  5134               	movf	52,w,b	;volatile
 51953  013684  0B0F               	andlw	15
 51954  013686  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 51955  013688  5001               	movf	??_USBStdGetStatusHandler,w,c
 51956  01368A  0D02               	mullw	2
 51957  01368C  0E0F               	movlw	low _pBDTEntryOut
 51958  01368E  24F3               	addwf	prodl,w,c
 51959  013690  6ED9               	movwf	fsr2l,c
 51960  013692  0E01               	movlw	high _pBDTEntryOut
 51961  013694  D009               	goto	L73
 51962  013696                     i2l300:
 51963                           
 51964                           ; BSR set to: 13
 51965                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 51966                           
 51967                           ; BSR set to: 13
 51968  013696  5134               	movf	52,w,b	;volatile
 51969  013698  0B0F               	andlw	15
 51970  01369A  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 51971  01369C  5001               	movf	??_USBStdGetStatusHandler,w,c
 51972  01369E  0D02               	mullw	2
 51973  0136A0  0E09               	movlw	low _pBDTEntryIn
 51974  0136A2  24F3               	addwf	prodl,w,c
 51975  0136A4  6ED9               	movwf	fsr2l,c
 51976  0136A6  0E01               	movlw	high _pBDTEntryIn
 51977  0136A8                     L73:
 51978  0136A8  20F4               	addwfc	prodh,w,c
 51979  0136AA  6EDA               	movwf	fsr2h,c
 51980  0136AC  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 51981  0136B0  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 51982                           
 51983                           ; BSR set to: 13
 51984                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 51985                           
 51986                           ; BSR set to: 13
 51987  0136B4  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 51988  0136B8  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 51989  0136BC  AEDF               	btfss	indf2,7,c
 51990  0136BE  D014               	goto	i2l297
 51991                           
 51992                           ; BSR set to: 13
 51993  0136C0  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 51994  0136C4  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 51995  0136C8  A4DF               	btfss	indf2,2,c
 51996  0136CA  D00E               	goto	i2l297
 51997                           
 51998                           ; BSR set to: 13
 51999                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 52000  0136CC  0E01               	movlw	1
 52001  0136CE  6F38               	movwf	56,b	;volatile
 52002                           
 52003                           ; BSR set to: 13
 52004                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 52005                           
 52006                           ; BSR set to: 13
 52007                           ;usb_device.c: 2176: break;
 52008  0136D0  D00B               	goto	i2l297
 52009  0136D2                     i2l293:
 52010                           
 52011                           ; BSR set to: 13
 52012                           
 52013                           ; BSR set to: 13
 52014  0136D2  5130               	movf	48,w,b	;volatile
 52015  0136D4  0B1F               	andlw	31
 52016                           
 52017                           ; Switch size 1, requested type "space"
 52018                           ; Number of cases is 3, Range of values is 0 to 2
 52019                           ; switch strategies available:
 52020                           ; Name         Instructions Cycles
 52021                           ; simple_byte           10     6 (average)
 52022                           ;	Chosen strategy is simple_byte
 52023  0136D6  0A00               	xorlw	0	; case 0
 52024  0136D8  B4D8               	btfsc	status,2,c
 52025  0136DA  D7C6               	goto	i2l294
 52026  0136DC  0A01               	xorlw	1	; case 1
 52027  0136DE  B4D8               	btfsc	status,2,c
 52028  0136E0  D7CB               	goto	i2l298
 52029  0136E2  0A03               	xorlw	3	; case 2
 52030  0136E4  B4D8               	btfsc	status,2,c
 52031  0136E6  D7CA               	goto	i2l299
 52032  0136E8                     i2l297:
 52033                           
 52034                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 52035  0136E8  AE56               	btfss	_inPipes+3,7,c	;volatile
 52036  0136EA  0012               	return	
 52037                           
 52038                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 52039  0136EC  0E38               	movlw	56
 52040  0136EE  6E53               	movwf	_inPipes,c	;volatile
 52041  0136F0  0E0D               	movlw	13
 52042  0136F2  6E54               	movwf	_inPipes+1,c	;volatile
 52043                           
 52044                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 52045  0136F4  8056               	bsf	_inPipes+3,0,c	;volatile
 52046                           
 52047                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 52048  0136F6  0E02               	movlw	2
 52049  0136F8  6E57               	movwf	_inPipes+4,c	;volatile
 52050  0136FA  0012               	return	
 52051  0136FC                     __end_of_USBStdGetStatusHandler:
 52052                           	opt stack 0
 52053                           tosu	equ	0xFFF
 52054                           tosh	equ	0xFFE
 52055                           tosl	equ	0xFFD
 52056                           pclatu	equ	0xFFB
 52057                           pclath	equ	0xFFA
 52058                           tblptru	equ	0xFF8
 52059                           tblptrh	equ	0xFF7
 52060                           tblptrl	equ	0xFF6
 52061                           tablat	equ	0xFF5
 52062                           prodh	equ	0xFF4
 52063                           prodl	equ	0xFF3
 52064                           intcon	equ	0xFF2
 52065                           indf0	equ	0xFEF
 52066                           postinc0	equ	0xFEE
 52067                           fsr0h	equ	0xFEA
 52068                           fsr0l	equ	0xFE9
 52069                           wreg	equ	0xFE8
 52070                           indf1	equ	0xFE7
 52071                           postinc1	equ	0xFE6
 52072                           postdec1	equ	0xFE5
 52073                           plusw1	equ	0xFE3
 52074                           fsr1h	equ	0xFE2
 52075                           fsr1l	equ	0xFE1
 52076                           indf2	equ	0xFDF
 52077                           postinc2	equ	0xFDE
 52078                           postdec2	equ	0xFDD
 52079                           plusw2	equ	0xFDB
 52080                           fsr2h	equ	0xFDA
 52081                           fsr2l	equ	0xFD9
 52082                           status	equ	0xFD8
 52083                           
 52084 ;; *************** function _USBStdGetDscHandler *****************
 52085 ;; Defined at:
 52086 ;;		line 2045 in file "usb_device.c"
 52087 ;; Parameters:    Size  Location     Type
 52088 ;;		None
 52089 ;; Auto vars:     Size  Location     Type
 52090 ;;		None
 52091 ;; Return value:  Size  Location     Type
 52092 ;;                  1    wreg      void 
 52093 ;; Registers used:
 52094 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 52095 ;; Tracked objects:
 52096 ;;		On entry : 0/0
 52097 ;;		On exit  : 0/0
 52098 ;;		Unchanged: 0/0
 52099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52102 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52103 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52104 ;;Total ram usage:        2 bytes
 52105 ;; Hardware stack levels used:    1
 52106 ;; This function calls:
 52107 ;;		Nothing
 52108 ;; This function is called by:
 52109 ;;		_USBCheckStdRequest
 52110 ;; This function uses a non-reentrant model
 52111 ;;
 52112                           
 52113                           	psect	text220
 52114  010918                     __ptext220:
 52115                           	opt stack 0
 52116  010918                     _USBStdGetDscHandler:
 52117                           	opt stack 13
 52118                           
 52119                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 52120                           
 52121                           ;incstack = 0
 52122  010918  0E80               	movlw	128
 52123  01091A  010D               	movlb	13	; () banked
 52124  01091C  1930               	xorwf	48,w,b	;volatile
 52125  01091E  A4D8               	btfss	status,2,c
 52126  010920  0012               	return	
 52127                           
 52128                           ; BSR set to: 13
 52129                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 52130  010922  0EC0               	movlw	192
 52131  010924  6E56               	movwf	_inPipes+3,c	;volatile
 52132                           
 52133                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 52134  010926  D082               	goto	i2l280
 52135  010928                     
 52136                           ; BSR set to: 13
 52137                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 52138                           
 52139                           ; BSR set to: 13
 52140  010928  0E70               	movlw	low _device_dsc
 52141  01092A  6E53               	movwf	_inPipes,c	;volatile
 52142  01092C  0EA2               	movlw	high _device_dsc
 52143  01092E  6E54               	movwf	_inPipes+1,c	;volatile
 52144                           
 52145                           ; BSR set to: 13
 52146                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 52147  010930  0E00               	movlw	0
 52148  010932  6E58               	movwf	_inPipes+5,c	;volatile
 52149  010934  0E12               	movlw	18
 52150  010936  6E57               	movwf	_inPipes+4,c	;volatile
 52151                           
 52152                           ;usb_device.c: 2060: break;
 52153  010938  0012               	return	
 52154  01093A                     
 52155                           ; BSR set to: 13
 52156                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 52157                           
 52158                           ; BSR set to: 13
 52159  01093A  5132               	movf	50,w,b	;volatile
 52160  01093C  A4D8               	btfss	status,2,c
 52161  01093E  D042               	goto	i2l284
 52162                           
 52163                           ; BSR set to: 13
 52164                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 52165  010940  5132               	movf	50,w,b	;volatile
 52166  010942  0D02               	mullw	2
 52167  010944  0EEC               	movlw	low _USB_CD_Ptr
 52168  010946  24F3               	addwf	prodl,w,c
 52169  010948  6EF6               	movwf	tblptrl,c
 52170  01094A  0E9D               	movlw	high _USB_CD_Ptr
 52171  01094C  20F4               	addwfc	prodh,w,c
 52172  01094E  6EF7               	movwf	tblptrh,c
 52173  010950                     	if	1	;There are 3 active tblptr bytes
 52174  010950  6AF8               	clrf	tblptru,c
 52175  010952  0E00               	movlw	low (__mediumconst shr (0+16))
 52176  010954  22F8               	addwfc	tblptru,f,c
 52177  010956                     	endif
 52178  010956  0009               	tblrd		*+
 52179  010958  CFF5 F053          	movff	tablat,_inPipes	;volatile
 52180  01095C  000A               	tblrd		*-
 52181  01095E  CFF5 F054          	movff	tablat,_inPipes+1	;volatile
 52182                           
 52183                           ; BSR set to: 13
 52184                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 52185  010962  0E02               	movlw	2
 52186  010964  2453               	addwf	_inPipes,w,c	;volatile
 52187  010966  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 52188  010968  0E00               	movlw	0
 52189  01096A  2054               	addwfc	_inPipes+1,w,c	;volatile
 52190  01096C  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 52191  01096E  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 52192  010972  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 52193  010976  0E00               	movlw	low (__mediumconst shr (0+16))
 52194  010978  6EF8               	movwf	tblptru,c
 52195  01097A  0E0E               	movlw	(high __ramtop+-1)
 52196  01097C  64F7               	cpfsgt	tblptrh,c
 52197  01097E  D003               	bra	i2u1204_47
 52198  010980  0008               	tblrd		*
 52199  010982  50F5               	movf	tablat,w,c
 52200  010984  D005               	bra	i2u1204_40
 52201  010986                     i2u1204_47:
 52202  010986  CFF6 FFE9          	movff	tblptrl,fsr0l
 52203  01098A  CFF7 FFEA          	movff	tblptrh,fsr0h
 52204  01098E  50EF               	movf	indf0,w,c
 52205  010990                     i2u1204_40:
 52206  010990  6E57               	movwf	_inPipes+4,c	;volatile
 52207                           
 52208                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 52209  010992  0E03               	movlw	3
 52210  010994  2453               	addwf	_inPipes,w,c	;volatile
 52211  010996  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 52212  010998  0E00               	movlw	0
 52213  01099A  2054               	addwfc	_inPipes+1,w,c	;volatile
 52214  01099C  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 52215  01099E  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 52216  0109A2  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 52217  0109A6  0E00               	movlw	low (__mediumconst shr (0+16))
 52218  0109A8  6EF8               	movwf	tblptru,c
 52219  0109AA  0E0E               	movlw	(high __ramtop+-1)
 52220  0109AC  64F7               	cpfsgt	tblptrh,c
 52221  0109AE  D003               	bra	i2u1205_47
 52222  0109B0  0008               	tblrd		*
 52223  0109B2  50F5               	movf	tablat,w,c
 52224  0109B4  D005               	bra	i2u1205_40
 52225  0109B6                     i2u1205_47:
 52226  0109B6  CFF6 FFE9          	movff	tblptrl,fsr0l
 52227  0109BA  CFF7 FFEA          	movff	tblptrh,fsr0h
 52228  0109BE  50EF               	movf	indf0,w,c
 52229  0109C0                     i2u1205_40:
 52230  0109C0  6E58               	movwf	_inPipes+5,c	;volatile
 52231                           
 52232                           ;usb_device.c: 2078: }
 52233  0109C2  0012               	return	
 52234  0109C4                     i2l284:
 52235                           
 52236                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 52237  0109C4  0E00               	movlw	0
 52238  0109C6  6E56               	movwf	_inPipes+3,c	;volatile
 52239                           
 52240                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 52241  0109C8  0012               	return	
 52242  0109CA                     
 52243                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 52244  0109CA  0E04               	movlw	4
 52245  0109CC  010D               	movlb	13	; () banked
 52246  0109CE  6132               	cpfslt	50,b	;volatile
 52247  0109D0  D027               	goto	i2l287
 52248                           
 52249                           ; BSR set to: 13
 52250                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 52251  0109D2  5132               	movf	50,w,b	;volatile
 52252  0109D4  0D02               	mullw	2
 52253  0109D6  0EE4               	movlw	low _USB_SD_Ptr
 52254  0109D8  24F3               	addwf	prodl,w,c
 52255  0109DA  6EF6               	movwf	tblptrl,c
 52256  0109DC  0E9D               	movlw	high _USB_SD_Ptr
 52257  0109DE  20F4               	addwfc	prodh,w,c
 52258  0109E0  6EF7               	movwf	tblptrh,c
 52259  0109E2                     	if	1	;There are 3 active tblptr bytes
 52260  0109E2  6AF8               	clrf	tblptru,c
 52261  0109E4  0E00               	movlw	low (__mediumconst shr (0+16))
 52262  0109E6  22F8               	addwfc	tblptru,f,c
 52263  0109E8                     	endif
 52264  0109E8  0009               	tblrd		*+
 52265  0109EA  CFF5 F053          	movff	tablat,_inPipes	;volatile
 52266  0109EE  000A               	tblrd		*-
 52267  0109F0  CFF5 F054          	movff	tablat,_inPipes+1	;volatile
 52268                           
 52269                           ; BSR set to: 13
 52270                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 52271  0109F4  C053  FFF6         	movff	_inPipes,tblptrl	;volatile
 52272  0109F8  C054  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 52273  0109FC  0E00               	movlw	low (__mediumconst shr (0+16))
 52274  0109FE  6EF8               	movwf	tblptru,c
 52275  010A00  0E0E               	movlw	(high __ramtop+-1)
 52276  010A02  64F7               	cpfsgt	tblptrh,c
 52277  010A04  D003               	bra	i2u1207_47
 52278  010A06  0008               	tblrd		*
 52279  010A08  50F5               	movf	tablat,w,c
 52280  010A0A  D005               	bra	i2u1207_40
 52281  010A0C                     i2u1207_47:
 52282  010A0C  CFF6 FFE9          	movff	tblptrl,fsr0l
 52283  010A10  CFF7 FFEA          	movff	tblptrh,fsr0h
 52284  010A14  50EF               	movf	indf0,w,c
 52285  010A16                     i2u1207_40:
 52286  010A16  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 52287  010A18  5001               	movf	??_USBStdGetDscHandler,w,c
 52288  010A1A  6E57               	movwf	_inPipes+4,c	;volatile
 52289  010A1C  6A58               	clrf	_inPipes+5,c	;volatile
 52290                           
 52291                           ;usb_device.c: 2094: }
 52292  010A1E  0012               	return	
 52293  010A20                     i2l287:
 52294                           
 52295                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 52296  010A20  0E00               	movlw	0
 52297  010A22  6E56               	movwf	_inPipes+3,c	;volatile
 52298                           
 52299                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 52300  010A24  0012               	return	
 52301  010A26                     
 52302                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 52303  010A26  0E00               	movlw	0
 52304  010A28  6E56               	movwf	_inPipes+3,c	;volatile
 52305                           
 52306                           ;usb_device.c: 2112: }
 52307                           
 52308                           ;usb_device.c: 2111: break;
 52309  010A2A  0012               	return	
 52310  010A2C                     i2l280:
 52311  010A2C  010D               	movlb	13	; () banked
 52312  010A2E  5133               	movf	51,w,b	;volatile
 52313                           
 52314                           ; Switch size 1, requested type "space"
 52315                           ; Number of cases is 3, Range of values is 1 to 3
 52316                           ; switch strategies available:
 52317                           ; Name         Instructions Cycles
 52318                           ; simple_byte           10     6 (average)
 52319                           ;	Chosen strategy is simple_byte
 52320  010A30  0A01               	xorlw	1	; case 1
 52321  010A32  B4D8               	btfsc	status,2,c
 52322  010A34  D779               	goto	i2l281
 52323  010A36  0A03               	xorlw	3	; case 2
 52324  010A38  B4D8               	btfsc	status,2,c
 52325  010A3A  D77F               	goto	i2l283
 52326  010A3C  0A01               	xorlw	1	; case 3
 52327  010A3E  B4D8               	btfsc	status,2,c
 52328  010A40  D7C4               	goto	i2l286
 52329  010A42  D7F1               	goto	i2l289
 52330  010A44                     __end_of_USBStdGetDscHandler:
 52331                           	opt stack 0
 52332                           tosu	equ	0xFFF
 52333                           tosh	equ	0xFFE
 52334                           tosl	equ	0xFFD
 52335                           pclatu	equ	0xFFB
 52336                           pclath	equ	0xFFA
 52337                           tblptru	equ	0xFF8
 52338                           tblptrh	equ	0xFF7
 52339                           tblptrl	equ	0xFF6
 52340                           tablat	equ	0xFF5
 52341                           prodh	equ	0xFF4
 52342                           prodl	equ	0xFF3
 52343                           intcon	equ	0xFF2
 52344                           indf0	equ	0xFEF
 52345                           postinc0	equ	0xFEE
 52346                           fsr0h	equ	0xFEA
 52347                           fsr0l	equ	0xFE9
 52348                           wreg	equ	0xFE8
 52349                           indf1	equ	0xFE7
 52350                           postinc1	equ	0xFE6
 52351                           postdec1	equ	0xFE5
 52352                           plusw1	equ	0xFE3
 52353                           fsr1h	equ	0xFE2
 52354                           fsr1l	equ	0xFE1
 52355                           indf2	equ	0xFDF
 52356                           postinc2	equ	0xFDE
 52357                           postdec2	equ	0xFDD
 52358                           plusw2	equ	0xFDB
 52359                           fsr2h	equ	0xFDA
 52360                           fsr2l	equ	0xFD9
 52361                           status	equ	0xFD8
 52362                           
 52363 ;; *************** function _USBStdFeatureReqHandler *****************
 52364 ;; Defined at:
 52365 ;;		line 2756 in file "usb_device.c"
 52366 ;; Parameters:    Size  Location     Type
 52367 ;;		None
 52368 ;; Auto vars:     Size  Location     Type
 52369 ;;  p               2   27[COMRAM] PTR struct __BDT
 52370 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 52371 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 52372 ;;		 -> UEP0(1), 
 52373 ;;  current_ep_d    1   26[COMRAM] struct .
 52374 ;; Return value:  Size  Location     Type
 52375 ;;                  1    wreg      void 
 52376 ;; Registers used:
 52377 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 52378 ;; Tracked objects:
 52379 ;;		On entry : 0/0
 52380 ;;		On exit  : 0/0
 52381 ;;		Unchanged: 0/0
 52382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52384 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52385 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52386 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52387 ;;Total ram usage:        6 bytes
 52388 ;; Hardware stack levels used:    1
 52389 ;; Hardware stack levels required when called:    4
 52390 ;; This function calls:
 52391 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 52392 ;; This function is called by:
 52393 ;;		_USBCheckStdRequest
 52394 ;; This function uses a non-reentrant model
 52395 ;;
 52396                           
 52397                           	psect	text221
 52398  00D8E4                     __ptext221:
 52399                           	opt stack 0
 52400  00D8E4                     _USBStdFeatureReqHandler:
 52401                           	opt stack 9
 52402                           
 52403                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 52404                           
 52405                           ;incstack = 0
 52406  00D8E4  010D               	movlb	13	; () banked
 52407  00D8E6  0532               	decf	50,w,b	;volatile
 52408  00D8E8  A4D8               	btfss	status,2,c
 52409  00D8EA  D00F               	goto	i2l373
 52410                           
 52411                           ; BSR set to: 13
 52412  00D8EC  5130               	movf	48,w,b	;volatile
 52413  00D8EE  0B1F               	andlw	31
 52414  00D8F0  0900               	iorlw	0
 52415  00D8F2  A4D8               	btfss	status,2,c
 52416  00D8F4  D00A               	goto	i2l373
 52417                           
 52418                           ; BSR set to: 13
 52419                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 52420  00D8F6  8E56               	bsf	_inPipes+3,7,c	;volatile
 52421                           
 52422                           ; BSR set to: 13
 52423                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 52424  00D8F8  0E03               	movlw	3
 52425  00D8FA  1931               	xorwf	49,w,b	;volatile
 52426  00D8FC  A4D8               	btfss	status,2,c
 52427  00D8FE  D002               	goto	i2l372
 52428                           
 52429                           ; BSR set to: 13
 52430                           ;usb_device.c: 2806: RemoteWakeup = 1;
 52431  00D900  0E01               	movlw	1
 52432  00D902  D001               	goto	L74
 52433  00D904                     i2l372:
 52434                           
 52435                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 52436                           
 52437                           ; BSR set to: 1
 52438  00D904  0E00               	movlw	0
 52439  00D906                     L74:
 52440  00D906  0101               	movlb	1	; () banked
 52441  00D908  6F61               	movwf	_RemoteWakeup& (0+255),b	;volatile
 52442  00D90A                     i2l373:
 52443                           
 52444                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 52445                           
 52446                           ; BSR set to: 1
 52447  00D90A  010D               	movlb	13	; () banked
 52448  00D90C  5132               	movf	50,w,b	;volatile
 52449  00D90E  A4D8               	btfss	status,2,c
 52450  00D910  0012               	return	
 52451                           
 52452                           ; BSR set to: 13
 52453  00D912  5130               	movf	48,w,b	;volatile
 52454  00D914  0B1F               	andlw	31
 52455  00D916  0A02               	xorlw	2
 52456  00D918  A4D8               	btfss	status,2,c
 52457  00D91A  0012               	return	
 52458                           
 52459                           ; BSR set to: 13
 52460  00D91C  5134               	movf	52,w,b	;volatile
 52461  00D91E  0B0F               	andlw	15
 52462  00D920  0900               	iorlw	0
 52463  00D922  B4D8               	btfsc	status,2,c
 52464  00D924  0012               	return	
 52465                           
 52466                           ; BSR set to: 13
 52467  00D926  5134               	movf	52,w,b	;volatile
 52468  00D928  0B0F               	andlw	15
 52469  00D92A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52470  00D92C  0E03               	movlw	3
 52471  00D92E  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 52472  00D930  0012               	return	
 52473                           
 52474                           ; BSR set to: 13
 52475  00D932  0E20               	movlw	32
 52476  00D934  185D               	xorwf	_USBDeviceState,w,c	;volatile
 52477  00D936  A4D8               	btfss	status,2,c
 52478  00D938  0012               	return	
 52479                           
 52480                           ; BSR set to: 13
 52481                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 52482  00D93A  8E56               	bsf	_inPipes+3,7,c	;volatile
 52483                           
 52484                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 52485  00D93C  BF34               	btfsc	52,7,b	;volatile
 52486  00D93E  D019               	goto	i2l375
 52487                           
 52488                           ; BSR set to: 13
 52489                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 52490  00D940  5134               	movf	52,w,b	;volatile
 52491  00D942  0B0F               	andlw	15
 52492  00D944  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52493  00D946  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52494  00D948  0D02               	mullw	2
 52495  00D94A  0E0F               	movlw	low _pBDTEntryOut
 52496  00D94C  24F3               	addwf	prodl,w,c
 52497  00D94E  6ED9               	movwf	fsr2l,c
 52498  00D950  0E01               	movlw	high _pBDTEntryOut
 52499  00D952  20F4               	addwfc	prodh,w,c
 52500  00D954  6EDA               	movwf	fsr2h,c
 52501  00D956  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 52502  00D95A  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 52503                           
 52504                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 52505  00D95E  5134               	movf	52,w,b	;volatile
 52506  00D960  0B0F               	andlw	15
 52507  00D962  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52508  00D964  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52509  00D966  0D01               	mullw	1
 52510  00D968  0E2B               	movlw	low _ep_data_out
 52511  00D96A  24F3               	addwf	prodl,w,c
 52512  00D96C  6ED9               	movwf	fsr2l,c
 52513  00D96E  0E01               	movlw	high _ep_data_out
 52514  00D970  D018               	goto	L75
 52515  00D972                     i2l375:
 52516                           
 52517                           ; BSR set to: 13
 52518                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 52519                           
 52520                           ; BSR set to: 13
 52521  00D972  5134               	movf	52,w,b	;volatile
 52522  00D974  0B0F               	andlw	15
 52523  00D976  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52524  00D978  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52525  00D97A  0D02               	mullw	2
 52526  00D97C  0E09               	movlw	low _pBDTEntryIn
 52527  00D97E  24F3               	addwf	prodl,w,c
 52528  00D980  6ED9               	movwf	fsr2l,c
 52529  00D982  0E01               	movlw	high _pBDTEntryIn
 52530  00D984  20F4               	addwfc	prodh,w,c
 52531  00D986  6EDA               	movwf	fsr2h,c
 52532  00D988  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 52533  00D98C  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 52534                           
 52535                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 52536  00D990  5134               	movf	52,w,b	;volatile
 52537  00D992  0B0F               	andlw	15
 52538  00D994  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52539  00D996  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52540  00D998  0D01               	mullw	1
 52541  00D99A  0E2E               	movlw	low _ep_data_in
 52542  00D99C  24F3               	addwf	prodl,w,c
 52543  00D99E  6ED9               	movwf	fsr2l,c
 52544  00D9A0  0E01               	movlw	high _ep_data_in
 52545  00D9A2                     L75:
 52546  00D9A2  20F4               	addwfc	prodh,w,c
 52547  00D9A4  6EDA               	movwf	fsr2h,c
 52548  00D9A6  50DF               	movf	indf2,w,c
 52549  00D9A8  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 52550                           
 52551                           ; BSR set to: 13
 52552                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 52553                           
 52554                           ; BSR set to: 13
 52555  00D9AA  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 52556  00D9AC  D006               	goto	i2l377
 52557                           
 52558                           ; BSR set to: 13
 52559                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 52560  00D9AE  0EFB               	movlw	251
 52561  00D9B0  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 52562  00D9B2  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 52563  00D9B4  0EFF               	movlw	255
 52564  00D9B6  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 52565  00D9B8  D004               	goto	L76
 52566  00D9BA                     i2l377:
 52567                           
 52568                           ; BSR set to: 13
 52569                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 52570                           
 52571                           ; BSR set to: 13
 52572  00D9BA  0E04               	movlw	4
 52573  00D9BC  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 52574  00D9BE  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 52575  00D9C0  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 52576  00D9C2                     L76:
 52577  00D9C2  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 52578                           
 52579                           ; BSR set to: 13
 52580                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 52581                           
 52582                           ; BSR set to: 13
 52583  00D9C4  BF34               	btfsc	52,7,b	;volatile
 52584  00D9C6  D00A               	goto	i2l379
 52585                           
 52586                           ; BSR set to: 13
 52587                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 52588  00D9C8  5134               	movf	52,w,b	;volatile
 52589  00D9CA  0B0F               	andlw	15
 52590  00D9CC  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52591  00D9CE  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52592  00D9D0  0D02               	mullw	2
 52593  00D9D2  0E0F               	movlw	low _pBDTEntryOut
 52594  00D9D4  24F3               	addwf	prodl,w,c
 52595  00D9D6  6ED9               	movwf	fsr2l,c
 52596  00D9D8  0E01               	movlw	high _pBDTEntryOut
 52597  00D9DA  D009               	goto	L77
 52598  00D9DC                     i2l379:
 52599                           
 52600                           ; BSR set to: 13
 52601                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 52602                           
 52603                           ; BSR set to: 13
 52604  00D9DC  5134               	movf	52,w,b	;volatile
 52605  00D9DE  0B0F               	andlw	15
 52606  00D9E0  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52607  00D9E2  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52608  00D9E4  0D02               	mullw	2
 52609  00D9E6  0E09               	movlw	low _pBDTEntryIn
 52610  00D9E8  24F3               	addwf	prodl,w,c
 52611  00D9EA  6ED9               	movwf	fsr2l,c
 52612  00D9EC  0E01               	movlw	high _pBDTEntryIn
 52613  00D9EE                     L77:
 52614  00D9EE  20F4               	addwfc	prodh,w,c
 52615  00D9F0  6EDA               	movwf	fsr2h,c
 52616  00D9F2  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 52617  00D9F6  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 52618                           
 52619                           ; BSR set to: 13
 52620                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 52621                           
 52622                           ; BSR set to: 13
 52623  00D9FA  0E03               	movlw	3
 52624  00D9FC  1931               	xorwf	49,w,b	;volatile
 52625  00D9FE  A4D8               	btfss	status,2,c
 52626  00DA00  D02D               	goto	i2l381
 52627                           
 52628                           ; BSR set to: 13
 52629                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 52630  00DA02  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52631  00DA06  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52632  00DA0A  AEDF               	btfss	indf2,7,c
 52633  00DA0C  D01A               	goto	i2l384
 52634                           
 52635                           ; BSR set to: 13
 52636                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 52637  00DA0E  BF34               	btfsc	52,7,b	;volatile
 52638  00DA10  D00A               	goto	i2l383
 52639                           
 52640                           ; BSR set to: 13
 52641                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 52642  00DA12  5134               	movf	52,w,b	;volatile
 52643  00DA14  0B0F               	andlw	15
 52644  00DA16  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52645  00DA18  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52646  00DA1A  0D01               	mullw	1
 52647  00DA1C  0E2B               	movlw	low _ep_data_out
 52648  00DA1E  24F3               	addwf	prodl,w,c
 52649  00DA20  6ED9               	movwf	fsr2l,c
 52650  00DA22  0E01               	movlw	high _ep_data_out
 52651  00DA24  D00A               	goto	L78
 52652  00DA26                     i2l383:
 52653                           
 52654                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 52655                           
 52656                           ; BSR set to: 1
 52657  00DA26  010D               	movlb	13	; () banked
 52658  00DA28  5134               	movf	52,w,b	;volatile
 52659  00DA2A  0B0F               	andlw	15
 52660  00DA2C  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52661  00DA2E  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52662  00DA30  0D01               	mullw	1
 52663  00DA32  0E2E               	movlw	low _ep_data_in
 52664  00DA34  24F3               	addwf	prodl,w,c
 52665  00DA36  6ED9               	movwf	fsr2l,c
 52666  00DA38  0E01               	movlw	high _ep_data_in
 52667  00DA3A                     L78:
 52668  00DA3A  20F4               	addwfc	prodh,w,c
 52669  00DA3C  6EDA               	movwf	fsr2h,c
 52670  00DA3E  0101               	movlb	1	; () banked
 52671  00DA40  82DF               	bsf	indf2,1,c
 52672  00DA42                     i2l384:
 52673                           
 52674                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 52675                           
 52676                           ; BSR set to: 1
 52677                           
 52678                           ; BSR set to: 1
 52679  00DA42  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52680  00DA46  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52681  00DA4A  0E00               	movlw	0
 52682  00DA4C  84DB               	bsf	plusw2,2,c
 52683                           
 52684                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 52685  00DA4E  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52686  00DA52  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52687  00DA56  0E00               	movlw	0
 52688  00DA58  8EDB               	bsf	plusw2,7,c
 52689                           
 52690                           ;usb_device.c: 2878: }
 52691  00DA5A  0012               	return	
 52692  00DA5C                     i2l381:
 52693                           
 52694                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 52695  00DA5C  0E04               	movlw	4
 52696  00DA5E  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 52697  00DA60  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 52698  00DA62  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 52699  00DA64  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 52700                           
 52701                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 52702  00DA66  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52703  00DA6A  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52704  00DA6E  AEDF               	btfss	indf2,7,c
 52705  00DA70  D01B               	goto	i2l386
 52706                           
 52707                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 52708  00DA72  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52709  00DA76  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52710  00DA7A  0E7F               	movlw	127
 52711  00DA7C  16DF               	andwf	indf2,f,c
 52712                           
 52713                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 52714  00DA7E  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52715  00DA82  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52716  00DA86  0E00               	movlw	0
 52717  00DA88  8CDB               	bsf	plusw2,6,c
 52718                           
 52719                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 52720  00DA8A  0E00               	movlw	0
 52721  00DA8C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 52722  00DA8E  0E05               	movlw	5
 52723  00DA90  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 52724  00DA92  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 52725  00DA96  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 52726  00DA9A  0E00               	movlw	0
 52727  00DA9C  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 52728  00DA9E  0E02               	movlw	2
 52729  00DAA0  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 52730  00DAA2  EC42  F09F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 52731                           
 52732                           ;usb_device.c: 2893: }
 52733  00DAA6  D006               	goto	i2l387
 52734  00DAA8                     i2l386:
 52735                           
 52736                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 52737  00DAA8  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52738  00DAAC  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52739  00DAB0  0E00               	movlw	0
 52740  00DAB2  8CDB               	bsf	plusw2,6,c
 52741  00DAB4                     i2l387:
 52742                           
 52743                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 52744  00DAB4  0E04               	movlw	4
 52745  00DAB6  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 52746  00DAB8  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 52747  00DABA  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 52748  00DABC  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 52749                           
 52750                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 52751  00DABE  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 52752  00DAC0  D006               	goto	i2u1229_40
 52753  00DAC2  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52754  00DAC6  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52755  00DACA  AEDF               	btfss	indf2,7,c
 52756  00DACC  D030               	goto	i2l388
 52757  00DACE                     i2u1229_40:
 52758                           
 52759                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 52760  00DACE  010D               	movlb	13	; () banked
 52761  00DAD0  BF34               	btfsc	52,7,b	;volatile
 52762  00DAD2  D00A               	goto	i2l391
 52763                           
 52764                           ; BSR set to: 13
 52765                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 52766  00DAD4  5134               	movf	52,w,b	;volatile
 52767  00DAD6  0B0F               	andlw	15
 52768  00DAD8  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52769  00DADA  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52770  00DADC  0D01               	mullw	1
 52771  00DADE  0E2B               	movlw	low _ep_data_out
 52772  00DAE0  24F3               	addwf	prodl,w,c
 52773  00DAE2  6ED9               	movwf	fsr2l,c
 52774  00DAE4  0E01               	movlw	high _ep_data_out
 52775  00DAE6  D00A               	goto	L79
 52776  00DAE8                     i2l391:
 52777                           
 52778                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 52779                           
 52780                           ; BSR set to: 1
 52781  00DAE8  010D               	movlb	13	; () banked
 52782  00DAEA  5134               	movf	52,w,b	;volatile
 52783  00DAEC  0B0F               	andlw	15
 52784  00DAEE  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52785  00DAF0  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52786  00DAF2  0D01               	mullw	1
 52787  00DAF4  0E2E               	movlw	low _ep_data_in
 52788  00DAF6  24F3               	addwf	prodl,w,c
 52789  00DAF8  6ED9               	movwf	fsr2l,c
 52790  00DAFA  0E01               	movlw	high _ep_data_in
 52791  00DAFC                     L79:
 52792  00DAFC  20F4               	addwfc	prodh,w,c
 52793  00DAFE  6EDA               	movwf	fsr2h,c
 52794  00DB00  0101               	movlb	1	; () banked
 52795  00DB02  92DF               	bcf	indf2,1,c
 52796                           
 52797                           ; BSR set to: 1
 52798                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 52799                           
 52800                           ; BSR set to: 1
 52801  00DB04  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52802  00DB08  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52803  00DB0C  0E3B               	movlw	59
 52804  00DB0E  16DF               	andwf	indf2,f,c
 52805                           
 52806                           ; BSR set to: 1
 52807                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 52808  00DB10  0E00               	movlw	0
 52809  00DB12  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 52810  00DB14  0E05               	movlw	5
 52811  00DB16  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 52812  00DB18  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 52813  00DB1C  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 52814  00DB20  0E00               	movlw	0
 52815  00DB22  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 52816  00DB24  0E02               	movlw	2
 52817  00DB26  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 52818  00DB28  EC42  F09F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 52819                           
 52820                           ;usb_device.c: 2923: }
 52821  00DB2C  D006               	goto	i2l393
 52822  00DB2E                     i2l388:
 52823                           
 52824                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 52825  00DB2E  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52826  00DB32  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52827  00DB36  0E3B               	movlw	59
 52828  00DB38  16DF               	andwf	indf2,f,c
 52829  00DB3A                     i2l393:
 52830                           
 52831                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 52832  00DB3A  010D               	movlb	13	; () banked
 52833  00DB3C  5134               	movf	52,w,b	;volatile
 52834  00DB3E  0B0F               	andlw	15
 52835  00DB40  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52836  00DB42  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52837  00DB44  0D01               	mullw	1
 52838  00DB46  0E26               	movlw	38
 52839  00DB48  24F3               	addwf	prodl,w,c
 52840  00DB4A  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 52841  00DB4C  0E0F               	movlw	15
 52842  00DB4E  20F4               	addwfc	prodh,w,c
 52843  00DB50  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 52844                           
 52845                           ; BSR set to: 13
 52846                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 52847  00DB52  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 52848  00DB56  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 52849  00DB5A  0EFE               	movlw	254
 52850  00DB5C  16DF               	andwf	indf2,f,c
 52851                           
 52852                           ; BSR set to: 13
 52853  00DB5E  0012               	return	
 52854  00DB60                     __end_of_USBStdFeatureReqHandler:
 52855                           	opt stack 0
 52856                           tosu	equ	0xFFF
 52857                           tosh	equ	0xFFE
 52858                           tosl	equ	0xFFD
 52859                           pclatu	equ	0xFFB
 52860                           pclath	equ	0xFFA
 52861                           tblptru	equ	0xFF8
 52862                           tblptrh	equ	0xFF7
 52863                           tblptrl	equ	0xFF6
 52864                           tablat	equ	0xFF5
 52865                           prodh	equ	0xFF4
 52866                           prodl	equ	0xFF3
 52867                           intcon	equ	0xFF2
 52868                           indf0	equ	0xFEF
 52869                           postinc0	equ	0xFEE
 52870                           fsr0h	equ	0xFEA
 52871                           fsr0l	equ	0xFE9
 52872                           wreg	equ	0xFE8
 52873                           indf1	equ	0xFE7
 52874                           postinc1	equ	0xFE6
 52875                           postdec1	equ	0xFE5
 52876                           plusw1	equ	0xFE3
 52877                           fsr1h	equ	0xFE2
 52878                           fsr1l	equ	0xFE1
 52879                           indf2	equ	0xFDF
 52880                           postinc2	equ	0xFDE
 52881                           postdec2	equ	0xFDD
 52882                           plusw2	equ	0xFDB
 52883                           fsr2h	equ	0xFDA
 52884                           fsr2l	equ	0xFD9
 52885                           status	equ	0xFD8
 52886                           
 52887 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 52888 ;; Defined at:
 52889 ;;		line 54 in file "usb_events.c"
 52890 ;; Parameters:    Size  Location     Type
 52891 ;;  event           2   15[COMRAM] enum E6832
 52892 ;;  pdata           2   17[COMRAM] PTR void 
 52893 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 52894 ;;		 -> BDT(48), 
 52895 ;;  size            2   19[COMRAM] unsigned int 
 52896 ;; Auto vars:     Size  Location     Type
 52897 ;;		None
 52898 ;; Return value:  Size  Location     Type
 52899 ;;                  1    wreg      unsigned char 
 52900 ;; Registers used:
 52901 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 52902 ;; Tracked objects:
 52903 ;;		On entry : 0/0
 52904 ;;		On exit  : 0/0
 52905 ;;		Unchanged: 0/0
 52906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52907 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52909 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52910 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52911 ;;Total ram usage:        8 bytes
 52912 ;; Hardware stack levels used:    1
 52913 ;; Hardware stack levels required when called:    3
 52914 ;; This function calls:
 52915 ;;		_APP_DeviceCustomHIDInitialize
 52916 ;;		_APP_DeviceMSDInitialize
 52917 ;;		_MSDTransferTerminated
 52918 ;;		_USBCheckHIDRequest
 52919 ;;		_USBCheckMSDRequest
 52920 ;;		i2_SYSTEM_Initialize
 52921 ;; This function is called by:
 52922 ;;		_USBDeviceTasks
 52923 ;;		_USBStdSetCfgHandler
 52924 ;;		_USBSuspend
 52925 ;;		_USBWakeFromSuspend
 52926 ;;		_USBCtrlTrfSetupHandler
 52927 ;;		_USBCheckStdRequest
 52928 ;;		_USBStdFeatureReqHandler
 52929 ;; This function uses a non-reentrant model
 52930 ;;
 52931                           
 52932                           	psect	text222
 52933  013E84                     __ptext222:
 52934                           	opt stack 0
 52935  013E84                     _USER_USB_CALLBACK_EVENT_HANDLER:
 52936                           	opt stack 13
 52937                           
 52938                           ;usb_events.c: 56: switch((int)event)
 52939                           
 52940                           ;incstack = 0
 52941  013E84  D019               	goto	i2l816
 52942  013E86                     
 52943                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 52944  013E86  0E01               	movlw	1
 52945  013E88  EC18  F0A8         	call	i2_SYSTEM_Initialize
 52946                           
 52947                           ;usb_events.c: 79: break;
 52948  013E8C  0012               	return	
 52949  013E8E                     
 52950                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 52951  013E8E  0E02               	movlw	2
 52952  013E90  EC18  F0A8         	call	i2_SYSTEM_Initialize
 52953                           
 52954                           ;usb_events.c: 90: break;
 52955  013E94  0012               	return	
 52956  013E96                     
 52957                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 52958  013E96  EC7C  F0AC         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 52959                           
 52960                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 52961  013E9A  EC61  F0AF         	call	_APP_DeviceMSDInitialize	;wreg free
 52962                           
 52963                           ;usb_events.c: 100: break;
 52964                           
 52965                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 52966                           
 52967                           ;usb_events.c: 97: break;
 52968  013E9E  0012               	return	
 52969  013EA0                     
 52970                           ;usb_events.c: 105: USBCheckHIDRequest();
 52971  013EA0  EC38  F094         	call	_USBCheckHIDRequest	;wreg free
 52972                           
 52973                           ;usb_events.c: 108: USBCheckMSDRequest();
 52974  013EA4  EC66  F097         	call	_USBCheckMSDRequest	;wreg free
 52975                           
 52976                           ;usb_events.c: 112: break;
 52977                           
 52978                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 52979                           
 52980                           ;usb_events.c: 109: break;
 52981  013EA8  0012               	return	
 52982  013EAA                     
 52983                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 52984  013EAA  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 52985  013EAE  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 52986  013EB2  EC6F  F0A7         	call	_MSDTransferTerminated	;wreg free
 52987                           
 52988                           ;usb_events.c: 129: }
 52989                           
 52990                           ;usb_events.c: 128: break;
 52991                           
 52992                           ;usb_events.c: 127: default:
 52993                           
 52994                           ;usb_events.c: 125: break;
 52995  013EB6  0012               	return	
 52996  013EB8                     i2l816:
 52997  013EB8  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 52998  013EBC  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 52999                           
 53000                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 53001                           ; Switch size 1, requested type "space"
 53002                           ; Number of cases is 2, Range of values is 0 to 127
 53003                           ; switch strategies available:
 53004                           ; Name         Instructions Cycles
 53005                           ; simple_byte            7     4 (average)
 53006                           ;	Chosen strategy is simple_byte
 53007  013EC0  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 53008  013EC2  0A00               	xorlw	0	; case 0
 53009  013EC4  B4D8               	btfsc	status,2,c
 53010  013EC6  D004               	goto	i2l20088
 53011  013EC8  0A7F               	xorlw	127	; case 127
 53012  013ECA  A4D8               	btfss	status,2,c
 53013  013ECC  0012               	return	
 53014  013ECE  D01A               	goto	i2l20090
 53015  013ED0                     i2l20088:
 53016                           
 53017                           ; Switch size 1, requested type "space"
 53018                           ; Number of cases is 8, Range of values is 1 to 117
 53019                           ; switch strategies available:
 53020                           ; Name         Instructions Cycles
 53021                           ; simple_byte           25    13 (average)
 53022                           ;	Chosen strategy is simple_byte
 53023  013ED0  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 53024  013ED2  0A01               	xorlw	1	; case 1
 53025  013ED4  B4D8               	btfsc	status,2,c
 53026  013ED6  D7DF               	goto	i2l822
 53027  013ED8  0A03               	xorlw	3	; case 2
 53028  013EDA  B4D8               	btfsc	status,2,c
 53029  013EDC  0012               	return	
 53030  013EDE  0A01               	xorlw	1	; case 3
 53031  013EE0  B4D8               	btfsc	status,2,c
 53032  013EE2  D7DE               	goto	i2l824
 53033  013EE4  0A06               	xorlw	6	; case 5
 53034  013EE6  B4D8               	btfsc	status,2,c
 53035  013EE8  D7E0               	goto	i2l826
 53036  013EEA  0A77               	xorlw	119	; case 114
 53037  013EEC  B4D8               	btfsc	status,2,c
 53038  013EEE  0012               	return	
 53039  013EF0  0A01               	xorlw	1	; case 115
 53040  013EF2  B4D8               	btfsc	status,2,c
 53041  013EF4  0012               	return	
 53042  013EF6  0A07               	xorlw	7	; case 116
 53043  013EF8  B4D8               	btfsc	status,2,c
 53044  013EFA  D7C9               	goto	i2l821
 53045  013EFC  0A01               	xorlw	1	; case 117
 53046  013EFE  A4D8               	btfss	status,2,c
 53047  013F00  0012               	return	
 53048  013F02  D7C1               	goto	i2l820
 53049  013F04                     i2l20090:
 53050                           
 53051                           ; Switch size 1, requested type "space"
 53052                           ; Number of cases is 1, Range of values is 255 to 255
 53053                           ; switch strategies available:
 53054                           ; Name         Instructions Cycles
 53055                           ; simple_byte            4     3 (average)
 53056                           ;	Chosen strategy is simple_byte
 53057  013F04  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 53058  013F06  0AFF               	xorlw	255	; case 255
 53059  013F08  0012               	return	
 53060  013F0A                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 53061                           	opt stack 0
 53062                           tosu	equ	0xFFF
 53063                           tosh	equ	0xFFE
 53064                           tosl	equ	0xFFD
 53065                           pclatu	equ	0xFFB
 53066                           pclath	equ	0xFFA
 53067                           tblptru	equ	0xFF8
 53068                           tblptrh	equ	0xFF7
 53069                           tblptrl	equ	0xFF6
 53070                           tablat	equ	0xFF5
 53071                           prodh	equ	0xFF4
 53072                           prodl	equ	0xFF3
 53073                           intcon	equ	0xFF2
 53074                           indf0	equ	0xFEF
 53075                           postinc0	equ	0xFEE
 53076                           fsr0h	equ	0xFEA
 53077                           fsr0l	equ	0xFE9
 53078                           wreg	equ	0xFE8
 53079                           indf1	equ	0xFE7
 53080                           postinc1	equ	0xFE6
 53081                           postdec1	equ	0xFE5
 53082                           plusw1	equ	0xFE3
 53083                           fsr1h	equ	0xFE2
 53084                           fsr1l	equ	0xFE1
 53085                           indf2	equ	0xFDF
 53086                           postinc2	equ	0xFDE
 53087                           postdec2	equ	0xFDD
 53088                           plusw2	equ	0xFDB
 53089                           fsr2h	equ	0xFDA
 53090                           fsr2l	equ	0xFD9
 53091                           status	equ	0xFD8
 53092                           
 53093 ;; *************** function i2_SYSTEM_Initialize *****************
 53094 ;; Defined at:
 53095 ;;		line 39 in file "system.c"
 53096 ;; Parameters:    Size  Location     Type
 53097 ;;  state           1    wreg     enum E6623
 53098 ;; Auto vars:     Size  Location     Type
 53099 ;;  state           1    4[COMRAM] enum E6623
 53100 ;;  SYSTEM_Initi    2    2[COMRAM] unsigned int 
 53101 ;;  SYSTEM_Initi    2    0[COMRAM] unsigned int 
 53102 ;; Return value:  Size  Location     Type
 53103 ;;                  1    wreg      void 
 53104 ;; Registers used:
 53105 ;;		wreg, status,2, status,0
 53106 ;; Tracked objects:
 53107 ;;		On entry : 0/0
 53108 ;;		On exit  : 0/0
 53109 ;;		Unchanged: 0/0
 53110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53112 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53114 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53115 ;;Total ram usage:        5 bytes
 53116 ;; Hardware stack levels used:    1
 53117 ;; This function calls:
 53118 ;;		Nothing
 53119 ;; This function is called by:
 53120 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 53121 ;; This function uses a non-reentrant model
 53122 ;;
 53123                           
 53124                           	psect	text223
 53125  015030                     __ptext223:
 53126                           	opt stack 0
 53127  015030                     i2_SYSTEM_Initialize:
 53128                           	opt stack 15
 53129                           
 53130                           ;incstack = 0
 53131                           ;i2SYSTEM_Initialize@state stored from wreg
 53132  015030  6E05               	movwf	i2SYSTEM_Initialize@state,c
 53133                           
 53134                           ;system.c: 41: switch(state)
 53135  015032  D01D               	goto	i2l897
 53136  015034                     
 53137                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 53138  015034  0E02               	movlw	2
 53139  015036  6E02               	movwf	i2SYSTEM_Initialize@pll_startup_counter+1,c
 53140  015038  0E58               	movlw	88
 53141  01503A  6E01               	movwf	i2SYSTEM_Initialize@pll_startup_counter,c
 53142                           
 53143                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 53144  01503C  8C9B               	bsf	3995,6,c	;volatile
 53145  01503E                     i2l12954:
 53146  01503E  0601               	decf	i2SYSTEM_Initialize@pll_startup_counter,f,c
 53147  015040  A0D8               	btfss	status,0,c
 53148  015042  0602               	decf	i2SYSTEM_Initialize@pll_startup_counter+1,f,c
 53149  015044  2801               	incf	i2SYSTEM_Initialize@pll_startup_counter,w,c
 53150  015046  E1FB               	bnz	i2l12954
 53151  015048  2802               	incf	i2SYSTEM_Initialize@pll_startup_counter+1,w,c
 53152  01504A  B4D8               	btfsc	status,2,c
 53153  01504C  0012               	return	
 53154  01504E  D7F7               	goto	i2l900
 53155  015050                     
 53156                           ;system.c: 78: OSCCON = 0x70;
 53157  015050  0E70               	movlw	112
 53158  015052  6ED3               	movwf	4051,c	;volatile
 53159                           
 53160                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 53161  015054  0E03               	movlw	3
 53162  015056  6E04               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3143+1,c
 53163  015058  0E20               	movlw	32
 53164  01505A  6E03               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3143,c
 53165  01505C                     i2l12958:
 53166  01505C  0603               	decf	i2SYSTEM_Initialize@pll_startup_counter_3143,f,c
 53167  01505E  A0D8               	btfss	status,0,c
 53168  015060  0604               	decf	i2SYSTEM_Initialize@pll_startup_counter_3143+1,f,c
 53169  015062  2803               	incf	i2SYSTEM_Initialize@pll_startup_counter_3143,w,c
 53170  015064  E1FB               	bnz	i2l12958
 53171  015066  2804               	incf	i2SYSTEM_Initialize@pll_startup_counter_3143+1,w,c
 53172  015068  B4D8               	btfsc	status,2,c
 53173  01506A  0012               	return	
 53174  01506C  D7F7               	goto	i2l906
 53175  01506E                     i2l897:
 53176  01506E  5005               	movf	i2SYSTEM_Initialize@state,w,c
 53177                           
 53178                           ; Switch size 1, requested type "space"
 53179                           ; Number of cases is 3, Range of values is 0 to 2
 53180                           ; switch strategies available:
 53181                           ; Name         Instructions Cycles
 53182                           ; simple_byte           10     6 (average)
 53183                           ;	Chosen strategy is simple_byte
 53184  015070  0A00               	xorlw	0	; case 0
 53185  015072  B4D8               	btfsc	status,2,c
 53186  015074  D7DF               	goto	i2l898
 53187  015076  0A01               	xorlw	1	; case 1
 53188  015078  B4D8               	btfsc	status,2,c
 53189  01507A  0012               	return	
 53190  01507C  0A03               	xorlw	3	; case 2
 53191  01507E  A4D8               	btfss	status,2,c
 53192  015080  0012               	return	
 53193  015082  D7E6               	goto	i2l904
 53194  015084                     __end_ofi2_SYSTEM_Initialize:
 53195                           	opt stack 0
 53196                           tosu	equ	0xFFF
 53197                           tosh	equ	0xFFE
 53198                           tosl	equ	0xFFD
 53199                           pclatu	equ	0xFFB
 53200                           pclath	equ	0xFFA
 53201                           tblptru	equ	0xFF8
 53202                           tblptrh	equ	0xFF7
 53203                           tblptrl	equ	0xFF6
 53204                           tablat	equ	0xFF5
 53205                           prodh	equ	0xFF4
 53206                           prodl	equ	0xFF3
 53207                           intcon	equ	0xFF2
 53208                           indf0	equ	0xFEF
 53209                           postinc0	equ	0xFEE
 53210                           fsr0h	equ	0xFEA
 53211                           fsr0l	equ	0xFE9
 53212                           wreg	equ	0xFE8
 53213                           indf1	equ	0xFE7
 53214                           postinc1	equ	0xFE6
 53215                           postdec1	equ	0xFE5
 53216                           plusw1	equ	0xFE3
 53217                           fsr1h	equ	0xFE2
 53218                           fsr1l	equ	0xFE1
 53219                           indf2	equ	0xFDF
 53220                           postinc2	equ	0xFDE
 53221                           postdec2	equ	0xFDD
 53222                           plusw2	equ	0xFDB
 53223                           fsr2h	equ	0xFDA
 53224                           fsr2l	equ	0xFD9
 53225                           status	equ	0xFD8
 53226                           
 53227 ;; *************** function _USBCheckMSDRequest *****************
 53228 ;; Defined at:
 53229 ;;		line 218 in file "usb_device_msd.c"
 53230 ;; Parameters:    Size  Location     Type
 53231 ;;		None
 53232 ;; Auto vars:     Size  Location     Type
 53233 ;;		None
 53234 ;; Return value:  Size  Location     Type
 53235 ;;                  1    wreg      void 
 53236 ;; Registers used:
 53237 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 53238 ;; Tracked objects:
 53239 ;;		On entry : 0/0
 53240 ;;		On exit  : 0/0
 53241 ;;		Unchanged: 0/0
 53242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53244 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53246 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53247 ;;Total ram usage:        4 bytes
 53248 ;; Hardware stack levels used:    1
 53249 ;; Hardware stack levels required when called:    1
 53250 ;; This function calls:
 53251 ;;		i2_USBTransferOnePacket
 53252 ;; This function is called by:
 53253 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 53254 ;; This function uses a non-reentrant model
 53255 ;;
 53256                           
 53257                           	psect	text224
 53258  012ECC                     __ptext224:
 53259                           	opt stack 0
 53260  012ECC                     _USBCheckMSDRequest:
 53261                           	opt stack 14
 53262                           
 53263                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 53264                           
 53265                           ;incstack = 0
 53266  012ECC  010D               	movlb	13	; () banked
 53267  012ECE  5130               	movf	48,w,b	;volatile
 53268  012ED0  0B1F               	andlw	31
 53269  012ED2  06E8               	decf	wreg,f,c
 53270  012ED4  A4D8               	btfss	status,2,c
 53271  012ED6  0012               	return	
 53272                           
 53273                           ; BSR set to: 13
 53274                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 53275                           
 53276                           ; BSR set to: 13
 53277                           
 53278                           ; BSR set to: 13
 53279                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 53280  012ED8  5134               	movf	52,w,b	;volatile
 53281  012EDA  A4D8               	btfss	status,2,c
 53282  012EDC  0012               	return	
 53283  012EDE  D04C               	goto	i2l545
 53284  012EE0                     
 53285                           ; BSR set to: 13
 53286                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 53287                           
 53288                           ; BSR set to: 13
 53289  012EE0  5132               	movf	50,w,b	;volatile
 53290  012EE2  1133               	iorwf	51,w,b	;volatile
 53291  012EE4  A4D8               	btfss	status,2,c
 53292  012EE6  0012               	return	
 53293                           
 53294                           ; BSR set to: 13
 53295  012EE8  5136               	movf	54,w,b	;volatile
 53296  012EEA  1137               	iorwf	55,w,b	;volatile
 53297  012EEC  A4D8               	btfss	status,2,c
 53298  012EEE  0012               	return	
 53299                           
 53300                           ; BSR set to: 13
 53301                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 53302                           
 53303                           ; BSR set to: 13
 53304                           
 53305                           ; BSR set to: 13
 53306                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 53307  012EF0  0E00               	movlw	0
 53308  012EF2  0101               	movlb	1	; () banked
 53309  012EF4  6F56               	movwf	_MSD_State& (0+255),b
 53310                           
 53311                           ; BSR set to: 1
 53312                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 53313  012EF6  6955               	setf	_MSDCommandState& (0+255),b
 53314                           
 53315                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 53316  012EF8  0E00               	movlw	0
 53317  012EFA  6F54               	movwf	_MSDReadState& (0+255),b
 53318                           
 53319                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 53320  012EFC  0E00               	movlw	0
 53321  012EFE  6F53               	movwf	_MSDWriteState& (0+255),b
 53322                           
 53323                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 53324  012F00  0E01               	movlw	1
 53325  012F02  6F4E               	movwf	_MSDCBWValid& (0+255),b
 53326                           
 53327                           ; BSR set to: 1
 53328                           
 53329                           ; BSR set to: 1
 53330                           
 53331                           ; BSR set to: 1
 53332                           
 53333                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 53334  012F04  C113  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2534
 53335  012F08  C114  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2534+1
 53336                           
 53337                           ; BSR set to: 1
 53338  012F0C  500C               	movf	_USBCheckMSDRequest$2534,w,c
 53339  012F0E  100D               	iorwf	_USBCheckMSDRequest$2534+1,w,c
 53340  012F10  B4D8               	btfsc	status,2,c
 53341  012F12  D00A               	goto	i2u1058_40
 53342                           
 53343                           ; BSR set to: 1
 53344                           
 53345                           ; BSR set to: 1
 53346                           
 53347                           ; BSR set to: 1
 53348                           
 53349                           ; BSR set to: 1
 53350  012F14  C113  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2535
 53351  012F18  C114  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2535+1
 53352                           
 53353                           ; BSR set to: 1
 53354                           
 53355                           ; BSR set to: 1
 53356  012F1C  C00E  FFD9         	movff	_USBCheckMSDRequest$2535,fsr2l
 53357  012F20  C00F  FFDA         	movff	_USBCheckMSDRequest$2535+1,fsr2h
 53358  012F24  BEDF               	btfsc	indf2,7,c
 53359  012F26  D00F               	goto	i2l550
 53360  012F28                     i2u1058_40:
 53361                           
 53362                           ; BSR set to: 1
 53363                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 53364                           
 53365                           ; BSR set to: 1
 53366  012F28  0E00               	movlw	0
 53367  012F2A  6E01               	movwf	i2USBTransferOnePacket@dir,c
 53368  012F2C  0E40               	movlw	64
 53369  012F2E  6E02               	movwf	i2USBTransferOnePacket@data,c
 53370  012F30  0E0D               	movlw	13
 53371  012F32  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 53372  012F34  0E40               	movlw	64
 53373  012F36  6E04               	movwf	i2USBTransferOnePacket@len,c
 53374  012F38  0E02               	movlw	2
 53375  012F3A  EC0D  F08B         	call	i2_USBTransferOnePacket
 53376  012F3E  C001  F13F         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 53377  012F42  C002  F140         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 53378  012F46                     i2l550:
 53379                           
 53380                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 53381  012F46  0E80               	movlw	128
 53382  012F48  6E56               	movwf	_inPipes+3,c	;volatile
 53383                           
 53384                           ;usb_device_msd.c: 263: break;
 53385  012F4A  0012               	return	
 53386  012F4C                     
 53387                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 53388  012F4C  010D               	movlb	13	; () banked
 53389  012F4E  5132               	movf	50,w,b	;volatile
 53390  012F50  1133               	iorwf	51,w,b	;volatile
 53391  012F52  A4D8               	btfss	status,2,c
 53392  012F54  0012               	return	
 53393                           
 53394                           ; BSR set to: 13
 53395  012F56  0536               	decf	54,w,b	;volatile
 53396  012F58  1137               	iorwf	55,w,b	;volatile
 53397  012F5A  A4D8               	btfss	status,2,c
 53398  012F5C  0012               	return	
 53399                           
 53400                           ; BSR set to: 13
 53401                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 53402                           
 53403                           ; BSR set to: 13
 53404                           
 53405                           ; BSR set to: 13
 53406                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 53407  012F5E  0E00               	movlw	0
 53408  012F60  6F38               	movwf	56,b	;volatile
 53409                           
 53410                           ; BSR set to: 13
 53411                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 53412  012F62  0E38               	movlw	56
 53413  012F64  6E53               	movwf	_inPipes,c	;volatile
 53414  012F66  0E0D               	movlw	13
 53415  012F68  6E54               	movwf	_inPipes+1,c	;volatile
 53416                           
 53417                           ; BSR set to: 13
 53418  012F6A  0E00               	movlw	0
 53419  012F6C  6E58               	movwf	_inPipes+5,c	;volatile
 53420  012F6E  0E01               	movlw	1
 53421  012F70  6E57               	movwf	_inPipes+4,c	;volatile
 53422                           
 53423                           ; BSR set to: 13
 53424  012F72  0EC1               	movlw	193
 53425  012F74  6E56               	movwf	_inPipes+3,c	;volatile
 53426                           
 53427                           ; BSR set to: 13
 53428                           ;usb_device_msd.c: 278: }
 53429                           
 53430                           ;usb_device_msd.c: 277: break;
 53431  012F76  0012               	return	
 53432  012F78                     i2l545:
 53433                           
 53434                           ; BSR set to: 13
 53435                           
 53436                           ; BSR set to: 13
 53437  012F78  5131               	movf	49,w,b	;volatile
 53438                           
 53439                           ; Switch size 1, requested type "space"
 53440                           ; Number of cases is 2, Range of values is 254 to 255
 53441                           ; switch strategies available:
 53442                           ; Name         Instructions Cycles
 53443                           ; simple_byte            7     4 (average)
 53444                           ;	Chosen strategy is simple_byte
 53445  012F7A  0AFE               	xorlw	254	; case 254
 53446  012F7C  B4D8               	btfsc	status,2,c
 53447  012F7E  D7E6               	goto	i2l562
 53448  012F80  0A01               	xorlw	1	; case 255
 53449  012F82  A4D8               	btfss	status,2,c
 53450  012F84  0012               	return	
 53451  012F86  D7AC               	goto	i2l546
 53452  012F88                     __end_of_USBCheckMSDRequest:
 53453                           	opt stack 0
 53454                           tosu	equ	0xFFF
 53455                           tosh	equ	0xFFE
 53456                           tosl	equ	0xFFD
 53457                           pclatu	equ	0xFFB
 53458                           pclath	equ	0xFFA
 53459                           tblptru	equ	0xFF8
 53460                           tblptrh	equ	0xFF7
 53461                           tblptrl	equ	0xFF6
 53462                           tablat	equ	0xFF5
 53463                           prodh	equ	0xFF4
 53464                           prodl	equ	0xFF3
 53465                           intcon	equ	0xFF2
 53466                           indf0	equ	0xFEF
 53467                           postinc0	equ	0xFEE
 53468                           fsr0h	equ	0xFEA
 53469                           fsr0l	equ	0xFE9
 53470                           wreg	equ	0xFE8
 53471                           indf1	equ	0xFE7
 53472                           postinc1	equ	0xFE6
 53473                           postdec1	equ	0xFE5
 53474                           plusw1	equ	0xFE3
 53475                           fsr1h	equ	0xFE2
 53476                           fsr1l	equ	0xFE1
 53477                           indf2	equ	0xFDF
 53478                           postinc2	equ	0xFDE
 53479                           postdec2	equ	0xFDD
 53480                           plusw2	equ	0xFDB
 53481                           fsr2h	equ	0xFDA
 53482                           fsr2l	equ	0xFD9
 53483                           status	equ	0xFD8
 53484                           
 53485 ;; *************** function _USBCheckHIDRequest *****************
 53486 ;; Defined at:
 53487 ;;		line 153 in file "usb_device_hid.c"
 53488 ;; Parameters:    Size  Location     Type
 53489 ;;		None
 53490 ;; Auto vars:     Size  Location     Type
 53491 ;;		None
 53492 ;; Return value:  Size  Location     Type
 53493 ;;                  1    wreg      void 
 53494 ;; Registers used:
 53495 ;;		wreg, status,2, status,0
 53496 ;; Tracked objects:
 53497 ;;		On entry : 0/0
 53498 ;;		On exit  : 0/0
 53499 ;;		Unchanged: 0/0
 53500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53505 ;;Total ram usage:        0 bytes
 53506 ;; Hardware stack levels used:    1
 53507 ;; This function calls:
 53508 ;;		Nothing
 53509 ;; This function is called by:
 53510 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 53511 ;; This function uses a non-reentrant model
 53512 ;;
 53513                           
 53514                           	psect	text225
 53515  012870                     __ptext225:
 53516                           	opt stack 0
 53517  012870                     _USBCheckHIDRequest:
 53518                           	opt stack 15
 53519                           
 53520                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 53521                           
 53522                           ;incstack = 0
 53523  012870  010D               	movlb	13	; () banked
 53524  012872  5130               	movf	48,w,b	;volatile
 53525  012874  0B1F               	andlw	31
 53526  012876  06E8               	decf	wreg,f,c
 53527  012878  A4D8               	btfss	status,2,c
 53528  01287A  0012               	return	
 53529                           
 53530                           ; BSR set to: 13
 53531                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 53532                           
 53533                           ; BSR set to: 13
 53534                           
 53535                           ; BSR set to: 13
 53536  01287C  5134               	movf	52,w,b	;volatile
 53537  01287E  A4D8               	btfss	status,2,c
 53538  012880  0012               	return	
 53539                           
 53540                           ; BSR set to: 13
 53541                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 53542                           
 53543                           ; BSR set to: 13
 53544                           
 53545                           ; BSR set to: 13
 53546  012882  0E06               	movlw	6
 53547  012884  1931               	xorwf	49,w,b	;volatile
 53548  012886  B4D8               	btfsc	status,2,c
 53549  012888  D019               	goto	i2l425
 53550  01288A  D021               	goto	i2l428
 53551  01288C                     
 53552                           ; BSR set to: 13
 53553                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 53554                           
 53555                           ; BSR set to: 13
 53556  01288C  0101               	movlb	1	; () banked
 53557  01288E  05C2               	decf	_USBActiveConfiguration& (0+255),w,b	;volatile
 53558  012890  A4D8               	btfss	status,2,c
 53559  012892  D01D               	goto	i2l428
 53560                           
 53561                           ; BSR set to: 1
 53562                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 53563  012894  0ED0               	movlw	low (_configDescriptor1+18)
 53564  012896  6E53               	movwf	_inPipes,c	;volatile
 53565  012898  0EA0               	movlw	high (_configDescriptor1+18)
 53566  01289A  6E54               	movwf	_inPipes+1,c	;volatile
 53567                           
 53568                           ; BSR set to: 1
 53569  01289C  0E00               	movlw	0
 53570  01289E  6E58               	movwf	_inPipes+5,c	;volatile
 53571  0128A0  0E09               	movlw	9
 53572  0128A2  D00A               	goto	L80
 53573  0128A4                     i2l12590:
 53574                           
 53575                           ; BSR set to: 1
 53576  0128A4  0EC0               	movlw	192
 53577  0128A6  6E56               	movwf	_inPipes+3,c	;volatile
 53578                           
 53579                           ; BSR set to: 1
 53580                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 53581  0128A8  D012               	goto	i2l428
 53582  0128AA                     
 53583                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 53584                           
 53585                           ; BSR set to: 1
 53586  0128AA  0E84               	movlw	low _hid_rpt01
 53587  0128AC  6E53               	movwf	_inPipes,c	;volatile
 53588  0128AE  0EA1               	movlw	high _hid_rpt01
 53589  0128B0  6E54               	movwf	_inPipes+1,c	;volatile
 53590  0128B2  0E00               	movlw	0
 53591  0128B4  6E58               	movwf	_inPipes+5,c	;volatile
 53592  0128B6  0E1D               	movlw	29
 53593  0128B8                     L80:
 53594  0128B8  6E57               	movwf	_inPipes+4,c	;volatile
 53595  0128BA  D7F4               	goto	i2l12590
 53596  0128BC                     i2l425:
 53597  0128BC  010D               	movlb	13	; () banked
 53598  0128BE  5133               	movf	51,w,b	;volatile
 53599                           
 53600                           ; Switch size 1, requested type "space"
 53601                           ; Number of cases is 3, Range of values is 33 to 35
 53602                           ; switch strategies available:
 53603                           ; Name         Instructions Cycles
 53604                           ; simple_byte           10     6 (average)
 53605                           ;	Chosen strategy is simple_byte
 53606  0128C0  0A21               	xorlw	33	; case 33
 53607  0128C2  B4D8               	btfsc	status,2,c
 53608  0128C4  D7E3               	goto	i2l426
 53609  0128C6  0A03               	xorlw	3	; case 34
 53610  0128C8  B4D8               	btfsc	status,2,c
 53611  0128CA  D7EF               	goto	i2l429
 53612  0128CC  0A01               	xorlw	1	; case 35
 53613  0128CE                     i2l428:
 53614                           
 53615                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 53616                           
 53617                           ; BSR set to: 13
 53618                           
 53619                           ; BSR set to: 13
 53620  0128CE  010D               	movlb	13	; () banked
 53621  0128D0  3930               	swapf	48,w,b	;volatile
 53622  0128D2  32E8               	rrcf	wreg,f,c
 53623  0128D4  0B03               	andlw	3
 53624  0128D6  06E8               	decf	wreg,f,c
 53625  0128D8  A4D8               	btfss	status,2,c
 53626  0128DA  0012               	return	
 53627  0128DC  D020               	goto	i2l432
 53628  0128DE                     
 53629                           ; BSR set to: 13
 53630                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 53631                           
 53632                           ; BSR set to: 13
 53633  0128DE  0EC1               	movlw	low _idle_rate
 53634  0128E0  6E53               	movwf	_inPipes,c	;volatile
 53635  0128E2  0E01               	movlw	high _idle_rate
 53636  0128E4  6E54               	movwf	_inPipes+1,c	;volatile
 53637                           
 53638                           ; BSR set to: 13
 53639  0128E6  0E00               	movlw	0
 53640  0128E8  6E58               	movwf	_inPipes+5,c	;volatile
 53641  0128EA  0E01               	movlw	1
 53642  0128EC  6E57               	movwf	_inPipes+4,c	;volatile
 53643                           
 53644                           ; BSR set to: 13
 53645  0128EE  0EC1               	movlw	193
 53646  0128F0  6E56               	movwf	_inPipes+3,c	;volatile
 53647                           
 53648                           ;usb_device_hid.c: 223: break;
 53649  0128F2  0012               	return	
 53650  0128F4                     
 53651                           ; BSR set to: 13
 53652                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 53653                           
 53654                           ; BSR set to: 13
 53655  0128F4  0E80               	movlw	128
 53656  0128F6  6E56               	movwf	_inPipes+3,c	;volatile
 53657                           
 53658                           ; BSR set to: 13
 53659                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 53660  0128F8  CD33 F1C1          	movff	3379,_idle_rate	;volatile
 53661                           
 53662                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 53663  0128FC  0012               	return	
 53664  0128FE                     
 53665                           ; BSR set to: 13
 53666                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 53667                           
 53668                           ; BSR set to: 13
 53669  0128FE  0EC0               	movlw	low _active_protocol
 53670  012900  6E53               	movwf	_inPipes,c	;volatile
 53671  012902  0E01               	movlw	high _active_protocol
 53672  012904  6E54               	movwf	_inPipes+1,c	;volatile
 53673                           
 53674                           ; BSR set to: 13
 53675  012906  0E00               	movlw	0
 53676  012908  6E58               	movwf	_inPipes+5,c	;volatile
 53677  01290A  0E01               	movlw	1
 53678  01290C  6E57               	movwf	_inPipes+4,c	;volatile
 53679                           
 53680                           ; BSR set to: 13
 53681  01290E  0E81               	movlw	129
 53682  012910  6E56               	movwf	_inPipes+3,c	;volatile
 53683                           
 53684                           ;usb_device_hid.c: 234: break;
 53685  012912  0012               	return	
 53686  012914                     
 53687                           ; BSR set to: 13
 53688                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 53689                           
 53690                           ; BSR set to: 13
 53691  012914  0E80               	movlw	128
 53692  012916  6E56               	movwf	_inPipes+3,c	;volatile
 53693                           
 53694                           ; BSR set to: 13
 53695                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 53696  012918  CD32 F1C0          	movff	3378,_active_protocol	;volatile
 53697                           
 53698                           ; BSR set to: 13
 53699                           ;usb_device_hid.c: 239: }
 53700                           
 53701                           ;usb_device_hid.c: 238: break;
 53702  01291C  0012               	return	
 53703  01291E                     i2l432:
 53704                           
 53705                           ; BSR set to: 13
 53706                           
 53707                           ; BSR set to: 13
 53708  01291E  5131               	movf	49,w,b	;volatile
 53709                           
 53710                           ; Switch size 1, requested type "space"
 53711                           ; Number of cases is 6, Range of values is 1 to 11
 53712                           ; switch strategies available:
 53713                           ; Name         Instructions Cycles
 53714                           ; simple_byte           19    10 (average)
 53715                           ;	Chosen strategy is simple_byte
 53716  012920  0A01               	xorlw	1	; case 1
 53717  012922  B4D8               	btfsc	status,2,c
 53718  012924  0012               	return	
 53719  012926  0A03               	xorlw	3	; case 2
 53720  012928  B4D8               	btfsc	status,2,c
 53721  01292A  D7D9               	goto	i2l436
 53722  01292C  0A01               	xorlw	1	; case 3
 53723  01292E  B4D8               	btfsc	status,2,c
 53724  012930  D7E6               	goto	i2l438
 53725  012932  0A0A               	xorlw	10	; case 9
 53726  012934  B4D8               	btfsc	status,2,c
 53727  012936  0012               	return	
 53728  012938  0A03               	xorlw	3	; case 10
 53729  01293A  B4D8               	btfsc	status,2,c
 53730  01293C  D7DB               	goto	i2l437
 53731  01293E  0A01               	xorlw	1	; case 11
 53732  012940  A4D8               	btfss	status,2,c
 53733  012942  0012               	return	
 53734  012944  D7E7               	goto	i2l439
 53735  012946                     __end_of_USBCheckHIDRequest:
 53736                           	opt stack 0
 53737                           tosu	equ	0xFFF
 53738                           tosh	equ	0xFFE
 53739                           tosl	equ	0xFFD
 53740                           pclatu	equ	0xFFB
 53741                           pclath	equ	0xFFA
 53742                           tblptru	equ	0xFF8
 53743                           tblptrh	equ	0xFF7
 53744                           tblptrl	equ	0xFF6
 53745                           tablat	equ	0xFF5
 53746                           prodh	equ	0xFF4
 53747                           prodl	equ	0xFF3
 53748                           intcon	equ	0xFF2
 53749                           indf0	equ	0xFEF
 53750                           postinc0	equ	0xFEE
 53751                           fsr0h	equ	0xFEA
 53752                           fsr0l	equ	0xFE9
 53753                           wreg	equ	0xFE8
 53754                           indf1	equ	0xFE7
 53755                           postinc1	equ	0xFE6
 53756                           postdec1	equ	0xFE5
 53757                           plusw1	equ	0xFE3
 53758                           fsr1h	equ	0xFE2
 53759                           fsr1l	equ	0xFE1
 53760                           indf2	equ	0xFDF
 53761                           postinc2	equ	0xFDE
 53762                           postdec2	equ	0xFDD
 53763                           plusw2	equ	0xFDB
 53764                           fsr2h	equ	0xFDA
 53765                           fsr2l	equ	0xFD9
 53766                           status	equ	0xFD8
 53767                           
 53768 ;; *************** function _MSDTransferTerminated *****************
 53769 ;; Defined at:
 53770 ;;		line 1674 in file "usb_device_msd.c"
 53771 ;; Parameters:    Size  Location     Type
 53772 ;;  handle          2   11[COMRAM] PTR void 
 53773 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 53774 ;;		 -> BDT(48), 
 53775 ;; Auto vars:     Size  Location     Type
 53776 ;;		None
 53777 ;; Return value:  Size  Location     Type
 53778 ;;                  1    wreg      void 
 53779 ;; Registers used:
 53780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 53781 ;; Tracked objects:
 53782 ;;		On entry : 0/0
 53783 ;;		On exit  : 0/0
 53784 ;;		Unchanged: 0/0
 53785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53786 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53787 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53789 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53790 ;;Total ram usage:        4 bytes
 53791 ;; Hardware stack levels used:    1
 53792 ;; Hardware stack levels required when called:    1
 53793 ;; This function calls:
 53794 ;;		i2_USBStallEndpoint
 53795 ;;		i2_USBTransferOnePacket
 53796 ;; This function is called by:
 53797 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 53798 ;; This function uses a non-reentrant model
 53799 ;;
 53800                           
 53801                           	psect	text226
 53802  014EDE                     __ptext226:
 53803                           	opt stack 0
 53804  014EDE                     _MSDTransferTerminated:
 53805                           	opt stack 14
 53806                           
 53807                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 53808                           
 53809                           ; BSR set to: 13
 53810                           ;incstack = 0
 53811  014EDE  0101               	movlb	1	; () banked
 53812  014EE0  514E               	movf	_MSDCBWValid& (0+255),w,b
 53813  014EE2  A4D8               	btfss	status,2,c
 53814  014EE4  D00B               	goto	i2l780
 53815                           
 53816                           ; BSR set to: 1
 53817                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 53818  014EE6  0E01               	movlw	1
 53819  014EE8  6E01               	movwf	i2USBStallEndpoint@dir,c
 53820  014EEA  0E02               	movlw	2
 53821  014EEC  EC8A  F08A         	call	i2_USBStallEndpoint
 53822                           
 53823                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 53824  014EF0  0E00               	movlw	0
 53825  014EF2  6E01               	movwf	i2USBStallEndpoint@dir,c
 53826  014EF4  0E02               	movlw	2
 53827  014EF6  EC8A  F08A         	call	i2_USBStallEndpoint
 53828                           
 53829                           ;usb_device_msd.c: 1681: }
 53830  014EFA  0012               	return	
 53831  014EFC                     i2l780:
 53832  014EFC  C113  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2623
 53833  014F00  C114  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2623+1
 53834  014F04  500E               	movf	_MSDTransferTerminated$2623,w,c
 53835  014F06  180C               	xorwf	MSDTransferTerminated@handle,w,c
 53836  014F08  E114               	bnz	i2l783
 53837  014F0A  500F               	movf	_MSDTransferTerminated$2623+1,w,c
 53838  014F0C  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 53839  014F0E  A4D8               	btfss	status,2,c
 53840  014F10  0012               	return	
 53841                           
 53842                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 53843  014F12  0E00               	movlw	0
 53844  014F14  6E01               	movwf	i2USBTransferOnePacket@dir,c
 53845  014F16  0E40               	movlw	64
 53846  014F18  6E02               	movwf	i2USBTransferOnePacket@data,c
 53847  014F1A  0E0D               	movlw	13
 53848  014F1C  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 53849  014F1E  0E40               	movlw	64
 53850  014F20  6E04               	movwf	i2USBTransferOnePacket@len,c
 53851  014F22  0E02               	movlw	2
 53852  014F24  EC0D  F08B         	call	i2_USBTransferOnePacket
 53853  014F28  C001  F13F         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 53854  014F2C  C002  F140         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 53855  014F30  0012               	return	
 53856  014F32                     i2l783:
 53857  014F32  0012               	return		;funcret
 53858  014F34                     __end_of_MSDTransferTerminated:
 53859                           	opt stack 0
 53860                           tosu	equ	0xFFF
 53861                           tosh	equ	0xFFE
 53862                           tosl	equ	0xFFD
 53863                           pclatu	equ	0xFFB
 53864                           pclath	equ	0xFFA
 53865                           tblptru	equ	0xFF8
 53866                           tblptrh	equ	0xFF7
 53867                           tblptrl	equ	0xFF6
 53868                           tablat	equ	0xFF5
 53869                           prodh	equ	0xFF4
 53870                           prodl	equ	0xFF3
 53871                           intcon	equ	0xFF2
 53872                           indf0	equ	0xFEF
 53873                           postinc0	equ	0xFEE
 53874                           fsr0h	equ	0xFEA
 53875                           fsr0l	equ	0xFE9
 53876                           wreg	equ	0xFE8
 53877                           indf1	equ	0xFE7
 53878                           postinc1	equ	0xFE6
 53879                           postdec1	equ	0xFE5
 53880                           plusw1	equ	0xFE3
 53881                           fsr1h	equ	0xFE2
 53882                           fsr1l	equ	0xFE1
 53883                           indf2	equ	0xFDF
 53884                           postinc2	equ	0xFDE
 53885                           postdec2	equ	0xFDD
 53886                           plusw2	equ	0xFDB
 53887                           fsr2h	equ	0xFDA
 53888                           fsr2l	equ	0xFD9
 53889                           status	equ	0xFD8
 53890                           
 53891 ;; *************** function i2_USBStallEndpoint *****************
 53892 ;; Defined at:
 53893 ;;		line 1073 in file "usb_device.c"
 53894 ;; Parameters:    Size  Location     Type
 53895 ;;  ep              1    wreg     unsigned char 
 53896 ;;  dir             1    0[COMRAM] unsigned char 
 53897 ;; Auto vars:     Size  Location     Type
 53898 ;;  ep              1    5[COMRAM] unsigned char 
 53899 ;;  USBStallEndp    2    6[COMRAM] PTR struct __BDT
 53900 ;;		 -> BDT(48), 
 53901 ;; Return value:  Size  Location     Type
 53902 ;;                  1    wreg      void 
 53903 ;; Registers used:
 53904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 53905 ;; Tracked objects:
 53906 ;;		On entry : 0/0
 53907 ;;		On exit  : 0/0
 53908 ;;		Unchanged: 0/0
 53909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53910 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53911 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53912 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53913 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53914 ;;Total ram usage:        8 bytes
 53915 ;; Hardware stack levels used:    1
 53916 ;; This function calls:
 53917 ;;		Nothing
 53918 ;; This function is called by:
 53919 ;;		_MSDTransferTerminated
 53920 ;; This function uses a non-reentrant model
 53921 ;;
 53922                           
 53923                           	psect	text227
 53924  011514                     __ptext227:
 53925                           	opt stack 0
 53926  011514                     i2_USBStallEndpoint:
 53927                           	opt stack 14
 53928                           
 53929                           ;incstack = 0
 53930                           ;i2USBStallEndpoint@ep stored from wreg
 53931  011514  6E06               	movwf	i2USBStallEndpoint@ep,c
 53932                           
 53933                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 53934  011516  5006               	movf	i2USBStallEndpoint@ep,w,c
 53935  011518  A4D8               	btfss	status,2,c
 53936  01151A  D02B               	goto	i2l192
 53937                           
 53938                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 53939  01151C  EE20 F001          	lfsr	2,1
 53940  011520  5059               	movf	_pBDTEntryEP0OutNext,w,c
 53941  011522  26D9               	addwf	fsr2l,f,c
 53942  011524  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 53943  011526  22DA               	addwfc	fsr2h,f,c
 53944  011528  0E08               	movlw	8
 53945  01152A  6EDF               	movwf	indf2,c
 53946                           
 53947                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 53948  01152C  EE20 F002          	lfsr	2,2
 53949  011530  5059               	movf	_pBDTEntryEP0OutNext,w,c
 53950  011532  26D9               	addwf	fsr2l,f,c
 53951  011534  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 53952  011536  22DA               	addwfc	fsr2h,f,c
 53953  011538  0E30               	movlw	48
 53954  01153A  6EDE               	movwf	postinc2,c
 53955  01153C  0E0D               	movlw	13
 53956  01153E  6EDD               	movwf	postdec2,c
 53957                           
 53958                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 53959  011540  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 53960  011544  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 53961  011548  0E0C               	movlw	12
 53962  01154A  6EDF               	movwf	indf2,c
 53963                           
 53964                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 53965  01154C  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 53966  011550  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 53967  011554  0E00               	movlw	0
 53968  011556  8EDB               	bsf	plusw2,7,c
 53969                           
 53970                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 53971  011558  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 53972  01155C  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 53973  011560  0E04               	movlw	4
 53974  011562  6EDF               	movwf	indf2,c
 53975                           
 53976                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 53977  011564  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 53978  011568  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 53979  01156C  0E00               	movlw	0
 53980  01156E  8EDB               	bsf	plusw2,7,c
 53981                           
 53982                           ;usb_device.c: 1089: }
 53983  011570  0012               	return	
 53984  011572                     i2l192:
 53985                           
 53986                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 53987  011572  5001               	movf	i2USBStallEndpoint@dir,w,c
 53988  011574  6E02               	movwf	??i2_USBStallEndpoint& (0+255),c
 53989  011576  6A03               	clrf	(??i2_USBStallEndpoint+1)& (0+255),c
 53990  011578  90D8               	bcf	status,0,c
 53991  01157A  3602               	rlcf	??i2_USBStallEndpoint,f,c
 53992  01157C  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 53993  01157E  5006               	movf	i2USBStallEndpoint@ep,w,c
 53994  011580  6E04               	movwf	(??i2_USBStallEndpoint+2)& (0+255),c
 53995  011582  6A05               	clrf	(??i2_USBStallEndpoint+3)& (0+255),c
 53996  011584  90D8               	bcf	status,0,c
 53997  011586  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 53998  011588  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 53999  01158A  90D8               	bcf	status,0,c
 54000  01158C  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 54001  01158E  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 54002  011590  5002               	movf	??i2_USBStallEndpoint,w,c
 54003  011592  2604               	addwf	??i2_USBStallEndpoint+2,f,c
 54004  011594  5003               	movf	??i2_USBStallEndpoint+1,w,c
 54005  011596  2205               	addwfc	??i2_USBStallEndpoint+3,f,c
 54006  011598  90D8               	bcf	status,0,c
 54007  01159A  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 54008  01159C  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 54009  01159E  90D8               	bcf	status,0,c
 54010  0115A0  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 54011  0115A2  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 54012  0115A4  0E00               	movlw	0
 54013  0115A6  2404               	addwf	??i2_USBStallEndpoint+2,w,c
 54014  0115A8  6E07               	movwf	i2USBStallEndpoint@p,c
 54015  0115AA  0E0D               	movlw	13
 54016  0115AC  2005               	addwfc	??i2_USBStallEndpoint+3,w,c
 54017  0115AE  6E08               	movwf	i2USBStallEndpoint@p+1,c
 54018                           
 54019                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 54020  0115B0  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 54021  0115B4  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 54022  0115B8  0E00               	movlw	0
 54023  0115BA  84DB               	bsf	plusw2,2,c
 54024                           
 54025                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 54026  0115BC  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 54027  0115C0  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 54028  0115C4  0E00               	movlw	0
 54029  0115C6  8EDB               	bsf	plusw2,7,c
 54030                           
 54031                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 54032  0115C8  5006               	movf	i2USBStallEndpoint@ep,w,c
 54033  0115CA  0D04               	mullw	4
 54034  0115CC  CFF3 F002          	movff	prodl,??i2_USBStallEndpoint
 54035  0115D0  CFF4 F003          	movff	prodh,??i2_USBStallEndpoint+1
 54036  0115D4  5001               	movf	i2USBStallEndpoint@dir,w,c
 54037  0115D6  0D02               	mullw	2
 54038  0115D8  50F3               	movf	prodl,w,c
 54039  0115DA  2602               	addwf	??i2_USBStallEndpoint,f,c
 54040  0115DC  50F4               	movf	prodh,w,c
 54041  0115DE  2203               	addwfc	??i2_USBStallEndpoint+1,f,c
 54042  0115E0  90D8               	bcf	status,0,c
 54043  0115E2  3602               	rlcf	??i2_USBStallEndpoint,f,c
 54044  0115E4  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 54045  0115E6  90D8               	bcf	status,0,c
 54046  0115E8  3602               	rlcf	??i2_USBStallEndpoint,f,c
 54047  0115EA  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 54048  0115EC  0E04               	movlw	4
 54049  0115EE  2602               	addwf	??i2_USBStallEndpoint,f,c
 54050  0115F0  0E00               	movlw	0
 54051  0115F2  2203               	addwfc	??i2_USBStallEndpoint+1,f,c
 54052  0115F4  0E00               	movlw	0
 54053  0115F6  2402               	addwf	??i2_USBStallEndpoint,w,c
 54054  0115F8  6E07               	movwf	i2USBStallEndpoint@p,c
 54055  0115FA  0E0D               	movlw	13
 54056  0115FC  2003               	addwfc	??i2_USBStallEndpoint+1,w,c
 54057  0115FE  6E08               	movwf	i2USBStallEndpoint@p+1,c
 54058                           
 54059                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 54060  011600  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 54061  011604  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 54062  011608  0E00               	movlw	0
 54063  01160A  84DB               	bsf	plusw2,2,c
 54064                           
 54065                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 54066  01160C  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 54067  011610  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 54068  011614  0E00               	movlw	0
 54069  011616  8EDB               	bsf	plusw2,7,c
 54070  011618  0012               	return	
 54071  01161A                     __end_ofi2_USBStallEndpoint:
 54072                           	opt stack 0
 54073                           tosu	equ	0xFFF
 54074                           tosh	equ	0xFFE
 54075                           tosl	equ	0xFFD
 54076                           pclatu	equ	0xFFB
 54077                           pclath	equ	0xFFA
 54078                           tblptru	equ	0xFF8
 54079                           tblptrh	equ	0xFF7
 54080                           tblptrl	equ	0xFF6
 54081                           tablat	equ	0xFF5
 54082                           prodh	equ	0xFF4
 54083                           prodl	equ	0xFF3
 54084                           intcon	equ	0xFF2
 54085                           indf0	equ	0xFEF
 54086                           postinc0	equ	0xFEE
 54087                           fsr0h	equ	0xFEA
 54088                           fsr0l	equ	0xFE9
 54089                           wreg	equ	0xFE8
 54090                           indf1	equ	0xFE7
 54091                           postinc1	equ	0xFE6
 54092                           postdec1	equ	0xFE5
 54093                           plusw1	equ	0xFE3
 54094                           fsr1h	equ	0xFE2
 54095                           fsr1l	equ	0xFE1
 54096                           indf2	equ	0xFDF
 54097                           postinc2	equ	0xFDE
 54098                           postdec2	equ	0xFDD
 54099                           plusw2	equ	0xFDB
 54100                           fsr2h	equ	0xFDA
 54101                           fsr2l	equ	0xFD9
 54102                           status	equ	0xFD8
 54103                           
 54104 ;; *************** function _APP_DeviceMSDInitialize *****************
 54105 ;; Defined at:
 54106 ;;		line 84 in file "app_device_msd.c"
 54107 ;; Parameters:    Size  Location     Type
 54108 ;;		None
 54109 ;; Auto vars:     Size  Location     Type
 54110 ;;		None
 54111 ;; Return value:  Size  Location     Type
 54112 ;;                  1    wreg      void 
 54113 ;; Registers used:
 54114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 54115 ;; Tracked objects:
 54116 ;;		On entry : 0/0
 54117 ;;		On exit  : 0/0
 54118 ;;		Unchanged: 0/0
 54119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54124 ;;Total ram usage:        0 bytes
 54125 ;; Hardware stack levels used:    1
 54126 ;; Hardware stack levels required when called:    2
 54127 ;; This function calls:
 54128 ;;		_USBEnableEndpoint
 54129 ;;		_USBMSDInit
 54130 ;; This function is called by:
 54131 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 54132 ;; This function uses a non-reentrant model
 54133 ;;
 54134                           
 54135                           	psect	text228
 54136  015EC2                     __ptext228:
 54137                           	opt stack 0
 54138  015EC2                     _APP_DeviceMSDInitialize:
 54139                           	opt stack 13
 54140                           
 54141                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 54142                           
 54143                           ;incstack = 0
 54144  015EC2  0E1E               	movlw	30
 54145  015EC4  6E09               	movwf	USBEnableEndpoint@options,c
 54146  015EC6  0E02               	movlw	2
 54147  015EC8  EC67  F0AB         	call	_USBEnableEndpoint
 54148                           
 54149                           ;app_device_msd.c: 93: USBMSDInit();
 54150  015ECC  EC74  F088         	call	_USBMSDInit	;wreg free
 54151  015ED0  0012               	return		;funcret
 54152  015ED2                     __end_of_APP_DeviceMSDInitialize:
 54153                           	opt stack 0
 54154                           tosu	equ	0xFFF
 54155                           tosh	equ	0xFFE
 54156                           tosl	equ	0xFFD
 54157                           pclatu	equ	0xFFB
 54158                           pclath	equ	0xFFA
 54159                           tblptru	equ	0xFF8
 54160                           tblptrh	equ	0xFF7
 54161                           tblptrl	equ	0xFF6
 54162                           tablat	equ	0xFF5
 54163                           prodh	equ	0xFF4
 54164                           prodl	equ	0xFF3
 54165                           intcon	equ	0xFF2
 54166                           indf0	equ	0xFEF
 54167                           postinc0	equ	0xFEE
 54168                           fsr0h	equ	0xFEA
 54169                           fsr0l	equ	0xFE9
 54170                           wreg	equ	0xFE8
 54171                           indf1	equ	0xFE7
 54172                           postinc1	equ	0xFE6
 54173                           postdec1	equ	0xFE5
 54174                           plusw1	equ	0xFE3
 54175                           fsr1h	equ	0xFE2
 54176                           fsr1l	equ	0xFE1
 54177                           indf2	equ	0xFDF
 54178                           postinc2	equ	0xFDE
 54179                           postdec2	equ	0xFDD
 54180                           plusw2	equ	0xFDB
 54181                           fsr2h	equ	0xFDA
 54182                           fsr2l	equ	0xFD9
 54183                           status	equ	0xFD8
 54184                           
 54185 ;; *************** function _USBMSDInit *****************
 54186 ;; Defined at:
 54187 ;;		line 142 in file "usb_device_msd.c"
 54188 ;; Parameters:    Size  Location     Type
 54189 ;;		None
 54190 ;; Auto vars:     Size  Location     Type
 54191 ;;		None
 54192 ;; Return value:  Size  Location     Type
 54193 ;;                  1    wreg      void 
 54194 ;; Registers used:
 54195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 54196 ;; Tracked objects:
 54197 ;;		On entry : 0/0
 54198 ;;		On exit  : 0/0
 54199 ;;		Unchanged: 0/0
 54200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54203 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54204 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54205 ;;Total ram usage:        3 bytes
 54206 ;; Hardware stack levels used:    1
 54207 ;; Hardware stack levels required when called:    1
 54208 ;; This function calls:
 54209 ;;		i2_ExternalFlash_MediaDetect
 54210 ;;		i2_ExternalFlash_MediaInitialize
 54211 ;;		i2_ResetSenseData
 54212 ;;		i2_USBTransferOnePacket
 54213 ;; This function is called by:
 54214 ;;		_APP_DeviceMSDInitialize
 54215 ;; This function uses a non-reentrant model
 54216 ;;
 54217                           
 54218                           	psect	text229
 54219  0110E8                     __ptext229:
 54220                           	opt stack 0
 54221  0110E8                     _USBMSDInit:
 54222                           	opt stack 13
 54223                           
 54224                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 54225                           
 54226                           ;incstack = 0
 54227  0110E8  0E00               	movlw	0
 54228  0110EA  6E01               	movwf	i2USBTransferOnePacket@dir,c
 54229  0110EC  0E40               	movlw	64
 54230  0110EE  6E02               	movwf	i2USBTransferOnePacket@data,c
 54231  0110F0  0E0D               	movlw	13
 54232  0110F2  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 54233  0110F4  0E40               	movlw	64
 54234  0110F6  6E04               	movwf	i2USBTransferOnePacket@len,c
 54235  0110F8  0E02               	movlw	2
 54236  0110FA  EC0D  F08B         	call	i2_USBTransferOnePacket
 54237  0110FE  C001  F13F         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 54238  011102  C002  F140         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 54239  011106  C10D  F13D         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 54240  01110A  C10E  F13E         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 54241                           
 54242                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 54243  01110E  0E00               	movlw	0
 54244  011110  0101               	movlb	1	; () banked
 54245  011112  6F56               	movwf	_MSD_State& (0+255),b
 54246                           
 54247                           ; BSR set to: 1
 54248                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 54249  011114  6955               	setf	_MSDCommandState& (0+255),b
 54250                           
 54251                           ; BSR set to: 1
 54252                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 54253  011116  0E00               	movlw	0
 54254  011118  6F54               	movwf	_MSDReadState& (0+255),b
 54255                           
 54256                           ; BSR set to: 1
 54257                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 54258  01111A  0E00               	movlw	0
 54259  01111C  6F53               	movwf	_MSDWriteState& (0+255),b
 54260                           
 54261                           ; BSR set to: 1
 54262                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 54263  01111E  0E00               	movlw	0
 54264  011120  6F4F               	movwf	_MSDHostNoData& (0+255),b
 54265                           
 54266                           ; BSR set to: 1
 54267                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 54268  011122  0E00               	movlw	0
 54269  011124  0102               	movlb	2	; () banked
 54270  011126  6F40               	movwf	_gblNumBLKS& (0+255),b
 54271  011128  0E00               	movlw	0
 54272  01112A  6F41               	movwf	(_gblNumBLKS+1)& (0+255),b
 54273  01112C  0E00               	movlw	0
 54274  01112E  6F42               	movwf	(_gblNumBLKS+2)& (0+255),b
 54275  011130  0E00               	movlw	0
 54276  011132  6F43               	movwf	(_gblNumBLKS+3)& (0+255),b
 54277                           
 54278                           ; BSR set to: 2
 54279                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 54280  011134  0E00               	movlw	0
 54281  011136  6F3C               	movwf	_gblBLKLen& (0+255),b
 54282  011138  0E00               	movlw	0
 54283  01113A  6F3D               	movwf	(_gblBLKLen+1)& (0+255),b
 54284  01113C  0E00               	movlw	0
 54285  01113E  6F3E               	movwf	(_gblBLKLen+2)& (0+255),b
 54286  011140  0E00               	movlw	0
 54287  011142  6F3F               	movwf	(_gblBLKLen+3)& (0+255),b
 54288                           
 54289                           ; BSR set to: 2
 54290                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 54291  011144  0E01               	movlw	1
 54292  011146  0101               	movlb	1	; () banked
 54293  011148  6F4E               	movwf	_MSDCBWValid& (0+255),b
 54294                           
 54295                           ; BSR set to: 1
 54296                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 54297  01114A  0E00               	movlw	0
 54298  01114C  6F3A               	movwf	(_gblMediaPresent+1)& (0+255),b
 54299  01114E  0E00               	movlw	0
 54300  011150  6F39               	movwf	_gblMediaPresent& (0+255),b
 54301                           
 54302                           ; BSR set to: 1
 54303                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 54304  011152  0E00               	movlw	0
 54305  011154  0102               	movlb	2	; () banked
 54306  011156  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 54307  011158  D04A               	goto	i2l534
 54308  01115A                     
 54309                           ; BSR set to: 2
 54310                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 54311                           
 54312                           ; BSR set to: 2
 54313  01115A  510D               	movf	(_gblCBW+13)& (0+255),w,b
 54314  01115C  0D01               	mullw	1
 54315  01115E  0E50               	movlw	low _SoftDetach
 54316  011160  24F3               	addwf	prodl,w,c
 54317  011162  6ED9               	movwf	fsr2l,c
 54318  011164  0E01               	movlw	high _SoftDetach
 54319  011166  20F4               	addwfc	prodh,w,c
 54320  011168  6EDA               	movwf	fsr2h,c
 54321  01116A  0E00               	movlw	0
 54322  01116C  6EDF               	movwf	indf2,c
 54323                           
 54324                           ; BSR set to: 2
 54325                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 54326  01116E  C2AE  F001         	movff	_LUN+21,i2ExternalFlash_MediaDetect@config
 54327  011172  C2AF  F002         	movff	_LUN+22,i2ExternalFlash_MediaDetect@config+1
 54328  011176  EE22  F0A2         	lfsr	2,_LUN+9
 54329  01117A  D801               	call	i2u1029_48
 54330  01117C  D00A               	goto	i2u1029_49
 54331  01117E                     i2u1029_48:
 54332  01117E  0005               	push	
 54333  011180  6EFA               	movwf	pclath,c
 54334  011182  50DE               	movf	postinc2,w,c
 54335  011184  6EFD               	movwf	tosl,c
 54336  011186  50DE               	movf	postinc2,w,c
 54337  011188  6EFE               	movwf	tosh,c
 54338  01118A  50DE               	movf	postinc2,w,c
 54339  01118C  6EFF               	movwf	tosu,c
 54340  01118E  50FA               	movf	pclath,w,c
 54341  011190  0012               	return		;indir
 54342  011192                     i2u1029_49:
 54343  011192  0900               	iorlw	0
 54344  011194  B4D8               	btfsc	status,2,c
 54345  011196  D027               	goto	i2l537
 54346                           
 54347                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 54348  011198  C2AE  F001         	movff	_LUN+21,i2ExternalFlash_MediaInitialize@config
 54349  01119C  C2AF  F002         	movff	_LUN+22,i2ExternalFlash_MediaInitialize@config+1
 54350  0111A0  D801               	call	i2u1031_48
 54351  0111A2  D00B               	goto	i2u1031_49
 54352  0111A4                     i2u1031_48:
 54353  0111A4  0005               	push	
 54354  0111A6  6EFA               	movwf	pclath,c
 54355  0111A8  0102               	movlb	2	; () banked
 54356  0111AA  5199               	movf	_LUN& (0+255),w,b
 54357  0111AC  6EFD               	movwf	tosl,c
 54358  0111AE  519A               	movf	(_LUN+1)& (0+255),w,b
 54359  0111B0  6EFE               	movwf	tosh,c
 54360  0111B2  519B               	movf	(_LUN+2)& (0+255),w,b
 54361  0111B4  6EFF               	movwf	tosu,c
 54362  0111B6  50FA               	movf	pclath,w,c
 54363  0111B8  0012               	return		;indir
 54364  0111BA                     i2u1031_49:
 54365  0111BA  5001               	movf	?i2_ExternalFlash_MediaInitialize,w,c
 54366  0111BC  1002               	iorwf	?i2_ExternalFlash_MediaInitialize+1,w,c
 54367  0111BE  B4D8               	btfsc	status,2,c
 54368  0111C0  D012               	goto	i2l537
 54369                           
 54370                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 54371  0111C2  C20D  F00C         	movff	_gblCBW+13,??_USBMSDInit
 54372  0111C6  0E01               	movlw	1
 54373  0111C8  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 54374  0111CA  0E00               	movlw	0
 54375  0111CC  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 54376  0111CE  2A0C               	incf	??_USBMSDInit,f,c
 54377  0111D0  D003               	goto	i2u1033_44
 54378  0111D2                     i2u1033_45:
 54379  0111D2  90D8               	bcf	status,0,c
 54380  0111D4  360D               	rlcf	??_USBMSDInit+1,f,c
 54381  0111D6  360E               	rlcf	??_USBMSDInit+2,f,c
 54382  0111D8                     i2u1033_44:
 54383  0111D8  2E0C               	decfsz	??_USBMSDInit,f,c
 54384  0111DA  D7FB               	goto	i2u1033_45
 54385  0111DC  500D               	movf	??_USBMSDInit+1,w,c
 54386  0111DE  0101               	movlb	1	; () banked
 54387  0111E0  1339               	iorwf	_gblMediaPresent& (0+255),f,b
 54388  0111E2  500E               	movf	??_USBMSDInit+2,w,c
 54389  0111E4  133A               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 54390  0111E6                     i2l537:
 54391                           
 54392                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 54393                           
 54394                           ; BSR set to: 1
 54395                           
 54396                           ; BSR set to: 1
 54397  0111E6  EC40  F0A4         	call	i2_ResetSenseData	;wreg free
 54398  0111EA  0102               	movlb	2	; () banked
 54399  0111EC  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 54400  0111EE                     i2l534:
 54401                           
 54402                           ; BSR set to: 2
 54403                           
 54404                           ; BSR set to: 2
 54405  0111EE  510D               	movf	(_gblCBW+13)& (0+255),w,b
 54406  0111F0  A4D8               	btfss	status,2,c
 54407  0111F2  0012               	return	
 54408  0111F4  D7B2               	goto	i2l535
 54409  0111F6                     __end_of_USBMSDInit:
 54410                           	opt stack 0
 54411                           tosu	equ	0xFFF
 54412                           tosh	equ	0xFFE
 54413                           tosl	equ	0xFFD
 54414                           pclatu	equ	0xFFB
 54415                           pclath	equ	0xFFA
 54416                           tblptru	equ	0xFF8
 54417                           tblptrh	equ	0xFF7
 54418                           tblptrl	equ	0xFF6
 54419                           tablat	equ	0xFF5
 54420                           prodh	equ	0xFF4
 54421                           prodl	equ	0xFF3
 54422                           intcon	equ	0xFF2
 54423                           indf0	equ	0xFEF
 54424                           postinc0	equ	0xFEE
 54425                           fsr0h	equ	0xFEA
 54426                           fsr0l	equ	0xFE9
 54427                           wreg	equ	0xFE8
 54428                           indf1	equ	0xFE7
 54429                           postinc1	equ	0xFE6
 54430                           postdec1	equ	0xFE5
 54431                           plusw1	equ	0xFE3
 54432                           fsr1h	equ	0xFE2
 54433                           fsr1l	equ	0xFE1
 54434                           indf2	equ	0xFDF
 54435                           postinc2	equ	0xFDE
 54436                           postdec2	equ	0xFDD
 54437                           plusw2	equ	0xFDB
 54438                           fsr2h	equ	0xFDA
 54439                           fsr2l	equ	0xFD9
 54440                           status	equ	0xFD8
 54441                           
 54442 ;; *************** function i2_ResetSenseData *****************
 54443 ;; Defined at:
 54444 ;;		line 1373 in file "usb_device_msd.c"
 54445 ;; Parameters:    Size  Location     Type
 54446 ;;		None
 54447 ;; Auto vars:     Size  Location     Type
 54448 ;;		None
 54449 ;; Return value:  Size  Location     Type
 54450 ;;                  1    wreg      void 
 54451 ;; Registers used:
 54452 ;;		wreg, status,2
 54453 ;; Tracked objects:
 54454 ;;		On entry : 0/0
 54455 ;;		On exit  : 0/0
 54456 ;;		Unchanged: 0/0
 54457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54462 ;;Total ram usage:        0 bytes
 54463 ;; Hardware stack levels used:    1
 54464 ;; This function calls:
 54465 ;;		Nothing
 54466 ;; This function is called by:
 54467 ;;		_USBMSDInit
 54468 ;; This function uses a non-reentrant model
 54469 ;;
 54470                           
 54471                           	psect	text230
 54472  014880                     __ptext230:
 54473                           	opt stack 0
 54474  014880                     i2_ResetSenseData:
 54475                           	opt stack 13
 54476                           
 54477                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 54478                           
 54479                           ; BSR set to: 2
 54480                           ;incstack = 0
 54481  014880  0102               	movlb	2	; () banked
 54482  014882  911F               	bcf	_gblSenseData& (0+255),0,b
 54483  014884  931F               	bcf	_gblSenseData& (0+255),1,b
 54484  014886  951F               	bcf	_gblSenseData& (0+255),2,b
 54485  014888  971F               	bcf	_gblSenseData& (0+255),3,b
 54486  01488A  891F               	bsf	_gblSenseData& (0+255),4,b
 54487  01488C  8B1F               	bsf	_gblSenseData& (0+255),5,b
 54488  01488E  8D1F               	bsf	_gblSenseData& (0+255),6,b
 54489                           
 54490                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 54491  014890  9F1F               	bcf	_gblSenseData& (0+255),7,b
 54492                           
 54493                           ; BSR set to: 2
 54494                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 54495  014892  0E00               	movlw	0
 54496  014894  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 54497                           
 54498                           ; BSR set to: 2
 54499                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 54500  014896  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 54501  014898  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 54502  01489A  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 54503  01489C  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 54504                           
 54505                           ; BSR set to: 2
 54506                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 54507  01489E  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 54508                           
 54509                           ; BSR set to: 2
 54510                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 54511  0148A0  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 54512                           
 54513                           ; BSR set to: 2
 54514                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 54515  0148A2  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 54516                           
 54517                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 54518  0148A4  0E00               	movlw	0
 54519  0148A6  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 54520                           
 54521                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 54522  0148A8  0E00               	movlw	0
 54523  0148AA  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 54524                           
 54525                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 54526  0148AC  0E00               	movlw	0
 54527  0148AE  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 54528                           
 54529                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 54530  0148B0  0E00               	movlw	0
 54531  0148B2  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 54532                           
 54533                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 54534  0148B4  0E0A               	movlw	10
 54535  0148B6  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 54536                           
 54537                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 54538  0148B8  0E00               	movlw	0
 54539  0148BA  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 54540  0148BC  0E00               	movlw	0
 54541  0148BE  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 54542  0148C0  0E00               	movlw	0
 54543  0148C2  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 54544  0148C4  0E00               	movlw	0
 54545  0148C6  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 54546                           
 54547                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 54548  0148C8  0E00               	movlw	0
 54549  0148CA  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 54550                           
 54551                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 54552  0148CC  0E00               	movlw	0
 54553  0148CE  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 54554                           
 54555                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 54556  0148D0  0E00               	movlw	0
 54557  0148D2  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 54558                           
 54559                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 54560  0148D4  0E00               	movlw	0
 54561  0148D6  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 54562                           
 54563                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 54564  0148D8  0E00               	movlw	0
 54565  0148DA  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 54566                           
 54567                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 54568  0148DC  0E00               	movlw	0
 54569  0148DE  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 54570                           
 54571                           ; BSR set to: 2
 54572  0148E0  0012               	return		;funcret
 54573  0148E2                     __end_ofi2_ResetSenseData:
 54574                           	opt stack 0
 54575                           tosu	equ	0xFFF
 54576                           tosh	equ	0xFFE
 54577                           tosl	equ	0xFFD
 54578                           pclatu	equ	0xFFB
 54579                           pclath	equ	0xFFA
 54580                           tblptru	equ	0xFF8
 54581                           tblptrh	equ	0xFF7
 54582                           tblptrl	equ	0xFF6
 54583                           tablat	equ	0xFF5
 54584                           prodh	equ	0xFF4
 54585                           prodl	equ	0xFF3
 54586                           intcon	equ	0xFF2
 54587                           indf0	equ	0xFEF
 54588                           postinc0	equ	0xFEE
 54589                           fsr0h	equ	0xFEA
 54590                           fsr0l	equ	0xFE9
 54591                           wreg	equ	0xFE8
 54592                           indf1	equ	0xFE7
 54593                           postinc1	equ	0xFE6
 54594                           postdec1	equ	0xFE5
 54595                           plusw1	equ	0xFE3
 54596                           fsr1h	equ	0xFE2
 54597                           fsr1l	equ	0xFE1
 54598                           indf2	equ	0xFDF
 54599                           postinc2	equ	0xFDE
 54600                           postdec2	equ	0xFDD
 54601                           plusw2	equ	0xFDB
 54602                           fsr2h	equ	0xFDA
 54603                           fsr2l	equ	0xFD9
 54604                           status	equ	0xFD8
 54605                           
 54606 ;; *************** function i2_ExternalFlash_MediaInitialize *****************
 54607 ;; Defined at:
 54608 ;;		line 10 in file "external_flash.c"
 54609 ;; Parameters:    Size  Location     Type
 54610 ;;  config          2    0[COMRAM] PTR void 
 54611 ;;		 -> NULL(0), 
 54612 ;; Auto vars:     Size  Location     Type
 54613 ;;		None
 54614 ;; Return value:  Size  Location     Type
 54615 ;;                  2    0[COMRAM] PTR struct .
 54616 ;; Registers used:
 54617 ;;		wreg, status,2, status,0
 54618 ;; Tracked objects:
 54619 ;;		On entry : 0/0
 54620 ;;		On exit  : 0/0
 54621 ;;		Unchanged: 0/0
 54622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54623 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54626 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54627 ;;Total ram usage:        2 bytes
 54628 ;; Hardware stack levels used:    1
 54629 ;; This function calls:
 54630 ;;		Nothing
 54631 ;; This function is called by:
 54632 ;;		_USBMSDInit
 54633 ;;		_MSDProcessCommand
 54634 ;; This function uses a non-reentrant model
 54635 ;;
 54636                           
 54637                           	psect	text231
 54638  015E34                     __ptext231:
 54639                           	opt stack 0
 54640  015E34                     i2_ExternalFlash_MediaInitialize:
 54641                           	opt stack 13
 54642                           
 54643                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 54644                           
 54645                           ; BSR set to: 2
 54646                           ;incstack = 0
 54647  015E34  0102               	movlb	2	; () banked
 54648  015E36  8195               	bsf	(_mediaInformation+1)& (0+255),0,b
 54649                           
 54650                           ; BSR set to: 2
 54651                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 54652  015E38  0E02               	movlw	2
 54653  015E3A  6F97               	movwf	(_mediaInformation+3)& (0+255),b
 54654  015E3C  0E00               	movlw	0
 54655  015E3E  6F96               	movwf	(_mediaInformation+2)& (0+255),b
 54656                           
 54657                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 54658  015E40  0E00               	movlw	0
 54659  015E42  6F94               	movwf	_mediaInformation& (0+255),b
 54660                           
 54661                           ; BSR set to: 2
 54662                           ;external_flash.c: 15: return &mediaInformation;
 54663  015E44  0E94               	movlw	low _mediaInformation
 54664  015E46  6E01               	movwf	?i2_ExternalFlash_MediaInitialize,c
 54665  015E48  0E02               	movlw	high _mediaInformation
 54666  015E4A  6E02               	movwf	?i2_ExternalFlash_MediaInitialize+1,c
 54667  015E4C  0012               	return	
 54668  015E4E                     __end_ofi2_ExternalFlash_MediaInitialize:
 54669                           	opt stack 0
 54670                           tosu	equ	0xFFF
 54671                           tosh	equ	0xFFE
 54672                           tosl	equ	0xFFD
 54673                           pclatu	equ	0xFFB
 54674                           pclath	equ	0xFFA
 54675                           tblptru	equ	0xFF8
 54676                           tblptrh	equ	0xFF7
 54677                           tblptrl	equ	0xFF6
 54678                           tablat	equ	0xFF5
 54679                           prodh	equ	0xFF4
 54680                           prodl	equ	0xFF3
 54681                           intcon	equ	0xFF2
 54682                           indf0	equ	0xFEF
 54683                           postinc0	equ	0xFEE
 54684                           fsr0h	equ	0xFEA
 54685                           fsr0l	equ	0xFE9
 54686                           wreg	equ	0xFE8
 54687                           indf1	equ	0xFE7
 54688                           postinc1	equ	0xFE6
 54689                           postdec1	equ	0xFE5
 54690                           plusw1	equ	0xFE3
 54691                           fsr1h	equ	0xFE2
 54692                           fsr1l	equ	0xFE1
 54693                           indf2	equ	0xFDF
 54694                           postinc2	equ	0xFDE
 54695                           postdec2	equ	0xFDD
 54696                           plusw2	equ	0xFDB
 54697                           fsr2h	equ	0xFDA
 54698                           fsr2l	equ	0xFD9
 54699                           status	equ	0xFD8
 54700                           
 54701 ;; *************** function i2_ExternalFlash_MediaDetect *****************
 54702 ;; Defined at:
 54703 ;;		line 29 in file "external_flash.c"
 54704 ;; Parameters:    Size  Location     Type
 54705 ;;  config          2    0[COMRAM] PTR void 
 54706 ;;		 -> NULL(0), 
 54707 ;; Auto vars:     Size  Location     Type
 54708 ;;		None
 54709 ;; Return value:  Size  Location     Type
 54710 ;;                  1    wreg      unsigned char 
 54711 ;; Registers used:
 54712 ;;		wreg
 54713 ;; Tracked objects:
 54714 ;;		On entry : 0/0
 54715 ;;		On exit  : 0/0
 54716 ;;		Unchanged: 0/0
 54717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54718 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54721 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54722 ;;Total ram usage:        2 bytes
 54723 ;; Hardware stack levels used:    1
 54724 ;; This function calls:
 54725 ;;		Nothing
 54726 ;; This function is called by:
 54727 ;;		_USBMSDInit
 54728 ;;		_MSDProcessCommand
 54729 ;; This function uses a non-reentrant model
 54730 ;;
 54731                           
 54732                           	psect	text232
 54733  015F88                     __ptext232:
 54734                           	opt stack 0
 54735  015F88                     i2_ExternalFlash_MediaDetect:
 54736                           	opt stack 13
 54737                           
 54738                           ;external_flash.c: 31: return 1;
 54739                           
 54740                           ; BSR set to: 2
 54741                           ;incstack = 0
 54742  015F88  0E01               	movlw	1
 54743  015F8A  0012               	return	
 54744  015F8C                     __end_ofi2_ExternalFlash_MediaDetect:
 54745                           	opt stack 0
 54746                           tosu	equ	0xFFF
 54747                           tosh	equ	0xFFE
 54748                           tosl	equ	0xFFD
 54749                           pclatu	equ	0xFFB
 54750                           pclath	equ	0xFFA
 54751                           tblptru	equ	0xFF8
 54752                           tblptrh	equ	0xFF7
 54753                           tblptrl	equ	0xFF6
 54754                           tablat	equ	0xFF5
 54755                           prodh	equ	0xFF4
 54756                           prodl	equ	0xFF3
 54757                           intcon	equ	0xFF2
 54758                           indf0	equ	0xFEF
 54759                           postinc0	equ	0xFEE
 54760                           fsr0h	equ	0xFEA
 54761                           fsr0l	equ	0xFE9
 54762                           wreg	equ	0xFE8
 54763                           indf1	equ	0xFE7
 54764                           postinc1	equ	0xFE6
 54765                           postdec1	equ	0xFE5
 54766                           plusw1	equ	0xFE3
 54767                           fsr1h	equ	0xFE2
 54768                           fsr1l	equ	0xFE1
 54769                           indf2	equ	0xFDF
 54770                           postinc2	equ	0xFDE
 54771                           postdec2	equ	0xFDD
 54772                           plusw2	equ	0xFDB
 54773                           fsr2h	equ	0xFDA
 54774                           fsr2l	equ	0xFD9
 54775                           status	equ	0xFD8
 54776                           
 54777 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 54778 ;; Defined at:
 54779 ;;		line 46 in file "app_device_custom_hid.c"
 54780 ;; Parameters:    Size  Location     Type
 54781 ;;		None
 54782 ;; Auto vars:     Size  Location     Type
 54783 ;;		None
 54784 ;; Return value:  Size  Location     Type
 54785 ;;                  1    wreg      void 
 54786 ;; Registers used:
 54787 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 54788 ;; Tracked objects:
 54789 ;;		On entry : 0/0
 54790 ;;		On exit  : 0/0
 54791 ;;		Unchanged: 0/0
 54792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54797 ;;Total ram usage:        0 bytes
 54798 ;; Hardware stack levels used:    1
 54799 ;; Hardware stack levels required when called:    2
 54800 ;; This function calls:
 54801 ;;		_USBEnableEndpoint
 54802 ;;		i2_USBTransferOnePacket
 54803 ;; This function is called by:
 54804 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 54805 ;; This function uses a non-reentrant model
 54806 ;;
 54807                           
 54808                           	psect	text233
 54809  0158F8                     __ptext233:
 54810                           	opt stack 0
 54811  0158F8                     _APP_DeviceCustomHIDInitialize:
 54812                           	opt stack 13
 54813                           
 54814                           ;app_device_custom_hid.c: 50: USBInHandle = 0;
 54815                           
 54816                           ;incstack = 0
 54817  0158F8  0E00               	movlw	0
 54818  0158FA  0101               	movlb	1	; () banked
 54819  0158FC  6F33               	movwf	_USBInHandle& (0+255),b
 54820  0158FE  0E00               	movlw	0
 54821  015900  6F34               	movwf	(_USBInHandle+1)& (0+255),b
 54822                           
 54823                           ; BSR set to: 1
 54824                           ;app_device_custom_hid.c: 53: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 54825  015902  0E1E               	movlw	30
 54826  015904  6E09               	movwf	USBEnableEndpoint@options,c
 54827  015906  0E01               	movlw	1
 54828  015908  EC67  F0AB         	call	_USBEnableEndpoint
 54829                           
 54830                           ;app_device_custom_hid.c: 56: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 54831  01590C  0E00               	movlw	0
 54832  01590E  6E01               	movwf	i2USBTransferOnePacket@dir,c
 54833  015910  0E80               	movlw	low _ReceivedDataBuffer
 54834  015912  6E02               	movwf	i2USBTransferOnePacket@data,c
 54835  015914  0E03               	movlw	high _ReceivedDataBuffer
 54836  015916  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 54837  015918  0E40               	movlw	64
 54838  01591A  6E04               	movwf	i2USBTransferOnePacket@len,c
 54839  01591C  0E01               	movlw	1
 54840  01591E  EC0D  F08B         	call	i2_USBTransferOnePacket
 54841  015922  C001  F135         	movff	?i2_USBTransferOnePacket,_USBOutHandle
 54842  015926  C002  F136         	movff	?i2_USBTransferOnePacket+1,_USBOutHandle+1
 54843  01592A  0012               	return		;funcret
 54844  01592C                     __end_of_APP_DeviceCustomHIDInitialize:
 54845                           	opt stack 0
 54846                           tosu	equ	0xFFF
 54847                           tosh	equ	0xFFE
 54848                           tosl	equ	0xFFD
 54849                           pclatu	equ	0xFFB
 54850                           pclath	equ	0xFFA
 54851                           tblptru	equ	0xFF8
 54852                           tblptrh	equ	0xFF7
 54853                           tblptrl	equ	0xFF6
 54854                           tablat	equ	0xFF5
 54855                           prodh	equ	0xFF4
 54856                           prodl	equ	0xFF3
 54857                           intcon	equ	0xFF2
 54858                           indf0	equ	0xFEF
 54859                           postinc0	equ	0xFEE
 54860                           fsr0h	equ	0xFEA
 54861                           fsr0l	equ	0xFE9
 54862                           wreg	equ	0xFE8
 54863                           indf1	equ	0xFE7
 54864                           postinc1	equ	0xFE6
 54865                           postdec1	equ	0xFE5
 54866                           plusw1	equ	0xFE3
 54867                           fsr1h	equ	0xFE2
 54868                           fsr1l	equ	0xFE1
 54869                           indf2	equ	0xFDF
 54870                           postinc2	equ	0xFDE
 54871                           postdec2	equ	0xFDD
 54872                           plusw2	equ	0xFDB
 54873                           fsr2h	equ	0xFDA
 54874                           fsr2l	equ	0xFD9
 54875                           status	equ	0xFD8
 54876                           
 54877 ;; *************** function i2_USBTransferOnePacket *****************
 54878 ;; Defined at:
 54879 ;;		line 995 in file "usb_device.c"
 54880 ;; Parameters:    Size  Location     Type
 54881 ;;  ep              1    wreg     unsigned char 
 54882 ;;  dir             1    0[COMRAM] unsigned char 
 54883 ;;  data            2    1[COMRAM] PTR unsigned char 
 54884 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 54885 ;;		 -> msd_cbw(31), NULL(0), 
 54886 ;;  len             1    3[COMRAM] unsigned char 
 54887 ;; Auto vars:     Size  Location     Type
 54888 ;;  ep              1    8[COMRAM] unsigned char 
 54889 ;;  USBTransferO    2    9[COMRAM] PTR volatile struct __BD
 54890 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 54891 ;; Return value:  Size  Location     Type
 54892 ;;                  2    0[COMRAM] PTR void 
 54893 ;; Registers used:
 54894 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 54895 ;; Tracked objects:
 54896 ;;		On entry : 0/0
 54897 ;;		On exit  : 0/0
 54898 ;;		Unchanged: 0/0
 54899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54900 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54901 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54902 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54903 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54904 ;;Total ram usage:       11 bytes
 54905 ;; Hardware stack levels used:    1
 54906 ;; This function calls:
 54907 ;;		Nothing
 54908 ;; This function is called by:
 54909 ;;		_USBMSDInit
 54910 ;;		_USBCheckMSDRequest
 54911 ;;		_MSDTransferTerminated
 54912 ;;		_APP_DeviceCustomHIDInitialize
 54913 ;; This function uses a non-reentrant model
 54914 ;;
 54915                           
 54916                           	psect	text234
 54917  01161A                     __ptext234:
 54918                           	opt stack 0
 54919  01161A                     i2_USBTransferOnePacket:
 54920                           	opt stack 14
 54921                           
 54922                           ;incstack = 0
 54923                           ;i2USBTransferOnePacket@ep stored from wreg
 54924  01161A  6E09               	movwf	i2USBTransferOnePacket@ep,c
 54925                           
 54926                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 54927  01161C  5001               	movf	i2USBTransferOnePacket@dir,w,c
 54928  01161E  B4D8               	btfsc	status,2,c
 54929  011620  D007               	goto	i2l184
 54930                           
 54931                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 54932  011622  5009               	movf	i2USBTransferOnePacket@ep,w,c
 54933  011624  0D02               	mullw	2
 54934  011626  0E09               	movlw	low _pBDTEntryIn
 54935  011628  24F3               	addwf	prodl,w,c
 54936  01162A  6ED9               	movwf	fsr2l,c
 54937  01162C  0E01               	movlw	high _pBDTEntryIn
 54938  01162E  D006               	goto	L81
 54939  011630                     i2l184:
 54940                           
 54941                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 54942  011630  5009               	movf	i2USBTransferOnePacket@ep,w,c
 54943  011632  0D02               	mullw	2
 54944  011634  0E0F               	movlw	low _pBDTEntryOut
 54945  011636  24F3               	addwf	prodl,w,c
 54946  011638  6ED9               	movwf	fsr2l,c
 54947  01163A  0E01               	movlw	high _pBDTEntryOut
 54948  01163C                     L81:
 54949  01163C  20F4               	addwfc	prodh,w,c
 54950  01163E  6EDA               	movwf	fsr2h,c
 54951  011640  CFDE F00A          	movff	postinc2,i2USBTransferOnePacket@handle
 54952  011644  CFDD F00B          	movff	postdec2,i2USBTransferOnePacket@handle+1
 54953                           
 54954                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 54955  011648  500A               	movf	i2USBTransferOnePacket@handle,w,c
 54956  01164A  100B               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 54957  01164C  A4D8               	btfss	status,2,c
 54958  01164E  D005               	goto	i2l186
 54959                           
 54960                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 54961  011650  0E00               	movlw	0
 54962  011652  6E01               	movwf	?i2_USBTransferOnePacket,c
 54963  011654  0E00               	movlw	0
 54964  011656  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 54965  011658  0012               	return	
 54966  01165A                     i2l186:
 54967                           
 54968                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 54969  01165A  EE20 F002          	lfsr	2,2
 54970  01165E  500A               	movf	i2USBTransferOnePacket@handle,w,c
 54971  011660  26D9               	addwf	fsr2l,f,c
 54972  011662  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 54973  011664  22DA               	addwfc	fsr2h,f,c
 54974  011666  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 54975  01166A  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 54976                           
 54977                           ;usb_device.c: 1030: handle->CNT = len;
 54978  01166E  EE20 F001          	lfsr	2,1
 54979  011672  500A               	movf	i2USBTransferOnePacket@handle,w,c
 54980  011674  26D9               	addwf	fsr2l,f,c
 54981  011676  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 54982  011678  22DA               	addwfc	fsr2h,f,c
 54983  01167A  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 54984                           
 54985                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 54986  01167E  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 54987  011682  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 54988  011686  0E40               	movlw	64
 54989  011688  16DF               	andwf	indf2,f,c
 54990                           
 54991                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 54992  01168A  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 54993  01168E  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 54994  011692  0E00               	movlw	0
 54995  011694  86DB               	bsf	plusw2,3,c
 54996                           
 54997                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 54998  011696  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 54999  01169A  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 55000  01169E  0E00               	movlw	0
 55001  0116A0  8EDB               	bsf	plusw2,7,c
 55002                           
 55003                           ;usb_device.c: 1036: if(dir != 0)
 55004  0116A2  5001               	movf	i2USBTransferOnePacket@dir,w,c
 55005  0116A4  B4D8               	btfsc	status,2,c
 55006  0116A6  D018               	goto	i2l188
 55007                           
 55008                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 55009  0116A8  5009               	movf	i2USBTransferOnePacket@ep,w,c
 55010  0116AA  0D02               	mullw	2
 55011  0116AC  0E09               	movlw	low _pBDTEntryIn
 55012  0116AE  24F3               	addwf	prodl,w,c
 55013  0116B0  6ED9               	movwf	fsr2l,c
 55014  0116B2  0E01               	movlw	high _pBDTEntryIn
 55015  0116B4  20F4               	addwfc	prodh,w,c
 55016  0116B6  6EDA               	movwf	fsr2h,c
 55017  0116B8  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 55018  0116BC  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 55019  0116C0  0E04               	movlw	4
 55020  0116C2  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 55021  0116C4  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 55022  0116C6  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 55023  0116C8  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 55024  0116CA  5009               	movf	i2USBTransferOnePacket@ep,w,c
 55025  0116CC  0D02               	mullw	2
 55026  0116CE  0E09               	movlw	low _pBDTEntryIn
 55027  0116D0  24F3               	addwf	prodl,w,c
 55028  0116D2  6ED9               	movwf	fsr2l,c
 55029  0116D4  0E01               	movlw	high _pBDTEntryIn
 55030  0116D6  D017               	goto	L82
 55031  0116D8                     i2l188:
 55032                           
 55033                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 55034  0116D8  5009               	movf	i2USBTransferOnePacket@ep,w,c
 55035  0116DA  0D02               	mullw	2
 55036  0116DC  0E0F               	movlw	low _pBDTEntryOut
 55037  0116DE  24F3               	addwf	prodl,w,c
 55038  0116E0  6ED9               	movwf	fsr2l,c
 55039  0116E2  0E01               	movlw	high _pBDTEntryOut
 55040  0116E4  20F4               	addwfc	prodh,w,c
 55041  0116E6  6EDA               	movwf	fsr2h,c
 55042  0116E8  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 55043  0116EC  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 55044  0116F0  0E04               	movlw	4
 55045  0116F2  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 55046  0116F4  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 55047  0116F6  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 55048  0116F8  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 55049  0116FA  5009               	movf	i2USBTransferOnePacket@ep,w,c
 55050  0116FC  0D02               	mullw	2
 55051  0116FE  0E0F               	movlw	low _pBDTEntryOut
 55052  011700  24F3               	addwf	prodl,w,c
 55053  011702  6ED9               	movwf	fsr2l,c
 55054  011704  0E01               	movlw	high _pBDTEntryOut
 55055  011706                     L82:
 55056  011706  20F4               	addwfc	prodh,w,c
 55057  011708  6EDA               	movwf	fsr2h,c
 55058  01170A  C007  FFDE         	movff	??i2_USBTransferOnePacket+2,postinc2
 55059  01170E  C008  FFDD         	movff	??i2_USBTransferOnePacket+3,postdec2
 55060                           
 55061                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 55062  011712  C00A  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 55063  011716  C00B  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 55064  01171A  0012               	return	
 55065  01171C                     __end_ofi2_USBTransferOnePacket:
 55066                           	opt stack 0
 55067                           tosu	equ	0xFFF
 55068                           tosh	equ	0xFFE
 55069                           tosl	equ	0xFFD
 55070                           pclatu	equ	0xFFB
 55071                           pclath	equ	0xFFA
 55072                           tblptru	equ	0xFF8
 55073                           tblptrh	equ	0xFF7
 55074                           tblptrl	equ	0xFF6
 55075                           tablat	equ	0xFF5
 55076                           prodh	equ	0xFF4
 55077                           prodl	equ	0xFF3
 55078                           intcon	equ	0xFF2
 55079                           indf0	equ	0xFEF
 55080                           postinc0	equ	0xFEE
 55081                           fsr0h	equ	0xFEA
 55082                           fsr0l	equ	0xFE9
 55083                           wreg	equ	0xFE8
 55084                           indf1	equ	0xFE7
 55085                           postinc1	equ	0xFE6
 55086                           postdec1	equ	0xFE5
 55087                           plusw1	equ	0xFE3
 55088                           fsr1h	equ	0xFE2
 55089                           fsr1l	equ	0xFE1
 55090                           indf2	equ	0xFDF
 55091                           postinc2	equ	0xFDE
 55092                           postdec2	equ	0xFDD
 55093                           plusw2	equ	0xFDB
 55094                           fsr2h	equ	0xFDA
 55095                           fsr2l	equ	0xFD9
 55096                           status	equ	0xFD8
 55097                           
 55098 ;; *************** function _USBEnableEndpoint *****************
 55099 ;; Defined at:
 55100 ;;		line 878 in file "usb_device.c"
 55101 ;; Parameters:    Size  Location     Type
 55102 ;;  ep              1    wreg     unsigned char 
 55103 ;;  options         1    8[COMRAM] unsigned char 
 55104 ;; Auto vars:     Size  Location     Type
 55105 ;;  ep              1   11[COMRAM] unsigned char 
 55106 ;;  p               2    9[COMRAM] PTR unsigned char 
 55107 ;;		 -> UEP0(1), 
 55108 ;; Return value:  Size  Location     Type
 55109 ;;                  1    wreg      void 
 55110 ;; Registers used:
 55111 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 55112 ;; Tracked objects:
 55113 ;;		On entry : 0/0
 55114 ;;		On exit  : 0/0
 55115 ;;		Unchanged: 0/0
 55116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55117 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55118 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55120 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55121 ;;Total ram usage:        4 bytes
 55122 ;; Hardware stack levels used:    1
 55123 ;; Hardware stack levels required when called:    1
 55124 ;; This function calls:
 55125 ;;		_USBConfigureEndpoint
 55126 ;; This function is called by:
 55127 ;;		_APP_DeviceCustomHIDInitialize
 55128 ;;		_APP_DeviceMSDInitialize
 55129 ;; This function uses a non-reentrant model
 55130 ;;
 55131                           
 55132                           	psect	text235
 55133  0156CE                     __ptext235:
 55134                           	opt stack 0
 55135  0156CE                     _USBEnableEndpoint:
 55136                           	opt stack 13
 55137                           
 55138                           ;incstack = 0
 55139                           ;USBEnableEndpoint@ep stored from wreg
 55140  0156CE  6E0C               	movwf	USBEnableEndpoint@ep,c
 55141                           
 55142                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 55143  0156D0  A409               	btfss	USBEnableEndpoint@options,2,c
 55144  0156D2  D005               	goto	i2l179
 55145                           
 55146                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 55147  0156D4  0E00               	movlw	0
 55148  0156D6  6E01               	movwf	USBConfigureEndpoint@direction,c
 55149  0156D8  500C               	movf	USBEnableEndpoint@ep,w,c
 55150  0156DA  ECDC  F09D         	call	_USBConfigureEndpoint
 55151  0156DE                     i2l179:
 55152                           
 55153                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 55154  0156DE  A209               	btfss	USBEnableEndpoint@options,1,c
 55155  0156E0  D005               	goto	i2l180
 55156                           
 55157                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 55158  0156E2  0E01               	movlw	1
 55159  0156E4  6E01               	movwf	USBConfigureEndpoint@direction,c
 55160  0156E6  500C               	movf	USBEnableEndpoint@ep,w,c
 55161  0156E8  ECDC  F09D         	call	_USBConfigureEndpoint
 55162  0156EC                     i2l180:
 55163                           
 55164                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 55165  0156EC  500C               	movf	USBEnableEndpoint@ep,w,c
 55166  0156EE  0D01               	mullw	1
 55167  0156F0  0E26               	movlw	38
 55168  0156F2  24F3               	addwf	prodl,w,c
 55169  0156F4  6E0A               	movwf	USBEnableEndpoint@p,c
 55170  0156F6  0E0F               	movlw	15
 55171  0156F8  20F4               	addwfc	prodh,w,c
 55172  0156FA  6E0B               	movwf	USBEnableEndpoint@p+1,c
 55173                           
 55174                           ;usb_device.c: 901: *p = options;
 55175  0156FC  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 55176  015700  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 55177  015704  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 55178  015708  0012               	return		;funcret
 55179  01570A                     __end_of_USBEnableEndpoint:
 55180                           	opt stack 0
 55181                           tosu	equ	0xFFF
 55182                           tosh	equ	0xFFE
 55183                           tosl	equ	0xFFD
 55184                           pclatu	equ	0xFFB
 55185                           pclath	equ	0xFFA
 55186                           tblptru	equ	0xFF8
 55187                           tblptrh	equ	0xFF7
 55188                           tblptrl	equ	0xFF6
 55189                           tablat	equ	0xFF5
 55190                           prodh	equ	0xFF4
 55191                           prodl	equ	0xFF3
 55192                           intcon	equ	0xFF2
 55193                           indf0	equ	0xFEF
 55194                           postinc0	equ	0xFEE
 55195                           fsr0h	equ	0xFEA
 55196                           fsr0l	equ	0xFE9
 55197                           wreg	equ	0xFE8
 55198                           indf1	equ	0xFE7
 55199                           postinc1	equ	0xFE6
 55200                           postdec1	equ	0xFE5
 55201                           plusw1	equ	0xFE3
 55202                           fsr1h	equ	0xFE2
 55203                           fsr1l	equ	0xFE1
 55204                           indf2	equ	0xFDF
 55205                           postinc2	equ	0xFDE
 55206                           postdec2	equ	0xFDD
 55207                           plusw2	equ	0xFDB
 55208                           fsr2h	equ	0xFDA
 55209                           fsr2l	equ	0xFD9
 55210                           status	equ	0xFD8
 55211                           
 55212 ;; *************** function _USBConfigureEndpoint *****************
 55213 ;; Defined at:
 55214 ;;		line 1545 in file "usb_device.c"
 55215 ;; Parameters:    Size  Location     Type
 55216 ;;  EPNum           1    wreg     unsigned char 
 55217 ;;  direction       1    0[COMRAM] unsigned char 
 55218 ;; Auto vars:     Size  Location     Type
 55219 ;;  EPNum           1    5[COMRAM] unsigned char 
 55220 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 55221 ;;		 -> BDT(48), 
 55222 ;; Return value:  Size  Location     Type
 55223 ;;                  1    wreg      void 
 55224 ;; Registers used:
 55225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 55226 ;; Tracked objects:
 55227 ;;		On entry : 0/0
 55228 ;;		On exit  : 0/0
 55229 ;;		Unchanged: 0/0
 55230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55231 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55232 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55233 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55234 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55235 ;;Total ram usage:        8 bytes
 55236 ;; Hardware stack levels used:    1
 55237 ;; This function calls:
 55238 ;;		Nothing
 55239 ;; This function is called by:
 55240 ;;		_USBEnableEndpoint
 55241 ;; This function uses a non-reentrant model
 55242 ;;
 55243                           
 55244                           	psect	text236
 55245  013BB8                     __ptext236:
 55246                           	opt stack 0
 55247  013BB8                     _USBConfigureEndpoint:
 55248                           	opt stack 13
 55249                           
 55250                           ;incstack = 0
 55251                           ;USBConfigureEndpoint@EPNum stored from wreg
 55252  013BB8  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 55253                           
 55254                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 55255  013BBA  0E00               	movlw	0
 55256  013BBC  6E07               	movwf	USBConfigureEndpoint@handle,c
 55257  013BBE  0E0D               	movlw	13
 55258  013BC0  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 55259                           
 55260                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 55261  013BC2  5001               	movf	USBConfigureEndpoint@direction,w,c
 55262  013BC4  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 55263  013BC6  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 55264  013BC8  90D8               	bcf	status,0,c
 55265  013BCA  3602               	rlcf	??_USBConfigureEndpoint,f,c
 55266  013BCC  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 55267  013BCE  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 55268  013BD0  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 55269  013BD2  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 55270  013BD4  90D8               	bcf	status,0,c
 55271  013BD6  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 55272  013BD8  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 55273  013BDA  90D8               	bcf	status,0,c
 55274  013BDC  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 55275  013BDE  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 55276  013BE0  5002               	movf	??_USBConfigureEndpoint,w,c
 55277  013BE2  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 55278  013BE4  5003               	movf	??_USBConfigureEndpoint+1,w,c
 55279  013BE6  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 55280  013BE8  90D8               	bcf	status,0,c
 55281  013BEA  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 55282  013BEC  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 55283  013BEE  90D8               	bcf	status,0,c
 55284  013BF0  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 55285  013BF2  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 55286  013BF4  5004               	movf	??_USBConfigureEndpoint+2,w,c
 55287  013BF6  2607               	addwf	USBConfigureEndpoint@handle,f,c
 55288  013BF8  5005               	movf	??_USBConfigureEndpoint+3,w,c
 55289  013BFA  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 55290                           
 55291                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 55292  013BFC  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 55293  013C00  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 55294  013C04  9EDF               	bcf	indf2,7,c
 55295                           
 55296                           ;usb_device.c: 1559: if(direction == 0)
 55297  013C06  5001               	movf	USBConfigureEndpoint@direction,w,c
 55298  013C08  A4D8               	btfss	status,2,c
 55299  013C0A  D007               	goto	i2l226
 55300                           
 55301                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 55302  013C0C  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 55303  013C0E  0D02               	mullw	2
 55304  013C10  0E0F               	movlw	low _pBDTEntryOut
 55305  013C12  24F3               	addwf	prodl,w,c
 55306  013C14  6ED9               	movwf	fsr2l,c
 55307  013C16  0E01               	movlw	high _pBDTEntryOut
 55308  013C18  D006               	goto	L83
 55309  013C1A                     i2l226:
 55310                           
 55311                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 55312  013C1A  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 55313  013C1C  0D02               	mullw	2
 55314  013C1E  0E09               	movlw	low _pBDTEntryIn
 55315  013C20  24F3               	addwf	prodl,w,c
 55316  013C22  6ED9               	movwf	fsr2l,c
 55317  013C24  0E01               	movlw	high _pBDTEntryIn
 55318  013C26                     L83:
 55319  013C26  20F4               	addwfc	prodh,w,c
 55320  013C28  6EDA               	movwf	fsr2h,c
 55321  013C2A  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 55322  013C2E  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 55323                           
 55324                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 55325  013C32  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 55326  013C36  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 55327  013C3A  9CDF               	bcf	indf2,6,c
 55328                           
 55329                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 55330  013C3C  EE20 F004          	lfsr	2,4
 55331  013C40  5007               	movf	USBConfigureEndpoint@handle,w,c
 55332  013C42  26D9               	addwf	fsr2l,f,c
 55333  013C44  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 55334  013C46  22DA               	addwfc	fsr2h,f,c
 55335  013C48  8CDF               	bsf	indf2,6,c
 55336  013C4A  0012               	return		;funcret
 55337  013C4C                     __end_of_USBConfigureEndpoint:
 55338                           	opt stack 0
 55339                           tosu	equ	0xFFF
 55340                           tosh	equ	0xFFE
 55341                           tosl	equ	0xFFD
 55342                           pclatu	equ	0xFFB
 55343                           pclath	equ	0xFFA
 55344                           tblptru	equ	0xFF8
 55345                           tblptrh	equ	0xFF7
 55346                           tblptrl	equ	0xFF6
 55347                           tablat	equ	0xFF5
 55348                           prodh	equ	0xFF4
 55349                           prodl	equ	0xFF3
 55350                           intcon	equ	0xFF2
 55351                           indf0	equ	0xFEF
 55352                           postinc0	equ	0xFEE
 55353                           fsr0h	equ	0xFEA
 55354                           fsr0l	equ	0xFE9
 55355                           wreg	equ	0xFE8
 55356                           indf1	equ	0xFE7
 55357                           postinc1	equ	0xFE6
 55358                           postdec1	equ	0xFE5
 55359                           plusw1	equ	0xFE3
 55360                           fsr1h	equ	0xFE2
 55361                           fsr1l	equ	0xFE1
 55362                           indf2	equ	0xFDF
 55363                           postinc2	equ	0xFDE
 55364                           postdec2	equ	0xFDD
 55365                           plusw2	equ	0xFDB
 55366                           fsr2h	equ	0xFDA
 55367                           fsr2l	equ	0xFD9
 55368                           status	equ	0xFD8
 55369                           
 55370 ;; *************** function _USBCtrlTrfOutHandler *****************
 55371 ;; Defined at:
 55372 ;;		line 2540 in file "usb_device.c"
 55373 ;; Parameters:    Size  Location     Type
 55374 ;;		None
 55375 ;; Auto vars:     Size  Location     Type
 55376 ;;		None
 55377 ;; Return value:  Size  Location     Type
 55378 ;;                  1    wreg      void 
 55379 ;; Registers used:
 55380 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 55381 ;; Tracked objects:
 55382 ;;		On entry : 0/0
 55383 ;;		On exit  : 0/0
 55384 ;;		Unchanged: 0/0
 55385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55390 ;;Total ram usage:        0 bytes
 55391 ;; Hardware stack levels used:    1
 55392 ;; Hardware stack levels required when called:    2
 55393 ;; This function calls:
 55394 ;;		_USBCtrlTrfRxService
 55395 ;; This function is called by:
 55396 ;;		_USBCtrlEPService
 55397 ;; This function uses a non-reentrant model
 55398 ;;
 55399                           
 55400                           	psect	text237
 55401  014942                     __ptext237:
 55402                           	opt stack 0
 55403  014942                     _USBCtrlTrfOutHandler:
 55404                           	opt stack 13
 55405                           
 55406                           ;usb_device.c: 2542: if(controlTransferState == 2)
 55407                           
 55408                           ;incstack = 0
 55409  014942  0E02               	movlw	2
 55410  014944  0101               	movlb	1	; () banked
 55411  014946  1962               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 55412  014948  A4D8               	btfss	status,2,c
 55413  01494A  D003               	goto	i2l332
 55414                           
 55415                           ; BSR set to: 1
 55416                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 55417  01494C  ECFB  F088         	call	_USBCtrlTrfRxService	;wreg free
 55418                           
 55419                           ;usb_device.c: 2545: }
 55420  014950  0012               	return	
 55421  014952                     i2l332:
 55422                           
 55423                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 55424  014952  0E00               	movlw	0
 55425  014954  0101               	movlb	1	; () banked
 55426  014956  6F62               	movwf	_controlTransferState& (0+255),b	;volatile
 55427                           
 55428                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 55429  014958  515E               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 55430  01495A  A4D8               	btfss	status,2,c
 55431  01495C  D01F               	goto	i2l334
 55432                           
 55433                           ; BSR set to: 1
 55434                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 55435  01495E  EE20 F001          	lfsr	2,1
 55436  014962  5059               	movf	_pBDTEntryEP0OutNext,w,c
 55437  014964  26D9               	addwf	fsr2l,f,c
 55438  014966  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 55439  014968  22DA               	addwfc	fsr2h,f,c
 55440  01496A  0E08               	movlw	8
 55441  01496C  6EDF               	movwf	indf2,c
 55442                           
 55443                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 55444  01496E  EE20 F002          	lfsr	2,2
 55445  014972  5059               	movf	_pBDTEntryEP0OutNext,w,c
 55446  014974  26D9               	addwf	fsr2l,f,c
 55447  014976  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 55448  014978  22DA               	addwfc	fsr2h,f,c
 55449  01497A  0E30               	movlw	48
 55450  01497C  6EDE               	movwf	postinc2,c
 55451  01497E  0E0D               	movlw	13
 55452  014980  6EDD               	movwf	postdec2,c
 55453                           
 55454                           ; BSR set to: 1
 55455                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 55456  014982  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55457  014986  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55458  01498A  0E0C               	movlw	12
 55459  01498C  6EDF               	movwf	indf2,c
 55460                           
 55461                           ; BSR set to: 1
 55462                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 55463  01498E  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55464  014992  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55465  014996  0E00               	movlw	0
 55466  014998  8EDB               	bsf	plusw2,7,c
 55467                           
 55468                           ;usb_device.c: 2563: }
 55469  01499A  0012               	return	
 55470  01499C                     i2l334:
 55471                           
 55472                           ; BSR set to: 1
 55473                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 55474                           
 55475                           ; BSR set to: 1
 55476  01499C  0E00               	movlw	0
 55477  01499E  6F5E               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 55478                           
 55479                           ; BSR set to: 1
 55480  0149A0  0012               	return	
 55481  0149A2                     __end_of_USBCtrlTrfOutHandler:
 55482                           	opt stack 0
 55483                           tosu	equ	0xFFF
 55484                           tosh	equ	0xFFE
 55485                           tosl	equ	0xFFD
 55486                           pclatu	equ	0xFFB
 55487                           pclath	equ	0xFFA
 55488                           tblptru	equ	0xFF8
 55489                           tblptrh	equ	0xFF7
 55490                           tblptrl	equ	0xFF6
 55491                           tablat	equ	0xFF5
 55492                           prodh	equ	0xFF4
 55493                           prodl	equ	0xFF3
 55494                           intcon	equ	0xFF2
 55495                           indf0	equ	0xFEF
 55496                           postinc0	equ	0xFEE
 55497                           fsr0h	equ	0xFEA
 55498                           fsr0l	equ	0xFE9
 55499                           wreg	equ	0xFE8
 55500                           indf1	equ	0xFE7
 55501                           postinc1	equ	0xFE6
 55502                           postdec1	equ	0xFE5
 55503                           plusw1	equ	0xFE3
 55504                           fsr1h	equ	0xFE2
 55505                           fsr1l	equ	0xFE1
 55506                           indf2	equ	0xFDF
 55507                           postinc2	equ	0xFDE
 55508                           postdec2	equ	0xFDD
 55509                           plusw2	equ	0xFDB
 55510                           fsr2h	equ	0xFDA
 55511                           fsr2l	equ	0xFD9
 55512                           status	equ	0xFD8
 55513                           
 55514 ;; *************** function _USBCtrlTrfRxService *****************
 55515 ;; Defined at:
 55516 ;;		line 1854 in file "usb_device.c"
 55517 ;; Parameters:    Size  Location     Type
 55518 ;;		None
 55519 ;; Auto vars:     Size  Location     Type
 55520 ;;  byteToRead      1    1[COMRAM] unsigned char 
 55521 ;;  i               1    0[COMRAM] unsigned char 
 55522 ;; Return value:  Size  Location     Type
 55523 ;;                  1    wreg      void 
 55524 ;; Registers used:
 55525 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 55526 ;; Tracked objects:
 55527 ;;		On entry : 0/0
 55528 ;;		On exit  : 0/0
 55529 ;;		Unchanged: 0/0
 55530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55532 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55534 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55535 ;;Total ram usage:        2 bytes
 55536 ;; Hardware stack levels used:    1
 55537 ;; Hardware stack levels required when called:    1
 55538 ;; This function calls:
 55539 ;;		_USBCtrlEPAllowStatusStage
 55540 ;; This function is called by:
 55541 ;;		_USBCtrlTrfOutHandler
 55542 ;; This function uses a non-reentrant model
 55543 ;;
 55544                           
 55545                           	psect	text238
 55546  0111F6                     __ptext238:
 55547                           	opt stack 0
 55548  0111F6                     _USBCtrlTrfRxService:
 55549                           	opt stack 13
 55550                           
 55551                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 55552                           
 55553                           ;incstack = 0
 55554  0111F6  EE20 F001          	lfsr	2,1
 55555  0111FA  505B               	movf	_pBDTEntryEP0OutCurrent,w,c
 55556  0111FC  26D9               	addwf	fsr2l,f,c
 55557  0111FE  505C               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 55558  011200  22DA               	addwfc	fsr2h,f,c
 55559  011202  50DF               	movf	indf2,w,c
 55560  011204  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 55561                           
 55562                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 55563  011206  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 55564  011208  0101               	movlb	1	; () banked
 55565  01120A  5D04               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 55566  01120C  0E00               	movlw	0
 55567  01120E  5905               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 55568  011210  A0D8               	btfss	status,0,c
 55569                           
 55570                           ; BSR set to: 1
 55571                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 55572  011212  C104  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 55573                           
 55574                           ; BSR set to: 1
 55575                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 55576                           
 55577                           ; BSR set to: 1
 55578  011216  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 55579  011218  5F04               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 55580  01121A  0E00               	movlw	0
 55581  01121C  5B05               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 55582                           
 55583                           ; BSR set to: 1
 55584                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 55585  01121E  0E00               	movlw	0
 55586  011220  6E01               	movwf	USBCtrlTrfRxService@i,c
 55587  011222  D011               	goto	i2l260
 55588  011224                     
 55589                           ; BSR set to: 1
 55590                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 55591                           
 55592                           ; BSR set to: 1
 55593  011224  5001               	movf	USBCtrlTrfRxService@i,w,c
 55594  011226  0D01               	mullw	1
 55595  011228  0E38               	movlw	56
 55596  01122A  24F3               	addwf	prodl,w,c
 55597  01122C  6ED9               	movwf	fsr2l,c
 55598  01122E  0E0D               	movlw	13
 55599  011230  20F4               	addwfc	prodh,w,c
 55600  011232  6EDA               	movwf	fsr2h,c
 55601  011234  C100  FFE1         	movff	_outPipes,fsr1l	;volatile
 55602  011238  C101  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 55603  01123C  CFDF FFE7          	movff	indf2,indf1
 55604                           
 55605                           ; BSR set to: 1
 55606  011240  4B00               	infsnz	_outPipes& (0+255),f,b	;volatile
 55607  011242  2B01               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 55608                           
 55609                           ; BSR set to: 1
 55610  011244  2A01               	incf	USBCtrlTrfRxService@i,f,c
 55611  011246                     i2l260:
 55612                           
 55613                           ; BSR set to: 1
 55614                           
 55615                           ; BSR set to: 1
 55616  011246  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 55617  011248  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 55618  01124A  A0D8               	btfss	status,0,c
 55619  01124C  D7EB               	goto	i2l261
 55620                           
 55621                           ; BSR set to: 1
 55622                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 55623                           
 55624                           ; BSR set to: 1
 55625  01124E  5104               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 55626  011250  1105               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 55627  011252  B4D8               	btfsc	status,2,c
 55628  011254  D032               	goto	i2l263
 55629                           
 55630                           ; BSR set to: 1
 55631                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 55632  011256  EE20 F001          	lfsr	2,1
 55633  01125A  5059               	movf	_pBDTEntryEP0OutNext,w,c
 55634  01125C  26D9               	addwf	fsr2l,f,c
 55635  01125E  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 55636  011260  22DA               	addwfc	fsr2h,f,c
 55637  011262  0E08               	movlw	8
 55638  011264  6EDF               	movwf	indf2,c
 55639                           
 55640                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 55641  011266  EE20 F002          	lfsr	2,2
 55642  01126A  5059               	movf	_pBDTEntryEP0OutNext,w,c
 55643  01126C  26D9               	addwf	fsr2l,f,c
 55644  01126E  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 55645  011270  22DA               	addwfc	fsr2h,f,c
 55646  011272  0E38               	movlw	56
 55647  011274  6EDE               	movwf	postinc2,c
 55648  011276  0E0D               	movlw	13
 55649  011278  6EDD               	movwf	postdec2,c
 55650                           
 55651                           ; BSR set to: 1
 55652                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 55653  01127A  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 55654  01127E  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 55655  011282  BCDF               	btfsc	indf2,6,c
 55656  011284  D00D               	goto	i2l264
 55657                           
 55658                           ; BSR set to: 1
 55659                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 55660  011286  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55661  01128A  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55662  01128E  0E48               	movlw	72
 55663  011290  6EDF               	movwf	indf2,c
 55664                           
 55665                           ; BSR set to: 1
 55666                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 55667  011292  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55668  011296  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55669  01129A  0E00               	movlw	0
 55670  01129C  8EDB               	bsf	plusw2,7,c
 55671                           
 55672                           ;usb_device.c: 1891: }
 55673  01129E  0012               	return	
 55674  0112A0                     i2l264:
 55675                           
 55676                           ; BSR set to: 1
 55677                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 55678                           
 55679                           ; BSR set to: 1
 55680  0112A0  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55681  0112A4  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55682  0112A8  0E08               	movlw	8
 55683  0112AA  6EDF               	movwf	indf2,c
 55684                           
 55685                           ; BSR set to: 1
 55686                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 55687  0112AC  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55688  0112B0  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55689  0112B4  0E00               	movlw	0
 55690  0112B6  8EDB               	bsf	plusw2,7,c
 55691                           
 55692                           ; BSR set to: 1
 55693                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 55694  0112B8  0012               	return	
 55695  0112BA                     i2l263:
 55696                           
 55697                           ; BSR set to: 1
 55698                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 55699                           
 55700                           ; BSR set to: 1
 55701  0112BA  EE20 F001          	lfsr	2,1
 55702  0112BE  5059               	movf	_pBDTEntryEP0OutNext,w,c
 55703  0112C0  26D9               	addwf	fsr2l,f,c
 55704  0112C2  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 55705  0112C4  22DA               	addwfc	fsr2h,f,c
 55706  0112C6  0E08               	movlw	8
 55707  0112C8  6EDF               	movwf	indf2,c
 55708                           
 55709                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 55710  0112CA  EE20 F002          	lfsr	2,2
 55711  0112CE  5059               	movf	_pBDTEntryEP0OutNext,w,c
 55712  0112D0  26D9               	addwf	fsr2l,f,c
 55713  0112D2  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 55714  0112D4  22DA               	addwfc	fsr2h,f,c
 55715  0112D6  0E30               	movlw	48
 55716  0112D8  6EDE               	movwf	postinc2,c
 55717  0112DA  0E0D               	movlw	13
 55718  0112DC  6EDD               	movwf	postdec2,c
 55719                           
 55720                           ; BSR set to: 1
 55721                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 55722  0112DE  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55723  0112E2  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55724  0112E6  0E04               	movlw	4
 55725  0112E8  6EDF               	movwf	indf2,c
 55726                           
 55727                           ; BSR set to: 1
 55728                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 55729  0112EA  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55730  0112EE  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55731  0112F2  0E00               	movlw	0
 55732  0112F4  8EDB               	bsf	plusw2,7,c
 55733                           
 55734                           ; BSR set to: 1
 55735                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 55736                           
 55737                           ; BSR set to: 1
 55738                           ;usb_device.c: 1917: {;usb_device.c: 1923: outPipes[0].pFunc();
 55739  0112F6  9F03               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 55740                           
 55741                           ; BSR set to: 1
 55742                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 55743  0112F8  515C               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 55744  0112FA  A4D8               	btfss	status,2,c
 55745  0112FC  0012               	return	
 55746                           
 55747                           ; BSR set to: 1
 55748                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 55749  0112FE  EC42  F096         	call	_USBCtrlEPAllowStatusStage	;wreg free
 55750  011302  0012               	return	
 55751  011304                     __end_of_USBCtrlTrfRxService:
 55752                           	opt stack 0
 55753                           tosu	equ	0xFFF
 55754                           tosh	equ	0xFFE
 55755                           tosl	equ	0xFFD
 55756                           pclatu	equ	0xFFB
 55757                           pclath	equ	0xFFA
 55758                           tblptru	equ	0xFF8
 55759                           tblptrh	equ	0xFF7
 55760                           tblptrl	equ	0xFF6
 55761                           tablat	equ	0xFF5
 55762                           prodh	equ	0xFF4
 55763                           prodl	equ	0xFF3
 55764                           intcon	equ	0xFF2
 55765                           indf0	equ	0xFEF
 55766                           postinc0	equ	0xFEE
 55767                           fsr0h	equ	0xFEA
 55768                           fsr0l	equ	0xFE9
 55769                           wreg	equ	0xFE8
 55770                           indf1	equ	0xFE7
 55771                           postinc1	equ	0xFE6
 55772                           postdec1	equ	0xFE5
 55773                           plusw1	equ	0xFE3
 55774                           fsr1h	equ	0xFE2
 55775                           fsr1l	equ	0xFE1
 55776                           indf2	equ	0xFDF
 55777                           postinc2	equ	0xFDE
 55778                           postdec2	equ	0xFDD
 55779                           plusw2	equ	0xFDB
 55780                           fsr2h	equ	0xFDA
 55781                           fsr2l	equ	0xFD9
 55782                           status	equ	0xFD8
 55783                           
 55784 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 55785 ;; Defined at:
 55786 ;;		line 1418 in file "usb_device.c"
 55787 ;; Parameters:    Size  Location     Type
 55788 ;;		None
 55789 ;; Auto vars:     Size  Location     Type
 55790 ;;		None
 55791 ;; Return value:  Size  Location     Type
 55792 ;;                  1    wreg      void 
 55793 ;; Registers used:
 55794 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 55795 ;; Tracked objects:
 55796 ;;		On entry : 0/0
 55797 ;;		On exit  : 0/0
 55798 ;;		Unchanged: 0/0
 55799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55804 ;;Total ram usage:        0 bytes
 55805 ;; Hardware stack levels used:    1
 55806 ;; This function calls:
 55807 ;;		Nothing
 55808 ;; This function is called by:
 55809 ;;		_USBDeviceTasks
 55810 ;;		_USBCtrlEPServiceComplete
 55811 ;;		_USBCtrlTrfRxService
 55812 ;; This function uses a non-reentrant model
 55813 ;;
 55814                           
 55815                           	psect	text239
 55816  012C84                     __ptext239:
 55817                           	opt stack 0
 55818  012C84                     _USBCtrlEPAllowStatusStage:
 55819                           	opt stack 13
 55820                           
 55821                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 55822                           
 55823                           ;incstack = 0
 55824  012C84  0101               	movlb	1	; () banked
 55825  012C86  515B               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 55826  012C88  A4D8               	btfss	status,2,c
 55827  012C8A  0012               	return	
 55828                           
 55829                           ; BSR set to: 1
 55830                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 55831  012C8C  0E01               	movlw	1
 55832  012C8E  6F5B               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 55833                           
 55834                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 55835  012C90  515A               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 55836  012C92  A4D8               	btfss	status,2,c
 55837  012C94  0012               	return	
 55838                           
 55839                           ; BSR set to: 1
 55840                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 55841  012C96  0E01               	movlw	1
 55842  012C98  6F5A               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 55843                           
 55844                           ; BSR set to: 1
 55845                           ;usb_device.c: 1434: if(controlTransferState == 2)
 55846  012C9A  0E02               	movlw	2
 55847  012C9C  1962               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 55848  012C9E  A4D8               	btfss	status,2,c
 55849  012CA0  D015               	goto	i2l214
 55850                           
 55851                           ; BSR set to: 1
 55852                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 55853  012CA2  EE20 F001          	lfsr	2,1
 55854  012CA6  5109               	movf	_pBDTEntryIn& (0+255),w,b
 55855  012CA8  26D9               	addwf	fsr2l,f,c
 55856  012CAA  510A               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 55857  012CAC  22DA               	addwfc	fsr2h,f,c
 55858  012CAE  0E00               	movlw	0
 55859  012CB0  6EDF               	movwf	indf2,c
 55860                           
 55861                           ; BSR set to: 1
 55862                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 55863  012CB2  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 55864  012CB6  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 55865  012CBA  0E48               	movlw	72
 55866  012CBC  6EDF               	movwf	indf2,c
 55867                           
 55868                           ; BSR set to: 1
 55869                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 55870  012CBE  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 55871  012CC2  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 55872  012CC6  0E00               	movlw	0
 55873  012CC8  8EDB               	bsf	plusw2,7,c
 55874                           
 55875                           ;usb_device.c: 1439: }
 55876  012CCA  0012               	return	
 55877  012CCC                     i2l214:
 55878                           
 55879                           ; BSR set to: 1
 55880                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 55881                           
 55882                           ; BSR set to: 1
 55883  012CCC  0562               	decf	_controlTransferState& (0+255),w,b	;volatile
 55884  012CCE  A4D8               	btfss	status,2,c
 55885  012CD0  0012               	return	
 55886                           
 55887                           ; BSR set to: 1
 55888                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 55889  012CD2  0E00               	movlw	0
 55890  012CD4  6F5E               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 55891                           
 55892                           ; BSR set to: 1
 55893                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 55894  012CD6  EE20 F001          	lfsr	2,1
 55895  012CDA  505B               	movf	_pBDTEntryEP0OutCurrent,w,c
 55896  012CDC  26D9               	addwf	fsr2l,f,c
 55897  012CDE  505C               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 55898  012CE0  22DA               	addwfc	fsr2h,f,c
 55899  012CE2  0E08               	movlw	8
 55900  012CE4  6EDF               	movwf	indf2,c
 55901                           
 55902                           ; BSR set to: 1
 55903                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 55904  012CE6  EE20 F002          	lfsr	2,2
 55905  012CEA  505B               	movf	_pBDTEntryEP0OutCurrent,w,c
 55906  012CEC  26D9               	addwf	fsr2l,f,c
 55907  012CEE  505C               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 55908  012CF0  22DA               	addwfc	fsr2h,f,c
 55909  012CF2  0E30               	movlw	48
 55910  012CF4  6EDE               	movwf	postinc2,c
 55911  012CF6  0E0D               	movlw	13
 55912  012CF8  6EDD               	movwf	postdec2,c
 55913                           
 55914                           ; BSR set to: 1
 55915                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 55916  012CFA  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 55917  012CFE  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 55918  012D02  0E04               	movlw	4
 55919  012D04  6EDF               	movwf	indf2,c
 55920                           
 55921                           ; BSR set to: 1
 55922                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 55923  012D06  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 55924  012D0A  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 55925  012D0E  0E00               	movlw	0
 55926  012D10  8EDB               	bsf	plusw2,7,c
 55927                           
 55928                           ; BSR set to: 1
 55929                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 55930  012D12  0E01               	movlw	1
 55931  012D14  6F5E               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 55932                           
 55933                           ; BSR set to: 1
 55934                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 55935  012D16  EE20 F001          	lfsr	2,1
 55936  012D1A  5059               	movf	_pBDTEntryEP0OutNext,w,c
 55937  012D1C  26D9               	addwf	fsr2l,f,c
 55938  012D1E  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 55939  012D20  22DA               	addwfc	fsr2h,f,c
 55940  012D22  0E08               	movlw	8
 55941  012D24  6EDF               	movwf	indf2,c
 55942                           
 55943                           ; BSR set to: 1
 55944                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 55945  012D26  EE20 F002          	lfsr	2,2
 55946  012D2A  5059               	movf	_pBDTEntryEP0OutNext,w,c
 55947  012D2C  26D9               	addwf	fsr2l,f,c
 55948  012D2E  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 55949  012D30  22DA               	addwfc	fsr2h,f,c
 55950  012D32  0E30               	movlw	48
 55951  012D34  6EDE               	movwf	postinc2,c
 55952  012D36  0E0D               	movlw	13
 55953  012D38  6EDD               	movwf	postdec2,c
 55954                           
 55955                           ; BSR set to: 1
 55956                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 55957  012D3A  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55958  012D3E  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55959  012D42  0E80               	movlw	128
 55960  012D44  6EDF               	movwf	indf2,c
 55961                           
 55962                           ; BSR set to: 1
 55963                           
 55964                           ; BSR set to: 1
 55965                           
 55966                           ; BSR set to: 1
 55967  012D46  0012               	return	
 55968  012D48                     __end_of_USBCtrlEPAllowStatusStage:
 55969                           	opt stack 0
 55970                           tosu	equ	0xFFF
 55971                           tosh	equ	0xFFE
 55972                           tosl	equ	0xFFD
 55973                           pclatu	equ	0xFFB
 55974                           pclath	equ	0xFFA
 55975                           tblptru	equ	0xFF8
 55976                           tblptrh	equ	0xFF7
 55977                           tblptrl	equ	0xFF6
 55978                           tablat	equ	0xFF5
 55979                           prodh	equ	0xFF4
 55980                           prodl	equ	0xFF3
 55981                           intcon	equ	0xFF2
 55982                           indf0	equ	0xFEF
 55983                           postinc0	equ	0xFEE
 55984                           fsr0h	equ	0xFEA
 55985                           fsr0l	equ	0xFE9
 55986                           wreg	equ	0xFE8
 55987                           indf1	equ	0xFE7
 55988                           postinc1	equ	0xFE6
 55989                           postdec1	equ	0xFE5
 55990                           plusw1	equ	0xFE3
 55991                           fsr1h	equ	0xFE2
 55992                           fsr1l	equ	0xFE1
 55993                           indf2	equ	0xFDF
 55994                           postinc2	equ	0xFDE
 55995                           postdec2	equ	0xFDD
 55996                           plusw2	equ	0xFDB
 55997                           fsr2h	equ	0xFDA
 55998                           fsr2l	equ	0xFD9
 55999                           status	equ	0xFD8
 56000                           
 56001 ;; *************** function _USBCtrlTrfInHandler *****************
 56002 ;; Defined at:
 56003 ;;		line 2594 in file "usb_device.c"
 56004 ;; Parameters:    Size  Location     Type
 56005 ;;		None
 56006 ;; Auto vars:     Size  Location     Type
 56007 ;;  lastDTS         1    1[COMRAM] unsigned char 
 56008 ;; Return value:  Size  Location     Type
 56009 ;;                  1    wreg      void 
 56010 ;; Registers used:
 56011 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 56012 ;; Tracked objects:
 56013 ;;		On entry : 0/0
 56014 ;;		On exit  : 0/0
 56015 ;;		Unchanged: 0/0
 56016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 56017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56018 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56020 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56021 ;;Total ram usage:        1 bytes
 56022 ;; Hardware stack levels used:    1
 56023 ;; Hardware stack levels required when called:    1
 56024 ;; This function calls:
 56025 ;;		_USBCtrlTrfTxService
 56026 ;; This function is called by:
 56027 ;;		_USBCtrlEPService
 56028 ;; This function uses a non-reentrant model
 56029 ;;
 56030                           
 56031                           	psect	text240
 56032  012D48                     __ptext240:
 56033                           	opt stack 0
 56034  012D48                     _USBCtrlTrfInHandler:
 56035                           	opt stack 14
 56036                           
 56037                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 56038                           
 56039                           ; BSR set to: 1
 56040                           ;incstack = 0
 56041  012D48  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 56042  012D4C  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 56043  012D50  0101               	movlb	1	; () banked
 56044  012D52  0E00               	movlw	0
 56045  012D54  BCDF               	btfsc	indf2,6,c
 56046  012D56  0E01               	movlw	1
 56047  012D58  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 56048                           
 56049                           ; BSR set to: 1
 56050                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 56051  012D5A  0E04               	movlw	4
 56052  012D5C  1909               	xorwf	_pBDTEntryIn& (0+255),w,b
 56053  012D5E  6F09               	movwf	_pBDTEntryIn& (0+255),b
 56054  012D60  510A               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 56055  012D62  6F0A               	movwf	(_pBDTEntryIn+1)& (0+255),b
 56056                           
 56057                           ; BSR set to: 1
 56058                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 56059  012D64  0E08               	movlw	8
 56060  012D66  185D               	xorwf	_USBDeviceState,w,c	;volatile
 56061  012D68  A4D8               	btfss	status,2,c
 56062  012D6A  D00C               	goto	i2l341
 56063                           
 56064                           ; BSR set to: 1
 56065                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 56066  012D6C  010D               	movlb	13	; () banked
 56067  012D6E  5132               	movf	50,w,b	;volatile
 56068  012D70  0B7F               	andlw	127
 56069  012D72  010F               	movlb	15	; () banked
 56070  012D74  6F38               	movwf	56,b	;volatile
 56071                           
 56072                           ; BSR set to: 15
 56073                           ;usb_device.c: 2609: if(UADDR != 0u)
 56074  012D76  5138               	movf	56,w,b	;volatile
 56075  012D78  B4D8               	btfsc	status,2,c
 56076  012D7A  D002               	goto	i2l340
 56077                           
 56078                           ; BSR set to: 15
 56079                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 56080  012D7C  0E10               	movlw	16
 56081  012D7E  D001               	goto	L84
 56082  012D80                     i2l340:
 56083                           
 56084                           ; BSR set to: 15
 56085                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 56086                           
 56087                           ; BSR set to: 15
 56088  012D80  0E04               	movlw	4
 56089  012D82                     L84:
 56090  012D82  6E5D               	movwf	_USBDeviceState,c	;volatile
 56091  012D84                     i2l341:
 56092                           
 56093                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 56094                           
 56095                           ; BSR set to: 15
 56096                           
 56097                           ; BSR set to: 15
 56098  012D84  0101               	movlb	1	; () banked
 56099  012D86  0562               	decf	_controlTransferState& (0+255),w,b	;volatile
 56100  012D88  A4D8               	btfss	status,2,c
 56101  012D8A  D03B               	goto	i2l342
 56102                           
 56103                           ; BSR set to: 1
 56104                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 56105  012D8C  EE20 F002          	lfsr	2,2
 56106  012D90  5109               	movf	_pBDTEntryIn& (0+255),w,b
 56107  012D92  26D9               	addwf	fsr2l,f,c
 56108  012D94  510A               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 56109  012D96  22DA               	addwfc	fsr2h,f,c
 56110  012D98  0E38               	movlw	56
 56111  012D9A  6EDE               	movwf	postinc2,c
 56112  012D9C  0E0D               	movlw	13
 56113  012D9E  6EDD               	movwf	postdec2,c
 56114                           
 56115                           ; BSR set to: 1
 56116                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 56117  012DA0  ECA3  F094         	call	_USBCtrlTrfTxService	;wreg free
 56118                           
 56119                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 56120  012DA4  0E02               	movlw	2
 56121  012DA6  0101               	movlb	1	; () banked
 56122  012DA8  1963               	xorwf	_shortPacketStatus& (0+255),w,b	;volatile
 56123  012DAA  A4D8               	btfss	status,2,c
 56124  012DAC  D00D               	goto	i2l343
 56125                           
 56126                           ; BSR set to: 1
 56127                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 56128  012DAE  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 56129  012DB2  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 56130  012DB6  0E04               	movlw	4
 56131  012DB8  6EDF               	movwf	indf2,c
 56132                           
 56133                           ; BSR set to: 1
 56134                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 56135  012DBA  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 56136  012DBE  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 56137  012DC2  0E00               	movlw	0
 56138  012DC4  8EDB               	bsf	plusw2,7,c
 56139                           
 56140                           ;usb_device.c: 2635: }
 56141  012DC6  0012               	return	
 56142  012DC8                     i2l343:
 56143                           
 56144                           ; BSR set to: 1
 56145                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 56146                           
 56147                           ; BSR set to: 1
 56148  012DC8  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 56149  012DCA  A4D8               	btfss	status,2,c
 56150  012DCC  D00D               	goto	i2l345
 56151                           
 56152                           ; BSR set to: 1
 56153                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 56154  012DCE  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 56155  012DD2  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 56156  012DD6  0E48               	movlw	72
 56157  012DD8  6EDF               	movwf	indf2,c
 56158                           
 56159                           ; BSR set to: 1
 56160                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 56161  012DDA  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 56162  012DDE  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 56163  012DE2  0E00               	movlw	0
 56164  012DE4  8EDB               	bsf	plusw2,7,c
 56165                           
 56166                           ;usb_device.c: 2642: }
 56167  012DE6  0012               	return	
 56168  012DE8                     i2l345:
 56169                           
 56170                           ; BSR set to: 1
 56171                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 56172                           
 56173                           ; BSR set to: 1
 56174  012DE8  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 56175  012DEC  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 56176  012DF0  0E08               	movlw	8
 56177  012DF2  6EDF               	movwf	indf2,c
 56178                           
 56179                           ; BSR set to: 1
 56180                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 56181  012DF4  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 56182  012DF8  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 56183  012DFC  0E00               	movlw	0
 56184  012DFE  8EDB               	bsf	plusw2,7,c
 56185                           
 56186                           ; BSR set to: 1
 56187                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 56188                           
 56189                           ; BSR set to: 1
 56190  012E00  0012               	return	
 56191  012E02                     i2l342:
 56192                           
 56193                           ; BSR set to: 1
 56194                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 56195  012E02  BF03               	btfsc	(_outPipes+3)& (0+255),7,b	;volatile
 56196                           
 56197                           ; BSR set to: 1
 56198                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 56199                           
 56200                           ; BSR set to: 1
 56201                           ;usb_device.c: 2658: {;usb_device.c: 2659: outPipes[0].pFunc();
 56202  012E04  9F03               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 56203                           
 56204                           ; BSR set to: 1
 56205                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 56206                           
 56207                           ; BSR set to: 1
 56208  012E06  0E00               	movlw	0
 56209  012E08  6F62               	movwf	_controlTransferState& (0+255),b	;volatile
 56210  012E0A  0012               	return	
 56211  012E0C                     __end_of_USBCtrlTrfInHandler:
 56212                           	opt stack 0
 56213                           tosu	equ	0xFFF
 56214                           tosh	equ	0xFFE
 56215                           tosl	equ	0xFFD
 56216                           pclatu	equ	0xFFB
 56217                           pclath	equ	0xFFA
 56218                           tblptru	equ	0xFF8
 56219                           tblptrh	equ	0xFF7
 56220                           tblptrl	equ	0xFF6
 56221                           tablat	equ	0xFF5
 56222                           prodh	equ	0xFF4
 56223                           prodl	equ	0xFF3
 56224                           intcon	equ	0xFF2
 56225                           indf0	equ	0xFEF
 56226                           postinc0	equ	0xFEE
 56227                           fsr0h	equ	0xFEA
 56228                           fsr0l	equ	0xFE9
 56229                           wreg	equ	0xFE8
 56230                           indf1	equ	0xFE7
 56231                           postinc1	equ	0xFE6
 56232                           postdec1	equ	0xFE5
 56233                           plusw1	equ	0xFE3
 56234                           fsr1h	equ	0xFE2
 56235                           fsr1l	equ	0xFE1
 56236                           indf2	equ	0xFDF
 56237                           postinc2	equ	0xFDE
 56238                           postdec2	equ	0xFDD
 56239                           plusw2	equ	0xFDB
 56240                           fsr2h	equ	0xFDA
 56241                           fsr2l	equ	0xFD9
 56242                           status	equ	0xFD8
 56243                           
 56244 ;; *************** function _USBCtrlTrfTxService *****************
 56245 ;; Defined at:
 56246 ;;		line 1773 in file "usb_device.c"
 56247 ;; Parameters:    Size  Location     Type
 56248 ;;		None
 56249 ;; Auto vars:     Size  Location     Type
 56250 ;;  byteToSend      1    0[COMRAM] unsigned char 
 56251 ;; Return value:  Size  Location     Type
 56252 ;;                  1    wreg      void 
 56253 ;; Registers used:
 56254 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 56255 ;; Tracked objects:
 56256 ;;		On entry : 0/0
 56257 ;;		On exit  : 0/0
 56258 ;;		Unchanged: 0/0
 56259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 56260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56261 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56263 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56264 ;;Total ram usage:        1 bytes
 56265 ;; Hardware stack levels used:    1
 56266 ;; This function calls:
 56267 ;;		Nothing
 56268 ;; This function is called by:
 56269 ;;		_USBCtrlEPAllowDataStage
 56270 ;;		_USBCtrlTrfInHandler
 56271 ;; This function uses a non-reentrant model
 56272 ;;
 56273                           
 56274                           	psect	text241
 56275  012946                     __ptext241:
 56276                           	opt stack 0
 56277  012946                     _USBCtrlTrfTxService:
 56278                           	opt stack 12
 56279                           
 56280                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 56281                           
 56282                           ; BSR set to: 1
 56283                           ;incstack = 0
 56284  012946  0E08               	movlw	8
 56285  012948  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 56286                           
 56287                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 56288  01294A  5058               	movf	_inPipes+5,w,c	;volatile
 56289  01294C  E111               	bnz	i2l13006
 56290  01294E  0E08               	movlw	8
 56291  012950  5C57               	subwf	_inPipes+4,w,c	;volatile
 56292  012952  B0D8               	btfsc	status,0,c
 56293  012954  D00D               	goto	i2l247
 56294                           
 56295                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 56296  012956  C057  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 56297                           
 56298                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 56299  01295A  0101               	movlb	1	; () banked
 56300  01295C  5163               	movf	_shortPacketStatus& (0+255),w,b	;volatile
 56301  01295E  A4D8               	btfss	status,2,c
 56302  012960  D002               	goto	i2l245
 56303                           
 56304                           ; BSR set to: 1
 56305                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 56306  012962  0E01               	movlw	1
 56307  012964  D004               	goto	L85
 56308  012966                     i2l245:
 56309                           
 56310                           ; BSR set to: 1
 56311                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 56312                           
 56313                           ; BSR set to: 1
 56314  012966  0563               	decf	_shortPacketStatus& (0+255),w,b	;volatile
 56315  012968  A4D8               	btfss	status,2,c
 56316  01296A  D002               	goto	i2l247
 56317                           
 56318                           ; BSR set to: 1
 56319                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 56320  01296C  0E02               	movlw	2
 56321  01296E                     L85:
 56322  01296E  6F63               	movwf	_shortPacketStatus& (0+255),b	;volatile
 56323  012970                     i2l247:
 56324  012970                     i2l13006:
 56325                           
 56326                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 56327  012970  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 56328  012972  5E57               	subwf	_inPipes+4,f,c	;volatile
 56329  012974  0E00               	movlw	0
 56330  012976  5A58               	subwfb	_inPipes+5,f,c	;volatile
 56331                           
 56332                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 56333  012978  0101               	movlb	1	; () banked
 56334  01297A  EE20 F001          	lfsr	2,1
 56335  01297E  5109               	movf	_pBDTEntryIn& (0+255),w,b
 56336  012980  26D9               	addwf	fsr2l,f,c
 56337  012982  510A               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 56338  012984  22DA               	addwfc	fsr2h,f,c
 56339  012986  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 56340                           
 56341                           ; BSR set to: 1
 56342                           ;usb_device.c: 1810: pDst = (volatile uint8_t*)CtrlTrfData;
 56343  01298A  0E38               	movlw	56
 56344  01298C  6F43               	movwf	_pDst& (0+255),b
 56345  01298E  0E0D               	movlw	13
 56346  012990  6F44               	movwf	(_pDst+1)& (0+255),b
 56347                           
 56348                           ; BSR set to: 1
 56349                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 56350  012992  A056               	btfss	_inPipes+3,0,c	;volatile
 56351  012994  D01D               	goto	i2l249
 56352  012996  D03C               	goto	i2l253
 56353  012998                     
 56354                           ; BSR set to: 1
 56355                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 56356                           
 56357                           ; BSR set to: 1
 56358  012998  C053  FFF6         	movff	_inPipes,tblptrl	;volatile
 56359  01299C  C054  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 56360  0129A0  0E00               	movlw	low (__mediumconst shr (0+16))
 56361  0129A2  6EF8               	movwf	tblptru,c
 56362  0129A4  C143  FFD9         	movff	_pDst,fsr2l
 56363  0129A8  C144  FFDA         	movff	_pDst+1,fsr2h
 56364  0129AC  0E0E               	movlw	(high __ramtop+-1)
 56365  0129AE  64F7               	cpfsgt	tblptrh,c
 56366  0129B0  D003               	bra	i2u1108_47
 56367  0129B2  0008               	tblrd		*
 56368  0129B4  50F5               	movf	tablat,w,c
 56369  0129B6  D005               	bra	i2u1108_40
 56370  0129B8                     i2u1108_47:
 56371  0129B8  CFF6 FFE9          	movff	tblptrl,fsr0l
 56372  0129BC  CFF7 FFEA          	movff	tblptrh,fsr0h
 56373  0129C0  50EF               	movf	indf0,w,c
 56374  0129C2                     i2u1108_40:
 56375  0129C2  6EDF               	movwf	indf2,c
 56376  0129C4  4A53               	infsnz	_inPipes,f,c	;volatile
 56377  0129C6  2A54               	incf	_inPipes+1,f,c	;volatile
 56378  0129C8  0101               	movlb	1	; () banked
 56379  0129CA  4B43               	infsnz	_pDst& (0+255),f,b
 56380  0129CC  2B44               	incf	(_pDst+1)& (0+255),f,b
 56381                           
 56382                           ; BSR set to: 1
 56383                           ;usb_device.c: 1816: byteToSend--;
 56384  0129CE  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 56385  0129D0                     i2l249:
 56386                           
 56387                           ; BSR set to: 1
 56388                           
 56389                           ; BSR set to: 1
 56390  0129D0  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 56391  0129D2  B4D8               	btfsc	status,2,c
 56392  0129D4  0012               	return	
 56393  0129D6  D7E0               	goto	i2l250
 56394  0129D8                     
 56395                           ; BSR set to: 1
 56396                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 56397                           
 56398                           ; BSR set to: 1
 56399  0129D8  C053  FFF6         	movff	_inPipes,tblptrl	;volatile
 56400  0129DC  C054  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 56401  0129E0  0E00               	movlw	low (__mediumconst shr (0+16))
 56402  0129E2  6EF8               	movwf	tblptru,c
 56403  0129E4  C143  FFD9         	movff	_pDst,fsr2l
 56404  0129E8  C144  FFDA         	movff	_pDst+1,fsr2h
 56405  0129EC  0E0E               	movlw	(high __ramtop+-1)
 56406  0129EE  64F7               	cpfsgt	tblptrh,c
 56407  0129F0  D003               	bra	i2u1110_47
 56408  0129F2  0008               	tblrd		*
 56409  0129F4  50F5               	movf	tablat,w,c
 56410  0129F6  D005               	bra	i2u1110_40
 56411  0129F8                     i2u1110_47:
 56412  0129F8  CFF6 FFE9          	movff	tblptrl,fsr0l
 56413  0129FC  CFF7 FFEA          	movff	tblptrh,fsr0h
 56414  012A00  50EF               	movf	indf0,w,c
 56415  012A02                     i2u1110_40:
 56416  012A02  6EDF               	movwf	indf2,c
 56417  012A04  4A53               	infsnz	_inPipes,f,c	;volatile
 56418  012A06  2A54               	incf	_inPipes+1,f,c	;volatile
 56419  012A08  0101               	movlb	1	; () banked
 56420  012A0A  4B43               	infsnz	_pDst& (0+255),f,b
 56421  012A0C  2B44               	incf	(_pDst+1)& (0+255),f,b
 56422                           
 56423                           ; BSR set to: 1
 56424                           ;usb_device.c: 1824: byteToSend--;
 56425  012A0E  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 56426  012A10                     i2l253:
 56427                           
 56428                           ; BSR set to: 1
 56429                           
 56430                           ; BSR set to: 1
 56431  012A10  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 56432  012A12  B4D8               	btfsc	status,2,c
 56433  012A14  0012               	return	
 56434  012A16  D7E0               	goto	i2l254
 56435  012A18                     __end_of_USBCtrlTrfTxService:
 56436                           	opt stack 0
 56437                           tosu	equ	0xFFF
 56438                           tosh	equ	0xFFE
 56439                           tosl	equ	0xFFD
 56440                           pclatu	equ	0xFFB
 56441                           pclath	equ	0xFFA
 56442                           tblptru	equ	0xFF8
 56443                           tblptrh	equ	0xFF7
 56444                           tblptrl	equ	0xFF6
 56445                           tablat	equ	0xFF5
 56446                           prodh	equ	0xFF4
 56447                           prodl	equ	0xFF3
 56448                           intcon	equ	0xFF2
 56449                           indf0	equ	0xFEF
 56450                           postinc0	equ	0xFEE
 56451                           fsr0h	equ	0xFEA
 56452                           fsr0l	equ	0xFE9
 56453                           wreg	equ	0xFE8
 56454                           indf1	equ	0xFE7
 56455                           postinc1	equ	0xFE6
 56456                           postdec1	equ	0xFE5
 56457                           plusw1	equ	0xFE3
 56458                           fsr1h	equ	0xFE2
 56459                           fsr1l	equ	0xFE1
 56460                           indf2	equ	0xFDF
 56461                           postinc2	equ	0xFDE
 56462                           postdec2	equ	0xFDD
 56463                           plusw2	equ	0xFDB
 56464                           fsr2h	equ	0xFDA
 56465                           fsr2l	equ	0xFD9
 56466                           status	equ	0xFD8
 56467                           tosu	equ	0xFFF
 56468                           tosh	equ	0xFFE
 56469                           tosl	equ	0xFFD
 56470                           pclatu	equ	0xFFB
 56471                           pclath	equ	0xFFA
 56472                           tblptru	equ	0xFF8
 56473                           tblptrh	equ	0xFF7
 56474                           tblptrl	equ	0xFF6
 56475                           tablat	equ	0xFF5
 56476                           prodh	equ	0xFF4
 56477                           prodl	equ	0xFF3
 56478                           intcon	equ	0xFF2
 56479                           indf0	equ	0xFEF
 56480                           postinc0	equ	0xFEE
 56481                           fsr0h	equ	0xFEA
 56482                           fsr0l	equ	0xFE9
 56483                           wreg	equ	0xFE8
 56484                           indf1	equ	0xFE7
 56485                           postinc1	equ	0xFE6
 56486                           postdec1	equ	0xFE5
 56487                           plusw1	equ	0xFE3
 56488                           fsr1h	equ	0xFE2
 56489                           fsr1l	equ	0xFE1
 56490                           indf2	equ	0xFDF
 56491                           postinc2	equ	0xFDE
 56492                           postdec2	equ	0xFDD
 56493                           plusw2	equ	0xFDB
 56494                           fsr2h	equ	0xFDA
 56495                           fsr2l	equ	0xFD9
 56496                           status	equ	0xFD8
 56497                           
 56498                           	psect	text242
 56499  000000                     __ptext242:
 56500                           	opt stack 0
 56501                           tosu	equ	0xFFF
 56502                           tosh	equ	0xFFE
 56503                           tosl	equ	0xFFD
 56504                           pclatu	equ	0xFFB
 56505                           pclath	equ	0xFFA
 56506                           tblptru	equ	0xFF8
 56507                           tblptrh	equ	0xFF7
 56508                           tblptrl	equ	0xFF6
 56509                           tablat	equ	0xFF5
 56510                           prodh	equ	0xFF4
 56511                           prodl	equ	0xFF3
 56512                           intcon	equ	0xFF2
 56513                           indf0	equ	0xFEF
 56514                           postinc0	equ	0xFEE
 56515                           fsr0h	equ	0xFEA
 56516                           fsr0l	equ	0xFE9
 56517                           wreg	equ	0xFE8
 56518                           indf1	equ	0xFE7
 56519                           postinc1	equ	0xFE6
 56520                           postdec1	equ	0xFE5
 56521                           plusw1	equ	0xFE3
 56522                           fsr1h	equ	0xFE2
 56523                           fsr1l	equ	0xFE1
 56524                           indf2	equ	0xFDF
 56525                           postinc2	equ	0xFDE
 56526                           postdec2	equ	0xFDD
 56527                           plusw2	equ	0xFDB
 56528                           fsr2h	equ	0xFDA
 56529                           fsr2l	equ	0xFD9
 56530                           status	equ	0xFD8
 56531                           
 56532                           	psect	rparam
 56533  0000                     tosu	equ	0xFFF
 56534                           tosh	equ	0xFFE
 56535                           tosl	equ	0xFFD
 56536                           pclatu	equ	0xFFB
 56537                           pclath	equ	0xFFA
 56538                           tblptru	equ	0xFF8
 56539                           tblptrh	equ	0xFF7
 56540                           tblptrl	equ	0xFF6
 56541                           tablat	equ	0xFF5
 56542                           prodh	equ	0xFF4
 56543                           prodl	equ	0xFF3
 56544                           intcon	equ	0xFF2
 56545                           indf0	equ	0xFEF
 56546                           postinc0	equ	0xFEE
 56547                           fsr0h	equ	0xFEA
 56548                           fsr0l	equ	0xFE9
 56549                           wreg	equ	0xFE8
 56550                           indf1	equ	0xFE7
 56551                           postinc1	equ	0xFE6
 56552                           postdec1	equ	0xFE5
 56553                           plusw1	equ	0xFE3
 56554                           fsr1h	equ	0xFE2
 56555                           fsr1l	equ	0xFE1
 56556                           indf2	equ	0xFDF
 56557                           postinc2	equ	0xFDE
 56558                           postdec2	equ	0xFDD
 56559                           plusw2	equ	0xFDB
 56560                           fsr2h	equ	0xFDA
 56561                           fsr2l	equ	0xFD9
 56562                           status	equ	0xFD8
 56563                           
 56564                           	psect	temp
 56565  00005F                     btemp:
 56566                           	opt stack 0
 56567  00005F                     	ds	1
 56568  0000                     int$flags	set	btemp
 56569  0000                     wtemp8	set	btemp+1
 56570  0000                     ttemp5	set	btemp+1
 56571  0000                     ttemp6	set	btemp+4
 56572  0000                     ttemp7	set	btemp+8
 56573                           tosu	equ	0xFFF
 56574                           tosh	equ	0xFFE
 56575                           tosl	equ	0xFFD
 56576                           pclatu	equ	0xFFB
 56577                           pclath	equ	0xFFA
 56578                           tblptru	equ	0xFF8
 56579                           tblptrh	equ	0xFF7
 56580                           tblptrl	equ	0xFF6
 56581                           tablat	equ	0xFF5
 56582                           prodh	equ	0xFF4
 56583                           prodl	equ	0xFF3
 56584                           intcon	equ	0xFF2
 56585                           indf0	equ	0xFEF
 56586                           postinc0	equ	0xFEE
 56587                           fsr0h	equ	0xFEA
 56588                           fsr0l	equ	0xFE9
 56589                           wreg	equ	0xFE8
 56590                           indf1	equ	0xFE7
 56591                           postinc1	equ	0xFE6
 56592                           postdec1	equ	0xFE5
 56593                           plusw1	equ	0xFE3
 56594                           fsr1h	equ	0xFE2
 56595                           fsr1l	equ	0xFE1
 56596                           indf2	equ	0xFDF
 56597                           postinc2	equ	0xFDE
 56598                           postdec2	equ	0xFDD
 56599                           plusw2	equ	0xFDB
 56600                           fsr2h	equ	0xFDA
 56601                           fsr2l	equ	0xFD9
 56602                           status	equ	0xFD8


Data Sizes:
    Strings     69
    Constant    4715
    Data        157
    BSS         1578
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     82      94
    BANK0           160    158     160
    BANK1           256     60     255
    BANK2           256      0     230
    BANK3           256      0     192
    BANK4           256      0      80
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 8
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), configFile_extention(BANK2[3]), configFile_name(BANK2[8]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    stricmp@s2	PTR const unsigned char  size(2) Largest target is 24
		 -> position_display_180_string(CODE[21]), ccw_limit_string(CODE[10]), use_ccw_limit_string(CODE[14]), cw_limit_string(CODE[9]), 
		 -> use_cw_limit_string(CODE[13]), beep_duration_string(CODE[14]), maximum_speed_manual_string(CODE[21]), initial_speed_manual_string(CODE[21]), 
		 -> maximum_speed_arc_string(CODE[18]), initial_speed_arc_string(CODE[18]), maximum_speed_string(CODE[14]), minimum_speed_string(CODE[14]), 
		 -> overshoot_cost_in_steps_string(CODE[24]), inverse_direction_string(CODE[18]), overshoot_in_steps_string(CODE[19]), full_circle_in_steps_string(CODE[21]), 

    stricmp@s1	PTR const unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), i2c_eeprom_save_position@buffer(COMRAM[7]), 
		 -> os.absolute_position(BANK1[2]), os.current_position_in_steps(BANK1[4]), ToSendDataBuffer(BANK3[64]), os(BANK1[49]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), i2c_eeprom_save_position@buffer(COMRAM[7]), 
		 -> os.absolute_position(BANK1[2]), os.current_position_in_steps(BANK1[4]), ToSendDataBuffer(BANK3[64]), os(BANK1[49]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3759
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> STR_6(CODE[6]), STR_5(CODE[9]), STR_4(CODE[7]), STR_3(CODE[9]), 
		 -> dc_manual(CODE[80]), dc_zero(CODE[80]), STR_2(CODE[7]), STR_1(CODE[9]), 
		 -> dc_arc2(CODE[80]), dc_arc1(CODE[80]), dc_divide2(CODE[80]), dc_divide1(CODE[80]), 
		 -> dc_setup2(CODE[80]), dc_setup1(CODE[80]), dc_main(CODE[80]), dc_startup(BANK4[80]), 
		 -> i2c_eeprom_recover_position@buffer(BANK0[7]), config(BANK1[41]), os.current_position_in_degrees(BANK1[2]), os.current_position_in_steps(BANK1[4]), 
		 -> ReceivedDataBuffer(BANK3[64]), os(BANK1[49]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3759
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> STR_6(CODE[6]), STR_5(CODE[9]), STR_4(CODE[7]), STR_3(CODE[9]), 
		 -> dc_manual(CODE[80]), dc_zero(CODE[80]), STR_2(CODE[7]), STR_1(CODE[9]), 
		 -> dc_arc2(CODE[80]), dc_arc1(CODE[80]), dc_divide2(CODE[80]), dc_divide1(CODE[80]), 
		 -> dc_setup2(CODE[80]), dc_setup1(CODE[80]), dc_main(CODE[80]), dc_startup(BANK4[80]), 
		 -> i2c_eeprom_recover_position@buffer(BANK0[7]), config(BANK1[41]), os.current_position_in_degrees(BANK1[2]), os.current_position_in_steps(BANK1[4]), 
		 -> ReceivedDataBuffer(BANK3[64]), os(BANK1[49]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    ultoa@buf	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    ltoa@buf	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    ltoa@cp	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _parse_item@value_string	PTR unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _parse_item@item_string	PTR unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    _get_item@value_string	PTR unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _get_item@item_string	PTR unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    _get_item@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    _add_item@item_string	PTR unsigned char  size(2) Largest target is 24
		 -> position_display_180_string(CODE[21]), ccw_limit_string(CODE[10]), use_ccw_limit_string(CODE[14]), cw_limit_string(CODE[9]), 
		 -> use_cw_limit_string(CODE[13]), beep_duration_string(CODE[14]), maximum_speed_manual_string(CODE[21]), initial_speed_manual_string(CODE[21]), 
		 -> maximum_speed_arc_string(CODE[18]), initial_speed_arc_string(CODE[18]), maximum_speed_string(CODE[14]), minimum_speed_string(CODE[14]), 
		 -> overshoot_cost_in_steps_string(CODE[24]), inverse_direction_string(CODE[18]), overshoot_in_steps_string(CODE[19]), full_circle_in_steps_string(CODE[21]), 

    _add_item@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    _parse_set_manual_speed@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_set_manual_speed@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_set_manual_speed@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _parse_jump_steps_with_overshoot@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_jump_steps_with_overshoot@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_jump_steps_with_overshoot@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _parse_jump_steps@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_jump_steps@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_jump_steps@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _parse_command_long@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_command_long@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _fill_buffer_get_mode_details@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_parse@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    api_parse@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), buffer(BIGRAMll[512]), _flash_get_status@status(BANK0[2]), msd_buffer(BIGRAMll[512]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_buffer_read@command(COMRAM[4]), _flash_partial_read@command(BANK0[4]), _flash_get_status@command(BANK0[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(BANK0[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(BANK0[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(BANK0[4]), 
		 -> _flash_copy_page_to_buffer@command(BANK0[4]), _flash_wakeup@command(BANK0[1]), _flash_set_page_size@command(BANK0[4]), 

    fat_get_file_information@data	PTR struct . size(2) Largest target is 32
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 

    fat_modify_file@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_read_from_file_fast@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_read_from_file_fast@cluster	PTR unsigned int  size(2) Largest target is 2
		 -> fat_read_from_file@cluster(BANK0[2]), 

    fat_read_from_file_fast@cluster_number	PTR unsigned int  size(2) Largest target is 2
		 -> fat_read_from_file@cluster_number(BANK0[2]), 

    fat_read_from_file@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 3
		 -> configFile_used_extention(BANK2[3]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 8
		 -> configFile_used_name(BANK2[8]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 3
		 -> configFile_used_extention(BANK2[3]), configFile_extention(BANK2[3]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 8
		 -> configFile_used_name(BANK2[8]), configFile_name(BANK2[8]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 

    _write_value_to_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _read_value_from_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _get_available_offset_from_buffer@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), 

    flash_sector_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_sector_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    _display_itoa_long@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_itoa@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_prepare@temp(BANK0[10]), display_content(BANK2[80]), 

    _display_signed_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_padded_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    i2c_display_program_custom_character@bit_pattern	PTR unsigned char  size(2) Largest target is 8
		 -> bit_pattern_ae(CODE[8]), bit_pattern_degree(CODE[8]), bit_pattern_verticalbar(CODE[8]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    i2c_eeprom_read@data	PTR unsigned char  size(2) Largest target is 7
		 -> i2c_eeprom_recover_position@buffer(BANK0[7]), i2c_eeprom_readInt16@data(COMRAM[2]), i2c_eeprom_readUint32@data(COMRAM[4]), i2c_eeprom_readUint16@data(COMRAM[2]), 

    i2c_eeprom_write@data	PTR unsigned char  size(2) Largest target is 7
		 -> i2c_eeprom_save_position@buffer(COMRAM[7]), i2c_eeprom_writeInt16@data(COMRAM[2]), i2c_eeprom_writeUint32@data(COMRAM[4]), i2c_eeprom_writeUint16@data(COMRAM[2]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 7
		 -> i2c_eeprom_recover_position@buffer(BANK0[7]), i2c_eeprom_readInt16@data(COMRAM[2]), i2c_eeprom_readUint32@data(COMRAM[4]), i2c_eeprom_readUint16@data(COMRAM[2]), 
		 -> i2c_eeprom_readByte@addr(COMRAM[1]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_display_program_custom_character@data_array(BANK0[11]), _ic2_display_set_cgram_address@data_array(BANK0[3]), _ic2_display_set_ddram_address@data_array(BANK0[2]), i2c_display_init@init_sequence(BANK0[9]), 
		 -> _i2c_display_send_init_sequence@init_sequence(COMRAM[9]), i2c_eeprom_read@addr(BANK0[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), 
		 -> i2c_eeprom_writeByte@dat(COMRAM[2]), i2c_adc_start@configuration_byte(COMRAM[1]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(BANK1[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2623	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(BANK1[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2589	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2588	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2535	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2534	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S2167$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    S2167$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S2167$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S2167$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S2167$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> i2_ExternalFlash_MediaDetect(), ExternalFlash_MediaDetect(), 

    S2167$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S2167$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S2167$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> i2_ExternalFlash_MediaInitialize(), ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), i2c_eeprom_save_position@buffer(COMRAM[7]), 
		 -> os.absolute_position(BANK1[2]), os.current_position_in_steps(BANK1[4]), ToSendDataBuffer(BANK3[64]), os(BANK1[49]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(3) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_motor_isr
    _motor_isr->_i2c_eeprom_save_position
    _i2c_eeprom_save_position->_i2c_eeprom_write
    _i2c_eeprom_write->i2__i2c_write
    i2__i2c_write->i2__i2c_wait_idle
    i2__i2c_eeprom_busy->i2__i2c_wait_idle
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->i2_USBTransferOnePacket
    _MSDTransferTerminated->i2_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->i2_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _motor_calculate_position_in_degrees->___fldiv
    _motor_calculate_position_in_degrees->___flmul
    _i2c_eeprom_recover_position->_i2c_eeprom_read
    _i2c_eeprom_read->__i2c_read
    __i2c_read->__i2c_wait_idle
    __i2c_eeprom_busy->__i2c_wait_idle
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_restore_mbr_fbr->_flash_sector_write
    _fat_get_format_status->_flash_sector_read
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_ddram_address
    __ic2_display_set_ddram_address->__i2c_write
    _display_init->_i2c_display_program_custom_character
    _i2c_display_program_custom_character->__ic2_display_set_cgram_address
    __ic2_display_set_cgram_address->__i2c_write
    _i2c_display_init->__i2c_write
    __i2c_write->__i2c_wait_idle
    __display_start->__display_itoa_u16
    __display_itoa_u16->_itoa
    _configFile_write->_fat_modify_file
    _fat_resize_file->__make_cluster_chain
    _fat_modify_file->__find_nth_cluster
    _fat_create_file->__make_cluster_chain
    __write_root->_flash_partial_write
    _flash_partial_write->__flash_compare_page_to_buffer
    __flash_copy_page_to_buffer->__flash_is_busy
    __make_cluster_chain->__get_available_cluster
    __get_available_cluster->_flash_sector_read
    __get_available_root_entry->__root_is_available
    __add_item->_ltoa
    _ltoa->_ultoa
    _ultoa->___lldiv
    _configFile_read->_fat_read_from_file
    _fat_read_from_file->_fat_read_from_file_fast
    _fat_read_from_file_fast->__find_nth_cluster
    __find_nth_cluster->__read_fat
    __read_fat->_flash_partial_read
    _fat_get_file_information->_flash_partial_read
    _fat_get_file_size->__root_is_available
    __root_is_available->_flash_partial_read
    _flash_partial_read->__flash_partial_read
    _fat_find_file->_flash_sector_read
    __parse_item->__steps_from_degrees
    _stricmp->_toupper
    _atol->___lmul
    _atoi->___wmul
    __steps_from_degrees->___fldiv
    __steps_from_degrees->___flmul
    ___flge->___xxtofl
    _motor_process_cue->__motor_run
    _encoder_statemachine->_motor_divide_jump_to_nearest
    _motor_move_degrees_int->__motor_steps_from_degrees_int
    __motor_steps_from_degrees_int->___fldiv
    __motor_steps_from_degrees_int->___flmul
    _motor_increase_manual_speed->_motor_set_manual_speed
    _motor_divide_jump_to_nearest->_motor_goto_steps
    _motor_divide_jump->_motor_goto_steps
    __step_position_from_divide_position->___fldiv
    __step_position_from_divide_position->___flmul
    _motor_decrease_manual_speed->_motor_set_manual_speed
    _motor_arc_move->_motor_move_steps
    _display_prepare->__display_itoa_long
    _motor_speed_from_index->__motor_get_speed_in_degrees
    __motor_get_speed_in_degrees->___fldiv
    ___fldiv->___xxtofl
    __display_signed_itoa->__display_padded_itoa
    __display_padded_itoa->_itoa
    __display_itoa_long->__display_itoa
    __display_itoa->_motor_speed_from_index
    _itoa->_utoa
    _utoa->___lwdiv
    _adc_read_temperature->___flmul
    ___xxtofl->___fltol
    ___flneg->___xxtofl
    ___flmul->___xxtofl
    ___fladd->___flneg
    _USBDeviceInit->_memset
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_sector_write
    _flash_sector_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->__flash_is_busy
    __flash_write_page_from_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_sector_read
    _flash_sector_read->__flash_partial_read
    __flash_partial_read->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx
    _APP_DeviceCustomHIDTasks->_api_parse
    _api_prepare->__fill_buffer_get_display
    __fill_buffer_get_status->_memcpy
    __fill_buffer_get_display->_display_get_character
    _api_parse->__parse_command_long
    __parse_command_short->_motor_goto_steps
    _motor_set_zero->__motor_move_back_forth
    __motor_move_back_forth->__motor_schedule_command
    _motor_move_endless->__motor_move_steps
    _motor_goto_steps->__motor_decide_direction
    __motor_decide_direction->__motor_distance_to_limit
    __parse_command_long->__parse_jump_steps
    __parse_command_long->__parse_jump_steps_with_overshoot
    __parse_set_manual_speed->_motor_set_manual_speed
    _motor_set_manual_speed->_motor_change_speed
    __parse_jump_steps_with_overshoot->_motor_move_steps
    __parse_jump_steps->_motor_move_steps
    _motor_move_steps->__motor_move_steps
    __motor_move_steps->__motor_distance_to_limit
    __motor_distance_to_limit->___lmul

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _system_init->_configFile_read

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _SYS_InterruptHigh in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _SYS_InterruptHigh in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SYS_InterruptHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  770071
                                            157 BANK0      1     1      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
               _adc_read_temperature
                    _display_prepare
                     _display_update
               _encoder_statemachine
_motor_calculate_position_in_degrees
                  _motor_process_cue
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0  402531
                    __backlight_init
                  __system_pin_setup
                __system_timer0_init
                           _adc_init
                    _configFile_read
             _configFile_readDefault
                   _configFile_write
                       _display_init
                     _display_update
                       _encoder_init
                           _fat_init
                         _flash_init
        _i2c_eeprom_recover_position
                           _i2c_init
_motor_calculate_position_in_degrees
                         _motor_init
 ---------------------------------------------------------------------------------
 (2) _motor_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _motor_calculate_position_in_degrees                  4     4      0    9741
                                             49 BANK0      4     4      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_recover_position                          7     7      0   11661
                                             25 BANK0      7     7      0
                    _i2c_eeprom_read
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _i2c_eeprom_read                                      8     3      5    3647
                                             17 BANK0      8     3      5
                   __i2c_eeprom_busy
                          __i2c_read
                         __i2c_write
 ---------------------------------------------------------------------------------
 (4) __i2c_read                                           12     9      3     534
                                              5 BANK0     12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (5) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_eeprom_busy                                     1     1      0      23
                                              5 BANK0      1     1      0
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0   12280
               __flash_set_page_size
                           _spi_init
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     222
                                              3 BANK0      1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     178
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0   12058
                                             19 BANK0      5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   24913
              _fat_get_format_status
                _fat_restore_mbr_fbr
 ---------------------------------------------------------------------------------
 (3) _fat_restore_mbr_fbr                                  2     2      0   17966
                                             36 BANK0      2     2      0
                           __get_fbr
                           __get_mbr
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    6947
                                             43 BANK0      4     4      0
                           __get_fbr
                           __get_mbr
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     289
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     289
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _encoder_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_update                                       1     1      0    2472
                                             16 BANK0      1     1      0
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (3) _i2c_display_write_fixed                              4     1      3     290
                                              5 BANK0      4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_display_cursor                                   3     2      1    2092
                                             13 BANK0      3     2      1
     __ic2_display_set_ddram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_ddram_address                       3     3      0    1933
                                             10 BANK0      3     3      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (2) _display_init                                         0     0      0   17356
                     __display_start
                   _i2c_display_init
_i2c_display_program_custom_characte
 ---------------------------------------------------------------------------------
 (3) _i2c_display_program_custom_character                19    17      2    4270
                                             14 BANK0     19    17      2
                         __i2c_write
     __ic2_display_set_cgram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_cgram_address                       4     4      0    1958
                                             10 BANK0      4     4      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_display_init                                    10    10      0    1887
                                             10 BANK0     10    10      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (4) __i2c_write                                           5     2      3    1862
                                              5 BANK0      5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (5) __i2c_wait_idle                                       5     5      0       0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (5) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_send                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) __display_start                                       1     1      0   11199
                                             28 BANK0      1     1      0
                  __display_itoa_u16
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) __display_itoa_u16                                    4     0      4    3164
                                             24 BANK0      4     0      4
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _configFile_write                                     6     6      0  232732
                                            131 BANK0      6     6      0
                          __add_item
                    _fat_create_file
                      _fat_find_file
                    _fat_modify_file
                    _fat_resize_file
 ---------------------------------------------------------------------------------
 (3) _fat_resize_file                                     47    43      4   75708
                                             76 BANK0     47    43      4
                __make_cluster_chain
                 __root_is_available
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (3) _fat_modify_file                                     66    58      8   58065
                                             65 BANK0     66    58      8
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
           _fat_get_file_information
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) _fat_create_file                                     49    41      8   84268
                                             76 BANK0     49    41      8
          __get_available_root_entry
                          __get_date
                          __get_time
                __make_cluster_chain
                        __write_root
                      _fat_find_file
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) __write_root                                          7     5      2   24113
                                             40 BANK0      7     5      2
           __offset_from_file_number
           __sector_from_file_number
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (5) _flash_partial_write                                  9     1      8   23640
                                             31 BANK0      9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
                     __flash_is_busy
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (6) __flash_copy_page_to_buffer                          10     7      3    4565
                                             19 BANK0     10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) __make_cluster_chain                                 23    19      4   35886
                                             53 BANK0     23    19      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
             __get_available_cluster
  __get_available_offset_from_buffer
            __read_value_from_offset
             __write_value_to_offset
                  _flash_sector_read
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (5) __write_value_to_offset                               8     2      6     934
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) __get_available_cluster                              10     6      4    7752
                                             43 BANK0     10     6      4
    __cluster_from_sector_and_offset
  __get_available_offset_from_buffer
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) __get_available_offset_from_buffer                    8     4      4     712
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (6) __cluster_from_sector_and_offset                      4     0      4     226
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) __get_time                                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __get_date                                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __get_available_root_entry                            1     1      0    7485
                                             53 BANK0      1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (3) __add_item                                           11     3      8    6527
                                             36 BANK0     11     3      8
                               _ltoa
 ---------------------------------------------------------------------------------
 (4) _ltoa                                                10     2      8    1853
                                             26 BANK0     10     2      8
                              _ultoa
 ---------------------------------------------------------------------------------
 (5) _ultoa                                               13     5      8    1423
                                             13 BANK0     13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     337
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     518
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) _configFile_readDefault                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configFile_read                                     60    60      0   91376
                                              0 BANK1     60    60      0
                          __get_item
                        __parse_item
                      _fat_find_file
                  _fat_get_file_size
                 _fat_read_from_file
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file                                  52    42     10   42312
                                            105 BANK0     52    42     10
           _fat_get_file_information
            _fat_read_from_file_fast
 ---------------------------------------------------------------------------------
 (4) _fat_read_from_file_fast                             40    26     14   33651
                                             65 BANK0     40    26     14
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __find_nth_cluster                                   10     6      4   16816
                                             55 BANK0     10     6      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                          __read_fat
            __read_value_from_offset
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) __read_value_from_offset                              9     5      4     825
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (4) __read_fat                                            8     6      2    8284
                                             47 BANK0      8     6      2
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __fat_sector_from_cluster                             2     0      2     469
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) __fat_offset_from_cluster                             2     0      2     291
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __data_sector_from_cluster                            2     0      2     289
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _fat_get_file_information                             8     6      2    7751
                                             47 BANK0      8     6      2
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_size                                   13     9      4   14768
                                             53 BANK0     13     9      4
           __offset_from_file_number
                 __root_is_available
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __root_is_available                                   6     6      0    7395
                                             47 BANK0      6     6      0
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) _flash_partial_read                                   8     0      8    7123
                                             39 BANK0      8     0      8
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __sector_from_file_number                             5     3      2      47
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (5) __offset_from_file_number                             5     3      2      47
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _fat_find_file                                       11     7      4    7661
                                             43 BANK0     11     7      4
                  _flash_sector_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     668
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) __parse_item                                          4     0      4   25127
                                             57 BANK0      4     0      4
                __steps_from_degrees
                               _atoi
                               _atol
                            _stricmp
 ---------------------------------------------------------------------------------
 (4) _stricmp                                              6     2      4    3184
                                              1 BANK0      6     2      4
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              1     1      0      67
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4    1878
                                             12 BANK0     14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2    8416
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    7141
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) __steps_from_degrees                                  8     4      4   10723
                                             49 BANK0      8     4      4
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     716
                                             24 BANK0     12     4      8
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __get_item                                           11     5      6    1132
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_pin_setup                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __backlight_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor_process_cue                                    0     0      0     377
                         __motor_run
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (2) __motor_run                                          12     5      7     377
                                              0 BANK0     12     5      7
 ---------------------------------------------------------------------------------
 (1) _encoder_statemachine                                 4     4      0  118356
                                             72 BANK0      4     4      0
        __divide_jump_size_decrement
        __divide_jump_size_increment
        __encoder_next_arc_step_size
     __encoder_next_divide_step_size
       __encoder_next_setup_stepsize
                     _motor_arc_move
                 _motor_change_speed
        _motor_decrease_manual_speed
                  _motor_divide_jump
       _motor_divide_jump_to_nearest
                   _motor_goto_steps
        _motor_increase_manual_speed
             _motor_move_degrees_int
                 _motor_move_endless
                     _motor_set_zero
                         _motor_stop
 ---------------------------------------------------------------------------------
 (2) _motor_move_degrees_int                              10     5      5   20726
                                             57 BANK0     10     5      5
                  __motor_move_steps
      __motor_steps_from_degrees_int
 ---------------------------------------------------------------------------------
 (3) __motor_steps_from_degrees_int                        8     4      4   12986
                                             49 BANK0      8     4      4
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _motor_increase_manual_speed                          0     0      0     644
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (2) _motor_divide_jump_to_nearest                        10    10      0   34265
                                             62 BANK0     10    10      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
__step_position_from_divide_position
                   _motor_goto_steps
 ---------------------------------------------------------------------------------
 (2) _motor_divide_jump                                    7     7      0   21548
                                             62 BANK0      7     7      0
__step_position_from_divide_position
                   _motor_goto_steps
 ---------------------------------------------------------------------------------
 (3) __step_position_from_divide_position                  8     4      4    9941
                                             49 BANK0      8     4      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _motor_decrease_manual_speed                          0     0      0     644
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (2) _motor_arc_move                                       5     5      0   18281
                                             52 BANK0      5     5      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                   _motor_move_steps
 ---------------------------------------------------------------------------------
 (2) __encoder_next_setup_stepsize                         4     2      2     111
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) __encoder_next_divide_step_size                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __encoder_next_arc_step_size                          4     2      2     111
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) __divide_jump_size_increment                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __divide_jump_size_decrement                          3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _display_prepare                                     14    14      0   46252
                                            102 BANK0     14    14      0
                     __display_clear
                      __display_itoa
                 __display_itoa_long
               __display_padded_itoa
       __display_position_in_degrees
               __display_signed_itoa
                             _memcpy
             _motor_speed_from_index
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _motor_speed_from_index                               2     0      2    8013
                                             61 BANK0      2     0      2
        __motor_get_speed_in_degrees
 ---------------------------------------------------------------------------------
 (3) __motor_get_speed_in_degrees                         12    10      2    7813
                                             49 BANK0     12    10      2
                            ___fldiv
                            ___fltol
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2875
                                             24 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __display_signed_itoa                                 4     0      4    4979
                                             47 BANK0      4     0      4
               __display_padded_itoa
 ---------------------------------------------------------------------------------
 (3) __display_padded_itoa                                23    18      5    4668
                                             24 BANK0     23    18      5
                               _itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (2) __display_position_in_degrees                         8     4      4      46
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) __display_itoa_long                                  15     8      7   10370
                                             87 BANK0     15     8      7
                            ___aldiv
                            ___almod
                      __display_itoa
       __display_position_in_degrees (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (3) __display_itoa                                       24    19      5    6858
                                             63 BANK0     24    19      5
                               _itoa
             _motor_speed_from_index (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     535
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _itoa                                                 8     2      6    2388
                                             16 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                 9     3      6    1424
                                              7 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     337
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     518
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     474
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     478
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __display_clear                                       4     4      0     136
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _adc_read_temperature                                 8     8      0   10091
                                             49 BANK0      8     8      0
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    2280
                                             10 BANK0     14    10      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4    1297
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     223
                                             24 BANK0      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    3220
                                             24 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3000
                                             28 BANK0     20    12      8
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1132
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     930
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    5     5      0      68
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0  115300
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0  115300
                                             76 BANK0      6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0  110500
                                             71 BANK0      5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   56001
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   54295
                                             57 BANK0     14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   24725
                                             47 BANK0      5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   17553
                                             36 BANK0     11     2      9
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) _flash_sector_write                                   5     1      4   17208
                                             31 BANK0      5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    4519
                                             19 BANK0     11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     532
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4743
                                             19 BANK0     10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5899
                                             19 BANK0     12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   13450
                                             53 BANK0      4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2318
                                             10 BANK0      7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1706
                                              8 BANK0      2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (3) _USBStallEndpoint                                     8     7      1    1661
                                              0 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    6470
                                             43 BANK0     10     2      8
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) _flash_sector_read                                    4     0      4    6189
                                             39 BANK0      4     0      4
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    4899
                                             19 BANK0     20    12      8
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    2691
                                             17 BANK0      2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 BANK0      1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1334
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2    1311
                                             12 BANK0      5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8    1244
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaInitialize                        2     0      2     102
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaDetect                            2     0      2     102
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             1     1      0   63727
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (2) _api_prepare                                          5     1      4   18408
                                             16 BANK0      5     1      4
           __fill_buffer_get_display
      __fill_buffer_get_mode_details
            __fill_buffer_get_status
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_status                              2     0      2    8668
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              11     5      6    7919
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_mode_details                        4     2      2     529
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_display                            12     9      3     827
                                              4 BANK0     12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (4) _display_get_character                                4     3      1     133
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _api_parse                                           11     6      5   42318
                                             71 BANK0     11     6      5
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (3) __parse_command_short                                 1     1      0   21737
                                             62 BANK0      1     1      0
            _motor_clear_command_cue
                   _motor_goto_steps
                 _motor_move_endless
                     _motor_set_zero
                         _motor_stop
 ---------------------------------------------------------------------------------
 (2) _motor_stop                                           2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _motor_set_zero                                       1     1      0    2728
                                             10 BANK0      1     1      0
             __motor_move_back_forth
 ---------------------------------------------------------------------------------
 (3) __motor_move_back_forth                               2     2      0    2706
                                              8 BANK0      2     2      0
            __motor_schedule_command
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (2) _motor_move_endless                                   3     1      2    7495
                                             44 BANK0      3     1      2
                  __motor_move_steps
 ---------------------------------------------------------------------------------
 (2) _motor_goto_steps                                    12     5      7   11492
                                             50 BANK0     12     5      7
          __motor_calculate_distance
            __motor_decide_direction
                  __motor_move_steps
 ---------------------------------------------------------------------------------
 (3) __motor_decide_direction                             21    16      5    2526
                                             29 BANK0     21    16      5
          __motor_calculate_distance
           __motor_distance_to_limit
 ---------------------------------------------------------------------------------
 (4) __motor_calculate_distance                           13     9      4     581
                                              0 BANK0     13     9      4
 ---------------------------------------------------------------------------------
 (4) _motor_clear_command_cue                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) __parse_command_long                                  7     1      6   19829
                                             64 BANK0      7     1      6
                  __parse_jump_steps
   __parse_jump_steps_with_overshoot
            __parse_set_manual_speed
 ---------------------------------------------------------------------------------
 (4) __parse_set_manual_speed                              9     3      6    1068
                                              4 BANK0      9     3      6
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (3) _motor_set_manual_speed                               2     0      2     644
                                              2 BANK0      2     0      2
                 _motor_change_speed
 ---------------------------------------------------------------------------------
 (4) _motor_change_speed                                   2     0      2     289
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __parse_jump_steps_with_overshoot                    12     6      6    9123
                                             52 BANK0     12     6      6
                   _motor_move_steps
 ---------------------------------------------------------------------------------
 (4) __parse_jump_steps                                   12     6      6    9125
                                             52 BANK0     12     6      6
                   _motor_move_steps
 ---------------------------------------------------------------------------------
 (3) _motor_move_steps                                     8     1      7    8518
                                             44 BANK0      8     1      7
                            ___fltol (ARG)
                  __motor_move_steps
 ---------------------------------------------------------------------------------
 (3) __motor_move_steps                                   15     7      8    7095
                                             29 BANK0     15     7      8
           __motor_distance_to_limit
            __motor_schedule_command
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (4) __motor_schedule_command                              8     1      7    2646
                                              0 BANK0      8     1      7
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (2) _motor_items_in_cue                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __motor_distance_to_limit                            17    13      4    1115
                                             12 BANK0     17    13      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     956
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    3001
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _SYS_InterruptHigh                                  14    14      0   56869
                                             68 COMRAM    14    14      0
                     _USBDeviceTasks
                          _motor_isr
                           _tmr0_isr
 ---------------------------------------------------------------------------------
 (14) _tmr0_isr                                            0     0      0       0
                        _encoder_run
 ---------------------------------------------------------------------------------
 (15) _encoder_run                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _motor_isr                                          24    24      0    2091
                                             44 COMRAM    24    24      0
           _i2c_eeprom_save_position
 ---------------------------------------------------------------------------------
 (15) _i2c_eeprom_save_position                            7     7      0    2000
                                             37 COMRAM     7     7      0
                   _i2c_eeprom_write
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (16) _i2c_eeprom_write                                   27    22      5    1528
                                             10 COMRAM    27    22      5
                 i2__i2c_eeprom_busy
                       i2__i2c_write
 ---------------------------------------------------------------------------------
 (17) i2__i2c_write                                        5     2      3     186
                                              5 COMRAM     5     2      3
                        i2__i2c_send
                       i2__i2c_start
                        i2__i2c_stop
                   i2__i2c_wait_idle
 ---------------------------------------------------------------------------------
 (17) i2__i2c_eeprom_busy                                  1     1      0      23
                                              5 COMRAM     1     1      0
                        i2__i2c_send
                       i2__i2c_start
                        i2__i2c_stop
                   i2__i2c_wait_idle
 ---------------------------------------------------------------------------------
 (18) i2__i2c_wait_idle                                    5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_stop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_start                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_send                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) _USBDeviceTasks                                      1     1      0   54778
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (15) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (15) _USBWakeFromSuspend                                  0     0      0    7487
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBSuspend                                          0     0      0    7487
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USBIncrement1msInternalTimers                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPService                                    1     1      0   31661
                                             29 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (16) i2_memcpy                                           11     5      6     377
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfSetupHandler                              0     0      0   31055
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (17) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCheckStdRequest                                  0     0      0   23476
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (18) _USBStdSetCfgHandler                                 1     1      0    7985
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (16) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (18) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (18) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (18) _USBStdFeatureReqHandler                             6     6      0    7958
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    7487
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
                i2_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (16) i2_SYSTEM_Initialize                                 5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (16) _USBCheckMSDRequest                                  4     4      0     736
                                             11 COMRAM     4     4      0
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) _USBCheckHIDRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _MSDTransferTerminated                               4     2      2    1075
                                             11 COMRAM     4     2      2
                 i2_USBStallEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBStallEndpoint                                  8     7      1     252
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceMSDInitialize                             0     0      0    1473
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (17) _USBMSDInit                                          3     3      0     740
                                             11 COMRAM     3     3      0
        i2_ExternalFlash_MediaDetect *
    i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (18) i2_ResetSenseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaInitialize                     2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaDetect                         2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceCustomHIDInitialize                       0     0      0    1421
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBTransferOnePacket                             11     7      4     688
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (17) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (18) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (19) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_jump_steps
           _motor_move_steps
             ___fltol (ARG)
             __motor_move_steps (ARG)
               __motor_distance_to_limit
                 ___lmul
               __motor_schedule_command
                 _motor_items_in_cue
               _motor_items_in_cue
         __parse_jump_steps_with_overshoot
           _motor_move_steps
             ___fltol (ARG)
             __motor_move_steps (ARG)
               __motor_distance_to_limit
                 ___lmul
               __motor_schedule_command
                 _motor_items_in_cue
               _motor_items_in_cue
         __parse_set_manual_speed
           _motor_set_manual_speed
             _motor_change_speed
       __parse_command_short
         _motor_clear_command_cue
         _motor_goto_steps
           __motor_calculate_distance
           __motor_decide_direction
             __motor_calculate_distance
             __motor_distance_to_limit
               ___lmul
           __motor_move_steps
             __motor_distance_to_limit
               ___lmul
             __motor_schedule_command
               _motor_items_in_cue
             _motor_items_in_cue
         _motor_move_endless
           __motor_move_steps
             __motor_distance_to_limit
               ___lmul
             __motor_schedule_command
               _motor_items_in_cue
             _motor_items_in_cue
         _motor_set_zero
           __motor_move_back_forth
             __motor_schedule_command
               _motor_items_in_cue
             _motor_items_in_cue
         _motor_stop
     _api_prepare
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_mode_details
       __fill_buffer_get_status
         _memcpy
       _memcpy
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_sector_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _adc_read_temperature
     ___fladd
       ___flneg (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___flmul
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___flneg
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___fltol
     ___xxtofl
       ___fltol (ARG)
   _display_prepare
     __display_clear
     __display_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _motor_speed_from_index (ARG)
         __motor_get_speed_in_degrees
           ___fldiv
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___fltol
           ___lmul
           ___xxtofl
             ___fltol (ARG)
       _strlen (ARG)
     __display_itoa_long
       ___aldiv
       ___almod
       __display_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _motor_speed_from_index (ARG)
           __motor_get_speed_in_degrees
             ___fldiv
               ___xxtofl (ARG)
                 ___fltol (ARG)
             ___fltol
             ___lmul
             ___xxtofl
               ___fltol (ARG)
         _strlen (ARG)
       __display_position_in_degrees (ARG)
       _strlen (ARG)
     __display_padded_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _strlen
     __display_position_in_degrees
     __display_signed_itoa
       __display_padded_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _strlen
     _memcpy
     _motor_speed_from_index
       __motor_get_speed_in_degrees
         ___fldiv
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fltol
         ___lmul
         ___xxtofl
           ___fltol (ARG)
     _strlen
   _display_update
     _i2c_display_cursor
       __ic2_display_set_ddram_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
   _encoder_statemachine
     __divide_jump_size_decrement
     __divide_jump_size_increment
     __encoder_next_arc_step_size
     __encoder_next_divide_step_size
     __encoder_next_setup_stepsize
     _motor_arc_move
       ___fldiv
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___fltol
       ___xxtofl
         ___fltol (ARG)
       _motor_move_steps
         ___fltol (ARG)
         __motor_move_steps (ARG)
           __motor_distance_to_limit
             ___lmul
           __motor_schedule_command
             _motor_items_in_cue
           _motor_items_in_cue
     _motor_change_speed
     _motor_decrease_manual_speed
       _motor_set_manual_speed
         _motor_change_speed
     _motor_divide_jump
       __step_position_from_divide_position
         ___fldiv
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fltol
         ___xxtofl
           ___fltol (ARG)
       _motor_goto_steps
         __motor_calculate_distance
         __motor_decide_direction
           __motor_calculate_distance
           __motor_distance_to_limit
             ___lmul
         __motor_move_steps
           __motor_distance_to_limit
             ___lmul
           __motor_schedule_command
             _motor_items_in_cue
           _motor_items_in_cue
     _motor_divide_jump_to_nearest
       ___fladd
         ___flneg (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___fldiv
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___fltol
       ___xxtofl
         ___fltol (ARG)
       __step_position_from_divide_position
         ___fldiv
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fltol
         ___xxtofl
           ___fltol (ARG)
       _motor_goto_steps
         __motor_calculate_distance
         __motor_decide_direction
           __motor_calculate_distance
           __motor_distance_to_limit
             ___lmul
         __motor_move_steps
           __motor_distance_to_limit
             ___lmul
           __motor_schedule_command
             _motor_items_in_cue
           _motor_items_in_cue
     _motor_goto_steps
       __motor_calculate_distance
       __motor_decide_direction
         __motor_calculate_distance
         __motor_distance_to_limit
           ___lmul
       __motor_move_steps
         __motor_distance_to_limit
           ___lmul
         __motor_schedule_command
           _motor_items_in_cue
         _motor_items_in_cue
     _motor_increase_manual_speed
       _motor_set_manual_speed
         _motor_change_speed
     _motor_move_degrees_int
       __motor_move_steps
         __motor_distance_to_limit
           ___lmul
         __motor_schedule_command
           _motor_items_in_cue
         _motor_items_in_cue
       __motor_steps_from_degrees_int
         ___fladd
           ___flneg (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fldiv
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fltol
         ___xxtofl
           ___fltol (ARG)
     _motor_move_endless
       __motor_move_steps
         __motor_distance_to_limit
           ___lmul
         __motor_schedule_command
           _motor_items_in_cue
         _motor_items_in_cue
     _motor_set_zero
       __motor_move_back_forth
         __motor_schedule_command
           _motor_items_in_cue
         _motor_items_in_cue
     _motor_stop
   _motor_calculate_position_in_degrees
     ___fldiv
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___flmul
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___fltol
     ___xxtofl
       ___fltol (ARG)
   _motor_process_cue
     __motor_run
     _motor_items_in_cue
   _system_init
     __backlight_init
     __system_pin_setup
     __system_timer0_init
     _adc_init
     _configFile_read
       __get_item
       __parse_item
         __steps_from_degrees
           ___fldiv
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___flge
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___fltol
           ___xxtofl
             ___fltol (ARG)
         _atoi
           ___wmul
           _isdigit
         _atol
           ___lmul
           _isdigit
         _stricmp
           _toupper
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
         _strncmp
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _fat_read_from_file
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _fat_read_from_file_fast
           __data_sector_from_cluster
           __find_nth_cluster
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
             __read_value_from_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
     _configFile_readDefault
     _configFile_write
       __add_item
         _ltoa
           _ultoa
             ___lldiv
             ___llmod
       _fat_create_file
         __get_available_root_entry
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
         __get_date
         __get_time
         __make_cluster_chain
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __get_available_cluster
             __cluster_from_sector_and_offset
             __get_available_offset_from_buffer
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __get_available_offset_from_buffer
           __read_value_from_offset
           __write_value_to_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _flash_sector_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         __write_root
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         _fat_find_file
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _strncmp
         _memcpy
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
         _strncmp
       _fat_modify_file
         __data_sector_from_cluster
         __find_nth_cluster
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __read_value_from_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __read_fat
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_copy_page_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
       _fat_resize_file
         __make_cluster_chain
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __get_available_cluster
             __cluster_from_sector_and_offset
             __get_available_offset_from_buffer
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __get_available_offset_from_buffer
           __read_value_from_offset
           __write_value_to_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _flash_sector_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __write_root
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
     _display_init
       __display_start
         __display_itoa_u16
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
         _memcpy
       _i2c_display_init
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
       _i2c_display_program_custom_character
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __ic2_display_set_cgram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
     _display_update
       _i2c_display_cursor
         __ic2_display_set_ddram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
       _i2c_display_write_fixed
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
     _encoder_init
     _fat_init
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _fat_restore_mbr_fbr
         __get_fbr
         __get_mbr
         _flash_sector_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _memcpy
         _spi_tx
       _spi_init
         __spi_init
     _i2c_eeprom_recover_position
       _i2c_eeprom_read
         __i2c_eeprom_busy
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_read
           __i2c_acknowledge
           __i2c_get
           __i2c_not_acknowledge
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
       _memcpy
     _i2c_init
     _motor_calculate_position_in_degrees
       ___fldiv
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___fltol
       ___xxtofl
         ___fltol (ARG)
     _motor_init

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 i2_ExternalFlash_MediaDetect *
                 i2_ExternalFlash_MediaInitialize *
                 i2_ResetSenseData *
                 i2_USBTransferOnePacket *
             _MSDTransferTerminated
               i2_USBStallEndpoint
               i2_USBTransferOnePacket
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               i2_USBTransferOnePacket
             i2_SYSTEM_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               i2_ExternalFlash_MediaDetect *
               i2_ExternalFlash_MediaInitialize *
               i2_ResetSenseData *
               i2_USBTransferOnePacket *
           _MSDTransferTerminated
             i2_USBStallEndpoint
             i2_USBTransferOnePacket
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             i2_USBTransferOnePacket
           i2_SYSTEM_Initialize
       i2_memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           i2_ExternalFlash_MediaDetect *
           i2_ExternalFlash_MediaInitialize *
           i2_ResetSenseData *
           i2_USBTransferOnePacket *
       _MSDTransferTerminated
         i2_USBStallEndpoint
         i2_USBTransferOnePacket
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         i2_USBTransferOnePacket
       i2_SYSTEM_Initialize
     i2_USBDeviceInit
       i2_memset
   _motor_isr
     _i2c_eeprom_save_position
       _i2c_eeprom_write
         i2__i2c_eeprom_busy
           i2__i2c_send
           i2__i2c_start
           i2__i2c_stop
           i2__i2c_wait_idle
         i2__i2c_write
           i2__i2c_send
           i2__i2c_start
           i2__i2c_stop
           i2__i2c_wait_idle
       i2_memcpy
   _tmr0_isr
     _encoder_run

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     400      36       66.7%
BIGRAMlh           500      0       0      35        0.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      50      13       31.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C0      11       75.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E6       9       89.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     3C      FF       7       99.6%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9E      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     52      5E       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3F3      31        0.0%
DATA                 0      0     7F3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Jan 05 13:06:51 2020

                           __end_of_fat_read_from_file 20A2  
                               _motor_next_speed_check 0238  
                      __size_of__write_value_to_offset 0036  
                                           _USB_SD_Ptr 9DE4  
                                         ___fldiv@aexp 0090  
                                         ___fldiv@bexp 008F  
                             fat_create_file@extension 00AE  
                                  __get_item@value_ctr 0069  
                                         ___fldiv@sign 0088  
               motor_calculate_position_in_degrees@tmp 0091  
                                  __system_timer0_init 5AD6  
                      __size_of_configFile_readDefault 0078  
                     __motor_move_steps@return_value_1 0085  
                     __motor_move_steps@return_value_2 0086  
                         __motor_schedule_command@type 0066  
                            __end_of_motor_divide_jump 3040  
                              configFile_read@position 01FB  
                                                   _os 0164  
                                        _USBDeviceInit FDD4  
                                  ___wmul@multiplicand 0062  
                                   _USBCheckHIDRequest 2870  
                          ??__data_sector_from_cluster 0062  
               __end_of__encoder_next_divide_step_size 5A4C  
              __size_of__encoder_next_divide_step_size 002E  
                       __encoder_next_divide_step_size 5A1E  
                                     __i2c_eeprom_busy 5BAC  
                                     ??__flash_is_busy 0071  
                           ??__sector_from_file_number 0062  
                                         __CFG_CP0$OFF 000000  
                       __root_is_available@root_sector 008F  
                                  __end_of_system_init 07E4  
                             ?_i2c_display_write_fixed 0065  
                              fat_modify_file@position 00BF  
                                      _fat_resize_file 171C  
                 USER_USB_CALLBACK_EVENT_HANDLER@event 0010  
                 USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                        __motor_schedule_command@speed 0064  
                                                  l206 5954  
                                                  l207 5952  
                                                  l145 FE1E  
                                                  l147 FE46  
                                                  l149 FE80  
                          __end_of_USBStdGetDscHandler 0A44  
                                                  l184 1428  
                                                  l192 1366  
                                                  l186 1452  
                                                  l602 DFF8  
                                                  l188 14D0  
                                                  l700 D32A  
                                                  l620 47BE  
                                                  l612 090E  
                                                  l701 D06A  
                                                  l613 0908  
                                                  l605 E000  
                                                  l710 D16A  
                                                  l630 C990  
                                                  l622 47DA  
                                                  l703 D34E  
                                                  l711 D1D8  
                                                  l631 C5EE  
                                                  l615 0912  
                                                  l720 D310  
                                                  l712 D1D4  
                                                  l704 D116  
                                                  l640 C732  
                                                  l624 47E6  
                                                  l608 0860  
                                                  l641 C73C  
                                                  l625 47EC  
                                                  l714 D1EC  
                                                  l706 D11C  
                                                  l650 C836  
                                                  l642 C760  
                                                  l634 C5FE  
                                                  l626 47F2  
                                                  l570 E018  
                                                  l731 0F2C  
                                                  l715 D270  
                                                  l707 D128  
                                                  l619 47FA  
                                                  l571 DDE0  
                                                  l708 D146  
                                                  l660 C8DC  
                                                  l652 C86C  
                                                  l644 C790  
                                                  l636 C60E  
                                                  l580 DEEE  
                                                  l900 4B7E  
                                                  l709 D192  
                                                  l661 C8F0  
                                                  l637 C618  
                                                  l734 0F38  
                                                  l726 0ED6  
                                                  l718 D2E0  
                                                  l670 C988  
                                                  l662 C918  
                                                  l654 C888  
                                                  l646 C7D0  
                                                  l582 DF06  
                                                  l735 0F60  
                                                  l719 D2F8  
                                                  l639 C66C  
                                                  l591 DF7A  
                                                  l575 DE04  
                                                  l728 0EEE  
                                                  l664 C94C  
                                                  l656 C8A0  
                                                  l592 DF7E  
                                                  l904 4B90  
                                                  l753 0FCA  
                                                  l737 0F9C  
                                                  l681 EA9C  
                                                  l665 C920  
                                                  l649 C808  
                                                  l593 DFA4  
                                                  l577 DF2C  
                                                  l770 0E50  
                                                  l738 0F82  
                                                  l690 E9B2  
                                                  l682 E8DE  
                                                  l666 C932  
                                                  l578 DF12  
                                                  l586 E036  
                                                  l906 4B9C  
                                                  l675 2E58  
                                                  l763 0E9A  
                                                  l771 0E8C  
                                                  l747 0FAA  
                                                  l691 E9DC  
                                                  l667 C948  
                                                  l587 DF4C  
                                                  l579 DEE6  
                                                  l764 0E04  
                                                  l684 EAC0  
                                                  l692 EA0A  
                                                  _BDT 000D00  
                                                  l677 2E74  
                                                  l757 0DD8  
                                                  l749 0FB8  
                                                  l693 EA1C  
                                                  l685 E938  
                                                  l589 DF58  
                                                  l950 357A  
                                                  l766 0E0C  
                                                  l694 EA22  
                                                  l686 E944  
                                                  l862 3A14  
                                                  l767 0E1A  
                                                  l695 EA36  
                                                  l687 E94E  
                                                  l871 3A56  
                                                  l863 3A2E  
                                                  l944 3516  
                                                  l768 0E2E  
                                                  l696 EA84  
                                                  l688 E962  
                                                  l872 3A5A  
                                                  l769 0E3C  
                                                  l873 3A60  
                                                  l867 3A66  
                                                  l869 3A88  
                                                  l897 4BAE  
                                                  l986 5E98  
                                                  l898 4B72  
                                                  _LBA 011D  
                                        ?_display_init 0001  
                                                  _PR2 000FCB  
                                                  _LUN 0299  
                                                  _UIE 000F36  
                                                  _UIR 000F62  
                                     ??_motor_set_zero 006A  
                                   api_prepare@command 0074  
                                           _USBSuspend 59EE  
                               __end_of_display_update 57EE  
                                 USBStdSetCfgHandler@i 0018  
                               i2c_eeprom_read@address 0071  
                                                  prod 000FF3  
                                                  tosl 000FFD  
                                                  wreg 000FE8  
                                       _USBDeviceTasks 0068  
                                  ?_USBCheckHIDRequest 0001  
                                         __CFG_IESO$ON 000000  
                                       _USBDeviceState 005D  
                                         ___flmul@aexp 0089  
                                         ___flmul@bexp 008A  
                                         ?__write_root 0088  
                              __parse_item@item_string 0099  
                                         ___flmul@sign 0084  
                                         ___flmul@temp 008F  
                                         ___flmul@prod 008B  
                            __size_of_i2c_display_init 0050  
                                    ?_motor_goto_steps 0092  
                                ??_USBCtrlTrfRxService 0001  
                             __size_ofi2_USBDeviceInit 0146  
                             USBEnableEndpoint@options 0009  
                             ?__motor_decide_direction 007D  
                                    __find_nth_cluster 35B6  
                                    ??_MSDErrorHandler 0068  
                                 ?__system_timer0_init 0001  
                                  api_prepare@inBuffer 0070  
                                         ___fltol@exp1 0069  
                    __size_of__offset_from_file_number 002A  
                          __flash_write_to_buffer@data 0075  
                                                 l2001 DC66  
                                                 l2010 DC8A  
                                                 l2002 DC6A  
                                                 l2011 DC8E  
                                                 l2003 DC6E  
                                                 l2004 DC72  
                                                 l2005 DC76  
                                                 l1221 4E54  
                                                 l2102 421C  
                                                 l2006 DC7A  
                                                 l1143 5F5A  
                                                 l2007 DC7E  
                                                 l1400 A372  
                                                 l2104 4282  
                                                 l1128 5F62  
                                                 l1160 51B8  
                                                 l2008 DC82  
                                                 l1161 519A  
                                                 l2009 DC86  
                                                 l1137 5F28  
                                                 l2202 3D30  
                                                 l1402 A37C  
                                                 l1082 07DA  
                                                 l2211 391C  
                                                 l1331 21D4  
                                                 l1155 5F20  
                                                 l1324 53F8  
                                                 l1332 21BE  
                                                 l1340 54DE  
                                                 l1420 A492  
                                                 l1404 AFB0  
                                                 l2205 3D66  
                                                 l1421 A4D6  
                                                 l1405 A3A6  
                                                 l1149 5F34  
                                                 l2310 F258  
                                                 l2214 395A  
                                                 l1326 5404  
                                                 l1350 E568  
                                                 l1334 2232  
                                                 l1430 A5E4  
                                                 l1406 A3F0  
                                                 l3022 1A54  
                                                 l1166 3B68  
                                                 l1335 2202  
                                                 l1431 A5B4  
                                                 l1423 A524  
                                                 l1415 A44A  
                                                 l3031 F6FC  
                                                 l3023 1A1C  
                                                 l1263 4136  
                                                 l1167 3B4A  
                                                 l2320 F9DA  
                                                 l2312 F2D6  
                                                 l1600 5D00  
                                                 l1352 E5FE  
                                                 l1416 A47E  
                                                 l1408 A42C  
                                                 l3120 3F6E  
                                                 l1504 57C4  
                                                 l2305 F366  
                                                 l1361 E690  
                                                 l1345 E572  
                                                 l1441 A834  
                                                 l1433 A668  
                                                 l1425 A560  
                                                 l1417 A46A  
                                                 l1409 A3FC  
                                                 l3121 3F7C  
                                                 l3025 1AC6  
                                                 l1257 4F7A  
                                                 l2065 32AE  
                                                 l2330 FA4A  
                                                 l2322 F9E2  
                                                 l1362 E660  
                                                 l1450 A8B4  
                                                 l1442 A804  
                                                 l1426 A54C  
                                                 l3034 F75E  
                                                 l3050 BF1C  
                                                 l3026 1AC2  
                                                 l1258 4F5C  
                                                 l2331 FA50  
                                                 l2323 F9EA  
                                                 l2315 F330  
                                                 l1355 E5E2  
                                                 l1435 A6F6  
                                                 l1419 A474  
                                                 l3051 BF52  
                                                 l2500 F616  
                                                 l2340 FAA6  
                                                 l2332 FA56  
                                                 l2324 F9F2  
                                                 l2308 F246  
                                                 l1700 5878  
                                                 l1356 E5F6  
                                                 l1460 AA2A  
                                                 l1452 A942  
                                                 l1444 A84C  
                                                 l1436 A6C6  
                                                 l1428 A556  
                                                 l3060 C164  
                                                 l3052 BF88  
                                                 l3116 3F3A  
                                                 l1380 3198  
                                                 l2501 F62E  
                                                 l2333 FA5C  
                                                 l2325 F9FA  
                                                 l1357 E656  
                                                 l1349 E54A  
                                                 l1461 A9DC  
                                                 l1445 A87A  
                                                 l1429 A574  
                                                 l3061 C1C6  
                                                 l3053 BFBE  
                                                 l3045 BE44  
                                                 l3117 3F2E  
                                                 l1373 3138  
                                                 l2069 3302  
                                                 l1541 4504  
                                                 l2334 FA62  
                                                 l2326 FA02  
                                                 l2262 25BA  
                                                 l2270 259A  
                                                 l1550 4D2C  
                                                 l1358 E610  
                                                 l1462 AA84  
                                                 l1454 A97E  
                                                 l1446 A86A  
                                                 l1438 A78E  
                                                 l3054 BFF4  
                                                 l1542 4528  
                                                 l2190 560E  
                                                 l2503 F682  
                                                 l2319 FABE  
                                                 l2335 FA68  
                                                 l2327 FA0A  
                                                 l1359 E654  
                                                 l1367 102A  
                                                 l1471 ABC0  
                                                 l1463 AA54  
                                                 l1455 A94E  
                                                 l1447 A88A  
                                                 l1439 A75E  
                                                 l3055 C02A  
                                                 l3047 BE7A  
                                                 l2191 55EC  
                                                 l2520 FF6C  
                                                 l2360 FC18  
                                                 l2504 F6D0  
                                                 l2336 FA6E  
                                                 l2328 FA12  
                                                 l1552 4D56  
                                                 l3160 2C1A  
                                                 l1480 ACD0  
                                                 l1472 AC3A  
                                                 l1448 A872  
                                                 l3056 C060  
                                                 l3048 BEB0  
                                                 l1560 4AD8  
                                                 l1376 3158  
                                                 l2521 000C  
                                                 l2353 FD38  
                                                 l2361 FC7E  
                                                 l2345 3E64  
                                                 l2505 F6EA  
                                                 l2329 FA1A  
                                                 l2281 0B2E  
                                                 l2265 2536  
                                                 l3161 2C0E  
                                                 l1385 5204  
                                                 l1481 ADA0  
                                                 l1473 AC0A  
                                                 l1465 AB34  
                                                 l1457 A9B2  
                                                 l1449 A8E4  
                                                 l3065 F06C  
                                                 l3057 C096  
                                                 l3049 BEE6  
                                                 l2346 3E06  
                                                 l2338 FA8A  
                                                 l2282 0AD0  
                                                 l2274 0A62  
                                                 l2266 2544  
                                                 l1570 41E8  
                                                 l3170 332A  
                                                 l1490 AEBE  
                                                 l1482 AD68  
                                                 l1466 AAFC  
                                                 l1458 AA1A  
                                                 l2514 0CAC  
                                                 l3058 C0CC  
                                                 l1810 D5D2  
                                                 l1378 3178  
                                                 l2355 FDD0  
                                                 l2611 52D4  
                                                 l2347 3E80  
                                                 l2283 0B64  
                                                 l2267 2558  
                                                 l3171 333E  
                                                 l1395 AF54  
                                                 l1475 AC68  
                                                 l1459 A9D0  
                                                 l3067 F17A  
                                                 l3059 C12E  
                                                 l1803 D506  
                                                 l3083 C5AC  
                                                 l2348 3E24  
                                                 l2284 0AE8  
                                                 l2268 256C  
                                                 l2196 4C72  
                                                 l1572 4208  
                                                 l3164 2C4E  
                                                 l1492 AEE8  
                                                 l1484 AE14  
                                                 l1476 AD0E  
                                                 l1468 ABA8  
                                                 l1396 A348  
                                                 l2452 ED42  
                                                 l3068 F1E0  
                                                 l3076 F50A  
                                                 l3084 C5C2  
                                                 l2188 55FE  
                           USBConfigureEndpoint@handle 0007  
                                                 l2461 1E0C  
                                                 l2613 52F0  
                                                 l2365 400E  
                                                 l2349 3E42  
                                                 l2525 22AC  
                                                 l2285 0B04  
                                                 l2277 0AB0  
                                                 l2293 3054  
                                                 l2269 257A  
                                                 l1549 4D70  
                                                 l3165 2C5C  
                                                 l3157 2BD4  
                                                 l3173 335C  
                                                 l1485 ADE4  
                                                 l1477 AC86  
                                                 l1469 AB78  
                                                 l1397 A386  
                                                 l2621 2FD4  
                                                 l2453 ED44  
                                                 l1901 E47C  
                                                 l3077 F3FE  
                                                 l3501 4738  
                                                 l1805 D514  
                                                 l2189 55DA  
                                                 l2518 FF48  
                                                 l2462 1E1C  
                                                 l2614 52F8  
                                                 l3166 2C72  
                                                 l3158 2BEC  
                                                 l3174 3350  
                                                 l1494 AF14  
                                                 l1478 AD24  
                                                 l1398 A368  
                                                 l2454 EDB0  
                                                 l1902 E36A  
                                                 l3078 F494  
                                                 l3502 4746  
                                                 l1814 D60C  
                                                 l1806 D51C  
                                                 l2463 1E2C  
                                                 l2359 FBE6  
                                                 l2279 0AB6  
                                                 l2295 308E  
                                                 l1567 41A6  
                                                 l1487 AE86  
                                                 l1479 AC92  
                                                 l2711 4400  
                                                 l2455 EDE0  
                                                 l2447 ECD8  
                                                 l1903 E392  
                                                 l3079 F4C6  
                                                 l1815 D620  
                                                 l1559 4ACE  
                                                 l2464 1E38  
                                                 l2480 EF78  
                                                 l2472 EEA8  
                                                 l2528 2336  
                                                 l1568 41B0  
                                                 l1496 AF22  
                                                 l1488 AEB0  
                                                 l2712 440A  
                                                 l2624 2FF8  
                                                 l2800 B130  
                                                 l2448 ED36  
                                                 l1904 E43A  
                                                 l1760 49B0  
                                                 l1808 D592  
                                                 l2544 2424  
                                                 l3097 4D94  
                                                 l2465 1E52  
                                                 l2481 EFAA  
                                                 l2473 EEB8  
                                                 l2297 30CE  
                                                 l3601 CE02  
                                                 l3353 59AC  
                                                 l3177 3384  
                                                 l2721 5A28  
                                                 l2713 4414  
                                                 l1825 462A  
                                                 l1833 5B66  
                                                 l1809 D58A  
                                                 l1921 173C  
                                                 l3098 4DA8  
                                                 l2482 EFDA  
                                                 l2474 EEC4  
                                                 l2650 37E0  
                                                 l2298 3098  
                                                 l1594 4BDC  
                                                 l1586 509A  
                                                 l3602 CDC6  
                                                 l3178 3392  
                                                 l1498 AF4C  
                                                 l2730 4470  
                                                 l2722 5A2C  
                                                 l2714 441E  
                                                 l3346 0BA4  
                                                 l1762 49EA  
                                                 l1930 E24C  
                                                 l1922 17F8  
                                                 l2459 1DFA  
                                                 l2483 F048  
                                                 l2475 EED4  
                                                 l2299 30A4  
                                                 l1595 4BE6  
                                                 l1587 50A4  
                                                 l3611 CEDA  
                                                 l3179 33A8  
                                                 l2731 447A  
                                                 l2723 5A30  
                                                 l2803 B162  
                                                 l3347 0BD8  
                                                 l1827 4682  
                                                 l1835 5B78  
                                                 l1931 E13A  
                                                 l1923 17F0  
                                                 l2476 EEE4  
                                                 l2468 EE96  
                                                 l2492 34CA  
                                                 l3612 CEA2  
                                                 l2732 4484  
                                                 l2708 4428  
                                                 l2812 B7E2  
                                                 l2820 B24E  
                                                 l3348 0C16  
                                                 l1852 1FB8  
                                                 l1932 E162  
                                                 l1940 2A1E  
                                                 l2477 EF12  
                                                 l3621 CF72  
                                                 l3605 CE7E  
                                                 l2733 448E  
                                                 l2709 43F4  
                                                 l2901 B6A0  
                                                 l2821 B258  
                                                 l2805 B188  
                                                 l3349 0C54  
                                                 l1861 1FA2  
                                                 l1781 2BA6  
                                                 l1933 E20A  
                                                 l1941 2A22  
                                                 l2478 EF2A  
                                                 l3606 CE5C  
                                                 l3702 CC72  
                                                 l2742 4554  
                                                 l2718 5A34  
                                                 l2902 B6D8  
                                                 l2830 B3C4  
                                                 l2814 B270  
                                                 l2822 B266  
                                                 l2806 B198  
                                                 l1870 0468  
                                                 l1950 2A46  
                                                 l1942 2A26  
                                                 l2479 EF4E  
                                                 l3615 CEC4  
                                                 l3607 CE6A  
                                                 l2727 4498  
                                                 l2719 5A24  
                                                 l2831 B2EE  
                                                 l2815 B216  
                                                 l1855 1F2A  
                                                 l1871 04C6  
                                                 l1919 172C  
                                                 l1951 2A4A  
                                                 l1943 2A2A  
                                                 l1696 58AC  
                                                 l3640 D042  
                                                 l3624 CF96  
                                                 l3616 CEC8  
                                                 l3608 CE6E  
                                                 l3704 CCB6  
                                                 l3384 24D6  
                                                 l3376 2446  
                                                 l2728 4464  
                                                 l2912 B726  
                                                 l2904 B6E2  
                                                 l2832 B302  
                                                 l2824 B29A  
                                                 l2816 B238  
                                                 l1864 42A4  
                                                 l3800 4FB6  
                                                 l1776 2B42  
                                                 l1952 2A4E  
                                                 l1944 2A2E  
                                                 l3641 D04A  
                                                 l3633 CFD6  
                                                 l3705 CCD4  
                                                 l3385 24CA  
                                                 l2737 562A  
                                                 l2913 B730  
                                                 l2817 B246  
                                                 l2809 B1CA  
                                                 l1793 D3C2  
                                                 l1929 E0B4  
                                                 l1961 DC92  
                                                 l1937 2A66  
                                                 l1953 2A52  
                                                 l1945 2A32  
                                                 l2498 F5FE  
                                                 l3642 D04C  
                                                 l3626 CFAC  
                                                 l3378 24B2  
                                                 l3650 D65C  
                                                 l2914 B73E  
                                                 l2850 B42E  
                                                 l2842 B39E  
                                                 l2826 B2C6  
                                                 l1786 3648  
                                                 l1970 DBB6  
                                                 l1962 DB62  
                                                 l1954 2A56  
                                                 l1946 2A36  
                                                 l1938 2A1A  
                                                 l3619 CF62  
                                                 l3707 CCF8  
                                                 l3387 24F2  
                                                 l3379 24A2  
                                                 l3731 0336  
                                                 l3651 D658  
                                                 l2907 B77A  
                                                 l2851 B3FC  
                                                 l2835 B334  
                                                 l2819 B280  
                                                 l1787 35DE  
                                                 l1779 2B9C  
                                                 l1971 DBC8  
                                                 l1955 2A5A  
                                                 l1947 2A3A  
                                                 l3812 492E  
                                                 l3636 D01C  
                                                 l3628 CFB6  
                                                 l3708 CD16  
                                                 l3732 0346  
                                                 l3572 501C  
                                                 l3660 D7BC  
                                                 l2916 B746  
                                                 l2908 B6FC  
                                                 l2860 B490  
                                                 l2852 B406  
                                                 l2780 AFE8  
                                                 l1788 362A  
                                                 l3804 182A  
                                                 l1796 D3CC  
                                                 l1868 0456  
                                                 l1980 DC16  
                                                 l1972 DBDA  
                                                 l1964 DB66  
                                                 l1956 2A5E  
                                                 l1948 2A3E  
                                                 l3813 48F4  
                                                 l3741 03E6  
                                                 l3733 0364  
                                                 l3573 5026  
                                                 l3661 D76C  
                                                 l2917 B75E  
                                                 l2909 B718  
                                                 l2861 B49C  
                                                 l2845 B41E  
                                                 l2853 B414  
                                                 l2781 AFF8  
                                                 l1797 D472  
                                                 l1981 DC1A  
                                                 l1973 DBEC  
                                                 l1965 DB6A  
                                                 l1957 2A62  
                                                 l1949 2A42  
                                                 l3742 03DA  
                                                 l3582 557C  
                                                 l3662 D794  
                                                 l3654 D69C  
                                                 l2846 B3D6  
                                                 l2838 B35A  
                                                 l3806 1886  
                                                 l1798 D41E  
                                                 l1990 DC3E  
                                                 l1982 DC1E  
                                                 l1974 DBFE  
                                                 l1966 DB6E  
                                                 l3735 0376  
                                                 l2943 EC5A  
                                                 l3583 5586  
                                                 l3655 D698  
                                                 l2919 B768  
                                                 l2871 B512  
                                                 l2855 B43E  
                                                 l2847 B3E6  
                                                 l2839 B36C  
                                                 l2791 B092  
                                                 l3807 18F4  
                                                 l1799 D53A  
                                                 l1991 DC42  
                                                 l1983 DC22  
                                                 l1975 DC02  
                                                 l1967 DB80  
                                                 l3736 036A  
                                                 l3568 4FFC  
                                                 l3680 D8C8  
                                                 l3664 D7BA  
                                                 l2872 B4E0  
                                                 l2856 B450  
                                                 l2848 B3F4  
                                                 l2784 B02A  
                                                 l3752 26C8  
                                                 l3840 40F8  
                                                 l1896 2054  
                                                 l1992 DC46  
                                                 l1984 DC26  
                                                 l1976 DC06  
                                                 l1968 DB92  
                                                 l3593 CD5E  
                                                 l3569 4FF4  
                                                 l3657 D6E6  
                                                 l2777 B798  
                                                 l2881 B5C8  
                                                 l2873 B4EA  
                                                 l2793 B0B8  
                                                 l3761 278E  
                                                 l3753 26C2  
                                                 l3841 4096  
                                                 l3497 4710  
                                                 l1993 DC4A  
                                                 l1985 DC2A  
                                                 l1977 DC0A  
                                                 l1969 DBA4  
                                                 l3818 59DA  
                                                 l3594 CD5A  
                                                 l3690 CA5C  
                                                 l3738 03B4  
                                                 l2946 EC80  
                                                 l3578 5564  
                                                 l3834 5664  
                                                 l3674 D828  
                                                 l2890 B636  
                                                 l2866 B502  
                                                 l2874 B4F8  
                                                 l2858 B484  
                                                 l2794 B0C8  
                                                 l3826 4B1E  
                                                 l3842 40EE  
                                                 l3498 4704  
                                                 l1994 DC4E  
                                                 l1986 DC2E  
                                                 l1978 DC0E  
                                                 l3819 59C8  
                                                 l3691 CA7A  
                                                 l3747 0426  
                                                 l3739 039C  
                                                 l3579 555C  
                                                 l3835 565E  
                                                 l3667 D7F0  
                                                 l3659 D70E  
                                                 l2883 B5E4  
                                                 l2867 B4BE  
                                                 l2779 B1F0  
                                                 l2787 B050  
                                                 l3755 270A  
                                                 l3827 4B14  
                                                 l1899 E2B2  
                                                 l1995 DC52  
                                                 l1987 DC32  
                                                 l1979 DC12  
                                                 l3684 CA0C  
                                                 l3676 D86C  
                                                 l3668 D7D2  
                                                 l2884 B5F6  
                                                 l2876 B52C  
                                                 l2868 B4CA  
                                                 l2788 B060  
                                                 l3780 5D40  
                                                 l3772 19BC  
                                                 l1996 DC56  
                                                 l1988 DC36  
                                                 l3685 CA08  
                                                 l2949 EC96  
                                                 l3677 D890  
                                                 l2893 B644  
                                                 l2869 B4D8  
                                                 l2797 B0FA  
                                                 l3773 1964  
                                                 l1997 DC5A  
                                                 l1989 DC3A  
                            ?__offset_from_file_number 0060  
                                                 l3598 CDA6  
                                                 l3686 CA1C  
                                                 l3790 33C2  
                                                 l3678 D8BA  
                                                 l2894 B658  
                                                 l2886 B60E  
                                                 l2878 B570  
                                                 l3758 275A  
                                                 l1998 DC5E  
                                                 l3599 CDA2  
                                                 l3695 CC3A  
                                                 l3679 D8C6  
                                                 l2799 B120  
                                                 l3759 271C  
                                                 l3775 1A02  
                                                 l1999 DC62  
                                                 l3696 CC1C  
                                                 l3688 CA4C  
                                                 l3792 33FE  
                                                 l2888 B688  
                                                 l2896 B666  
                                                 l3689 CA48  
                                                 l3793 3440  
                                                 l2889 B622  
                                                 l3769 195A  
                                                 l3849 5E62  
                                                 l3786 552E  
                                                 l2898 B66E  
                                                 l2899 B680  
                  __end_of__encoder_next_arc_step_size 44D2  
                          __encoder_next_arc_step_size 4462  
                        __size_of_encoder_statemachine 082A  
                                ??i2_SYSTEM_Initialize 0001  
                                                 STR_1 A329  
                                                 STR_2 A332  
                                                 STR_3 A329  
                                                 STR_4 A332  
                                                 STR_5 A329  
                                                 STR_6 A339  
                                                 STR_7 A320  
                                                 STR_8 A320  
                                                 STR_9 A320  
                                   ??_motor_goto_steps 0099  
                                ??_USBCtrlTrfTxService 0001  
                                                 _UCFG 000F39  
                                 _configFile_extention 02E3  
                                                 _UEP0 000F26  
                                                 _UEP1 000F27  
                                     ?_fat_create_file 00AC  
                                                 _UEIE 000F37  
                                                 _UEIR 000F63  
                                                 _UCON 000F65  
                                                 _TMR2 000FCC  
                          __size_ofi2_USBStallEndpoint 0106  
                                   ?__find_nth_cluster 0097  
                                       ??_encoder_init 0060  
                              ??_fat_get_format_status 008B  
                                 api_parse@out_idx_ptr 00AE  
                                       _ResetSenseData 481E  
                          __end_of_fat_restore_mbr_fbr 3CDE  
                                                 _enc1 0146  
                                                 _enc2 0145  
               USBStdFeatureReqHandler@current_ep_data 001B  
                                                 _pDst 0143  
                                                 _atoi 26C0  
                                                 _atol 1918  
                                                 _main 39FA  
                              _bit_pattern_verticalbar A2EA  
                                                 _itoa 5508  
                             ??i2_USBTransferOnePacket 0005  
                                  _use_cw_limit_string A2BA  
                                                 _ltoa 4F88  
                          __size_of_APP_DeviceMSDTasks 0012  
                                                 fsr0h 000FEA  
                                                 fsr1h 000FE2  
                              __end_of_display_prepare AFCC  
                    motor_goto_steps@distance_in_steps 0099  
                                                 indf0 000FEF  
                                                 fsr2h 000FDA  
                                                 fsr0l 000FE9  
                                                 indf1 000FE7  
                                                 indf2 000FDF  
                                                 fsr1l 000FE1  
                                                 fsr2l 000FD9  
                                      _USBDeviceAttach 592C  
                                                 btemp 005F  
                                                 _utoa 33BA  
                               __CFG_DSWDTOSC$T1OSCREF 000000  
                           ??_ExternalFlash_SectorRead 0093  
                         ?i2_ExternalFlash_MediaDetect 0001  
                            _ExternalFlash_MediaDetect 5F44  
                                                 prodh 000FF4  
                                                 prodl 000FF3  
     __get_available_offset_from_buffer@minimum_offset 0060  
                       fat_modify_file@number_of_bytes 00BD  
                                                 start 908E  
                      __end_of_APP_DeviceMSDInitialize 5ED2  
                         ?__motor_get_speed_in_degrees 0091  
                                      ___fldiv@new_exp 0089  
                                _display_get_character 5A4C  
                                 ??_USBCheckHIDRequest 0001  
  __motor_distance_to_limit@absolute_position_in_steps 0079  
                                     ?_MSDWriteHandler 0001  
                              __end_of_fat_modify_file E26E  
                        ??__encoder_next_arc_step_size 0062  
                                  ??__find_nth_cluster 009B  
                       ??_MSDProcessCommandMediaAbsent 00A7  
                           __end_of_USBCheckStdRequest 2870  
                               ??_USBCtrlTrfOutHandler 0003  
                         ??__flash_copy_page_to_buffer 0076  
                       ?__flash_write_page_from_buffer 0073  
                                         ___param_bank 000000  
                            ??_USBStdFeatureReqHandler 0018  
                                         _USBOutHandle 0135  
                     __end_of__fat_sector_from_cluster 5E00  
                               __get_available_cluster 2AE8  
                        __write_value_to_offset@buffer 0062  
                               __get_item@value_string 0062  
                           __end_ofi2__i2c_eeprom_busy 5C98  
                        __size_of__display_padded_itoa 00E2  
                      __end_of__parse_set_manual_speed 4012  
                      __size_of__flash_write_to_buffer 0052  
                             ??_USBStdGetStatusHandler 0001  
                        __write_value_to_offset@offset 0060  
                                       ?_USBDeviceInit 0001  
                                    __flash_get_status 58C4  
                 __make_cluster_chain@sector_in_buffer 00A6  
                     __fat_offset_from_cluster@cluster 0060  
                    motor_speed_from_index@speed_index 009D  
                                        __CFG_PLLDIV$2 000000  
                                 _configFile_used_name 02D0  
                           __end_of_motor_speed_lookup 9461  
                                    ?_motor_move_steps 008C  
                        i2c_display_write_fixed@length 0067  
                                                l20070 DDC4  
                                                l20080 44C8  
                                                l20074 4442  
                                                l13116 EA96  
                                                l20076 4458  
                                                l20068 DCAC  
                                                l13038 48F4  
                                                l20078 44B2  
                                                l12094 0C8C  
                                                l14044 4096  
                                                l15016 1F0C  
                                                l15050 1FB8  
                                                l12708 0F38  
                                                l14270 D8BA  
                                                l13376 EF12  
                                                l16204 44D6  
                                                l13808 C758  
                                                l16128 E4E2  
                                                l16148 E58C  
                                                l16262 04C6  
                                                l16414 32D2  
                                                l17072 DDFC  
                                                l16088 412E  
                                         spi_tx@length 0062  
                                                l17250 0AFE  
                                                l15626 2756  
                                                l16434 3C56  
                                                l17180 57BC  
                                                l18134 4B7E  
                                                l13974 2B0C  
                                                l16544 309C  
                                                l16448 3C9E  
                                                l18138 4B9C  
                                                l16396 327E  
                                                l17542 53F0  
                                                l16734 F6F4  
                                                l13998 2BAC  
                                                l16770 F7E8  
                                                l16754 F756  
                                                l14986 5B5E  
                                                l17548 53FC  
                                                l17662 EDB0  
                                                l17578 102A  
                                                l17668 EDE0  
                                                l16986 59C8  
                                                l17954 FE16  
                                                l17982 FE78  
                                        ___fltol@sign1 0068  
                                                l18784 A4CE  
                                motor_move_steps@speed 0090  
                                      __end_of___aldiv 2C84  
                                                l18798 A51C  
                                   ?__flash_get_status 006C  
                                       ??_display_init 0081  
                                                ?_atoi 0066  
                                      __end_of___almod 33BA  
                                                ?_atol 006C  
                                      __end_of___fladd D068  
                                                ?_main 0001  
                  __end_of_initial_speed_manual_string A212  
                          _initial_speed_manual_string A1FD  
                                      __end_of___fldiv D8E4  
                                                ?_itoa 0070  
                                      __end_of___flneg 59BE  
                                                STR_10 A320  
                                                ?_ltoa 007A  
                                                STR_11 A320  
                                                STR_12 A320  
                                                STR_13 A320  
                                                STR_14 A320  
                                                STR_15 A30B  
                                                STR_16 A317  
                                                STR_17 A33F  
                                                STR_18 A2FE  
                                      __end_of___flmul CD2C  
                                     ??__display_clear 0060  
                                      _cw_limit_string A2D1  
                    __size_of_USBCtrlEPServiceComplete 00FA  
                                      __end_of___fltol 2504  
                                      __end_of___lldiv 3F8E  
                                                ?_utoa 0067  
                                                u11000 5568  
                     MSDCheckForErrorCases@DeviceBytes 006A  
                                                u10125 41BC  
                                                u10215 4BF2  
                                                u11120 4916  
                                                u10235 431A  
                                                u11127 490C  
                                                u20007 4D64  
                                                u10360 0DC4  
                                                u11145 E90A  
                                                u11500 47A8  
                                                u10710 0F7E  
                                                u11255 D096  
                                                u11408 D2BA  
                                                u14000 D5E6  
                                                u11409 D2CE  
                                      __end_of___llmod 4758  
                               __end_of_USBDeviceTasks 01AE  
                                                u10810 58A8  
                                                u11338 D1A2  
                                                u13050 D824  
                                                u14010 D5F2  
                                                u11506 47AA  
                                                u11450 4764  
                                                u11339 D1B6  
                                                u10740 0F98  
                                                u10820 5874  
                                                u11380 D2AC  
                                                u12500 C954  
                                                u11460 4772  
                                                u11198 E98C  
                                                u11390 D2AE  
                                                u11278 D0CE  
                                                u11470 4780  
                                                u11199 E9A0  
                                                u11279 D0E2  
                                                u11640 EE92  
                                                u10760 0FB2  
                                                u12408 C7AC  
                                                u13240 CC6E  
                                                u13400 24DC  
                                                u13080 D87A  
                                                u11480 478E  
                                                u12409 C7C0  
                                                u11730 EF0E  
                                                u13090 D89E  
                                                u14130 1FAE  
                                                u11490 479C  
                                                u11458 4768  
                                                u11740 EF26  
                                                u10780 0FC6  
                                                u12460 C8B4  
                                                u15020 0826  
                                                u13180 CA68  
                                                u14140 1FB8  
                                                u12700 467E  
                                                u14060 5B7E  
                                                u12620 2B6C  
                                                u11468 4776  
                                                u14205 E326  
                                                u12470 C8C6  
                                                u12390 C788  
                                                u12358 C67C  
                                                u13270 CCC4  
                                                u13190 CBDE  
                                                u11478 4784  
                                                u12359 C690  
                                                u11575 4AE4  
                                                u12368 C6B0  
                                                u15008 07F4  
                                                u13280 CCE2  
                                                u13360 2464  
                                                u12720 40BC  
                                                u11840 3F3E  
                                                u12640 2BAC  
                                                u11488 4792  
                                                u12369 C6C4  
                                                u15009 0808  
                                                u11585 5B98  
                                                u15034 083E  
                                                u10970 5000  
                                                u14170 427E  
                                                u11498 47A0  
                                                u15035 0838  
                                                u13195 CBD4  
                                                u14260 FD16  
                                                u15044 0878  
                                                u12660 3616  
                                                u14180 E28E  
                                                u15045 0872  
                                                u13365 245A  
                                                u15141 5130  
                                                u15125 4E44  
                                                u15230 E4F6  
                                                u11870 4714  
                                                u13480 03F0  
                                                u15240 E56C  
                                                u14360 4B60  
                                                u14185 E282  
                                                u14290 FBC4  
                                                u14610 CE32  
                                                u15170 417C  
                            ?_USBCtrlEPServiceComplete 0001  
                                                u15084 08D6  
                                                u15068 08A0  
                                                u14620 CE42  
                                                u17020 5430  
                                                u13900 D404  
                                                u15420 1778  
                                                u15085 08D0  
                                                u15069 08B6  
                                                u14630 CE44  
                                                u16150 3360  
                                                u15270 E5A0  
                                                u15430 17AA  
                                   ??_motor_move_steps 0093  
                                                u16320 DDF6  
                                                u15280 E5FA  
                                                u13920 D47E  
                                                u15440 17C4  
                                                u15425 176E  
                                                u16090 2C1E  
                                                u13930 D4A8  
                                                u13850 3164  
                                                u15610 3308  
                                                u15435 17A0  
                                                u16340 DE2C  
                                                u14820 CFD2  
                                                u14660 CE86  
                                                u18100 B2FC  
                                                u13940 D4B4  
                                                u15380 048E  
                                                u13860 3184  
                                                u16510 DFD8  
                                                u18110 B32E  
                                                u17150 ED3E  
                                                u13950 D4E0  
                                                u15630 3C80  
                                                u17080 51F4  
                                                u15800 F73C  
                                                u15385 0484  
                                                u17330 FE3A  
                                                u15490 E0DA  
                                                u15650 3CC8  
                                                u18140 B366  
                                                u13980 D56A  
                                                u15580 32B4  
                                                u14870 D028  
                                                u14790 CFBA  
                                                u17190 2F98  
                                                u18150 B398  
                                                u15495 E0D0  
                                                u17360 FEDC  
                                                u15840 F7D4  
                                                u15690 30CC  
                                                u18410 B5B6  
                                                u15755 05A8  
                                                u18411 B5B4  
                                                u17710 3530  
                                                u17800 B024  
                                                u17730 3544  
                                      __end_of___lwdiv 5030  
                                                u19340 3A36  
                                                u18390 B560  
                                                u17910 B12C  
                                                u17830 B05C  
                                                u18720 EC44  
                                                u18800 A4FE  
                                                u17920 B15C  
                                                u17840 B08C  
                                                u18730 EC54  
                         __flash_write_to_buffer@start 0073  
                                                u18740 EC6A  
                                                u16981 F556  
                                                u18750 EC7A  
                                                u17950 B194  
                                                u17870 B0C4  
                                                u17790 AFF4  
                                                u17960 B1C4  
                                                u17880 B0F4  
                          __size_of_motor_change_speed 000A  
                                      __end_of___lwmod 5590  
                                                i2l300 3696  
                                                i2l220 3880  
                                                i2l214 2CCC  
                                                i2l222 3896  
                                                i2l231 1B88  
                                                u19967 5142  
                                                i2l232 1B32  
                                                i2l160 00B8  
                                                i2l321 39EA  
                                                i2l145 01F4  
                                                u19977 5156  
                                                i2l250 2998  
                                                i2l226 3C1A  
                                                i2l322 39E4  
                                                i2l162 00DE  
                                      __end_of_dc_arc1 9F2E  
                                                i2l307 55D0  
                                                i2l315 581A  
                                                i2l147 021C  
                                                i2l155 007E  
                                                u19987 4D48  
                                      __end_of_dc_arc2 9EDE  
                                                i2l340 2D80  
                                                i2l260 1246  
                                                i2l332 4952  
                                                i2l180 56EC  
                                                i2l236 1BB2  
                                                i2l308 55CE  
                                                i2l316 5818  
                                                i2l172 016C  
                                                i2l164 00F4  
                                                i2l156 008E  
                                        __CFG_WDTEN$ON 000000  
                                                i2l253 2A10  
                                                i2l245 2966  
                                                i2l341 2D84  
                                                i2l261 1224  
                                                i2l149 0254  
                                                i2l165 0100  
                                                i2l157 0096  
                                                u19997 4D5A  
                                                i2l254 29D8  
                                                i2l342 2E02  
                                                i2l334 499C  
                                                i2l174 018A  
                                                i2l166 0128  
                                                i2l247 2970  
                                                i2l343 2DC8  
                                                i2l263 12BA  
                                                i2l167 0132  
                                                i2l159 00AC  
                                                i2l264 12A0  
                                                i2l184 1630  
                                                i2l192 1572  
                                                i2l432 291E  
                                                i2l280 0A2C  
                                                i2l272 262A  
                                                i2l360 27BC  
                                                i2l176 01A6  
                                                i2l249 29D0  
                                                i2l345 2DE8  
                                                i2l425 28BC  
                                                i2l281 0928  
                                                i2l361 27CE  
                                                i2l169 0144  
                                                i2l186 165A  
                                                i2l426 288C  
                                                i2l274 269E  
                                                i2l362 27D4  
                                                i2l179 56DE  
                                                i2l283 093A  
                                                i2l355 282C  
                                                i2l188 16D8  
                                                i2l436 28DE  
                                                i2l428 28CE  
                                                i2l372 D904  
                                                i2l284 09C4  
                                                i2l364 27DA  
                                                i2l356 27A8  
                                                i2l437 28F4  
                                                i2l429 28AA  
                                                i2l381 DA5C  
                                                i2l373 D90A  
                                                i2l293 36D2  
                                                i2l365 27F6  
                                                i2l534 11EE  
                                                i2l438 28FE  
                                                i2l550 2F46  
                                                i2l286 09CA  
                                                i2l294 3668  
                                                i2l366 280E  
                                                i2l358 27B0  
                                                i2l535 115A  
                                                i2l439 2914  
                                                i2l391 DAE8  
                                                i2l383 DA26  
                                                i2l375 D972  
                                                i2l287 0A20  
                                                i2l359 27B6  
                                                i2l384 DA42  
                                                i2l537 11E6  
                                                i2l545 2F78  
                                                i2l393 DB3A  
                                                i2l377 D9BA  
                                                i2l289 0A26  
                                                i2l297 36E8  
                                                i2l562 2F4C  
                                                i2l546 2EE0  
                                                i2l386 DAA8  
                                                i2l298 3678  
                                                i2l387 DAB4  
                                                i2l379 D9DC  
                                                i2l299 367C  
                                                i2l900 503E  
                                                i2l820 3E86  
                                                i2l388 DB2E  
                                                i2l821 3E8E  
                                                i2l822 3E96  
                                                i2l904 5050  
                                                i2l816 3EB8  
                                                i2l824 3EA0  
                                                i2l906 505C  
                                                i2l826 3EAA  
                                                i2l780 4EFC  
                                                i2l783 4F32  
                                                _UADDR 000F38  
                                                i2l897 506E  
                                                i2l898 5034  
          __end_of_motor_calculate_position_in_degrees 2426  
         __size_of_motor_calculate_position_in_degrees 00DE  
                 ?_motor_calculate_position_in_degrees 0001  
                ??_motor_calculate_position_in_degrees 0091  
                  _motor_calculate_position_in_degrees 2348  
                                      __end_of_dc_main A0BE  
                                                _TMR0H 000FD7  
                                                _TMR0L 000FD6  
                                                _PORTA 000F80  
                                                _PORTE 000F84  
                                                _RPOR4 000EC4  
                                     ??__display_start 007C  
                          __motor_move_steps@direction 008B  
                      __end_of__motor_schedule_command 1ED4  
                                                _USTAT 000F64  
                                      __end_of_dc_zero 9E8E  
                           ?__motor_calculate_distance 0060  
                                     __i2c_read@length 0067  
                                 _beep_duration_string A290  
                          ?_ExternalFlash_CapacityRead 0060  
                                      ?_display_update 0001  
                             __find_nth_cluster@offset 009B  
                   __size_of_USBCtrlEPAllowStatusStage 00C4  
                                      _i2c_eeprom_read 4E32  
                                  ___lmul@multiplicand 0064  
                               __motor_move_back_forth 3464  
                            __end_of__find_nth_cluster 365C  
                             __find_nth_cluster@sector 009F  
                                     __end_of_MSDTasks E03A  
                                           i2memcpy@d1 0001  
                                       __CFG_FCMEN$OFF 000000  
                                      __read_fat@value 0095  
                                   _USBCheckMSDRequest 2ECC  
                                           i2memcpy@s1 0003  
                      __end_of_USBCtrlEPAllowDataStage 38CA  
            motor_divide_jump@target_position_in_steps 009F  
                                                _sd000 A2FA  
                               __write_value_to_offset 5826  
                                                _sd001 A0FE  
                                                _sd002 A132  
                                                _sd003 A1A1  
                       ?_USBIncrement1msInternalTimers 0001  
                       __size_of_MSDTransferTerminated 0056  
                                  ??__flash_get_status 006E  
                __i2c_display_send_init_sequence@F7090 02BF  
                        __end_of_MSDTransferTerminated 4F34  
                                         _gblCBWLength 0151  
                                           i2memset@p1 0001  
                               ?_MSDCheckForErrorCases 006A  
                                ??__system_timer0_init 0060  
                                 _use_ccw_limit_string A282  
                               _configFile_readDefault 437A  
                                      __end_of_isdigit 5D48  
                                i2USBStallEndpoint@dir 0001  
                               __end_of_ResetSenseData 4880  
                                                atoi@a 006B  
                                                atol@a 0075  
                                                atol@c 0079  
                                                atoi@s 0066  
                                                atol@s 006C  
                              __end_of__backlight_init 5F84  
                                      __motor_run@type 0066  
                                                _ultoa 181A  
                             __parse_command_long@data 00A0  
                            __data_sector_from_cluster 5EB2  
                            fat_get_format_status@cntr 008D  
                      __end_of_motor_postscaler_lookup 9A16  
                       __end_of_motor_prescaler_lookup 9DE4  
                                                pclath 000FFA  
                           __end_of__display_itoa_long 10E8  
                                                tablat 000FF5  
                           i2__i2c_write@slave_address 0009  
                            __size_of_USBStallEndpoint 010A  
                                  ?_USBCheckMSDRequest 0001  
                                      _MSDCommandState 0155  
                          ??_ExternalFlash_SectorWrite 008D  
                                                plusw1 000FE3  
                                                plusw2 000FDB  
                                          ?_USBMSDInit 0001  
             ExternalFlash_WriteProtectStateGet@config 0060  
                                                ttemp5 0060  
                                                ttemp6 0063  
                                                ttemp7 0067  
                                                utoa@c 006F  
                                                utoa@v 006D  
                                                status 000FD8  
                          ?__flash_copy_page_to_buffer 0073  
                                    __CFG_DSWDTPS$8192 000000  
                                                wtemp8 0060  
                             __end_ofi2_ResetSenseData 48E2  
                                      __end_of_stricmp 4B6C  
                                      __end_of_strncmp 4114  
                                      __end_of_toupper 5E66  
                                     __end_ofi2_memcpy 4AB8  
                                     __end_ofi2_memset 5B2E  
                       ??_MSDComputeDeviceInAndResidue 0062  
                                 __size_of__parse_item 03F6  
                                       _MSDReadHandler E8DC  
          i2c_display_program_custom_character@address 007F  
                                  __steps_from_degrees F04C  
                         __size_of_USBStdSetCfgHandler 00DE  
                    fat_create_file@number_of_clusters 00B8  
                        ??i2_ExternalFlash_MediaDetect 0003  
                          __end_of__make_cluster_chain D62A  
                    __make_cluster_chain@first_cluster 0095  
                                      __initialization 3A90  
                         ?_motor_decrease_manual_speed 0001  
                        fat_read_from_file@file_number 00D7  
                            __end_of__flash_get_status 58F8  
                         fat_get_file_information@data 008F  
                          fat_read_from_file_fast@data 00A9  
              __end_ofi2_ExternalFlash_MediaInitialize 5E4E  
             __size_ofi2_ExternalFlash_MediaInitialize 001A  
                __end_of_ExternalFlash_MediaInitialize 5D8C  
               __size_of_ExternalFlash_MediaInitialize 0022  
                    ??i2_ExternalFlash_MediaInitialize 0003  
                     ?i2_ExternalFlash_MediaInitialize 0001  
                      i2_ExternalFlash_MediaInitialize 5E34  
                        _ExternalFlash_MediaInitialize 5D6A  
                 __offset_from_file_number@file_number 0062  
                                          _system_init 06AE  
        __motor_decide_direction@distance_to_limit_ccw 0086  
                              __end_of_fat_resize_file 181A  
                                         __end_of_atoi 2798  
                                         __end_of_atol 1A14  
                                         __end_of_main 3A90  
                                         __end_of_itoa 554C  
               __end_of__ic2_display_set_ddram_address 5CE0  
              __size_of__ic2_display_set_ddram_address 0024  
                       __ic2_display_set_ddram_address 5CBC  
                                         __end_of_ltoa 4FDC  
                      __end_of_i2c_display_write_fixed 4F88  
                                         __end_of_utoa 3464  
                        fat_read_from_file_fast@length 00A5  
                        fat_read_from_file_fast@offset 00BF  
                             __parse_command_short@cmd 009E  
                   fat_read_from_file_fast@read_length 00C3  
                                     __end_of_i2c_init 5DE6  
                           __display_signed_itoa@value 008F  
                        fat_read_from_file_fast@sector 00BB  
                             __end_of__i2c_acknowledge 5F3A  
                          configFile_write@file_number 00E4  
                           __size_of_motor_divide_jump 00B8  
                         __motor_run@distance_in_steps 0060  
                       ??__encoder_next_setup_stepsize 0062  
                                 ??_USBCheckMSDRequest 000C  
                    __fill_buffer_get_status@outBuffer 006B  
                                 _adc_read_temperature EAC6  
                                       __CFG_OSC$HSPLL 000000  
               MSDComputeDeviceInAndResidue@DiExpected 0060  
                              _USBCheckMSDRequest$2534 000C  
                              _USBCheckMSDRequest$2535 000E  
                            __size_of_USBCtrlEPService 0098  
                 __end_of_motor_divide_jump_to_nearest F9D4  
                __size_of_motor_divide_jump_to_nearest 015C  
                         _motor_divide_jump_to_nearest F878  
                                         __get_fbr@idx 0060  
                                    ?i2__i2c_wait_idle 0001  
                                               ??_atoi 0068  
                                               ??_atol 0070  
                                 api_prepare@outBuffer 0072  
                                               ??_main 00FD  
                                     __end_of__i2c_get 5F30  
                                               ??_itoa 0076  
                                               ??_ltoa 0082  
                                   USBStallEndpoint@ep 0065  
                                               ??_utoa 006D  
                                        __activetblptr 000003  
                                      ?_USBDeviceTasks 0001  
        __motor_decide_direction@distance_to_target_cw 008A  
                             _fat_get_file_information 420C  
                                   __write_root@offset 008C  
                                         __get_mbr@idx 0060  
           __end_of_ExternalFlash_WriteProtectStateGet 5F88  
          __size_of_ExternalFlash_WriteProtectStateGet 0004  
                 ??_ExternalFlash_WriteProtectStateGet 0062  
                  ?_ExternalFlash_WriteProtectStateGet 0060  
                   _ExternalFlash_WriteProtectStateGet 5F84  
                                  __find_nth_cluster@n 0099  
                                          ?_USBSuspend 0001  
                                   __write_root@sector 008A  
                                   ??i2__i2c_wait_idle 0001  
                                 __size_of_api_prepare 00DE  
                                _motor_final_stepcount 0115  
                             __steps_from_degrees@temp 0095  
                                 ?__steps_from_degrees 0091  
                        __get_available_cluster@offset 0091  
                                   _motor_items_in_cue 5F10  
                          __motor_move_steps@overshoot 0083  
                        __get_available_cluster@sector 0093  
                              motor_move_endless@speed 008C  
                        __flash_write_to_buffer@buffer 0079  
                              __end_of_USBDeviceAttach 595E  
                               __flash_write_to_buffer 5084  
               __end_of__ic2_display_set_cgram_address 5B58  
              __size_of__ic2_display_set_cgram_address 002A  
                       __ic2_display_set_cgram_address 5B2E  
                                     ___llmod@dividend 0060  
                                               _ADRESH 000FC4  
                                               _ADRESL 000FC3  
                     __end_of__fat_offset_from_cluster 5E1A  
                                               _CCPR1L 000FBB  
                                     _ccw_limit_string A2C7  
                                               _EECON2 000FA7  
                                               _DMABCH 000F66  
                                               _DMABCL 000F67  
                                      ?_ResetSenseData 0001  
                          ??__get_available_root_entry 0095  
                                               ?_ultoa 006D  
                                           __i2c_start 5F60  
                               SYSTEM_Initialize@state 0064  
                                           __i2c_write 5176  
                          motor_move_endless@direction 008E  
                                     __end_of_adc_init 4D2A  
                                               i2l1211 406E  
                                               i2l1212 403E  
                            fat_read_from_file@cluster 00D9  
                                               i2l1143 5F6A  
                                  ?_motor_items_in_cue 0001  
                                               i2l1128 5F72  
                                               i2l1160 54B6  
                                               i2l1161 549A  
                                               i2l1066 5774  
                                               i2l2581 B842  
                                               i2l2590 BB52  
                                               i2l2582 B89C  
                                               i2l2750 1C7A  
                                               i2l2583 B8CC  
                                               i2l2576 B808  
                                               i2l2760 1CEA  
                 __flash_write_page_from_buffer@buffer 0075  
                                               i2l2593 BC90  
                                               i2l2585 BBA2  
                                               i2l2753 1C34  
                                               i2l2578 B840  
                                               i2l2763 1CA4  
                                               i2l3812 4AA6  
                                               i2l2588 B9CC  
                                               i2l2756 1C56  
                                               i2l3813 4A6E  
                                               i2l2597 BD4C  
                                               i2l2589 BA20  
                                               i2l2766 1CC6  
                                               i2l2758 1C6C  
                                               i2l2759 1C74  
                                               i2l2768 1CDC  
                                               i2l2769 1CE4  
                                               i2l3818 5B1C  
                                               i2l3819 5B0C  
                      ??_APP_DeviceCustomHIDInitialize 000D  
                             ?__fill_buffer_get_status 006B  
                                     __end_of__get_fbr DDD4  
                                     __end_of__get_mbr 2AE8  
                                               _OSCCON 000FD3  
                          __flash_partial_read@address 0083  
                       ??__display_position_in_degrees 0064  
                                       __CFG_WDTPS$512 000000  
                                               _RPOR21 000ED5  
                                               _RPOR23 000ED7  
                                       __CFG_WPCFG$OFF 000000  
                                __display_itoa@missing 00B5  
                               __end_of_MSDReadHandler EAC6  
                                    __spi_init@details 0060  
                              i2c_eeprom_write@address 000B  
                                     __end_of___xxtofl 0438  
                             i2USBTransferOnePacket@ep 0009  
                                     ??__i2c_wait_idle 0060  
                                    ??i2_USBDeviceInit 0009  
                               ?_display_get_character 0060  
                                     ?_display_prepare 0001  
                      __size_ofi2_USBTransferOnePacket 0102  
                         ?__divide_jump_size_decrement 0001  
                              ?_motor_speed_from_index 009D  
                          __flash_partial_read@command 007F  
                                       __CFG_WPDIS$OFF 000000  
                             __motor_distance_to_limit FF20  
                                     _configFile_write C1FC  
                                     __read_fat@offset 0093  
                                     __end_of_fat_init 5EB2  
                                     __read_fat@sector 0091  
                                    _shortPacketStatus 0163  
                     __end_of_initial_speed_arc_string A25E  
                                       __CFG_XINST$OFF 000000  
                                     _i2c_eeprom_write 4012  
                                     ?_fat_modify_file 00A1  
                             __size_of_configFile_read 01A4  
                                  _motor_current_speed 00FE  
                                      USBDeviceTasks@i 001F  
                                          i2memcpy@tmp 000B  
                                         _CCPTMRS0bits 000F52  
        __parse_jump_steps_with_overshoot@return_value 009B  
                                    _motor_process_cue 36FC  
                          USBStdFeatureReqHandler@pUEP 0019  
                             USBTransferOnePacket@data 0061  
                           USBCtrlTrfInHandler@lastDTS 0002  
                                 __size_of_encoder_run 00F4  
                         __end_of__flash_set_page_size 4540  
                                               ___flge 0B6E  
                                      ??_USBDeviceInit 0068  
                   __flash_copy_page_to_buffer@command 0079  
                             flash_partial_read@length 008B  
                                               ___lmul 4D82  
                              __end_of_cw_limit_string A2DA  
                                               _gblCBW 0200  
                                            ??___aldiv 0068  
                             ?_motor_clear_command_cue 0001  
                                    _fat_get_file_size 4286  
                                            ??___almod 0068  
                                   __size_of__i2c_read 0094  
                                            ??___fladd 0084  
                                               ___wmul 5BFC  
                                   __size_of__i2c_send 000A  
                                            ??___fldiv 0080  
                                            ??___flneg 007C  
                                       __CFG_STVREN$ON 000000  
                       __read_value_from_offset@buffer 0062  
                                            ??___flmul 0080  
                                   __size_of__i2c_stop 0008  
                                            ??___fltol 0064  
                        ??_motor_decrease_manual_speed 0064  
                                            ??___lldiv 0068  
                                            ??___llmod 0068  
          i2SYSTEM_Initialize@pll_startup_counter_3143 0003  
            SYSTEM_Initialize@pll_startup_counter_3143 0062  
                                            ??___lwdiv 0064  
                                   ?_motor_process_cue 0001  
                         __size_of_flash_partial_write 006C  
                                           _SoftDetach 0150  
                                            ??___lwmod 0064  
                                               _config 0195  
                                               _buffer 0A00  
                                    _USBEnableEndpoint 56CE  
                       __read_value_from_offset@offset 0060  
                      __size_of_USBStdGetStatusHandler 00A0  
                                ?_adc_read_temperature 0001  
                                 ??_motor_items_in_cue 0060  
                            _configFile_used_extention 02E0  
                                               _memcpy 48E2  
                                   ?_fat_get_file_size 0095  
                                               _memset 59BE  
                     __end_of__sector_from_file_number 598E  
                              __end_of_i2c_eeprom_read 4E88  
                                               _params 0231  
                                               clear_0 3AD8  
                                               clear_1 3AEA  
                                               clear_2 3AF6  
                                               clear_3 3B02  
                                               clear_4 3B14  
                            _ExternalFlash_SectorWrite 585C  
                                    api_parse@inBuffer 00A7  
                                      __CFG_CLKOEC$OFF 000000  
                                     __end_of_inq_resp A184  
                                     __motor_run@speed 0064  
                                 __end_of_encoder_init 5CBC  
                                               _spi_tx 4C20  
                                   ?_USBEnableEndpoint 0009  
                           ??_i2c_eeprom_save_position 0026  
                                   _flash_partial_read 5C4C  
               __make_cluster_chain@number_of_clusters 0097  
                                               _tx_buf 02C8  
                                i2c_display_init@F7093 02B6  
                                               _strlen 5654  
                              _motor_current_stepcount 0119  
                           __parse_command_long@length 00A6  
             i2c_display_program_custom_character@cntr 0080  
                              motor_set_zero@direction 006A  
                                     __end_of_tmr0_isr 577E  
                        __size_of_USBTransferOnePacket 0106  
                                  __size_of_USBMSDInit 010E  
                 __size_of_i2c_eeprom_recover_position 005C  
                          i2c_display_write_fixed@data 0065  
                        ?_motor_divide_jump_to_nearest 0001  
                               __size_of__flash_wakeup 0058  
                                               itoa@cp 0076  
                                  ??_motor_process_cue 006C  
                                ??__steps_from_degrees 0095  
                        __size_of__display_signed_itoa 0044  
                                            ??_isdigit 0060  
                    i2c_eeprom_recover_position@buffer 0079  
                           __end_of_motor_steps_lookup 982F  
                                __end_of_fat_find_file 1FBC  
                 __size_of__motor_get_speed_in_degrees 013A  
                              ?_motor_set_manual_speed 0062  
                                               ltoa@cp 0082  
                       __parse_command_long@out_buffer 00A2  
                                  ??_fat_get_file_size 0099  
                        __size_of__parse_command_short 015C  
                     __size_of__read_value_from_offset 0048  
                     __size_of_fat_read_from_file_fast 0226  
                         ?__divide_jump_size_increment 0001  
                                         __mediumconst 9092  
                           __size_of__find_nth_cluster 00A6  
                                               tblptrh 000FF7  
                                               tblptrl 000FF6  
                                               tblptru 000FF8  
                                     __end_of_spi_init 5614  
                     __size_of_APP_DeviceMSDInitialize 0010  
                                      _motor_direction 0148  
                      ??__flash_compare_page_to_buffer 0076  
                                  ??_USBEnableEndpoint 000A  
                                  ?_flash_partial_read 0087  
                                     _i2c_display_init 5126  
                                               ultoa@c 0079  
                                        spi_tx_rx@data 0064  
                    __size_of__fat_sector_from_cluster 001A  
                                               ultoa@v 0075  
                           __end_of__root_is_available 4686  
                            ?__fat_sector_from_cluster 0060  
                                        spi_tx_tx@data 0064  
                                            ??_stricmp 0065  
                                motor_goto_steps@speed 0096  
                                          _CtrlTrfData 000D38  
                                    __system_pin_setup 4686  
                                            ??_strncmp 0066  
                                            ??_toupper 0060  
                                   __size_of__add_item 00FA  
                                 __size_of__write_root 004C  
                                     ?__backlight_init 0001  
                    i2ExternalFlash_MediaDetect@config 0001  
                      ExternalFlash_MediaDetect@config 0060  
                                 _controlTransferState 0162  
                           ??_APP_DeviceCustomHIDTasks 00B2  
                                           ___flge@ff1 0078  
                                           ___flge@ff2 007C  
                                 __CFG_LS48MHZ$SYS48X8 000000  
                                         ___xxtofl@arg 0074  
                                         ___xxtofl@exp 0073  
                                    _SYSTEM_Initialize 4B6C  
                                         ___xxtofl@val 006A  
                                fat_modify_file@length 00A5  
                                   ?__system_pin_setup 0001  
                                fat_modify_file@offset 00BB  
                             __end_of__i2c_eeprom_busy 5BD4  
                                           __accesstop 0060  
                              __end_of__initialization 3B1A  
                       __end_of_motor_speed_from_index 5E7C  
                                fat_modify_file@sector 00B5  
                    MSDCheckForErrorCases@MSDErrorCase 006F  
                                           ___flneg@f1 0078  
                                      ?_MSDReadHandler 0001  
                                         ?i2__i2c_send 0001  
                         fat_resize_file@first_cluster 00B8  
                                         ?i2__i2c_stop 0001  
                                 __end_of_display_init 5744  
                                   ?_SYSTEM_Initialize 0001  
                               __size_of__display_itoa 0224  
                                        ___rparam_used 000001  
        motor_isr@steps_until_standstill_if_accelerate 003F  
                             __size_of_USBStallHandler 0044  
                                           ___fltol@f1 0060  
                         __end_of__i2c_not_acknowledge 5F26  
                      ExternalFlash_SectorWrite@config 0084  
                      ExternalFlash_SectorWrite@buffer 008A  
                            __end_of_motor_process_cue 3796  
                          __end_of__parse_command_long 3E84  
                                   __size_of__get_date 000C  
                            __end_of_fat_get_file_size 4300  
                                   __size_of__get_item 018A  
                                  __size_of_USBSuspend 0030  
                                   __size_of__get_time 000C  
                                  ??__system_pin_setup 0060  
                                  _motor_maximum_speed 0131  
                                 ??_flash_partial_read 008F  
                  __end_of_motor_increase_manual_speed 5E34  
                          _motor_increase_manual_speed 5E1A  
                                       __pcstackCOMRAM 0001  
                           __size_of__flash_get_status 0034  
                            __end_of_USBEnableEndpoint 570A  
                  __size_of_ExternalFlash_CapacityRead 0014  
                                        __end_of_sd000 A2FE  
                                        __end_of_sd001 A132  
                                        __end_of_sd002 A160  
                                        __end_of_sd003 A1BB  
                                            ?_MSDTasks 0001  
                                         __pidataBANK2 5306  
                                         __pidataBANK4 50D6  
                             __parse_item@value_string 009B  
                                     ?_fat_resize_file 00AC  
                                  ??_SYSTEM_Initialize 0060  
                            __get_available_root_entry 5B58  
                 ExternalFlash_SectorWrite@sector_addr 0086  
                      __end_of_bit_pattern_verticalbar A2F2  
                     __size_of_USBCtrlEPAllowDataStage 009A  
                                   __size_of__read_fat 0058  
                                      _active_protocol 01C0  
                                  i2USBStallEndpoint@p 0007  
                        __size_of_USBConfigureEndpoint 0094  
                   __size_of_ExternalFlash_MediaDetect 000A  
                          __end_of_USBCtrlTrfInHandler 2E0C  
                                        __end_of_ultoa 1918  
                                  display_prepare@cntr 00D3  
                                  display_prepare@temp 00C8  
                                         _gblSenseData 021F  
                          motor_change_speed@new_speed 0060  
                                      _MSDErrorHandler 0DAA  
                       ?_ExternalFlash_MediaInitialize 0060  
                 __sector_from_file_number@file_number 0062  
                               i2_USBTransferOnePacket 161A  
                       __end_of_motor_set_manual_speed 5306  
                                   __size_of_api_parse 012A  
                      ??__motor_steps_from_degrees_int 0095  
                                      _motor_move_type 0149  
                                   _motor_move_endless 5A7A  
                                   _flash_sector_write 5216  
                                           _dc_divide1 9F7E  
                                           _dc_divide2 9F2E  
                                   _fat_read_from_file 1FBC  
                                   __size_of__spi_init 0038  
                                            ?i2_memcpy 0001  
                                            ?i2_memset 0001  
                              flash_sector_write@match 0083  
                __end_of_MSDProcessCommandMediaPresent C9DA  
               __size_of_MSDProcessCommandMediaPresent 03EE  
                        _MSDProcessCommandMediaPresent C5EC  
                               flash_partial_read@data 008D  
                            __end_of__system_pin_setup 46F0  
                               flash_partial_read@page 0087  
                 __size_of_motor_decrease_manual_speed 0022  
                             ??_USBCtrlTrfSetupHandler 001E  
                              _USBTicksSinceSuspendEnd 0157  
                       motor_move_degrees_int@distance 0099  
                    __flash_copy_page_to_buffer@buffer 0075  
                                     ?_USBDeviceAttach 0001  
                                  ?_motor_move_endless 008C  
                            __end_of_SYSTEM_Initialize 4BC6  
                                    __end_of__i2c_read 3BB8  
                                    __end_of__i2c_send 5F44  
                               _USBStdGetStatusHandler 365C  
                                  ?_flash_sector_write 007F  
                                  USBStallEndpoint@dir 0060  
                                    __end_of__i2c_stop 5F60  
                                          ?__i2c_start 0001  
                                              ??_ultoa 0075  
                      ?__encoder_next_divide_step_size 0001  
                     ??__encoder_next_divide_step_size 0060  
                                  ?_fat_read_from_file 00C9  
                                          ?__i2c_write 0065  
                        __read_value_from_offset@value 0067  
                                           __pbssBANK0 00FE  
                                           __pbssBANK1 0100  
                                           __pbssBANK2 0200  
                                           __pbssBANK3 0300  
                                           _dc_startup 0400  
       __motor_decide_direction@distance_to_target_ccw 008E  
                     __size_of_i2c_display_write_fixed 0054  
                                     _USBStallEndpoint 1304  
                                           _gblNumBLKS 0240  
                                            ?_i2c_init 0001  
                            _overshoot_in_steps_string A227  
                                     _mediaInformation 0294  
                       __size_of_fat_get_format_status 00AE  
                       fat_get_file_information@offset 0094  
                       __get_available_cluster@cluster 008F  
                        __end_of_fat_get_format_status 330C  
                                        __flash_wakeup 4D2A  
                             __fill_buffer_get_display 3040  
                              ?__get_available_cluster 008B  
                                            ?__i2c_get 0001  
                          __size_of_USBWakeFromSuspend 0038  
                                          _pBDTEntryIn 0109  
                          __size_of_i2c_display_cursor 0022  
                     __end_of_USBCtrlEPServiceComplete 1C08  
                __end_of_APP_DeviceCustomHIDInitialize 592C  
               __size_of_APP_DeviceCustomHIDInitialize 0034  
                        _APP_DeviceCustomHIDInitialize 58F8  
                          MSDTransferTerminated@handle 000C  
                               __motor_move_steps@type 0084  
                   __size_of__data_sector_from_cluster 0010  
                            __size_of_motor_goto_steps 009A  
                     __size_of__motor_decide_direction 0196  
                   ExternalFlash_SectorSizeRead@config 0060  
                                 USBCtrlTrfRxService@i 0001  
                                              ?___flge 0078  
                                              ?___lmul 0060  
                                           ??_MSDTasks 00AC  
                               __display_itoa@decimals 00A1  
                         __parse_jump_steps@out_buffer 0096  
                                 ??_motor_move_endless 008E  
                               ??_adc_read_temperature 0091  
                                              ?___wmul 0060  
                         __end_of_encoder_statemachine B7F6  
                                 ??_flash_sector_write 0083  
                    __size_of__fat_offset_from_cluster 001A  
                       __flash_write_to_buffer@command 007A  
                                 ??_fat_read_from_file 00D3  
                         __size_of__flash_partial_read 007A  
                            ?__fat_offset_from_cluster 0060  
                                    __end_of__add_item 1B0E  
                                            MSDTasks@i 00B1  
                             ??_motor_move_degrees_int 009E  
                                              ?_memcpy 0060  
                                              ?_memset 0060  
                                           __motor_run ECA4  
                                       ___lmul@product 0068  
                                           _device_dsc A270  
                  fat_get_file_information@file_number 0096  
                                     ??_display_update 0070  
                                     ?_i2c_eeprom_read 0071  
                                     _USBCtrlEPService 3962  
                                    ??_configFile_read 01C3  
                                           _ep_data_in 012E  
                                              ?_spi_tx 0060  
                                   __display_clear@col 0063  
                                            ?_adc_init 0001  
            __motor_calculate_distance@target_position 0060  
                              ?__motor_move_back_forth 0001  
                                   __display_clear@row 0062  
                                              ?_strlen 0060  
                                            ?__get_fbr 0060  
                __data_sector_from_cluster@fat_cluster 0060  
                                            ?__get_mbr 0060  
                          __end_of_USBCtrlTrfRxService 1304  
            __ic2_display_set_ddram_address@data_array 006B  
                                        __display_itoa E494  
                              ?__write_value_to_offset 0060  
                                   _USBCheckStdRequest 2798  
                                   __size_of_motor_isr 0610  
                                    _configDescriptor1 A0BE  
                 __size_of__divide_jump_size_decrement 006E  
                                              i2l13006 2970  
                                              i2l20090 3F04  
                                              i2l20088 3ED0  
                                              i2l13506 5B0C  
                                              i2l12590 28A4  
                                              i2l13576 2622  
                                              i2l12954 503E  
                                              i2l12958 505C  
                                              i2l18088 013C  
                              ??_MSDCheckForErrorCases 006E  
                                              i2l19092 B89C  
                                              i2l17910 024C  
                                              i2l19098 B8CC  
                                              i2l16974 4A6E  
                                              i2l17882 01EC  
                                    i2__i2c_write@data 0006  
                                            ?___xxtofl 006A  
                                    i2__i2c_write@cntr 000A  
                              ?_configFile_readDefault 0001  
                          __end_ofi2_SYSTEM_Initialize 5084  
                                           ??i2_memcpy 0007  
                          ??__motor_calculate_distance 0064  
                                           ??i2_memset 0007  
                                           _flash_init 5ED2  
                   __fill_buffer_get_display@outBuffer 0064  
                             ?__parse_set_manual_speed 0064  
                          __end_of_USBCtrlTrfTxService 2A18  
                                    __end_of__get_date 5EF8  
                                  _USBStdSetCfgHandler 25E2  
                                    __end_of__get_item F878  
                                   i2__i2c_eeprom_busy 5C72  
                                    __end_of__get_time 5EEC  
                     __end_of_maximum_speed_arc_string A24C  
                                   __size_of_spi_tx_rx 0098  
                                   __size_of_spi_tx_tx 0090  
                                            ?_fat_init 0001  
                __parse_jump_steps_with_overshoot@data 0094  
                                              _RPINR21 000EFC  
                                              _RPINR22 000EFD  
                                              _SSP1ADD 000FC8  
                        i2c_display_init@init_sequence 006B  
                                    __end_of_dc_manual 9E3E  
                         __end_of__display_padded_itoa 2268  
                                              _SSP1BUF 000FC9  
                                              _RXADDRH 000F68  
                                              _RXADDRL 000F69  
                           __end_ofi2_USBStallEndpoint 161A  
                       ??_motor_divide_jump_to_nearest 009E  
                                              _TXADDRH 000F6A  
                                              _TXADDRL 000F6B  
                                  ?_USBCheckStdRequest 0001  
                         __size_of_USBStdGetDscHandler 012C  
                                   _motor_speed_lookup 9093  
                                 __flash_set_page_size 44D2  
                                    __end_of_dc_setup1 A06E  
                                    __end_of_dc_setup2 A01E  
                                              _UIEbits 000F36  
                         __parse_set_manual_speed@data 0064  
                            __size_of_motor_move_steps 002E  
                                  i2c_eeprom_read@addr 0077  
                           __end_of_APP_DeviceMSDTasks 5EA2  
                                              _UIRbits 000F62  
                                    __end_of__read_fat 4CD2  
                                  i2c_eeprom_read@data 0073  
          MSDCheckForErrorCases@HostMoreDataThanDevice 006E  
                    __size_of__sector_from_file_number 0030  
                __end_of__flash_compare_page_to_buffer 420C  
               __size_of__flash_compare_page_to_buffer 007C  
                        __flash_compare_page_to_buffer 4190  
                                  ?i2__i2c_eeprom_busy 0001  
                                           ??_i2c_init 0060  
                                     __CFG_CFGPLLEN$ON 000000  
                             __i2c_write@slave_address 0068  
                            ?__sector_from_file_number 0060  
                             ?__motor_schedule_command 0060  
                                         ??_USBMSDInit 000C  
                        fat_read_from_file@return_code 00D8  
                                    __read_fat@cluster 008F  
                       __end_of__get_available_cluster 2BB6  
                                       ?__flash_wakeup 0001  
               fat_read_from_file_fast@working_cluster 00BD  
             __encoder_next_arc_step_size@old_stepsize 0060  
                               fat_find_file@extension 008D  
                                    __end_of_api_parse 0B6E  
                                    ?i2_ResetSenseData 0001  
                                           ??__i2c_get 0060  
                                    _MSDProcessCommand 07E4  
                           __display_padded_itoa@value 0078  
                           __size_of_motor_process_cue 009A  
                             fat_find_file@file_number 0091  
                            motor_goto_steps@direction 009D  
                                        __i2c_send@dat 0060  
                  __motor_move_steps@distance_in_steps 007D  
                            __flash_get_status@command 006E  
                                            ?_tmr0_isr 0001  
                                              __Hparam 0000  
                      ??_USBIncrement1msInternalTimers 0001  
                                 ?_USBStdSetCfgHandler 0001  
                           __size_of_fat_get_file_size 007A  
            __end_of__get_available_offset_from_buffer 4A00  
           __size_of__get_available_offset_from_buffer 005E  
                  ??__get_available_offset_from_buffer 0064  
                   ?__get_available_offset_from_buffer 0060  
                    __get_available_offset_from_buffer 49A2  
                                    __end_of__spi_init 57B6  
                          __size_of_USBCheckHIDRequest 00D6  
                                              __Lparam 0000  
                 __size_of__divide_jump_size_increment 0040  
                                   ??i2_ResetSenseData 0001  
                                   __display_itoa@text 00A2  
                             __size_of_fat_create_file 013C  
                                    __end_of_hid_rpt01 A1A1  
                                   ?_MSDProcessCommand 0001  
                              __end_of_MSDErrorHandler 0EC4  
                           _MSDTransferTerminated$2623 000E  
                           __size_of_USBEnableEndpoint 003C  
                                         ?_system_init 0001  
                         __size_of_fat_restore_mbr_fbr 0092  
                             _inverse_direction_string A25E  
                                __size_of_encoder_init 0024  
                           ??_fat_get_file_information 0091  
                                 ??_USBCheckStdRequest 001E  
                                              ___aldiv 2BB6  
                                      __size_of___flge 0122  
                                              ___almod 330C  
                                            ?_spi_init 0001  
                                              ___fladd CD2C  
                        __size_of_USBCtrlTrfOutHandler 0060  
                                   __display_itoa_long 0FDA  
                i2ExternalFlash_MediaInitialize@config 0001  
                  ExternalFlash_MediaInitialize@config 0060  
                                              ___fldiv D62A  
                                     _ToSendDataBuffer 0340  
                                              ___flneg 598E  
                                      __size_of___lmul 0058  
                    __end_of__data_sector_from_cluster 5EC2  
                                              ___flmul C9DA  
                                              ___fltol 2426  
                                              ___lldiv 3F0A  
                             __end_of_ccw_limit_string A2D1  
                                     ??_USBDeviceTasks 001F  
                                      __size_of___wmul 0028  
                                              ___llmod 46F0  
                    __motor_decide_direction@overshoot 0081  
                                              ___lwdiv 4FDC  
                                    ??_USBStallHandler 0001  
                                              ___lwmod 554C  
                                              _dc_arc1 9EDE  
                                              _dc_arc2 9E8E  
       i2c_display_program_custom_character@data_array 0074  
                                              _dc_main A06E  
                       __end_of__motor_move_back_forth 350E  
                                    ?__i2c_acknowledge 0001  
               __ic2_display_set_cgram_address@address 006D  
                           __end_of_motor_change_speed 5F58  
                                 ??i2__i2c_eeprom_busy 0006  
                                              _dc_zero 9E3E  
                                  __size_of__i2c_start 0008  
                              __size_of_motor_arc_move 00E4  
                                              __pcinit 3A90  
                                      __size_of_memcpy 0060  
                                  __size_of__i2c_write 0050  
                                      __size_of_memset 0030  
                             __size_of_MSDWriteHandler 02EC  
                            __end_of_configDescriptor1 A0FE  
                       __end_of__write_value_to_offset 585C  
                                  ??_MSDProcessCommand 00A7  
                  __motor_move_steps@distance_to_limit 0087  
                                              __ramtop 0F00  
                                    __motor_move_steps EE7C  
                         ExternalFlash_SectorRead@page 0093  
                               __display_itoa_u16@text 007A  
                                           ??_adc_init 0060  
                                              __ptext0 39FA  
                                              __ptext1 06AE  
                                              __ptext2 5DAC  
                                              __ptext3 2348  
                                              __ptext4 5DCA  
                                              __ptext5 4A00  
                                              __ptext6 4E32  
                                              __ptext7 3B24  
                                              __ptext8 5F1C  
                                              __ptext9 5F26  
                                       ?__display_itoa 009F  
                                              _inPipes 0053  
                    __size_of_ExternalFlash_SectorRead 0034  
                                      __size_of_spi_tx 005A  
                          _USBDeferOUTDataStagePackets 0158  
                                   ??__i2c_acknowledge 0060  
                                            _T0CONbits 000FD5  
                                           ??__get_fbr 0062  
                       __end_of_configFile_readDefault 43F2  
                                  ?__display_itoa_long 00B7  
                                           ??__get_mbr 0062  
                            ?_ExternalFlash_SectorRead 008B  
              motor_divide_jump@target_divide_position 00A3  
                                 __motor_run@direction 006B  
                                      __size_of_strlen 003E  
                          __end_of__system_timer0_init 5B02  
                              __read_value_from_offset 5434  
                                   ?__motor_move_steps 007D  
                              _fat_read_from_file_fast E26E  
                                         ??_USBSuspend 0018  
                                            _T2CONbits 000FCA  
                                   __end_of_USBMSDInit 11F6  
                                              _isdigit 5D26  
                                     ??_ResetSenseData 0060  
                              ?__flash_write_to_buffer 0073  
                             __end_of_configFile_write C5EC  
                                           ??___xxtofl 006E  
                              _APP_DeviceMSDInitialize 5EC2  
                                              _msd_cbw 000D40  
                                     ___aldiv@dividend 0060  
                                              _msd_csw 000D80  
                                 __i2c_not_acknowledge 5F1C  
                             __offset_from_file_number 5B82  
                             __end_of_i2c_eeprom_write 4094  
                          __display_itoa_long@decimals 00BB  
                                      i2_USBDeviceInit 01AE  
                                     i2USBDeviceInit@i 0009  
                           __size_of__system_pin_setup 006A  
                      ?__ic2_display_set_ddram_address 0001  
                     ??__ic2_display_set_ddram_address 006A  
                                           ??_fat_init 008F  
                    __parse_set_manual_speed@new_speed 006B  
                   __size_of_ExternalFlash_SectorWrite 0034  
                __end_of__motor_steps_from_degrees_int 0DAA  
               __size_of__motor_steps_from_degrees_int 011A  
                        __motor_steps_from_degrees_int 0C90  
                                ?__flash_set_page_size 0001  
                                   __end_of_USB_CD_Ptr 9DEE  
                                           _msd_buffer 000600  
                           ??__motor_distance_to_limit 0070  
                           __size_of_SYSTEM_Initialize 005A  
                      __size_of_USBCtrlTrfSetupHandler 0090  
                                  ??__motor_move_steps 0085  
                                              _stricmp 4B12  
                                __size_of_display_init 003A  
                              __size_of__flash_is_busy 0024  
                         fat_get_file_size@file_number 00A1  
                                              _strncmp 4094  
                                              _toupper 5E4E  
                                  _flash_partial_write 45AE  
                                 end_of_initialization 3B1A  
                  __end_of_maximum_speed_manual_string A1FD  
                          _maximum_speed_manual_string A1E8  
                              ??_display_get_character 0061  
                                _MSDTransferTerminated 4EDE  
                __flash_compare_page_to_buffer@command 007B  
                       ?_MSDProcessCommandMediaPresent 0001  
                                   __end_of_USB_SD_Ptr 9DEC  
                           __end_of_bit_pattern_degree A2EA  
                                  i2__i2c_write@length 0008  
                              __size_of_motor_set_zero 003C  
                            __size_ofi2__i2c_wait_idle 0058  
                                  i2c_eeprom_write@dat 0013  
                                              memcpy@d 0066  
                                              memcpy@n 0064  
                                              memcpy@s 0068  
                                        ??__parse_item 009D  
              __motor_get_speed_in_degrees@speed_index 0091  
                                  _pBDTEntryEP0OutNext 0059  
                            __end_of_MSDProcessCommand 0918  
                                              itoa@buf 0070  
                                              memset@c 0062  
                                              itoa@val 0072  
                                              memset@n 0064  
                                              memset@p 0066  
                                         _encoder_init 5C98  
                                      _USB1msTickCount 0121  
                                 ??__display_itoa_long 00BE  
                                            i2u1110_40 2A02  
                                            i2u1110_47 29F8  
                             __flash_partial_read@data 0079  
                                            i2u1031_48 11A4  
                                            i2u1200_40 2656  
                                            i2u1031_49 11BA  
                                            i2u1033_44 11D8  
                                            i2u1033_45 11D2  
                                            i2u1108_40 29C2  
                                            i2u1204_40 0990  
                                            i2u1108_47 29B8  
                                            i2u1204_47 0986  
                                            i2u1205_40 09C0  
                                            i2u1205_47 09B6  
                                            i2u1029_48 117E  
                                            i2u1029_49 1192  
                             ?_USBStdFeatureReqHandler 0001  
                                            i2u1207_40 0A16  
                                            i2u1207_47 0A0C  
                             __flash_partial_read@page 0073  
                                            i2u1058_40 2F28  
                                            i2u1229_40 DACE  
                                            i2u1510_40 4076  
                        i2c_eeprom_write@slave_address 0024  
                                            i2u1360_40 4DF0  
                                              ltoa@buf 007A  
                                            i2u1361_40 4DFC  
                                            i2u1360_48 4DF2  
                                            i2u1362_40 4E08  
                                            i2u1361_48 4DFE  
                                            i2u1363_40 4E14  
                                            i2u1362_48 4E0A  
                                            i2u1364_40 4E1E  
                                            i2u1363_48 4E16  
                                            i2u1364_46 4E20  
                                            i2u1509_45 401E  
                                              ltoa@val 007C  
                                            i2u1359_40 4DE4  
                                            i2u1359_48 4DE6  
                                            i2u1618_40 4A90  
                                            i2u1618_47 4A86  
                                            i2u1731_40 02B0  
                                    __end_of_motor_isr BE06  
                                            i2u1910_41 B8F4  
                                            i2u1728_40 0210  
                                            i2u1760_40 01AA  
                                            i2u1912_40 B9BC  
                                            i2u1907_41 B82C  
                            __motor_calculate_distance 2268  
                                            i2u1917_40 BBB8  
                                            i2u1918_40 BBD8  
                                ??_USBStdSetCfgHandler 0018  
                      __parse_command_long@out_idx_ptr 00A4  
                                      ___lldiv@divisor 0064  
                                           ??_tmr0_isr 0001  
                                      ___lldiv@counter 006C  
                                 __size_ofi2__i2c_send 0008  
              motor_move_degrees_int@distance_in_steps 009E  
                                 __size_ofi2__i2c_stop 0008  
                         ?_i2c_eeprom_recover_position 0001  
                            motor_goto_steps@overshoot 0098  
                      ?__ic2_display_set_cgram_address 0001  
                     ??__ic2_display_set_cgram_address 006A  
                                   __end_of_USBSuspend 5A1E  
                          __end_of_use_cw_limit_string A2C7  
                                  _motor_period_lookup 9A16  
              __fill_buffer_get_mode_details@outBuffer 0060  
                              _USBCtrlEPAllowDataStage 3830  
                                    __end_of_spi_tx_rx 3962  
                                    __end_of_spi_tx_tx 3D6E  
                             __end_of_i2c_display_init 5176  
                                     ___aldiv@quotient 006A  
                                              postdec1 000FE5  
                                              postdec2 000FDD  
         __make_cluster_chain@different_sector_cluster 009F  
                 __end_of_ExternalFlash_SectorSizeRead 5F04  
                __size_of_ExternalFlash_SectorSizeRead 000C  
                         _ExternalFlash_SectorSizeRead 5EF8  
                                           ??_spi_init 0063  
                                              postinc0 000FEE  
                                              postinc1 000FE6  
                                              postinc2 000FDE  
                                 ?_flash_partial_write 007F  
                            __end_of__motor_move_steps F04C  
                     __size_of__fill_buffer_get_status 0224  
                                              utoa@buf 0067  
                                           _motor_init 5DAC  
              MSDProcessCommandMediaPresent@sectorSize 009E  
                                           _motor_mode 0147  
                             _USBCtrlEPServiceComplete 1B0E  
                                              utoa@val 0069  
                                            _MSD_State 0156  
                                           _motor_stop 5266  
              __end_of__cluster_from_sector_and_offset 5BFC  
             __size_of__cluster_from_sector_and_offset 0028  
                    ??__cluster_from_sector_and_offset 0064  
                     ?__cluster_from_sector_and_offset 0060  
                      __cluster_from_sector_and_offset 5BD4  
                                          ?__motor_run 0060  
                                              strlen@s 0060  
                          __size_of_USBCheckMSDRequest 00BC  
                                        ??_api_prepare 0074  
                      __size_of_motor_move_degrees_int 004A  
                           _USBStatusStageEnabledFlag1 015B  
                           _USBStatusStageEnabledFlag2 015A  
                             flash_partial_write@match 0087  
                                       _bit_pattern_ae A2DA  
                                   USBEnableEndpoint@p 000A  
                         __size_of__make_cluster_chain 02D6  
                                            _PORTAbits 000F80  
                                            _PORTDbits 000F83  
                                            _PORTEbits 000F84  
                             flash_partial_write@start 0081  
                       __end_of__flash_write_to_buffer 50D6  
                                     __CFG_DSBOREN$OFF 000000  
                                   __get_item@item_ctr 006A  
                                         _display_init 570A  
motor_divide_jump_to_nearest@nearest_position_in_steps 009E  
                                          ___fladd@grs 008F  
                   __size_of__get_available_root_entry 002A  
                                 spi_tx_rx@data_length 0066  
                                ?__i2c_not_acknowledge 0001  
                     __make_cluster_chain@next_cluster 00AA  
                               fat_modify_file@cluster 00B9  
                                          ?_flash_init 0001  
                                     __CFG_CPUDIV$OSC1 000000  
                      adc_read_temperature@temperature 0095  
                                        ___xxtofl@sign 0072  
                                            _TRISAbits 000F92  
                                            _TRISBbits 000F93  
                                            _TRISCbits 000F94  
                                   api_parse@outBuffer 00AA  
                                            _TRISDbits 000F95  
                                            _TRISEbits 000F96  
                     __size_of_motor_clear_command_cue 000C  
                                   _ReceivedDataBuffer 0380  
                                   _BothEP0OutUOWNsSet 015E  
                                          ___fldiv@grs 008B  
                                          ___fldiv@rem 0084  
                       i2c_eeprom_save_position@buffer 0026  
                                        __pbssBIGRAMll 0800  
                                     ??_MSDReadHandler 0095  
                            __flash_partial_read@start 0075  
                            USBConfigureEndpoint@EPNum 0006  
                              _i2c_display_write_fixed 4F34  
                           motor_arc_move@arc_in_steps 0095  
     __parse_jump_steps_with_overshoot@number_of_steps 009C  
                                    __CFG_SOSCSEL$HIGH 000000  
                           ?_USBCtrlEPAllowStatusStage 0001  
                                        ?i2__i2c_start 0001  
                                 _encoder_statemachine AFCC  
                  USER_USB_CALLBACK_EVENT_HANDLER@size 0014  
                                        ?i2__i2c_write 0006  
                              __size_of__display_clear 004A  
                                            _USTATcopy 005E  
                                      ??__flash_wakeup 0068  
        MSDProcessCommandMediaPresent@NumBytesInPacket 009D  
  __step_position_from_divide_position@divide_position 0091  
                 __end_of__encoder_next_setup_stepsize 4462  
                __size_of__encoder_next_setup_stepsize 0070  
                         __encoder_next_setup_stepsize 43F2  
                                          ___flmul@grs 0085  
                              __size_of__display_start 00B2  
                         __end_of_USBTransferOnePacket 1514  
                                   _motor_steps_lookup 9461  
                                          _CCP1CONbits 000FBA  
                                    ?__i2c_eeprom_busy 0001  
                                __i2c_eeprom_busy@busy 0065  
                  __end_ofi2_ExternalFlash_MediaDetect 5F8C  
                                i2c_eeprom_read@length 0075  
                          i2_ExternalFlash_MediaDetect 5F88  
                    __parse_jump_steps@number_of_steps 009C  
                         __end_of__display_signed_itoa 5508  
                  __end_of__motor_get_speed_in_degrees 06AE  
                          __motor_get_speed_in_degrees 0574  
                               i2c_display_cursor@line 006E  
                     __fat_sector_from_cluster@cluster 0060  
                                     __CFG_IOL1WAY$OFF 000000  
                                        ??_encoder_run 0001  
                         __end_of__parse_command_short FB30  
                                   ??__i2c_eeprom_busy 0065  
                              __motor_decide_direction F558  
                  __end_of_position_display_180_string A1E8  
                          _position_display_180_string A1D3  
                       ?__flash_compare_page_to_buffer 0073  
                        __fill_buffer_get_display@cntr 006C  
                                   __root_is_available 461A  
                        __fill_buffer_get_display@line 006D  
                                    __CFG_WPEND$PAGE_0 000000  
                                     _motor_goto_steps 3796  
                   __flash_compare_page_to_buffer@page 0073  
                                  __CFG_MSSP7B_EN$MSK7 000000  
                                  __end_of__parse_item C1FC  
                   __make_cluster_chain@minimum_sector 009D  
                                     ?_MSDErrorHandler 0001  
                fat_resize_file@new_number_of_clusters 00B6  
                   __find_nth_cluster@sector_in_buffer 009D  
                         fat_resize_file@new_file_size 00AC  
                                     __write_root@data 0088  
                               _USBCtrlTrfSetupHandler 3D6E  
                        ??_i2c_eeprom_recover_position 0079  
                                ??_flash_partial_write 0087  
                         __write_value_to_offset@value 0064  
                                 __display_padded_itoa 2186  
                               __end_of_bit_pattern_ae A2E2  
                     ExternalFlash_CapacityRead@config 0060  
                              ?i2_USBTransferOnePacket 0001  
                             __size_of_display_prepare 0C88  
                                       __end_of___flge 0C90  
                        ??__motor_get_speed_in_degrees 0093  
                                __end_of_USBDeviceInit FF20  
                __end_of_USBIncrement1msInternalTimers 5DAC  
               __size_of_USBIncrement1msInternalTimers 0020  
                        _USBIncrement1msInternalTimers 5D8C  
                          __end_of__steps_from_degrees F206  
                                       __end_of___lmul 4DDA  
                      __sector_from_file_number@sector 0063  
                                      ??__display_itoa 00A4  
                        ?_ExternalFlash_SectorSizeRead 0060  
                                       __end_of___wmul 5C24  
                          __size_of_motor_items_in_cue 000C  
                            ??__read_value_from_offset 0064  
                                  ?__root_is_available 0001  
                                    __size_of_MSDTasks 0266  
                            ??_fat_read_from_file_fast 00AF  
                             __end_of_USBStallEndpoint 140E  
                                            i2memcpy@d 0007  
                                            i2memcpy@n 0005  
                                    ??_fat_create_file 00B4  
                       adc_read_temperature@adc_result 0093  
                              __end_ofi2_USBDeviceInit 02F4  
                                            i2memcpy@s 0009  
                             __size_of_fat_modify_file 0234  
                            ??_APP_DeviceMSDInitialize 000F  
                                            i2memset@c 0003  
                                            i2memset@n 0005  
                                            i2memset@p 0007  
                                       __end_of_memcpy 4942  
                 __end_of__display_position_in_degrees 5216  
                __size_of__display_position_in_degrees 0050  
                         __display_position_in_degrees 51C6  
                                      _MSDRetryAttempt 0152  
                                 i2USBStallEndpoint@ep 0006  
                                       __end_of_memset 59EE  
                                     __CFG_DSWDTEN$OFF 000000  
                                    _USBBusIsSuspended 0160  
                            flash_partial_write@length 0083  
                                       __end_of_spi_tx 4C7A  
                __get_available_root_entry@file_number 0095  
                                  fat_modify_file@data 00A7  
                                       __end_of_strlen 5692  
                         __display_padded_itoa@padding 008E  
                            __flash_set_page_size@size 0077  
                                  start_initialization 3A90  
                                  fat_modify_file@root 00C3  
                              ?_USBStdGetStatusHandler 0001  
                                        ??__write_root 008A  
                             i2SYSTEM_Initialize@state 0005  
                        ExternalFlash_SectorWrite@page 008D  
                        USBCtrlTrfRxService@byteToRead 0002  
                               ??__flash_set_page_size 0073  
                                 display_prepare@space 00D2  
                                    ??_MSDWriteHandler 008F  
                                  __end_of_api_prepare 25E2  
                    __end_of__get_available_root_entry 5B82  
                            __display_itoa_long@length 00C2  
         __motor_decide_direction@distance_to_limit_cw 0082  
  __step_position_from_divide_position@target_position 0095  
                           ??__fill_buffer_get_display 0067  
                                    __size_ofi2_memcpy 005C  
                           i2c_display_cursor@position 006D  
                               ?_MSDTransferTerminated 000C  
                                    __size_ofi2_memset 002C  
                                       ??i2__i2c_start 0001  
                                      _USBMSDOutHandle 013F  
                         __end_of_USBConfigureEndpoint 3C4C  
                                ?_encoder_statemachine 0001  
                                       ??i2__i2c_write 0009  
                                         ??__i2c_start 0060  
                                         ??__i2c_write 0068  
                      __end_of_USBStdFeatureReqHandler DB60  
                                  __flash_partial_read 4300  
                                    USBStallEndpoint@p 0066  
                                     _motor_move_steps 5AA8  
                                        _MSDHostNoData 014F  
                                 ??__root_is_available 008F  
                               _motor_move_degrees_int 53A0  
                    __end_of_USBCtrlEPAllowStatusStage 2D48  
                         ?__encoder_next_arc_step_size 0060  
                    __size_of_i2c_eeprom_save_position 0056  
                             __end_of_USBCtrlEPService 39FA  
                       ?__motor_steps_from_degrees_int 0091  
                           __size_of_MSDProcessCommand 0134  
                                  __size_of__motor_run 01D8  
                            ?_i2c_eeprom_save_position 0001  
                                            __i2c_read 3B24  
                                            __i2c_send 5F3A  
                                      ___llmod@divisor 0064  
                                            __i2c_stop 5F58  
                        ?__encoder_next_setup_stepsize 0060  
                                      ___llmod@counter 0068  
              _ExternalFlash_MediaInitialize$intlevel0 5D70  
             __end_of__parse_jump_steps_with_overshoot FC82  
            __size_of__parse_jump_steps_with_overshoot 0152  
                   ??__parse_jump_steps_with_overshoot 009A  
                    ?__parse_jump_steps_with_overshoot 0094  
                     __parse_jump_steps_with_overshoot FB30  
                                    __size_of_i2c_init 001C  
                           configFile_read@file_number 01FA  
                            ??_USBCtrlEPAllowDataStage 0002  
                                _motor_cue_write_index 014A  
                                      _configFile_name 02D8  
                      ??__fill_buffer_get_mode_details 0062  
                                      _configFile_read F3B4  
                                       USBDeviceInit@i 0068  
                  __end_of_motor_decrease_manual_speed 5D6A  
                          _motor_decrease_manual_speed 5D48  
                             __size_of__backlight_init 0004  
                           __flash_partial_read@length 0077  
                        __root_is_available@first_byte 0094  
                               _pBDTEntryEP0OutCurrent 005B  
                               __size_of_fat_find_file 00E8  
                     __end_of_fat_get_file_information 4286  
                                          _DMACON1bits 000F88  
                               i2c_eeprom_write@length 000F  
                                          _DMACON2bits 000F86  
                                  __size_of_flash_init 000E  
                              USBTransferOnePacket@dir 0060  
                              USBTransferOnePacket@len 0063  
                                    __size_of__i2c_get 000A  
                                        _MSDTasks$2588 00AD  
                          MSDErrorHandler@OldMSD_State 0069  
                                        _MSDTasks$2589 00AF  
                       __end_ofi2_USBTransferOnePacket 171C  
                          __size_of_flash_partial_read 0026  
                                             ??___flge 0080  
                                             ??___lmul 0068  
                                spi_init@configuration 0063  
                                ?__display_padded_itoa 0078  
                              flash_partial_read@start 0089  
                      motor_move_degrees_int@direction 00A2  
                                             ??___wmul 0064  
                                  _USBStdGetDscHandler 0918  
                           __size_of__motor_move_steps 01D0  
                                 ?__flash_partial_read 0073  
                                          ?_motor_init 0001  
                                  __end_of_encoder_run 1CFC  
                                    __CFG_ADCSEL$BIT12 000000  
                    __size_of_APP_DeviceCustomHIDTasks 00A8  
                           fat_get_file_size@file_size 009D  
                                          __pdataBANK2 0299  
                                          __pdataBANK4 0400  
                             motor_isr@steps_remaining 0041  
                                          ?_motor_stop 0001  
                            ?_APP_DeviceCustomHIDTasks 0001  
                                       _motor_arc_move 20A2  
                    __end_of_overshoot_in_steps_string A23A  
                                 __size_of_system_init 0136  
                                             ??_memcpy 0066  
                              __size_of__i2c_wait_idle 0064  
                                             ??_memset 0066  
     __motor_decide_direction@target_position_in_steps 007D  
                         __size_of__parse_command_long 0086  
                                   __end_of__i2c_start 5F68  
                                             ??_spi_tx 0064  
                                   __end_of__i2c_write 51C6  
                                     __get_item@buffer 0064  
                            __root_is_available@offset 0091  
          __parse_jump_steps_with_overshoot@out_buffer 0096  
                                             ??_strlen 0062  
                               ??__i2c_not_acknowledge 0060  
                                            ___fladd@a 0080  
                                            ___fladd@b 007C  
  motor_divide_jump_to_nearest@nearest_divide_position 00A2  
                                            __add_item 1A14  
                               _USBActiveConfiguration 01C2  
                       __end_of_USBStdGetStatusHandler 36FC  
                                            ___fldiv@a 007C  
                                            ___fldiv@b 0078  
                             __size_of_fat_resize_file 00FE  
                        ?__display_position_in_degrees 0060  
                             __fat_sector_from_cluster 5DE6  
                          api_parse@receivedDataLength 00A9  
                                     api_parse@out_idx 00B0  
                                    __size_of_adc_init 0058  
                                            ___flmul@a 007C  
                                            ___flmul@b 0078  
                                          __pbssCOMRAM 0053  
                                    __size_of__get_fbr 0274  
                            ??_i2c_display_write_fixed 0068  
                                        __pcstackBANK0 0060  
                                        __pcstackBANK1 01C3  
                         __size_of_USBCtrlTrfInHandler 00C4  
                                    __size_of__get_mbr 00D0  
                         ??_ExternalFlash_CapacityRead 0064  
                       __size_of_MSDCheckForErrorCases 0116  
             __get_available_offset_from_buffer@buffer 0062  
                        __end_of_MSDCheckForErrorCases 0FDA  
                     __end_of__motor_distance_to_limit 0068  
                                  _fat_restore_mbr_fbr 3C4C  
                           fat_create_file@file_number 00BC  
                                    __size_of___xxtofl 0144  
                                            _gblBLKLen 023C  
             __get_available_offset_from_buffer@offset 0066  
                   __end_of_flash_command_pagesize_512 A2FA  
                           _flash_command_pagesize_512 A2F6  
                   __end_of_flash_command_pagesize_528 A2F6  
                           _flash_command_pagesize_528 A2F2  
                                       __flash_is_busy 5CE0  
                                 ?_USBStdGetDscHandler 0001  
                                         _isdigit$8441 0061  
         __end_of_i2c_display_program_custom_character 4190  
        __size_of_i2c_display_program_custom_character 007C  
               ??_i2c_display_program_custom_character 0070  
                ?_i2c_display_program_custom_character 006E  
                 _i2c_display_program_custom_character 4114  
                                            __get_date 5EEC  
                                    _flash_sector_read 5C24  
                                    __size_of_fat_init 0010  
                  fat_get_file_information@root_sector 0092  
                      __end_of__read_value_from_offset 547C  
                                            __get_item F6EE  
                      __end_of_fat_read_from_file_fast E494  
                                       _motor_set_zero 5692  
                                            __get_time 5EE0  
                               flash_sector_write@data 0081  
                                     i2__i2c_wait_idle 4DDA  
                               flash_sector_write@page 007F  
                                  __end_of__write_root 53A0  
                                            _dc_manual 9DEE  
                          motor_move_degrees_int@speed 009B  
                           __end_of_USBWakeFromSuspend 5826  
                            ??__motor_decide_direction 0082  
                                   ?_flash_sector_read 0087  
                           __end_of_i2c_display_cursor 5D26  
                                          __parse_item BE06  
                  __end_of__divide_jump_size_decrement 45AE  
                          __divide_jump_size_decrement 4540  
                                           ?__i2c_read 0065  
                                           ?__i2c_send 0001  
                                            _dc_setup1 A01E  
                                            _dc_setup2 9FCE  
                                      _USBStallHandler 5590  
                             __display_padded_itoa@len 008C  
                                         _pBDTEntryOut 010F  
                                           ?__i2c_stop 0001  
                           fat_modify_file@file_number 00B7  
                             __display_padded_itoa@pos 008D  
                             __display_padded_itoa@tmp 0082  
                             motor_move_steps@distance 008C  
                                            __read_fat 4C7A  
                          configFile_read@value_string 01EA  
                     __size_of__parse_set_manual_speed 0084  
                             __size_of_USBDeviceAttach 0032  
                     __end_of_ExternalFlash_SectorRead 58C4  
          __end_of__step_position_from_divide_position 1DE8  
         __size_of__step_position_from_divide_position 00EC  
                ??__step_position_from_divide_position 0095  
                 ?__step_position_from_divide_position 0091  
                  __step_position_from_divide_position 1CFC  
                              __motor_move_steps@speed 0081  
                   __get_available_cluster@skip_sector 008D  
                                   i2_USBStallEndpoint 1514  
                                     ___lwdiv@dividend 0060  
                                 _motor_cue_read_index 014B  
                                _fat_get_format_status 325E  
                    fat_read_from_file_fast@start_byte 00A1  
                                    fat_find_file@name 008B  
                       MSDProcessCommandMediaPresent@i 00A6  
                                 ?_fat_restore_mbr_fbr 0001  
                                  ??_flash_sector_read 008B  
                                            _api_parse 0A44  
                                            __pintcode 9008  
                            fat_create_file@root_entry 00BD  
                               __end_of_motor_arc_move 2186  
                              __fill_buffer_get_status E6B8  
                                   _APP_DeviceMSDTasks 5E90  
                                        __pmediumconst 9092  
                                             ?___aldiv 0060  
                                    __size_of_tmr0_isr 003A  
                                             ?___almod 0060  
                                             ?___fladd 007C  
                                  fat_find_file@offset 0094  
                                ??__flash_partial_read 007B  
                               __parse_jump_steps@data 0094  
                                             ?___fldiv 0078  
                                            __ptext100 43F2  
                                            __ptext101 5A1E  
                                            __ptext110 2186  
                                            __ptext102 4462  
                                             ?___flneg 0078  
                                            __ptext111 51C6  
                                            __ptext103 5614  
                                            __ptext200 5C72  
                                            __ptext120 2BB6  
                                            __ptext112 0FDA  
                                            __ptext104 4540  
                                            __ptext201 4DDA  
                                            __ptext121 53EA  
                                            __ptext113 E494  
                                            __ptext105 A344  
                                            __ptext210 5D8C  
                                            __ptext202 5F68  
                                            __ptext130 592C  
                                            __ptext122 EAC6  
                                            __ptext114 5654  
                                            __ptext106 5E66  
                                            __ptext211 3962  
                                            __ptext203 5F70  
                                            __ptext131 4B6C  
                                            __ptext123 02F4  
                                            __ptext115 5508  
                                            __ptext107 0574  
                                            __ptext220 0918  
                                            __ptext212 4A5C  
                                            __ptext204 5F78  
                                            __ptext140 5216  
                                            __ptext132 5E90  
                                            __ptext124 2426  
                                            __ptext116 33BA  
                                            __ptext108 D62A  
                                            __ptext221 D8E4  
                                            __ptext213 3D6E  
                                            __ptext205 0068  
                                            __ptext141 5084  
                                            __ptext133 DDD4  
                                            __ptext125 598E  
                                            __ptext117 554C  
                                            __ptext109 54C4  
                                            __ptext230 4880  
                                            __ptext222 3E84  
                                            __ptext214 1B0E  
                                            __ptext206 01AE  
                                            __ptext150 5890  
                                            __ptext142 3CDE  
                                            __ptext134 07E4  
                                            __ptext126 C9DA  
                                            __ptext118 4FDC  
                                            __ptext231 5E34  
                                            __ptext223 5030  
                                            __ptext215 3830  
                                            __ptext207 57EE  
                                            __ptext151 5C24  
                                            __ptext143 4BC6  
                                            __ptext135 47BC  
                                            __ptext127 CD2C  
                                            __ptext119 330C  
                                            __ptext240 2D48  
                                            __ptext232 5F88  
                                            __ptext224 2ECC  
                                            __ptext216 2798  
                                            __ptext208 59EE  
                                            __ptext160 5E7C  
                                            __ptext152 4300  
                                            __ptext144 4190  
                                            __ptext136 C5EC  
                                            __ptext128 FDD4  
                                            __ptext241 2946  
                                            __ptext233 58F8  
                                            __ptext225 2870  
                                            __ptext217 25E2  
                                            __ptext209 5590  
                                            __ptext161 5D6A  
                                            __ptext153 5CE0  
                                            __ptext145 E8DC  
                                            __ptext137 D068  
                                            __ptext129 59BE  
                        ??__divide_jump_size_decrement 0060  
                                            __ptext242 0000  
                                            __ptext234 161A  
                                            __ptext226 4EDE  
                                            __ptext218 5B02  
                                            __ptext170 0A44  
                                            __ptext162 5F44  
                                            __ptext154 4D2A  
                                            __ptext146 0EC4  
                                            __ptext138 5F84  
                                            __ptext235 56CE  
                                            __ptext227 1514  
                                            __ptext219 365C  
                                            __ptext171 F9D4  
                                            __ptext163 350E  
                                            __ptext155 4C20  
                                            __ptext147 0DAA  
                                            __ptext139 585C  
                                            __ptext236 3BB8  
                                            __ptext228 5EC2  
                                            __ptext180 3DFE  
                                            __ptext172 5266  
                                            __ptext164 2504  
                                            __ptext156 58C4  
                                            __ptext148 1304  
                                            __ptext237 4942  
                                            __ptext229 10E8  
                                            __ptext181 3F8E  
                                            __ptext173 5692  
                                            __ptext165 E6B8  
                                            __ptext157 38CA  
                                            __ptext149 481E  
                                            __ptext238 11F6  
                                            __ptext190 FF20  
                                            __ptext182 52B6  
                                            __ptext174 3464  
                                            __ptext166 48E2  
                                            __ptext158 2E0C  
                                            __ptext239 2C84  
                                            __ptext191 4D82  
                                            __ptext183 5F4E  
                                            __ptext175 5A7A  
                                            __ptext167 F206  
                                            __ptext159 5EF8  
                                            __ptext192 140E  
                                            __ptext184 FB30  
                                            __ptext176 3796  
                                            __ptext168 3040  
                                            __ptext185 FC82  
                                            __ptext177 F558  
                                            __ptext169 5A4C  
                                            __ptext194 5744  
                                            __ptext186 5AA8  
                                            __ptext178 2268  
                                            __ptext195 1C08  
                                            __ptext187 EE7C  
                                            __ptext179 5F04  
                                            __ptext196 B7F6  
                                            __ptext188 1DE8  
                                            __ptext197 4E88  
                                            __ptext189 5F10  
                                            __ptext198 4012  
                                            __ptext199 547C  
                                             ?___flmul 0078  
                          __size_of_motor_move_endless 002E  
                                             ?___fltol 0060  
                                  fat_find_file@sector 0092  
                                             ?___lldiv 0060  
                                             ?___llmod 0060  
                      motor_move_degrees_int@overshoot 009D  
                          __size_of_flash_sector_write 0050  
                                             ?___lwdiv 0060  
                                            __spi_init 577E  
                                             ?___lwmod 0060  
                           ??__offset_from_file_number 0062  
                          __size_of_fat_read_from_file 00E6  
                     __size_of__motor_schedule_command 00EC  
                                            _hid_rpt01 A184  
                                  ?i2_USBStallEndpoint 0001  
                        __size_of_adc_read_temperature 01DE  
                        __parse_jump_steps@out_idx_ptr 0098  
                                            _idle_rate 01C1  
                   __size_of__motor_calculate_distance 00E0  
                                   display_update@line 0070  
                                    __size_of_spi_init 0040  
                                     ___almod@dividend 0060  
                                     ?i2_USBDeviceInit 0001  
                                          _api_prepare 2504  
                            fat_modify_file@start_byte 00A1  
                                      __i2c_write@data 0065  
                                      __i2c_write@cntr 0069  
                                  fat_create_file@name 00AC  
                                  ?_APP_DeviceMSDTasks 0001  
                            __size_ofi2_ResetSenseData 0062  
                   __motor_calculate_distance@distance 0069  
                   __flash_write_to_buffer@data_length 0077  
                                  fat_create_file@size 00B0  
                                           ?__add_item 0084  
                                 _USBTransferOnePacket 140E  
                           __make_cluster_chain@offset 00A8  
            __ic2_display_set_cgram_address@data_array 006A  
                           ?_ExternalFlash_MediaDetect 0060  
                           __make_cluster_chain@sector 00A4  
                       ??_ExternalFlash_SectorSizeRead 0062  
                                 __display_signed_itoa 54C4  
                  __end_of__divide_jump_size_increment 5654  
                          __divide_jump_size_increment 5614  
                                    ??_display_prepare 00C6  
                                             ?_isdigit 0001  
                              _motor_clear_command_cue 5F04  
                                 __CFG_RTCOSC$T1OSCREF 000000  
                                 __parse_command_short F9D4  
                               fat_read_from_file@data 00D1  
                  __fill_buffer_get_display@secondHalf 0066  
                                    ?_configFile_write 0001  
                               __end_of__flash_is_busy 5D04  
                                        _fat_find_file 1ED4  
                                    __display_itoa@len 00B4  
                                    __display_itoa@pos 00B6  
                                    __display_itoa@tmp 00AA  
                               fat_read_from_file@root 00DD  
                                    __display_itoa_u16 30F8  
                                    ?_i2c_eeprom_write 000B  
                         __end_of_USBCtrlTrfOutHandler 49A2  
                             __size_of_i2c_eeprom_read 0056  
                                    ??_fat_modify_file 00A9  
                               ??_encoder_statemachine 00A8  
                             ??_motor_speed_from_index 009F  
                            __end_of_flash_sector_read 5C4C  
                                ??_USBStdGetDscHandler 0001  
                  __size_of__flash_copy_page_to_buffer 005A  
                                          _ep_data_out 012B  
                                     ___lwdiv@quotient 0064  
                               __end_of_motor_set_zero 56CE  
                                   ??_configFile_write 00E3  
                                   _motor_change_speed 5F4E  
                                        _MSDWriteState 0153  
                         __size_of_USBCtrlTrfRxService 010E  
                                             ?_stricmp 0061  
                                    _ConfigFile_buffer 0800  
                                   ?__display_itoa_u16 0078  
                        USBConfigureEndpoint@direction 0001  
                                             ?_strncmp 0060  
                                             ?_toupper 0001  
                                       __display_clear 53EA  
                                   ??_i2c_eeprom_write 0010  
                            __size_of__i2c_acknowledge 000A  
                                           ?__get_date 0060  
               __cluster_from_sector_and_offset@offset 0062  
                                       __size_of_ultoa 00FE  
                              __end_of_configFile_read F558  
                                 ??i2_USBStallEndpoint 0002  
                                           ?__get_item 0060  
               __cluster_from_sector_and_offset@sector 0060  
                                      _config_internal 0128  
                                           ?__get_time 0060  
                        ??__divide_jump_size_increment 0060  
                                  __size_of_motor_init 001E  
                         __size_ofi2_SYSTEM_Initialize 0054  
                              i2__i2c_eeprom_busy@busy 0006  
                                      _config_external 0125  
                                       __display_start 31AC  
                                  __size_of_motor_stop 0050  
                                      ___aldiv@divisor 0064  
                         __size_of_USBCtrlTrfTxService 00D2  
                       __size_of_display_get_character 002E  
                                  __make_cluster_chain D354  
                                      ___aldiv@counter 0068  
                                 ??_APP_DeviceMSDTasks 00B2  
                        __end_of_display_get_character 5A7A  
                                       ___wmul@product 0064  
                                             _LATAbits 000F89  
                                             _LATBbits 000F8A  
                                             _LATCbits 000F8B  
                                             _LATDbits 000F8C  
                           __end_of_USBCheckHIDRequest 2946  
                       __root_is_available@file_number 0093  
                 __flash_compare_page_to_buffer@buffer 0075  
                                  ?_motor_change_speed 0060  
                           ??_USBCtrlEPServiceComplete 0002  
                                           ?__read_fat 008F  
                                  ??__display_itoa_u16 007C  
                              __i2c_read@slave_address 006F  
                                             _IPR2bits 000FA2  
                                             _PIE1bits 000F9D  
                                             _PIE2bits 000FA0  
                      motor_isr@steps_until_standstill 003D  
                           configFile_read@item_string 01CB  
                                          _encoder_run 1C08  
                             __fat_offset_from_cluster 5E00  
                                ??_fat_restore_mbr_fbr 0084  
                 __flash_compare_page_to_buffer@status 0079  
                                             _PIR1bits 000F9E  
                                             _PIR2bits 000FA1  
                               ??__display_padded_itoa 007D  
                                   __end_of_dc_divide1 9FCE  
                                   __end_of_dc_divide2 9F7E  
                                             _RCONbits 000FD0  
                                           ?_api_parse 00A7  
                                             _UEP0bits 000F26  
                                      ?_motor_arc_move 0001  
                                             _MSDTasks DDD4  
                                            _motor_isr B7F6  
                           _USBDeferINDataStagePackets 0159  
                                 _active_configuration 014C  
                             ??_motor_set_manual_speed 0064  
                                    ?_i2c_display_init 0001  
                              spi_tx_rx@command_length 0062  
                              flash_partial_write@data 0085  
                                   _bit_pattern_degree A2E2  
                          __size_of_USBCheckStdRequest 00D8  
                      ??_MSDProcessCommandMediaPresent 0099  
                              flash_partial_write@page 007F  
                __end_of__fill_buffer_get_mode_details F3B4  
               __size_of__fill_buffer_get_mode_details 01AE  
                        __fill_buffer_get_mode_details F206  
                                             _UCONbits 000F65  
                                           ?__spi_init 0060  
                                 __end_ofi2__i2c_start 5F78  
                                 __end_ofi2__i2c_write 54C4  
                                 _USBConfigureEndpoint 3BB8  
                                         ??__motor_run 0067  
                           ?__data_sector_from_cluster 0060  
               __ic2_display_set_ddram_address@address 006A  
                                   ??_i2c_display_init 006A  
                 __size_of__encoder_next_arc_step_size 0070  
                                    __i2c_write@length 0067  
                                    ??__backlight_init 0060  
                                            _spi_tx_rx 38CA  
                                            _spi_tx_tx 3CDE  
                          __size_ofi2__i2c_eeprom_busy 0026  
                      __end_of__motor_decide_direction F6EE  
                                 ?__make_cluster_chain 0095  
                      __make_cluster_chain@next_offset 009B  
                   __flash_write_page_from_buffer@page 0073  
                     __size_of_USBStdFeatureReqHandler 027C  
                                       _USBMSDInHandle 013D  
                                           _ADCON0bits 000FC2  
                                           _ADCON1bits 000FC1  
                                flash_sector_read@data 0089  
                                    ___wmul@multiplier 0060  
                                ?_USBTransferOnePacket 0060  
                                flash_sector_read@page 0087  
                                 ??_motor_change_speed 0062  
                             _initial_speed_arc_string A24C  
                    __end_of__motor_calculate_distance 2348  
                __motor_steps_from_degrees_int@degrees 0091  
                                ?__display_signed_itoa 008F  
                  _ExternalFlash_MediaDetect$intlevel0 5F4A  
                                    _SYS_InterruptHigh 9008  
                            __end_of__display_itoa_u16 31AC  
                                ?__parse_command_short 0001  
                            i2c_display_cursor@address 006F  
                                     __CFG_WPFP$PAGE_1 000000  
                                       ?_fat_find_file 008B  
                         i2c_eeprom_read@slave_address 0078  
                                         ??_flash_init 0078  
                                         _RemoteWakeup 0161  
                    __end_of_ExternalFlash_MediaDetect 5F4E  
                                             i2_memcpy 4A5C  
                                             i2_memset 5B02  
                    MSDCheckForErrorCases@DeviceNoData 0070  
                                 spi_tx_tx@data_length 0066  
                      fat_read_from_file_fast@position 00C5  
                                      ?__flash_is_busy 0001  
                     __end_of__fill_buffer_get_display 30F8  
                                          __write_root 5354  
                                   ?_SYS_InterruptHigh 0001  
                             __end_of_motor_goto_steps 3830  
                  __fill_buffer_get_display@start_line 006E  
                               __end_of__display_clear 5434  
                    __size_of_fat_get_file_information 007A  
                                           spi_tx@data 0060  
                            ?_fat_get_file_information 008F  
               __end_of_overshoot_cost_in_steps_string A1D3  
                       _overshoot_cost_in_steps_string A1BB  
                              __end_of_USBStallHandler 55D4  
                    __motor_schedule_command@direction 0067  
                             __sector_from_file_number 595E  
                                      ?_motor_set_zero 0001  
                                       __i2c_read@data 0065  
                      ??__flash_write_page_from_buffer 0076  
                              __size_of_display_update 0038  
                                       __i2c_read@cntr 0070  
                         __end_of_maximum_speed_string A2AC  
                               __end_of__display_start 325E  
                         __end_of_minimum_speed_string A2BA  
                                    ___lmul@multiplier 0060  
                                     __add_item@buffer 008A  
                                            copy_data0 3AA4  
                                            copy_data1 3AC4  
                         __size_of__system_timer0_init 002C  
                                    ??_fat_resize_file 00B0  
                            __display_signed_itoa@text 0091  
          __encoder_next_divide_step_size@old_stepsize 0060  
                                     __add_item@length 008E  
                          ??_USBCtrlEPAllowStatusStage 0001  
                            __find_nth_cluster@cluster 0097  
                          __end_of_USBStdSetCfgHandler 26C0  
                          __display_padded_itoa@length 007A  
                                             _i2c_init 5DCA  
                                  ??_SYS_InterruptHigh 0045  
                                        ??i2__i2c_send 0001  
                                          ??__i2c_read 0068  
                                          ??__i2c_send 0060  
                                         _MSDReadState 0154  
                                        ??i2__i2c_stop 0001  
                                          ??__i2c_stop 0060  
                                   __end_of__motor_run EE7C  
                                   __end_of_device_dsc A282  
                          __size_of__display_itoa_long 010E  
            __encoder_next_setup_stepsize@old_stepsize 0060  
                             MSDErrorHandler@ErrorCase 0068  
                               ?_fat_get_format_status 0001  
                                             __i2c_get 5F26  
                              ?_USBCtrlTrfSetupHandler 0001  
                                      _fat_create_file 0438  
                            ??__fill_buffer_get_status 006D  
                                           _ANCON0bits 000F48  
                                           _ANCON1bits 000F49  
                              USBStdGetStatusHandler@p 0002  
                             fat_read_from_file@length 00CD  
                                             __Hrparam 0000  
                                  __display_itoa@value 009F  
                               _motor_prescaler_lookup 9BFD  
                                            memcpy@tmp 006A  
                                             __Lrparam 0000  
                               USBTransferOnePacket@ep 0068  
                                    __parse_jump_steps FC82  
                    __size_of__motor_distance_to_limit 0148  
                                             _SetupPkt 000D30  
                                   __end_of_flash_init 5EE0  
                                       _TransferLength 0137  
                                           ?_motor_isr 0001  
                            ?__motor_distance_to_limit 006C  
                         ?_motor_increase_manual_speed 0001  
                           __end_of_USBCheckMSDRequest 2F88  
                                      api_parse@in_idx 00B1  
                fat_read_from_file_fast@cluster_number 00AD  
                                ?_USBConfigureEndpoint 0001  
                                __flash_is_busy@status 0071  
                                     __size_of___aldiv 00CE  
                             _ExternalFlash_SectorRead 5890  
                            display_get_character@line 0063  
                                   ?__parse_jump_steps 0094  
                                     __size_of___almod 00AE  
                                     __size_of___fladd 033C  
                                    ??_USBDeviceAttach 0060  
                                       __i2c_wait_idle 4758  
                                      _MSDWriteHandler D068  
                                     __size_of___fldiv 02BA  
                             __end_of_motor_move_steps 5AD6  
                                     __size_of___flneg 0030  
                                     __size_of___flmul 0352  
                                     __size_of___fltol 00DE  
                         fat_create_file@first_cluster 00BA  
                                     __size_of___lldiv 0084  
                                     __size_of___llmod 0068  
                                      i2__i2c_send@dat 0001  
                                ??__make_cluster_chain 0099  
                                     __size_of___lwdiv 0054  
                       __display_itoa_long@short_value 00C3  
                                     __size_of___lwmod 0044  
            ExternalFlash_SectorWrite@allowWriteToZero 008C  
                                           ?_spi_tx_rx 0060  
                                           ?_spi_tx_tx 0060  
                 __size_ofi2_ExternalFlash_MediaDetect 0004  
                                          _MSDCBWValid 014E  
                            __size_of__i2c_eeprom_busy 0028  
                            __end_of_SYS_InterruptHigh 908E  
                            ??_motor_clear_command_cue 0060  
                        __display_itoa_long@last_digit 00C5  
                                    ?_USBStallEndpoint 0060  
                           i2c_display_write_fixed@pos 0068  
                                             _adc_init 4CD2  
                          __steps_from_degrees@degrees 0091  
  __motor_distance_to_limit@distance_to_limit_in_steps 0074  
                                             __get_fbr DB60  
                                             __get_mbr 2A18  
                                          ??__add_item 008C  
                     __end_of_i2c_eeprom_save_position 4EDE  
                                   ??_USBStallEndpoint 0061  
                                  ??__parse_jump_steps 009A  
                      __flash_copy_page_to_buffer@page 0073  
                   __end_of_ExternalFlash_CapacityRead 5E90  
                           _ExternalFlash_CapacityRead 5E7C  
                                             ___xxtofl 02F4  
                              ??_MSDTransferTerminated 000E  
                                     __size_of_isdigit 0022  
                              __size_of_USBDeviceTasks 0146  
         __parse_jump_steps_with_overshoot@out_idx_ptr 0098  
                                      ___lwdiv@divisor 0062  
                              __display_itoa_u16@value 0078  
                                             _fat_init 5EA2  
                              ?_motor_move_degrees_int 0099  
                                      ?__display_clear 0001  
                                      ___lwdiv@counter 0066  
                           __size_of_flash_sector_read 0028  
                             ??__get_available_cluster 008F  
                                             __ptext10 5F30  
                                             __ptext11 5BAC  
                                             __ptext20 DB60  
                                             __ptext12 5ED2  
                                             __ptext21 5C98  
                                             __ptext13 55D4  
                                             __ptext30 5176  
                                             __ptext22 57B6  
                                             __ptext14 577E  
                                             __ptext31 4758  
                                             __ptext23 4F34  
                                             __ptext15 44D2  
                                             __ptext40 0438  
                                             __ptext32 5F58  
                                             __ptext24 5D04  
                                             __ptext16 5EA2  
                                             __ptext41 5354  
                                             __ptext33 5F60  
                                             __ptext25 5CBC  
                                             __ptext17 3C4C  
                                             __ptext50 5EEC  
                                             __ptext42 45AE  
                                             __ptext34 5F3A  
                                             __ptext26 570A  
                                             __ptext18 325E  
                                             __ptext51 5B58  
                                             __ptext43 4AB8  
                                             __ptext35 31AC  
                                             __ptext27 4114  
                                             __ptext19 2A18  
                                             __ptext60 E26E  
                                             __ptext52 1A14  
                                             __ptext44 D354  
                                             __ptext36 30F8  
                                             __ptext28 5B2E  
                                             __ptext61 35B6  
                                             __ptext53 4F88  
                                             __ptext45 5826  
                                             __ptext37 C1FC  
                                             __ptext29 5126  
                                             __ptext70 5C4C  
                                             __ptext62 5434  
                                             __ptext54 181A  
                                             __ptext46 2AE8  
                                             __ptext38 171C  
                                             __ptext71 595E  
                                             __ptext63 4C7A  
                                             __ptext55 46F0  
                                             __ptext47 49A2  
                                             __ptext39 E03A  
                                             __ptext80 5D26  
                                             __ptext72 5B82  
                                             __ptext64 5DE6  
                                             __ptext56 3F0A  
                                             __ptext48 5BD4  
                                             __ptext81 5BFC  
                                             __ptext73 1ED4  
                                             __ptext65 5E00  
                                             __ptext57 437A  
                                             __ptext49 5EE0  
                                             __ptext90 ECA4  
                                             __ptext82 F04C  
                                             __ptext74 4094  
                                             __ptext66 5EB2  
                                             __ptext58 F3B4  
                                             __ptext91 AFCC  
                                             __ptext83 0B6E  
                                             __ptext75 BE06  
                                             __ptext67 420C  
                                             __ptext59 1FBC  
                                             __ptext92 53A0  
                                             __ptext84 F6EE  
                                             __ptext76 4B12  
                                             __ptext68 4286  
                                             __ptext93 0C90  
                                             __ptext85 4CD2  
                                             __ptext77 5E4E  
                                             __ptext69 461A  
                                             __ptext94 5E1A  
                                             __ptext86 5AD6  
                                             __ptext78 1918  
                                             __ptext95 F878  
                                             __ptext87 4686  
                                             __ptext79 26C0  
                                             __ptext96 2F88  
                                             __ptext88 5F80  
                                             __ptext97 1CFC  
                                             __ptext89 36FC  
                                             __ptext98 5D48  
                                             __ptext99 20A2  
                                         _SSP1CON1bits 000FC6  
                      __size_of_motor_speed_from_index 0016  
                                         _SSP1CON2bits 000FC5  
                                      ?__display_start 0001  
                         __flash_set_page_size@command 0073  
                                         _SSP2CON1bits 000F72  
                 __end_of_MSDProcessCommandMediaAbsent 481E  
                __size_of_MSDProcessCommandMediaAbsent 0062  
                         _MSDProcessCommandMediaAbsent 47BC  
                                      ___almod@divisor 0064  
                                          ??__get_date 0062  
                                __flash_wakeup@command 0068  
                                          ??__get_item 0066  
                                      ___almod@counter 0068  
                                          ??__get_time 0062  
                                     __size_of_stricmp 005A  
                     __end_of_inverse_direction_string A270  
                                     ?_configFile_read 0001  
                                     __size_of_strncmp 0080  
                                     __size_of_toupper 0018  
                                  __parse_command_long 3DFE  
                           ?_ExternalFlash_SectorWrite 0084  
                       ExternalFlash_SectorRead@config 008B  
                       ExternalFlash_SectorRead@buffer 0091  
                   __end_of__flash_copy_page_to_buffer 4B12  
                           __flash_copy_page_to_buffer 4AB8  
                              __size_of_ResetSenseData 0062  
                     __end_of_APP_DeviceCustomHIDTasks 35B6  
                                    ??_i2c_eeprom_read 0076  
                                __end_of__flash_wakeup 4D82  
                              __parse_set_manual_speed 3F8E  
                                        __size_of_atoi 00D8  
                                        __size_of_atol 00FC  
                       __end_of_USBCtrlTrfSetupHandler 3DFE  
                                        __size_of_main 0096  
                                    ?_USBCtrlEPService 0001  
                                        __size_of_itoa 0044  
                                             _inq_resp A160  
                                        __size_of_ltoa 0054  
                                        __size_of_utoa 00AA  
                                          ??__read_fat 0091  
                          __end_of_flash_partial_write 461A  
                                           strncmp@len 0064  
                              fat_get_file_size@offset 009B  
                              fat_get_file_size@sector 0099  
                            __end_of__parse_jump_steps FDD4  
                fat_read_from_file_fast@needed_cluster 00C1  
                                   ??_USBCtrlEPService 001E  
                                             _tmr0_isr 5744  
                             ??__motor_move_back_forth 0068  
                                  _USBCtrlTrfInHandler 2D48  
                   _MSDProcessCommandMediaPresent$2606 009B  
                             ??__write_value_to_offset 0066  
                  __parse_set_manual_speed@out_idx_ptr 0068  
                       fat_read_from_file_fast@cluster 00AB  
                                          ??_api_parse 00AC  
                               __end_of__i2c_wait_idle 47BC  
                fat_resize_file@old_number_of_clusters 00B4  
                                  __end_ofi2__i2c_send 5F80  
                           __end_of_motor_items_in_cue 5F1C  
                                             _outPipes 0100  
      i2c_display_program_custom_character@bit_pattern 006E  
                                  __end_ofi2__i2c_stop 5F70  
                                             _spi_init 55D4  
                              __motor_schedule_command 1DE8  
                             ??_configFile_readDefault 0060  
                                 _USBCtrlTrfOutHandler 4942  
                                             int$flags 005F  
                     __end_of__offset_from_file_number 5BAC  
                           ??__fat_sector_from_cluster 0062  
                                             atoi@sign 006A  
                            _USBCtrlEPAllowStatusStage 2C84  
                      __size_of_motor_set_manual_speed 0050  
                                         ??_motor_init 0060  
                                          ??__spi_init 0063  
                                             atol@sign 0074  
                                         ??_motor_stop 0060  
                        ??_motor_increase_manual_speed 0064  
                                 ?__parse_command_long 00A0  
                                         _SSP1STATbits 000FC7  
                               ??_USBTransferOnePacket 0064  
                             __end_ofi2__i2c_wait_idle 4E32  
                                    main@startup_timer 00FD  
                          __end_of_motor_period_lookup 9BFD  
               __make_cluster_chain@remaining_clusters 00A2  
                                  __display_start@cntr 007C  
                                         _SSP2STATbits 000F73  
                __display_position_in_degrees@position 0064  
                               ??__display_signed_itoa 0093  
                                __end_of__display_itoa E6B8  
                                     i2_ResetSenseData 4880  
                       ?_APP_DeviceCustomHIDInitialize 0001  
                                      ??_fat_find_file 008F  
                               ??__parse_command_short 009E  
                MSDProcessCommandMediaPresent@capacity 00A2  
                        display_get_character@position 0060  
                             __size_of_MSDErrorHandler 011A  
                       ?__fill_buffer_get_mode_details 0060  
                                      __add_item@value 0086  
                              _motor_postscaler_lookup 982F  
                            _USBDeferStatusStagePacket 015C  
                           __size_of__display_itoa_u16 00B4  
                      __end_of__fill_buffer_get_status E8DC  
                    __fill_buffer_get_display@position 006F  
                                          _OSCTUNEbits 000F9B  
                                           _INTCONbits 000FF2  
                       __end_of_motor_move_degrees_int 53EA  
                       __parse_jump_steps@return_value 009B  
                            motor_move_steps@direction 0093  
                         __size_of__steps_from_degrees 01BA  
                                 ?_USBCtrlTrfInHandler 0001  
                                             memcpy@d1 0060  
                                             memcpy@s1 0062  
                                 i2c_eeprom_write@data 000D  
                                 i2c_eeprom_write@cntr 0025  
                        USBCtrlTrfTxService@byteToSend 0001  
                   __motor_get_speed_in_degrees@lookup 0099  
                            __display_padded_itoa@text 007B  
                                             itoa@base 0074  
                __motor_move_back_forth@return_value_1 0068  
                __motor_move_back_forth@return_value_2 0069  
                                             isdigit@c 0062  
                                             memset@p1 0060  
                                            ultoa@base 0073  
                     fat_read_from_file@cluster_number 00DB  
                 __end_of_MSDComputeDeviceInAndResidue 2ECC  
                __size_of_MSDComputeDeviceInAndResidue 00C0  
                         _MSDComputeDeviceInAndResidue 2E0C  
                           fat_modify_file@return_code 00B8  
                                     ?_USBStallHandler 0001  
                             USBStdFeatureReqHandler@p 001C  
                           ?__get_available_root_entry 0001  
                              spi_tx_tx@command_length 0062  
                        __size_of__flash_set_page_size 006E  
                                     __i2c_acknowledge 5F30  
                              __end_of_fat_create_file 0574  
                                             intlevel2 0000  
                                     spi_tx_rx@command 0060  
                             __flash_get_status@status 006F  
                                             ltoa@base 0080  
                          __size_of__root_is_available 006C  
                              fat_restore_mbr_fbr@cntr 0084  
                               __size_of_USBDeviceInit 014C  
                      __end_of_motor_clear_command_cue 5F10  
                        ?_MSDProcessCommandMediaAbsent 0001  
              __end_of_USER_USB_CALLBACK_EVENT_HANDLER 3F0A  
             __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                    ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
                     ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
                      _USER_USB_CALLBACK_EVENT_HANDLER 3E84  
            __motor_schedule_command@distance_in_steps 0060  
                                   __end_of_motor_init 5DCA  
                                         ?__parse_item 0099  
                                     ___lwmod@dividend 0060  
                  __end_of_full_circle_in_steps_string A227  
                          _full_circle_in_steps_string A212  
                         i2USBTransferOnePacket@handle 000A  
                    __end_of_ExternalFlash_SectorWrite 5890  
                                     ___lldiv@dividend 0060  
                                   __end_of_motor_stop 52B6  
                __end_of__flash_write_page_from_buffer 4C20  
               __size_of__flash_write_page_from_buffer 005A  
                        __flash_write_page_from_buffer 4BC6  
               i2SYSTEM_Initialize@pll_startup_counter 0001  
                 SYSTEM_Initialize@pll_startup_counter 0060  
                                            stricmp@s1 0061  
                                            stricmp@s2 0063  
                             _maximum_speed_arc_string A23A  
                         __end_of_beep_duration_string A29E  
                         fat_read_from_file@start_byte 00C9  
                                      _display_content 0244  
                           __end_of_flash_partial_read 5C72  
                              __end_of_MSDWriteHandler D354  
                                            strncmp@s1 0060  
                  __end_of_i2c_eeprom_recover_position 4A5C  
                                            strncmp@s2 0062  
                          _i2c_eeprom_recover_position 4A00  
                              __write_root@file_number 008E  
                                     spi_tx_tx@command 0060  
                                __size_ofi2__i2c_start 0008  
                              __size_of_MSDReadHandler 01EA  
                                __size_ofi2__i2c_write 0048  
                                __add_item@item_string 0084  
                   __parse_set_manual_speed@out_buffer 0066  
                                  fat_resize_file@root 00BB  
                           i2USBTransferOnePacket@data 0002  
                                        ??_system_init 00FD  
                                __get_item@item_string 0060  
                    __size_of__fill_buffer_get_display 00B8  
                         __end_of_use_ccw_limit_string A290  
                             ?__read_value_from_offset 0060  
                             ?_fat_read_from_file_fast 00A1  
                               _motor_speed_from_index 5E66  
                            ?__fill_buffer_get_display 0064  
                               ??_USBConfigureEndpoint 0002  
                                      ?__i2c_wait_idle 0001  
                                ?_USBCtrlTrfOutHandler 0001  
                             motor_goto_steps@position 0092  
                                      _display_prepare A344  
                                          ??_motor_isr 002D  
                             ??__flash_write_to_buffer 007A  
                             ?_APP_DeviceMSDInitialize 0001  
                                  _USBCtrlTrfRxService 11F6  
                                   _USBWakeFromSuspend 57EE  
                                ??__parse_command_long 00A6  
                                 _maximum_speed_string A29E  
                                   _i2c_display_cursor 5D04  
                      motor_set_manual_speed@new_speed 0062  
                                 _minimum_speed_string A2AC  
                              _USBStdFeatureReqHandler D8E4  
                                      _fat_modify_file E03A  
                                  i2_SYSTEM_Initialize 5030  
                                          ??_spi_tx_rx 0068  
                                          ??_spi_tx_tx 0068  
                                  _USBCtrlTrfTxService 2946  
                           __size_of_SYS_InterruptHigh 0086  
                                         ?_api_prepare 0070  
                    __motor_get_speed_in_degrees@speed 0095  
                __flash_write_page_from_buffer@command 0079  
                                             utoa@base 006B  
                                             ultoa@buf 006D  
                                    _motor_divide_jump 2F88  
                                             ultoa@val 006F  
                                      _gblMediaPresent 0139  
                   __motor_steps_from_degrees_int@temp 0095  
                             configFile_read@file_size 01F6  
                  ExternalFlash_SectorRead@sector_addr 008D  
                                    _motor_command_cue 0300  
                  __motor_calculate_distance@direction 0068  
                                  ?_USBWakeFromSuspend 0001  
                                           _PPSCONbits 000EBF  
                                     ___lldiv@quotient 0068  
                                      ___lwmod@divisor 0062  
                          ??_ExternalFlash_MediaDetect 0062  
                                  ?_i2c_display_cursor 006D  
                                ??_USBCtrlTrfInHandler 0002  
                                   ?_motor_divide_jump 0001  
                                             stricmp@r 0066  
                                             strlen@cp 0064  
                                _USBAlternateInterface 01BE  
                                      ___lwmod@counter 0064  
                        __size_of__i2c_not_acknowledge 000A  
                                             toupper@c 0060  
                                          _ptrNextData 0141  
                                         ___aldiv@sign 0069  
                     __make_cluster_chain@data_changed 00A1  
                            motor_move_steps@overshoot 0092  
                            i2USBTransferOnePacket@dir 0001  
                            i2USBTransferOnePacket@len 0004  
                                  USBEnableEndpoint@ep 000C  
                                      _endpoint_number 015F  
                                       _display_update 57B6  
                  __get_available_cluster@first_sector 008B  
                               _motor_set_manual_speed 52B6  
                             _i2c_eeprom_save_position 4E88  
                      __size_of__get_available_cluster 00CE  
                                 ?_USBCtrlTrfRxService 0001  
                 __size_of_motor_increase_manual_speed 001A  
                                        ___fladd@signs 008C  
                         __end_of_adc_read_temperature ECA4  
                            ??__parse_set_manual_speed 006A  
                                _MSDCheckForErrorCases 0EC4  
                                  ??_motor_divide_jump 009E  
                           ??__fat_offset_from_cluster 0062  
                        ?_MSDComputeDeviceInAndResidue 0060  
                                         i2__i2c_start 5F70  
                              motor_arc_move@direction 0094  
                                 ?i2_SYSTEM_Initialize 0001  
                                         i2__i2c_write 547C  
                             ?_USBCtrlEPAllowDataStage 0001  
                                       _MSBBufferIndex 013B  
                                         ___almod@sign 0069  
                                 ?_USBCtrlTrfTxService 0001  
                      __offset_from_file_number@offset 0063  
                                         ___fladd@aexp 008D  
                                        ?_encoder_init 0001  
                                         ___fladd@bexp 008E  
                                           _USBMSDInit 10E8  
                         _USBStatusStageTimeoutCounter 015D  
                                          i2__i2c_send 5F78  
                      ??_ExternalFlash_MediaInitialize 0062  
                                          i2__i2c_stop 5F68  
                                     ??_motor_arc_move 0094  
                                 ??_USBWakeFromSuspend 0018  
                             __display_itoa_long@value 00B7  
                          __end_of__flash_partial_read 437A  
                            configFile_write@file_size 00E5  
                           USBTransferOnePacket@handle 0069  
                                      __backlight_init 5F80  
                                 ??_i2c_display_cursor 006E  
                                         ?_encoder_run 0001  
    motor_divide_jump_to_nearest@divide_position_float 00A4  
                           __size_of__parse_jump_steps 0152  
                            __size_of_configFile_write 03F0  
                              __display_itoa_long@text 00BC  
                            ??__motor_schedule_command 0067  
                   __motor_distance_to_limit@direction 0078  
                           fat_resize_file@file_number 00BA  
                                           _USB_CD_Ptr 9DEC  
                           __end_of_motor_move_endless 5AA8  
                            __size_of_i2c_eeprom_write 0082  
                                          _power_state 014D  
                                          _USBInHandle 0133  
                             _APP_DeviceCustomHIDTasks 350E  
                      __size_of__motor_move_back_forth 00AA  
                           __end_of_flash_sector_write 5266  
