

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Jan 06 20:00:32 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1
   104                           	psect	text84,global,reloc=2,class=CODE,delta=1
   105                           	psect	text85,global,reloc=2,class=CODE,delta=1
   106                           	psect	text86,global,reloc=2,class=CODE,delta=1
   107                           	psect	text87,global,reloc=2,class=CODE,delta=1
   108                           	psect	text88,global,reloc=2,class=CODE,delta=1
   109                           	psect	text89,global,reloc=2,class=CODE,delta=1
   110                           	psect	text90,global,reloc=2,class=CODE,delta=1
   111                           	psect	text91,global,reloc=2,class=CODE,delta=1
   112                           	psect	text92,global,reloc=2,class=CODE,delta=1
   113                           	psect	text93,global,reloc=2,class=CODE,delta=1
   114                           	psect	text94,global,reloc=2,class=CODE,delta=1
   115                           	psect	text95,global,reloc=2,class=CODE,delta=1
   116                           	psect	text96,global,reloc=2,class=CODE,delta=1
   117                           	psect	text97,global,reloc=2,class=CODE,delta=1
   118                           	psect	text98,global,reloc=2,class=CODE,delta=1
   119                           	psect	text99,global,reloc=2,class=CODE,delta=1
   120                           	psect	text100,global,reloc=2,class=CODE,delta=1
   121                           	psect	text101,global,reloc=2,class=CODE,delta=1
   122                           	psect	text102,global,reloc=2,class=CODE,delta=1
   123                           	psect	text103,global,reloc=2,class=CODE,delta=1
   124                           	psect	text104,global,reloc=2,class=CODE,delta=1
   125                           	psect	text105,global,reloc=2,class=CODE,delta=1
   126                           	psect	text106,global,reloc=2,class=CODE,delta=1
   127                           	psect	text107,global,reloc=2,class=CODE,delta=1
   128                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text109,global,reloc=2,class=CODE,delta=1
   130                           	psect	text110,global,reloc=2,class=CODE,delta=1
   131                           	psect	text111,global,reloc=2,class=CODE,delta=1
   132                           	psect	text112,global,reloc=2,class=CODE,delta=1
   133                           	psect	text113,global,reloc=2,class=CODE,delta=1
   134                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=2
   135                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=2
   136                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=2
   137                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text118,global,reloc=2,class=CODE,delta=1,group=1
   139                           	psect	text119,global,reloc=2,class=CODE,delta=1,group=1
   140                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=1
   141                           	psect	text121,global,reloc=2,class=CODE,delta=1
   142                           	psect	text122,global,reloc=2,class=CODE,delta=1
   143                           	psect	text123,global,reloc=2,class=CODE,delta=1,group=1
   144                           	psect	text124,global,reloc=2,class=CODE,delta=1,group=1
   145                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=1
   146                           	psect	text126,global,reloc=2,class=CODE,delta=1,group=1
   147                           	psect	text127,global,reloc=2,class=CODE,delta=1,group=1
   148                           	psect	text128,global,reloc=2,class=CODE,delta=1
   149                           	psect	text129,global,reloc=2,class=CODE,delta=1,group=2
   150                           	psect	text130,global,reloc=2,class=CODE,delta=1
   151                           	psect	text131,global,reloc=2,class=CODE,delta=1
   152                           	psect	text132,global,reloc=2,class=CODE,delta=1
   153                           	psect	text133,global,reloc=2,class=CODE,delta=1
   154                           	psect	text134,global,reloc=2,class=CODE,delta=1
   155                           	psect	text135,global,reloc=2,class=CODE,delta=1
   156                           	psect	text136,global,reloc=2,class=CODE,delta=1
   157                           	psect	text137,global,reloc=2,class=CODE,delta=1
   158                           	psect	text138,global,reloc=2,class=CODE,delta=1
   159                           	psect	text139,global,reloc=2,class=CODE,delta=1
   160                           	psect	text140,global,reloc=2,class=CODE,delta=1
   161                           	psect	text141,global,reloc=2,class=CODE,delta=1
   162                           	psect	text142,global,reloc=2,class=CODE,delta=1
   163                           	psect	text143,global,reloc=2,class=CODE,delta=1
   164                           	psect	text144,global,reloc=2,class=CODE,delta=1
   165                           	psect	text145,global,reloc=2,class=CODE,delta=1
   166                           	psect	text146,global,reloc=2,class=CODE,delta=1
   167                           	psect	text147,global,reloc=2,class=CODE,delta=1
   168                           	psect	text148,global,reloc=2,class=CODE,delta=1
   169                           	psect	text149,global,reloc=2,class=CODE,delta=1
   170                           	psect	text150,global,reloc=2,class=CODE,delta=1
   171                           	psect	text151,global,reloc=2,class=CODE,delta=1
   172                           	psect	text152,global,reloc=2,class=CODE,delta=1
   173                           	psect	text153,global,reloc=2,class=CODE,delta=1
   174                           	psect	text154,global,reloc=2,class=CODE,delta=1
   175                           	psect	text155,global,reloc=2,class=CODE,delta=1
   176                           	psect	text156,global,reloc=2,class=CODE,delta=1
   177                           	psect	text157,global,reloc=2,class=CODE,delta=1
   178                           	psect	text158,global,reloc=2,class=CODE,delta=1
   179                           	psect	text159,global,reloc=2,class=CODE,delta=1
   180                           	psect	text160,global,reloc=2,class=CODE,delta=1
   181                           	psect	text161,global,reloc=2,class=CODE,delta=1
   182                           	psect	text162,global,reloc=2,class=CODE,delta=1
   183                           	psect	text163,global,reloc=2,class=CODE,delta=1
   184                           	psect	text164,global,reloc=2,class=CODE,delta=1
   185                           	psect	text165,global,reloc=2,class=CODE,delta=1
   186                           	psect	text166,global,reloc=2,class=CODE,delta=1,group=2
   187                           	psect	text167,global,reloc=2,class=CODE,delta=1
   188                           	psect	text168,global,reloc=2,class=CODE,delta=1
   189                           	psect	text169,global,reloc=2,class=CODE,delta=1
   190                           	psect	text170,global,reloc=2,class=CODE,delta=1
   191                           	psect	text171,global,reloc=2,class=CODE,delta=1
   192                           	psect	text172,global,reloc=2,class=CODE,delta=1
   193                           	psect	text173,global,reloc=2,class=CODE,delta=1
   194                           	psect	text174,global,reloc=2,class=CODE,delta=1
   195                           	psect	text175,global,reloc=2,class=CODE,delta=1
   196                           	psect	text176,global,reloc=2,class=CODE,delta=1
   197                           	psect	text177,global,reloc=2,class=CODE,delta=1
   198                           	psect	text178,global,reloc=2,class=CODE,delta=1
   199                           	psect	text179,global,reloc=2,class=CODE,delta=1
   200                           	psect	text180,global,reloc=2,class=CODE,delta=1
   201                           	psect	text181,global,reloc=2,class=CODE,delta=1
   202                           	psect	text182,global,reloc=2,class=CODE,delta=1
   203                           	psect	text183,global,reloc=2,class=CODE,delta=1
   204                           	psect	text184,global,reloc=2,class=CODE,delta=1
   205                           	psect	text185,global,reloc=2,class=CODE,delta=1
   206                           	psect	text186,global,reloc=2,class=CODE,delta=1
   207                           	psect	text187,global,reloc=2,class=CODE,delta=1
   208                           	psect	text188,global,reloc=2,class=CODE,delta=1
   209                           	psect	text189,global,reloc=2,class=CODE,delta=1
   210                           	psect	text190,global,reloc=2,class=CODE,delta=1
   211                           	psect	text191,global,reloc=2,class=CODE,delta=1
   212                           	psect	text192,global,reloc=2,class=CODE,delta=1
   213                           	psect	text193,global,reloc=2,class=CODE,delta=1
   214                           	psect	text194,global,reloc=2,class=CODE,delta=1
   215                           	psect	text195,global,reloc=2,class=CODE,delta=1
   216                           	psect	text196,global,reloc=2,class=CODE,delta=1
   217                           	psect	text197,global,reloc=2,class=CODE,delta=1
   218                           	psect	text198,global,reloc=2,class=CODE,delta=1
   219                           	psect	text199,global,reloc=2,class=CODE,delta=1,group=1
   220                           	psect	text200,global,reloc=2,class=CODE,delta=1
   221                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   222                           	psect	text202,global,reloc=2,class=CODE,delta=1
   223                           	psect	text203,global,reloc=2,class=CODE,delta=1
   224                           	psect	text204,global,reloc=2,class=CODE,delta=1
   225                           	psect	text205,global,reloc=2,class=CODE,delta=1
   226                           	psect	text206,global,reloc=2,class=CODE,delta=1
   227                           	psect	text207,global,reloc=2,class=CODE,delta=1
   228                           	psect	text208,global,reloc=2,class=CODE,delta=1
   229                           	psect	text209,global,reloc=2,class=CODE,delta=1
   230                           	psect	text210,global,reloc=2,class=CODE,delta=1
   231                           	psect	text211,global,reloc=2,class=CODE,delta=1
   232                           	psect	text212,global,reloc=2,class=CODE,delta=1
   233                           	psect	text213,global,reloc=2,class=CODE,delta=1
   234                           	psect	text214,global,reloc=2,class=CODE,delta=1
   235                           	psect	text215,global,reloc=2,class=CODE,delta=1
   236                           	psect	text216,global,reloc=2,class=CODE,delta=1
   237                           	psect	text217,global,reloc=2,class=CODE,delta=1
   238                           	psect	text218,global,reloc=2,class=CODE,delta=1
   239                           	psect	text219,global,reloc=2,class=CODE,delta=1
   240                           	psect	text220,global,reloc=2,class=CODE,delta=1
   241                           	psect	text221,global,reloc=2,class=CODE,delta=1
   242                           	psect	text222,global,reloc=2,class=CODE,delta=1
   243                           	psect	text223,global,reloc=2,class=CODE,delta=1
   244                           	psect	text224,global,reloc=2,class=CODE,delta=1
   245                           	psect	text225,global,reloc=2,class=CODE,delta=1
   246                           	psect	text226,global,reloc=2,class=CODE,delta=1
   247                           	psect	text227,global,reloc=2,class=CODE,delta=1
   248                           	psect	text228,global,reloc=2,class=CODE,delta=1
   249                           	psect	text229,global,reloc=2,class=CODE,delta=1
   250                           	psect	text230,global,reloc=2,class=CODE,delta=1
   251                           	psect	text231,global,reloc=2,class=CODE,delta=1
   252                           	psect	text232,global,reloc=2,class=CODE,delta=1
   253                           	psect	text233,global,reloc=2,class=CODE,delta=1
   254                           	psect	text234,global,reloc=2,class=CODE,delta=1
   255                           	psect	text235,global,reloc=2,class=CODE,delta=1
   256                           	psect	text236,global,reloc=2,class=CODE,delta=1
   257                           	psect	text237,global,reloc=2,class=CODE,delta=1
   258                           	psect	text238,global,reloc=2,class=CODE,delta=1
   259                           	psect	text239,global,reloc=2,class=CODE,delta=1
   260                           	psect	text240,global,reloc=2,class=CODE,delta=1
   261                           	psect	text241,global,reloc=2,class=CODE,delta=1
   262                           	psect	text242,global,reloc=2,class=CODE,delta=1
   263                           	psect	text243,global,reloc=2,class=CODE,delta=1
   264                           	psect	text244,global,reloc=2,class=CODE,delta=1
   265                           	psect	text245,global,reloc=2,class=CODE,delta=1
   266                           	psect	text246,global,reloc=2,class=CODE,delta=1
   267                           	psect	text247,global,reloc=2,class=CODE,delta=1
   268                           	psect	text248,global,reloc=2,class=CODE,delta=1
   269                           	psect	text249,global,reloc=2,class=CODE,delta=1
   270                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   271                           	psect	text250,global,reloc=2,class=CODE,delta=1
   272                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   273                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   274                           	dabs	1,0x600,512,_msd_buffer
   275                           	dabs	1,0xD00,48,_BDT
   276                           	dabs	1,0xD40,31,_msd_cbw
   277                           	dabs	1,0xD80,13,_msd_csw
   278                           	dabs	1,0xD38,8,_CtrlTrfData
   279                           	dabs	1,0xD30,8,_SetupPkt
   280  0000                     
   281                           ; Version 2.00
   282                           ; Generated 27/05/2018 GMT
   283                           ; 
   284                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   285                           ; All rights reserved.
   286                           ; 
   287                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   288                           ; 
   289                           ; Redistribution and use in source and binary forms, with or without modification, are
   290                           ; permitted provided that the following conditions are met:
   291                           ; 
   292                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   293                           ;        conditions and the following disclaimer.
   294                           ; 
   295                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   296                           ;        of conditions and the following disclaimer in the documentation and/or other
   297                           ;        materials provided with the distribution.
   298                           ; 
   299                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   300                           ;        software without specific prior written permission.
   301                           ; 
   302                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   303                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   304                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   305                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   306                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   307                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   308                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   309                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   310                           ; 
   311                           ; 
   312                           ; Code-generator required, PIC18F47J53 Definitions
   313                           ; 
   314                           ; SFR Addresses
   315  0000                     
   316                           	psect	idataBANK2
   317  0157E8                     __pidataBANK2:
   318                           	opt stack 0
   319                           
   320                           ;initializer for _LUN
   321  0157E8  B6                 	db	low _ExternalFlash_MediaInitialize
   322  0157E9  62                 	db	high _ExternalFlash_MediaInitialize
   323  0157EA  01                 	db	low (_ExternalFlash_MediaInitialize shr (0+16))
   324  0157EB  AE                 	db	low _ExternalFlash_CapacityRead
   325  0157EC  63                 	db	high _ExternalFlash_CapacityRead
   326  0157ED  01                 	db	low (_ExternalFlash_CapacityRead shr (0+16))
   327  0157EE  2A                 	db	low _ExternalFlash_SectorSizeRead
   328  0157EF  64                 	db	high _ExternalFlash_SectorSizeRead
   329  0157F0  01                 	db	low (_ExternalFlash_SectorSizeRead shr (0+16))
   330  0157F1  6C                 	db	low _ExternalFlash_MediaDetect
   331  0157F2  64                 	db	high _ExternalFlash_MediaDetect
   332  0157F3  01                 	db	low (_ExternalFlash_MediaDetect shr (0+16))
   333  0157F4  B8                 	db	low _ExternalFlash_SectorRead
   334  0157F5  5D                 	db	high _ExternalFlash_SectorRead
   335  0157F6  01                 	db	low (_ExternalFlash_SectorRead shr (0+16))
   336  0157F7  B6                 	db	low _ExternalFlash_WriteProtectStateGet
   337  0157F8  64                 	db	high _ExternalFlash_WriteProtectStateGet
   338  0157F9  01                 	db	low (_ExternalFlash_WriteProtectStateGet shr (0+16))
   339  0157FA  84                 	db	low _ExternalFlash_SectorWrite
   340  0157FB  5D                 	db	high _ExternalFlash_SectorWrite
   341  0157FC  01                 	db	low (_ExternalFlash_SectorWrite shr (0+16))
   342  0157FD  00                 	db	0
   343  0157FE  00                 	db	0
   344  0157FF  00                 	db	0
   345  015800  00                 	db	0
   346  015801  00                 	db	0
   347  015802  00                 	db	0
   348  015803  00                 	db	0
   349  015804  00                 	db	0
   350                           
   351                           ;initializer for i2c_display_init@F7104
   352  015805  3A                 	db	58
   353  015806  1E                 	db	30
   354  015807  39                 	db	57
   355  015808  0C                 	db	12
   356  015809  74                 	db	116
   357  01580A  5C                 	db	92
   358  01580B  6D                 	db	109
   359  01580C  0C                 	db	12
   360  01580D  01                 	db	1
   361                           
   362                           ;initializer for __i2c_display_send_init_sequence@F7101
   363  01580E  3A                 	db	58
   364  01580F  1E                 	db	30
   365  015810  39                 	db	57
   366  015811  0C                 	db	12
   367  015812  74                 	db	116
   368  015813  5C                 	db	92
   369  015814  6D                 	db	109
   370  015815  0C                 	db	12
   371  015816  01                 	db	1
   372                           
   373                           ;initializer for _tx_buf
   374  015817  01                 	db	1
   375  015818  02                 	db	2
   376  015819  03                 	db	3
   377  01581A  04                 	db	4
   378  01581B  05                 	db	5
   379  01581C  06                 	db	6
   380  01581D  07                 	db	7
   381  01581E  08                 	db	8
   382                           
   383                           ;initializer for _configFile_used_name
   384  01581F  55                 	db	85
   385  015820  53                 	db	83
   386  015821  45                 	db	69
   387  015822  44                 	db	68
   388  015823  43                 	db	67
   389  015824  4F                 	db	79
   390  015825  4E                 	db	78
   391  015826  46                 	db	70
   392                           
   393                           ;initializer for _configFile_name
   394  015827  43                 	db	67
   395  015828  4F                 	db	79
   396  015829  4E                 	db	78
   397  01582A  46                 	db	70
   398  01582B  49                 	db	73
   399  01582C  47                 	db	71
   400  01582D  20                 	db	32
   401  01582E  20                 	db	32
   402                           
   403                           ;initializer for _configFile_used_extention
   404  01582F  54                 	db	84
   405  015830  58                 	db	88
   406  015831  54                 	db	84
   407                           
   408                           ;initializer for _configFile_extention
   409  015832  54                 	db	84
   410  015833  58                 	db	88
   411  015834  54                 	db	84
   412                           
   413                           	psect	idataBANK4
   414  015608                     __pidataBANK4:
   415                           	opt stack 0
   416                           
   417                           ;initializer for _dc_startup
   418  015608  2A                 	db	42
   419  015609  20                 	db	32
   420  01560A  20                 	db	32
   421  01560B  53                 	db	83
   422  01560C  74                 	db	116
   423  01560D  65                 	db	101
   424  01560E  70                 	db	112
   425  01560F  70                 	db	112
   426  015610  65                 	db	101
   427  015611  72                 	db	114
   428  015612  20                 	db	32
   429  015613  4D                 	db	77
   430  015614  6F                 	db	111
   431  015615  74                 	db	116
   432  015616  6F                 	db	111
   433  015617  72                 	db	114
   434  015618  20                 	db	32
   435  015619  20                 	db	32
   436  01561A  20                 	db	32
   437  01561B  2A                 	db	42
   438  01561C  2A                 	db	42
   439  01561D  20                 	db	32
   440  01561E  20                 	db	32
   441  01561F  20                 	db	32
   442  015620  20                 	db	32
   443  015621  43                 	db	67
   444  015622  6F                 	db	111
   445  015623  6E                 	db	110
   446  015624  74                 	db	116
   447  015625  72                 	db	114
   448  015626  6F                 	db	111
   449  015627  6C                 	db	108
   450  015628  6C                 	db	108
   451  015629  65                 	db	101
   452  01562A  72                 	db	114
   453  01562B  20                 	db	32
   454  01562C  20                 	db	32
   455  01562D  20                 	db	32
   456  01562E  20                 	db	32
   457  01562F  2A                 	db	42
   458  015630  2A                 	db	42
   459  015631  20                 	db	32
   460  015632  20                 	db	32
   461  015633  20                 	db	32
   462  015634  20                 	db	32
   463  015635  76                 	db	118
   464  015636  20                 	db	32
   465  015637  20                 	db	32
   466  015638  20                 	db	32
   467  015639  20                 	db	32
   468  01563A  20                 	db	32
   469  01563B  20                 	db	32
   470  01563C  20                 	db	32
   471  01563D  20                 	db	32
   472  01563E  20                 	db	32
   473  01563F  20                 	db	32
   474  015640  20                 	db	32
   475  015641  20                 	db	32
   476  015642  20                 	db	32
   477  015643  2A                 	db	42
   478  015644  2A                 	db	42
   479  015645  20                 	db	32
   480  015646  20                 	db	32
   481  015647  73                 	db	115
   482  015648  6F                 	db	111
   483  015649  6C                 	db	108
   484  01564A  64                 	db	100
   485  01564B  65                 	db	101
   486  01564C  72                 	db	114
   487  01564D  6E                 	db	110
   488  01564E  65                 	db	101
   489  01564F  72                 	db	114
   490  015650  64                 	db	100
   491  015651  2E                 	db	46
   492  015652  63                 	db	99
   493  015653  6F                 	db	111
   494  015654  6D                 	db	109
   495  015655  20                 	db	32
   496  015656  20                 	db	32
   497  015657  2A                 	db	42
   498                           
   499                           	psect	mediumconst
   500  009092                     __pmediumconst:
   501                           	opt stack 0
   502  009092  00                 	db	0
   503  009093                     _motor_speed_lookup:
   504                           	opt stack 0
   505  009093  0008               	dw	8
   506  009095  000C               	dw	12
   507  009097  0010               	dw	16
   508  009099  0013               	dw	19
   509  00909B  0016               	dw	22
   510  00909D  0019               	dw	25
   511  00909F  001C               	dw	28
   512  0090A1  001E               	dw	30
   513  0090A3  0021               	dw	33
   514  0090A5  0023               	dw	35
   515  0090A7  0026               	dw	38
   516  0090A9  0028               	dw	40
   517  0090AB  002A               	dw	42
   518  0090AD  002C               	dw	44
   519  0090AF  002E               	dw	46
   520  0090B1  0030               	dw	48
   521  0090B3  0032               	dw	50
   522  0090B5  0034               	dw	52
   523  0090B7  0036               	dw	54
   524  0090B9  0038               	dw	56
   525  0090BB  003A               	dw	58
   526  0090BD  003C               	dw	60
   527  0090BF  003D               	dw	61
   528  0090C1  003F               	dw	63
   529  0090C3  0041               	dw	65
   530  0090C5  0043               	dw	67
   531  0090C7  0045               	dw	69
   532  0090C9  0046               	dw	70
   533  0090CB  0048               	dw	72
   534  0090CD  0049               	dw	73
   535  0090CF  004B               	dw	75
   536  0090D1  004D               	dw	77
   537  0090D3  004E               	dw	78
   538  0090D5  0050               	dw	80
   539  0090D7  0051               	dw	81
   540  0090D9  0053               	dw	83
   541  0090DB  0054               	dw	84
   542  0090DD  0056               	dw	86
   543  0090DF  0057               	dw	87
   544  0090E1  0059               	dw	89
   545  0090E3  005A               	dw	90
   546  0090E5  005C               	dw	92
   547  0090E7  005D               	dw	93
   548  0090E9  005F               	dw	95
   549  0090EB  0060               	dw	96
   550  0090ED  0062               	dw	98
   551  0090EF  0063               	dw	99
   552  0090F1  0064               	dw	100
   553  0090F3  0066               	dw	102
   554  0090F5  0067               	dw	103
   555  0090F7  0069               	dw	105
   556  0090F9  006A               	dw	106
   557  0090FB  006C               	dw	108
   558  0090FD  006D               	dw	109
   559  0090FF  006E               	dw	110
   560  009101  0070               	dw	112
   561  009103  0071               	dw	113
   562  009105  0072               	dw	114
   563  009107  0073               	dw	115
   564  009109  0074               	dw	116
   565  00910B  0076               	dw	118
   566  00910D  0078               	dw	120
   567  00910F  0079               	dw	121
   568  009111  007A               	dw	122
   569  009113  007B               	dw	123
   570  009115  007D               	dw	125
   571  009117  007E               	dw	126
   572  009119  007F               	dw	127
   573  00911B  0082               	dw	130
   574  00911D  0085               	dw	133
   575  00911F  0087               	dw	135
   576  009121  008A               	dw	138
   577  009123  008C               	dw	140
   578  009125  008F               	dw	143
   579  009127  0091               	dw	145
   580  009129  0092               	dw	146
   581  00912B  0094               	dw	148
   582  00912D  0098               	dw	152
   583  00912F  009A               	dw	154
   584  009131  009C               	dw	156
   585  009133  009E               	dw	158
   586  009135  00A1               	dw	161
   587  009137  00A3               	dw	163
   588  009139  00A5               	dw	165
   589  00913B  00A7               	dw	167
   590  00913D  00AA               	dw	170
   591  00913F  00AC               	dw	172
   592  009141  00AF               	dw	175
   593  009143  00B2               	dw	178
   594  009145  00B4               	dw	180
   595  009147  00B7               	dw	183
   596  009149  00B8               	dw	184
   597  00914B  00BA               	dw	186
   598  00914D  00BC               	dw	188
   599  00914F  00BE               	dw	190
   600  009151  00C0               	dw	192
   601  009153  00C3               	dw	195
   602  009155  00C4               	dw	196
   603  009157  00C6               	dw	198
   604  009159  00C8               	dw	200
   605  00915B  00CA               	dw	202
   606  00915D  00CC               	dw	204
   607  00915F  00CE               	dw	206
   608  009161  00D0               	dw	208
   609  009163  00D2               	dw	210
   610  009165  00D4               	dw	212
   611  009167  00D6               	dw	214
   612  009169  00D8               	dw	216
   613  00916B  00D9               	dw	217
   614  00916D  00DB               	dw	219
   615  00916F  00DD               	dw	221
   616  009171  00DF               	dw	223
   617  009173  00E1               	dw	225
   618  009175  00E2               	dw	226
   619  009177  00E5               	dw	229
   620  009179  00E7               	dw	231
   621  00917B  00E8               	dw	232
   622  00917D  00EA               	dw	234
   623  00917F  00EC               	dw	236
   624  009181  00EE               	dw	238
   625  009183  00EF               	dw	239
   626  009185  00F2               	dw	242
   627  009187  00F3               	dw	243
   628  009189  00F5               	dw	245
   629  00918B  00F7               	dw	247
   630  00918D  00F8               	dw	248
   631  00918F  00FB               	dw	251
   632  009191  00FD               	dw	253
   633  009193  0100               	dw	256
   634  009195  0103               	dw	259
   635  009197  0104               	dw	260
   636  009199  0107               	dw	263
   637  00919B  010A               	dw	266
   638  00919D  010C               	dw	268
   639  00919F  010F               	dw	271
   640  0091A1  0112               	dw	274
   641  0091A3  0114               	dw	276
   642  0091A5  0117               	dw	279
   643  0091A7  0119               	dw	281
   644  0091A9  011C               	dw	284
   645  0091AB  011E               	dw	286
   646  0091AD  0121               	dw	289
   647  0091AF  0123               	dw	291
   648  0091B1  0125               	dw	293
   649  0091B3  0129               	dw	297
   650  0091B5  012B               	dw	299
   651  0091B7  012C               	dw	300
   652  0091B9  012E               	dw	302
   653  0091BB  0132               	dw	306
   654  0091BD  0134               	dw	308
   655  0091BF  0136               	dw	310
   656  0091C1  0138               	dw	312
   657  0091C3  013B               	dw	315
   658  0091C5  013D               	dw	317
   659  0091C7  013F               	dw	319
   660  0091C9  0143               	dw	323
   661  0091CB  0146               	dw	326
   662  0091CD  0148               	dw	328
   663  0091CF  014A               	dw	330
   664  0091D1  014C               	dw	332
   665  0091D3  014F               	dw	335
   666  0091D5  0151               	dw	337
   667  0091D7  0154               	dw	340
   668  0091D9  0156               	dw	342
   669  0091DB  0159               	dw	345
   670  0091DD  015B               	dw	347
   671  0091DF  015E               	dw	350
   672  0091E1  0160               	dw	352
   673  0091E3  0163               	dw	355
   674  0091E5  0166               	dw	358
   675  0091E7  0169               	dw	361
   676  0091E9  016B               	dw	363
   677  0091EB  016E               	dw	366
   678  0091ED  0171               	dw	369
   679  0091EF  0174               	dw	372
   680  0091F1  0177               	dw	375
   681  0091F3  017A               	dw	378
   682  0091F5  017D               	dw	381
   683  0091F7  0180               	dw	384
   684  0091F9  0183               	dw	387
   685  0091FB  0187               	dw	391
   686  0091FD  018A               	dw	394
   687  0091FF  018D               	dw	397
   688  009201  0191               	dw	401
   689  009203  0194               	dw	404
   690  009205  0198               	dw	408
   691  009207  019B               	dw	411
   692  009209  019F               	dw	415
   693  00920B  01A3               	dw	419
   694  00920D  01A6               	dw	422
   695  00920F  01AA               	dw	426
   696  009211  01AE               	dw	430
   697  009213  01B2               	dw	434
   698  009215  01B6               	dw	438
   699  009217  01BA               	dw	442
   700  009219  01BE               	dw	446
   701  00921B  01C3               	dw	451
   702  00921D  01C7               	dw	455
   703  00921F  01CC               	dw	460
   704  009221  01D0               	dw	464
   705  009223  01D5               	dw	469
   706  009225  01D9               	dw	473
   707  009227  01DE               	dw	478
   708  009229  01E3               	dw	483
   709  00922B  01E8               	dw	488
   710  00922D  01ED               	dw	493
   711  00922F  01F3               	dw	499
   712  009231  01F8               	dw	504
   713  009233  01FE               	dw	510
   714  009235  0203               	dw	515
   715  009237  0209               	dw	521
   716  009239  020F               	dw	527
   717  00923B  0215               	dw	533
   718  00923D  021B               	dw	539
   719  00923F  0221               	dw	545
   720  009241  0227               	dw	551
   721  009243  022E               	dw	558
   722  009245  0235               	dw	565
   723  009247  023C               	dw	572
   724  009249  0243               	dw	579
   725  00924B  024A               	dw	586
   726  00924D  0251               	dw	593
   727  00924F  0259               	dw	601
   728  009251  0261               	dw	609
   729  009253  0269               	dw	617
   730  009255  0271               	dw	625
   731  009257  0279               	dw	633
   732  009259  0282               	dw	642
   733  00925B  028B               	dw	651
   734  00925D  0294               	dw	660
   735  00925F  029E               	dw	670
   736  009261  02A7               	dw	679
   737  009263  02B1               	dw	689
   738  009265  02BC               	dw	700
   739  009267  02C6               	dw	710
   740  009269  02D1               	dw	721
   741  00926B  02DC               	dw	732
   742  00926D  02DC               	dw	732
   743  00926F  02DF               	dw	735
   744  009271  02E2               	dw	738
   745  009273  02E5               	dw	741
   746  009275  02E8               	dw	744
   747  009277  02EB               	dw	747
   748  009279  02EE               	dw	750
   749  00927B  02F1               	dw	753
   750  00927D  02F4               	dw	756
   751  00927F  02F7               	dw	759
   752  009281  02FA               	dw	762
   753  009283  02FD               	dw	765
   754  009285  0300               	dw	768
   755  009287  0304               	dw	772
   756  009289  0307               	dw	775
   757  00928B  030A               	dw	778
   758  00928D  030D               	dw	781
   759  00928F  0311               	dw	785
   760  009291  0314               	dw	788
   761  009293  0317               	dw	791
   762  009295  031A               	dw	794
   763  009297  031E               	dw	798
   764  009299  0321               	dw	801
   765  00929B  0325               	dw	805
   766  00929D  0328               	dw	808
   767  00929F  032C               	dw	812
   768  0092A1  032F               	dw	815
   769  0092A3  0333               	dw	819
   770  0092A5  0336               	dw	822
   771  0092A7  033A               	dw	826
   772  0092A9  033E               	dw	830
   773  0092AB  0341               	dw	833
   774  0092AD  0345               	dw	837
   775  0092AF  0349               	dw	841
   776  0092B1  034D               	dw	845
   777  0092B3  0350               	dw	848
   778  0092B5  0354               	dw	852
   779  0092B7  0358               	dw	856
   780  0092B9  035C               	dw	860
   781  0092BB  0360               	dw	864
   782  0092BD  0364               	dw	868
   783  0092BF  0368               	dw	872
   784  0092C1  036C               	dw	876
   785  0092C3  0370               	dw	880
   786  0092C5  0374               	dw	884
   787  0092C7  0379               	dw	889
   788  0092C9  037D               	dw	893
   789  0092CB  0381               	dw	897
   790  0092CD  0385               	dw	901
   791  0092CF  038A               	dw	906
   792  0092D1  038E               	dw	910
   793  0092D3  0393               	dw	915
   794  0092D5  0397               	dw	919
   795  0092D7  039C               	dw	924
   796  0092D9  03A0               	dw	928
   797  0092DB  03A5               	dw	933
   798  0092DD  03AA               	dw	938
   799  0092DF  03AE               	dw	942
   800  0092E1  03B3               	dw	947
   801  0092E3  03B8               	dw	952
   802  0092E5  03BD               	dw	957
   803  0092E7  03C2               	dw	962
   804  0092E9  03C6               	dw	966
   805  0092EB  03CC               	dw	972
   806  0092ED  03D1               	dw	977
   807  0092EF  03D6               	dw	982
   808  0092F1  03DB               	dw	987
   809  0092F3  03E0               	dw	992
   810  0092F5  03E5               	dw	997
   811  0092F7  03EB               	dw	1003
   812  0092F9  03F0               	dw	1008
   813  0092FB  03F6               	dw	1014
   814  0092FD  03FB               	dw	1019
   815  0092FF  0401               	dw	1025
   816  009301  0406               	dw	1030
   817  009303  040C               	dw	1036
   818  009305  0412               	dw	1042
   819  009307  0417               	dw	1047
   820  009309  041D               	dw	1053
   821  00930B  0423               	dw	1059
   822  00930D  0429               	dw	1065
   823  00930F  042F               	dw	1071
   824  009311  0436               	dw	1078
   825  009313  043C               	dw	1084
   826  009315  0442               	dw	1090
   827  009317  0448               	dw	1096
   828  009319  044F               	dw	1103
   829  00931B  0455               	dw	1109
   830  00931D  045C               	dw	1116
   831  00931F  0463               	dw	1123
   832  009321  046A               	dw	1130
   833  009323  0470               	dw	1136
   834  009325  0477               	dw	1143
   835  009327  047E               	dw	1150
   836  009329  0485               	dw	1157
   837  00932B  048D               	dw	1165
   838  00932D  0494               	dw	1172
   839  00932F  049B               	dw	1179
   840  009331  04A3               	dw	1187
   841  009333  04AA               	dw	1194
   842  009335  04B2               	dw	1202
   843  009337  04BA               	dw	1210
   844  009339  04C2               	dw	1218
   845  00933B  04C9               	dw	1225
   846  00933D  04D2               	dw	1234
   847  00933F  04DA               	dw	1242
   848  009341  04E2               	dw	1250
   849  009343  04EA               	dw	1258
   850  009345  04F3               	dw	1267
   851  009347  04FC               	dw	1276
   852  009349  0504               	dw	1284
   853  00934B  050D               	dw	1293
   854  00934D  0516               	dw	1302
   855  00934F  051F               	dw	1311
   856  009351  0528               	dw	1320
   857  009353  0532               	dw	1330
   858  009355  053B               	dw	1339
   859  009357  0545               	dw	1349
   860  009359  054F               	dw	1359
   861  00935B  0559               	dw	1369
   862  00935D  0563               	dw	1379
   863  00935F  056D               	dw	1389
   864  009361  0577               	dw	1399
   865  009363  0582               	dw	1410
   866  009365  058C               	dw	1420
   867  009367  0597               	dw	1431
   868  009369  05A2               	dw	1442
   869  00936B  05AD               	dw	1453
   870  00936D  05B9               	dw	1465
   871  00936F  05C4               	dw	1476
   872  009371  05D0               	dw	1488
   873  009373  05DC               	dw	1500
   874  009375  05E8               	dw	1512
   875  009377  05F4               	dw	1524
   876  009379  0601               	dw	1537
   877  00937B  060E               	dw	1550
   878  00937D  061A               	dw	1562
   879  00937F  0628               	dw	1576
   880  009381  0635               	dw	1589
   881  009383  0643               	dw	1603
   882  009385  0650               	dw	1616
   883  009387  065E               	dw	1630
   884  009389  066D               	dw	1645
   885  00938B  067B               	dw	1659
   886  00938D  068A               	dw	1674
   887  00938F  0699               	dw	1689
   888  009391  06A9               	dw	1705
   889  009393  06B8               	dw	1720
   890  009395  06C8               	dw	1736
   891  009397  06D8               	dw	1752
   892  009399  06E9               	dw	1769
   893  00939B  06FA               	dw	1786
   894  00939D  070B               	dw	1803
   895  00939F  071C               	dw	1820
   896  0093A1  072E               	dw	1838
   897  0093A3  0740               	dw	1856
   898  0093A5  0753               	dw	1875
   899  0093A7  0766               	dw	1894
   900  0093A9  0779               	dw	1913
   901  0093AB  078D               	dw	1933
   902  0093AD  07A1               	dw	1953
   903  0093AF  07B6               	dw	1974
   904  0093B1  07CB               	dw	1995
   905  0093B3  07E0               	dw	2016
   906  0093B5  07F6               	dw	2038
   907  0093B7  080C               	dw	2060
   908  0093B9  0823               	dw	2083
   909  0093BB  083B               	dw	2107
   910  0093BD  0853               	dw	2131
   911  0093BF  086B               	dw	2155
   912  0093C1  0884               	dw	2180
   913  0093C3  089E               	dw	2206
   914  0093C5  08B8               	dw	2232
   915  0093C7  08D3               	dw	2259
   916  0093C9  08EF               	dw	2287
   917  0093CB  090B               	dw	2315
   918  0093CD  0928               	dw	2344
   919  0093CF  0945               	dw	2373
   920  0093D1  0964               	dw	2404
   921  0093D3  0983               	dw	2435
   922  0093D5  09A3               	dw	2467
   923  0093D7  09C4               	dw	2500
   924  0093D9  09E6               	dw	2534
   925  0093DB  0A08               	dw	2568
   926  0093DD  0A2C               	dw	2604
   927  0093DF  0A51               	dw	2641
   928  0093E1  0A77               	dw	2679
   929  0093E3  0A9D               	dw	2717
   930  0093E5  0AC5               	dw	2757
   931  0093E7  0AEF               	dw	2799
   932  0093E9  0B19               	dw	2841
   933  0093EB  0B45               	dw	2885
   934  0093ED  0B72               	dw	2930
   935  0093EF  0B72               	dw	2930
   936  0093F1  0B7D               	dw	2941
   937  0093F3  0B89               	dw	2953
   938  0093F5  0B94               	dw	2964
   939  0093F7  0BA0               	dw	2976
   940  0093F9  0BAC               	dw	2988
   941  0093FB  0BB8               	dw	3000
   942  0093FD  0BC4               	dw	3012
   943  0093FF  0BD0               	dw	3024
   944  009401  0BDC               	dw	3036
   945  009403  0BE9               	dw	3049
   946  009405  0BF5               	dw	3061
   947  009407  0C02               	dw	3074
   948  009409  0C0E               	dw	3086
   949  00940B  0C1B               	dw	3099
   950  00940D  0C28               	dw	3112
   951  00940F  0C35               	dw	3125
   952  009411  0C42               	dw	3138
   953  009413  0C4F               	dw	3151
   954  009415  0C5D               	dw	3165
   955  009417  0C6A               	dw	3178
   956  009419  0C77               	dw	3191
   957  00941B  0C85               	dw	3205
   958  00941D  0C93               	dw	3219
   959  00941F  0CA1               	dw	3233
   960  009421  0CAF               	dw	3247
   961  009423  0CBD               	dw	3261
   962  009425  0CCB               	dw	3275
   963  009427  0CD9               	dw	3289
   964  009429  0CE8               	dw	3304
   965  00942B  0CF7               	dw	3319
   966  00942D  0D05               	dw	3333
   967  00942F  0D14               	dw	3348
   968  009431  0D23               	dw	3363
   969  009433  0D32               	dw	3378
   970  009435  0D42               	dw	3394
   971  009437  0D51               	dw	3409
   972  009439  0D61               	dw	3425
   973  00943B  0D70               	dw	3440
   974  00943D  0D80               	dw	3456
   975  00943F  0D90               	dw	3472
   976  009441  0DA0               	dw	3488
   977  009443  0DB1               	dw	3505
   978  009445  0DC1               	dw	3521
   979  009447  0DD2               	dw	3538
   980  009449  0DE3               	dw	3555
   981  00944B  0DF3               	dw	3571
   982  00944D  0E05               	dw	3589
   983  00944F  0E16               	dw	3606
   984  009451  0E27               	dw	3623
   985  009453  0E39               	dw	3641
   986  009455  0E4B               	dw	3659
   987  009457  0E5C               	dw	3676
   988  009459  0E6F               	dw	3695
   989  00945B  0E81               	dw	3713
   990  00945D  0E93               	dw	3731
   991  00945F  0EA6               	dw	3750
   992  009461                     __end_of_motor_speed_lookup:
   993                           	opt stack 0
   994  009461                     _motor_steps_lookup:
   995                           	opt stack 0
   996  009461  0001               	dw	1
   997  009463  0002               	dw	2
   998  009465  0003               	dw	3
   999  009467  0004               	dw	4
  1000  009469  0005               	dw	5
  1001  00946B  0006               	dw	6
  1002  00946D  0007               	dw	7
  1003  00946F  0008               	dw	8
  1004  009471  0009               	dw	9
  1005  009473  000A               	dw	10
  1006  009475  000B               	dw	11
  1007  009477  000C               	dw	12
  1008  009479  000D               	dw	13
  1009  00947B  000E               	dw	14
  1010  00947D  000F               	dw	15
  1011  00947F  0010               	dw	16
  1012  009481  0011               	dw	17
  1013  009483  0012               	dw	18
  1014  009485  0013               	dw	19
  1015  009487  0014               	dw	20
  1016  009489  0015               	dw	21
  1017  00948B  0016               	dw	22
  1018  00948D  0017               	dw	23
  1019  00948F  0018               	dw	24
  1020  009491  0019               	dw	25
  1021  009493  001A               	dw	26
  1022  009495  001B               	dw	27
  1023  009497  001C               	dw	28
  1024  009499  001D               	dw	29
  1025  00949B  001E               	dw	30
  1026  00949D  001F               	dw	31
  1027  00949F  0020               	dw	32
  1028  0094A1  0021               	dw	33
  1029  0094A3  0022               	dw	34
  1030  0094A5  0023               	dw	35
  1031  0094A7  0024               	dw	36
  1032  0094A9  0025               	dw	37
  1033  0094AB  0026               	dw	38
  1034  0094AD  0027               	dw	39
  1035  0094AF  0028               	dw	40
  1036  0094B1  0029               	dw	41
  1037  0094B3  002A               	dw	42
  1038  0094B5  002B               	dw	43
  1039  0094B7  002C               	dw	44
  1040  0094B9  002D               	dw	45
  1041  0094BB  002E               	dw	46
  1042  0094BD  002F               	dw	47
  1043  0094BF  0030               	dw	48
  1044  0094C1  0031               	dw	49
  1045  0094C3  0032               	dw	50
  1046  0094C5  0033               	dw	51
  1047  0094C7  0034               	dw	52
  1048  0094C9  0035               	dw	53
  1049  0094CB  0036               	dw	54
  1050  0094CD  0037               	dw	55
  1051  0094CF  0038               	dw	56
  1052  0094D1  0039               	dw	57
  1053  0094D3  003A               	dw	58
  1054  0094D5  003B               	dw	59
  1055  0094D7  003C               	dw	60
  1056  0094D9  003D               	dw	61
  1057  0094DB  003E               	dw	62
  1058  0094DD  003F               	dw	63
  1059  0094DF  0040               	dw	64
  1060  0094E1  0041               	dw	65
  1061  0094E3  0042               	dw	66
  1062  0094E5  0043               	dw	67
  1063  0094E7  0045               	dw	69
  1064  0094E9  0047               	dw	71
  1065  0094EB  0049               	dw	73
  1066  0094ED  004B               	dw	75
  1067  0094EF  004D               	dw	77
  1068  0094F1  004F               	dw	79
  1069  0094F3  0051               	dw	81
  1070  0094F5  0053               	dw	83
  1071  0094F7  0055               	dw	85
  1072  0094F9  0057               	dw	87
  1073  0094FB  0059               	dw	89
  1074  0094FD  005B               	dw	91
  1075  0094FF  005D               	dw	93
  1076  009501  005F               	dw	95
  1077  009503  0061               	dw	97
  1078  009505  0063               	dw	99
  1079  009507  0065               	dw	101
  1080  009509  0067               	dw	103
  1081  00950B  0069               	dw	105
  1082  00950D  006B               	dw	107
  1083  00950F  006E               	dw	110
  1084  009511  0070               	dw	112
  1085  009513  0073               	dw	115
  1086  009515  0075               	dw	117
  1087  009517  0077               	dw	119
  1088  009519  0079               	dw	121
  1089  00951B  007B               	dw	123
  1090  00951D  007D               	dw	125
  1091  00951F  007F               	dw	127
  1092  009521  0081               	dw	129
  1093  009523  0083               	dw	131
  1094  009525  0085               	dw	133
  1095  009527  0087               	dw	135
  1096  009529  0089               	dw	137
  1097  00952B  008B               	dw	139
  1098  00952D  008D               	dw	141
  1099  00952F  008F               	dw	143
  1100  009531  0091               	dw	145
  1101  009533  0093               	dw	147
  1102  009535  0095               	dw	149
  1103  009537  0097               	dw	151
  1104  009539  0099               	dw	153
  1105  00953B  009B               	dw	155
  1106  00953D  009D               	dw	157
  1107  00953F  009F               	dw	159
  1108  009541  00A1               	dw	161
  1109  009543  00A3               	dw	163
  1110  009545  00A5               	dw	165
  1111  009547  00A7               	dw	167
  1112  009549  00A9               	dw	169
  1113  00954B  00AB               	dw	171
  1114  00954D  00AD               	dw	173
  1115  00954F  00AF               	dw	175
  1116  009551  00B1               	dw	177
  1117  009553  00B3               	dw	179
  1118  009555  00B5               	dw	181
  1119  009557  00B7               	dw	183
  1120  009559  00B9               	dw	185
  1121  00955B  00BB               	dw	187
  1122  00955D  00BD               	dw	189
  1123  00955F  00C0               	dw	192
  1124  009561  00C3               	dw	195
  1125  009563  00C6               	dw	198
  1126  009565  00C9               	dw	201
  1127  009567  00CC               	dw	204
  1128  009569  00CF               	dw	207
  1129  00956B  00D2               	dw	210
  1130  00956D  00D5               	dw	213
  1131  00956F  00D8               	dw	216
  1132  009571  00DB               	dw	219
  1133  009573  00DE               	dw	222
  1134  009575  00E1               	dw	225
  1135  009577  00E4               	dw	228
  1136  009579  00E7               	dw	231
  1137  00957B  00EA               	dw	234
  1138  00957D  00ED               	dw	237
  1139  00957F  00F0               	dw	240
  1140  009581  00F3               	dw	243
  1141  009583  00F6               	dw	246
  1142  009585  00F9               	dw	249
  1143  009587  00FC               	dw	252
  1144  009589  00FF               	dw	255
  1145  00958B  0102               	dw	258
  1146  00958D  0105               	dw	261
  1147  00958F  0108               	dw	264
  1148  009591  010B               	dw	267
  1149  009593  010E               	dw	270
  1150  009595  0111               	dw	273
  1151  009597  0114               	dw	276
  1152  009599  0117               	dw	279
  1153  00959B  011A               	dw	282
  1154  00959D  011D               	dw	285
  1155  00959F  0120               	dw	288
  1156  0095A1  0123               	dw	291
  1157  0095A3  0126               	dw	294
  1158  0095A5  012A               	dw	298
  1159  0095A7  012D               	dw	301
  1160  0095A9  0130               	dw	304
  1161  0095AB  0133               	dw	307
  1162  0095AD  0137               	dw	311
  1163  0095AF  013A               	dw	314
  1164  0095B1  013E               	dw	318
  1165  0095B3  0142               	dw	322
  1166  0095B5  0145               	dw	325
  1167  0095B7  0149               	dw	329
  1168  0095B9  014D               	dw	333
  1169  0095BB  0151               	dw	337
  1170  0095BD  0155               	dw	341
  1171  0095BF  0159               	dw	345
  1172  0095C1  015D               	dw	349
  1173  0095C3  0161               	dw	353
  1174  0095C5  0166               	dw	358
  1175  0095C7  016A               	dw	362
  1176  0095C9  016E               	dw	366
  1177  0095CB  0173               	dw	371
  1178  0095CD  0178               	dw	376
  1179  0095CF  017D               	dw	381
  1180  0095D1  0182               	dw	386
  1181  0095D3  0187               	dw	391
  1182  0095D5  018C               	dw	396
  1183  0095D7  0191               	dw	401
  1184  0095D9  0196               	dw	406
  1185  0095DB  019C               	dw	412
  1186  0095DD  01A1               	dw	417
  1187  0095DF  01A7               	dw	423
  1188  0095E1  01AD               	dw	429
  1189  0095E3  01B3               	dw	435
  1190  0095E5  01B9               	dw	441
  1191  0095E7  01BF               	dw	447
  1192  0095E9  01C6               	dw	454
  1193  0095EB  01CC               	dw	460
  1194  0095ED  01D3               	dw	467
  1195  0095EF  01DA               	dw	474
  1196  0095F1  01E1               	dw	481
  1197  0095F3  01E8               	dw	488
  1198  0095F5  01F0               	dw	496
  1199  0095F7  01F7               	dw	503
  1200  0095F9  01FF               	dw	511
  1201  0095FB  0207               	dw	519
  1202  0095FD  020F               	dw	527
  1203  0095FF  0218               	dw	536
  1204  009601  0221               	dw	545
  1205  009603  022A               	dw	554
  1206  009605  0233               	dw	563
  1207  009607  023D               	dw	573
  1208  009609  0247               	dw	583
  1209  00960B  0251               	dw	593
  1210  00960D  025C               	dw	604
  1211  00960F  0267               	dw	615
  1212  009611  0272               	dw	626
  1213  009613  027E               	dw	638
  1214  009615  028A               	dw	650
  1215  009617  0297               	dw	663
  1216  009619  02A4               	dw	676
  1217  00961B  02B2               	dw	690
  1218  00961D  02C0               	dw	704
  1219  00961F  02CF               	dw	719
  1220  009621  02DF               	dw	735
  1221  009623  02EF               	dw	751
  1222  009625  02FF               	dw	767
  1223  009627  0311               	dw	785
  1224  009629  0323               	dw	803
  1225  00962B  0336               	dw	822
  1226  00962D  0349               	dw	841
  1227  00962F  035E               	dw	862
  1228  009631  0373               	dw	883
  1229  009633  0389               	dw	905
  1230  009635  03A1               	dw	929
  1231  009637  03B9               	dw	953
  1232  009639  03D3               	dw	979
  1233  00963B  03DD               	dw	989
  1234  00963D  03E4               	dw	996
  1235  00963F  03EA               	dw	1002
  1236  009641  03F1               	dw	1009
  1237  009643  03F8               	dw	1016
  1238  009645  03FF               	dw	1023
  1239  009647  0406               	dw	1030
  1240  009649  040D               	dw	1037
  1241  00964B  0415               	dw	1045
  1242  00964D  041C               	dw	1052
  1243  00964F  0424               	dw	1060
  1244  009651  042B               	dw	1067
  1245  009653  0433               	dw	1075
  1246  009655  043B               	dw	1083
  1247  009657  0442               	dw	1090
  1248  009659  044A               	dw	1098
  1249  00965B  0452               	dw	1106
  1250  00965D  045A               	dw	1114
  1251  00965F  0463               	dw	1123
  1252  009661  046B               	dw	1131
  1253  009663  0474               	dw	1140
  1254  009665  047C               	dw	1148
  1255  009667  0485               	dw	1157
  1256  009669  048E               	dw	1166
  1257  00966B  0496               	dw	1174
  1258  00966D  049F               	dw	1183
  1259  00966F  04A9               	dw	1193
  1260  009671  04B2               	dw	1202
  1261  009673  04BB               	dw	1211
  1262  009675  04C5               	dw	1221
  1263  009677  04CE               	dw	1230
  1264  009679  04D8               	dw	1240
  1265  00967B  04E2               	dw	1250
  1266  00967D  04EC               	dw	1260
  1267  00967F  04F6               	dw	1270
  1268  009681  0500               	dw	1280
  1269  009683  050B               	dw	1291
  1270  009685  0515               	dw	1301
  1271  009687  0520               	dw	1312
  1272  009689  052B               	dw	1323
  1273  00968B  0536               	dw	1334
  1274  00968D  0541               	dw	1345
  1275  00968F  054C               	dw	1356
  1276  009691  0558               	dw	1368
  1277  009693  0564               	dw	1380
  1278  009695  056F               	dw	1391
  1279  009697  057B               	dw	1403
  1280  009699  0587               	dw	1415
  1281  00969B  0594               	dw	1428
  1282  00969D  05A0               	dw	1440
  1283  00969F  05AD               	dw	1453
  1284  0096A1  05BA               	dw	1466
  1285  0096A3  05C7               	dw	1479
  1286  0096A5  05D4               	dw	1492
  1287  0096A7  05E2               	dw	1506
  1288  0096A9  05EF               	dw	1519
  1289  0096AB  05FD               	dw	1533
  1290  0096AD  060B               	dw	1547
  1291  0096AF  0619               	dw	1561
  1292  0096B1  0628               	dw	1576
  1293  0096B3  0637               	dw	1591
  1294  0096B5  0646               	dw	1606
  1295  0096B7  0655               	dw	1621
  1296  0096B9  0664               	dw	1636
  1297  0096BB  0674               	dw	1652
  1298  0096BD  0684               	dw	1668
  1299  0096BF  0694               	dw	1684
  1300  0096C1  06A4               	dw	1700
  1301  0096C3  06B5               	dw	1717
  1302  0096C5  06C6               	dw	1734
  1303  0096C7  06D7               	dw	1751
  1304  0096C9  06E9               	dw	1769
  1305  0096CB  06FA               	dw	1786
  1306  0096CD  070C               	dw	1804
  1307  0096CF  071F               	dw	1823
  1308  0096D1  0731               	dw	1841
  1309  0096D3  0744               	dw	1860
  1310  0096D5  0758               	dw	1880
  1311  0096D7  076B               	dw	1899
  1312  0096D9  077F               	dw	1919
  1313  0096DB  0793               	dw	1939
  1314  0096DD  07A8               	dw	1960
  1315  0096DF  07BD               	dw	1981
  1316  0096E1  07D2               	dw	2002
  1317  0096E3  07E8               	dw	2024
  1318  0096E5  07FE               	dw	2046
  1319  0096E7  0815               	dw	2069
  1320  0096E9  082C               	dw	2092
  1321  0096EB  0843               	dw	2115
  1322  0096ED  085B               	dw	2139
  1323  0096EF  0873               	dw	2163
  1324  0096F1  088B               	dw	2187
  1325  0096F3  08A5               	dw	2213
  1326  0096F5  08BE               	dw	2238
  1327  0096F7  08D8               	dw	2264
  1328  0096F9  08F2               	dw	2290
  1329  0096FB  090D               	dw	2317
  1330  0096FD  0929               	dw	2345
  1331  0096FF  0945               	dw	2373
  1332  009701  0961               	dw	2401
  1333  009703  097E               	dw	2430
  1334  009705  099C               	dw	2460
  1335  009707  09BA               	dw	2490
  1336  009709  09D9               	dw	2521
  1337  00970B  09F9               	dw	2553
  1338  00970D  0A19               	dw	2585
  1339  00970F  0A39               	dw	2617
  1340  009711  0A5B               	dw	2651
  1341  009713  0A7D               	dw	2685
  1342  009715  0A9F               	dw	2719
  1343  009717  0AC3               	dw	2755
  1344  009719  0AE7               	dw	2791
  1345  00971B  0B0C               	dw	2828
  1346  00971D  0B31               	dw	2865
  1347  00971F  0B58               	dw	2904
  1348  009721  0B7F               	dw	2943
  1349  009723  0BA7               	dw	2983
  1350  009725  0BD0               	dw	3024
  1351  009727  0BFA               	dw	3066
  1352  009729  0C25               	dw	3109
  1353  00972B  0C51               	dw	3153
  1354  00972D  0C7E               	dw	3198
  1355  00972F  0CAB               	dw	3243
  1356  009731  0CDA               	dw	3290
  1357  009733  0D0A               	dw	3338
  1358  009735  0D3B               	dw	3387
  1359  009737  0D6D               	dw	3437
  1360  009739  0DA0               	dw	3488
  1361  00973B  0DD4               	dw	3540
  1362  00973D  0E0A               	dw	3594
  1363  00973F  0E41               	dw	3649
  1364  009741  0E79               	dw	3705
  1365  009743  0EB3               	dw	3763
  1366  009745  0EEE               	dw	3822
  1367  009747  0F2A               	dw	3882
  1368  009749  0F68               	dw	3944
  1369  00974B  0FA8               	dw	4008
  1370  00974D  0FE9               	dw	4073
  1371  00974F  102C               	dw	4140
  1372  009751  1070               	dw	4208
  1373  009753  10B6               	dw	4278
  1374  009755  10FE               	dw	4350
  1375  009757  1148               	dw	4424
  1376  009759  1194               	dw	4500
  1377  00975B  11E2               	dw	4578
  1378  00975D  1232               	dw	4658
  1379  00975F  1285               	dw	4741
  1380  009761  12D9               	dw	4825
  1381  009763  1330               	dw	4912
  1382  009765  1389               	dw	5001
  1383  009767  13E5               	dw	5093
  1384  009769  1444               	dw	5188
  1385  00976B  14A5               	dw	5285
  1386  00976D  1509               	dw	5385
  1387  00976F  1570               	dw	5488
  1388  009771  15DA               	dw	5594
  1389  009773  1647               	dw	5703
  1390  009775  16B8               	dw	5816
  1391  009777  172B               	dw	5931
  1392  009779  17A3               	dw	6051
  1393  00977B  181E               	dw	6174
  1394  00977D  189D               	dw	6301
  1395  00977F  1921               	dw	6433
  1396  009781  19A8               	dw	6568
  1397  009783  1A34               	dw	6708
  1398  009785  1AC4               	dw	6852
  1399  009787  1B5A               	dw	7002
  1400  009789  1BF4               	dw	7156
  1401  00978B  1C94               	dw	7316
  1402  00978D  1D39               	dw	7481
  1403  00978F  1DE4               	dw	7652
  1404  009791  1E95               	dw	7829
  1405  009793  1F4C               	dw	8012
  1406  009795  200A               	dw	8202
  1407  009797  20CE               	dw	8398
  1408  009799  219A               	dw	8602
  1409  00979B  226E               	dw	8814
  1410  00979D  234A               	dw	9034
  1411  00979F  242E               	dw	9262
  1412  0097A1  251B               	dw	9499
  1413  0097A3  2612               	dw	9746
  1414  0097A5  2712               	dw	10002
  1415  0097A7  281D               	dw	10269
  1416  0097A9  2932               	dw	10546
  1417  0097AB  2A53               	dw	10835
  1418  0097AD  2B81               	dw	11137
  1419  0097AF  2CBB               	dw	11451
  1420  0097B1  2E03               	dw	11779
  1421  0097B3  2F5A               	dw	12122
  1422  0097B5  30C0               	dw	12480
  1423  0097B7  3236               	dw	12854
  1424  0097B9  33BD               	dw	13245
  1425  0097BB  3557               	dw	13655
  1426  0097BD  35F5               	dw	13813
  1427  0097BF  3661               	dw	13921
  1428  0097C1  36CD               	dw	14029
  1429  0097C3  373B               	dw	14139
  1430  0097C5  37AA               	dw	14250
  1431  0097C7  381B               	dw	14363
  1432  0097C9  388C               	dw	14476
  1433  0097CB  3900               	dw	14592
  1434  0097CD  3974               	dw	14708
  1435  0097CF  39EA               	dw	14826
  1436  0097D1  3A62               	dw	14946
  1437  0097D3  3ADB               	dw	15067
  1438  0097D5  3B55               	dw	15189
  1439  0097D7  3BD1               	dw	15313
  1440  0097D9  3C4E               	dw	15438
  1441  0097DB  3CCD               	dw	15565
  1442  0097DD  3D4E               	dw	15694
  1443  0097DF  3DD0               	dw	15824
  1444  0097E1  3E54               	dw	15956
  1445  0097E3  3EDA               	dw	16090
  1446  0097E5  3F61               	dw	16225
  1447  0097E7  3FEA               	dw	16362
  1448  0097E9  4074               	dw	16500
  1449  0097EB  4101               	dw	16641
  1450  0097ED  418F               	dw	16783
  1451  0097EF  421F               	dw	16927
  1452  0097F1  42B1               	dw	17073
  1453  0097F3  4345               	dw	17221
  1454  0097F5  43DB               	dw	17371
  1455  0097F7  4473               	dw	17523
  1456  0097F9  450D               	dw	17677
  1457  0097FB  45A9               	dw	17833
  1458  0097FD  4647               	dw	17991
  1459  0097FF  46E7               	dw	18151
  1460  009801  4789               	dw	18313
  1461  009803  482E               	dw	18478
  1462  009805  48D5               	dw	18645
  1463  009807  497E               	dw	18814
  1464  009809  4A29               	dw	18985
  1465  00980B  4AD7               	dw	19159
  1466  00980D  4B87               	dw	19335
  1467  00980F  4C3A               	dw	19514
  1468  009811  4CEF               	dw	19695
  1469  009813  4DA6               	dw	19878
  1470  009815  4E61               	dw	20065
  1471  009817  4F1E               	dw	20254
  1472  009819  4FDD               	dw	20445
  1473  00981B  50A0               	dw	20640
  1474  00981D  5165               	dw	20837
  1475  00981F  522D               	dw	21037
  1476  009821  52F8               	dw	21240
  1477  009823  53C6               	dw	21446
  1478  009825  5497               	dw	21655
  1479  009827  556B               	dw	21867
  1480  009829  5642               	dw	22082
  1481  00982B  571C               	dw	22300
  1482  00982D  57FA               	dw	22522
  1483  00982F                     __end_of_motor_steps_lookup:
  1484                           	opt stack 0
  1485  00982F                     _motor_postscaler_lookup:
  1486                           	opt stack 0
  1487  00982F  0C                 	db	12
  1488  009830  07                 	db	7
  1489  009831  05                 	db	5
  1490  009832  04                 	db	4
  1491  009833  04                 	db	4
  1492  009834  03                 	db	3
  1493  009835  03                 	db	3
  1494  009836  03                 	db	3
  1495  009837  02                 	db	2
  1496  009838  02                 	db	2
  1497  009839  02                 	db	2
  1498  00983A  02                 	db	2
  1499  00983B  02                 	db	2
  1500  00983C  02                 	db	2
  1501  00983D  01                 	db	1
  1502  00983E  01                 	db	1
  1503  00983F  01                 	db	1
  1504  009840  01                 	db	1
  1505  009841  01                 	db	1
  1506  009842  01                 	db	1
  1507  009843  01                 	db	1
  1508  009844  01                 	db	1
  1509  009845  01                 	db	1
  1510  009846  01                 	db	1
  1511  009847  01                 	db	1
  1512  009848  01                 	db	1
  1513  009849  01                 	db	1
  1514  00984A  01                 	db	1
  1515  00984B  01                 	db	1
  1516  00984C  01                 	db	1
  1517  00984D  01                 	db	1
  1518  00984E  01                 	db	1
  1519  00984F  01                 	db	1
  1520  009850  01                 	db	1
  1521  009851  01                 	db	1
  1522  009852  01                 	db	1
  1523  009853  01                 	db	1
  1524  009854  01                 	db	1
  1525  009855  01                 	db	1
  1526  009856  01                 	db	1
  1527  009857  01                 	db	1
  1528  009858  01                 	db	1
  1529  009859  01                 	db	1
  1530  00985A  01                 	db	1
  1531  00985B  01                 	db	1
  1532  00985C  01                 	db	1
  1533  00985D  01                 	db	1
  1534  00985E  01                 	db	1
  1535  00985F  01                 	db	1
  1536  009860  01                 	db	1
  1537  009861  01                 	db	1
  1538  009862  01                 	db	1
  1539  009863  01                 	db	1
  1540  009864  01                 	db	1
  1541  009865  01                 	db	1
  1542  009866  01                 	db	1
  1543  009867  01                 	db	1
  1544  009868  01                 	db	1
  1545  009869  01                 	db	1
  1546  00986A  01                 	db	1
  1547  00986B  01                 	db	1
  1548  00986C  01                 	db	1
  1549  00986D  01                 	db	1
  1550  00986E  01                 	db	1
  1551  00986F  01                 	db	1
  1552  009870  01                 	db	1
  1553  009871  01                 	db	1
  1554  009872  01                 	db	1
  1555  009873  01                 	db	1
  1556  009874  01                 	db	1
  1557  009875  01                 	db	1
  1558  009876  01                 	db	1
  1559  009877  01                 	db	1
  1560  009878  01                 	db	1
  1561  009879  01                 	db	1
  1562  00987A  01                 	db	1
  1563  00987B  01                 	db	1
  1564  00987C  01                 	db	1
  1565  00987D  01                 	db	1
  1566  00987E  01                 	db	1
  1567  00987F  01                 	db	1
  1568  009880  01                 	db	1
  1569  009881  01                 	db	1
  1570  009882  01                 	db	1
  1571  009883  01                 	db	1
  1572  009884  01                 	db	1
  1573  009885  01                 	db	1
  1574  009886  01                 	db	1
  1575  009887  01                 	db	1
  1576  009888  01                 	db	1
  1577  009889  01                 	db	1
  1578  00988A  00                 	db	0
  1579  00988B  00                 	db	0
  1580  00988C  00                 	db	0
  1581  00988D  00                 	db	0
  1582  00988E  00                 	db	0
  1583  00988F  00                 	db	0
  1584  009890  00                 	db	0
  1585  009891  00                 	db	0
  1586  009892  00                 	db	0
  1587  009893  00                 	db	0
  1588  009894  00                 	db	0
  1589  009895  00                 	db	0
  1590  009896  00                 	db	0
  1591  009897  00                 	db	0
  1592  009898  00                 	db	0
  1593  009899  00                 	db	0
  1594  00989A  00                 	db	0
  1595  00989B  00                 	db	0
  1596  00989C  00                 	db	0
  1597  00989D  00                 	db	0
  1598  00989E  00                 	db	0
  1599  00989F  00                 	db	0
  1600  0098A0  00                 	db	0
  1601  0098A1  00                 	db	0
  1602  0098A2  00                 	db	0
  1603  0098A3  00                 	db	0
  1604  0098A4  00                 	db	0
  1605  0098A5  00                 	db	0
  1606  0098A6  00                 	db	0
  1607  0098A7  00                 	db	0
  1608  0098A8  00                 	db	0
  1609  0098A9  00                 	db	0
  1610  0098AA  00                 	db	0
  1611  0098AB  00                 	db	0
  1612  0098AC  00                 	db	0
  1613  0098AD  00                 	db	0
  1614  0098AE  00                 	db	0
  1615  0098AF  00                 	db	0
  1616  0098B0  00                 	db	0
  1617  0098B1  00                 	db	0
  1618  0098B2  00                 	db	0
  1619  0098B3  00                 	db	0
  1620  0098B4  00                 	db	0
  1621  0098B5  00                 	db	0
  1622  0098B6  00                 	db	0
  1623  0098B7  00                 	db	0
  1624  0098B8  00                 	db	0
  1625  0098B9  00                 	db	0
  1626  0098BA  00                 	db	0
  1627  0098BB  00                 	db	0
  1628  0098BC  00                 	db	0
  1629  0098BD  00                 	db	0
  1630  0098BE  00                 	db	0
  1631  0098BF  00                 	db	0
  1632  0098C0  00                 	db	0
  1633  0098C1  00                 	db	0
  1634  0098C2  00                 	db	0
  1635  0098C3  00                 	db	0
  1636  0098C4  00                 	db	0
  1637  0098C5  00                 	db	0
  1638  0098C6  00                 	db	0
  1639  0098C7  00                 	db	0
  1640  0098C8  00                 	db	0
  1641  0098C9  00                 	db	0
  1642  0098CA  00                 	db	0
  1643  0098CB  00                 	db	0
  1644  0098CC  00                 	db	0
  1645  0098CD  00                 	db	0
  1646  0098CE  00                 	db	0
  1647  0098CF  00                 	db	0
  1648  0098D0  00                 	db	0
  1649  0098D1  00                 	db	0
  1650  0098D2  00                 	db	0
  1651  0098D3  00                 	db	0
  1652  0098D4  00                 	db	0
  1653  0098D5  00                 	db	0
  1654  0098D6  00                 	db	0
  1655  0098D7  00                 	db	0
  1656  0098D8  00                 	db	0
  1657  0098D9  00                 	db	0
  1658  0098DA  00                 	db	0
  1659  0098DB  00                 	db	0
  1660  0098DC  00                 	db	0
  1661  0098DD  00                 	db	0
  1662  0098DE  00                 	db	0
  1663  0098DF  00                 	db	0
  1664  0098E0  00                 	db	0
  1665  0098E1  00                 	db	0
  1666  0098E2  00                 	db	0
  1667  0098E3  00                 	db	0
  1668  0098E4  00                 	db	0
  1669  0098E5  00                 	db	0
  1670  0098E6  00                 	db	0
  1671  0098E7  00                 	db	0
  1672  0098E8  00                 	db	0
  1673  0098E9  00                 	db	0
  1674  0098EA  00                 	db	0
  1675  0098EB  00                 	db	0
  1676  0098EC  00                 	db	0
  1677  0098ED  00                 	db	0
  1678  0098EE  00                 	db	0
  1679  0098EF  00                 	db	0
  1680  0098F0  00                 	db	0
  1681  0098F1  00                 	db	0
  1682  0098F2  00                 	db	0
  1683  0098F3  00                 	db	0
  1684  0098F4  00                 	db	0
  1685  0098F5  00                 	db	0
  1686  0098F6  00                 	db	0
  1687  0098F7  00                 	db	0
  1688  0098F8  00                 	db	0
  1689  0098F9  00                 	db	0
  1690  0098FA  00                 	db	0
  1691  0098FB  00                 	db	0
  1692  0098FC  00                 	db	0
  1693  0098FD  00                 	db	0
  1694  0098FE  00                 	db	0
  1695  0098FF  00                 	db	0
  1696  009900  00                 	db	0
  1697  009901  00                 	db	0
  1698  009902  00                 	db	0
  1699  009903  00                 	db	0
  1700  009904  00                 	db	0
  1701  009905  00                 	db	0
  1702  009906  00                 	db	0
  1703  009907  00                 	db	0
  1704  009908  00                 	db	0
  1705  009909  00                 	db	0
  1706  00990A  00                 	db	0
  1707  00990B  00                 	db	0
  1708  00990C  00                 	db	0
  1709  00990D  00                 	db	0
  1710  00990E  00                 	db	0
  1711  00990F  00                 	db	0
  1712  009910  00                 	db	0
  1713  009911  00                 	db	0
  1714  009912  00                 	db	0
  1715  009913  00                 	db	0
  1716  009914  00                 	db	0
  1717  009915  00                 	db	0
  1718  009916  00                 	db	0
  1719  009917  00                 	db	0
  1720  009918  00                 	db	0
  1721  009919  00                 	db	0
  1722  00991A  00                 	db	0
  1723  00991B  00                 	db	0
  1724  00991C  00                 	db	0
  1725  00991D  00                 	db	0
  1726  00991E  00                 	db	0
  1727  00991F  00                 	db	0
  1728  009920  00                 	db	0
  1729  009921  00                 	db	0
  1730  009922  00                 	db	0
  1731  009923  00                 	db	0
  1732  009924  00                 	db	0
  1733  009925  00                 	db	0
  1734  009926  00                 	db	0
  1735  009927  00                 	db	0
  1736  009928  00                 	db	0
  1737  009929  00                 	db	0
  1738  00992A  00                 	db	0
  1739  00992B  00                 	db	0
  1740  00992C  00                 	db	0
  1741  00992D  00                 	db	0
  1742  00992E  00                 	db	0
  1743  00992F  00                 	db	0
  1744  009930  00                 	db	0
  1745  009931  00                 	db	0
  1746  009932  00                 	db	0
  1747  009933  00                 	db	0
  1748  009934  00                 	db	0
  1749  009935  00                 	db	0
  1750  009936  00                 	db	0
  1751  009937  00                 	db	0
  1752  009938  00                 	db	0
  1753  009939  00                 	db	0
  1754  00993A  00                 	db	0
  1755  00993B  00                 	db	0
  1756  00993C  00                 	db	0
  1757  00993D  00                 	db	0
  1758  00993E  00                 	db	0
  1759  00993F  00                 	db	0
  1760  009940  00                 	db	0
  1761  009941  00                 	db	0
  1762  009942  00                 	db	0
  1763  009943  00                 	db	0
  1764  009944  00                 	db	0
  1765  009945  00                 	db	0
  1766  009946  00                 	db	0
  1767  009947  00                 	db	0
  1768  009948  00                 	db	0
  1769  009949  00                 	db	0
  1770  00994A  00                 	db	0
  1771  00994B  00                 	db	0
  1772  00994C  00                 	db	0
  1773  00994D  00                 	db	0
  1774  00994E  00                 	db	0
  1775  00994F  00                 	db	0
  1776  009950  00                 	db	0
  1777  009951  00                 	db	0
  1778  009952  00                 	db	0
  1779  009953  00                 	db	0
  1780  009954  00                 	db	0
  1781  009955  00                 	db	0
  1782  009956  00                 	db	0
  1783  009957  00                 	db	0
  1784  009958  00                 	db	0
  1785  009959  00                 	db	0
  1786  00995A  00                 	db	0
  1787  00995B  00                 	db	0
  1788  00995C  00                 	db	0
  1789  00995D  00                 	db	0
  1790  00995E  00                 	db	0
  1791  00995F  00                 	db	0
  1792  009960  00                 	db	0
  1793  009961  00                 	db	0
  1794  009962  00                 	db	0
  1795  009963  00                 	db	0
  1796  009964  00                 	db	0
  1797  009965  00                 	db	0
  1798  009966  00                 	db	0
  1799  009967  00                 	db	0
  1800  009968  00                 	db	0
  1801  009969  00                 	db	0
  1802  00996A  00                 	db	0
  1803  00996B  00                 	db	0
  1804  00996C  00                 	db	0
  1805  00996D  00                 	db	0
  1806  00996E  00                 	db	0
  1807  00996F  00                 	db	0
  1808  009970  00                 	db	0
  1809  009971  00                 	db	0
  1810  009972  00                 	db	0
  1811  009973  00                 	db	0
  1812  009974  00                 	db	0
  1813  009975  00                 	db	0
  1814  009976  00                 	db	0
  1815  009977  00                 	db	0
  1816  009978  00                 	db	0
  1817  009979  00                 	db	0
  1818  00997A  00                 	db	0
  1819  00997B  00                 	db	0
  1820  00997C  00                 	db	0
  1821  00997D  00                 	db	0
  1822  00997E  00                 	db	0
  1823  00997F  00                 	db	0
  1824  009980  00                 	db	0
  1825  009981  00                 	db	0
  1826  009982  00                 	db	0
  1827  009983  00                 	db	0
  1828  009984  00                 	db	0
  1829  009985  00                 	db	0
  1830  009986  00                 	db	0
  1831  009987  00                 	db	0
  1832  009988  00                 	db	0
  1833  009989  00                 	db	0
  1834  00998A  00                 	db	0
  1835  00998B  00                 	db	0
  1836  00998C  00                 	db	0
  1837  00998D  00                 	db	0
  1838  00998E  00                 	db	0
  1839  00998F  00                 	db	0
  1840  009990  00                 	db	0
  1841  009991  00                 	db	0
  1842  009992  00                 	db	0
  1843  009993  00                 	db	0
  1844  009994  00                 	db	0
  1845  009995  00                 	db	0
  1846  009996  00                 	db	0
  1847  009997  00                 	db	0
  1848  009998  00                 	db	0
  1849  009999  00                 	db	0
  1850  00999A  00                 	db	0
  1851  00999B  00                 	db	0
  1852  00999C  00                 	db	0
  1853  00999D  00                 	db	0
  1854  00999E  00                 	db	0
  1855  00999F  00                 	db	0
  1856  0099A0  00                 	db	0
  1857  0099A1  00                 	db	0
  1858  0099A2  00                 	db	0
  1859  0099A3  00                 	db	0
  1860  0099A4  00                 	db	0
  1861  0099A5  00                 	db	0
  1862  0099A6  00                 	db	0
  1863  0099A7  00                 	db	0
  1864  0099A8  00                 	db	0
  1865  0099A9  00                 	db	0
  1866  0099AA  00                 	db	0
  1867  0099AB  00                 	db	0
  1868  0099AC  00                 	db	0
  1869  0099AD  00                 	db	0
  1870  0099AE  00                 	db	0
  1871  0099AF  00                 	db	0
  1872  0099B0  00                 	db	0
  1873  0099B1  00                 	db	0
  1874  0099B2  00                 	db	0
  1875  0099B3  00                 	db	0
  1876  0099B4  00                 	db	0
  1877  0099B5  00                 	db	0
  1878  0099B6  00                 	db	0
  1879  0099B7  00                 	db	0
  1880  0099B8  00                 	db	0
  1881  0099B9  00                 	db	0
  1882  0099BA  00                 	db	0
  1883  0099BB  00                 	db	0
  1884  0099BC  00                 	db	0
  1885  0099BD  00                 	db	0
  1886  0099BE  00                 	db	0
  1887  0099BF  00                 	db	0
  1888  0099C0  00                 	db	0
  1889  0099C1  00                 	db	0
  1890  0099C2  00                 	db	0
  1891  0099C3  00                 	db	0
  1892  0099C4  00                 	db	0
  1893  0099C5  00                 	db	0
  1894  0099C6  00                 	db	0
  1895  0099C7  00                 	db	0
  1896  0099C8  00                 	db	0
  1897  0099C9  00                 	db	0
  1898  0099CA  00                 	db	0
  1899  0099CB  00                 	db	0
  1900  0099CC  00                 	db	0
  1901  0099CD  00                 	db	0
  1902  0099CE  00                 	db	0
  1903  0099CF  00                 	db	0
  1904  0099D0  00                 	db	0
  1905  0099D1  00                 	db	0
  1906  0099D2  00                 	db	0
  1907  0099D3  00                 	db	0
  1908  0099D4  00                 	db	0
  1909  0099D5  00                 	db	0
  1910  0099D6  00                 	db	0
  1911  0099D7  00                 	db	0
  1912  0099D8  00                 	db	0
  1913  0099D9  00                 	db	0
  1914  0099DA  00                 	db	0
  1915  0099DB  00                 	db	0
  1916  0099DC  00                 	db	0
  1917  0099DD  00                 	db	0
  1918  0099DE  00                 	db	0
  1919  0099DF  00                 	db	0
  1920  0099E0  00                 	db	0
  1921  0099E1  00                 	db	0
  1922  0099E2  00                 	db	0
  1923  0099E3  00                 	db	0
  1924  0099E4  00                 	db	0
  1925  0099E5  00                 	db	0
  1926  0099E6  00                 	db	0
  1927  0099E7  00                 	db	0
  1928  0099E8  00                 	db	0
  1929  0099E9  00                 	db	0
  1930  0099EA  00                 	db	0
  1931  0099EB  00                 	db	0
  1932  0099EC  00                 	db	0
  1933  0099ED  00                 	db	0
  1934  0099EE  00                 	db	0
  1935  0099EF  00                 	db	0
  1936  0099F0  00                 	db	0
  1937  0099F1  00                 	db	0
  1938  0099F2  00                 	db	0
  1939  0099F3  00                 	db	0
  1940  0099F4  00                 	db	0
  1941  0099F5  00                 	db	0
  1942  0099F6  00                 	db	0
  1943  0099F7  00                 	db	0
  1944  0099F8  00                 	db	0
  1945  0099F9  00                 	db	0
  1946  0099FA  00                 	db	0
  1947  0099FB  00                 	db	0
  1948  0099FC  00                 	db	0
  1949  0099FD  00                 	db	0
  1950  0099FE  00                 	db	0
  1951  0099FF  00                 	db	0
  1952  009A00  00                 	db	0
  1953  009A01  00                 	db	0
  1954  009A02  00                 	db	0
  1955  009A03  00                 	db	0
  1956  009A04  00                 	db	0
  1957  009A05  00                 	db	0
  1958  009A06  00                 	db	0
  1959  009A07  00                 	db	0
  1960  009A08  00                 	db	0
  1961  009A09  00                 	db	0
  1962  009A0A  00                 	db	0
  1963  009A0B  00                 	db	0
  1964  009A0C  00                 	db	0
  1965  009A0D  00                 	db	0
  1966  009A0E  00                 	db	0
  1967  009A0F  00                 	db	0
  1968  009A10  00                 	db	0
  1969  009A11  00                 	db	0
  1970  009A12  00                 	db	0
  1971  009A13  00                 	db	0
  1972  009A14  00                 	db	0
  1973  009A15  00                 	db	0
  1974  009A16                     __end_of_motor_postscaler_lookup:
  1975                           	opt stack 0
  1976  009A16                     _motor_period_lookup:
  1977                           	opt stack 0
  1978  009A16  EC                 	db	236
  1979  009A17  F2                 	db	242
  1980  009A18  F6                 	db	246
  1981  009A19  F4                 	db	244
  1982  009A1A  D2                 	db	210
  1983  009A1B  E8                 	db	232
  1984  009A1C  D2                 	db	210
  1985  009A1D  C0                 	db	192
  1986  009A1E  EC                 	db	236
  1987  009A1F  DC                 	db	220
  1988  009A20  CF                 	db	207
  1989  009A21  C3                 	db	195
  1990  009A22  B9                 	db	185
  1991  009A23  B0                 	db	176
  1992  009A24  FC                 	db	252
  1993  009A25  F2                 	db	242
  1994  009A26  E8                 	db	232
  1995  009A27  DF                 	db	223
  1996  009A28  D7                 	db	215
  1997  009A29  D0                 	db	208
  1998  009A2A  CA                 	db	202
  1999  009A2B  C3                 	db	195
  2000  009A2C  BE                 	db	190
  2001  009A2D  B8                 	db	184
  2002  009A2E  B3                 	db	179
  2003  009A2F  AF                 	db	175
  2004  009A30  AA                 	db	170
  2005  009A31  A6                 	db	166
  2006  009A32  A2                 	db	162
  2007  009A33  9F                 	db	159
  2008  009A34  9B                 	db	155
  2009  009A35  98                 	db	152
  2010  009A36  95                 	db	149
  2011  009A37  92                 	db	146
  2012  009A38  8F                 	db	143
  2013  009A39  8C                 	db	140
  2014  009A3A  8A                 	db	138
  2015  009A3B  87                 	db	135
  2016  009A3C  85                 	db	133
  2017  009A3D  83                 	db	131
  2018  009A3E  81                 	db	129
  2019  009A3F  7F                 	db	127
  2020  009A40  7D                 	db	125
  2021  009A41  7B                 	db	123
  2022  009A42  79                 	db	121
  2023  009A43  77                 	db	119
  2024  009A44  75                 	db	117
  2025  009A45  74                 	db	116
  2026  009A46  72                 	db	114
  2027  009A47  71                 	db	113
  2028  009A48  6F                 	db	111
  2029  009A49  6E                 	db	110
  2030  009A4A  6C                 	db	108
  2031  009A4B  6B                 	db	107
  2032  009A4C  6A                 	db	106
  2033  009A4D  68                 	db	104
  2034  009A4E  67                 	db	103
  2035  009A4F  66                 	db	102
  2036  009A50  65                 	db	101
  2037  009A51  64                 	db	100
  2038  009A52  62                 	db	98
  2039  009A53  61                 	db	97
  2040  009A54  60                 	db	96
  2041  009A55  5F                 	db	95
  2042  009A56  5E                 	db	94
  2043  009A57  5D                 	db	93
  2044  009A58  5C                 	db	92
  2045  009A59  5B                 	db	91
  2046  009A5A  59                 	db	89
  2047  009A5B  57                 	db	87
  2048  009A5C  56                 	db	86
  2049  009A5D  54                 	db	84
  2050  009A5E  53                 	db	83
  2051  009A5F  51                 	db	81
  2052  009A60  50                 	db	80
  2053  009A61  4F                 	db	79
  2054  009A62  4E                 	db	78
  2055  009A63  4C                 	db	76
  2056  009A64  4B                 	db	75
  2057  009A65  4A                 	db	74
  2058  009A66  49                 	db	73
  2059  009A67  48                 	db	72
  2060  009A68  47                 	db	71
  2061  009A69  46                 	db	70
  2062  009A6A  45                 	db	69
  2063  009A6B  44                 	db	68
  2064  009A6C  43                 	db	67
  2065  009A6D  42                 	db	66
  2066  009A6E  41                 	db	65
  2067  009A6F  40                 	db	64
  2068  009A70  3F                 	db	63
  2069  009A71  FE                 	db	254
  2070  009A72  FB                 	db	251
  2071  009A73  F8                 	db	248
  2072  009A74  F6                 	db	246
  2073  009A75  F3                 	db	243
  2074  009A76  F0                 	db	240
  2075  009A77  EE                 	db	238
  2076  009A78  EC                 	db	236
  2077  009A79  E9                 	db	233
  2078  009A7A  E7                 	db	231
  2079  009A7B  E5                 	db	229
  2080  009A7C  E3                 	db	227
  2081  009A7D  E0                 	db	224
  2082  009A7E  DE                 	db	222
  2083  009A7F  DC                 	db	220
  2084  009A80  DA                 	db	218
  2085  009A81  D8                 	db	216
  2086  009A82  D7                 	db	215
  2087  009A83  D5                 	db	213
  2088  009A84  D3                 	db	211
  2089  009A85  D1                 	db	209
  2090  009A86  CF                 	db	207
  2091  009A87  CE                 	db	206
  2092  009A88  CC                 	db	204
  2093  009A89  CA                 	db	202
  2094  009A8A  C9                 	db	201
  2095  009A8B  C7                 	db	199
  2096  009A8C  C6                 	db	198
  2097  009A8D  C4                 	db	196
  2098  009A8E  C3                 	db	195
  2099  009A8F  C1                 	db	193
  2100  009A90  C0                 	db	192
  2101  009A91  BE                 	db	190
  2102  009A92  BD                 	db	189
  2103  009A93  BC                 	db	188
  2104  009A94  BA                 	db	186
  2105  009A95  B8                 	db	184
  2106  009A96  B6                 	db	182
  2107  009A97  B4                 	db	180
  2108  009A98  B3                 	db	179
  2109  009A99  B1                 	db	177
  2110  009A9A  AF                 	db	175
  2111  009A9B  AE                 	db	174
  2112  009A9C  AC                 	db	172
  2113  009A9D  AA                 	db	170
  2114  009A9E  A9                 	db	169
  2115  009A9F  A7                 	db	167
  2116  009AA0  A6                 	db	166
  2117  009AA1  A4                 	db	164
  2118  009AA2  A3                 	db	163
  2119  009AA3  A1                 	db	161
  2120  009AA4  A0                 	db	160
  2121  009AA5  9F                 	db	159
  2122  009AA6  9D                 	db	157
  2123  009AA7  9C                 	db	156
  2124  009AA8  9B                 	db	155
  2125  009AA9  9A                 	db	154
  2126  009AAA  98                 	db	152
  2127  009AAB  97                 	db	151
  2128  009AAC  96                 	db	150
  2129  009AAD  95                 	db	149
  2130  009AAE  94                 	db	148
  2131  009AAF  93                 	db	147
  2132  009AB0  92                 	db	146
  2133  009AB1  90                 	db	144
  2134  009AB2  8F                 	db	143
  2135  009AB3  8E                 	db	142
  2136  009AB4  8D                 	db	141
  2137  009AB5  8C                 	db	140
  2138  009AB6  8B                 	db	139
  2139  009AB7  8A                 	db	138
  2140  009AB8  89                 	db	137
  2141  009AB9  88                 	db	136
  2142  009ABA  87                 	db	135
  2143  009ABB  86                 	db	134
  2144  009ABC  85                 	db	133
  2145  009ABD  84                 	db	132
  2146  009ABE  83                 	db	131
  2147  009ABF  82                 	db	130
  2148  009AC0  81                 	db	129
  2149  009AC1  80                 	db	128
  2150  009AC2  7F                 	db	127
  2151  009AC3  7E                 	db	126
  2152  009AC4  7D                 	db	125
  2153  009AC5  7C                 	db	124
  2154  009AC6  7B                 	db	123
  2155  009AC7  7A                 	db	122
  2156  009AC8  79                 	db	121
  2157  009AC9  78                 	db	120
  2158  009ACA  77                 	db	119
  2159  009ACB  76                 	db	118
  2160  009ACC  75                 	db	117
  2161  009ACD  74                 	db	116
  2162  009ACE  73                 	db	115
  2163  009ACF  72                 	db	114
  2164  009AD0  71                 	db	113
  2165  009AD1  70                 	db	112
  2166  009AD2  6F                 	db	111
  2167  009AD3  6E                 	db	110
  2168  009AD4  6D                 	db	109
  2169  009AD5  6C                 	db	108
  2170  009AD6  6B                 	db	107
  2171  009AD7  6A                 	db	106
  2172  009AD8  69                 	db	105
  2173  009AD9  68                 	db	104
  2174  009ADA  67                 	db	103
  2175  009ADB  66                 	db	102
  2176  009ADC  65                 	db	101
  2177  009ADD  64                 	db	100
  2178  009ADE  63                 	db	99
  2179  009ADF  62                 	db	98
  2180  009AE0  61                 	db	97
  2181  009AE1  60                 	db	96
  2182  009AE2  5F                 	db	95
  2183  009AE3  5E                 	db	94
  2184  009AE4  5D                 	db	93
  2185  009AE5  5C                 	db	92
  2186  009AE6  5B                 	db	91
  2187  009AE7  5A                 	db	90
  2188  009AE8  59                 	db	89
  2189  009AE9  58                 	db	88
  2190  009AEA  57                 	db	87
  2191  009AEB  56                 	db	86
  2192  009AEC  55                 	db	85
  2193  009AED  54                 	db	84
  2194  009AEE  53                 	db	83
  2195  009AEF  52                 	db	82
  2196  009AF0  51                 	db	81
  2197  009AF1  50                 	db	80
  2198  009AF2  4F                 	db	79
  2199  009AF3  4E                 	db	78
  2200  009AF4  4D                 	db	77
  2201  009AF5  4C                 	db	76
  2202  009AF6  4B                 	db	75
  2203  009AF7  4A                 	db	74
  2204  009AF8  49                 	db	73
  2205  009AF9  48                 	db	72
  2206  009AFA  47                 	db	71
  2207  009AFB  46                 	db	70
  2208  009AFC  45                 	db	69
  2209  009AFD  44                 	db	68
  2210  009AFE  43                 	db	67
  2211  009AFF  42                 	db	66
  2212  009B00  41                 	db	65
  2213  009B01  40                 	db	64
  2214  009B02  3F                 	db	63
  2215  009B03  FF                 	db	255
  2216  009B04  FE                 	db	254
  2217  009B05  FD                 	db	253
  2218  009B06  FC                 	db	252
  2219  009B07  FB                 	db	251
  2220  009B08  FA                 	db	250
  2221  009B09  F9                 	db	249
  2222  009B0A  F8                 	db	248
  2223  009B0B  F7                 	db	247
  2224  009B0C  F6                 	db	246
  2225  009B0D  F5                 	db	245
  2226  009B0E  F4                 	db	244
  2227  009B0F  F3                 	db	243
  2228  009B10  F2                 	db	242
  2229  009B11  F1                 	db	241
  2230  009B12  F0                 	db	240
  2231  009B13  EF                 	db	239
  2232  009B14  EE                 	db	238
  2233  009B15  ED                 	db	237
  2234  009B16  EC                 	db	236
  2235  009B17  EB                 	db	235
  2236  009B18  EA                 	db	234
  2237  009B19  E9                 	db	233
  2238  009B1A  E8                 	db	232
  2239  009B1B  E7                 	db	231
  2240  009B1C  E6                 	db	230
  2241  009B1D  E5                 	db	229
  2242  009B1E  E4                 	db	228
  2243  009B1F  E3                 	db	227
  2244  009B20  E2                 	db	226
  2245  009B21  E1                 	db	225
  2246  009B22  E0                 	db	224
  2247  009B23  DF                 	db	223
  2248  009B24  DE                 	db	222
  2249  009B25  DD                 	db	221
  2250  009B26  DC                 	db	220
  2251  009B27  DB                 	db	219
  2252  009B28  DA                 	db	218
  2253  009B29  D9                 	db	217
  2254  009B2A  D8                 	db	216
  2255  009B2B  D7                 	db	215
  2256  009B2C  D6                 	db	214
  2257  009B2D  D5                 	db	213
  2258  009B2E  D4                 	db	212
  2259  009B2F  D3                 	db	211
  2260  009B30  D2                 	db	210
  2261  009B31  D1                 	db	209
  2262  009B32  D0                 	db	208
  2263  009B33  CF                 	db	207
  2264  009B34  CE                 	db	206
  2265  009B35  CD                 	db	205
  2266  009B36  CC                 	db	204
  2267  009B37  CB                 	db	203
  2268  009B38  CA                 	db	202
  2269  009B39  C9                 	db	201
  2270  009B3A  C8                 	db	200
  2271  009B3B  C7                 	db	199
  2272  009B3C  C6                 	db	198
  2273  009B3D  C5                 	db	197
  2274  009B3E  C4                 	db	196
  2275  009B3F  C3                 	db	195
  2276  009B40  C2                 	db	194
  2277  009B41  C1                 	db	193
  2278  009B42  C0                 	db	192
  2279  009B43  BF                 	db	191
  2280  009B44  BE                 	db	190
  2281  009B45  BD                 	db	189
  2282  009B46  BC                 	db	188
  2283  009B47  BB                 	db	187
  2284  009B48  BA                 	db	186
  2285  009B49  B9                 	db	185
  2286  009B4A  B8                 	db	184
  2287  009B4B  B7                 	db	183
  2288  009B4C  B6                 	db	182
  2289  009B4D  B5                 	db	181
  2290  009B4E  B4                 	db	180
  2291  009B4F  B3                 	db	179
  2292  009B50  B2                 	db	178
  2293  009B51  B1                 	db	177
  2294  009B52  B0                 	db	176
  2295  009B53  AF                 	db	175
  2296  009B54  AE                 	db	174
  2297  009B55  AD                 	db	173
  2298  009B56  AC                 	db	172
  2299  009B57  AB                 	db	171
  2300  009B58  AA                 	db	170
  2301  009B59  A9                 	db	169
  2302  009B5A  A8                 	db	168
  2303  009B5B  A7                 	db	167
  2304  009B5C  A6                 	db	166
  2305  009B5D  A5                 	db	165
  2306  009B5E  A4                 	db	164
  2307  009B5F  A3                 	db	163
  2308  009B60  A2                 	db	162
  2309  009B61  A1                 	db	161
  2310  009B62  A0                 	db	160
  2311  009B63  9F                 	db	159
  2312  009B64  9E                 	db	158
  2313  009B65  9D                 	db	157
  2314  009B66  9C                 	db	156
  2315  009B67  9B                 	db	155
  2316  009B68  9A                 	db	154
  2317  009B69  99                 	db	153
  2318  009B6A  98                 	db	152
  2319  009B6B  97                 	db	151
  2320  009B6C  96                 	db	150
  2321  009B6D  95                 	db	149
  2322  009B6E  94                 	db	148
  2323  009B6F  93                 	db	147
  2324  009B70  92                 	db	146
  2325  009B71  91                 	db	145
  2326  009B72  90                 	db	144
  2327  009B73  8F                 	db	143
  2328  009B74  8E                 	db	142
  2329  009B75  8D                 	db	141
  2330  009B76  8C                 	db	140
  2331  009B77  8B                 	db	139
  2332  009B78  8A                 	db	138
  2333  009B79  89                 	db	137
  2334  009B7A  88                 	db	136
  2335  009B7B  87                 	db	135
  2336  009B7C  86                 	db	134
  2337  009B7D  85                 	db	133
  2338  009B7E  84                 	db	132
  2339  009B7F  83                 	db	131
  2340  009B80  82                 	db	130
  2341  009B81  81                 	db	129
  2342  009B82  80                 	db	128
  2343  009B83  7F                 	db	127
  2344  009B84  7E                 	db	126
  2345  009B85  7D                 	db	125
  2346  009B86  7C                 	db	124
  2347  009B87  7B                 	db	123
  2348  009B88  7A                 	db	122
  2349  009B89  79                 	db	121
  2350  009B8A  78                 	db	120
  2351  009B8B  77                 	db	119
  2352  009B8C  76                 	db	118
  2353  009B8D  75                 	db	117
  2354  009B8E  74                 	db	116
  2355  009B8F  73                 	db	115
  2356  009B90  72                 	db	114
  2357  009B91  71                 	db	113
  2358  009B92  70                 	db	112
  2359  009B93  6F                 	db	111
  2360  009B94  6E                 	db	110
  2361  009B95  6D                 	db	109
  2362  009B96  6C                 	db	108
  2363  009B97  6B                 	db	107
  2364  009B98  6A                 	db	106
  2365  009B99  69                 	db	105
  2366  009B9A  68                 	db	104
  2367  009B9B  67                 	db	103
  2368  009B9C  66                 	db	102
  2369  009B9D  65                 	db	101
  2370  009B9E  64                 	db	100
  2371  009B9F  63                 	db	99
  2372  009BA0  62                 	db	98
  2373  009BA1  61                 	db	97
  2374  009BA2  60                 	db	96
  2375  009BA3  5F                 	db	95
  2376  009BA4  5E                 	db	94
  2377  009BA5  5D                 	db	93
  2378  009BA6  5C                 	db	92
  2379  009BA7  5B                 	db	91
  2380  009BA8  5A                 	db	90
  2381  009BA9  59                 	db	89
  2382  009BAA  58                 	db	88
  2383  009BAB  57                 	db	87
  2384  009BAC  56                 	db	86
  2385  009BAD  55                 	db	85
  2386  009BAE  54                 	db	84
  2387  009BAF  53                 	db	83
  2388  009BB0  52                 	db	82
  2389  009BB1  51                 	db	81
  2390  009BB2  50                 	db	80
  2391  009BB3  4F                 	db	79
  2392  009BB4  4E                 	db	78
  2393  009BB5  4D                 	db	77
  2394  009BB6  4C                 	db	76
  2395  009BB7  4B                 	db	75
  2396  009BB8  4A                 	db	74
  2397  009BB9  49                 	db	73
  2398  009BBA  48                 	db	72
  2399  009BBB  47                 	db	71
  2400  009BBC  46                 	db	70
  2401  009BBD  45                 	db	69
  2402  009BBE  44                 	db	68
  2403  009BBF  43                 	db	67
  2404  009BC0  42                 	db	66
  2405  009BC1  41                 	db	65
  2406  009BC2  40                 	db	64
  2407  009BC3  3F                 	db	63
  2408  009BC4  FF                 	db	255
  2409  009BC5  FE                 	db	254
  2410  009BC6  FD                 	db	253
  2411  009BC7  FC                 	db	252
  2412  009BC8  FB                 	db	251
  2413  009BC9  FA                 	db	250
  2414  009BCA  F9                 	db	249
  2415  009BCB  F8                 	db	248
  2416  009BCC  F7                 	db	247
  2417  009BCD  F6                 	db	246
  2418  009BCE  F5                 	db	245
  2419  009BCF  F4                 	db	244
  2420  009BD0  F3                 	db	243
  2421  009BD1  F2                 	db	242
  2422  009BD2  F1                 	db	241
  2423  009BD3  F0                 	db	240
  2424  009BD4  EF                 	db	239
  2425  009BD5  EE                 	db	238
  2426  009BD6  ED                 	db	237
  2427  009BD7  EC                 	db	236
  2428  009BD8  EB                 	db	235
  2429  009BD9  EA                 	db	234
  2430  009BDA  E9                 	db	233
  2431  009BDB  E8                 	db	232
  2432  009BDC  E7                 	db	231
  2433  009BDD  E6                 	db	230
  2434  009BDE  E5                 	db	229
  2435  009BDF  E4                 	db	228
  2436  009BE0  E3                 	db	227
  2437  009BE1  E2                 	db	226
  2438  009BE2  E1                 	db	225
  2439  009BE3  E0                 	db	224
  2440  009BE4  DF                 	db	223
  2441  009BE5  DE                 	db	222
  2442  009BE6  DD                 	db	221
  2443  009BE7  DC                 	db	220
  2444  009BE8  DB                 	db	219
  2445  009BE9  DA                 	db	218
  2446  009BEA  D9                 	db	217
  2447  009BEB  D8                 	db	216
  2448  009BEC  D7                 	db	215
  2449  009BED  D6                 	db	214
  2450  009BEE  D5                 	db	213
  2451  009BEF  D4                 	db	212
  2452  009BF0  D3                 	db	211
  2453  009BF1  D2                 	db	210
  2454  009BF2  D1                 	db	209
  2455  009BF3  D0                 	db	208
  2456  009BF4  CF                 	db	207
  2457  009BF5  CE                 	db	206
  2458  009BF6  CD                 	db	205
  2459  009BF7  CC                 	db	204
  2460  009BF8  CB                 	db	203
  2461  009BF9  CA                 	db	202
  2462  009BFA  C9                 	db	201
  2463  009BFB  C8                 	db	200
  2464  009BFC  C7                 	db	199
  2465  009BFD                     __end_of_motor_period_lookup:
  2466                           	opt stack 0
  2467  009BFD                     _motor_prescaler_lookup:
  2468                           	opt stack 0
  2469  009BFD  02                 	db	2
  2470  009BFE  02                 	db	2
  2471  009BFF  02                 	db	2
  2472  009C00  02                 	db	2
  2473  009C01  02                 	db	2
  2474  009C02  02                 	db	2
  2475  009C03  02                 	db	2
  2476  009C04  02                 	db	2
  2477  009C05  02                 	db	2
  2478  009C06  02                 	db	2
  2479  009C07  02                 	db	2
  2480  009C08  02                 	db	2
  2481  009C09  02                 	db	2
  2482  009C0A  02                 	db	2
  2483  009C0B  02                 	db	2
  2484  009C0C  02                 	db	2
  2485  009C0D  02                 	db	2
  2486  009C0E  02                 	db	2
  2487  009C0F  02                 	db	2
  2488  009C10  02                 	db	2
  2489  009C11  02                 	db	2
  2490  009C12  02                 	db	2
  2491  009C13  02                 	db	2
  2492  009C14  02                 	db	2
  2493  009C15  02                 	db	2
  2494  009C16  02                 	db	2
  2495  009C17  02                 	db	2
  2496  009C18  02                 	db	2
  2497  009C19  02                 	db	2
  2498  009C1A  02                 	db	2
  2499  009C1B  02                 	db	2
  2500  009C1C  02                 	db	2
  2501  009C1D  02                 	db	2
  2502  009C1E  02                 	db	2
  2503  009C1F  02                 	db	2
  2504  009C20  02                 	db	2
  2505  009C21  02                 	db	2
  2506  009C22  02                 	db	2
  2507  009C23  02                 	db	2
  2508  009C24  02                 	db	2
  2509  009C25  02                 	db	2
  2510  009C26  02                 	db	2
  2511  009C27  02                 	db	2
  2512  009C28  02                 	db	2
  2513  009C29  02                 	db	2
  2514  009C2A  02                 	db	2
  2515  009C2B  02                 	db	2
  2516  009C2C  02                 	db	2
  2517  009C2D  02                 	db	2
  2518  009C2E  02                 	db	2
  2519  009C2F  02                 	db	2
  2520  009C30  02                 	db	2
  2521  009C31  02                 	db	2
  2522  009C32  02                 	db	2
  2523  009C33  02                 	db	2
  2524  009C34  02                 	db	2
  2525  009C35  02                 	db	2
  2526  009C36  02                 	db	2
  2527  009C37  02                 	db	2
  2528  009C38  02                 	db	2
  2529  009C39  02                 	db	2
  2530  009C3A  02                 	db	2
  2531  009C3B  02                 	db	2
  2532  009C3C  02                 	db	2
  2533  009C3D  02                 	db	2
  2534  009C3E  02                 	db	2
  2535  009C3F  02                 	db	2
  2536  009C40  02                 	db	2
  2537  009C41  02                 	db	2
  2538  009C42  02                 	db	2
  2539  009C43  02                 	db	2
  2540  009C44  02                 	db	2
  2541  009C45  02                 	db	2
  2542  009C46  02                 	db	2
  2543  009C47  02                 	db	2
  2544  009C48  02                 	db	2
  2545  009C49  02                 	db	2
  2546  009C4A  02                 	db	2
  2547  009C4B  02                 	db	2
  2548  009C4C  02                 	db	2
  2549  009C4D  02                 	db	2
  2550  009C4E  02                 	db	2
  2551  009C4F  02                 	db	2
  2552  009C50  02                 	db	2
  2553  009C51  02                 	db	2
  2554  009C52  02                 	db	2
  2555  009C53  02                 	db	2
  2556  009C54  02                 	db	2
  2557  009C55  02                 	db	2
  2558  009C56  02                 	db	2
  2559  009C57  02                 	db	2
  2560  009C58  02                 	db	2
  2561  009C59  02                 	db	2
  2562  009C5A  02                 	db	2
  2563  009C5B  02                 	db	2
  2564  009C5C  02                 	db	2
  2565  009C5D  02                 	db	2
  2566  009C5E  02                 	db	2
  2567  009C5F  02                 	db	2
  2568  009C60  02                 	db	2
  2569  009C61  02                 	db	2
  2570  009C62  02                 	db	2
  2571  009C63  02                 	db	2
  2572  009C64  02                 	db	2
  2573  009C65  02                 	db	2
  2574  009C66  02                 	db	2
  2575  009C67  02                 	db	2
  2576  009C68  02                 	db	2
  2577  009C69  02                 	db	2
  2578  009C6A  02                 	db	2
  2579  009C6B  02                 	db	2
  2580  009C6C  02                 	db	2
  2581  009C6D  02                 	db	2
  2582  009C6E  02                 	db	2
  2583  009C6F  02                 	db	2
  2584  009C70  02                 	db	2
  2585  009C71  02                 	db	2
  2586  009C72  02                 	db	2
  2587  009C73  02                 	db	2
  2588  009C74  02                 	db	2
  2589  009C75  02                 	db	2
  2590  009C76  02                 	db	2
  2591  009C77  02                 	db	2
  2592  009C78  02                 	db	2
  2593  009C79  02                 	db	2
  2594  009C7A  02                 	db	2
  2595  009C7B  02                 	db	2
  2596  009C7C  02                 	db	2
  2597  009C7D  02                 	db	2
  2598  009C7E  02                 	db	2
  2599  009C7F  02                 	db	2
  2600  009C80  02                 	db	2
  2601  009C81  02                 	db	2
  2602  009C82  02                 	db	2
  2603  009C83  02                 	db	2
  2604  009C84  02                 	db	2
  2605  009C85  02                 	db	2
  2606  009C86  02                 	db	2
  2607  009C87  02                 	db	2
  2608  009C88  02                 	db	2
  2609  009C89  02                 	db	2
  2610  009C8A  02                 	db	2
  2611  009C8B  02                 	db	2
  2612  009C8C  02                 	db	2
  2613  009C8D  02                 	db	2
  2614  009C8E  02                 	db	2
  2615  009C8F  02                 	db	2
  2616  009C90  02                 	db	2
  2617  009C91  02                 	db	2
  2618  009C92  02                 	db	2
  2619  009C93  02                 	db	2
  2620  009C94  02                 	db	2
  2621  009C95  02                 	db	2
  2622  009C96  02                 	db	2
  2623  009C97  02                 	db	2
  2624  009C98  02                 	db	2
  2625  009C99  02                 	db	2
  2626  009C9A  02                 	db	2
  2627  009C9B  02                 	db	2
  2628  009C9C  02                 	db	2
  2629  009C9D  02                 	db	2
  2630  009C9E  02                 	db	2
  2631  009C9F  02                 	db	2
  2632  009CA0  02                 	db	2
  2633  009CA1  02                 	db	2
  2634  009CA2  02                 	db	2
  2635  009CA3  02                 	db	2
  2636  009CA4  02                 	db	2
  2637  009CA5  02                 	db	2
  2638  009CA6  02                 	db	2
  2639  009CA7  02                 	db	2
  2640  009CA8  02                 	db	2
  2641  009CA9  02                 	db	2
  2642  009CAA  02                 	db	2
  2643  009CAB  02                 	db	2
  2644  009CAC  02                 	db	2
  2645  009CAD  02                 	db	2
  2646  009CAE  02                 	db	2
  2647  009CAF  02                 	db	2
  2648  009CB0  02                 	db	2
  2649  009CB1  02                 	db	2
  2650  009CB2  02                 	db	2
  2651  009CB3  02                 	db	2
  2652  009CB4  02                 	db	2
  2653  009CB5  02                 	db	2
  2654  009CB6  02                 	db	2
  2655  009CB7  02                 	db	2
  2656  009CB8  02                 	db	2
  2657  009CB9  02                 	db	2
  2658  009CBA  02                 	db	2
  2659  009CBB  02                 	db	2
  2660  009CBC  02                 	db	2
  2661  009CBD  02                 	db	2
  2662  009CBE  02                 	db	2
  2663  009CBF  02                 	db	2
  2664  009CC0  02                 	db	2
  2665  009CC1  02                 	db	2
  2666  009CC2  02                 	db	2
  2667  009CC3  02                 	db	2
  2668  009CC4  02                 	db	2
  2669  009CC5  02                 	db	2
  2670  009CC6  02                 	db	2
  2671  009CC7  02                 	db	2
  2672  009CC8  02                 	db	2
  2673  009CC9  02                 	db	2
  2674  009CCA  02                 	db	2
  2675  009CCB  02                 	db	2
  2676  009CCC  02                 	db	2
  2677  009CCD  02                 	db	2
  2678  009CCE  02                 	db	2
  2679  009CCF  02                 	db	2
  2680  009CD0  02                 	db	2
  2681  009CD1  02                 	db	2
  2682  009CD2  02                 	db	2
  2683  009CD3  02                 	db	2
  2684  009CD4  02                 	db	2
  2685  009CD5  02                 	db	2
  2686  009CD6  02                 	db	2
  2687  009CD7  02                 	db	2
  2688  009CD8  02                 	db	2
  2689  009CD9  02                 	db	2
  2690  009CDA  02                 	db	2
  2691  009CDB  02                 	db	2
  2692  009CDC  02                 	db	2
  2693  009CDD  02                 	db	2
  2694  009CDE  02                 	db	2
  2695  009CDF  02                 	db	2
  2696  009CE0  02                 	db	2
  2697  009CE1  02                 	db	2
  2698  009CE2  02                 	db	2
  2699  009CE3  02                 	db	2
  2700  009CE4  02                 	db	2
  2701  009CE5  02                 	db	2
  2702  009CE6  02                 	db	2
  2703  009CE7  02                 	db	2
  2704  009CE8  02                 	db	2
  2705  009CE9  02                 	db	2
  2706  009CEA  01                 	db	1
  2707  009CEB  01                 	db	1
  2708  009CEC  01                 	db	1
  2709  009CED  01                 	db	1
  2710  009CEE  01                 	db	1
  2711  009CEF  01                 	db	1
  2712  009CF0  01                 	db	1
  2713  009CF1  01                 	db	1
  2714  009CF2  01                 	db	1
  2715  009CF3  01                 	db	1
  2716  009CF4  01                 	db	1
  2717  009CF5  01                 	db	1
  2718  009CF6  01                 	db	1
  2719  009CF7  01                 	db	1
  2720  009CF8  01                 	db	1
  2721  009CF9  01                 	db	1
  2722  009CFA  01                 	db	1
  2723  009CFB  01                 	db	1
  2724  009CFC  01                 	db	1
  2725  009CFD  01                 	db	1
  2726  009CFE  01                 	db	1
  2727  009CFF  01                 	db	1
  2728  009D00  01                 	db	1
  2729  009D01  01                 	db	1
  2730  009D02  01                 	db	1
  2731  009D03  01                 	db	1
  2732  009D04  01                 	db	1
  2733  009D05  01                 	db	1
  2734  009D06  01                 	db	1
  2735  009D07  01                 	db	1
  2736  009D08  01                 	db	1
  2737  009D09  01                 	db	1
  2738  009D0A  01                 	db	1
  2739  009D0B  01                 	db	1
  2740  009D0C  01                 	db	1
  2741  009D0D  01                 	db	1
  2742  009D0E  01                 	db	1
  2743  009D0F  01                 	db	1
  2744  009D10  01                 	db	1
  2745  009D11  01                 	db	1
  2746  009D12  01                 	db	1
  2747  009D13  01                 	db	1
  2748  009D14  01                 	db	1
  2749  009D15  01                 	db	1
  2750  009D16  01                 	db	1
  2751  009D17  01                 	db	1
  2752  009D18  01                 	db	1
  2753  009D19  01                 	db	1
  2754  009D1A  01                 	db	1
  2755  009D1B  01                 	db	1
  2756  009D1C  01                 	db	1
  2757  009D1D  01                 	db	1
  2758  009D1E  01                 	db	1
  2759  009D1F  01                 	db	1
  2760  009D20  01                 	db	1
  2761  009D21  01                 	db	1
  2762  009D22  01                 	db	1
  2763  009D23  01                 	db	1
  2764  009D24  01                 	db	1
  2765  009D25  01                 	db	1
  2766  009D26  01                 	db	1
  2767  009D27  01                 	db	1
  2768  009D28  01                 	db	1
  2769  009D29  01                 	db	1
  2770  009D2A  01                 	db	1
  2771  009D2B  01                 	db	1
  2772  009D2C  01                 	db	1
  2773  009D2D  01                 	db	1
  2774  009D2E  01                 	db	1
  2775  009D2F  01                 	db	1
  2776  009D30  01                 	db	1
  2777  009D31  01                 	db	1
  2778  009D32  01                 	db	1
  2779  009D33  01                 	db	1
  2780  009D34  01                 	db	1
  2781  009D35  01                 	db	1
  2782  009D36  01                 	db	1
  2783  009D37  01                 	db	1
  2784  009D38  01                 	db	1
  2785  009D39  01                 	db	1
  2786  009D3A  01                 	db	1
  2787  009D3B  01                 	db	1
  2788  009D3C  01                 	db	1
  2789  009D3D  01                 	db	1
  2790  009D3E  01                 	db	1
  2791  009D3F  01                 	db	1
  2792  009D40  01                 	db	1
  2793  009D41  01                 	db	1
  2794  009D42  01                 	db	1
  2795  009D43  01                 	db	1
  2796  009D44  01                 	db	1
  2797  009D45  01                 	db	1
  2798  009D46  01                 	db	1
  2799  009D47  01                 	db	1
  2800  009D48  01                 	db	1
  2801  009D49  01                 	db	1
  2802  009D4A  01                 	db	1
  2803  009D4B  01                 	db	1
  2804  009D4C  01                 	db	1
  2805  009D4D  01                 	db	1
  2806  009D4E  01                 	db	1
  2807  009D4F  01                 	db	1
  2808  009D50  01                 	db	1
  2809  009D51  01                 	db	1
  2810  009D52  01                 	db	1
  2811  009D53  01                 	db	1
  2812  009D54  01                 	db	1
  2813  009D55  01                 	db	1
  2814  009D56  01                 	db	1
  2815  009D57  01                 	db	1
  2816  009D58  01                 	db	1
  2817  009D59  01                 	db	1
  2818  009D5A  01                 	db	1
  2819  009D5B  01                 	db	1
  2820  009D5C  01                 	db	1
  2821  009D5D  01                 	db	1
  2822  009D5E  01                 	db	1
  2823  009D5F  01                 	db	1
  2824  009D60  01                 	db	1
  2825  009D61  01                 	db	1
  2826  009D62  01                 	db	1
  2827  009D63  01                 	db	1
  2828  009D64  01                 	db	1
  2829  009D65  01                 	db	1
  2830  009D66  01                 	db	1
  2831  009D67  01                 	db	1
  2832  009D68  01                 	db	1
  2833  009D69  01                 	db	1
  2834  009D6A  01                 	db	1
  2835  009D6B  01                 	db	1
  2836  009D6C  01                 	db	1
  2837  009D6D  01                 	db	1
  2838  009D6E  01                 	db	1
  2839  009D6F  01                 	db	1
  2840  009D70  01                 	db	1
  2841  009D71  01                 	db	1
  2842  009D72  01                 	db	1
  2843  009D73  01                 	db	1
  2844  009D74  01                 	db	1
  2845  009D75  01                 	db	1
  2846  009D76  01                 	db	1
  2847  009D77  01                 	db	1
  2848  009D78  01                 	db	1
  2849  009D79  01                 	db	1
  2850  009D7A  01                 	db	1
  2851  009D7B  01                 	db	1
  2852  009D7C  01                 	db	1
  2853  009D7D  01                 	db	1
  2854  009D7E  01                 	db	1
  2855  009D7F  01                 	db	1
  2856  009D80  01                 	db	1
  2857  009D81  01                 	db	1
  2858  009D82  01                 	db	1
  2859  009D83  01                 	db	1
  2860  009D84  01                 	db	1
  2861  009D85  01                 	db	1
  2862  009D86  01                 	db	1
  2863  009D87  01                 	db	1
  2864  009D88  01                 	db	1
  2865  009D89  01                 	db	1
  2866  009D8A  01                 	db	1
  2867  009D8B  01                 	db	1
  2868  009D8C  01                 	db	1
  2869  009D8D  01                 	db	1
  2870  009D8E  01                 	db	1
  2871  009D8F  01                 	db	1
  2872  009D90  01                 	db	1
  2873  009D91  01                 	db	1
  2874  009D92  01                 	db	1
  2875  009D93  01                 	db	1
  2876  009D94  01                 	db	1
  2877  009D95  01                 	db	1
  2878  009D96  01                 	db	1
  2879  009D97  01                 	db	1
  2880  009D98  01                 	db	1
  2881  009D99  01                 	db	1
  2882  009D9A  01                 	db	1
  2883  009D9B  01                 	db	1
  2884  009D9C  01                 	db	1
  2885  009D9D  01                 	db	1
  2886  009D9E  01                 	db	1
  2887  009D9F  01                 	db	1
  2888  009DA0  01                 	db	1
  2889  009DA1  01                 	db	1
  2890  009DA2  01                 	db	1
  2891  009DA3  01                 	db	1
  2892  009DA4  01                 	db	1
  2893  009DA5  01                 	db	1
  2894  009DA6  01                 	db	1
  2895  009DA7  01                 	db	1
  2896  009DA8  01                 	db	1
  2897  009DA9  01                 	db	1
  2898  009DAA  01                 	db	1
  2899  009DAB  00                 	db	0
  2900  009DAC  00                 	db	0
  2901  009DAD  00                 	db	0
  2902  009DAE  00                 	db	0
  2903  009DAF  00                 	db	0
  2904  009DB0  00                 	db	0
  2905  009DB1  00                 	db	0
  2906  009DB2  00                 	db	0
  2907  009DB3  00                 	db	0
  2908  009DB4  00                 	db	0
  2909  009DB5  00                 	db	0
  2910  009DB6  00                 	db	0
  2911  009DB7  00                 	db	0
  2912  009DB8  00                 	db	0
  2913  009DB9  00                 	db	0
  2914  009DBA  00                 	db	0
  2915  009DBB  00                 	db	0
  2916  009DBC  00                 	db	0
  2917  009DBD  00                 	db	0
  2918  009DBE  00                 	db	0
  2919  009DBF  00                 	db	0
  2920  009DC0  00                 	db	0
  2921  009DC1  00                 	db	0
  2922  009DC2  00                 	db	0
  2923  009DC3  00                 	db	0
  2924  009DC4  00                 	db	0
  2925  009DC5  00                 	db	0
  2926  009DC6  00                 	db	0
  2927  009DC7  00                 	db	0
  2928  009DC8  00                 	db	0
  2929  009DC9  00                 	db	0
  2930  009DCA  00                 	db	0
  2931  009DCB  00                 	db	0
  2932  009DCC  00                 	db	0
  2933  009DCD  00                 	db	0
  2934  009DCE  00                 	db	0
  2935  009DCF  00                 	db	0
  2936  009DD0  00                 	db	0
  2937  009DD1  00                 	db	0
  2938  009DD2  00                 	db	0
  2939  009DD3  00                 	db	0
  2940  009DD4  00                 	db	0
  2941  009DD5  00                 	db	0
  2942  009DD6  00                 	db	0
  2943  009DD7  00                 	db	0
  2944  009DD8  00                 	db	0
  2945  009DD9  00                 	db	0
  2946  009DDA  00                 	db	0
  2947  009DDB  00                 	db	0
  2948  009DDC  00                 	db	0
  2949  009DDD  00                 	db	0
  2950  009DDE  00                 	db	0
  2951  009DDF  00                 	db	0
  2952  009DE0  00                 	db	0
  2953  009DE1  00                 	db	0
  2954  009DE2  00                 	db	0
  2955  009DE3  00                 	db	0
  2956  009DE4                     __end_of_motor_prescaler_lookup:
  2957                           	opt stack 0
  2958  009DE4                     _USB_SD_Ptr:
  2959                           	opt stack 0
  2960  009DE4  59                 	db	low _sd000
  2961  009DE5  A3                 	db	high _sd000
  2962  009DE6  4E                 	db	low _sd001
  2963  009DE7  A1                 	db	high _sd001
  2964  009DE8  82                 	db	low _sd002
  2965  009DE9  A1                 	db	high _sd002
  2966  009DEA  F1                 	db	low _sd003
  2967  009DEB  A1                 	db	high _sd003
  2968  009DEC                     __end_of_USB_SD_Ptr:
  2969                           	opt stack 0
  2970  009DEC                     _USB_CD_Ptr:
  2971                           	opt stack 0
  2972  009DEC  0E                 	db	low _configDescriptor1
  2973  009DED  A1                 	db	high _configDescriptor1
  2974  009DEE                     __end_of_USB_CD_Ptr:
  2975                           	opt stack 0
  2976  009DEE                     _dc_manual:
  2977                           	opt stack 0
  2978  009DEE  4D                 	db	77
  2979  009DEF  61                 	db	97
  2980  009DF0  6E                 	db	110
  2981  009DF1  75                 	db	117
  2982  009DF2  61                 	db	97
  2983  009DF3  6C                 	db	108
  2984  009DF4  20                 	db	32
  2985  009DF5  4D                 	db	77
  2986  009DF6  6F                 	db	111
  2987  009DF7  64                 	db	100
  2988  009DF8  65                 	db	101
  2989  009DF9  20                 	db	32
  2990  009DFA  20                 	db	32
  2991  009DFB  20                 	db	32
  2992  009DFC  20                 	db	32
  2993  009DFD  20                 	db	32
  2994  009DFE  20                 	db	32
  2995  009DFF  20                 	db	32
  2996  009E00  20                 	db	32
  2997  009E01  20                 	db	32
  2998  009E02  43                 	db	67
  2999  009E03  75                 	db	117
  3000  009E04  72                 	db	114
  3001  009E05  72                 	db	114
  3002  009E06  65                 	db	101
  3003  009E07  6E                 	db	110
  3004  009E08  74                 	db	116
  3005  009E09  20                 	db	32
  3006  009E0A  70                 	db	112
  3007  009E0B  6F                 	db	111
  3008  009E0C  73                 	db	115
  3009  009E0D  3A                 	db	58
  3010  009E0E  20                 	db	32
  3011  009E0F  20                 	db	32
  3012  009E10  20                 	db	32
  3013  009E11  20                 	db	32
  3014  009E12  20                 	db	32
  3015  009E13  20                 	db	32
  3016  009E14  20                 	db	32
  3017  009E15  01                 	db	1
  3018  009E16  54                 	db	84
  3019  009E17  75                 	db	117
  3020  009E18  72                 	db	114
  3021  009E19  6E                 	db	110
  3022  009E1A  20                 	db	32
  3023  009E1B  43                 	db	67
  3024  009E1C  43                 	db	67
  3025  009E1D  57                 	db	87
  3026  009E1E  20                 	db	32
  3027  009E1F  00                 	db	0
  3028  009E20  20                 	db	32
  3029  009E21  53                 	db	83
  3030  009E22  70                 	db	112
  3031  009E23  65                 	db	101
  3032  009E24  65                 	db	101
  3033  009E25  64                 	db	100
  3034  009E26  20                 	db	32
  3035  009E27  20                 	db	32
  3036  009E28  20                 	db	32
  3037  009E29  20                 	db	32
  3038  009E2A  53                 	db	83
  3039  009E2B  74                 	db	116
  3040  009E2C  61                 	db	97
  3041  009E2D  72                 	db	114
  3042  009E2E  74                 	db	116
  3043  009E2F  20                 	db	32
  3044  009E30  20                 	db	32
  3045  009E31  20                 	db	32
  3046  009E32  20                 	db	32
  3047  009E33  00                 	db	0
  3048  009E34  20                 	db	32
  3049  009E35  20                 	db	32
  3050  009E36  20                 	db	32
  3051  009E37  20                 	db	32
  3052  009E38  20                 	db	32
  3053  009E39  20                 	db	32
  3054  009E3A  20                 	db	32
  3055  009E3B  20                 	db	32
  3056  009E3C  20                 	db	32
  3057  009E3D  20                 	db	32
  3058  009E3E                     __end_of_dc_manual:
  3059                           	opt stack 0
  3060  009E3E                     _dc_zero:
  3061                           	opt stack 0
  3062  009E3E  52                 	db	82
  3063  009E3F  65                 	db	101
  3064  009E40  74                 	db	116
  3065  009E41  75                 	db	117
  3066  009E42  72                 	db	114
  3067  009E43  6E                 	db	110
  3068  009E44  20                 	db	32
  3069  009E45  74                 	db	116
  3070  009E46  6F                 	db	111
  3071  009E47  20                 	db	32
  3072  009E48  5A                 	db	90
  3073  009E49  65                 	db	101
  3074  009E4A  72                 	db	114
  3075  009E4B  6F                 	db	111
  3076  009E4C  3F                 	db	63
  3077  009E4D  20                 	db	32
  3078  009E4E  20                 	db	32
  3079  009E4F  20                 	db	32
  3080  009E50  20                 	db	32
  3081  009E51  20                 	db	32
  3082  009E52  43                 	db	67
  3083  009E53  75                 	db	117
  3084  009E54  72                 	db	114
  3085  009E55  72                 	db	114
  3086  009E56  65                 	db	101
  3087  009E57  6E                 	db	110
  3088  009E58  74                 	db	116
  3089  009E59  20                 	db	32
  3090  009E5A  70                 	db	112
  3091  009E5B  6F                 	db	111
  3092  009E5C  73                 	db	115
  3093  009E5D  3A                 	db	58
  3094  009E5E  20                 	db	32
  3095  009E5F  20                 	db	32
  3096  009E60  20                 	db	32
  3097  009E61  20                 	db	32
  3098  009E62  20                 	db	32
  3099  009E63  20                 	db	32
  3100  009E64  20                 	db	32
  3101  009E65  20                 	db	32
  3102  009E66  20                 	db	32
  3103  009E67  20                 	db	32
  3104  009E68  20                 	db	32
  3105  009E69  20                 	db	32
  3106  009E6A  20                 	db	32
  3107  009E6B  20                 	db	32
  3108  009E6C  20                 	db	32
  3109  009E6D  20                 	db	32
  3110  009E6E  20                 	db	32
  3111  009E6F  20                 	db	32
  3112  009E70  20                 	db	32
  3113  009E71  20                 	db	32
  3114  009E72  20                 	db	32
  3115  009E73  20                 	db	32
  3116  009E74  20                 	db	32
  3117  009E75  20                 	db	32
  3118  009E76  20                 	db	32
  3119  009E77  20                 	db	32
  3120  009E78  20                 	db	32
  3121  009E79  20                 	db	32
  3122  009E7A  20                 	db	32
  3123  009E7B  59                 	db	89
  3124  009E7C  65                 	db	101
  3125  009E7D  73                 	db	115
  3126  009E7E  20                 	db	32
  3127  009E7F  20                 	db	32
  3128  009E80  20                 	db	32
  3129  009E81  20                 	db	32
  3130  009E82  20                 	db	32
  3131  009E83  20                 	db	32
  3132  009E84  20                 	db	32
  3133  009E85  20                 	db	32
  3134  009E86  20                 	db	32
  3135  009E87  20                 	db	32
  3136  009E88  20                 	db	32
  3137  009E89  20                 	db	32
  3138  009E8A  4E                 	db	78
  3139  009E8B  6F                 	db	111
  3140  009E8C  20                 	db	32
  3141  009E8D  20                 	db	32
  3142  009E8E                     __end_of_dc_zero:
  3143                           	opt stack 0
  3144  009E8E                     _dc_arc2:
  3145                           	opt stack 0
  3146  009E8E  41                 	db	65
  3147  009E8F  72                 	db	114
  3148  009E90  63                 	db	99
  3149  009E91  3A                 	db	58
  3150  009E92  20                 	db	32
  3151  009E93  53                 	db	83
  3152  009E94  69                 	db	105
  3153  009E95  7A                 	db	122
  3154  009E96  65                 	db	101
  3155  009E97  3D                 	db	61
  3156  009E98  20                 	db	32
  3157  009E99  20                 	db	32
  3158  009E9A  20                 	db	32
  3159  009E9B  20                 	db	32
  3160  009E9C  20                 	db	32
  3161  009E9D  20                 	db	32
  3162  009E9E  20                 	db	32
  3163  009E9F  20                 	db	32
  3164  009EA0  20                 	db	32
  3165  009EA1  20                 	db	32
  3166  009EA2  43                 	db	67
  3167  009EA3  75                 	db	117
  3168  009EA4  72                 	db	114
  3169  009EA5  72                 	db	114
  3170  009EA6  65                 	db	101
  3171  009EA7  6E                 	db	110
  3172  009EA8  74                 	db	116
  3173  009EA9  20                 	db	32
  3174  009EAA  70                 	db	112
  3175  009EAB  6F                 	db	111
  3176  009EAC  73                 	db	115
  3177  009EAD  3A                 	db	58
  3178  009EAE  20                 	db	32
  3179  009EAF  20                 	db	32
  3180  009EB0  20                 	db	32
  3181  009EB1  20                 	db	32
  3182  009EB2  20                 	db	32
  3183  009EB3  20                 	db	32
  3184  009EB4  20                 	db	32
  3185  009EB5  01                 	db	1
  3186  009EB6  54                 	db	84
  3187  009EB7  75                 	db	117
  3188  009EB8  72                 	db	114
  3189  009EB9  6E                 	db	110
  3190  009EBA  20                 	db	32
  3191  009EBB  43                 	db	67
  3192  009EBC  43                 	db	67
  3193  009EBD  57                 	db	87
  3194  009EBE  20                 	db	32
  3195  009EBF  00                 	db	0
  3196  009EC0  20                 	db	32
  3197  009EC1  53                 	db	83
  3198  009EC2  70                 	db	112
  3199  009EC3  65                 	db	101
  3200  009EC4  65                 	db	101
  3201  009EC5  64                 	db	100
  3202  009EC6  20                 	db	32
  3203  009EC7  20                 	db	32
  3204  009EC8  20                 	db	32
  3205  009EC9  20                 	db	32
  3206  009ECA  53                 	db	83
  3207  009ECB  74                 	db	116
  3208  009ECC  61                 	db	97
  3209  009ECD  72                 	db	114
  3210  009ECE  74                 	db	116
  3211  009ECF  20                 	db	32
  3212  009ED0  20                 	db	32
  3213  009ED1  20                 	db	32
  3214  009ED2  20                 	db	32
  3215  009ED3  00                 	db	0
  3216  009ED4  20                 	db	32
  3217  009ED5  20                 	db	32
  3218  009ED6  20                 	db	32
  3219  009ED7  20                 	db	32
  3220  009ED8  20                 	db	32
  3221  009ED9  20                 	db	32
  3222  009EDA  20                 	db	32
  3223  009EDB  20                 	db	32
  3224  009EDC  20                 	db	32
  3225  009EDD  20                 	db	32
  3226  009EDE                     __end_of_dc_arc2:
  3227                           	opt stack 0
  3228  009EDE                     _dc_arc1:
  3229                           	opt stack 0
  3230  009EDE  41                 	db	65
  3231  009EDF  72                 	db	114
  3232  009EE0  63                 	db	99
  3233  009EE1  3A                 	db	58
  3234  009EE2  20                 	db	32
  3235  009EE3  53                 	db	83
  3236  009EE4  65                 	db	101
  3237  009EE5  74                 	db	116
  3238  009EE6  20                 	db	32
  3239  009EE7  61                 	db	97
  3240  009EE8  72                 	db	114
  3241  009EE9  63                 	db	99
  3242  009EEA  20                 	db	32
  3243  009EEB  73                 	db	115
  3244  009EEC  69                 	db	105
  3245  009EED  7A                 	db	122
  3246  009EEE  65                 	db	101
  3247  009EEF  20                 	db	32
  3248  009EF0  20                 	db	32
  3249  009EF1  20                 	db	32
  3250  009EF2  41                 	db	65
  3251  009EF3  72                 	db	114
  3252  009EF4  63                 	db	99
  3253  009EF5  20                 	db	32
  3254  009EF6  73                 	db	115
  3255  009EF7  69                 	db	105
  3256  009EF8  7A                 	db	122
  3257  009EF9  65                 	db	101
  3258  009EFA  3A                 	db	58
  3259  009EFB  20                 	db	32
  3260  009EFC  20                 	db	32
  3261  009EFD  20                 	db	32
  3262  009EFE  20                 	db	32
  3263  009EFF  20                 	db	32
  3264  009F00  20                 	db	32
  3265  009F01  20                 	db	32
  3266  009F02  20                 	db	32
  3267  009F03  20                 	db	32
  3268  009F04  20                 	db	32
  3269  009F05  20                 	db	32
  3270  009F06  53                 	db	83
  3271  009F07  74                 	db	116
  3272  009F08  65                 	db	101
  3273  009F09  70                 	db	112
  3274  009F0A  20                 	db	32
  3275  009F0B  73                 	db	115
  3276  009F0C  69                 	db	105
  3277  009F0D  7A                 	db	122
  3278  009F0E  65                 	db	101
  3279  009F0F  20                 	db	32
  3280  009F10  00                 	db	0
  3281  009F11  20                 	db	32
  3282  009F12  20                 	db	32
  3283  009F13  43                 	db	67
  3284  009F14  6F                 	db	111
  3285  009F15  6E                 	db	110
  3286  009F16  66                 	db	102
  3287  009F17  69                 	db	105
  3288  009F18  72                 	db	114
  3289  009F19  6D                 	db	109
  3290  009F1A  20                 	db	32
  3291  009F1B  20                 	db	32
  3292  009F1C  20                 	db	32
  3293  009F1D  20                 	db	32
  3294  009F1E  20                 	db	32
  3295  009F1F  20                 	db	32
  3296  009F20  20                 	db	32
  3297  009F21  20                 	db	32
  3298  009F22  20                 	db	32
  3299  009F23  20                 	db	32
  3300  009F24  00                 	db	0
  3301  009F25  20                 	db	32
  3302  009F26  20                 	db	32
  3303  009F27  43                 	db	67
  3304  009F28  61                 	db	97
  3305  009F29  6E                 	db	110
  3306  009F2A  63                 	db	99
  3307  009F2B  65                 	db	101
  3308  009F2C  6C                 	db	108
  3309  009F2D  20                 	db	32
  3310  009F2E                     __end_of_dc_arc1:
  3311                           	opt stack 0
  3312  009F2E                     _dc_divide2:
  3313                           	opt stack 0
  3314  009F2E  44                 	db	68
  3315  009F2F  69                 	db	105
  3316  009F30  76                 	db	118
  3317  009F31  69                 	db	105
  3318  009F32  64                 	db	100
  3319  009F33  65                 	db	101
  3320  009F34  3A                 	db	58
  3321  009F35  20                 	db	32
  3322  009F36  20                 	db	32
  3323  009F37  20                 	db	32
  3324  009F38  20                 	db	32
  3325  009F39  20                 	db	32
  3326  009F3A  20                 	db	32
  3327  009F3B  20                 	db	32
  3328  009F3C  20                 	db	32
  3329  009F3D  20                 	db	32
  3330  009F3E  20                 	db	32
  3331  009F3F  20                 	db	32
  3332  009F40  20                 	db	32
  3333  009F41  20                 	db	32
  3334  009F42  50                 	db	80
  3335  009F43  6F                 	db	111
  3336  009F44  73                 	db	115
  3337  009F45  3A                 	db	58
  3338  009F46  20                 	db	32
  3339  009F47  20                 	db	32
  3340  009F48  20                 	db	32
  3341  009F49  20                 	db	32
  3342  009F4A  20                 	db	32
  3343  009F4B  20                 	db	32
  3344  009F4C  20                 	db	32
  3345  009F4D  20                 	db	32
  3346  009F4E  20                 	db	32
  3347  009F4F  20                 	db	32
  3348  009F50  20                 	db	32
  3349  009F51  20                 	db	32
  3350  009F52  20                 	db	32
  3351  009F53  20                 	db	32
  3352  009F54  20                 	db	32
  3353  009F55  20                 	db	32
  3354  009F56  4A                 	db	74
  3355  009F57  75                 	db	117
  3356  009F58  6D                 	db	109
  3357  009F59  70                 	db	112
  3358  009F5A  20                 	db	32
  3359  009F5B  73                 	db	115
  3360  009F5C  69                 	db	105
  3361  009F5D  7A                 	db	122
  3362  009F5E  65                 	db	101
  3363  009F5F  3A                 	db	58
  3364  009F60  20                 	db	32
  3365  009F61  20                 	db	32
  3366  009F62  20                 	db	32
  3367  009F63  20                 	db	32
  3368  009F64  20                 	db	32
  3369  009F65  20                 	db	32
  3370  009F66  20                 	db	32
  3371  009F67  20                 	db	32
  3372  009F68  20                 	db	32
  3373  009F69  20                 	db	32
  3374  009F6A  50                 	db	80
  3375  009F6B  72                 	db	114
  3376  009F6C  65                 	db	101
  3377  009F6D  73                 	db	115
  3378  009F6E  73                 	db	115
  3379  009F6F  54                 	db	84
  3380  009F70  6F                 	db	111
  3381  009F71  4A                 	db	74
  3382  009F72  75                 	db	117
  3383  009F73  6D                 	db	109
  3384  009F74  70                 	db	112
  3385  009F75  20                 	db	32
  3386  009F76  00                 	db	0
  3387  009F77  20                 	db	32
  3388  009F78  43                 	db	67
  3389  009F79  61                 	db	97
  3390  009F7A  6E                 	db	110
  3391  009F7B  63                 	db	99
  3392  009F7C  65                 	db	101
  3393  009F7D  6C                 	db	108
  3394  009F7E                     __end_of_dc_divide2:
  3395                           	opt stack 0
  3396  009F7E                     _dc_divide1:
  3397                           	opt stack 0
  3398  009F7E  44                 	db	68
  3399  009F7F  69                 	db	105
  3400  009F80  76                 	db	118
  3401  009F81  69                 	db	105
  3402  009F82  64                 	db	100
  3403  009F83  65                 	db	101
  3404  009F84  3A                 	db	58
  3405  009F85  20                 	db	32
  3406  009F86  53                 	db	83
  3407  009F87  65                 	db	101
  3408  009F88  74                 	db	116
  3409  009F89  20                 	db	32
  3410  009F8A  64                 	db	100
  3411  009F8B  69                 	db	105
  3412  009F8C  76                 	db	118
  3413  009F8D  69                 	db	105
  3414  009F8E  73                 	db	115
  3415  009F8F  69                 	db	105
  3416  009F90  6F                 	db	111
  3417  009F91  6E                 	db	110
  3418  009F92  20                 	db	32
  3419  009F93  20                 	db	32
  3420  009F94  20                 	db	32
  3421  009F95  20                 	db	32
  3422  009F96  20                 	db	32
  3423  009F97  20                 	db	32
  3424  009F98  20                 	db	32
  3425  009F99  20                 	db	32
  3426  009F9A  20                 	db	32
  3427  009F9B  20                 	db	32
  3428  009F9C  20                 	db	32
  3429  009F9D  20                 	db	32
  3430  009F9E  20                 	db	32
  3431  009F9F  20                 	db	32
  3432  009FA0  20                 	db	32
  3433  009FA1  20                 	db	32
  3434  009FA2  20                 	db	32
  3435  009FA3  20                 	db	32
  3436  009FA4  20                 	db	32
  3437  009FA5  20                 	db	32
  3438  009FA6  20                 	db	32
  3439  009FA7  20                 	db	32
  3440  009FA8  20                 	db	32
  3441  009FA9  2F                 	db	47
  3442  009FAA  73                 	db	115
  3443  009FAB  74                 	db	116
  3444  009FAC  65                 	db	101
  3445  009FAD  70                 	db	112
  3446  009FAE  20                 	db	32
  3447  009FAF  20                 	db	32
  3448  009FB0  00                 	db	0
  3449  009FB1  20                 	db	32
  3450  009FB2  20                 	db	32
  3451  009FB3  43                 	db	67
  3452  009FB4  6F                 	db	111
  3453  009FB5  6E                 	db	110
  3454  009FB6  66                 	db	102
  3455  009FB7  69                 	db	105
  3456  009FB8  72                 	db	114
  3457  009FB9  6D                 	db	109
  3458  009FBA  31                 	db	49
  3459  009FBB  32                 	db	50
  3460  009FBC  33                 	db	51
  3461  009FBD  34                 	db	52
  3462  009FBE  20                 	db	32
  3463  009FBF  20                 	db	32
  3464  009FC0  20                 	db	32
  3465  009FC1  20                 	db	32
  3466  009FC2  20                 	db	32
  3467  009FC3  20                 	db	32
  3468  009FC4  00                 	db	0
  3469  009FC5  20                 	db	32
  3470  009FC6  20                 	db	32
  3471  009FC7  43                 	db	67
  3472  009FC8  61                 	db	97
  3473  009FC9  6E                 	db	110
  3474  009FCA  63                 	db	99
  3475  009FCB  65                 	db	101
  3476  009FCC  6C                 	db	108
  3477  009FCD  20                 	db	32
  3478  009FCE                     __end_of_dc_divide1:
  3479                           	opt stack 0
  3480  009FCE                     _dc_setup2:
  3481                           	opt stack 0
  3482  009FCE  53                 	db	83
  3483  009FCF  65                 	db	101
  3484  009FD0  74                 	db	116
  3485  009FD1  75                 	db	117
  3486  009FD2  70                 	db	112
  3487  009FD3  3A                 	db	58
  3488  009FD4  20                 	db	32
  3489  009FD5  53                 	db	83
  3490  009FD6  65                 	db	101
  3491  009FD7  74                 	db	116
  3492  009FD8  20                 	db	32
  3493  009FD9  64                 	db	100
  3494  009FDA  69                 	db	105
  3495  009FDB  72                 	db	114
  3496  009FDC  65                 	db	101
  3497  009FDD  63                 	db	99
  3498  009FDE  74                 	db	116
  3499  009FDF  69                 	db	105
  3500  009FE0  6F                 	db	111
  3501  009FE1  6E                 	db	110
  3502  009FE2  20                 	db	32
  3503  009FE3  20                 	db	32
  3504  009FE4  20                 	db	32
  3505  009FE5  20                 	db	32
  3506  009FE6  20                 	db	32
  3507  009FE7  20                 	db	32
  3508  009FE8  20                 	db	32
  3509  009FE9  20                 	db	32
  3510  009FEA  20                 	db	32
  3511  009FEB  20                 	db	32
  3512  009FEC  20                 	db	32
  3513  009FED  20                 	db	32
  3514  009FEE  20                 	db	32
  3515  009FEF  20                 	db	32
  3516  009FF0  20                 	db	32
  3517  009FF1  20                 	db	32
  3518  009FF2  20                 	db	32
  3519  009FF3  20                 	db	32
  3520  009FF4  20                 	db	32
  3521  009FF5  20                 	db	32
  3522  009FF6  20                 	db	32
  3523  009FF7  43                 	db	67
  3524  009FF8  6F                 	db	111
  3525  009FF9  75                 	db	117
  3526  009FFA  6E                 	db	110
  3527  009FFB  74                 	db	116
  3528  009FFC  65                 	db	101
  3529  009FFD  72                 	db	114
  3530  009FFE  43                 	db	67
  3531  009FFF  6C                 	db	108
  3532  00A000  6F                 	db	111
  3533  00A001  63                 	db	99
  3534  00A002  6B                 	db	107
  3535  00A003  77                 	db	119
  3536  00A004  69                 	db	105
  3537  00A005  73                 	db	115
  3538  00A006  65                 	db	101
  3539  00A007  20                 	db	32
  3540  00A008  20                 	db	32
  3541  00A009  20                 	db	32
  3542  00A00A  20                 	db	32
  3543  00A00B  43                 	db	67
  3544  00A00C  6C                 	db	108
  3545  00A00D  6F                 	db	111
  3546  00A00E  63                 	db	99
  3547  00A00F  6B                 	db	107
  3548  00A010  77                 	db	119
  3549  00A011  69                 	db	105
  3550  00A012  73                 	db	115
  3551  00A013  65                 	db	101
  3552  00A014  20                 	db	32
  3553  00A015  20                 	db	32
  3554  00A016  20                 	db	32
  3555  00A017  20                 	db	32
  3556  00A018  20                 	db	32
  3557  00A019  20                 	db	32
  3558  00A01A  20                 	db	32
  3559  00A01B  20                 	db	32
  3560  00A01C  20                 	db	32
  3561  00A01D  20                 	db	32
  3562  00A01E                     __end_of_dc_setup2:
  3563                           	opt stack 0
  3564  00A01E                     _dc_setup1:
  3565                           	opt stack 0
  3566  00A01E  53                 	db	83
  3567  00A01F  65                 	db	101
  3568  00A020  74                 	db	116
  3569  00A021  75                 	db	117
  3570  00A022  70                 	db	112
  3571  00A023  3A                 	db	58
  3572  00A024  20                 	db	32
  3573  00A025  53                 	db	83
  3574  00A026  65                 	db	101
  3575  00A027  74                 	db	116
  3576  00A028  20                 	db	32
  3577  00A029  7A                 	db	122
  3578  00A02A  65                 	db	101
  3579  00A02B  72                 	db	114
  3580  00A02C  6F                 	db	111
  3581  00A02D  20                 	db	32
  3582  00A02E  70                 	db	112
  3583  00A02F  6F                 	db	111
  3584  00A030  73                 	db	115
  3585  00A031  2E                 	db	46
  3586  00A032  20                 	db	32
  3587  00A033  20                 	db	32
  3588  00A034  20                 	db	32
  3589  00A035  20                 	db	32
  3590  00A036  20                 	db	32
  3591  00A037  20                 	db	32
  3592  00A038  20                 	db	32
  3593  00A039  20                 	db	32
  3594  00A03A  20                 	db	32
  3595  00A03B  20                 	db	32
  3596  00A03C  20                 	db	32
  3597  00A03D  20                 	db	32
  3598  00A03E  20                 	db	32
  3599  00A03F  20                 	db	32
  3600  00A040  20                 	db	32
  3601  00A041  20                 	db	32
  3602  00A042  20                 	db	32
  3603  00A043  20                 	db	32
  3604  00A044  20                 	db	32
  3605  00A045  20                 	db	32
  3606  00A046  53                 	db	83
  3607  00A047  74                 	db	116
  3608  00A048  65                 	db	101
  3609  00A049  70                 	db	112
  3610  00A04A  20                 	db	32
  3611  00A04B  73                 	db	115
  3612  00A04C  69                 	db	105
  3613  00A04D  7A                 	db	122
  3614  00A04E  65                 	db	101
  3615  00A04F  20                 	db	32
  3616  00A050  00                 	db	0
  3617  00A051  20                 	db	32
  3618  00A052  20                 	db	32
  3619  00A053  43                 	db	67
  3620  00A054  6F                 	db	111
  3621  00A055  6E                 	db	110
  3622  00A056  66                 	db	102
  3623  00A057  69                 	db	105
  3624  00A058  72                 	db	114
  3625  00A059  6D                 	db	109
  3626  00A05A  20                 	db	32
  3627  00A05B  78                 	db	120
  3628  00A05C  2E                 	db	46
  3629  00A05D  78                 	db	120
  3630  00A05E  78                 	db	120
  3631  00A05F  01                 	db	1
  3632  00A060  20                 	db	32
  3633  00A061  20                 	db	32
  3634  00A062  20                 	db	32
  3635  00A063  20                 	db	32
  3636  00A064  00                 	db	0
  3637  00A065  20                 	db	32
  3638  00A066  20                 	db	32
  3639  00A067  43                 	db	67
  3640  00A068  61                 	db	97
  3641  00A069  6E                 	db	110
  3642  00A06A  63                 	db	99
  3643  00A06B  65                 	db	101
  3644  00A06C  6C                 	db	108
  3645  00A06D  20                 	db	32
  3646  00A06E                     __end_of_dc_setup1:
  3647                           	opt stack 0
  3648  00A06E                     _dc_main_simplified:
  3649                           	opt stack 0
  3650  00A06E  4D                 	db	77
  3651  00A06F  61                 	db	97
  3652  00A070  69                 	db	105
  3653  00A071  6E                 	db	110
  3654  00A072  20                 	db	32
  3655  00A073  4D                 	db	77
  3656  00A074  65                 	db	101
  3657  00A075  6E                 	db	110
  3658  00A076  75                 	db	117
  3659  00A077  3A                 	db	58
  3660  00A078  20                 	db	32
  3661  00A079  20                 	db	32
  3662  00A07A  20                 	db	32
  3663  00A07B  20                 	db	32
  3664  00A07C  20                 	db	32
  3665  00A07D  20                 	db	32
  3666  00A07E  20                 	db	32
  3667  00A07F  20                 	db	32
  3668  00A080  20                 	db	32
  3669  00A081  20                 	db	32
  3670  00A082  20                 	db	32
  3671  00A083  53                 	db	83
  3672  00A084  65                 	db	101
  3673  00A085  74                 	db	116
  3674  00A086  75                 	db	117
  3675  00A087  70                 	db	112
  3676  00A088  20                 	db	32
  3677  00A089  20                 	db	32
  3678  00A08A  20                 	db	32
  3679  00A08B  20                 	db	32
  3680  00A08C  20                 	db	32
  3681  00A08D  20                 	db	32
  3682  00A08E  20                 	db	32
  3683  00A08F  20                 	db	32
  3684  00A090  20                 	db	32
  3685  00A091  20                 	db	32
  3686  00A092  20                 	db	32
  3687  00A093  20                 	db	32
  3688  00A094  20                 	db	32
  3689  00A095  20                 	db	32
  3690  00A096  20                 	db	32
  3691  00A097  4D                 	db	77
  3692  00A098  6F                 	db	111
  3693  00A099  76                 	db	118
  3694  00A09A  65                 	db	101
  3695  00A09B  20                 	db	32
  3696  00A09C  20                 	db	32
  3697  00A09D  20                 	db	32
  3698  00A09E  20                 	db	32
  3699  00A09F  20                 	db	32
  3700  00A0A0  20                 	db	32
  3701  00A0A1  20                 	db	32
  3702  00A0A2  20                 	db	32
  3703  00A0A3  20                 	db	32
  3704  00A0A4  20                 	db	32
  3705  00A0A5  20                 	db	32
  3706  00A0A6  20                 	db	32
  3707  00A0A7  20                 	db	32
  3708  00A0A8  20                 	db	32
  3709  00A0A9  20                 	db	32
  3710  00A0AA  20                 	db	32
  3711  00A0AB  47                 	db	71
  3712  00A0AC  6F                 	db	111
  3713  00A0AD  20                 	db	32
  3714  00A0AE  74                 	db	116
  3715  00A0AF  6F                 	db	111
  3716  00A0B0  20                 	db	32
  3717  00A0B1  5A                 	db	90
  3718  00A0B2  65                 	db	101
  3719  00A0B3  72                 	db	114
  3720  00A0B4  6F                 	db	111
  3721  00A0B5  20                 	db	32
  3722  00A0B6  20                 	db	32
  3723  00A0B7  20                 	db	32
  3724  00A0B8  20                 	db	32
  3725  00A0B9  20                 	db	32
  3726  00A0BA  20                 	db	32
  3727  00A0BB  20                 	db	32
  3728  00A0BC  20                 	db	32
  3729  00A0BD  20                 	db	32
  3730  00A0BE                     __end_of_dc_main_simplified:
  3731                           	opt stack 0
  3732  00A0BE                     _dc_main:
  3733                           	opt stack 0
  3734  00A0BE  4D                 	db	77
  3735  00A0BF  61                 	db	97
  3736  00A0C0  69                 	db	105
  3737  00A0C1  6E                 	db	110
  3738  00A0C2  20                 	db	32
  3739  00A0C3  4D                 	db	77
  3740  00A0C4  65                 	db	101
  3741  00A0C5  6E                 	db	110
  3742  00A0C6  75                 	db	117
  3743  00A0C7  3A                 	db	58
  3744  00A0C8  20                 	db	32
  3745  00A0C9  20                 	db	32
  3746  00A0CA  20                 	db	32
  3747  00A0CB  20                 	db	32
  3748  00A0CC  20                 	db	32
  3749  00A0CD  20                 	db	32
  3750  00A0CE  20                 	db	32
  3751  00A0CF  20                 	db	32
  3752  00A0D0  20                 	db	32
  3753  00A0D1  20                 	db	32
  3754  00A0D2  20                 	db	32
  3755  00A0D3  53                 	db	83
  3756  00A0D4  65                 	db	101
  3757  00A0D5  74                 	db	116
  3758  00A0D6  75                 	db	117
  3759  00A0D7  70                 	db	112
  3760  00A0D8  20                 	db	32
  3761  00A0D9  20                 	db	32
  3762  00A0DA  20                 	db	32
  3763  00A0DB  20                 	db	32
  3764  00A0DC  44                 	db	68
  3765  00A0DD  69                 	db	105
  3766  00A0DE  76                 	db	118
  3767  00A0DF  69                 	db	105
  3768  00A0E0  64                 	db	100
  3769  00A0E1  65                 	db	101
  3770  00A0E2  20                 	db	32
  3771  00A0E3  20                 	db	32
  3772  00A0E4  20                 	db	32
  3773  00A0E5  20                 	db	32
  3774  00A0E6  20                 	db	32
  3775  00A0E7  41                 	db	65
  3776  00A0E8  72                 	db	114
  3777  00A0E9  63                 	db	99
  3778  00A0EA  20                 	db	32
  3779  00A0EB  20                 	db	32
  3780  00A0EC  20                 	db	32
  3781  00A0ED  20                 	db	32
  3782  00A0EE  20                 	db	32
  3783  00A0EF  20                 	db	32
  3784  00A0F0  4D                 	db	77
  3785  00A0F1  61                 	db	97
  3786  00A0F2  6E                 	db	110
  3787  00A0F3  75                 	db	117
  3788  00A0F4  61                 	db	97
  3789  00A0F5  6C                 	db	108
  3790  00A0F6  20                 	db	32
  3791  00A0F7  20                 	db	32
  3792  00A0F8  20                 	db	32
  3793  00A0F9  20                 	db	32
  3794  00A0FA  20                 	db	32
  3795  00A0FB  47                 	db	71
  3796  00A0FC  6F                 	db	111
  3797  00A0FD  32                 	db	50
  3798  00A0FE  5A                 	db	90
  3799  00A0FF  65                 	db	101
  3800  00A100  72                 	db	114
  3801  00A101  6F                 	db	111
  3802  00A102  20                 	db	32
  3803  00A103  20                 	db	32
  3804  00A104  20                 	db	32
  3805  00A105  20                 	db	32
  3806  00A106  20                 	db	32
  3807  00A107  20                 	db	32
  3808  00A108  20                 	db	32
  3809  00A109  20                 	db	32
  3810  00A10A  20                 	db	32
  3811  00A10B  20                 	db	32
  3812  00A10C  20                 	db	32
  3813  00A10D  20                 	db	32
  3814  00A10E                     __end_of_dc_main:
  3815                           	opt stack 0
  3816  00A10E                     _configDescriptor1:
  3817                           	opt stack 0
  3818  00A10E  09                 	db	9
  3819  00A10F  02                 	db	2
  3820  00A110  40                 	db	64
  3821  00A111  00                 	db	0
  3822  00A112  02                 	db	2
  3823  00A113  01                 	db	1
  3824  00A114  00                 	db	0
  3825  00A115  C0                 	db	192
  3826  00A116  32                 	db	50
  3827  00A117  09                 	db	9
  3828  00A118  04                 	db	4
  3829  00A119  00                 	db	0
  3830  00A11A  00                 	db	0
  3831  00A11B  02                 	db	2
  3832  00A11C  03                 	db	3
  3833  00A11D  00                 	db	0
  3834  00A11E  00                 	db	0
  3835  00A11F  00                 	db	0
  3836  00A120  09                 	db	9
  3837  00A121  21                 	db	33
  3838  00A122  11                 	db	17
  3839  00A123  01                 	db	1
  3840  00A124  00                 	db	0
  3841  00A125  01                 	db	1
  3842  00A126  22                 	db	34
  3843  00A127  1D                 	db	29
  3844  00A128  00                 	db	0
  3845  00A129  07                 	db	7
  3846  00A12A  05                 	db	5
  3847  00A12B  81                 	db	129
  3848  00A12C  03                 	db	3
  3849  00A12D  40                 	db	64
  3850  00A12E  00                 	db	0
  3851  00A12F  01                 	db	1
  3852  00A130  07                 	db	7
  3853  00A131  05                 	db	5
  3854  00A132  01                 	db	1
  3855  00A133  03                 	db	3
  3856  00A134  40                 	db	64
  3857  00A135  00                 	db	0
  3858  00A136  01                 	db	1
  3859  00A137  09                 	db	9
  3860  00A138  04                 	db	4
  3861  00A139  01                 	db	1
  3862  00A13A  00                 	db	0
  3863  00A13B  02                 	db	2
  3864  00A13C  08                 	db	8
  3865  00A13D  06                 	db	6
  3866  00A13E  50                 	db	80
  3867  00A13F  00                 	db	0
  3868  00A140  07                 	db	7
  3869  00A141  05                 	db	5
  3870  00A142  82                 	db	130
  3871  00A143  02                 	db	2
  3872  00A144  40                 	db	64
  3873  00A145  00                 	db	0
  3874  00A146  01                 	db	1
  3875  00A147  07                 	db	7
  3876  00A148  05                 	db	5
  3877  00A149  02                 	db	2
  3878  00A14A  02                 	db	2
  3879  00A14B  40                 	db	64
  3880  00A14C  00                 	db	0
  3881  00A14D  01                 	db	1
  3882  00A14E                     __end_of_configDescriptor1:
  3883                           	opt stack 0
  3884  00A14E                     _sd001:
  3885                           	opt stack 0
  3886  00A14E  34                 	db	52
  3887  00A14F  03                 	db	3
  3888  00A150  0053               	dw	83
  3889  00A152  006F               	dw	111
  3890  00A154  006C               	dw	108
  3891  00A156  0064               	dw	100
  3892  00A158  0065               	dw	101
  3893  00A15A  0072               	dw	114
  3894  00A15C  006E               	dw	110
  3895  00A15E  0065               	dw	101
  3896  00A160  0072               	dw	114
  3897  00A162  0064               	dw	100
  3898  00A164  002E               	dw	46
  3899  00A166  0063               	dw	99
  3900  00A168  006F               	dw	111
  3901  00A16A  006D               	dw	109
  3902  00A16C  0020               	dw	32
  3903  00A16E  0020               	dw	32
  3904  00A170  0020               	dw	32
  3905  00A172  0020               	dw	32
  3906  00A174  0020               	dw	32
  3907  00A176  0020               	dw	32
  3908  00A178  0020               	dw	32
  3909  00A17A  0020               	dw	32
  3910  00A17C  0020               	dw	32
  3911  00A17E  0020               	dw	32
  3912  00A180  0020               	dw	32
  3913  00A182                     __end_of_sd001:
  3914                           	opt stack 0
  3915  00A182                     _sd002:
  3916                           	opt stack 0
  3917  00A182  2E                 	db	46
  3918  00A183  03                 	db	3
  3919  00A184  0053               	dw	83
  3920  00A186  0074               	dw	116
  3921  00A188  0065               	dw	101
  3922  00A18A  0070               	dw	112
  3923  00A18C  0070               	dw	112
  3924  00A18E  0065               	dw	101
  3925  00A190  0072               	dw	114
  3926  00A192  004D               	dw	77
  3927  00A194  006F               	dw	111
  3928  00A196  0074               	dw	116
  3929  00A198  006F               	dw	111
  3930  00A19A  0072               	dw	114
  3931  00A19C  0043               	dw	67
  3932  00A19E  006F               	dw	111
  3933  00A1A0  006E               	dw	110
  3934  00A1A2  0074               	dw	116
  3935  00A1A4  0072               	dw	114
  3936  00A1A6  006F               	dw	111
  3937  00A1A8  006C               	dw	108
  3938  00A1AA  006C               	dw	108
  3939  00A1AC  0065               	dw	101
  3940  00A1AE  0072               	dw	114
  3941  00A1B0                     __end_of_sd002:
  3942                           	opt stack 0
  3943  00A1B0                     _inq_resp:
  3944                           	opt stack 0
  3945  00A1B0  00                 	db	0
  3946  00A1B1  80                 	db	128
  3947  00A1B2  04                 	db	4
  3948  00A1B3  02                 	db	2
  3949  00A1B4  20                 	db	32
  3950  00A1B5  00                 	db	0
  3951  00A1B6  00                 	db	0
  3952  00A1B7  00                 	db	0
  3953  00A1B8  4D                 	db	77
  3954  00A1B9  69                 	db	105
  3955  00A1BA  63                 	db	99
  3956  00A1BB  72                 	db	114
  3957  00A1BC  6F                 	db	111
  3958  00A1BD  63                 	db	99
  3959  00A1BE  68                 	db	104
  3960  00A1BF  70                 	db	112
  3961  00A1C0  4D                 	db	77
  3962  00A1C1  61                 	db	97
  3963  00A1C2  73                 	db	115
  3964  00A1C3  73                 	db	115
  3965  00A1C4  20                 	db	32
  3966  00A1C5  53                 	db	83
  3967  00A1C6  74                 	db	116
  3968  00A1C7  6F                 	db	111
  3969  00A1C8  72                 	db	114
  3970  00A1C9  61                 	db	97
  3971  00A1CA  67                 	db	103
  3972  00A1CB  65                 	db	101
  3973  00A1CC  20                 	db	32
  3974  00A1CD  20                 	db	32
  3975  00A1CE  20                 	db	32
  3976  00A1CF  20                 	db	32
  3977  00A1D0  30                 	db	48
  3978  00A1D1  30                 	db	48
  3979  00A1D2  30                 	db	48
  3980  00A1D3  31                 	db	49
  3981  00A1D4                     __end_of_inq_resp:
  3982                           	opt stack 0
  3983  00A1D4                     _hid_rpt01:
  3984                           	opt stack 0
  3985  00A1D4  06                 	db	6
  3986  00A1D5  00                 	db	0
  3987  00A1D6  FF                 	db	255
  3988  00A1D7  09                 	db	9
  3989  00A1D8  01                 	db	1
  3990  00A1D9  A1                 	db	161
  3991  00A1DA  01                 	db	1
  3992  00A1DB  19                 	db	25
  3993  00A1DC  01                 	db	1
  3994  00A1DD  29                 	db	41
  3995  00A1DE  40                 	db	64
  3996  00A1DF  15                 	db	21
  3997  00A1E0  00                 	db	0
  3998  00A1E1  26                 	db	38
  3999  00A1E2  FF                 	db	255
  4000  00A1E3  00                 	db	0
  4001  00A1E4  75                 	db	117
  4002  00A1E5  08                 	db	8
  4003  00A1E6  95                 	db	149
  4004  00A1E7  40                 	db	64
  4005  00A1E8  81                 	db	129
  4006  00A1E9  00                 	db	0
  4007  00A1EA  19                 	db	25
  4008  00A1EB  01                 	db	1
  4009  00A1EC  29                 	db	41
  4010  00A1ED  40                 	db	64
  4011  00A1EE  91                 	db	145
  4012  00A1EF  00                 	db	0
  4013  00A1F0  C0                 	db	192
  4014  00A1F1                     __end_of_hid_rpt01:
  4015                           	opt stack 0
  4016  00A1F1                     _sd003:
  4017                           	opt stack 0
  4018  00A1F1  1A                 	db	26
  4019  00A1F2  03                 	db	3
  4020  00A1F3  0031               	dw	49
  4021  00A1F5  0032               	dw	50
  4022  00A1F7  0033               	dw	51
  4023  00A1F9  0034               	dw	52
  4024  00A1FB  0035               	dw	53
  4025  00A1FD  0036               	dw	54
  4026  00A1FF  0037               	dw	55
  4027  00A201  0038               	dw	56
  4028  00A203  0039               	dw	57
  4029  00A205  0030               	dw	48
  4030  00A207  0039               	dw	57
  4031  00A209  0039               	dw	57
  4032  00A20B                     __end_of_sd003:
  4033                           	opt stack 0
  4034  00A20B                     _overshoot_cost_in_steps_string:
  4035                           	opt stack 0
  4036  00A20B  4F                 	db	79
  4037  00A20C  56                 	db	86
  4038  00A20D  45                 	db	69
  4039  00A20E  52                 	db	82
  4040  00A20F  53                 	db	83
  4041  00A210  48                 	db	72
  4042  00A211  4F                 	db	79
  4043  00A212  4F                 	db	79
  4044  00A213  54                 	db	84
  4045  00A214  5F                 	db	95
  4046  00A215  43                 	db	67
  4047  00A216  4F                 	db	79
  4048  00A217  53                 	db	83
  4049  00A218  54                 	db	84
  4050  00A219  5F                 	db	95
  4051  00A21A  49                 	db	73
  4052  00A21B  4E                 	db	78
  4053  00A21C  5F                 	db	95
  4054  00A21D  53                 	db	83
  4055  00A21E  54                 	db	84
  4056  00A21F  45                 	db	69
  4057  00A220  50                 	db	80
  4058  00A221  53                 	db	83
  4059  00A222  00                 	db	0
  4060  00A223                     __end_of_overshoot_cost_in_steps_string:
  4061                           	opt stack 0
  4062  00A223                     _position_display_180_string:
  4063                           	opt stack 0
  4064  00A223  50                 	db	80
  4065  00A224  4F                 	db	79
  4066  00A225  53                 	db	83
  4067  00A226  49                 	db	73
  4068  00A227  54                 	db	84
  4069  00A228  49                 	db	73
  4070  00A229  4F                 	db	79
  4071  00A22A  4E                 	db	78
  4072  00A22B  5F                 	db	95
  4073  00A22C  44                 	db	68
  4074  00A22D  49                 	db	73
  4075  00A22E  53                 	db	83
  4076  00A22F  50                 	db	80
  4077  00A230  4C                 	db	76
  4078  00A231  41                 	db	65
  4079  00A232  59                 	db	89
  4080  00A233  5F                 	db	95
  4081  00A234  31                 	db	49
  4082  00A235  38                 	db	56
  4083  00A236  30                 	db	48
  4084  00A237  00                 	db	0
  4085  00A238                     __end_of_position_display_180_string:
  4086                           	opt stack 0
  4087  00A238                     _maximum_speed_manual_string:
  4088                           	opt stack 0
  4089  00A238  4D                 	db	77
  4090  00A239  41                 	db	65
  4091  00A23A  58                 	db	88
  4092  00A23B  49                 	db	73
  4093  00A23C  4D                 	db	77
  4094  00A23D  55                 	db	85
  4095  00A23E  4D                 	db	77
  4096  00A23F  5F                 	db	95
  4097  00A240  53                 	db	83
  4098  00A241  50                 	db	80
  4099  00A242  45                 	db	69
  4100  00A243  45                 	db	69
  4101  00A244  44                 	db	68
  4102  00A245  5F                 	db	95
  4103  00A246  4D                 	db	77
  4104  00A247  41                 	db	65
  4105  00A248  4E                 	db	78
  4106  00A249  55                 	db	85
  4107  00A24A  41                 	db	65
  4108  00A24B  4C                 	db	76
  4109  00A24C  00                 	db	0
  4110  00A24D                     __end_of_maximum_speed_manual_string:
  4111                           	opt stack 0
  4112  00A24D                     _initial_speed_manual_string:
  4113                           	opt stack 0
  4114  00A24D  49                 	db	73
  4115  00A24E  4E                 	db	78
  4116  00A24F  49                 	db	73
  4117  00A250  54                 	db	84
  4118  00A251  49                 	db	73
  4119  00A252  41                 	db	65
  4120  00A253  4C                 	db	76
  4121  00A254  5F                 	db	95
  4122  00A255  53                 	db	83
  4123  00A256  50                 	db	80
  4124  00A257  45                 	db	69
  4125  00A258  45                 	db	69
  4126  00A259  44                 	db	68
  4127  00A25A  5F                 	db	95
  4128  00A25B  4D                 	db	77
  4129  00A25C  41                 	db	65
  4130  00A25D  4E                 	db	78
  4131  00A25E  55                 	db	85
  4132  00A25F  41                 	db	65
  4133  00A260  4C                 	db	76
  4134  00A261  00                 	db	0
  4135  00A262                     __end_of_initial_speed_manual_string:
  4136                           	opt stack 0
  4137  00A262                     _full_circle_in_steps_string:
  4138                           	opt stack 0
  4139  00A262  46                 	db	70
  4140  00A263  55                 	db	85
  4141  00A264  4C                 	db	76
  4142  00A265  4C                 	db	76
  4143  00A266  5F                 	db	95
  4144  00A267  43                 	db	67
  4145  00A268  49                 	db	73
  4146  00A269  52                 	db	82
  4147  00A26A  43                 	db	67
  4148  00A26B  4C                 	db	76
  4149  00A26C  45                 	db	69
  4150  00A26D  5F                 	db	95
  4151  00A26E  49                 	db	73
  4152  00A26F  4E                 	db	78
  4153  00A270  5F                 	db	95
  4154  00A271  53                 	db	83
  4155  00A272  54                 	db	84
  4156  00A273  45                 	db	69
  4157  00A274  50                 	db	80
  4158  00A275  53                 	db	83
  4159  00A276  00                 	db	0
  4160  00A277                     __end_of_full_circle_in_steps_string:
  4161                           	opt stack 0
  4162  00A277                     _overshoot_in_steps_string:
  4163                           	opt stack 0
  4164  00A277  4F                 	db	79
  4165  00A278  56                 	db	86
  4166  00A279  45                 	db	69
  4167  00A27A  52                 	db	82
  4168  00A27B  53                 	db	83
  4169  00A27C  48                 	db	72
  4170  00A27D  4F                 	db	79
  4171  00A27E  4F                 	db	79
  4172  00A27F  54                 	db	84
  4173  00A280  5F                 	db	95
  4174  00A281  49                 	db	73
  4175  00A282  4E                 	db	78
  4176  00A283  5F                 	db	95
  4177  00A284  53                 	db	83
  4178  00A285  54                 	db	84
  4179  00A286  45                 	db	69
  4180  00A287  50                 	db	80
  4181  00A288  53                 	db	83
  4182  00A289  00                 	db	0
  4183  00A28A                     __end_of_overshoot_in_steps_string:
  4184                           	opt stack 0
  4185  00A28A                     _maximum_speed_arc_string:
  4186                           	opt stack 0
  4187  00A28A  4D                 	db	77
  4188  00A28B  41                 	db	65
  4189  00A28C  58                 	db	88
  4190  00A28D  49                 	db	73
  4191  00A28E  4D                 	db	77
  4192  00A28F  55                 	db	85
  4193  00A290  4D                 	db	77
  4194  00A291  5F                 	db	95
  4195  00A292  53                 	db	83
  4196  00A293  50                 	db	80
  4197  00A294  45                 	db	69
  4198  00A295  45                 	db	69
  4199  00A296  44                 	db	68
  4200  00A297  5F                 	db	95
  4201  00A298  41                 	db	65
  4202  00A299  52                 	db	82
  4203  00A29A  43                 	db	67
  4204  00A29B  00                 	db	0
  4205  00A29C                     __end_of_maximum_speed_arc_string:
  4206                           	opt stack 0
  4207  00A29C                     _initial_speed_arc_string:
  4208                           	opt stack 0
  4209  00A29C  49                 	db	73
  4210  00A29D  4E                 	db	78
  4211  00A29E  49                 	db	73
  4212  00A29F  54                 	db	84
  4213  00A2A0  49                 	db	73
  4214  00A2A1  41                 	db	65
  4215  00A2A2  4C                 	db	76
  4216  00A2A3  5F                 	db	95
  4217  00A2A4  53                 	db	83
  4218  00A2A5  50                 	db	80
  4219  00A2A6  45                 	db	69
  4220  00A2A7  45                 	db	69
  4221  00A2A8  44                 	db	68
  4222  00A2A9  5F                 	db	95
  4223  00A2AA  41                 	db	65
  4224  00A2AB  52                 	db	82
  4225  00A2AC  43                 	db	67
  4226  00A2AD  00                 	db	0
  4227  00A2AE                     __end_of_initial_speed_arc_string:
  4228                           	opt stack 0
  4229  00A2AE                     _inverse_direction_string:
  4230                           	opt stack 0
  4231  00A2AE  49                 	db	73
  4232  00A2AF  4E                 	db	78
  4233  00A2B0  56                 	db	86
  4234  00A2B1  45                 	db	69
  4235  00A2B2  52                 	db	82
  4236  00A2B3  53                 	db	83
  4237  00A2B4  45                 	db	69
  4238  00A2B5  5F                 	db	95
  4239  00A2B6  44                 	db	68
  4240  00A2B7  49                 	db	73
  4241  00A2B8  52                 	db	82
  4242  00A2B9  45                 	db	69
  4243  00A2BA  43                 	db	67
  4244  00A2BB  54                 	db	84
  4245  00A2BC  49                 	db	73
  4246  00A2BD  4F                 	db	79
  4247  00A2BE  4E                 	db	78
  4248  00A2BF  00                 	db	0
  4249  00A2C0                     __end_of_inverse_direction_string:
  4250                           	opt stack 0
  4251  00A2C0                     _device_dsc:
  4252                           	opt stack 0
  4253  00A2C0  12                 	db	18
  4254  00A2C1  01                 	db	1
  4255  00A2C2  0200               	dw	512
  4256  00A2C4  00                 	db	0
  4257  00A2C5  00                 	db	0
  4258  00A2C6  00                 	db	0
  4259  00A2C7  08                 	db	8
  4260  00A2C8  04D8               	dw	1240
  4261  00A2CA  EDCF               	dw	60879
  4262  00A2CC  0100               	dw	256
  4263  00A2CE  01                 	db	1
  4264  00A2CF  02                 	db	2
  4265  00A2D0  00                 	db	0
  4266  00A2D1  01                 	db	1
  4267  00A2D2                     __end_of_device_dsc:
  4268                           	opt stack 0
  4269  00A2D2                     _menu_structure_string:
  4270                           	opt stack 0
  4271  00A2D2  4D                 	db	77
  4272  00A2D3  45                 	db	69
  4273  00A2D4  4E                 	db	78
  4274  00A2D5  55                 	db	85
  4275  00A2D6  5F                 	db	95
  4276  00A2D7  53                 	db	83
  4277  00A2D8  54                 	db	84
  4278  00A2D9  52                 	db	82
  4279  00A2DA  55                 	db	85
  4280  00A2DB  43                 	db	67
  4281  00A2DC  54                 	db	84
  4282  00A2DD  55                 	db	85
  4283  00A2DE  52                 	db	82
  4284  00A2DF  45                 	db	69
  4285  00A2E0  00                 	db	0
  4286  00A2E1                     __end_of_menu_structure_string:
  4287                           	opt stack 0
  4288  00A2E1                     _use_ccw_limit_string:
  4289                           	opt stack 0
  4290  00A2E1  55                 	db	85
  4291  00A2E2  53                 	db	83
  4292  00A2E3  45                 	db	69
  4293  00A2E4  5F                 	db	95
  4294  00A2E5  43                 	db	67
  4295  00A2E6  43                 	db	67
  4296  00A2E7  57                 	db	87
  4297  00A2E8  5F                 	db	95
  4298  00A2E9  4C                 	db	76
  4299  00A2EA  49                 	db	73
  4300  00A2EB  4D                 	db	77
  4301  00A2EC  49                 	db	73
  4302  00A2ED  54                 	db	84
  4303  00A2EE  00                 	db	0
  4304  00A2EF                     __end_of_use_ccw_limit_string:
  4305                           	opt stack 0
  4306  00A2EF                     _beep_duration_string:
  4307                           	opt stack 0
  4308  00A2EF  42                 	db	66
  4309  00A2F0  45                 	db	69
  4310  00A2F1  45                 	db	69
  4311  00A2F2  50                 	db	80
  4312  00A2F3  5F                 	db	95
  4313  00A2F4  44                 	db	68
  4314  00A2F5  55                 	db	85
  4315  00A2F6  52                 	db	82
  4316  00A2F7  41                 	db	65
  4317  00A2F8  54                 	db	84
  4318  00A2F9  49                 	db	73
  4319  00A2FA  4F                 	db	79
  4320  00A2FB  4E                 	db	78
  4321  00A2FC  00                 	db	0
  4322  00A2FD                     __end_of_beep_duration_string:
  4323                           	opt stack 0
  4324  00A2FD                     _maximum_speed_string:
  4325                           	opt stack 0
  4326  00A2FD  4D                 	db	77
  4327  00A2FE  41                 	db	65
  4328  00A2FF  58                 	db	88
  4329  00A300  49                 	db	73
  4330  00A301  4D                 	db	77
  4331  00A302  55                 	db	85
  4332  00A303  4D                 	db	77
  4333  00A304  5F                 	db	95
  4334  00A305  53                 	db	83
  4335  00A306  50                 	db	80
  4336  00A307  45                 	db	69
  4337  00A308  45                 	db	69
  4338  00A309  44                 	db	68
  4339  00A30A  00                 	db	0
  4340  00A30B                     __end_of_maximum_speed_string:
  4341                           	opt stack 0
  4342  00A30B                     _minimum_speed_string:
  4343                           	opt stack 0
  4344  00A30B  4D                 	db	77
  4345  00A30C  49                 	db	73
  4346  00A30D  4E                 	db	78
  4347  00A30E  49                 	db	73
  4348  00A30F  4D                 	db	77
  4349  00A310  55                 	db	85
  4350  00A311  4D                 	db	77
  4351  00A312  5F                 	db	95
  4352  00A313  53                 	db	83
  4353  00A314  50                 	db	80
  4354  00A315  45                 	db	69
  4355  00A316  45                 	db	69
  4356  00A317  44                 	db	68
  4357  00A318  00                 	db	0
  4358  00A319                     __end_of_minimum_speed_string:
  4359                           	opt stack 0
  4360  00A319                     _use_cw_limit_string:
  4361                           	opt stack 0
  4362  00A319  55                 	db	85
  4363  00A31A  53                 	db	83
  4364  00A31B  45                 	db	69
  4365  00A31C  5F                 	db	95
  4366  00A31D  43                 	db	67
  4367  00A31E  57                 	db	87
  4368  00A31F  5F                 	db	95
  4369  00A320  4C                 	db	76
  4370  00A321  49                 	db	73
  4371  00A322  4D                 	db	77
  4372  00A323  49                 	db	73
  4373  00A324  54                 	db	84
  4374  00A325  00                 	db	0
  4375  00A326                     __end_of_use_cw_limit_string:
  4376                           	opt stack 0
  4377  00A326                     _ccw_limit_string:
  4378                           	opt stack 0
  4379  00A326  43                 	db	67
  4380  00A327  43                 	db	67
  4381  00A328  57                 	db	87
  4382  00A329  5F                 	db	95
  4383  00A32A  4C                 	db	76
  4384  00A32B  49                 	db	73
  4385  00A32C  4D                 	db	77
  4386  00A32D  49                 	db	73
  4387  00A32E  54                 	db	84
  4388  00A32F  00                 	db	0
  4389  00A330                     __end_of_ccw_limit_string:
  4390                           	opt stack 0
  4391  00A330                     _cw_limit_string:
  4392                           	opt stack 0
  4393  00A330  43                 	db	67
  4394  00A331  57                 	db	87
  4395  00A332  5F                 	db	95
  4396  00A333  4C                 	db	76
  4397  00A334  49                 	db	73
  4398  00A335  4D                 	db	77
  4399  00A336  49                 	db	73
  4400  00A337  54                 	db	84
  4401  00A338  00                 	db	0
  4402  00A339                     __end_of_cw_limit_string:
  4403                           	opt stack 0
  4404  00A339                     _bit_pattern_ae:
  4405                           	opt stack 0
  4406  00A339  0A                 	db	10
  4407  00A33A  00                 	db	0
  4408  00A33B  0E                 	db	14
  4409  00A33C  01                 	db	1
  4410  00A33D  0F                 	db	15
  4411  00A33E  11                 	db	17
  4412  00A33F  0F                 	db	15
  4413  00A340  00                 	db	0
  4414  00A341                     __end_of_bit_pattern_ae:
  4415                           	opt stack 0
  4416  00A341                     _bit_pattern_degree:
  4417                           	opt stack 0
  4418  00A341  18                 	db	24
  4419  00A342  18                 	db	24
  4420  00A343  00                 	db	0
  4421  00A344  00                 	db	0
  4422  00A345  00                 	db	0
  4423  00A346  00                 	db	0
  4424  00A347  00                 	db	0
  4425  00A348  00                 	db	0
  4426  00A349                     __end_of_bit_pattern_degree:
  4427                           	opt stack 0
  4428  00A349                     _bit_pattern_verticalbar:
  4429                           	opt stack 0
  4430  00A349  04                 	db	4
  4431  00A34A  04                 	db	4
  4432  00A34B  04                 	db	4
  4433  00A34C  04                 	db	4
  4434  00A34D  04                 	db	4
  4435  00A34E  04                 	db	4
  4436  00A34F  04                 	db	4
  4437  00A350  04                 	db	4
  4438  00A351                     __end_of_bit_pattern_verticalbar:
  4439                           	opt stack 0
  4440  00A351                     _flash_command_pagesize_528:
  4441                           	opt stack 0
  4442  00A351  3D                 	db	61
  4443  00A352  2A                 	db	42
  4444  00A353  80                 	db	128
  4445  00A354  A7                 	db	167
  4446  00A355                     __end_of_flash_command_pagesize_528:
  4447                           	opt stack 0
  4448  00A355                     _flash_command_pagesize_512:
  4449                           	opt stack 0
  4450  00A355  3D                 	db	61
  4451  00A356  2A                 	db	42
  4452  00A357  80                 	db	128
  4453  00A358  A6                 	db	166
  4454  00A359                     __end_of_flash_command_pagesize_512:
  4455                           	opt stack 0
  4456  00A359                     _sd000:
  4457                           	opt stack 0
  4458  00A359  04                 	db	4
  4459  00A35A  03                 	db	3
  4460  00A35B  0409               	dw	1033
  4461  00A35D                     __end_of_sd000:
  4462                           	opt stack 0
  4463  0000                     _RPINR22	set	3837
  4464  0000                     _RPOR23	set	3799
  4465  0000                     _RPOR21	set	3797
  4466  0000                     _RPINR21	set	3836
  4467  0000                     _RPOR4	set	3780
  4468  0000                     _PPSCONbits	set	3775
  4469  0000                     _CCPTMRS0bits	set	3922
  4470  0000                     _ANCON0bits	set	3912
  4471  0000                     _ANCON1bits	set	3913
  4472  0000                     _UEP0bits	set	3878
  4473  0000                     _UIEbits	set	3894
  4474  0000                     _UADDR	set	3896
  4475  0000                     _UIE	set	3894
  4476  0000                     _UEIE	set	3895
  4477  0000                     _UCFG	set	3897
  4478  0000                     _UEP1	set	3879
  4479  0000                     _UEP0	set	3878
  4480  0000                     _ADRESL	set	4035
  4481  0000                     _ADRESH	set	4036
  4482  0000                     _ADCON1bits	set	4033
  4483  0000                     _ADCON0bits	set	4034
  4484  0000                     _PORTA	set	3968
  4485  0000                     _PORTE	set	3972
  4486  0000                     _TMR2	set	4044
  4487  0000                     _PIE1bits	set	3997
  4488  0000                     _CCPR1L	set	4027
  4489  0000                     _PR2	set	4043
  4490  0000                     _T2CONbits	set	4042
  4491  0000                     _CCP1CONbits	set	4026
  4492  0000                     _RXADDRL	set	3945
  4493  0000                     _RXADDRH	set	3944
  4494  0000                     _DMABCL	set	3943
  4495  0000                     _DMABCH	set	3942
  4496  0000                     _TXADDRL	set	3947
  4497  0000                     _TXADDRH	set	3946
  4498  0000                     _DMACON2bits	set	3974
  4499  0000                     _DMACON1bits	set	3976
  4500  0000                     _SSP2CON1bits	set	3954
  4501  0000                     _SSP2STATbits	set	3955
  4502  0000                     _PORTDbits	set	3971
  4503  0000                     _PORTEbits	set	3972
  4504  0000                     _SSP1BUF	set	4041
  4505  0000                     _SSP1CON2bits	set	4037
  4506  0000                     _SSP1CON1bits	set	4038
  4507  0000                     _SSP1ADD	set	4040
  4508  0000                     _SSP1STATbits	set	4039
  4509  0000                     _PORTAbits	set	3968
  4510  0000                     _T0CONbits	set	4053
  4511  0000                     _TRISEbits	set	3990
  4512  0000                     _EECON2	set	4007
  4513  0000                     _LATBbits	set	3978
  4514  0000                     _LATAbits	set	3977
  4515  0000                     _TRISAbits	set	3986
  4516  0000                     _LATCbits	set	3979
  4517  0000                     _TRISCbits	set	3988
  4518  0000                     _TRISBbits	set	3987
  4519  0000                     _LATDbits	set	3980
  4520  0000                     _TRISDbits	set	3989
  4521  0000                     _TMR0L	set	4054
  4522  0000                     _TMR0H	set	4055
  4523  0000                     _PIR1bits	set	3998
  4524  0000                     _OSCCON	set	4051
  4525  0000                     _OSCTUNEbits	set	3995
  4526  0000                     _INTCONbits	set	4082
  4527  0000                     _IPR2bits	set	4002
  4528  0000                     _RCONbits	set	4048
  4529  0000                     _UCON	set	3941
  4530  0000                     _USTAT	set	3940
  4531  0000                     _PIR2bits	set	4001
  4532  0000                     _UIRbits	set	3938
  4533  0000                     _UCONbits	set	3941
  4534  0000                     _UIR	set	3938
  4535  0000                     _UEIR	set	3939
  4536  0000                     _PIE2bits	set	4000
  4537  00A35D                     
  4538                           ; BSR set to: 1
  4539  00A35D  68                 	db	104	;'h'
  4540  00A35E  65                 	db	101	;'e'
  4541  00A35F  6C                 	db	108	;'l'
  4542  00A360  6C                 	db	108	;'l'
  4543  00A361  6F                 	db	111	;'o'
  4544  00A362  20                 	db	32
  4545  00A363  77                 	db	119	;'w'
  4546  00A364  6F                 	db	111	;'o'
  4547  00A365  72                 	db	114	;'r'
  4548  00A366  6C                 	db	108	;'l'
  4549  00A367  64                 	db	100	;'d'
  4550  00A368  21                 	db	33
  4551  00A369  00                 	db	0
  4552  00A36A                     
  4553                           ; BSR set to: 1
  4554  00A36A  53                 	db	83	;'S'
  4555  00A36B  74                 	db	116	;'t'
  4556  00A36C  65                 	db	101	;'e'
  4557  00A36D  70                 	db	112	;'p'
  4558  00A36E  70                 	db	112	;'p'
  4559  00A36F  65                 	db	101	;'e'
  4560  00A370  72                 	db	114	;'r'
  4561  00A371  43                 	db	67	;'C'
  4562  00A372  74                 	db	116	;'t'
  4563  00A373  72                 	db	114	;'r'
  4564  00A374  6C                 	db	108	;'l'
  4565  00A375  00                 	db	0
  4566  00A376                     
  4567                           ; BSR set to: 1
  4568  00A376  46                 	db	70	;'F'
  4569  00A377  49                 	db	73	;'I'
  4570  00A378  4C                 	db	76	;'L'
  4571  00A379  45                 	db	69	;'E'
  4572  00A37A  20                 	db	32
  4573  00A37B  20                 	db	32
  4574  00A37C  20                 	db	32
  4575  00A37D  20                 	db	32
  4576  00A37E  00                 	db	0
  4577  00A37F                     STR_7:
  4578                           
  4579                           ; BSR set to: 1
  4580  00A37F  4D                 	db	77	;'M'
  4581  00A380  53                 	db	83	;'S'
  4582  00A381  44                 	db	68	;'D'
  4583  00A382  4F                 	db	79	;'O'
  4584  00A383  53                 	db	83	;'S'
  4585  00A384  35                 	db	53	;'5'
  4586  00A385  2E                 	db	46
  4587  00A386  30                 	db	48	;'0'
  4588  00A387  00                 	db	0
  4589  00A388                     STR_1:
  4590                           
  4591                           ; BSR set to: 1
  4592  00A388  20                 	db	32
  4593  00A389  20                 	db	32
  4594  00A38A  20                 	db	32
  4595  00A38B  20                 	db	32
  4596  00A38C  20                 	db	32
  4597  00A38D  20                 	db	32
  4598  00A38E  20                 	db	32
  4599  00A38F  20                 	db	32
  4600  00A390  00                 	db	0
  4601  00A391                     STR_2:
  4602                           
  4603                           ; BSR set to: 1
  4604  00A391  43                 	db	67	;'C'
  4605  00A392  61                 	db	97	;'a'
  4606  00A393  6E                 	db	110	;'n'
  4607  00A394  63                 	db	99	;'c'
  4608  00A395  65                 	db	101	;'e'
  4609  00A396  6C                 	db	108	;'l'
  4610  00A397  00                 	db	0
  4611  00A398                     STR_6:
  4612                           
  4613                           ; BSR set to: 1
  4614  00A398  53                 	db	83	;'S'
  4615  00A399  74                 	db	116	;'t'
  4616  00A39A  6F                 	db	111	;'o'
  4617  00A39B  70                 	db	112	;'p'
  4618  00A39C  20                 	db	32
  4619  00A39D  00                 	db	0
  4620  00A39E                     
  4621                           ; BSR set to: 1
  4622  00A39E  54                 	db	84	;'T'
  4623  00A39F  58                 	db	88	;'X'
  4624  00A3A0  54                 	db	84	;'T'
  4625  00A3A1  00                 	db	0
  4626  0000                     
  4627                           ; #config settings
  4628  00A3A2  00                 	db	0	; dummy byte at the end
  4629  0000                     
  4630                           	psect	cinit
  4631  0140BE                     __pcinit:
  4632                           	opt stack 0
  4633  0140BE                     start_initialization:
  4634                           	opt stack 0
  4635  0140BE                     __initialization:
  4636                           	opt stack 0
  4637                           
  4638                           ; Initialize objects allocated to BANK4 (80 bytes)
  4639                           ; load TBLPTR registers with __pidataBANK4
  4640  0140BE  0E08               	movlw	low __pidataBANK4
  4641  0140C0  6EF6               	movwf	tblptrl,c
  4642  0140C2  0E56               	movlw	high __pidataBANK4
  4643  0140C4  6EF7               	movwf	tblptrh,c
  4644  0140C6  0E01               	movlw	low (__pidataBANK4 shr (0+16))
  4645  0140C8  6EF8               	movwf	tblptru,c
  4646  0140CA  EE04  F000         	lfsr	0,__pdataBANK4
  4647  0140CE  EE10 F050          	lfsr	1,80
  4648  0140D2                     copy_data0:
  4649  0140D2  0009               	tblrd		*+
  4650  0140D4  CFF5 FFEE          	movff	tablat,postinc0
  4651  0140D8  50E5               	movf	postdec1,w,c
  4652  0140DA  50E1               	movf	fsr1l,w,c
  4653  0140DC  E1FA               	bnz	copy_data0
  4654                           
  4655                           ; Initialize objects allocated to BANK2 (77 bytes)
  4656                           ; load TBLPTR registers with __pidataBANK2
  4657  0140DE  0EE8               	movlw	low __pidataBANK2
  4658  0140E0  6EF6               	movwf	tblptrl,c
  4659  0140E2  0E57               	movlw	high __pidataBANK2
  4660  0140E4  6EF7               	movwf	tblptrh,c
  4661  0140E6  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  4662  0140E8  6EF8               	movwf	tblptru,c
  4663  0140EA  EE02  F09E         	lfsr	0,__pdataBANK2
  4664  0140EE  EE10 F04D          	lfsr	1,77
  4665  0140F2                     copy_data1:
  4666  0140F2  0009               	tblrd		*+
  4667  0140F4  CFF5 FFEE          	movff	tablat,postinc0
  4668  0140F8  50E5               	movf	postdec1,w,c
  4669  0140FA  50E1               	movf	fsr1l,w,c
  4670  0140FC  E1FA               	bnz	copy_data1
  4671                           
  4672                           ; Clear objects allocated to BIGRAMll (1024 bytes)
  4673  0140FE  EE08  F000         	lfsr	0,__pbssBIGRAMll
  4674  014102  EE14 F000          	lfsr	1,1024
  4675  014106                     clear_0:
  4676  014106  6AEE               	clrf	postinc0,c
  4677  014108  50E5               	movf	postdec1,w,c
  4678  01410A  50E1               	movf	fsr1l,w,c
  4679  01410C  E1FC               	bnz	clear_0
  4680  01410E  50E2               	movf	fsr1h,w,c
  4681  014110  E1FA               	bnz	clear_0
  4682                           
  4683                           ; Clear objects allocated to BANK3 (192 bytes)
  4684  014112  EE03  F000         	lfsr	0,__pbssBANK3
  4685  014116  0EC0               	movlw	192
  4686  014118                     clear_1:
  4687  014118  6AEE               	clrf	postinc0,c
  4688  01411A  06E8               	decf	wreg,f,c
  4689  01411C  E1FD               	bnz	clear_1
  4690                           
  4691                           ; Clear objects allocated to BANK2 (158 bytes)
  4692  01411E  EE02  F000         	lfsr	0,__pbssBANK2
  4693  014122  0E9E               	movlw	158
  4694  014124                     clear_2:
  4695  014124  6AEE               	clrf	postinc0,c
  4696  014126  06E8               	decf	wreg,f,c
  4697  014128  E1FD               	bnz	clear_2
  4698                           
  4699                           ; Clear objects allocated to BANK1 (196 bytes)
  4700  01412A  EE01  F000         	lfsr	0,__pbssBANK1
  4701  01412E  0EC4               	movlw	196
  4702  014130                     clear_3:
  4703  014130  6AEE               	clrf	postinc0,c
  4704  014132  06E8               	decf	wreg,f,c
  4705  014134  E1FD               	bnz	clear_3
  4706                           
  4707                           ; Clear objects allocated to BANK0 (1 bytes)
  4708  014136  0100               	movlb	0
  4709  014138  6BFF               	clrf	__pbssBANK0& (0+255),b
  4710                           
  4711                           ; Clear objects allocated to COMRAM (8 bytes)
  4712  01413A  EE00  F057         	lfsr	0,__pbssCOMRAM
  4713  01413E  0E08               	movlw	8
  4714  014140                     clear_4:
  4715  014140  6AEE               	clrf	postinc0,c
  4716  014142  06E8               	decf	wreg,f,c
  4717  014144  E1FD               	bnz	clear_4
  4718  014146                     end_of_initialization:
  4719                           	opt stack 0
  4720  014146                     __end_of__initialization:
  4721                           	opt stack 0
  4722  014146  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4723  014148  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4724  01414A  0100               	movlb	0
  4725  01414C  EFEC  F09E         	goto	_main	;jump to C main() function
  4726                           tblptru	equ	0xFF8
  4727                           tblptrh	equ	0xFF7
  4728                           tblptrl	equ	0xFF6
  4729                           tablat	equ	0xFF5
  4730                           postinc0	equ	0xFEE
  4731                           wreg	equ	0xFE8
  4732                           postdec1	equ	0xFE5
  4733                           fsr1h	equ	0xFE2
  4734                           fsr1l	equ	0xFE1
  4735                           
  4736                           	psect	bssCOMRAM
  4737  000057                     __pbssCOMRAM:
  4738                           	opt stack 0
  4739  000057                     _motor_current_speed:
  4740                           	opt stack 0
  4741  000057                     	ds	2
  4742  000059                     _pBDTEntryEP0OutNext:
  4743                           	opt stack 0
  4744  000059                     	ds	2
  4745  00005B                     _pBDTEntryEP0OutCurrent:
  4746                           	opt stack 0
  4747  00005B                     	ds	2
  4748  00005D                     _USBDeviceState:
  4749                           	opt stack 0
  4750  00005D                     	ds	1
  4751  00005E                     _USTATcopy:
  4752                           	opt stack 0
  4753  00005E                     	ds	1
  4754                           tblptru	equ	0xFF8
  4755                           tblptrh	equ	0xFF7
  4756                           tblptrl	equ	0xFF6
  4757                           tablat	equ	0xFF5
  4758                           postinc0	equ	0xFEE
  4759                           wreg	equ	0xFE8
  4760                           postdec1	equ	0xFE5
  4761                           fsr1h	equ	0xFE2
  4762                           fsr1l	equ	0xFE1
  4763                           
  4764                           	psect	bssBANK0
  4765  0000FF                     __pbssBANK0:
  4766                           	opt stack 0
  4767  0000FF                     _controlTransferState:
  4768                           	opt stack 0
  4769  0000FF                     	ds	1
  4770                           tblptru	equ	0xFF8
  4771                           tblptrh	equ	0xFF7
  4772                           tblptrl	equ	0xFF6
  4773                           tablat	equ	0xFF5
  4774                           postinc0	equ	0xFEE
  4775                           wreg	equ	0xFE8
  4776                           postdec1	equ	0xFE5
  4777                           fsr1h	equ	0xFE2
  4778                           fsr1l	equ	0xFE1
  4779                           
  4780                           	psect	bssBANK1
  4781  000100                     __pbssBANK1:
  4782                           	opt stack 0
  4783  000100                     _outPipes:
  4784                           	opt stack 0
  4785  000100                     	ds	9
  4786  000109                     _inPipes:
  4787                           	opt stack 0
  4788  000109                     	ds	6
  4789  00010F                     _pBDTEntryIn:
  4790                           	opt stack 0
  4791  00010F                     	ds	6
  4792  000115                     _pBDTEntryOut:
  4793                           	opt stack 0
  4794  000115                     	ds	6
  4795  00011B                     _motor_final_stepcount:
  4796                           	opt stack 0
  4797  00011B                     	ds	4
  4798  00011F                     _motor_current_stepcount:
  4799                           	opt stack 0
  4800  00011F                     	ds	4
  4801  000123                     _LBA:
  4802                           	opt stack 0
  4803  000123                     	ds	4
  4804  000127                     _USB1msTickCount:
  4805                           	opt stack 0
  4806  000127                     	ds	4
  4807  00012B                     _config_internal:
  4808                           	opt stack 0
  4809  00012B                     	ds	3
  4810  00012E                     _ep_data_out:
  4811                           	opt stack 0
  4812  00012E                     	ds	3
  4813  000131                     _ep_data_in:
  4814                           	opt stack 0
  4815  000131                     	ds	3
  4816  000134                     _motor_maximum_speed:
  4817                           	opt stack 0
  4818  000134                     	ds	2
  4819  000136                     _USBInHandle:
  4820                           	opt stack 0
  4821  000136                     	ds	2
  4822  000138                     _USBOutHandle:
  4823                           	opt stack 0
  4824  000138                     	ds	2
  4825  00013A                     _TransferLength:
  4826                           	opt stack 0
  4827  00013A                     	ds	2
  4828  00013C                     _gblMediaPresent:
  4829                           	opt stack 0
  4830  00013C                     	ds	2
  4831  00013E                     _USBMSDInHandle:
  4832                           	opt stack 0
  4833  00013E                     	ds	2
  4834  000140                     _USBMSDOutHandle:
  4835                           	opt stack 0
  4836  000140                     	ds	2
  4837  000142                     _ptrNextData:
  4838                           	opt stack 0
  4839  000142                     	ds	2
  4840  000144                     _pDst:
  4841                           	opt stack 0
  4842  000144                     	ds	2
  4843  000146                     _enc2:
  4844                           	opt stack 0
  4845  000146                     	ds	1
  4846  000147                     _enc1:
  4847                           	opt stack 0
  4848  000147                     	ds	1
  4849  000148                     _motor_mode:
  4850                           	opt stack 0
  4851  000148                     	ds	1
  4852  000149                     _motor_direction:
  4853                           	opt stack 0
  4854  000149                     	ds	1
  4855  00014A                     _motor_move_type:
  4856                           	opt stack 0
  4857  00014A                     	ds	1
  4858  00014B                     _motor_cue_write_index:
  4859                           	opt stack 0
  4860  00014B                     	ds	1
  4861  00014C                     _motor_cue_read_index:
  4862                           	opt stack 0
  4863  00014C                     	ds	1
  4864  00014D                     _active_configuration:
  4865                           	opt stack 0
  4866  00014D                     	ds	1
  4867  00014E                     _power_state:
  4868                           	opt stack 0
  4869  00014E                     	ds	1
  4870  00014F                     _MSDCBWValid:
  4871                           	opt stack 0
  4872  00014F                     	ds	1
  4873  000150                     _MSDHostNoData:
  4874                           	opt stack 0
  4875  000150                     	ds	1
  4876  000151                     _SoftDetach:
  4877                           	opt stack 0
  4878  000151                     	ds	1
  4879  000152                     _gblCBWLength:
  4880                           	opt stack 0
  4881  000152                     	ds	1
  4882  000153                     _MSDRetryAttempt:
  4883                           	opt stack 0
  4884  000153                     	ds	1
  4885  000154                     _MSDWriteState:
  4886                           	opt stack 0
  4887  000154                     	ds	1
  4888  000155                     _MSDReadState:
  4889                           	opt stack 0
  4890  000155                     	ds	1
  4891  000156                     _MSDCommandState:
  4892                           	opt stack 0
  4893  000156                     	ds	1
  4894  000157                     _MSD_State:
  4895                           	opt stack 0
  4896  000157                     	ds	1
  4897  000158                     _USBTicksSinceSuspendEnd:
  4898                           	opt stack 0
  4899  000158                     	ds	1
  4900  000159                     _USBDeferOUTDataStagePackets:
  4901                           	opt stack 0
  4902  000159                     	ds	1
  4903  00015A                     _USBDeferINDataStagePackets:
  4904                           	opt stack 0
  4905  00015A                     	ds	1
  4906  00015B                     _USBStatusStageEnabledFlag2:
  4907                           	opt stack 0
  4908  00015B                     	ds	1
  4909  00015C                     _USBStatusStageEnabledFlag1:
  4910                           	opt stack 0
  4911  00015C                     	ds	1
  4912  00015D                     _USBDeferStatusStagePacket:
  4913                           	opt stack 0
  4914  00015D                     	ds	1
  4915  00015E                     _USBStatusStageTimeoutCounter:
  4916                           	opt stack 0
  4917  00015E                     	ds	1
  4918  00015F                     _BothEP0OutUOWNsSet:
  4919                           	opt stack 0
  4920  00015F                     	ds	1
  4921  000160                     _endpoint_number:
  4922                           	opt stack 0
  4923  000160                     	ds	1
  4924  000161                     _USBBusIsSuspended:
  4925                           	opt stack 0
  4926  000161                     	ds	1
  4927  000162                     _RemoteWakeup:
  4928                           	opt stack 0
  4929  000162                     	ds	1
  4930  000163                     _shortPacketStatus:
  4931                           	opt stack 0
  4932  000163                     	ds	1
  4933  000164                     _os:
  4934                           	opt stack 0
  4935  000164                     	ds	49
  4936  000195                     _config:
  4937                           	opt stack 0
  4938  000195                     	ds	42
  4939  0001BF                     _USBAlternateInterface:
  4940                           	opt stack 0
  4941  0001BF                     	ds	2
  4942  0001C1                     _active_protocol:
  4943                           	opt stack 0
  4944  0001C1                     	ds	1
  4945  0001C2                     _idle_rate:
  4946                           	opt stack 0
  4947  0001C2                     	ds	1
  4948  0001C3                     _USBActiveConfiguration:
  4949                           	opt stack 0
  4950  0001C3                     	ds	1
  4951                           tblptru	equ	0xFF8
  4952                           tblptrh	equ	0xFF7
  4953                           tblptrl	equ	0xFF6
  4954                           tablat	equ	0xFF5
  4955                           postinc0	equ	0xFEE
  4956                           wreg	equ	0xFE8
  4957                           postdec1	equ	0xFE5
  4958                           fsr1h	equ	0xFE2
  4959                           fsr1l	equ	0xFE1
  4960                           
  4961                           	psect	bssBANK2
  4962  000200                     __pbssBANK2:
  4963                           	opt stack 0
  4964  000200                     _gblCBW:
  4965                           	opt stack 0
  4966  000200                     	ds	31
  4967  00021F                     _gblSenseData:
  4968                           	opt stack 0
  4969  00021F                     	ds	18
  4970  000231                     _params:
  4971                           	opt stack 0
  4972  000231                     	ds	7
  4973  000238                     _motor_next_speed_check:
  4974                           	opt stack 0
  4975  000238                     	ds	4
  4976  00023C                     _gblBLKLen:
  4977                           	opt stack 0
  4978  00023C                     	ds	4
  4979  000240                     _gblNumBLKS:
  4980                           	opt stack 0
  4981  000240                     	ds	4
  4982  000244                     _config_external:
  4983                           	opt stack 0
  4984  000244                     	ds	3
  4985  000247                     _MSBBufferIndex:
  4986                           	opt stack 0
  4987  000247                     	ds	2
  4988  000249                     _display_content:
  4989                           	opt stack 0
  4990  000249                     	ds	80
  4991  000299                     _mediaInformation:
  4992                           	opt stack 0
  4993  000299                     	ds	5
  4994                           tblptru	equ	0xFF8
  4995                           tblptrh	equ	0xFF7
  4996                           tblptrl	equ	0xFF6
  4997                           tablat	equ	0xFF5
  4998                           postinc0	equ	0xFEE
  4999                           wreg	equ	0xFE8
  5000                           postdec1	equ	0xFE5
  5001                           fsr1h	equ	0xFE2
  5002                           fsr1l	equ	0xFE1
  5003                           
  5004                           	psect	dataBANK2
  5005  00029E                     __pdataBANK2:
  5006                           	opt stack 0
  5007  00029E                     _LUN:
  5008                           	opt stack 0
  5009  00029E                     	ds	29
  5010  0002BB                     i2c_display_init@F7104:
  5011                           	opt stack 0
  5012  0002BB                     	ds	9
  5013  0002C4                     __i2c_display_send_init_sequence@F7101:
  5014                           	opt stack 0
  5015  0002C4                     	ds	9
  5016  0002CD                     	ds	8
  5017  0002D5                     _configFile_used_name:
  5018                           	opt stack 0
  5019  0002D5                     	ds	8
  5020  0002DD                     _configFile_name:
  5021                           	opt stack 0
  5022  0002DD                     	ds	8
  5023  0002E5                     _configFile_used_extention:
  5024                           	opt stack 0
  5025  0002E5                     	ds	3
  5026  0002E8                     _configFile_extention:
  5027                           	opt stack 0
  5028  0002E8                     	ds	3
  5029                           tblptru	equ	0xFF8
  5030                           tblptrh	equ	0xFF7
  5031                           tblptrl	equ	0xFF6
  5032                           tablat	equ	0xFF5
  5033                           postinc0	equ	0xFEE
  5034                           wreg	equ	0xFE8
  5035                           postdec1	equ	0xFE5
  5036                           fsr1h	equ	0xFE2
  5037                           fsr1l	equ	0xFE1
  5038                           
  5039                           	psect	bssBANK3
  5040  000300                     __pbssBANK3:
  5041                           	opt stack 0
  5042  000300                     _motor_command_cue:
  5043                           	opt stack 0
  5044  000300                     	ds	64
  5045  000340                     _ToSendDataBuffer:
  5046                           	opt stack 0
  5047  000340                     	ds	64
  5048  000380                     _ReceivedDataBuffer:
  5049                           	opt stack 0
  5050  000380                     	ds	64
  5051                           tblptru	equ	0xFF8
  5052                           tblptrh	equ	0xFF7
  5053                           tblptrl	equ	0xFF6
  5054                           tablat	equ	0xFF5
  5055                           postinc0	equ	0xFEE
  5056                           wreg	equ	0xFE8
  5057                           postdec1	equ	0xFE5
  5058                           fsr1h	equ	0xFE2
  5059                           fsr1l	equ	0xFE1
  5060                           
  5061                           	psect	dataBANK4
  5062  000400                     __pdataBANK4:
  5063                           	opt stack 0
  5064  000400                     _dc_startup:
  5065                           	opt stack 0
  5066  000400                     	ds	80
  5067                           tblptru	equ	0xFF8
  5068                           tblptrh	equ	0xFF7
  5069                           tblptrl	equ	0xFF6
  5070                           tablat	equ	0xFF5
  5071                           postinc0	equ	0xFEE
  5072                           wreg	equ	0xFE8
  5073                           postdec1	equ	0xFE5
  5074                           fsr1h	equ	0xFE2
  5075                           fsr1l	equ	0xFE1
  5076                           
  5077                           	psect	bssBIGRAMll
  5078  000800                     __pbssBIGRAMll:
  5079                           	opt stack 0
  5080  000800                     _ConfigFile_buffer:
  5081                           	opt stack 0
  5082  000800                     	ds	512
  5083  000A00                     _buffer:
  5084                           	opt stack 0
  5085  000A00                     	ds	512
  5086                           tblptru	equ	0xFF8
  5087                           tblptrh	equ	0xFF7
  5088                           tblptrl	equ	0xFF6
  5089                           tablat	equ	0xFF5
  5090                           postinc0	equ	0xFEE
  5091                           wreg	equ	0xFE8
  5092                           postdec1	equ	0xFE5
  5093                           fsr1h	equ	0xFE2
  5094                           fsr1l	equ	0xFE1
  5095                           
  5096                           	psect	cstackBANK1
  5097  0001C4                     __pcstackBANK1:
  5098                           	opt stack 0
  5099  0001C4                     ??_configFile_read:
  5100                           
  5101                           ; 1 bytes @ 0x0
  5102  0001C4                     	ds	8
  5103  0001CC                     configFile_read@item_string:
  5104                           	opt stack 0
  5105                           
  5106                           ; 31 bytes @ 0x8
  5107  0001CC                     	ds	31
  5108  0001EB                     configFile_read@value_string:
  5109                           	opt stack 0
  5110                           
  5111                           ; 12 bytes @ 0x27
  5112  0001EB                     	ds	12
  5113  0001F7                     configFile_read@file_size:
  5114                           	opt stack 0
  5115                           
  5116                           ; 4 bytes @ 0x33
  5117  0001F7                     	ds	4
  5118  0001FB                     configFile_read@file_number:
  5119                           	opt stack 0
  5120                           
  5121                           ; 1 bytes @ 0x37
  5122  0001FB                     	ds	1
  5123  0001FC                     configFile_read@position:
  5124                           	opt stack 0
  5125                           
  5126                           ; 4 bytes @ 0x38
  5127  0001FC                     	ds	4
  5128                           tblptru	equ	0xFF8
  5129                           tblptrh	equ	0xFF7
  5130                           tblptrl	equ	0xFF6
  5131                           tablat	equ	0xFF5
  5132                           postinc0	equ	0xFEE
  5133                           wreg	equ	0xFE8
  5134                           postdec1	equ	0xFE5
  5135                           fsr1h	equ	0xFE2
  5136                           fsr1l	equ	0xFE1
  5137                           
  5138                           	psect	cstackBANK0
  5139  000060                     __pcstackBANK0:
  5140                           	opt stack 0
  5141  000060                     ??_motor_stop:
  5142  000060                     ??_isdigit:
  5143  000060                     ??__i2c_wait_idle:
  5144  000060                     ??__display_clear:
  5145  000060                     ??__divide_jump_size_increment:
  5146  000060                     ??__divide_jump_size_decrement:
  5147  000060                     ??__encoder_statemachine_main:
  5148  000060                     ?_USBTransferOnePacket:
  5149                           	opt stack 0
  5150  000060                     ?_ExternalFlash_MediaInitialize:
  5151                           	opt stack 0
  5152  000060                     ?_ExternalFlash_SectorSizeRead:
  5153                           	opt stack 0
  5154  000060                     ?_strlen:
  5155                           	opt stack 0
  5156  000060                     ?_strncmp:
  5157                           	opt stack 0
  5158  000060                     ?__sector_from_file_number:
  5159                           	opt stack 0
  5160  000060                     ?__offset_from_file_number:
  5161                           	opt stack 0
  5162  000060                     ?__data_sector_from_cluster:
  5163                           	opt stack 0
  5164  000060                     ?__fat_sector_from_cluster:
  5165                           	opt stack 0
  5166  000060                     ?__fat_offset_from_cluster:
  5167                           	opt stack 0
  5168  000060                     ?__cluster_from_sector_and_offset:
  5169                           	opt stack 0
  5170  000060                     ?__get_available_offset_from_buffer:
  5171                           	opt stack 0
  5172  000060                     ?__read_value_from_offset:
  5173                           	opt stack 0
  5174  000060                     ?__get_time:
  5175                           	opt stack 0
  5176  000060                     ?__get_date:
  5177                           	opt stack 0
  5178  000060                     ?__encoder_next_setup_stepsize:
  5179                           	opt stack 0
  5180  000060                     ?__encoder_next_arc_step_size:
  5181                           	opt stack 0
  5182  000060                     ?___wmul:
  5183                           	opt stack 0
  5184  000060                     ?___lwdiv:
  5185                           	opt stack 0
  5186  000060                     ?___lwmod:
  5187                           	opt stack 0
  5188  000060                     ?_ExternalFlash_CapacityRead:
  5189                           	opt stack 0
  5190  000060                     ?__motor_calculate_distance:
  5191                           	opt stack 0
  5192  000060                     ?__display_position_in_degrees:
  5193                           	opt stack 0
  5194  000060                     ?___lmul:
  5195                           	opt stack 0
  5196  000060                     ?___lldiv:
  5197                           	opt stack 0
  5198  000060                     ?___aldiv:
  5199                           	opt stack 0
  5200  000060                     ?___almod:
  5201                           	opt stack 0
  5202  000060                     ?___fltol:
  5203                           	opt stack 0
  5204  000060                     ?___llmod:
  5205                           	opt stack 0
  5206  000060                     USBTransferOnePacket@dir:
  5207                           	opt stack 0
  5208  000060                     USBStallEndpoint@dir:
  5209                           	opt stack 0
  5210  000060                     __i2c_send@dat:
  5211                           	opt stack 0
  5212  000060                     display_get_character@position:
  5213                           	opt stack 0
  5214  000060                     __encoder_next_divide_step_size@old_stepsize:
  5215                           	opt stack 0
  5216  000060                     toupper@c:
  5217                           	opt stack 0
  5218  000060                     MSDComputeDeviceInAndResidue@DiExpected:
  5219                           	opt stack 0
  5220  000060                     SYSTEM_Initialize@pll_startup_counter:
  5221                           	opt stack 0
  5222  000060                     ExternalFlash_MediaInitialize@config:
  5223                           	opt stack 0
  5224  000060                     ExternalFlash_SectorSizeRead@config:
  5225                           	opt stack 0
  5226  000060                     ExternalFlash_CapacityRead@config:
  5227                           	opt stack 0
  5228  000060                     ExternalFlash_MediaDetect@config:
  5229                           	opt stack 0
  5230  000060                     ExternalFlash_WriteProtectStateGet@config:
  5231                           	opt stack 0
  5232  000060                     __data_sector_from_cluster@fat_cluster:
  5233                           	opt stack 0
  5234  000060                     __fat_sector_from_cluster@cluster:
  5235                           	opt stack 0
  5236  000060                     __fat_offset_from_cluster@cluster:
  5237                           	opt stack 0
  5238  000060                     __cluster_from_sector_and_offset@sector:
  5239                           	opt stack 0
  5240  000060                     __get_available_offset_from_buffer@minimum_offset:
  5241                           	opt stack 0
  5242  000060                     __read_value_from_offset@offset:
  5243                           	opt stack 0
  5244  000060                     __write_value_to_offset@offset:
  5245                           	opt stack 0
  5246  000060                     __get_mbr@idx:
  5247                           	opt stack 0
  5248  000060                     __get_fbr@idx:
  5249                           	opt stack 0
  5250  000060                     spi_tx@data:
  5251                           	opt stack 0
  5252  000060                     spi_tx_tx@command:
  5253                           	opt stack 0
  5254  000060                     spi_tx_rx@command:
  5255                           	opt stack 0
  5256  000060                     __fill_buffer_get_mode_details@outBuffer:
  5257                           	opt stack 0
  5258  000060                     motor_change_speed@new_speed:
  5259                           	opt stack 0
  5260  000060                     __encoder_next_setup_stepsize@old_stepsize:
  5261                           	opt stack 0
  5262  000060                     __encoder_next_arc_step_size@old_stepsize:
  5263                           	opt stack 0
  5264  000060                     __get_item@item_string:
  5265                           	opt stack 0
  5266  000060                     ___wmul@multiplier:
  5267                           	opt stack 0
  5268  000060                     ___lwdiv@dividend:
  5269                           	opt stack 0
  5270  000060                     ___lwmod@dividend:
  5271                           	opt stack 0
  5272  000060                     memcpy@d1:
  5273                           	opt stack 0
  5274  000060                     memset@p1:
  5275                           	opt stack 0
  5276  000060                     strlen@s:
  5277                           	opt stack 0
  5278  000060                     strncmp@s1:
  5279                           	opt stack 0
  5280  000060                     __spi_init@details:
  5281                           	opt stack 0
  5282  000060                     __motor_run@distance_in_steps:
  5283                           	opt stack 0
  5284  000060                     __motor_schedule_command@distance_in_steps:
  5285                           	opt stack 0
  5286  000060                     __motor_calculate_distance@target_position:
  5287                           	opt stack 0
  5288  000060                     ___lmul@multiplier:
  5289                           	opt stack 0
  5290  000060                     ___lldiv@dividend:
  5291                           	opt stack 0
  5292  000060                     ___aldiv@dividend:
  5293                           	opt stack 0
  5294  000060                     ___almod@dividend:
  5295                           	opt stack 0
  5296  000060                     ___fltol@f1:
  5297                           	opt stack 0
  5298  000060                     ___llmod@dividend:
  5299                           	opt stack 0
  5300                           
  5301                           ; 4 bytes @ 0x0
  5302  000060                     	ds	1
  5303  000061                     ??_USBStallEndpoint:
  5304  000061                     ??_display_get_character:
  5305  000061                     ?_stricmp:
  5306                           	opt stack 0
  5307  000061                     _isdigit$8519:
  5308                           	opt stack 0
  5309  000061                     USBTransferOnePacket@data:
  5310                           	opt stack 0
  5311  000061                     stricmp@s1:
  5312                           	opt stack 0
  5313                           
  5314                           ; 2 bytes @ 0x1
  5315  000061                     	ds	1
  5316  000062                     ??_MSDComputeDeviceInAndResidue:
  5317  000062                     ??_strlen:
  5318  000062                     ??__fill_buffer_get_mode_details:
  5319  000062                     ??__get_mbr:
  5320  000062                     ??__get_fbr:
  5321  000062                     ??__encoder_next_setup_stepsize:
  5322  000062                     ??__encoder_next_arc_step_size:
  5323  000062                     __display_clear@row:
  5324                           	opt stack 0
  5325  000062                     __sector_from_file_number@file_number:
  5326                           	opt stack 0
  5327  000062                     __offset_from_file_number@file_number:
  5328                           	opt stack 0
  5329  000062                     isdigit@c:
  5330                           	opt stack 0
  5331  000062                     SYSTEM_Initialize@pll_startup_counter_3152:
  5332                           	opt stack 0
  5333  000062                     __cluster_from_sector_and_offset@offset:
  5334                           	opt stack 0
  5335  000062                     __get_available_offset_from_buffer@buffer:
  5336                           	opt stack 0
  5337  000062                     __read_value_from_offset@buffer:
  5338                           	opt stack 0
  5339  000062                     __write_value_to_offset@buffer:
  5340                           	opt stack 0
  5341  000062                     spi_tx@length:
  5342                           	opt stack 0
  5343  000062                     spi_tx_tx@command_length:
  5344                           	opt stack 0
  5345  000062                     spi_tx_rx@command_length:
  5346                           	opt stack 0
  5347  000062                     motor_set_manual_speed@new_speed:
  5348                           	opt stack 0
  5349  000062                     __get_item@value_string:
  5350                           	opt stack 0
  5351  000062                     ___wmul@multiplicand:
  5352                           	opt stack 0
  5353  000062                     ___lwdiv@divisor:
  5354                           	opt stack 0
  5355  000062                     ___lwmod@divisor:
  5356                           	opt stack 0
  5357  000062                     memcpy@s1:
  5358                           	opt stack 0
  5359  000062                     memset@c:
  5360                           	opt stack 0
  5361  000062                     strncmp@s2:
  5362                           	opt stack 0
  5363                           
  5364                           ; 2 bytes @ 0x2
  5365  000062                     	ds	1
  5366  000063                     USBTransferOnePacket@len:
  5367                           	opt stack 0
  5368  000063                     __display_clear@col:
  5369                           	opt stack 0
  5370  000063                     display_get_character@line:
  5371                           	opt stack 0
  5372  000063                     spi_init@configuration:
  5373                           	opt stack 0
  5374  000063                     __sector_from_file_number@sector:
  5375                           	opt stack 0
  5376  000063                     __offset_from_file_number@offset:
  5377                           	opt stack 0
  5378  000063                     stricmp@s2:
  5379                           	opt stack 0
  5380                           
  5381                           ; 2 bytes @ 0x3
  5382  000063                     	ds	1
  5383  000064                     ??_USBTransferOnePacket:
  5384  000064                     ??_spi_tx:
  5385  000064                     ??__motor_calculate_distance:
  5386  000064                     ??__get_available_offset_from_buffer:
  5387  000064                     ??__read_value_from_offset:
  5388  000064                     ??___fltol:
  5389  000064                     SYSTEM_Initialize@state:
  5390                           	opt stack 0
  5391  000064                     __encoder_statemachine_main@structure:
  5392                           	opt stack 0
  5393  000064                     ___lwmod@counter:
  5394                           	opt stack 0
  5395  000064                     __write_value_to_offset@value:
  5396                           	opt stack 0
  5397  000064                     spi_tx_tx@data:
  5398                           	opt stack 0
  5399  000064                     spi_tx_rx@data:
  5400                           	opt stack 0
  5401  000064                     __fill_buffer_get_display@outBuffer:
  5402                           	opt stack 0
  5403  000064                     __motor_run@speed:
  5404                           	opt stack 0
  5405  000064                     __motor_schedule_command@speed:
  5406                           	opt stack 0
  5407  000064                     motor_set_manual_speed@old_speed:
  5408                           	opt stack 0
  5409  000064                     __get_item@buffer:
  5410                           	opt stack 0
  5411  000064                     ___wmul@product:
  5412                           	opt stack 0
  5413  000064                     ___lwdiv@quotient:
  5414                           	opt stack 0
  5415  000064                     memcpy@n:
  5416                           	opt stack 0
  5417  000064                     memset@n:
  5418                           	opt stack 0
  5419  000064                     strlen@cp:
  5420                           	opt stack 0
  5421  000064                     strncmp@len:
  5422                           	opt stack 0
  5423  000064                     __display_position_in_degrees@position:
  5424                           	opt stack 0
  5425  000064                     ___lmul@multiplicand:
  5426                           	opt stack 0
  5427  000064                     ___lldiv@divisor:
  5428                           	opt stack 0
  5429  000064                     ___aldiv@divisor:
  5430                           	opt stack 0
  5431  000064                     ___almod@divisor:
  5432                           	opt stack 0
  5433  000064                     ___llmod@divisor:
  5434                           	opt stack 0
  5435                           
  5436                           ; 4 bytes @ 0x4
  5437  000064                     	ds	1
  5438  000065                     ??_stricmp:
  5439  000065                     USBStallEndpoint@ep:
  5440                           	opt stack 0
  5441  000065                     __i2c_eeprom_busy@busy:
  5442                           	opt stack 0
  5443  000065                     __i2c_write@data:
  5444                           	opt stack 0
  5445  000065                     __i2c_read@data:
  5446                           	opt stack 0
  5447  000065                     i2c_display_write_fixed@data:
  5448                           	opt stack 0
  5449                           
  5450                           ; 2 bytes @ 0x5
  5451  000065                     	ds	1
  5452  000066                     ??_strncmp:
  5453  000066                     ??__write_value_to_offset:
  5454  000066                     ??__get_item:
  5455  000066                     ?_atoi:
  5456                           	opt stack 0
  5457  000066                     __fill_buffer_get_display@secondHalf:
  5458                           	opt stack 0
  5459  000066                     __motor_run@type:
  5460                           	opt stack 0
  5461  000066                     __motor_schedule_command@type:
  5462                           	opt stack 0
  5463  000066                     ___lwdiv@counter:
  5464                           	opt stack 0
  5465  000066                     stricmp@r:
  5466                           	opt stack 0
  5467  000066                     USBStallEndpoint@p:
  5468                           	opt stack 0
  5469  000066                     __get_available_offset_from_buffer@offset:
  5470                           	opt stack 0
  5471  000066                     spi_tx_tx@data_length:
  5472                           	opt stack 0
  5473  000066                     spi_tx_rx@data_length:
  5474                           	opt stack 0
  5475  000066                     __parse_set_manual_speed@data:
  5476                           	opt stack 0
  5477  000066                     atoi@s:
  5478                           	opt stack 0
  5479  000066                     memcpy@d:
  5480                           	opt stack 0
  5481  000066                     memset@p:
  5482                           	opt stack 0
  5483                           
  5484                           ; 2 bytes @ 0x6
  5485  000066                     	ds	1
  5486  000067                     ??__fill_buffer_get_display:
  5487  000067                     ??__motor_run:
  5488  000067                     __i2c_write@length:
  5489                           	opt stack 0
  5490  000067                     __i2c_read@length:
  5491                           	opt stack 0
  5492  000067                     i2c_display_write_fixed@length:
  5493                           	opt stack 0
  5494  000067                     __motor_schedule_command@direction:
  5495                           	opt stack 0
  5496  000067                     __read_value_from_offset@value:
  5497                           	opt stack 0
  5498  000067                     utoa@buf:
  5499                           	opt stack 0
  5500                           
  5501                           ; 2 bytes @ 0x7
  5502  000067                     	ds	1
  5503  000068                     ??_spi_tx_rx:
  5504  000068                     ??_spi_tx_tx:
  5505  000068                     ??_atoi:
  5506  000068                     ??__i2c_read:
  5507  000068                     USBDeviceInit@i:
  5508                           	opt stack 0
  5509  000068                     USBTransferOnePacket@ep:
  5510                           	opt stack 0
  5511  000068                     MSDErrorHandler@ErrorCase:
  5512                           	opt stack 0
  5513  000068                     __i2c_write@slave_address:
  5514                           	opt stack 0
  5515  000068                     i2c_display_write_fixed@pos:
  5516                           	opt stack 0
  5517  000068                     __flash_wakeup@command:
  5518                           	opt stack 0
  5519  000068                     __motor_move_back_forth@return_value_1:
  5520                           	opt stack 0
  5521  000068                     __motor_calculate_distance@direction:
  5522                           	opt stack 0
  5523  000068                     ___aldiv@counter:
  5524                           	opt stack 0
  5525  000068                     ___almod@counter:
  5526                           	opt stack 0
  5527  000068                     ___fltol@sign1:
  5528                           	opt stack 0
  5529  000068                     ___llmod@counter:
  5530                           	opt stack 0
  5531  000068                     __parse_set_manual_speed@out_buffer:
  5532                           	opt stack 0
  5533  000068                     memcpy@s:
  5534                           	opt stack 0
  5535  000068                     ___lmul@product:
  5536                           	opt stack 0
  5537  000068                     ___lldiv@quotient:
  5538                           	opt stack 0
  5539                           
  5540                           ; 4 bytes @ 0x8
  5541  000068                     	ds	1
  5542  000069                     MSDErrorHandler@OldMSD_State:
  5543                           	opt stack 0
  5544  000069                     __i2c_write@cntr:
  5545                           	opt stack 0
  5546  000069                     __motor_move_back_forth@return_value_2:
  5547                           	opt stack 0
  5548  000069                     __get_item@value_ctr:
  5549                           	opt stack 0
  5550  000069                     ___aldiv@sign:
  5551                           	opt stack 0
  5552  000069                     ___almod@sign:
  5553                           	opt stack 0
  5554  000069                     ___fltol@exp1:
  5555                           	opt stack 0
  5556  000069                     USBTransferOnePacket@handle:
  5557                           	opt stack 0
  5558  000069                     utoa@val:
  5559                           	opt stack 0
  5560  000069                     __motor_calculate_distance@distance:
  5561                           	opt stack 0
  5562                           
  5563                           ; 4 bytes @ 0x9
  5564  000069                     	ds	1
  5565  00006A                     ??_i2c_display_init:
  5566  00006A                     ?___xxtofl:
  5567                           	opt stack 0
  5568  00006A                     __ic2_display_set_ddram_address@address:
  5569                           	opt stack 0
  5570  00006A                     motor_set_zero@direction:
  5571                           	opt stack 0
  5572  00006A                     __get_item@item_ctr:
  5573                           	opt stack 0
  5574  00006A                     atoi@sign:
  5575                           	opt stack 0
  5576  00006A                     memcpy@tmp:
  5577                           	opt stack 0
  5578  00006A                     i2c_eeprom_writeByte@address:
  5579                           	opt stack 0
  5580  00006A                     __parse_set_manual_speed@out_idx_ptr:
  5581                           	opt stack 0
  5582  00006A                     __ic2_display_set_cgram_address@data_array:
  5583                           	opt stack 0
  5584  00006A                     MSDCheckForErrorCases@DeviceBytes:
  5585                           	opt stack 0
  5586  00006A                     ___aldiv@quotient:
  5587                           	opt stack 0
  5588  00006A                     ___xxtofl@val:
  5589                           	opt stack 0
  5590                           
  5591                           ; 4 bytes @ 0xA
  5592  00006A                     	ds	1
  5593  00006B                     __motor_run@direction:
  5594                           	opt stack 0
  5595  00006B                     __ic2_display_set_ddram_address@data_array:
  5596                           	opt stack 0
  5597  00006B                     __fill_buffer_get_status@outBuffer:
  5598                           	opt stack 0
  5599  00006B                     atoi@a:
  5600                           	opt stack 0
  5601  00006B                     utoa@base:
  5602                           	opt stack 0
  5603  00006B                     i2c_display_init@init_sequence:
  5604                           	opt stack 0
  5605                           
  5606                           ; 9 bytes @ 0xB
  5607  00006B                     	ds	1
  5608  00006C                     ??__parse_set_manual_speed:
  5609  00006C                     ?__flash_get_status:
  5610                           	opt stack 0
  5611  00006C                     ?__motor_distance_to_limit:
  5612                           	opt stack 0
  5613  00006C                     ?_atol:
  5614                           	opt stack 0
  5615  00006C                     i2c_eeprom_writeByte@data:
  5616                           	opt stack 0
  5617  00006C                     __fill_buffer_get_display@cntr:
  5618                           	opt stack 0
  5619  00006C                     ___lldiv@counter:
  5620                           	opt stack 0
  5621  00006C                     atol@s:
  5622                           	opt stack 0
  5623                           
  5624                           ; 2 bytes @ 0xC
  5625  00006C                     	ds	1
  5626  00006D                     ??_i2c_eeprom_writeByte:
  5627  00006D                     __ic2_display_set_cgram_address@address:
  5628                           	opt stack 0
  5629  00006D                     i2c_display_cursor@position:
  5630                           	opt stack 0
  5631  00006D                     __fill_buffer_get_display@line:
  5632                           	opt stack 0
  5633  00006D                     __parse_set_manual_speed@new_speed:
  5634                           	opt stack 0
  5635  00006D                     utoa@v:
  5636                           	opt stack 0
  5637  00006D                     ultoa@buf:
  5638                           	opt stack 0
  5639                           
  5640                           ; 2 bytes @ 0xD
  5641  00006D                     	ds	1
  5642  00006E                     ??___xxtofl:
  5643  00006E                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  5644                           	opt stack 0
  5645  00006E                     i2c_display_cursor@line:
  5646                           	opt stack 0
  5647  00006E                     __flash_get_status@command:
  5648                           	opt stack 0
  5649  00006E                     __fill_buffer_get_display@start_line:
  5650                           	opt stack 0
  5651  00006E                     i2c_display_program_custom_character@bit_pattern:
  5652                           	opt stack 0
  5653                           
  5654                           ; 2 bytes @ 0xE
  5655  00006E                     	ds	1
  5656  00006F                     MSDCheckForErrorCases@MSDErrorCase:
  5657                           	opt stack 0
  5658  00006F                     __i2c_read@slave_address:
  5659                           	opt stack 0
  5660  00006F                     i2c_display_cursor@address:
  5661                           	opt stack 0
  5662  00006F                     __fill_buffer_get_display@position:
  5663                           	opt stack 0
  5664  00006F                     utoa@c:
  5665                           	opt stack 0
  5666  00006F                     __flash_get_status@status:
  5667                           	opt stack 0
  5668  00006F                     ultoa@val:
  5669                           	opt stack 0
  5670                           
  5671                           ; 4 bytes @ 0xF
  5672  00006F                     	ds	1
  5673  000070                     ??__motor_distance_to_limit:
  5674  000070                     ??_atol:
  5675  000070                     ??_i2c_display_program_custom_character:
  5676  000070                     MSDCheckForErrorCases@DeviceNoData:
  5677                           	opt stack 0
  5678  000070                     __i2c_read@cntr:
  5679                           	opt stack 0
  5680  000070                     i2c_eeprom_writeByte@slave_address:
  5681                           	opt stack 0
  5682  000070                     display_update@line:
  5683                           	opt stack 0
  5684  000070                     api_prepare@inBuffer:
  5685                           	opt stack 0
  5686  000070                     itoa@buf:
  5687                           	opt stack 0
  5688                           
  5689                           ; 2 bytes @ 0x10
  5690  000070                     	ds	1
  5691  000071                     i2c_eeprom_writeByte@dat:
  5692                           	opt stack 0
  5693  000071                     i2c_eeprom_read@address:
  5694                           	opt stack 0
  5695  000071                     __flash_is_busy@status:
  5696                           	opt stack 0
  5697                           
  5698                           ; 2 bytes @ 0x11
  5699  000071                     	ds	1
  5700  000072                     ___xxtofl@sign:
  5701                           	opt stack 0
  5702  000072                     api_prepare@outBuffer:
  5703                           	opt stack 0
  5704  000072                     itoa@val:
  5705                           	opt stack 0
  5706                           
  5707                           ; 2 bytes @ 0x12
  5708  000072                     	ds	1
  5709  000073                     ___xxtofl@exp:
  5710                           	opt stack 0
  5711  000073                     i2c_eeprom_read@data:
  5712                           	opt stack 0
  5713  000073                     __flash_copy_page_to_buffer@page:
  5714                           	opt stack 0
  5715  000073                     __flash_compare_page_to_buffer@page:
  5716                           	opt stack 0
  5717  000073                     __flash_write_to_buffer@start:
  5718                           	opt stack 0
  5719  000073                     __flash_write_page_from_buffer@page:
  5720                           	opt stack 0
  5721  000073                     __flash_partial_read@page:
  5722                           	opt stack 0
  5723  000073                     ultoa@base:
  5724                           	opt stack 0
  5725  000073                     __flash_set_page_size@command:
  5726                           	opt stack 0
  5727                           
  5728                           ; 4 bytes @ 0x13
  5729  000073                     	ds	1
  5730  000074                     api_prepare@command:
  5731                           	opt stack 0
  5732  000074                     atol@sign:
  5733                           	opt stack 0
  5734  000074                     itoa@base:
  5735                           	opt stack 0
  5736  000074                     __motor_distance_to_limit@distance_to_limit_in_steps:
  5737                           	opt stack 0
  5738  000074                     ___xxtofl@arg:
  5739                           	opt stack 0
  5740  000074                     i2c_display_program_custom_character@data_array:
  5741                           	opt stack 0
  5742                           
  5743                           ; 11 bytes @ 0x14
  5744  000074                     	ds	1
  5745  000075                     i2c_eeprom_read@length:
  5746                           	opt stack 0
  5747  000075                     __flash_copy_page_to_buffer@buffer:
  5748                           	opt stack 0
  5749  000075                     __flash_compare_page_to_buffer@buffer:
  5750                           	opt stack 0
  5751  000075                     __flash_write_page_from_buffer@buffer:
  5752                           	opt stack 0
  5753  000075                     __flash_write_to_buffer@data:
  5754                           	opt stack 0
  5755  000075                     __flash_partial_read@start:
  5756                           	opt stack 0
  5757  000075                     atol@a:
  5758                           	opt stack 0
  5759  000075                     ultoa@v:
  5760                           	opt stack 0
  5761                           
  5762                           ; 4 bytes @ 0x15
  5763  000075                     	ds	1
  5764  000076                     ??_i2c_eeprom_read:
  5765  000076                     ??__flash_copy_page_to_buffer:
  5766  000076                     ??__flash_compare_page_to_buffer:
  5767  000076                     ??__flash_write_page_from_buffer:
  5768  000076                     itoa@cp:
  5769                           	opt stack 0
  5770                           
  5771                           ; 2 bytes @ 0x16
  5772  000076                     	ds	1
  5773  000077                     i2c_eeprom_read@addr:
  5774                           	opt stack 0
  5775  000077                     __flash_set_page_size@size:
  5776                           	opt stack 0
  5777  000077                     __flash_write_to_buffer@data_length:
  5778                           	opt stack 0
  5779  000077                     __flash_partial_read@length:
  5780                           	opt stack 0
  5781                           
  5782                           ; 2 bytes @ 0x17
  5783  000077                     	ds	1
  5784  000078                     ?___fldiv:
  5785                           	opt stack 0
  5786  000078                     ?___flmul:
  5787                           	opt stack 0
  5788  000078                     ?___flneg:
  5789                           	opt stack 0
  5790  000078                     i2c_eeprom_read@slave_address:
  5791                           	opt stack 0
  5792  000078                     __motor_distance_to_limit@direction:
  5793                           	opt stack 0
  5794  000078                     __display_padded_itoa@value:
  5795                           	opt stack 0
  5796  000078                     __display_itoa_u16@value:
  5797                           	opt stack 0
  5798  000078                     ___flge@ff1:
  5799                           	opt stack 0
  5800  000078                     ___flneg@f1:
  5801                           	opt stack 0
  5802  000078                     ___fldiv@b:
  5803                           	opt stack 0
  5804  000078                     ___flmul@b:
  5805                           	opt stack 0
  5806                           
  5807                           ; 4 bytes @ 0x18
  5808  000078                     	ds	1
  5809  000079                     __flash_write_to_buffer@buffer:
  5810                           	opt stack 0
  5811  000079                     atol@c:
  5812                           	opt stack 0
  5813  000079                     ultoa@c:
  5814                           	opt stack 0
  5815  000079                     __flash_compare_page_to_buffer@status:
  5816                           	opt stack 0
  5817  000079                     __flash_partial_read@data:
  5818                           	opt stack 0
  5819  000079                     __flash_copy_page_to_buffer@command:
  5820                           	opt stack 0
  5821  000079                     __flash_write_page_from_buffer@command:
  5822                           	opt stack 0
  5823  000079                     __motor_distance_to_limit@absolute_position_in_steps:
  5824                           	opt stack 0
  5825  000079                     i2c_eeprom_recover_position@buffer:
  5826                           	opt stack 0
  5827                           
  5828                           ; 11 bytes @ 0x19
  5829  000079                     	ds	1
  5830  00007A                     __display_padded_itoa@length:
  5831                           	opt stack 0
  5832  00007A                     __display_itoa_u16@text:
  5833                           	opt stack 0
  5834  00007A                     ltoa@buf:
  5835                           	opt stack 0
  5836  00007A                     __flash_write_to_buffer@command:
  5837                           	opt stack 0
  5838                           
  5839                           ; 4 bytes @ 0x1A
  5840  00007A                     	ds	1
  5841  00007B                     ??__flash_partial_read:
  5842  00007B                     __display_padded_itoa@text:
  5843                           	opt stack 0
  5844  00007B                     __flash_compare_page_to_buffer@command:
  5845                           	opt stack 0
  5846                           
  5847                           ; 4 bytes @ 0x1B
  5848  00007B                     	ds	1
  5849  00007C                     ?___fladd:
  5850                           	opt stack 0
  5851  00007C                     __display_start@cntr:
  5852                           	opt stack 0
  5853  00007C                     ___flge@ff2:
  5854                           	opt stack 0
  5855  00007C                     ___fladd@b:
  5856                           	opt stack 0
  5857  00007C                     ___fldiv@a:
  5858                           	opt stack 0
  5859  00007C                     ___flmul@a:
  5860                           	opt stack 0
  5861  00007C                     ltoa@val:
  5862                           	opt stack 0
  5863                           
  5864                           ; 4 bytes @ 0x1C
  5865  00007C                     	ds	1
  5866  00007D                     ??__display_padded_itoa:
  5867  00007D                     __motor_move_steps@distance_in_steps:
  5868                           	opt stack 0
  5869  00007D                     __motor_decide_direction@target_position_in_steps:
  5870                           	opt stack 0
  5871                           
  5872                           ; 4 bytes @ 0x1D
  5873  00007D                     	ds	2
  5874  00007F                     i2c_display_program_custom_character@address:
  5875                           	opt stack 0
  5876  00007F                     flash_sector_write@page:
  5877                           	opt stack 0
  5878  00007F                     flash_partial_write@page:
  5879                           	opt stack 0
  5880  00007F                     __flash_partial_read@command:
  5881                           	opt stack 0
  5882                           
  5883                           ; 4 bytes @ 0x1F
  5884  00007F                     	ds	1
  5885  000080                     ??___fldiv:
  5886  000080                     ??___flmul:
  5887  000080                     ??___flge:
  5888  000080                     i2c_display_program_custom_character@cntr:
  5889                           	opt stack 0
  5890  000080                     ltoa@base:
  5891                           	opt stack 0
  5892  000080                     ___fladd@a:
  5893                           	opt stack 0
  5894                           
  5895                           ; 4 bytes @ 0x20
  5896  000080                     	ds	1
  5897  000081                     __motor_decide_direction@overshoot:
  5898                           	opt stack 0
  5899  000081                     flash_sector_write@data:
  5900                           	opt stack 0
  5901  000081                     flash_partial_write@start:
  5902                           	opt stack 0
  5903  000081                     __motor_move_steps@speed:
  5904                           	opt stack 0
  5905                           
  5906                           ; 2 bytes @ 0x21
  5907  000081                     	ds	1
  5908  000082                     ltoa@cp:
  5909                           	opt stack 0
  5910  000082                     __motor_decide_direction@distance_to_limit_cw:
  5911                           	opt stack 0
  5912  000082                     __display_padded_itoa@tmp:
  5913                           	opt stack 0
  5914                           
  5915                           ; 10 bytes @ 0x22
  5916  000082                     	ds	1
  5917  000083                     flash_sector_write@match:
  5918                           	opt stack 0
  5919  000083                     __motor_move_steps@overshoot:
  5920                           	opt stack 0
  5921  000083                     flash_partial_write@length:
  5922                           	opt stack 0
  5923  000083                     __flash_partial_read@address:
  5924                           	opt stack 0
  5925                           
  5926                           ; 4 bytes @ 0x23
  5927  000083                     	ds	1
  5928  000084                     ??___fladd:
  5929  000084                     __motor_move_steps@type:
  5930                           	opt stack 0
  5931  000084                     ___flmul@sign:
  5932                           	opt stack 0
  5933  000084                     ExternalFlash_SectorWrite@config:
  5934                           	opt stack 0
  5935  000084                     fat_restore_mbr_fbr@cntr:
  5936                           	opt stack 0
  5937  000084                     __add_item@item_string:
  5938                           	opt stack 0
  5939  000084                     ___fldiv@rem:
  5940                           	opt stack 0
  5941                           
  5942                           ; 4 bytes @ 0x24
  5943  000084                     	ds	1
  5944  000085                     __motor_move_steps@return_value_1:
  5945                           	opt stack 0
  5946  000085                     flash_partial_write@data:
  5947                           	opt stack 0
  5948  000085                     ___flmul@grs:
  5949                           	opt stack 0
  5950                           
  5951                           ; 4 bytes @ 0x25
  5952  000085                     	ds	1
  5953  000086                     __motor_move_steps@return_value_2:
  5954                           	opt stack 0
  5955  000086                     ExternalFlash_SectorWrite@sector_addr:
  5956                           	opt stack 0
  5957  000086                     __motor_decide_direction@distance_to_limit_ccw:
  5958                           	opt stack 0
  5959  000086                     __add_item@value:
  5960                           	opt stack 0
  5961                           
  5962                           ; 4 bytes @ 0x26
  5963  000086                     	ds	1
  5964  000087                     flash_partial_write@match:
  5965                           	opt stack 0
  5966  000087                     flash_sector_read@page:
  5967                           	opt stack 0
  5968  000087                     flash_partial_read@page:
  5969                           	opt stack 0
  5970  000087                     __motor_move_steps@distance_to_limit:
  5971                           	opt stack 0
  5972                           
  5973                           ; 4 bytes @ 0x27
  5974  000087                     	ds	1
  5975  000088                     ___fldiv@sign:
  5976                           	opt stack 0
  5977  000088                     __write_root@data:
  5978                           	opt stack 0
  5979                           
  5980                           ; 2 bytes @ 0x28
  5981  000088                     	ds	1
  5982  000089                     ___flmul@aexp:
  5983                           	opt stack 0
  5984  000089                     flash_sector_read@data:
  5985                           	opt stack 0
  5986  000089                     flash_partial_read@start:
  5987                           	opt stack 0
  5988  000089                     ___fldiv@new_exp:
  5989                           	opt stack 0
  5990                           
  5991                           ; 2 bytes @ 0x29
  5992  000089                     	ds	1
  5993  00008A                     ___flmul@bexp:
  5994                           	opt stack 0
  5995  00008A                     ExternalFlash_SectorWrite@buffer:
  5996                           	opt stack 0
  5997  00008A                     __write_root@sector:
  5998                           	opt stack 0
  5999  00008A                     __add_item@buffer:
  6000                           	opt stack 0
  6001  00008A                     __motor_decide_direction@distance_to_target_cw:
  6002                           	opt stack 0
  6003                           
  6004                           ; 4 bytes @ 0x2A
  6005  00008A                     	ds	1
  6006  00008B                     ??_fat_get_format_status:
  6007  00008B                     ?__get_available_cluster:
  6008                           	opt stack 0
  6009  00008B                     __motor_move_steps@direction:
  6010                           	opt stack 0
  6011  00008B                     flash_partial_read@length:
  6012                           	opt stack 0
  6013  00008B                     ExternalFlash_SectorRead@config:
  6014                           	opt stack 0
  6015  00008B                     __get_available_cluster@first_sector:
  6016                           	opt stack 0
  6017  00008B                     fat_find_file@name:
  6018                           	opt stack 0
  6019  00008B                     ___fldiv@grs:
  6020                           	opt stack 0
  6021  00008B                     ___flmul@prod:
  6022                           	opt stack 0
  6023                           
  6024                           ; 4 bytes @ 0x2B
  6025  00008B                     	ds	1
  6026  00008C                     ??__add_item:
  6027  00008C                     __display_padded_itoa@len:
  6028                           	opt stack 0
  6029  00008C                     ExternalFlash_SectorWrite@allowWriteToZero:
  6030                           	opt stack 0
  6031  00008C                     ___fladd@signs:
  6032                           	opt stack 0
  6033  00008C                     __write_root@offset:
  6034                           	opt stack 0
  6035  00008C                     motor_move_endless@speed:
  6036                           	opt stack 0
  6037  00008C                     motor_move_steps@distance:
  6038                           	opt stack 0
  6039                           
  6040                           ; 4 bytes @ 0x2C
  6041  00008C                     	ds	1
  6042  00008D                     __display_padded_itoa@pos:
  6043                           	opt stack 0
  6044  00008D                     ___fladd@aexp:
  6045                           	opt stack 0
  6046  00008D                     flash_partial_read@data:
  6047                           	opt stack 0
  6048  00008D                     ExternalFlash_SectorWrite@page:
  6049                           	opt stack 0
  6050  00008D                     __get_available_cluster@skip_sector:
  6051                           	opt stack 0
  6052  00008D                     fat_find_file@extension:
  6053                           	opt stack 0
  6054  00008D                     fat_get_format_status@cntr:
  6055                           	opt stack 0
  6056  00008D                     ExternalFlash_SectorRead@sector_addr:
  6057                           	opt stack 0
  6058                           
  6059                           ; 4 bytes @ 0x2D
  6060  00008D                     	ds	1
  6061  00008E                     __display_padded_itoa@padding:
  6062                           	opt stack 0
  6063  00008E                     __write_root@file_number:
  6064                           	opt stack 0
  6065  00008E                     motor_move_endless@direction:
  6066                           	opt stack 0
  6067  00008E                     __add_item@length:
  6068                           	opt stack 0
  6069  00008E                     ___fladd@bexp:
  6070                           	opt stack 0
  6071  00008E                     __motor_decide_direction@distance_to_target_ccw:
  6072                           	opt stack 0
  6073                           
  6074                           ; 4 bytes @ 0x2E
  6075  00008E                     	ds	1
  6076  00008F                     ??_MSDWriteHandler:
  6077  00008F                     ??_fat_find_file:
  6078  00008F                     ??__encoder_statemachine_manual:
  6079  00008F                     ?__read_fat:
  6080                           	opt stack 0
  6081  00008F                     ___fladd@grs:
  6082                           	opt stack 0
  6083  00008F                     ___fldiv@bexp:
  6084                           	opt stack 0
  6085  00008F                     __display_signed_itoa@value:
  6086                           	opt stack 0
  6087  00008F                     __get_available_cluster@cluster:
  6088                           	opt stack 0
  6089  00008F                     __root_is_available@root_sector:
  6090                           	opt stack 0
  6091  00008F                     __read_fat@cluster:
  6092                           	opt stack 0
  6093  00008F                     fat_get_file_information@data:
  6094                           	opt stack 0
  6095  00008F                     ___flmul@temp:
  6096                           	opt stack 0
  6097                           
  6098                           ; 2 bytes @ 0x2F
  6099  00008F                     	ds	1
  6100  000090                     ___fldiv@aexp:
  6101                           	opt stack 0
  6102  000090                     motor_move_steps@speed:
  6103                           	opt stack 0
  6104                           
  6105                           ; 2 bytes @ 0x30
  6106  000090                     	ds	1
  6107  000091                     ??_adc_read_temperature:
  6108  000091                     ?__motor_get_speed_in_degrees:
  6109                           	opt stack 0
  6110  000091                     ?__steps_from_degrees:
  6111                           	opt stack 0
  6112  000091                     ?__motor_steps_from_degrees_int:
  6113                           	opt stack 0
  6114  000091                     ?__step_position_from_divide_position:
  6115                           	opt stack 0
  6116  000091                     fat_find_file@file_number:
  6117                           	opt stack 0
  6118  000091                     __display_signed_itoa@text:
  6119                           	opt stack 0
  6120  000091                     ExternalFlash_SectorRead@buffer:
  6121                           	opt stack 0
  6122  000091                     __get_available_cluster@offset:
  6123                           	opt stack 0
  6124  000091                     __root_is_available@offset:
  6125                           	opt stack 0
  6126  000091                     __read_fat@sector:
  6127                           	opt stack 0
  6128  000091                     __motor_steps_from_degrees_int@degrees:
  6129                           	opt stack 0
  6130  000091                     __motor_get_speed_in_degrees@speed_index:
  6131                           	opt stack 0
  6132  000091                     __step_position_from_divide_position@divide_position:
  6133                           	opt stack 0
  6134  000091                     motor_calculate_position_in_degrees@tmp:
  6135                           	opt stack 0
  6136  000091                     __steps_from_degrees@degrees:
  6137                           	opt stack 0
  6138                           
  6139                           ; 4 bytes @ 0x31
  6140  000091                     	ds	1
  6141  000092                     motor_move_steps@overshoot:
  6142                           	opt stack 0
  6143  000092                     fat_find_file@sector:
  6144                           	opt stack 0
  6145  000092                     fat_get_file_information@root_sector:
  6146                           	opt stack 0
  6147  000092                     motor_goto_steps@position:
  6148                           	opt stack 0
  6149                           
  6150                           ; 4 bytes @ 0x32
  6151  000092                     	ds	1
  6152  000093                     ??__motor_get_speed_in_degrees:
  6153  000093                     __root_is_available@file_number:
  6154                           	opt stack 0
  6155  000093                     motor_move_steps@direction:
  6156                           	opt stack 0
  6157  000093                     ExternalFlash_SectorRead@page:
  6158                           	opt stack 0
  6159  000093                     __get_available_cluster@sector:
  6160                           	opt stack 0
  6161  000093                     __read_fat@offset:
  6162                           	opt stack 0
  6163  000093                     adc_read_temperature@adc_result:
  6164                           	opt stack 0
  6165                           
  6166                           ; 2 bytes @ 0x33
  6167  000093                     	ds	1
  6168  000094                     __root_is_available@first_byte:
  6169                           	opt stack 0
  6170  000094                     motor_arc_move@direction:
  6171                           	opt stack 0
  6172  000094                     fat_find_file@offset:
  6173                           	opt stack 0
  6174  000094                     fat_get_file_information@offset:
  6175                           	opt stack 0
  6176  000094                     __parse_jump_steps@data:
  6177                           	opt stack 0
  6178  000094                     __parse_jump_steps_with_overshoot@data:
  6179                           	opt stack 0
  6180                           
  6181                           ; 2 bytes @ 0x34
  6182  000094                     	ds	1
  6183  000095                     ??_MSDReadHandler:
  6184  000095                     ?__make_cluster_chain:
  6185                           	opt stack 0
  6186  000095                     ?_fat_get_file_size:
  6187                           	opt stack 0
  6188  000095                     __get_available_root_entry@file_number:
  6189                           	opt stack 0
  6190  000095                     __make_cluster_chain@first_cluster:
  6191                           	opt stack 0
  6192  000095                     __read_fat@value:
  6193                           	opt stack 0
  6194  000095                     __motor_steps_from_degrees_int@temp:
  6195                           	opt stack 0
  6196  000095                     __motor_get_speed_in_degrees@speed:
  6197                           	opt stack 0
  6198  000095                     __step_position_from_divide_position@target_position:
  6199                           	opt stack 0
  6200  000095                     motor_arc_move@arc_in_steps:
  6201                           	opt stack 0
  6202  000095                     adc_read_temperature@temperature:
  6203                           	opt stack 0
  6204  000095                     __steps_from_degrees@temp:
  6205                           	opt stack 0
  6206                           
  6207                           ; 4 bytes @ 0x35
  6208  000095                     	ds	1
  6209  000096                     fat_get_file_information@file_number:
  6210                           	opt stack 0
  6211  000096                     __parse_jump_steps@out_buffer:
  6212                           	opt stack 0
  6213  000096                     __parse_jump_steps_with_overshoot@out_buffer:
  6214                           	opt stack 0
  6215  000096                     motor_goto_steps@speed:
  6216                           	opt stack 0
  6217                           
  6218                           ; 2 bytes @ 0x36
  6219  000096                     	ds	1
  6220  000097                     ?__find_nth_cluster:
  6221                           	opt stack 0
  6222  000097                     __find_nth_cluster@cluster:
  6223                           	opt stack 0
  6224  000097                     __make_cluster_chain@number_of_clusters:
  6225                           	opt stack 0
  6226                           
  6227                           ; 2 bytes @ 0x37
  6228  000097                     	ds	1
  6229  000098                     motor_goto_steps@overshoot:
  6230                           	opt stack 0
  6231  000098                     __parse_jump_steps@out_idx_ptr:
  6232                           	opt stack 0
  6233  000098                     __parse_jump_steps_with_overshoot@out_idx_ptr:
  6234                           	opt stack 0
  6235                           
  6236                           ; 2 bytes @ 0x38
  6237  000098                     	ds	1
  6238  000099                     ??_MSDProcessCommandMediaPresent:
  6239  000099                     ??__make_cluster_chain:
  6240  000099                     ??__encoder_statemachine_arc:
  6241  000099                     __find_nth_cluster@n:
  6242                           	opt stack 0
  6243  000099                     fat_get_file_size@sector:
  6244                           	opt stack 0
  6245  000099                     motor_move_degrees_int@distance:
  6246                           	opt stack 0
  6247  000099                     __parse_item@item_string:
  6248                           	opt stack 0
  6249  000099                     __motor_get_speed_in_degrees@lookup:
  6250                           	opt stack 0
  6251  000099                     motor_goto_steps@distance_in_steps:
  6252                           	opt stack 0
  6253                           
  6254                           ; 4 bytes @ 0x39
  6255  000099                     	ds	1
  6256  00009A                     ??__parse_jump_steps:
  6257  00009A                     ??__parse_jump_steps_with_overshoot:
  6258                           
  6259                           ; 1 bytes @ 0x3A
  6260  00009A                     	ds	1
  6261  00009B                     __parse_jump_steps@return_value:
  6262                           	opt stack 0
  6263  00009B                     __parse_jump_steps_with_overshoot@return_value:
  6264                           	opt stack 0
  6265  00009B                     _MSDProcessCommandMediaPresent$2606:
  6266                           	opt stack 0
  6267  00009B                     __find_nth_cluster@offset:
  6268                           	opt stack 0
  6269  00009B                     __make_cluster_chain@next_offset:
  6270                           	opt stack 0
  6271  00009B                     fat_get_file_size@offset:
  6272                           	opt stack 0
  6273  00009B                     motor_move_degrees_int@speed:
  6274                           	opt stack 0
  6275  00009B                     __parse_item@value_string:
  6276                           	opt stack 0
  6277                           
  6278                           ; 2 bytes @ 0x3B
  6279  00009B                     	ds	1
  6280  00009C                     __parse_jump_steps@number_of_steps:
  6281                           	opt stack 0
  6282  00009C                     __parse_jump_steps_with_overshoot@number_of_steps:
  6283                           	opt stack 0
  6284                           
  6285                           ; 4 bytes @ 0x3C
  6286  00009C                     	ds	1
  6287  00009D                     ?_motor_speed_from_index:
  6288                           	opt stack 0
  6289  00009D                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  6290                           	opt stack 0
  6291  00009D                     motor_move_degrees_int@overshoot:
  6292                           	opt stack 0
  6293  00009D                     motor_goto_steps@direction:
  6294                           	opt stack 0
  6295  00009D                     __find_nth_cluster@sector_in_buffer:
  6296                           	opt stack 0
  6297  00009D                     __make_cluster_chain@minimum_sector:
  6298                           	opt stack 0
  6299  00009D                     motor_speed_from_index@speed_index:
  6300                           	opt stack 0
  6301  00009D                     fat_get_file_size@file_size:
  6302                           	opt stack 0
  6303                           
  6304                           ; 4 bytes @ 0x3D
  6305  00009D                     	ds	1
  6306  00009E                     ??_motor_divide_jump:
  6307  00009E                     ??__encoder_statemachine_zero:
  6308  00009E                     __parse_command_short@cmd:
  6309                           	opt stack 0
  6310  00009E                     MSDProcessCommandMediaPresent@sectorSize:
  6311                           	opt stack 0
  6312  00009E                     motor_divide_jump_to_nearest@nearest_position_in_steps:
  6313                           	opt stack 0
  6314  00009E                     motor_move_degrees_int@distance_in_steps:
  6315                           	opt stack 0
  6316                           
  6317                           ; 4 bytes @ 0x3E
  6318  00009E                     	ds	1
  6319  00009F                     __display_itoa@value:
  6320                           	opt stack 0
  6321  00009F                     __find_nth_cluster@sector:
  6322                           	opt stack 0
  6323  00009F                     __make_cluster_chain@different_sector_cluster:
  6324                           	opt stack 0
  6325  00009F                     motor_divide_jump@target_position_in_steps:
  6326                           	opt stack 0
  6327                           
  6328                           ; 4 bytes @ 0x3F
  6329  00009F                     	ds	1
  6330  0000A0                     __parse_command_long@data:
  6331                           	opt stack 0
  6332                           
  6333                           ; 2 bytes @ 0x40
  6334  0000A0                     	ds	1
  6335  0000A1                     __display_itoa@decimals:
  6336                           	opt stack 0
  6337  0000A1                     __make_cluster_chain@data_changed:
  6338                           	opt stack 0
  6339  0000A1                     fat_get_file_size@file_number:
  6340                           	opt stack 0
  6341  0000A1                     fat_read_from_file_fast@start_byte:
  6342                           	opt stack 0
  6343  0000A1                     fat_modify_file@start_byte:
  6344                           	opt stack 0
  6345                           
  6346                           ; 4 bytes @ 0x41
  6347  0000A1                     	ds	1
  6348  0000A2                     motor_move_degrees_int@direction:
  6349                           	opt stack 0
  6350  0000A2                     __display_itoa@text:
  6351                           	opt stack 0
  6352  0000A2                     __make_cluster_chain@remaining_clusters:
  6353                           	opt stack 0
  6354  0000A2                     __parse_command_long@out_buffer:
  6355                           	opt stack 0
  6356  0000A2                     motor_divide_jump_to_nearest@nearest_divide_position:
  6357                           	opt stack 0
  6358  0000A2                     MSDProcessCommandMediaPresent@capacity:
  6359                           	opt stack 0
  6360                           
  6361                           ; 4 bytes @ 0x42
  6362  0000A2                     	ds	1
  6363  0000A3                     ??__encoder_statemachine_setup:
  6364  0000A3                     motor_divide_jump@target_divide_position:
  6365                           	opt stack 0
  6366                           
  6367                           ; 2 bytes @ 0x43
  6368  0000A3                     	ds	1
  6369  0000A4                     ??__display_itoa:
  6370  0000A4                     __make_cluster_chain@sector:
  6371                           	opt stack 0
  6372  0000A4                     __parse_command_long@out_idx_ptr:
  6373                           	opt stack 0
  6374  0000A4                     motor_divide_jump_to_nearest@divide_position_float:
  6375                           	opt stack 0
  6376                           
  6377                           ; 4 bytes @ 0x44
  6378  0000A4                     	ds	1
  6379  0000A5                     fat_modify_file@length:
  6380                           	opt stack 0
  6381  0000A5                     fat_read_from_file_fast@length:
  6382                           	opt stack 0
  6383                           
  6384                           ; 4 bytes @ 0x45
  6385  0000A5                     	ds	1
  6386  0000A6                     MSDProcessCommandMediaPresent@i:
  6387                           	opt stack 0
  6388  0000A6                     __parse_command_long@length:
  6389                           	opt stack 0
  6390  0000A6                     __make_cluster_chain@sector_in_buffer:
  6391                           	opt stack 0
  6392                           
  6393                           ; 2 bytes @ 0x46
  6394  0000A6                     	ds	1
  6395  0000A7                     ??_MSDProcessCommand:
  6396  0000A7                     fat_modify_file@data:
  6397                           	opt stack 0
  6398  0000A7                     api_parse@inBuffer:
  6399                           	opt stack 0
  6400                           
  6401                           ; 2 bytes @ 0x47
  6402  0000A7                     	ds	1
  6403  0000A8                     ??__encoder_statemachine_divide:
  6404  0000A8                     __make_cluster_chain@offset:
  6405                           	opt stack 0
  6406                           
  6407                           ; 2 bytes @ 0x48
  6408  0000A8                     	ds	1
  6409  0000A9                     ??_fat_modify_file:
  6410  0000A9                     api_parse@receivedDataLength:
  6411                           	opt stack 0
  6412  0000A9                     fat_read_from_file_fast@data:
  6413                           	opt stack 0
  6414                           
  6415                           ; 2 bytes @ 0x49
  6416  0000A9                     	ds	1
  6417  0000AA                     __make_cluster_chain@next_cluster:
  6418                           	opt stack 0
  6419  0000AA                     api_parse@outBuffer:
  6420                           	opt stack 0
  6421  0000AA                     __display_itoa@tmp:
  6422                           	opt stack 0
  6423                           
  6424                           ; 10 bytes @ 0x4A
  6425  0000AA                     	ds	1
  6426  0000AB                     ??_encoder_statemachine:
  6427  0000AB                     fat_read_from_file_fast@cluster:
  6428                           	opt stack 0
  6429                           
  6430                           ; 2 bytes @ 0x4B
  6431  0000AB                     	ds	1
  6432  0000AC                     ??_api_parse:
  6433  0000AC                     ??_MSDTasks:
  6434  0000AC                     fat_create_file@name:
  6435                           	opt stack 0
  6436  0000AC                     fat_resize_file@new_file_size:
  6437                           	opt stack 0
  6438                           
  6439                           ; 4 bytes @ 0x4C
  6440  0000AC                     	ds	1
  6441  0000AD                     _MSDTasks$2588:
  6442                           	opt stack 0
  6443  0000AD                     fat_read_from_file_fast@cluster_number:
  6444                           	opt stack 0
  6445                           
  6446                           ; 2 bytes @ 0x4D
  6447  0000AD                     	ds	1
  6448  0000AE                     fat_create_file@extension:
  6449                           	opt stack 0
  6450  0000AE                     api_parse@out_idx_ptr:
  6451                           	opt stack 0
  6452                           
  6453                           ; 2 bytes @ 0x4E
  6454  0000AE                     	ds	1
  6455  0000AF                     ??_fat_read_from_file_fast:
  6456  0000AF                     _MSDTasks$2589:
  6457                           	opt stack 0
  6458                           
  6459                           ; 2 bytes @ 0x4F
  6460  0000AF                     	ds	1
  6461  0000B0                     ??_fat_resize_file:
  6462  0000B0                     api_parse@out_idx:
  6463                           	opt stack 0
  6464  0000B0                     fat_create_file@size:
  6465                           	opt stack 0
  6466                           
  6467                           ; 4 bytes @ 0x50
  6468  0000B0                     	ds	1
  6469  0000B1                     MSDTasks@i:
  6470                           	opt stack 0
  6471  0000B1                     api_parse@in_idx:
  6472                           	opt stack 0
  6473                           
  6474                           ; 1 bytes @ 0x51
  6475  0000B1                     	ds	1
  6476  0000B2                     
  6477                           ; 1 bytes @ 0x52
  6478  0000B2                     	ds	2
  6479  0000B4                     ??_fat_create_file:
  6480  0000B4                     __display_itoa@len:
  6481                           	opt stack 0
  6482  0000B4                     fat_resize_file@old_number_of_clusters:
  6483                           	opt stack 0
  6484                           
  6485                           ; 2 bytes @ 0x54
  6486  0000B4                     	ds	1
  6487  0000B5                     __display_itoa@missing:
  6488                           	opt stack 0
  6489  0000B5                     fat_modify_file@sector:
  6490                           	opt stack 0
  6491                           
  6492                           ; 2 bytes @ 0x55
  6493  0000B5                     	ds	1
  6494  0000B6                     __display_itoa@pos:
  6495                           	opt stack 0
  6496  0000B6                     fat_resize_file@new_number_of_clusters:
  6497                           	opt stack 0
  6498                           
  6499                           ; 2 bytes @ 0x56
  6500  0000B6                     	ds	1
  6501  0000B7                     fat_modify_file@file_number:
  6502                           	opt stack 0
  6503  0000B7                     __display_itoa_long@value:
  6504                           	opt stack 0
  6505                           
  6506                           ; 4 bytes @ 0x57
  6507  0000B7                     	ds	1
  6508  0000B8                     fat_modify_file@return_code:
  6509                           	opt stack 0
  6510  0000B8                     fat_create_file@number_of_clusters:
  6511                           	opt stack 0
  6512  0000B8                     fat_resize_file@first_cluster:
  6513                           	opt stack 0
  6514                           
  6515                           ; 2 bytes @ 0x58
  6516  0000B8                     	ds	1
  6517  0000B9                     fat_modify_file@cluster:
  6518                           	opt stack 0
  6519                           
  6520                           ; 2 bytes @ 0x59
  6521  0000B9                     	ds	1
  6522  0000BA                     fat_resize_file@file_number:
  6523                           	opt stack 0
  6524  0000BA                     fat_create_file@first_cluster:
  6525                           	opt stack 0
  6526                           
  6527                           ; 2 bytes @ 0x5A
  6528  0000BA                     	ds	1
  6529  0000BB                     __display_itoa_long@decimals:
  6530                           	opt stack 0
  6531  0000BB                     fat_read_from_file_fast@sector:
  6532                           	opt stack 0
  6533  0000BB                     fat_modify_file@offset:
  6534                           	opt stack 0
  6535  0000BB                     fat_resize_file@root:
  6536                           	opt stack 0
  6537                           
  6538                           ; 32 bytes @ 0x5B
  6539  0000BB                     	ds	1
  6540  0000BC                     fat_create_file@file_number:
  6541                           	opt stack 0
  6542  0000BC                     __display_itoa_long@text:
  6543                           	opt stack 0
  6544                           
  6545                           ; 2 bytes @ 0x5C
  6546  0000BC                     	ds	1
  6547  0000BD                     fat_read_from_file_fast@working_cluster:
  6548                           	opt stack 0
  6549  0000BD                     fat_modify_file@number_of_bytes:
  6550                           	opt stack 0
  6551  0000BD                     fat_create_file@root_entry:
  6552                           	opt stack 0
  6553                           
  6554                           ; 32 bytes @ 0x5D
  6555  0000BD                     	ds	1
  6556  0000BE                     ??__display_itoa_long:
  6557                           
  6558                           ; 1 bytes @ 0x5E
  6559  0000BE                     	ds	1
  6560  0000BF                     fat_read_from_file_fast@offset:
  6561                           	opt stack 0
  6562  0000BF                     fat_modify_file@position:
  6563                           	opt stack 0
  6564                           
  6565                           ; 4 bytes @ 0x5F
  6566  0000BF                     	ds	2
  6567  0000C1                     fat_read_from_file_fast@needed_cluster:
  6568                           	opt stack 0
  6569                           
  6570                           ; 2 bytes @ 0x61
  6571  0000C1                     	ds	1
  6572  0000C2                     __display_itoa_long@length:
  6573                           	opt stack 0
  6574                           
  6575                           ; 1 bytes @ 0x62
  6576  0000C2                     	ds	1
  6577  0000C3                     __display_itoa_long@short_value:
  6578                           	opt stack 0
  6579  0000C3                     fat_read_from_file_fast@read_length:
  6580                           	opt stack 0
  6581  0000C3                     fat_modify_file@root:
  6582                           	opt stack 0
  6583                           
  6584                           ; 32 bytes @ 0x63
  6585  0000C3                     	ds	2
  6586  0000C5                     __display_itoa_long@last_digit:
  6587                           	opt stack 0
  6588  0000C5                     fat_read_from_file_fast@position:
  6589                           	opt stack 0
  6590                           
  6591                           ; 4 bytes @ 0x65
  6592  0000C5                     	ds	1
  6593  0000C6                     ??_display_prepare:
  6594                           
  6595                           ; 1 bytes @ 0x66
  6596  0000C6                     	ds	2
  6597  0000C8                     display_prepare@temp:
  6598                           	opt stack 0
  6599                           
  6600                           ; 10 bytes @ 0x68
  6601  0000C8                     	ds	1
  6602  0000C9                     fat_read_from_file@start_byte:
  6603                           	opt stack 0
  6604                           
  6605                           ; 4 bytes @ 0x69
  6606  0000C9                     	ds	4
  6607  0000CD                     fat_read_from_file@length:
  6608                           	opt stack 0
  6609                           
  6610                           ; 4 bytes @ 0x6D
  6611  0000CD                     	ds	4
  6612  0000D1                     fat_read_from_file@data:
  6613                           	opt stack 0
  6614                           
  6615                           ; 2 bytes @ 0x71
  6616  0000D1                     	ds	1
  6617  0000D2                     display_prepare@space:
  6618                           	opt stack 0
  6619                           
  6620                           ; 1 bytes @ 0x72
  6621  0000D2                     	ds	1
  6622  0000D3                     ??_fat_read_from_file:
  6623  0000D3                     display_prepare@cntr:
  6624                           	opt stack 0
  6625                           
  6626                           ; 1 bytes @ 0x73
  6627  0000D3                     	ds	4
  6628  0000D7                     fat_read_from_file@file_number:
  6629                           	opt stack 0
  6630                           
  6631                           ; 1 bytes @ 0x77
  6632  0000D7                     	ds	1
  6633  0000D8                     fat_read_from_file@return_code:
  6634                           	opt stack 0
  6635                           
  6636                           ; 1 bytes @ 0x78
  6637  0000D8                     	ds	1
  6638  0000D9                     fat_read_from_file@cluster:
  6639                           	opt stack 0
  6640                           
  6641                           ; 2 bytes @ 0x79
  6642  0000D9                     	ds	2
  6643  0000DB                     fat_read_from_file@cluster_number:
  6644                           	opt stack 0
  6645                           
  6646                           ; 2 bytes @ 0x7B
  6647  0000DB                     	ds	2
  6648  0000DD                     fat_read_from_file@root:
  6649                           	opt stack 0
  6650                           
  6651                           ; 32 bytes @ 0x7D
  6652  0000DD                     	ds	6
  6653  0000E3                     ??_configFile_write:
  6654                           
  6655                           ; 1 bytes @ 0x83
  6656  0000E3                     	ds	1
  6657  0000E4                     configFile_write@file_number:
  6658                           	opt stack 0
  6659                           
  6660                           ; 1 bytes @ 0x84
  6661  0000E4                     	ds	1
  6662  0000E5                     configFile_write@file_size:
  6663                           	opt stack 0
  6664                           
  6665                           ; 4 bytes @ 0x85
  6666  0000E5                     	ds	24
  6667  0000FD                     ??_system_init:
  6668                           
  6669                           ; 1 bytes @ 0x9D
  6670  0000FD                     	ds	1
  6671  0000FE                     main@startup_timer:
  6672                           	opt stack 0
  6673                           
  6674                           ; 1 bytes @ 0x9E
  6675  0000FE                     	ds	1
  6676                           tblptru	equ	0xFF8
  6677                           tblptrh	equ	0xFF7
  6678                           tblptrl	equ	0xFF6
  6679                           tablat	equ	0xFF5
  6680                           postinc0	equ	0xFEE
  6681                           wreg	equ	0xFE8
  6682                           postdec1	equ	0xFE5
  6683                           fsr1h	equ	0xFE2
  6684                           fsr1l	equ	0xFE1
  6685                           
  6686                           	psect	cstackCOMRAM
  6687  000001                     __pcstackCOMRAM:
  6688                           	opt stack 0
  6689  000001                     ??_USBStdGetDscHandler:
  6690  000001                     ??_USBStdGetStatusHandler:
  6691  000001                     ??i2__i2c_wait_idle:
  6692  000001                     ?i2_USBTransferOnePacket:
  6693                           	opt stack 0
  6694  000001                     ?i2_ExternalFlash_MediaInitialize:
  6695                           	opt stack 0
  6696  000001                     USBConfigureEndpoint@direction:
  6697                           	opt stack 0
  6698  000001                     USBCtrlTrfTxService@byteToSend:
  6699                           	opt stack 0
  6700  000001                     USBCtrlTrfRxService@i:
  6701                           	opt stack 0
  6702  000001                     i2USBTransferOnePacket@dir:
  6703                           	opt stack 0
  6704  000001                     i2USBStallEndpoint@dir:
  6705                           	opt stack 0
  6706  000001                     i2__i2c_send@dat:
  6707                           	opt stack 0
  6708  000001                     i2SYSTEM_Initialize@pll_startup_counter:
  6709                           	opt stack 0
  6710  000001                     i2ExternalFlash_MediaInitialize@config:
  6711                           	opt stack 0
  6712  000001                     i2ExternalFlash_MediaDetect@config:
  6713                           	opt stack 0
  6714  000001                     i2memcpy@d1:
  6715                           	opt stack 0
  6716  000001                     i2memset@p1:
  6717                           	opt stack 0
  6718                           
  6719                           ; 2 bytes @ 0x0
  6720  000001                     	ds	1
  6721  000002                     ??_USBConfigureEndpoint:
  6722  000002                     ??i2_USBStallEndpoint:
  6723  000002                     USBCtrlTrfRxService@byteToRead:
  6724                           	opt stack 0
  6725  000002                     USBCtrlTrfInHandler@lastDTS:
  6726                           	opt stack 0
  6727  000002                     USBStdGetStatusHandler@p:
  6728                           	opt stack 0
  6729  000002                     i2USBTransferOnePacket@data:
  6730                           	opt stack 0
  6731                           
  6732                           ; 2 bytes @ 0x1
  6733  000002                     	ds	1
  6734  000003                     i2SYSTEM_Initialize@pll_startup_counter_3152:
  6735                           	opt stack 0
  6736  000003                     i2memcpy@s1:
  6737                           	opt stack 0
  6738  000003                     i2memset@c:
  6739                           	opt stack 0
  6740                           
  6741                           ; 2 bytes @ 0x2
  6742  000003                     	ds	1
  6743  000004                     i2USBTransferOnePacket@len:
  6744                           	opt stack 0
  6745                           
  6746                           ; 1 bytes @ 0x3
  6747  000004                     	ds	1
  6748  000005                     ??i2_USBTransferOnePacket:
  6749  000005                     i2SYSTEM_Initialize@state:
  6750                           	opt stack 0
  6751  000005                     i2memcpy@n:
  6752                           	opt stack 0
  6753  000005                     i2memset@n:
  6754                           	opt stack 0
  6755                           
  6756                           ; 2 bytes @ 0x4
  6757  000005                     	ds	1
  6758  000006                     USBConfigureEndpoint@EPNum:
  6759                           	opt stack 0
  6760  000006                     i2USBStallEndpoint@ep:
  6761                           	opt stack 0
  6762  000006                     i2__i2c_eeprom_busy@busy:
  6763                           	opt stack 0
  6764  000006                     i2__i2c_write@data:
  6765                           	opt stack 0
  6766                           
  6767                           ; 2 bytes @ 0x5
  6768  000006                     	ds	1
  6769  000007                     USBConfigureEndpoint@handle:
  6770                           	opt stack 0
  6771  000007                     i2USBStallEndpoint@p:
  6772                           	opt stack 0
  6773  000007                     i2memcpy@d:
  6774                           	opt stack 0
  6775  000007                     i2memset@p:
  6776                           	opt stack 0
  6777                           
  6778                           ; 2 bytes @ 0x6
  6779  000007                     	ds	1
  6780  000008                     i2__i2c_write@length:
  6781                           	opt stack 0
  6782                           
  6783                           ; 1 bytes @ 0x7
  6784  000008                     	ds	1
  6785  000009                     USBEnableEndpoint@options:
  6786                           	opt stack 0
  6787  000009                     i2USBDeviceInit@i:
  6788                           	opt stack 0
  6789  000009                     i2USBTransferOnePacket@ep:
  6790                           	opt stack 0
  6791  000009                     i2__i2c_write@slave_address:
  6792                           	opt stack 0
  6793  000009                     i2memcpy@s:
  6794                           	opt stack 0
  6795                           
  6796                           ; 2 bytes @ 0x8
  6797  000009                     	ds	1
  6798  00000A                     i2__i2c_write@cntr:
  6799                           	opt stack 0
  6800  00000A                     USBEnableEndpoint@p:
  6801                           	opt stack 0
  6802  00000A                     i2USBTransferOnePacket@handle:
  6803                           	opt stack 0
  6804                           
  6805                           ; 2 bytes @ 0x9
  6806  00000A                     	ds	1
  6807  00000B                     i2memcpy@tmp:
  6808                           	opt stack 0
  6809  00000B                     i2c_eeprom_write@address:
  6810                           	opt stack 0
  6811                           
  6812                           ; 2 bytes @ 0xA
  6813  00000B                     	ds	1
  6814  00000C                     ??_USBMSDInit:
  6815  00000C                     USBEnableEndpoint@ep:
  6816                           	opt stack 0
  6817  00000C                     _USBCheckMSDRequest$2534:
  6818                           	opt stack 0
  6819  00000C                     MSDTransferTerminated@handle:
  6820                           	opt stack 0
  6821                           
  6822                           ; 2 bytes @ 0xB
  6823  00000C                     	ds	1
  6824  00000D                     i2c_eeprom_write@data:
  6825                           	opt stack 0
  6826                           
  6827                           ; 2 bytes @ 0xC
  6828  00000D                     	ds	1
  6829  00000E                     _USBCheckMSDRequest$2535:
  6830                           	opt stack 0
  6831  00000E                     _MSDTransferTerminated$2623:
  6832                           	opt stack 0
  6833                           
  6834                           ; 2 bytes @ 0xD
  6835  00000E                     	ds	1
  6836  00000F                     i2c_eeprom_write@length:
  6837                           	opt stack 0
  6838                           
  6839                           ; 1 bytes @ 0xE
  6840  00000F                     	ds	1
  6841  000010                     ??_i2c_eeprom_write:
  6842  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  6843                           	opt stack 0
  6844                           
  6845                           ; 2 bytes @ 0xF
  6846  000010                     	ds	2
  6847  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  6848                           	opt stack 0
  6849                           
  6850                           ; 2 bytes @ 0x11
  6851  000012                     	ds	1
  6852  000013                     i2c_eeprom_write@dat:
  6853                           	opt stack 0
  6854                           
  6855                           ; 17 bytes @ 0x12
  6856  000013                     	ds	1
  6857  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  6858                           	opt stack 0
  6859                           
  6860                           ; 2 bytes @ 0x13
  6861  000014                     	ds	2
  6862  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  6863                           
  6864                           ; 1 bytes @ 0x15
  6865  000016                     	ds	2
  6866  000018                     ??_USBStdFeatureReqHandler:
  6867  000018                     USBStdSetCfgHandler@i:
  6868                           	opt stack 0
  6869                           
  6870                           ; 1 bytes @ 0x17
  6871  000018                     	ds	1
  6872  000019                     USBStdFeatureReqHandler@pUEP:
  6873                           	opt stack 0
  6874                           
  6875                           ; 2 bytes @ 0x18
  6876  000019                     	ds	2
  6877  00001B                     USBStdFeatureReqHandler@current_ep_data:
  6878                           	opt stack 0
  6879                           
  6880                           ; 1 bytes @ 0x1A
  6881  00001B                     	ds	1
  6882  00001C                     USBStdFeatureReqHandler@p:
  6883                           	opt stack 0
  6884                           
  6885                           ; 2 bytes @ 0x1B
  6886  00001C                     	ds	2
  6887  00001E                     ??_USBCtrlEPService:
  6888  00001E                     
  6889                           ; 1 bytes @ 0x1D
  6890  00001E                     	ds	1
  6891  00001F                     USBDeviceTasks@i:
  6892                           	opt stack 0
  6893                           
  6894                           ; 1 bytes @ 0x1E
  6895  00001F                     	ds	5
  6896  000024                     i2c_eeprom_write@slave_address:
  6897                           	opt stack 0
  6898                           
  6899                           ; 1 bytes @ 0x23
  6900  000024                     	ds	1
  6901  000025                     i2c_eeprom_write@cntr:
  6902                           	opt stack 0
  6903                           
  6904                           ; 1 bytes @ 0x24
  6905  000025                     	ds	1
  6906  000026                     i2c_eeprom_save_position@buffer:
  6907                           	opt stack 0
  6908                           
  6909                           ; 11 bytes @ 0x25
  6910  000026                     	ds	11
  6911  000031                     ??_motor_isr:
  6912                           
  6913                           ; 1 bytes @ 0x30
  6914  000031                     	ds	16
  6915  000041                     motor_isr@steps_until_standstill:
  6916                           	opt stack 0
  6917                           
  6918                           ; 2 bytes @ 0x40
  6919  000041                     	ds	2
  6920  000043                     motor_isr@steps_until_standstill_if_accelerate:
  6921                           	opt stack 0
  6922                           
  6923                           ; 2 bytes @ 0x42
  6924  000043                     	ds	2
  6925  000045                     motor_isr@steps_remaining:
  6926                           	opt stack 0
  6927                           
  6928                           ; 4 bytes @ 0x44
  6929  000045                     	ds	4
  6930  000049                     ??_SYS_InterruptHigh:
  6931                           
  6932                           ; 1 bytes @ 0x48
  6933  000049                     	ds	14
  6934                           tblptru	equ	0xFF8
  6935                           tblptrh	equ	0xFF7
  6936                           tblptrl	equ	0xFF6
  6937                           tablat	equ	0xFF5
  6938                           postinc0	equ	0xFEE
  6939                           wreg	equ	0xFE8
  6940                           postdec1	equ	0xFE5
  6941                           fsr1h	equ	0xFE2
  6942                           fsr1l	equ	0xFE1
  6943                           
  6944 ;;
  6945 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  6946 ;;
  6947 ;; *************** function _main *****************
  6948 ;; Defined at:
  6949 ;;		line 51 in file "main.c"
  6950 ;; Parameters:    Size  Location     Type
  6951 ;;		None
  6952 ;; Auto vars:     Size  Location     Type
  6953 ;;  startup_time    1  158[BANK0 ] unsigned char 
  6954 ;; Return value:  Size  Location     Type
  6955 ;;                  1    wreg      void 
  6956 ;; Registers used:
  6957 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  6958 ;; Tracked objects:
  6959 ;;		On entry : 0/0
  6960 ;;		On exit  : 0/0
  6961 ;;		Unchanged: 0/0
  6962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6964 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6966 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6967 ;;Total ram usage:        1 bytes
  6968 ;; Hardware stack levels required when called:   22
  6969 ;; This function calls:
  6970 ;;		_APP_DeviceCustomHIDTasks
  6971 ;;		_APP_DeviceMSDTasks
  6972 ;;		_SYSTEM_Initialize
  6973 ;;		_USBDeviceAttach
  6974 ;;		_USBDeviceInit
  6975 ;;		_adc_read_temperature
  6976 ;;		_display_prepare
  6977 ;;		_display_update
  6978 ;;		_encoder_statemachine
  6979 ;;		_motor_calculate_position_in_degrees
  6980 ;;		_motor_process_cue
  6981 ;;		_system_init
  6982 ;; This function is called by:
  6983 ;;		Startup code after reset
  6984 ;; This function uses a non-reentrant model
  6985 ;;
  6986                           
  6987                           	psect	text0
  6988  013DD8                     __ptext0:
  6989                           	opt stack 0
  6990  013DD8                     _main:
  6991                           	opt stack 9
  6992                           
  6993                           ;main.c: 53: uint8_t startup_timer;;main.c: 57: system_init();
  6994                           
  6995                           ;incstack = 0
  6996  013DD8  EC47  F07D         	call	_system_init	;wreg free
  6997                           
  6998                           ;main.c: 59: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  6999  013DDC  0E00               	movlw	0
  7000  013DDE  EC7A  F0A8         	call	_SYSTEM_Initialize
  7001                           
  7002                           ;main.c: 61: USBDeviceInit();
  7003  013DE2  EC01  F080         	call	_USBDeviceInit	;wreg free
  7004                           
  7005                           ;main.c: 62: USBDeviceAttach();
  7006  013DE6  EC2A  F0AF         	call	_USBDeviceAttach	;wreg free
  7007                           
  7008                           ;main.c: 65: startup_timer = 150;
  7009  013DEA  0E96               	movlw	150
  7010  013DEC  0100               	movlb	0	; () banked
  7011  013DEE  6FFE               	movwf	main@startup_timer& (0+255),b
  7012                           
  7013                           ;main.c: 66: while(startup_timer)
  7014  013DF0  D00D               	goto	l863
  7015  013DF2                     
  7016                           ; BSR set to: 0
  7017                           ;main.c: 67: {;main.c: 69: APP_DeviceMSDTasks();
  7018                           
  7019                           ; BSR set to: 0
  7020  013DF2  ECE1  F0B1         	call	_APP_DeviceMSDTasks	;wreg free
  7021                           
  7022                           ;main.c: 71: if(!os.done)
  7023  013DF6  0101               	movlb	1	; () banked
  7024  013DF8  5166               	movf	(_os+2)& (0+255),w,b	;volatile
  7025  013DFA  A4D8               	btfss	status,2,c
  7026  013DFC  D007               	goto	l863
  7027                           
  7028                           ; BSR set to: 1
  7029                           ;main.c: 72: {;main.c: 74: APP_DeviceCustomHIDTasks();
  7030  013DFE  EC76  F09C         	call	_APP_DeviceCustomHIDTasks	;wreg free
  7031                           
  7032                           ;main.c: 76: --startup_timer;
  7033  013E02  0100               	movlb	0	; () banked
  7034  013E04  07FE               	decf	main@startup_timer& (0+255),f,b
  7035                           
  7036                           ; BSR set to: 0
  7037                           ;main.c: 77: os.done = 1;
  7038  013E06  0E01               	movlw	1
  7039  013E08  0101               	movlb	1	; () banked
  7040  013E0A  6F66               	movwf	(_os+2)& (0+255),b	;volatile
  7041  013E0C                     l863:
  7042                           
  7043                           ; BSR set to: 1
  7044                           
  7045                           ; BSR set to: 1
  7046  013E0C  0100               	movlb	0	; () banked
  7047  013E0E  51FE               	movf	main@startup_timer& (0+255),w,b
  7048  013E10  A4D8               	btfss	status,2,c
  7049  013E12  D7EF               	goto	l862
  7050  013E14                     u19660:
  7051                           
  7052                           ;main.c: 83: {;main.c: 85: APP_DeviceMSDTasks();
  7053                           
  7054                           ; BSR set to: 0
  7055                           
  7056                           ;main.c: 78: };main.c: 80: };main.c: 82: while(1)
  7057                           
  7058                           ; BSR set to: 0
  7059  013E14  ECE1  F0B1         	call	_APP_DeviceMSDTasks	;wreg free
  7060                           
  7061                           ;main.c: 87: if(!os.done)
  7062  013E18  0101               	movlb	1	; () banked
  7063  013E1A  5166               	movf	(_os+2)& (0+255),w,b	;volatile
  7064  013E1C  A4D8               	btfss	status,2,c
  7065  013E1E  D7FA               	goto	u19660
  7066                           
  7067                           ; BSR set to: 1
  7068  013E20  0004               	clrwdt		;# 
  7069                           
  7070                           ;main.c: 93: APP_DeviceCustomHIDTasks();
  7071  013E22  EC76  F09C         	call	_APP_DeviceCustomHIDTasks	;wreg free
  7072                           
  7073                           ;main.c: 96: encoder_statemachine();
  7074  013E26  EC81  F09F         	call	_encoder_statemachine	;wreg free
  7075                           
  7076                           ;main.c: 99: motor_process_cue();
  7077  013E2A  EC6E  F09D         	call	_motor_process_cue	;wreg free
  7078                           
  7079                           ;main.c: 102: adc_read_temperature();
  7080  013E2E  ECA4  F075         	call	_adc_read_temperature	;wreg free
  7081                           
  7082                           ;main.c: 105: switch(os.timeSlot)
  7083  013E32  D008               	goto	l867
  7084  013E34                     
  7085                           ;main.c: 116: motor_calculate_position_in_degrees();
  7086  013E34  EC7B  F094         	call	_motor_calculate_position_in_degrees	;wreg free
  7087  013E38                     
  7088                           ;main.c: 119: display_prepare();
  7089  013E38  ECD2  F051         	call	_display_prepare	;wreg free
  7090                           
  7091                           ;main.c: 120: break;
  7092  013E3C  D014               	goto	l869
  7093  013E3E                     
  7094                           ;main.c: 123: display_update();
  7095  013E3E  EC6F  F0AE         	call	_display_update	;wreg free
  7096                           
  7097                           ;main.c: 125: }
  7098                           
  7099                           ;main.c: 124: break;
  7100  013E42  D011               	goto	l869
  7101  013E44                     l867:
  7102  013E44  0101               	movlb	1	; () banked
  7103  013E46  5165               	movf	(_os+1)& (0+255),w,b	;volatile
  7104                           
  7105                           ; Switch size 1, requested type "space"
  7106                           ; Number of cases is 5, Range of values is 0 to 7
  7107                           ; switch strategies available:
  7108                           ; Name         Instructions Cycles
  7109                           ; simple_byte           16     9 (average)
  7110                           ;	Chosen strategy is simple_byte
  7111  013E48  0A00               	xorlw	0	; case 0
  7112  013E4A  B4D8               	btfsc	status,2,c
  7113  013E4C  D00C               	goto	l869
  7114  013E4E  0A01               	xorlw	1	; case 1
  7115  013E50  B4D8               	btfsc	status,2,c
  7116  013E52  D009               	goto	l869
  7117  013E54  0A04               	xorlw	4	; case 5
  7118  013E56  B4D8               	btfsc	status,2,c
  7119  013E58  D7ED               	goto	l871
  7120  013E5A  0A03               	xorlw	3	; case 6
  7121  013E5C  B4D8               	btfsc	status,2,c
  7122  013E5E  D7EC               	goto	l872
  7123  013E60  0A01               	xorlw	1	; case 7
  7124  013E62  B4D8               	btfsc	status,2,c
  7125  013E64  D7EC               	goto	l873
  7126  013E66                     l869:
  7127                           
  7128                           ;main.c: 127: os.done = 1;
  7129                           
  7130                           ; BSR set to: 1
  7131  013E66  0E01               	movlw	1
  7132  013E68  0101               	movlb	1	; () banked
  7133  013E6A  6F66               	movwf	(_os+2)& (0+255),b	;volatile
  7134                           
  7135                           ; BSR set to: 1
  7136                           
  7137                           ; BSR set to: 1
  7138  013E6C  D7D3               	goto	u19660
  7139  013E6E                     __end_of_main:
  7140                           	opt stack 0
  7141                           tblptru	equ	0xFF8
  7142                           tblptrh	equ	0xFF7
  7143                           tblptrl	equ	0xFF6
  7144                           tablat	equ	0xFF5
  7145                           postinc0	equ	0xFEE
  7146                           wreg	equ	0xFE8
  7147                           postdec1	equ	0xFE5
  7148                           fsr1h	equ	0xFE2
  7149                           fsr1l	equ	0xFE1
  7150                           status	equ	0xFD8
  7151                           
  7152 ;; *************** function _system_init *****************
  7153 ;; Defined at:
  7154 ;;		line 177 in file "os.c"
  7155 ;; Parameters:    Size  Location     Type
  7156 ;;		None
  7157 ;; Auto vars:     Size  Location     Type
  7158 ;;		None
  7159 ;; Return value:  Size  Location     Type
  7160 ;;                  1    wreg      void 
  7161 ;; Registers used:
  7162 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7163 ;; Tracked objects:
  7164 ;;		On entry : 0/0
  7165 ;;		On exit  : 0/0
  7166 ;;		Unchanged: 0/0
  7167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7170 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7171 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7172 ;;Total ram usage:        1 bytes
  7173 ;; Hardware stack levels used:    1
  7174 ;; Hardware stack levels required when called:   20
  7175 ;; This function calls:
  7176 ;;		__backlight_init
  7177 ;;		__system_pin_setup
  7178 ;;		__system_timer0_init
  7179 ;;		_adc_init
  7180 ;;		_configFile_read
  7181 ;;		_configFile_readDefault
  7182 ;;		_configFile_write
  7183 ;;		_display_init
  7184 ;;		_display_update
  7185 ;;		_encoder_init
  7186 ;;		_fat_init
  7187 ;;		_flash_init
  7188 ;;		_i2c_eeprom_recover_position
  7189 ;;		_i2c_init
  7190 ;;		_motor_calculate_position_in_degrees
  7191 ;;		_motor_init
  7192 ;; This function is called by:
  7193 ;;		_main
  7194 ;; This function uses a non-reentrant model
  7195 ;;
  7196                           
  7197                           	psect	text1
  7198  00FA8E                     __ptext1:
  7199                           	opt stack 0
  7200  00FA8E                     _system_init:
  7201                           	opt stack 10
  7202                           
  7203                           ;os.c: 180: _system_pin_setup();
  7204                           
  7205                           ; BSR set to: 1
  7206                           ;incstack = 0
  7207  00FA8E  EC02  F0A6         	call	__system_pin_setup	;wreg free
  7208                           
  7209                           ;os.c: 183: adc_init();
  7210  00FA92  EC2D  F0A9         	call	_adc_init	;wreg free
  7211                           
  7212                           ;os.c: 186: flash_init();
  7213  00FA96  EC02  F0B2         	call	_flash_init	;wreg free
  7214                           
  7215                           ;os.c: 189: fat_init();
  7216  00FA9A  ECEA  F0B1         	call	_fat_init	;wreg free
  7217                           
  7218                           ;os.c: 192: encoder_init();
  7219  00FA9E  ECE0  F0B0         	call	_encoder_init	;wreg free
  7220                           
  7221                           ;os.c: 195: i2c_init();
  7222  00FAA2  EC8B  F0B1         	call	_i2c_init	;wreg free
  7223                           
  7224                           ;os.c: 198: display_init();
  7225  00FAA6  EC19  F0AE         	call	_display_init	;wreg free
  7226                           
  7227                           ;os.c: 199: display_update();
  7228  00FAAA  EC6F  F0AE         	call	_display_update	;wreg free
  7229                           
  7230                           ;os.c: 200: _backlight_init();
  7231  00FAAE  EC59  F0B2         	call	__backlight_init	;wreg free
  7232                           
  7233                           ;os.c: 203: motor_init();
  7234  00FAB2  EC7C  F0B1         	call	_motor_init	;wreg free
  7235                           
  7236                           ;os.c: 206: configFile_readDefault();
  7237  00FAB6  EC49  F0A3         	call	_configFile_readDefault	;wreg free
  7238                           
  7239                           ;os.c: 209: configFile_read();
  7240  00FABA  EC19  F07A         	call	_configFile_read	;wreg free
  7241                           
  7242                           ;os.c: 212: configFile_write();
  7243  00FABE  EC45  F05D         	call	_configFile_write	;wreg free
  7244                           
  7245                           ;os.c: 215: os.subTimeSlot = 0;
  7246  00FAC2  0E00               	movlw	0
  7247  00FAC4  0101               	movlb	1	; () banked
  7248  00FAC6  6F64               	movwf	_os& (0+255),b	;volatile
  7249                           
  7250                           ; BSR set to: 1
  7251                           ;os.c: 216: os.timeSlot = 0;
  7252  00FAC8  0E00               	movlw	0
  7253  00FACA  6F65               	movwf	(_os+1)& (0+255),b	;volatile
  7254                           
  7255                           ; BSR set to: 1
  7256                           ;os.c: 217: os.done = 0;
  7257  00FACC  0E00               	movlw	0
  7258  00FACE  6F66               	movwf	(_os+2)& (0+255),b	;volatile
  7259                           
  7260                           ; BSR set to: 1
  7261                           ;os.c: 218: os.encoder1Count = 0;
  7262  00FAD0  0E00               	movlw	0
  7263  00FAD2  6F67               	movwf	(_os+3)& (0+255),b	;volatile
  7264                           
  7265                           ; BSR set to: 1
  7266                           ;os.c: 219: os.button1 = 0;
  7267  00FAD4  0E00               	movlw	0
  7268  00FAD6  6F68               	movwf	(_os+4)& (0+255),b	;volatile
  7269                           
  7270                           ; BSR set to: 1
  7271                           ;os.c: 220: os.encoder2Count = 0;
  7272  00FAD8  0E00               	movlw	0
  7273  00FADA  6F69               	movwf	(_os+5)& (0+255),b	;volatile
  7274                           
  7275                           ; BSR set to: 1
  7276                           ;os.c: 221: os.button2 = 0;
  7277  00FADC  0E00               	movlw	0
  7278  00FADE  6F6A               	movwf	(_os+6)& (0+255),b	;volatile
  7279                           
  7280                           ; BSR set to: 1
  7281                           ;os.c: 222: os.current_position_in_steps = 0;
  7282  00FAE0  0E00               	movlw	0
  7283  00FAE2  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
  7284  00FAE4  0E00               	movlw	0
  7285  00FAE6  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
  7286  00FAE8  0E00               	movlw	0
  7287  00FAEA  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
  7288  00FAEC  0E00               	movlw	0
  7289  00FAEE  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
  7290                           
  7291                           ; BSR set to: 1
  7292                           ;os.c: 223: os.absolute_position = 0;
  7293  00FAF0  0E00               	movlw	0
  7294  00FAF2  6F70               	movwf	(_os+12)& (0+255),b	;volatile
  7295  00FAF4  0E00               	movlw	0
  7296  00FAF6  6F6F               	movwf	(_os+11)& (0+255),b	;volatile
  7297                           
  7298                           ; BSR set to: 1
  7299                           ;os.c: 224: os.current_position_in_degrees = 0;
  7300  00FAF8  0E00               	movlw	0
  7301  00FAFA  6F72               	movwf	(_os+14)& (0+255),b	;volatile
  7302  00FAFC  0E00               	movlw	0
  7303  00FAFE  6F71               	movwf	(_os+13)& (0+255),b	;volatile
  7304                           
  7305                           ; BSR set to: 1
  7306                           ;os.c: 225: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  7307  00FB00  0E01               	movlw	1
  7308  00FB02  6F73               	movwf	(_os+15)& (0+255),b	;volatile
  7309                           
  7310                           ; BSR set to: 1
  7311                           ;os.c: 226: os.busy = 0;
  7312  00FB04  0E00               	movlw	0
  7313  00FB06  6F74               	movwf	(_os+16)& (0+255),b	;volatile
  7314                           
  7315                           ; BSR set to: 1
  7316                           ;os.c: 227: os.setup_step_size = 0;
  7317  00FB08  0E00               	movlw	0
  7318  00FB0A  6F76               	movwf	(_os+18)& (0+255),b	;volatile
  7319  00FB0C  0E00               	movlw	0
  7320  00FB0E  6F75               	movwf	(_os+17)& (0+255),b	;volatile
  7321                           
  7322                           ; BSR set to: 1
  7323                           ;os.c: 228: os.approach_direction = MOTOR_DIRECTION_CW;
  7324  00FB10  0E01               	movlw	1
  7325  00FB12  6F77               	movwf	(_os+19)& (0+255),b	;volatile
  7326                           
  7327                           ; BSR set to: 1
  7328                           ;os.c: 229: os.division = 36;
  7329  00FB14  0E00               	movlw	0
  7330  00FB16  6F79               	movwf	(_os+21)& (0+255),b	;volatile
  7331  00FB18  0E24               	movlw	36
  7332  00FB1A  6F78               	movwf	(_os+20)& (0+255),b	;volatile
  7333                           
  7334                           ; BSR set to: 1
  7335                           ;os.c: 230: os.divide_step_size = 10;
  7336  00FB1C  0E0A               	movlw	10
  7337  00FB1E  6F7A               	movwf	(_os+22)& (0+255),b	;volatile
  7338                           
  7339                           ; BSR set to: 1
  7340                           ;os.c: 231: os.divide_position = 0;
  7341  00FB20  0E00               	movlw	0
  7342  00FB22  6F7C               	movwf	(_os+24)& (0+255),b	;volatile
  7343  00FB24  0E00               	movlw	0
  7344  00FB26  6F7B               	movwf	(_os+23)& (0+255),b	;volatile
  7345                           
  7346                           ; BSR set to: 1
  7347                           ;os.c: 232: os.divide_jump_size = 1;
  7348  00FB28  0E00               	movlw	0
  7349  00FB2A  6F7E               	movwf	(_os+26)& (0+255),b	;volatile
  7350  00FB2C  0E01               	movlw	1
  7351  00FB2E  6F7D               	movwf	(_os+25)& (0+255),b	;volatile
  7352                           
  7353                           ; BSR set to: 1
  7354                           ;os.c: 233: os.arc_step_size = 1000;
  7355  00FB30  0E03               	movlw	3
  7356  00FB32  6F80               	movwf	(_os+28)& (0+255),b	;volatile
  7357  00FB34  0EE8               	movlw	232
  7358  00FB36  6F7F               	movwf	(_os+27)& (0+255),b	;volatile
  7359                           
  7360                           ; BSR set to: 1
  7361                           ;os.c: 234: os.arc_size = 1000;
  7362  00FB38  0EE8               	movlw	232
  7363  00FB3A  6F81               	movwf	(_os+29)& (0+255),b	;volatile
  7364  00FB3C  0E03               	movlw	3
  7365  00FB3E  6F82               	movwf	(_os+30)& (0+255),b	;volatile
  7366  00FB40  0E00               	movlw	0
  7367  00FB42  6F83               	movwf	(_os+31)& (0+255),b	;volatile
  7368  00FB44  0E00               	movlw	0
  7369  00FB46  6F84               	movwf	(_os+32)& (0+255),b	;volatile
  7370                           
  7371                           ; BSR set to: 1
  7372                           ;os.c: 235: os.arc_speed = config.initial_speed_arc;
  7373  00FB48  C1A2  F185         	movff	_config+13,_os+33	;volatile
  7374  00FB4C  C1A3  F186         	movff	_config+14,_os+34	;volatile
  7375                           
  7376                           ; BSR set to: 1
  7377                           ;os.c: 236: os.arc_direction = MOTOR_DIRECTION_CW;
  7378  00FB50  0E01               	movlw	1
  7379  00FB52  6F87               	movwf	(_os+35)& (0+255),b	;volatile
  7380                           
  7381                           ; BSR set to: 1
  7382                           ;os.c: 237: os.manual_speed = config.initial_speed_manual;
  7383  00FB54  C1A6  F188         	movff	_config+17,_os+36	;volatile
  7384  00FB58  C1A7  F189         	movff	_config+18,_os+37	;volatile
  7385                           
  7386                           ; BSR set to: 1
  7387                           ;os.c: 238: os.manual_direction = MOTOR_DIRECTION_CW;
  7388  00FB5C  0E01               	movlw	1
  7389  00FB5E  6F8A               	movwf	(_os+38)& (0+255),b	;volatile
  7390                           
  7391                           ; BSR set to: 1
  7392                           ;os.c: 239: os.beep_count = 0;
  7393  00FB60  0E00               	movlw	0
  7394  00FB62  6F8B               	movwf	(_os+39)& (0+255),b	;volatile
  7395                           
  7396                           ; BSR set to: 1
  7397                           ;os.c: 240: os.temperature[0] = 0;
  7398  00FB64  0E00               	movlw	0
  7399  00FB66  6F8D               	movwf	(_os+41)& (0+255),b	;volatile
  7400  00FB68  0E00               	movlw	0
  7401  00FB6A  6F8C               	movwf	(_os+40)& (0+255),b	;volatile
  7402                           
  7403                           ; BSR set to: 1
  7404                           ;os.c: 241: os.temperature[1] = 0;
  7405  00FB6C  0E00               	movlw	0
  7406  00FB6E  6F8F               	movwf	(_os+43)& (0+255),b	;volatile
  7407  00FB70  0E00               	movlw	0
  7408  00FB72  6F8E               	movwf	(_os+42)& (0+255),b	;volatile
  7409                           
  7410                           ; BSR set to: 1
  7411                           ;os.c: 242: os.external_temperature_adc_sum = 0;
  7412  00FB74  0E00               	movlw	0
  7413  00FB76  6F91               	movwf	(_os+45)& (0+255),b	;volatile
  7414  00FB78  0E00               	movlw	0
  7415  00FB7A  6F90               	movwf	(_os+44)& (0+255),b	;volatile
  7416                           
  7417                           ; BSR set to: 1
  7418                           ;os.c: 243: os.external_temperature_count = 0;
  7419  00FB7C  0E00               	movlw	0
  7420  00FB7E  6F92               	movwf	(_os+46)& (0+255),b	;volatile
  7421                           
  7422                           ; BSR set to: 1
  7423                           ;os.c: 244: os.fan_on = 0;
  7424  00FB80  0E00               	movlw	0
  7425  00FB82  6F93               	movwf	(_os+47)& (0+255),b	;volatile
  7426                           
  7427                           ; BSR set to: 1
  7428                           ;os.c: 245: os.brake_on = 0;
  7429  00FB84  0E00               	movlw	0
  7430  00FB86  6F94               	movwf	(_os+48)& (0+255),b	;volatile
  7431                           
  7432                           ; BSR set to: 1
  7433                           ;os.c: 248: i2c_eeprom_recover_position();
  7434  00FB88  EC08  F09E         	call	_i2c_eeprom_recover_position	;wreg free
  7435                           
  7436                           ;os.c: 249: if(os.current_position_in_steps>config.full_circle_in_steps)
  7437  00FB8C  0101               	movlb	1	; () banked
  7438  00FB8E  516B               	movf	(_os+7)& (0+255),w,b	;volatile
  7439  00FB90  5D95               	subwf	_config& (0+255),w,b
  7440  00FB92  516C               	movf	(_os+8)& (0+255),w,b	;volatile
  7441  00FB94  5996               	subwfb	(_config+1)& (0+255),w,b
  7442  00FB96  516D               	movf	(_os+9)& (0+255),w,b	;volatile
  7443  00FB98  5997               	subwfb	(_config+2)& (0+255),w,b
  7444  00FB9A  516E               	movf	(_os+10)& (0+255),w,b	;volatile
  7445  00FB9C  5998               	subwfb	(_config+3)& (0+255),w,b
  7446  00FB9E  B0D8               	btfsc	status,0,c
  7447  00FBA0  D00C               	goto	l1082
  7448                           
  7449                           ; BSR set to: 1
  7450                           ;os.c: 250: {;os.c: 251: os.current_position_in_steps = 0;
  7451  00FBA2  0E00               	movlw	0
  7452  00FBA4  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
  7453  00FBA6  0E00               	movlw	0
  7454  00FBA8  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
  7455  00FBAA  0E00               	movlw	0
  7456  00FBAC  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
  7457  00FBAE  0E00               	movlw	0
  7458  00FBB0  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
  7459                           
  7460                           ;os.c: 252: os.absolute_position = 0;
  7461  00FBB2  0E00               	movlw	0
  7462  00FBB4  6F70               	movwf	(_os+12)& (0+255),b	;volatile
  7463  00FBB6  0E00               	movlw	0
  7464  00FBB8  6F6F               	movwf	(_os+11)& (0+255),b	;volatile
  7465  00FBBA                     l1082:
  7466                           
  7467                           ; BSR set to: 1
  7468                           ;os.c: 253: };os.c: 254: motor_calculate_position_in_degrees();
  7469                           
  7470                           ; BSR set to: 1
  7471  00FBBA  EC7B  F094         	call	_motor_calculate_position_in_degrees	;wreg free
  7472                           
  7473                           ;os.c: 255: if(os.division>3600 || os.divide_position>=os.division)
  7474  00FBBE  0101               	movlb	1	; () banked
  7475  00FBC0  BF79               	btfsc	(_os+21)& (0+255),7,b	;volatile
  7476  00FBC2  D006               	goto	u18900
  7477  00FBC4  0E11               	movlw	17
  7478  00FBC6  5D78               	subwf	(_os+20)& (0+255),w,b	;volatile
  7479  00FBC8  0E0E               	movlw	14
  7480  00FBCA  5979               	subwfb	(_os+21)& (0+255),w,b	;volatile
  7481  00FBCC  B0D8               	btfsc	status,0,c
  7482  00FBCE  D00D               	goto	u18910
  7483  00FBD0                     u18900:
  7484                           
  7485                           ; BSR set to: 1
  7486  00FBD0  5178               	movf	(_os+20)& (0+255),w,b	;volatile
  7487  00FBD2  5D7B               	subwf	(_os+23)& (0+255),w,b	;volatile
  7488  00FBD4  517C               	movf	(_os+24)& (0+255),w,b	;volatile
  7489  00FBD6  0A80               	xorlw	128
  7490  00FBD8  0100               	movlb	0	; () banked
  7491  00FBDA  6FFD               	movwf	??_system_init& (0+255),b
  7492  00FBDC  0101               	movlb	1	; () banked
  7493  00FBDE  5179               	movf	(_os+21)& (0+255),w,b	;volatile
  7494  00FBE0  0A80               	xorlw	128
  7495  00FBE2  0100               	movlb	0	; () banked
  7496  00FBE4  59FD               	subwfb	??_system_init& (0+255),w,b
  7497  00FBE6  A0D8               	btfss	status,0,c
  7498  00FBE8  D009               	goto	l1083
  7499  00FBEA                     u18910:
  7500                           
  7501                           ;os.c: 256: {;os.c: 257: os.division = 36;
  7502                           
  7503                           ; BSR set to: 0
  7504  00FBEA  0E00               	movlw	0
  7505  00FBEC  0101               	movlb	1	; () banked
  7506  00FBEE  6F79               	movwf	(_os+21)& (0+255),b	;volatile
  7507  00FBF0  0E24               	movlw	36
  7508  00FBF2  6F78               	movwf	(_os+20)& (0+255),b	;volatile
  7509                           
  7510                           ;os.c: 258: os.divide_position = 0;
  7511  00FBF4  0E00               	movlw	0
  7512  00FBF6  6F7C               	movwf	(_os+24)& (0+255),b	;volatile
  7513  00FBF8  0E00               	movlw	0
  7514  00FBFA  6F7B               	movwf	(_os+23)& (0+255),b	;volatile
  7515  00FBFC                     l1083:
  7516                           
  7517                           ;os.c: 259: };os.c: 262: _system_timer0_init();
  7518                           
  7519                           ; BSR set to: 1
  7520  00FBFC  ECFF  F0AF         	call	__system_timer0_init	;wreg free
  7521  00FC00  0012               	return		;funcret
  7522  00FC02                     __end_of_system_init:
  7523                           	opt stack 0
  7524                           tblptru	equ	0xFF8
  7525                           tblptrh	equ	0xFF7
  7526                           tblptrl	equ	0xFF6
  7527                           tablat	equ	0xFF5
  7528                           postinc0	equ	0xFEE
  7529                           wreg	equ	0xFE8
  7530                           postdec1	equ	0xFE5
  7531                           fsr1h	equ	0xFE2
  7532                           fsr1l	equ	0xFE1
  7533                           status	equ	0xFD8
  7534                           
  7535 ;; *************** function _motor_init *****************
  7536 ;; Defined at:
  7537 ;;		line 646 in file "motor.c"
  7538 ;; Parameters:    Size  Location     Type
  7539 ;;		None
  7540 ;; Auto vars:     Size  Location     Type
  7541 ;;		None
  7542 ;; Return value:  Size  Location     Type
  7543 ;;                  1    wreg      void 
  7544 ;; Registers used:
  7545 ;;		wreg, status,2
  7546 ;; Tracked objects:
  7547 ;;		On entry : 0/0
  7548 ;;		On exit  : 0/0
  7549 ;;		Unchanged: 0/0
  7550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7555 ;;Total ram usage:        0 bytes
  7556 ;; Hardware stack levels used:    1
  7557 ;; Hardware stack levels required when called:   10
  7558 ;; This function calls:
  7559 ;;		Nothing
  7560 ;; This function is called by:
  7561 ;;		_system_init
  7562 ;; This function uses a non-reentrant model
  7563 ;;
  7564                           
  7565                           	psect	text2
  7566  0162F8                     __ptext2:
  7567                           	opt stack 0
  7568  0162F8                     _motor_init:
  7569                           	opt stack 19
  7570                           
  7571                           ;motor.c: 649: motor_cue_read_index = 0;
  7572                           
  7573                           ;incstack = 0
  7574  0162F8  0E00               	movlw	0
  7575  0162FA  0101               	movlb	1	; () banked
  7576  0162FC  6F4C               	movwf	_motor_cue_read_index& (0+255),b
  7577                           
  7578                           ;motor.c: 650: motor_cue_write_index = 0;
  7579  0162FE  0E00               	movlw	0
  7580  016300  6F4B               	movwf	_motor_cue_write_index& (0+255),b
  7581                           
  7582                           ; BSR set to: 1
  7583                           ;motor.c: 656: CCPTMRS0bits.C2TSEL = 0b000;
  7584  016302  010F               	movlb	15	; () banked
  7585  016304  9752               	bcf	82,3,b	;volatile
  7586  016306  9952               	bcf	82,4,b	;volatile
  7587  016308  9B52               	bcf	82,5,b	;volatile
  7588                           
  7589                           ;motor.c: 661: CCP1CONbits.P1M = 0b00;
  7590  01630A  0E3F               	movlw	-193
  7591  01630C  16BA               	andwf	4026,f,c	;volatile
  7592                           
  7593                           ;motor.c: 664: CCP1CONbits.DC1B = 0b00;
  7594  01630E  0ECF               	movlw	-49
  7595  016310  16BA               	andwf	4026,f,c	;volatile
  7596                           
  7597                           ; BSR set to: 15
  7598                           ;motor.c: 667: LATBbits.LB0 = 0;
  7599  016312  908A               	bcf	3978,0,c	;volatile
  7600                           
  7601                           ; BSR set to: 15
  7602  016314  0012               	return		;funcret
  7603  016316                     __end_of_motor_init:
  7604                           	opt stack 0
  7605                           tblptru	equ	0xFF8
  7606                           tblptrh	equ	0xFF7
  7607                           tblptrl	equ	0xFF6
  7608                           tablat	equ	0xFF5
  7609                           postinc0	equ	0xFEE
  7610                           wreg	equ	0xFE8
  7611                           postdec1	equ	0xFE5
  7612                           fsr1h	equ	0xFE2
  7613                           fsr1l	equ	0xFE1
  7614                           status	equ	0xFD8
  7615                           
  7616 ;; *************** function _motor_calculate_position_in_degrees *****************
  7617 ;; Defined at:
  7618 ;;		line 548 in file "motor.c"
  7619 ;; Parameters:    Size  Location     Type
  7620 ;;		None
  7621 ;; Auto vars:     Size  Location     Type
  7622 ;;  tmp             4   49[BANK0 ] float 
  7623 ;; Return value:  Size  Location     Type
  7624 ;;                  1    wreg      void 
  7625 ;; Registers used:
  7626 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7627 ;; Tracked objects:
  7628 ;;		On entry : 0/0
  7629 ;;		On exit  : 0/0
  7630 ;;		Unchanged: 0/0
  7631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7633 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7635 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7636 ;;Total ram usage:        4 bytes
  7637 ;; Hardware stack levels used:    1
  7638 ;; Hardware stack levels required when called:   11
  7639 ;; This function calls:
  7640 ;;		___fldiv
  7641 ;;		___flmul
  7642 ;;		___fltol
  7643 ;;		___xxtofl
  7644 ;; This function is called by:
  7645 ;;		_main
  7646 ;;		_system_init
  7647 ;; This function uses a non-reentrant model
  7648 ;;
  7649                           
  7650                           	psect	text3
  7651  0128F6                     __ptext3:
  7652                           	opt stack 0
  7653  0128F6                     _motor_calculate_position_in_degrees:
  7654                           	opt stack 18
  7655                           
  7656                           ;motor.c: 550: float tmp;;motor.c: 552: tmp = (float) os.current_position_in_steps;
  7657                           
  7658                           ; BSR set to: 15
  7659                           ;incstack = 0
  7660  0128F6  C16B  F06A         	movff	_os+7,___xxtofl@val	;volatile
  7661  0128FA  C16C  F06B         	movff	_os+8,___xxtofl@val+1	;volatile
  7662  0128FE  C16D  F06C         	movff	_os+9,___xxtofl@val+2	;volatile
  7663  012902  C16E  F06D         	movff	_os+10,___xxtofl@val+3	;volatile
  7664  012906  0E00               	movlw	0
  7665  012908  EC91  F082         	call	___xxtofl
  7666  01290C  C06A  F091         	movff	?___xxtofl,motor_calculate_position_in_degrees@tmp
  7667  012910  C06B  F092         	movff	?___xxtofl+1,motor_calculate_position_in_degrees@tmp+1
  7668  012914  C06C  F093         	movff	?___xxtofl+2,motor_calculate_position_in_degrees@tmp+2
  7669  012918  C06D  F094         	movff	?___xxtofl+3,motor_calculate_position_in_degrees@tmp+3
  7670                           
  7671                           ;motor.c: 553: tmp *= 36000;
  7672  01291C  C091  F078         	movff	motor_calculate_position_in_degrees@tmp,___flmul@b
  7673  012920  C092  F079         	movff	motor_calculate_position_in_degrees@tmp+1,___flmul@b+1
  7674  012924  C093  F07A         	movff	motor_calculate_position_in_degrees@tmp+2,___flmul@b+2
  7675  012928  C094  F07B         	movff	motor_calculate_position_in_degrees@tmp+3,___flmul@b+3
  7676  01292C  0E00               	movlw	0
  7677  01292E  0100               	movlb	0	; () banked
  7678  012930  6F7C               	movwf	___flmul@a& (0+255),b
  7679  012932  0EA0               	movlw	160
  7680  012934  6F7D               	movwf	(___flmul@a+1)& (0+255),b
  7681  012936  0E0C               	movlw	12
  7682  012938  6F7E               	movwf	(___flmul@a+2)& (0+255),b
  7683  01293A  0E47               	movlw	71
  7684  01293C  6F7F               	movwf	(___flmul@a+3)& (0+255),b
  7685  01293E  EC2B  F063         	call	___flmul	;wreg free
  7686  012942  C078  F091         	movff	?___flmul,motor_calculate_position_in_degrees@tmp
  7687  012946  C079  F092         	movff	?___flmul+1,motor_calculate_position_in_degrees@tmp+1
  7688  01294A  C07A  F093         	movff	?___flmul+2,motor_calculate_position_in_degrees@tmp+2
  7689  01294E  C07B  F094         	movff	?___flmul+3,motor_calculate_position_in_degrees@tmp+3
  7690                           
  7691                           ;motor.c: 554: tmp /= config.full_circle_in_steps;
  7692  012952  C091  F078         	movff	motor_calculate_position_in_degrees@tmp,___fldiv@b
  7693  012956  C092  F079         	movff	motor_calculate_position_in_degrees@tmp+1,___fldiv@b+1
  7694  01295A  C093  F07A         	movff	motor_calculate_position_in_degrees@tmp+2,___fldiv@b+2
  7695  01295E  C094  F07B         	movff	motor_calculate_position_in_degrees@tmp+3,___fldiv@b+3
  7696  012962  C195  F06A         	movff	_config,___xxtofl@val
  7697  012966  C196  F06B         	movff	_config+1,___xxtofl@val+1
  7698  01296A  C197  F06C         	movff	_config+2,___xxtofl@val+2
  7699  01296E  C198  F06D         	movff	_config+3,___xxtofl@val+3
  7700  012972  0E00               	movlw	0
  7701  012974  EC91  F082         	call	___xxtofl
  7702  012978  C06A  F07C         	movff	?___xxtofl,___fldiv@a
  7703  01297C  C06B  F07D         	movff	?___xxtofl+1,___fldiv@a+1
  7704  012980  C06C  F07E         	movff	?___xxtofl+2,___fldiv@a+2
  7705  012984  C06D  F07F         	movff	?___xxtofl+3,___fldiv@a+3
  7706  012988  EC53  F069         	call	___fldiv	;wreg free
  7707  01298C  C078  F091         	movff	?___fldiv,motor_calculate_position_in_degrees@tmp
  7708  012990  C079  F092         	movff	?___fldiv+1,motor_calculate_position_in_degrees@tmp+1
  7709  012994  C07A  F093         	movff	?___fldiv+2,motor_calculate_position_in_degrees@tmp+2
  7710  012998  C07B  F094         	movff	?___fldiv+3,motor_calculate_position_in_degrees@tmp+3
  7711                           
  7712                           ;motor.c: 556: os.current_position_in_degrees = (uint16_t) tmp;
  7713  01299C  C091  F060         	movff	motor_calculate_position_in_degrees@tmp,___fltol@f1
  7714  0129A0  C092  F061         	movff	motor_calculate_position_in_degrees@tmp+1,___fltol@f1+1
  7715  0129A4  C093  F062         	movff	motor_calculate_position_in_degrees@tmp+2,___fltol@f1+2
  7716  0129A8  C094  F063         	movff	motor_calculate_position_in_degrees@tmp+3,___fltol@f1+3
  7717  0129AC  ECEA  F094         	call	___fltol	;wreg free
  7718  0129B0  C060  F171         	movff	?___fltol,_os+13	;volatile
  7719  0129B4  C061  F172         	movff	?___fltol+1,_os+14	;volatile
  7720                           
  7721                           ;motor.c: 557: if(os.current_position_in_degrees==36000)
  7722  0129B8  0EA0               	movlw	160
  7723  0129BA  0101               	movlb	1	; () banked
  7724  0129BC  1971               	xorwf	(_os+13)& (0+255),w,b	;volatile
  7725  0129BE  E109               	bnz	l2564
  7726  0129C0  0E8C               	movlw	140
  7727  0129C2  1972               	xorwf	(_os+14)& (0+255),w,b	;volatile
  7728  0129C4  A4D8               	btfss	status,2,c
  7729  0129C6  0012               	return	
  7730                           
  7731                           ; BSR set to: 1
  7732                           ;motor.c: 558: {;motor.c: 560: os.current_position_in_degrees = 0;
  7733  0129C8  0E00               	movlw	0
  7734  0129CA  6F72               	movwf	(_os+14)& (0+255),b	;volatile
  7735  0129CC  0E00               	movlw	0
  7736  0129CE  6F71               	movwf	(_os+13)& (0+255),b	;volatile
  7737  0129D0  0012               	return	
  7738  0129D2                     l2564:
  7739                           
  7740                           ; BSR set to: 1
  7741  0129D2  0012               	return		;funcret
  7742  0129D4                     __end_of_motor_calculate_position_in_degrees:
  7743                           	opt stack 0
  7744                           tblptru	equ	0xFF8
  7745                           tblptrh	equ	0xFF7
  7746                           tblptrl	equ	0xFF6
  7747                           tablat	equ	0xFF5
  7748                           postinc0	equ	0xFEE
  7749                           wreg	equ	0xFE8
  7750                           postdec1	equ	0xFE5
  7751                           fsr1h	equ	0xFE2
  7752                           fsr1l	equ	0xFE1
  7753                           status	equ	0xFD8
  7754                           
  7755 ;; *************** function _i2c_init *****************
  7756 ;; Defined at:
  7757 ;;		line 26 in file "i2c.c"
  7758 ;; Parameters:    Size  Location     Type
  7759 ;;		None
  7760 ;; Auto vars:     Size  Location     Type
  7761 ;;		None
  7762 ;; Return value:  Size  Location     Type
  7763 ;;                  1    wreg      void 
  7764 ;; Registers used:
  7765 ;;		wreg, status,2
  7766 ;; Tracked objects:
  7767 ;;		On entry : 0/0
  7768 ;;		On exit  : 0/0
  7769 ;;		Unchanged: 0/0
  7770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7775 ;;Total ram usage:        0 bytes
  7776 ;; Hardware stack levels used:    1
  7777 ;; Hardware stack levels required when called:   10
  7778 ;; This function calls:
  7779 ;;		Nothing
  7780 ;; This function is called by:
  7781 ;;		_system_init
  7782 ;; This function uses a non-reentrant model
  7783 ;;
  7784                           
  7785                           	psect	text4
  7786  016316                     __ptext4:
  7787                           	opt stack 0
  7788  016316                     _i2c_init:
  7789                           	opt stack 19
  7790                           
  7791                           ;i2c.c: 28: TRISBbits.TRISB5 = 1;
  7792                           
  7793                           ; BSR set to: 1
  7794                           ;incstack = 0
  7795  016316  8A93               	bsf	3987,5,c	;volatile
  7796                           
  7797                           ;i2c.c: 29: TRISBbits.TRISB4 = 1;
  7798  016318  8893               	bsf	3987,4,c	;volatile
  7799                           
  7800                           ;i2c.c: 31: SSP1STATbits.SMP = 1;
  7801  01631A  8EC7               	bsf	4039,7,c	;volatile
  7802                           
  7803                           ;i2c.c: 32: SSP1STATbits.CKE = 0;
  7804  01631C  9CC7               	bcf	4039,6,c	;volatile
  7805                           
  7806                           ;i2c.c: 34: SSP1ADD = 119;
  7807  01631E  0E77               	movlw	119
  7808  016320  6EC8               	movwf	4040,c	;volatile
  7809                           
  7810                           ;i2c.c: 36: SSP1CON1bits.WCOL = 0;
  7811  016322  9EC6               	bcf	4038,7,c	;volatile
  7812                           
  7813                           ;i2c.c: 37: SSP1CON1bits.SSPOV = 0;
  7814  016324  9CC6               	bcf	4038,6,c	;volatile
  7815                           
  7816                           ;i2c.c: 38: SSP1CON1bits.SSPM = 0b1000;
  7817  016326  50C6               	movf	4038,w,c	;volatile
  7818  016328  0BF0               	andlw	-16
  7819  01632A  0908               	iorlw	8
  7820  01632C  6EC6               	movwf	4038,c	;volatile
  7821                           
  7822                           ;i2c.c: 39: SSP1CON1bits.SSPEN = 1;
  7823  01632E  8AC6               	bsf	4038,5,c	;volatile
  7824  016330  0012               	return		;funcret
  7825  016332                     __end_of_i2c_init:
  7826                           	opt stack 0
  7827                           tblptru	equ	0xFF8
  7828                           tblptrh	equ	0xFF7
  7829                           tblptrl	equ	0xFF6
  7830                           tablat	equ	0xFF5
  7831                           postinc0	equ	0xFEE
  7832                           wreg	equ	0xFE8
  7833                           postdec1	equ	0xFE5
  7834                           fsr1h	equ	0xFE2
  7835                           fsr1l	equ	0xFE1
  7836                           status	equ	0xFD8
  7837                           
  7838 ;; *************** function _i2c_eeprom_recover_position *****************
  7839 ;; Defined at:
  7840 ;;		line 316 in file "i2c.c"
  7841 ;; Parameters:    Size  Location     Type
  7842 ;;		None
  7843 ;; Auto vars:     Size  Location     Type
  7844 ;;  buffer         11   25[BANK0 ] unsigned char [11]
  7845 ;; Return value:  Size  Location     Type
  7846 ;;                  1    wreg      void 
  7847 ;; Registers used:
  7848 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7849 ;; Tracked objects:
  7850 ;;		On entry : 0/0
  7851 ;;		On exit  : 0/0
  7852 ;;		Unchanged: 0/0
  7853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7855 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7857 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7858 ;;Total ram usage:       11 bytes
  7859 ;; Hardware stack levels used:    1
  7860 ;; Hardware stack levels required when called:   13
  7861 ;; This function calls:
  7862 ;;		_i2c_eeprom_read
  7863 ;;		_memcpy
  7864 ;; This function is called by:
  7865 ;;		_system_init
  7866 ;; This function uses a non-reentrant model
  7867 ;;
  7868                           
  7869                           	psect	text5
  7870  013C10                     __ptext5:
  7871                           	opt stack 0
  7872  013C10                     _i2c_eeprom_recover_position:
  7873                           	opt stack 16
  7874                           
  7875                           ;i2c.c: 318: uint8_t buffer[11];;i2c.c: 324: i2c_eeprom_read(0x200, &buffer[0], 11);
  7876                           
  7877                           ;incstack = 0
  7878  013C10  0E02               	movlw	2
  7879  013C12  0100               	movlb	0	; () banked
  7880  013C14  6F72               	movwf	(i2c_eeprom_read@address+1)& (0+255),b
  7881  013C16  0E00               	movlw	0
  7882  013C18  6F71               	movwf	i2c_eeprom_read@address& (0+255),b
  7883  013C1A  0E79               	movlw	low i2c_eeprom_recover_position@buffer
  7884  013C1C  6F73               	movwf	i2c_eeprom_read@data& (0+255),b
  7885  013C1E  0E00               	movlw	high i2c_eeprom_recover_position@buffer
  7886  013C20  6F74               	movwf	(i2c_eeprom_read@data+1)& (0+255),b
  7887  013C22  0E0B               	movlw	11
  7888  013C24  6F75               	movwf	i2c_eeprom_read@length& (0+255),b
  7889  013C26  ECDD  F0A9         	call	_i2c_eeprom_read	;wreg free
  7890                           
  7891                           ;i2c.c: 327: memcpy(&os.current_position_in_steps, &buffer[0], 4);
  7892  013C2A  0E6B               	movlw	low (_os+7)
  7893  013C2C  0100               	movlb	0	; () banked
  7894  013C2E  6F60               	movwf	memcpy@d1& (0+255),b
  7895  013C30  0E01               	movlw	high (_os+7)
  7896  013C32  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  7897  013C34  0E79               	movlw	low i2c_eeprom_recover_position@buffer
  7898  013C36  6F62               	movwf	memcpy@s1& (0+255),b
  7899  013C38  0E00               	movlw	high i2c_eeprom_recover_position@buffer
  7900  013C3A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  7901  013C3C  0E00               	movlw	0
  7902  013C3E  6F65               	movwf	(memcpy@n+1)& (0+255),b
  7903  013C40  0E04               	movlw	4
  7904  013C42  6F64               	movwf	memcpy@n& (0+255),b
  7905  013C44  EC93  F0A7         	call	_memcpy	;wreg free
  7906                           
  7907                           ;i2c.c: 328: memcpy(&os.absolute_position, &buffer[4], 2);
  7908  013C48  0E6F               	movlw	low (_os+11)
  7909  013C4A  0100               	movlb	0	; () banked
  7910  013C4C  6F60               	movwf	memcpy@d1& (0+255),b
  7911  013C4E  0E01               	movlw	high (_os+11)
  7912  013C50  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  7913  013C52  0E7D               	movlw	low (i2c_eeprom_recover_position@buffer+4)
  7914  013C54  6F62               	movwf	memcpy@s1& (0+255),b
  7915  013C56  0E00               	movlw	high (i2c_eeprom_recover_position@buffer+4)
  7916  013C58  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  7917  013C5A  0E00               	movlw	0
  7918  013C5C  6F65               	movwf	(memcpy@n+1)& (0+255),b
  7919  013C5E  0E02               	movlw	2
  7920  013C60  6F64               	movwf	memcpy@n& (0+255),b
  7921  013C62  EC93  F0A7         	call	_memcpy	;wreg free
  7922                           
  7923                           ;i2c.c: 329: os.approach_direction = buffer[6];
  7924  013C66  C07F  F177         	movff	i2c_eeprom_recover_position@buffer+6,_os+19	;volatile
  7925                           
  7926                           ;i2c.c: 330: memcpy(&os.division, &buffer[7], 2);
  7927  013C6A  0E78               	movlw	low (_os+20)
  7928  013C6C  0100               	movlb	0	; () banked
  7929  013C6E  6F60               	movwf	memcpy@d1& (0+255),b
  7930  013C70  0E01               	movlw	high (_os+20)
  7931  013C72  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  7932  013C74  0E80               	movlw	low (i2c_eeprom_recover_position@buffer+7)
  7933  013C76  6F62               	movwf	memcpy@s1& (0+255),b
  7934  013C78  0E00               	movlw	high (i2c_eeprom_recover_position@buffer+7)
  7935  013C7A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  7936  013C7C  0E00               	movlw	0
  7937  013C7E  6F65               	movwf	(memcpy@n+1)& (0+255),b
  7938  013C80  0E02               	movlw	2
  7939  013C82  6F64               	movwf	memcpy@n& (0+255),b
  7940  013C84  EC93  F0A7         	call	_memcpy	;wreg free
  7941                           
  7942                           ;i2c.c: 331: memcpy(&os.divide_position, &buffer[9], 2);
  7943  013C88  0E7B               	movlw	low (_os+23)
  7944  013C8A  0100               	movlb	0	; () banked
  7945  013C8C  6F60               	movwf	memcpy@d1& (0+255),b
  7946  013C8E  0E01               	movlw	high (_os+23)
  7947  013C90  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  7948  013C92  0E82               	movlw	low (i2c_eeprom_recover_position@buffer+9)
  7949  013C94  6F62               	movwf	memcpy@s1& (0+255),b
  7950  013C96  0E00               	movlw	high (i2c_eeprom_recover_position@buffer+9)
  7951  013C98  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  7952  013C9A  0E00               	movlw	0
  7953  013C9C  6F65               	movwf	(memcpy@n+1)& (0+255),b
  7954  013C9E  0E02               	movlw	2
  7955  013CA0  6F64               	movwf	memcpy@n& (0+255),b
  7956  013CA2  EC93  F0A7         	call	_memcpy	;wreg free
  7957  013CA6  0012               	return		;funcret
  7958  013CA8                     __end_of_i2c_eeprom_recover_position:
  7959                           	opt stack 0
  7960                           tblptru	equ	0xFF8
  7961                           tblptrh	equ	0xFF7
  7962                           tblptrl	equ	0xFF6
  7963                           tablat	equ	0xFF5
  7964                           postinc0	equ	0xFEE
  7965                           wreg	equ	0xFE8
  7966                           postdec1	equ	0xFE5
  7967                           fsr1h	equ	0xFE2
  7968                           fsr1l	equ	0xFE1
  7969                           status	equ	0xFD8
  7970                           
  7971 ;; *************** function _i2c_eeprom_read *****************
  7972 ;; Defined at:
  7973 ;;		line 277 in file "i2c.c"
  7974 ;; Parameters:    Size  Location     Type
  7975 ;;  address         2   17[BANK0 ] unsigned int 
  7976 ;;  data            2   19[BANK0 ] PTR unsigned char 
  7977 ;;		 -> i2c_eeprom_recover_position@buffer(11), i2c_eeprom_readInt16@data(2), i2c_eeprom_readUint32@data(4), i2c_eeprom_
      +readUint16@data(2), 
  7978 ;;  length          1   21[BANK0 ] unsigned char 
  7979 ;; Auto vars:     Size  Location     Type
  7980 ;;  slave_addres    1   24[BANK0 ] unsigned char 
  7981 ;;  addr            1   23[BANK0 ] unsigned char 
  7982 ;; Return value:  Size  Location     Type
  7983 ;;                  1    wreg      void 
  7984 ;; Registers used:
  7985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7986 ;; Tracked objects:
  7987 ;;		On entry : 0/0
  7988 ;;		On exit  : 0/0
  7989 ;;		Unchanged: 0/0
  7990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7991 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7992 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7993 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7994 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7995 ;;Total ram usage:        8 bytes
  7996 ;; Hardware stack levels used:    1
  7997 ;; Hardware stack levels required when called:   12
  7998 ;; This function calls:
  7999 ;;		__i2c_eeprom_busy
  8000 ;;		__i2c_read
  8001 ;;		__i2c_write
  8002 ;; This function is called by:
  8003 ;;		_i2c_eeprom_recover_position
  8004 ;;		_i2c_eeprom_readUint16
  8005 ;;		_i2c_eeprom_readUint32
  8006 ;;		_i2c_eeprom_readInt16
  8007 ;; This function uses a non-reentrant model
  8008 ;;
  8009                           
  8010                           	psect	text6
  8011  0153BA                     __ptext6:
  8012                           	opt stack 0
  8013  0153BA                     _i2c_eeprom_read:
  8014                           	opt stack 16
  8015                           
  8016                           ;i2c.c: 279: uint8_t slave_address;;i2c.c: 280: uint8_t addr;;i2c.c: 281: addr = address
      +                           & 0xFF;
  8017                           
  8018                           ;incstack = 0
  8019  0153BA  C071  F077         	movff	i2c_eeprom_read@address,i2c_eeprom_read@addr
  8020                           
  8021                           ;i2c.c: 282: address &= 0b0000011100000000;
  8022  0153BE  0100               	movlb	0	; () banked
  8023  0153C0  0E00               	movlw	0
  8024  0153C2  1771               	andwf	i2c_eeprom_read@address& (0+255),f,b
  8025  0153C4  0E07               	movlw	7
  8026  0153C6  1772               	andwf	(i2c_eeprom_read@address+1)& (0+255),f,b
  8027                           
  8028                           ;i2c.c: 283: address >>= 7;
  8029  0153C8  0E07               	movlw	7
  8030  0153CA  6F76               	movwf	??_i2c_eeprom_read& (0+255),b
  8031  0153CC                     u15325:
  8032  0153CC  90D8               	bcf	status,0,c
  8033  0153CE  3372               	rrcf	(i2c_eeprom_read@address+1)& (0+255),f,b
  8034  0153D0  3371               	rrcf	i2c_eeprom_read@address& (0+255),f,b
  8035  0153D2  2F76               	decfsz	??_i2c_eeprom_read& (0+255),f,b
  8036  0153D4  D7FB               	goto	u15325
  8037                           
  8038                           ;i2c.c: 284: slave_address = 0b10100000 | address;
  8039  0153D6  5171               	movf	i2c_eeprom_read@address& (0+255),w,b
  8040  0153D8  09A0               	iorlw	160
  8041  0153DA  6F78               	movwf	i2c_eeprom_read@slave_address& (0+255),b
  8042  0153DC                     
  8043                           ; BSR set to: 0
  8044                           
  8045                           ; BSR set to: 0
  8046  0153DC  ECA6  F0B0         	call	__i2c_eeprom_busy	;wreg free
  8047  0153E0  0900               	iorlw	0
  8048  0153E2  A4D8               	btfss	status,2,c
  8049  0153E4  D7FB               	goto	l1224
  8050                           
  8051                           ;i2c.c: 289: _i2c_write(slave_address, &addr, 1);
  8052  0153E6  0E77               	movlw	low i2c_eeprom_read@addr
  8053  0153E8  0100               	movlb	0	; () banked
  8054  0153EA  6F65               	movwf	__i2c_write@data& (0+255),b
  8055  0153EC  0E00               	movlw	high i2c_eeprom_read@addr
  8056  0153EE  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  8057  0153F0  0E01               	movlw	1
  8058  0153F2  6F67               	movwf	__i2c_write@length& (0+255),b
  8059  0153F4  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  8060  0153F6  ECCC  F0AB         	call	__i2c_write
  8061                           
  8062                           ;i2c.c: 290: _i2c_read(slave_address, &data[0], length);
  8063  0153FA  C073  F065         	movff	i2c_eeprom_read@data,__i2c_read@data
  8064  0153FE  C074  F066         	movff	i2c_eeprom_read@data+1,__i2c_read@data+1
  8065  015402  C075  F067         	movff	i2c_eeprom_read@length,__i2c_read@length
  8066  015406  0100               	movlb	0	; () banked
  8067  015408  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  8068  01540A  EC37  F09F         	call	__i2c_read
  8069  01540E  0012               	return		;funcret
  8070  015410                     __end_of_i2c_eeprom_read:
  8071                           	opt stack 0
  8072                           tblptru	equ	0xFF8
  8073                           tblptrh	equ	0xFF7
  8074                           tblptrl	equ	0xFF6
  8075                           tablat	equ	0xFF5
  8076                           postinc0	equ	0xFEE
  8077                           wreg	equ	0xFE8
  8078                           postdec1	equ	0xFE5
  8079                           fsr1h	equ	0xFE2
  8080                           fsr1l	equ	0xFE1
  8081                           status	equ	0xFD8
  8082                           
  8083 ;; *************** function __i2c_read *****************
  8084 ;; Defined at:
  8085 ;;		line 105 in file "i2c.c"
  8086 ;; Parameters:    Size  Location     Type
  8087 ;;  slave_addres    1    wreg     unsigned char 
  8088 ;;  data            2    5[BANK0 ] PTR unsigned char 
  8089 ;;		 -> i2c_eeprom_recover_position@buffer(11), i2c_eeprom_readInt16@data(2), i2c_eeprom_readUint32@data(4), i2c_eeprom_
      +readUint16@data(2), 
  8090 ;;		 -> i2c_eeprom_readByte@addr(1), 
  8091 ;;  length          1    7[BANK0 ] unsigned char 
  8092 ;; Auto vars:     Size  Location     Type
  8093 ;;  slave_addres    1   15[BANK0 ] unsigned char 
  8094 ;;  cntr            1   16[BANK0 ] unsigned char 
  8095 ;; Return value:  Size  Location     Type
  8096 ;;                  1    wreg      void 
  8097 ;; Registers used:
  8098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8099 ;; Tracked objects:
  8100 ;;		On entry : 0/0
  8101 ;;		On exit  : 0/0
  8102 ;;		Unchanged: 0/0
  8103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8104 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8105 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8106 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8107 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8108 ;;Total ram usage:       12 bytes
  8109 ;; Hardware stack levels used:    1
  8110 ;; Hardware stack levels required when called:   11
  8111 ;; This function calls:
  8112 ;;		__i2c_acknowledge
  8113 ;;		__i2c_get
  8114 ;;		__i2c_not_acknowledge
  8115 ;;		__i2c_send
  8116 ;;		__i2c_start
  8117 ;;		__i2c_stop
  8118 ;;		__i2c_wait_idle
  8119 ;; This function is called by:
  8120 ;;		_i2c_eeprom_read
  8121 ;;		_i2c_eeprom_readByte
  8122 ;; This function uses a non-reentrant model
  8123 ;;
  8124                           
  8125                           	psect	text7
  8126  013E6E                     __ptext7:
  8127                           	opt stack 0
  8128  013E6E                     __i2c_read:
  8129                           	opt stack 16
  8130                           
  8131                           ;incstack = 0
  8132                           ;__i2c_read@slave_address stored from wreg
  8133  013E6E  0100               	movlb	0	; () banked
  8134  013E70  6F6F               	movwf	__i2c_read@slave_address& (0+255),b
  8135                           
  8136                           ;i2c.c: 107: uint8_t cntr;;i2c.c: 109: _i2c_wait_idle();
  8137  013E72  EC9D  F0A6         	call	__i2c_wait_idle	;wreg free
  8138                           
  8139                           ;i2c.c: 110: _i2c_start();
  8140  013E76  EC49  F0B2         	call	__i2c_start	;wreg free
  8141                           
  8142                           ;i2c.c: 111: _i2c_wait_idle();
  8143  013E7A  EC9D  F0A6         	call	__i2c_wait_idle	;wreg free
  8144                           
  8145                           ;i2c.c: 112: _i2c_send(slave_address | 0x01);
  8146  013E7E  0100               	movlb	0	; () banked
  8147  013E80  516F               	movf	__i2c_read@slave_address& (0+255),w,b
  8148  013E82  0901               	iorlw	1
  8149  013E84  EC3B  F0B2         	call	__i2c_send
  8150                           
  8151                           ;i2c.c: 113: _i2c_wait_idle();
  8152  013E88  EC9D  F0A6         	call	__i2c_wait_idle	;wreg free
  8153                           
  8154                           ;i2c.c: 123: for(cntr=0; cntr<length-1; ++cntr)
  8155  013E8C  0E00               	movlw	0
  8156  013E8E  0100               	movlb	0	; () banked
  8157  013E90  6F70               	movwf	__i2c_read@cntr& (0+255),b
  8158  013E92  D00F               	goto	l1169
  8159  013E94                     
  8160                           ; BSR set to: 0
  8161                           ;i2c.c: 124: {;i2c.c: 125: data[cntr] = _i2c_get();
  8162                           
  8163                           ; BSR set to: 0
  8164  013E94  5170               	movf	__i2c_read@cntr& (0+255),w,b
  8165  013E96  0D01               	mullw	1
  8166  013E98  50F3               	movf	prodl,w,c
  8167  013E9A  2565               	addwf	__i2c_read@data& (0+255),w,b
  8168  013E9C  6ED9               	movwf	fsr2l,c
  8169  013E9E  50F4               	movf	prodh,w,c
  8170  013EA0  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
  8171  013EA2  6EDA               	movwf	fsr2h,c
  8172  013EA4  EC2C  F0B2         	call	__i2c_get	;wreg free
  8173  013EA8  6EDF               	movwf	indf2,c
  8174                           
  8175                           ;i2c.c: 126: _i2c_acknowledge();
  8176  013EAA  EC31  F0B2         	call	__i2c_acknowledge	;wreg free
  8177  013EAE  0100               	movlb	0	; () banked
  8178  013EB0  2B70               	incf	__i2c_read@cntr& (0+255),f,b
  8179  013EB2                     l1169:
  8180                           
  8181                           ; BSR set to: 0
  8182                           
  8183                           ; BSR set to: 0
  8184  013EB2  0EFF               	movlw	255
  8185  013EB4  6F68               	movwf	??__i2c_read& (0+255),b
  8186  013EB6  0EFF               	movlw	255
  8187  013EB8  6F69               	movwf	(??__i2c_read+1)& (0+255),b
  8188  013EBA  5167               	movf	__i2c_read@length& (0+255),w,b
  8189  013EBC  6F6A               	movwf	(??__i2c_read+2)& (0+255),b
  8190  013EBE  6B6B               	clrf	(??__i2c_read+3)& (0+255),b
  8191  013EC0  5168               	movf	??__i2c_read& (0+255),w,b
  8192  013EC2  276A               	addwf	(??__i2c_read+2)& (0+255),f,b
  8193  013EC4  5169               	movf	(??__i2c_read+1)& (0+255),w,b
  8194  013EC6  236B               	addwfc	(??__i2c_read+3)& (0+255),f,b
  8195  013EC8  5170               	movf	__i2c_read@cntr& (0+255),w,b
  8196  013ECA  6F6C               	movwf	(??__i2c_read+4)& (0+255),b
  8197  013ECC  6B6D               	clrf	(??__i2c_read+5)& (0+255),b
  8198  013ECE  516A               	movf	(??__i2c_read+2)& (0+255),w,b
  8199  013ED0  5D6C               	subwf	(??__i2c_read+4)& (0+255),w,b
  8200  013ED2  516D               	movf	(??__i2c_read+5)& (0+255),w,b
  8201  013ED4  0A80               	xorlw	128
  8202  013ED6  6F6E               	movwf	(??__i2c_read+6)& (0+255),b
  8203  013ED8  516B               	movf	(??__i2c_read+3)& (0+255),w,b
  8204  013EDA  0A80               	xorlw	128
  8205  013EDC  596E               	subwfb	(??__i2c_read+6)& (0+255),w,b
  8206  013EDE  A0D8               	btfss	status,0,c
  8207  013EE0  D7D9               	goto	l1170
  8208                           
  8209                           ; BSR set to: 0
  8210                           ;i2c.c: 127: };i2c.c: 128: data[cntr] = _i2c_get();
  8211                           
  8212                           ; BSR set to: 0
  8213  013EE2  5170               	movf	__i2c_read@cntr& (0+255),w,b
  8214  013EE4  0D01               	mullw	1
  8215  013EE6  50F3               	movf	prodl,w,c
  8216  013EE8  2565               	addwf	__i2c_read@data& (0+255),w,b
  8217  013EEA  6ED9               	movwf	fsr2l,c
  8218  013EEC  50F4               	movf	prodh,w,c
  8219  013EEE  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
  8220  013EF0  6EDA               	movwf	fsr2h,c
  8221  013EF2  EC2C  F0B2         	call	__i2c_get	;wreg free
  8222  013EF6  6EDF               	movwf	indf2,c
  8223                           
  8224                           ;i2c.c: 129: _i2c_not_acknowledge();
  8225  013EF8  EC27  F0B2         	call	__i2c_not_acknowledge	;wreg free
  8226                           
  8227                           ;i2c.c: 131: _i2c_stop();
  8228  013EFC  EC45  F0B2         	call	__i2c_stop	;wreg free
  8229  013F00  0012               	return		;funcret
  8230  013F02                     __end_of__i2c_read:
  8231                           	opt stack 0
  8232                           tblptru	equ	0xFF8
  8233                           tblptrh	equ	0xFF7
  8234                           tblptrl	equ	0xFF6
  8235                           tablat	equ	0xFF5
  8236                           prodh	equ	0xFF4
  8237                           prodl	equ	0xFF3
  8238                           postinc0	equ	0xFEE
  8239                           wreg	equ	0xFE8
  8240                           postdec1	equ	0xFE5
  8241                           fsr1h	equ	0xFE2
  8242                           fsr1l	equ	0xFE1
  8243                           indf2	equ	0xFDF
  8244                           fsr2h	equ	0xFDA
  8245                           fsr2l	equ	0xFD9
  8246                           status	equ	0xFD8
  8247                           
  8248 ;; *************** function __i2c_not_acknowledge *****************
  8249 ;; Defined at:
  8250 ;;		line 78 in file "i2c.c"
  8251 ;; Parameters:    Size  Location     Type
  8252 ;;		None
  8253 ;; Auto vars:     Size  Location     Type
  8254 ;;		None
  8255 ;; Return value:  Size  Location     Type
  8256 ;;                  1    wreg      void 
  8257 ;; Registers used:
  8258 ;;		None
  8259 ;; Tracked objects:
  8260 ;;		On entry : 0/0
  8261 ;;		On exit  : 0/0
  8262 ;;		Unchanged: 0/0
  8263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8268 ;;Total ram usage:        0 bytes
  8269 ;; Hardware stack levels used:    1
  8270 ;; Hardware stack levels required when called:   10
  8271 ;; This function calls:
  8272 ;;		Nothing
  8273 ;; This function is called by:
  8274 ;;		__i2c_read
  8275 ;;		_i2c_adc_read
  8276 ;; This function uses a non-reentrant model
  8277 ;;
  8278                           
  8279                           	psect	text8
  8280  01644E                     __ptext8:
  8281                           	opt stack 0
  8282  01644E                     __i2c_not_acknowledge:
  8283                           	opt stack 16
  8284                           
  8285                           ;i2c.c: 80: SSP1CON2bits.ACKDT = 1;
  8286                           
  8287                           ;incstack = 0
  8288  01644E  8AC5               	bsf	4037,5,c	;volatile
  8289                           
  8290                           ;i2c.c: 81: SSP1CON2bits.ACKEN = 1;
  8291  016450  88C5               	bsf	4037,4,c	;volatile
  8292  016452  A8C5               	btfss	4037,4,c	;volatile
  8293  016454  0012               	return	
  8294  016456  D7FD               	goto	l1158
  8295  016458                     __end_of__i2c_not_acknowledge:
  8296                           	opt stack 0
  8297                           tblptru	equ	0xFF8
  8298                           tblptrh	equ	0xFF7
  8299                           tblptrl	equ	0xFF6
  8300                           tablat	equ	0xFF5
  8301                           prodh	equ	0xFF4
  8302                           prodl	equ	0xFF3
  8303                           postinc0	equ	0xFEE
  8304                           wreg	equ	0xFE8
  8305                           postdec1	equ	0xFE5
  8306                           fsr1h	equ	0xFE2
  8307                           fsr1l	equ	0xFE1
  8308                           indf2	equ	0xFDF
  8309                           fsr2h	equ	0xFDA
  8310                           fsr2l	equ	0xFD9
  8311                           status	equ	0xFD8
  8312                           
  8313 ;; *************** function __i2c_get *****************
  8314 ;; Defined at:
  8315 ;;		line 58 in file "i2c.c"
  8316 ;; Parameters:    Size  Location     Type
  8317 ;;		None
  8318 ;; Auto vars:     Size  Location     Type
  8319 ;;		None
  8320 ;; Return value:  Size  Location     Type
  8321 ;;                  1    wreg      unsigned char 
  8322 ;; Registers used:
  8323 ;;		wreg, status,2
  8324 ;; Tracked objects:
  8325 ;;		On entry : 0/0
  8326 ;;		On exit  : 0/0
  8327 ;;		Unchanged: 0/0
  8328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8333 ;;Total ram usage:        0 bytes
  8334 ;; Hardware stack levels used:    1
  8335 ;; Hardware stack levels required when called:   10
  8336 ;; This function calls:
  8337 ;;		Nothing
  8338 ;; This function is called by:
  8339 ;;		__i2c_read
  8340 ;;		_i2c_adc_read
  8341 ;; This function uses a non-reentrant model
  8342 ;;
  8343                           
  8344                           	psect	text9
  8345  016458                     __ptext9:
  8346                           	opt stack 0
  8347  016458                     __i2c_get:
  8348                           	opt stack 16
  8349                           
  8350                           ;i2c.c: 60: SSP1CON2bits.RCEN = 1 ;
  8351                           
  8352                           ;incstack = 0
  8353  016458  86C5               	bsf	4037,3,c	;volatile
  8354  01645A  B6C5               	btfsc	4037,3,c	;volatile
  8355  01645C  D7FE               	goto	l1140
  8356                           
  8357                           ;i2c.c: 62: return SSP1BUF;
  8358  01645E  50C9               	movf	4041,w,c	;volatile
  8359  016460  0012               	return	
  8360  016462                     __end_of__i2c_get:
  8361                           	opt stack 0
  8362                           tblptru	equ	0xFF8
  8363                           tblptrh	equ	0xFF7
  8364                           tblptrl	equ	0xFF6
  8365                           tablat	equ	0xFF5
  8366                           prodh	equ	0xFF4
  8367                           prodl	equ	0xFF3
  8368                           postinc0	equ	0xFEE
  8369                           wreg	equ	0xFE8
  8370                           postdec1	equ	0xFE5
  8371                           fsr1h	equ	0xFE2
  8372                           fsr1l	equ	0xFE1
  8373                           indf2	equ	0xFDF
  8374                           fsr2h	equ	0xFDA
  8375                           fsr2l	equ	0xFD9
  8376                           status	equ	0xFD8
  8377                           
  8378 ;; *************** function __i2c_acknowledge *****************
  8379 ;; Defined at:
  8380 ;;		line 71 in file "i2c.c"
  8381 ;; Parameters:    Size  Location     Type
  8382 ;;		None
  8383 ;; Auto vars:     Size  Location     Type
  8384 ;;		None
  8385 ;; Return value:  Size  Location     Type
  8386 ;;                  1    wreg      void 
  8387 ;; Registers used:
  8388 ;;		None
  8389 ;; Tracked objects:
  8390 ;;		On entry : 0/0
  8391 ;;		On exit  : 0/0
  8392 ;;		Unchanged: 0/0
  8393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8398 ;;Total ram usage:        0 bytes
  8399 ;; Hardware stack levels used:    1
  8400 ;; Hardware stack levels required when called:   10
  8401 ;; This function calls:
  8402 ;;		Nothing
  8403 ;; This function is called by:
  8404 ;;		__i2c_read
  8405 ;;		_i2c_adc_read
  8406 ;; This function uses a non-reentrant model
  8407 ;;
  8408                           
  8409                           	psect	text10
  8410  016462                     __ptext10:
  8411                           	opt stack 0
  8412  016462                     __i2c_acknowledge:
  8413                           	opt stack 16
  8414                           
  8415                           ;i2c.c: 73: SSP1CON2bits.ACKDT = 0;
  8416                           
  8417                           ;incstack = 0
  8418  016462  9AC5               	bcf	4037,5,c	;volatile
  8419                           
  8420                           ;i2c.c: 74: SSP1CON2bits.ACKEN = 1;
  8421  016464  88C5               	bsf	4037,4,c	;volatile
  8422  016466  A8C5               	btfss	4037,4,c	;volatile
  8423  016468  0012               	return	
  8424  01646A  D7FD               	goto	l1152
  8425  01646C                     __end_of__i2c_acknowledge:
  8426                           	opt stack 0
  8427                           tblptru	equ	0xFF8
  8428                           tblptrh	equ	0xFF7
  8429                           tblptrl	equ	0xFF6
  8430                           tablat	equ	0xFF5
  8431                           prodh	equ	0xFF4
  8432                           prodl	equ	0xFF3
  8433                           postinc0	equ	0xFEE
  8434                           wreg	equ	0xFE8
  8435                           postdec1	equ	0xFE5
  8436                           fsr1h	equ	0xFE2
  8437                           fsr1l	equ	0xFE1
  8438                           indf2	equ	0xFDF
  8439                           fsr2h	equ	0xFDA
  8440                           fsr2l	equ	0xFD9
  8441                           status	equ	0xFD8
  8442                           
  8443 ;; *************** function _flash_init *****************
  8444 ;; Defined at:
  8445 ;;		line 361 in file "flash.c"
  8446 ;; Parameters:    Size  Location     Type
  8447 ;;		None
  8448 ;; Auto vars:     Size  Location     Type
  8449 ;;		None
  8450 ;; Return value:  Size  Location     Type
  8451 ;;                  1    wreg      void 
  8452 ;; Registers used:
  8453 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8454 ;; Tracked objects:
  8455 ;;		On entry : 0/0
  8456 ;;		On exit  : 0/0
  8457 ;;		Unchanged: 0/0
  8458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8463 ;;Total ram usage:        0 bytes
  8464 ;; Hardware stack levels used:    1
  8465 ;; Hardware stack levels required when called:   14
  8466 ;; This function calls:
  8467 ;;		__flash_set_page_size
  8468 ;;		_spi_init
  8469 ;; This function is called by:
  8470 ;;		_system_init
  8471 ;; This function uses a non-reentrant model
  8472 ;;
  8473                           
  8474                           	psect	text11
  8475  016404                     __ptext11:
  8476                           	opt stack 0
  8477  016404                     _flash_init:
  8478                           	opt stack 15
  8479                           
  8480                           ;flash.c: 364: spi_init(SPI_CONFIGURATION_INTERNAL);
  8481                           
  8482                           ;incstack = 0
  8483  016404  0E00               	movlw	0
  8484  016406  EC7E  F0AD         	call	_spi_init
  8485                           
  8486                           ;flash.c: 367: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  8487  01640A  0E00               	movlw	0
  8488  01640C  EC28  F0A5         	call	__flash_set_page_size
  8489  016410  0012               	return		;funcret
  8490  016412                     __end_of_flash_init:
  8491                           	opt stack 0
  8492                           tblptru	equ	0xFF8
  8493                           tblptrh	equ	0xFF7
  8494                           tblptrl	equ	0xFF6
  8495                           tablat	equ	0xFF5
  8496                           prodh	equ	0xFF4
  8497                           prodl	equ	0xFF3
  8498                           postinc0	equ	0xFEE
  8499                           wreg	equ	0xFE8
  8500                           postdec1	equ	0xFE5
  8501                           fsr1h	equ	0xFE2
  8502                           fsr1l	equ	0xFE1
  8503                           indf2	equ	0xFDF
  8504                           fsr2h	equ	0xFDA
  8505                           fsr2l	equ	0xFD9
  8506                           status	equ	0xFD8
  8507                           
  8508 ;; *************** function _spi_init *****************
  8509 ;; Defined at:
  8510 ;;		line 89 in file "spi.c"
  8511 ;; Parameters:    Size  Location     Type
  8512 ;;  configuratio    1    wreg     enum E6878
  8513 ;; Auto vars:     Size  Location     Type
  8514 ;;  configuratio    1    3[BANK0 ] enum E6878
  8515 ;; Return value:  Size  Location     Type
  8516 ;;                  1    wreg      void 
  8517 ;; Registers used:
  8518 ;;		wreg, status,2, status,0, cstack
  8519 ;; Tracked objects:
  8520 ;;		On entry : 0/0
  8521 ;;		On exit  : 0/0
  8522 ;;		Unchanged: 0/0
  8523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8525 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8527 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8528 ;;Total ram usage:        1 bytes
  8529 ;; Hardware stack levels used:    1
  8530 ;; Hardware stack levels required when called:   11
  8531 ;; This function calls:
  8532 ;;		__spi_init
  8533 ;; This function is called by:
  8534 ;;		_flash_init
  8535 ;; This function uses a non-reentrant model
  8536 ;;
  8537                           
  8538                           	psect	text12
  8539  015AFC                     __ptext12:
  8540                           	opt stack 0
  8541  015AFC                     _spi_init:
  8542                           	opt stack 17
  8543                           
  8544                           ;incstack = 0
  8545                           ;spi_init@configuration stored from wreg
  8546  015AFC  0100               	movlb	0	; () banked
  8547  015AFE  6F63               	movwf	spi_init@configuration& (0+255),b
  8548                           
  8549                           ;spi.c: 91: switch(configuration)
  8550  015B00  D012               	goto	l2202
  8551  015B02                     
  8552                           ;spi.c: 94: _spi_init(config_internal);
  8553  015B02  C12B  F060         	movff	_config_internal,__spi_init@details
  8554  015B06  C12C  F061         	movff	_config_internal+1,__spi_init@details+1
  8555  015B0A  C12D  F062         	movff	_config_internal+2,__spi_init@details+2
  8556  015B0E  EC53  F0AE         	call	__spi_init	;wreg free
  8557                           
  8558                           ;spi.c: 95: break;
  8559  015B12  D011               	goto	l2204
  8560  015B14                     
  8561                           ;spi.c: 98: _spi_init(config_external);
  8562  015B14  C244  F060         	movff	_config_external,__spi_init@details
  8563  015B18  C245  F061         	movff	_config_external+1,__spi_init@details+1
  8564  015B1C  C246  F062         	movff	_config_external+2,__spi_init@details+2
  8565  015B20  EC53  F0AE         	call	__spi_init	;wreg free
  8566                           
  8567                           ;spi.c: 100: }
  8568                           
  8569                           ;spi.c: 99: break;
  8570  015B24  D008               	goto	l2204
  8571  015B26                     l2202:
  8572  015B26  0100               	movlb	0	; () banked
  8573  015B28  5163               	movf	spi_init@configuration& (0+255),w,b
  8574                           
  8575                           ; Switch size 1, requested type "space"
  8576                           ; Number of cases is 2, Range of values is 0 to 1
  8577                           ; switch strategies available:
  8578                           ; Name         Instructions Cycles
  8579                           ; simple_byte            7     4 (average)
  8580                           ;	Chosen strategy is simple_byte
  8581  015B2A  0A00               	xorlw	0	; case 0
  8582  015B2C  B4D8               	btfsc	status,2,c
  8583  015B2E  D7E9               	goto	l2203
  8584  015B30  0A01               	xorlw	1	; case 1
  8585  015B32  B4D8               	btfsc	status,2,c
  8586  015B34  D7EF               	goto	l2205
  8587  015B36                     l2204:
  8588                           
  8589                           ;spi.c: 102: active_configuration = configuration;
  8590  015B36  C063  F14D         	movff	spi_init@configuration,_active_configuration
  8591  015B3A  0012               	return		;funcret
  8592  015B3C                     __end_of_spi_init:
  8593                           	opt stack 0
  8594                           tblptru	equ	0xFF8
  8595                           tblptrh	equ	0xFF7
  8596                           tblptrl	equ	0xFF6
  8597                           tablat	equ	0xFF5
  8598                           prodh	equ	0xFF4
  8599                           prodl	equ	0xFF3
  8600                           postinc0	equ	0xFEE
  8601                           wreg	equ	0xFE8
  8602                           postdec1	equ	0xFE5
  8603                           fsr1h	equ	0xFE2
  8604                           fsr1l	equ	0xFE1
  8605                           indf2	equ	0xFDF
  8606                           fsr2h	equ	0xFDA
  8607                           fsr2l	equ	0xFD9
  8608                           status	equ	0xFD8
  8609                           
  8610 ;; *************** function __spi_init *****************
  8611 ;; Defined at:
  8612 ;;		line 24 in file "spi.c"
  8613 ;; Parameters:    Size  Location     Type
  8614 ;;  details         3    0[BANK0 ] struct .
  8615 ;; Auto vars:     Size  Location     Type
  8616 ;;		None
  8617 ;; Return value:  Size  Location     Type
  8618 ;;                  1    wreg      void 
  8619 ;; Registers used:
  8620 ;;		wreg, status,2
  8621 ;; Tracked objects:
  8622 ;;		On entry : 0/0
  8623 ;;		On exit  : 0/0
  8624 ;;		Unchanged: 0/0
  8625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8626 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8629 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8630 ;;Total ram usage:        3 bytes
  8631 ;; Hardware stack levels used:    1
  8632 ;; Hardware stack levels required when called:   10
  8633 ;; This function calls:
  8634 ;;		Nothing
  8635 ;; This function is called by:
  8636 ;;		_spi_init
  8637 ;; This function uses a non-reentrant model
  8638 ;;
  8639                           
  8640                           	psect	text13
  8641  015CA6                     __ptext13:
  8642                           	opt stack 0
  8643  015CA6                     __spi_init:
  8644                           	opt stack 17
  8645                           
  8646                           ;spi.c: 30: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  8647                           
  8648                           ;incstack = 0
  8649  015CA6  0E55               	movlw	85
  8650  015CA8  6EA7               	movwf	4007,c	;volsfr
  8651  015CAA  0EAA               	movlw	170
  8652  015CAC  6EA7               	movwf	4007,c	;volsfr
  8653  015CAE  010E               	movlb	14	; () banked
  8654  015CB0  91BF               	bcf	191,0,b	;volatile
  8655                           
  8656                           ;spi.c: 31: RPINR21 = 22;
  8657  015CB2  0E16               	movlw	22
  8658  015CB4  6FFC               	movwf	252,b	;volatile
  8659                           
  8660                           ;spi.c: 32: RPOR21 = 10;
  8661  015CB6  0E0A               	movlw	10
  8662  015CB8  6FD5               	movwf	213,b	;volatile
  8663                           
  8664                           ;spi.c: 34: RPOR23 = 11;
  8665  015CBA  0E0B               	movlw	11
  8666  015CBC  6FD7               	movwf	215,b	;volatile
  8667                           
  8668                           ;spi.c: 35: RPINR22 = 23;
  8669  015CBE  0E17               	movlw	23
  8670  015CC0  6FFD               	movwf	253,b	;volatile
  8671                           
  8672                           ;spi.c: 36: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  8673  015CC2  0E55               	movlw	85
  8674  015CC4  6EA7               	movwf	4007,c	;volsfr
  8675  015CC6  0EAA               	movlw	170
  8676  015CC8  6EA7               	movwf	4007,c	;volsfr
  8677                           
  8678                           ; BSR set to: 14
  8679  015CCA  81BF               	bsf	191,0,b	;volatile
  8680                           
  8681                           ; BSR set to: 14
  8682                           ;spi.c: 39: SSP2STATbits.SMP = 1;
  8683  015CCC  8E73               	bsf	3955,7,c	;volatile
  8684                           
  8685                           ; BSR set to: 14
  8686                           ;spi.c: 40: SSP2STATbits.CKE = 1;
  8687  015CCE  8C73               	bsf	3955,6,c	;volatile
  8688                           
  8689                           ; BSR set to: 14
  8690                           ;spi.c: 41: SSP2CON1bits.CKP = 0;
  8691  015CD0  9872               	bcf	3954,4,c	;volatile
  8692                           
  8693                           ; BSR set to: 14
  8694                           ;spi.c: 42: SSP2CON1bits.SSPM =0b0000;
  8695  015CD2  9072               	bcf	3954,0,c	;volatile
  8696  015CD4  9272               	bcf	3954,1,c	;volatile
  8697  015CD6  9472               	bcf	3954,2,c	;volatile
  8698  015CD8  9672               	bcf	3954,3,c	;volatile
  8699                           
  8700                           ; BSR set to: 14
  8701                           ;spi.c: 43: SSP2CON1bits.SSPEN = 1;
  8702  015CDA  8A72               	bsf	3954,5,c	;volatile
  8703                           
  8704                           ; BSR set to: 14
  8705  015CDC  0012               	return		;funcret
  8706  015CDE                     __end_of__spi_init:
  8707                           	opt stack 0
  8708                           tblptru	equ	0xFF8
  8709                           tblptrh	equ	0xFF7
  8710                           tblptrl	equ	0xFF6
  8711                           tablat	equ	0xFF5
  8712                           prodh	equ	0xFF4
  8713                           prodl	equ	0xFF3
  8714                           postinc0	equ	0xFEE
  8715                           wreg	equ	0xFE8
  8716                           postdec1	equ	0xFE5
  8717                           fsr1h	equ	0xFE2
  8718                           fsr1l	equ	0xFE1
  8719                           indf2	equ	0xFDF
  8720                           fsr2h	equ	0xFDA
  8721                           fsr2l	equ	0xFD9
  8722                           status	equ	0xFD8
  8723                           
  8724 ;; *************** function __flash_set_page_size *****************
  8725 ;; Defined at:
  8726 ;;		line 99 in file "flash.c"
  8727 ;; Parameters:    Size  Location     Type
  8728 ;;  size            1    wreg     enum E7065
  8729 ;; Auto vars:     Size  Location     Type
  8730 ;;  size            1   23[BANK0 ] enum E7065
  8731 ;;  command         4   19[BANK0 ] unsigned char [4]
  8732 ;; Return value:  Size  Location     Type
  8733 ;;                  1    wreg      void 
  8734 ;; Registers used:
  8735 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8736 ;; Tracked objects:
  8737 ;;		On entry : 0/0
  8738 ;;		On exit  : 0/0
  8739 ;;		Unchanged: 0/0
  8740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8742 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8744 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8745 ;;Total ram usage:        5 bytes
  8746 ;; Hardware stack levels used:    1
  8747 ;; Hardware stack levels required when called:   13
  8748 ;; This function calls:
  8749 ;;		__flash_is_busy
  8750 ;;		_memcpy
  8751 ;;		_spi_tx
  8752 ;; This function is called by:
  8753 ;;		_flash_init
  8754 ;; This function uses a non-reentrant model
  8755 ;;
  8756                           
  8757                           	psect	text14
  8758  014A50                     __ptext14:
  8759                           	opt stack 0
  8760  014A50                     __flash_set_page_size:
  8761                           	opt stack 15
  8762                           
  8763                           ; BSR set to: 14
  8764                           ;incstack = 0
  8765                           ;__flash_set_page_size@size stored from wreg
  8766  014A50  0100               	movlb	0	; () banked
  8767  014A52  6F77               	movwf	__flash_set_page_size@size& (0+255),b
  8768  014A54                     
  8769                           ;flash.c: 101: uint8_t command[4];;flash.c: 104: while(_flash_is_busy());
  8770  014A54  EC16  F0B1         	call	__flash_is_busy	;wreg free
  8771  014A58  0900               	iorlw	0
  8772  014A5A  A4D8               	btfss	status,2,c
  8773  014A5C  D7FB               	goto	l16619
  8774                           
  8775                           ;flash.c: 107: if(size==FLASH_PAGE_SIZE_512)
  8776  014A5E  0100               	movlb	0	; () banked
  8777  014A60  5177               	movf	__flash_set_page_size@size& (0+255),w,b
  8778  014A62  A4D8               	btfss	status,2,c
  8779  014A64  D00E               	goto	l1555
  8780                           
  8781                           ; BSR set to: 0
  8782                           ;flash.c: 108: memcpy(command, flash_command_pagesize_512, 4);
  8783  014A66  0E73               	movlw	low __flash_set_page_size@command
  8784  014A68  6F60               	movwf	memcpy@d1& (0+255),b
  8785  014A6A  0E00               	movlw	high __flash_set_page_size@command
  8786  014A6C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  8787  014A6E  0E55               	movlw	low _flash_command_pagesize_512
  8788  014A70  6F62               	movwf	memcpy@s1& (0+255),b
  8789  014A72  0EA3               	movlw	high _flash_command_pagesize_512
  8790  014A74  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  8791  014A76  0E00               	movlw	0
  8792  014A78  6F65               	movwf	(memcpy@n+1)& (0+255),b
  8793  014A7A  0E04               	movlw	4
  8794  014A7C  6F64               	movwf	memcpy@n& (0+255),b
  8795  014A7E  EC93  F0A7         	call	_memcpy	;wreg free
  8796  014A82                     l1555:
  8797                           
  8798                           ;flash.c: 109: if(size==FLASH_PAGE_SIZE_528)
  8799  014A82  0100               	movlb	0	; () banked
  8800  014A84  0577               	decf	__flash_set_page_size@size& (0+255),w,b
  8801  014A86  A4D8               	btfss	status,2,c
  8802  014A88  D00E               	goto	l1556
  8803                           
  8804                           ; BSR set to: 0
  8805                           ;flash.c: 110: memcpy(command, flash_command_pagesize_528, 4);
  8806  014A8A  0E73               	movlw	low __flash_set_page_size@command
  8807  014A8C  6F60               	movwf	memcpy@d1& (0+255),b
  8808  014A8E  0E00               	movlw	high __flash_set_page_size@command
  8809  014A90  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  8810  014A92  0E51               	movlw	low _flash_command_pagesize_528
  8811  014A94  6F62               	movwf	memcpy@s1& (0+255),b
  8812  014A96  0EA3               	movlw	high _flash_command_pagesize_528
  8813  014A98  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  8814  014A9A  0E00               	movlw	0
  8815  014A9C  6F65               	movwf	(memcpy@n+1)& (0+255),b
  8816  014A9E  0E04               	movlw	4
  8817  014AA0  6F64               	movwf	memcpy@n& (0+255),b
  8818  014AA2  EC93  F0A7         	call	_memcpy	;wreg free
  8819  014AA6                     l1556:
  8820                           
  8821                           ;flash.c: 113: spi_tx(command, 4);
  8822  014AA6  0E73               	movlw	low __flash_set_page_size@command
  8823  014AA8  0100               	movlb	0	; () banked
  8824  014AAA  6F60               	movwf	spi_tx@data& (0+255),b
  8825  014AAC  0E00               	movlw	high __flash_set_page_size@command
  8826  014AAE  6F61               	movwf	(spi_tx@data+1)& (0+255),b
  8827  014AB0  0E00               	movlw	0
  8828  014AB2  6F63               	movwf	(spi_tx@length+1)& (0+255),b
  8829  014AB4  0E04               	movlw	4
  8830  014AB6  6F62               	movwf	spi_tx@length& (0+255),b
  8831  014AB8  ECD4  F0A8         	call	_spi_tx	;wreg free
  8832  014ABC  0012               	return		;funcret
  8833  014ABE                     __end_of__flash_set_page_size:
  8834                           	opt stack 0
  8835                           tblptru	equ	0xFF8
  8836                           tblptrh	equ	0xFF7
  8837                           tblptrl	equ	0xFF6
  8838                           tablat	equ	0xFF5
  8839                           prodh	equ	0xFF4
  8840                           prodl	equ	0xFF3
  8841                           postinc0	equ	0xFEE
  8842                           wreg	equ	0xFE8
  8843                           postdec1	equ	0xFE5
  8844                           fsr1h	equ	0xFE2
  8845                           fsr1l	equ	0xFE1
  8846                           indf2	equ	0xFDF
  8847                           fsr2h	equ	0xFDA
  8848                           fsr2l	equ	0xFD9
  8849                           status	equ	0xFD8
  8850                           
  8851 ;; *************** function _fat_init *****************
  8852 ;; Defined at:
  8853 ;;		line 1404 in file "fat16.c"
  8854 ;; Parameters:    Size  Location     Type
  8855 ;;		None
  8856 ;; Auto vars:     Size  Location     Type
  8857 ;;		None
  8858 ;; Return value:  Size  Location     Type
  8859 ;;                  1    wreg      void 
  8860 ;; Registers used:
  8861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8862 ;; Tracked objects:
  8863 ;;		On entry : 0/0
  8864 ;;		On exit  : 0/0
  8865 ;;		Unchanged: 0/0
  8866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8871 ;;Total ram usage:        0 bytes
  8872 ;; Hardware stack levels used:    1
  8873 ;; Hardware stack levels required when called:   16
  8874 ;; This function calls:
  8875 ;;		_fat_get_format_status
  8876 ;;		_fat_restore_mbr_fbr
  8877 ;; This function is called by:
  8878 ;;		_system_init
  8879 ;; This function uses a non-reentrant model
  8880 ;;
  8881                           
  8882                           	psect	text15
  8883  0163D4                     __ptext15:
  8884                           	opt stack 0
  8885  0163D4                     _fat_init:
  8886                           	opt stack 13
  8887                           
  8888                           ;fat16.c: 1407: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  8889                           
  8890                           ;incstack = 0
  8891  0163D4  ECC9  F09A         	call	_fat_get_format_status	;wreg free
  8892  0163D8  0900               	iorlw	0
  8893  0163DA  A4D8               	btfss	status,2,c
  8894  0163DC  0012               	return	
  8895                           
  8896                           ;fat16.c: 1408: {;fat16.c: 1416: fat_restore_mbr_fbr();
  8897  0163DE  ECA8  F0A0         	call	_fat_restore_mbr_fbr	;wreg free
  8898  0163E2  0012               	return	
  8899  0163E4                     __end_of_fat_init:
  8900                           	opt stack 0
  8901                           tblptru	equ	0xFF8
  8902                           tblptrh	equ	0xFF7
  8903                           tblptrl	equ	0xFF6
  8904                           tablat	equ	0xFF5
  8905                           prodh	equ	0xFF4
  8906                           prodl	equ	0xFF3
  8907                           postinc0	equ	0xFEE
  8908                           wreg	equ	0xFE8
  8909                           postdec1	equ	0xFE5
  8910                           fsr1h	equ	0xFE2
  8911                           fsr1l	equ	0xFE1
  8912                           indf2	equ	0xFDF
  8913                           fsr2h	equ	0xFDA
  8914                           fsr2l	equ	0xFD9
  8915                           status	equ	0xFD8
  8916                           
  8917 ;; *************** function _fat_restore_mbr_fbr *****************
  8918 ;; Defined at:
  8919 ;;		line 1321 in file "fat16.c"
  8920 ;; Parameters:    Size  Location     Type
  8921 ;;		None
  8922 ;; Auto vars:     Size  Location     Type
  8923 ;;  cntr            2   36[BANK0 ] unsigned int 
  8924 ;; Return value:  Size  Location     Type
  8925 ;;                  1    wreg      unsigned char 
  8926 ;; Registers used:
  8927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8928 ;; Tracked objects:
  8929 ;;		On entry : 0/0
  8930 ;;		On exit  : 0/0
  8931 ;;		Unchanged: 0/0
  8932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8934 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8936 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8937 ;;Total ram usage:        2 bytes
  8938 ;; Hardware stack levels used:    1
  8939 ;; Hardware stack levels required when called:   15
  8940 ;; This function calls:
  8941 ;;		__get_fbr
  8942 ;;		__get_mbr
  8943 ;;		_flash_sector_write
  8944 ;; This function is called by:
  8945 ;;		_fat_init
  8946 ;; This function uses a non-reentrant model
  8947 ;;
  8948                           
  8949                           	psect	text16
  8950  014150                     __ptext16:
  8951                           	opt stack 0
  8952  014150                     _fat_restore_mbr_fbr:
  8953                           	opt stack 13
  8954                           
  8955                           ;fat16.c: 1323: uint16_t cntr;;fat16.c: 1326: for(cntr=0; cntr<512; ++cntr)
  8956                           
  8957                           ;incstack = 0
  8958  014150  0E00               	movlw	0
  8959  014152  0100               	movlb	0	; () banked
  8960  014154  6F85               	movwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),b
  8961  014156  0E00               	movlw	0
  8962  014158  6F84               	movwf	fat_restore_mbr_fbr@cntr& (0+255),b
  8963  01415A                     l16849:
  8964                           
  8965                           ; BSR set to: 0
  8966  01415A  0E02               	movlw	2
  8967  01415C  5D85               	subwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  8968  01415E  B0D8               	btfsc	status,0,c
  8969  014160  D011               	goto	u15830
  8970                           
  8971                           ; BSR set to: 0
  8972                           ;fat16.c: 1327: {;fat16.c: 1328: buffer[cntr] = _get_mbr(cntr);
  8973                           
  8974                           ; BSR set to: 0
  8975                           
  8976                           ; BSR set to: 0
  8977  014162  0E00               	movlw	low _buffer
  8978  014164  2584               	addwf	fat_restore_mbr_fbr@cntr& (0+255),w,b
  8979  014166  6ED9               	movwf	fsr2l,c
  8980  014168  0E0A               	movlw	high _buffer
  8981  01416A  2185               	addwfc	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  8982  01416C  6EDA               	movwf	fsr2h,c
  8983  01416E  C084  F060         	movff	fat_restore_mbr_fbr@cntr,__get_mbr@idx
  8984  014172  C085  F061         	movff	fat_restore_mbr_fbr@cntr+1,__get_mbr@idx+1
  8985  014176  EC34  F096         	call	__get_mbr	;wreg free
  8986  01417A  6EDF               	movwf	indf2,c
  8987  01417C  0100               	movlb	0	; () banked
  8988  01417E  4B84               	infsnz	fat_restore_mbr_fbr@cntr& (0+255),f,b
  8989  014180  2B85               	incf	(fat_restore_mbr_fbr@cntr+1)& (0+255),f,b
  8990  014182  D7EB               	goto	l16849
  8991  014184                     u15830:
  8992                           
  8993                           ; BSR set to: 0
  8994                           ;fat16.c: 1329: };fat16.c: 1330: flash_sector_write(0, buffer);
  8995                           
  8996                           ; BSR set to: 0
  8997  014184  0E00               	movlw	0
  8998  014186  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  8999  014188  0E00               	movlw	0
  9000  01418A  6F7F               	movwf	flash_sector_write@page& (0+255),b
  9001  01418C  0E00               	movlw	low _buffer
  9002  01418E  6F81               	movwf	flash_sector_write@data& (0+255),b
  9003  014190  0E0A               	movlw	high _buffer
  9004  014192  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  9005  014194  EC7C  F0AB         	call	_flash_sector_write	;wreg free
  9006                           
  9007                           ;fat16.c: 1333: for(cntr=0; cntr<512; ++cntr)
  9008  014198  0E00               	movlw	0
  9009  01419A  0100               	movlb	0	; () banked
  9010  01419C  6F85               	movwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),b
  9011  01419E  0E00               	movlw	0
  9012  0141A0  6F84               	movwf	fat_restore_mbr_fbr@cntr& (0+255),b
  9013  0141A2                     l16863:
  9014                           
  9015                           ; BSR set to: 0
  9016  0141A2  0E02               	movlw	2
  9017  0141A4  5D85               	subwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  9018  0141A6  B0D8               	btfsc	status,0,c
  9019  0141A8  D011               	goto	u15850
  9020                           
  9021                           ; BSR set to: 0
  9022                           ;fat16.c: 1334: {;fat16.c: 1335: buffer[cntr] = _get_fbr(cntr);
  9023                           
  9024                           ; BSR set to: 0
  9025                           
  9026                           ; BSR set to: 0
  9027  0141AA  0E00               	movlw	low _buffer
  9028  0141AC  2584               	addwf	fat_restore_mbr_fbr@cntr& (0+255),w,b
  9029  0141AE  6ED9               	movwf	fsr2l,c
  9030  0141B0  0E0A               	movlw	high _buffer
  9031  0141B2  2185               	addwfc	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  9032  0141B4  6EDA               	movwf	fsr2h,c
  9033  0141B6  C084  F060         	movff	fat_restore_mbr_fbr@cntr,__get_fbr@idx
  9034  0141BA  C085  F061         	movff	fat_restore_mbr_fbr@cntr+1,__get_fbr@idx+1
  9035  0141BE  ECF2  F06B         	call	__get_fbr	;wreg free
  9036  0141C2  6EDF               	movwf	indf2,c
  9037  0141C4  0100               	movlb	0	; () banked
  9038  0141C6  4B84               	infsnz	fat_restore_mbr_fbr@cntr& (0+255),f,b
  9039  0141C8  2B85               	incf	(fat_restore_mbr_fbr@cntr+1)& (0+255),f,b
  9040  0141CA  D7EB               	goto	l16863
  9041  0141CC                     u15850:
  9042                           
  9043                           ; BSR set to: 0
  9044                           ;fat16.c: 1336: };fat16.c: 1337: flash_sector_write(1, buffer);
  9045                           
  9046                           ; BSR set to: 0
  9047  0141CC  0E00               	movlw	0
  9048  0141CE  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  9049  0141D0  0E01               	movlw	1
  9050  0141D2  6F7F               	movwf	flash_sector_write@page& (0+255),b
  9051  0141D4  0E00               	movlw	low _buffer
  9052  0141D6  6F81               	movwf	flash_sector_write@data& (0+255),b
  9053  0141D8  0E0A               	movlw	high _buffer
  9054  0141DA  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  9055  0141DC  EC7C  F0AB         	call	_flash_sector_write	;wreg free
  9056  0141E0  0012               	return	
  9057  0141E2                     __end_of_fat_restore_mbr_fbr:
  9058                           	opt stack 0
  9059                           tblptru	equ	0xFF8
  9060                           tblptrh	equ	0xFF7
  9061                           tblptrl	equ	0xFF6
  9062                           tablat	equ	0xFF5
  9063                           prodh	equ	0xFF4
  9064                           prodl	equ	0xFF3
  9065                           postinc0	equ	0xFEE
  9066                           wreg	equ	0xFE8
  9067                           postdec1	equ	0xFE5
  9068                           fsr1h	equ	0xFE2
  9069                           fsr1l	equ	0xFE1
  9070                           indf2	equ	0xFDF
  9071                           fsr2h	equ	0xFDA
  9072                           fsr2l	equ	0xFD9
  9073                           status	equ	0xFD8
  9074                           
  9075 ;; *************** function _fat_get_format_status *****************
  9076 ;; Defined at:
  9077 ;;		line 1293 in file "fat16.c"
  9078 ;; Parameters:    Size  Location     Type
  9079 ;;		None
  9080 ;; Auto vars:     Size  Location     Type
  9081 ;;  cntr            2   45[BANK0 ] unsigned int 
  9082 ;; Return value:  Size  Location     Type
  9083 ;;                  1    wreg      enum E7039
  9084 ;; Registers used:
  9085 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9086 ;; Tracked objects:
  9087 ;;		On entry : 0/0
  9088 ;;		On exit  : 0/0
  9089 ;;		Unchanged: 0/0
  9090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9092 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9093 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9094 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9095 ;;Total ram usage:        4 bytes
  9096 ;; Hardware stack levels used:    1
  9097 ;; Hardware stack levels required when called:   15
  9098 ;; This function calls:
  9099 ;;		__get_fbr
  9100 ;;		__get_mbr
  9101 ;;		_flash_sector_read
  9102 ;; This function is called by:
  9103 ;;		_fat_init
  9104 ;; This function uses a non-reentrant model
  9105 ;;
  9106                           
  9107                           	psect	text17
  9108  013592                     __ptext17:
  9109                           	opt stack 0
  9110  013592                     _fat_get_format_status:
  9111                           	opt stack 13
  9112                           
  9113                           ;fat16.c: 1295: uint16_t cntr;;fat16.c: 1298: flash_sector_read(0, buffer);
  9114                           
  9115                           ;incstack = 0
  9116  013592  0E00               	movlw	0
  9117  013594  0100               	movlb	0	; () banked
  9118  013596  6F88               	movwf	(flash_sector_read@page+1)& (0+255),b
  9119  013598  0E00               	movlw	0
  9120  01359A  6F87               	movwf	flash_sector_read@page& (0+255),b
  9121  01359C  0E00               	movlw	low _buffer
  9122  01359E  6F89               	movwf	flash_sector_read@data& (0+255),b
  9123  0135A0  0E0A               	movlw	high _buffer
  9124  0135A2  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
  9125  0135A4  EC92  F0B0         	call	_flash_sector_read	;wreg free
  9126                           
  9127                           ;fat16.c: 1299: for(cntr=0; cntr<512; ++cntr)
  9128  0135A8  0E00               	movlw	0
  9129  0135AA  0100               	movlb	0	; () banked
  9130  0135AC  6F8E               	movwf	(fat_get_format_status@cntr+1)& (0+255),b
  9131  0135AE  0E00               	movlw	0
  9132  0135B0  6F8D               	movwf	fat_get_format_status@cntr& (0+255),b
  9133  0135B2                     l16811:
  9134                           
  9135                           ; BSR set to: 0
  9136  0135B2  0E02               	movlw	2
  9137  0135B4  5D8E               	subwf	(fat_get_format_status@cntr+1)& (0+255),w,b
  9138  0135B6  B0D8               	btfsc	status,0,c
  9139  0135B8  D017               	goto	u15780
  9140                           
  9141                           ; BSR set to: 0
  9142                           ;fat16.c: 1300: {;fat16.c: 1301: if(buffer[cntr] != _get_mbr(cntr))
  9143                           
  9144                           ; BSR set to: 0
  9145                           
  9146                           ; BSR set to: 0
  9147  0135BA  0E00               	movlw	low _buffer
  9148  0135BC  258D               	addwf	fat_get_format_status@cntr& (0+255),w,b
  9149  0135BE  6ED9               	movwf	fsr2l,c
  9150  0135C0  0E0A               	movlw	high _buffer
  9151  0135C2  218E               	addwfc	(fat_get_format_status@cntr+1)& (0+255),w,b
  9152  0135C4  6EDA               	movwf	fsr2h,c
  9153  0135C6  C08D  F060         	movff	fat_get_format_status@cntr,__get_mbr@idx
  9154  0135CA  C08E  F061         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  9155  0135CE  EC34  F096         	call	__get_mbr	;wreg free
  9156  0135D2  0100               	movlb	0	; () banked
  9157  0135D4  6F8C               	movwf	(??_fat_get_format_status+1)& (0+255),b
  9158  0135D6  50DE               	movf	postinc2,w,c
  9159  0135D8  198C               	xorwf	(??_fat_get_format_status+1)& (0+255),w,b
  9160  0135DA  B4D8               	btfsc	status,2,c
  9161  0135DC  D002               	goto	l2079
  9162                           
  9163                           ; BSR set to: 0
  9164                           ;fat16.c: 1302: {;fat16.c: 1303: return DRIVE_NOT_FORMATED;
  9165  0135DE  0E00               	movlw	0
  9166                           
  9167                           ; BSR set to: 0
  9168  0135E0  0012               	return	
  9169  0135E2                     l2079:
  9170                           
  9171                           ; BSR set to: 0
  9172                           
  9173                           ; BSR set to: 0
  9174  0135E2  4B8D               	infsnz	fat_get_format_status@cntr& (0+255),f,b
  9175  0135E4  2B8E               	incf	(fat_get_format_status@cntr+1)& (0+255),f,b
  9176  0135E6  D7E5               	goto	l16811
  9177  0135E8                     u15780:
  9178                           
  9179                           ; BSR set to: 0
  9180                           ;fat16.c: 1304: };fat16.c: 1305: };fat16.c: 1308: flash_sector_read(1, buffer);
  9181                           
  9182                           ; BSR set to: 0
  9183  0135E8  0E00               	movlw	0
  9184  0135EA  6F88               	movwf	(flash_sector_read@page+1)& (0+255),b
  9185  0135EC  0E01               	movlw	1
  9186  0135EE  6F87               	movwf	flash_sector_read@page& (0+255),b
  9187  0135F0  0E00               	movlw	low _buffer
  9188  0135F2  6F89               	movwf	flash_sector_read@data& (0+255),b
  9189  0135F4  0E0A               	movlw	high _buffer
  9190  0135F6  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
  9191  0135F8  EC92  F0B0         	call	_flash_sector_read	;wreg free
  9192                           
  9193                           ;fat16.c: 1309: for(cntr=0; cntr<512; ++cntr)
  9194  0135FC  0E00               	movlw	0
  9195  0135FE  0100               	movlb	0	; () banked
  9196  013600  6F8E               	movwf	(fat_get_format_status@cntr+1)& (0+255),b
  9197  013602  0E00               	movlw	0
  9198  013604  6F8D               	movwf	fat_get_format_status@cntr& (0+255),b
  9199  013606                     l16829:
  9200                           
  9201                           ; BSR set to: 0
  9202  013606  0E02               	movlw	2
  9203  013608  5D8E               	subwf	(fat_get_format_status@cntr+1)& (0+255),w,b
  9204  01360A  B0D8               	btfsc	status,0,c
  9205  01360C  D017               	goto	u15810
  9206                           
  9207                           ; BSR set to: 0
  9208                           ;fat16.c: 1310: {;fat16.c: 1311: if(buffer[cntr] != _get_fbr(cntr))
  9209                           
  9210                           ; BSR set to: 0
  9211                           
  9212                           ; BSR set to: 0
  9213  01360E  0E00               	movlw	low _buffer
  9214  013610  258D               	addwf	fat_get_format_status@cntr& (0+255),w,b
  9215  013612  6ED9               	movwf	fsr2l,c
  9216  013614  0E0A               	movlw	high _buffer
  9217  013616  218E               	addwfc	(fat_get_format_status@cntr+1)& (0+255),w,b
  9218  013618  6EDA               	movwf	fsr2h,c
  9219  01361A  C08D  F060         	movff	fat_get_format_status@cntr,__get_fbr@idx
  9220  01361E  C08E  F061         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  9221  013622  ECF2  F06B         	call	__get_fbr	;wreg free
  9222  013626  0100               	movlb	0	; () banked
  9223  013628  6F8C               	movwf	(??_fat_get_format_status+1)& (0+255),b
  9224  01362A  50DE               	movf	postinc2,w,c
  9225  01362C  198C               	xorwf	(??_fat_get_format_status+1)& (0+255),w,b
  9226  01362E  B4D8               	btfsc	status,2,c
  9227  013630  D002               	goto	l2083
  9228                           
  9229                           ; BSR set to: 0
  9230                           ;fat16.c: 1312: {;fat16.c: 1313: return DRIVE_NOT_FORMATED;
  9231  013632  0E00               	movlw	0
  9232                           
  9233                           ; BSR set to: 0
  9234  013634  0012               	return	
  9235  013636                     l2083:
  9236                           
  9237                           ; BSR set to: 0
  9238                           
  9239                           ; BSR set to: 0
  9240  013636  4B8D               	infsnz	fat_get_format_status@cntr& (0+255),f,b
  9241  013638  2B8E               	incf	(fat_get_format_status@cntr+1)& (0+255),f,b
  9242  01363A  D7E5               	goto	l16829
  9243  01363C                     u15810:
  9244                           
  9245                           ; BSR set to: 0
  9246                           ;fat16.c: 1314: };fat16.c: 1315: };fat16.c: 1318: return DRIVE_FORMATED;
  9247                           
  9248                           ; BSR set to: 0
  9249  01363C  0E01               	movlw	1
  9250  01363E  0012               	return	
  9251  013640                     __end_of_fat_get_format_status:
  9252                           	opt stack 0
  9253                           tblptru	equ	0xFF8
  9254                           tblptrh	equ	0xFF7
  9255                           tblptrl	equ	0xFF6
  9256                           tablat	equ	0xFF5
  9257                           prodh	equ	0xFF4
  9258                           prodl	equ	0xFF3
  9259                           postinc0	equ	0xFEE
  9260                           wreg	equ	0xFE8
  9261                           postdec1	equ	0xFE5
  9262                           fsr1h	equ	0xFE2
  9263                           fsr1l	equ	0xFE1
  9264                           indf2	equ	0xFDF
  9265                           postinc2	equ	0xFDE
  9266                           fsr2h	equ	0xFDA
  9267                           fsr2l	equ	0xFD9
  9268                           status	equ	0xFD8
  9269                           
  9270 ;; *************** function __get_mbr *****************
  9271 ;; Defined at:
  9272 ;;		line 1038 in file "fat16.c"
  9273 ;; Parameters:    Size  Location     Type
  9274 ;;  idx             2    0[BANK0 ] unsigned int 
  9275 ;; Auto vars:     Size  Location     Type
  9276 ;;		None
  9277 ;; Return value:  Size  Location     Type
  9278 ;;                  1    wreg      unsigned char 
  9279 ;; Registers used:
  9280 ;;		wreg, status,2, status,0
  9281 ;; Tracked objects:
  9282 ;;		On entry : 0/0
  9283 ;;		On exit  : 0/0
  9284 ;;		Unchanged: 0/0
  9285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9286 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9288 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9289 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9290 ;;Total ram usage:        4 bytes
  9291 ;; Hardware stack levels used:    1
  9292 ;; Hardware stack levels required when called:   10
  9293 ;; This function calls:
  9294 ;;		Nothing
  9295 ;; This function is called by:
  9296 ;;		_fat_get_format_status
  9297 ;;		_fat_restore_mbr_fbr
  9298 ;;		_fat_format
  9299 ;; This function uses a non-reentrant model
  9300 ;;
  9301                           
  9302                           	psect	text18
  9303  012C68                     __ptext18:
  9304                           	opt stack 0
  9305  012C68                     __get_mbr:
  9306                           	opt stack 17
  9307                           
  9308                           ;fat16.c: 1040: switch (idx)
  9309                           
  9310                           ; BSR set to: 0
  9311                           ;incstack = 0
  9312  012C68  D026               	goto	l1951
  9313  012C6A                     
  9314                           ;fat16.c: 1043: return 0x80;
  9315  012C6A  0E80               	movlw	128
  9316  012C6C  0012               	return	
  9317  012C6E                     
  9318                           ;fat16.c: 1045: return 0;
  9319  012C6E  0E00               	movlw	0
  9320  012C70  0012               	return	
  9321  012C72                     
  9322                           ;fat16.c: 1047: return 2;
  9323  012C72  0E02               	movlw	2
  9324  012C74  0012               	return	
  9325  012C76                     
  9326                           ;fat16.c: 1049: return 0;
  9327  012C76  0E00               	movlw	0
  9328  012C78  0012               	return	
  9329  012C7A                     
  9330                           ;fat16.c: 1051: return 0x04;
  9331  012C7A  0E04               	movlw	4
  9332  012C7C  0012               	return	
  9333  012C7E                     
  9334                           ;fat16.c: 1053: return 2;
  9335  012C7E  0E02               	movlw	2
  9336  012C80  0012               	return	
  9337  012C82                     
  9338                           ;fat16.c: 1055: return 3;
  9339  012C82  0E03               	movlw	3
  9340  012C84  0012               	return	
  9341  012C86                     
  9342                           ;fat16.c: 1057: return 8;
  9343  012C86  0E08               	movlw	8
  9344  012C88  0012               	return	
  9345  012C8A                     
  9346                           ;fat16.c: 1059: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xF
      +                          F));
  9347  012C8A  0E01               	movlw	1
  9348  012C8C  0012               	return	
  9349  012C8E                     
  9350                           ;fat16.c: 1061: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8
      +                          )&0xFF));
  9351  012C8E  0E00               	movlw	0
  9352  012C90  0012               	return	
  9353  012C92                     
  9354                           ;fat16.c: 1063: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))&0xFF));
  9355  012C92  0E00               	movlw	0
  9356  012C94  0012               	return	
  9357  012C96                     
  9358                           ;fat16.c: 1065: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  9359  012C96  0E00               	movlw	0
  9360  012C98  0012               	return	
  9361  012C9A                     
  9362                           ;fat16.c: 1067: return ((unsigned char)((((unsigned short)((((uint32_t)8191))&0xFFFF)))&
      +                          0xFF));
  9363  012C9A  0EFF               	movlw	255
  9364  012C9C  0012               	return	
  9365  012C9E                     
  9366                           ;fat16.c: 1069: return ((unsigned char)(((((unsigned short)((((uint32_t)8191))&0xFFFF)))
      +                          >>8)&0xFF));
  9367  012C9E  0E1F               	movlw	31
  9368  012CA0  0012               	return	
  9369  012CA2                     
  9370                           ;fat16.c: 1071: return ((unsigned char)((((unsigned short)(((((uint32_t)8191))>>16)&0xFF
      +                          FF)))&0xFF));
  9371  012CA2  0E00               	movlw	0
  9372  012CA4  0012               	return	
  9373  012CA6                     
  9374                           ;fat16.c: 1073: return ((unsigned char)(((((unsigned short)(((((uint32_t)8191))>>16)&0xF
      +                          FFF)))>>8)&0xFF));
  9375  012CA6  0E00               	movlw	0
  9376  012CA8  0012               	return	
  9377  012CAA                     
  9378                           ;fat16.c: 1075: return ((unsigned char)((((uint16_t)0X55AA)>>8)&0xFF));
  9379  012CAA  0E55               	movlw	85
  9380  012CAC  0012               	return	
  9381  012CAE                     
  9382                           ;fat16.c: 1077: return ((unsigned char)(((uint16_t)0X55AA)&0xFF));
  9383  012CAE  0EAA               	movlw	170
  9384  012CB0  0012               	return	
  9385  012CB2                     
  9386                           ;fat16.c: 1079: return 0X00;
  9387  012CB2  0E00               	movlw	0
  9388                           
  9389                           ;fat16.c: 1080: }
  9390  012CB4  0012               	return	
  9391  012CB6                     l1951:
  9392  012CB6  C060  F062         	movff	__get_mbr@idx,??__get_mbr
  9393  012CBA  C061  F063         	movff	__get_mbr@idx+1,??__get_mbr+1
  9394                           
  9395                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9396                           ; Switch size 1, requested type "space"
  9397                           ; Number of cases is 1, Range of values is 1 to 1
  9398                           ; switch strategies available:
  9399                           ; Name         Instructions Cycles
  9400                           ; simple_byte            4     3 (average)
  9401                           ;	Chosen strategy is simple_byte
  9402  012CBE  0100               	movlb	0	; () banked
  9403  012CC0  5163               	movf	(??__get_mbr+1)& (0+255),w,b
  9404  012CC2  0A01               	xorlw	1	; case 1
  9405  012CC4  A4D8               	btfss	status,2,c
  9406  012CC6  D7F5               	goto	l1971
  9407                           
  9408                           ; BSR set to: 0
  9409                           ; Switch size 1, requested type "space"
  9410                           ; Number of cases is 18, Range of values is 190 to 255
  9411                           ; switch strategies available:
  9412                           ; Name         Instructions Cycles
  9413                           ; simple_byte           55    28 (average)
  9414                           ;	Chosen strategy is simple_byte
  9415  012CC8  5162               	movf	??__get_mbr& (0+255),w,b
  9416  012CCA  0ABE               	xorlw	190	; case 190
  9417  012CCC  B4D8               	btfsc	status,2,c
  9418  012CCE  D7CD               	goto	l1952
  9419  012CD0  0A01               	xorlw	1	; case 191
  9420  012CD2  B4D8               	btfsc	status,2,c
  9421  012CD4  D7CC               	goto	l1954
  9422  012CD6  0A7F               	xorlw	127	; case 192
  9423  012CD8  B4D8               	btfsc	status,2,c
  9424  012CDA  D7CB               	goto	l1955
  9425  012CDC  0A01               	xorlw	1	; case 193
  9426  012CDE  B4D8               	btfsc	status,2,c
  9427  012CE0  D7CA               	goto	l1956
  9428  012CE2  0A03               	xorlw	3	; case 194
  9429  012CE4  B4D8               	btfsc	status,2,c
  9430  012CE6  D7C9               	goto	l1957
  9431  012CE8  0A01               	xorlw	1	; case 195
  9432  012CEA  B4D8               	btfsc	status,2,c
  9433  012CEC  D7C8               	goto	l1958
  9434  012CEE  0A07               	xorlw	7	; case 196
  9435  012CF0  B4D8               	btfsc	status,2,c
  9436  012CF2  D7C7               	goto	l1959
  9437  012CF4  0A01               	xorlw	1	; case 197
  9438  012CF6  B4D8               	btfsc	status,2,c
  9439  012CF8  D7C6               	goto	l1960
  9440  012CFA  0A03               	xorlw	3	; case 198
  9441  012CFC  B4D8               	btfsc	status,2,c
  9442  012CFE  D7C5               	goto	l1961
  9443  012D00  0A01               	xorlw	1	; case 199
  9444  012D02  B4D8               	btfsc	status,2,c
  9445  012D04  D7C4               	goto	l1962
  9446  012D06  0A0F               	xorlw	15	; case 200
  9447  012D08  B4D8               	btfsc	status,2,c
  9448  012D0A  D7C3               	goto	l1963
  9449  012D0C  0A01               	xorlw	1	; case 201
  9450  012D0E  B4D8               	btfsc	status,2,c
  9451  012D10  D7C2               	goto	l1964
  9452  012D12  0A03               	xorlw	3	; case 202
  9453  012D14  B4D8               	btfsc	status,2,c
  9454  012D16  D7C1               	goto	l1965
  9455  012D18  0A01               	xorlw	1	; case 203
  9456  012D1A  B4D8               	btfsc	status,2,c
  9457  012D1C  D7C0               	goto	l1966
  9458  012D1E  0A07               	xorlw	7	; case 204
  9459  012D20  B4D8               	btfsc	status,2,c
  9460  012D22  D7BF               	goto	l1967
  9461  012D24  0A01               	xorlw	1	; case 205
  9462  012D26  B4D8               	btfsc	status,2,c
  9463  012D28  D7BE               	goto	l1968
  9464  012D2A  0A33               	xorlw	51	; case 254
  9465  012D2C  B4D8               	btfsc	status,2,c
  9466  012D2E  D7BD               	goto	l1969
  9467  012D30  0A01               	xorlw	1	; case 255
  9468  012D32  B4D8               	btfsc	status,2,c
  9469  012D34  D7BC               	goto	l1970
  9470  012D36  D7BD               	goto	l1971
  9471  012D38                     __end_of__get_mbr:
  9472                           	opt stack 0
  9473                           tblptru	equ	0xFF8
  9474                           tblptrh	equ	0xFF7
  9475                           tblptrl	equ	0xFF6
  9476                           tablat	equ	0xFF5
  9477                           prodh	equ	0xFF4
  9478                           prodl	equ	0xFF3
  9479                           postinc0	equ	0xFEE
  9480                           wreg	equ	0xFE8
  9481                           postdec1	equ	0xFE5
  9482                           fsr1h	equ	0xFE2
  9483                           fsr1l	equ	0xFE1
  9484                           indf2	equ	0xFDF
  9485                           postinc2	equ	0xFDE
  9486                           fsr2h	equ	0xFDA
  9487                           fsr2l	equ	0xFD9
  9488                           status	equ	0xFD8
  9489                           
  9490 ;; *************** function __get_fbr *****************
  9491 ;; Defined at:
  9492 ;;		line 1083 in file "fat16.c"
  9493 ;; Parameters:    Size  Location     Type
  9494 ;;  idx             2    0[BANK0 ] unsigned int 
  9495 ;; Auto vars:     Size  Location     Type
  9496 ;;		None
  9497 ;; Return value:  Size  Location     Type
  9498 ;;                  1    wreg      unsigned char 
  9499 ;; Registers used:
  9500 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  9501 ;; Tracked objects:
  9502 ;;		On entry : 0/0
  9503 ;;		On exit  : 0/0
  9504 ;;		Unchanged: 0/0
  9505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9506 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9508 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9509 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9510 ;;Total ram usage:        4 bytes
  9511 ;; Hardware stack levels used:    1
  9512 ;; Hardware stack levels required when called:   10
  9513 ;; This function calls:
  9514 ;;		Nothing
  9515 ;; This function is called by:
  9516 ;;		_fat_get_format_status
  9517 ;;		_fat_restore_mbr_fbr
  9518 ;;		_fat_format
  9519 ;; This function uses a non-reentrant model
  9520 ;;
  9521                           
  9522                           	psect	text19
  9523  00D7E4                     __ptext19:
  9524                           	opt stack 0
  9525  00D7E4                     __get_fbr:
  9526                           	opt stack 17
  9527                           
  9528                           ;fat16.c: 1085: switch (idx)
  9529                           
  9530                           ;incstack = 0
  9531  00D7E4  D098               	goto	l1975
  9532  00D7E6                     
  9533                           ;fat16.c: 1088: return 0xEB;
  9534  00D7E6  0EEB               	movlw	235
  9535  00D7E8  0012               	return	
  9536  00D7EA                     
  9537                           ;fat16.c: 1090: return 0x3C;
  9538  00D7EA  0E3C               	movlw	60
  9539  00D7EC  0012               	return	
  9540  00D7EE                     
  9541                           ;fat16.c: 1092: return 0x90;
  9542  00D7EE  0E90               	movlw	144
  9543  00D7F0  0012               	return	
  9544  00D7F2                     
  9545                           ;fat16.c: 1094: return "MSDOS5.0"[0];
  9546  00D7F2  0E7F               	movlw	low STR_7
  9547  00D7F4  6EF6               	movwf	tblptrl,c
  9548  00D7F6                     	if	1	;There is more than 1 active tblptr byte
  9549  00D7F6  0EA3               	movlw	high STR_7
  9550  00D7F8  6EF7               	movwf	tblptrh,c
  9551  00D7FA                     	endif
  9552  00D7FA                     	if	1	;There are 3 active tblptr bytes
  9553  00D7FA  0E00               	movlw	low (STR_7 shr (0+16))
  9554  00D7FC  6EF8               	movwf	tblptru,c
  9555  00D7FE                     	endif
  9556  00D7FE  0008               	tblrd		*
  9557  00D800  50F5               	movf	tablat,w,c
  9558  00D802  0012               	return	
  9559  00D804                     
  9560                           ;fat16.c: 1096: return "MSDOS5.0"[1];
  9561  00D804  0E80               	movlw	low (STR_7+1)
  9562  00D806  6EF6               	movwf	tblptrl,c
  9563  00D808  0EA3               	movlw	high (STR_7+1)
  9564  00D80A  6EF7               	movwf	tblptrh,c
  9565  00D80C                     	if	0	;tblptru may be non-zero
  9566  00D80C                     	endif
  9567  00D80C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9568  00D80C  0E00               	movlw	low (__mediumconst shr (0+16))
  9569  00D80E  6EF8               	movwf	tblptru,c
  9570  00D810                     	endif
  9571  00D810  0008               	tblrd		*
  9572  00D812  50F5               	movf	tablat,w,c
  9573  00D814  0012               	return	
  9574  00D816                     
  9575                           ;fat16.c: 1098: return "MSDOS5.0"[2];
  9576  00D816  0E81               	movlw	low (STR_7+2)
  9577  00D818  6EF6               	movwf	tblptrl,c
  9578  00D81A  0EA3               	movlw	high (STR_7+2)
  9579  00D81C  6EF7               	movwf	tblptrh,c
  9580  00D81E                     	if	0	;tblptru may be non-zero
  9581  00D81E                     	endif
  9582  00D81E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9583  00D81E  0E00               	movlw	low (__mediumconst shr (0+16))
  9584  00D820  6EF8               	movwf	tblptru,c
  9585  00D822                     	endif
  9586  00D822  0008               	tblrd		*
  9587  00D824  50F5               	movf	tablat,w,c
  9588  00D826  0012               	return	
  9589  00D828                     
  9590                           ;fat16.c: 1100: return "MSDOS5.0"[3];
  9591  00D828  0E82               	movlw	low (STR_7+3)
  9592  00D82A  6EF6               	movwf	tblptrl,c
  9593  00D82C  0EA3               	movlw	high (STR_7+3)
  9594  00D82E  6EF7               	movwf	tblptrh,c
  9595  00D830                     	if	0	;tblptru may be non-zero
  9596  00D830                     	endif
  9597  00D830                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9598  00D830  0E00               	movlw	low (__mediumconst shr (0+16))
  9599  00D832  6EF8               	movwf	tblptru,c
  9600  00D834                     	endif
  9601  00D834  0008               	tblrd		*
  9602  00D836  50F5               	movf	tablat,w,c
  9603  00D838  0012               	return	
  9604  00D83A                     
  9605                           ;fat16.c: 1102: return "MSDOS5.0"[4];
  9606  00D83A  0E83               	movlw	low (STR_7+4)
  9607  00D83C  6EF6               	movwf	tblptrl,c
  9608  00D83E  0EA3               	movlw	high (STR_7+4)
  9609  00D840  6EF7               	movwf	tblptrh,c
  9610  00D842                     	if	0	;tblptru may be non-zero
  9611  00D842                     	endif
  9612  00D842                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9613  00D842  0E00               	movlw	low (__mediumconst shr (0+16))
  9614  00D844  6EF8               	movwf	tblptru,c
  9615  00D846                     	endif
  9616  00D846  0008               	tblrd		*
  9617  00D848  50F5               	movf	tablat,w,c
  9618  00D84A  0012               	return	
  9619  00D84C                     
  9620                           ;fat16.c: 1104: return "MSDOS5.0"[5];
  9621  00D84C  0E84               	movlw	low (STR_7+5)
  9622  00D84E  6EF6               	movwf	tblptrl,c
  9623  00D850  0EA3               	movlw	high (STR_7+5)
  9624  00D852  6EF7               	movwf	tblptrh,c
  9625  00D854                     	if	0	;tblptru may be non-zero
  9626  00D854                     	endif
  9627  00D854                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9628  00D854  0E00               	movlw	low (__mediumconst shr (0+16))
  9629  00D856  6EF8               	movwf	tblptru,c
  9630  00D858                     	endif
  9631  00D858  0008               	tblrd		*
  9632  00D85A  50F5               	movf	tablat,w,c
  9633  00D85C  0012               	return	
  9634  00D85E                     
  9635                           ;fat16.c: 1106: return "MSDOS5.0"[6];
  9636  00D85E  0E85               	movlw	low (STR_7+6)
  9637  00D860  6EF6               	movwf	tblptrl,c
  9638  00D862  0EA3               	movlw	high (STR_7+6)
  9639  00D864  6EF7               	movwf	tblptrh,c
  9640  00D866                     	if	0	;tblptru may be non-zero
  9641  00D866                     	endif
  9642  00D866                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9643  00D866  0E00               	movlw	low (__mediumconst shr (0+16))
  9644  00D868  6EF8               	movwf	tblptru,c
  9645  00D86A                     	endif
  9646  00D86A  0008               	tblrd		*
  9647  00D86C  50F5               	movf	tablat,w,c
  9648  00D86E  0012               	return	
  9649  00D870                     
  9650                           ;fat16.c: 1108: return "MSDOS5.0"[7];
  9651  00D870  0E86               	movlw	low (STR_7+7)
  9652  00D872  6EF6               	movwf	tblptrl,c
  9653  00D874  0EA3               	movlw	high (STR_7+7)
  9654  00D876  6EF7               	movwf	tblptrh,c
  9655  00D878                     	if	0	;tblptru may be non-zero
  9656  00D878                     	endif
  9657  00D878                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9658  00D878  0E00               	movlw	low (__mediumconst shr (0+16))
  9659  00D87A  6EF8               	movwf	tblptru,c
  9660  00D87C                     	endif
  9661  00D87C  0008               	tblrd		*
  9662  00D87E  50F5               	movf	tablat,w,c
  9663  00D880  0012               	return	
  9664  00D882                     
  9665                           ;fat16.c: 1110: return ((unsigned char)((((uint16_t)512))&0xFF));
  9666  00D882  0E00               	movlw	0
  9667  00D884  0012               	return	
  9668  00D886                     
  9669                           ;fat16.c: 1112: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
  9670  00D886  0E02               	movlw	2
  9671  00D888  0012               	return	
  9672  00D88A                     
  9673                           ;fat16.c: 1114: return 1;
  9674  00D88A  0E01               	movlw	1
  9675  00D88C  0012               	return	
  9676  00D88E                     
  9677                           ;fat16.c: 1116: return ((unsigned char)((((uint16_t)1))&0xFF));
  9678  00D88E  0E01               	movlw	1
  9679  00D890  0012               	return	
  9680  00D892                     
  9681                           ;fat16.c: 1118: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
  9682  00D892  0E00               	movlw	0
  9683  00D894  0012               	return	
  9684  00D896                     
  9685                           ;fat16.c: 1120: return 1;
  9686  00D896  0E01               	movlw	1
  9687  00D898  0012               	return	
  9688  00D89A                     
  9689                           ;fat16.c: 1122: return ((unsigned char)((((uint16_t)64))&0xFF));
  9690  00D89A  0E40               	movlw	64
  9691  00D89C  0012               	return	
  9692  00D89E                     
  9693                           ;fat16.c: 1124: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
  9694  00D89E  0E00               	movlw	0
  9695  00D8A0  0012               	return	
  9696  00D8A2                     
  9697                           ;fat16.c: 1126: return ((unsigned char)((((uint16_t)8191))&0xFF));
  9698  00D8A2  0EFF               	movlw	255
  9699  00D8A4  0012               	return	
  9700  00D8A6                     
  9701                           ;fat16.c: 1128: return ((unsigned char)(((((uint16_t)8191))>>8)&0xFF));
  9702  00D8A6  0E1F               	movlw	31
  9703  00D8A8  0012               	return	
  9704  00D8AA                     
  9705                           ;fat16.c: 1130: return 0XF8;
  9706  00D8AA  0EF8               	movlw	248
  9707  00D8AC  0012               	return	
  9708  00D8AE                     
  9709                           ;fat16.c: 1132: return ((unsigned char)((((uint16_t)32))&0xFF));
  9710  00D8AE  0E20               	movlw	32
  9711  00D8B0  0012               	return	
  9712  00D8B2                     
  9713                           ;fat16.c: 1134: return ((unsigned char)(((((uint16_t)32))>>8)&0xFF));
  9714  00D8B2  0E00               	movlw	0
  9715  00D8B4  0012               	return	
  9716  00D8B6                     
  9717                           ;fat16.c: 1136: return ((unsigned char)((((uint16_t)63))&0xFF));
  9718  00D8B6  0E3F               	movlw	63
  9719  00D8B8  0012               	return	
  9720  00D8BA                     
  9721                           ;fat16.c: 1138: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
  9722  00D8BA  0E00               	movlw	0
  9723  00D8BC  0012               	return	
  9724  00D8BE                     
  9725                           ;fat16.c: 1140: return ((unsigned char)((((uint16_t)16))&0xFF));
  9726  00D8BE  0E10               	movlw	16
  9727  00D8C0  0012               	return	
  9728  00D8C2                     
  9729                           ;fat16.c: 1142: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
  9730  00D8C2  0E00               	movlw	0
  9731  00D8C4  0012               	return	
  9732  00D8C6                     
  9733                           ;fat16.c: 1144: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xF
      +                          F));
  9734  00D8C6  0E00               	movlw	0
  9735  00D8C8  0012               	return	
  9736  00D8CA                     
  9737                           ;fat16.c: 1146: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8
      +                          )&0xFF));
  9738  00D8CA  0E00               	movlw	0
  9739  00D8CC  0012               	return	
  9740  00D8CE                     
  9741                           ;fat16.c: 1148: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))&0xFF));
  9742  00D8CE  0E00               	movlw	0
  9743  00D8D0  0012               	return	
  9744  00D8D2                     
  9745                           ;fat16.c: 1150: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  9746  00D8D2  0E00               	movlw	0
  9747  00D8D4  0012               	return	
  9748  00D8D6                     
  9749                           ;fat16.c: 1152: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
  9750  00D8D6  0E01               	movlw	1
  9751  00D8D8  0012               	return	
  9752  00D8DA                     
  9753                           ;fat16.c: 1154: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
  9754  00D8DA  0E00               	movlw	0
  9755  00D8DC  0012               	return	
  9756  00D8DE                     
  9757                           ;fat16.c: 1156: return ((unsigned char)((((unsigned short)((((uint32_t)34))&0xFFFF)))&0x
      +                          FF));
  9758  00D8DE  0E22               	movlw	34
  9759  00D8E0  0012               	return	
  9760  00D8E2                     
  9761                           ;fat16.c: 1158: return ((unsigned char)(((((unsigned short)((((uint32_t)34))&0xFFFF)))>>
      +                          8)&0xFF));
  9762  00D8E2  0E00               	movlw	0
  9763  00D8E4  0012               	return	
  9764  00D8E6                     
  9765                           ;fat16.c: 1162: return ((unsigned char)(((((unsigned short)(((((uint32_t)34))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
  9766                           
  9767                           ;fat16.c: 1161: case 0x2F:
  9768  00D8E6  0E00               	movlw	0
  9769  00D8E8  0012               	return	
  9770  00D8EA                     
  9771                           ;fat16.c: 1164: return 'F';
  9772  00D8EA  0E46               	movlw	70
  9773  00D8EC  0012               	return	
  9774  00D8EE                     
  9775                           ;fat16.c: 1166: return 'A';
  9776  00D8EE  0E41               	movlw	65
  9777  00D8F0  0012               	return	
  9778  00D8F2                     
  9779                           ;fat16.c: 1168: return 'T';
  9780  00D8F2  0E54               	movlw	84
  9781  00D8F4  0012               	return	
  9782  00D8F6                     
  9783                           ;fat16.c: 1170: return '1';
  9784  00D8F6  0E31               	movlw	49
  9785  00D8F8  0012               	return	
  9786  00D8FA                     
  9787                           ;fat16.c: 1172: return '6';
  9788  00D8FA  0E36               	movlw	54
  9789  00D8FC  0012               	return	
  9790  00D8FE                     
  9791                           ;fat16.c: 1174: return ' ';
  9792  00D8FE  0E20               	movlw	32
  9793  00D900  0012               	return	
  9794  00D902                     
  9795                           ;fat16.c: 1176: return ' ';
  9796  00D902  0E20               	movlw	32
  9797  00D904  0012               	return	
  9798  00D906                     
  9799                           ;fat16.c: 1178: return ' ';
  9800  00D906  0E20               	movlw	32
  9801  00D908  0012               	return	
  9802  00D90A                     
  9803                           ;fat16.c: 1180: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
  9804  00D90A  0E55               	movlw	85
  9805  00D90C  0012               	return	
  9806  00D90E                     
  9807                           ;fat16.c: 1182: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
  9808  00D90E  0EAA               	movlw	170
  9809  00D910  0012               	return	
  9810  00D912                     
  9811                           ;fat16.c: 1184: return 0X00;
  9812  00D912  0E00               	movlw	0
  9813                           
  9814                           ;fat16.c: 1185: }
  9815  00D914  0012               	return	
  9816  00D916                     l1975:
  9817  00D916  C060  F062         	movff	__get_fbr@idx,??__get_fbr
  9818  00D91A  C061  F063         	movff	__get_fbr@idx+1,??__get_fbr+1
  9819                           
  9820                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  9821                           ; Switch size 1, requested type "space"
  9822                           ; Number of cases is 2, Range of values is 0 to 1
  9823                           ; switch strategies available:
  9824                           ; Name         Instructions Cycles
  9825                           ; simple_byte            7     4 (average)
  9826                           ;	Chosen strategy is simple_byte
  9827  00D91E  0100               	movlb	0	; () banked
  9828  00D920  5163               	movf	(??__get_fbr+1)& (0+255),w,b
  9829  00D922  0A00               	xorlw	0	; case 0
  9830  00D924  B4D8               	btfsc	status,2,c
  9831  00D926  D004               	goto	l20697
  9832  00D928  0A01               	xorlw	1	; case 1
  9833  00D92A  B4D8               	btfsc	status,2,c
  9834  00D92C  D08D               	goto	l20699
  9835  00D92E  D7F1               	goto	l2025
  9836  00D930                     l20697:
  9837                           
  9838                           ; BSR set to: 0
  9839                           ; Switch size 1, requested type "space"
  9840                           ; Number of cases is 46, Range of values is 0 to 61
  9841                           ; switch strategies available:
  9842                           ; Name         Instructions Cycles
  9843                           ; simple_byte          139    70 (average)
  9844                           ;	Chosen strategy is simple_byte
  9845  00D930  5162               	movf	??__get_fbr& (0+255),w,b
  9846  00D932  0A00               	xorlw	0	; case 0
  9847  00D934  B4D8               	btfsc	status,2,c
  9848  00D936  D757               	goto	l1976
  9849  00D938  0A01               	xorlw	1	; case 1
  9850  00D93A  B4D8               	btfsc	status,2,c
  9851  00D93C  D756               	goto	l1978
  9852  00D93E  0A03               	xorlw	3	; case 2
  9853  00D940  B4D8               	btfsc	status,2,c
  9854  00D942  D755               	goto	l1979
  9855  00D944  0A01               	xorlw	1	; case 3
  9856  00D946  B4D8               	btfsc	status,2,c
  9857  00D948  D754               	goto	l1980
  9858  00D94A  0A07               	xorlw	7	; case 4
  9859  00D94C  B4D8               	btfsc	status,2,c
  9860  00D94E  D75A               	goto	l1981
  9861  00D950  0A01               	xorlw	1	; case 5
  9862  00D952  B4D8               	btfsc	status,2,c
  9863  00D954  D760               	goto	l1982
  9864  00D956  0A03               	xorlw	3	; case 6
  9865  00D958  B4D8               	btfsc	status,2,c
  9866  00D95A  D766               	goto	l1983
  9867  00D95C  0A01               	xorlw	1	; case 7
  9868  00D95E  B4D8               	btfsc	status,2,c
  9869  00D960  D76C               	goto	l1984
  9870  00D962  0A0F               	xorlw	15	; case 8
  9871  00D964  B4D8               	btfsc	status,2,c
  9872  00D966  D772               	goto	l1985
  9873  00D968  0A01               	xorlw	1	; case 9
  9874  00D96A  B4D8               	btfsc	status,2,c
  9875  00D96C  D778               	goto	l1986
  9876  00D96E  0A03               	xorlw	3	; case 10
  9877  00D970  B4D8               	btfsc	status,2,c
  9878  00D972  D77E               	goto	l1987
  9879  00D974  0A01               	xorlw	1	; case 11
  9880  00D976  B4D8               	btfsc	status,2,c
  9881  00D978  D784               	goto	l1988
  9882  00D97A  0A07               	xorlw	7	; case 12
  9883  00D97C  B4D8               	btfsc	status,2,c
  9884  00D97E  D783               	goto	l1989
  9885  00D980  0A01               	xorlw	1	; case 13
  9886  00D982  B4D8               	btfsc	status,2,c
  9887  00D984  D782               	goto	l1990
  9888  00D986  0A03               	xorlw	3	; case 14
  9889  00D988  B4D8               	btfsc	status,2,c
  9890  00D98A  D781               	goto	l1991
  9891  00D98C  0A01               	xorlw	1	; case 15
  9892  00D98E  B4D8               	btfsc	status,2,c
  9893  00D990  D780               	goto	l1992
  9894  00D992  0A1F               	xorlw	31	; case 16
  9895  00D994  B4D8               	btfsc	status,2,c
  9896  00D996  D77F               	goto	l1993
  9897  00D998  0A01               	xorlw	1	; case 17
  9898  00D99A  B4D8               	btfsc	status,2,c
  9899  00D99C  D77E               	goto	l1994
  9900  00D99E  0A03               	xorlw	3	; case 18
  9901  00D9A0  B4D8               	btfsc	status,2,c
  9902  00D9A2  D77D               	goto	l1995
  9903  00D9A4  0A01               	xorlw	1	; case 19
  9904  00D9A6  B4D8               	btfsc	status,2,c
  9905  00D9A8  D77C               	goto	l1996
  9906  00D9AA  0A07               	xorlw	7	; case 20
  9907  00D9AC  B4D8               	btfsc	status,2,c
  9908  00D9AE  D77B               	goto	l1997
  9909  00D9B0  0A01               	xorlw	1	; case 21
  9910  00D9B2  B4D8               	btfsc	status,2,c
  9911  00D9B4  D77A               	goto	l1998
  9912  00D9B6  0A03               	xorlw	3	; case 22
  9913  00D9B8  B4D8               	btfsc	status,2,c
  9914  00D9BA  D779               	goto	l1999
  9915  00D9BC  0A01               	xorlw	1	; case 23
  9916  00D9BE  B4D8               	btfsc	status,2,c
  9917  00D9C0  D778               	goto	l2000
  9918  00D9C2  0A0F               	xorlw	15	; case 24
  9919  00D9C4  B4D8               	btfsc	status,2,c
  9920  00D9C6  D777               	goto	l2001
  9921  00D9C8  0A01               	xorlw	1	; case 25
  9922  00D9CA  B4D8               	btfsc	status,2,c
  9923  00D9CC  D776               	goto	l2002
  9924  00D9CE  0A03               	xorlw	3	; case 26
  9925  00D9D0  B4D8               	btfsc	status,2,c
  9926  00D9D2  D775               	goto	l2003
  9927  00D9D4  0A01               	xorlw	1	; case 27
  9928  00D9D6  B4D8               	btfsc	status,2,c
  9929  00D9D8  D774               	goto	l2004
  9930  00D9DA  0A07               	xorlw	7	; case 28
  9931  00D9DC  B4D8               	btfsc	status,2,c
  9932  00D9DE  D773               	goto	l2005
  9933  00D9E0  0A01               	xorlw	1	; case 29
  9934  00D9E2  B4D8               	btfsc	status,2,c
  9935  00D9E4  D772               	goto	l2006
  9936  00D9E6  0A03               	xorlw	3	; case 30
  9937  00D9E8  B4D8               	btfsc	status,2,c
  9938  00D9EA  D771               	goto	l2007
  9939  00D9EC  0A01               	xorlw	1	; case 31
  9940  00D9EE  B4D8               	btfsc	status,2,c
  9941  00D9F0  D770               	goto	l2008
  9942  00D9F2  0A37               	xorlw	55	; case 40
  9943  00D9F4  B4D8               	btfsc	status,2,c
  9944  00D9F6  D76F               	goto	l2009
  9945  00D9F8  0A01               	xorlw	1	; case 41
  9946  00D9FA  B4D8               	btfsc	status,2,c
  9947  00D9FC  D76E               	goto	l2010
  9948  00D9FE  0A05               	xorlw	5	; case 44
  9949  00DA00  B4D8               	btfsc	status,2,c
  9950  00DA02  D76D               	goto	l2011
  9951  00DA04  0A01               	xorlw	1	; case 45
  9952  00DA06  B4D8               	btfsc	status,2,c
  9953  00DA08  D76C               	goto	l2012
  9954  00DA0A  0A03               	xorlw	3	; case 46
  9955  00DA0C  B4D8               	btfsc	status,2,c
  9956  00DA0E  D76B               	goto	l2013
  9957  00DA10  0A01               	xorlw	1	; case 47
  9958  00DA12  B4D8               	btfsc	status,2,c
  9959  00DA14  D768               	goto	l2013
  9960  00DA16  0A19               	xorlw	25	; case 54
  9961  00DA18  B4D8               	btfsc	status,2,c
  9962  00DA1A  D767               	goto	l2015
  9963  00DA1C  0A01               	xorlw	1	; case 55
  9964  00DA1E  B4D8               	btfsc	status,2,c
  9965  00DA20  D766               	goto	l2016
  9966  00DA22  0A0F               	xorlw	15	; case 56
  9967  00DA24  B4D8               	btfsc	status,2,c
  9968  00DA26  D765               	goto	l2017
  9969  00DA28  0A01               	xorlw	1	; case 57
  9970  00DA2A  B4D8               	btfsc	status,2,c
  9971  00DA2C  D764               	goto	l2018
  9972  00DA2E  0A03               	xorlw	3	; case 58
  9973  00DA30  B4D8               	btfsc	status,2,c
  9974  00DA32  D763               	goto	l2019
  9975  00DA34  0A01               	xorlw	1	; case 59
  9976  00DA36  B4D8               	btfsc	status,2,c
  9977  00DA38  D762               	goto	l2020
  9978  00DA3A  0A07               	xorlw	7	; case 60
  9979  00DA3C  B4D8               	btfsc	status,2,c
  9980  00DA3E  D761               	goto	l2021
  9981  00DA40  0A01               	xorlw	1	; case 61
  9982  00DA42  B4D8               	btfsc	status,2,c
  9983  00DA44  D760               	goto	l2022
  9984  00DA46  D765               	goto	l2025
  9985  00DA48                     l20699:
  9986                           
  9987                           ; BSR set to: 0
  9988                           ; Switch size 1, requested type "space"
  9989                           ; Number of cases is 2, Range of values is 254 to 255
  9990                           ; switch strategies available:
  9991                           ; Name         Instructions Cycles
  9992                           ; simple_byte            7     4 (average)
  9993                           ;	Chosen strategy is simple_byte
  9994  00DA48  5162               	movf	??__get_fbr& (0+255),w,b
  9995  00DA4A  0AFE               	xorlw	254	; case 254
  9996  00DA4C  B4D8               	btfsc	status,2,c
  9997  00DA4E  D75D               	goto	l2023
  9998  00DA50  0A01               	xorlw	1	; case 255
  9999  00DA52  B4D8               	btfsc	status,2,c
 10000  00DA54  D75C               	goto	l2024
 10001  00DA56  D75D               	goto	l2025
 10002  00DA58                     __end_of__get_fbr:
 10003                           	opt stack 0
 10004                           tblptru	equ	0xFF8
 10005                           tblptrh	equ	0xFF7
 10006                           tblptrl	equ	0xFF6
 10007                           tablat	equ	0xFF5
 10008                           prodh	equ	0xFF4
 10009                           prodl	equ	0xFF3
 10010                           postinc0	equ	0xFEE
 10011                           wreg	equ	0xFE8
 10012                           postdec1	equ	0xFE5
 10013                           fsr1h	equ	0xFE2
 10014                           fsr1l	equ	0xFE1
 10015                           indf2	equ	0xFDF
 10016                           postinc2	equ	0xFDE
 10017                           fsr2h	equ	0xFDA
 10018                           fsr2l	equ	0xFD9
 10019                           status	equ	0xFD8
 10020                           
 10021 ;; *************** function _encoder_init *****************
 10022 ;; Defined at:
 10023 ;;		line 99 in file "encoder.c"
 10024 ;; Parameters:    Size  Location     Type
 10025 ;;		None
 10026 ;; Auto vars:     Size  Location     Type
 10027 ;;		None
 10028 ;; Return value:  Size  Location     Type
 10029 ;;                  1    wreg      void 
 10030 ;; Registers used:
 10031 ;;		wreg, status,2, status,0
 10032 ;; Tracked objects:
 10033 ;;		On entry : 0/0
 10034 ;;		On exit  : 0/0
 10035 ;;		Unchanged: 0/0
 10036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10041 ;;Total ram usage:        0 bytes
 10042 ;; Hardware stack levels used:    1
 10043 ;; Hardware stack levels required when called:   10
 10044 ;; This function calls:
 10045 ;;		Nothing
 10046 ;; This function is called by:
 10047 ;;		_system_init
 10048 ;; This function uses a non-reentrant model
 10049 ;;
 10050                           
 10051                           	psect	text20
 10052  0161C0                     __ptext20:
 10053                           	opt stack 0
 10054  0161C0                     _encoder_init:
 10055                           	opt stack 19
 10056                           
 10057                           ;encoder.c: 101: enc1 = PORTE & 0b00000111;
 10058                           
 10059                           ;incstack = 0
 10060  0161C0  5084               	movf	3972,w,c	;volatile
 10061  0161C2  0B07               	andlw	7
 10062  0161C4  0101               	movlb	1	; () banked
 10063  0161C6  6F47               	movwf	_enc1& (0+255),b
 10064                           
 10065                           ;encoder.c: 102: enc2 = PORTA & 0b00000111;
 10066  0161C8  5080               	movf	3968,w,c	;volatile
 10067  0161CA  0B07               	andlw	7
 10068  0161CC  6F46               	movwf	_enc2& (0+255),b
 10069                           
 10070                           ; BSR set to: 1
 10071                           ;encoder.c: 103: os.encoder1Count = 0;
 10072  0161CE  0E00               	movlw	0
 10073  0161D0  6F67               	movwf	(_os+3)& (0+255),b	;volatile
 10074                           
 10075                           ; BSR set to: 1
 10076                           ;encoder.c: 104: os.encoder2Count = 0;
 10077  0161D2  0E00               	movlw	0
 10078  0161D4  6F69               	movwf	(_os+5)& (0+255),b	;volatile
 10079                           
 10080                           ; BSR set to: 1
 10081                           ;encoder.c: 105: os.button1 = 0;
 10082  0161D6  0E00               	movlw	0
 10083  0161D8  6F68               	movwf	(_os+4)& (0+255),b	;volatile
 10084                           
 10085                           ; BSR set to: 1
 10086                           ;encoder.c: 106: os.button2 = 0;
 10087  0161DA  0E00               	movlw	0
 10088  0161DC  6F6A               	movwf	(_os+6)& (0+255),b	;volatile
 10089                           
 10090                           ; BSR set to: 1
 10091                           ;encoder.c: 107: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 10092  0161DE  0E01               	movlw	1
 10093  0161E0  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 10094                           
 10095                           ; BSR set to: 1
 10096  0161E2  0012               	return		;funcret
 10097  0161E4                     __end_of_encoder_init:
 10098                           	opt stack 0
 10099                           tblptru	equ	0xFF8
 10100                           tblptrh	equ	0xFF7
 10101                           tblptrl	equ	0xFF6
 10102                           tablat	equ	0xFF5
 10103                           prodh	equ	0xFF4
 10104                           prodl	equ	0xFF3
 10105                           postinc0	equ	0xFEE
 10106                           wreg	equ	0xFE8
 10107                           postdec1	equ	0xFE5
 10108                           fsr1h	equ	0xFE2
 10109                           fsr1l	equ	0xFE1
 10110                           indf2	equ	0xFDF
 10111                           postinc2	equ	0xFDE
 10112                           fsr2h	equ	0xFDA
 10113                           fsr2l	equ	0xFD9
 10114                           status	equ	0xFD8
 10115                           
 10116 ;; *************** function _display_update *****************
 10117 ;; Defined at:
 10118 ;;		line 662 in file "display.c"
 10119 ;; Parameters:    Size  Location     Type
 10120 ;;		None
 10121 ;; Auto vars:     Size  Location     Type
 10122 ;;  line            1   16[BANK0 ] unsigned char 
 10123 ;; Return value:  Size  Location     Type
 10124 ;;                  1    wreg      void 
 10125 ;; Registers used:
 10126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10127 ;; Tracked objects:
 10128 ;;		On entry : 0/0
 10129 ;;		On exit  : 0/0
 10130 ;;		Unchanged: 0/0
 10131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10133 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10135 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10136 ;;Total ram usage:        1 bytes
 10137 ;; Hardware stack levels used:    1
 10138 ;; Hardware stack levels required when called:   14
 10139 ;; This function calls:
 10140 ;;		_i2c_display_cursor
 10141 ;;		_i2c_display_write_fixed
 10142 ;; This function is called by:
 10143 ;;		_main
 10144 ;;		_system_init
 10145 ;; This function uses a non-reentrant model
 10146 ;;
 10147                           
 10148                           	psect	text21
 10149  015CDE                     __ptext21:
 10150                           	opt stack 0
 10151  015CDE                     _display_update:
 10152                           	opt stack 15
 10153                           
 10154                           ;display.c: 664: uint8_t line;;display.c: 665: for(line=0; line<4; ++line)
 10155                           
 10156                           ; BSR set to: 1
 10157                           ;incstack = 0
 10158  015CDE  0E00               	movlw	0
 10159  015CE0  0100               	movlb	0	; () banked
 10160  015CE2  6F70               	movwf	display_update@line& (0+255),b
 10161  015CE4                     l17741:
 10162                           
 10163                           ; BSR set to: 0
 10164  015CE4  0E03               	movlw	3
 10165  015CE6  6570               	cpfsgt	display_update@line& (0+255),b
 10166  015CE8  D001               	goto	l1518
 10167  015CEA  0012               	return	
 10168  015CEC                     l1518:
 10169                           
 10170                           ; BSR set to: 0
 10171                           ;display.c: 666: {;display.c: 667: i2c_display_cursor(line, 0);
 10172                           
 10173                           ; BSR set to: 0
 10174  015CEC  0E00               	movlw	0
 10175  015CEE  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 10176  015CF0  5170               	movf	display_update@line& (0+255),w,b
 10177  015CF2  EC28  F0B1         	call	_i2c_display_cursor
 10178                           
 10179                           ;display.c: 668: i2c_display_write_fixed(display_content[line], 20);
 10180  015CF6  0100               	movlb	0	; () banked
 10181  015CF8  5170               	movf	display_update@line& (0+255),w,b
 10182  015CFA  0D14               	mullw	20
 10183  015CFC  0E49               	movlw	low _display_content
 10184  015CFE  24F3               	addwf	prodl,w,c
 10185  015D00  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 10186  015D02  0E02               	movlw	high _display_content
 10187  015D04  20F4               	addwfc	prodh,w,c
 10188  015D06  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 10189  015D08  0E14               	movlw	20
 10190  015D0A  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 10191  015D0C  EC33  F0AA         	call	_i2c_display_write_fixed	;wreg free
 10192  015D10  0100               	movlb	0	; () banked
 10193  015D12  2B70               	incf	display_update@line& (0+255),f,b
 10194  015D14  D7E7               	goto	l17741
 10195  015D16                     __end_of_display_update:
 10196                           	opt stack 0
 10197                           tblptru	equ	0xFF8
 10198                           tblptrh	equ	0xFF7
 10199                           tblptrl	equ	0xFF6
 10200                           tablat	equ	0xFF5
 10201                           prodh	equ	0xFF4
 10202                           prodl	equ	0xFF3
 10203                           postinc0	equ	0xFEE
 10204                           wreg	equ	0xFE8
 10205                           postdec1	equ	0xFE5
 10206                           fsr1h	equ	0xFE2
 10207                           fsr1l	equ	0xFE1
 10208                           indf2	equ	0xFDF
 10209                           postinc2	equ	0xFDE
 10210                           fsr2h	equ	0xFDA
 10211                           fsr2l	equ	0xFD9
 10212                           status	equ	0xFD8
 10213                           
 10214 ;; *************** function _i2c_display_write_fixed *****************
 10215 ;; Defined at:
 10216 ;;		line 479 in file "i2c.c"
 10217 ;; Parameters:    Size  Location     Type
 10218 ;;  data            2    5[BANK0 ] PTR unsigned char 
 10219 ;;		 -> display_content(80), 
 10220 ;;  length          1    7[BANK0 ] unsigned char 
 10221 ;; Auto vars:     Size  Location     Type
 10222 ;;  pos             1    8[BANK0 ] unsigned char 
 10223 ;; Return value:  Size  Location     Type
 10224 ;;                  1    wreg      void 
 10225 ;; Registers used:
 10226 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10227 ;; Tracked objects:
 10228 ;;		On entry : 0/0
 10229 ;;		On exit  : 0/0
 10230 ;;		Unchanged: 0/0
 10231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10232 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10233 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10235 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10236 ;;Total ram usage:        4 bytes
 10237 ;; Hardware stack levels used:    1
 10238 ;; Hardware stack levels required when called:   11
 10239 ;; This function calls:
 10240 ;;		__i2c_send
 10241 ;;		__i2c_start
 10242 ;;		__i2c_stop
 10243 ;;		__i2c_wait_idle
 10244 ;; This function is called by:
 10245 ;;		_display_update
 10246 ;; This function uses a non-reentrant model
 10247 ;;
 10248                           
 10249                           	psect	text22
 10250  015466                     __ptext22:
 10251                           	opt stack 0
 10252  015466                     _i2c_display_write_fixed:
 10253                           	opt stack 17
 10254                           
 10255                           ;i2c.c: 481: uint8_t pos;;i2c.c: 486: _i2c_wait_idle();
 10256                           
 10257                           ; BSR set to: 0
 10258                           ;incstack = 0
 10259  015466  EC9D  F0A6         	call	__i2c_wait_idle	;wreg free
 10260                           
 10261                           ;i2c.c: 487: _i2c_start();
 10262  01546A  EC49  F0B2         	call	__i2c_start	;wreg free
 10263                           
 10264                           ;i2c.c: 488: _i2c_wait_idle();
 10265  01546E  EC9D  F0A6         	call	__i2c_wait_idle	;wreg free
 10266                           
 10267                           ;i2c.c: 489: _i2c_send(0b01111000);
 10268  015472  0E78               	movlw	120
 10269  015474  EC3B  F0B2         	call	__i2c_send
 10270                           
 10271                           ;i2c.c: 490: _i2c_wait_idle();
 10272  015478  EC9D  F0A6         	call	__i2c_wait_idle	;wreg free
 10273                           
 10274                           ;i2c.c: 491: _i2c_send(0b01000000);
 10275  01547C  0E40               	movlw	64
 10276  01547E  EC3B  F0B2         	call	__i2c_send
 10277                           
 10278                           ;i2c.c: 492: _i2c_wait_idle();
 10279  015482  EC9D  F0A6         	call	__i2c_wait_idle	;wreg free
 10280                           
 10281                           ;i2c.c: 495: for(pos=0; pos<length; ++pos)
 10282  015486  0E00               	movlw	0
 10283  015488  0100               	movlb	0	; () banked
 10284  01548A  6F68               	movwf	i2c_display_write_fixed@pos& (0+255),b
 10285  01548C  D00F               	goto	l1260
 10286  01548E                     
 10287                           ; BSR set to: 0
 10288                           ;i2c.c: 496: {;i2c.c: 497: _i2c_send(data[pos]);
 10289                           
 10290                           ; BSR set to: 0
 10291  01548E  5168               	movf	i2c_display_write_fixed@pos& (0+255),w,b
 10292  015490  0D01               	mullw	1
 10293  015492  50F3               	movf	prodl,w,c
 10294  015494  2565               	addwf	i2c_display_write_fixed@data& (0+255),w,b
 10295  015496  6ED9               	movwf	fsr2l,c
 10296  015498  50F4               	movf	prodh,w,c
 10297  01549A  2166               	addwfc	(i2c_display_write_fixed@data+1)& (0+255),w,b
 10298  01549C  6EDA               	movwf	fsr2h,c
 10299  01549E  50DF               	movf	indf2,w,c
 10300  0154A0  EC3B  F0B2         	call	__i2c_send
 10301                           
 10302                           ;i2c.c: 498: _i2c_wait_idle();
 10303  0154A4  EC9D  F0A6         	call	__i2c_wait_idle	;wreg free
 10304  0154A8  0100               	movlb	0	; () banked
 10305  0154AA  2B68               	incf	i2c_display_write_fixed@pos& (0+255),f,b
 10306  0154AC                     l1260:
 10307                           
 10308                           ; BSR set to: 0
 10309                           
 10310                           ; BSR set to: 0
 10311  0154AC  5167               	movf	i2c_display_write_fixed@length& (0+255),w,b
 10312  0154AE  5D68               	subwf	i2c_display_write_fixed@pos& (0+255),w,b
 10313  0154B0  A0D8               	btfss	status,0,c
 10314  0154B2  D7ED               	goto	l1261
 10315                           
 10316                           ; BSR set to: 0
 10317                           ;i2c.c: 499: };i2c.c: 501: _i2c_stop();
 10318                           
 10319                           ; BSR set to: 0
 10320  0154B4  EC45  F0B2         	call	__i2c_stop	;wreg free
 10321  0154B8  0012               	return		;funcret
 10322  0154BA                     __end_of_i2c_display_write_fixed:
 10323                           	opt stack 0
 10324                           tblptru	equ	0xFF8
 10325                           tblptrh	equ	0xFF7
 10326                           tblptrl	equ	0xFF6
 10327                           tablat	equ	0xFF5
 10328                           prodh	equ	0xFF4
 10329                           prodl	equ	0xFF3
 10330                           postinc0	equ	0xFEE
 10331                           wreg	equ	0xFE8
 10332                           postdec1	equ	0xFE5
 10333                           fsr1h	equ	0xFE2
 10334                           fsr1l	equ	0xFE1
 10335                           indf2	equ	0xFDF
 10336                           postinc2	equ	0xFDE
 10337                           fsr2h	equ	0xFDA
 10338                           fsr2l	equ	0xFD9
 10339                           status	equ	0xFD8
 10340                           
 10341 ;; *************** function _i2c_display_cursor *****************
 10342 ;; Defined at:
 10343 ;;		line 439 in file "i2c.c"
 10344 ;; Parameters:    Size  Location     Type
 10345 ;;  line            1    wreg     unsigned char 
 10346 ;;  position        1   13[BANK0 ] unsigned char 
 10347 ;; Auto vars:     Size  Location     Type
 10348 ;;  line            1   14[BANK0 ] unsigned char 
 10349 ;;  address         1   15[BANK0 ] unsigned char 
 10350 ;; Return value:  Size  Location     Type
 10351 ;;                  1    wreg      void 
 10352 ;; Registers used:
 10353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10354 ;; Tracked objects:
 10355 ;;		On entry : 0/0
 10356 ;;		On exit  : 0/0
 10357 ;;		Unchanged: 0/0
 10358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10359 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10360 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10362 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10363 ;;Total ram usage:        3 bytes
 10364 ;; Hardware stack levels used:    1
 10365 ;; Hardware stack levels required when called:   13
 10366 ;; This function calls:
 10367 ;;		__ic2_display_set_ddram_address
 10368 ;; This function is called by:
 10369 ;;		_display_update
 10370 ;; This function uses a non-reentrant model
 10371 ;;
 10372                           
 10373                           	psect	text23
 10374  016250                     __ptext23:
 10375                           	opt stack 0
 10376  016250                     _i2c_display_cursor:
 10377                           	opt stack 15
 10378                           
 10379                           ;incstack = 0
 10380                           ;i2c_display_cursor@line stored from wreg
 10381  016250  0100               	movlb	0	; () banked
 10382  016252  6F6E               	movwf	i2c_display_cursor@line& (0+255),b
 10383                           
 10384                           ;i2c.c: 441: uint8_t address;;i2c.c: 444: line &= 0b11;
 10385  016254  0E03               	movlw	3
 10386  016256  0100               	movlb	0	; () banked
 10387  016258  176E               	andwf	i2c_display_cursor@line& (0+255),f,b
 10388                           
 10389                           ;i2c.c: 445: address = line<<5;
 10390  01625A  396E               	swapf	i2c_display_cursor@line& (0+255),w,b
 10391  01625C  46E8               	rlncf	wreg,f,c
 10392  01625E  0BE0               	andlw	224
 10393  016260  6F6F               	movwf	i2c_display_cursor@address& (0+255),b
 10394                           
 10395                           ;i2c.c: 446: position &= 0b11111;
 10396  016262  0E1F               	movlw	31
 10397  016264  176D               	andwf	i2c_display_cursor@position& (0+255),f,b
 10398                           
 10399                           ;i2c.c: 447: address |= position;
 10400  016266  516D               	movf	i2c_display_cursor@position& (0+255),w,b
 10401  016268  136F               	iorwf	i2c_display_cursor@address& (0+255),f,b
 10402                           
 10403                           ; BSR set to: 0
 10404                           ;i2c.c: 453: _ic2_display_set_ddram_address(address);
 10405  01626A  516F               	movf	i2c_display_cursor@address& (0+255),w,b
 10406  01626C  ECF2  F0B0         	call	__ic2_display_set_ddram_address
 10407  016270  0012               	return		;funcret
 10408  016272                     __end_of_i2c_display_cursor:
 10409                           	opt stack 0
 10410                           tblptru	equ	0xFF8
 10411                           tblptrh	equ	0xFF7
 10412                           tblptrl	equ	0xFF6
 10413                           tablat	equ	0xFF5
 10414                           prodh	equ	0xFF4
 10415                           prodl	equ	0xFF3
 10416                           postinc0	equ	0xFEE
 10417                           wreg	equ	0xFE8
 10418                           postdec1	equ	0xFE5
 10419                           fsr1h	equ	0xFE2
 10420                           fsr1l	equ	0xFE1
 10421                           indf2	equ	0xFDF
 10422                           postinc2	equ	0xFDE
 10423                           fsr2h	equ	0xFDA
 10424                           fsr2l	equ	0xFD9
 10425                           status	equ	0xFD8
 10426                           
 10427 ;; *************** function __ic2_display_set_ddram_address *****************
 10428 ;; Defined at:
 10429 ;;		line 410 in file "i2c.c"
 10430 ;; Parameters:    Size  Location     Type
 10431 ;;  address         1    wreg     unsigned char 
 10432 ;; Auto vars:     Size  Location     Type
 10433 ;;  address         1   10[BANK0 ] unsigned char 
 10434 ;;  data_array      2   11[BANK0 ] unsigned char [2]
 10435 ;; Return value:  Size  Location     Type
 10436 ;;                  1    wreg      void 
 10437 ;; Registers used:
 10438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10439 ;; Tracked objects:
 10440 ;;		On entry : 0/0
 10441 ;;		On exit  : 0/0
 10442 ;;		Unchanged: 0/0
 10443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10445 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10447 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10448 ;;Total ram usage:        3 bytes
 10449 ;; Hardware stack levels used:    1
 10450 ;; Hardware stack levels required when called:   12
 10451 ;; This function calls:
 10452 ;;		__i2c_write
 10453 ;; This function is called by:
 10454 ;;		_i2c_display_cursor
 10455 ;; This function uses a non-reentrant model
 10456 ;;
 10457                           
 10458                           	psect	text24
 10459  0161E4                     __ptext24:
 10460                           	opt stack 0
 10461  0161E4                     __ic2_display_set_ddram_address:
 10462                           	opt stack 15
 10463                           
 10464                           ;incstack = 0
 10465                           ;__ic2_display_set_ddram_address@address stored from wreg
 10466  0161E4  0100               	movlb	0	; () banked
 10467  0161E6  6F6A               	movwf	__ic2_display_set_ddram_address@address& (0+255),b
 10468                           
 10469                           ;i2c.c: 412: uint8_t data_array[2];;i2c.c: 413: data_array[0] = 0b00000000;
 10470  0161E8  0E00               	movlw	0
 10471  0161EA  0100               	movlb	0	; () banked
 10472  0161EC  6F6B               	movwf	__ic2_display_set_ddram_address@data_array& (0+255),b
 10473                           
 10474                           ; BSR set to: 0
 10475                           ;i2c.c: 414: data_array[1] = 0b10000000 | address;
 10476  0161EE  516A               	movf	__ic2_display_set_ddram_address@address& (0+255),w,b
 10477  0161F0  0980               	iorlw	128
 10478  0161F2  6F6C               	movwf	(__ic2_display_set_ddram_address@data_array+1)& (0+255),b
 10479                           
 10480                           ; BSR set to: 0
 10481                           ;i2c.c: 420: _i2c_write(0b01111000, &data_array[0], 2);
 10482  0161F4  0E6B               	movlw	low __ic2_display_set_ddram_address@data_array
 10483  0161F6  6F65               	movwf	__i2c_write@data& (0+255),b
 10484  0161F8  0E00               	movlw	high __ic2_display_set_ddram_address@data_array
 10485  0161FA  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10486  0161FC  0E02               	movlw	2
 10487  0161FE  6F67               	movwf	__i2c_write@length& (0+255),b
 10488  016200  0E78               	movlw	120
 10489  016202  ECCC  F0AB         	call	__i2c_write
 10490  016206  0012               	return		;funcret
 10491  016208                     __end_of__ic2_display_set_ddram_address:
 10492                           	opt stack 0
 10493                           tblptru	equ	0xFF8
 10494                           tblptrh	equ	0xFF7
 10495                           tblptrl	equ	0xFF6
 10496                           tablat	equ	0xFF5
 10497                           prodh	equ	0xFF4
 10498                           prodl	equ	0xFF3
 10499                           postinc0	equ	0xFEE
 10500                           wreg	equ	0xFE8
 10501                           postdec1	equ	0xFE5
 10502                           fsr1h	equ	0xFE2
 10503                           fsr1l	equ	0xFE1
 10504                           indf2	equ	0xFDF
 10505                           postinc2	equ	0xFDE
 10506                           fsr2h	equ	0xFDA
 10507                           fsr2l	equ	0xFD9
 10508                           status	equ	0xFD8
 10509                           
 10510 ;; *************** function _display_init *****************
 10511 ;; Defined at:
 10512 ;;		line 279 in file "display.c"
 10513 ;; Parameters:    Size  Location     Type
 10514 ;;		None
 10515 ;; Auto vars:     Size  Location     Type
 10516 ;;		None
 10517 ;; Return value:  Size  Location     Type
 10518 ;;                  1    wreg      void 
 10519 ;; Registers used:
 10520 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10521 ;; Tracked objects:
 10522 ;;		On entry : 0/0
 10523 ;;		On exit  : 0/0
 10524 ;;		Unchanged: 0/0
 10525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10530 ;;Total ram usage:        0 bytes
 10531 ;; Hardware stack levels used:    1
 10532 ;; Hardware stack levels required when called:   15
 10533 ;; This function calls:
 10534 ;;		__display_start
 10535 ;;		_i2c_display_init
 10536 ;;		_i2c_display_program_custom_character
 10537 ;; This function is called by:
 10538 ;;		_system_init
 10539 ;; This function uses a non-reentrant model
 10540 ;;
 10541                           
 10542                           	psect	text25
 10543  015C32                     __ptext25:
 10544                           	opt stack 0
 10545  015C32                     _display_init:
 10546                           	opt stack 14
 10547                           
 10548                           ;display.c: 281: i2c_display_init();
 10549                           
 10550                           ;incstack = 0
 10551  015C32  EC2C  F0AB         	call	_i2c_display_init	;wreg free
 10552                           
 10553                           ;display.c: 282: i2c_display_program_custom_character(0x00, bit_pattern_verticalbar);
 10554  015C36  0E49               	movlw	low _bit_pattern_verticalbar
 10555  015C38  0100               	movlb	0	; () banked
 10556  015C3A  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 10557  015C3C  0EA3               	movlw	high _bit_pattern_verticalbar
 10558  015C3E  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 10559  015C40  0E00               	movlw	0
 10560  015C42  EC0B  F0A3         	call	_i2c_display_program_custom_character
 10561                           
 10562                           ;display.c: 283: i2c_display_program_custom_character(0x01, bit_pattern_degree);
 10563  015C46  0E41               	movlw	low _bit_pattern_degree
 10564  015C48  0100               	movlb	0	; () banked
 10565  015C4A  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 10566  015C4C  0EA3               	movlw	high _bit_pattern_degree
 10567  015C4E  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 10568  015C50  0E01               	movlw	1
 10569  015C52  EC0B  F0A3         	call	_i2c_display_program_custom_character
 10570                           
 10571                           ;display.c: 284: i2c_display_program_custom_character(0x02, bit_pattern_ae);
 10572  015C56  0E39               	movlw	low _bit_pattern_ae
 10573  015C58  0100               	movlb	0	; () banked
 10574  015C5A  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 10575  015C5C  0EA3               	movlw	high _bit_pattern_ae
 10576  015C5E  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 10577  015C60  0E02               	movlw	2
 10578  015C62  EC0B  F0A3         	call	_i2c_display_program_custom_character
 10579                           
 10580                           ;display.c: 286: _display_start();
 10581  015C66  EC70  F09A         	call	__display_start	;wreg free
 10582  015C6A  0012               	return		;funcret
 10583  015C6C                     __end_of_display_init:
 10584                           	opt stack 0
 10585                           tblptru	equ	0xFF8
 10586                           tblptrh	equ	0xFF7
 10587                           tblptrl	equ	0xFF6
 10588                           tablat	equ	0xFF5
 10589                           prodh	equ	0xFF4
 10590                           prodl	equ	0xFF3
 10591                           postinc0	equ	0xFEE
 10592                           wreg	equ	0xFE8
 10593                           postdec1	equ	0xFE5
 10594                           fsr1h	equ	0xFE2
 10595                           fsr1l	equ	0xFE1
 10596                           indf2	equ	0xFDF
 10597                           postinc2	equ	0xFDE
 10598                           fsr2h	equ	0xFDA
 10599                           fsr2l	equ	0xFD9
 10600                           status	equ	0xFD8
 10601                           
 10602 ;; *************** function _i2c_display_program_custom_character *****************
 10603 ;; Defined at:
 10604 ;;		line 504 in file "i2c.c"
 10605 ;; Parameters:    Size  Location     Type
 10606 ;;  address         1    wreg     unsigned char 
 10607 ;;  bit_pattern     2   14[BANK0 ] PTR unsigned char 
 10608 ;;		 -> bit_pattern_ae(8), bit_pattern_degree(8), bit_pattern_verticalbar(8), 
 10609 ;; Auto vars:     Size  Location     Type
 10610 ;;  address         1   31[BANK0 ] unsigned char 
 10611 ;;  data_array     11   20[BANK0 ] unsigned char [11]
 10612 ;;  cntr            1   32[BANK0 ] unsigned char 
 10613 ;; Return value:  Size  Location     Type
 10614 ;;                  1    wreg      void 
 10615 ;; Registers used:
 10616 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10617 ;; Tracked objects:
 10618 ;;		On entry : 0/0
 10619 ;;		On exit  : 0/0
 10620 ;;		Unchanged: 0/0
 10621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10622 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10623 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10624 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10625 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10626 ;;Total ram usage:       19 bytes
 10627 ;; Hardware stack levels used:    1
 10628 ;; Hardware stack levels required when called:   13
 10629 ;; This function calls:
 10630 ;;		__i2c_write
 10631 ;;		__ic2_display_set_cgram_address
 10632 ;; This function is called by:
 10633 ;;		_display_init
 10634 ;; This function uses a non-reentrant model
 10635 ;;
 10636                           
 10637                           	psect	text26
 10638  014616                     __ptext26:
 10639                           	opt stack 0
 10640  014616                     _i2c_display_program_custom_character:
 10641                           	opt stack 15
 10642                           
 10643                           ;incstack = 0
 10644                           ;i2c_display_program_custom_character@address stored from wreg
 10645  014616  0100               	movlb	0	; () banked
 10646  014618  6F7F               	movwf	i2c_display_program_custom_character@address& (0+255),b
 10647                           
 10648                           ;i2c.c: 506: uint8_t cntr;;i2c.c: 507: uint8_t data_array[11];;i2c.c: 510: _ic2_display_
      +                          set_cgram_address(address<<3);
 10649  01461A  0100               	movlb	0	; () banked
 10650  01461C  397F               	swapf	i2c_display_program_custom_character@address& (0+255),w,b
 10651  01461E  42E8               	rrncf	wreg,f,c
 10652  014620  0BF8               	andlw	248
 10653  014622  EC2B  F0B0         	call	__ic2_display_set_cgram_address
 10654                           
 10655                           ;i2c.c: 513: data_array[0] = 0b01000000;
 10656  014626  0E40               	movlw	64
 10657  014628  0100               	movlb	0	; () banked
 10658  01462A  6F74               	movwf	i2c_display_program_custom_character@data_array& (0+255),b
 10659                           
 10660                           ; BSR set to: 0
 10661                           ;i2c.c: 514: for(cntr=0; cntr<8; ++cntr)
 10662  01462C  0E00               	movlw	0
 10663  01462E  6F80               	movwf	i2c_display_program_custom_character@cntr& (0+255),b
 10664  014630                     l16503:
 10665                           
 10666                           ; BSR set to: 0
 10667  014630  0E07               	movlw	7
 10668  014632  6580               	cpfsgt	i2c_display_program_custom_character@cntr& (0+255),b
 10669  014634  D001               	goto	l1266
 10670  014636  D023               	goto	u15370
 10671  014638                     l1266:
 10672                           
 10673                           ; BSR set to: 0
 10674                           ;i2c.c: 515: {;i2c.c: 516: data_array[cntr+1] = bit_pattern[cntr] & 0b00011111;
 10675                           
 10676                           ; BSR set to: 0
 10677  014638  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
 10678  01463A  6F70               	movwf	??_i2c_display_program_custom_character& (0+255),b
 10679  01463C  6B71               	clrf	(??_i2c_display_program_custom_character+1)& (0+255),b
 10680  01463E  0E01               	movlw	1
 10681  014640  2770               	addwf	??_i2c_display_program_custom_character& (0+255),f,b
 10682  014642  0E00               	movlw	0
 10683  014644  2371               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),f,b
 10684  014646  0E74               	movlw	low i2c_display_program_custom_character@data_array
 10685  014648  2570               	addwf	??_i2c_display_program_custom_character& (0+255),w,b
 10686  01464A  6ED9               	movwf	fsr2l,c
 10687  01464C  0E00               	movlw	high i2c_display_program_custom_character@data_array
 10688  01464E  2171               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),w,b
 10689  014650  6EDA               	movwf	fsr2h,c
 10690  014652  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
 10691  014654  0D01               	mullw	1
 10692  014656  C06E  F072         	movff	i2c_display_program_custom_character@bit_pattern,??_i2c_display_program_custom_ch
      +                          aracter+2
 10693  01465A  C06F  F073         	movff	i2c_display_program_custom_character@bit_pattern+1,??_i2c_display_program_custom_
      +                          character+3
 10694  01465E  50F3               	movf	prodl,w,c
 10695  014660  2772               	addwf	(??_i2c_display_program_custom_character+2)& (0+255),f,b
 10696  014662  50F4               	movf	prodh,w,c
 10697  014664  2373               	addwfc	(??_i2c_display_program_custom_character+3)& (0+255),f,b
 10698  014666  C072  FFF6         	movff	??_i2c_display_program_custom_character+2,tblptrl
 10699  01466A  C073  FFF7         	movff	??_i2c_display_program_custom_character+3,tblptrh
 10700  01466E                     	if	0	;tblptru may be non-zero
 10701  01466E                     	endif
 10702  01466E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10703  01466E  0E00               	movlw	low (__mediumconst shr (0+16))
 10704  014670  6EF8               	movwf	tblptru,c
 10705  014672                     	endif
 10706  014672  0008               	tblrd		*
 10707  014674  50F5               	movf	tablat,w,c
 10708  014676  0B1F               	andlw	31
 10709  014678  6EDF               	movwf	indf2,c
 10710                           
 10711                           ; BSR set to: 0
 10712  01467A  2B80               	incf	i2c_display_program_custom_character@cntr& (0+255),f,b
 10713  01467C  D7D9               	goto	l16503
 10714  01467E                     u15370:
 10715                           
 10716                           ; BSR set to: 0
 10717                           ;i2c.c: 517: };i2c.c: 518: _i2c_write(0b01111000, data_array, 9);
 10718                           
 10719                           ; BSR set to: 0
 10720  01467E  0E74               	movlw	low i2c_display_program_custom_character@data_array
 10721  014680  6F65               	movwf	__i2c_write@data& (0+255),b
 10722  014682  0E00               	movlw	high i2c_display_program_custom_character@data_array
 10723  014684  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10724  014686  0E09               	movlw	9
 10725  014688  6F67               	movwf	__i2c_write@length& (0+255),b
 10726  01468A  0E78               	movlw	120
 10727  01468C  ECCC  F0AB         	call	__i2c_write
 10728  014690  0012               	return		;funcret
 10729  014692                     __end_of_i2c_display_program_custom_character:
 10730                           	opt stack 0
 10731                           tblptru	equ	0xFF8
 10732                           tblptrh	equ	0xFF7
 10733                           tblptrl	equ	0xFF6
 10734                           tablat	equ	0xFF5
 10735                           prodh	equ	0xFF4
 10736                           prodl	equ	0xFF3
 10737                           postinc0	equ	0xFEE
 10738                           wreg	equ	0xFE8
 10739                           postdec1	equ	0xFE5
 10740                           fsr1h	equ	0xFE2
 10741                           fsr1l	equ	0xFE1
 10742                           indf2	equ	0xFDF
 10743                           postinc2	equ	0xFDE
 10744                           fsr2h	equ	0xFDA
 10745                           fsr2l	equ	0xFD9
 10746                           status	equ	0xFD8
 10747                           
 10748 ;; *************** function __ic2_display_set_cgram_address *****************
 10749 ;; Defined at:
 10750 ;;		line 423 in file "i2c.c"
 10751 ;; Parameters:    Size  Location     Type
 10752 ;;  address         1    wreg     unsigned char 
 10753 ;; Auto vars:     Size  Location     Type
 10754 ;;  address         1   13[BANK0 ] unsigned char 
 10755 ;;  data_array      3   10[BANK0 ] unsigned char [3]
 10756 ;; Return value:  Size  Location     Type
 10757 ;;                  1    wreg      void 
 10758 ;; Registers used:
 10759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10760 ;; Tracked objects:
 10761 ;;		On entry : 0/0
 10762 ;;		On exit  : 0/0
 10763 ;;		Unchanged: 0/0
 10764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10766 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10768 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10769 ;;Total ram usage:        4 bytes
 10770 ;; Hardware stack levels used:    1
 10771 ;; Hardware stack levels required when called:   12
 10772 ;; This function calls:
 10773 ;;		__i2c_write
 10774 ;; This function is called by:
 10775 ;;		_i2c_display_program_custom_character
 10776 ;; This function uses a non-reentrant model
 10777 ;;
 10778                           
 10779                           	psect	text27
 10780  016056                     __ptext27:
 10781                           	opt stack 0
 10782  016056                     __ic2_display_set_cgram_address:
 10783                           	opt stack 15
 10784                           
 10785                           ;incstack = 0
 10786                           ;__ic2_display_set_cgram_address@address stored from wreg
 10787  016056  0100               	movlb	0	; () banked
 10788  016058  6F6D               	movwf	__ic2_display_set_cgram_address@address& (0+255),b
 10789                           
 10790                           ;i2c.c: 425: uint8_t data_array[3];;i2c.c: 430: address &= 0b001111111;
 10791  01605A  0100               	movlb	0	; () banked
 10792  01605C  9F6D               	bcf	__ic2_display_set_cgram_address@address& (0+255),7,b
 10793                           
 10794                           ; BSR set to: 0
 10795                           ;i2c.c: 431: data_array[0] = 0b00000000;
 10796  01605E  0E00               	movlw	0
 10797  016060  6F6A               	movwf	__ic2_display_set_cgram_address@data_array& (0+255),b
 10798                           
 10799                           ; BSR set to: 0
 10800                           ;i2c.c: 432: data_array[1] = 0b00111000;
 10801  016062  0E38               	movlw	56
 10802  016064  6F6B               	movwf	(__ic2_display_set_cgram_address@data_array+1)& (0+255),b
 10803                           
 10804                           ;i2c.c: 433: data_array[2] = 0b01000000 | address;
 10805  016066  516D               	movf	__ic2_display_set_cgram_address@address& (0+255),w,b
 10806  016068  0940               	iorlw	64
 10807  01606A  6F6C               	movwf	(__ic2_display_set_cgram_address@data_array+2)& (0+255),b
 10808                           
 10809                           ; BSR set to: 0
 10810                           ;i2c.c: 436: _i2c_write(0b01111000, data_array, 3);
 10811  01606C  0E6A               	movlw	low __ic2_display_set_cgram_address@data_array
 10812  01606E  6F65               	movwf	__i2c_write@data& (0+255),b
 10813  016070  0E00               	movlw	high __ic2_display_set_cgram_address@data_array
 10814  016072  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10815  016074  0E03               	movlw	3
 10816  016076  6F67               	movwf	__i2c_write@length& (0+255),b
 10817  016078  0E78               	movlw	120
 10818  01607A  ECCC  F0AB         	call	__i2c_write
 10819  01607E  0012               	return		;funcret
 10820  016080                     __end_of__ic2_display_set_cgram_address:
 10821                           	opt stack 0
 10822                           tblptru	equ	0xFF8
 10823                           tblptrh	equ	0xFF7
 10824                           tblptrl	equ	0xFF6
 10825                           tablat	equ	0xFF5
 10826                           prodh	equ	0xFF4
 10827                           prodl	equ	0xFF3
 10828                           postinc0	equ	0xFEE
 10829                           wreg	equ	0xFE8
 10830                           postdec1	equ	0xFE5
 10831                           fsr1h	equ	0xFE2
 10832                           fsr1l	equ	0xFE1
 10833                           indf2	equ	0xFDF
 10834                           postinc2	equ	0xFDE
 10835                           fsr2h	equ	0xFDA
 10836                           fsr2l	equ	0xFD9
 10837                           status	equ	0xFD8
 10838                           
 10839 ;; *************** function _i2c_display_init *****************
 10840 ;; Defined at:
 10841 ;;		line 381 in file "i2c.c"
 10842 ;; Parameters:    Size  Location     Type
 10843 ;;		None
 10844 ;; Auto vars:     Size  Location     Type
 10845 ;;  init_sequenc    9   11[BANK0 ] unsigned char [9]
 10846 ;; Return value:  Size  Location     Type
 10847 ;;                  1    wreg      void 
 10848 ;; Registers used:
 10849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10850 ;; Tracked objects:
 10851 ;;		On entry : 0/0
 10852 ;;		On exit  : 0/0
 10853 ;;		Unchanged: 0/0
 10854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10856 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10857 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10858 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10859 ;;Total ram usage:       10 bytes
 10860 ;; Hardware stack levels used:    1
 10861 ;; Hardware stack levels required when called:   12
 10862 ;; This function calls:
 10863 ;;		__i2c_write
 10864 ;; This function is called by:
 10865 ;;		_display_init
 10866 ;; This function uses a non-reentrant model
 10867 ;;
 10868                           
 10869                           	psect	text28
 10870  015658                     __ptext28:
 10871                           	opt stack 0
 10872  015658                     _i2c_display_init:
 10873                           	opt stack 16
 10874                           
 10875                           ;i2c.c: 383: uint8_t init_sequence[9] = {;i2c.c: 384: 0x3A,;i2c.c: 386: 0b00011110,;i2c.
      +                          c: 387: 0x39,;i2c.c: 389: 0b00001100,;i2c.c: 390: 0x74,;i2c.c: 391: 0b1011100,;i2c.c: 39
      +                          2: 0x6d,;i2c.c: 393: 0x0c,;i2c.c: 394: 0x01;i2c.c: 395: };
 10876                           
 10877                           ;incstack = 0
 10878  015658  EE22  F0BB         	lfsr	2,i2c_display_init@F7104
 10879  01565C  EE10  F06B         	lfsr	1,i2c_display_init@init_sequence
 10880  015660  0E08               	movlw	8
 10881  015662                     u15341:
 10882  015662  CFDB FFE3          	movff	plusw2,plusw1
 10883  015666  06E8               	decf	wreg,f,c
 10884  015668  E2FC               	bc	u15341
 10885                           
 10886                           ;i2c.c: 398: LATAbits.LA3 = 0;
 10887  01566A  9689               	bcf	3977,3,c	;volatile
 10888                           
 10889                           ;i2c.c: 399: _delay((unsigned long)((10)*(8000000/4000.0)));
 10890  01566C  0E1A               	movlw	26
 10891  01566E  0100               	movlb	0	; () banked
 10892  015670  6F6A               	movwf	??_i2c_display_init& (0+255),b
 10893  015672  0EF8               	movlw	248
 10894  015674                     u20267:
 10895  015674  2EE8               	decfsz	wreg,f,c
 10896  015676  D7FE               	bra	u20267
 10897  015678  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
 10898  01567A  D7FC               	bra	u20267
 10899  01567C  F000               	nop	
 10900                           
 10901                           ;i2c.c: 400: LATAbits.LA3 = 1;
 10902  01567E  8689               	bsf	3977,3,c	;volatile
 10903                           
 10904                           ;i2c.c: 401: _delay((unsigned long)((50)*(8000000/4000.0)));
 10905  015680  0E82               	movlw	130
 10906  015682  0100               	movlb	0	; () banked
 10907  015684  6F6A               	movwf	??_i2c_display_init& (0+255),b
 10908  015686  0EDD               	movlw	221
 10909  015688                     u20277:
 10910  015688  2EE8               	decfsz	wreg,f,c
 10911  01568A  D7FE               	bra	u20277
 10912  01568C  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
 10913  01568E  D7FC               	bra	u20277
 10914  015690  D000               	nop2	
 10915                           
 10916                           ;i2c.c: 407: _i2c_write(0b01111000, &init_sequence[0], 9);
 10917  015692  0E6B               	movlw	low i2c_display_init@init_sequence
 10918  015694  0100               	movlb	0	; () banked
 10919  015696  6F65               	movwf	__i2c_write@data& (0+255),b
 10920  015698  0E00               	movlw	high i2c_display_init@init_sequence
 10921  01569A  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10922  01569C  0E09               	movlw	9
 10923  01569E  6F67               	movwf	__i2c_write@length& (0+255),b
 10924  0156A0  0E78               	movlw	120
 10925  0156A2  ECCC  F0AB         	call	__i2c_write
 10926  0156A6  0012               	return		;funcret
 10927  0156A8                     __end_of_i2c_display_init:
 10928                           	opt stack 0
 10929                           tblptru	equ	0xFF8
 10930                           tblptrh	equ	0xFF7
 10931                           tblptrl	equ	0xFF6
 10932                           tablat	equ	0xFF5
 10933                           prodh	equ	0xFF4
 10934                           prodl	equ	0xFF3
 10935                           postinc0	equ	0xFEE
 10936                           wreg	equ	0xFE8
 10937                           postdec1	equ	0xFE5
 10938                           plusw1	equ	0xFE3
 10939                           fsr1h	equ	0xFE2
 10940                           fsr1l	equ	0xFE1
 10941                           indf2	equ	0xFDF
 10942                           postinc2	equ	0xFDE
 10943                           plusw2	equ	0xFDB
 10944                           fsr2h	equ	0xFDA
 10945                           fsr2l	equ	0xFD9
 10946                           status	equ	0xFD8
 10947                           
 10948 ;; *************** function __display_start *****************
 10949 ;; Defined at:
 10950 ;;		line 289 in file "display.c"
 10951 ;; Parameters:    Size  Location     Type
 10952 ;;		None
 10953 ;; Auto vars:     Size  Location     Type
 10954 ;;  cntr            1   28[BANK0 ] unsigned char 
 10955 ;; Return value:  Size  Location     Type
 10956 ;;                  1    wreg      void 
 10957 ;; Registers used:
 10958 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10959 ;; Tracked objects:
 10960 ;;		On entry : 0/0
 10961 ;;		On exit  : 0/0
 10962 ;;		Unchanged: 0/0
 10963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10965 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10967 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10968 ;;Total ram usage:        1 bytes
 10969 ;; Hardware stack levels used:    1
 10970 ;; Hardware stack levels required when called:   14
 10971 ;; This function calls:
 10972 ;;		__display_itoa_u16
 10973 ;;		_memcpy
 10974 ;; This function is called by:
 10975 ;;		_display_init
 10976 ;; This function uses a non-reentrant model
 10977 ;;
 10978                           
 10979                           	psect	text29
 10980  0134E0                     __ptext29:
 10981                           	opt stack 0
 10982  0134E0                     __display_start:
 10983                           	opt stack 14
 10984                           
 10985                           ;display.c: 291: uint8_t cntr;;display.c: 292: memcpy(display_content, dc_startup, sizeo
      +                          f display_content);
 10986                           
 10987                           ;incstack = 0
 10988  0134E0  0E49               	movlw	low _display_content
 10989  0134E2  0100               	movlb	0	; () banked
 10990  0134E4  6F60               	movwf	memcpy@d1& (0+255),b
 10991  0134E6  0E02               	movlw	high _display_content
 10992  0134E8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10993  0134EA  0E00               	movlw	low _dc_startup
 10994  0134EC  6F62               	movwf	memcpy@s1& (0+255),b
 10995  0134EE  0E04               	movlw	high _dc_startup
 10996  0134F0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 10997  0134F2  0E00               	movlw	0
 10998  0134F4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 10999  0134F6  0E50               	movlw	80
 11000  0134F8  6F64               	movwf	memcpy@n& (0+255),b
 11001  0134FA  EC93  F0A7         	call	_memcpy	;wreg free
 11002                           
 11003                           ;display.c: 293: cntr = 6;
 11004  0134FE  0E06               	movlw	6
 11005  013500  0100               	movlb	0	; () banked
 11006  013502  6F7C               	movwf	__display_start@cntr& (0+255),b
 11007                           
 11008                           ; BSR set to: 0
 11009                           ;display.c: 294: cntr += _display_itoa_u16(0x00, &display_content[2][cntr]);
 11010  013504  0E00               	movlw	0
 11011  013506  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 11012  013508  0E00               	movlw	0
 11013  01350A  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 11014  01350C  517C               	movf	__display_start@cntr& (0+255),w,b
 11015  01350E  0D01               	mullw	1
 11016  013510  0E71               	movlw	low (_display_content+40)
 11017  013512  24F3               	addwf	prodl,w,c
 11018  013514  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 11019  013516  0E02               	movlw	high (_display_content+40)
 11020  013518  20F4               	addwfc	prodh,w,c
 11021  01351A  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 11022  01351C  EC16  F09A         	call	__display_itoa_u16	;wreg free
 11023  013520  0100               	movlb	0	; () banked
 11024  013522  277C               	addwf	__display_start@cntr& (0+255),f,b
 11025                           
 11026                           ; BSR set to: 0
 11027                           ;display.c: 295: display_content[2][cntr++] = '.';
 11028  013524  517C               	movf	__display_start@cntr& (0+255),w,b
 11029  013526  0D01               	mullw	1
 11030  013528  0E71               	movlw	low (_display_content+40)
 11031  01352A  24F3               	addwf	prodl,w,c
 11032  01352C  6ED9               	movwf	fsr2l,c
 11033  01352E  0E02               	movlw	high (_display_content+40)
 11034  013530  20F4               	addwfc	prodh,w,c
 11035  013532  6EDA               	movwf	fsr2h,c
 11036  013534  0E2E               	movlw	46
 11037  013536  6EDF               	movwf	indf2,c
 11038                           
 11039                           ; BSR set to: 0
 11040  013538  2B7C               	incf	__display_start@cntr& (0+255),f,b
 11041                           
 11042                           ; BSR set to: 0
 11043                           ;display.c: 296: cntr += _display_itoa_u16(0x06, &display_content[2][cntr]);
 11044  01353A  0E00               	movlw	0
 11045  01353C  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 11046  01353E  0E06               	movlw	6
 11047  013540  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 11048  013542  517C               	movf	__display_start@cntr& (0+255),w,b
 11049  013544  0D01               	mullw	1
 11050  013546  0E71               	movlw	low (_display_content+40)
 11051  013548  24F3               	addwf	prodl,w,c
 11052  01354A  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 11053  01354C  0E02               	movlw	high (_display_content+40)
 11054  01354E  20F4               	addwfc	prodh,w,c
 11055  013550  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 11056  013552  EC16  F09A         	call	__display_itoa_u16	;wreg free
 11057  013556  0100               	movlb	0	; () banked
 11058  013558  277C               	addwf	__display_start@cntr& (0+255),f,b
 11059                           
 11060                           ; BSR set to: 0
 11061                           ;display.c: 297: display_content[2][cntr++] = '.';
 11062  01355A  517C               	movf	__display_start@cntr& (0+255),w,b
 11063  01355C  0D01               	mullw	1
 11064  01355E  0E71               	movlw	low (_display_content+40)
 11065  013560  24F3               	addwf	prodl,w,c
 11066  013562  6ED9               	movwf	fsr2l,c
 11067  013564  0E02               	movlw	high (_display_content+40)
 11068  013566  20F4               	addwfc	prodh,w,c
 11069  013568  6EDA               	movwf	fsr2h,c
 11070  01356A  0E2E               	movlw	46
 11071  01356C  6EDF               	movwf	indf2,c
 11072                           
 11073                           ; BSR set to: 0
 11074  01356E  2B7C               	incf	__display_start@cntr& (0+255),f,b
 11075                           
 11076                           ; BSR set to: 0
 11077                           ;display.c: 298: cntr += _display_itoa_u16(0x07, &display_content[2][cntr]);
 11078  013570  0E00               	movlw	0
 11079  013572  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 11080  013574  0E07               	movlw	7
 11081  013576  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 11082  013578  517C               	movf	__display_start@cntr& (0+255),w,b
 11083  01357A  0D01               	mullw	1
 11084  01357C  0E71               	movlw	low (_display_content+40)
 11085  01357E  24F3               	addwf	prodl,w,c
 11086  013580  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 11087  013582  0E02               	movlw	high (_display_content+40)
 11088  013584  20F4               	addwfc	prodh,w,c
 11089  013586  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 11090  013588  EC16  F09A         	call	__display_itoa_u16	;wreg free
 11091  01358C  0100               	movlb	0	; () banked
 11092  01358E  277C               	addwf	__display_start@cntr& (0+255),f,b
 11093                           
 11094                           ; BSR set to: 0
 11095  013590  0012               	return		;funcret
 11096  013592                     __end_of__display_start:
 11097                           	opt stack 0
 11098                           tblptru	equ	0xFF8
 11099                           tblptrh	equ	0xFF7
 11100                           tblptrl	equ	0xFF6
 11101                           tablat	equ	0xFF5
 11102                           prodh	equ	0xFF4
 11103                           prodl	equ	0xFF3
 11104                           postinc0	equ	0xFEE
 11105                           wreg	equ	0xFE8
 11106                           postdec1	equ	0xFE5
 11107                           plusw1	equ	0xFE3
 11108                           fsr1h	equ	0xFE2
 11109                           fsr1l	equ	0xFE1
 11110                           indf2	equ	0xFDF
 11111                           postinc2	equ	0xFDE
 11112                           plusw2	equ	0xFDB
 11113                           fsr2h	equ	0xFDA
 11114                           fsr2l	equ	0xFD9
 11115                           status	equ	0xFD8
 11116                           
 11117 ;; *************** function __display_itoa_u16 *****************
 11118 ;; Defined at:
 11119 ;;		line 232 in file "display.c"
 11120 ;; Parameters:    Size  Location     Type
 11121 ;;  value           2   24[BANK0 ] unsigned int 
 11122 ;;  text            2   26[BANK0 ] PTR unsigned char 
 11123 ;;		 -> display_content(80), 
 11124 ;; Auto vars:     Size  Location     Type
 11125 ;;		None
 11126 ;; Return value:  Size  Location     Type
 11127 ;;                  1    wreg      unsigned char 
 11128 ;; Registers used:
 11129 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11130 ;; Tracked objects:
 11131 ;;		On entry : 0/0
 11132 ;;		On exit  : 0/0
 11133 ;;		Unchanged: 0/0
 11134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11135 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11138 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11139 ;;Total ram usage:        4 bytes
 11140 ;; Hardware stack levels used:    1
 11141 ;; Hardware stack levels required when called:   13
 11142 ;; This function calls:
 11143 ;;		_itoa
 11144 ;; This function is called by:
 11145 ;;		__display_start
 11146 ;; This function uses a non-reentrant model
 11147 ;;
 11148                           
 11149                           	psect	text30
 11150  01342C                     __ptext30:
 11151                           	opt stack 0
 11152  01342C                     __display_itoa_u16:
 11153                           	opt stack 14
 11154                           
 11155                           ;display.c: 234: itoa(text, value, 10);
 11156                           
 11157                           ; BSR set to: 0
 11158                           ;incstack = 0
 11159  01342C  C07A  F070         	movff	__display_itoa_u16@text,itoa@buf
 11160  013430  C07B  F071         	movff	__display_itoa_u16@text+1,itoa@buf+1
 11161  013434  C078  F072         	movff	__display_itoa_u16@value,itoa@val
 11162  013438  C079  F073         	movff	__display_itoa_u16@value+1,itoa@val+1
 11163  01343C  0E00               	movlw	0
 11164  01343E  0100               	movlb	0	; () banked
 11165  013440  6F75               	movwf	(itoa@base+1)& (0+255),b
 11166  013442  0E0A               	movlw	10
 11167  013444  6F74               	movwf	itoa@base& (0+255),b
 11168  013446  EC18  F0AD         	call	_itoa	;wreg free
 11169                           
 11170                           ;display.c: 235: if(value>9999)
 11171  01344A  0E10               	movlw	16
 11172  01344C  0100               	movlb	0	; () banked
 11173  01344E  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11174  013450  0E27               	movlw	39
 11175  013452  5979               	subwfb	(__display_itoa_u16@value+1)& (0+255),w,b
 11176  013454  A0D8               	btfss	status,0,c
 11177  013456  D00A               	goto	l1378
 11178                           
 11179                           ; BSR set to: 0
 11180                           ;display.c: 236: {;display.c: 237: *(text+5) = ' ';
 11181  013458  EE20 F005          	lfsr	2,5
 11182  01345C  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11183  01345E  26D9               	addwf	fsr2l,f,c
 11184  013460  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11185  013462  22DA               	addwfc	fsr2h,f,c
 11186  013464  0E20               	movlw	32
 11187  013466  6EDF               	movwf	indf2,c
 11188                           
 11189                           ; BSR set to: 0
 11190                           ;display.c: 238: return 5;
 11191  013468  0E05               	movlw	5
 11192                           
 11193                           ; BSR set to: 0
 11194                           ;display.c: 239: }
 11195                           
 11196                           ; BSR set to: 0
 11197  01346A  0012               	return	
 11198  01346C                     l1378:
 11199                           
 11200                           ; BSR set to: 0
 11201                           ;display.c: 240: else if (value>999)
 11202                           
 11203                           ; BSR set to: 0
 11204  01346C  0EE8               	movlw	232
 11205  01346E  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11206  013470  0E03               	movlw	3
 11207  013472  5979               	subwfb	(__display_itoa_u16@value+1)& (0+255),w,b
 11208  013474  A0D8               	btfss	status,0,c
 11209  013476  D00A               	goto	l1381
 11210                           
 11211                           ; BSR set to: 0
 11212                           ;display.c: 241: {;display.c: 242: *(text+4) = ' ';
 11213  013478  EE20 F004          	lfsr	2,4
 11214  01347C  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11215  01347E  26D9               	addwf	fsr2l,f,c
 11216  013480  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11217  013482  22DA               	addwfc	fsr2h,f,c
 11218  013484  0E20               	movlw	32
 11219  013486  6EDF               	movwf	indf2,c
 11220                           
 11221                           ; BSR set to: 0
 11222                           ;display.c: 243: return 4;
 11223  013488  0E04               	movlw	4
 11224                           
 11225                           ; BSR set to: 0
 11226                           ;display.c: 244: }
 11227                           
 11228                           ; BSR set to: 0
 11229  01348A  0012               	return	
 11230  01348C                     l1381:
 11231                           
 11232                           ; BSR set to: 0
 11233                           ;display.c: 245: else if (value>99)
 11234                           
 11235                           ; BSR set to: 0
 11236  01348C  5179               	movf	(__display_itoa_u16@value+1)& (0+255),w,b
 11237  01348E  E104               	bnz	u14430
 11238  013490  0E64               	movlw	100
 11239  013492  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11240  013494  A0D8               	btfss	status,0,c
 11241  013496  D00A               	goto	l1383
 11242  013498                     u14430:
 11243                           
 11244                           ; BSR set to: 0
 11245                           ;display.c: 246: {;display.c: 247: *(text+3) = ' ';
 11246  013498  EE20 F003          	lfsr	2,3
 11247  01349C  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11248  01349E  26D9               	addwf	fsr2l,f,c
 11249  0134A0  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11250  0134A2  22DA               	addwfc	fsr2h,f,c
 11251  0134A4  0E20               	movlw	32
 11252  0134A6  6EDF               	movwf	indf2,c
 11253                           
 11254                           ; BSR set to: 0
 11255                           ;display.c: 248: return 3;
 11256  0134A8  0E03               	movlw	3
 11257                           
 11258                           ; BSR set to: 0
 11259                           ;display.c: 249: }
 11260                           
 11261                           ; BSR set to: 0
 11262  0134AA  0012               	return	
 11263  0134AC                     l1383:
 11264                           
 11265                           ; BSR set to: 0
 11266                           ;display.c: 250: else if (value>9)
 11267                           
 11268                           ; BSR set to: 0
 11269  0134AC  5179               	movf	(__display_itoa_u16@value+1)& (0+255),w,b
 11270  0134AE  E104               	bnz	u14440
 11271  0134B0  0E0A               	movlw	10
 11272  0134B2  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11273  0134B4  A0D8               	btfss	status,0,c
 11274  0134B6  D00A               	goto	l1385
 11275  0134B8                     u14440:
 11276                           
 11277                           ; BSR set to: 0
 11278                           ;display.c: 251: {;display.c: 252: *(text+2) = ' ';
 11279  0134B8  EE20 F002          	lfsr	2,2
 11280  0134BC  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11281  0134BE  26D9               	addwf	fsr2l,f,c
 11282  0134C0  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11283  0134C2  22DA               	addwfc	fsr2h,f,c
 11284  0134C4  0E20               	movlw	32
 11285  0134C6  6EDF               	movwf	indf2,c
 11286                           
 11287                           ; BSR set to: 0
 11288                           ;display.c: 253: return 2;
 11289  0134C8  0E02               	movlw	2
 11290                           
 11291                           ; BSR set to: 0
 11292                           ;display.c: 254: }
 11293                           
 11294                           ; BSR set to: 0
 11295  0134CA  0012               	return	
 11296  0134CC                     l1385:
 11297                           
 11298                           ; BSR set to: 0
 11299                           ;display.c: 255: else;display.c: 256: {;display.c: 257: *(text+1) = ' ';
 11300                           
 11301                           ; BSR set to: 0
 11302  0134CC  EE20 F001          	lfsr	2,1
 11303  0134D0  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11304  0134D2  26D9               	addwf	fsr2l,f,c
 11305  0134D4  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11306  0134D6  22DA               	addwfc	fsr2h,f,c
 11307  0134D8  0E20               	movlw	32
 11308  0134DA  6EDF               	movwf	indf2,c
 11309                           
 11310                           ; BSR set to: 0
 11311                           ;display.c: 258: return 1;
 11312  0134DC  0E01               	movlw	1
 11313                           
 11314                           ; BSR set to: 0
 11315                           
 11316                           ; BSR set to: 0
 11317                           
 11318                           ; BSR set to: 0
 11319                           
 11320                           ; BSR set to: 0
 11321  0134DE  0012               	return	
 11322  0134E0                     __end_of__display_itoa_u16:
 11323                           	opt stack 0
 11324                           tblptru	equ	0xFF8
 11325                           tblptrh	equ	0xFF7
 11326                           tblptrl	equ	0xFF6
 11327                           tablat	equ	0xFF5
 11328                           prodh	equ	0xFF4
 11329                           prodl	equ	0xFF3
 11330                           postinc0	equ	0xFEE
 11331                           wreg	equ	0xFE8
 11332                           postdec1	equ	0xFE5
 11333                           plusw1	equ	0xFE3
 11334                           fsr1h	equ	0xFE2
 11335                           fsr1l	equ	0xFE1
 11336                           indf2	equ	0xFDF
 11337                           postinc2	equ	0xFDE
 11338                           plusw2	equ	0xFDB
 11339                           fsr2h	equ	0xFDA
 11340                           fsr2l	equ	0xFD9
 11341                           status	equ	0xFD8
 11342                           
 11343 ;; *************** function _configFile_write *****************
 11344 ;; Defined at:
 11345 ;;		line 321 in file "config_file.c"
 11346 ;; Parameters:    Size  Location     Type
 11347 ;;		None
 11348 ;; Auto vars:     Size  Location     Type
 11349 ;;  file_size       4  133[BANK0 ] unsigned long 
 11350 ;;  file_number     1  132[BANK0 ] unsigned char 
 11351 ;; Return value:  Size  Location     Type
 11352 ;;                  1    wreg      void 
 11353 ;; Registers used:
 11354 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11355 ;; Tracked objects:
 11356 ;;		On entry : 0/0
 11357 ;;		On exit  : 0/0
 11358 ;;		Unchanged: 0/0
 11359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11361 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11362 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11363 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11364 ;;Total ram usage:        6 bytes
 11365 ;; Hardware stack levels used:    1
 11366 ;; Hardware stack levels required when called:   18
 11367 ;; This function calls:
 11368 ;;		__add_item
 11369 ;;		_fat_create_file
 11370 ;;		_fat_find_file
 11371 ;;		_fat_modify_file
 11372 ;;		_fat_resize_file
 11373 ;; This function is called by:
 11374 ;;		_system_init
 11375 ;; This function uses a non-reentrant model
 11376 ;;
 11377                           
 11378                           	psect	text31
 11379  00BA8A                     __ptext31:
 11380                           	opt stack 0
 11381  00BA8A                     _configFile_write:
 11382                           	opt stack 11
 11383                           
 11384                           ;config_file.c: 323: uint8_t file_number;;config_file.c: 324: uint32_t file_size;;config
      +                          _file.c: 326: file_size = 0;
 11385                           
 11386                           ; BSR set to: 0
 11387                           ;incstack = 0
 11388  00BA8A  0E00               	movlw	0
 11389  00BA8C  0100               	movlb	0	; () banked
 11390  00BA8E  6FE5               	movwf	configFile_write@file_size& (0+255),b
 11391  00BA90  0E00               	movlw	0
 11392  00BA92  6FE6               	movwf	(configFile_write@file_size+1)& (0+255),b
 11393  00BA94  0E00               	movlw	0
 11394  00BA96  6FE7               	movwf	(configFile_write@file_size+2)& (0+255),b
 11395  00BA98  0E00               	movlw	0
 11396  00BA9A  6FE8               	movwf	(configFile_write@file_size+3)& (0+255),b
 11397                           
 11398                           ; BSR set to: 0
 11399                           ;config_file.c: 327: file_size += _add_item(&full_circle_in_steps_string, (int32_t) conf
      +                          ig.full_circle_in_steps, &ConfigFile_buffer[file_size]);
 11400  00BA9C  0E62               	movlw	low _full_circle_in_steps_string
 11401  00BA9E  6F84               	movwf	__add_item@item_string& (0+255),b
 11402  00BAA0  0EA2               	movlw	high _full_circle_in_steps_string
 11403  00BAA2  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11404  00BAA4  C195  F086         	movff	_config,__add_item@value
 11405  00BAA8  C196  F087         	movff	_config+1,__add_item@value+1
 11406  00BAAC  C197  F088         	movff	_config+2,__add_item@value+2
 11407  00BAB0  C198  F089         	movff	_config+3,__add_item@value+3
 11408  00BAB4  0E00               	movlw	low _ConfigFile_buffer
 11409  00BAB6  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11410  00BAB8  6F8A               	movwf	__add_item@buffer& (0+255),b
 11411  00BABA  0E08               	movlw	high _ConfigFile_buffer
 11412  00BABC  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11413  00BABE  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11414  00BAC0  EC99  F08E         	call	__add_item	;wreg free
 11415  00BAC4  0100               	movlb	0	; () banked
 11416  00BAC6  6FE3               	movwf	??_configFile_write& (0+255),b
 11417  00BAC8  51E3               	movf	??_configFile_write& (0+255),w,b
 11418  00BACA  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11419  00BACC  0E00               	movlw	0
 11420  00BACE  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11421  00BAD0  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11422  00BAD2  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11423                           
 11424                           ; BSR set to: 0
 11425                           ;config_file.c: 328: file_size += _add_item(&inverse_direction_string, (int32_t) config.
      +                          inverse_direction, &ConfigFile_buffer[file_size]);
 11426  00BAD4  0EAE               	movlw	low _inverse_direction_string
 11427  00BAD6  6F84               	movwf	__add_item@item_string& (0+255),b
 11428  00BAD8  0EA2               	movlw	high _inverse_direction_string
 11429  00BADA  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11430  00BADC  0101               	movlb	1	; () banked
 11431  00BADE  5199               	movf	(_config+4)& (0+255),w,b
 11432  00BAE0  0100               	movlb	0	; () banked
 11433  00BAE2  6F86               	movwf	__add_item@value& (0+255),b
 11434  00BAE4  6B87               	clrf	(__add_item@value+1)& (0+255),b
 11435  00BAE6  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11436  00BAE8  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11437  00BAEA  0E00               	movlw	low _ConfigFile_buffer
 11438  00BAEC  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11439  00BAEE  6F8A               	movwf	__add_item@buffer& (0+255),b
 11440  00BAF0  0E08               	movlw	high _ConfigFile_buffer
 11441  00BAF2  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11442  00BAF4  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11443  00BAF6  EC99  F08E         	call	__add_item	;wreg free
 11444  00BAFA  0100               	movlb	0	; () banked
 11445  00BAFC  6FE3               	movwf	??_configFile_write& (0+255),b
 11446  00BAFE  51E3               	movf	??_configFile_write& (0+255),w,b
 11447  00BB00  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11448  00BB02  0E00               	movlw	0
 11449  00BB04  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11450  00BB06  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11451  00BB08  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11452                           
 11453                           ; BSR set to: 0
 11454                           ;config_file.c: 329: file_size += _add_item(&overshoot_in_steps_string, (int32_t) config
      +                          .overshoot_in_steps, &ConfigFile_buffer[file_size]);
 11455  00BB0A  0E77               	movlw	low _overshoot_in_steps_string
 11456  00BB0C  6F84               	movwf	__add_item@item_string& (0+255),b
 11457  00BB0E  0EA2               	movlw	high _overshoot_in_steps_string
 11458  00BB10  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11459  00BB12  C19A  F086         	movff	_config+5,__add_item@value
 11460  00BB16  C19B  F087         	movff	_config+6,__add_item@value+1
 11461  00BB1A  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11462  00BB1C  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11463  00BB1E  0E00               	movlw	low _ConfigFile_buffer
 11464  00BB20  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11465  00BB22  6F8A               	movwf	__add_item@buffer& (0+255),b
 11466  00BB24  0E08               	movlw	high _ConfigFile_buffer
 11467  00BB26  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11468  00BB28  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11469  00BB2A  EC99  F08E         	call	__add_item	;wreg free
 11470  00BB2E  0100               	movlb	0	; () banked
 11471  00BB30  6FE3               	movwf	??_configFile_write& (0+255),b
 11472  00BB32  51E3               	movf	??_configFile_write& (0+255),w,b
 11473  00BB34  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11474  00BB36  0E00               	movlw	0
 11475  00BB38  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11476  00BB3A  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11477  00BB3C  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11478                           
 11479                           ; BSR set to: 0
 11480                           ;config_file.c: 330: file_size += _add_item(&overshoot_cost_in_steps_string, (int32_t) c
      +                          onfig.overshoot_cost_in_steps, &ConfigFile_buffer[file_size]);
 11481  00BB3E  0E0B               	movlw	low _overshoot_cost_in_steps_string
 11482  00BB40  6F84               	movwf	__add_item@item_string& (0+255),b
 11483  00BB42  0EA2               	movlw	high _overshoot_cost_in_steps_string
 11484  00BB44  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11485  00BB46  C19C  F086         	movff	_config+7,__add_item@value
 11486  00BB4A  C19D  F087         	movff	_config+8,__add_item@value+1
 11487  00BB4E  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11488  00BB50  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11489  00BB52  0E00               	movlw	low _ConfigFile_buffer
 11490  00BB54  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11491  00BB56  6F8A               	movwf	__add_item@buffer& (0+255),b
 11492  00BB58  0E08               	movlw	high _ConfigFile_buffer
 11493  00BB5A  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11494  00BB5C  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11495  00BB5E  EC99  F08E         	call	__add_item	;wreg free
 11496  00BB62  0100               	movlb	0	; () banked
 11497  00BB64  6FE3               	movwf	??_configFile_write& (0+255),b
 11498  00BB66  51E3               	movf	??_configFile_write& (0+255),w,b
 11499  00BB68  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11500  00BB6A  0E00               	movlw	0
 11501  00BB6C  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11502  00BB6E  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11503  00BB70  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11504                           
 11505                           ; BSR set to: 0
 11506                           ;config_file.c: 331: file_size += _add_item(&minimum_speed_string, (int32_t) config.mini
      +                          mum_speed, &ConfigFile_buffer[file_size]);
 11507  00BB72  0E0B               	movlw	low _minimum_speed_string
 11508  00BB74  6F84               	movwf	__add_item@item_string& (0+255),b
 11509  00BB76  0EA3               	movlw	high _minimum_speed_string
 11510  00BB78  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11511  00BB7A  C19E  F086         	movff	_config+9,__add_item@value
 11512  00BB7E  C19F  F087         	movff	_config+10,__add_item@value+1
 11513  00BB82  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11514  00BB84  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11515  00BB86  0E00               	movlw	low _ConfigFile_buffer
 11516  00BB88  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11517  00BB8A  6F8A               	movwf	__add_item@buffer& (0+255),b
 11518  00BB8C  0E08               	movlw	high _ConfigFile_buffer
 11519  00BB8E  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11520  00BB90  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11521  00BB92  EC99  F08E         	call	__add_item	;wreg free
 11522  00BB96  0100               	movlb	0	; () banked
 11523  00BB98  6FE3               	movwf	??_configFile_write& (0+255),b
 11524  00BB9A  51E3               	movf	??_configFile_write& (0+255),w,b
 11525  00BB9C  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11526  00BB9E  0E00               	movlw	0
 11527  00BBA0  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11528  00BBA2  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11529  00BBA4  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11530                           
 11531                           ; BSR set to: 0
 11532                           ;config_file.c: 332: file_size += _add_item(&maximum_speed_string, (int32_t) config.maxi
      +                          mum_speed, &ConfigFile_buffer[file_size]);
 11533  00BBA6  0EFD               	movlw	low _maximum_speed_string
 11534  00BBA8  6F84               	movwf	__add_item@item_string& (0+255),b
 11535  00BBAA  0EA2               	movlw	high _maximum_speed_string
 11536  00BBAC  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11537  00BBAE  C1A0  F086         	movff	_config+11,__add_item@value
 11538  00BBB2  C1A1  F087         	movff	_config+12,__add_item@value+1
 11539  00BBB6  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11540  00BBB8  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11541  00BBBA  0E00               	movlw	low _ConfigFile_buffer
 11542  00BBBC  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11543  00BBBE  6F8A               	movwf	__add_item@buffer& (0+255),b
 11544  00BBC0  0E08               	movlw	high _ConfigFile_buffer
 11545  00BBC2  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11546  00BBC4  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11547  00BBC6  EC99  F08E         	call	__add_item	;wreg free
 11548  00BBCA  0100               	movlb	0	; () banked
 11549  00BBCC  6FE3               	movwf	??_configFile_write& (0+255),b
 11550  00BBCE  51E3               	movf	??_configFile_write& (0+255),w,b
 11551  00BBD0  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11552  00BBD2  0E00               	movlw	0
 11553  00BBD4  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11554  00BBD6  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11555  00BBD8  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11556                           
 11557                           ; BSR set to: 0
 11558                           ;config_file.c: 333: file_size += _add_item(&initial_speed_arc_string, (int32_t) config.
      +                          initial_speed_arc, &ConfigFile_buffer[file_size]);
 11559  00BBDA  0E9C               	movlw	low _initial_speed_arc_string
 11560  00BBDC  6F84               	movwf	__add_item@item_string& (0+255),b
 11561  00BBDE  0EA2               	movlw	high _initial_speed_arc_string
 11562  00BBE0  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11563  00BBE2  C1A2  F086         	movff	_config+13,__add_item@value
 11564  00BBE6  C1A3  F087         	movff	_config+14,__add_item@value+1
 11565  00BBEA  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11566  00BBEC  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11567  00BBEE  0E00               	movlw	low _ConfigFile_buffer
 11568  00BBF0  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11569  00BBF2  6F8A               	movwf	__add_item@buffer& (0+255),b
 11570  00BBF4  0E08               	movlw	high _ConfigFile_buffer
 11571  00BBF6  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11572  00BBF8  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11573  00BBFA  EC99  F08E         	call	__add_item	;wreg free
 11574  00BBFE  0100               	movlb	0	; () banked
 11575  00BC00  6FE3               	movwf	??_configFile_write& (0+255),b
 11576  00BC02  51E3               	movf	??_configFile_write& (0+255),w,b
 11577  00BC04  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11578  00BC06  0E00               	movlw	0
 11579  00BC08  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11580  00BC0A  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11581  00BC0C  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11582                           
 11583                           ; BSR set to: 0
 11584                           ;config_file.c: 334: file_size += _add_item(&maximum_speed_arc_string, (int32_t) config.
      +                          maximum_speed_arc, &ConfigFile_buffer[file_size]);
 11585  00BC0E  0E8A               	movlw	low _maximum_speed_arc_string
 11586  00BC10  6F84               	movwf	__add_item@item_string& (0+255),b
 11587  00BC12  0EA2               	movlw	high _maximum_speed_arc_string
 11588  00BC14  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11589  00BC16  C1A4  F086         	movff	_config+15,__add_item@value
 11590  00BC1A  C1A5  F087         	movff	_config+16,__add_item@value+1
 11591  00BC1E  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11592  00BC20  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11593  00BC22  0E00               	movlw	low _ConfigFile_buffer
 11594  00BC24  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11595  00BC26  6F8A               	movwf	__add_item@buffer& (0+255),b
 11596  00BC28  0E08               	movlw	high _ConfigFile_buffer
 11597  00BC2A  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11598  00BC2C  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11599  00BC2E  EC99  F08E         	call	__add_item	;wreg free
 11600  00BC32  0100               	movlb	0	; () banked
 11601  00BC34  6FE3               	movwf	??_configFile_write& (0+255),b
 11602  00BC36  51E3               	movf	??_configFile_write& (0+255),w,b
 11603  00BC38  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11604  00BC3A  0E00               	movlw	0
 11605  00BC3C  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11606  00BC3E  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11607  00BC40  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11608                           
 11609                           ; BSR set to: 0
 11610                           ;config_file.c: 335: file_size += _add_item(&initial_speed_manual_string, (int32_t) conf
      +                          ig.initial_speed_manual, &ConfigFile_buffer[file_size]);
 11611  00BC42  0E4D               	movlw	low _initial_speed_manual_string
 11612  00BC44  6F84               	movwf	__add_item@item_string& (0+255),b
 11613  00BC46  0EA2               	movlw	high _initial_speed_manual_string
 11614  00BC48  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11615  00BC4A  C1A6  F086         	movff	_config+17,__add_item@value
 11616  00BC4E  C1A7  F087         	movff	_config+18,__add_item@value+1
 11617  00BC52  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11618  00BC54  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11619  00BC56  0E00               	movlw	low _ConfigFile_buffer
 11620  00BC58  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11621  00BC5A  6F8A               	movwf	__add_item@buffer& (0+255),b
 11622  00BC5C  0E08               	movlw	high _ConfigFile_buffer
 11623  00BC5E  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11624  00BC60  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11625  00BC62  EC99  F08E         	call	__add_item	;wreg free
 11626  00BC66  0100               	movlb	0	; () banked
 11627  00BC68  6FE3               	movwf	??_configFile_write& (0+255),b
 11628  00BC6A  51E3               	movf	??_configFile_write& (0+255),w,b
 11629  00BC6C  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11630  00BC6E  0E00               	movlw	0
 11631  00BC70  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11632  00BC72  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11633  00BC74  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11634                           
 11635                           ; BSR set to: 0
 11636                           ;config_file.c: 336: file_size += _add_item(&maximum_speed_manual_string, (int32_t) conf
      +                          ig.maximum_speed_manual, &ConfigFile_buffer[file_size]);
 11637  00BC76  0E38               	movlw	low _maximum_speed_manual_string
 11638  00BC78  6F84               	movwf	__add_item@item_string& (0+255),b
 11639  00BC7A  0EA2               	movlw	high _maximum_speed_manual_string
 11640  00BC7C  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11641  00BC7E  C1A8  F086         	movff	_config+19,__add_item@value
 11642  00BC82  C1A9  F087         	movff	_config+20,__add_item@value+1
 11643  00BC86  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11644  00BC88  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11645  00BC8A  0E00               	movlw	low _ConfigFile_buffer
 11646  00BC8C  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11647  00BC8E  6F8A               	movwf	__add_item@buffer& (0+255),b
 11648  00BC90  0E08               	movlw	high _ConfigFile_buffer
 11649  00BC92  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11650  00BC94  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11651  00BC96  EC99  F08E         	call	__add_item	;wreg free
 11652  00BC9A  0100               	movlb	0	; () banked
 11653  00BC9C  6FE3               	movwf	??_configFile_write& (0+255),b
 11654  00BC9E  51E3               	movf	??_configFile_write& (0+255),w,b
 11655  00BCA0  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11656  00BCA2  0E00               	movlw	0
 11657  00BCA4  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11658  00BCA6  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11659  00BCA8  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11660                           
 11661                           ; BSR set to: 0
 11662                           ;config_file.c: 337: file_size += _add_item(&use_ccw_limit_string, (int32_t) config.use_
      +                          ccw_limit, &ConfigFile_buffer[file_size]);
 11663  00BCAA  0EE1               	movlw	low _use_ccw_limit_string
 11664  00BCAC  6F84               	movwf	__add_item@item_string& (0+255),b
 11665  00BCAE  0EA2               	movlw	high _use_ccw_limit_string
 11666  00BCB0  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11667  00BCB2  0101               	movlb	1	; () banked
 11668  00BCB4  51B4               	movf	(_config+31)& (0+255),w,b
 11669  00BCB6  0100               	movlb	0	; () banked
 11670  00BCB8  6F86               	movwf	__add_item@value& (0+255),b
 11671  00BCBA  6B87               	clrf	(__add_item@value+1)& (0+255),b
 11672  00BCBC  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11673  00BCBE  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11674  00BCC0  0E00               	movlw	low _ConfigFile_buffer
 11675  00BCC2  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11676  00BCC4  6F8A               	movwf	__add_item@buffer& (0+255),b
 11677  00BCC6  0E08               	movlw	high _ConfigFile_buffer
 11678  00BCC8  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11679  00BCCA  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11680  00BCCC  EC99  F08E         	call	__add_item	;wreg free
 11681  00BCD0  0100               	movlb	0	; () banked
 11682  00BCD2  6FE3               	movwf	??_configFile_write& (0+255),b
 11683  00BCD4  51E3               	movf	??_configFile_write& (0+255),w,b
 11684  00BCD6  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11685  00BCD8  0E00               	movlw	0
 11686  00BCDA  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11687  00BCDC  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11688  00BCDE  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11689                           
 11690                           ; BSR set to: 0
 11691                           ;config_file.c: 338: file_size += _add_item(&ccw_limit_string, (int32_t) config.ccw_limi
      +                          t, &ConfigFile_buffer[file_size]);
 11692  00BCE0  0E26               	movlw	low _ccw_limit_string
 11693  00BCE2  6F84               	movwf	__add_item@item_string& (0+255),b
 11694  00BCE4  0EA3               	movlw	high _ccw_limit_string
 11695  00BCE6  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11696  00BCE8  C1B5  F086         	movff	_config+32,__add_item@value
 11697  00BCEC  C1B6  F087         	movff	_config+33,__add_item@value+1
 11698  00BCF0  C1B7  F088         	movff	_config+34,__add_item@value+2
 11699  00BCF4  C1B8  F089         	movff	_config+35,__add_item@value+3
 11700  00BCF8  0E00               	movlw	low _ConfigFile_buffer
 11701  00BCFA  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11702  00BCFC  6F8A               	movwf	__add_item@buffer& (0+255),b
 11703  00BCFE  0E08               	movlw	high _ConfigFile_buffer
 11704  00BD00  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11705  00BD02  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11706  00BD04  EC99  F08E         	call	__add_item	;wreg free
 11707  00BD08  0100               	movlb	0	; () banked
 11708  00BD0A  6FE3               	movwf	??_configFile_write& (0+255),b
 11709  00BD0C  51E3               	movf	??_configFile_write& (0+255),w,b
 11710  00BD0E  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11711  00BD10  0E00               	movlw	0
 11712  00BD12  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11713  00BD14  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11714  00BD16  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11715                           
 11716                           ; BSR set to: 0
 11717                           ;config_file.c: 339: file_size += _add_item(&use_cw_limit_string, (int32_t) config.use_c
      +                          w_limit, &ConfigFile_buffer[file_size]);
 11718  00BD18  0E19               	movlw	low _use_cw_limit_string
 11719  00BD1A  6F84               	movwf	__add_item@item_string& (0+255),b
 11720  00BD1C  0EA3               	movlw	high _use_cw_limit_string
 11721  00BD1E  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11722  00BD20  0101               	movlb	1	; () banked
 11723  00BD22  51AB               	movf	(_config+22)& (0+255),w,b
 11724  00BD24  0100               	movlb	0	; () banked
 11725  00BD26  6F86               	movwf	__add_item@value& (0+255),b
 11726  00BD28  6B87               	clrf	(__add_item@value+1)& (0+255),b
 11727  00BD2A  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11728  00BD2C  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11729  00BD2E  0E00               	movlw	low _ConfigFile_buffer
 11730  00BD30  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11731  00BD32  6F8A               	movwf	__add_item@buffer& (0+255),b
 11732  00BD34  0E08               	movlw	high _ConfigFile_buffer
 11733  00BD36  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11734  00BD38  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11735  00BD3A  EC99  F08E         	call	__add_item	;wreg free
 11736  00BD3E  0100               	movlb	0	; () banked
 11737  00BD40  6FE3               	movwf	??_configFile_write& (0+255),b
 11738  00BD42  51E3               	movf	??_configFile_write& (0+255),w,b
 11739  00BD44  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11740  00BD46  0E00               	movlw	0
 11741  00BD48  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11742  00BD4A  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11743  00BD4C  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11744                           
 11745                           ; BSR set to: 0
 11746                           ;config_file.c: 340: file_size += _add_item(&cw_limit_string, (int32_t) config.cw_limit,
      +                           &ConfigFile_buffer[file_size]);
 11747  00BD4E  0E30               	movlw	low _cw_limit_string
 11748  00BD50  6F84               	movwf	__add_item@item_string& (0+255),b
 11749  00BD52  0EA3               	movlw	high _cw_limit_string
 11750  00BD54  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11751  00BD56  C1AC  F086         	movff	_config+23,__add_item@value
 11752  00BD5A  C1AD  F087         	movff	_config+24,__add_item@value+1
 11753  00BD5E  C1AE  F088         	movff	_config+25,__add_item@value+2
 11754  00BD62  C1AF  F089         	movff	_config+26,__add_item@value+3
 11755  00BD66  0E00               	movlw	low _ConfigFile_buffer
 11756  00BD68  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11757  00BD6A  6F8A               	movwf	__add_item@buffer& (0+255),b
 11758  00BD6C  0E08               	movlw	high _ConfigFile_buffer
 11759  00BD6E  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11760  00BD70  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11761  00BD72  EC99  F08E         	call	__add_item	;wreg free
 11762  00BD76  0100               	movlb	0	; () banked
 11763  00BD78  6FE3               	movwf	??_configFile_write& (0+255),b
 11764  00BD7A  51E3               	movf	??_configFile_write& (0+255),w,b
 11765  00BD7C  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11766  00BD7E  0E00               	movlw	0
 11767  00BD80  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11768  00BD82  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11769  00BD84  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11770                           
 11771                           ; BSR set to: 0
 11772                           ;config_file.c: 341: file_size += _add_item(&beep_duration_string, (int32_t) config.beep
      +                          _duration, &ConfigFile_buffer[file_size]);
 11773  00BD86  0EEF               	movlw	low _beep_duration_string
 11774  00BD88  6F84               	movwf	__add_item@item_string& (0+255),b
 11775  00BD8A  0EA2               	movlw	high _beep_duration_string
 11776  00BD8C  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11777  00BD8E  0101               	movlb	1	; () banked
 11778  00BD90  51AA               	movf	(_config+21)& (0+255),w,b
 11779  00BD92  0100               	movlb	0	; () banked
 11780  00BD94  6F86               	movwf	__add_item@value& (0+255),b
 11781  00BD96  6B87               	clrf	(__add_item@value+1)& (0+255),b
 11782  00BD98  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11783  00BD9A  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11784  00BD9C  0E00               	movlw	low _ConfigFile_buffer
 11785  00BD9E  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11786  00BDA0  6F8A               	movwf	__add_item@buffer& (0+255),b
 11787  00BDA2  0E08               	movlw	high _ConfigFile_buffer
 11788  00BDA4  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11789  00BDA6  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11790  00BDA8  EC99  F08E         	call	__add_item	;wreg free
 11791  00BDAC  0100               	movlb	0	; () banked
 11792  00BDAE  6FE3               	movwf	??_configFile_write& (0+255),b
 11793  00BDB0  51E3               	movf	??_configFile_write& (0+255),w,b
 11794  00BDB2  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11795  00BDB4  0E00               	movlw	0
 11796  00BDB6  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11797  00BDB8  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11798  00BDBA  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11799                           
 11800                           ; BSR set to: 0
 11801                           ;config_file.c: 342: file_size += _add_item(&position_display_180_string, (int32_t) conf
      +                          ig.position_display_180, &ConfigFile_buffer[file_size]);
 11802  00BDBC  0E23               	movlw	low _position_display_180_string
 11803  00BDBE  6F84               	movwf	__add_item@item_string& (0+255),b
 11804  00BDC0  0EA2               	movlw	high _position_display_180_string
 11805  00BDC2  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11806  00BDC4  0101               	movlb	1	; () banked
 11807  00BDC6  51BD               	movf	(_config+40)& (0+255),w,b
 11808  00BDC8  0100               	movlb	0	; () banked
 11809  00BDCA  6F86               	movwf	__add_item@value& (0+255),b
 11810  00BDCC  6B87               	clrf	(__add_item@value+1)& (0+255),b
 11811  00BDCE  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11812  00BDD0  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11813  00BDD2  0E00               	movlw	low _ConfigFile_buffer
 11814  00BDD4  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11815  00BDD6  6F8A               	movwf	__add_item@buffer& (0+255),b
 11816  00BDD8  0E08               	movlw	high _ConfigFile_buffer
 11817  00BDDA  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11818  00BDDC  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11819  00BDDE  EC99  F08E         	call	__add_item	;wreg free
 11820  00BDE2  0100               	movlb	0	; () banked
 11821  00BDE4  6FE3               	movwf	??_configFile_write& (0+255),b
 11822  00BDE6  51E3               	movf	??_configFile_write& (0+255),w,b
 11823  00BDE8  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11824  00BDEA  0E00               	movlw	0
 11825  00BDEC  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11826  00BDEE  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11827  00BDF0  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11828                           
 11829                           ; BSR set to: 0
 11830                           ;config_file.c: 343: file_size += _add_item(&menu_structure_string, (int32_t) config.men
      +                          u_structure, &ConfigFile_buffer[file_size]);
 11831  00BDF2  0ED2               	movlw	low _menu_structure_string
 11832  00BDF4  6F84               	movwf	__add_item@item_string& (0+255),b
 11833  00BDF6  0EA2               	movlw	high _menu_structure_string
 11834  00BDF8  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11835  00BDFA  0101               	movlb	1	; () banked
 11836  00BDFC  51BE               	movf	(_config+41)& (0+255),w,b
 11837  00BDFE  0100               	movlb	0	; () banked
 11838  00BE00  6F86               	movwf	__add_item@value& (0+255),b
 11839  00BE02  6B87               	clrf	(__add_item@value+1)& (0+255),b
 11840  00BE04  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11841  00BE06  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11842  00BE08  0E00               	movlw	low _ConfigFile_buffer
 11843  00BE0A  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11844  00BE0C  6F8A               	movwf	__add_item@buffer& (0+255),b
 11845  00BE0E  0E08               	movlw	high _ConfigFile_buffer
 11846  00BE10  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11847  00BE12  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11848  00BE14  EC99  F08E         	call	__add_item	;wreg free
 11849  00BE18  0100               	movlb	0	; () banked
 11850  00BE1A  6FE3               	movwf	??_configFile_write& (0+255),b
 11851  00BE1C  51E3               	movf	??_configFile_write& (0+255),w,b
 11852  00BE1E  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11853  00BE20  0E00               	movlw	0
 11854  00BE22  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11855  00BE24  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11856  00BE26  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11857                           
 11858                           ; BSR set to: 0
 11859                           ;config_file.c: 346: file_number = fat_find_file(&configFile_used_name, &configFile_used
      +                          _extention);
 11860  00BE28  0ED5               	movlw	low _configFile_used_name
 11861  00BE2A  6F8B               	movwf	fat_find_file@name& (0+255),b
 11862  00BE2C  0E02               	movlw	high _configFile_used_name
 11863  00BE2E  6F8C               	movwf	(fat_find_file@name+1)& (0+255),b
 11864  00BE30  0EE5               	movlw	low _configFile_used_extention
 11865  00BE32  6F8D               	movwf	fat_find_file@extension& (0+255),b
 11866  00BE34  0E02               	movlw	high _configFile_used_extention
 11867  00BE36  6F8E               	movwf	(fat_find_file@extension+1)& (0+255),b
 11868  00BE38  EC7C  F090         	call	_fat_find_file	;wreg free
 11869  00BE3C  0100               	movlb	0	; () banked
 11870  00BE3E  6FE4               	movwf	configFile_write@file_number& (0+255),b
 11871                           
 11872                           ; BSR set to: 0
 11873                           ;config_file.c: 347: if(file_number==0xFF)
 11874  00BE40  29E4               	incf	configFile_write@file_number& (0+255),w,b
 11875  00BE42  A4D8               	btfss	status,2,c
 11876  00BE44  D015               	goto	l3168
 11877                           
 11878                           ; BSR set to: 0
 11879                           ;config_file.c: 348: {;config_file.c: 349: file_number = fat_create_file(&configFile_use
      +                          d_name, &configFile_used_extention, file_size);
 11880  00BE46  0ED5               	movlw	low _configFile_used_name
 11881  00BE48  6FAC               	movwf	fat_create_file@name& (0+255),b
 11882  00BE4A  0E02               	movlw	high _configFile_used_name
 11883  00BE4C  6FAD               	movwf	(fat_create_file@name+1)& (0+255),b
 11884  00BE4E  0EE5               	movlw	low _configFile_used_extention
 11885  00BE50  6FAE               	movwf	fat_create_file@extension& (0+255),b
 11886  00BE52  0E02               	movlw	high _configFile_used_extention
 11887  00BE54  6FAF               	movwf	(fat_create_file@extension+1)& (0+255),b
 11888  00BE56  C0E5  F0B0         	movff	configFile_write@file_size,fat_create_file@size
 11889  00BE5A  C0E6  F0B1         	movff	configFile_write@file_size+1,fat_create_file@size+1
 11890  00BE5E  C0E7  F0B2         	movff	configFile_write@file_size+2,fat_create_file@size+2
 11891  00BE62  C0E8  F0B3         	movff	configFile_write@file_size+3,fat_create_file@size+3
 11892  00BE66  ECD3  F083         	call	_fat_create_file	;wreg free
 11893  00BE6A  0100               	movlb	0	; () banked
 11894  00BE6C  6FE4               	movwf	configFile_write@file_number& (0+255),b
 11895                           
 11896                           ;config_file.c: 350: }
 11897  00BE6E  D00B               	goto	l3169
 11898  00BE70                     l3168:
 11899                           
 11900                           ; BSR set to: 0
 11901                           ;config_file.c: 351: else;config_file.c: 352: {;config_file.c: 353: fat_resize_file(file
      +                          _number, file_size);
 11902                           
 11903                           ; BSR set to: 0
 11904  00BE70  C0E5  F0AC         	movff	configFile_write@file_size,fat_resize_file@new_file_size
 11905  00BE74  C0E6  F0AD         	movff	configFile_write@file_size+1,fat_resize_file@new_file_size+1
 11906  00BE78  C0E7  F0AE         	movff	configFile_write@file_size+2,fat_resize_file@new_file_size+2
 11907  00BE7C  C0E8  F0AF         	movff	configFile_write@file_size+3,fat_resize_file@new_file_size+3
 11908  00BE80  51E4               	movf	configFile_write@file_number& (0+255),w,b
 11909  00BE82  EC1D  F08D         	call	_fat_resize_file
 11910  00BE86                     l3169:
 11911                           
 11912                           ;config_file.c: 354: };config_file.c: 357: fat_modify_file(file_number, 0, file_size, &C
      +                          onfigFile_buffer[0]);
 11913  00BE86  0E00               	movlw	0
 11914  00BE88  0100               	movlb	0	; () banked
 11915  00BE8A  6FA1               	movwf	fat_modify_file@start_byte& (0+255),b
 11916  00BE8C  0E00               	movlw	0
 11917  00BE8E  6FA2               	movwf	(fat_modify_file@start_byte+1)& (0+255),b
 11918  00BE90  0E00               	movlw	0
 11919  00BE92  6FA3               	movwf	(fat_modify_file@start_byte+2)& (0+255),b
 11920  00BE94  0E00               	movlw	0
 11921  00BE96  6FA4               	movwf	(fat_modify_file@start_byte+3)& (0+255),b
 11922  00BE98  C0E5  F0A5         	movff	configFile_write@file_size,fat_modify_file@length
 11923  00BE9C  C0E6  F0A6         	movff	configFile_write@file_size+1,fat_modify_file@length+1
 11924  00BEA0  0E00               	movlw	low _ConfigFile_buffer
 11925  00BEA2  6FA7               	movwf	fat_modify_file@data& (0+255),b
 11926  00BEA4  0E08               	movlw	high _ConfigFile_buffer
 11927  00BEA6  6FA8               	movwf	(fat_modify_file@data+1)& (0+255),b
 11928  00BEA8  51E4               	movf	configFile_write@file_number& (0+255),w,b
 11929  00BEAA  EC5F  F06E         	call	_fat_modify_file
 11930  00BEAE  0012               	return		;funcret
 11931  00BEB0                     __end_of_configFile_write:
 11932                           	opt stack 0
 11933                           tblptru	equ	0xFF8
 11934                           tblptrh	equ	0xFF7
 11935                           tblptrl	equ	0xFF6
 11936                           tablat	equ	0xFF5
 11937                           prodh	equ	0xFF4
 11938                           prodl	equ	0xFF3
 11939                           postinc0	equ	0xFEE
 11940                           wreg	equ	0xFE8
 11941                           postdec1	equ	0xFE5
 11942                           plusw1	equ	0xFE3
 11943                           fsr1h	equ	0xFE2
 11944                           fsr1l	equ	0xFE1
 11945                           indf2	equ	0xFDF
 11946                           postinc2	equ	0xFDE
 11947                           plusw2	equ	0xFDB
 11948                           fsr2h	equ	0xFDA
 11949                           fsr2l	equ	0xFD9
 11950                           status	equ	0xFD8
 11951                           
 11952 ;; *************** function _fat_resize_file *****************
 11953 ;; Defined at:
 11954 ;;		line 911 in file "fat16.c"
 11955 ;; Parameters:    Size  Location     Type
 11956 ;;  file_number     1    wreg     unsigned char 
 11957 ;;  new_file_siz    4   76[BANK0 ] unsigned long 
 11958 ;; Auto vars:     Size  Location     Type
 11959 ;;  file_number     1   90[BANK0 ] unsigned char 
 11960 ;;  root           32   91[BANK0 ] struct .
 11961 ;;  first_cluste    2   88[BANK0 ] unsigned int 
 11962 ;;  new_number_o    2   86[BANK0 ] unsigned int 
 11963 ;;  old_number_o    2   84[BANK0 ] unsigned int 
 11964 ;; Return value:  Size  Location     Type
 11965 ;;                  1    wreg      unsigned char 
 11966 ;; Registers used:
 11967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11968 ;; Tracked objects:
 11969 ;;		On entry : 0/0
 11970 ;;		On exit  : 0/0
 11971 ;;		Unchanged: 0/0
 11972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11973 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11974 ;;      Locals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11975 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11976 ;;      Totals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11977 ;;Total ram usage:       47 bytes
 11978 ;; Hardware stack levels used:    1
 11979 ;; Hardware stack levels required when called:   17
 11980 ;; This function calls:
 11981 ;;		__make_cluster_chain
 11982 ;;		__root_is_available
 11983 ;;		__write_root
 11984 ;;		_fat_get_file_information
 11985 ;; This function is called by:
 11986 ;;		_configFile_write
 11987 ;;		_fat_append_to_file
 11988 ;; This function uses a non-reentrant model
 11989 ;;
 11990                           
 11991                           	psect	text32
 11992  011A3A                     __ptext32:
 11993                           	opt stack 0
 11994  011A3A                     _fat_resize_file:
 11995                           	opt stack 11
 11996                           
 11997                           ;incstack = 0
 11998                           ;fat_resize_file@file_number stored from wreg
 11999  011A3A  0100               	movlb	0	; () banked
 12000  011A3C  6FBA               	movwf	fat_resize_file@file_number& (0+255),b
 12001                           
 12002                           ;fat16.c: 913: rootEntry_t root;;fat16.c: 914: uint16_t old_number_of_clusters;;fat16.c:
      +                           915: uint16_t new_number_of_clusters;;fat16.c: 916: uint16_t first_cluster;;fat16.c: 91
      +                          9: if(file_number>=64)
 12003  011A3E  0E3F               	movlw	63
 12004  011A40  0100               	movlb	0	; () banked
 12005  011A42  65BA               	cpfsgt	fat_resize_file@file_number& (0+255),b
 12006  011A44  D002               	goto	l1933
 12007                           
 12008                           ; BSR set to: 0
 12009                           ;fat16.c: 920: {;fat16.c: 922: return 0xFF;
 12010  011A46  0EFF               	movlw	255
 12011                           
 12012                           ; BSR set to: 0
 12013  011A48  0012               	return	
 12014  011A4A                     l1933:
 12015                           
 12016                           ; BSR set to: 0
 12017                           ;fat16.c: 923: };fat16.c: 926: if(_root_is_available(file_number))
 12018                           
 12019                           ; BSR set to: 0
 12020  011A4A  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 12021  011A4C  ECCC  F0A5         	call	__root_is_available
 12022  011A50  0900               	iorlw	0
 12023  011A52  B4D8               	btfsc	status,2,c
 12024  011A54  D002               	goto	l1935
 12025                           
 12026                           ;fat16.c: 927: {;fat16.c: 929: return 0xFE;
 12027  011A56  0EFE               	movlw	254
 12028  011A58  0012               	return	
 12029  011A5A                     l1935:
 12030                           
 12031                           ;fat16.c: 930: };fat16.c: 933: fat_get_file_information(file_number, &root);
 12032  011A5A  0EBB               	movlw	low fat_resize_file@root
 12033  011A5C  0100               	movlb	0	; () banked
 12034  011A5E  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 12035  011A60  0E00               	movlw	high fat_resize_file@root
 12036  011A62  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 12037  011A64  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 12038  011A66  ECC5  F0A3         	call	_fat_get_file_information
 12039                           
 12040                           ;fat16.c: 936: old_number_of_clusters = (root.fileSize+512-1)>>9;
 12041  011A6A  EE20  F0D7         	lfsr	2,fat_resize_file@root+28
 12042  011A6E  0EFF               	movlw	255
 12043  011A70  24DE               	addwf	postinc2,w,c
 12044  011A72  0100               	movlb	0	; () banked
 12045  011A74  6FB0               	movwf	??_fat_resize_file& (0+255),b
 12046  011A76  0E01               	movlw	1
 12047  011A78  20DE               	addwfc	postinc2,w,c
 12048  011A7A  6FB1               	movwf	(??_fat_resize_file+1)& (0+255),b
 12049  011A7C  0E00               	movlw	0
 12050  011A7E  20DE               	addwfc	postinc2,w,c
 12051  011A80  6FB2               	movwf	(??_fat_resize_file+2)& (0+255),b
 12052  011A82  0E00               	movlw	0
 12053  011A84  20DE               	addwfc	postinc2,w,c
 12054  011A86  6FB3               	movwf	(??_fat_resize_file+3)& (0+255),b
 12055  011A88  0E0A               	movlw	10
 12056  011A8A  D005               	goto	u15620
 12057  011A8C                     u15625:
 12058  011A8C  90D8               	bcf	status,0,c
 12059  011A8E  33B3               	rrcf	(??_fat_resize_file+3)& (0+255),f,b
 12060  011A90  33B2               	rrcf	(??_fat_resize_file+2)& (0+255),f,b
 12061  011A92  33B1               	rrcf	(??_fat_resize_file+1)& (0+255),f,b
 12062  011A94  33B0               	rrcf	??_fat_resize_file& (0+255),f,b
 12063  011A96                     u15620:
 12064  011A96  2EE8               	decfsz	wreg,f,c
 12065  011A98  D7F9               	goto	u15625
 12066  011A9A  C0B0  F0B4         	movff	??_fat_resize_file,fat_resize_file@old_number_of_clusters
 12067  011A9E  C0B1  F0B5         	movff	??_fat_resize_file+1,fat_resize_file@old_number_of_clusters+1
 12068                           
 12069                           ; BSR set to: 0
 12070                           ;fat16.c: 937: new_number_of_clusters = (new_file_size+512-1)>>9;
 12071  011AA2  0EFF               	movlw	255
 12072  011AA4  25AC               	addwf	fat_resize_file@new_file_size& (0+255),w,b
 12073  011AA6  6FB0               	movwf	??_fat_resize_file& (0+255),b
 12074  011AA8  0E01               	movlw	1
 12075  011AAA  21AD               	addwfc	(fat_resize_file@new_file_size+1)& (0+255),w,b
 12076  011AAC  6FB1               	movwf	(??_fat_resize_file+1)& (0+255),b
 12077  011AAE  0E00               	movlw	0
 12078  011AB0  21AE               	addwfc	(fat_resize_file@new_file_size+2)& (0+255),w,b
 12079  011AB2  6FB2               	movwf	(??_fat_resize_file+2)& (0+255),b
 12080  011AB4  0E00               	movlw	0
 12081  011AB6  21AF               	addwfc	(fat_resize_file@new_file_size+3)& (0+255),w,b
 12082  011AB8  6FB3               	movwf	(??_fat_resize_file+3)& (0+255),b
 12083  011ABA  0E0A               	movlw	10
 12084  011ABC  D005               	goto	u15630
 12085  011ABE                     u15635:
 12086  011ABE  90D8               	bcf	status,0,c
 12087  011AC0  33B3               	rrcf	(??_fat_resize_file+3)& (0+255),f,b
 12088  011AC2  33B2               	rrcf	(??_fat_resize_file+2)& (0+255),f,b
 12089  011AC4  33B1               	rrcf	(??_fat_resize_file+1)& (0+255),f,b
 12090  011AC6  33B0               	rrcf	??_fat_resize_file& (0+255),f,b
 12091  011AC8                     u15630:
 12092  011AC8  2EE8               	decfsz	wreg,f,c
 12093  011ACA  D7F9               	goto	u15635
 12094  011ACC  C0B0  F0B6         	movff	??_fat_resize_file,fat_resize_file@new_number_of_clusters
 12095  011AD0  C0B1  F0B7         	movff	??_fat_resize_file+1,fat_resize_file@new_number_of_clusters+1
 12096                           
 12097                           ; BSR set to: 0
 12098                           ;fat16.c: 940: if(old_number_of_clusters!=new_number_of_clusters)
 12099  011AD4  51B6               	movf	fat_resize_file@new_number_of_clusters& (0+255),w,b
 12100  011AD6  19B4               	xorwf	fat_resize_file@old_number_of_clusters& (0+255),w,b
 12101  011AD8  E104               	bnz	u15640
 12102  011ADA  51B7               	movf	(fat_resize_file@new_number_of_clusters+1)& (0+255),w,b
 12103  011ADC  19B5               	xorwf	(fat_resize_file@old_number_of_clusters+1)& (0+255),w,b
 12104  011ADE  B4D8               	btfsc	status,2,c
 12105  011AE0  D01A               	goto	l1936
 12106  011AE2                     u15640:
 12107                           
 12108                           ; BSR set to: 0
 12109                           ;fat16.c: 941: {;fat16.c: 942: first_cluster = _make_cluster_chain(root.firstCluster, ne
      +                          w_number_of_clusters);
 12110  011AE2  C0D5  F095         	movff	fat_resize_file@root+26,__make_cluster_chain@first_cluster
 12111  011AE6  C0D6  F096         	movff	fat_resize_file@root+27,__make_cluster_chain@first_cluster+1
 12112  011AEA  C0B6  F097         	movff	fat_resize_file@new_number_of_clusters,__make_cluster_chain@number_of_clusters
 12113  011AEE  C0B7  F098         	movff	fat_resize_file@new_number_of_clusters+1,__make_cluster_chain@number_of_clusters+
      +                          1
 12114  011AF2  ECE8  F067         	call	__make_cluster_chain	;wreg free
 12115  011AF6  C095  F0B8         	movff	?__make_cluster_chain,fat_resize_file@first_cluster
 12116  011AFA  C096  F0B9         	movff	?__make_cluster_chain+1,fat_resize_file@first_cluster+1
 12117                           
 12118                           ;fat16.c: 943: if(first_cluster==0xFFFF)
 12119  011AFE  0100               	movlb	0	; () banked
 12120  011B00  29B8               	incf	fat_resize_file@first_cluster& (0+255),w,b
 12121  011B02  E105               	bnz	l1937
 12122  011B04  29B9               	incf	(fat_resize_file@first_cluster+1)& (0+255),w,b
 12123  011B06  A4D8               	btfss	status,2,c
 12124  011B08  D002               	goto	l1937
 12125                           
 12126                           ; BSR set to: 0
 12127                           ;fat16.c: 944: {;fat16.c: 946: return 0xFD;
 12128  011B0A  0EFD               	movlw	253
 12129                           
 12130                           ; BSR set to: 0
 12131  011B0C  0012               	return	
 12132  011B0E                     l1937:
 12133                           
 12134                           ; BSR set to: 0
 12135                           ;fat16.c: 947: };fat16.c: 950: root.firstCluster = first_cluster;
 12136  011B0E  C0B8  F0D5         	movff	fat_resize_file@first_cluster,fat_resize_file@root+26
 12137  011B12  C0B9  F0D6         	movff	fat_resize_file@first_cluster+1,fat_resize_file@root+27
 12138  011B16                     l1936:
 12139                           
 12140                           ; BSR set to: 0
 12141                           ;fat16.c: 951: };fat16.c: 954: root.fileSize = new_file_size;
 12142  011B16  C0AC  F0D7         	movff	fat_resize_file@new_file_size,fat_resize_file@root+28
 12143  011B1A  C0AD  F0D8         	movff	fat_resize_file@new_file_size+1,fat_resize_file@root+29
 12144  011B1E  C0AE  F0D9         	movff	fat_resize_file@new_file_size+2,fat_resize_file@root+30
 12145  011B22  C0AF  F0DA         	movff	fat_resize_file@new_file_size+3,fat_resize_file@root+31
 12146                           
 12147                           ; BSR set to: 0
 12148                           ;fat16.c: 957: _write_root(file_number, &root);
 12149  011B26  0EBB               	movlw	low fat_resize_file@root
 12150  011B28  6F88               	movwf	__write_root@data& (0+255),b
 12151  011B2A  0E00               	movlw	high fat_resize_file@root
 12152  011B2C  6F89               	movwf	(__write_root@data+1)& (0+255),b
 12153  011B2E  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 12154  011B30  EC1B  F0AC         	call	__write_root
 12155                           
 12156                           ;fat16.c: 960: return 0x00;
 12157  011B34  0E00               	movlw	0
 12158  011B36  0012               	return	
 12159  011B38                     __end_of_fat_resize_file:
 12160                           	opt stack 0
 12161                           tblptru	equ	0xFF8
 12162                           tblptrh	equ	0xFF7
 12163                           tblptrl	equ	0xFF6
 12164                           tablat	equ	0xFF5
 12165                           prodh	equ	0xFF4
 12166                           prodl	equ	0xFF3
 12167                           postinc0	equ	0xFEE
 12168                           wreg	equ	0xFE8
 12169                           postdec1	equ	0xFE5
 12170                           plusw1	equ	0xFE3
 12171                           fsr1h	equ	0xFE2
 12172                           fsr1l	equ	0xFE1
 12173                           indf2	equ	0xFDF
 12174                           postinc2	equ	0xFDE
 12175                           plusw2	equ	0xFDB
 12176                           fsr2h	equ	0xFDA
 12177                           fsr2l	equ	0xFD9
 12178                           status	equ	0xFD8
 12179                           
 12180 ;; *************** function _fat_modify_file *****************
 12181 ;; Defined at:
 12182 ;;		line 963 in file "fat16.c"
 12183 ;; Parameters:    Size  Location     Type
 12184 ;;  file_number     1    wreg     unsigned char 
 12185 ;;  start_byte      4   65[BANK0 ] unsigned long 
 12186 ;;  length          2   69[BANK0 ] unsigned int 
 12187 ;;  data            2   71[BANK0 ] PTR unsigned char 
 12188 ;;		 -> ConfigFile_buffer(512), 
 12189 ;; Auto vars:     Size  Location     Type
 12190 ;;  file_number     1   87[BANK0 ] unsigned char 
 12191 ;;  root           32   99[BANK0 ] struct .
 12192 ;;  position        4   95[BANK0 ] unsigned long 
 12193 ;;  number_of_by    2   93[BANK0 ] unsigned int 
 12194 ;;  offset          2   91[BANK0 ] unsigned int 
 12195 ;;  cluster         2   89[BANK0 ] unsigned int 
 12196 ;;  sector          2   85[BANK0 ] unsigned int 
 12197 ;;  return_code     1   88[BANK0 ] unsigned char 
 12198 ;; Return value:  Size  Location     Type
 12199 ;;                  1    wreg      unsigned char 
 12200 ;; Registers used:
 12201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12202 ;; Tracked objects:
 12203 ;;		On entry : 0/0
 12204 ;;		On exit  : 0/0
 12205 ;;		Unchanged: 0/0
 12206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12207 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12208 ;;      Locals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12209 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12210 ;;      Totals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12211 ;;Total ram usage:       66 bytes
 12212 ;; Hardware stack levels used:    1
 12213 ;; Hardware stack levels required when called:   17
 12214 ;; This function calls:
 12215 ;;		__data_sector_from_cluster
 12216 ;;		__find_nth_cluster
 12217 ;;		__read_fat
 12218 ;;		_fat_get_file_information
 12219 ;;		_flash_partial_write
 12220 ;; This function is called by:
 12221 ;;		_configFile_write
 12222 ;;		_fat_append_to_file
 12223 ;; This function uses a non-reentrant model
 12224 ;;
 12225                           
 12226                           	psect	text33
 12227  00DCBE                     __ptext33:
 12228                           	opt stack 0
 12229  00DCBE                     _fat_modify_file:
 12230                           	opt stack 11
 12231                           
 12232                           ;incstack = 0
 12233                           ;fat_modify_file@file_number stored from wreg
 12234  00DCBE  0100               	movlb	0	; () banked
 12235  00DCC0  6FB7               	movwf	fat_modify_file@file_number& (0+255),b
 12236                           
 12237                           ;fat16.c: 965: rootEntry_t root;;fat16.c: 966: uint16_t cluster;;fat16.c: 967: uint32_t 
      +                          position;;fat16.c: 968: uint16_t offset;;fat16.c: 969: uint16_t sector;;fat16.c: 970: ui
      +                          nt16_t number_of_bytes;;fat16.c: 971: uint8_t return_code;;fat16.c: 974: return_code = f
      +                          at_get_file_information(file_number, &root);
 12238  00DCC2  0EC3               	movlw	low fat_modify_file@root
 12239  00DCC4  0100               	movlb	0	; () banked
 12240  00DCC6  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 12241  00DCC8  0E00               	movlw	high fat_modify_file@root
 12242  00DCCA  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 12243  00DCCC  51B7               	movf	fat_modify_file@file_number& (0+255),w,b
 12244  00DCCE  ECC5  F0A3         	call	_fat_get_file_information
 12245  00DCD2  0100               	movlb	0	; () banked
 12246  00DCD4  6FB8               	movwf	fat_modify_file@return_code& (0+255),b
 12247                           
 12248                           ; BSR set to: 0
 12249                           ;fat16.c: 975: if(return_code!=0x00)
 12250  00DCD6  51B8               	movf	fat_modify_file@return_code& (0+255),w,b
 12251  00DCD8  A4D8               	btfss	status,2,c
 12252  00DCDA  0012               	return	
 12253                           
 12254                           ; BSR set to: 0
 12255                           ;fat16.c: 979: };fat16.c: 982: if(start_byte>root.fileSize)
 12256                           
 12257                           ; BSR set to: 0
 12258                           
 12259                           ; BSR set to: 0
 12260                           ;fat16.c: 976: {;fat16.c: 978: return return_code;;	Return value of _fat_modify_file is 
      +                          never used
 12261  00DCDC  51A1               	movf	fat_modify_file@start_byte& (0+255),w,b
 12262  00DCDE  5DDF               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 12263  00DCE0  51A2               	movf	(fat_modify_file@start_byte+1)& (0+255),w,b
 12264  00DCE2  59E0               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 12265  00DCE4  51A3               	movf	(fat_modify_file@start_byte+2)& (0+255),w,b
 12266  00DCE6  59E1               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 12267  00DCE8  51A4               	movf	(fat_modify_file@start_byte+3)& (0+255),w,b
 12268  00DCEA  59E2               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 12269  00DCEC  A0D8               	btfss	status,0,c
 12270  00DCEE  0012               	return	
 12271                           
 12272                           ; BSR set to: 0
 12273                           ;fat16.c: 986: };fat16.c: 988: if((start_byte+length) > root.fileSize)
 12274                           
 12275                           ; BSR set to: 0
 12276                           
 12277                           ; BSR set to: 0
 12278                           ;fat16.c: 983: {;fat16.c: 985: return 0xF0;;	Return value of _fat_modify_file is never u
      +                          sed
 12279  00DCF0  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12280  00DCF2  25A1               	addwf	fat_modify_file@start_byte& (0+255),w,b
 12281  00DCF4  6FA9               	movwf	??_fat_modify_file& (0+255),b
 12282  00DCF6  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12283  00DCF8  21A2               	addwfc	(fat_modify_file@start_byte+1)& (0+255),w,b
 12284  00DCFA  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 12285  00DCFC  0E00               	movlw	0
 12286  00DCFE  21A3               	addwfc	(fat_modify_file@start_byte+2)& (0+255),w,b
 12287  00DD00  6FAB               	movwf	(??_fat_modify_file+2)& (0+255),b
 12288  00DD02  0E00               	movlw	0
 12289  00DD04  21A4               	addwfc	(fat_modify_file@start_byte+3)& (0+255),w,b
 12290  00DD06  6FAC               	movwf	(??_fat_modify_file+3)& (0+255),b
 12291  00DD08  51A9               	movf	??_fat_modify_file& (0+255),w,b
 12292  00DD0A  5DDF               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 12293  00DD0C  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 12294  00DD0E  59E0               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 12295  00DD10  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 12296  00DD12  59E1               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 12297  00DD14  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 12298  00DD16  59E2               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 12299  00DD18  B0D8               	btfsc	status,0,c
 12300  00DD1A  D00E               	goto	l1943
 12301                           
 12302                           ; BSR set to: 0
 12303                           ;fat16.c: 989: {;fat16.c: 991: length = root.fileSize - start_byte;
 12304  00DD1C  C0A1  F0A9         	movff	fat_modify_file@start_byte,??_fat_modify_file
 12305  00DD20  C0A2  F0AA         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 12306  00DD24  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12307  00DD26  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12308  00DD28  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12309  00DD2A  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12310  00DD2C  51DF               	movf	(fat_modify_file@root+28)& (0+255),w,b
 12311  00DD2E  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12312  00DD30  6FA5               	movwf	fat_modify_file@length& (0+255),b
 12313  00DD32  51E0               	movf	(fat_modify_file@root+29)& (0+255),w,b
 12314  00DD34  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12315  00DD36  6FA6               	movwf	(fat_modify_file@length+1)& (0+255),b
 12316  00DD38                     l1943:
 12317                           
 12318                           ; BSR set to: 0
 12319                           ;fat16.c: 992: };fat16.c: 995: cluster = _find_nth_cluster(root.firstCluster, (start_byt
      +                          e>>9));
 12320                           
 12321                           ; BSR set to: 0
 12322  00DD38  C0DD  F097         	movff	fat_modify_file@root+26,__find_nth_cluster@cluster
 12323  00DD3C  C0DE  F098         	movff	fat_modify_file@root+27,__find_nth_cluster@cluster+1
 12324  00DD40  C0A1  F0A9         	movff	fat_modify_file@start_byte,??_fat_modify_file
 12325  00DD44  C0A2  F0AA         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 12326  00DD48  C0A3  F0AB         	movff	fat_modify_file@start_byte+2,??_fat_modify_file+2
 12327  00DD4C  C0A4  F0AC         	movff	fat_modify_file@start_byte+3,??_fat_modify_file+3
 12328  00DD50  0E0A               	movlw	10
 12329  00DD52  D005               	goto	u15690
 12330  00DD54                     u15695:
 12331  00DD54  90D8               	bcf	status,0,c
 12332  00DD56  33AC               	rrcf	(??_fat_modify_file+3)& (0+255),f,b
 12333  00DD58  33AB               	rrcf	(??_fat_modify_file+2)& (0+255),f,b
 12334  00DD5A  33AA               	rrcf	(??_fat_modify_file+1)& (0+255),f,b
 12335  00DD5C  33A9               	rrcf	??_fat_modify_file& (0+255),f,b
 12336  00DD5E                     u15690:
 12337  00DD5E  2EE8               	decfsz	wreg,f,c
 12338  00DD60  D7F9               	goto	u15695
 12339  00DD62  C0A9  F099         	movff	??_fat_modify_file,__find_nth_cluster@n
 12340  00DD66  C0AA  F09A         	movff	??_fat_modify_file+1,__find_nth_cluster@n+1
 12341  00DD6A  ECCA  F09C         	call	__find_nth_cluster	;wreg free
 12342  00DD6E  C097  F0B9         	movff	?__find_nth_cluster,fat_modify_file@cluster
 12343  00DD72  C098  F0BA         	movff	?__find_nth_cluster+1,fat_modify_file@cluster+1
 12344                           
 12345                           ;fat16.c: 998: position = start_byte & 0xFFFFFE00;
 12346  00DD76  0E00               	movlw	0
 12347  00DD78  0100               	movlb	0	; () banked
 12348  00DD7A  15A1               	andwf	fat_modify_file@start_byte& (0+255),w,b
 12349  00DD7C  6FBF               	movwf	fat_modify_file@position& (0+255),b
 12350  00DD7E  0EFE               	movlw	254
 12351  00DD80  15A2               	andwf	(fat_modify_file@start_byte+1)& (0+255),w,b
 12352  00DD82  6FC0               	movwf	(fat_modify_file@position+1)& (0+255),b
 12353  00DD84  0EFF               	movlw	255
 12354  00DD86  15A3               	andwf	(fat_modify_file@start_byte+2)& (0+255),w,b
 12355  00DD88  6FC1               	movwf	(fat_modify_file@position+2)& (0+255),b
 12356  00DD8A  0EFF               	movlw	255
 12357  00DD8C  15A4               	andwf	(fat_modify_file@start_byte+3)& (0+255),w,b
 12358  00DD8E  6FC2               	movwf	(fat_modify_file@position+3)& (0+255),b
 12359                           
 12360                           ; BSR set to: 0
 12361                           ;fat16.c: 1001: offset = (uint16_t) (start_byte-position);
 12362  00DD90  C0BF  F0A9         	movff	fat_modify_file@position,??_fat_modify_file
 12363  00DD94  C0C0  F0AA         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 12364  00DD98  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12365  00DD9A  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12366  00DD9C  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12367  00DD9E  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12368  00DDA0  51A1               	movf	fat_modify_file@start_byte& (0+255),w,b
 12369  00DDA2  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12370  00DDA4  6FBB               	movwf	fat_modify_file@offset& (0+255),b
 12371  00DDA6  51A2               	movf	(fat_modify_file@start_byte+1)& (0+255),w,b
 12372  00DDA8  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12373  00DDAA  6FBC               	movwf	(fat_modify_file@offset+1)& (0+255),b
 12374                           
 12375                           ; BSR set to: 0
 12376                           ;fat16.c: 1004: position = 0;
 12377  00DDAC  0E00               	movlw	0
 12378  00DDAE  6FBF               	movwf	fat_modify_file@position& (0+255),b
 12379  00DDB0  0E00               	movlw	0
 12380  00DDB2  6FC0               	movwf	(fat_modify_file@position+1)& (0+255),b
 12381  00DDB4  0E00               	movlw	0
 12382  00DDB6  6FC1               	movwf	(fat_modify_file@position+2)& (0+255),b
 12383  00DDB8  0E00               	movlw	0
 12384  00DDBA  6FC2               	movwf	(fat_modify_file@position+3)& (0+255),b
 12385                           
 12386                           ;fat16.c: 1005: while(position < length)
 12387  00DDBC  D089               	goto	l1944
 12388  00DDBE                     
 12389                           ; BSR set to: 0
 12390                           ;fat16.c: 1006: {;fat16.c: 1008: if(offset==512)
 12391                           
 12392                           ; BSR set to: 0
 12393  00DDBE  0E02               	movlw	2
 12394  00DDC0  19BC               	xorwf	(fat_modify_file@offset+1)& (0+255),w,b
 12395  00DDC2  11BB               	iorwf	fat_modify_file@offset& (0+255),w,b
 12396  00DDC4  A4D8               	btfss	status,2,c
 12397  00DDC6  D00F               	goto	l1946
 12398                           
 12399                           ; BSR set to: 0
 12400                           ;fat16.c: 1009: {;fat16.c: 1011: cluster = _read_fat(cluster);
 12401  00DDC8  C0B9  F08F         	movff	fat_modify_file@cluster,__read_fat@cluster
 12402  00DDCC  C0BA  F090         	movff	fat_modify_file@cluster+1,__read_fat@cluster+1
 12403  00DDD0  EC01  F0A9         	call	__read_fat	;wreg free
 12404  00DDD4  C08F  F0B9         	movff	?__read_fat,fat_modify_file@cluster
 12405  00DDD8  C090  F0BA         	movff	?__read_fat+1,fat_modify_file@cluster+1
 12406                           
 12407                           ;fat16.c: 1013: offset = 0;
 12408  00DDDC  0E00               	movlw	0
 12409  00DDDE  0100               	movlb	0	; () banked
 12410  00DDE0  6FBC               	movwf	(fat_modify_file@offset+1)& (0+255),b
 12411  00DDE2  0E00               	movlw	0
 12412  00DDE4  6FBB               	movwf	fat_modify_file@offset& (0+255),b
 12413  00DDE6                     l1946:
 12414                           
 12415                           ; BSR set to: 0
 12416                           ;fat16.c: 1014: };fat16.c: 1017: sector = _data_sector_from_cluster(cluster);
 12417                           
 12418                           ; BSR set to: 0
 12419  00DDE6  C0B9  F060         	movff	fat_modify_file@cluster,__data_sector_from_cluster@fat_cluster
 12420  00DDEA  C0BA  F061         	movff	fat_modify_file@cluster+1,__data_sector_from_cluster@fat_cluster+1
 12421  00DDEE  ECF2  F0B1         	call	__data_sector_from_cluster	;wreg free
 12422  00DDF2  C060  F0B5         	movff	?__data_sector_from_cluster,fat_modify_file@sector
 12423  00DDF6  C061  F0B6         	movff	?__data_sector_from_cluster+1,fat_modify_file@sector+1
 12424                           
 12425                           ;fat16.c: 1020: number_of_bytes = 512 - offset;
 12426  00DDFA  C0BB  F0A9         	movff	fat_modify_file@offset,??_fat_modify_file
 12427  00DDFE  C0BC  F0AA         	movff	fat_modify_file@offset+1,??_fat_modify_file+1
 12428  00DE02  0100               	movlb	0	; () banked
 12429  00DE04  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12430  00DE06  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12431  00DE08  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12432  00DE0A  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12433  00DE0C  0E00               	movlw	0
 12434  00DE0E  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12435  00DE10  6FBD               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 12436  00DE12  0E02               	movlw	2
 12437  00DE14  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12438  00DE16  6FBE               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 12439                           
 12440                           ; BSR set to: 0
 12441                           ;fat16.c: 1021: if(number_of_bytes > (length-position))
 12442  00DE18  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 12443  00DE1A  6FA9               	movwf	??_fat_modify_file& (0+255),b
 12444  00DE1C  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 12445  00DE1E  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 12446  00DE20  6BAB               	clrf	(??_fat_modify_file+2)& (0+255),b
 12447  00DE22  6BAC               	clrf	(??_fat_modify_file+3)& (0+255),b
 12448  00DE24  C0BF  F0AD         	movff	fat_modify_file@position,??_fat_modify_file+4
 12449  00DE28  C0C0  F0AE         	movff	fat_modify_file@position+1,??_fat_modify_file+5
 12450  00DE2C  C0C1  F0AF         	movff	fat_modify_file@position+2,??_fat_modify_file+6
 12451  00DE30  C0C2  F0B0         	movff	fat_modify_file@position+3,??_fat_modify_file+7
 12452  00DE34  1FAD               	comf	(??_fat_modify_file+4)& (0+255),f,b
 12453  00DE36  1FAE               	comf	(??_fat_modify_file+5)& (0+255),f,b
 12454  00DE38  1FAF               	comf	(??_fat_modify_file+6)& (0+255),f,b
 12455  00DE3A  1FB0               	comf	(??_fat_modify_file+7)& (0+255),f,b
 12456  00DE3C  2BAD               	incf	(??_fat_modify_file+4)& (0+255),f,b
 12457  00DE3E  0E00               	movlw	0
 12458  00DE40  23AE               	addwfc	(??_fat_modify_file+5)& (0+255),f,b
 12459  00DE42  23AF               	addwfc	(??_fat_modify_file+6)& (0+255),f,b
 12460  00DE44  23B0               	addwfc	(??_fat_modify_file+7)& (0+255),f,b
 12461  00DE46  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12462  00DE48  25AD               	addwf	(??_fat_modify_file+4)& (0+255),w,b
 12463  00DE4A  6FB1               	movwf	(??_fat_modify_file+8)& (0+255),b
 12464  00DE4C  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12465  00DE4E  21AE               	addwfc	(??_fat_modify_file+5)& (0+255),w,b
 12466  00DE50  6FB2               	movwf	(??_fat_modify_file+9)& (0+255),b
 12467  00DE52  0E00               	movlw	0
 12468  00DE54  21AF               	addwfc	(??_fat_modify_file+6)& (0+255),w,b
 12469  00DE56  6FB3               	movwf	(??_fat_modify_file+10)& (0+255),b
 12470  00DE58  0E00               	movlw	0
 12471  00DE5A  21B0               	addwfc	(??_fat_modify_file+7)& (0+255),w,b
 12472  00DE5C  6FB4               	movwf	(??_fat_modify_file+11)& (0+255),b
 12473  00DE5E  51A9               	movf	??_fat_modify_file& (0+255),w,b
 12474  00DE60  5DB1               	subwf	(??_fat_modify_file+8)& (0+255),w,b
 12475  00DE62  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 12476  00DE64  59B2               	subwfb	(??_fat_modify_file+9)& (0+255),w,b
 12477  00DE66  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 12478  00DE68  59B3               	subwfb	(??_fat_modify_file+10)& (0+255),w,b
 12479  00DE6A  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 12480  00DE6C  59B4               	subwfb	(??_fat_modify_file+11)& (0+255),w,b
 12481  00DE6E  B0D8               	btfsc	status,0,c
 12482  00DE70  D00E               	goto	l1947
 12483                           
 12484                           ; BSR set to: 0
 12485                           ;fat16.c: 1022: {;fat16.c: 1023: number_of_bytes = length - position;
 12486  00DE72  C0BF  F0A9         	movff	fat_modify_file@position,??_fat_modify_file
 12487  00DE76  C0C0  F0AA         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 12488  00DE7A  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12489  00DE7C  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12490  00DE7E  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12491  00DE80  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12492  00DE82  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12493  00DE84  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12494  00DE86  6FBD               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 12495  00DE88  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12496  00DE8A  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12497  00DE8C  6FBE               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 12498  00DE8E                     l1947:
 12499                           
 12500                           ; BSR set to: 0
 12501                           ;fat16.c: 1024: };fat16.c: 1027: flash_partial_write(sector, offset, number_of_bytes, &d
      +                          ata[position]);
 12502                           
 12503                           ; BSR set to: 0
 12504  00DE8E  C0B5  F07F         	movff	fat_modify_file@sector,flash_partial_write@page
 12505  00DE92  C0B6  F080         	movff	fat_modify_file@sector+1,flash_partial_write@page+1
 12506  00DE96  C0BB  F081         	movff	fat_modify_file@offset,flash_partial_write@start
 12507  00DE9A  C0BC  F082         	movff	fat_modify_file@offset+1,flash_partial_write@start+1
 12508  00DE9E  C0BD  F083         	movff	fat_modify_file@number_of_bytes,flash_partial_write@length
 12509  00DEA2  C0BE  F084         	movff	fat_modify_file@number_of_bytes+1,flash_partial_write@length+1
 12510  00DEA6  51BF               	movf	fat_modify_file@position& (0+255),w,b
 12511  00DEA8  25A7               	addwf	fat_modify_file@data& (0+255),w,b
 12512  00DEAA  6F85               	movwf	flash_partial_write@data& (0+255),b
 12513  00DEAC  51C0               	movf	(fat_modify_file@position+1)& (0+255),w,b
 12514  00DEAE  21A8               	addwfc	(fat_modify_file@data+1)& (0+255),w,b
 12515  00DEB0  6F86               	movwf	(flash_partial_write@data+1)& (0+255),b
 12516  00DEB2  EC96  F0A5         	call	_flash_partial_write	;wreg free
 12517                           
 12518                           ;fat16.c: 1030: position += number_of_bytes;
 12519  00DEB6  0100               	movlb	0	; () banked
 12520  00DEB8  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 12521  00DEBA  27BF               	addwf	fat_modify_file@position& (0+255),f,b
 12522  00DEBC  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 12523  00DEBE  23C0               	addwfc	(fat_modify_file@position+1)& (0+255),f,b
 12524  00DEC0  0E00               	movlw	0
 12525  00DEC2  23C1               	addwfc	(fat_modify_file@position+2)& (0+255),f,b
 12526  00DEC4  0E00               	movlw	0
 12527  00DEC6  23C2               	addwfc	(fat_modify_file@position+3)& (0+255),f,b
 12528                           
 12529                           ; BSR set to: 0
 12530                           ;fat16.c: 1031: offset += number_of_bytes;
 12531  00DEC8  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 12532  00DECA  27BB               	addwf	fat_modify_file@offset& (0+255),f,b
 12533  00DECC  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 12534  00DECE  23BC               	addwfc	(fat_modify_file@offset+1)& (0+255),f,b
 12535  00DED0                     l1944:
 12536                           
 12537                           ; BSR set to: 0
 12538                           
 12539                           ; BSR set to: 0
 12540  00DED0  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12541  00DED2  6FA9               	movwf	??_fat_modify_file& (0+255),b
 12542  00DED4  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12543  00DED6  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 12544  00DED8  6BAB               	clrf	(??_fat_modify_file+2)& (0+255),b
 12545  00DEDA  6BAC               	clrf	(??_fat_modify_file+3)& (0+255),b
 12546  00DEDC  51A9               	movf	??_fat_modify_file& (0+255),w,b
 12547  00DEDE  5DBF               	subwf	fat_modify_file@position& (0+255),w,b
 12548  00DEE0  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 12549  00DEE2  59C0               	subwfb	(fat_modify_file@position+1)& (0+255),w,b
 12550  00DEE4  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 12551  00DEE6  59C1               	subwfb	(fat_modify_file@position+2)& (0+255),w,b
 12552  00DEE8  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 12553  00DEEA  59C2               	subwfb	(fat_modify_file@position+3)& (0+255),w,b
 12554  00DEEC  B0D8               	btfsc	status,0,c
 12555  00DEEE  0012               	return	
 12556  00DEF0  D766               	goto	l1945
 12557  00DEF2                     __end_of_fat_modify_file:
 12558                           	opt stack 0
 12559                           tblptru	equ	0xFF8
 12560                           tblptrh	equ	0xFF7
 12561                           tblptrl	equ	0xFF6
 12562                           tablat	equ	0xFF5
 12563                           prodh	equ	0xFF4
 12564                           prodl	equ	0xFF3
 12565                           postinc0	equ	0xFEE
 12566                           wreg	equ	0xFE8
 12567                           postdec1	equ	0xFE5
 12568                           plusw1	equ	0xFE3
 12569                           fsr1h	equ	0xFE2
 12570                           fsr1l	equ	0xFE1
 12571                           indf2	equ	0xFDF
 12572                           postinc2	equ	0xFDE
 12573                           plusw2	equ	0xFDB
 12574                           fsr2h	equ	0xFDA
 12575                           fsr2l	equ	0xFD9
 12576                           status	equ	0xFD8
 12577                           
 12578 ;; *************** function _fat_create_file *****************
 12579 ;; Defined at:
 12580 ;;		line 587 in file "fat16.c"
 12581 ;; Parameters:    Size  Location     Type
 12582 ;;  name            2   76[BANK0 ] PTR unsigned char 
 12583 ;;		 -> configFile_used_name(8), 
 12584 ;;  extension       2   78[BANK0 ] PTR unsigned char 
 12585 ;;		 -> configFile_used_extention(3), 
 12586 ;;  size            4   80[BANK0 ] unsigned long 
 12587 ;; Auto vars:     Size  Location     Type
 12588 ;;  root_entry     32   93[BANK0 ] struct .
 12589 ;;  first_cluste    2   90[BANK0 ] unsigned int 
 12590 ;;  number_of_cl    2   88[BANK0 ] unsigned int 
 12591 ;;  file_number     1   92[BANK0 ] unsigned char 
 12592 ;; Return value:  Size  Location     Type
 12593 ;;                  1    wreg      unsigned char 
 12594 ;; Registers used:
 12595 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12596 ;; Tracked objects:
 12597 ;;		On entry : 0/0
 12598 ;;		On exit  : 0/0
 12599 ;;		Unchanged: 0/0
 12600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12601 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12602 ;;      Locals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12603 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12604 ;;      Totals:         0      49       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12605 ;;Total ram usage:       49 bytes
 12606 ;; Hardware stack levels used:    1
 12607 ;; Hardware stack levels required when called:   17
 12608 ;; This function calls:
 12609 ;;		__get_available_root_entry
 12610 ;;		__get_date
 12611 ;;		__get_time
 12612 ;;		__make_cluster_chain
 12613 ;;		__write_root
 12614 ;;		_fat_find_file
 12615 ;;		_memcpy
 12616 ;; This function is called by:
 12617 ;;		_configFile_write
 12618 ;;		_fat_copy_file
 12619 ;; This function uses a non-reentrant model
 12620 ;;
 12621                           
 12622                           	psect	text34
 12623  0107A6                     __ptext34:
 12624                           	opt stack 0
 12625  0107A6                     _fat_create_file:
 12626                           	opt stack 11
 12627                           
 12628                           ;fat16.c: 589: rootEntry_t root_entry;;fat16.c: 590: uint8_t file_number;;fat16.c: 591: 
      +                          uint16_t number_of_clusters;;fat16.c: 592: uint16_t first_cluster;;fat16.c: 596: if(fat_
      +                          find_file(name, extension) != 0xFF)
 12629                           
 12630                           ; BSR set to: 0
 12631                           ;incstack = 0
 12632  0107A6  C0AC  F08B         	movff	fat_create_file@name,fat_find_file@name
 12633  0107AA  C0AD  F08C         	movff	fat_create_file@name+1,fat_find_file@name+1
 12634  0107AE  C0AE  F08D         	movff	fat_create_file@extension,fat_find_file@extension
 12635  0107B2  C0AF  F08E         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 12636  0107B6  EC7C  F090         	call	_fat_find_file	;wreg free
 12637  0107BA  0AFF               	xorlw	255
 12638  0107BC  B4D8               	btfsc	status,2,c
 12639  0107BE  D002               	goto	l1882
 12640                           
 12641                           ;fat16.c: 597: {;fat16.c: 600: return 0xFF;
 12642  0107C0  0EFF               	movlw	255
 12643  0107C2  0012               	return	
 12644  0107C4                     l1882:
 12645                           
 12646                           ;fat16.c: 601: };fat16.c: 605: file_number = _get_available_root_entry();
 12647  0107C4  EC40  F0B0         	call	__get_available_root_entry	;wreg free
 12648  0107C8  0100               	movlb	0	; () banked
 12649  0107CA  6FBC               	movwf	fat_create_file@file_number& (0+255),b
 12650                           
 12651                           ; BSR set to: 0
 12652                           ;fat16.c: 606: if(file_number == 0xFF)
 12653  0107CC  29BC               	incf	fat_create_file@file_number& (0+255),w,b
 12654  0107CE  A4D8               	btfss	status,2,c
 12655  0107D0  D002               	goto	l1884
 12656                           
 12657                           ; BSR set to: 0
 12658                           ;fat16.c: 607: {;fat16.c: 610: return 0xFE;
 12659  0107D2  0EFE               	movlw	254
 12660                           
 12661                           ; BSR set to: 0
 12662  0107D4  0012               	return	
 12663  0107D6                     l1884:
 12664                           
 12665                           ; BSR set to: 0
 12666                           ;fat16.c: 611: };fat16.c: 614: number_of_clusters = (size + 512 - 1) >> 9;
 12667                           
 12668                           ; BSR set to: 0
 12669  0107D6  0EFF               	movlw	255
 12670  0107D8  25B0               	addwf	fat_create_file@size& (0+255),w,b
 12671  0107DA  6FB4               	movwf	??_fat_create_file& (0+255),b
 12672  0107DC  0E01               	movlw	1
 12673  0107DE  21B1               	addwfc	(fat_create_file@size+1)& (0+255),w,b
 12674  0107E0  6FB5               	movwf	(??_fat_create_file+1)& (0+255),b
 12675  0107E2  0E00               	movlw	0
 12676  0107E4  21B2               	addwfc	(fat_create_file@size+2)& (0+255),w,b
 12677  0107E6  6FB6               	movwf	(??_fat_create_file+2)& (0+255),b
 12678  0107E8  0E00               	movlw	0
 12679  0107EA  21B3               	addwfc	(fat_create_file@size+3)& (0+255),w,b
 12680  0107EC  6FB7               	movwf	(??_fat_create_file+3)& (0+255),b
 12681  0107EE  0E0A               	movlw	10
 12682  0107F0  D005               	goto	u15580
 12683  0107F2                     u15585:
 12684  0107F2  90D8               	bcf	status,0,c
 12685  0107F4  33B7               	rrcf	(??_fat_create_file+3)& (0+255),f,b
 12686  0107F6  33B6               	rrcf	(??_fat_create_file+2)& (0+255),f,b
 12687  0107F8  33B5               	rrcf	(??_fat_create_file+1)& (0+255),f,b
 12688  0107FA  33B4               	rrcf	??_fat_create_file& (0+255),f,b
 12689  0107FC                     u15580:
 12690  0107FC  2EE8               	decfsz	wreg,f,c
 12691  0107FE  D7F9               	goto	u15585
 12692  010800  C0B4  F0B8         	movff	??_fat_create_file,fat_create_file@number_of_clusters
 12693  010804  C0B5  F0B9         	movff	??_fat_create_file+1,fat_create_file@number_of_clusters+1
 12694                           
 12695                           ; BSR set to: 0
 12696                           ;fat16.c: 617: first_cluster = _make_cluster_chain(0x0000, number_of_clusters);
 12697  010808  0E00               	movlw	0
 12698  01080A  6F96               	movwf	(__make_cluster_chain@first_cluster+1)& (0+255),b
 12699  01080C  0E00               	movlw	0
 12700  01080E  6F95               	movwf	__make_cluster_chain@first_cluster& (0+255),b
 12701  010810  C0B8  F097         	movff	fat_create_file@number_of_clusters,__make_cluster_chain@number_of_clusters
 12702  010814  C0B9  F098         	movff	fat_create_file@number_of_clusters+1,__make_cluster_chain@number_of_clusters+1
 12703  010818  ECE8  F067         	call	__make_cluster_chain	;wreg free
 12704  01081C  C095  F0BA         	movff	?__make_cluster_chain,fat_create_file@first_cluster
 12705  010820  C096  F0BB         	movff	?__make_cluster_chain+1,fat_create_file@first_cluster+1
 12706                           
 12707                           ;fat16.c: 620: if(first_cluster == 0xFFFF)
 12708  010824  0100               	movlb	0	; () banked
 12709  010826  29BA               	incf	fat_create_file@first_cluster& (0+255),w,b
 12710  010828  E105               	bnz	l16677
 12711  01082A  29BB               	incf	(fat_create_file@first_cluster+1)& (0+255),w,b
 12712  01082C  A4D8               	btfss	status,2,c
 12713  01082E  D002               	goto	l1885
 12714                           
 12715                           ; BSR set to: 0
 12716                           ;fat16.c: 621: {;fat16.c: 624: return 0xFD;
 12717  010830  0EFD               	movlw	253
 12718                           
 12719                           ; BSR set to: 0
 12720  010832  0012               	return	
 12721  010834                     l1885:
 12722  010834                     l16677:
 12723                           
 12724                           ; BSR set to: 0
 12725                           ;fat16.c: 625: };fat16.c: 628: memcpy(root_entry.fileName, name, 8);
 12726  010834  0EBD               	movlw	low fat_create_file@root_entry
 12727  010836  6F60               	movwf	memcpy@d1& (0+255),b
 12728  010838  0E00               	movlw	high fat_create_file@root_entry
 12729  01083A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 12730  01083C  C0AC  F062         	movff	fat_create_file@name,memcpy@s1
 12731  010840  C0AD  F063         	movff	fat_create_file@name+1,memcpy@s1+1
 12732  010844  0E00               	movlw	0
 12733  010846  6F65               	movwf	(memcpy@n+1)& (0+255),b
 12734  010848  0E08               	movlw	8
 12735  01084A  6F64               	movwf	memcpy@n& (0+255),b
 12736  01084C  EC93  F0A7         	call	_memcpy	;wreg free
 12737                           
 12738                           ;fat16.c: 629: memcpy(root_entry.fileExtension, extension, 3);
 12739  010850  0EC5               	movlw	low (fat_create_file@root_entry+8)
 12740  010852  0100               	movlb	0	; () banked
 12741  010854  6F60               	movwf	memcpy@d1& (0+255),b
 12742  010856  0E00               	movlw	high (fat_create_file@root_entry+8)
 12743  010858  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 12744  01085A  C0AE  F062         	movff	fat_create_file@extension,memcpy@s1
 12745  01085E  C0AF  F063         	movff	fat_create_file@extension+1,memcpy@s1+1
 12746  010862  0E00               	movlw	0
 12747  010864  6F65               	movwf	(memcpy@n+1)& (0+255),b
 12748  010866  0E03               	movlw	3
 12749  010868  6F64               	movwf	memcpy@n& (0+255),b
 12750  01086A  EC93  F0A7         	call	_memcpy	;wreg free
 12751                           
 12752                           ;fat16.c: 630: root_entry.attributes = 0x00;
 12753  01086E  0E00               	movlw	0
 12754  010870  0100               	movlb	0	; () banked
 12755  010872  6FC8               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 12756                           
 12757                           ; BSR set to: 0
 12758                           ;fat16.c: 631: root_entry.reserved1 = 0x00;
 12759  010874  0E00               	movlw	0
 12760  010876  6FC9               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 12761                           
 12762                           ; BSR set to: 0
 12763                           ;fat16.c: 632: root_entry.secondFractions = 0x00;
 12764  010878  0E00               	movlw	0
 12765  01087A  6FCA               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 12766                           
 12767                           ; BSR set to: 0
 12768                           ;fat16.c: 633: root_entry.createdTime = _get_time();
 12769  01087C  EC09  F0B2         	call	__get_time	;wreg free
 12770  010880  C060  F0CB         	movff	?__get_time,fat_create_file@root_entry+14
 12771  010884  C061  F0CC         	movff	?__get_time+1,fat_create_file@root_entry+15
 12772                           
 12773                           ;fat16.c: 634: root_entry.createdDate = _get_date();
 12774  010888  EC0F  F0B2         	call	__get_date	;wreg free
 12775  01088C  C060  F0CD         	movff	?__get_date,fat_create_file@root_entry+16
 12776  010890  C061  F0CE         	movff	?__get_date+1,fat_create_file@root_entry+17
 12777                           
 12778                           ;fat16.c: 635: root_entry.lastAccessDate = root_entry.createdDate;
 12779  010894  C0CD  F0CF         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 12780  010898  C0CE  F0D0         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 12781                           
 12782                           ;fat16.c: 636: root_entry.reserved2 = 0x00;
 12783  01089C  0E00               	movlw	0
 12784  01089E  0100               	movlb	0	; () banked
 12785  0108A0  6FD2               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 12786  0108A2  0E00               	movlw	0
 12787  0108A4  6FD1               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 12788                           
 12789                           ; BSR set to: 0
 12790                           ;fat16.c: 637: root_entry.modifiedTime = root_entry.createdTime;
 12791  0108A6  C0CB  F0D3         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 12792  0108AA  C0CC  F0D4         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 12793                           
 12794                           ; BSR set to: 0
 12795                           ;fat16.c: 638: root_entry.modifiedDate = root_entry.createdDate;
 12796  0108AE  C0CD  F0D5         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 12797  0108B2  C0CE  F0D6         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 12798                           
 12799                           ; BSR set to: 0
 12800                           ;fat16.c: 639: root_entry.firstCluster = first_cluster;
 12801  0108B6  C0BA  F0D7         	movff	fat_create_file@first_cluster,fat_create_file@root_entry+26
 12802  0108BA  C0BB  F0D8         	movff	fat_create_file@first_cluster+1,fat_create_file@root_entry+27
 12803                           
 12804                           ; BSR set to: 0
 12805                           ;fat16.c: 640: root_entry.fileSize = size;
 12806  0108BE  C0B0  F0D9         	movff	fat_create_file@size,fat_create_file@root_entry+28
 12807  0108C2  C0B1  F0DA         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 12808  0108C6  C0B2  F0DB         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 12809  0108CA  C0B3  F0DC         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 12810                           
 12811                           ; BSR set to: 0
 12812                           ;fat16.c: 643: _write_root(file_number, &root_entry);
 12813  0108CE  0EBD               	movlw	low fat_create_file@root_entry
 12814  0108D0  6F88               	movwf	__write_root@data& (0+255),b
 12815  0108D2  0E00               	movlw	high fat_create_file@root_entry
 12816  0108D4  6F89               	movwf	(__write_root@data+1)& (0+255),b
 12817  0108D6  51BC               	movf	fat_create_file@file_number& (0+255),w,b
 12818  0108D8  EC1B  F0AC         	call	__write_root
 12819                           
 12820                           ;fat16.c: 645: return file_number;
 12821  0108DC  0100               	movlb	0	; () banked
 12822  0108DE  51BC               	movf	fat_create_file@file_number& (0+255),w,b
 12823  0108E0  0012               	return	
 12824  0108E2                     __end_of_fat_create_file:
 12825                           	opt stack 0
 12826                           tblptru	equ	0xFF8
 12827                           tblptrh	equ	0xFF7
 12828                           tblptrl	equ	0xFF6
 12829                           tablat	equ	0xFF5
 12830                           prodh	equ	0xFF4
 12831                           prodl	equ	0xFF3
 12832                           postinc0	equ	0xFEE
 12833                           wreg	equ	0xFE8
 12834                           postdec1	equ	0xFE5
 12835                           plusw1	equ	0xFE3
 12836                           fsr1h	equ	0xFE2
 12837                           fsr1l	equ	0xFE1
 12838                           indf2	equ	0xFDF
 12839                           postinc2	equ	0xFDE
 12840                           plusw2	equ	0xFDB
 12841                           fsr2h	equ	0xFDA
 12842                           fsr2l	equ	0xFD9
 12843                           status	equ	0xFD8
 12844                           
 12845 ;; *************** function __write_root *****************
 12846 ;; Defined at:
 12847 ;;		line 474 in file "fat16.c"
 12848 ;; Parameters:    Size  Location     Type
 12849 ;;  file_number     1    wreg     unsigned char 
 12850 ;;  data            2   40[BANK0 ] PTR struct .
 12851 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 12852 ;; Auto vars:     Size  Location     Type
 12853 ;;  file_number     1   46[BANK0 ] unsigned char 
 12854 ;;  offset          2   44[BANK0 ] unsigned int 
 12855 ;;  sector          2   42[BANK0 ] unsigned int 
 12856 ;; Return value:  Size  Location     Type
 12857 ;;                  1    wreg      void 
 12858 ;; Registers used:
 12859 ;;		wreg, status,2, status,0, cstack
 12860 ;; Tracked objects:
 12861 ;;		On entry : 0/0
 12862 ;;		On exit  : 0/0
 12863 ;;		Unchanged: 0/0
 12864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12865 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12866 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12868 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12869 ;;Total ram usage:        7 bytes
 12870 ;; Hardware stack levels used:    1
 12871 ;; Hardware stack levels required when called:   15
 12872 ;; This function calls:
 12873 ;;		__offset_from_file_number
 12874 ;;		__sector_from_file_number
 12875 ;;		_flash_partial_write
 12876 ;; This function is called by:
 12877 ;;		_fat_create_file
 12878 ;;		_fat_resize_file
 12879 ;;		_fat_rename_file
 12880 ;; This function uses a non-reentrant model
 12881 ;;
 12882                           
 12883                           	psect	text35
 12884  015836                     __ptext35:
 12885                           	opt stack 0
 12886  015836                     __write_root:
 12887                           	opt stack 12
 12888                           
 12889                           ;incstack = 0
 12890                           ;__write_root@file_number stored from wreg
 12891  015836  0100               	movlb	0	; () banked
 12892  015838  6F8E               	movwf	__write_root@file_number& (0+255),b
 12893                           
 12894                           ;fat16.c: 476: uint16_t sector;;fat16.c: 477: uint16_t offset;;fat16.c: 480: sector = _s
      +                          ector_from_file_number(file_number);
 12895  01583A  0100               	movlb	0	; () banked
 12896  01583C  518E               	movf	__write_root@file_number& (0+255),w,b
 12897  01583E  EC43  F0AF         	call	__sector_from_file_number
 12898  015842  C060  F08A         	movff	?__sector_from_file_number,__write_root@sector
 12899  015846  C061  F08B         	movff	?__sector_from_file_number+1,__write_root@sector+1
 12900                           
 12901                           ;fat16.c: 481: offset = _offset_from_file_number(file_number);
 12902  01584A  0100               	movlb	0	; () banked
 12903  01584C  518E               	movf	__write_root@file_number& (0+255),w,b
 12904  01584E  EC55  F0B0         	call	__offset_from_file_number
 12905  015852  C060  F08C         	movff	?__offset_from_file_number,__write_root@offset
 12906  015856  C061  F08D         	movff	?__offset_from_file_number+1,__write_root@offset+1
 12907                           
 12908                           ;fat16.c: 484: flash_partial_write(sector, offset, 32, data);
 12909  01585A  C08A  F07F         	movff	__write_root@sector,flash_partial_write@page
 12910  01585E  C08B  F080         	movff	__write_root@sector+1,flash_partial_write@page+1
 12911  015862  C08C  F081         	movff	__write_root@offset,flash_partial_write@start
 12912  015866  C08D  F082         	movff	__write_root@offset+1,flash_partial_write@start+1
 12913  01586A  0E00               	movlw	0
 12914  01586C  0100               	movlb	0	; () banked
 12915  01586E  6F84               	movwf	(flash_partial_write@length+1)& (0+255),b
 12916  015870  0E20               	movlw	32
 12917  015872  6F83               	movwf	flash_partial_write@length& (0+255),b
 12918  015874  C088  F085         	movff	__write_root@data,flash_partial_write@data
 12919  015878  C089  F086         	movff	__write_root@data+1,flash_partial_write@data+1
 12920  01587C  EC96  F0A5         	call	_flash_partial_write	;wreg free
 12921  015880  0012               	return		;funcret
 12922  015882                     __end_of__write_root:
 12923                           	opt stack 0
 12924                           tblptru	equ	0xFF8
 12925                           tblptrh	equ	0xFF7
 12926                           tblptrl	equ	0xFF6
 12927                           tablat	equ	0xFF5
 12928                           prodh	equ	0xFF4
 12929                           prodl	equ	0xFF3
 12930                           postinc0	equ	0xFEE
 12931                           wreg	equ	0xFE8
 12932                           postdec1	equ	0xFE5
 12933                           plusw1	equ	0xFE3
 12934                           fsr1h	equ	0xFE2
 12935                           fsr1l	equ	0xFE1
 12936                           indf2	equ	0xFDF
 12937                           postinc2	equ	0xFDE
 12938                           plusw2	equ	0xFDB
 12939                           fsr2h	equ	0xFDA
 12940                           fsr2l	equ	0xFD9
 12941                           status	equ	0xFD8
 12942                           
 12943 ;; *************** function _flash_partial_write *****************
 12944 ;; Defined at:
 12945 ;;		line 460 in file "flash.c"
 12946 ;; Parameters:    Size  Location     Type
 12947 ;;  page            2   31[BANK0 ] unsigned int 
 12948 ;;  start           2   33[BANK0 ] unsigned int 
 12949 ;;  length          2   35[BANK0 ] unsigned int 
 12950 ;;  data            2   37[BANK0 ] PTR unsigned char 
 12951 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 12952 ;;		 -> _delete_root@deleted_value(1), 
 12953 ;; Auto vars:     Size  Location     Type
 12954 ;;  match           1   39[BANK0 ] enum E7073
 12955 ;; Return value:  Size  Location     Type
 12956 ;;                  1    wreg      void 
 12957 ;; Registers used:
 12958 ;;		wreg, status,2, status,0, cstack
 12959 ;; Tracked objects:
 12960 ;;		On entry : 0/0
 12961 ;;		On exit  : 0/0
 12962 ;;		Unchanged: 0/0
 12963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12964 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12965 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12967 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12968 ;;Total ram usage:        9 bytes
 12969 ;; Hardware stack levels used:    1
 12970 ;; Hardware stack levels required when called:   14
 12971 ;; This function calls:
 12972 ;;		__flash_compare_page_to_buffer
 12973 ;;		__flash_copy_page_to_buffer
 12974 ;;		__flash_is_busy
 12975 ;;		__flash_write_page_from_buffer
 12976 ;;		__flash_write_to_buffer
 12977 ;; This function is called by:
 12978 ;;		__write_root
 12979 ;;		_fat_modify_file
 12980 ;;		__delete_root
 12981 ;; This function uses a non-reentrant model
 12982 ;;
 12983                           
 12984                           	psect	text36
 12985  014B2C                     __ptext36:
 12986                           	opt stack 0
 12987  014B2C                     _flash_partial_write:
 12988                           	opt stack 12
 12989                           
 12990                           ;flash.c: 462: flashMatchResult_t match;;flash.c: 465: while(_flash_is_busy());
 12991                           
 12992                           ;incstack = 0
 12993  014B2C  EC16  F0B1         	call	__flash_is_busy	;wreg free
 12994  014B30  0900               	iorlw	0
 12995  014B32  A4D8               	btfss	status,2,c
 12996  014B34  D7FB               	goto	_flash_partial_write
 12997                           
 12998                           ;flash.c: 468: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 12999  014B36  C07F  F073         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 13000  014B3A  C080  F074         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 13001  014B3E  0E00               	movlw	0
 13002  014B40  0100               	movlb	0	; () banked
 13003  014B42  6F75               	movwf	__flash_copy_page_to_buffer@buffer& (0+255),b
 13004  014B44  EC20  F0A8         	call	__flash_copy_page_to_buffer	;wreg free
 13005                           
 13006                           ;flash.c: 471: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 13007  014B48  C081  F073         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 13008  014B4C  C082  F074         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 13009  014B50  C085  F075         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 13010  014B54  C086  F076         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 13011  014B58  C083  F077         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 13012  014B5C  C084  F078         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 13013  014B60  0E00               	movlw	0
 13014  014B62  0100               	movlb	0	; () banked
 13015  014B64  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 13016  014B66  ECDB  F0AA         	call	__flash_write_to_buffer	;wreg free
 13017                           
 13018                           ;flash.c: 474: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 13019  014B6A  C07F  F073         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 13020  014B6E  C080  F074         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 13021  014B72  0E00               	movlw	0
 13022  014B74  0100               	movlb	0	; () banked
 13023  014B76  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 13024  014B78  EC87  F0A3         	call	__flash_compare_page_to_buffer	;wreg free
 13025  014B7C  0100               	movlb	0	; () banked
 13026  014B7E  6F87               	movwf	flash_partial_write@match& (0+255),b
 13027                           
 13028                           ; BSR set to: 0
 13029                           ;flash.c: 477: if(match==DATA_DOES_NOT_MATCH)
 13030  014B80  0587               	decf	flash_partial_write@match& (0+255),w,b
 13031  014B82  A4D8               	btfss	status,2,c
 13032  014B84  0012               	return	
 13033                           
 13034                           ; BSR set to: 0
 13035                           ;flash.c: 478: {;flash.c: 479: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 13036  014B86  C07F  F073         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 13037  014B8A  C080  F074         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 13038  014B8E  0E00               	movlw	0
 13039  014B90  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 13040  014B92  ECA7  F0A8         	call	__flash_write_page_from_buffer	;wreg free
 13041  014B96  0012               	return	
 13042  014B98                     __end_of_flash_partial_write:
 13043                           	opt stack 0
 13044                           tblptru	equ	0xFF8
 13045                           tblptrh	equ	0xFF7
 13046                           tblptrl	equ	0xFF6
 13047                           tablat	equ	0xFF5
 13048                           prodh	equ	0xFF4
 13049                           prodl	equ	0xFF3
 13050                           postinc0	equ	0xFEE
 13051                           wreg	equ	0xFE8
 13052                           postdec1	equ	0xFE5
 13053                           plusw1	equ	0xFE3
 13054                           fsr1h	equ	0xFE2
 13055                           fsr1l	equ	0xFE1
 13056                           indf2	equ	0xFDF
 13057                           postinc2	equ	0xFDE
 13058                           plusw2	equ	0xFDB
 13059                           fsr2h	equ	0xFDA
 13060                           fsr2l	equ	0xFD9
 13061                           status	equ	0xFD8
 13062                           
 13063 ;; *************** function __flash_copy_page_to_buffer *****************
 13064 ;; Defined at:
 13065 ;;		line 154 in file "flash.c"
 13066 ;; Parameters:    Size  Location     Type
 13067 ;;  page            2   19[BANK0 ] unsigned int 
 13068 ;;  buffer          1   21[BANK0 ] enum E7069
 13069 ;; Auto vars:     Size  Location     Type
 13070 ;;  command         4   25[BANK0 ] unsigned char [4]
 13071 ;; Return value:  Size  Location     Type
 13072 ;;                  1    wreg      void 
 13073 ;; Registers used:
 13074 ;;		wreg, status,2, status,0, cstack
 13075 ;; Tracked objects:
 13076 ;;		On entry : 0/0
 13077 ;;		On exit  : 0/0
 13078 ;;		Unchanged: 0/0
 13079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13080 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13081 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13082 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13083 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13084 ;;Total ram usage:       10 bytes
 13085 ;; Hardware stack levels used:    1
 13086 ;; Hardware stack levels required when called:   13
 13087 ;; This function calls:
 13088 ;;		__flash_is_busy
 13089 ;;		_spi_tx
 13090 ;; This function is called by:
 13091 ;;		_flash_partial_write
 13092 ;;		_flash_copy_page_to_buffer
 13093 ;; This function uses a non-reentrant model
 13094 ;;
 13095                           
 13096                           	psect	text37
 13097  015040                     __ptext37:
 13098                           	opt stack 0
 13099  015040                     __flash_copy_page_to_buffer:
 13100                           	opt stack 12
 13101                           
 13102                           ;flash.c: 156: uint8_t command[4];;flash.c: 159: while(_flash_is_busy());
 13103                           
 13104                           ;incstack = 0
 13105  015040  EC16  F0B1         	call	__flash_is_busy	;wreg free
 13106  015044  0900               	iorlw	0
 13107  015046  A4D8               	btfss	status,2,c
 13108  015048  D7FB               	goto	__flash_copy_page_to_buffer
 13109                           
 13110                           ;flash.c: 162: if(buffer==FLASH_BUFFER_1)
 13111  01504A  0100               	movlb	0	; () banked
 13112  01504C  5175               	movf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 13113  01504E  A4D8               	btfss	status,2,c
 13114  015050  D002               	goto	l1573
 13115                           
 13116                           ; BSR set to: 0
 13117                           ;flash.c: 163: command[0] = 0x53;
 13118  015052  0E53               	movlw	83
 13119  015054  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 13120  015056                     l1573:
 13121                           
 13122                           ; BSR set to: 0
 13123                           ;flash.c: 164: if(buffer==FLASH_BUFFER_2)
 13124                           
 13125                           ; BSR set to: 0
 13126  015056  0575               	decf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 13127  015058  A4D8               	btfss	status,2,c
 13128  01505A  D002               	goto	l1574
 13129                           
 13130                           ; BSR set to: 0
 13131                           ;flash.c: 165: command[0] = 0x55;
 13132  01505C  0E55               	movlw	85
 13133  01505E  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 13134  015060                     l1574:
 13135                           
 13136                           ; BSR set to: 0
 13137                           ;flash.c: 167: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 13138                           
 13139                           ; BSR set to: 0
 13140  015060  C073  F076         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 13141  015064  C074  F077         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 13142  015068  0E07               	movlw	7
 13143  01506A  6F78               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),b
 13144  01506C                     u11725:
 13145  01506C  90D8               	bcf	status,0,c
 13146  01506E  3377               	rrcf	(??__flash_copy_page_to_buffer+1)& (0+255),f,b
 13147  015070  3376               	rrcf	??__flash_copy_page_to_buffer& (0+255),f,b
 13148  015072  2F78               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,b
 13149  015074  D7FB               	goto	u11725
 13150  015076  5176               	movf	??__flash_copy_page_to_buffer& (0+255),w,b
 13151  015078  6F7A               	movwf	(__flash_copy_page_to_buffer@command+1)& (0+255),b
 13152                           
 13153                           ; BSR set to: 0
 13154                           ;flash.c: 168: command[2] = ((unsigned char)((page<<1)&0xFF));
 13155  01507A  5173               	movf	__flash_copy_page_to_buffer@page& (0+255),w,b
 13156  01507C  2573               	addwf	__flash_copy_page_to_buffer@page& (0+255),w,b
 13157  01507E  6F7B               	movwf	(__flash_copy_page_to_buffer@command+2)& (0+255),b
 13158                           
 13159                           ;flash.c: 169: command[3] = 0x00;
 13160  015080  0E00               	movlw	0
 13161  015082  6F7C               	movwf	(__flash_copy_page_to_buffer@command+3)& (0+255),b
 13162                           
 13163                           ; BSR set to: 0
 13164                           ;flash.c: 172: spi_tx(command, 4);
 13165  015084  0E79               	movlw	low __flash_copy_page_to_buffer@command
 13166  015086  6F60               	movwf	spi_tx@data& (0+255),b
 13167  015088  0E00               	movlw	high __flash_copy_page_to_buffer@command
 13168  01508A  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 13169  01508C  0E00               	movlw	0
 13170  01508E  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 13171  015090  0E04               	movlw	4
 13172  015092  6F62               	movwf	spi_tx@length& (0+255),b
 13173  015094  ECD4  F0A8         	call	_spi_tx	;wreg free
 13174  015098  0012               	return		;funcret
 13175  01509A                     __end_of__flash_copy_page_to_buffer:
 13176                           	opt stack 0
 13177                           tblptru	equ	0xFF8
 13178                           tblptrh	equ	0xFF7
 13179                           tblptrl	equ	0xFF6
 13180                           tablat	equ	0xFF5
 13181                           prodh	equ	0xFF4
 13182                           prodl	equ	0xFF3
 13183                           postinc0	equ	0xFEE
 13184                           wreg	equ	0xFE8
 13185                           postdec1	equ	0xFE5
 13186                           plusw1	equ	0xFE3
 13187                           fsr1h	equ	0xFE2
 13188                           fsr1l	equ	0xFE1
 13189                           indf2	equ	0xFDF
 13190                           postinc2	equ	0xFDE
 13191                           plusw2	equ	0xFDB
 13192                           fsr2h	equ	0xFDA
 13193                           fsr2l	equ	0xFD9
 13194                           status	equ	0xFD8
 13195                           
 13196 ;; *************** function __make_cluster_chain *****************
 13197 ;; Defined at:
 13198 ;;		line 214 in file "fat16.c"
 13199 ;; Parameters:    Size  Location     Type
 13200 ;;  first_cluste    2   53[BANK0 ] unsigned int 
 13201 ;;  number_of_cl    2   55[BANK0 ] unsigned int 
 13202 ;; Auto vars:     Size  Location     Type
 13203 ;;  next_cluster    2   74[BANK0 ] unsigned int 
 13204 ;;  offset          2   72[BANK0 ] unsigned int 
 13205 ;;  sector_in_bu    2   70[BANK0 ] unsigned int 
 13206 ;;  sector          2   68[BANK0 ] unsigned int 
 13207 ;;  remaining_cl    2   66[BANK0 ] unsigned int 
 13208 ;;  different_se    2   63[BANK0 ] unsigned int 
 13209 ;;  minimum_sect    2   61[BANK0 ] unsigned int 
 13210 ;;  next_offset     2   59[BANK0 ] unsigned int 
 13211 ;;  data_changed    1   65[BANK0 ] unsigned char 
 13212 ;; Return value:  Size  Location     Type
 13213 ;;                  2   53[BANK0 ] unsigned int 
 13214 ;; Registers used:
 13215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13216 ;; Tracked objects:
 13217 ;;		On entry : 0/0
 13218 ;;		On exit  : 0/0
 13219 ;;		Unchanged: 0/0
 13220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13221 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13222 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13223 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13224 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13225 ;;Total ram usage:       23 bytes
 13226 ;; Hardware stack levels used:    1
 13227 ;; Hardware stack levels required when called:   16
 13228 ;; This function calls:
 13229 ;;		__fat_offset_from_cluster
 13230 ;;		__fat_sector_from_cluster
 13231 ;;		__get_available_cluster
 13232 ;;		__get_available_offset_from_buffer
 13233 ;;		__read_value_from_offset
 13234 ;;		__write_value_to_offset
 13235 ;;		_flash_sector_read
 13236 ;;		_flash_sector_write
 13237 ;; This function is called by:
 13238 ;;		_fat_create_file
 13239 ;;		_fat_resize_file
 13240 ;;		_fat_delete_file
 13241 ;; This function uses a non-reentrant model
 13242 ;;
 13243                           
 13244                           	psect	text38
 13245  00CFD0                     __ptext38:
 13246                           	opt stack 0
 13247  00CFD0                     __make_cluster_chain:
 13248                           	opt stack 11
 13249                           
 13250                           ;fat16.c: 216: uint16_t remaining_clusters;;fat16.c: 217: uint16_t minimum_sector;;fat16
      +                          .c: 218: uint16_t sector;;fat16.c: 219: uint16_t offset;;fat16.c: 220: uint16_t next_off
      +                          set;;fat16.c: 221: uint16_t sector_in_buffer;;fat16.c: 222: uint16_t next_cluster;;fat16
      +                          .c: 223: uint16_t different_sector_cluster;;fat16.c: 224: uint8_t data_changed;;fat16.c:
      +                           227: sector_in_buffer = 0;
 13251                           
 13252                           ;incstack = 0
 13253  00CFD0  0E00               	movlw	0
 13254  00CFD2  0100               	movlb	0	; () banked
 13255  00CFD4  6FA7               	movwf	(__make_cluster_chain@sector_in_buffer+1)& (0+255),b
 13256  00CFD6  0E00               	movlw	0
 13257  00CFD8  6FA6               	movwf	__make_cluster_chain@sector_in_buffer& (0+255),b
 13258                           
 13259                           ; BSR set to: 0
 13260                           ;fat16.c: 228: remaining_clusters = number_of_clusters;
 13261  00CFDA  C097  F0A2         	movff	__make_cluster_chain@number_of_clusters,__make_cluster_chain@remaining_clusters
 13262  00CFDE  C098  F0A3         	movff	__make_cluster_chain@number_of_clusters+1,__make_cluster_chain@remaining_clusters
      +                          +1
 13263                           
 13264                           ;fat16.c: 229: minimum_sector = 2;
 13265  00CFE2  0E00               	movlw	0
 13266  00CFE4  6F9E               	movwf	(__make_cluster_chain@minimum_sector+1)& (0+255),b
 13267  00CFE6  0E02               	movlw	2
 13268  00CFE8  6F9D               	movwf	__make_cluster_chain@minimum_sector& (0+255),b
 13269                           
 13270                           ;fat16.c: 230: data_changed = 0;
 13271  00CFEA  0E00               	movlw	0
 13272  00CFEC  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 13273                           
 13274                           ; BSR set to: 0
 13275                           ;fat16.c: 233: if((first_cluster==0) && (number_of_clusters>0))
 13276  00CFEE  5195               	movf	__make_cluster_chain@first_cluster& (0+255),w,b
 13277  00CFF0  1196               	iorwf	(__make_cluster_chain@first_cluster+1)& (0+255),w,b
 13278  00CFF2  A4D8               	btfss	status,2,c
 13279  00CFF4  D024               	goto	l1807
 13280                           
 13281                           ; BSR set to: 0
 13282  00CFF6  5197               	movf	__make_cluster_chain@number_of_clusters& (0+255),w,b
 13283  00CFF8  1198               	iorwf	(__make_cluster_chain@number_of_clusters+1)& (0+255),w,b
 13284  00CFFA  B4D8               	btfsc	status,2,c
 13285  00CFFC  D020               	goto	l1807
 13286                           
 13287                           ; BSR set to: 0
 13288                           ;fat16.c: 234: {;fat16.c: 235: first_cluster = _get_available_cluster(minimum_sector, 0)
      +                          ;
 13289  00CFFE  C09D  F08B         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 13290  00D002  C09E  F08C         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 13291  00D006  0E00               	movlw	0
 13292  00D008  6F8E               	movwf	(__get_available_cluster@skip_sector+1)& (0+255),b
 13293  00D00A  0E00               	movlw	0
 13294  00D00C  6F8D               	movwf	__get_available_cluster@skip_sector& (0+255),b
 13295  00D00E  EC04  F097         	call	__get_available_cluster	;wreg free
 13296  00D012  C08B  F095         	movff	?__get_available_cluster,__make_cluster_chain@first_cluster
 13297  00D016  C08C  F096         	movff	?__get_available_cluster+1,__make_cluster_chain@first_cluster+1
 13298                           
 13299                           ;fat16.c: 237: minimum_sector = _fat_sector_from_cluster(first_cluster);
 13300  00D01A  C095  F060         	movff	__make_cluster_chain@first_cluster,__fat_sector_from_cluster@cluster
 13301  00D01E  C096  F061         	movff	__make_cluster_chain@first_cluster+1,__fat_sector_from_cluster@cluster+1
 13302  00D022  EC99  F0B1         	call	__fat_sector_from_cluster	;wreg free
 13303  00D026  C060  F09D         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 13304  00D02A  C061  F09E         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 13305                           
 13306                           ;fat16.c: 238: if(first_cluster == 0)
 13307  00D02E  0100               	movlb	0	; () banked
 13308  00D030  5195               	movf	__make_cluster_chain@first_cluster& (0+255),w,b
 13309  00D032  1196               	iorwf	(__make_cluster_chain@first_cluster+1)& (0+255),w,b
 13310  00D034  A4D8               	btfss	status,2,c
 13311  00D036  D003               	goto	l1807
 13312                           
 13313                           ; BSR set to: 0
 13314                           ;fat16.c: 239: {;fat16.c: 240: return 0xFFFF;
 13315  00D038  6995               	setf	?__make_cluster_chain& (0+255),b
 13316  00D03A  6996               	setf	(?__make_cluster_chain+1)& (0+255),b
 13317  00D03C  0012               	return	
 13318  00D03E                     l1807:
 13319                           
 13320                           ; BSR set to: 0
 13321                           ;fat16.c: 241: };fat16.c: 242: };fat16.c: 243: next_cluster = first_cluster;
 13322                           
 13323                           ; BSR set to: 0
 13324  00D03E  C095  F0AA         	movff	__make_cluster_chain@first_cluster,__make_cluster_chain@next_cluster
 13325  00D042  C096  F0AB         	movff	__make_cluster_chain@first_cluster+1,__make_cluster_chain@next_cluster+1
 13326                           
 13327                           ;fat16.c: 246: while ((remaining_clusters > 0) || ((next_cluster>=2) && (next_cluster<=8
      +                          153)))
 13328  00D046  D103               	goto	l1824
 13329  00D048                     
 13330                           ; BSR set to: 0
 13331                           ;fat16.c: 247: {;fat16.c: 260: sector = _fat_sector_from_cluster(next_cluster);
 13332                           
 13333                           ; BSR set to: 0
 13334  00D048  C0AA  F060         	movff	__make_cluster_chain@next_cluster,__fat_sector_from_cluster@cluster
 13335  00D04C  C0AB  F061         	movff	__make_cluster_chain@next_cluster+1,__fat_sector_from_cluster@cluster+1
 13336  00D050  EC99  F0B1         	call	__fat_sector_from_cluster	;wreg free
 13337  00D054  C060  F0A4         	movff	?__fat_sector_from_cluster,__make_cluster_chain@sector
 13338  00D058  C061  F0A5         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@sector+1
 13339                           
 13340                           ;fat16.c: 261: offset = _fat_offset_from_cluster(next_cluster);
 13341  00D05C  C0AA  F060         	movff	__make_cluster_chain@next_cluster,__fat_offset_from_cluster@cluster
 13342  00D060  C0AB  F061         	movff	__make_cluster_chain@next_cluster+1,__fat_offset_from_cluster@cluster+1
 13343  00D064  ECA6  F0B1         	call	__fat_offset_from_cluster	;wreg free
 13344  00D068  C060  F0A8         	movff	?__fat_offset_from_cluster,__make_cluster_chain@offset
 13345  00D06C  C061  F0A9         	movff	?__fat_offset_from_cluster+1,__make_cluster_chain@offset+1
 13346                           
 13347                           ;fat16.c: 264: if(sector != sector_in_buffer)
 13348  00D070  0100               	movlb	0	; () banked
 13349  00D072  51A6               	movf	__make_cluster_chain@sector_in_buffer& (0+255),w,b
 13350  00D074  19A4               	xorwf	__make_cluster_chain@sector& (0+255),w,b
 13351  00D076  E104               	bnz	u14480
 13352  00D078  51A7               	movf	(__make_cluster_chain@sector_in_buffer+1)& (0+255),w,b
 13353  00D07A  19A5               	xorwf	(__make_cluster_chain@sector+1)& (0+255),w,b
 13354  00D07C  B4D8               	btfsc	status,2,c
 13355  00D07E  D037               	goto	l1811
 13356  00D080                     u14480:
 13357                           
 13358                           ; BSR set to: 0
 13359                           ;fat16.c: 265: {;fat16.c: 267: if(data_changed)
 13360  00D080  51A1               	movf	__make_cluster_chain@data_changed& (0+255),w,b
 13361  00D082  B4D8               	btfsc	status,2,c
 13362  00D084  D00A               	goto	l1812
 13363                           
 13364                           ; BSR set to: 0
 13365                           ;fat16.c: 268: {;fat16.c: 269: flash_sector_write(sector_in_buffer, buffer);
 13366  00D086  C0A6  F07F         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 13367  00D08A  C0A7  F080         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 13368  00D08E  0E00               	movlw	low _buffer
 13369  00D090  6F81               	movwf	flash_sector_write@data& (0+255),b
 13370  00D092  0E0A               	movlw	high _buffer
 13371  00D094  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 13372  00D096  EC7C  F0AB         	call	_flash_sector_write	;wreg free
 13373  00D09A                     l1812:
 13374                           
 13375                           ;fat16.c: 270: };fat16.c: 273: different_sector_cluster = _get_available_cluster(minimum
      +                          _sector, sector);
 13376  00D09A  C09D  F08B         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 13377  00D09E  C09E  F08C         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 13378  00D0A2  C0A4  F08D         	movff	__make_cluster_chain@sector,__get_available_cluster@skip_sector
 13379  00D0A6  C0A5  F08E         	movff	__make_cluster_chain@sector+1,__get_available_cluster@skip_sector+1
 13380  00D0AA  EC04  F097         	call	__get_available_cluster	;wreg free
 13381  00D0AE  C08B  F09F         	movff	?__get_available_cluster,__make_cluster_chain@different_sector_cluster
 13382  00D0B2  C08C  F0A0         	movff	?__get_available_cluster+1,__make_cluster_chain@different_sector_cluster+1
 13383                           
 13384                           ;fat16.c: 276: minimum_sector = _fat_sector_from_cluster(different_sector_cluster);
 13385  00D0B6  C09F  F060         	movff	__make_cluster_chain@different_sector_cluster,__fat_sector_from_cluster@cluster
 13386  00D0BA  C0A0  F061         	movff	__make_cluster_chain@different_sector_cluster+1,__fat_sector_from_cluster@cluster
      +                          +1
 13387  00D0BE  EC99  F0B1         	call	__fat_sector_from_cluster	;wreg free
 13388  00D0C2  C060  F09D         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 13389  00D0C6  C061  F09E         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 13390                           
 13391                           ;fat16.c: 279: flash_sector_read(sector, buffer);
 13392  00D0CA  C0A4  F087         	movff	__make_cluster_chain@sector,flash_sector_read@page
 13393  00D0CE  C0A5  F088         	movff	__make_cluster_chain@sector+1,flash_sector_read@page+1
 13394  00D0D2  0E00               	movlw	low _buffer
 13395  00D0D4  0100               	movlb	0	; () banked
 13396  00D0D6  6F89               	movwf	flash_sector_read@data& (0+255),b
 13397  00D0D8  0E0A               	movlw	high _buffer
 13398  00D0DA  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 13399  00D0DC  EC92  F0B0         	call	_flash_sector_read	;wreg free
 13400                           
 13401                           ;fat16.c: 280: sector_in_buffer = sector;
 13402  00D0E0  C0A4  F0A6         	movff	__make_cluster_chain@sector,__make_cluster_chain@sector_in_buffer
 13403  00D0E4  C0A5  F0A7         	movff	__make_cluster_chain@sector+1,__make_cluster_chain@sector_in_buffer+1
 13404                           
 13405                           ;fat16.c: 281: data_changed = 0;
 13406  00D0E8  0E00               	movlw	0
 13407  00D0EA  0100               	movlb	0	; () banked
 13408  00D0EC  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 13409  00D0EE                     l1811:
 13410                           
 13411                           ; BSR set to: 0
 13412                           ;fat16.c: 282: };fat16.c: 285: if(remaining_clusters > 1)
 13413                           
 13414                           ; BSR set to: 0
 13415  00D0EE  51A3               	movf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 13416  00D0F0  E104               	bnz	u14500
 13417  00D0F2  0E02               	movlw	2
 13418  00D0F4  5DA2               	subwf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 13419  00D0F6  A0D8               	btfss	status,0,c
 13420  00D0F8  D05E               	goto	l1813
 13421  00D0FA                     u14500:
 13422                           
 13423                           ; BSR set to: 0
 13424                           ;fat16.c: 286: {;fat16.c: 288: next_cluster = _read_value_from_offset(offset, buffer);
 13425  00D0FA  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 13426  00D0FE  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 13427  00D102  0E00               	movlw	low _buffer
 13428  00D104  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 13429  00D106  0E0A               	movlw	high _buffer
 13430  00D108  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 13431  00D10A  EC8B  F0AC         	call	__read_value_from_offset	;wreg free
 13432  00D10E  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 13433  00D112  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 13434                           
 13435                           ;fat16.c: 291: if((next_cluster < 2) || (next_cluster > 8153))
 13436  00D116  0100               	movlb	0	; () banked
 13437  00D118  51AB               	movf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13438  00D11A  E104               	bnz	u14510
 13439  00D11C  0E02               	movlw	2
 13440  00D11E  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 13441  00D120  A0D8               	btfss	status,0,c
 13442  00D122  D006               	goto	u14520
 13443  00D124                     u14510:
 13444                           
 13445                           ; BSR set to: 0
 13446  00D124  0EDA               	movlw	218
 13447  00D126  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 13448  00D128  0E1F               	movlw	31
 13449  00D12A  59AB               	subwfb	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13450  00D12C  A0D8               	btfss	status,0,c
 13451  00D12E  D06B               	goto	l1823
 13452  00D130                     u14520:
 13453                           
 13454                           ; BSR set to: 0
 13455                           ;fat16.c: 292: {;fat16.c: 294: next_offset = _get_available_offset_from_buffer(offset+2,
      +                           buffer);
 13456                           
 13457                           ; BSR set to: 0
 13458  00D130  0E02               	movlw	2
 13459  00D132  25A8               	addwf	__make_cluster_chain@offset& (0+255),w,b
 13460  00D134  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 13461  00D136  0E00               	movlw	0
 13462  00D138  21A9               	addwfc	(__make_cluster_chain@offset+1)& (0+255),w,b
 13463  00D13A  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 13464  00D13C  0E00               	movlw	low _buffer
 13465  00D13E  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 13466  00D140  0E0A               	movlw	high _buffer
 13467  00D142  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 13468  00D144  ECC3  F0A7         	call	__get_available_offset_from_buffer	;wreg free
 13469  00D148  C060  F09B         	movff	?__get_available_offset_from_buffer,__make_cluster_chain@next_offset
 13470  00D14C  C061  F09C         	movff	?__get_available_offset_from_buffer+1,__make_cluster_chain@next_offset+1
 13471                           
 13472                           ;fat16.c: 296: if(next_offset != 0xFFFF)
 13473  00D150  0100               	movlb	0	; () banked
 13474  00D152  299B               	incf	__make_cluster_chain@next_offset& (0+255),w,b
 13475  00D154  E103               	bnz	u14530
 13476  00D156  299C               	incf	(__make_cluster_chain@next_offset+1)& (0+255),w,b
 13477  00D158  B4D8               	btfsc	status,2,c
 13478  00D15A  D013               	goto	l1817
 13479  00D15C                     u14530:
 13480                           
 13481                           ; BSR set to: 0
 13482                           ;fat16.c: 297: {;fat16.c: 299: next_cluster = sector_in_buffer - 2;
 13483  00D15C  0EFE               	movlw	254
 13484  00D15E  25A6               	addwf	__make_cluster_chain@sector_in_buffer& (0+255),w,b
 13485  00D160  6FAA               	movwf	__make_cluster_chain@next_cluster& (0+255),b
 13486  00D162  0EFF               	movlw	255
 13487  00D164  21A7               	addwfc	(__make_cluster_chain@sector_in_buffer+1)& (0+255),w,b
 13488  00D166  6FAB               	movwf	(__make_cluster_chain@next_cluster+1)& (0+255),b
 13489                           
 13490                           ; BSR set to: 0
 13491                           ;fat16.c: 300: next_cluster <<= 8;
 13492  00D168  51AA               	movf	__make_cluster_chain@next_cluster& (0+255),w,b
 13493  00D16A  6FAB               	movwf	(__make_cluster_chain@next_cluster+1)& (0+255),b
 13494  00D16C  6BAA               	clrf	__make_cluster_chain@next_cluster& (0+255),b
 13495                           
 13496                           ; BSR set to: 0
 13497                           ;fat16.c: 301: next_cluster |= (next_offset>>1);
 13498  00D16E  90D8               	bcf	status,0,c
 13499  00D170  319C               	rrcf	(__make_cluster_chain@next_offset+1)& (0+255),w,b
 13500  00D172  6F9A               	movwf	(??__make_cluster_chain+1)& (0+255),b
 13501  00D174  319B               	rrcf	__make_cluster_chain@next_offset& (0+255),w,b
 13502  00D176  6F99               	movwf	??__make_cluster_chain& (0+255),b
 13503  00D178  5199               	movf	??__make_cluster_chain& (0+255),w,b
 13504  00D17A  13AA               	iorwf	__make_cluster_chain@next_cluster& (0+255),f,b
 13505  00D17C  519A               	movf	(??__make_cluster_chain+1)& (0+255),w,b
 13506  00D17E  13AB               	iorwf	(__make_cluster_chain@next_cluster+1)& (0+255),f,b
 13507                           
 13508                           ;fat16.c: 302: }
 13509  00D180  D00B               	goto	l1820
 13510  00D182                     l1817:
 13511                           
 13512                           ; BSR set to: 0
 13513                           ;fat16.c: 303: else;fat16.c: 304: {;fat16.c: 305: if(different_sector_cluster == 0x0000)
 13514                           
 13515                           ; BSR set to: 0
 13516  00D182  519F               	movf	__make_cluster_chain@different_sector_cluster& (0+255),w,b
 13517  00D184  11A0               	iorwf	(__make_cluster_chain@different_sector_cluster+1)& (0+255),w,b
 13518  00D186  A4D8               	btfss	status,2,c
 13519  00D188  D003               	goto	l1819
 13520                           
 13521                           ; BSR set to: 0
 13522                           ;fat16.c: 306: {;fat16.c: 308: return 0xFFFF;
 13523  00D18A  6995               	setf	?__make_cluster_chain& (0+255),b
 13524  00D18C  6996               	setf	(?__make_cluster_chain+1)& (0+255),b
 13525  00D18E  0012               	return	
 13526  00D190                     l1819:
 13527                           
 13528                           ; BSR set to: 0
 13529                           ;fat16.c: 310: else;fat16.c: 311: {;fat16.c: 313: next_cluster = different_sector_cluste
      +                          r;
 13530  00D190  C09F  F0AA         	movff	__make_cluster_chain@different_sector_cluster,__make_cluster_chain@next_cluster
 13531  00D194  C0A0  F0AB         	movff	__make_cluster_chain@different_sector_cluster+1,__make_cluster_chain@next_cluster
      +                          +1
 13532  00D198                     l1820:
 13533                           
 13534                           ; BSR set to: 0
 13535                           ;fat16.c: 314: };fat16.c: 315: };fat16.c: 317: _write_value_to_offset(offset, buffer, ne
      +                          xt_cluster);
 13536                           
 13537                           ; BSR set to: 0
 13538                           
 13539                           ; BSR set to: 0
 13540  00D198  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 13541  00D19C  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 13542  00D1A0  0E00               	movlw	low _buffer
 13543  00D1A2  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 13544  00D1A4  0E0A               	movlw	high _buffer
 13545  00D1A6  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 13546  00D1A8  C0AA  F064         	movff	__make_cluster_chain@next_cluster,__write_value_to_offset@value
 13547  00D1AC  C0AB  F065         	movff	__make_cluster_chain@next_cluster+1,__write_value_to_offset@value+1
 13548  00D1B0  ECA7  F0AE         	call	__write_value_to_offset	;wreg free
 13549  00D1B4  D025               	goto	L72
 13550  00D1B6                     l1813:
 13551                           
 13552                           ; BSR set to: 0
 13553                           ;fat16.c: 327: else if(remaining_clusters == 1)
 13554                           
 13555                           ; BSR set to: 0
 13556  00D1B6  05A2               	decf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 13557  00D1B8  11A3               	iorwf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 13558  00D1BA  A4D8               	btfss	status,2,c
 13559  00D1BC  D028               	goto	l1822
 13560                           
 13561                           ; BSR set to: 0
 13562                           ;fat16.c: 328: {;fat16.c: 330: next_cluster = _read_value_from_offset(offset, buffer);
 13563  00D1BE  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 13564  00D1C2  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 13565  00D1C6  0E00               	movlw	low _buffer
 13566  00D1C8  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 13567  00D1CA  0E0A               	movlw	high _buffer
 13568  00D1CC  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 13569  00D1CE  EC8B  F0AC         	call	__read_value_from_offset	;wreg free
 13570  00D1D2  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 13571  00D1D6  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 13572                           
 13573                           ;fat16.c: 332: if(next_cluster != 0xFFFF)
 13574  00D1DA  0100               	movlb	0	; () banked
 13575  00D1DC  29AA               	incf	__make_cluster_chain@next_cluster& (0+255),w,b
 13576  00D1DE  E103               	bnz	u14560
 13577  00D1E0  29AB               	incf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13578  00D1E2  B4D8               	btfsc	status,2,c
 13579  00D1E4  D010               	goto	l1823
 13580  00D1E6                     u14560:
 13581                           
 13582                           ; BSR set to: 0
 13583                           ;fat16.c: 333: {;fat16.c: 335: _write_value_to_offset(offset, buffer, 0xFFFF);
 13584  00D1E6  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 13585  00D1EA  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 13586  00D1EE  0E00               	movlw	low _buffer
 13587  00D1F0  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 13588  00D1F2  0E0A               	movlw	high _buffer
 13589  00D1F4  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 13590  00D1F6  0EFF               	movlw	255
 13591  00D1F8  6F65               	movwf	(__write_value_to_offset@value+1)& (0+255),b
 13592  00D1FA  6964               	setf	__write_value_to_offset@value& (0+255),b
 13593  00D1FC  ECA7  F0AE         	call	__write_value_to_offset	;wreg free
 13594  00D200                     L72:
 13595                           
 13596                           ;fat16.c: 337: data_changed = 1;
 13597  00D200  0E01               	movlw	1
 13598  00D202  0100               	movlb	0	; () banked
 13599  00D204  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 13600  00D206                     l1823:
 13601                           
 13602                           ; BSR set to: 0
 13603                           ;fat16.c: 338: };fat16.c: 341: --remaining_clusters;
 13604                           
 13605                           ; BSR set to: 0
 13606  00D206  07A2               	decf	__make_cluster_chain@remaining_clusters& (0+255),f,b
 13607  00D208  A0D8               	btfss	status,0,c
 13608  00D20A  07A3               	decf	(__make_cluster_chain@remaining_clusters+1)& (0+255),f,b
 13609                           
 13610                           ;fat16.c: 342: }
 13611  00D20C  D020               	goto	l1824
 13612  00D20E                     l1822:
 13613                           
 13614                           ; BSR set to: 0
 13615                           ;fat16.c: 345: else;fat16.c: 346: {;fat16.c: 348: next_cluster = _read_value_from_offset
      +                          (offset, buffer);
 13616                           
 13617                           ; BSR set to: 0
 13618  00D20E  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 13619  00D212  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 13620  00D216  0E00               	movlw	low _buffer
 13621  00D218  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 13622  00D21A  0E0A               	movlw	high _buffer
 13623  00D21C  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 13624  00D21E  EC8B  F0AC         	call	__read_value_from_offset	;wreg free
 13625  00D222  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 13626  00D226  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 13627                           
 13628                           ;fat16.c: 351: _write_value_to_offset(offset, buffer, 0x0000);
 13629  00D22A  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 13630  00D22E  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 13631  00D232  0E00               	movlw	low _buffer
 13632  00D234  0100               	movlb	0	; () banked
 13633  00D236  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 13634  00D238  0E0A               	movlw	high _buffer
 13635  00D23A  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 13636  00D23C  0E00               	movlw	0
 13637  00D23E  6F65               	movwf	(__write_value_to_offset@value+1)& (0+255),b
 13638  00D240  0E00               	movlw	0
 13639  00D242  6F64               	movwf	__write_value_to_offset@value& (0+255),b
 13640  00D244  ECA7  F0AE         	call	__write_value_to_offset	;wreg free
 13641                           
 13642                           ;fat16.c: 353: data_changed = 1;
 13643  00D248  0E01               	movlw	1
 13644  00D24A  0100               	movlb	0	; () banked
 13645  00D24C  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 13646  00D24E                     l1824:
 13647                           
 13648                           ; BSR set to: 0
 13649                           
 13650                           ; BSR set to: 0
 13651                           
 13652                           ; BSR set to: 0
 13653                           
 13654                           ; BSR set to: 0
 13655  00D24E  51A2               	movf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 13656  00D250  11A3               	iorwf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 13657  00D252  A4D8               	btfss	status,2,c
 13658  00D254  D6F9               	goto	l1810
 13659                           
 13660                           ; BSR set to: 0
 13661  00D256  51AB               	movf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13662  00D258  E104               	bnz	u14580
 13663  00D25A  0E02               	movlw	2
 13664  00D25C  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 13665  00D25E  A0D8               	btfss	status,0,c
 13666  00D260  D006               	goto	u14590
 13667  00D262                     u14580:
 13668                           
 13669                           ; BSR set to: 0
 13670  00D262  0EDA               	movlw	218
 13671  00D264  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 13672  00D266  0E1F               	movlw	31
 13673  00D268  59AB               	subwfb	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13674  00D26A  A0D8               	btfss	status,0,c
 13675  00D26C  D6ED               	goto	l1810
 13676  00D26E                     u14590:
 13677                           
 13678                           ; BSR set to: 0
 13679                           ;fat16.c: 354: };fat16.c: 356: };fat16.c: 359: if(data_changed)
 13680                           
 13681                           ; BSR set to: 0
 13682                           
 13683                           ; BSR set to: 0
 13684  00D26E  51A1               	movf	__make_cluster_chain@data_changed& (0+255),w,b
 13685  00D270  B4D8               	btfsc	status,2,c
 13686  00D272  D00A               	goto	l1828
 13687                           
 13688                           ; BSR set to: 0
 13689                           ;fat16.c: 360: {;fat16.c: 361: flash_sector_write(sector_in_buffer, buffer);
 13690  00D274  C0A6  F07F         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 13691  00D278  C0A7  F080         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 13692  00D27C  0E00               	movlw	low _buffer
 13693  00D27E  6F81               	movwf	flash_sector_write@data& (0+255),b
 13694  00D280  0E0A               	movlw	high _buffer
 13695  00D282  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 13696  00D284  EC7C  F0AB         	call	_flash_sector_write	;wreg free
 13697  00D288                     l1828:
 13698                           
 13699                           ;fat16.c: 362: };fat16.c: 365: if(number_of_clusters>0)
 13700  00D288  0100               	movlb	0	; () banked
 13701  00D28A  5197               	movf	__make_cluster_chain@number_of_clusters& (0+255),w,b
 13702  00D28C  1198               	iorwf	(__make_cluster_chain@number_of_clusters+1)& (0+255),w,b
 13703  00D28E  B4D8               	btfsc	status,2,c
 13704  00D290  D005               	goto	l1829
 13705                           
 13706                           ; BSR set to: 0
 13707                           ;fat16.c: 366: {;fat16.c: 367: return first_cluster;
 13708  00D292  C095  F095         	movff	__make_cluster_chain@first_cluster,?__make_cluster_chain
 13709  00D296  C096  F096         	movff	__make_cluster_chain@first_cluster+1,?__make_cluster_chain+1
 13710                           
 13711                           ; BSR set to: 0
 13712                           ;fat16.c: 368: }
 13713  00D29A  0012               	return	
 13714  00D29C                     l1829:
 13715                           
 13716                           ; BSR set to: 0
 13717                           ;fat16.c: 369: else;fat16.c: 370: {;fat16.c: 371: return 0x0000;
 13718                           
 13719                           ; BSR set to: 0
 13720  00D29C  0E00               	movlw	0
 13721  00D29E  6F96               	movwf	(?__make_cluster_chain+1)& (0+255),b
 13722  00D2A0  0E00               	movlw	0
 13723  00D2A2  6F95               	movwf	?__make_cluster_chain& (0+255),b
 13724                           
 13725                           ; BSR set to: 0
 13726  00D2A4  0012               	return	
 13727  00D2A6                     __end_of__make_cluster_chain:
 13728                           	opt stack 0
 13729                           tblptru	equ	0xFF8
 13730                           tblptrh	equ	0xFF7
 13731                           tblptrl	equ	0xFF6
 13732                           tablat	equ	0xFF5
 13733                           prodh	equ	0xFF4
 13734                           prodl	equ	0xFF3
 13735                           postinc0	equ	0xFEE
 13736                           wreg	equ	0xFE8
 13737                           postdec1	equ	0xFE5
 13738                           plusw1	equ	0xFE3
 13739                           fsr1h	equ	0xFE2
 13740                           fsr1l	equ	0xFE1
 13741                           indf2	equ	0xFDF
 13742                           postinc2	equ	0xFDE
 13743                           plusw2	equ	0xFDB
 13744                           fsr2h	equ	0xFDA
 13745                           fsr2l	equ	0xFD9
 13746                           status	equ	0xFD8
 13747                           
 13748 ;; *************** function __write_value_to_offset *****************
 13749 ;; Defined at:
 13750 ;;		line 124 in file "fat16.c"
 13751 ;; Parameters:    Size  Location     Type
 13752 ;;  offset          2    0[BANK0 ] unsigned int 
 13753 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 13754 ;;		 -> buffer(512), 
 13755 ;;  value           2    4[BANK0 ] unsigned int 
 13756 ;; Auto vars:     Size  Location     Type
 13757 ;;		None
 13758 ;; Return value:  Size  Location     Type
 13759 ;;                  1    wreg      void 
 13760 ;; Registers used:
 13761 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13762 ;; Tracked objects:
 13763 ;;		On entry : 0/0
 13764 ;;		On exit  : 0/0
 13765 ;;		Unchanged: 0/0
 13766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13767 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13769 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13770 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13771 ;;Total ram usage:        8 bytes
 13772 ;; Hardware stack levels used:    1
 13773 ;; Hardware stack levels required when called:   10
 13774 ;; This function calls:
 13775 ;;		Nothing
 13776 ;; This function is called by:
 13777 ;;		__make_cluster_chain
 13778 ;; This function uses a non-reentrant model
 13779 ;;
 13780                           
 13781                           	psect	text39
 13782  015D4E                     __ptext39:
 13783                           	opt stack 0
 13784  015D4E                     __write_value_to_offset:
 13785                           	opt stack 16
 13786                           
 13787                           ;fat16.c: 126: buffer[offset] = (uint8_t) (value & 0xFF);
 13788                           
 13789                           ; BSR set to: 0
 13790                           ;incstack = 0
 13791  015D4E  0100               	movlb	0	; () banked
 13792  015D50  5160               	movf	__write_value_to_offset@offset& (0+255),w,b
 13793  015D52  2562               	addwf	__write_value_to_offset@buffer& (0+255),w,b
 13794  015D54  6ED9               	movwf	fsr2l,c
 13795  015D56  5161               	movf	(__write_value_to_offset@offset+1)& (0+255),w,b
 13796  015D58  2163               	addwfc	(__write_value_to_offset@buffer+1)& (0+255),w,b
 13797  015D5A  6EDA               	movwf	fsr2h,c
 13798  015D5C  C064  FFDF         	movff	__write_value_to_offset@value,indf2
 13799                           
 13800                           ; BSR set to: 0
 13801                           ;fat16.c: 127: value >>= 8;
 13802  015D60  5165               	movf	(__write_value_to_offset@value+1)& (0+255),w,b
 13803  015D62  6F64               	movwf	__write_value_to_offset@value& (0+255),b
 13804  015D64  6B65               	clrf	(__write_value_to_offset@value+1)& (0+255),b
 13805                           
 13806                           ; BSR set to: 0
 13807                           ;fat16.c: 128: buffer[offset+1] = (uint8_t) (value & 0xFF);
 13808  015D66  0E01               	movlw	1
 13809  015D68  2560               	addwf	__write_value_to_offset@offset& (0+255),w,b
 13810  015D6A  6F66               	movwf	??__write_value_to_offset& (0+255),b
 13811  015D6C  0E00               	movlw	0
 13812  015D6E  2161               	addwfc	(__write_value_to_offset@offset+1)& (0+255),w,b
 13813  015D70  6F67               	movwf	(??__write_value_to_offset+1)& (0+255),b
 13814  015D72  5166               	movf	??__write_value_to_offset& (0+255),w,b
 13815  015D74  2562               	addwf	__write_value_to_offset@buffer& (0+255),w,b
 13816  015D76  6ED9               	movwf	fsr2l,c
 13817  015D78  5167               	movf	(??__write_value_to_offset+1)& (0+255),w,b
 13818  015D7A  2163               	addwfc	(__write_value_to_offset@buffer+1)& (0+255),w,b
 13819  015D7C  6EDA               	movwf	fsr2h,c
 13820  015D7E  C064  FFDF         	movff	__write_value_to_offset@value,indf2
 13821                           
 13822                           ; BSR set to: 0
 13823  015D82  0012               	return		;funcret
 13824  015D84                     __end_of__write_value_to_offset:
 13825                           	opt stack 0
 13826                           tblptru	equ	0xFF8
 13827                           tblptrh	equ	0xFF7
 13828                           tblptrl	equ	0xFF6
 13829                           tablat	equ	0xFF5
 13830                           prodh	equ	0xFF4
 13831                           prodl	equ	0xFF3
 13832                           postinc0	equ	0xFEE
 13833                           wreg	equ	0xFE8
 13834                           postdec1	equ	0xFE5
 13835                           plusw1	equ	0xFE3
 13836                           fsr1h	equ	0xFE2
 13837                           fsr1l	equ	0xFE1
 13838                           indf2	equ	0xFDF
 13839                           postinc2	equ	0xFDE
 13840                           plusw2	equ	0xFDB
 13841                           fsr2h	equ	0xFDA
 13842                           fsr2l	equ	0xFD9
 13843                           status	equ	0xFD8
 13844                           
 13845 ;; *************** function __get_available_cluster *****************
 13846 ;; Defined at:
 13847 ;;		line 131 in file "fat16.c"
 13848 ;; Parameters:    Size  Location     Type
 13849 ;;  first_sector    2   43[BANK0 ] unsigned int 
 13850 ;;  skip_sector     2   45[BANK0 ] unsigned int 
 13851 ;; Auto vars:     Size  Location     Type
 13852 ;;  sector          2   51[BANK0 ] unsigned int 
 13853 ;;  offset          2   49[BANK0 ] unsigned int 
 13854 ;;  cluster         2   47[BANK0 ] unsigned int 
 13855 ;; Return value:  Size  Location     Type
 13856 ;;                  2   43[BANK0 ] unsigned int 
 13857 ;; Registers used:
 13858 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13859 ;; Tracked objects:
 13860 ;;		On entry : 0/0
 13861 ;;		On exit  : 0/0
 13862 ;;		Unchanged: 0/0
 13863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13864 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13865 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13867 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13868 ;;Total ram usage:       10 bytes
 13869 ;; Hardware stack levels used:    1
 13870 ;; Hardware stack levels required when called:   15
 13871 ;; This function calls:
 13872 ;;		__cluster_from_sector_and_offset
 13873 ;;		__get_available_offset_from_buffer
 13874 ;;		_flash_sector_read
 13875 ;; This function is called by:
 13876 ;;		__make_cluster_chain
 13877 ;; This function uses a non-reentrant model
 13878 ;;
 13879                           
 13880                           	psect	text40
 13881  012E08                     __ptext40:
 13882                           	opt stack 0
 13883  012E08                     __get_available_cluster:
 13884                           	opt stack 11
 13885                           
 13886                           ;fat16.c: 133: uint16_t cluster;;fat16.c: 134: uint16_t sector;;fat16.c: 135: uint16_t o
      +                          ffset;;fat16.c: 138: for (sector=first_sector; sector<=33; ++sector)
 13887                           
 13888                           ; BSR set to: 0
 13889                           ;incstack = 0
 13890  012E08  C08B  F093         	movff	__get_available_cluster@first_sector,__get_available_cluster@sector
 13891  012E0C  C08C  F094         	movff	__get_available_cluster@first_sector+1,__get_available_cluster@sector+1
 13892  012E10  0100               	movlb	0	; () banked
 13893  012E12  5194               	movf	(__get_available_cluster@sector+1)& (0+255),w,b
 13894  012E14  E15B               	bnz	l14385
 13895  012E16  0E22               	movlw	34
 13896  012E18  5D93               	subwf	__get_available_cluster@sector& (0+255),w,b
 13897  012E1A  B0D8               	btfsc	status,0,c
 13898  012E1C  D057               	goto	u12790
 13899                           
 13900                           ; BSR set to: 0
 13901                           ;fat16.c: 139: {;fat16.c: 141: if(sector == skip_sector)
 13902                           
 13903                           ; BSR set to: 0
 13904                           
 13905                           ; BSR set to: 0
 13906  012E1E  518D               	movf	__get_available_cluster@skip_sector& (0+255),w,b
 13907  012E20  1993               	xorwf	__get_available_cluster@sector& (0+255),w,b
 13908  012E22  E104               	bnz	l14361
 13909  012E24  518E               	movf	(__get_available_cluster@skip_sector+1)& (0+255),w,b
 13910  012E26  1994               	xorwf	(__get_available_cluster@sector+1)& (0+255),w,b
 13911  012E28  B4D8               	btfsc	status,2,c
 13912  012E2A  D04D               	goto	l1795
 13913  012E2C                     l14361:
 13914                           
 13915                           ; BSR set to: 0
 13916                           ;fat16.c: 144: };fat16.c: 147: flash_sector_read(sector, buffer);
 13917  012E2C  C093  F087         	movff	__get_available_cluster@sector,flash_sector_read@page
 13918  012E30  C094  F088         	movff	__get_available_cluster@sector+1,flash_sector_read@page+1
 13919  012E34  0E00               	movlw	low _buffer
 13920  012E36  6F89               	movwf	flash_sector_read@data& (0+255),b
 13921  012E38  0E0A               	movlw	high _buffer
 13922  012E3A  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 13923  012E3C  EC92  F0B0         	call	_flash_sector_read	;wreg free
 13924                           
 13925                           ;fat16.c: 150: if(sector == 2)
 13926  012E40  0E02               	movlw	2
 13927  012E42  0100               	movlb	0	; () banked
 13928  012E44  1993               	xorwf	__get_available_cluster@sector& (0+255),w,b
 13929  012E46  1194               	iorwf	(__get_available_cluster@sector+1)& (0+255),w,b
 13930  012E48  A4D8               	btfss	status,2,c
 13931  012E4A  D00B               	goto	l1790
 13932                           
 13933                           ; BSR set to: 0
 13934                           ;fat16.c: 151: {;fat16.c: 153: offset = _get_available_offset_from_buffer(4, buffer);
 13935  012E4C  0E00               	movlw	0
 13936  012E4E  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 13937  012E50  0E04               	movlw	4
 13938  012E52  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 13939  012E54  0E00               	movlw	low _buffer
 13940  012E56  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 13941  012E58  0E0A               	movlw	high _buffer
 13942  012E5A  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 13943  012E5C  ECC3  F0A7         	call	__get_available_offset_from_buffer	;wreg free
 13944  012E60  D00B               	goto	L1
 13945  012E62                     l1790:
 13946                           
 13947                           ;fat16.c: 155: else;fat16.c: 156: {;fat16.c: 157: offset = _get_available_offset_from_bu
      +                          ffer(0, buffer);
 13948  012E62  0E00               	movlw	0
 13949  012E64  0100               	movlb	0	; () banked
 13950  012E66  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 13951  012E68  0E00               	movlw	0
 13952  012E6A  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 13953  012E6C  0E00               	movlw	low _buffer
 13954  012E6E  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 13955  012E70  0E0A               	movlw	high _buffer
 13956  012E72  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 13957  012E74  ECC3  F0A7         	call	__get_available_offset_from_buffer	;wreg free
 13958  012E78                     L1:
 13959  012E78  C060  F091         	movff	?__get_available_offset_from_buffer,__get_available_cluster@offset
 13960  012E7C  C061  F092         	movff	?__get_available_offset_from_buffer+1,__get_available_cluster@offset+1
 13961                           
 13962                           ;fat16.c: 158: };fat16.c: 161: if(offset != 0xFFFF)
 13963  012E80  0100               	movlb	0	; () banked
 13964  012E82  2991               	incf	__get_available_cluster@offset& (0+255),w,b
 13965  012E84  E103               	bnz	u12770
 13966  012E86  2992               	incf	(__get_available_cluster@offset+1)& (0+255),w,b
 13967  012E88  B4D8               	btfsc	status,2,c
 13968  012E8A  D01D               	goto	l1795
 13969  012E8C                     u12770:
 13970                           
 13971                           ; BSR set to: 0
 13972                           ;fat16.c: 162: {;fat16.c: 164: cluster = _cluster_from_sector_and_offset(sector, offset)
      +                          ;
 13973  012E8C  C093  F060         	movff	__get_available_cluster@sector,__cluster_from_sector_and_offset@sector
 13974  012E90  C094  F061         	movff	__get_available_cluster@sector+1,__cluster_from_sector_and_offset@sector+1
 13975  012E94  C091  F062         	movff	__get_available_cluster@offset,__cluster_from_sector_and_offset@offset
 13976  012E98  C092  F063         	movff	__get_available_cluster@offset+1,__cluster_from_sector_and_offset@offset+1
 13977  012E9C  EC6A  F0B0         	call	__cluster_from_sector_and_offset	;wreg free
 13978  012EA0  C060  F08F         	movff	?__cluster_from_sector_and_offset,__get_available_cluster@cluster
 13979  012EA4  C061  F090         	movff	?__cluster_from_sector_and_offset+1,__get_available_cluster@cluster+1
 13980                           
 13981                           ;fat16.c: 166: if(cluster > 8191)
 13982  012EA8  0E20               	movlw	32
 13983  012EAA  0100               	movlb	0	; () banked
 13984  012EAC  5D90               	subwf	(__get_available_cluster@cluster+1)& (0+255),w,b
 13985  012EAE  A0D8               	btfss	status,0,c
 13986  012EB0  D005               	goto	l1793
 13987                           
 13988                           ; BSR set to: 0
 13989                           ;fat16.c: 167: {;fat16.c: 169: return 0x0000;
 13990  012EB2  0E00               	movlw	0
 13991  012EB4  6F8C               	movwf	(?__get_available_cluster+1)& (0+255),b
 13992  012EB6  0E00               	movlw	0
 13993  012EB8  6F8B               	movwf	?__get_available_cluster& (0+255),b
 13994                           
 13995                           ; BSR set to: 0
 13996  012EBA  0012               	return	
 13997  012EBC                     l1793:
 13998                           
 13999                           ; BSR set to: 0
 14000                           ;fat16.c: 171: else;fat16.c: 172: {;fat16.c: 174: return cluster;
 14001  012EBC  C08F  F08B         	movff	__get_available_cluster@cluster,?__get_available_cluster
 14002  012EC0  C090  F08C         	movff	__get_available_cluster@cluster+1,?__get_available_cluster+1
 14003  012EC4  0012               	return	
 14004  012EC6                     l1795:
 14005                           
 14006                           ; BSR set to: 0
 14007                           
 14008                           ; BSR set to: 0
 14009                           
 14010                           ; BSR set to: 0
 14011                           
 14012                           ; BSR set to: 0
 14013  012EC6  4B93               	infsnz	__get_available_cluster@sector& (0+255),f,b
 14014  012EC8  2B94               	incf	(__get_available_cluster@sector+1)& (0+255),f,b
 14015  012ECA  D7A3               	goto	L2
 14016  012ECC                     u12790:
 14017  012ECC                     l14385:
 14018                           
 14019                           ; BSR set to: 0
 14020                           ;fat16.c: 175: };fat16.c: 176: };fat16.c: 177: };fat16.c: 180: return 0x0000;
 14021  012ECC  0E00               	movlw	0
 14022  012ECE  6F8C               	movwf	(?__get_available_cluster+1)& (0+255),b
 14023  012ED0  0E00               	movlw	0
 14024  012ED2  6F8B               	movwf	?__get_available_cluster& (0+255),b
 14025  012ED4  0012               	return	
 14026  012ED6                     __end_of__get_available_cluster:
 14027                           	opt stack 0
 14028                           tblptru	equ	0xFF8
 14029                           tblptrh	equ	0xFF7
 14030                           tblptrl	equ	0xFF6
 14031                           tablat	equ	0xFF5
 14032                           prodh	equ	0xFF4
 14033                           prodl	equ	0xFF3
 14034                           postinc0	equ	0xFEE
 14035                           wreg	equ	0xFE8
 14036                           postdec1	equ	0xFE5
 14037                           plusw1	equ	0xFE3
 14038                           fsr1h	equ	0xFE2
 14039                           fsr1l	equ	0xFE1
 14040                           indf2	equ	0xFDF
 14041                           postinc2	equ	0xFDE
 14042                           plusw2	equ	0xFDB
 14043                           fsr2h	equ	0xFDA
 14044                           fsr2l	equ	0xFD9
 14045                           status	equ	0xFD8
 14046                           
 14047 ;; *************** function __get_available_offset_from_buffer *****************
 14048 ;; Defined at:
 14049 ;;		line 99 in file "fat16.c"
 14050 ;; Parameters:    Size  Location     Type
 14051 ;;  minimum_offs    2    0[BANK0 ] unsigned int 
 14052 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 14053 ;;		 -> buffer(512), 
 14054 ;; Auto vars:     Size  Location     Type
 14055 ;;  offset          2    6[BANK0 ] unsigned int 
 14056 ;; Return value:  Size  Location     Type
 14057 ;;                  2    0[BANK0 ] unsigned int 
 14058 ;; Registers used:
 14059 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14060 ;; Tracked objects:
 14061 ;;		On entry : 0/0
 14062 ;;		On exit  : 0/0
 14063 ;;		Unchanged: 0/0
 14064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14065 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14066 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14067 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14068 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14069 ;;Total ram usage:        8 bytes
 14070 ;; Hardware stack levels used:    1
 14071 ;; Hardware stack levels required when called:   10
 14072 ;; This function calls:
 14073 ;;		Nothing
 14074 ;; This function is called by:
 14075 ;;		__get_available_cluster
 14076 ;;		__make_cluster_chain
 14077 ;; This function uses a non-reentrant model
 14078 ;;
 14079                           
 14080                           	psect	text41
 14081  014F86                     __ptext41:
 14082                           	opt stack 0
 14083  014F86                     __get_available_offset_from_buffer:
 14084                           	opt stack 16
 14085                           
 14086                           ;fat16.c: 101: uint16_t offset;;fat16.c: 103: for(offset = minimum_offset; offset<512; o
      +                          ffset += 2)
 14087                           
 14088                           ; BSR set to: 0
 14089                           ;incstack = 0
 14090  014F86  C060  F066         	movff	__get_available_offset_from_buffer@minimum_offset,__get_available_offset_from_buf
      +                          fer@offset
 14091  014F8A  C061  F067         	movff	__get_available_offset_from_buffer@minimum_offset+1,__get_available_offset_from_b
      +                          uffer@offset+1
 14092  014F8E  0E02               	movlw	2
 14093  014F90  0100               	movlb	0	; () banked
 14094  014F92  D022               	goto	L3
 14095  014F94                     
 14096                           ; BSR set to: 0
 14097                           ;fat16.c: 104: {;fat16.c: 105: if((buffer[offset] == 0x00) && (buffer[offset + 1] == 0x0
      +                          0))
 14098                           
 14099                           ; BSR set to: 0
 14100  014F94  5166               	movf	__get_available_offset_from_buffer@offset& (0+255),w,b
 14101  014F96  2562               	addwf	__get_available_offset_from_buffer@buffer& (0+255),w,b
 14102  014F98  6ED9               	movwf	fsr2l,c
 14103  014F9A  5167               	movf	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 14104  014F9C  2163               	addwfc	(__get_available_offset_from_buffer@buffer+1)& (0+255),w,b
 14105  014F9E  6EDA               	movwf	fsr2h,c
 14106  014FA0  50DF               	movf	indf2,w,c
 14107  014FA2  A4D8               	btfss	status,2,c
 14108  014FA4  D014               	goto	l1776
 14109                           
 14110                           ; BSR set to: 0
 14111  014FA6  0E01               	movlw	1
 14112  014FA8  2566               	addwf	__get_available_offset_from_buffer@offset& (0+255),w,b
 14113  014FAA  6F64               	movwf	??__get_available_offset_from_buffer& (0+255),b
 14114  014FAC  0E00               	movlw	0
 14115  014FAE  2167               	addwfc	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 14116  014FB0  6F65               	movwf	(??__get_available_offset_from_buffer+1)& (0+255),b
 14117  014FB2  5164               	movf	??__get_available_offset_from_buffer& (0+255),w,b
 14118  014FB4  2562               	addwf	__get_available_offset_from_buffer@buffer& (0+255),w,b
 14119  014FB6  6ED9               	movwf	fsr2l,c
 14120  014FB8  5165               	movf	(??__get_available_offset_from_buffer+1)& (0+255),w,b
 14121  014FBA  2163               	addwfc	(__get_available_offset_from_buffer@buffer+1)& (0+255),w,b
 14122  014FBC  6EDA               	movwf	fsr2h,c
 14123  014FBE  50DF               	movf	indf2,w,c
 14124  014FC0  A4D8               	btfss	status,2,c
 14125  014FC2  D005               	goto	l1776
 14126                           
 14127                           ; BSR set to: 0
 14128                           ;fat16.c: 106: {;fat16.c: 107: return offset;
 14129  014FC4  C066  F060         	movff	__get_available_offset_from_buffer@offset,?__get_available_offset_from_buffer
 14130  014FC8  C067  F061         	movff	__get_available_offset_from_buffer@offset+1,?__get_available_offset_from_buffer+1
 14131  014FCC  0012               	return	
 14132  014FCE                     l1776:
 14133                           
 14134                           ; BSR set to: 0
 14135                           
 14136                           ; BSR set to: 0
 14137  014FCE  0E02               	movlw	2
 14138  014FD0  2766               	addwf	__get_available_offset_from_buffer@offset& (0+255),f,b
 14139  014FD2  0E00               	movlw	0
 14140  014FD4  2367               	addwfc	(__get_available_offset_from_buffer@offset+1)& (0+255),f,b
 14141  014FD6  0E02               	movlw	2
 14142  014FD8                     L3:
 14143  014FD8  5D67               	subwf	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 14144  014FDA  A0D8               	btfss	status,0,c
 14145  014FDC  D7DB               	goto	l1774
 14146                           
 14147                           ; BSR set to: 0
 14148                           ;fat16.c: 108: };fat16.c: 109: };fat16.c: 112: return 0xFFFF;
 14149  014FDE  6960               	setf	?__get_available_offset_from_buffer& (0+255),b
 14150  014FE0  6961               	setf	(?__get_available_offset_from_buffer+1)& (0+255),b
 14151                           
 14152                           ; BSR set to: 0
 14153  014FE2  0012               	return		;funcret
 14154  014FE4                     __end_of__get_available_offset_from_buffer:
 14155                           	opt stack 0
 14156                           tblptru	equ	0xFF8
 14157                           tblptrh	equ	0xFF7
 14158                           tblptrl	equ	0xFF6
 14159                           tablat	equ	0xFF5
 14160                           prodh	equ	0xFF4
 14161                           prodl	equ	0xFF3
 14162                           postinc0	equ	0xFEE
 14163                           wreg	equ	0xFE8
 14164                           postdec1	equ	0xFE5
 14165                           plusw1	equ	0xFE3
 14166                           fsr1h	equ	0xFE2
 14167                           fsr1l	equ	0xFE1
 14168                           indf2	equ	0xFDF
 14169                           postinc2	equ	0xFDE
 14170                           plusw2	equ	0xFDB
 14171                           fsr2h	equ	0xFDA
 14172                           fsr2l	equ	0xFD9
 14173                           status	equ	0xFD8
 14174                           
 14175 ;; *************** function __cluster_from_sector_and_offset *****************
 14176 ;; Defined at:
 14177 ;;		line 90 in file "fat16.c"
 14178 ;; Parameters:    Size  Location     Type
 14179 ;;  sector          2    0[BANK0 ] unsigned int 
 14180 ;;  offset          2    2[BANK0 ] unsigned int 
 14181 ;; Auto vars:     Size  Location     Type
 14182 ;;		None
 14183 ;; Return value:  Size  Location     Type
 14184 ;;                  2    0[BANK0 ] unsigned int 
 14185 ;; Registers used:
 14186 ;;		wreg, status,2, status,0
 14187 ;; Tracked objects:
 14188 ;;		On entry : 0/0
 14189 ;;		On exit  : 0/0
 14190 ;;		Unchanged: 0/0
 14191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14192 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14195 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14196 ;;Total ram usage:        4 bytes
 14197 ;; Hardware stack levels used:    1
 14198 ;; Hardware stack levels required when called:   10
 14199 ;; This function calls:
 14200 ;;		Nothing
 14201 ;; This function is called by:
 14202 ;;		__get_available_cluster
 14203 ;; This function uses a non-reentrant model
 14204 ;;
 14205                           
 14206                           	psect	text42
 14207  0160D4                     __ptext42:
 14208                           	opt stack 0
 14209  0160D4                     __cluster_from_sector_and_offset:
 14210                           	opt stack 15
 14211                           
 14212                           ;fat16.c: 92: offset >>= 1;
 14213                           
 14214                           ; BSR set to: 0
 14215                           ;incstack = 0
 14216  0160D4  0100               	movlb	0	; () banked
 14217  0160D6  90D8               	bcf	status,0,c
 14218  0160D8  3363               	rrcf	(__cluster_from_sector_and_offset@offset+1)& (0+255),f,b
 14219  0160DA  3362               	rrcf	__cluster_from_sector_and_offset@offset& (0+255),f,b
 14220                           
 14221                           ; BSR set to: 0
 14222                           ;fat16.c: 93: sector -= 2;
 14223  0160DC  0E02               	movlw	2
 14224  0160DE  5F60               	subwf	__cluster_from_sector_and_offset@sector& (0+255),f,b
 14225  0160E0  0E00               	movlw	0
 14226  0160E2  5B61               	subwfb	(__cluster_from_sector_and_offset@sector+1)& (0+255),f,b
 14227                           
 14228                           ; BSR set to: 0
 14229                           ;fat16.c: 94: sector <<= 8;
 14230  0160E4  5160               	movf	__cluster_from_sector_and_offset@sector& (0+255),w,b
 14231  0160E6  6F61               	movwf	(__cluster_from_sector_and_offset@sector+1)& (0+255),b
 14232  0160E8  6B60               	clrf	__cluster_from_sector_and_offset@sector& (0+255),b
 14233                           
 14234                           ; BSR set to: 0
 14235                           ;fat16.c: 95: sector |= offset;
 14236  0160EA  5162               	movf	__cluster_from_sector_and_offset@offset& (0+255),w,b
 14237  0160EC  1360               	iorwf	__cluster_from_sector_and_offset@sector& (0+255),f,b
 14238  0160EE  5163               	movf	(__cluster_from_sector_and_offset@offset+1)& (0+255),w,b
 14239  0160F0  1361               	iorwf	(__cluster_from_sector_and_offset@sector+1)& (0+255),f,b
 14240                           
 14241                           ; BSR set to: 0
 14242                           ;fat16.c: 96: return sector;
 14243  0160F2  C060  F060         	movff	__cluster_from_sector_and_offset@sector,?__cluster_from_sector_and_offset
 14244  0160F6  C061  F061         	movff	__cluster_from_sector_and_offset@sector+1,?__cluster_from_sector_and_offset+1
 14245  0160FA  0012               	return	
 14246  0160FC                     __end_of__cluster_from_sector_and_offset:
 14247                           	opt stack 0
 14248                           tblptru	equ	0xFF8
 14249                           tblptrh	equ	0xFF7
 14250                           tblptrl	equ	0xFF6
 14251                           tablat	equ	0xFF5
 14252                           prodh	equ	0xFF4
 14253                           prodl	equ	0xFF3
 14254                           postinc0	equ	0xFEE
 14255                           wreg	equ	0xFE8
 14256                           postdec1	equ	0xFE5
 14257                           plusw1	equ	0xFE3
 14258                           fsr1h	equ	0xFE2
 14259                           fsr1l	equ	0xFE1
 14260                           indf2	equ	0xFDF
 14261                           postinc2	equ	0xFDE
 14262                           plusw2	equ	0xFDB
 14263                           fsr2h	equ	0xFDA
 14264                           fsr2l	equ	0xFD9
 14265                           status	equ	0xFD8
 14266                           
 14267 ;; *************** function __get_time *****************
 14268 ;; Defined at:
 14269 ;;		line 377 in file "fat16.c"
 14270 ;; Parameters:    Size  Location     Type
 14271 ;;		None
 14272 ;; Auto vars:     Size  Location     Type
 14273 ;;		None
 14274 ;; Return value:  Size  Location     Type
 14275 ;;                  2    0[BANK0 ] unsigned int 
 14276 ;; Registers used:
 14277 ;;		wreg, status,2
 14278 ;; Tracked objects:
 14279 ;;		On entry : 0/0
 14280 ;;		On exit  : 0/0
 14281 ;;		Unchanged: 0/0
 14282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14283 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14286 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14287 ;;Total ram usage:        2 bytes
 14288 ;; Hardware stack levels used:    1
 14289 ;; Hardware stack levels required when called:   10
 14290 ;; This function calls:
 14291 ;;		Nothing
 14292 ;; This function is called by:
 14293 ;;		_fat_create_file
 14294 ;; This function uses a non-reentrant model
 14295 ;;
 14296                           
 14297                           	psect	text43
 14298  016412                     __ptext43:
 14299                           	opt stack 0
 14300  016412                     __get_time:
 14301                           	opt stack 17
 14302                           
 14303                           ;fat16.c: 389: return 0x0000;
 14304                           
 14305                           ; BSR set to: 0
 14306                           ;incstack = 0
 14307  016412  0E00               	movlw	0
 14308  016414  0100               	movlb	0	; () banked
 14309  016416  6F61               	movwf	(?__get_time+1)& (0+255),b
 14310  016418  0E00               	movlw	0
 14311  01641A  6F60               	movwf	?__get_time& (0+255),b
 14312  01641C  0012               	return	
 14313  01641E                     __end_of__get_time:
 14314                           	opt stack 0
 14315                           tblptru	equ	0xFF8
 14316                           tblptrh	equ	0xFF7
 14317                           tblptrl	equ	0xFF6
 14318                           tablat	equ	0xFF5
 14319                           prodh	equ	0xFF4
 14320                           prodl	equ	0xFF3
 14321                           postinc0	equ	0xFEE
 14322                           wreg	equ	0xFE8
 14323                           postdec1	equ	0xFE5
 14324                           plusw1	equ	0xFE3
 14325                           fsr1h	equ	0xFE2
 14326                           fsr1l	equ	0xFE1
 14327                           indf2	equ	0xFDF
 14328                           postinc2	equ	0xFDE
 14329                           plusw2	equ	0xFDB
 14330                           fsr2h	equ	0xFDA
 14331                           fsr2l	equ	0xFD9
 14332                           status	equ	0xFD8
 14333                           
 14334 ;; *************** function __get_date *****************
 14335 ;; Defined at:
 14336 ;;		line 393 in file "fat16.c"
 14337 ;; Parameters:    Size  Location     Type
 14338 ;;		None
 14339 ;; Auto vars:     Size  Location     Type
 14340 ;;		None
 14341 ;; Return value:  Size  Location     Type
 14342 ;;                  2    0[BANK0 ] unsigned int 
 14343 ;; Registers used:
 14344 ;;		wreg, status,2
 14345 ;; Tracked objects:
 14346 ;;		On entry : 0/0
 14347 ;;		On exit  : 0/0
 14348 ;;		Unchanged: 0/0
 14349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14350 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14353 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14354 ;;Total ram usage:        2 bytes
 14355 ;; Hardware stack levels used:    1
 14356 ;; Hardware stack levels required when called:   10
 14357 ;; This function calls:
 14358 ;;		Nothing
 14359 ;; This function is called by:
 14360 ;;		_fat_create_file
 14361 ;; This function uses a non-reentrant model
 14362 ;;
 14363                           
 14364                           	psect	text44
 14365  01641E                     __ptext44:
 14366                           	opt stack 0
 14367  01641E                     __get_date:
 14368                           	opt stack 17
 14369                           
 14370                           ;fat16.c: 405: return 0x0000;
 14371                           
 14372                           ; BSR set to: 0
 14373                           ;incstack = 0
 14374  01641E  0E00               	movlw	0
 14375  016420  0100               	movlb	0	; () banked
 14376  016422  6F61               	movwf	(?__get_date+1)& (0+255),b
 14377  016424  0E00               	movlw	0
 14378  016426  6F60               	movwf	?__get_date& (0+255),b
 14379  016428  0012               	return	
 14380  01642A                     __end_of__get_date:
 14381                           	opt stack 0
 14382                           tblptru	equ	0xFF8
 14383                           tblptrh	equ	0xFF7
 14384                           tblptrl	equ	0xFF6
 14385                           tablat	equ	0xFF5
 14386                           prodh	equ	0xFF4
 14387                           prodl	equ	0xFF3
 14388                           postinc0	equ	0xFEE
 14389                           wreg	equ	0xFE8
 14390                           postdec1	equ	0xFE5
 14391                           plusw1	equ	0xFE3
 14392                           fsr1h	equ	0xFE2
 14393                           fsr1l	equ	0xFE1
 14394                           indf2	equ	0xFDF
 14395                           postinc2	equ	0xFDE
 14396                           plusw2	equ	0xFDB
 14397                           fsr2h	equ	0xFDA
 14398                           fsr2l	equ	0xFD9
 14399                           status	equ	0xFD8
 14400                           
 14401 ;; *************** function __get_available_root_entry *****************
 14402 ;; Defined at:
 14403 ;;		line 443 in file "fat16.c"
 14404 ;; Parameters:    Size  Location     Type
 14405 ;;		None
 14406 ;; Auto vars:     Size  Location     Type
 14407 ;;  file_number     1   53[BANK0 ] unsigned char 
 14408 ;; Return value:  Size  Location     Type
 14409 ;;                  1    wreg      unsigned char 
 14410 ;; Registers used:
 14411 ;;		wreg, status,2, status,0, cstack
 14412 ;; Tracked objects:
 14413 ;;		On entry : 0/0
 14414 ;;		On exit  : 0/0
 14415 ;;		Unchanged: 0/0
 14416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14418 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14420 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14421 ;;Total ram usage:        1 bytes
 14422 ;; Hardware stack levels used:    1
 14423 ;; Hardware stack levels required when called:   16
 14424 ;; This function calls:
 14425 ;;		__root_is_available
 14426 ;; This function is called by:
 14427 ;;		_fat_create_file
 14428 ;; This function uses a non-reentrant model
 14429 ;;
 14430                           
 14431                           	psect	text45
 14432  016080                     __ptext45:
 14433                           	opt stack 0
 14434  016080                     __get_available_root_entry:
 14435                           	opt stack 11
 14436                           
 14437                           ;fat16.c: 445: uint8_t file_number;;fat16.c: 447: for(file_number=0; file_number<64; ++f
      +                          ile_number)
 14438                           
 14439                           ; BSR set to: 0
 14440                           ;incstack = 0
 14441  016080  0E00               	movlw	0
 14442  016082  0100               	movlb	0	; () banked
 14443  016084  6F95               	movwf	__get_available_root_entry@file_number& (0+255),b
 14444  016086                     l15575:
 14445                           
 14446                           ; BSR set to: 0
 14447  016086  0E3F               	movlw	63
 14448  016088  6595               	cpfsgt	__get_available_root_entry@file_number& (0+255),b
 14449  01608A  D001               	goto	l1847
 14450  01608C  D00C               	goto	u14640
 14451  01608E                     l1847:
 14452                           
 14453                           ; BSR set to: 0
 14454                           ;fat16.c: 448: {;fat16.c: 449: if(_root_is_available(file_number))
 14455                           
 14456                           ; BSR set to: 0
 14457  01608E  5195               	movf	__get_available_root_entry@file_number& (0+255),w,b
 14458  016090  ECCC  F0A5         	call	__root_is_available
 14459  016094  0900               	iorlw	0
 14460  016096  B4D8               	btfsc	status,2,c
 14461  016098  D003               	goto	l1849
 14462                           
 14463                           ;fat16.c: 450: {;fat16.c: 451: return file_number;
 14464  01609A  0100               	movlb	0	; () banked
 14465  01609C  5195               	movf	__get_available_root_entry@file_number& (0+255),w,b
 14466                           
 14467                           ; BSR set to: 0
 14468  01609E  0012               	return	
 14469  0160A0                     l1849:
 14470                           
 14471                           ; BSR set to: 0
 14472  0160A0  0100               	movlb	0	; () banked
 14473  0160A2  2B95               	incf	__get_available_root_entry@file_number& (0+255),f,b
 14474  0160A4  D7F0               	goto	l15575
 14475  0160A6                     u14640:
 14476                           
 14477                           ; BSR set to: 0
 14478                           ;fat16.c: 452: };fat16.c: 453: };fat16.c: 454: return 0xFF;
 14479                           
 14480                           ; BSR set to: 0
 14481  0160A6  0EFF               	movlw	255
 14482  0160A8  0012               	return	
 14483  0160AA                     __end_of__get_available_root_entry:
 14484                           	opt stack 0
 14485                           tblptru	equ	0xFF8
 14486                           tblptrh	equ	0xFF7
 14487                           tblptrl	equ	0xFF6
 14488                           tablat	equ	0xFF5
 14489                           prodh	equ	0xFF4
 14490                           prodl	equ	0xFF3
 14491                           postinc0	equ	0xFEE
 14492                           wreg	equ	0xFE8
 14493                           postdec1	equ	0xFE5
 14494                           plusw1	equ	0xFE3
 14495                           fsr1h	equ	0xFE2
 14496                           fsr1l	equ	0xFE1
 14497                           indf2	equ	0xFDF
 14498                           postinc2	equ	0xFDE
 14499                           plusw2	equ	0xFDB
 14500                           fsr2h	equ	0xFDA
 14501                           fsr2l	equ	0xFD9
 14502                           status	equ	0xFD8
 14503                           
 14504 ;; *************** function __add_item *****************
 14505 ;; Defined at:
 14506 ;;		line 43 in file "config_file.c"
 14507 ;; Parameters:    Size  Location     Type
 14508 ;;  item_string     2   36[BANK0 ] PTR unsigned char 
 14509 ;;		 -> menu_structure_string(15), position_display_180_string(21), ccw_limit_string(10), use_ccw_limit_string(14), 
 14510 ;;		 -> cw_limit_string(9), use_cw_limit_string(13), beep_duration_string(14), maximum_speed_manual_string(21), 
 14511 ;;		 -> initial_speed_manual_string(21), maximum_speed_arc_string(18), initial_speed_arc_string(18), maximum_speed_strin
      +g(14), 
 14512 ;;		 -> minimum_speed_string(14), overshoot_cost_in_steps_string(24), inverse_direction_string(18), overshoot_in_steps_s
      +tring(19), 
 14513 ;;		 -> full_circle_in_steps_string(21), 
 14514 ;;  value           4   38[BANK0 ] long 
 14515 ;;  buffer          2   42[BANK0 ] PTR unsigned char 
 14516 ;;		 -> ConfigFile_buffer(512), 
 14517 ;; Auto vars:     Size  Location     Type
 14518 ;;  length          1   46[BANK0 ] unsigned char 
 14519 ;; Return value:  Size  Location     Type
 14520 ;;                  1    wreg      unsigned char 
 14521 ;; Registers used:
 14522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14523 ;; Tracked objects:
 14524 ;;		On entry : 0/0
 14525 ;;		On exit  : 0/0
 14526 ;;		Unchanged: 0/0
 14527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14528 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14529 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14530 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14531 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14532 ;;Total ram usage:       11 bytes
 14533 ;; Hardware stack levels used:    1
 14534 ;; Hardware stack levels required when called:   13
 14535 ;; This function calls:
 14536 ;;		_ltoa
 14537 ;; This function is called by:
 14538 ;;		_configFile_write
 14539 ;; This function uses a non-reentrant model
 14540 ;;
 14541                           
 14542                           	psect	text46
 14543  011D32                     __ptext46:
 14544                           	opt stack 0
 14545  011D32                     __add_item:
 14546                           	opt stack 15
 14547                           
 14548                           ;config_file.c: 45: uint8_t length = 0;
 14549                           
 14550                           ; BSR set to: 0
 14551                           ;incstack = 0
 14552  011D32  0E00               	movlw	0
 14553  011D34  0100               	movlb	0	; () banked
 14554  011D36  6F8E               	movwf	__add_item@length& (0+255),b
 14555                           
 14556                           ;config_file.c: 48: while(item_string[length])
 14557  011D38  D01C               	goto	l3106
 14558  011D3A                     
 14559                           ; BSR set to: 0
 14560                           ;config_file.c: 49: {;config_file.c: 50: buffer[length] = item_string[length];
 14561                           
 14562                           ; BSR set to: 0
 14563  011D3A  518E               	movf	__add_item@length& (0+255),w,b
 14564  011D3C  0D01               	mullw	1
 14565  011D3E  C084  F08C         	movff	__add_item@item_string,??__add_item
 14566  011D42  C085  F08D         	movff	__add_item@item_string+1,??__add_item+1
 14567  011D46  50F3               	movf	prodl,w,c
 14568  011D48  278C               	addwf	??__add_item& (0+255),f,b
 14569  011D4A  50F4               	movf	prodh,w,c
 14570  011D4C  238D               	addwfc	(??__add_item+1)& (0+255),f,b
 14571  011D4E  C08C  FFF6         	movff	??__add_item,tblptrl
 14572  011D52  C08D  FFF7         	movff	??__add_item+1,tblptrh
 14573  011D56                     	if	0	;tblptru may be non-zero
 14574  011D56                     	endif
 14575  011D56                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14576  011D56  0E00               	movlw	low (__mediumconst shr (0+16))
 14577  011D58  6EF8               	movwf	tblptru,c
 14578  011D5A                     	endif
 14579  011D5A  518E               	movf	__add_item@length& (0+255),w,b
 14580  011D5C  0D01               	mullw	1
 14581  011D5E  50F3               	movf	prodl,w,c
 14582  011D60  258A               	addwf	__add_item@buffer& (0+255),w,b
 14583  011D62  6ED9               	movwf	fsr2l,c
 14584  011D64  50F4               	movf	prodh,w,c
 14585  011D66  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14586  011D68  6EDA               	movwf	fsr2h,c
 14587  011D6A  0008               	tblrd		*
 14588  011D6C  CFF5 FFDF          	movff	tablat,indf2
 14589                           
 14590                           ; BSR set to: 0
 14591                           ;config_file.c: 51: ++length;
 14592  011D70  2B8E               	incf	__add_item@length& (0+255),f,b
 14593  011D72                     l3106:
 14594                           
 14595                           ; BSR set to: 0
 14596                           
 14597                           ; BSR set to: 0
 14598  011D72  518E               	movf	__add_item@length& (0+255),w,b
 14599  011D74  0D01               	mullw	1
 14600  011D76  C084  F08C         	movff	__add_item@item_string,??__add_item
 14601  011D7A  C085  F08D         	movff	__add_item@item_string+1,??__add_item+1
 14602  011D7E  50F3               	movf	prodl,w,c
 14603  011D80  278C               	addwf	??__add_item& (0+255),f,b
 14604  011D82  50F4               	movf	prodh,w,c
 14605  011D84  238D               	addwfc	(??__add_item+1)& (0+255),f,b
 14606  011D86  C08C  FFF6         	movff	??__add_item,tblptrl
 14607  011D8A  C08D  FFF7         	movff	??__add_item+1,tblptrh
 14608  011D8E                     	if	0	;tblptru may be non-zero
 14609  011D8E                     	endif
 14610  011D8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14611  011D8E  0E00               	movlw	low (__mediumconst shr (0+16))
 14612  011D90  6EF8               	movwf	tblptru,c
 14613  011D92                     	endif
 14614  011D92  0008               	tblrd		*
 14615  011D94  50F5               	movf	tablat,w,c
 14616  011D96  0900               	iorlw	0
 14617  011D98  A4D8               	btfss	status,2,c
 14618  011D9A  D7CF               	goto	l3107
 14619                           
 14620                           ; BSR set to: 0
 14621                           ;config_file.c: 52: };config_file.c: 55: buffer[length++] = '=';
 14622                           
 14623                           ; BSR set to: 0
 14624  011D9C  518E               	movf	__add_item@length& (0+255),w,b
 14625  011D9E  0D01               	mullw	1
 14626  011DA0  50F3               	movf	prodl,w,c
 14627  011DA2  258A               	addwf	__add_item@buffer& (0+255),w,b
 14628  011DA4  6ED9               	movwf	fsr2l,c
 14629  011DA6  50F4               	movf	prodh,w,c
 14630  011DA8  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14631  011DAA  6EDA               	movwf	fsr2h,c
 14632  011DAC  0E3D               	movlw	61
 14633  011DAE  6EDF               	movwf	indf2,c
 14634                           
 14635                           ; BSR set to: 0
 14636  011DB0  2B8E               	incf	__add_item@length& (0+255),f,b
 14637                           
 14638                           ; BSR set to: 0
 14639                           ;config_file.c: 58: ltoa(&buffer[length], value, 10);
 14640  011DB2  518E               	movf	__add_item@length& (0+255),w,b
 14641  011DB4  0D01               	mullw	1
 14642  011DB6  50F3               	movf	prodl,w,c
 14643  011DB8  258A               	addwf	__add_item@buffer& (0+255),w,b
 14644  011DBA  6F7A               	movwf	ltoa@buf& (0+255),b
 14645  011DBC  50F4               	movf	prodh,w,c
 14646  011DBE  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14647  011DC0  6F7B               	movwf	(ltoa@buf+1)& (0+255),b
 14648  011DC2  C086  F07C         	movff	__add_item@value,ltoa@val
 14649  011DC6  C087  F07D         	movff	__add_item@value+1,ltoa@val+1
 14650  011DCA  C088  F07E         	movff	__add_item@value+2,ltoa@val+2
 14651  011DCE  C089  F07F         	movff	__add_item@value+3,ltoa@val+3
 14652  011DD2  0E00               	movlw	0
 14653  011DD4  6F81               	movwf	(ltoa@base+1)& (0+255),b
 14654  011DD6  0E0A               	movlw	10
 14655  011DD8  6F80               	movwf	ltoa@base& (0+255),b
 14656  011DDA  EC5D  F0AA         	call	_ltoa	;wreg free
 14657                           
 14658                           ;config_file.c: 59: while(buffer[length])
 14659  011DDE  D002               	goto	l3109
 14660  011DE0                     
 14661                           ;config_file.c: 60: {;config_file.c: 61: ++length;
 14662  011DE0  0100               	movlb	0	; () banked
 14663  011DE2  2B8E               	incf	__add_item@length& (0+255),f,b
 14664  011DE4                     l3109:
 14665                           
 14666                           ; BSR set to: 0
 14667  011DE4  0100               	movlb	0	; () banked
 14668  011DE6  518E               	movf	__add_item@length& (0+255),w,b
 14669  011DE8  0D01               	mullw	1
 14670  011DEA  50F3               	movf	prodl,w,c
 14671  011DEC  258A               	addwf	__add_item@buffer& (0+255),w,b
 14672  011DEE  6ED9               	movwf	fsr2l,c
 14673  011DF0  50F4               	movf	prodh,w,c
 14674  011DF2  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14675  011DF4  6EDA               	movwf	fsr2h,c
 14676  011DF6  50DF               	movf	indf2,w,c
 14677  011DF8  A4D8               	btfss	status,2,c
 14678  011DFA  D7F2               	goto	l3110
 14679                           
 14680                           ; BSR set to: 0
 14681                           ;config_file.c: 62: };config_file.c: 65: buffer[length++] = '\r';
 14682                           
 14683                           ; BSR set to: 0
 14684  011DFC  518E               	movf	__add_item@length& (0+255),w,b
 14685  011DFE  0D01               	mullw	1
 14686  011E00  50F3               	movf	prodl,w,c
 14687  011E02  258A               	addwf	__add_item@buffer& (0+255),w,b
 14688  011E04  6ED9               	movwf	fsr2l,c
 14689  011E06  50F4               	movf	prodh,w,c
 14690  011E08  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14691  011E0A  6EDA               	movwf	fsr2h,c
 14692  011E0C  0E0D               	movlw	13
 14693  011E0E  6EDF               	movwf	indf2,c
 14694                           
 14695                           ; BSR set to: 0
 14696  011E10  2B8E               	incf	__add_item@length& (0+255),f,b
 14697                           
 14698                           ; BSR set to: 0
 14699                           ;config_file.c: 66: buffer[length++] = '\n';
 14700  011E12  518E               	movf	__add_item@length& (0+255),w,b
 14701  011E14  0D01               	mullw	1
 14702  011E16  50F3               	movf	prodl,w,c
 14703  011E18  258A               	addwf	__add_item@buffer& (0+255),w,b
 14704  011E1A  6ED9               	movwf	fsr2l,c
 14705  011E1C  50F4               	movf	prodh,w,c
 14706  011E1E  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14707  011E20  6EDA               	movwf	fsr2h,c
 14708  011E22  0E0A               	movlw	10
 14709  011E24  6EDF               	movwf	indf2,c
 14710  011E26  2B8E               	incf	__add_item@length& (0+255),f,b
 14711                           
 14712                           ; BSR set to: 0
 14713                           ;config_file.c: 69: return length;
 14714  011E28  518E               	movf	__add_item@length& (0+255),w,b
 14715  011E2A  0012               	return	
 14716  011E2C                     __end_of__add_item:
 14717                           	opt stack 0
 14718                           tblptru	equ	0xFF8
 14719                           tblptrh	equ	0xFF7
 14720                           tblptrl	equ	0xFF6
 14721                           tablat	equ	0xFF5
 14722                           prodh	equ	0xFF4
 14723                           prodl	equ	0xFF3
 14724                           postinc0	equ	0xFEE
 14725                           wreg	equ	0xFE8
 14726                           postdec1	equ	0xFE5
 14727                           plusw1	equ	0xFE3
 14728                           fsr1h	equ	0xFE2
 14729                           fsr1l	equ	0xFE1
 14730                           indf2	equ	0xFDF
 14731                           postinc2	equ	0xFDE
 14732                           plusw2	equ	0xFDB
 14733                           fsr2h	equ	0xFDA
 14734                           fsr2l	equ	0xFD9
 14735                           status	equ	0xFD8
 14736                           
 14737 ;; *************** function _ltoa *****************
 14738 ;; Defined at:
 14739 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\ltoa.c"
 14740 ;; Parameters:    Size  Location     Type
 14741 ;;  buf             2   26[BANK0 ] PTR unsigned char 
 14742 ;;		 -> ConfigFile_buffer(512), 
 14743 ;;  val             4   28[BANK0 ] long 
 14744 ;;  base            2   32[BANK0 ] int 
 14745 ;; Auto vars:     Size  Location     Type
 14746 ;;  cp              2   34[BANK0 ] PTR unsigned char 
 14747 ;;		 -> ConfigFile_buffer(512), 
 14748 ;; Return value:  Size  Location     Type
 14749 ;;                  2   26[BANK0 ] PTR unsigned char 
 14750 ;; Registers used:
 14751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14752 ;; Tracked objects:
 14753 ;;		On entry : 0/0
 14754 ;;		On exit  : 0/0
 14755 ;;		Unchanged: 0/0
 14756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14757 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14758 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14760 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14761 ;;Total ram usage:       10 bytes
 14762 ;; Hardware stack levels used:    1
 14763 ;; Hardware stack levels required when called:   12
 14764 ;; This function calls:
 14765 ;;		_ultoa
 14766 ;; This function is called by:
 14767 ;;		__add_item
 14768 ;; This function uses a non-reentrant model
 14769 ;;
 14770                           
 14771                           	psect	text47
 14772  0154BA                     __ptext47:
 14773                           	opt stack 0
 14774  0154BA                     _ltoa:
 14775                           	opt stack 15
 14776                           
 14777                           ; BSR set to: 0
 14778                           ;incstack = 0
 14779  0154BA  C07A  F082         	movff	ltoa@buf,ltoa@cp
 14780  0154BE  C07B  F083         	movff	ltoa@buf+1,ltoa@cp+1
 14781  0154C2  0100               	movlb	0	; () banked
 14782  0154C4  AF7F               	btfss	(ltoa@val+3)& (0+255),7,b
 14783  0154C6  D010               	goto	l3885
 14784                           
 14785                           ; BSR set to: 0
 14786  0154C8  C07A  FFD9         	movff	ltoa@buf,fsr2l
 14787  0154CC  C07B  FFDA         	movff	ltoa@buf+1,fsr2h
 14788  0154D0  0E2D               	movlw	45
 14789  0154D2  6EDF               	movwf	indf2,c
 14790                           
 14791                           ; BSR set to: 0
 14792  0154D4  4B7A               	infsnz	ltoa@buf& (0+255),f,b
 14793  0154D6  2B7B               	incf	(ltoa@buf+1)& (0+255),f,b
 14794                           
 14795                           ; BSR set to: 0
 14796  0154D8  1F7F               	comf	(ltoa@val+3)& (0+255),f,b
 14797  0154DA  1F7E               	comf	(ltoa@val+2)& (0+255),f,b
 14798  0154DC  1F7D               	comf	(ltoa@val+1)& (0+255),f,b
 14799  0154DE  6D7C               	negf	ltoa@val& (0+255),b
 14800  0154E0  0E00               	movlw	0
 14801  0154E2  237D               	addwfc	(ltoa@val+1)& (0+255),f,b
 14802  0154E4  237E               	addwfc	(ltoa@val+2)& (0+255),f,b
 14803  0154E6  237F               	addwfc	(ltoa@val+3)& (0+255),f,b
 14804  0154E8                     l3885:
 14805                           
 14806                           ; BSR set to: 0
 14807                           
 14808                           ; BSR set to: 0
 14809  0154E8  C07A  F06D         	movff	ltoa@buf,ultoa@buf
 14810  0154EC  C07B  F06E         	movff	ltoa@buf+1,ultoa@buf+1
 14811  0154F0  C07C  F06F         	movff	ltoa@val,ultoa@val
 14812  0154F4  C07D  F070         	movff	ltoa@val+1,ultoa@val+1
 14813  0154F8  C07E  F071         	movff	ltoa@val+2,ultoa@val+2
 14814  0154FC  C07F  F072         	movff	ltoa@val+3,ultoa@val+3
 14815  015500  C080  F073         	movff	ltoa@base,ultoa@base
 14816  015504  C081  F074         	movff	ltoa@base+1,ultoa@base+1
 14817  015508  EC9C  F08D         	call	_ultoa	;wreg free
 14818  01550C  0012               	return	
 14819  01550E                     __end_of_ltoa:
 14820                           	opt stack 0
 14821                           tblptru	equ	0xFF8
 14822                           tblptrh	equ	0xFF7
 14823                           tblptrl	equ	0xFF6
 14824                           tablat	equ	0xFF5
 14825                           prodh	equ	0xFF4
 14826                           prodl	equ	0xFF3
 14827                           postinc0	equ	0xFEE
 14828                           wreg	equ	0xFE8
 14829                           postdec1	equ	0xFE5
 14830                           plusw1	equ	0xFE3
 14831                           fsr1h	equ	0xFE2
 14832                           fsr1l	equ	0xFE1
 14833                           indf2	equ	0xFDF
 14834                           postinc2	equ	0xFDE
 14835                           plusw2	equ	0xFDB
 14836                           fsr2h	equ	0xFDA
 14837                           fsr2l	equ	0xFD9
 14838                           status	equ	0xFD8
 14839                           
 14840 ;; *************** function _ultoa *****************
 14841 ;; Defined at:
 14842 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\ltoa.c"
 14843 ;; Parameters:    Size  Location     Type
 14844 ;;  buf             2   13[BANK0 ] PTR unsigned char 
 14845 ;;		 -> ConfigFile_buffer(512), 
 14846 ;;  val             4   15[BANK0 ] unsigned long 
 14847 ;;  base            2   19[BANK0 ] int 
 14848 ;; Auto vars:     Size  Location     Type
 14849 ;;  v               4   21[BANK0 ] unsigned long 
 14850 ;;  c               1   25[BANK0 ] unsigned char 
 14851 ;; Return value:  Size  Location     Type
 14852 ;;                  2   13[BANK0 ] PTR unsigned char 
 14853 ;; Registers used:
 14854 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14855 ;; Tracked objects:
 14856 ;;		On entry : 0/0
 14857 ;;		On exit  : 0/0
 14858 ;;		Unchanged: 0/0
 14859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14860 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14861 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14863 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14864 ;;Total ram usage:       13 bytes
 14865 ;; Hardware stack levels used:    1
 14866 ;; Hardware stack levels required when called:   11
 14867 ;; This function calls:
 14868 ;;		___lldiv
 14869 ;;		___llmod
 14870 ;; This function is called by:
 14871 ;;		_ltoa
 14872 ;; This function uses a non-reentrant model
 14873 ;;
 14874                           
 14875                           	psect	text48
 14876  011B38                     __ptext48:
 14877                           	opt stack 0
 14878  011B38                     _ultoa:
 14879                           	opt stack 15
 14880                           
 14881                           ;incstack = 0
 14882  011B38  C06F  F075         	movff	ultoa@val,ultoa@v
 14883  011B3C  C070  F076         	movff	ultoa@val+1,ultoa@v+1
 14884  011B40  C071  F077         	movff	ultoa@val+2,ultoa@v+2
 14885  011B44  C072  F078         	movff	ultoa@val+3,ultoa@v+3
 14886  011B48  C075  F060         	movff	ultoa@v,___lldiv@dividend
 14887  011B4C  C076  F061         	movff	ultoa@v+1,___lldiv@dividend+1
 14888  011B50  C077  F062         	movff	ultoa@v+2,___lldiv@dividend+2
 14889  011B54  C078  F063         	movff	ultoa@v+3,___lldiv@dividend+3
 14890  011B58  C073  F064         	movff	ultoa@base,___lldiv@divisor
 14891  011B5C  C074  F065         	movff	ultoa@base+1,___lldiv@divisor+1
 14892  011B60  0100               	movlb	0	; () banked
 14893  011B62  0E00               	movlw	0
 14894  011B64  BF65               	btfsc	(___lldiv@divisor+1)& (0+255),7,b
 14895  011B66  0EFF               	movlw	-1
 14896  011B68  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 14897  011B6A  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 14898  011B6C  EC06  F0A2         	call	___lldiv	;wreg free
 14899  011B70  C060  F075         	movff	?___lldiv,ultoa@v
 14900  011B74  C061  F076         	movff	?___lldiv+1,ultoa@v+1
 14901  011B78  C062  F077         	movff	?___lldiv+2,ultoa@v+2
 14902  011B7C  C063  F078         	movff	?___lldiv+3,ultoa@v+3
 14903  011B80  0100               	movlb	0	; () banked
 14904  011B82  4B6D               	infsnz	ultoa@buf& (0+255),f,b
 14905  011B84  2B6E               	incf	(ultoa@buf+1)& (0+255),f,b
 14906                           
 14907                           ; BSR set to: 0
 14908  011B86  5175               	movf	ultoa@v& (0+255),w,b
 14909  011B88  1176               	iorwf	(ultoa@v+1)& (0+255),w,b
 14910  011B8A  1177               	iorwf	(ultoa@v+2)& (0+255),w,b
 14911  011B8C  1178               	iorwf	(ultoa@v+3)& (0+255),w,b
 14912  011B8E  A4D8               	btfss	status,2,c
 14913  011B90  D7DB               	goto	l3889
 14914                           
 14915                           ; BSR set to: 0
 14916                           
 14917                           ; BSR set to: 0
 14918  011B92  C06D  FFD9         	movff	ultoa@buf,fsr2l
 14919  011B96  C06E  FFDA         	movff	ultoa@buf+1,fsr2h
 14920  011B9A  0E00               	movlw	0
 14921  011B9C  6EDF               	movwf	indf2,c
 14922                           
 14923                           ; BSR set to: 0
 14924  011B9E  076D               	decf	ultoa@buf& (0+255),f,b
 14925  011BA0  A0D8               	btfss	status,0,c
 14926  011BA2  076E               	decf	(ultoa@buf+1)& (0+255),f,b
 14927  011BA4                     
 14928                           ; BSR set to: 0
 14929                           
 14930                           ; BSR set to: 0
 14931  011BA4  C06F  F060         	movff	ultoa@val,___llmod@dividend
 14932  011BA8  C070  F061         	movff	ultoa@val+1,___llmod@dividend+1
 14933  011BAC  C071  F062         	movff	ultoa@val+2,___llmod@dividend+2
 14934  011BB0  C072  F063         	movff	ultoa@val+3,___llmod@dividend+3
 14935  011BB4  C073  F064         	movff	ultoa@base,___llmod@divisor
 14936  011BB8  C074  F065         	movff	ultoa@base+1,___llmod@divisor+1
 14937  011BBC  0E00               	movlw	0
 14938  011BBE  BF65               	btfsc	(___llmod@divisor+1)& (0+255),7,b
 14939  011BC0  0EFF               	movlw	-1
 14940  011BC2  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
 14941  011BC4  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
 14942  011BC6  EC37  F0A6         	call	___llmod	;wreg free
 14943  011BCA  0100               	movlb	0	; () banked
 14944  011BCC  5160               	movf	?___llmod& (0+255),w,b
 14945  011BCE  6F79               	movwf	ultoa@c& (0+255),b
 14946                           
 14947                           ; BSR set to: 0
 14948  011BD0  C06F  F060         	movff	ultoa@val,___lldiv@dividend
 14949  011BD4  C070  F061         	movff	ultoa@val+1,___lldiv@dividend+1
 14950  011BD8  C071  F062         	movff	ultoa@val+2,___lldiv@dividend+2
 14951  011BDC  C072  F063         	movff	ultoa@val+3,___lldiv@dividend+3
 14952  011BE0  C073  F064         	movff	ultoa@base,___lldiv@divisor
 14953  011BE4  C074  F065         	movff	ultoa@base+1,___lldiv@divisor+1
 14954  011BE8  0E00               	movlw	0
 14955  011BEA  BF65               	btfsc	(___lldiv@divisor+1)& (0+255),7,b
 14956  011BEC  0EFF               	movlw	-1
 14957  011BEE  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 14958  011BF0  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 14959  011BF2  EC06  F0A2         	call	___lldiv	;wreg free
 14960  011BF6  C060  F06F         	movff	?___lldiv,ultoa@val
 14961  011BFA  C061  F070         	movff	?___lldiv+1,ultoa@val+1
 14962  011BFE  C062  F071         	movff	?___lldiv+2,ultoa@val+2
 14963  011C02  C063  F072         	movff	?___lldiv+3,ultoa@val+3
 14964  011C06  0E09               	movlw	9
 14965  011C08  0100               	movlb	0	; () banked
 14966  011C0A  6579               	cpfsgt	ultoa@c& (0+255),b
 14967  011C0C  D002               	goto	l3892
 14968                           
 14969                           ; BSR set to: 0
 14970  011C0E  0E07               	movlw	7
 14971  011C10  2779               	addwf	ultoa@c& (0+255),f,b
 14972  011C12                     l3892:
 14973                           
 14974                           ; BSR set to: 0
 14975  011C12  0E30               	movlw	48
 14976  011C14  2779               	addwf	ultoa@c& (0+255),f,b
 14977                           
 14978                           ; BSR set to: 0
 14979  011C16  C06D  FFD9         	movff	ultoa@buf,fsr2l
 14980  011C1A  C06E  FFDA         	movff	ultoa@buf+1,fsr2h
 14981  011C1E  C079  FFDF         	movff	ultoa@c,indf2
 14982                           
 14983                           ; BSR set to: 0
 14984  011C22  076D               	decf	ultoa@buf& (0+255),f,b
 14985  011C24  A0D8               	btfss	status,0,c
 14986  011C26  076E               	decf	(ultoa@buf+1)& (0+255),f,b
 14987                           
 14988                           ; BSR set to: 0
 14989  011C28  516F               	movf	ultoa@val& (0+255),w,b
 14990  011C2A  1170               	iorwf	(ultoa@val+1)& (0+255),w,b
 14991  011C2C  1171               	iorwf	(ultoa@val+2)& (0+255),w,b
 14992  011C2E  1172               	iorwf	(ultoa@val+3)& (0+255),w,b
 14993  011C30  B4D8               	btfsc	status,2,c
 14994  011C32  0012               	return	
 14995  011C34  D7B7               	goto	l3891
 14996  011C36                     __end_of_ultoa:
 14997                           	opt stack 0
 14998                           tblptru	equ	0xFF8
 14999                           tblptrh	equ	0xFF7
 15000                           tblptrl	equ	0xFF6
 15001                           tablat	equ	0xFF5
 15002                           prodh	equ	0xFF4
 15003                           prodl	equ	0xFF3
 15004                           postinc0	equ	0xFEE
 15005                           wreg	equ	0xFE8
 15006                           postdec1	equ	0xFE5
 15007                           plusw1	equ	0xFE3
 15008                           fsr1h	equ	0xFE2
 15009                           fsr1l	equ	0xFE1
 15010                           indf2	equ	0xFDF
 15011                           postinc2	equ	0xFDE
 15012                           plusw2	equ	0xFDB
 15013                           fsr2h	equ	0xFDA
 15014                           fsr2l	equ	0xFD9
 15015                           status	equ	0xFD8
 15016                           
 15017 ;; *************** function ___llmod *****************
 15018 ;; Defined at:
 15019 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
 15020 ;; Parameters:    Size  Location     Type
 15021 ;;  dividend        4    0[BANK0 ] unsigned long 
 15022 ;;  divisor         4    4[BANK0 ] unsigned long 
 15023 ;; Auto vars:     Size  Location     Type
 15024 ;;  counter         1    8[BANK0 ] unsigned char 
 15025 ;; Return value:  Size  Location     Type
 15026 ;;                  4    0[BANK0 ] unsigned long 
 15027 ;; Registers used:
 15028 ;;		wreg, status,2, status,0
 15029 ;; Tracked objects:
 15030 ;;		On entry : 0/0
 15031 ;;		On exit  : 0/0
 15032 ;;		Unchanged: 0/0
 15033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15034 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15035 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15037 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15038 ;;Total ram usage:        9 bytes
 15039 ;; Hardware stack levels used:    1
 15040 ;; Hardware stack levels required when called:   10
 15041 ;; This function calls:
 15042 ;;		Nothing
 15043 ;; This function is called by:
 15044 ;;		_ultoa
 15045 ;; This function uses a non-reentrant model
 15046 ;;
 15047                           
 15048                           	psect	text49
 15049  014C6E                     __ptext49:
 15050                           	opt stack 0
 15051  014C6E                     ___llmod:
 15052                           	opt stack 15
 15053                           
 15054                           ; BSR set to: 0
 15055                           ;incstack = 0
 15056  014C6E  0100               	movlb	0	; () banked
 15057  014C70  5164               	movf	___llmod@divisor& (0+255),w,b
 15058  014C72  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 15059  014C74  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 15060  014C76  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 15061  014C78  B4D8               	btfsc	status,2,c
 15062  014C7A  D024               	goto	l3587
 15063                           
 15064                           ; BSR set to: 0
 15065  014C7C  0E01               	movlw	1
 15066  014C7E  6F68               	movwf	___llmod@counter& (0+255),b
 15067  014C80  D006               	goto	l3582
 15068  014C82                     
 15069                           ; BSR set to: 0
 15070                           
 15071                           ; BSR set to: 0
 15072  014C82  90D8               	bcf	status,0,c
 15073  014C84  3764               	rlcf	___llmod@divisor& (0+255),f,b
 15074  014C86  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 15075  014C88  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 15076  014C8A  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 15077  014C8C  2B68               	incf	___llmod@counter& (0+255),f,b
 15078  014C8E                     l3582:
 15079                           
 15080                           ; BSR set to: 0
 15081                           
 15082                           ; BSR set to: 0
 15083  014C8E  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
 15084  014C90  D7F8               	goto	l3583
 15085  014C92                     u12020:
 15086                           
 15087                           ; BSR set to: 0
 15088                           
 15089                           ; BSR set to: 0
 15090                           
 15091                           ; BSR set to: 0
 15092  014C92  5164               	movf	___llmod@divisor& (0+255),w,b
 15093  014C94  5D60               	subwf	___llmod@dividend& (0+255),w,b
 15094  014C96  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 15095  014C98  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 15096  014C9A  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 15097  014C9C  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 15098  014C9E  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 15099  014CA0  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 15100  014CA2  A0D8               	btfss	status,0,c
 15101  014CA4  D008               	goto	l3586
 15102                           
 15103                           ; BSR set to: 0
 15104  014CA6  5164               	movf	___llmod@divisor& (0+255),w,b
 15105  014CA8  5F60               	subwf	___llmod@dividend& (0+255),f,b
 15106  014CAA  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 15107  014CAC  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 15108  014CAE  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 15109  014CB0  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 15110  014CB2  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 15111  014CB4  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 15112  014CB6                     l3586:
 15113                           
 15114                           ; BSR set to: 0
 15115                           
 15116                           ; BSR set to: 0
 15117  014CB6  90D8               	bcf	status,0,c
 15118  014CB8  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 15119  014CBA  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 15120  014CBC  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 15121  014CBE  3364               	rrcf	___llmod@divisor& (0+255),f,b
 15122                           
 15123                           ; BSR set to: 0
 15124  014CC0  2F68               	decfsz	___llmod@counter& (0+255),f,b
 15125  014CC2  D7E7               	goto	u12020
 15126  014CC4                     l3587:
 15127                           
 15128                           ; BSR set to: 0
 15129                           
 15130                           ; BSR set to: 0
 15131  014CC4  C060  F060         	movff	___llmod@dividend,?___llmod
 15132  014CC8  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
 15133  014CCC  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
 15134  014CD0  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
 15135                           
 15136                           ; BSR set to: 0
 15137  014CD4  0012               	return		;funcret
 15138  014CD6                     __end_of___llmod:
 15139                           	opt stack 0
 15140                           tblptru	equ	0xFF8
 15141                           tblptrh	equ	0xFF7
 15142                           tblptrl	equ	0xFF6
 15143                           tablat	equ	0xFF5
 15144                           prodh	equ	0xFF4
 15145                           prodl	equ	0xFF3
 15146                           postinc0	equ	0xFEE
 15147                           wreg	equ	0xFE8
 15148                           postdec1	equ	0xFE5
 15149                           plusw1	equ	0xFE3
 15150                           fsr1h	equ	0xFE2
 15151                           fsr1l	equ	0xFE1
 15152                           indf2	equ	0xFDF
 15153                           postinc2	equ	0xFDE
 15154                           plusw2	equ	0xFDB
 15155                           fsr2h	equ	0xFDA
 15156                           fsr2l	equ	0xFD9
 15157                           status	equ	0xFD8
 15158                           
 15159 ;; *************** function ___lldiv *****************
 15160 ;; Defined at:
 15161 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 15162 ;; Parameters:    Size  Location     Type
 15163 ;;  dividend        4    0[BANK0 ] unsigned long 
 15164 ;;  divisor         4    4[BANK0 ] unsigned long 
 15165 ;; Auto vars:     Size  Location     Type
 15166 ;;  quotient        4    8[BANK0 ] unsigned long 
 15167 ;;  counter         1   12[BANK0 ] unsigned char 
 15168 ;; Return value:  Size  Location     Type
 15169 ;;                  4    0[BANK0 ] unsigned long 
 15170 ;; Registers used:
 15171 ;;		wreg, status,2, status,0
 15172 ;; Tracked objects:
 15173 ;;		On entry : 0/0
 15174 ;;		On exit  : 0/0
 15175 ;;		Unchanged: 0/0
 15176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15177 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15178 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15180 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15181 ;;Total ram usage:       13 bytes
 15182 ;; Hardware stack levels used:    1
 15183 ;; Hardware stack levels required when called:   10
 15184 ;; This function calls:
 15185 ;;		Nothing
 15186 ;; This function is called by:
 15187 ;;		_ultoa
 15188 ;; This function uses a non-reentrant model
 15189 ;;
 15190                           
 15191                           	psect	text50
 15192  01440C                     __ptext50:
 15193                           	opt stack 0
 15194  01440C                     ___lldiv:
 15195                           	opt stack 15
 15196                           
 15197                           ; BSR set to: 0
 15198                           ;incstack = 0
 15199  01440C  0E00               	movlw	0
 15200  01440E  0100               	movlb	0	; () banked
 15201  014410  6F68               	movwf	___lldiv@quotient& (0+255),b
 15202  014412  0E00               	movlw	0
 15203  014414  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 15204  014416  0E00               	movlw	0
 15205  014418  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 15206  01441A  0E00               	movlw	0
 15207  01441C  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 15208                           
 15209                           ; BSR set to: 0
 15210  01441E  5164               	movf	___lldiv@divisor& (0+255),w,b
 15211  014420  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 15212  014422  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 15213  014424  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 15214  014426  B4D8               	btfsc	status,2,c
 15215  014428  D02A               	goto	l3206
 15216                           
 15217                           ; BSR set to: 0
 15218  01442A  0E01               	movlw	1
 15219  01442C  6F6C               	movwf	___lldiv@counter& (0+255),b
 15220  01442E  D006               	goto	l3201
 15221  014430                     
 15222                           ; BSR set to: 0
 15223                           
 15224                           ; BSR set to: 0
 15225  014430  90D8               	bcf	status,0,c
 15226  014432  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 15227  014434  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 15228  014436  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 15229  014438  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 15230  01443A  2B6C               	incf	___lldiv@counter& (0+255),f,b
 15231  01443C                     l3201:
 15232                           
 15233                           ; BSR set to: 0
 15234                           
 15235                           ; BSR set to: 0
 15236  01443C  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 15237  01443E  D7F8               	goto	l3202
 15238  014440                     u11990:
 15239                           
 15240                           ; BSR set to: 0
 15241                           
 15242                           ; BSR set to: 0
 15243                           
 15244                           ; BSR set to: 0
 15245  014440  90D8               	bcf	status,0,c
 15246  014442  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 15247  014444  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 15248  014446  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 15249  014448  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 15250                           
 15251                           ; BSR set to: 0
 15252  01444A  5164               	movf	___lldiv@divisor& (0+255),w,b
 15253  01444C  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 15254  01444E  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 15255  014450  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 15256  014452  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 15257  014454  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 15258  014456  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 15259  014458  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 15260  01445A  A0D8               	btfss	status,0,c
 15261  01445C  D009               	goto	l3205
 15262                           
 15263                           ; BSR set to: 0
 15264  01445E  5164               	movf	___lldiv@divisor& (0+255),w,b
 15265  014460  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 15266  014462  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 15267  014464  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 15268  014466  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 15269  014468  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 15270  01446A  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 15271  01446C  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 15272                           
 15273                           ; BSR set to: 0
 15274  01446E  8168               	bsf	___lldiv@quotient& (0+255),0,b
 15275  014470                     l3205:
 15276                           
 15277                           ; BSR set to: 0
 15278                           
 15279                           ; BSR set to: 0
 15280  014470  90D8               	bcf	status,0,c
 15281  014472  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 15282  014474  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 15283  014476  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 15284  014478  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 15285                           
 15286                           ; BSR set to: 0
 15287  01447A  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 15288  01447C  D7E1               	goto	u11990
 15289  01447E                     l3206:
 15290                           
 15291                           ; BSR set to: 0
 15292                           
 15293                           ; BSR set to: 0
 15294  01447E  C068  F060         	movff	___lldiv@quotient,?___lldiv
 15295  014482  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 15296  014486  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 15297  01448A  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 15298                           
 15299                           ; BSR set to: 0
 15300  01448E  0012               	return		;funcret
 15301  014490                     __end_of___lldiv:
 15302                           	opt stack 0
 15303                           tblptru	equ	0xFF8
 15304                           tblptrh	equ	0xFF7
 15305                           tblptrl	equ	0xFF6
 15306                           tablat	equ	0xFF5
 15307                           prodh	equ	0xFF4
 15308                           prodl	equ	0xFF3
 15309                           postinc0	equ	0xFEE
 15310                           wreg	equ	0xFE8
 15311                           postdec1	equ	0xFE5
 15312                           plusw1	equ	0xFE3
 15313                           fsr1h	equ	0xFE2
 15314                           fsr1l	equ	0xFE1
 15315                           indf2	equ	0xFDF
 15316                           postinc2	equ	0xFDE
 15317                           plusw2	equ	0xFDB
 15318                           fsr2h	equ	0xFDA
 15319                           fsr2l	equ	0xFD9
 15320                           status	equ	0xFD8
 15321                           
 15322 ;; *************** function _configFile_readDefault *****************
 15323 ;; Defined at:
 15324 ;;		line 258 in file "config_file.c"
 15325 ;; Parameters:    Size  Location     Type
 15326 ;;		None
 15327 ;; Auto vars:     Size  Location     Type
 15328 ;;		None
 15329 ;; Return value:  Size  Location     Type
 15330 ;;                  1    wreg      void 
 15331 ;; Registers used:
 15332 ;;		wreg, status,2
 15333 ;; Tracked objects:
 15334 ;;		On entry : 0/0
 15335 ;;		On exit  : 0/0
 15336 ;;		Unchanged: 0/0
 15337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15342 ;;Total ram usage:        0 bytes
 15343 ;; Hardware stack levels used:    1
 15344 ;; Hardware stack levels required when called:   10
 15345 ;; This function calls:
 15346 ;;		Nothing
 15347 ;; This function is called by:
 15348 ;;		_system_init
 15349 ;; This function uses a non-reentrant model
 15350 ;;
 15351                           
 15352                           	psect	text51
 15353  014692                     __ptext51:
 15354                           	opt stack 0
 15355  014692                     _configFile_readDefault:
 15356                           	opt stack 19
 15357                           
 15358                           ;config_file.c: 260: config.full_circle_in_steps = 218880;
 15359                           
 15360                           ; BSR set to: 0
 15361                           ;incstack = 0
 15362  014692  0E00               	movlw	0
 15363  014694  0101               	movlb	1	; () banked
 15364  014696  6F95               	movwf	_config& (0+255),b
 15365  014698  0E57               	movlw	87
 15366  01469A  6F96               	movwf	(_config+1)& (0+255),b
 15367  01469C  0E03               	movlw	3
 15368  01469E  6F97               	movwf	(_config+2)& (0+255),b
 15369  0146A0  0E00               	movlw	0
 15370  0146A2  6F98               	movwf	(_config+3)& (0+255),b
 15371                           
 15372                           ;config_file.c: 261: config.inverse_direction = 0;
 15373  0146A4  0E00               	movlw	0
 15374  0146A6  6F99               	movwf	(_config+4)& (0+255),b
 15375                           
 15376                           ;config_file.c: 262: config.overshoot_in_steps = 3648;
 15377  0146A8  0E0E               	movlw	14
 15378  0146AA  6F9B               	movwf	(_config+6)& (0+255),b
 15379  0146AC  0E40               	movlw	64
 15380  0146AE  6F9A               	movwf	(_config+5)& (0+255),b
 15381                           
 15382                           ;config_file.c: 263: config.overshoot_cost_in_steps = 3000;
 15383  0146B0  0E0B               	movlw	11
 15384  0146B2  6F9D               	movwf	(_config+8)& (0+255),b
 15385  0146B4  0EB8               	movlw	184
 15386  0146B6  6F9C               	movwf	(_config+7)& (0+255),b
 15387                           
 15388                           ;config_file.c: 264: config.minimum_speed = 1;
 15389  0146B8  0E00               	movlw	0
 15390  0146BA  6F9F               	movwf	(_config+10)& (0+255),b
 15391  0146BC  0E01               	movlw	1
 15392  0146BE  6F9E               	movwf	(_config+9)& (0+255),b
 15393                           
 15394                           ;config_file.c: 265: config.maximum_speed = 380;
 15395  0146C0  0E01               	movlw	1
 15396  0146C2  6FA1               	movwf	(_config+12)& (0+255),b
 15397  0146C4  0E7C               	movlw	124
 15398  0146C6  6FA0               	movwf	(_config+11)& (0+255),b
 15399                           
 15400                           ;config_file.c: 266: config.maximum_speed_arc = 305;
 15401  0146C8  0E01               	movlw	1
 15402  0146CA  6FA5               	movwf	(_config+16)& (0+255),b
 15403  0146CC  0E31               	movlw	49
 15404  0146CE  6FA4               	movwf	(_config+15)& (0+255),b
 15405                           
 15406                           ;config_file.c: 267: config.maximum_speed_manual = 305;
 15407  0146D0  0E01               	movlw	1
 15408  0146D2  6FA9               	movwf	(_config+20)& (0+255),b
 15409  0146D4  0E31               	movlw	49
 15410  0146D6  6FA8               	movwf	(_config+19)& (0+255),b
 15411                           
 15412                           ;config_file.c: 268: config.use_ccw_limit = 0;
 15413  0146D8  0E00               	movlw	0
 15414  0146DA  6FB4               	movwf	(_config+31)& (0+255),b
 15415                           
 15416                           ;config_file.c: 269: config.ccw_limit = 9000;
 15417  0146DC  0E28               	movlw	40
 15418  0146DE  6FB5               	movwf	(_config+32)& (0+255),b
 15419  0146E0  0E23               	movlw	35
 15420  0146E2  6FB6               	movwf	(_config+33)& (0+255),b
 15421  0146E4  0E00               	movlw	0
 15422  0146E6  6FB7               	movwf	(_config+34)& (0+255),b
 15423  0146E8  0E00               	movlw	0
 15424  0146EA  6FB8               	movwf	(_config+35)& (0+255),b
 15425                           
 15426                           ;config_file.c: 270: config.use_cw_limit = 1;
 15427  0146EC  0E01               	movlw	1
 15428  0146EE  6FAB               	movwf	(_config+22)& (0+255),b
 15429                           
 15430                           ;config_file.c: 271: config.cw_limit = 9000;
 15431  0146F0  0E28               	movlw	40
 15432  0146F2  6FAC               	movwf	(_config+23)& (0+255),b
 15433  0146F4  0E23               	movlw	35
 15434  0146F6  6FAD               	movwf	(_config+24)& (0+255),b
 15435  0146F8  0E00               	movlw	0
 15436  0146FA  6FAE               	movwf	(_config+25)& (0+255),b
 15437  0146FC  0E00               	movlw	0
 15438  0146FE  6FAF               	movwf	(_config+26)& (0+255),b
 15439                           
 15440                           ;config_file.c: 272: config.beep_duration = 10;
 15441  014700  0E0A               	movlw	10
 15442  014702  6FAA               	movwf	(_config+21)& (0+255),b
 15443                           
 15444                           ;config_file.c: 273: config.position_display_180 = 1;
 15445  014704  0E01               	movlw	1
 15446  014706  6FBD               	movwf	(_config+40)& (0+255),b
 15447                           
 15448                           ;config_file.c: 274: config.menu_structure = 1;
 15449  014708  0E01               	movlw	1
 15450  01470A  6FBE               	movwf	(_config+41)& (0+255),b
 15451                           
 15452                           ; BSR set to: 1
 15453  01470C  0012               	return		;funcret
 15454  01470E                     __end_of_configFile_readDefault:
 15455                           	opt stack 0
 15456                           tblptru	equ	0xFF8
 15457                           tblptrh	equ	0xFF7
 15458                           tblptrl	equ	0xFF6
 15459                           tablat	equ	0xFF5
 15460                           prodh	equ	0xFF4
 15461                           prodl	equ	0xFF3
 15462                           postinc0	equ	0xFEE
 15463                           wreg	equ	0xFE8
 15464                           postdec1	equ	0xFE5
 15465                           plusw1	equ	0xFE3
 15466                           fsr1h	equ	0xFE2
 15467                           fsr1l	equ	0xFE1
 15468                           indf2	equ	0xFDF
 15469                           postinc2	equ	0xFDE
 15470                           plusw2	equ	0xFDB
 15471                           fsr2h	equ	0xFDA
 15472                           fsr2l	equ	0xFD9
 15473                           status	equ	0xFD8
 15474                           
 15475 ;; *************** function _configFile_read *****************
 15476 ;; Defined at:
 15477 ;;		line 278 in file "config_file.c"
 15478 ;; Parameters:    Size  Location     Type
 15479 ;;		None
 15480 ;; Auto vars:     Size  Location     Type
 15481 ;;  item_string    31    8[BANK1 ] unsigned char [31]
 15482 ;;  value_string   12   39[BANK1 ] unsigned char [12]
 15483 ;;  position        4   56[BANK1 ] unsigned long 
 15484 ;;  file_size       4   51[BANK1 ] unsigned long 
 15485 ;;  file_number     1   55[BANK1 ] unsigned char 
 15486 ;; Return value:  Size  Location     Type
 15487 ;;                  1    wreg      void 
 15488 ;; Registers used:
 15489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15490 ;; Tracked objects:
 15491 ;;		On entry : 0/0
 15492 ;;		On exit  : 0/0
 15493 ;;		Unchanged: 0/0
 15494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15496 ;;      Locals:         0       0      52       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15497 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15498 ;;      Totals:         0       0      60       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15499 ;;Total ram usage:       60 bytes
 15500 ;; Hardware stack levels used:    1
 15501 ;; Hardware stack levels required when called:   19
 15502 ;; This function calls:
 15503 ;;		__get_item
 15504 ;;		__parse_item
 15505 ;;		_fat_find_file
 15506 ;;		_fat_get_file_size
 15507 ;;		_fat_read_from_file
 15508 ;; This function is called by:
 15509 ;;		_system_init
 15510 ;; This function uses a non-reentrant model
 15511 ;;
 15512                           
 15513                           	psect	text52
 15514  00F432                     __ptext52:
 15515                           	opt stack 0
 15516  00F432                     _configFile_read:
 15517                           	opt stack 10
 15518                           
 15519                           ;config_file.c: 280: uint8_t file_number;;config_file.c: 281: uint32_t file_size;;config
      +                          _file.c: 282: uint32_t position;;config_file.c: 283: char item_string[31];;config_file.c
      +                          : 284: char value_string[12];;config_file.c: 287: file_number = fat_find_file(&configFil
      +                          e_name, &configFile_extention);
 15520                           
 15521                           ; BSR set to: 1
 15522                           ;incstack = 0
 15523  00F432  0EDD               	movlw	low _configFile_name
 15524  00F434  0100               	movlb	0	; () banked
 15525  00F436  6F8B               	movwf	fat_find_file@name& (0+255),b
 15526  00F438  0E02               	movlw	high _configFile_name
 15527  00F43A  6F8C               	movwf	(fat_find_file@name+1)& (0+255),b
 15528  00F43C  0EE8               	movlw	low _configFile_extention
 15529  00F43E  6F8D               	movwf	fat_find_file@extension& (0+255),b
 15530  00F440  0E02               	movlw	high _configFile_extention
 15531  00F442  6F8E               	movwf	(fat_find_file@extension+1)& (0+255),b
 15532  00F444  EC7C  F090         	call	_fat_find_file	;wreg free
 15533  00F448  0101               	movlb	1	; () banked
 15534  00F44A  6FFB               	movwf	configFile_read@file_number& (0+255),b
 15535                           
 15536                           ; BSR set to: 1
 15537                           ;config_file.c: 288: if(file_number==0xFF)
 15538  00F44C  29FB               	incf	configFile_read@file_number& (0+255),w,b
 15539  00F44E  B4D8               	btfsc	status,2,c
 15540  00F450  0012               	return	
 15541                           
 15542                           ; BSR set to: 1
 15543                           ;config_file.c: 292: };config_file.c: 295: file_size = fat_get_file_size(file_number);
 15544                           
 15545                           ; BSR set to: 1
 15546                           
 15547                           ; BSR set to: 1
 15548                           ;config_file.c: 289: {;config_file.c: 291: return;
 15549  00F452  51FB               	movf	configFile_read@file_number& (0+255),w,b
 15550  00F454  EC02  F0A4         	call	_fat_get_file_size
 15551  00F458  C095  F1F7         	movff	?_fat_get_file_size,configFile_read@file_size
 15552  00F45C  C096  F1F8         	movff	?_fat_get_file_size+1,configFile_read@file_size+1
 15553  00F460  C097  F1F9         	movff	?_fat_get_file_size+2,configFile_read@file_size+2
 15554  00F464  C098  F1FA         	movff	?_fat_get_file_size+3,configFile_read@file_size+3
 15555                           
 15556                           ;config_file.c: 298: position = 0;
 15557  00F468  0E00               	movlw	0
 15558  00F46A  0101               	movlb	1	; () banked
 15559  00F46C  6FFC               	movwf	configFile_read@position& (0+255),b
 15560  00F46E  0E00               	movlw	0
 15561  00F470  6FFD               	movwf	(configFile_read@position+1)& (0+255),b
 15562  00F472  0E00               	movlw	0
 15563  00F474  6FFE               	movwf	(configFile_read@position+2)& (0+255),b
 15564  00F476  0E00               	movlw	0
 15565  00F478  6FFF               	movwf	(configFile_read@position+3)& (0+255),b
 15566                           
 15567                           ;config_file.c: 299: while((file_size-position)>3)
 15568  00F47A  D086               	goto	l3161
 15569  00F47C                     
 15570                           ; BSR set to: 1
 15571                           ;config_file.c: 300: {;config_file.c: 301: if((position+45) > file_size)
 15572                           
 15573                           ; BSR set to: 1
 15574  00F47C  0E2D               	movlw	45
 15575  00F47E  25FC               	addwf	configFile_read@position& (0+255),w,b
 15576  00F480  6FC4               	movwf	??_configFile_read& (0+255),b
 15577  00F482  0E00               	movlw	0
 15578  00F484  21FD               	addwfc	(configFile_read@position+1)& (0+255),w,b
 15579  00F486  6FC5               	movwf	(??_configFile_read+1)& (0+255),b
 15580  00F488  0E00               	movlw	0
 15581  00F48A  21FE               	addwfc	(configFile_read@position+2)& (0+255),w,b
 15582  00F48C  6FC6               	movwf	(??_configFile_read+2)& (0+255),b
 15583  00F48E  0E00               	movlw	0
 15584  00F490  21FF               	addwfc	(configFile_read@position+3)& (0+255),w,b
 15585  00F492  6FC7               	movwf	(??_configFile_read+3)& (0+255),b
 15586  00F494  51C4               	movf	??_configFile_read& (0+255),w,b
 15587  00F496  5DF7               	subwf	configFile_read@file_size& (0+255),w,b
 15588  00F498  51C5               	movf	(??_configFile_read+1)& (0+255),w,b
 15589  00F49A  59F8               	subwfb	(configFile_read@file_size+1)& (0+255),w,b
 15590  00F49C  51C6               	movf	(??_configFile_read+2)& (0+255),w,b
 15591  00F49E  59F9               	subwfb	(configFile_read@file_size+2)& (0+255),w,b
 15592  00F4A0  51C7               	movf	(??_configFile_read+3)& (0+255),w,b
 15593  00F4A2  59FA               	subwfb	(configFile_read@file_size+3)& (0+255),w,b
 15594  00F4A4  B0D8               	btfsc	status,0,c
 15595  00F4A6  D035               	goto	l3163
 15596                           
 15597                           ; BSR set to: 1
 15598                           ;config_file.c: 302: {;config_file.c: 304: fat_read_from_file(file_number, position, fil
      +                          e_size-position, &ConfigFile_buffer[0]);
 15599  00F4A8  C1FC  F0C9         	movff	configFile_read@position,fat_read_from_file@start_byte
 15600  00F4AC  C1FD  F0CA         	movff	configFile_read@position+1,fat_read_from_file@start_byte+1
 15601  00F4B0  C1FE  F0CB         	movff	configFile_read@position+2,fat_read_from_file@start_byte+2
 15602  00F4B4  C1FF  F0CC         	movff	configFile_read@position+3,fat_read_from_file@start_byte+3
 15603  00F4B8  C1FC  F1C4         	movff	configFile_read@position,??_configFile_read
 15604  00F4BC  C1FD  F1C5         	movff	configFile_read@position+1,??_configFile_read+1
 15605  00F4C0  C1FE  F1C6         	movff	configFile_read@position+2,??_configFile_read+2
 15606  00F4C4  C1FF  F1C7         	movff	configFile_read@position+3,??_configFile_read+3
 15607  00F4C8  1FC4               	comf	??_configFile_read& (0+255),f,b
 15608  00F4CA  1FC5               	comf	(??_configFile_read+1)& (0+255),f,b
 15609  00F4CC  1FC6               	comf	(??_configFile_read+2)& (0+255),f,b
 15610  00F4CE  1FC7               	comf	(??_configFile_read+3)& (0+255),f,b
 15611  00F4D0  2BC4               	incf	??_configFile_read& (0+255),f,b
 15612  00F4D2  0E00               	movlw	0
 15613  00F4D4  23C5               	addwfc	(??_configFile_read+1)& (0+255),f,b
 15614  00F4D6  23C6               	addwfc	(??_configFile_read+2)& (0+255),f,b
 15615  00F4D8  23C7               	addwfc	(??_configFile_read+3)& (0+255),f,b
 15616  00F4DA  51F7               	movf	configFile_read@file_size& (0+255),w,b
 15617  00F4DC  25C4               	addwf	??_configFile_read& (0+255),w,b
 15618  00F4DE  0100               	movlb	0	; () banked
 15619  00F4E0  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 15620  00F4E2  0101               	movlb	1	; () banked
 15621  00F4E4  51F8               	movf	(configFile_read@file_size+1)& (0+255),w,b
 15622  00F4E6  21C5               	addwfc	(??_configFile_read+1)& (0+255),w,b
 15623  00F4E8  0100               	movlb	0	; () banked
 15624  00F4EA  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 15625  00F4EC  0101               	movlb	1	; () banked
 15626  00F4EE  51F9               	movf	(configFile_read@file_size+2)& (0+255),w,b
 15627  00F4F0  21C6               	addwfc	(??_configFile_read+2)& (0+255),w,b
 15628  00F4F2  0100               	movlb	0	; () banked
 15629  00F4F4  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 15630  00F4F6  0101               	movlb	1	; () banked
 15631  00F4F8  51FA               	movf	(configFile_read@file_size+3)& (0+255),w,b
 15632  00F4FA  21C7               	addwfc	(??_configFile_read+3)& (0+255),w,b
 15633  00F4FC  0100               	movlb	0	; () banked
 15634  00F4FE  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 15635  00F500  0E00               	movlw	low _ConfigFile_buffer
 15636  00F502  6FD1               	movwf	fat_read_from_file@data& (0+255),b
 15637  00F504  0E08               	movlw	high _ConfigFile_buffer
 15638  00F506  6FD2               	movwf	(fat_read_from_file@data+1)& (0+255),b
 15639  00F508  0101               	movlb	1	; () banked
 15640  00F50A  51FB               	movf	configFile_read@file_number& (0+255),w,b
 15641  00F50C  ECF0  F090         	call	_fat_read_from_file
 15642                           
 15643                           ;config_file.c: 305: }
 15644  00F510  D019               	goto	l3164
 15645  00F512                     l3163:
 15646                           
 15647                           ;config_file.c: 306: else;config_file.c: 307: {;config_file.c: 309: fat_read_from_file(f
      +                          ile_number, position, 45, &ConfigFile_buffer[0]);
 15648  00F512  C1FC  F0C9         	movff	configFile_read@position,fat_read_from_file@start_byte
 15649  00F516  C1FD  F0CA         	movff	configFile_read@position+1,fat_read_from_file@start_byte+1
 15650  00F51A  C1FE  F0CB         	movff	configFile_read@position+2,fat_read_from_file@start_byte+2
 15651  00F51E  C1FF  F0CC         	movff	configFile_read@position+3,fat_read_from_file@start_byte+3
 15652  00F522  0E2D               	movlw	45
 15653  00F524  0100               	movlb	0	; () banked
 15654  00F526  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 15655  00F528  0E00               	movlw	0
 15656  00F52A  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 15657  00F52C  0E00               	movlw	0
 15658  00F52E  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 15659  00F530  0E00               	movlw	0
 15660  00F532  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 15661  00F534  0E00               	movlw	low _ConfigFile_buffer
 15662  00F536  6FD1               	movwf	fat_read_from_file@data& (0+255),b
 15663  00F538  0E08               	movlw	high _ConfigFile_buffer
 15664  00F53A  6FD2               	movwf	(fat_read_from_file@data+1)& (0+255),b
 15665  00F53C  0101               	movlb	1	; () banked
 15666  00F53E  51FB               	movf	configFile_read@file_number& (0+255),w,b
 15667  00F540  ECF0  F090         	call	_fat_read_from_file
 15668  00F544                     l3164:
 15669                           
 15670                           ;config_file.c: 310: };config_file.c: 313: position += _get_item(&item_string[0], &value
      +                          _string[0], &ConfigFile_buffer[0]);
 15671  00F544  0ECC               	movlw	low configFile_read@item_string
 15672  00F546  0100               	movlb	0	; () banked
 15673  00F548  6F60               	movwf	__get_item@item_string& (0+255),b
 15674  00F54A  0E01               	movlw	high configFile_read@item_string
 15675  00F54C  6F61               	movwf	(__get_item@item_string+1)& (0+255),b
 15676  00F54E  0EEB               	movlw	low configFile_read@value_string
 15677  00F550  6F62               	movwf	__get_item@value_string& (0+255),b
 15678  00F552  0E01               	movlw	high configFile_read@value_string
 15679  00F554  6F63               	movwf	(__get_item@value_string+1)& (0+255),b
 15680  00F556  0E00               	movlw	low _ConfigFile_buffer
 15681  00F558  6F64               	movwf	__get_item@buffer& (0+255),b
 15682  00F55A  0E08               	movlw	high _ConfigFile_buffer
 15683  00F55C  6F65               	movwf	(__get_item@buffer+1)& (0+255),b
 15684  00F55E  EC82  F07C         	call	__get_item	;wreg free
 15685  00F562  0101               	movlb	1	; () banked
 15686  00F564  6FC4               	movwf	??_configFile_read& (0+255),b
 15687  00F566  51C4               	movf	??_configFile_read& (0+255),w,b
 15688  00F568  27FC               	addwf	configFile_read@position& (0+255),f,b
 15689  00F56A  0E00               	movlw	0
 15690  00F56C  23FD               	addwfc	(configFile_read@position+1)& (0+255),f,b
 15691  00F56E  23FE               	addwfc	(configFile_read@position+2)& (0+255),f,b
 15692  00F570  23FF               	addwfc	(configFile_read@position+3)& (0+255),f,b
 15693                           
 15694                           ; BSR set to: 1
 15695                           ;config_file.c: 316: _parse_item(&item_string[0], &value_string[0]);
 15696  00F572  0ECC               	movlw	low configFile_read@item_string
 15697  00F574  0100               	movlb	0	; () banked
 15698  00F576  6F99               	movwf	__parse_item@item_string& (0+255),b
 15699  00F578  0E01               	movlw	high configFile_read@item_string
 15700  00F57A  6F9A               	movwf	(__parse_item@item_string+1)& (0+255),b
 15701  00F57C  0EEB               	movlw	low configFile_read@value_string
 15702  00F57E  6F9B               	movwf	__parse_item@value_string& (0+255),b
 15703  00F580  0E01               	movlw	high configFile_read@value_string
 15704  00F582  6F9C               	movwf	(__parse_item@value_string+1)& (0+255),b
 15705  00F584  EC2F  F05B         	call	__parse_item	;wreg free
 15706  00F588                     l3161:
 15707  00F588  C1FC  F1C4         	movff	configFile_read@position,??_configFile_read
 15708  00F58C  C1FD  F1C5         	movff	configFile_read@position+1,??_configFile_read+1
 15709  00F590  C1FE  F1C6         	movff	configFile_read@position+2,??_configFile_read+2
 15710  00F594  C1FF  F1C7         	movff	configFile_read@position+3,??_configFile_read+3
 15711  00F598  0101               	movlb	1	; () banked
 15712  00F59A  1FC4               	comf	??_configFile_read& (0+255),f,b
 15713  00F59C  1FC5               	comf	(??_configFile_read+1)& (0+255),f,b
 15714  00F59E  1FC6               	comf	(??_configFile_read+2)& (0+255),f,b
 15715  00F5A0  1FC7               	comf	(??_configFile_read+3)& (0+255),f,b
 15716  00F5A2  2BC4               	incf	??_configFile_read& (0+255),f,b
 15717  00F5A4  0E00               	movlw	0
 15718  00F5A6  23C5               	addwfc	(??_configFile_read+1)& (0+255),f,b
 15719  00F5A8  23C6               	addwfc	(??_configFile_read+2)& (0+255),f,b
 15720  00F5AA  23C7               	addwfc	(??_configFile_read+3)& (0+255),f,b
 15721  00F5AC  51F7               	movf	configFile_read@file_size& (0+255),w,b
 15722  00F5AE  25C4               	addwf	??_configFile_read& (0+255),w,b
 15723  00F5B0  6FC8               	movwf	(??_configFile_read+4)& (0+255),b
 15724  00F5B2  51F8               	movf	(configFile_read@file_size+1)& (0+255),w,b
 15725  00F5B4  21C5               	addwfc	(??_configFile_read+1)& (0+255),w,b
 15726  00F5B6  6FC9               	movwf	(??_configFile_read+5)& (0+255),b
 15727  00F5B8  51F9               	movf	(configFile_read@file_size+2)& (0+255),w,b
 15728  00F5BA  21C6               	addwfc	(??_configFile_read+2)& (0+255),w,b
 15729  00F5BC  6FCA               	movwf	(??_configFile_read+6)& (0+255),b
 15730  00F5BE  51FA               	movf	(configFile_read@file_size+3)& (0+255),w,b
 15731  00F5C0  21C7               	addwfc	(??_configFile_read+3)& (0+255),w,b
 15732  00F5C2  6FCB               	movwf	(??_configFile_read+7)& (0+255),b
 15733  00F5C4  51CB               	movf	(??_configFile_read+7)& (0+255),w,b
 15734  00F5C6  11CA               	iorwf	(??_configFile_read+6)& (0+255),w,b
 15735  00F5C8  11C9               	iorwf	(??_configFile_read+5)& (0+255),w,b
 15736  00F5CA  E104               	bnz	u17271
 15737  00F5CC  0E04               	movlw	4
 15738  00F5CE  5DC8               	subwf	(??_configFile_read+4)& (0+255),w,b
 15739  00F5D0  A0D8               	btfss	status,0,c
 15740  00F5D2  0012               	return	
 15741  00F5D4                     u17271:
 15742  00F5D4  D753               	goto	l3162
 15743  00F5D6                     __end_of_configFile_read:
 15744                           	opt stack 0
 15745                           tblptru	equ	0xFF8
 15746                           tblptrh	equ	0xFF7
 15747                           tblptrl	equ	0xFF6
 15748                           tablat	equ	0xFF5
 15749                           prodh	equ	0xFF4
 15750                           prodl	equ	0xFF3
 15751                           postinc0	equ	0xFEE
 15752                           wreg	equ	0xFE8
 15753                           postdec1	equ	0xFE5
 15754                           plusw1	equ	0xFE3
 15755                           fsr1h	equ	0xFE2
 15756                           fsr1l	equ	0xFE1
 15757                           indf2	equ	0xFDF
 15758                           postinc2	equ	0xFDE
 15759                           plusw2	equ	0xFDB
 15760                           fsr2h	equ	0xFDA
 15761                           fsr2l	equ	0xFD9
 15762                           status	equ	0xFD8
 15763                           
 15764 ;; *************** function _fat_read_from_file *****************
 15765 ;; Defined at:
 15766 ;;		line 752 in file "fat16.c"
 15767 ;; Parameters:    Size  Location     Type
 15768 ;;  file_number     1    wreg     unsigned char 
 15769 ;;  start_byte      4  105[BANK0 ] unsigned long 
 15770 ;;  length          4  109[BANK0 ] unsigned long 
 15771 ;;  data            2  113[BANK0 ] PTR unsigned char 
 15772 ;;		 -> ConfigFile_buffer(512), 
 15773 ;; Auto vars:     Size  Location     Type
 15774 ;;  file_number     1  119[BANK0 ] unsigned char 
 15775 ;;  root           32  125[BANK0 ] struct .
 15776 ;;  cluster_numb    2  123[BANK0 ] unsigned int 
 15777 ;;  cluster         2  121[BANK0 ] unsigned int 
 15778 ;;  return_code     1  120[BANK0 ] unsigned char 
 15779 ;; Return value:  Size  Location     Type
 15780 ;;                  1    wreg      unsigned char 
 15781 ;; Registers used:
 15782 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15783 ;; Tracked objects:
 15784 ;;		On entry : 0/0
 15785 ;;		On exit  : 0/0
 15786 ;;		Unchanged: 0/0
 15787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15788 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15789 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15790 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15791 ;;      Totals:         0      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15792 ;;Total ram usage:       52 bytes
 15793 ;; Hardware stack levels used:    1
 15794 ;; Hardware stack levels required when called:   18
 15795 ;; This function calls:
 15796 ;;		_fat_get_file_information
 15797 ;;		_fat_read_from_file_fast
 15798 ;; This function is called by:
 15799 ;;		_configFile_read
 15800 ;; This function uses a non-reentrant model
 15801 ;;
 15802                           
 15803                           	psect	text53
 15804  0121E0                     __ptext53:
 15805                           	opt stack 0
 15806  0121E0                     _fat_read_from_file:
 15807                           	opt stack 10
 15808                           
 15809                           ; BSR set to: 1
 15810                           ;incstack = 0
 15811                           ;fat_read_from_file@file_number stored from wreg
 15812  0121E0  0100               	movlb	0	; () banked
 15813  0121E2  6FD7               	movwf	fat_read_from_file@file_number& (0+255),b
 15814                           
 15815                           ;fat16.c: 754: rootEntry_t root;;fat16.c: 755: uint16_t cluster;;fat16.c: 756: uint16_t 
      +                          cluster_number;;fat16.c: 757: uint8_t return_code;;fat16.c: 760: return_code = fat_get_f
      +                          ile_information(file_number, &root);
 15816  0121E4  0EDD               	movlw	low fat_read_from_file@root
 15817  0121E6  0100               	movlb	0	; () banked
 15818  0121E8  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 15819  0121EA  0E00               	movlw	high fat_read_from_file@root
 15820  0121EC  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 15821  0121EE  51D7               	movf	fat_read_from_file@file_number& (0+255),w,b
 15822  0121F0  ECC5  F0A3         	call	_fat_get_file_information
 15823  0121F4  0100               	movlb	0	; () banked
 15824  0121F6  6FD8               	movwf	fat_read_from_file@return_code& (0+255),b
 15825                           
 15826                           ; BSR set to: 0
 15827                           ;fat16.c: 761: if(return_code!=0x00)
 15828  0121F8  51D8               	movf	fat_read_from_file@return_code& (0+255),w,b
 15829  0121FA  A4D8               	btfss	status,2,c
 15830  0121FC  0012               	return	
 15831                           
 15832                           ; BSR set to: 0
 15833                           ;fat16.c: 765: };fat16.c: 768: if(start_byte > root.fileSize)
 15834                           
 15835                           ; BSR set to: 0
 15836                           
 15837                           ; BSR set to: 0
 15838                           ;fat16.c: 762: {;fat16.c: 764: return return_code;;	Return value of _fat_read_from_file 
      +                          is never used
 15839  0121FE  51C9               	movf	fat_read_from_file@start_byte& (0+255),w,b
 15840  012200  5DF9               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 15841  012202  51CA               	movf	(fat_read_from_file@start_byte+1)& (0+255),w,b
 15842  012204  59FA               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 15843  012206  51CB               	movf	(fat_read_from_file@start_byte+2)& (0+255),w,b
 15844  012208  59FB               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 15845  01220A  51CC               	movf	(fat_read_from_file@start_byte+3)& (0+255),w,b
 15846  01220C  59FC               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 15847  01220E  A0D8               	btfss	status,0,c
 15848  012210  0012               	return	
 15849                           
 15850                           ; BSR set to: 0
 15851                           ;fat16.c: 772: };fat16.c: 774: if(start_byte+length > root.fileSize)
 15852                           
 15853                           ; BSR set to: 0
 15854                           
 15855                           ; BSR set to: 0
 15856                           ;fat16.c: 769: {;fat16.c: 771: return 0xFF;;	Return value of _fat_read_from_file is neve
      +                          r used
 15857  012212  51CD               	movf	fat_read_from_file@length& (0+255),w,b
 15858  012214  25C9               	addwf	fat_read_from_file@start_byte& (0+255),w,b
 15859  012216  6FD3               	movwf	??_fat_read_from_file& (0+255),b
 15860  012218  51CE               	movf	(fat_read_from_file@length+1)& (0+255),w,b
 15861  01221A  21CA               	addwfc	(fat_read_from_file@start_byte+1)& (0+255),w,b
 15862  01221C  6FD4               	movwf	(??_fat_read_from_file+1)& (0+255),b
 15863  01221E  51CF               	movf	(fat_read_from_file@length+2)& (0+255),w,b
 15864  012220  21CB               	addwfc	(fat_read_from_file@start_byte+2)& (0+255),w,b
 15865  012222  6FD5               	movwf	(??_fat_read_from_file+2)& (0+255),b
 15866  012224  51D0               	movf	(fat_read_from_file@length+3)& (0+255),w,b
 15867  012226  21CC               	addwfc	(fat_read_from_file@start_byte+3)& (0+255),w,b
 15868  012228  6FD6               	movwf	(??_fat_read_from_file+3)& (0+255),b
 15869  01222A  51D3               	movf	??_fat_read_from_file& (0+255),w,b
 15870  01222C  5DF9               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 15871  01222E  51D4               	movf	(??_fat_read_from_file+1)& (0+255),w,b
 15872  012230  59FA               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 15873  012232  51D5               	movf	(??_fat_read_from_file+2)& (0+255),w,b
 15874  012234  59FB               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 15875  012236  51D6               	movf	(??_fat_read_from_file+3)& (0+255),w,b
 15876  012238  59FC               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 15877  01223A  B0D8               	btfsc	status,0,c
 15878  01223C  D01D               	goto	l1910
 15879                           
 15880                           ; BSR set to: 0
 15881                           ;fat16.c: 775: {;fat16.c: 777: length = root.fileSize - start_byte;
 15882  01223E  C0C9  F0D3         	movff	fat_read_from_file@start_byte,??_fat_read_from_file
 15883  012242  C0CA  F0D4         	movff	fat_read_from_file@start_byte+1,??_fat_read_from_file+1
 15884  012246  C0CB  F0D5         	movff	fat_read_from_file@start_byte+2,??_fat_read_from_file+2
 15885  01224A  C0CC  F0D6         	movff	fat_read_from_file@start_byte+3,??_fat_read_from_file+3
 15886  01224E  1FD3               	comf	??_fat_read_from_file& (0+255),f,b
 15887  012250  1FD4               	comf	(??_fat_read_from_file+1)& (0+255),f,b
 15888  012252  1FD5               	comf	(??_fat_read_from_file+2)& (0+255),f,b
 15889  012254  1FD6               	comf	(??_fat_read_from_file+3)& (0+255),f,b
 15890  012256  2BD3               	incf	??_fat_read_from_file& (0+255),f,b
 15891  012258  0E00               	movlw	0
 15892  01225A  23D4               	addwfc	(??_fat_read_from_file+1)& (0+255),f,b
 15893  01225C  23D5               	addwfc	(??_fat_read_from_file+2)& (0+255),f,b
 15894  01225E  23D6               	addwfc	(??_fat_read_from_file+3)& (0+255),f,b
 15895  012260  51F9               	movf	(fat_read_from_file@root+28)& (0+255),w,b
 15896  012262  25D3               	addwf	??_fat_read_from_file& (0+255),w,b
 15897  012264  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 15898  012266  51FA               	movf	(fat_read_from_file@root+29)& (0+255),w,b
 15899  012268  21D4               	addwfc	(??_fat_read_from_file+1)& (0+255),w,b
 15900  01226A  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 15901  01226C  51FB               	movf	(fat_read_from_file@root+30)& (0+255),w,b
 15902  01226E  21D5               	addwfc	(??_fat_read_from_file+2)& (0+255),w,b
 15903  012270  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 15904  012272  51FC               	movf	(fat_read_from_file@root+31)& (0+255),w,b
 15905  012274  21D6               	addwfc	(??_fat_read_from_file+3)& (0+255),w,b
 15906  012276  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 15907  012278                     l1910:
 15908                           
 15909                           ; BSR set to: 0
 15910                           ;fat16.c: 778: };fat16.c: 781: cluster = root.firstCluster;
 15911                           
 15912                           ; BSR set to: 0
 15913  012278  C0F7  F0D9         	movff	fat_read_from_file@root+26,fat_read_from_file@cluster
 15914  01227C  C0F8  F0DA         	movff	fat_read_from_file@root+27,fat_read_from_file@cluster+1
 15915                           
 15916                           ; BSR set to: 0
 15917                           ;fat16.c: 782: cluster_number = 0;
 15918  012280  0E00               	movlw	0
 15919  012282  6FDC               	movwf	(fat_read_from_file@cluster_number+1)& (0+255),b
 15920  012284  0E00               	movlw	0
 15921  012286  6FDB               	movwf	fat_read_from_file@cluster_number& (0+255),b
 15922                           
 15923                           ; BSR set to: 0
 15924                           ;fat16.c: 785: return fat_read_from_file_fast(start_byte, length, data, &cluster, &clust
      +                          er_number);;	Return value of _fat_read_from_file is never used
 15925  012288  C0C9  F0A1         	movff	fat_read_from_file@start_byte,fat_read_from_file_fast@start_byte
 15926  01228C  C0CA  F0A2         	movff	fat_read_from_file@start_byte+1,fat_read_from_file_fast@start_byte+1
 15927  012290  C0CB  F0A3         	movff	fat_read_from_file@start_byte+2,fat_read_from_file_fast@start_byte+2
 15928  012294  C0CC  F0A4         	movff	fat_read_from_file@start_byte+3,fat_read_from_file_fast@start_byte+3
 15929  012298  C0CD  F0A5         	movff	fat_read_from_file@length,fat_read_from_file_fast@length
 15930  01229C  C0CE  F0A6         	movff	fat_read_from_file@length+1,fat_read_from_file_fast@length+1
 15931  0122A0  C0CF  F0A7         	movff	fat_read_from_file@length+2,fat_read_from_file_fast@length+2
 15932  0122A4  C0D0  F0A8         	movff	fat_read_from_file@length+3,fat_read_from_file_fast@length+3
 15933  0122A8  C0D1  F0A9         	movff	fat_read_from_file@data,fat_read_from_file_fast@data
 15934  0122AC  C0D2  F0AA         	movff	fat_read_from_file@data+1,fat_read_from_file_fast@data+1
 15935  0122B0  0ED9               	movlw	low fat_read_from_file@cluster
 15936  0122B2  6FAB               	movwf	fat_read_from_file_fast@cluster& (0+255),b
 15937  0122B4  0E00               	movlw	high fat_read_from_file@cluster
 15938  0122B6  6FAC               	movwf	(fat_read_from_file_fast@cluster+1)& (0+255),b
 15939  0122B8  0EDB               	movlw	low fat_read_from_file@cluster_number
 15940  0122BA  6FAD               	movwf	fat_read_from_file_fast@cluster_number& (0+255),b
 15941  0122BC  0E00               	movlw	high fat_read_from_file@cluster_number
 15942  0122BE  6FAE               	movwf	(fat_read_from_file_fast@cluster_number+1)& (0+255),b
 15943  0122C0  EC79  F06F         	call	_fat_read_from_file_fast	;wreg free
 15944  0122C4  0012               	return	
 15945  0122C6                     __end_of_fat_read_from_file:
 15946                           	opt stack 0
 15947                           tblptru	equ	0xFF8
 15948                           tblptrh	equ	0xFF7
 15949                           tblptrl	equ	0xFF6
 15950                           tablat	equ	0xFF5
 15951                           prodh	equ	0xFF4
 15952                           prodl	equ	0xFF3
 15953                           postinc0	equ	0xFEE
 15954                           wreg	equ	0xFE8
 15955                           postdec1	equ	0xFE5
 15956                           plusw1	equ	0xFE3
 15957                           fsr1h	equ	0xFE2
 15958                           fsr1l	equ	0xFE1
 15959                           indf2	equ	0xFDF
 15960                           postinc2	equ	0xFDE
 15961                           plusw2	equ	0xFDB
 15962                           fsr2h	equ	0xFDA
 15963                           fsr2l	equ	0xFD9
 15964                           status	equ	0xFD8
 15965                           
 15966 ;; *************** function _fat_read_from_file_fast *****************
 15967 ;; Defined at:
 15968 ;;		line 788 in file "fat16.c"
 15969 ;; Parameters:    Size  Location     Type
 15970 ;;  start_byte      4   65[BANK0 ] unsigned long 
 15971 ;;  length          4   69[BANK0 ] unsigned long 
 15972 ;;  data            2   73[BANK0 ] PTR unsigned char 
 15973 ;;		 -> ConfigFile_buffer(512), 
 15974 ;;  cluster         2   75[BANK0 ] PTR unsigned int 
 15975 ;;		 -> fat_read_from_file@cluster(2), 
 15976 ;;  cluster_numb    2   77[BANK0 ] PTR unsigned int 
 15977 ;;		 -> fat_read_from_file@cluster_number(2), 
 15978 ;; Auto vars:     Size  Location     Type
 15979 ;;  position        4  101[BANK0 ] unsigned long 
 15980 ;;  read_length     2   99[BANK0 ] unsigned int 
 15981 ;;  needed_clust    2   97[BANK0 ] unsigned int 
 15982 ;;  offset          2   95[BANK0 ] unsigned int 
 15983 ;;  working_clus    2   93[BANK0 ] unsigned int 
 15984 ;;  sector          2   91[BANK0 ] unsigned int 
 15985 ;; Return value:  Size  Location     Type
 15986 ;;                  1    wreg      unsigned char 
 15987 ;; Registers used:
 15988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15989 ;; Tracked objects:
 15990 ;;		On entry : 0/0
 15991 ;;		On exit  : 0/0
 15992 ;;		Unchanged: 0/0
 15993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15994 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15995 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15996 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15997 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15998 ;;Total ram usage:       40 bytes
 15999 ;; Hardware stack levels used:    1
 16000 ;; Hardware stack levels required when called:   17
 16001 ;; This function calls:
 16002 ;;		__data_sector_from_cluster
 16003 ;;		__find_nth_cluster
 16004 ;;		__read_fat
 16005 ;;		_flash_partial_read
 16006 ;; This function is called by:
 16007 ;;		_fat_read_from_file
 16008 ;; This function uses a non-reentrant model
 16009 ;;
 16010                           
 16011                           	psect	text54
 16012  00DEF2                     __ptext54:
 16013                           	opt stack 0
 16014  00DEF2                     _fat_read_from_file_fast:
 16015                           	opt stack 10
 16016                           
 16017                           ;fat16.c: 790: uint32_t position;;fat16.c: 791: uint16_t offset;;fat16.c: 792: uint16_t 
      +                          sector;;fat16.c: 793: uint16_t read_length;;fat16.c: 794: uint16_t working_cluster;;fat1
      +                          6.c: 795: uint16_t needed_cluster;;fat16.c: 798: needed_cluster = (uint16_t) (start_byte
      +                          >>9);
 16018                           
 16019                           ;incstack = 0
 16020  00DEF2  C0A1  F0AF         	movff	fat_read_from_file_fast@start_byte,??_fat_read_from_file_fast
 16021  00DEF6  C0A2  F0B0         	movff	fat_read_from_file_fast@start_byte+1,??_fat_read_from_file_fast+1
 16022  00DEFA  C0A3  F0B1         	movff	fat_read_from_file_fast@start_byte+2,??_fat_read_from_file_fast+2
 16023  00DEFE  C0A4  F0B2         	movff	fat_read_from_file_fast@start_byte+3,??_fat_read_from_file_fast+3
 16024  00DF02  0E0A               	movlw	10
 16025  00DF04  D006               	goto	u14760
 16026  00DF06                     u14765:
 16027  00DF06  0100               	movlb	0	; () banked
 16028  00DF08  90D8               	bcf	status,0,c
 16029  00DF0A  33B2               	rrcf	(??_fat_read_from_file_fast+3)& (0+255),f,b
 16030  00DF0C  33B1               	rrcf	(??_fat_read_from_file_fast+2)& (0+255),f,b
 16031  00DF0E  33B0               	rrcf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16032  00DF10  33AF               	rrcf	??_fat_read_from_file_fast& (0+255),f,b
 16033  00DF12                     u14760:
 16034  00DF12  2EE8               	decfsz	wreg,f,c
 16035  00DF14  D7F8               	goto	u14765
 16036  00DF16  C0AF  F0C1         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@needed_cluster
 16037  00DF1A  C0B0  F0C2         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@needed_cluster+1
 16038                           
 16039                           ; BSR set to: 0
 16040                           ;fat16.c: 801: if((*cluster_number) > needed_cluster)
 16041  00DF1E  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 16042  00DF22  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 16043  00DF26  50DE               	movf	postinc2,w,c
 16044  00DF28  5DC1               	subwf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 16045  00DF2A  50DE               	movf	postinc2,w,c
 16046  00DF2C  59C2               	subwfb	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 16047  00DF2E  B0D8               	btfsc	status,0,c
 16048  00DF30  D002               	goto	l1913
 16049                           
 16050                           ; BSR set to: 0
 16051                           ;fat16.c: 802: {;fat16.c: 803: return 0xFF;
 16052  00DF32  0EFF               	movlw	255
 16053                           
 16054                           ; BSR set to: 0
 16055  00DF34  0012               	return	
 16056  00DF36                     l1913:
 16057                           
 16058                           ; BSR set to: 0
 16059                           ;fat16.c: 804: };fat16.c: 807: (*cluster) = _find_nth_cluster((*cluster), (needed_cluste
      +                          r-(*cluster_number)));
 16060                           
 16061                           ; BSR set to: 0
 16062  00DF36  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 16063  00DF3A  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 16064  00DF3E  CFDE F097          	movff	postinc2,__find_nth_cluster@cluster
 16065  00DF42  CFDD F098          	movff	postdec2,__find_nth_cluster@cluster+1
 16066  00DF46  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 16067  00DF4A  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 16068  00DF4E  CFDE F0AF          	movff	postinc2,??_fat_read_from_file_fast
 16069  00DF52  CFDD F0B0          	movff	postdec2,??_fat_read_from_file_fast+1
 16070  00DF56  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16071  00DF58  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16072  00DF5A  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16073  00DF5C  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16074  00DF5E  51C1               	movf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 16075  00DF60  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16076  00DF62  6F99               	movwf	__find_nth_cluster@n& (0+255),b
 16077  00DF64  51C2               	movf	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 16078  00DF66  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16079  00DF68  6F9A               	movwf	(__find_nth_cluster@n+1)& (0+255),b
 16080  00DF6A  ECCA  F09C         	call	__find_nth_cluster	;wreg free
 16081  00DF6E  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 16082  00DF72  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 16083  00DF76  0100               	movlb	0	; () banked
 16084  00DF78  C097  FFDE         	movff	?__find_nth_cluster,postinc2
 16085  00DF7C  C098  FFDD         	movff	?__find_nth_cluster+1,postdec2
 16086                           
 16087                           ; BSR set to: 0
 16088                           ;fat16.c: 810: (*cluster_number) = needed_cluster;
 16089  00DF80  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 16090  00DF84  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 16091  00DF88  C0C1  FFDE         	movff	fat_read_from_file_fast@needed_cluster,postinc2
 16092  00DF8C  C0C2  FFDD         	movff	fat_read_from_file_fast@needed_cluster+1,postdec2
 16093                           
 16094                           ; BSR set to: 0
 16095                           ;fat16.c: 814: working_cluster = (*cluster);
 16096  00DF90  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 16097  00DF94  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 16098  00DF98  CFDE F0BD          	movff	postinc2,fat_read_from_file_fast@working_cluster
 16099  00DF9C  CFDD F0BE          	movff	postdec2,fat_read_from_file_fast@working_cluster+1
 16100                           
 16101                           ; BSR set to: 0
 16102                           ;fat16.c: 817: position = (needed_cluster << 9);
 16103  00DFA0  C0C1  F0AF         	movff	fat_read_from_file_fast@needed_cluster,??_fat_read_from_file_fast
 16104  00DFA4  C0C2  F0B0         	movff	fat_read_from_file_fast@needed_cluster+1,??_fat_read_from_file_fast+1
 16105  00DFA8  0E09               	movlw	9
 16106  00DFAA                     u14785:
 16107  00DFAA  90D8               	bcf	status,0,c
 16108  00DFAC  37AF               	rlcf	??_fat_read_from_file_fast& (0+255),f,b
 16109  00DFAE  37B0               	rlcf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16110  00DFB0  2EE8               	decfsz	wreg,f,c
 16111  00DFB2  D7FB               	goto	u14785
 16112  00DFB4  C0AF  F0C5         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@position
 16113  00DFB8  C0B0  F0C6         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@position+1
 16114  00DFBC  6BC7               	clrf	(fat_read_from_file_fast@position+2)& (0+255),b
 16115  00DFBE  6BC8               	clrf	(fat_read_from_file_fast@position+3)& (0+255),b
 16116                           
 16117                           ; BSR set to: 0
 16118                           ;fat16.c: 818: offset = start_byte - position;
 16119  00DFC0  C0C5  F0AF         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 16120  00DFC4  C0C6  F0B0         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 16121  00DFC8  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16122  00DFCA  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16123  00DFCC  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16124  00DFCE  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16125  00DFD0  51A1               	movf	fat_read_from_file_fast@start_byte& (0+255),w,b
 16126  00DFD2  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16127  00DFD4  6FBF               	movwf	fat_read_from_file_fast@offset& (0+255),b
 16128  00DFD6  51A2               	movf	(fat_read_from_file_fast@start_byte+1)& (0+255),w,b
 16129  00DFD8  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16130  00DFDA  6FC0               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 16131                           
 16132                           ; BSR set to: 0
 16133                           ;fat16.c: 821: position = 0;
 16134  00DFDC  0E00               	movlw	0
 16135  00DFDE  6FC5               	movwf	fat_read_from_file_fast@position& (0+255),b
 16136  00DFE0  0E00               	movlw	0
 16137  00DFE2  6FC6               	movwf	(fat_read_from_file_fast@position+1)& (0+255),b
 16138  00DFE4  0E00               	movlw	0
 16139  00DFE6  6FC7               	movwf	(fat_read_from_file_fast@position+2)& (0+255),b
 16140  00DFE8  0E00               	movlw	0
 16141  00DFEA  6FC8               	movwf	(fat_read_from_file_fast@position+3)& (0+255),b
 16142                           
 16143                           ;fat16.c: 822: while(position < length)
 16144  00DFEC  D089               	goto	l1915
 16145  00DFEE                     
 16146                           ; BSR set to: 0
 16147                           ;fat16.c: 823: {;fat16.c: 825: if(offset==512)
 16148                           
 16149                           ; BSR set to: 0
 16150  00DFEE  0E02               	movlw	2
 16151  00DFF0  19C0               	xorwf	(fat_read_from_file_fast@offset+1)& (0+255),w,b
 16152  00DFF2  11BF               	iorwf	fat_read_from_file_fast@offset& (0+255),w,b
 16153  00DFF4  A4D8               	btfss	status,2,c
 16154  00DFF6  D00F               	goto	l1917
 16155                           
 16156                           ; BSR set to: 0
 16157                           ;fat16.c: 826: {;fat16.c: 828: working_cluster = _read_fat(working_cluster);
 16158  00DFF8  C0BD  F08F         	movff	fat_read_from_file_fast@working_cluster,__read_fat@cluster
 16159  00DFFC  C0BE  F090         	movff	fat_read_from_file_fast@working_cluster+1,__read_fat@cluster+1
 16160  00E000  EC01  F0A9         	call	__read_fat	;wreg free
 16161  00E004  C08F  F0BD         	movff	?__read_fat,fat_read_from_file_fast@working_cluster
 16162  00E008  C090  F0BE         	movff	?__read_fat+1,fat_read_from_file_fast@working_cluster+1
 16163                           
 16164                           ;fat16.c: 829: offset = 0;
 16165  00E00C  0E00               	movlw	0
 16166  00E00E  0100               	movlb	0	; () banked
 16167  00E010  6FC0               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 16168  00E012  0E00               	movlw	0
 16169  00E014  6FBF               	movwf	fat_read_from_file_fast@offset& (0+255),b
 16170  00E016                     l1917:
 16171                           
 16172                           ; BSR set to: 0
 16173                           ;fat16.c: 830: };fat16.c: 833: sector = _data_sector_from_cluster(working_cluster);
 16174                           
 16175                           ; BSR set to: 0
 16176  00E016  C0BD  F060         	movff	fat_read_from_file_fast@working_cluster,__data_sector_from_cluster@fat_cluster
 16177  00E01A  C0BE  F061         	movff	fat_read_from_file_fast@working_cluster+1,__data_sector_from_cluster@fat_cluster+
      +                          1
 16178  00E01E  ECF2  F0B1         	call	__data_sector_from_cluster	;wreg free
 16179  00E022  C060  F0BB         	movff	?__data_sector_from_cluster,fat_read_from_file_fast@sector
 16180  00E026  C061  F0BC         	movff	?__data_sector_from_cluster+1,fat_read_from_file_fast@sector+1
 16181                           
 16182                           ;fat16.c: 836: read_length = 512 - offset;
 16183  00E02A  C0BF  F0AF         	movff	fat_read_from_file_fast@offset,??_fat_read_from_file_fast
 16184  00E02E  C0C0  F0B0         	movff	fat_read_from_file_fast@offset+1,??_fat_read_from_file_fast+1
 16185  00E032  0100               	movlb	0	; () banked
 16186  00E034  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16187  00E036  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16188  00E038  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16189  00E03A  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16190  00E03C  0E00               	movlw	0
 16191  00E03E  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16192  00E040  6FC3               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 16193  00E042  0E02               	movlw	2
 16194  00E044  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16195  00E046  6FC4               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 16196                           
 16197                           ; BSR set to: 0
 16198                           ;fat16.c: 837: if(read_length > (length-position))
 16199  00E048  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 16200  00E04A  6FAF               	movwf	??_fat_read_from_file_fast& (0+255),b
 16201  00E04C  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 16202  00E04E  6FB0               	movwf	(??_fat_read_from_file_fast+1)& (0+255),b
 16203  00E050  6BB1               	clrf	(??_fat_read_from_file_fast+2)& (0+255),b
 16204  00E052  6BB2               	clrf	(??_fat_read_from_file_fast+3)& (0+255),b
 16205  00E054  C0C5  F0B3         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast+4
 16206  00E058  C0C6  F0B4         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+5
 16207  00E05C  C0C7  F0B5         	movff	fat_read_from_file_fast@position+2,??_fat_read_from_file_fast+6
 16208  00E060  C0C8  F0B6         	movff	fat_read_from_file_fast@position+3,??_fat_read_from_file_fast+7
 16209  00E064  1FB3               	comf	(??_fat_read_from_file_fast+4)& (0+255),f,b
 16210  00E066  1FB4               	comf	(??_fat_read_from_file_fast+5)& (0+255),f,b
 16211  00E068  1FB5               	comf	(??_fat_read_from_file_fast+6)& (0+255),f,b
 16212  00E06A  1FB6               	comf	(??_fat_read_from_file_fast+7)& (0+255),f,b
 16213  00E06C  2BB3               	incf	(??_fat_read_from_file_fast+4)& (0+255),f,b
 16214  00E06E  0E00               	movlw	0
 16215  00E070  23B4               	addwfc	(??_fat_read_from_file_fast+5)& (0+255),f,b
 16216  00E072  23B5               	addwfc	(??_fat_read_from_file_fast+6)& (0+255),f,b
 16217  00E074  23B6               	addwfc	(??_fat_read_from_file_fast+7)& (0+255),f,b
 16218  00E076  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 16219  00E078  25B3               	addwf	(??_fat_read_from_file_fast+4)& (0+255),w,b
 16220  00E07A  6FB7               	movwf	(??_fat_read_from_file_fast+8)& (0+255),b
 16221  00E07C  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 16222  00E07E  21B4               	addwfc	(??_fat_read_from_file_fast+5)& (0+255),w,b
 16223  00E080  6FB8               	movwf	(??_fat_read_from_file_fast+9)& (0+255),b
 16224  00E082  51A7               	movf	(fat_read_from_file_fast@length+2)& (0+255),w,b
 16225  00E084  21B5               	addwfc	(??_fat_read_from_file_fast+6)& (0+255),w,b
 16226  00E086  6FB9               	movwf	(??_fat_read_from_file_fast+10)& (0+255),b
 16227  00E088  51A8               	movf	(fat_read_from_file_fast@length+3)& (0+255),w,b
 16228  00E08A  21B6               	addwfc	(??_fat_read_from_file_fast+7)& (0+255),w,b
 16229  00E08C  6FBA               	movwf	(??_fat_read_from_file_fast+11)& (0+255),b
 16230  00E08E  51AF               	movf	??_fat_read_from_file_fast& (0+255),w,b
 16231  00E090  5DB7               	subwf	(??_fat_read_from_file_fast+8)& (0+255),w,b
 16232  00E092  51B0               	movf	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16233  00E094  59B8               	subwfb	(??_fat_read_from_file_fast+9)& (0+255),w,b
 16234  00E096  51B1               	movf	(??_fat_read_from_file_fast+2)& (0+255),w,b
 16235  00E098  59B9               	subwfb	(??_fat_read_from_file_fast+10)& (0+255),w,b
 16236  00E09A  51B2               	movf	(??_fat_read_from_file_fast+3)& (0+255),w,b
 16237  00E09C  59BA               	subwfb	(??_fat_read_from_file_fast+11)& (0+255),w,b
 16238  00E09E  B0D8               	btfsc	status,0,c
 16239  00E0A0  D00E               	goto	l1918
 16240                           
 16241                           ; BSR set to: 0
 16242                           ;fat16.c: 838: {;fat16.c: 840: read_length = length - position;
 16243  00E0A2  C0C5  F0AF         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 16244  00E0A6  C0C6  F0B0         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 16245  00E0AA  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16246  00E0AC  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16247  00E0AE  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16248  00E0B0  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16249  00E0B2  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 16250  00E0B4  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16251  00E0B6  6FC3               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 16252  00E0B8  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 16253  00E0BA  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16254  00E0BC  6FC4               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 16255  00E0BE                     l1918:
 16256                           
 16257                           ; BSR set to: 0
 16258                           ;fat16.c: 841: };fat16.c: 844: flash_partial_read(sector, offset, read_length, &data[pos
      +                          ition]);
 16259                           
 16260                           ; BSR set to: 0
 16261  00E0BE  C0BB  F087         	movff	fat_read_from_file_fast@sector,flash_partial_read@page
 16262  00E0C2  C0BC  F088         	movff	fat_read_from_file_fast@sector+1,flash_partial_read@page+1
 16263  00E0C6  C0BF  F089         	movff	fat_read_from_file_fast@offset,flash_partial_read@start
 16264  00E0CA  C0C0  F08A         	movff	fat_read_from_file_fast@offset+1,flash_partial_read@start+1
 16265  00E0CE  C0C3  F08B         	movff	fat_read_from_file_fast@read_length,flash_partial_read@length
 16266  00E0D2  C0C4  F08C         	movff	fat_read_from_file_fast@read_length+1,flash_partial_read@length+1
 16267  00E0D6  51C5               	movf	fat_read_from_file_fast@position& (0+255),w,b
 16268  00E0D8  25A9               	addwf	fat_read_from_file_fast@data& (0+255),w,b
 16269  00E0DA  6F8D               	movwf	flash_partial_read@data& (0+255),b
 16270  00E0DC  51C6               	movf	(fat_read_from_file_fast@position+1)& (0+255),w,b
 16271  00E0DE  21AA               	addwfc	(fat_read_from_file_fast@data+1)& (0+255),w,b
 16272  00E0E0  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 16273  00E0E2  ECBA  F0B0         	call	_flash_partial_read	;wreg free
 16274                           
 16275                           ;fat16.c: 847: position += read_length;
 16276  00E0E6  0100               	movlb	0	; () banked
 16277  00E0E8  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 16278  00E0EA  27C5               	addwf	fat_read_from_file_fast@position& (0+255),f,b
 16279  00E0EC  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 16280  00E0EE  23C6               	addwfc	(fat_read_from_file_fast@position+1)& (0+255),f,b
 16281  00E0F0  0E00               	movlw	0
 16282  00E0F2  23C7               	addwfc	(fat_read_from_file_fast@position+2)& (0+255),f,b
 16283  00E0F4  0E00               	movlw	0
 16284  00E0F6  23C8               	addwfc	(fat_read_from_file_fast@position+3)& (0+255),f,b
 16285                           
 16286                           ; BSR set to: 0
 16287                           ;fat16.c: 848: offset += read_length;
 16288  00E0F8  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 16289  00E0FA  27BF               	addwf	fat_read_from_file_fast@offset& (0+255),f,b
 16290  00E0FC  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 16291  00E0FE  23C0               	addwfc	(fat_read_from_file_fast@offset+1)& (0+255),f,b
 16292  00E100                     l1915:
 16293                           
 16294                           ; BSR set to: 0
 16295                           
 16296                           ; BSR set to: 0
 16297  00E100  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 16298  00E102  5DC5               	subwf	fat_read_from_file_fast@position& (0+255),w,b
 16299  00E104  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 16300  00E106  59C6               	subwfb	(fat_read_from_file_fast@position+1)& (0+255),w,b
 16301  00E108  51A7               	movf	(fat_read_from_file_fast@length+2)& (0+255),w,b
 16302  00E10A  59C7               	subwfb	(fat_read_from_file_fast@position+2)& (0+255),w,b
 16303  00E10C  51A8               	movf	(fat_read_from_file_fast@length+3)& (0+255),w,b
 16304  00E10E  59C8               	subwfb	(fat_read_from_file_fast@position+3)& (0+255),w,b
 16305  00E110  A0D8               	btfss	status,0,c
 16306  00E112  D76D               	goto	l1916
 16307                           
 16308                           ; BSR set to: 0
 16309                           ;fat16.c: 849: };fat16.c: 852: return 0x00;
 16310                           
 16311                           ; BSR set to: 0
 16312  00E114  0E00               	movlw	0
 16313  00E116  0012               	return	
 16314  00E118                     __end_of_fat_read_from_file_fast:
 16315                           	opt stack 0
 16316                           tblptru	equ	0xFF8
 16317                           tblptrh	equ	0xFF7
 16318                           tblptrl	equ	0xFF6
 16319                           tablat	equ	0xFF5
 16320                           prodh	equ	0xFF4
 16321                           prodl	equ	0xFF3
 16322                           postinc0	equ	0xFEE
 16323                           wreg	equ	0xFE8
 16324                           postdec1	equ	0xFE5
 16325                           plusw1	equ	0xFE3
 16326                           fsr1h	equ	0xFE2
 16327                           fsr1l	equ	0xFE1
 16328                           indf2	equ	0xFDF
 16329                           postinc2	equ	0xFDE
 16330                           postdec2	equ	0xFDD
 16331                           plusw2	equ	0xFDB
 16332                           fsr2h	equ	0xFDA
 16333                           fsr2l	equ	0xFD9
 16334                           status	equ	0xFD8
 16335                           
 16336 ;; *************** function __find_nth_cluster *****************
 16337 ;; Defined at:
 16338 ;;		line 183 in file "fat16.c"
 16339 ;; Parameters:    Size  Location     Type
 16340 ;;  cluster         2   55[BANK0 ] unsigned int 
 16341 ;;  n               2   57[BANK0 ] unsigned int 
 16342 ;; Auto vars:     Size  Location     Type
 16343 ;;  sector          2   63[BANK0 ] unsigned int 
 16344 ;;  sector_in_bu    2   61[BANK0 ] unsigned int 
 16345 ;;  offset          2   59[BANK0 ] unsigned int 
 16346 ;; Return value:  Size  Location     Type
 16347 ;;                  2   55[BANK0 ] unsigned int 
 16348 ;; Registers used:
 16349 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16350 ;; Tracked objects:
 16351 ;;		On entry : 0/0
 16352 ;;		On exit  : 0/0
 16353 ;;		Unchanged: 0/0
 16354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16355 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16356 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16358 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16359 ;;Total ram usage:       10 bytes
 16360 ;; Hardware stack levels used:    1
 16361 ;; Hardware stack levels required when called:   16
 16362 ;; This function calls:
 16363 ;;		__fat_offset_from_cluster
 16364 ;;		__fat_sector_from_cluster
 16365 ;;		__read_fat
 16366 ;;		__read_value_from_offset
 16367 ;;		_flash_sector_read
 16368 ;; This function is called by:
 16369 ;;		_fat_read_from_file_fast
 16370 ;;		_fat_modify_file
 16371 ;;		_fat_copy_sector_to_buffer
 16372 ;; This function uses a non-reentrant model
 16373 ;;
 16374                           
 16375                           	psect	text55
 16376  013994                     __ptext55:
 16377                           	opt stack 0
 16378  013994                     __find_nth_cluster:
 16379                           	opt stack 11
 16380                           
 16381                           ;fat16.c: 185: uint16_t sector;;fat16.c: 186: uint16_t offset;;fat16.c: 187: uint16_t se
      +                          ctor_in_buffer = 0;
 16382                           
 16383                           ; BSR set to: 0
 16384                           ;incstack = 0
 16385  013994  0E00               	movlw	0
 16386  013996  0100               	movlb	0	; () banked
 16387  013998  6F9E               	movwf	(__find_nth_cluster@sector_in_buffer+1)& (0+255),b
 16388  01399A  0E00               	movlw	0
 16389  01399C  6F9D               	movwf	__find_nth_cluster@sector_in_buffer& (0+255),b
 16390                           
 16391                           ; BSR set to: 0
 16392                           ;fat16.c: 190: if(n==1)
 16393  01399E  0599               	decf	__find_nth_cluster@n& (0+255),w,b
 16394  0139A0  119A               	iorwf	(__find_nth_cluster@n+1)& (0+255),w,b
 16395  0139A2  A4D8               	btfss	status,2,c
 16396  0139A4  D040               	goto	l1800
 16397                           
 16398                           ; BSR set to: 0
 16399                           ;fat16.c: 191: {;fat16.c: 192: return _read_fat(cluster);
 16400  0139A6  C097  F08F         	movff	__find_nth_cluster@cluster,__read_fat@cluster
 16401  0139AA  C098  F090         	movff	__find_nth_cluster@cluster+1,__read_fat@cluster+1
 16402  0139AE  EC01  F0A9         	call	__read_fat	;wreg free
 16403  0139B2  C08F  F097         	movff	?__read_fat,?__find_nth_cluster
 16404  0139B6  C090  F098         	movff	?__read_fat+1,?__find_nth_cluster+1
 16405  0139BA  0012               	return	
 16406  0139BC                     
 16407                           ;fat16.c: 196: {;fat16.c: 198: sector = _fat_sector_from_cluster(cluster);
 16408  0139BC  C097  F060         	movff	__find_nth_cluster@cluster,__fat_sector_from_cluster@cluster
 16409  0139C0  C098  F061         	movff	__find_nth_cluster@cluster+1,__fat_sector_from_cluster@cluster+1
 16410  0139C4  EC99  F0B1         	call	__fat_sector_from_cluster	;wreg free
 16411  0139C8  C060  F09F         	movff	?__fat_sector_from_cluster,__find_nth_cluster@sector
 16412  0139CC  C061  F0A0         	movff	?__fat_sector_from_cluster+1,__find_nth_cluster@sector+1
 16413                           
 16414                           ;fat16.c: 199: offset = _fat_offset_from_cluster(cluster);
 16415  0139D0  C097  F060         	movff	__find_nth_cluster@cluster,__fat_offset_from_cluster@cluster
 16416  0139D4  C098  F061         	movff	__find_nth_cluster@cluster+1,__fat_offset_from_cluster@cluster+1
 16417  0139D8  ECA6  F0B1         	call	__fat_offset_from_cluster	;wreg free
 16418  0139DC  C060  F09B         	movff	?__fat_offset_from_cluster,__find_nth_cluster@offset
 16419  0139E0  C061  F09C         	movff	?__fat_offset_from_cluster+1,__find_nth_cluster@offset+1
 16420                           
 16421                           ;fat16.c: 202: if(sector != sector_in_buffer)
 16422  0139E4  0100               	movlb	0	; () banked
 16423  0139E6  519D               	movf	__find_nth_cluster@sector_in_buffer& (0+255),w,b
 16424  0139E8  199F               	xorwf	__find_nth_cluster@sector& (0+255),w,b
 16425  0139EA  E104               	bnz	u12810
 16426  0139EC  519E               	movf	(__find_nth_cluster@sector_in_buffer+1)& (0+255),w,b
 16427  0139EE  19A0               	xorwf	(__find_nth_cluster@sector+1)& (0+255),w,b
 16428  0139F0  B4D8               	btfsc	status,2,c
 16429  0139F2  D00A               	goto	l1802
 16430  0139F4                     u12810:
 16431                           
 16432                           ; BSR set to: 0
 16433                           ;fat16.c: 203: {;fat16.c: 204: flash_sector_read(sector, buffer);
 16434  0139F4  C09F  F087         	movff	__find_nth_cluster@sector,flash_sector_read@page
 16435  0139F8  C0A0  F088         	movff	__find_nth_cluster@sector+1,flash_sector_read@page+1
 16436  0139FC  0E00               	movlw	low _buffer
 16437  0139FE  6F89               	movwf	flash_sector_read@data& (0+255),b
 16438  013A00  0E0A               	movlw	high _buffer
 16439  013A02  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 16440  013A04  EC92  F0B0         	call	_flash_sector_read	;wreg free
 16441  013A08                     l1802:
 16442                           
 16443                           ;fat16.c: 205: };fat16.c: 208: cluster = _read_value_from_offset(offset, buffer);
 16444  013A08  C09B  F060         	movff	__find_nth_cluster@offset,__read_value_from_offset@offset
 16445  013A0C  C09C  F061         	movff	__find_nth_cluster@offset+1,__read_value_from_offset@offset+1
 16446  013A10  0E00               	movlw	low _buffer
 16447  013A12  0100               	movlb	0	; () banked
 16448  013A14  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 16449  013A16  0E0A               	movlw	high _buffer
 16450  013A18  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 16451  013A1A  EC8B  F0AC         	call	__read_value_from_offset	;wreg free
 16452  013A1E  C060  F097         	movff	?__read_value_from_offset,__find_nth_cluster@cluster
 16453  013A22  C061  F098         	movff	?__read_value_from_offset+1,__find_nth_cluster@cluster+1
 16454  013A26                     l1800:
 16455  013A26  0100               	movlb	0	; () banked
 16456  013A28  5199               	movf	__find_nth_cluster@n& (0+255),w,b
 16457  013A2A  119A               	iorwf	(__find_nth_cluster@n+1)& (0+255),w,b
 16458  013A2C  A4D8               	btfss	status,2,c
 16459  013A2E  D7C6               	goto	l1801
 16460                           
 16461                           ; BSR set to: 0
 16462                           ;fat16.c: 209: };fat16.c: 211: return cluster;
 16463  013A30  C097  F097         	movff	__find_nth_cluster@cluster,?__find_nth_cluster
 16464  013A34  C098  F098         	movff	__find_nth_cluster@cluster+1,?__find_nth_cluster+1
 16465  013A38  0012               	return		;funcret
 16466  013A3A                     __end_of__find_nth_cluster:
 16467                           	opt stack 0
 16468                           tblptru	equ	0xFF8
 16469                           tblptrh	equ	0xFF7
 16470                           tblptrl	equ	0xFF6
 16471                           tablat	equ	0xFF5
 16472                           prodh	equ	0xFF4
 16473                           prodl	equ	0xFF3
 16474                           postinc0	equ	0xFEE
 16475                           wreg	equ	0xFE8
 16476                           postdec1	equ	0xFE5
 16477                           plusw1	equ	0xFE3
 16478                           fsr1h	equ	0xFE2
 16479                           fsr1l	equ	0xFE1
 16480                           indf2	equ	0xFDF
 16481                           postinc2	equ	0xFDE
 16482                           postdec2	equ	0xFDD
 16483                           plusw2	equ	0xFDB
 16484                           fsr2h	equ	0xFDA
 16485                           fsr2l	equ	0xFD9
 16486                           status	equ	0xFD8
 16487                           
 16488 ;; *************** function __read_value_from_offset *****************
 16489 ;; Defined at:
 16490 ;;		line 115 in file "fat16.c"
 16491 ;; Parameters:    Size  Location     Type
 16492 ;;  offset          2    0[BANK0 ] unsigned int 
 16493 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 16494 ;;		 -> buffer(512), 
 16495 ;; Auto vars:     Size  Location     Type
 16496 ;;  value           2    7[BANK0 ] unsigned int 
 16497 ;; Return value:  Size  Location     Type
 16498 ;;                  2    0[BANK0 ] unsigned int 
 16499 ;; Registers used:
 16500 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16501 ;; Tracked objects:
 16502 ;;		On entry : 0/0
 16503 ;;		On exit  : 0/0
 16504 ;;		Unchanged: 0/0
 16505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16506 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16507 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16508 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16509 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16510 ;;Total ram usage:        9 bytes
 16511 ;; Hardware stack levels used:    1
 16512 ;; Hardware stack levels required when called:   10
 16513 ;; This function calls:
 16514 ;;		Nothing
 16515 ;; This function is called by:
 16516 ;;		__find_nth_cluster
 16517 ;;		__make_cluster_chain
 16518 ;; This function uses a non-reentrant model
 16519 ;;
 16520                           
 16521                           	psect	text56
 16522  015916                     __ptext56:
 16523                           	opt stack 0
 16524  015916                     __read_value_from_offset:
 16525                           	opt stack 16
 16526                           
 16527                           ;fat16.c: 117: uint16_t value;;fat16.c: 118: value = buffer[offset+1];
 16528                           
 16529                           ;incstack = 0
 16530  015916  0E01               	movlw	1
 16531  015918  0100               	movlb	0	; () banked
 16532  01591A  2560               	addwf	__read_value_from_offset@offset& (0+255),w,b
 16533  01591C  6F64               	movwf	??__read_value_from_offset& (0+255),b
 16534  01591E  0E00               	movlw	0
 16535  015920  2161               	addwfc	(__read_value_from_offset@offset+1)& (0+255),w,b
 16536  015922  6F65               	movwf	(??__read_value_from_offset+1)& (0+255),b
 16537  015924  5164               	movf	??__read_value_from_offset& (0+255),w,b
 16538  015926  2562               	addwf	__read_value_from_offset@buffer& (0+255),w,b
 16539  015928  6ED9               	movwf	fsr2l,c
 16540  01592A  5165               	movf	(??__read_value_from_offset+1)& (0+255),w,b
 16541  01592C  2163               	addwfc	(__read_value_from_offset@buffer+1)& (0+255),w,b
 16542  01592E  6EDA               	movwf	fsr2h,c
 16543  015930  50DF               	movf	indf2,w,c
 16544  015932  6F66               	movwf	(??__read_value_from_offset+2)& (0+255),b
 16545  015934  5166               	movf	(??__read_value_from_offset+2)& (0+255),w,b
 16546  015936  6F67               	movwf	__read_value_from_offset@value& (0+255),b
 16547  015938  6B68               	clrf	(__read_value_from_offset@value+1)& (0+255),b
 16548                           
 16549                           ; BSR set to: 0
 16550                           ;fat16.c: 119: value <<= 8;
 16551  01593A  5167               	movf	__read_value_from_offset@value& (0+255),w,b
 16552  01593C  6F68               	movwf	(__read_value_from_offset@value+1)& (0+255),b
 16553  01593E  6B67               	clrf	__read_value_from_offset@value& (0+255),b
 16554                           
 16555                           ; BSR set to: 0
 16556                           ;fat16.c: 120: value |= buffer[offset];
 16557  015940  5160               	movf	__read_value_from_offset@offset& (0+255),w,b
 16558  015942  2562               	addwf	__read_value_from_offset@buffer& (0+255),w,b
 16559  015944  6ED9               	movwf	fsr2l,c
 16560  015946  5161               	movf	(__read_value_from_offset@offset+1)& (0+255),w,b
 16561  015948  2163               	addwfc	(__read_value_from_offset@buffer+1)& (0+255),w,b
 16562  01594A  6EDA               	movwf	fsr2h,c
 16563  01594C  50DF               	movf	indf2,w,c
 16564  01594E  6F64               	movwf	??__read_value_from_offset& (0+255),b
 16565  015950  5164               	movf	??__read_value_from_offset& (0+255),w,b
 16566  015952  1367               	iorwf	__read_value_from_offset@value& (0+255),f,b
 16567                           
 16568                           ; BSR set to: 0
 16569                           ;fat16.c: 121: return value;
 16570  015954  C067  F060         	movff	__read_value_from_offset@value,?__read_value_from_offset
 16571  015958  C068  F061         	movff	__read_value_from_offset@value+1,?__read_value_from_offset+1
 16572  01595C  0012               	return	
 16573  01595E                     __end_of__read_value_from_offset:
 16574                           	opt stack 0
 16575                           tblptru	equ	0xFF8
 16576                           tblptrh	equ	0xFF7
 16577                           tblptrl	equ	0xFF6
 16578                           tablat	equ	0xFF5
 16579                           prodh	equ	0xFF4
 16580                           prodl	equ	0xFF3
 16581                           postinc0	equ	0xFEE
 16582                           wreg	equ	0xFE8
 16583                           postdec1	equ	0xFE5
 16584                           plusw1	equ	0xFE3
 16585                           fsr1h	equ	0xFE2
 16586                           fsr1l	equ	0xFE1
 16587                           indf2	equ	0xFDF
 16588                           postinc2	equ	0xFDE
 16589                           postdec2	equ	0xFDD
 16590                           plusw2	equ	0xFDB
 16591                           fsr2h	equ	0xFDA
 16592                           fsr2l	equ	0xFD9
 16593                           status	equ	0xFD8
 16594                           
 16595 ;; *************** function __read_fat *****************
 16596 ;; Defined at:
 16597 ;;		line 457 in file "fat16.c"
 16598 ;; Parameters:    Size  Location     Type
 16599 ;;  cluster         2   47[BANK0 ] unsigned int 
 16600 ;; Auto vars:     Size  Location     Type
 16601 ;;  value           2   53[BANK0 ] unsigned int 
 16602 ;;  offset          2   51[BANK0 ] unsigned int 
 16603 ;;  sector          2   49[BANK0 ] unsigned int 
 16604 ;; Return value:  Size  Location     Type
 16605 ;;                  2   47[BANK0 ] unsigned int 
 16606 ;; Registers used:
 16607 ;;		wreg, status,2, status,0, cstack
 16608 ;; Tracked objects:
 16609 ;;		On entry : 0/0
 16610 ;;		On exit  : 0/0
 16611 ;;		Unchanged: 0/0
 16612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16613 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16614 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16616 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16617 ;;Total ram usage:        8 bytes
 16618 ;; Hardware stack levels used:    1
 16619 ;; Hardware stack levels required when called:   15
 16620 ;; This function calls:
 16621 ;;		__fat_offset_from_cluster
 16622 ;;		__fat_sector_from_cluster
 16623 ;;		_flash_partial_read
 16624 ;; This function is called by:
 16625 ;;		__find_nth_cluster
 16626 ;;		_fat_read_from_file_fast
 16627 ;;		_fat_modify_file
 16628 ;; This function uses a non-reentrant model
 16629 ;;
 16630                           
 16631                           	psect	text57
 16632  015202                     __ptext57:
 16633                           	opt stack 0
 16634  015202                     __read_fat:
 16635                           	opt stack 12
 16636                           
 16637                           ;fat16.c: 459: uint16_t sector;;fat16.c: 460: uint16_t offset;;fat16.c: 461: uint16_t va
      +                          lue;;fat16.c: 464: sector = _fat_sector_from_cluster(cluster);
 16638                           
 16639                           ; BSR set to: 0
 16640                           ;incstack = 0
 16641  015202  C08F  F060         	movff	__read_fat@cluster,__fat_sector_from_cluster@cluster
 16642  015206  C090  F061         	movff	__read_fat@cluster+1,__fat_sector_from_cluster@cluster+1
 16643  01520A  EC99  F0B1         	call	__fat_sector_from_cluster	;wreg free
 16644  01520E  C060  F091         	movff	?__fat_sector_from_cluster,__read_fat@sector
 16645  015212  C061  F092         	movff	?__fat_sector_from_cluster+1,__read_fat@sector+1
 16646                           
 16647                           ;fat16.c: 465: offset = _fat_offset_from_cluster(cluster);
 16648  015216  C08F  F060         	movff	__read_fat@cluster,__fat_offset_from_cluster@cluster
 16649  01521A  C090  F061         	movff	__read_fat@cluster+1,__fat_offset_from_cluster@cluster+1
 16650  01521E  ECA6  F0B1         	call	__fat_offset_from_cluster	;wreg free
 16651  015222  C060  F093         	movff	?__fat_offset_from_cluster,__read_fat@offset
 16652  015226  C061  F094         	movff	?__fat_offset_from_cluster+1,__read_fat@offset+1
 16653                           
 16654                           ;fat16.c: 468: flash_partial_read(sector, offset, 2, &value);
 16655  01522A  C091  F087         	movff	__read_fat@sector,flash_partial_read@page
 16656  01522E  C092  F088         	movff	__read_fat@sector+1,flash_partial_read@page+1
 16657  015232  C093  F089         	movff	__read_fat@offset,flash_partial_read@start
 16658  015236  C094  F08A         	movff	__read_fat@offset+1,flash_partial_read@start+1
 16659  01523A  0E00               	movlw	0
 16660  01523C  0100               	movlb	0	; () banked
 16661  01523E  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 16662  015240  0E02               	movlw	2
 16663  015242  6F8B               	movwf	flash_partial_read@length& (0+255),b
 16664  015244  0E95               	movlw	low __read_fat@value
 16665  015246  6F8D               	movwf	flash_partial_read@data& (0+255),b
 16666  015248  0E00               	movlw	high __read_fat@value
 16667  01524A  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 16668  01524C  ECBA  F0B0         	call	_flash_partial_read	;wreg free
 16669                           
 16670                           ;fat16.c: 471: return value;
 16671  015250  C095  F08F         	movff	__read_fat@value,?__read_fat
 16672  015254  C096  F090         	movff	__read_fat@value+1,?__read_fat+1
 16673  015258  0012               	return	
 16674  01525A                     __end_of__read_fat:
 16675                           	opt stack 0
 16676                           tblptru	equ	0xFF8
 16677                           tblptrh	equ	0xFF7
 16678                           tblptrl	equ	0xFF6
 16679                           tablat	equ	0xFF5
 16680                           prodh	equ	0xFF4
 16681                           prodl	equ	0xFF3
 16682                           postinc0	equ	0xFEE
 16683                           wreg	equ	0xFE8
 16684                           postdec1	equ	0xFE5
 16685                           plusw1	equ	0xFE3
 16686                           fsr1h	equ	0xFE2
 16687                           fsr1l	equ	0xFE1
 16688                           indf2	equ	0xFDF
 16689                           postinc2	equ	0xFDE
 16690                           postdec2	equ	0xFDD
 16691                           plusw2	equ	0xFDB
 16692                           fsr2h	equ	0xFDA
 16693                           fsr2l	equ	0xFD9
 16694                           status	equ	0xFD8
 16695                           
 16696 ;; *************** function __fat_sector_from_cluster *****************
 16697 ;; Defined at:
 16698 ;;		line 76 in file "fat16.c"
 16699 ;; Parameters:    Size  Location     Type
 16700 ;;  cluster         2    0[BANK0 ] unsigned int 
 16701 ;; Auto vars:     Size  Location     Type
 16702 ;;		None
 16703 ;; Return value:  Size  Location     Type
 16704 ;;                  2    0[BANK0 ] unsigned int 
 16705 ;; Registers used:
 16706 ;;		wreg, status,2, status,0
 16707 ;; Tracked objects:
 16708 ;;		On entry : 0/0
 16709 ;;		On exit  : 0/0
 16710 ;;		Unchanged: 0/0
 16711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16712 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16715 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16716 ;;Total ram usage:        2 bytes
 16717 ;; Hardware stack levels used:    1
 16718 ;; Hardware stack levels required when called:   10
 16719 ;; This function calls:
 16720 ;;		Nothing
 16721 ;; This function is called by:
 16722 ;;		__find_nth_cluster
 16723 ;;		__make_cluster_chain
 16724 ;;		__read_fat
 16725 ;; This function uses a non-reentrant model
 16726 ;;
 16727                           
 16728                           	psect	text58
 16729  016332                     __ptext58:
 16730                           	opt stack 0
 16731  016332                     __fat_sector_from_cluster:
 16732                           	opt stack 16
 16733                           
 16734                           ;fat16.c: 78: cluster >>= 8;
 16735                           
 16736                           ;incstack = 0
 16737  016332  0100               	movlb	0	; () banked
 16738  016334  5161               	movf	(__fat_sector_from_cluster@cluster+1)& (0+255),w,b
 16739  016336  6F60               	movwf	__fat_sector_from_cluster@cluster& (0+255),b
 16740  016338  6B61               	clrf	(__fat_sector_from_cluster@cluster+1)& (0+255),b
 16741                           
 16742                           ; BSR set to: 0
 16743                           ;fat16.c: 79: cluster += 2;
 16744  01633A  0E02               	movlw	2
 16745  01633C  2760               	addwf	__fat_sector_from_cluster@cluster& (0+255),f,b
 16746  01633E  0E00               	movlw	0
 16747  016340  2361               	addwfc	(__fat_sector_from_cluster@cluster+1)& (0+255),f,b
 16748                           
 16749                           ; BSR set to: 0
 16750                           ;fat16.c: 80: return cluster;
 16751  016342  C060  F060         	movff	__fat_sector_from_cluster@cluster,?__fat_sector_from_cluster
 16752  016346  C061  F061         	movff	__fat_sector_from_cluster@cluster+1,?__fat_sector_from_cluster+1
 16753  01634A  0012               	return	
 16754  01634C                     __end_of__fat_sector_from_cluster:
 16755                           	opt stack 0
 16756                           tblptru	equ	0xFF8
 16757                           tblptrh	equ	0xFF7
 16758                           tblptrl	equ	0xFF6
 16759                           tablat	equ	0xFF5
 16760                           prodh	equ	0xFF4
 16761                           prodl	equ	0xFF3
 16762                           postinc0	equ	0xFEE
 16763                           wreg	equ	0xFE8
 16764                           postdec1	equ	0xFE5
 16765                           plusw1	equ	0xFE3
 16766                           fsr1h	equ	0xFE2
 16767                           fsr1l	equ	0xFE1
 16768                           indf2	equ	0xFDF
 16769                           postinc2	equ	0xFDE
 16770                           postdec2	equ	0xFDD
 16771                           plusw2	equ	0xFDB
 16772                           fsr2h	equ	0xFDA
 16773                           fsr2l	equ	0xFD9
 16774                           status	equ	0xFD8
 16775                           
 16776 ;; *************** function __fat_offset_from_cluster *****************
 16777 ;; Defined at:
 16778 ;;		line 83 in file "fat16.c"
 16779 ;; Parameters:    Size  Location     Type
 16780 ;;  cluster         2    0[BANK0 ] unsigned int 
 16781 ;; Auto vars:     Size  Location     Type
 16782 ;;		None
 16783 ;; Return value:  Size  Location     Type
 16784 ;;                  2    0[BANK0 ] unsigned int 
 16785 ;; Registers used:
 16786 ;;		wreg, status,2, status,0
 16787 ;; Tracked objects:
 16788 ;;		On entry : 0/0
 16789 ;;		On exit  : 0/0
 16790 ;;		Unchanged: 0/0
 16791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16792 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16795 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16796 ;;Total ram usage:        2 bytes
 16797 ;; Hardware stack levels used:    1
 16798 ;; Hardware stack levels required when called:   10
 16799 ;; This function calls:
 16800 ;;		Nothing
 16801 ;; This function is called by:
 16802 ;;		__find_nth_cluster
 16803 ;;		__make_cluster_chain
 16804 ;;		__read_fat
 16805 ;; This function uses a non-reentrant model
 16806 ;;
 16807                           
 16808                           	psect	text59
 16809  01634C                     __ptext59:
 16810                           	opt stack 0
 16811  01634C                     __fat_offset_from_cluster:
 16812                           	opt stack 16
 16813                           
 16814                           ;fat16.c: 85: cluster &= 0xFF;
 16815                           
 16816                           ; BSR set to: 0
 16817                           ;incstack = 0
 16818  01634C  0EFF               	movlw	255
 16819  01634E  0100               	movlb	0	; () banked
 16820  016350  1760               	andwf	__fat_offset_from_cluster@cluster& (0+255),f,b
 16821  016352  0E00               	movlw	0
 16822  016354  1761               	andwf	(__fat_offset_from_cluster@cluster+1)& (0+255),f,b
 16823                           
 16824                           ; BSR set to: 0
 16825                           ;fat16.c: 86: cluster <<= 1;
 16826  016356  90D8               	bcf	status,0,c
 16827  016358  3760               	rlcf	__fat_offset_from_cluster@cluster& (0+255),f,b
 16828  01635A  3761               	rlcf	(__fat_offset_from_cluster@cluster+1)& (0+255),f,b
 16829                           
 16830                           ; BSR set to: 0
 16831                           ;fat16.c: 87: return cluster;
 16832  01635C  C060  F060         	movff	__fat_offset_from_cluster@cluster,?__fat_offset_from_cluster
 16833  016360  C061  F061         	movff	__fat_offset_from_cluster@cluster+1,?__fat_offset_from_cluster+1
 16834  016364  0012               	return	
 16835  016366                     __end_of__fat_offset_from_cluster:
 16836                           	opt stack 0
 16837                           tblptru	equ	0xFF8
 16838                           tblptrh	equ	0xFF7
 16839                           tblptrl	equ	0xFF6
 16840                           tablat	equ	0xFF5
 16841                           prodh	equ	0xFF4
 16842                           prodl	equ	0xFF3
 16843                           postinc0	equ	0xFEE
 16844                           wreg	equ	0xFE8
 16845                           postdec1	equ	0xFE5
 16846                           plusw1	equ	0xFE3
 16847                           fsr1h	equ	0xFE2
 16848                           fsr1l	equ	0xFE1
 16849                           indf2	equ	0xFDF
 16850                           postinc2	equ	0xFDE
 16851                           postdec2	equ	0xFDD
 16852                           plusw2	equ	0xFDB
 16853                           fsr2h	equ	0xFDA
 16854                           fsr2l	equ	0xFD9
 16855                           status	equ	0xFD8
 16856                           
 16857 ;; *************** function __data_sector_from_cluster *****************
 16858 ;; Defined at:
 16859 ;;		line 71 in file "fat16.c"
 16860 ;; Parameters:    Size  Location     Type
 16861 ;;  fat_cluster     2    0[BANK0 ] unsigned int 
 16862 ;; Auto vars:     Size  Location     Type
 16863 ;;		None
 16864 ;; Return value:  Size  Location     Type
 16865 ;;                  2    0[BANK0 ] unsigned int 
 16866 ;; Registers used:
 16867 ;;		wreg, status,2, status,0
 16868 ;; Tracked objects:
 16869 ;;		On entry : 0/0
 16870 ;;		On exit  : 0/0
 16871 ;;		Unchanged: 0/0
 16872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16873 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16876 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16877 ;;Total ram usage:        2 bytes
 16878 ;; Hardware stack levels used:    1
 16879 ;; Hardware stack levels required when called:   10
 16880 ;; This function calls:
 16881 ;;		Nothing
 16882 ;; This function is called by:
 16883 ;;		_fat_read_from_file_fast
 16884 ;;		_fat_modify_file
 16885 ;;		_fat_copy_sector_to_buffer
 16886 ;; This function uses a non-reentrant model
 16887 ;;
 16888                           
 16889                           	psect	text60
 16890  0163E4                     __ptext60:
 16891                           	opt stack 0
 16892  0163E4                     __data_sector_from_cluster:
 16893                           	opt stack 17
 16894                           
 16895                           ;fat16.c: 73: return fat_cluster + 38 - 2;
 16896                           
 16897                           ; BSR set to: 0
 16898                           ;incstack = 0
 16899  0163E4  0E24               	movlw	36
 16900  0163E6  0100               	movlb	0	; () banked
 16901  0163E8  2560               	addwf	__data_sector_from_cluster@fat_cluster& (0+255),w,b
 16902  0163EA  6F60               	movwf	?__data_sector_from_cluster& (0+255),b
 16903  0163EC  0E00               	movlw	0
 16904  0163EE  2161               	addwfc	(__data_sector_from_cluster@fat_cluster+1)& (0+255),w,b
 16905  0163F0  6F61               	movwf	(?__data_sector_from_cluster+1)& (0+255),b
 16906  0163F2  0012               	return	
 16907  0163F4                     __end_of__data_sector_from_cluster:
 16908                           	opt stack 0
 16909                           tblptru	equ	0xFF8
 16910                           tblptrh	equ	0xFF7
 16911                           tblptrl	equ	0xFF6
 16912                           tablat	equ	0xFF5
 16913                           prodh	equ	0xFF4
 16914                           prodl	equ	0xFF3
 16915                           postinc0	equ	0xFEE
 16916                           wreg	equ	0xFE8
 16917                           postdec1	equ	0xFE5
 16918                           plusw1	equ	0xFE3
 16919                           fsr1h	equ	0xFE2
 16920                           fsr1l	equ	0xFE1
 16921                           indf2	equ	0xFDF
 16922                           postinc2	equ	0xFDE
 16923                           postdec2	equ	0xFDD
 16924                           plusw2	equ	0xFDB
 16925                           fsr2h	equ	0xFDA
 16926                           fsr2l	equ	0xFD9
 16927                           status	equ	0xFD8
 16928                           
 16929 ;; *************** function _fat_get_file_information *****************
 16930 ;; Defined at:
 16931 ;;		line 1421 in file "fat16.c"
 16932 ;; Parameters:    Size  Location     Type
 16933 ;;  file_number     1    wreg     unsigned char 
 16934 ;;  data            2   47[BANK0 ] PTR struct .
 16935 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 16936 ;; Auto vars:     Size  Location     Type
 16937 ;;  file_number     1   54[BANK0 ] unsigned char 
 16938 ;;  offset          2   52[BANK0 ] unsigned int 
 16939 ;;  root_sector     2   50[BANK0 ] unsigned int 
 16940 ;; Return value:  Size  Location     Type
 16941 ;;                  1    wreg      unsigned char 
 16942 ;; Registers used:
 16943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16944 ;; Tracked objects:
 16945 ;;		On entry : 0/0
 16946 ;;		On exit  : 0/0
 16947 ;;		Unchanged: 0/0
 16948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16949 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16950 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16951 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16952 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16953 ;;Total ram usage:        8 bytes
 16954 ;; Hardware stack levels used:    1
 16955 ;; Hardware stack levels required when called:   15
 16956 ;; This function calls:
 16957 ;;		__offset_from_file_number
 16958 ;;		__sector_from_file_number
 16959 ;;		_flash_partial_read
 16960 ;; This function is called by:
 16961 ;;		_fat_read_from_file
 16962 ;;		_fat_resize_file
 16963 ;;		_fat_modify_file
 16964 ;;		_fat_rename_file
 16965 ;; This function uses a non-reentrant model
 16966 ;;
 16967                           
 16968                           	psect	text61
 16969  01478A                     __ptext61:
 16970                           	opt stack 0
 16971  01478A                     _fat_get_file_information:
 16972                           	opt stack 12
 16973                           
 16974                           ; BSR set to: 0
 16975                           ;incstack = 0
 16976                           ;fat_get_file_information@file_number stored from wreg
 16977  01478A  0100               	movlb	0	; () banked
 16978  01478C  6F96               	movwf	fat_get_file_information@file_number& (0+255),b
 16979                           
 16980                           ;fat16.c: 1423: uint16_t root_sector;;fat16.c: 1424: uint16_t offset;;fat16.c: 1426: if(
      +                          file_number>=64)
 16981  01478E  0E3F               	movlw	63
 16982  014790  0100               	movlb	0	; () banked
 16983  014792  6596               	cpfsgt	fat_get_file_information@file_number& (0+255),b
 16984  014794  D002               	goto	l2116
 16985                           
 16986                           ; BSR set to: 0
 16987                           ;fat16.c: 1427: {;fat16.c: 1429: return 0x01;
 16988  014796  0E01               	movlw	1
 16989                           
 16990                           ; BSR set to: 0
 16991  014798  0012               	return	
 16992  01479A                     l2116:
 16993                           
 16994                           ; BSR set to: 0
 16995                           ;fat16.c: 1430: };fat16.c: 1433: root_sector = _sector_from_file_number(file_number);
 16996                           
 16997                           ; BSR set to: 0
 16998  01479A  5196               	movf	fat_get_file_information@file_number& (0+255),w,b
 16999  01479C  EC43  F0AF         	call	__sector_from_file_number
 17000  0147A0  C060  F092         	movff	?__sector_from_file_number,fat_get_file_information@root_sector
 17001  0147A4  C061  F093         	movff	?__sector_from_file_number+1,fat_get_file_information@root_sector+1
 17002                           
 17003                           ;fat16.c: 1434: offset = _offset_from_file_number(file_number);
 17004  0147A8  0100               	movlb	0	; () banked
 17005  0147AA  5196               	movf	fat_get_file_information@file_number& (0+255),w,b
 17006  0147AC  EC55  F0B0         	call	__offset_from_file_number
 17007  0147B0  C060  F094         	movff	?__offset_from_file_number,fat_get_file_information@offset
 17008  0147B4  C061  F095         	movff	?__offset_from_file_number+1,fat_get_file_information@offset+1
 17009                           
 17010                           ;fat16.c: 1437: flash_partial_read(root_sector, offset, 32, (uint8_t*) data);
 17011  0147B8  C092  F087         	movff	fat_get_file_information@root_sector,flash_partial_read@page
 17012  0147BC  C093  F088         	movff	fat_get_file_information@root_sector+1,flash_partial_read@page+1
 17013  0147C0  C094  F089         	movff	fat_get_file_information@offset,flash_partial_read@start
 17014  0147C4  C095  F08A         	movff	fat_get_file_information@offset+1,flash_partial_read@start+1
 17015  0147C8  0E00               	movlw	0
 17016  0147CA  0100               	movlb	0	; () banked
 17017  0147CC  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 17018  0147CE  0E20               	movlw	32
 17019  0147D0  6F8B               	movwf	flash_partial_read@length& (0+255),b
 17020  0147D2  C08F  F08D         	movff	fat_get_file_information@data,flash_partial_read@data
 17021  0147D6  C090  F08E         	movff	fat_get_file_information@data+1,flash_partial_read@data+1
 17022  0147DA  ECBA  F0B0         	call	_flash_partial_read	;wreg free
 17023                           
 17024                           ;fat16.c: 1440: if((data->fileName[0]==0x00) || (data->fileName[0]==0xE5))
 17025  0147DE  C08F  FFD9         	movff	fat_get_file_information@data,fsr2l
 17026  0147E2  C090  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 17027  0147E6  50DF               	movf	indf2,w,c
 17028  0147E8  B4D8               	btfsc	status,2,c
 17029  0147EA  D008               	goto	u14750
 17030  0147EC  C08F  FFD9         	movff	fat_get_file_information@data,fsr2l
 17031  0147F0  C090  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 17032  0147F4  0EE5               	movlw	229
 17033  0147F6  18DE               	xorwf	postinc2,w,c
 17034  0147F8  A4D8               	btfss	status,2,c
 17035  0147FA  D002               	goto	l2118
 17036  0147FC                     u14750:
 17037                           
 17038                           ;fat16.c: 1441: {;fat16.c: 1443: return 0x02;
 17039  0147FC  0E02               	movlw	2
 17040  0147FE  0012               	return	
 17041  014800                     l2118:
 17042                           
 17043                           ;fat16.c: 1444: };fat16.c: 1447: return 0x00;
 17044  014800  0E00               	movlw	0
 17045  014802  0012               	return	
 17046  014804                     __end_of_fat_get_file_information:
 17047                           	opt stack 0
 17048                           tblptru	equ	0xFF8
 17049                           tblptrh	equ	0xFF7
 17050                           tblptrl	equ	0xFF6
 17051                           tablat	equ	0xFF5
 17052                           prodh	equ	0xFF4
 17053                           prodl	equ	0xFF3
 17054                           postinc0	equ	0xFEE
 17055                           wreg	equ	0xFE8
 17056                           postdec1	equ	0xFE5
 17057                           plusw1	equ	0xFE3
 17058                           fsr1h	equ	0xFE2
 17059                           fsr1l	equ	0xFE1
 17060                           indf2	equ	0xFDF
 17061                           postinc2	equ	0xFDE
 17062                           postdec2	equ	0xFDD
 17063                           plusw2	equ	0xFDB
 17064                           fsr2h	equ	0xFDA
 17065                           fsr2l	equ	0xFD9
 17066                           status	equ	0xFD8
 17067                           
 17068 ;; *************** function _fat_get_file_size *****************
 17069 ;; Defined at:
 17070 ;;		line 563 in file "fat16.c"
 17071 ;; Parameters:    Size  Location     Type
 17072 ;;  file_number     1    wreg     unsigned char 
 17073 ;; Auto vars:     Size  Location     Type
 17074 ;;  file_number     1   65[BANK0 ] unsigned char 
 17075 ;;  file_size       4   61[BANK0 ] unsigned long 
 17076 ;;  offset          2   59[BANK0 ] unsigned int 
 17077 ;;  sector          2   57[BANK0 ] unsigned int 
 17078 ;; Return value:  Size  Location     Type
 17079 ;;                  4   53[BANK0 ] unsigned long 
 17080 ;; Registers used:
 17081 ;;		wreg, status,2, status,0, cstack
 17082 ;; Tracked objects:
 17083 ;;		On entry : 0/0
 17084 ;;		On exit  : 0/0
 17085 ;;		Unchanged: 0/0
 17086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17087 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17088 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17090 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17091 ;;Total ram usage:       13 bytes
 17092 ;; Hardware stack levels used:    1
 17093 ;; Hardware stack levels required when called:   16
 17094 ;; This function calls:
 17095 ;;		__offset_from_file_number
 17096 ;;		__root_is_available
 17097 ;;		__sector_from_file_number
 17098 ;;		_flash_partial_read
 17099 ;; This function is called by:
 17100 ;;		_configFile_read
 17101 ;;		_fat_append_to_file
 17102 ;;		_fat_copy_file
 17103 ;;		_fat_copy_sector_to_buffer
 17104 ;;		_fat_write_sector_from_buffer
 17105 ;; This function uses a non-reentrant model
 17106 ;;
 17107                           
 17108                           	psect	text62
 17109  014804                     __ptext62:
 17110                           	opt stack 0
 17111  014804                     _fat_get_file_size:
 17112                           	opt stack 12
 17113                           
 17114                           ;incstack = 0
 17115                           ;fat_get_file_size@file_number stored from wreg
 17116  014804  0100               	movlb	0	; () banked
 17117  014806  6FA1               	movwf	fat_get_file_size@file_number& (0+255),b
 17118                           
 17119                           ;fat16.c: 565: uint32_t file_size;;fat16.c: 566: uint16_t sector;;fat16.c: 567: uint16_t
      +                           offset;;fat16.c: 570: if(_root_is_available(file_number))
 17120  014808  0100               	movlb	0	; () banked
 17121  01480A  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 17122  01480C  ECCC  F0A5         	call	__root_is_available
 17123  014810  0900               	iorlw	0
 17124  014812  B4D8               	btfsc	status,2,c
 17125  014814  D006               	goto	l1878
 17126                           
 17127                           ;fat16.c: 571: {;fat16.c: 573: return 0xFFFFFFFF;
 17128  014816  0100               	movlb	0	; () banked
 17129  014818  6995               	setf	?_fat_get_file_size& (0+255),b
 17130  01481A  6996               	setf	(?_fat_get_file_size+1)& (0+255),b
 17131  01481C  6997               	setf	(?_fat_get_file_size+2)& (0+255),b
 17132  01481E  6998               	setf	(?_fat_get_file_size+3)& (0+255),b
 17133  014820  0012               	return	
 17134  014822                     l1878:
 17135                           
 17136                           ;fat16.c: 574: };fat16.c: 577: sector = _sector_from_file_number(file_number);
 17137                           
 17138                           ; BSR set to: 0
 17139  014822  0100               	movlb	0	; () banked
 17140  014824  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 17141  014826  EC43  F0AF         	call	__sector_from_file_number
 17142  01482A  C060  F099         	movff	?__sector_from_file_number,fat_get_file_size@sector
 17143  01482E  C061  F09A         	movff	?__sector_from_file_number+1,fat_get_file_size@sector+1
 17144                           
 17145                           ;fat16.c: 578: offset = _offset_from_file_number(file_number);
 17146  014832  0100               	movlb	0	; () banked
 17147  014834  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 17148  014836  EC55  F0B0         	call	__offset_from_file_number
 17149  01483A  C060  F09B         	movff	?__offset_from_file_number,fat_get_file_size@offset
 17150  01483E  C061  F09C         	movff	?__offset_from_file_number+1,fat_get_file_size@offset+1
 17151                           
 17152                           ;fat16.c: 581: flash_partial_read(sector, offset+28, 4, &file_size);
 17153  014842  C099  F087         	movff	fat_get_file_size@sector,flash_partial_read@page
 17154  014846  C09A  F088         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 17155  01484A  0E1C               	movlw	28
 17156  01484C  0100               	movlb	0	; () banked
 17157  01484E  259B               	addwf	fat_get_file_size@offset& (0+255),w,b
 17158  014850  6F89               	movwf	flash_partial_read@start& (0+255),b
 17159  014852  0E00               	movlw	0
 17160  014854  219C               	addwfc	(fat_get_file_size@offset+1)& (0+255),w,b
 17161  014856  6F8A               	movwf	(flash_partial_read@start+1)& (0+255),b
 17162  014858  0E00               	movlw	0
 17163  01485A  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 17164  01485C  0E04               	movlw	4
 17165  01485E  6F8B               	movwf	flash_partial_read@length& (0+255),b
 17166  014860  0E9D               	movlw	low fat_get_file_size@file_size
 17167  014862  6F8D               	movwf	flash_partial_read@data& (0+255),b
 17168  014864  0E00               	movlw	high fat_get_file_size@file_size
 17169  014866  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 17170  014868  ECBA  F0B0         	call	_flash_partial_read	;wreg free
 17171                           
 17172                           ;fat16.c: 584: return file_size;
 17173  01486C  C09D  F095         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 17174  014870  C09E  F096         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 17175  014874  C09F  F097         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 17176  014878  C0A0  F098         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 17177  01487C  0012               	return	
 17178  01487E                     __end_of_fat_get_file_size:
 17179                           	opt stack 0
 17180                           tblptru	equ	0xFF8
 17181                           tblptrh	equ	0xFF7
 17182                           tblptrl	equ	0xFF6
 17183                           tablat	equ	0xFF5
 17184                           prodh	equ	0xFF4
 17185                           prodl	equ	0xFF3
 17186                           postinc0	equ	0xFEE
 17187                           wreg	equ	0xFE8
 17188                           postdec1	equ	0xFE5
 17189                           plusw1	equ	0xFE3
 17190                           fsr1h	equ	0xFE2
 17191                           fsr1l	equ	0xFE1
 17192                           indf2	equ	0xFDF
 17193                           postinc2	equ	0xFDE
 17194                           postdec2	equ	0xFDD
 17195                           plusw2	equ	0xFDB
 17196                           fsr2h	equ	0xFDA
 17197                           fsr2l	equ	0xFD9
 17198                           status	equ	0xFD8
 17199                           
 17200 ;; *************** function __root_is_available *****************
 17201 ;; Defined at:
 17202 ;;		line 409 in file "fat16.c"
 17203 ;; Parameters:    Size  Location     Type
 17204 ;;  file_number     1    wreg     unsigned char 
 17205 ;; Auto vars:     Size  Location     Type
 17206 ;;  file_number     1   51[BANK0 ] unsigned char 
 17207 ;;  offset          2   49[BANK0 ] unsigned int 
 17208 ;;  root_sector     2   47[BANK0 ] unsigned int 
 17209 ;;  first_byte      1   52[BANK0 ] unsigned char 
 17210 ;; Return value:  Size  Location     Type
 17211 ;;                  1    wreg      unsigned char 
 17212 ;; Registers used:
 17213 ;;		wreg, status,2, status,0, cstack
 17214 ;; Tracked objects:
 17215 ;;		On entry : 0/0
 17216 ;;		On exit  : 0/0
 17217 ;;		Unchanged: 0/0
 17218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17220 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17222 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17223 ;;Total ram usage:        6 bytes
 17224 ;; Hardware stack levels used:    1
 17225 ;; Hardware stack levels required when called:   15
 17226 ;; This function calls:
 17227 ;;		__offset_from_file_number
 17228 ;;		__sector_from_file_number
 17229 ;;		_flash_partial_read
 17230 ;; This function is called by:
 17231 ;;		__get_available_root_entry
 17232 ;;		_fat_get_file_size
 17233 ;;		_fat_resize_file
 17234 ;;		_fat_delete_file
 17235 ;;		_fat_append_to_file
 17236 ;;		_fat_copy_file
 17237 ;;		_fat_copy_sector_to_buffer
 17238 ;;		_fat_write_sector_from_buffer
 17239 ;; This function uses a non-reentrant model
 17240 ;;
 17241                           
 17242                           	psect	text63
 17243  014B98                     __ptext63:
 17244                           	opt stack 0
 17245  014B98                     __root_is_available:
 17246                           	opt stack 12
 17247                           
 17248                           ;incstack = 0
 17249                           ;__root_is_available@file_number stored from wreg
 17250  014B98  0100               	movlb	0	; () banked
 17251  014B9A  6F93               	movwf	__root_is_available@file_number& (0+255),b
 17252                           
 17253                           ;fat16.c: 411: uint16_t root_sector;;fat16.c: 412: uint16_t offset;;fat16.c: 413: uint8_
      +                          t first_byte;;fat16.c: 417: if(file_number>=64)
 17254  014B9C  0E3F               	movlw	63
 17255  014B9E  0100               	movlb	0	; () banked
 17256  014BA0  6593               	cpfsgt	__root_is_available@file_number& (0+255),b
 17257  014BA2  D002               	goto	l1839
 17258                           
 17259                           ; BSR set to: 0
 17260                           ;fat16.c: 418: {;fat16.c: 420: return 0;
 17261  014BA4  0E00               	movlw	0
 17262                           
 17263                           ; BSR set to: 0
 17264  014BA6  0012               	return	
 17265  014BA8                     l1839:
 17266                           
 17267                           ; BSR set to: 0
 17268                           ;fat16.c: 421: };fat16.c: 424: root_sector = _sector_from_file_number(file_number);
 17269                           
 17270                           ; BSR set to: 0
 17271  014BA8  5193               	movf	__root_is_available@file_number& (0+255),w,b
 17272  014BAA  EC43  F0AF         	call	__sector_from_file_number
 17273  014BAE  C060  F08F         	movff	?__sector_from_file_number,__root_is_available@root_sector
 17274  014BB2  C061  F090         	movff	?__sector_from_file_number+1,__root_is_available@root_sector+1
 17275                           
 17276                           ;fat16.c: 425: offset = _offset_from_file_number(file_number);
 17277  014BB6  0100               	movlb	0	; () banked
 17278  014BB8  5193               	movf	__root_is_available@file_number& (0+255),w,b
 17279  014BBA  EC55  F0B0         	call	__offset_from_file_number
 17280  014BBE  C060  F091         	movff	?__offset_from_file_number,__root_is_available@offset
 17281  014BC2  C061  F092         	movff	?__offset_from_file_number+1,__root_is_available@offset+1
 17282                           
 17283                           ;fat16.c: 428: flash_partial_read(root_sector, offset, 1, &first_byte);
 17284  014BC6  C08F  F087         	movff	__root_is_available@root_sector,flash_partial_read@page
 17285  014BCA  C090  F088         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 17286  014BCE  C091  F089         	movff	__root_is_available@offset,flash_partial_read@start
 17287  014BD2  C092  F08A         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 17288  014BD6  0E00               	movlw	0
 17289  014BD8  0100               	movlb	0	; () banked
 17290  014BDA  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 17291  014BDC  0E01               	movlw	1
 17292  014BDE  6F8B               	movwf	flash_partial_read@length& (0+255),b
 17293  014BE0  0E94               	movlw	low __root_is_available@first_byte
 17294  014BE2  6F8D               	movwf	flash_partial_read@data& (0+255),b
 17295  014BE4  0E00               	movlw	high __root_is_available@first_byte
 17296  014BE6  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 17297  014BE8  ECBA  F0B0         	call	_flash_partial_read	;wreg free
 17298                           
 17299                           ;fat16.c: 431: if((first_byte==0x00) || (first_byte==0xE5))
 17300  014BEC  0100               	movlb	0	; () banked
 17301  014BEE  5194               	movf	__root_is_available@first_byte& (0+255),w,b
 17302  014BF0  B4D8               	btfsc	status,2,c
 17303  014BF2  D004               	goto	u12850
 17304                           
 17305                           ; BSR set to: 0
 17306  014BF4  0EE5               	movlw	229
 17307  014BF6  1994               	xorwf	__root_is_available@first_byte& (0+255),w,b
 17308  014BF8  A4D8               	btfss	status,2,c
 17309  014BFA  D002               	goto	l1841
 17310  014BFC                     u12850:
 17311                           
 17312                           ; BSR set to: 0
 17313                           ;fat16.c: 432: {;fat16.c: 434: return 1;
 17314                           
 17315                           ; BSR set to: 0
 17316  014BFC  0E01               	movlw	1
 17317                           
 17318                           ; BSR set to: 0
 17319                           ;fat16.c: 435: }
 17320                           
 17321                           ; BSR set to: 0
 17322  014BFE  0012               	return	
 17323  014C00                     l1841:
 17324                           
 17325                           ; BSR set to: 0
 17326                           ;fat16.c: 436: else;fat16.c: 437: {;fat16.c: 439: return 0;
 17327                           
 17328                           ; BSR set to: 0
 17329  014C00  0E00               	movlw	0
 17330                           
 17331                           ; BSR set to: 0
 17332  014C02  0012               	return	
 17333  014C04                     __end_of__root_is_available:
 17334                           	opt stack 0
 17335                           tblptru	equ	0xFF8
 17336                           tblptrh	equ	0xFF7
 17337                           tblptrl	equ	0xFF6
 17338                           tablat	equ	0xFF5
 17339                           prodh	equ	0xFF4
 17340                           prodl	equ	0xFF3
 17341                           postinc0	equ	0xFEE
 17342                           wreg	equ	0xFE8
 17343                           postdec1	equ	0xFE5
 17344                           plusw1	equ	0xFE3
 17345                           fsr1h	equ	0xFE2
 17346                           fsr1l	equ	0xFE1
 17347                           indf2	equ	0xFDF
 17348                           postinc2	equ	0xFDE
 17349                           postdec2	equ	0xFDD
 17350                           plusw2	equ	0xFDB
 17351                           fsr2h	equ	0xFDA
 17352                           fsr2l	equ	0xFD9
 17353                           status	equ	0xFD8
 17354                           
 17355 ;; *************** function _flash_partial_read *****************
 17356 ;; Defined at:
 17357 ;;		line 452 in file "flash.c"
 17358 ;; Parameters:    Size  Location     Type
 17359 ;;  page            2   39[BANK0 ] unsigned int 
 17360 ;;  start           2   41[BANK0 ] unsigned int 
 17361 ;;  length          2   43[BANK0 ] unsigned int 
 17362 ;;  data            2   45[BANK0 ] PTR unsigned char 
 17363 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 17364 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 17365 ;;		 -> _root_is_available@first_byte(1), 
 17366 ;; Auto vars:     Size  Location     Type
 17367 ;;		None
 17368 ;; Return value:  Size  Location     Type
 17369 ;;                  1    wreg      void 
 17370 ;; Registers used:
 17371 ;;		wreg, status,2, status,0, cstack
 17372 ;; Tracked objects:
 17373 ;;		On entry : 0/0
 17374 ;;		On exit  : 0/0
 17375 ;;		Unchanged: 0/0
 17376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17377 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17380 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17381 ;;Total ram usage:        8 bytes
 17382 ;; Hardware stack levels used:    1
 17383 ;; Hardware stack levels required when called:   14
 17384 ;; This function calls:
 17385 ;;		__flash_partial_read
 17386 ;; This function is called by:
 17387 ;;		__root_is_available
 17388 ;;		__read_fat
 17389 ;;		_fat_get_file_size
 17390 ;;		_fat_read_from_file_fast
 17391 ;;		_fat_get_file_information
 17392 ;;		__get_first_cluster
 17393 ;; This function uses a non-reentrant model
 17394 ;;
 17395                           
 17396                           	psect	text64
 17397  016174                     __ptext64:
 17398                           	opt stack 0
 17399  016174                     _flash_partial_read:
 17400                           	opt stack 12
 17401                           
 17402                           ;flash.c: 455: _flash_partial_read(page, start, length, data);
 17403                           
 17404                           ; BSR set to: 0
 17405                           ;incstack = 0
 17406  016174  C087  F073         	movff	flash_partial_read@page,__flash_partial_read@page
 17407  016178  C088  F074         	movff	flash_partial_read@page+1,__flash_partial_read@page+1
 17408  01617C  C089  F075         	movff	flash_partial_read@start,__flash_partial_read@start
 17409  016180  C08A  F076         	movff	flash_partial_read@start+1,__flash_partial_read@start+1
 17410  016184  C08B  F077         	movff	flash_partial_read@length,__flash_partial_read@length
 17411  016188  C08C  F078         	movff	flash_partial_read@length+1,__flash_partial_read@length+1
 17412  01618C  C08D  F079         	movff	flash_partial_read@data,__flash_partial_read@data
 17413  016190  C08E  F07A         	movff	flash_partial_read@data+1,__flash_partial_read@data+1
 17414  016194  EC3F  F0A4         	call	__flash_partial_read	;wreg free
 17415  016198  0012               	return		;funcret
 17416  01619A                     __end_of_flash_partial_read:
 17417                           	opt stack 0
 17418                           tblptru	equ	0xFF8
 17419                           tblptrh	equ	0xFF7
 17420                           tblptrl	equ	0xFF6
 17421                           tablat	equ	0xFF5
 17422                           prodh	equ	0xFF4
 17423                           prodl	equ	0xFF3
 17424                           postinc0	equ	0xFEE
 17425                           wreg	equ	0xFE8
 17426                           postdec1	equ	0xFE5
 17427                           plusw1	equ	0xFE3
 17428                           fsr1h	equ	0xFE2
 17429                           fsr1l	equ	0xFE1
 17430                           indf2	equ	0xFDF
 17431                           postinc2	equ	0xFDE
 17432                           postdec2	equ	0xFDD
 17433                           plusw2	equ	0xFDB
 17434                           fsr2h	equ	0xFDA
 17435                           fsr2l	equ	0xFD9
 17436                           status	equ	0xFD8
 17437                           
 17438 ;; *************** function __sector_from_file_number *****************
 17439 ;; Defined at:
 17440 ;;		line 53 in file "fat16.c"
 17441 ;; Parameters:    Size  Location     Type
 17442 ;;  file_number     1    wreg     unsigned char 
 17443 ;; Auto vars:     Size  Location     Type
 17444 ;;  file_number     1    2[BANK0 ] unsigned char 
 17445 ;;  sector          2    3[BANK0 ] unsigned int 
 17446 ;; Return value:  Size  Location     Type
 17447 ;;                  2    0[BANK0 ] unsigned int 
 17448 ;; Registers used:
 17449 ;;		wreg, status,2, status,0
 17450 ;; Tracked objects:
 17451 ;;		On entry : 0/0
 17452 ;;		On exit  : 0/0
 17453 ;;		Unchanged: 0/0
 17454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17455 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17456 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17458 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17459 ;;Total ram usage:        5 bytes
 17460 ;; Hardware stack levels used:    1
 17461 ;; Hardware stack levels required when called:   10
 17462 ;; This function calls:
 17463 ;;		Nothing
 17464 ;; This function is called by:
 17465 ;;		__root_is_available
 17466 ;;		__write_root
 17467 ;;		_fat_get_file_size
 17468 ;;		_fat_get_file_information
 17469 ;;		__delete_root
 17470 ;;		__get_first_cluster
 17471 ;; This function uses a non-reentrant model
 17472 ;;
 17473                           
 17474                           	psect	text65
 17475  015E86                     __ptext65:
 17476                           	opt stack 0
 17477  015E86                     __sector_from_file_number:
 17478                           	opt stack 16
 17479                           
 17480                           ;incstack = 0
 17481                           ;__sector_from_file_number@file_number stored from wreg
 17482  015E86  0100               	movlb	0	; () banked
 17483  015E88  6F62               	movwf	__sector_from_file_number@file_number& (0+255),b
 17484                           
 17485                           ;fat16.c: 55: uint16_t sector;;fat16.c: 56: sector = (uint16_t) file_number;
 17486  015E8A  C062  F063         	movff	__sector_from_file_number@file_number,__sector_from_file_number@sector
 17487  015E8E  0100               	movlb	0	; () banked
 17488  015E90  6B64               	clrf	(__sector_from_file_number@sector+1)& (0+255),b
 17489                           
 17490                           ; BSR set to: 0
 17491                           ;fat16.c: 57: sector >>= 4;
 17492  015E92  3B63               	swapf	__sector_from_file_number@sector& (0+255),f,b
 17493  015E94  3B64               	swapf	(__sector_from_file_number@sector+1)& (0+255),f,b
 17494  015E96  0E0F               	movlw	15
 17495  015E98  1763               	andwf	__sector_from_file_number@sector& (0+255),f,b
 17496  015E9A  5164               	movf	(__sector_from_file_number@sector+1)& (0+255),w,b
 17497  015E9C  0BF0               	andlw	240
 17498  015E9E  1363               	iorwf	__sector_from_file_number@sector& (0+255),f,b
 17499  015EA0  0E0F               	movlw	15
 17500  015EA2  1764               	andwf	(__sector_from_file_number@sector+1)& (0+255),f,b
 17501                           
 17502                           ; BSR set to: 0
 17503                           ;fat16.c: 58: sector += 34;
 17504  015EA4  0E22               	movlw	34
 17505  015EA6  2763               	addwf	__sector_from_file_number@sector& (0+255),f,b
 17506  015EA8  0E00               	movlw	0
 17507  015EAA  2364               	addwfc	(__sector_from_file_number@sector+1)& (0+255),f,b
 17508                           
 17509                           ; BSR set to: 0
 17510                           ;fat16.c: 59: return sector;
 17511  015EAC  C063  F060         	movff	__sector_from_file_number@sector,?__sector_from_file_number
 17512  015EB0  C064  F061         	movff	__sector_from_file_number@sector+1,?__sector_from_file_number+1
 17513  015EB4  0012               	return	
 17514  015EB6                     __end_of__sector_from_file_number:
 17515                           	opt stack 0
 17516                           tblptru	equ	0xFF8
 17517                           tblptrh	equ	0xFF7
 17518                           tblptrl	equ	0xFF6
 17519                           tablat	equ	0xFF5
 17520                           prodh	equ	0xFF4
 17521                           prodl	equ	0xFF3
 17522                           postinc0	equ	0xFEE
 17523                           wreg	equ	0xFE8
 17524                           postdec1	equ	0xFE5
 17525                           plusw1	equ	0xFE3
 17526                           fsr1h	equ	0xFE2
 17527                           fsr1l	equ	0xFE1
 17528                           indf2	equ	0xFDF
 17529                           postinc2	equ	0xFDE
 17530                           postdec2	equ	0xFDD
 17531                           plusw2	equ	0xFDB
 17532                           fsr2h	equ	0xFDA
 17533                           fsr2l	equ	0xFD9
 17534                           status	equ	0xFD8
 17535                           
 17536 ;; *************** function __offset_from_file_number *****************
 17537 ;; Defined at:
 17538 ;;		line 62 in file "fat16.c"
 17539 ;; Parameters:    Size  Location     Type
 17540 ;;  file_number     1    wreg     unsigned char 
 17541 ;; Auto vars:     Size  Location     Type
 17542 ;;  file_number     1    2[BANK0 ] unsigned char 
 17543 ;;  offset          2    3[BANK0 ] unsigned int 
 17544 ;; Return value:  Size  Location     Type
 17545 ;;                  2    0[BANK0 ] unsigned int 
 17546 ;; Registers used:
 17547 ;;		wreg, status,2, status,0
 17548 ;; Tracked objects:
 17549 ;;		On entry : 0/0
 17550 ;;		On exit  : 0/0
 17551 ;;		Unchanged: 0/0
 17552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17553 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17554 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17556 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17557 ;;Total ram usage:        5 bytes
 17558 ;; Hardware stack levels used:    1
 17559 ;; Hardware stack levels required when called:   10
 17560 ;; This function calls:
 17561 ;;		Nothing
 17562 ;; This function is called by:
 17563 ;;		__root_is_available
 17564 ;;		__write_root
 17565 ;;		_fat_get_file_size
 17566 ;;		_fat_get_file_information
 17567 ;;		__delete_root
 17568 ;;		__get_first_cluster
 17569 ;; This function uses a non-reentrant model
 17570 ;;
 17571                           
 17572                           	psect	text66
 17573  0160AA                     __ptext66:
 17574                           	opt stack 0
 17575  0160AA                     __offset_from_file_number:
 17576                           	opt stack 16
 17577                           
 17578                           ; BSR set to: 0
 17579                           ;incstack = 0
 17580                           ;__offset_from_file_number@file_number stored from wreg
 17581  0160AA  0100               	movlb	0	; () banked
 17582  0160AC  6F62               	movwf	__offset_from_file_number@file_number& (0+255),b
 17583                           
 17584                           ;fat16.c: 64: uint16_t offset;;fat16.c: 65: offset = file_number;
 17585  0160AE  C062  F063         	movff	__offset_from_file_number@file_number,__offset_from_file_number@offset
 17586  0160B2  0100               	movlb	0	; () banked
 17587  0160B4  6B64               	clrf	(__offset_from_file_number@offset+1)& (0+255),b
 17588                           
 17589                           ; BSR set to: 0
 17590                           ;fat16.c: 66: offset &= 0b1111;
 17591  0160B6  0E0F               	movlw	15
 17592  0160B8  1763               	andwf	__offset_from_file_number@offset& (0+255),f,b
 17593  0160BA  0E00               	movlw	0
 17594  0160BC  1764               	andwf	(__offset_from_file_number@offset+1)& (0+255),f,b
 17595                           
 17596                           ; BSR set to: 0
 17597                           ;fat16.c: 67: offset <<= 5;
 17598  0160BE  0E05               	movlw	5
 17599  0160C0                     u11735:
 17600  0160C0  90D8               	bcf	status,0,c
 17601  0160C2  3763               	rlcf	__offset_from_file_number@offset& (0+255),f,b
 17602  0160C4  3764               	rlcf	(__offset_from_file_number@offset+1)& (0+255),f,b
 17603  0160C6  2EE8               	decfsz	wreg,f,c
 17604  0160C8  D7FB               	goto	u11735
 17605                           
 17606                           ; BSR set to: 0
 17607                           ;fat16.c: 68: return offset;
 17608  0160CA  C063  F060         	movff	__offset_from_file_number@offset,?__offset_from_file_number
 17609  0160CE  C064  F061         	movff	__offset_from_file_number@offset+1,?__offset_from_file_number+1
 17610  0160D2  0012               	return	
 17611  0160D4                     __end_of__offset_from_file_number:
 17612                           	opt stack 0
 17613                           tblptru	equ	0xFF8
 17614                           tblptrh	equ	0xFF7
 17615                           tblptrl	equ	0xFF6
 17616                           tablat	equ	0xFF5
 17617                           prodh	equ	0xFF4
 17618                           prodl	equ	0xFF3
 17619                           postinc0	equ	0xFEE
 17620                           wreg	equ	0xFE8
 17621                           postdec1	equ	0xFE5
 17622                           plusw1	equ	0xFE3
 17623                           fsr1h	equ	0xFE2
 17624                           fsr1l	equ	0xFE1
 17625                           indf2	equ	0xFDF
 17626                           postinc2	equ	0xFDE
 17627                           postdec2	equ	0xFDD
 17628                           plusw2	equ	0xFDB
 17629                           fsr2h	equ	0xFDA
 17630                           fsr2l	equ	0xFD9
 17631                           status	equ	0xFD8
 17632                           
 17633 ;; *************** function _fat_find_file *****************
 17634 ;; Defined at:
 17635 ;;		line 518 in file "fat16.c"
 17636 ;; Parameters:    Size  Location     Type
 17637 ;;  name            2   43[BANK0 ] PTR unsigned char 
 17638 ;;		 -> configFile_used_name(8), configFile_name(8), 
 17639 ;;  extension       2   45[BANK0 ] PTR unsigned char 
 17640 ;;		 -> configFile_used_extention(3), configFile_extention(3), 
 17641 ;; Auto vars:     Size  Location     Type
 17642 ;;  offset          2   52[BANK0 ] unsigned int 
 17643 ;;  sector          2   50[BANK0 ] unsigned int 
 17644 ;;  file_number     1   49[BANK0 ] unsigned char 
 17645 ;; Return value:  Size  Location     Type
 17646 ;;                  1    wreg      unsigned char 
 17647 ;; Registers used:
 17648 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17649 ;; Tracked objects:
 17650 ;;		On entry : 0/0
 17651 ;;		On exit  : 0/0
 17652 ;;		Unchanged: 0/0
 17653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17654 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17655 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17656 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17657 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17658 ;;Total ram usage:       11 bytes
 17659 ;; Hardware stack levels used:    1
 17660 ;; Hardware stack levels required when called:   15
 17661 ;; This function calls:
 17662 ;;		_flash_sector_read
 17663 ;;		_strncmp
 17664 ;; This function is called by:
 17665 ;;		_fat_create_file
 17666 ;;		_configFile_read
 17667 ;;		_configFile_write
 17668 ;; This function uses a non-reentrant model
 17669 ;;
 17670                           
 17671                           	psect	text67
 17672  0120F8                     __ptext67:
 17673                           	opt stack 0
 17674  0120F8                     _fat_find_file:
 17675                           	opt stack 13
 17676                           
 17677                           ;fat16.c: 520: uint8_t file_number = 0;
 17678                           
 17679                           ; BSR set to: 0
 17680                           ;incstack = 0
 17681  0120F8  0E00               	movlw	0
 17682  0120FA  0100               	movlb	0	; () banked
 17683  0120FC  6F91               	movwf	fat_find_file@file_number& (0+255),b
 17684                           
 17685                           ;fat16.c: 521: uint16_t sector;;fat16.c: 522: uint16_t offset;;fat16.c: 524: for(sector 
      +                          = 34; sector <= 37; ++sector)
 17686  0120FE  0E00               	movlw	0
 17687  012100  6F93               	movwf	(fat_find_file@sector+1)& (0+255),b
 17688  012102  0E22               	movlw	34
 17689  012104  6F92               	movwf	fat_find_file@sector& (0+255),b
 17690                           
 17691                           ; BSR set to: 0
 17692  012106  5193               	movf	(fat_find_file@sector+1)& (0+255),w,b
 17693  012108  E169               	bnz	l1866
 17694  01210A  0E26               	movlw	38
 17695  01210C  5D92               	subwf	fat_find_file@sector& (0+255),w,b
 17696  01210E  B0D8               	btfsc	status,0,c
 17697  012110  D065               	goto	u14720
 17698                           
 17699                           ; BSR set to: 0
 17700                           ;fat16.c: 525: {;fat16.c: 527: flash_sector_read(sector, buffer);
 17701                           
 17702                           ; BSR set to: 0
 17703                           
 17704                           ; BSR set to: 0
 17705  012112  C092  F087         	movff	fat_find_file@sector,flash_sector_read@page
 17706  012116  C093  F088         	movff	fat_find_file@sector+1,flash_sector_read@page+1
 17707  01211A  0E00               	movlw	low _buffer
 17708  01211C  6F89               	movwf	flash_sector_read@data& (0+255),b
 17709  01211E  0E0A               	movlw	high _buffer
 17710  012120  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 17711  012122  EC92  F0B0         	call	_flash_sector_read	;wreg free
 17712                           
 17713                           ;fat16.c: 529: for(offset = 0; offset<512; offset += 32)
 17714  012126  0E00               	movlw	0
 17715  012128  0100               	movlb	0	; () banked
 17716  01212A  6F95               	movwf	(fat_find_file@offset+1)& (0+255),b
 17717  01212C  0E00               	movlw	0
 17718  01212E  6F94               	movwf	fat_find_file@offset& (0+255),b
 17719  012130                     l15605:
 17720                           
 17721                           ; BSR set to: 0
 17722  012130  0E02               	movlw	2
 17723  012132  5D95               	subwf	(fat_find_file@offset+1)& (0+255),w,b
 17724  012134  B0D8               	btfsc	status,0,c
 17725  012136  D04D               	goto	u14710
 17726                           
 17727                           ; BSR set to: 0
 17728                           ;fat16.c: 530: {;fat16.c: 531: if(buffer[offset]==0x00)
 17729                           
 17730                           ; BSR set to: 0
 17731                           
 17732                           ; BSR set to: 0
 17733  012138  0E00               	movlw	low _buffer
 17734  01213A  2594               	addwf	fat_find_file@offset& (0+255),w,b
 17735  01213C  6ED9               	movwf	fsr2l,c
 17736  01213E  0E0A               	movlw	high _buffer
 17737  012140  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 17738  012142  6EDA               	movwf	fsr2h,c
 17739  012144  50DF               	movf	indf2,w,c
 17740  012146  A4D8               	btfss	status,2,c
 17741  012148  D002               	goto	l1869
 17742                           
 17743                           ; BSR set to: 0
 17744                           ;fat16.c: 532: {;fat16.c: 535: return 0xFF;
 17745  01214A  0EFF               	movlw	255
 17746                           
 17747                           ; BSR set to: 0
 17748  01214C  0012               	return	
 17749  01214E                     l1869:
 17750                           
 17751                           ; BSR set to: 0
 17752                           ;fat16.c: 537: else if(buffer[offset]==0xE5)
 17753                           
 17754                           ; BSR set to: 0
 17755  01214E  0E00               	movlw	low _buffer
 17756  012150  2594               	addwf	fat_find_file@offset& (0+255),w,b
 17757  012152  6ED9               	movwf	fsr2l,c
 17758  012154  0E0A               	movlw	high _buffer
 17759  012156  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 17760  012158  6EDA               	movwf	fsr2h,c
 17761  01215A  0EE5               	movlw	229
 17762  01215C  18DE               	xorwf	postinc2,w,c
 17763  01215E  B4D8               	btfsc	status,2,c
 17764  012160  D032               	goto	l1875
 17765                           
 17766                           ; BSR set to: 0
 17767                           ;fat16.c: 543: else;fat16.c: 544: {;fat16.c: 546: if(strncmp(name, &buffer[offset], 8) =
      +                          = 0)
 17768                           
 17769                           ; BSR set to: 0
 17770                           
 17771                           ; BSR set to: 0
 17772                           ;fat16.c: 538: {;fat16.c: 542: }
 17773  012162  C08B  F060         	movff	fat_find_file@name,strncmp@s1
 17774  012166  C08C  F061         	movff	fat_find_file@name+1,strncmp@s1+1
 17775  01216A  0E00               	movlw	low _buffer
 17776  01216C  2594               	addwf	fat_find_file@offset& (0+255),w,b
 17777  01216E  6F62               	movwf	strncmp@s2& (0+255),b
 17778  012170  0E0A               	movlw	high _buffer
 17779  012172  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 17780  012174  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 17781  012176  0E00               	movlw	0
 17782  012178  6F65               	movwf	(strncmp@len+1)& (0+255),b
 17783  01217A  0E08               	movlw	8
 17784  01217C  6F64               	movwf	strncmp@len& (0+255),b
 17785  01217E  ECCB  F0A2         	call	_strncmp	;wreg free
 17786  012182  0100               	movlb	0	; () banked
 17787  012184  5160               	movf	?_strncmp& (0+255),w,b
 17788  012186  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 17789  012188  A4D8               	btfss	status,2,c
 17790  01218A  D01D               	goto	l1875
 17791                           
 17792                           ; BSR set to: 0
 17793                           ;fat16.c: 547: {;fat16.c: 549: if(strncmp(extension, &buffer[offset+8], 3) == 0)
 17794  01218C  C08D  F060         	movff	fat_find_file@extension,strncmp@s1
 17795  012190  C08E  F061         	movff	fat_find_file@extension+1,strncmp@s1+1
 17796  012194  0E08               	movlw	8
 17797  012196  2594               	addwf	fat_find_file@offset& (0+255),w,b
 17798  012198  6F8F               	movwf	??_fat_find_file& (0+255),b
 17799  01219A  0E00               	movlw	0
 17800  01219C  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 17801  01219E  6F90               	movwf	(??_fat_find_file+1)& (0+255),b
 17802  0121A0  0E00               	movlw	low _buffer
 17803  0121A2  258F               	addwf	??_fat_find_file& (0+255),w,b
 17804  0121A4  6F62               	movwf	strncmp@s2& (0+255),b
 17805  0121A6  0E0A               	movlw	high _buffer
 17806  0121A8  2190               	addwfc	(??_fat_find_file+1)& (0+255),w,b
 17807  0121AA  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 17808  0121AC  0E00               	movlw	0
 17809  0121AE  6F65               	movwf	(strncmp@len+1)& (0+255),b
 17810  0121B0  0E03               	movlw	3
 17811  0121B2  6F64               	movwf	strncmp@len& (0+255),b
 17812  0121B4  ECCB  F0A2         	call	_strncmp	;wreg free
 17813  0121B8  0100               	movlb	0	; () banked
 17814  0121BA  5160               	movf	?_strncmp& (0+255),w,b
 17815  0121BC  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 17816  0121BE  A4D8               	btfss	status,2,c
 17817  0121C0  D002               	goto	l1875
 17818                           
 17819                           ; BSR set to: 0
 17820                           ;fat16.c: 550: {;fat16.c: 553: return file_number;
 17821  0121C2  5191               	movf	fat_find_file@file_number& (0+255),w,b
 17822                           
 17823                           ; BSR set to: 0
 17824  0121C4  0012               	return	
 17825  0121C6                     l1875:
 17826                           
 17827                           ; BSR set to: 0
 17828                           ;fat16.c: 554: };fat16.c: 555: };fat16.c: 556: };fat16.c: 557: ++file_number;
 17829                           
 17830                           ; BSR set to: 0
 17831                           
 17832                           ; BSR set to: 0
 17833                           
 17834                           ; BSR set to: 0
 17835                           
 17836                           ; BSR set to: 0
 17837  0121C6  2B91               	incf	fat_find_file@file_number& (0+255),f,b
 17838                           
 17839                           ; BSR set to: 0
 17840  0121C8  0E20               	movlw	32
 17841  0121CA  2794               	addwf	fat_find_file@offset& (0+255),f,b
 17842  0121CC  0E00               	movlw	0
 17843  0121CE  2395               	addwfc	(fat_find_file@offset+1)& (0+255),f,b
 17844  0121D0  D7AF               	goto	l15605
 17845  0121D2                     u14710:
 17846                           
 17847                           ; BSR set to: 0
 17848                           
 17849                           ; BSR set to: 0
 17850  0121D2  4B92               	infsnz	fat_find_file@sector& (0+255),f,b
 17851  0121D4  2B93               	incf	(fat_find_file@sector+1)& (0+255),f,b
 17852                           
 17853                           ; BSR set to: 0
 17854  0121D6  5193               	movf	(fat_find_file@sector+1)& (0+255),w,b
 17855  0121D8  E101               	bnz	l15639
 17856  0121DA  D797               	goto	L4
 17857  0121DC                     u14720:
 17858  0121DC                     l1866:
 17859  0121DC                     l15639:
 17860                           
 17861                           ; BSR set to: 0
 17862                           ;fat16.c: 558: };fat16.c: 559: };fat16.c: 560: return 0xFF;
 17863  0121DC  0EFF               	movlw	255
 17864  0121DE  0012               	return	
 17865  0121E0                     __end_of_fat_find_file:
 17866                           	opt stack 0
 17867                           tblptru	equ	0xFF8
 17868                           tblptrh	equ	0xFF7
 17869                           tblptrl	equ	0xFF6
 17870                           tablat	equ	0xFF5
 17871                           prodh	equ	0xFF4
 17872                           prodl	equ	0xFF3
 17873                           postinc0	equ	0xFEE
 17874                           wreg	equ	0xFE8
 17875                           postdec1	equ	0xFE5
 17876                           plusw1	equ	0xFE3
 17877                           fsr1h	equ	0xFE2
 17878                           fsr1l	equ	0xFE1
 17879                           indf2	equ	0xFDF
 17880                           postinc2	equ	0xFDE
 17881                           postdec2	equ	0xFDD
 17882                           plusw2	equ	0xFDB
 17883                           fsr2h	equ	0xFDA
 17884                           fsr2l	equ	0xFD9
 17885                           status	equ	0xFD8
 17886                           
 17887 ;; *************** function _strncmp *****************
 17888 ;; Defined at:
 17889 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 17890 ;; Parameters:    Size  Location     Type
 17891 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 17892 ;;		 -> configFile_used_extention(3), configFile_used_name(8), configFile_extention(3), configFile_name(8), 
 17893 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 17894 ;;		 -> buffer(512), 
 17895 ;;  len             2    4[BANK0 ] unsigned int 
 17896 ;; Auto vars:     Size  Location     Type
 17897 ;;		None
 17898 ;; Return value:  Size  Location     Type
 17899 ;;                  2    0[BANK0 ] int 
 17900 ;; Registers used:
 17901 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 17902 ;; Tracked objects:
 17903 ;;		On entry : 0/0
 17904 ;;		On exit  : 0/0
 17905 ;;		Unchanged: 0/0
 17906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17907 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17909 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17910 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17911 ;;Total ram usage:        9 bytes
 17912 ;; Hardware stack levels used:    1
 17913 ;; Hardware stack levels required when called:   10
 17914 ;; This function calls:
 17915 ;;		Nothing
 17916 ;; This function is called by:
 17917 ;;		_fat_find_file
 17918 ;; This function uses a non-reentrant model
 17919 ;;
 17920                           
 17921                           	psect	text68
 17922  014596                     __ptext68:
 17923                           	opt stack 0
 17924  014596                     _strncmp:
 17925                           	opt stack 17
 17926                           
 17927                           ; BSR set to: 0
 17928                           ;incstack = 0
 17929  014596  D031               	goto	l3925
 17930  014598                     l14431:
 17931  014598  C060  FFD9         	movff	strncmp@s1,fsr2l
 17932  01459C  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 17933  0145A0  50DF               	movf	indf2,w,c
 17934  0145A2  B4D8               	btfsc	status,2,c
 17935  0145A4  D00C               	goto	u12870
 17936  0145A6  C062  FFD9         	movff	strncmp@s2,fsr2l
 17937  0145AA  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 17938  0145AE  C060  FFE1         	movff	strncmp@s1,fsr1l
 17939  0145B2  C061  FFE2         	movff	strncmp@s1+1,fsr1h
 17940  0145B6  50DE               	movf	postinc2,w,c
 17941  0145B8  18E6               	xorwf	postinc1,w,c
 17942  0145BA  B4D8               	btfsc	status,2,c
 17943  0145BC  D019               	goto	l3927
 17944  0145BE                     u12870:
 17945  0145BE  C062  FFD9         	movff	strncmp@s2,fsr2l
 17946  0145C2  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 17947  0145C6  50DF               	movf	indf2,w,c
 17948  0145C8  0100               	movlb	0	; () banked
 17949  0145CA  6F66               	movwf	??_strncmp& (0+255),b
 17950  0145CC  6B67               	clrf	(??_strncmp+1)& (0+255),b
 17951  0145CE  1F66               	comf	??_strncmp& (0+255),f,b
 17952  0145D0  1F67               	comf	(??_strncmp+1)& (0+255),f,b
 17953  0145D2  4B66               	infsnz	??_strncmp& (0+255),f,b
 17954  0145D4  2B67               	incf	(??_strncmp+1)& (0+255),f,b
 17955  0145D6  C060  FFD9         	movff	strncmp@s1,fsr2l
 17956  0145DA  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 17957  0145DE  50DF               	movf	indf2,w,c
 17958  0145E0  6F68               	movwf	(??_strncmp+2)& (0+255),b
 17959  0145E2  5168               	movf	(??_strncmp+2)& (0+255),w,b
 17960  0145E4  2566               	addwf	??_strncmp& (0+255),w,b
 17961  0145E6  6F60               	movwf	?_strncmp& (0+255),b
 17962  0145E8  0E00               	movlw	0
 17963  0145EA  2167               	addwfc	(??_strncmp+1)& (0+255),w,b
 17964  0145EC  6F61               	movwf	(?_strncmp+1)& (0+255),b
 17965                           
 17966                           ; BSR set to: 0
 17967  0145EE  0012               	return	
 17968  0145F0                     l3927:
 17969                           
 17970                           ; BSR set to: 0
 17971  0145F0  0100               	movlb	0	; () banked
 17972  0145F2  4B60               	infsnz	strncmp@s1& (0+255),f,b
 17973  0145F4  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
 17974  0145F6  4B62               	infsnz	strncmp@s2& (0+255),f,b
 17975  0145F8  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
 17976  0145FA                     l3925:
 17977                           
 17978                           ; BSR set to: 0
 17979  0145FA  0100               	movlb	0	; () banked
 17980  0145FC  0764               	decf	strncmp@len& (0+255),f,b
 17981  0145FE  A0D8               	btfss	status,0,c
 17982  014600  0765               	decf	(strncmp@len+1)& (0+255),f,b
 17983  014602  2964               	incf	strncmp@len& (0+255),w,b
 17984  014604  E1C9               	bnz	l14431
 17985  014606  2965               	incf	(strncmp@len+1)& (0+255),w,b
 17986  014608  A4D8               	btfss	status,2,c
 17987  01460A  D7C6               	goto	l3926
 17988                           
 17989                           ; BSR set to: 0
 17990                           
 17991                           ; BSR set to: 0
 17992  01460C  0E00               	movlw	0
 17993  01460E  6F61               	movwf	(?_strncmp+1)& (0+255),b
 17994  014610  0E00               	movlw	0
 17995  014612  6F60               	movwf	?_strncmp& (0+255),b
 17996  014614  0012               	return	
 17997  014616                     __end_of_strncmp:
 17998                           	opt stack 0
 17999                           tblptru	equ	0xFF8
 18000                           tblptrh	equ	0xFF7
 18001                           tblptrl	equ	0xFF6
 18002                           tablat	equ	0xFF5
 18003                           prodh	equ	0xFF4
 18004                           prodl	equ	0xFF3
 18005                           postinc0	equ	0xFEE
 18006                           wreg	equ	0xFE8
 18007                           postinc1	equ	0xFE6
 18008                           postdec1	equ	0xFE5
 18009                           plusw1	equ	0xFE3
 18010                           fsr1h	equ	0xFE2
 18011                           fsr1l	equ	0xFE1
 18012                           indf2	equ	0xFDF
 18013                           postinc2	equ	0xFDE
 18014                           postdec2	equ	0xFDD
 18015                           plusw2	equ	0xFDB
 18016                           fsr2h	equ	0xFDA
 18017                           fsr2l	equ	0xFD9
 18018                           status	equ	0xFD8
 18019                           
 18020 ;; *************** function __parse_item *****************
 18021 ;; Defined at:
 18022 ;;		line 112 in file "config_file.c"
 18023 ;; Parameters:    Size  Location     Type
 18024 ;;  item_string     2   57[BANK0 ] PTR unsigned char 
 18025 ;;		 -> configFile_read@item_string(31), 
 18026 ;;  value_string    2   59[BANK0 ] PTR unsigned char 
 18027 ;;		 -> configFile_read@value_string(12), 
 18028 ;; Auto vars:     Size  Location     Type
 18029 ;;		None
 18030 ;; Return value:  Size  Location     Type
 18031 ;;                  1    wreg      unsigned char 
 18032 ;; Registers used:
 18033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18034 ;; Tracked objects:
 18035 ;;		On entry : 0/0
 18036 ;;		On exit  : 0/0
 18037 ;;		Unchanged: 0/0
 18038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18039 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18042 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18043 ;;Total ram usage:        4 bytes
 18044 ;; Hardware stack levels used:    1
 18045 ;; Hardware stack levels required when called:   12
 18046 ;; This function calls:
 18047 ;;		__steps_from_degrees
 18048 ;;		_atoi
 18049 ;;		_atol
 18050 ;;		_stricmp
 18051 ;; This function is called by:
 18052 ;;		_configFile_read
 18053 ;; This function uses a non-reentrant model
 18054 ;;
 18055                           
 18056                           	psect	text69
 18057  00B65E                     __ptext69:
 18058                           	opt stack 0
 18059  00B65E                     __parse_item:
 18060                           	opt stack 16
 18061                           
 18062                           ;config_file.c: 114: if(stricmp(item_string, full_circle_in_steps_string)==0)
 18063                           
 18064                           ; BSR set to: 0
 18065                           ;incstack = 0
 18066  00B65E  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18067  00B662  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18068  00B666  0E62               	movlw	low _full_circle_in_steps_string
 18069  00B668  0100               	movlb	0	; () banked
 18070  00B66A  6F63               	movwf	stricmp@s2& (0+255),b
 18071  00B66C  0EA2               	movlw	high _full_circle_in_steps_string
 18072  00B66E  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18073  00B670  EC4D  F0A8         	call	_stricmp	;wreg free
 18074  00B674  0100               	movlb	0	; () banked
 18075  00B676  5161               	movf	?_stricmp& (0+255),w,b
 18076  00B678  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18077  00B67A  A4D8               	btfss	status,2,c
 18078  00B67C  D00F               	goto	l3129
 18079                           
 18080                           ; BSR set to: 0
 18081                           ;config_file.c: 115: {;config_file.c: 116: config.full_circle_in_steps = atol(value_stri
      +                          ng);
 18082  00B67E  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18083  00B682  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18084  00B686  EC1B  F08E         	call	_atol	;wreg free
 18085  00B68A  C06C  F195         	movff	?_atol,_config
 18086  00B68E  C06D  F196         	movff	?_atol+1,_config+1
 18087  00B692  C06E  F197         	movff	?_atol+2,_config+2
 18088  00B696  C06F  F198         	movff	?_atol+3,_config+3
 18089                           
 18090                           ;config_file.c: 117: return 1;;	Return value of __parse_item is never used
 18091  00B69A  0012               	return	
 18092  00B69C                     l3129:
 18093                           
 18094                           ;config_file.c: 118: };config_file.c: 120: if(stricmp(item_string, overshoot_in_steps_st
      +                          ring)==0)
 18095  00B69C  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18096  00B6A0  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18097  00B6A4  0E77               	movlw	low _overshoot_in_steps_string
 18098  00B6A6  0100               	movlb	0	; () banked
 18099  00B6A8  6F63               	movwf	stricmp@s2& (0+255),b
 18100  00B6AA  0EA2               	movlw	high _overshoot_in_steps_string
 18101  00B6AC  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18102  00B6AE  EC4D  F0A8         	call	_stricmp	;wreg free
 18103  00B6B2  0100               	movlb	0	; () banked
 18104  00B6B4  5161               	movf	?_stricmp& (0+255),w,b
 18105  00B6B6  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18106  00B6B8  A4D8               	btfss	status,2,c
 18107  00B6BA  D00B               	goto	l3131
 18108                           
 18109                           ; BSR set to: 0
 18110                           ;config_file.c: 121: {;config_file.c: 122: config.overshoot_in_steps = atoi(value_string
      +                          );
 18111  00B6BC  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18112  00B6C0  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18113  00B6C4  ECC8  F095         	call	_atoi	;wreg free
 18114  00B6C8  C066  F19A         	movff	?_atoi,_config+5
 18115  00B6CC  C067  F19B         	movff	?_atoi+1,_config+6
 18116                           
 18117                           ;config_file.c: 123: return 2;;	Return value of __parse_item is never used
 18118  00B6D0  0012               	return	
 18119  00B6D2                     l3131:
 18120                           
 18121                           ;config_file.c: 124: };config_file.c: 126: if(stricmp(item_string, inverse_direction_str
      +                          ing)==0)
 18122  00B6D2  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18123  00B6D6  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18124  00B6DA  0EAE               	movlw	low _inverse_direction_string
 18125  00B6DC  0100               	movlb	0	; () banked
 18126  00B6DE  6F63               	movwf	stricmp@s2& (0+255),b
 18127  00B6E0  0EA2               	movlw	high _inverse_direction_string
 18128  00B6E2  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18129  00B6E4  EC4D  F0A8         	call	_stricmp	;wreg free
 18130  00B6E8  0100               	movlb	0	; () banked
 18131  00B6EA  5161               	movf	?_stricmp& (0+255),w,b
 18132  00B6EC  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18133  00B6EE  A4D8               	btfss	status,2,c
 18134  00B6F0  D00B               	goto	l3132
 18135                           
 18136                           ; BSR set to: 0
 18137                           ;config_file.c: 127: {;config_file.c: 128: config.inverse_direction = atol(value_string)
      +                          ;
 18138  00B6F2  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18139  00B6F6  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18140  00B6FA  EC1B  F08E         	call	_atol	;wreg free
 18141  00B6FE  0100               	movlb	0	; () banked
 18142  00B700  516C               	movf	?_atol& (0+255),w,b
 18143  00B702  0101               	movlb	1	; () banked
 18144  00B704  6F99               	movwf	(_config+4)& (0+255),b
 18145                           
 18146                           ; BSR set to: 1
 18147                           ;config_file.c: 129: return 3;;	Return value of __parse_item is never used
 18148  00B706  0012               	return	
 18149  00B708                     l3132:
 18150                           
 18151                           ;config_file.c: 130: };config_file.c: 132: if(stricmp(item_string, overshoot_in_steps_st
      +                          ring)==0)
 18152                           
 18153                           ; BSR set to: 1
 18154  00B708  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18155  00B70C  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18156  00B710  0E77               	movlw	low _overshoot_in_steps_string
 18157  00B712  0100               	movlb	0	; () banked
 18158  00B714  6F63               	movwf	stricmp@s2& (0+255),b
 18159  00B716  0EA2               	movlw	high _overshoot_in_steps_string
 18160  00B718  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18161  00B71A  EC4D  F0A8         	call	_stricmp	;wreg free
 18162  00B71E  0100               	movlb	0	; () banked
 18163  00B720  5161               	movf	?_stricmp& (0+255),w,b
 18164  00B722  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18165  00B724  A4D8               	btfss	status,2,c
 18166  00B726  D00B               	goto	l3133
 18167                           
 18168                           ; BSR set to: 0
 18169                           ;config_file.c: 133: {;config_file.c: 134: config.overshoot_in_steps = atoi(value_string
      +                          );
 18170  00B728  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18171  00B72C  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18172  00B730  ECC8  F095         	call	_atoi	;wreg free
 18173  00B734  C066  F19A         	movff	?_atoi,_config+5
 18174  00B738  C067  F19B         	movff	?_atoi+1,_config+6
 18175                           
 18176                           ;config_file.c: 135: return 4;;	Return value of __parse_item is never used
 18177  00B73C  0012               	return	
 18178  00B73E                     l3133:
 18179                           
 18180                           ;config_file.c: 136: };config_file.c: 138: if(stricmp(item_string, overshoot_cost_in_ste
      +                          ps_string)==0)
 18181  00B73E  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18182  00B742  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18183  00B746  0E0B               	movlw	low _overshoot_cost_in_steps_string
 18184  00B748  0100               	movlb	0	; () banked
 18185  00B74A  6F63               	movwf	stricmp@s2& (0+255),b
 18186  00B74C  0EA2               	movlw	high _overshoot_cost_in_steps_string
 18187  00B74E  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18188  00B750  EC4D  F0A8         	call	_stricmp	;wreg free
 18189  00B754  0100               	movlb	0	; () banked
 18190  00B756  5161               	movf	?_stricmp& (0+255),w,b
 18191  00B758  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18192  00B75A  A4D8               	btfss	status,2,c
 18193  00B75C  D00B               	goto	l3134
 18194                           
 18195                           ; BSR set to: 0
 18196                           ;config_file.c: 139: {;config_file.c: 140: config.overshoot_cost_in_steps = atoi(value_s
      +                          tring);
 18197  00B75E  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18198  00B762  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18199  00B766  ECC8  F095         	call	_atoi	;wreg free
 18200  00B76A  C066  F19C         	movff	?_atoi,_config+7
 18201  00B76E  C067  F19D         	movff	?_atoi+1,_config+8
 18202                           
 18203                           ;config_file.c: 141: return 5;;	Return value of __parse_item is never used
 18204  00B772  0012               	return	
 18205  00B774                     l3134:
 18206                           
 18207                           ;config_file.c: 142: };config_file.c: 144: if(stricmp(item_string, minimum_speed_string)
      +                          ==0)
 18208  00B774  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18209  00B778  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18210  00B77C  0E0B               	movlw	low _minimum_speed_string
 18211  00B77E  0100               	movlb	0	; () banked
 18212  00B780  6F63               	movwf	stricmp@s2& (0+255),b
 18213  00B782  0EA3               	movlw	high _minimum_speed_string
 18214  00B784  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18215  00B786  EC4D  F0A8         	call	_stricmp	;wreg free
 18216  00B78A  0100               	movlb	0	; () banked
 18217  00B78C  5161               	movf	?_stricmp& (0+255),w,b
 18218  00B78E  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18219  00B790  A4D8               	btfss	status,2,c
 18220  00B792  D00B               	goto	l3135
 18221                           
 18222                           ; BSR set to: 0
 18223                           ;config_file.c: 145: {;config_file.c: 146: config.minimum_speed = atoi(value_string);
 18224  00B794  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18225  00B798  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18226  00B79C  ECC8  F095         	call	_atoi	;wreg free
 18227  00B7A0  C066  F19E         	movff	?_atoi,_config+9
 18228  00B7A4  C067  F19F         	movff	?_atoi+1,_config+10
 18229                           
 18230                           ;config_file.c: 147: return 6;;	Return value of __parse_item is never used
 18231  00B7A8  0012               	return	
 18232  00B7AA                     l3135:
 18233                           
 18234                           ;config_file.c: 148: };config_file.c: 150: if(stricmp(item_string, maximum_speed_string)
      +                          ==0)
 18235  00B7AA  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18236  00B7AE  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18237  00B7B2  0EFD               	movlw	low _maximum_speed_string
 18238  00B7B4  0100               	movlb	0	; () banked
 18239  00B7B6  6F63               	movwf	stricmp@s2& (0+255),b
 18240  00B7B8  0EA2               	movlw	high _maximum_speed_string
 18241  00B7BA  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18242  00B7BC  EC4D  F0A8         	call	_stricmp	;wreg free
 18243  00B7C0  0100               	movlb	0	; () banked
 18244  00B7C2  5161               	movf	?_stricmp& (0+255),w,b
 18245  00B7C4  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18246  00B7C6  A4D8               	btfss	status,2,c
 18247  00B7C8  D00B               	goto	l3136
 18248                           
 18249                           ; BSR set to: 0
 18250                           ;config_file.c: 151: {;config_file.c: 152: config.maximum_speed = atoi(value_string);
 18251  00B7CA  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18252  00B7CE  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18253  00B7D2  ECC8  F095         	call	_atoi	;wreg free
 18254  00B7D6  C066  F1A0         	movff	?_atoi,_config+11
 18255  00B7DA  C067  F1A1         	movff	?_atoi+1,_config+12
 18256                           
 18257                           ;config_file.c: 153: return 7;;	Return value of __parse_item is never used
 18258  00B7DE  0012               	return	
 18259  00B7E0                     l3136:
 18260                           
 18261                           ;config_file.c: 154: };config_file.c: 156: if(stricmp(item_string, initial_speed_arc_str
      +                          ing)==0)
 18262  00B7E0  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18263  00B7E4  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18264  00B7E8  0E9C               	movlw	low _initial_speed_arc_string
 18265  00B7EA  0100               	movlb	0	; () banked
 18266  00B7EC  6F63               	movwf	stricmp@s2& (0+255),b
 18267  00B7EE  0EA2               	movlw	high _initial_speed_arc_string
 18268  00B7F0  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18269  00B7F2  EC4D  F0A8         	call	_stricmp	;wreg free
 18270  00B7F6  0100               	movlb	0	; () banked
 18271  00B7F8  5161               	movf	?_stricmp& (0+255),w,b
 18272  00B7FA  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18273  00B7FC  A4D8               	btfss	status,2,c
 18274  00B7FE  D00B               	goto	l3137
 18275                           
 18276                           ; BSR set to: 0
 18277                           ;config_file.c: 157: {;config_file.c: 158: config.initial_speed_arc = atoi(value_string)
      +                          ;
 18278  00B800  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18279  00B804  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18280  00B808  ECC8  F095         	call	_atoi	;wreg free
 18281  00B80C  C066  F1A2         	movff	?_atoi,_config+13
 18282  00B810  C067  F1A3         	movff	?_atoi+1,_config+14
 18283                           
 18284                           ;config_file.c: 159: return 8;;	Return value of __parse_item is never used
 18285  00B814  0012               	return	
 18286  00B816                     l3137:
 18287                           
 18288                           ;config_file.c: 160: };config_file.c: 162: if(stricmp(item_string, maximum_speed_arc_str
      +                          ing)==0)
 18289  00B816  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18290  00B81A  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18291  00B81E  0E8A               	movlw	low _maximum_speed_arc_string
 18292  00B820  0100               	movlb	0	; () banked
 18293  00B822  6F63               	movwf	stricmp@s2& (0+255),b
 18294  00B824  0EA2               	movlw	high _maximum_speed_arc_string
 18295  00B826  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18296  00B828  EC4D  F0A8         	call	_stricmp	;wreg free
 18297  00B82C  0100               	movlb	0	; () banked
 18298  00B82E  5161               	movf	?_stricmp& (0+255),w,b
 18299  00B830  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18300  00B832  A4D8               	btfss	status,2,c
 18301  00B834  D00B               	goto	l3138
 18302                           
 18303                           ; BSR set to: 0
 18304                           ;config_file.c: 163: {;config_file.c: 164: config.maximum_speed_arc = atoi(value_string)
      +                          ;
 18305  00B836  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18306  00B83A  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18307  00B83E  ECC8  F095         	call	_atoi	;wreg free
 18308  00B842  C066  F1A4         	movff	?_atoi,_config+15
 18309  00B846  C067  F1A5         	movff	?_atoi+1,_config+16
 18310                           
 18311                           ;config_file.c: 165: return 9;;	Return value of __parse_item is never used
 18312  00B84A  0012               	return	
 18313  00B84C                     l3138:
 18314                           
 18315                           ;config_file.c: 166: };config_file.c: 168: if(stricmp(item_string, initial_speed_manual_
      +                          string)==0)
 18316  00B84C  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18317  00B850  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18318  00B854  0E4D               	movlw	low _initial_speed_manual_string
 18319  00B856  0100               	movlb	0	; () banked
 18320  00B858  6F63               	movwf	stricmp@s2& (0+255),b
 18321  00B85A  0EA2               	movlw	high _initial_speed_manual_string
 18322  00B85C  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18323  00B85E  EC4D  F0A8         	call	_stricmp	;wreg free
 18324  00B862  0100               	movlb	0	; () banked
 18325  00B864  5161               	movf	?_stricmp& (0+255),w,b
 18326  00B866  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18327  00B868  A4D8               	btfss	status,2,c
 18328  00B86A  D00B               	goto	l3139
 18329                           
 18330                           ; BSR set to: 0
 18331                           ;config_file.c: 169: {;config_file.c: 170: config.initial_speed_manual = atoi(value_stri
      +                          ng);
 18332  00B86C  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18333  00B870  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18334  00B874  ECC8  F095         	call	_atoi	;wreg free
 18335  00B878  C066  F1A6         	movff	?_atoi,_config+17
 18336  00B87C  C067  F1A7         	movff	?_atoi+1,_config+18
 18337                           
 18338                           ;config_file.c: 171: return 10;;	Return value of __parse_item is never used
 18339  00B880  0012               	return	
 18340  00B882                     l3139:
 18341                           
 18342                           ;config_file.c: 172: };config_file.c: 174: if(stricmp(item_string, maximum_speed_manual_
      +                          string)==0)
 18343  00B882  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18344  00B886  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18345  00B88A  0E38               	movlw	low _maximum_speed_manual_string
 18346  00B88C  0100               	movlb	0	; () banked
 18347  00B88E  6F63               	movwf	stricmp@s2& (0+255),b
 18348  00B890  0EA2               	movlw	high _maximum_speed_manual_string
 18349  00B892  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18350  00B894  EC4D  F0A8         	call	_stricmp	;wreg free
 18351  00B898  0100               	movlb	0	; () banked
 18352  00B89A  5161               	movf	?_stricmp& (0+255),w,b
 18353  00B89C  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18354  00B89E  A4D8               	btfss	status,2,c
 18355  00B8A0  D00B               	goto	l3140
 18356                           
 18357                           ; BSR set to: 0
 18358                           ;config_file.c: 175: {;config_file.c: 176: config.maximum_speed_manual = atoi(value_stri
      +                          ng);
 18359  00B8A2  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18360  00B8A6  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18361  00B8AA  ECC8  F095         	call	_atoi	;wreg free
 18362  00B8AE  C066  F1A8         	movff	?_atoi,_config+19
 18363  00B8B2  C067  F1A9         	movff	?_atoi+1,_config+20
 18364                           
 18365                           ;config_file.c: 177: return 11;;	Return value of __parse_item is never used
 18366  00B8B6  0012               	return	
 18367  00B8B8                     l3140:
 18368                           
 18369                           ;config_file.c: 178: };config_file.c: 180: if(stricmp(item_string, beep_duration_string)
      +                          ==0)
 18370  00B8B8  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18371  00B8BC  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18372  00B8C0  0EEF               	movlw	low _beep_duration_string
 18373  00B8C2  0100               	movlb	0	; () banked
 18374  00B8C4  6F63               	movwf	stricmp@s2& (0+255),b
 18375  00B8C6  0EA2               	movlw	high _beep_duration_string
 18376  00B8C8  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18377  00B8CA  EC4D  F0A8         	call	_stricmp	;wreg free
 18378  00B8CE  0100               	movlb	0	; () banked
 18379  00B8D0  5161               	movf	?_stricmp& (0+255),w,b
 18380  00B8D2  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18381  00B8D4  A4D8               	btfss	status,2,c
 18382  00B8D6  D00B               	goto	l3141
 18383                           
 18384                           ; BSR set to: 0
 18385                           ;config_file.c: 181: {;config_file.c: 182: config.beep_duration = atoi(value_string);
 18386  00B8D8  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18387  00B8DC  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18388  00B8E0  ECC8  F095         	call	_atoi	;wreg free
 18389  00B8E4  0100               	movlb	0	; () banked
 18390  00B8E6  5166               	movf	?_atoi& (0+255),w,b
 18391  00B8E8  0101               	movlb	1	; () banked
 18392  00B8EA  6FAA               	movwf	(_config+21)& (0+255),b
 18393                           
 18394                           ; BSR set to: 1
 18395                           ;config_file.c: 183: return 12;;	Return value of __parse_item is never used
 18396  00B8EC  0012               	return	
 18397  00B8EE                     l3141:
 18398                           
 18399                           ;config_file.c: 184: };config_file.c: 186: if(stricmp(item_string, use_cw_limit_string)=
      +                          =0)
 18400                           
 18401                           ; BSR set to: 1
 18402  00B8EE  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18403  00B8F2  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18404  00B8F6  0E19               	movlw	low _use_cw_limit_string
 18405  00B8F8  0100               	movlb	0	; () banked
 18406  00B8FA  6F63               	movwf	stricmp@s2& (0+255),b
 18407  00B8FC  0EA3               	movlw	high _use_cw_limit_string
 18408  00B8FE  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18409  00B900  EC4D  F0A8         	call	_stricmp	;wreg free
 18410  00B904  0100               	movlb	0	; () banked
 18411  00B906  5161               	movf	?_stricmp& (0+255),w,b
 18412  00B908  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18413  00B90A  A4D8               	btfss	status,2,c
 18414  00B90C  D00B               	goto	l3142
 18415                           
 18416                           ; BSR set to: 0
 18417                           ;config_file.c: 187: {;config_file.c: 188: config.use_cw_limit = atol(value_string);
 18418  00B90E  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18419  00B912  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18420  00B916  EC1B  F08E         	call	_atol	;wreg free
 18421  00B91A  0100               	movlb	0	; () banked
 18422  00B91C  516C               	movf	?_atol& (0+255),w,b
 18423  00B91E  0101               	movlb	1	; () banked
 18424  00B920  6FAB               	movwf	(_config+22)& (0+255),b
 18425                           
 18426                           ; BSR set to: 1
 18427                           ;config_file.c: 189: return 13;;	Return value of __parse_item is never used
 18428  00B922  0012               	return	
 18429  00B924                     l3142:
 18430                           
 18431                           ;config_file.c: 190: };config_file.c: 192: if(stricmp(item_string, cw_limit_string)==0)
 18432                           
 18433                           ; BSR set to: 1
 18434  00B924  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18435  00B928  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18436  00B92C  0E30               	movlw	low _cw_limit_string
 18437  00B92E  0100               	movlb	0	; () banked
 18438  00B930  6F63               	movwf	stricmp@s2& (0+255),b
 18439  00B932  0EA3               	movlw	high _cw_limit_string
 18440  00B934  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18441  00B936  EC4D  F0A8         	call	_stricmp	;wreg free
 18442  00B93A  0100               	movlb	0	; () banked
 18443  00B93C  5161               	movf	?_stricmp& (0+255),w,b
 18444  00B93E  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18445  00B940  A4D8               	btfss	status,2,c
 18446  00B942  D021               	goto	l3143
 18447                           
 18448                           ; BSR set to: 0
 18449                           ;config_file.c: 193: {;config_file.c: 194: config.cw_limit = atol(value_string);
 18450  00B944  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18451  00B948  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18452  00B94C  EC1B  F08E         	call	_atol	;wreg free
 18453  00B950  C06C  F1AC         	movff	?_atol,_config+23
 18454  00B954  C06D  F1AD         	movff	?_atol+1,_config+24
 18455  00B958  C06E  F1AE         	movff	?_atol+2,_config+25
 18456  00B95C  C06F  F1AF         	movff	?_atol+3,_config+26
 18457                           
 18458                           ;config_file.c: 195: config.cw_limit_in_steps = _steps_from_degrees(config.cw_limit);
 18459  00B960  C1AC  F091         	movff	_config+23,__steps_from_degrees@degrees
 18460  00B964  C1AD  F092         	movff	_config+24,__steps_from_degrees@degrees+1
 18461  00B968  C1AE  F093         	movff	_config+25,__steps_from_degrees@degrees+2
 18462  00B96C  C1AF  F094         	movff	_config+26,__steps_from_degrees@degrees+3
 18463  00B970  EC65  F078         	call	__steps_from_degrees	;wreg free
 18464  00B974  C091  F1B0         	movff	?__steps_from_degrees,_config+27
 18465  00B978  C092  F1B1         	movff	?__steps_from_degrees+1,_config+28
 18466  00B97C  C093  F1B2         	movff	?__steps_from_degrees+2,_config+29
 18467  00B980  C094  F1B3         	movff	?__steps_from_degrees+3,_config+30
 18468                           
 18469                           ;config_file.c: 196: return 14;;	Return value of __parse_item is never used
 18470  00B984  0012               	return	
 18471  00B986                     l3143:
 18472                           
 18473                           ;config_file.c: 197: };config_file.c: 199: if(stricmp(item_string, use_ccw_limit_string)
      +                          ==0)
 18474  00B986  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18475  00B98A  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18476  00B98E  0EE1               	movlw	low _use_ccw_limit_string
 18477  00B990  0100               	movlb	0	; () banked
 18478  00B992  6F63               	movwf	stricmp@s2& (0+255),b
 18479  00B994  0EA2               	movlw	high _use_ccw_limit_string
 18480  00B996  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18481  00B998  EC4D  F0A8         	call	_stricmp	;wreg free
 18482  00B99C  0100               	movlb	0	; () banked
 18483  00B99E  5161               	movf	?_stricmp& (0+255),w,b
 18484  00B9A0  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18485  00B9A2  A4D8               	btfss	status,2,c
 18486  00B9A4  D00B               	goto	l3144
 18487                           
 18488                           ; BSR set to: 0
 18489                           ;config_file.c: 200: {;config_file.c: 201: config.use_ccw_limit = atol(value_string);
 18490  00B9A6  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18491  00B9AA  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18492  00B9AE  EC1B  F08E         	call	_atol	;wreg free
 18493  00B9B2  0100               	movlb	0	; () banked
 18494  00B9B4  516C               	movf	?_atol& (0+255),w,b
 18495  00B9B6  0101               	movlb	1	; () banked
 18496  00B9B8  6FB4               	movwf	(_config+31)& (0+255),b
 18497                           
 18498                           ; BSR set to: 1
 18499                           ;config_file.c: 202: return 15;;	Return value of __parse_item is never used
 18500  00B9BA  0012               	return	
 18501  00B9BC                     l3144:
 18502                           
 18503                           ;config_file.c: 203: };config_file.c: 205: if(stricmp(item_string, ccw_limit_string)==0)
 18504                           
 18505                           ; BSR set to: 1
 18506  00B9BC  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18507  00B9C0  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18508  00B9C4  0E26               	movlw	low _ccw_limit_string
 18509  00B9C6  0100               	movlb	0	; () banked
 18510  00B9C8  6F63               	movwf	stricmp@s2& (0+255),b
 18511  00B9CA  0EA3               	movlw	high _ccw_limit_string
 18512  00B9CC  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18513  00B9CE  EC4D  F0A8         	call	_stricmp	;wreg free
 18514  00B9D2  0100               	movlb	0	; () banked
 18515  00B9D4  5161               	movf	?_stricmp& (0+255),w,b
 18516  00B9D6  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18517  00B9D8  A4D8               	btfss	status,2,c
 18518  00B9DA  D021               	goto	l3145
 18519                           
 18520                           ; BSR set to: 0
 18521                           ;config_file.c: 206: {;config_file.c: 207: config.ccw_limit = atol(value_string);
 18522  00B9DC  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18523  00B9E0  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18524  00B9E4  EC1B  F08E         	call	_atol	;wreg free
 18525  00B9E8  C06C  F1B5         	movff	?_atol,_config+32
 18526  00B9EC  C06D  F1B6         	movff	?_atol+1,_config+33
 18527  00B9F0  C06E  F1B7         	movff	?_atol+2,_config+34
 18528  00B9F4  C06F  F1B8         	movff	?_atol+3,_config+35
 18529                           
 18530                           ;config_file.c: 208: config.ccw_limit_in_steps = _steps_from_degrees(config.ccw_limit);
 18531  00B9F8  C1B5  F091         	movff	_config+32,__steps_from_degrees@degrees
 18532  00B9FC  C1B6  F092         	movff	_config+33,__steps_from_degrees@degrees+1
 18533  00BA00  C1B7  F093         	movff	_config+34,__steps_from_degrees@degrees+2
 18534  00BA04  C1B8  F094         	movff	_config+35,__steps_from_degrees@degrees+3
 18535  00BA08  EC65  F078         	call	__steps_from_degrees	;wreg free
 18536  00BA0C  C091  F1B9         	movff	?__steps_from_degrees,_config+36
 18537  00BA10  C092  F1BA         	movff	?__steps_from_degrees+1,_config+37
 18538  00BA14  C093  F1BB         	movff	?__steps_from_degrees+2,_config+38
 18539  00BA18  C094  F1BC         	movff	?__steps_from_degrees+3,_config+39
 18540                           
 18541                           ;config_file.c: 209: return 16;;	Return value of __parse_item is never used
 18542  00BA1C  0012               	return	
 18543  00BA1E                     l3145:
 18544                           
 18545                           ;config_file.c: 210: };config_file.c: 212: if(stricmp(item_string, position_display_180_
      +                          string)==0)
 18546  00BA1E  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18547  00BA22  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18548  00BA26  0E23               	movlw	low _position_display_180_string
 18549  00BA28  0100               	movlb	0	; () banked
 18550  00BA2A  6F63               	movwf	stricmp@s2& (0+255),b
 18551  00BA2C  0EA2               	movlw	high _position_display_180_string
 18552  00BA2E  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18553  00BA30  EC4D  F0A8         	call	_stricmp	;wreg free
 18554  00BA34  0100               	movlb	0	; () banked
 18555  00BA36  5161               	movf	?_stricmp& (0+255),w,b
 18556  00BA38  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18557  00BA3A  A4D8               	btfss	status,2,c
 18558  00BA3C  D00B               	goto	l3146
 18559                           
 18560                           ; BSR set to: 0
 18561                           ;config_file.c: 213: {;config_file.c: 214: config.position_display_180 = atoi(value_stri
      +                          ng);
 18562  00BA3E  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18563  00BA42  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18564  00BA46  ECC8  F095         	call	_atoi	;wreg free
 18565  00BA4A  0100               	movlb	0	; () banked
 18566  00BA4C  5166               	movf	?_atoi& (0+255),w,b
 18567  00BA4E  0101               	movlb	1	; () banked
 18568  00BA50  6FBD               	movwf	(_config+40)& (0+255),b
 18569                           
 18570                           ; BSR set to: 1
 18571                           ;config_file.c: 215: return 17;;	Return value of __parse_item is never used
 18572  00BA52  0012               	return	
 18573  00BA54                     l3146:
 18574                           
 18575                           ;config_file.c: 216: };config_file.c: 218: if(stricmp(item_string, menu_structure_string
      +                          )==0)
 18576                           
 18577                           ; BSR set to: 1
 18578  00BA54  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18579  00BA58  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18580  00BA5C  0ED2               	movlw	low _menu_structure_string
 18581  00BA5E  0100               	movlb	0	; () banked
 18582  00BA60  6F63               	movwf	stricmp@s2& (0+255),b
 18583  00BA62  0EA2               	movlw	high _menu_structure_string
 18584  00BA64  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18585  00BA66  EC4D  F0A8         	call	_stricmp	;wreg free
 18586  00BA6A  0100               	movlb	0	; () banked
 18587  00BA6C  5161               	movf	?_stricmp& (0+255),w,b
 18588  00BA6E  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18589  00BA70  A4D8               	btfss	status,2,c
 18590  00BA72  0012               	return	
 18591                           
 18592                           ; BSR set to: 0
 18593                           ;config_file.c: 219: {;config_file.c: 220: config.menu_structure = atoi(value_string);
 18594  00BA74  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18595  00BA78  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18596  00BA7C  ECC8  F095         	call	_atoi	;wreg free
 18597  00BA80  0100               	movlb	0	; () banked
 18598  00BA82  5166               	movf	?_atoi& (0+255),w,b
 18599  00BA84  0101               	movlb	1	; () banked
 18600  00BA86  6FBE               	movwf	(_config+41)& (0+255),b
 18601                           
 18602                           ; BSR set to: 1
 18603                           ;config_file.c: 221: return 18;;	Return value of __parse_item is never used
 18604  00BA88  0012               	return	
 18605  00BA8A                     __end_of__parse_item:
 18606                           	opt stack 0
 18607                           tblptru	equ	0xFF8
 18608                           tblptrh	equ	0xFF7
 18609                           tblptrl	equ	0xFF6
 18610                           tablat	equ	0xFF5
 18611                           prodh	equ	0xFF4
 18612                           prodl	equ	0xFF3
 18613                           postinc0	equ	0xFEE
 18614                           wreg	equ	0xFE8
 18615                           postinc1	equ	0xFE6
 18616                           postdec1	equ	0xFE5
 18617                           plusw1	equ	0xFE3
 18618                           fsr1h	equ	0xFE2
 18619                           fsr1l	equ	0xFE1
 18620                           indf2	equ	0xFDF
 18621                           postinc2	equ	0xFDE
 18622                           postdec2	equ	0xFDD
 18623                           plusw2	equ	0xFDB
 18624                           fsr2h	equ	0xFDA
 18625                           fsr2l	equ	0xFD9
 18626                           status	equ	0xFD8
 18627                           
 18628 ;; *************** function _stricmp *****************
 18629 ;; Defined at:
 18630 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\stricmp.c"
 18631 ;; Parameters:    Size  Location     Type
 18632 ;;  s1              2    1[BANK0 ] PTR const unsigned char 
 18633 ;;		 -> configFile_read@item_string(31), 
 18634 ;;  s2              2    3[BANK0 ] PTR const unsigned char 
 18635 ;;		 -> menu_structure_string(15), position_display_180_string(21), ccw_limit_string(10), use_ccw_limit_string(14), 
 18636 ;;		 -> cw_limit_string(9), use_cw_limit_string(13), beep_duration_string(14), maximum_speed_manual_string(21), 
 18637 ;;		 -> initial_speed_manual_string(21), maximum_speed_arc_string(18), initial_speed_arc_string(18), maximum_speed_strin
      +g(14), 
 18638 ;;		 -> minimum_speed_string(14), overshoot_cost_in_steps_string(24), inverse_direction_string(18), overshoot_in_steps_s
      +tring(19), 
 18639 ;;		 -> full_circle_in_steps_string(21), 
 18640 ;; Auto vars:     Size  Location     Type
 18641 ;;  r               1    6[BANK0 ] char 
 18642 ;; Return value:  Size  Location     Type
 18643 ;;                  2    1[BANK0 ] int 
 18644 ;; Registers used:
 18645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18646 ;; Tracked objects:
 18647 ;;		On entry : 0/0
 18648 ;;		On exit  : 0/0
 18649 ;;		Unchanged: 0/0
 18650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18651 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18652 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18653 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18654 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18655 ;;Total ram usage:        6 bytes
 18656 ;; Hardware stack levels used:    1
 18657 ;; Hardware stack levels required when called:   11
 18658 ;; This function calls:
 18659 ;;		_toupper
 18660 ;; This function is called by:
 18661 ;;		__parse_item
 18662 ;; This function uses a non-reentrant model
 18663 ;;
 18664                           
 18665                           	psect	text70
 18666  01509A                     __ptext70:
 18667                           	opt stack 0
 18668  01509A                     _stricmp:
 18669                           	opt stack 16
 18670                           
 18671                           ;incstack = 0
 18672  01509A  D005               	goto	l3911
 18673  01509C  0100               	movlb	0	; () banked
 18674  01509E  4B61               	infsnz	stricmp@s1& (0+255),f,b
 18675  0150A0  2B62               	incf	(stricmp@s1+1)& (0+255),f,b
 18676  0150A2  4B63               	infsnz	stricmp@s2& (0+255),f,b
 18677  0150A4  2B64               	incf	(stricmp@s2+1)& (0+255),f,b
 18678  0150A6                     l3911:
 18679                           
 18680                           ; BSR set to: 0
 18681  0150A6  C063  FFF6         	movff	stricmp@s2,tblptrl
 18682  0150AA  C064  FFF7         	movff	stricmp@s2+1,tblptrh
 18683  0150AE                     	if	0	;tblptru may be non-zero
 18684  0150AE                     	endif
 18685  0150AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18686  0150AE  0E00               	movlw	low (__mediumconst shr (0+16))
 18687  0150B0  6EF8               	movwf	tblptru,c
 18688  0150B2                     	endif
 18689  0150B2  0008               	tblrd		*
 18690  0150B4  50F5               	movf	tablat,w,c
 18691  0150B6  ECC0  F0B1         	call	_toupper
 18692  0150BA  0800               	sublw	0
 18693  0150BC  0100               	movlb	0	; () banked
 18694  0150BE  6F65               	movwf	??_stricmp& (0+255),b
 18695  0150C0  C061  FFD9         	movff	stricmp@s1,fsr2l
 18696  0150C4  C062  FFDA         	movff	stricmp@s1+1,fsr2h
 18697  0150C8  50DF               	movf	indf2,w,c
 18698  0150CA  ECC0  F0B1         	call	_toupper
 18699  0150CE  0100               	movlb	0	; () banked
 18700  0150D0  2565               	addwf	??_stricmp& (0+255),w,b
 18701  0150D2  6F66               	movwf	stricmp@r& (0+255),b
 18702  0150D4  5166               	movf	stricmp@r& (0+255),w,b
 18703  0150D6  A4D8               	btfss	status,2,c
 18704  0150D8  D007               	goto	u14950
 18705                           
 18706                           ; BSR set to: 0
 18707  0150DA  C061  FFD9         	movff	stricmp@s1,fsr2l
 18708  0150DE  C062  FFDA         	movff	stricmp@s1+1,fsr2h
 18709  0150E2  50DF               	movf	indf2,w,c
 18710  0150E4  A4D8               	btfss	status,2,c
 18711  0150E6  D7DA               	goto	l3912
 18712  0150E8                     u14950:
 18713                           
 18714                           ; BSR set to: 0
 18715                           
 18716                           ; BSR set to: 0
 18717                           
 18718                           ; BSR set to: 0
 18719  0150E8  5166               	movf	stricmp@r& (0+255),w,b
 18720  0150EA  6F61               	movwf	?_stricmp& (0+255),b
 18721  0150EC  6B62               	clrf	(?_stricmp+1)& (0+255),b
 18722  0150EE  BF61               	btfsc	?_stricmp& (0+255),7,b
 18723  0150F0  0762               	decf	(?_stricmp+1)& (0+255),f,b
 18724  0150F2  0012               	return	
 18725  0150F4                     __end_of_stricmp:
 18726                           	opt stack 0
 18727                           tblptru	equ	0xFF8
 18728                           tblptrh	equ	0xFF7
 18729                           tblptrl	equ	0xFF6
 18730                           tablat	equ	0xFF5
 18731                           prodh	equ	0xFF4
 18732                           prodl	equ	0xFF3
 18733                           postinc0	equ	0xFEE
 18734                           wreg	equ	0xFE8
 18735                           postinc1	equ	0xFE6
 18736                           postdec1	equ	0xFE5
 18737                           plusw1	equ	0xFE3
 18738                           fsr1h	equ	0xFE2
 18739                           fsr1l	equ	0xFE1
 18740                           indf2	equ	0xFDF
 18741                           postinc2	equ	0xFDE
 18742                           postdec2	equ	0xFDD
 18743                           plusw2	equ	0xFDB
 18744                           fsr2h	equ	0xFDA
 18745                           fsr2l	equ	0xFD9
 18746                           status	equ	0xFD8
 18747                           
 18748 ;; *************** function _toupper *****************
 18749 ;; Defined at:
 18750 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\toupper.c"
 18751 ;; Parameters:    Size  Location     Type
 18752 ;;  c               1    wreg     unsigned char 
 18753 ;; Auto vars:     Size  Location     Type
 18754 ;;  c               1    0[BANK0 ] unsigned char 
 18755 ;; Return value:  Size  Location     Type
 18756 ;;                  1    wreg      unsigned char 
 18757 ;; Registers used:
 18758 ;;		wreg, status,2, status,0
 18759 ;; Tracked objects:
 18760 ;;		On entry : 0/0
 18761 ;;		On exit  : 0/0
 18762 ;;		Unchanged: 0/0
 18763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18765 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18767 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18768 ;;Total ram usage:        1 bytes
 18769 ;; Hardware stack levels used:    1
 18770 ;; Hardware stack levels required when called:   10
 18771 ;; This function calls:
 18772 ;;		Nothing
 18773 ;; This function is called by:
 18774 ;;		_stricmp
 18775 ;; This function uses a non-reentrant model
 18776 ;;
 18777                           
 18778                           	psect	text71
 18779  016380                     __ptext71:
 18780                           	opt stack 0
 18781  016380                     _toupper:
 18782                           	opt stack 16
 18783                           
 18784                           ; BSR set to: 0
 18785                           ;incstack = 0
 18786                           ;toupper@c stored from wreg
 18787  016380  0100               	movlb	0	; () banked
 18788  016382  6F60               	movwf	toupper@c& (0+255),b
 18789  016384  0E7B               	movlw	123
 18790  016386  0100               	movlb	0	; () banked
 18791  016388  6160               	cpfslt	toupper@c& (0+255),b
 18792  01638A  D004               	goto	l3934
 18793                           
 18794                           ; BSR set to: 0
 18795  01638C  0E60               	movlw	96
 18796  01638E  6560               	cpfsgt	toupper@c& (0+255),b
 18797  016390  D001               	goto	l3934
 18798                           
 18799                           ; BSR set to: 0
 18800  016392  9B60               	bcf	toupper@c& (0+255),5,b
 18801  016394                     l3934:
 18802                           
 18803                           ; BSR set to: 0
 18804                           
 18805                           ; BSR set to: 0
 18806  016394  5160               	movf	toupper@c& (0+255),w,b
 18807  016396  0012               	return	
 18808  016398                     __end_of_toupper:
 18809                           	opt stack 0
 18810                           tblptru	equ	0xFF8
 18811                           tblptrh	equ	0xFF7
 18812                           tblptrl	equ	0xFF6
 18813                           tablat	equ	0xFF5
 18814                           prodh	equ	0xFF4
 18815                           prodl	equ	0xFF3
 18816                           postinc0	equ	0xFEE
 18817                           wreg	equ	0xFE8
 18818                           postinc1	equ	0xFE6
 18819                           postdec1	equ	0xFE5
 18820                           plusw1	equ	0xFE3
 18821                           fsr1h	equ	0xFE2
 18822                           fsr1l	equ	0xFE1
 18823                           indf2	equ	0xFDF
 18824                           postinc2	equ	0xFDE
 18825                           postdec2	equ	0xFDD
 18826                           plusw2	equ	0xFDB
 18827                           fsr2h	equ	0xFDA
 18828                           fsr2l	equ	0xFD9
 18829                           status	equ	0xFD8
 18830                           
 18831 ;; *************** function _atol *****************
 18832 ;; Defined at:
 18833 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\atol.c"
 18834 ;; Parameters:    Size  Location     Type
 18835 ;;  s               2   12[BANK0 ] PTR const unsigned char 
 18836 ;;		 -> configFile_read@value_string(12), 
 18837 ;; Auto vars:     Size  Location     Type
 18838 ;;  a               4   21[BANK0 ] long 
 18839 ;;  c               1   25[BANK0 ] unsigned char 
 18840 ;;  sign            1   20[BANK0 ] unsigned char 
 18841 ;; Return value:  Size  Location     Type
 18842 ;;                  4   12[BANK0 ] long 
 18843 ;; Registers used:
 18844 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18845 ;; Tracked objects:
 18846 ;;		On entry : 0/0
 18847 ;;		On exit  : 0/0
 18848 ;;		Unchanged: 0/0
 18849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18850 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18851 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18852 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18853 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18854 ;;Total ram usage:       14 bytes
 18855 ;; Hardware stack levels used:    1
 18856 ;; Hardware stack levels required when called:   11
 18857 ;; This function calls:
 18858 ;;		___lmul
 18859 ;;		_isdigit
 18860 ;; This function is called by:
 18861 ;;		__parse_item
 18862 ;; This function uses a non-reentrant model
 18863 ;;
 18864                           
 18865                           	psect	text72
 18866  011C36                     __ptext72:
 18867                           	opt stack 0
 18868  011C36                     _atol:
 18869                           	opt stack 16
 18870                           
 18871                           ; BSR set to: 0
 18872                           ;incstack = 0
 18873  011C36  C06C  FFD9         	movff	atol@s,fsr2l
 18874  011C3A  C06D  FFDA         	movff	atol@s+1,fsr2h
 18875  011C3E  50DF               	movf	indf2,w,c
 18876  011C40  0100               	movlb	0	; () banked
 18877  011C42  6F79               	movwf	atol@c& (0+255),b
 18878                           
 18879                           ; BSR set to: 0
 18880  011C44  4B6C               	infsnz	atol@s& (0+255),f,b
 18881  011C46  2B6D               	incf	(atol@s+1)& (0+255),f,b
 18882                           
 18883                           ; BSR set to: 0
 18884  011C48  0E20               	movlw	32
 18885  011C4A  1979               	xorwf	atol@c& (0+255),w,b
 18886  011C4C  B4D8               	btfsc	status,2,c
 18887  011C4E  D7F3               	goto	_atol
 18888                           
 18889                           ; BSR set to: 0
 18890  011C50  0E09               	movlw	9
 18891  011C52  1979               	xorwf	atol@c& (0+255),w,b
 18892  011C54  B4D8               	btfsc	status,2,c
 18893  011C56  D7EF               	goto	_atol
 18894                           
 18895                           ; BSR set to: 0
 18896                           
 18897                           ; BSR set to: 0
 18898  011C58  0E00               	movlw	0
 18899  011C5A  6F75               	movwf	atol@a& (0+255),b
 18900  011C5C  0E00               	movlw	0
 18901  011C5E  6F76               	movwf	(atol@a+1)& (0+255),b
 18902  011C60  0E00               	movlw	0
 18903  011C62  6F77               	movwf	(atol@a+2)& (0+255),b
 18904  011C64  0E00               	movlw	0
 18905  011C66  6F78               	movwf	(atol@a+3)& (0+255),b
 18906  011C68  0E00               	movlw	0
 18907  011C6A  6F74               	movwf	atol@sign& (0+255),b
 18908                           
 18909                           ; BSR set to: 0
 18910  011C6C  0E2D               	movlw	45
 18911  011C6E  1979               	xorwf	atol@c& (0+255),w,b
 18912  011C70  A4D8               	btfss	status,2,c
 18913  011C72  D002               	goto	l3854
 18914                           
 18915                           ; BSR set to: 0
 18916  011C74  2B74               	incf	atol@sign& (0+255),f,b
 18917  011C76  D029               	goto	L73
 18918  011C78                     l3854:
 18919                           
 18920                           ; BSR set to: 0
 18921                           
 18922                           ; BSR set to: 0
 18923  011C78  0E2B               	movlw	43
 18924  011C7A  1979               	xorwf	atol@c& (0+255),w,b
 18925  011C7C  A4D8               	btfss	status,2,c
 18926  011C7E  D02D               	goto	l3857
 18927  011C80  D024               	goto	L73
 18928  011C82                     
 18929                           ; BSR set to: 0
 18930  011C82  C075  F060         	movff	atol@a,___lmul@multiplier
 18931  011C86  C076  F061         	movff	atol@a+1,___lmul@multiplier+1
 18932  011C8A  C077  F062         	movff	atol@a+2,___lmul@multiplier+2
 18933  011C8E  C078  F063         	movff	atol@a+3,___lmul@multiplier+3
 18934  011C92  0E0A               	movlw	10
 18935  011C94  0100               	movlb	0	; () banked
 18936  011C96  6F64               	movwf	___lmul@multiplicand& (0+255),b
 18937  011C98  0E00               	movlw	0
 18938  011C9A  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 18939  011C9C  0E00               	movlw	0
 18940  011C9E  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 18941  011CA0  0E00               	movlw	0
 18942  011CA2  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 18943  011CA4  EC85  F0A9         	call	___lmul	;wreg free
 18944  011CA8  C079  F070         	movff	atol@c,??_atol
 18945  011CAC  0ED0               	movlw	208
 18946  011CAE  0100               	movlb	0	; () banked
 18947  011CB0  2770               	addwf	??_atol& (0+255),f,b
 18948  011CB2  5170               	movf	??_atol& (0+255),w,b
 18949  011CB4  2560               	addwf	?___lmul& (0+255),w,b
 18950  011CB6  6F75               	movwf	atol@a& (0+255),b
 18951  011CB8  0E00               	movlw	0
 18952  011CBA  2161               	addwfc	(?___lmul+1)& (0+255),w,b
 18953  011CBC  6F76               	movwf	(atol@a+1)& (0+255),b
 18954  011CBE  0E00               	movlw	0
 18955  011CC0  2162               	addwfc	(?___lmul+2)& (0+255),w,b
 18956  011CC2  6F77               	movwf	(atol@a+2)& (0+255),b
 18957  011CC4  0E00               	movlw	0
 18958  011CC6  2163               	addwfc	(?___lmul+3)& (0+255),w,b
 18959  011CC8  6F78               	movwf	(atol@a+3)& (0+255),b
 18960  011CCA                     L73:
 18961                           
 18962                           ; BSR set to: 0
 18963  011CCA  C06C  FFD9         	movff	atol@s,fsr2l
 18964  011CCE  C06D  FFDA         	movff	atol@s+1,fsr2h
 18965  011CD2  50DF               	movf	indf2,w,c
 18966  011CD4  6F79               	movwf	atol@c& (0+255),b
 18967                           
 18968                           ; BSR set to: 0
 18969  011CD6  4B6C               	infsnz	atol@s& (0+255),f,b
 18970  011CD8  2B6D               	incf	(atol@s+1)& (0+255),f,b
 18971  011CDA                     l3857:
 18972                           
 18973                           ; BSR set to: 0
 18974                           
 18975                           ; BSR set to: 0
 18976  011CDA  5179               	movf	atol@c& (0+255),w,b
 18977  011CDC  EC39  F0B1         	call	_isdigit
 18978  011CE0  B0D8               	btfsc	status,0,c
 18979  011CE2  D7CF               	goto	l3858
 18980  011CE4  0100               	movlb	0	; () banked
 18981  011CE6  5174               	movf	atol@sign& (0+255),w,b
 18982  011CE8  B4D8               	btfsc	status,2,c
 18983  011CEA  D01A               	goto	l3860
 18984                           
 18985                           ; BSR set to: 0
 18986  011CEC  C075  F070         	movff	atol@a,??_atol
 18987  011CF0  C076  F071         	movff	atol@a+1,??_atol+1
 18988  011CF4  C077  F072         	movff	atol@a+2,??_atol+2
 18989  011CF8  C078  F073         	movff	atol@a+3,??_atol+3
 18990  011CFC  1F70               	comf	??_atol& (0+255),f,b
 18991  011CFE  1F71               	comf	(??_atol+1)& (0+255),f,b
 18992  011D00  1F72               	comf	(??_atol+2)& (0+255),f,b
 18993  011D02  1F73               	comf	(??_atol+3)& (0+255),f,b
 18994  011D04  2B70               	incf	??_atol& (0+255),f,b
 18995  011D06  0E00               	movlw	0
 18996  011D08  2371               	addwfc	(??_atol+1)& (0+255),f,b
 18997  011D0A  2372               	addwfc	(??_atol+2)& (0+255),f,b
 18998  011D0C  2373               	addwfc	(??_atol+3)& (0+255),f,b
 18999  011D0E  C070  F06C         	movff	??_atol,?_atol
 19000  011D12  C071  F06D         	movff	??_atol+1,?_atol+1
 19001  011D16  C072  F06E         	movff	??_atol+2,?_atol+2
 19002  011D1A  C073  F06F         	movff	??_atol+3,?_atol+3
 19003                           
 19004                           ; BSR set to: 0
 19005  011D1E  0012               	return	
 19006  011D20                     l3860:
 19007                           
 19008                           ; BSR set to: 0
 19009  011D20  C075  F06C         	movff	atol@a,?_atol
 19010  011D24  C076  F06D         	movff	atol@a+1,?_atol+1
 19011  011D28  C077  F06E         	movff	atol@a+2,?_atol+2
 19012  011D2C  C078  F06F         	movff	atol@a+3,?_atol+3
 19013                           
 19014                           ; BSR set to: 0
 19015  011D30  0012               	return		;funcret
 19016  011D32                     __end_of_atol:
 19017                           	opt stack 0
 19018                           tblptru	equ	0xFF8
 19019                           tblptrh	equ	0xFF7
 19020                           tblptrl	equ	0xFF6
 19021                           tablat	equ	0xFF5
 19022                           prodh	equ	0xFF4
 19023                           prodl	equ	0xFF3
 19024                           postinc0	equ	0xFEE
 19025                           wreg	equ	0xFE8
 19026                           postinc1	equ	0xFE6
 19027                           postdec1	equ	0xFE5
 19028                           plusw1	equ	0xFE3
 19029                           fsr1h	equ	0xFE2
 19030                           fsr1l	equ	0xFE1
 19031                           indf2	equ	0xFDF
 19032                           postinc2	equ	0xFDE
 19033                           postdec2	equ	0xFDD
 19034                           plusw2	equ	0xFDB
 19035                           fsr2h	equ	0xFDA
 19036                           fsr2l	equ	0xFD9
 19037                           status	equ	0xFD8
 19038                           
 19039 ;; *************** function _atoi *****************
 19040 ;; Defined at:
 19041 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\atoi.c"
 19042 ;; Parameters:    Size  Location     Type
 19043 ;;  s               2    6[BANK0 ] PTR const unsigned char 
 19044 ;;		 -> configFile_read@value_string(12), 
 19045 ;; Auto vars:     Size  Location     Type
 19046 ;;  a               2   11[BANK0 ] int 
 19047 ;;  sign            1   10[BANK0 ] unsigned char 
 19048 ;; Return value:  Size  Location     Type
 19049 ;;                  2    6[BANK0 ] int 
 19050 ;; Registers used:
 19051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19052 ;; Tracked objects:
 19053 ;;		On entry : 0/0
 19054 ;;		On exit  : 0/0
 19055 ;;		Unchanged: 0/0
 19056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19057 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19058 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19059 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19060 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19061 ;;Total ram usage:        7 bytes
 19062 ;; Hardware stack levels used:    1
 19063 ;; Hardware stack levels required when called:   11
 19064 ;; This function calls:
 19065 ;;		___wmul
 19066 ;;		_isdigit
 19067 ;; This function is called by:
 19068 ;;		__parse_item
 19069 ;; This function uses a non-reentrant model
 19070 ;;
 19071                           
 19072                           	psect	text73
 19073  012B90                     __ptext73:
 19074                           	opt stack 0
 19075  012B90                     _atoi:
 19076                           	opt stack 16
 19077                           
 19078                           ; BSR set to: 0
 19079                           ;incstack = 0
 19080  012B90  D003               	goto	l3837
 19081  012B92  0100               	movlb	0	; () banked
 19082  012B94  4B66               	infsnz	atoi@s& (0+255),f,b
 19083  012B96  2B67               	incf	(atoi@s+1)& (0+255),f,b
 19084  012B98                     l3837:
 19085                           
 19086                           ; BSR set to: 0
 19087  012B98  C066  FFD9         	movff	atoi@s,fsr2l
 19088  012B9C  C067  FFDA         	movff	atoi@s+1,fsr2h
 19089  012BA0  0E20               	movlw	32
 19090  012BA2  18DE               	xorwf	postinc2,w,c
 19091  012BA4  B4D8               	btfsc	status,2,c
 19092  012BA6  D7F5               	goto	l3838
 19093  012BA8  C066  FFD9         	movff	atoi@s,fsr2l
 19094  012BAC  C067  FFDA         	movff	atoi@s+1,fsr2h
 19095  012BB0  0E09               	movlw	9
 19096  012BB2  18DE               	xorwf	postinc2,w,c
 19097  012BB4  B4D8               	btfsc	status,2,c
 19098  012BB6  D7ED               	goto	l3838
 19099  012BB8  0E00               	movlw	0
 19100  012BBA  0100               	movlb	0	; () banked
 19101  012BBC  6F6C               	movwf	(atoi@a+1)& (0+255),b
 19102  012BBE  0E00               	movlw	0
 19103  012BC0  6F6B               	movwf	atoi@a& (0+255),b
 19104  012BC2  0E00               	movlw	0
 19105  012BC4  6F6A               	movwf	atoi@sign& (0+255),b
 19106                           
 19107                           ; BSR set to: 0
 19108  012BC6  C066  FFD9         	movff	atoi@s,fsr2l
 19109  012BCA  C067  FFDA         	movff	atoi@s+1,fsr2h
 19110  012BCE  0E2D               	movlw	45
 19111  012BD0  18DE               	xorwf	postinc2,w,c
 19112  012BD2  A4D8               	btfss	status,2,c
 19113  012BD4  D002               	goto	l3840
 19114                           
 19115                           ; BSR set to: 0
 19116  012BD6  2B6A               	incf	atoi@sign& (0+255),f,b
 19117  012BD8  D026               	goto	l16243
 19118  012BDA                     l3840:
 19119                           
 19120                           ; BSR set to: 0
 19121                           
 19122                           ; BSR set to: 0
 19123  012BDA  C066  FFD9         	movff	atoi@s,fsr2l
 19124  012BDE  C067  FFDA         	movff	atoi@s+1,fsr2h
 19125  012BE2  0E2B               	movlw	43
 19126  012BE4  18DE               	xorwf	postinc2,w,c
 19127  012BE6  A4D8               	btfss	status,2,c
 19128  012BE8  D020               	goto	l3843
 19129  012BEA  D01D               	goto	l16243
 19130  012BEC                     
 19131                           ; BSR set to: 0
 19132  012BEC  C06B  F060         	movff	atoi@a,___wmul@multiplier
 19133  012BF0  C06C  F061         	movff	atoi@a+1,___wmul@multiplier+1
 19134  012BF4  0E00               	movlw	0
 19135  012BF6  0100               	movlb	0	; () banked
 19136  012BF8  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19137  012BFA  0E0A               	movlw	10
 19138  012BFC  6F62               	movwf	___wmul@multiplicand& (0+255),b
 19139  012BFE  EC7E  F0B0         	call	___wmul	;wreg free
 19140  012C02  C066  FFD9         	movff	atoi@s,fsr2l
 19141  012C06  C067  FFDA         	movff	atoi@s+1,fsr2h
 19142  012C0A  50DF               	movf	indf2,w,c
 19143  012C0C  0100               	movlb	0	; () banked
 19144  012C0E  6F68               	movwf	??_atoi& (0+255),b
 19145  012C10  6B69               	clrf	(??_atoi+1)& (0+255),b
 19146  012C12  5160               	movf	?___wmul& (0+255),w,b
 19147  012C14  2768               	addwf	??_atoi& (0+255),f,b
 19148  012C16  5161               	movf	(?___wmul+1)& (0+255),w,b
 19149  012C18  2369               	addwfc	(??_atoi+1)& (0+255),f,b
 19150  012C1A  0ED0               	movlw	208
 19151  012C1C  2568               	addwf	??_atoi& (0+255),w,b
 19152  012C1E  6F6B               	movwf	atoi@a& (0+255),b
 19153  012C20  0EFF               	movlw	255
 19154  012C22  2169               	addwfc	(??_atoi+1)& (0+255),w,b
 19155  012C24  6F6C               	movwf	(atoi@a+1)& (0+255),b
 19156  012C26                     l16243:
 19157                           
 19158                           ; BSR set to: 0
 19159  012C26  4B66               	infsnz	atoi@s& (0+255),f,b
 19160  012C28  2B67               	incf	(atoi@s+1)& (0+255),f,b
 19161  012C2A                     l3843:
 19162                           
 19163                           ; BSR set to: 0
 19164                           
 19165                           ; BSR set to: 0
 19166  012C2A  C066  FFD9         	movff	atoi@s,fsr2l
 19167  012C2E  C067  FFDA         	movff	atoi@s+1,fsr2h
 19168  012C32  50DF               	movf	indf2,w,c
 19169  012C34  EC39  F0B1         	call	_isdigit
 19170  012C38  B0D8               	btfsc	status,0,c
 19171  012C3A  D7D8               	goto	l3844
 19172  012C3C  0100               	movlb	0	; () banked
 19173  012C3E  516A               	movf	atoi@sign& (0+255),w,b
 19174  012C40  B4D8               	btfsc	status,2,c
 19175  012C42  D00D               	goto	l3846
 19176                           
 19177                           ; BSR set to: 0
 19178  012C44  C06B  F068         	movff	atoi@a,??_atoi
 19179  012C48  C06C  F069         	movff	atoi@a+1,??_atoi+1
 19180  012C4C  1F68               	comf	??_atoi& (0+255),f,b
 19181  012C4E  1F69               	comf	(??_atoi+1)& (0+255),f,b
 19182  012C50  4B68               	infsnz	??_atoi& (0+255),f,b
 19183  012C52  2B69               	incf	(??_atoi+1)& (0+255),f,b
 19184  012C54  C068  F066         	movff	??_atoi,?_atoi
 19185  012C58  C069  F067         	movff	??_atoi+1,?_atoi+1
 19186  012C5C  0012               	return	
 19187  012C5E                     l3846:
 19188                           
 19189                           ; BSR set to: 0
 19190  012C5E  C06B  F066         	movff	atoi@a,?_atoi
 19191  012C62  C06C  F067         	movff	atoi@a+1,?_atoi+1
 19192                           
 19193                           ; BSR set to: 0
 19194  012C66  0012               	return		;funcret
 19195  012C68                     __end_of_atoi:
 19196                           	opt stack 0
 19197                           tblptru	equ	0xFF8
 19198                           tblptrh	equ	0xFF7
 19199                           tblptrl	equ	0xFF6
 19200                           tablat	equ	0xFF5
 19201                           prodh	equ	0xFF4
 19202                           prodl	equ	0xFF3
 19203                           postinc0	equ	0xFEE
 19204                           wreg	equ	0xFE8
 19205                           postinc1	equ	0xFE6
 19206                           postdec1	equ	0xFE5
 19207                           plusw1	equ	0xFE3
 19208                           fsr1h	equ	0xFE2
 19209                           fsr1l	equ	0xFE1
 19210                           indf2	equ	0xFDF
 19211                           postinc2	equ	0xFDE
 19212                           postdec2	equ	0xFDD
 19213                           plusw2	equ	0xFDB
 19214                           fsr2h	equ	0xFDA
 19215                           fsr2l	equ	0xFD9
 19216                           status	equ	0xFD8
 19217                           
 19218 ;; *************** function _isdigit *****************
 19219 ;; Defined at:
 19220 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\isdigit.c"
 19221 ;; Parameters:    Size  Location     Type
 19222 ;;  c               1    wreg     unsigned char 
 19223 ;; Auto vars:     Size  Location     Type
 19224 ;;  c               1    2[BANK0 ] unsigned char 
 19225 ;; Return value:  Size  Location     Type
 19226 ;;		None               void
 19227 ;; Registers used:
 19228 ;;		wreg, status,2, status,0
 19229 ;; Tracked objects:
 19230 ;;		On entry : 0/0
 19231 ;;		On exit  : 0/0
 19232 ;;		Unchanged: 0/0
 19233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19235 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19236 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19237 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19238 ;;Total ram usage:        3 bytes
 19239 ;; Hardware stack levels used:    1
 19240 ;; Hardware stack levels required when called:   10
 19241 ;; This function calls:
 19242 ;;		Nothing
 19243 ;; This function is called by:
 19244 ;;		_atoi
 19245 ;;		_atol
 19246 ;; This function uses a non-reentrant model
 19247 ;;
 19248                           
 19249                           	psect	text74
 19250  016272                     __ptext74:
 19251                           	opt stack 0
 19252  016272                     _isdigit:
 19253                           	opt stack 16
 19254                           
 19255                           ; BSR set to: 0
 19256                           ;incstack = 0
 19257                           ;isdigit@c stored from wreg
 19258  016272  0100               	movlb	0	; () banked
 19259  016274  6F62               	movwf	isdigit@c& (0+255),b
 19260  016276  0E00               	movlw	0
 19261  016278  0100               	movlb	0	; () banked
 19262  01627A  6F61               	movwf	_isdigit$8519& (0+255),b
 19263                           
 19264                           ; BSR set to: 0
 19265  01627C  0E3A               	movlw	58
 19266  01627E  6162               	cpfslt	isdigit@c& (0+255),b
 19267  016280  D005               	goto	l3865
 19268                           
 19269                           ; BSR set to: 0
 19270  016282  0E2F               	movlw	47
 19271  016284  6562               	cpfsgt	isdigit@c& (0+255),b
 19272  016286  D002               	goto	l3865
 19273                           
 19274                           ; BSR set to: 0
 19275  016288  0E01               	movlw	1
 19276  01628A  6F61               	movwf	_isdigit$8519& (0+255),b
 19277  01628C                     l3865:
 19278                           
 19279                           ; BSR set to: 0
 19280                           
 19281                           ; BSR set to: 0
 19282  01628C  C061  F060         	movff	_isdigit$8519,??_isdigit
 19283  016290  3160               	rrcf	??_isdigit& (0+255),w,b
 19284  016292  0012               	return	
 19285  016294                     __end_of_isdigit:
 19286                           	opt stack 0
 19287                           tblptru	equ	0xFF8
 19288                           tblptrh	equ	0xFF7
 19289                           tblptrl	equ	0xFF6
 19290                           tablat	equ	0xFF5
 19291                           prodh	equ	0xFF4
 19292                           prodl	equ	0xFF3
 19293                           postinc0	equ	0xFEE
 19294                           wreg	equ	0xFE8
 19295                           postinc1	equ	0xFE6
 19296                           postdec1	equ	0xFE5
 19297                           plusw1	equ	0xFE3
 19298                           fsr1h	equ	0xFE2
 19299                           fsr1l	equ	0xFE1
 19300                           indf2	equ	0xFDF
 19301                           postinc2	equ	0xFDE
 19302                           postdec2	equ	0xFDD
 19303                           plusw2	equ	0xFDB
 19304                           fsr2h	equ	0xFDA
 19305                           fsr2l	equ	0xFD9
 19306                           status	equ	0xFD8
 19307                           
 19308 ;; *************** function ___wmul *****************
 19309 ;; Defined at:
 19310 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
 19311 ;; Parameters:    Size  Location     Type
 19312 ;;  multiplier      2    0[BANK0 ] unsigned int 
 19313 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 19314 ;; Auto vars:     Size  Location     Type
 19315 ;;  product         2    4[BANK0 ] unsigned int 
 19316 ;; Return value:  Size  Location     Type
 19317 ;;                  2    0[BANK0 ] unsigned int 
 19318 ;; Registers used:
 19319 ;;		wreg, status,2, status,0, prodl, prodh
 19320 ;; Tracked objects:
 19321 ;;		On entry : 0/0
 19322 ;;		On exit  : 0/0
 19323 ;;		Unchanged: 0/0
 19324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19325 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19326 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19328 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19329 ;;Total ram usage:        6 bytes
 19330 ;; Hardware stack levels used:    1
 19331 ;; Hardware stack levels required when called:   10
 19332 ;; This function calls:
 19333 ;;		Nothing
 19334 ;; This function is called by:
 19335 ;;		_atoi
 19336 ;; This function uses a non-reentrant model
 19337 ;;
 19338                           
 19339                           	psect	text75
 19340  0160FC                     __ptext75:
 19341                           	opt stack 0
 19342  0160FC                     ___wmul:
 19343                           	opt stack 16
 19344                           
 19345                           ; BSR set to: 0
 19346                           ;incstack = 0
 19347  0160FC  0100               	movlb	0	; () banked
 19348  0160FE  5160               	movf	___wmul@multiplier& (0+255),w,b
 19349  016100  0362               	mulwf	___wmul@multiplicand& (0+255),b
 19350  016102  CFF3 F064          	movff	prodl,___wmul@product
 19351  016106  CFF4 F065          	movff	prodh,___wmul@product+1
 19352  01610A  5160               	movf	___wmul@multiplier& (0+255),w,b
 19353  01610C  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 19354  01610E  50F3               	movf	prodl,w,c
 19355  016110  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 19356  016112  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 19357  016114  0362               	mulwf	___wmul@multiplicand& (0+255),b
 19358  016116  50F3               	movf	prodl,w,c
 19359  016118  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 19360                           
 19361                           ; BSR set to: 0
 19362  01611A  C064  F060         	movff	___wmul@product,?___wmul
 19363  01611E  C065  F061         	movff	___wmul@product+1,?___wmul+1
 19364  016122  0012               	return	
 19365  016124                     __end_of___wmul:
 19366                           	opt stack 0
 19367                           tblptru	equ	0xFF8
 19368                           tblptrh	equ	0xFF7
 19369                           tblptrl	equ	0xFF6
 19370                           tablat	equ	0xFF5
 19371                           prodh	equ	0xFF4
 19372                           prodl	equ	0xFF3
 19373                           postinc0	equ	0xFEE
 19374                           wreg	equ	0xFE8
 19375                           postinc1	equ	0xFE6
 19376                           postdec1	equ	0xFE5
 19377                           plusw1	equ	0xFE3
 19378                           fsr1h	equ	0xFE2
 19379                           fsr1l	equ	0xFE1
 19380                           indf2	equ	0xFDF
 19381                           postinc2	equ	0xFDE
 19382                           postdec2	equ	0xFDD
 19383                           plusw2	equ	0xFDB
 19384                           fsr2h	equ	0xFDA
 19385                           fsr2l	equ	0xFD9
 19386                           status	equ	0xFD8
 19387                           
 19388 ;; *************** function __steps_from_degrees *****************
 19389 ;; Defined at:
 19390 ;;		line 227 in file "config_file.c"
 19391 ;; Parameters:    Size  Location     Type
 19392 ;;  degrees         4   49[BANK0 ] long 
 19393 ;; Auto vars:     Size  Location     Type
 19394 ;;  temp            4   53[BANK0 ] long 
 19395 ;; Return value:  Size  Location     Type
 19396 ;;                  4   49[BANK0 ] long 
 19397 ;; Registers used:
 19398 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 19399 ;; Tracked objects:
 19400 ;;		On entry : 0/0
 19401 ;;		On exit  : 0/0
 19402 ;;		Unchanged: 0/0
 19403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19404 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19405 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19407 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19408 ;;Total ram usage:        8 bytes
 19409 ;; Hardware stack levels used:    1
 19410 ;; Hardware stack levels required when called:   11
 19411 ;; This function calls:
 19412 ;;		___fldiv
 19413 ;;		___flge
 19414 ;;		___flmul
 19415 ;;		___fltol
 19416 ;;		___xxtofl
 19417 ;; This function is called by:
 19418 ;;		__parse_item
 19419 ;; This function uses a non-reentrant model
 19420 ;;
 19421                           
 19422                           	psect	text76
 19423  00F0CA                     __ptext76:
 19424                           	opt stack 0
 19425  00F0CA                     __steps_from_degrees:
 19426                           	opt stack 16
 19427                           
 19428                           ;config_file.c: 229: double temp;;config_file.c: 232: if(degrees==0)
 19429                           
 19430                           ; BSR set to: 0
 19431                           ;incstack = 0
 19432  00F0CA  0100               	movlb	0	; () banked
 19433  00F0CC  5191               	movf	__steps_from_degrees@degrees& (0+255),w,b
 19434  00F0CE  1192               	iorwf	(__steps_from_degrees@degrees+1)& (0+255),w,b
 19435  00F0D0  1193               	iorwf	(__steps_from_degrees@degrees+2)& (0+255),w,b
 19436  00F0D2  1194               	iorwf	(__steps_from_degrees@degrees+3)& (0+255),w,b
 19437  00F0D4  A4D8               	btfss	status,2,c
 19438  00F0D6  D009               	goto	l3150
 19439                           
 19440                           ; BSR set to: 0
 19441                           ;config_file.c: 233: {;config_file.c: 234: return 0;
 19442  00F0D8  0E00               	movlw	0
 19443  00F0DA  6F91               	movwf	?__steps_from_degrees& (0+255),b
 19444  00F0DC  0E00               	movlw	0
 19445  00F0DE  6F92               	movwf	(?__steps_from_degrees+1)& (0+255),b
 19446  00F0E0  0E00               	movlw	0
 19447  00F0E2  6F93               	movwf	(?__steps_from_degrees+2)& (0+255),b
 19448  00F0E4  0E00               	movlw	0
 19449  00F0E6  6F94               	movwf	(?__steps_from_degrees+3)& (0+255),b
 19450                           
 19451                           ; BSR set to: 0
 19452  00F0E8  0012               	return	
 19453  00F0EA                     l3150:
 19454                           
 19455                           ; BSR set to: 0
 19456                           ;config_file.c: 235: };config_file.c: 238: temp = (float) degrees;
 19457                           
 19458                           ; BSR set to: 0
 19459  00F0EA  C091  F06A         	movff	__steps_from_degrees@degrees,___xxtofl@val
 19460  00F0EE  C092  F06B         	movff	__steps_from_degrees@degrees+1,___xxtofl@val+1
 19461  00F0F2  C093  F06C         	movff	__steps_from_degrees@degrees+2,___xxtofl@val+2
 19462  00F0F6  C094  F06D         	movff	__steps_from_degrees@degrees+3,___xxtofl@val+3
 19463  00F0FA  0E01               	movlw	1
 19464  00F0FC  EC91  F082         	call	___xxtofl
 19465  00F100  C06A  F095         	movff	?___xxtofl,__steps_from_degrees@temp
 19466  00F104  C06B  F096         	movff	?___xxtofl+1,__steps_from_degrees@temp+1
 19467  00F108  C06C  F097         	movff	?___xxtofl+2,__steps_from_degrees@temp+2
 19468  00F10C  C06D  F098         	movff	?___xxtofl+3,__steps_from_degrees@temp+3
 19469                           
 19470                           ;config_file.c: 241: temp *= (float) config.full_circle_in_steps;
 19471  00F110  C095  F078         	movff	__steps_from_degrees@temp,___flmul@b
 19472  00F114  C096  F079         	movff	__steps_from_degrees@temp+1,___flmul@b+1
 19473  00F118  C097  F07A         	movff	__steps_from_degrees@temp+2,___flmul@b+2
 19474  00F11C  C098  F07B         	movff	__steps_from_degrees@temp+3,___flmul@b+3
 19475  00F120  C195  F06A         	movff	_config,___xxtofl@val
 19476  00F124  C196  F06B         	movff	_config+1,___xxtofl@val+1
 19477  00F128  C197  F06C         	movff	_config+2,___xxtofl@val+2
 19478  00F12C  C198  F06D         	movff	_config+3,___xxtofl@val+3
 19479  00F130  0E00               	movlw	0
 19480  00F132  EC91  F082         	call	___xxtofl
 19481  00F136  C06A  F07C         	movff	?___xxtofl,___flmul@a
 19482  00F13A  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 19483  00F13E  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 19484  00F142  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 19485  00F146  EC2B  F063         	call	___flmul	;wreg free
 19486  00F14A  C078  F095         	movff	?___flmul,__steps_from_degrees@temp
 19487  00F14E  C079  F096         	movff	?___flmul+1,__steps_from_degrees@temp+1
 19488  00F152  C07A  F097         	movff	?___flmul+2,__steps_from_degrees@temp+2
 19489  00F156  C07B  F098         	movff	?___flmul+3,__steps_from_degrees@temp+3
 19490                           
 19491                           ;config_file.c: 242: temp /= 36000.0;
 19492  00F15A  C095  F078         	movff	__steps_from_degrees@temp,___fldiv@b
 19493  00F15E  C096  F079         	movff	__steps_from_degrees@temp+1,___fldiv@b+1
 19494  00F162  C097  F07A         	movff	__steps_from_degrees@temp+2,___fldiv@b+2
 19495  00F166  C098  F07B         	movff	__steps_from_degrees@temp+3,___fldiv@b+3
 19496  00F16A  0E00               	movlw	0
 19497  00F16C  0100               	movlb	0	; () banked
 19498  00F16E  6F7C               	movwf	___fldiv@a& (0+255),b
 19499  00F170  0EA0               	movlw	160
 19500  00F172  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 19501  00F174  0E0C               	movlw	12
 19502  00F176  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 19503  00F178  0E47               	movlw	71
 19504  00F17A  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 19505  00F17C  EC53  F069         	call	___fldiv	;wreg free
 19506  00F180  C078  F095         	movff	?___fldiv,__steps_from_degrees@temp
 19507  00F184  C079  F096         	movff	?___fldiv+1,__steps_from_degrees@temp+1
 19508  00F188  C07A  F097         	movff	?___fldiv+2,__steps_from_degrees@temp+2
 19509  00F18C  C07B  F098         	movff	?___fldiv+3,__steps_from_degrees@temp+3
 19510                           
 19511                           ;config_file.c: 245: if(((int32_t)temp)<-2147483648.0)
 19512  00F190  C095  F060         	movff	__steps_from_degrees@temp,___fltol@f1
 19513  00F194  C096  F061         	movff	__steps_from_degrees@temp+1,___fltol@f1+1
 19514  00F198  C097  F062         	movff	__steps_from_degrees@temp+2,___fltol@f1+2
 19515  00F19C  C098  F063         	movff	__steps_from_degrees@temp+3,___fltol@f1+3
 19516  00F1A0  ECEA  F094         	call	___fltol	;wreg free
 19517  00F1A4  C060  F06A         	movff	?___fltol,___xxtofl@val
 19518  00F1A8  C061  F06B         	movff	?___fltol+1,___xxtofl@val+1
 19519  00F1AC  C062  F06C         	movff	?___fltol+2,___xxtofl@val+2
 19520  00F1B0  C063  F06D         	movff	?___fltol+3,___xxtofl@val+3
 19521  00F1B4  0E01               	movlw	1
 19522  00F1B6  EC91  F082         	call	___xxtofl
 19523  00F1BA  C06A  F078         	movff	?___xxtofl,___flge@ff1
 19524  00F1BE  C06B  F079         	movff	?___xxtofl+1,___flge@ff1+1
 19525  00F1C2  C06C  F07A         	movff	?___xxtofl+2,___flge@ff1+2
 19526  00F1C6  C06D  F07B         	movff	?___xxtofl+3,___flge@ff1+3
 19527  00F1CA  0E00               	movlw	0
 19528  00F1CC  0100               	movlb	0	; () banked
 19529  00F1CE  6F7C               	movwf	___flge@ff2& (0+255),b
 19530  00F1D0  0E00               	movlw	0
 19531  00F1D2  6F7D               	movwf	(___flge@ff2+1)& (0+255),b
 19532  00F1D4  0E00               	movlw	0
 19533  00F1D6  6F7E               	movwf	(___flge@ff2+2)& (0+255),b
 19534  00F1D8  0ECF               	movlw	207
 19535  00F1DA  6F7F               	movwf	(___flge@ff2+3)& (0+255),b
 19536  00F1DC  EC3D  F086         	call	___flge	;wreg free
 19537  00F1E0  0100               	movlb	0	; () banked
 19538  00F1E2  B0D8               	btfsc	status,0,c
 19539  00F1E4  D009               	goto	l3152
 19540                           
 19541                           ; BSR set to: 0
 19542                           ;config_file.c: 246: {;config_file.c: 247: return -2147483648;
 19543  00F1E6  0E00               	movlw	0
 19544  00F1E8  6F91               	movwf	?__steps_from_degrees& (0+255),b
 19545  00F1EA  0E00               	movlw	0
 19546  00F1EC  6F92               	movwf	(?__steps_from_degrees+1)& (0+255),b
 19547  00F1EE  0E00               	movlw	0
 19548  00F1F0  6F93               	movwf	(?__steps_from_degrees+2)& (0+255),b
 19549  00F1F2  0E80               	movlw	128
 19550  00F1F4  6F94               	movwf	(?__steps_from_degrees+3)& (0+255),b
 19551                           
 19552                           ; BSR set to: 0
 19553  00F1F6  0012               	return	
 19554  00F1F8                     l3152:
 19555                           
 19556                           ; BSR set to: 0
 19557                           ;config_file.c: 248: };config_file.c: 249: if(((int32_t)temp)>2147483647.0)
 19558                           
 19559                           ; BSR set to: 0
 19560  00F1F8  0E00               	movlw	0
 19561  00F1FA  6F78               	movwf	___flge@ff1& (0+255),b
 19562  00F1FC  0E00               	movlw	0
 19563  00F1FE  6F79               	movwf	(___flge@ff1+1)& (0+255),b
 19564  00F200  0E00               	movlw	0
 19565  00F202  6F7A               	movwf	(___flge@ff1+2)& (0+255),b
 19566  00F204  0E4F               	movlw	79
 19567  00F206  6F7B               	movwf	(___flge@ff1+3)& (0+255),b
 19568  00F208  C095  F060         	movff	__steps_from_degrees@temp,___fltol@f1
 19569  00F20C  C096  F061         	movff	__steps_from_degrees@temp+1,___fltol@f1+1
 19570  00F210  C097  F062         	movff	__steps_from_degrees@temp+2,___fltol@f1+2
 19571  00F214  C098  F063         	movff	__steps_from_degrees@temp+3,___fltol@f1+3
 19572  00F218  ECEA  F094         	call	___fltol	;wreg free
 19573  00F21C  C060  F06A         	movff	?___fltol,___xxtofl@val
 19574  00F220  C061  F06B         	movff	?___fltol+1,___xxtofl@val+1
 19575  00F224  C062  F06C         	movff	?___fltol+2,___xxtofl@val+2
 19576  00F228  C063  F06D         	movff	?___fltol+3,___xxtofl@val+3
 19577  00F22C  0E01               	movlw	1
 19578  00F22E  EC91  F082         	call	___xxtofl
 19579  00F232  C06A  F07C         	movff	?___xxtofl,___flge@ff2
 19580  00F236  C06B  F07D         	movff	?___xxtofl+1,___flge@ff2+1
 19581  00F23A  C06C  F07E         	movff	?___xxtofl+2,___flge@ff2+2
 19582  00F23E  C06D  F07F         	movff	?___xxtofl+3,___flge@ff2+3
 19583  00F242  EC3D  F086         	call	___flge	;wreg free
 19584  00F246  0100               	movlb	0	; () banked
 19585  00F248  B0D8               	btfsc	status,0,c
 19586  00F24A  D009               	goto	l3153
 19587                           
 19588                           ; BSR set to: 0
 19589                           ;config_file.c: 250: {;config_file.c: 251: return 2147483647;
 19590  00F24C  0EFF               	movlw	255
 19591  00F24E  6F91               	movwf	?__steps_from_degrees& (0+255),b
 19592  00F250  0EFF               	movlw	255
 19593  00F252  6F92               	movwf	(?__steps_from_degrees+1)& (0+255),b
 19594  00F254  0EFF               	movlw	255
 19595  00F256  6F93               	movwf	(?__steps_from_degrees+2)& (0+255),b
 19596  00F258  0E7F               	movlw	127
 19597  00F25A  6F94               	movwf	(?__steps_from_degrees+3)& (0+255),b
 19598                           
 19599                           ; BSR set to: 0
 19600  00F25C  0012               	return	
 19601  00F25E                     l3153:
 19602                           
 19603                           ; BSR set to: 0
 19604                           ;config_file.c: 252: };config_file.c: 255: return (int32_t) temp;
 19605                           
 19606                           ; BSR set to: 0
 19607  00F25E  C095  F060         	movff	__steps_from_degrees@temp,___fltol@f1
 19608  00F262  C096  F061         	movff	__steps_from_degrees@temp+1,___fltol@f1+1
 19609  00F266  C097  F062         	movff	__steps_from_degrees@temp+2,___fltol@f1+2
 19610  00F26A  C098  F063         	movff	__steps_from_degrees@temp+3,___fltol@f1+3
 19611  00F26E  ECEA  F094         	call	___fltol	;wreg free
 19612  00F272  C060  F091         	movff	?___fltol,?__steps_from_degrees
 19613  00F276  C061  F092         	movff	?___fltol+1,?__steps_from_degrees+1
 19614  00F27A  C062  F093         	movff	?___fltol+2,?__steps_from_degrees+2
 19615  00F27E  C063  F094         	movff	?___fltol+3,?__steps_from_degrees+3
 19616  00F282  0012               	return	
 19617  00F284                     __end_of__steps_from_degrees:
 19618                           	opt stack 0
 19619                           tblptru	equ	0xFF8
 19620                           tblptrh	equ	0xFF7
 19621                           tblptrl	equ	0xFF6
 19622                           tablat	equ	0xFF5
 19623                           prodh	equ	0xFF4
 19624                           prodl	equ	0xFF3
 19625                           postinc0	equ	0xFEE
 19626                           wreg	equ	0xFE8
 19627                           postinc1	equ	0xFE6
 19628                           postdec1	equ	0xFE5
 19629                           plusw1	equ	0xFE3
 19630                           fsr1h	equ	0xFE2
 19631                           fsr1l	equ	0xFE1
 19632                           indf2	equ	0xFDF
 19633                           postinc2	equ	0xFDE
 19634                           postdec2	equ	0xFDD
 19635                           plusw2	equ	0xFDB
 19636                           fsr2h	equ	0xFDA
 19637                           fsr2l	equ	0xFD9
 19638                           status	equ	0xFD8
 19639                           
 19640 ;; *************** function ___flge *****************
 19641 ;; Defined at:
 19642 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flge.c"
 19643 ;; Parameters:    Size  Location     Type
 19644 ;;  ff1             4   24[BANK0 ] long 
 19645 ;;  ff2             4   28[BANK0 ] long 
 19646 ;; Auto vars:     Size  Location     Type
 19647 ;;		None
 19648 ;; Return value:  Size  Location     Type
 19649 ;;		None               void
 19650 ;; Registers used:
 19651 ;;		wreg, status,2, status,0
 19652 ;; Tracked objects:
 19653 ;;		On entry : 0/0
 19654 ;;		On exit  : 0/0
 19655 ;;		Unchanged: 0/0
 19656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19657 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19659 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19660 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19661 ;;Total ram usage:       12 bytes
 19662 ;; Hardware stack levels used:    1
 19663 ;; Hardware stack levels required when called:   10
 19664 ;; This function calls:
 19665 ;;		Nothing
 19666 ;; This function is called by:
 19667 ;;		__steps_from_degrees
 19668 ;;		_motor_goto_degrees_float
 19669 ;; This function uses a non-reentrant model
 19670 ;;
 19671                           
 19672                           	psect	text77
 19673  010C7A                     __ptext77:
 19674                           	opt stack 0
 19675  010C7A                     ___flge:
 19676                           	opt stack 16
 19677                           
 19678                           ;incstack = 0
 19679  010C7A  0E00               	movlw	0
 19680  010C7C  0100               	movlb	0	; () banked
 19681  010C7E  1578               	andwf	___flge@ff1& (0+255),w,b
 19682  010C80  6F80               	movwf	??___flge& (0+255),b
 19683  010C82  0E00               	movlw	0
 19684  010C84  1579               	andwf	(___flge@ff1+1)& (0+255),w,b
 19685  010C86  6F81               	movwf	(??___flge+1)& (0+255),b
 19686  010C88  0E80               	movlw	128
 19687  010C8A  157A               	andwf	(___flge@ff1+2)& (0+255),w,b
 19688  010C8C  6F82               	movwf	(??___flge+2)& (0+255),b
 19689  010C8E  0E7F               	movlw	127
 19690  010C90  157B               	andwf	(___flge@ff1+3)& (0+255),w,b
 19691  010C92  6F83               	movwf	(??___flge+3)& (0+255),b
 19692  010C94  5180               	movf	??___flge& (0+255),w,b
 19693  010C96  1181               	iorwf	(??___flge+1)& (0+255),w,b
 19694  010C98  1182               	iorwf	(??___flge+2)& (0+255),w,b
 19695  010C9A  1183               	iorwf	(??___flge+3)& (0+255),w,b
 19696  010C9C  A4D8               	btfss	status,2,c
 19697  010C9E  D008               	goto	l3431
 19698                           
 19699                           ; BSR set to: 0
 19700  010CA0  0E00               	movlw	0
 19701  010CA2  6F78               	movwf	___flge@ff1& (0+255),b
 19702  010CA4  0E00               	movlw	0
 19703  010CA6  6F79               	movwf	(___flge@ff1+1)& (0+255),b
 19704  010CA8  0E00               	movlw	0
 19705  010CAA  6F7A               	movwf	(___flge@ff1+2)& (0+255),b
 19706  010CAC  0E00               	movlw	0
 19707  010CAE  6F7B               	movwf	(___flge@ff1+3)& (0+255),b
 19708  010CB0                     l3431:
 19709                           
 19710                           ; BSR set to: 0
 19711                           
 19712                           ; BSR set to: 0
 19713  010CB0  0E00               	movlw	0
 19714  010CB2  157C               	andwf	___flge@ff2& (0+255),w,b
 19715  010CB4  6F80               	movwf	??___flge& (0+255),b
 19716  010CB6  0E00               	movlw	0
 19717  010CB8  157D               	andwf	(___flge@ff2+1)& (0+255),w,b
 19718  010CBA  6F81               	movwf	(??___flge+1)& (0+255),b
 19719  010CBC  0E80               	movlw	128
 19720  010CBE  157E               	andwf	(___flge@ff2+2)& (0+255),w,b
 19721  010CC0  6F82               	movwf	(??___flge+2)& (0+255),b
 19722  010CC2  0E7F               	movlw	127
 19723  010CC4  157F               	andwf	(___flge@ff2+3)& (0+255),w,b
 19724  010CC6  6F83               	movwf	(??___flge+3)& (0+255),b
 19725  010CC8  5180               	movf	??___flge& (0+255),w,b
 19726  010CCA  1181               	iorwf	(??___flge+1)& (0+255),w,b
 19727  010CCC  1182               	iorwf	(??___flge+2)& (0+255),w,b
 19728  010CCE  1183               	iorwf	(??___flge+3)& (0+255),w,b
 19729  010CD0  A4D8               	btfss	status,2,c
 19730  010CD2  D008               	goto	l3432
 19731                           
 19732                           ; BSR set to: 0
 19733  010CD4  0E00               	movlw	0
 19734  010CD6  6F7C               	movwf	___flge@ff2& (0+255),b
 19735  010CD8  0E00               	movlw	0
 19736  010CDA  6F7D               	movwf	(___flge@ff2+1)& (0+255),b
 19737  010CDC  0E00               	movlw	0
 19738  010CDE  6F7E               	movwf	(___flge@ff2+2)& (0+255),b
 19739  010CE0  0E00               	movlw	0
 19740  010CE2  6F7F               	movwf	(___flge@ff2+3)& (0+255),b
 19741  010CE4                     l3432:
 19742                           
 19743                           ; BSR set to: 0
 19744                           
 19745                           ; BSR set to: 0
 19746  010CE4  AF7B               	btfss	(___flge@ff1+3)& (0+255),7,b
 19747  010CE6  D01D               	goto	l3433
 19748                           
 19749                           ; BSR set to: 0
 19750  010CE8  C078  F080         	movff	___flge@ff1,??___flge
 19751  010CEC  C079  F081         	movff	___flge@ff1+1,??___flge+1
 19752  010CF0  C07A  F082         	movff	___flge@ff1+2,??___flge+2
 19753  010CF4  C07B  F083         	movff	___flge@ff1+3,??___flge+3
 19754  010CF8  1F80               	comf	??___flge& (0+255),f,b
 19755  010CFA  1F81               	comf	(??___flge+1)& (0+255),f,b
 19756  010CFC  1F82               	comf	(??___flge+2)& (0+255),f,b
 19757  010CFE  1F83               	comf	(??___flge+3)& (0+255),f,b
 19758  010D00  2B80               	incf	??___flge& (0+255),f,b
 19759  010D02  0E00               	movlw	0
 19760  010D04  2381               	addwfc	(??___flge+1)& (0+255),f,b
 19761  010D06  2382               	addwfc	(??___flge+2)& (0+255),f,b
 19762  010D08  2383               	addwfc	(??___flge+3)& (0+255),f,b
 19763  010D0A  0E00               	movlw	0
 19764  010D0C  2580               	addwf	??___flge& (0+255),w,b
 19765  010D0E  6F78               	movwf	___flge@ff1& (0+255),b
 19766  010D10  0E00               	movlw	0
 19767  010D12  2181               	addwfc	(??___flge+1)& (0+255),w,b
 19768  010D14  6F79               	movwf	(___flge@ff1+1)& (0+255),b
 19769  010D16  0E00               	movlw	0
 19770  010D18  2182               	addwfc	(??___flge+2)& (0+255),w,b
 19771  010D1A  6F7A               	movwf	(___flge@ff1+2)& (0+255),b
 19772  010D1C  0E80               	movlw	128
 19773  010D1E  2183               	addwfc	(??___flge+3)& (0+255),w,b
 19774  010D20  6F7B               	movwf	(___flge@ff1+3)& (0+255),b
 19775  010D22                     l3433:
 19776                           
 19777                           ; BSR set to: 0
 19778                           
 19779                           ; BSR set to: 0
 19780  010D22  AF7F               	btfss	(___flge@ff2+3)& (0+255),7,b
 19781  010D24  D01D               	goto	l3434
 19782                           
 19783                           ; BSR set to: 0
 19784  010D26  C07C  F080         	movff	___flge@ff2,??___flge
 19785  010D2A  C07D  F081         	movff	___flge@ff2+1,??___flge+1
 19786  010D2E  C07E  F082         	movff	___flge@ff2+2,??___flge+2
 19787  010D32  C07F  F083         	movff	___flge@ff2+3,??___flge+3
 19788  010D36  1F80               	comf	??___flge& (0+255),f,b
 19789  010D38  1F81               	comf	(??___flge+1)& (0+255),f,b
 19790  010D3A  1F82               	comf	(??___flge+2)& (0+255),f,b
 19791  010D3C  1F83               	comf	(??___flge+3)& (0+255),f,b
 19792  010D3E  2B80               	incf	??___flge& (0+255),f,b
 19793  010D40  0E00               	movlw	0
 19794  010D42  2381               	addwfc	(??___flge+1)& (0+255),f,b
 19795  010D44  2382               	addwfc	(??___flge+2)& (0+255),f,b
 19796  010D46  2383               	addwfc	(??___flge+3)& (0+255),f,b
 19797  010D48  0E00               	movlw	0
 19798  010D4A  2580               	addwf	??___flge& (0+255),w,b
 19799  010D4C  6F7C               	movwf	___flge@ff2& (0+255),b
 19800  010D4E  0E00               	movlw	0
 19801  010D50  2181               	addwfc	(??___flge+1)& (0+255),w,b
 19802  010D52  6F7D               	movwf	(___flge@ff2+1)& (0+255),b
 19803  010D54  0E00               	movlw	0
 19804  010D56  2182               	addwfc	(??___flge+2)& (0+255),w,b
 19805  010D58  6F7E               	movwf	(___flge@ff2+2)& (0+255),b
 19806  010D5A  0E80               	movlw	128
 19807  010D5C  2183               	addwfc	(??___flge+3)& (0+255),w,b
 19808  010D5E  6F7F               	movwf	(___flge@ff2+3)& (0+255),b
 19809  010D60                     l3434:
 19810                           
 19811                           ; BSR set to: 0
 19812  010D60  0E00               	movlw	0
 19813  010D62  1B78               	xorwf	___flge@ff1& (0+255),f,b
 19814  010D64  0E00               	movlw	0
 19815  010D66  1B79               	xorwf	(___flge@ff1+1)& (0+255),f,b
 19816  010D68  0E00               	movlw	0
 19817  010D6A  1B7A               	xorwf	(___flge@ff1+2)& (0+255),f,b
 19818  010D6C  0E80               	movlw	128
 19819  010D6E  1B7B               	xorwf	(___flge@ff1+3)& (0+255),f,b
 19820  010D70  0E00               	movlw	0
 19821  010D72  1B7C               	xorwf	___flge@ff2& (0+255),f,b
 19822  010D74  0E00               	movlw	0
 19823  010D76  1B7D               	xorwf	(___flge@ff2+1)& (0+255),f,b
 19824  010D78  0E00               	movlw	0
 19825  010D7A  1B7E               	xorwf	(___flge@ff2+2)& (0+255),f,b
 19826  010D7C  0E80               	movlw	128
 19827  010D7E  1B7F               	xorwf	(___flge@ff2+3)& (0+255),f,b
 19828  010D80  517C               	movf	___flge@ff2& (0+255),w,b
 19829  010D82  5D78               	subwf	___flge@ff1& (0+255),w,b
 19830  010D84  517D               	movf	(___flge@ff2+1)& (0+255),w,b
 19831  010D86  5979               	subwfb	(___flge@ff1+1)& (0+255),w,b
 19832  010D88  517E               	movf	(___flge@ff2+2)& (0+255),w,b
 19833  010D8A  597A               	subwfb	(___flge@ff1+2)& (0+255),w,b
 19834  010D8C  517F               	movf	(___flge@ff2+3)& (0+255),w,b
 19835  010D8E  597B               	subwfb	(___flge@ff1+3)& (0+255),w,b
 19836  010D90  B0D8               	btfsc	status,0,c
 19837  010D92  D002               	goto	l12463
 19838                           
 19839                           ; BSR set to: 0
 19840  010D94  90D8               	bcf	status,0,c
 19841  010D96  0012               	return	
 19842  010D98                     l12463:
 19843                           
 19844                           ; BSR set to: 0
 19845                           
 19846                           ; BSR set to: 0
 19847  010D98  80D8               	bsf	status,0,c
 19848                           
 19849                           ; BSR set to: 0
 19850  010D9A  0012               	return	
 19851  010D9C                     __end_of___flge:
 19852                           	opt stack 0
 19853                           tblptru	equ	0xFF8
 19854                           tblptrh	equ	0xFF7
 19855                           tblptrl	equ	0xFF6
 19856                           tablat	equ	0xFF5
 19857                           prodh	equ	0xFF4
 19858                           prodl	equ	0xFF3
 19859                           postinc0	equ	0xFEE
 19860                           wreg	equ	0xFE8
 19861                           postinc1	equ	0xFE6
 19862                           postdec1	equ	0xFE5
 19863                           plusw1	equ	0xFE3
 19864                           fsr1h	equ	0xFE2
 19865                           fsr1l	equ	0xFE1
 19866                           indf2	equ	0xFDF
 19867                           postinc2	equ	0xFDE
 19868                           postdec2	equ	0xFDD
 19869                           plusw2	equ	0xFDB
 19870                           fsr2h	equ	0xFDA
 19871                           fsr2l	equ	0xFD9
 19872                           status	equ	0xFD8
 19873                           
 19874 ;; *************** function __get_item *****************
 19875 ;; Defined at:
 19876 ;;		line 72 in file "config_file.c"
 19877 ;; Parameters:    Size  Location     Type
 19878 ;;  item_string     2    0[BANK0 ] PTR unsigned char 
 19879 ;;		 -> configFile_read@item_string(31), 
 19880 ;;  value_string    2    2[BANK0 ] PTR unsigned char 
 19881 ;;		 -> configFile_read@value_string(12), 
 19882 ;;  buffer          2    4[BANK0 ] PTR unsigned char 
 19883 ;;		 -> ConfigFile_buffer(512), 
 19884 ;; Auto vars:     Size  Location     Type
 19885 ;;  item_ctr        1   10[BANK0 ] unsigned char 
 19886 ;;  value_ctr       1    9[BANK0 ] unsigned char 
 19887 ;; Return value:  Size  Location     Type
 19888 ;;                  1    wreg      unsigned char 
 19889 ;; Registers used:
 19890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19891 ;; Tracked objects:
 19892 ;;		On entry : 0/0
 19893 ;;		On exit  : 0/0
 19894 ;;		Unchanged: 0/0
 19895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19896 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19897 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19898 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19899 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19900 ;;Total ram usage:       11 bytes
 19901 ;; Hardware stack levels used:    1
 19902 ;; Hardware stack levels required when called:   10
 19903 ;; This function calls:
 19904 ;;		Nothing
 19905 ;; This function is called by:
 19906 ;;		_configFile_read
 19907 ;; This function uses a non-reentrant model
 19908 ;;
 19909                           
 19910                           	psect	text78
 19911  00F904                     __ptext78:
 19912                           	opt stack 0
 19913  00F904                     __get_item:
 19914                           	opt stack 18
 19915                           
 19916                           ;config_file.c: 74: uint8_t item_ctr;;config_file.c: 75: uint8_t value_ctr;;config_file.
      +                          c: 78: for(item_ctr=0;item_ctr<30;++item_ctr)
 19917                           
 19918                           ; BSR set to: 0
 19919                           ;incstack = 0
 19920  00F904  0E00               	movlw	0
 19921  00F906  0100               	movlb	0	; () banked
 19922  00F908  6F6A               	movwf	__get_item@item_ctr& (0+255),b
 19923  00F90A                     l17289:
 19924                           
 19925                           ; BSR set to: 0
 19926  00F90A  0E1D               	movlw	29
 19927  00F90C  656A               	cpfsgt	__get_item@item_ctr& (0+255),b
 19928  00F90E  D001               	goto	l3115
 19929  00F910  D020               	goto	u16080
 19930  00F912                     l3115:
 19931                           
 19932                           ; BSR set to: 0
 19933                           ;config_file.c: 79: {;config_file.c: 81: if(buffer[item_ctr] == '=')
 19934                           
 19935                           ; BSR set to: 0
 19936  00F912  516A               	movf	__get_item@item_ctr& (0+255),w,b
 19937  00F914  0D01               	mullw	1
 19938  00F916  50F3               	movf	prodl,w,c
 19939  00F918  2564               	addwf	__get_item@buffer& (0+255),w,b
 19940  00F91A  6ED9               	movwf	fsr2l,c
 19941  00F91C  50F4               	movf	prodh,w,c
 19942  00F91E  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 19943  00F920  6EDA               	movwf	fsr2h,c
 19944  00F922  0E3D               	movlw	61
 19945  00F924  18DE               	xorwf	postinc2,w,c
 19946  00F926  B4D8               	btfsc	status,2,c
 19947  00F928  D014               	goto	u16080
 19948                           
 19949                           ; BSR set to: 0
 19950                           ;config_file.c: 84: };config_file.c: 85: item_string[item_ctr] = buffer[item_ctr];
 19951                           
 19952                           ; BSR set to: 0
 19953                           
 19954                           ; BSR set to: 0
 19955                           ;config_file.c: 82: {;config_file.c: 83: break;
 19956  00F92A  516A               	movf	__get_item@item_ctr& (0+255),w,b
 19957  00F92C  0D01               	mullw	1
 19958  00F92E  50F3               	movf	prodl,w,c
 19959  00F930  2564               	addwf	__get_item@buffer& (0+255),w,b
 19960  00F932  6ED9               	movwf	fsr2l,c
 19961  00F934  50F4               	movf	prodh,w,c
 19962  00F936  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 19963  00F938  6EDA               	movwf	fsr2h,c
 19964  00F93A  516A               	movf	__get_item@item_ctr& (0+255),w,b
 19965  00F93C  0D01               	mullw	1
 19966  00F93E  50F3               	movf	prodl,w,c
 19967  00F940  2560               	addwf	__get_item@item_string& (0+255),w,b
 19968  00F942  6EE1               	movwf	fsr1l,c
 19969  00F944  50F4               	movf	prodh,w,c
 19970  00F946  2161               	addwfc	(__get_item@item_string+1)& (0+255),w,b
 19971  00F948  6EE2               	movwf	fsr1h,c
 19972  00F94A  CFDF FFE7          	movff	indf2,indf1
 19973                           
 19974                           ; BSR set to: 0
 19975  00F94E  2B6A               	incf	__get_item@item_ctr& (0+255),f,b
 19976  00F950  D7DC               	goto	l17289
 19977  00F952                     u16080:
 19978                           
 19979                           ; BSR set to: 0
 19980                           ;config_file.c: 86: };config_file.c: 87: item_string[item_ctr++] = 0;
 19981                           
 19982                           ; BSR set to: 0
 19983  00F952  516A               	movf	__get_item@item_ctr& (0+255),w,b
 19984  00F954  0D01               	mullw	1
 19985  00F956  50F3               	movf	prodl,w,c
 19986  00F958  2560               	addwf	__get_item@item_string& (0+255),w,b
 19987  00F95A  6ED9               	movwf	fsr2l,c
 19988  00F95C  50F4               	movf	prodh,w,c
 19989  00F95E  2161               	addwfc	(__get_item@item_string+1)& (0+255),w,b
 19990  00F960  6EDA               	movwf	fsr2h,c
 19991  00F962  0E00               	movlw	0
 19992  00F964  6EDF               	movwf	indf2,c
 19993                           
 19994                           ; BSR set to: 0
 19995  00F966  2B6A               	incf	__get_item@item_ctr& (0+255),f,b
 19996                           
 19997                           ; BSR set to: 0
 19998                           ;config_file.c: 90: for(value_ctr=0;value_ctr<11;++value_ctr)
 19999  00F968  0E00               	movlw	0
 20000  00F96A  6F69               	movwf	__get_item@value_ctr& (0+255),b
 20001  00F96C                     l17309:
 20002                           
 20003                           ; BSR set to: 0
 20004  00F96C  0E0A               	movlw	10
 20005  00F96E  6569               	cpfsgt	__get_item@value_ctr& (0+255),b
 20006  00F970  D001               	goto	l3118
 20007  00F972  D03B               	goto	u16120
 20008  00F974                     l3118:
 20009                           
 20010                           ; BSR set to: 0
 20011                           ;config_file.c: 91: {;config_file.c: 93: if((buffer[item_ctr+value_ctr]=='\r') || (buffe
      +                          r[item_ctr+value_ctr]=='\n'))
 20012                           
 20013                           ; BSR set to: 0
 20014  00F974  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20015  00F976  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20016  00F97A  6B67               	clrf	(??__get_item+1)& (0+255),b
 20017  00F97C  2766               	addwf	??__get_item& (0+255),f,b
 20018  00F97E  0E00               	movlw	0
 20019  00F980  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20020  00F982  5166               	movf	??__get_item& (0+255),w,b
 20021  00F984  2564               	addwf	__get_item@buffer& (0+255),w,b
 20022  00F986  6ED9               	movwf	fsr2l,c
 20023  00F988  5167               	movf	(??__get_item+1)& (0+255),w,b
 20024  00F98A  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20025  00F98C  6EDA               	movwf	fsr2h,c
 20026  00F98E  0E0D               	movlw	13
 20027  00F990  18DE               	xorwf	postinc2,w,c
 20028  00F992  B4D8               	btfsc	status,2,c
 20029  00F994  D02A               	goto	u16120
 20030                           
 20031                           ; BSR set to: 0
 20032  00F996  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20033  00F998  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20034  00F99C  6B67               	clrf	(??__get_item+1)& (0+255),b
 20035  00F99E  2766               	addwf	??__get_item& (0+255),f,b
 20036  00F9A0  0E00               	movlw	0
 20037  00F9A2  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20038  00F9A4  5166               	movf	??__get_item& (0+255),w,b
 20039  00F9A6  2564               	addwf	__get_item@buffer& (0+255),w,b
 20040  00F9A8  6ED9               	movwf	fsr2l,c
 20041  00F9AA  5167               	movf	(??__get_item+1)& (0+255),w,b
 20042  00F9AC  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20043  00F9AE  6EDA               	movwf	fsr2h,c
 20044  00F9B0  0E0A               	movlw	10
 20045  00F9B2  18DE               	xorwf	postinc2,w,c
 20046  00F9B4  B4D8               	btfsc	status,2,c
 20047  00F9B6  D019               	goto	u16120
 20048                           
 20049                           ; BSR set to: 0
 20050                           ;config_file.c: 96: };config_file.c: 97: value_string[value_ctr] = buffer[item_ctr+value
      +                          _ctr];
 20051                           
 20052                           ; BSR set to: 0
 20053                           
 20054                           ; BSR set to: 0
 20055                           ;config_file.c: 94: {;config_file.c: 95: break;
 20056  00F9B8  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20057  00F9BA  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20058  00F9BE  6B67               	clrf	(??__get_item+1)& (0+255),b
 20059  00F9C0  2766               	addwf	??__get_item& (0+255),f,b
 20060  00F9C2  0E00               	movlw	0
 20061  00F9C4  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20062  00F9C6  5166               	movf	??__get_item& (0+255),w,b
 20063  00F9C8  2564               	addwf	__get_item@buffer& (0+255),w,b
 20064  00F9CA  6ED9               	movwf	fsr2l,c
 20065  00F9CC  5167               	movf	(??__get_item+1)& (0+255),w,b
 20066  00F9CE  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20067  00F9D0  6EDA               	movwf	fsr2h,c
 20068  00F9D2  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20069  00F9D4  0D01               	mullw	1
 20070  00F9D6  50F3               	movf	prodl,w,c
 20071  00F9D8  2562               	addwf	__get_item@value_string& (0+255),w,b
 20072  00F9DA  6EE1               	movwf	fsr1l,c
 20073  00F9DC  50F4               	movf	prodh,w,c
 20074  00F9DE  2163               	addwfc	(__get_item@value_string+1)& (0+255),w,b
 20075  00F9E0  6EE2               	movwf	fsr1h,c
 20076  00F9E2  CFDF FFE7          	movff	indf2,indf1
 20077                           
 20078                           ; BSR set to: 0
 20079  00F9E6  2B69               	incf	__get_item@value_ctr& (0+255),f,b
 20080  00F9E8  D7C1               	goto	l17309
 20081  00F9EA                     u16120:
 20082                           
 20083                           ; BSR set to: 0
 20084                           ;config_file.c: 98: };config_file.c: 99: value_string[value_ctr++] = 0;
 20085                           
 20086                           ; BSR set to: 0
 20087  00F9EA  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20088  00F9EC  0D01               	mullw	1
 20089  00F9EE  50F3               	movf	prodl,w,c
 20090  00F9F0  2562               	addwf	__get_item@value_string& (0+255),w,b
 20091  00F9F2  6ED9               	movwf	fsr2l,c
 20092  00F9F4  50F4               	movf	prodh,w,c
 20093  00F9F6  2163               	addwfc	(__get_item@value_string+1)& (0+255),w,b
 20094  00F9F8  6EDA               	movwf	fsr2h,c
 20095  00F9FA  0E00               	movlw	0
 20096  00F9FC  6EDF               	movwf	indf2,c
 20097  00F9FE                     
 20098                           ; BSR set to: 0
 20099                           ;config_file.c: 103: {;config_file.c: 104: ++value_ctr;
 20100                           
 20101                           ; BSR set to: 0
 20102                           
 20103                           ;config_file.c: 102: while((buffer[item_ctr+value_ctr]=='\r') || (buffer[item_ctr+value_
      +                          ctr]=='\n') || (buffer[item_ctr+value_ctr]=='\t') || (buffer[item_ctr+value_ctr]==' '))
 20104                           
 20105                           ; BSR set to: 0
 20106  00F9FE  2B69               	incf	__get_item@value_ctr& (0+255),f,b
 20107                           
 20108                           ; BSR set to: 0
 20109                           
 20110                           ; BSR set to: 0
 20111  00FA00  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20112  00FA02  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20113  00FA06  6B67               	clrf	(??__get_item+1)& (0+255),b
 20114  00FA08  2766               	addwf	??__get_item& (0+255),f,b
 20115  00FA0A  0E00               	movlw	0
 20116  00FA0C  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20117  00FA0E  5166               	movf	??__get_item& (0+255),w,b
 20118  00FA10  2564               	addwf	__get_item@buffer& (0+255),w,b
 20119  00FA12  6ED9               	movwf	fsr2l,c
 20120  00FA14  5167               	movf	(??__get_item+1)& (0+255),w,b
 20121  00FA16  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20122  00FA18  6EDA               	movwf	fsr2h,c
 20123  00FA1A  0E0D               	movlw	13
 20124  00FA1C  18DE               	xorwf	postinc2,w,c
 20125  00FA1E  B4D8               	btfsc	status,2,c
 20126  00FA20  D7EE               	goto	l17325
 20127                           
 20128                           ; BSR set to: 0
 20129  00FA22  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20130  00FA24  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20131  00FA28  6B67               	clrf	(??__get_item+1)& (0+255),b
 20132  00FA2A  2766               	addwf	??__get_item& (0+255),f,b
 20133  00FA2C  0E00               	movlw	0
 20134  00FA2E  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20135  00FA30  5166               	movf	??__get_item& (0+255),w,b
 20136  00FA32  2564               	addwf	__get_item@buffer& (0+255),w,b
 20137  00FA34  6ED9               	movwf	fsr2l,c
 20138  00FA36  5167               	movf	(??__get_item+1)& (0+255),w,b
 20139  00FA38  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20140  00FA3A  6EDA               	movwf	fsr2h,c
 20141  00FA3C  0E0A               	movlw	10
 20142  00FA3E  18DE               	xorwf	postinc2,w,c
 20143  00FA40  B4D8               	btfsc	status,2,c
 20144  00FA42  D7DD               	goto	l17325
 20145                           
 20146                           ; BSR set to: 0
 20147  00FA44  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20148  00FA46  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20149  00FA4A  6B67               	clrf	(??__get_item+1)& (0+255),b
 20150  00FA4C  2766               	addwf	??__get_item& (0+255),f,b
 20151  00FA4E  0E00               	movlw	0
 20152  00FA50  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20153  00FA52  5166               	movf	??__get_item& (0+255),w,b
 20154  00FA54  2564               	addwf	__get_item@buffer& (0+255),w,b
 20155  00FA56  6ED9               	movwf	fsr2l,c
 20156  00FA58  5167               	movf	(??__get_item+1)& (0+255),w,b
 20157  00FA5A  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20158  00FA5C  6EDA               	movwf	fsr2h,c
 20159  00FA5E  0E09               	movlw	9
 20160  00FA60  18DE               	xorwf	postinc2,w,c
 20161  00FA62  B4D8               	btfsc	status,2,c
 20162  00FA64  D7CC               	goto	l17325
 20163                           
 20164                           ; BSR set to: 0
 20165  00FA66  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20166  00FA68  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20167  00FA6C  6B67               	clrf	(??__get_item+1)& (0+255),b
 20168  00FA6E  2766               	addwf	??__get_item& (0+255),f,b
 20169  00FA70  0E00               	movlw	0
 20170  00FA72  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20171  00FA74  5166               	movf	??__get_item& (0+255),w,b
 20172  00FA76  2564               	addwf	__get_item@buffer& (0+255),w,b
 20173  00FA78  6ED9               	movwf	fsr2l,c
 20174  00FA7A  5167               	movf	(??__get_item+1)& (0+255),w,b
 20175  00FA7C  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20176  00FA7E  6EDA               	movwf	fsr2h,c
 20177  00FA80  0E20               	movlw	32
 20178  00FA82  18DE               	xorwf	postinc2,w,c
 20179  00FA84  B4D8               	btfsc	status,2,c
 20180  00FA86  D7BB               	goto	l17325
 20181                           
 20182                           ; BSR set to: 0
 20183                           ;config_file.c: 105: };config_file.c: 108: return (item_ctr+value_ctr);
 20184                           
 20185                           ; BSR set to: 0
 20186  00FA88  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20187  00FA8A  2569               	addwf	__get_item@value_ctr& (0+255),w,b
 20188  00FA8C  0012               	return	
 20189  00FA8E                     __end_of__get_item:
 20190                           	opt stack 0
 20191                           tblptru	equ	0xFF8
 20192                           tblptrh	equ	0xFF7
 20193                           tblptrl	equ	0xFF6
 20194                           tablat	equ	0xFF5
 20195                           prodh	equ	0xFF4
 20196                           prodl	equ	0xFF3
 20197                           postinc0	equ	0xFEE
 20198                           wreg	equ	0xFE8
 20199                           indf1	equ	0xFE7
 20200                           postinc1	equ	0xFE6
 20201                           postdec1	equ	0xFE5
 20202                           plusw1	equ	0xFE3
 20203                           fsr1h	equ	0xFE2
 20204                           fsr1l	equ	0xFE1
 20205                           indf2	equ	0xFDF
 20206                           postinc2	equ	0xFDE
 20207                           postdec2	equ	0xFDD
 20208                           plusw2	equ	0xFDB
 20209                           fsr2h	equ	0xFDA
 20210                           fsr2l	equ	0xFD9
 20211                           status	equ	0xFD8
 20212                           
 20213 ;; *************** function _adc_init *****************
 20214 ;; Defined at:
 20215 ;;		line 19 in file "adc.c"
 20216 ;; Parameters:    Size  Location     Type
 20217 ;;		None
 20218 ;; Auto vars:     Size  Location     Type
 20219 ;;		None
 20220 ;; Return value:  Size  Location     Type
 20221 ;;                  1    wreg      void 
 20222 ;; Registers used:
 20223 ;;		wreg, status,2
 20224 ;; Tracked objects:
 20225 ;;		On entry : 0/0
 20226 ;;		On exit  : 0/0
 20227 ;;		Unchanged: 0/0
 20228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20233 ;;Total ram usage:        0 bytes
 20234 ;; Hardware stack levels used:    1
 20235 ;; Hardware stack levels required when called:   10
 20236 ;; This function calls:
 20237 ;;		Nothing
 20238 ;; This function is called by:
 20239 ;;		_system_init
 20240 ;; This function uses a non-reentrant model
 20241 ;;
 20242                           
 20243                           	psect	text79
 20244  01525A                     __ptext79:
 20245                           	opt stack 0
 20246  01525A                     _adc_init:
 20247                           	opt stack 19
 20248                           
 20249                           ;adc.c: 22: os.temperature[TEMPERATURE_SOURCE_INTERNAL] = 0;
 20250                           
 20251                           ; BSR set to: 0
 20252                           ;incstack = 0
 20253  01525A  0E00               	movlw	0
 20254  01525C  0101               	movlb	1	; () banked
 20255  01525E  6F8D               	movwf	(_os+41)& (0+255),b	;volatile
 20256  015260  0E00               	movlw	0
 20257  015262  6F8C               	movwf	(_os+40)& (0+255),b	;volatile
 20258                           
 20259                           ;adc.c: 23: os.temperature[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 20260  015264  0E00               	movlw	0
 20261  015266  6F8F               	movwf	(_os+43)& (0+255),b	;volatile
 20262  015268  0E00               	movlw	0
 20263  01526A  6F8E               	movwf	(_os+42)& (0+255),b	;volatile
 20264                           
 20265                           ;adc.c: 24: os.fan_on = 0;
 20266  01526C  0E00               	movlw	0
 20267  01526E  6F93               	movwf	(_os+47)& (0+255),b	;volatile
 20268                           
 20269                           ;adc.c: 25: params.temperature_source = TEMPERATURE_SOURCE_INTERNAL;
 20270  015270  0E00               	movlw	0
 20271  015272  0102               	movlb	2	; () banked
 20272  015274  6F31               	movwf	_params& (0+255),b
 20273                           
 20274                           ;adc.c: 26: params.temperature_adc_sum[TEMPERATURE_SOURCE_INTERNAL] = 0;
 20275  015276  0E00               	movlw	0
 20276  015278  6F33               	movwf	(_params+2)& (0+255),b
 20277  01527A  0E00               	movlw	0
 20278  01527C  6F32               	movwf	(_params+1)& (0+255),b
 20279                           
 20280                           ;adc.c: 27: params.temperature_count[TEMPERATURE_SOURCE_INTERNAL] = 0;
 20281  01527E  0E00               	movlw	0
 20282  015280  6F36               	movwf	(_params+5)& (0+255),b
 20283                           
 20284                           ;adc.c: 28: params.temperature_adc_sum[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 20285  015282  0E00               	movlw	0
 20286  015284  6F35               	movwf	(_params+4)& (0+255),b
 20287  015286  0E00               	movlw	0
 20288  015288  6F34               	movwf	(_params+3)& (0+255),b
 20289                           
 20290                           ;adc.c: 29: params.temperature_count[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 20291  01528A  0E00               	movlw	0
 20292  01528C  6F37               	movwf	(_params+6)& (0+255),b
 20293                           
 20294                           ; BSR set to: 2
 20295                           ;adc.c: 31: ADCON0bits.VCFG1 = 0;
 20296  01528E  9EC2               	bcf	4034,7,c	;volatile
 20297                           
 20298                           ; BSR set to: 2
 20299                           ;adc.c: 32: ADCON0bits.VCFG0 = 0;
 20300  015290  9CC2               	bcf	4034,6,c	;volatile
 20301                           
 20302                           ;adc.c: 33: ADCON0bits.CHS = 0b1001;
 20303  015292  50C2               	movf	4034,w,c	;volatile
 20304  015294  0BC3               	andlw	-61
 20305  015296  0924               	iorlw	36
 20306  015298  6EC2               	movwf	4034,c	;volatile
 20307                           
 20308                           ; BSR set to: 2
 20309                           ;adc.c: 35: ADCON1bits.ADFM = 1;
 20310  01529A  8EC1               	bsf	4033,7,c	;volatile
 20311                           
 20312                           ; BSR set to: 2
 20313                           ;adc.c: 36: ADCON1bits.ADCAL = 0;
 20314  01529C  9CC1               	bcf	4033,6,c	;volatile
 20315                           
 20316                           ; BSR set to: 2
 20317                           ;adc.c: 37: ADCON1bits.ACQT = 0b111;
 20318  01529E  86C1               	bsf	4033,3,c	;volatile
 20319  0152A0  88C1               	bsf	4033,4,c	;volatile
 20320  0152A2  8AC1               	bsf	4033,5,c	;volatile
 20321                           
 20322                           ;adc.c: 38: ADCON1bits.ADCS = 0b110;
 20323  0152A4  50C1               	movf	4033,w,c	;volatile
 20324  0152A6  0BF8               	andlw	-8
 20325  0152A8  0906               	iorlw	6
 20326  0152AA  6EC1               	movwf	4033,c	;volatile
 20327                           
 20328                           ; BSR set to: 2
 20329                           ;adc.c: 40: ADCON0bits.ADON = 1;
 20330  0152AC  80C2               	bsf	4034,0,c	;volatile
 20331                           
 20332                           ; BSR set to: 2
 20333                           ;adc.c: 41: ADCON0bits.GO = 1;
 20334  0152AE  82C2               	bsf	4034,1,c	;volatile
 20335                           
 20336                           ; BSR set to: 2
 20337  0152B0  0012               	return		;funcret
 20338  0152B2                     __end_of_adc_init:
 20339                           	opt stack 0
 20340                           tblptru	equ	0xFF8
 20341                           tblptrh	equ	0xFF7
 20342                           tblptrl	equ	0xFF6
 20343                           tablat	equ	0xFF5
 20344                           prodh	equ	0xFF4
 20345                           prodl	equ	0xFF3
 20346                           postinc0	equ	0xFEE
 20347                           wreg	equ	0xFE8
 20348                           indf1	equ	0xFE7
 20349                           postinc1	equ	0xFE6
 20350                           postdec1	equ	0xFE5
 20351                           plusw1	equ	0xFE3
 20352                           fsr1h	equ	0xFE2
 20353                           fsr1l	equ	0xFE1
 20354                           indf2	equ	0xFDF
 20355                           postinc2	equ	0xFDE
 20356                           postdec2	equ	0xFDD
 20357                           plusw2	equ	0xFDB
 20358                           fsr2h	equ	0xFDA
 20359                           fsr2l	equ	0xFD9
 20360                           status	equ	0xFD8
 20361                           
 20362 ;; *************** function __system_timer0_init *****************
 20363 ;; Defined at:
 20364 ;;		line 125 in file "os.c"
 20365 ;; Parameters:    Size  Location     Type
 20366 ;;		None
 20367 ;; Auto vars:     Size  Location     Type
 20368 ;;		None
 20369 ;; Return value:  Size  Location     Type
 20370 ;;                  1    wreg      void 
 20371 ;; Registers used:
 20372 ;;		wreg, status,2
 20373 ;; Tracked objects:
 20374 ;;		On entry : 0/0
 20375 ;;		On exit  : 0/0
 20376 ;;		Unchanged: 0/0
 20377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20382 ;;Total ram usage:        0 bytes
 20383 ;; Hardware stack levels used:    1
 20384 ;; Hardware stack levels required when called:   10
 20385 ;; This function calls:
 20386 ;;		Nothing
 20387 ;; This function is called by:
 20388 ;;		_system_init
 20389 ;; This function uses a non-reentrant model
 20390 ;;
 20391                           
 20392                           	psect	text80
 20393  015FFE                     __ptext80:
 20394                           	opt stack 0
 20395  015FFE                     __system_timer0_init:
 20396                           	opt stack 19
 20397                           
 20398                           ;os.c: 130: T0CONbits.T0CS = 0;
 20399                           
 20400                           ; BSR set to: 2
 20401                           ;incstack = 0
 20402  015FFE  9AD5               	bcf	4053,5,c	;volatile
 20403                           
 20404                           ;os.c: 132: T0CONbits.T08BIT = 0;
 20405  016000  9CD5               	bcf	4053,6,c	;volatile
 20406                           
 20407                           ;os.c: 134: T0CONbits.T0PS2 = 0;
 20408  016002  94D5               	bcf	4053,2,c	;volatile
 20409                           
 20410                           ;os.c: 135: T0CONbits.T0PS1 = 1;
 20411  016004  82D5               	bsf	4053,1,c	;volatile
 20412                           
 20413                           ;os.c: 136: T0CONbits.T0PS0 = 0;
 20414  016006  90D5               	bcf	4053,0,c	;volatile
 20415                           
 20416                           ;os.c: 138: T0CONbits.PSA = 0;
 20417  016008  96D5               	bcf	4053,3,c	;volatile
 20418                           
 20419                           ;os.c: 140: TMR0H = 0xFA;
 20420  01600A  0EFA               	movlw	250
 20421  01600C  6ED7               	movwf	4055,c	;volatile
 20422                           
 20423                           ;os.c: 141: TMR0L = 0x24;
 20424  01600E  0E24               	movlw	36
 20425  016010  6ED6               	movwf	4054,c	;volatile
 20426                           
 20427                           ;os.c: 143: T0CONbits.TMR0ON = 1;
 20428  016012  8ED5               	bsf	4053,7,c	;volatile
 20429                           
 20430                           ;os.c: 146: INTCONbits.TMR0IF = 0;
 20431  016014  94F2               	bcf	intcon,2,c	;volatile
 20432                           
 20433                           ;os.c: 147: INTCONbits.TMR0IE = 1;
 20434  016016  8AF2               	bsf	intcon,5,c	;volatile
 20435                           
 20436                           ;os.c: 148: INTCONbits.GIE = 1;
 20437  016018  8EF2               	bsf	intcon,7,c	;volatile
 20438                           
 20439                           ;os.c: 151: os.subTimeSlot = 0;
 20440  01601A  0E00               	movlw	0
 20441  01601C  0101               	movlb	1	; () banked
 20442  01601E  6F64               	movwf	_os& (0+255),b	;volatile
 20443                           
 20444                           ;os.c: 152: os.timeSlot = 0;
 20445  016020  0E00               	movlw	0
 20446  016022  6F65               	movwf	(_os+1)& (0+255),b	;volatile
 20447                           
 20448                           ;os.c: 153: os.done = 0;
 20449  016024  0E00               	movlw	0
 20450  016026  6F66               	movwf	(_os+2)& (0+255),b	;volatile
 20451                           
 20452                           ; BSR set to: 1
 20453  016028  0012               	return		;funcret
 20454  01602A                     __end_of__system_timer0_init:
 20455                           	opt stack 0
 20456                           tblptru	equ	0xFF8
 20457                           tblptrh	equ	0xFF7
 20458                           tblptrl	equ	0xFF6
 20459                           tablat	equ	0xFF5
 20460                           prodh	equ	0xFF4
 20461                           prodl	equ	0xFF3
 20462                           intcon	equ	0xFF2
 20463                           postinc0	equ	0xFEE
 20464                           wreg	equ	0xFE8
 20465                           indf1	equ	0xFE7
 20466                           postinc1	equ	0xFE6
 20467                           postdec1	equ	0xFE5
 20468                           plusw1	equ	0xFE3
 20469                           fsr1h	equ	0xFE2
 20470                           fsr1l	equ	0xFE1
 20471                           indf2	equ	0xFDF
 20472                           postinc2	equ	0xFDE
 20473                           postdec2	equ	0xFDD
 20474                           plusw2	equ	0xFDB
 20475                           fsr2h	equ	0xFDA
 20476                           fsr2l	equ	0xFD9
 20477                           status	equ	0xFD8
 20478                           
 20479 ;; *************** function __system_pin_setup *****************
 20480 ;; Defined at:
 20481 ;;		line 59 in file "os.c"
 20482 ;; Parameters:    Size  Location     Type
 20483 ;;		None
 20484 ;; Auto vars:     Size  Location     Type
 20485 ;;		None
 20486 ;; Return value:  Size  Location     Type
 20487 ;;                  1    wreg      void 
 20488 ;; Registers used:
 20489 ;;		wreg, status,2
 20490 ;; Tracked objects:
 20491 ;;		On entry : 0/0
 20492 ;;		On exit  : 0/0
 20493 ;;		Unchanged: 0/0
 20494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20499 ;;Total ram usage:        0 bytes
 20500 ;; Hardware stack levels used:    1
 20501 ;; Hardware stack levels required when called:   10
 20502 ;; This function calls:
 20503 ;;		Nothing
 20504 ;; This function is called by:
 20505 ;;		_system_init
 20506 ;; This function uses a non-reentrant model
 20507 ;;
 20508                           
 20509                           	psect	text81
 20510  014C04                     __ptext81:
 20511                           	opt stack 0
 20512  014C04                     __system_pin_setup:
 20513                           	opt stack 19
 20514                           
 20515                           ;os.c: 62: TRISDbits.TRISD5 = 1;
 20516                           
 20517                           ; BSR set to: 1
 20518                           ;incstack = 0
 20519  014C04  8A95               	bsf	3989,5,c	;volatile
 20520                           
 20521                           ;os.c: 63: TRISDbits.TRISD4 = 0;
 20522  014C06  9895               	bcf	3989,4,c	;volatile
 20523                           
 20524                           ;os.c: 64: TRISDbits.TRISD6 = 0;
 20525  014C08  9C95               	bcf	3989,6,c	;volatile
 20526                           
 20527                           ;os.c: 65: TRISDbits.TRISD7 = 0;
 20528  014C0A  9E95               	bcf	3989,7,c	;volatile
 20529                           
 20530                           ;os.c: 66: LATDbits.LD7 = 1;
 20531  014C0C  8E8C               	bsf	3980,7,c	;volatile
 20532                           
 20533                           ;os.c: 68: TRISBbits.TRISB3 = 1;
 20534  014C0E  8693               	bsf	3987,3,c	;volatile
 20535                           
 20536                           ;os.c: 69: ANCON1bits.PCFG9 = 0;
 20537  014C10  010F               	movlb	15	; () banked
 20538  014C12  9349               	bcf	73,1,b	;volatile
 20539                           
 20540                           ;os.c: 71: TRISCbits.TRISC7 = 0;
 20541  014C14  9E94               	bcf	3988,7,c	;volatile
 20542                           
 20543                           ;os.c: 72: LATCbits.LC7 = 0;
 20544  014C16  9E8B               	bcf	3979,7,c	;volatile
 20545                           
 20546                           ;os.c: 74: TRISCbits.TRISC6 = 0;
 20547  014C18  9C94               	bcf	3988,6,c	;volatile
 20548                           
 20549                           ;os.c: 75: LATCbits.LC6 = 0;
 20550  014C1A  9C8B               	bcf	3979,6,c	;volatile
 20551                           
 20552                           ;os.c: 77: TRISAbits.TRISA3 = 0;
 20553  014C1C  9692               	bcf	3986,3,c	;volatile
 20554                           
 20555                           ;os.c: 78: LATAbits.LA3 = 0;
 20556  014C1E  9689               	bcf	3977,3,c	;volatile
 20557                           
 20558                           ;os.c: 80: TRISCbits.TRISC1 = 0;
 20559  014C20  9294               	bcf	3988,1,c	;volatile
 20560                           
 20561                           ;os.c: 81: LATCbits.LC1 = 0;
 20562  014C22  928B               	bcf	3979,1,c	;volatile
 20563                           
 20564                           ;os.c: 86: TRISBbits.TRISB5 = 1;
 20565  014C24  8A93               	bsf	3987,5,c	;volatile
 20566                           
 20567                           ;os.c: 87: TRISBbits.TRISB4 = 1;
 20568  014C26  8893               	bsf	3987,4,c	;volatile
 20569                           
 20570                           ;os.c: 89: TRISBbits.TRISB0 = 0;
 20571  014C28  9093               	bcf	3987,0,c	;volatile
 20572                           
 20573                           ;os.c: 90: LATBbits.LB0 = 1;
 20574  014C2A  808A               	bsf	3978,0,c	;volatile
 20575                           
 20576                           ;os.c: 92: TRISBbits.TRISB2 = 0;
 20577  014C2C  9493               	bcf	3987,2,c	;volatile
 20578                           
 20579                           ;os.c: 93: LATBbits.LB2 = 0;
 20580  014C2E  948A               	bcf	3978,2,c	;volatile
 20581                           
 20582                           ;os.c: 95: TRISBbits.TRISB1 = 0;
 20583  014C30  9293               	bcf	3987,1,c	;volatile
 20584                           
 20585                           ;os.c: 96: ANCON1bits.PCFG10 = 1;
 20586  014C32  8549               	bsf	73,2,b	;volatile
 20587                           
 20588                           ;os.c: 97: LATBbits.LB1 = 0;
 20589  014C34  928A               	bcf	3978,1,c	;volatile
 20590                           
 20591                           ; BSR set to: 15
 20592                           ;os.c: 98: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 20593  014C36  0E55               	movlw	85
 20594  014C38  6EA7               	movwf	4007,c	;volsfr
 20595  014C3A  0EAA               	movlw	170
 20596  014C3C  6EA7               	movwf	4007,c	;volsfr
 20597                           
 20598                           ; BSR set to: 15
 20599  014C3E  010E               	movlb	14	; () banked
 20600  014C40  91BF               	bcf	191,0,b	;volatile
 20601                           
 20602                           ;os.c: 99: RPOR4 = 14;
 20603  014C42  0E0E               	movlw	14
 20604  014C44  6FC4               	movwf	196,b	;volatile
 20605                           
 20606                           ;os.c: 100: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 20607  014C46  0E55               	movlw	85
 20608  014C48  6EA7               	movwf	4007,c	;volsfr
 20609  014C4A  0EAA               	movlw	170
 20610  014C4C  6EA7               	movwf	4007,c	;volsfr
 20611                           
 20612                           ; BSR set to: 14
 20613  014C4E  81BF               	bsf	191,0,b	;volatile
 20614                           
 20615                           ; BSR set to: 14
 20616                           ;os.c: 102: TRISDbits.TRISD2 = 1;
 20617  014C50  8495               	bsf	3989,2,c	;volatile
 20618                           
 20619                           ; BSR set to: 14
 20620                           ;os.c: 104: TRISEbits.TRISE2 = 1;
 20621  014C52  8496               	bsf	3990,2,c	;volatile
 20622                           
 20623                           ; BSR set to: 14
 20624                           ;os.c: 105: ANCON0bits.PCFG7 = 1;
 20625  014C54  010F               	movlb	15	; () banked
 20626  014C56  8F48               	bsf	72,7,b	;volatile
 20627                           
 20628                           ; BSR set to: 15
 20629                           ;os.c: 107: TRISEbits.TRISE0 = 1;
 20630  014C58  8096               	bsf	3990,0,c	;volatile
 20631                           
 20632                           ; BSR set to: 15
 20633                           ;os.c: 108: ANCON0bits.PCFG5 = 1;
 20634  014C5A  8B48               	bsf	72,5,b	;volatile
 20635                           
 20636                           ; BSR set to: 15
 20637                           ;os.c: 110: TRISEbits.TRISE1 = 1;
 20638  014C5C  8296               	bsf	3990,1,c	;volatile
 20639                           
 20640                           ; BSR set to: 15
 20641                           ;os.c: 111: ANCON0bits.PCFG6 = 1;
 20642  014C5E  8D48               	bsf	72,6,b	;volatile
 20643                           
 20644                           ; BSR set to: 15
 20645                           ;os.c: 113: TRISAbits.TRISA0 = 1;
 20646  014C60  8092               	bsf	3986,0,c	;volatile
 20647                           
 20648                           ; BSR set to: 15
 20649                           ;os.c: 114: ANCON0bits.PCFG0 = 1;
 20650  014C62  8148               	bsf	72,0,b	;volatile
 20651                           
 20652                           ; BSR set to: 15
 20653                           ;os.c: 116: TRISAbits.TRISA2 = 1;
 20654  014C64  8492               	bsf	3986,2,c	;volatile
 20655                           
 20656                           ; BSR set to: 15
 20657                           ;os.c: 117: ANCON0bits.PCFG2 = 1;
 20658  014C66  8548               	bsf	72,2,b	;volatile
 20659                           
 20660                           ; BSR set to: 15
 20661                           ;os.c: 119: TRISAbits.TRISA1 = 1;
 20662  014C68  8292               	bsf	3986,1,c	;volatile
 20663                           
 20664                           ; BSR set to: 15
 20665                           ;os.c: 120: ANCON0bits.PCFG1 = 1;
 20666  014C6A  8348               	bsf	72,1,b	;volatile
 20667                           
 20668                           ; BSR set to: 15
 20669  014C6C  0012               	return		;funcret
 20670  014C6E                     __end_of__system_pin_setup:
 20671                           	opt stack 0
 20672                           tblptru	equ	0xFF8
 20673                           tblptrh	equ	0xFF7
 20674                           tblptrl	equ	0xFF6
 20675                           tablat	equ	0xFF5
 20676                           prodh	equ	0xFF4
 20677                           prodl	equ	0xFF3
 20678                           intcon	equ	0xFF2
 20679                           postinc0	equ	0xFEE
 20680                           wreg	equ	0xFE8
 20681                           indf1	equ	0xFE7
 20682                           postinc1	equ	0xFE6
 20683                           postdec1	equ	0xFE5
 20684                           plusw1	equ	0xFE3
 20685                           fsr1h	equ	0xFE2
 20686                           fsr1l	equ	0xFE1
 20687                           indf2	equ	0xFDF
 20688                           postinc2	equ	0xFDE
 20689                           postdec2	equ	0xFDD
 20690                           plusw2	equ	0xFDB
 20691                           fsr2h	equ	0xFDA
 20692                           fsr2l	equ	0xFD9
 20693                           status	equ	0xFD8
 20694                           
 20695 ;; *************** function __backlight_init *****************
 20696 ;; Defined at:
 20697 ;;		line 158 in file "os.c"
 20698 ;; Parameters:    Size  Location     Type
 20699 ;;		None
 20700 ;; Auto vars:     Size  Location     Type
 20701 ;;		None
 20702 ;; Return value:  Size  Location     Type
 20703 ;;                  1    wreg      void 
 20704 ;; Registers used:
 20705 ;;		None
 20706 ;; Tracked objects:
 20707 ;;		On entry : 0/0
 20708 ;;		On exit  : 0/0
 20709 ;;		Unchanged: 0/0
 20710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20715 ;;Total ram usage:        0 bytes
 20716 ;; Hardware stack levels used:    1
 20717 ;; Hardware stack levels required when called:   10
 20718 ;; This function calls:
 20719 ;;		Nothing
 20720 ;; This function is called by:
 20721 ;;		_system_init
 20722 ;; This function uses a non-reentrant model
 20723 ;;
 20724                           
 20725                           	psect	text82
 20726  0164B2                     __ptext82:
 20727                           	opt stack 0
 20728  0164B2                     __backlight_init:
 20729                           	opt stack 19
 20730                           
 20731                           ;os.c: 160: LATCbits.LC1 = 1;
 20732                           
 20733                           ; BSR set to: 15
 20734                           ;incstack = 0
 20735  0164B2  828B               	bsf	3979,1,c	;volatile
 20736  0164B4  0012               	return		;funcret
 20737  0164B6                     __end_of__backlight_init:
 20738                           	opt stack 0
 20739                           tblptru	equ	0xFF8
 20740                           tblptrh	equ	0xFF7
 20741                           tblptrl	equ	0xFF6
 20742                           tablat	equ	0xFF5
 20743                           prodh	equ	0xFF4
 20744                           prodl	equ	0xFF3
 20745                           intcon	equ	0xFF2
 20746                           postinc0	equ	0xFEE
 20747                           wreg	equ	0xFE8
 20748                           indf1	equ	0xFE7
 20749                           postinc1	equ	0xFE6
 20750                           postdec1	equ	0xFE5
 20751                           plusw1	equ	0xFE3
 20752                           fsr1h	equ	0xFE2
 20753                           fsr1l	equ	0xFE1
 20754                           indf2	equ	0xFDF
 20755                           postinc2	equ	0xFDE
 20756                           postdec2	equ	0xFDD
 20757                           plusw2	equ	0xFDB
 20758                           fsr2h	equ	0xFDA
 20759                           fsr2l	equ	0xFD9
 20760                           status	equ	0xFD8
 20761                           
 20762 ;; *************** function _motor_process_cue *****************
 20763 ;; Defined at:
 20764 ;;		line 620 in file "motor.c"
 20765 ;; Parameters:    Size  Location     Type
 20766 ;;		None
 20767 ;; Auto vars:     Size  Location     Type
 20768 ;;		None
 20769 ;; Return value:  Size  Location     Type
 20770 ;;                  1    wreg      void 
 20771 ;; Registers used:
 20772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20773 ;; Tracked objects:
 20774 ;;		On entry : 0/0
 20775 ;;		On exit  : 0/0
 20776 ;;		Unchanged: 0/0
 20777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20782 ;;Total ram usage:        0 bytes
 20783 ;; Hardware stack levels used:    1
 20784 ;; Hardware stack levels required when called:   11
 20785 ;; This function calls:
 20786 ;;		__motor_run
 20787 ;;		_motor_items_in_cue
 20788 ;; This function is called by:
 20789 ;;		_main
 20790 ;; This function uses a non-reentrant model
 20791 ;;
 20792                           
 20793                           	psect	text83
 20794  013ADC                     __ptext83:
 20795                           	opt stack 0
 20796  013ADC                     _motor_process_cue:
 20797                           	opt stack 19
 20798                           
 20799                           ;motor.c: 622: if(motor_items_in_cue()==0)
 20800                           
 20801                           ;incstack = 0
 20802  013ADC  EC21  F0B2         	call	_motor_items_in_cue	;wreg free
 20803  013AE0  0900               	iorlw	0
 20804  013AE2  B4D8               	btfsc	status,2,c
 20805  013AE4  0012               	return	
 20806                           
 20807                           ;motor.c: 626: };motor.c: 628: if(os.busy)
 20808                           
 20809                           ;motor.c: 623: {;motor.c: 625: return;
 20810  013AE6  0101               	movlb	1	; () banked
 20811  013AE8  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 20812  013AEA  A4D8               	btfss	status,2,c
 20813  013AEC  0012               	return	
 20814                           
 20815                           ; BSR set to: 1
 20816                           ;motor.c: 632: };motor.c: 635: _motor_run(;motor.c: 636: motor_command_cue[motor_cue_rea
      +                          d_index].direction,;motor.c: 637: motor_command_cue[motor_cue_read_index].distance,;moto
      +                          r.c: 638: motor_command_cue[motor_cue_read_index].speed,;motor.c: 639: motor_command_cue
      +                          [motor_cue_read_index].type;motor.c: 640: );
 20817                           
 20818                           ; BSR set to: 1
 20819                           
 20820                           ; BSR set to: 1
 20821                           ;motor.c: 629: {;motor.c: 631: return;
 20822  013AEE  514C               	movf	_motor_cue_read_index& (0+255),w,b
 20823  013AF0  0D08               	mullw	8
 20824  013AF2  0E01               	movlw	1
 20825  013AF4  26F3               	addwf	prodl,f,c
 20826  013AF6  0E00               	movlw	0
 20827  013AF8  22F4               	addwfc	prodh,f,c
 20828  013AFA  0E00               	movlw	low _motor_command_cue
 20829  013AFC  24F3               	addwf	prodl,w,c
 20830  013AFE  6ED9               	movwf	fsr2l,c
 20831  013B00  0E03               	movlw	high _motor_command_cue
 20832  013B02  20F4               	addwfc	prodh,w,c
 20833  013B04  6EDA               	movwf	fsr2h,c
 20834  013B06  CFDE F060          	movff	postinc2,__motor_run@distance_in_steps
 20835  013B0A  CFDE F061          	movff	postinc2,__motor_run@distance_in_steps+1
 20836  013B0E  CFDE F062          	movff	postinc2,__motor_run@distance_in_steps+2
 20837  013B12  CFDE F063          	movff	postinc2,__motor_run@distance_in_steps+3
 20838  013B16  514C               	movf	_motor_cue_read_index& (0+255),w,b
 20839  013B18  0D08               	mullw	8
 20840  013B1A  0E05               	movlw	5
 20841  013B1C  26F3               	addwf	prodl,f,c
 20842  013B1E  0E00               	movlw	0
 20843  013B20  22F4               	addwfc	prodh,f,c
 20844  013B22  0E00               	movlw	low _motor_command_cue
 20845  013B24  24F3               	addwf	prodl,w,c
 20846  013B26  6ED9               	movwf	fsr2l,c
 20847  013B28  0E03               	movlw	high _motor_command_cue
 20848  013B2A  20F4               	addwfc	prodh,w,c
 20849  013B2C  6EDA               	movwf	fsr2h,c
 20850  013B2E  CFDE F064          	movff	postinc2,__motor_run@speed
 20851  013B32  CFDD F065          	movff	postdec2,__motor_run@speed+1
 20852  013B36  514C               	movf	_motor_cue_read_index& (0+255),w,b
 20853  013B38  0D08               	mullw	8
 20854  013B3A  0E07               	movlw	7
 20855  013B3C  26F3               	addwf	prodl,f,c
 20856  013B3E  0E00               	movlw	0
 20857  013B40  22F4               	addwfc	prodh,f,c
 20858  013B42  0E00               	movlw	low _motor_command_cue
 20859  013B44  24F3               	addwf	prodl,w,c
 20860  013B46  6ED9               	movwf	fsr2l,c
 20861  013B48  0E03               	movlw	high _motor_command_cue
 20862  013B4A  20F4               	addwfc	prodh,w,c
 20863  013B4C  6EDA               	movwf	fsr2h,c
 20864  013B4E  50DF               	movf	indf2,w,c
 20865  013B50  0100               	movlb	0	; () banked
 20866  013B52  6F66               	movwf	__motor_run@type& (0+255),b
 20867  013B54  0101               	movlb	1	; () banked
 20868  013B56  514C               	movf	_motor_cue_read_index& (0+255),w,b
 20869  013B58  0D08               	mullw	8
 20870  013B5A  0E00               	movlw	low _motor_command_cue
 20871  013B5C  24F3               	addwf	prodl,w,c
 20872  013B5E  6ED9               	movwf	fsr2l,c
 20873  013B60  0E03               	movlw	high _motor_command_cue
 20874  013B62  20F4               	addwfc	prodh,w,c
 20875  013B64  6EDA               	movwf	fsr2h,c
 20876  013B66  50DF               	movf	indf2,w,c
 20877  013B68  EC93  F076         	call	__motor_run
 20878                           
 20879                           ;motor.c: 642: ++motor_cue_read_index;
 20880  013B6C  0101               	movlb	1	; () banked
 20881  013B6E  2B4C               	incf	_motor_cue_read_index& (0+255),f,b
 20882                           
 20883                           ; BSR set to: 1
 20884                           ;motor.c: 643: motor_cue_read_index &= 0b111;
 20885  013B70  0E07               	movlw	7
 20886  013B72  174C               	andwf	_motor_cue_read_index& (0+255),f,b
 20887  013B74  0012               	return		;funcret
 20888  013B76                     __end_of_motor_process_cue:
 20889                           	opt stack 0
 20890                           tblptru	equ	0xFF8
 20891                           tblptrh	equ	0xFF7
 20892                           tblptrl	equ	0xFF6
 20893                           tablat	equ	0xFF5
 20894                           prodh	equ	0xFF4
 20895                           prodl	equ	0xFF3
 20896                           intcon	equ	0xFF2
 20897                           postinc0	equ	0xFEE
 20898                           wreg	equ	0xFE8
 20899                           indf1	equ	0xFE7
 20900                           postinc1	equ	0xFE6
 20901                           postdec1	equ	0xFE5
 20902                           plusw1	equ	0xFE3
 20903                           fsr1h	equ	0xFE2
 20904                           fsr1l	equ	0xFE1
 20905                           indf2	equ	0xFDF
 20906                           postinc2	equ	0xFDE
 20907                           postdec2	equ	0xFDD
 20908                           plusw2	equ	0xFDB
 20909                           fsr2h	equ	0xFDA
 20910                           fsr2l	equ	0xFD9
 20911                           status	equ	0xFD8
 20912                           
 20913 ;; *************** function __motor_run *****************
 20914 ;; Defined at:
 20915 ;;		line 41 in file "motor.c"
 20916 ;; Parameters:    Size  Location     Type
 20917 ;;  direction       1    wreg     enum E6622
 20918 ;;  distance_in_    4    0[BANK0 ] unsigned long 
 20919 ;;  speed           2    4[BANK0 ] unsigned int 
 20920 ;;  type            1    6[BANK0 ] enum E6631
 20921 ;; Auto vars:     Size  Location     Type
 20922 ;;  direction       1   11[BANK0 ] enum E6622
 20923 ;; Return value:  Size  Location     Type
 20924 ;;                  1    wreg      void 
 20925 ;; Registers used:
 20926 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 20927 ;; Tracked objects:
 20928 ;;		On entry : 0/0
 20929 ;;		On exit  : 0/0
 20930 ;;		Unchanged: 0/0
 20931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20932 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20933 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20934 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20935 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20936 ;;Total ram usage:       12 bytes
 20937 ;; Hardware stack levels used:    1
 20938 ;; Hardware stack levels required when called:   10
 20939 ;; This function calls:
 20940 ;;		Nothing
 20941 ;; This function is called by:
 20942 ;;		_motor_process_cue
 20943 ;; This function uses a non-reentrant model
 20944 ;;
 20945                           
 20946                           	psect	text84
 20947  00ED26                     __ptext84:
 20948                           	opt stack 0
 20949  00ED26                     __motor_run:
 20950                           	opt stack 19
 20951                           
 20952                           ;incstack = 0
 20953                           ;__motor_run@direction stored from wreg
 20954  00ED26  0100               	movlb	0	; () banked
 20955  00ED28  6F6B               	movwf	__motor_run@direction& (0+255),b
 20956                           
 20957                           ;motor.c: 48: motor_direction = direction;
 20958  00ED2A  C06B  F149         	movff	__motor_run@direction,_motor_direction
 20959                           
 20960                           ;motor.c: 49: motor_final_stepcount = distance_in_steps;
 20961  00ED2E  C060  F11B         	movff	__motor_run@distance_in_steps,_motor_final_stepcount	;volatile
 20962  00ED32  C061  F11C         	movff	__motor_run@distance_in_steps+1,_motor_final_stepcount+1	;volatile
 20963  00ED36  C062  F11D         	movff	__motor_run@distance_in_steps+2,_motor_final_stepcount+2	;volatile
 20964  00ED3A  C063  F11E         	movff	__motor_run@distance_in_steps+3,_motor_final_stepcount+3	;volatile
 20965                           
 20966                           ;motor.c: 50: motor_maximum_speed = speed;
 20967  00ED3E  C064  F134         	movff	__motor_run@speed,_motor_maximum_speed
 20968  00ED42  C065  F135         	movff	__motor_run@speed+1,_motor_maximum_speed+1
 20969                           
 20970                           ;motor.c: 51: motor_move_type = type;
 20971  00ED46  C066  F14A         	movff	__motor_run@type,_motor_move_type
 20972                           
 20973                           ;motor.c: 54: if(motor_move_type==MOTOR_MOVE_TYPE_ENDLESS)
 20974  00ED4A  0101               	movlb	1	; () banked
 20975  00ED4C  054A               	decf	_motor_move_type& (0+255),w,b
 20976  00ED4E  A4D8               	btfss	status,2,c
 20977  00ED50  D004               	goto	l2467
 20978                           
 20979                           ; BSR set to: 1
 20980                           ;motor.c: 55: {;motor.c: 56: motor_final_stepcount = 0xFFFFFFFF;
 20981  00ED52  691B               	setf	_motor_final_stepcount& (0+255),b	;volatile
 20982  00ED54  691C               	setf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 20983  00ED56  691D               	setf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 20984  00ED58  691E               	setf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 20985  00ED5A                     l2467:
 20986                           
 20987                           ; BSR set to: 1
 20988                           ;motor.c: 57: };motor.c: 60: motor_current_speed = 0;
 20989                           
 20990                           ; BSR set to: 1
 20991  00ED5A  0E00               	movlw	0
 20992  00ED5C  6E58               	movwf	_motor_current_speed+1,c	;volatile
 20993  00ED5E  0E00               	movlw	0
 20994  00ED60  6E57               	movwf	_motor_current_speed,c	;volatile
 20995                           
 20996                           ;motor.c: 61: motor_current_stepcount = 0;
 20997  00ED62  0E00               	movlw	0
 20998  00ED64  6F1F               	movwf	_motor_current_stepcount& (0+255),b	;volatile
 20999  00ED66  0E00               	movlw	0
 21000  00ED68  6F20               	movwf	(_motor_current_stepcount+1)& (0+255),b	;volatile
 21001  00ED6A  0E00               	movlw	0
 21002  00ED6C  6F21               	movwf	(_motor_current_stepcount+2)& (0+255),b	;volatile
 21003  00ED6E  0E00               	movlw	0
 21004  00ED70  6F22               	movwf	(_motor_current_stepcount+3)& (0+255),b	;volatile
 21005                           
 21006                           ; BSR set to: 1
 21007                           ;motor.c: 62: motor_next_speed_check = motor_steps_lookup[1];
 21008  00ED72  0E63               	movlw	low (_motor_steps_lookup+2)
 21009  00ED74  6EF6               	movwf	tblptrl,c
 21010  00ED76  0E94               	movlw	high (_motor_steps_lookup+2)
 21011  00ED78  6EF7               	movwf	tblptrh,c
 21012  00ED7A                     	if	0	;tblptru may be non-zero
 21013  00ED7A                     	endif
 21014  00ED7A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21015  00ED7A  0E00               	movlw	low (__mediumconst shr (0+16))
 21016  00ED7C  6EF8               	movwf	tblptru,c
 21017  00ED7E                     	endif
 21018  00ED7E  0009               	tblrd		*+
 21019  00ED80  CFF5 F067          	movff	tablat,??__motor_run
 21020  00ED84  0009               	tblrd		*+
 21021  00ED86  CFF5 F068          	movff	tablat,??__motor_run+1
 21022  00ED8A  C067  F238         	movff	??__motor_run,_motor_next_speed_check	;volatile
 21023  00ED8E  C068  F239         	movff	??__motor_run+1,_motor_next_speed_check+1	;volatile
 21024  00ED92  0102               	movlb	2	; () banked
 21025  00ED94  6B3A               	clrf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 21026  00ED96  6B3B               	clrf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 21027                           
 21028                           ; BSR set to: 2
 21029                           ;motor.c: 65: CCP1CONbits.CCP1M = 0b0000;
 21030  00ED98  90BA               	bcf	4026,0,c	;volatile
 21031  00ED9A  92BA               	bcf	4026,1,c	;volatile
 21032  00ED9C  94BA               	bcf	4026,2,c	;volatile
 21033  00ED9E  96BA               	bcf	4026,3,c	;volatile
 21034                           
 21035                           ; BSR set to: 2
 21036                           ;motor.c: 68: LATBbits.LB0 = 0;
 21037  00EDA0  908A               	bcf	3978,0,c	;volatile
 21038                           
 21039                           ; BSR set to: 2
 21040                           ;motor.c: 69: if(direction==MOTOR_DIRECTION_CCW)
 21041  00EDA2  0100               	movlb	0	; () banked
 21042  00EDA4  296B               	incf	__motor_run@direction& (0+255),w,b
 21043  00EDA6  A4D8               	btfss	status,2,c
 21044  00EDA8  D005               	goto	l2468
 21045                           
 21046                           ; BSR set to: 0
 21047                           ;motor.c: 70: {;motor.c: 71: if(config.inverse_direction)
 21048  00EDAA  0101               	movlb	1	; () banked
 21049  00EDAC  5199               	movf	(_config+4)& (0+255),w,b
 21050  00EDAE  B4D8               	btfsc	status,2,c
 21051  00EDB0  D005               	goto	u17440
 21052  00EDB2  D006               	goto	l2472
 21053  00EDB4                     l2468:
 21054                           
 21055                           ;motor.c: 76: else;motor.c: 77: {;motor.c: 78: if(config.inverse_direction)
 21056                           
 21057                           ; BSR set to: 1
 21058  00EDB4  0101               	movlb	1	; () banked
 21059  00EDB6  5199               	movf	(_config+4)& (0+255),w,b
 21060  00EDB8  B4D8               	btfsc	status,2,c
 21061  00EDBA  D002               	goto	l2472
 21062  00EDBC                     u17440:
 21063                           
 21064                           ; BSR set to: 1
 21065                           ;motor.c: 79: LATBbits.LB2 = 0;
 21066  00EDBC  948A               	bcf	3978,2,c	;volatile
 21067  00EDBE  D001               	goto	l2473
 21068  00EDC0                     l2472:
 21069                           
 21070                           ; BSR set to: 1
 21071                           ;motor.c: 80: else;motor.c: 81: LATBbits.LB2 = 1;
 21072  00EDC0  848A               	bsf	3978,2,c	;volatile
 21073  00EDC2                     l2473:
 21074                           
 21075                           ; BSR set to: 1
 21076                           ;motor.c: 82: };motor.c: 85: LATBbits.LB1 = 1;
 21077                           
 21078                           ; BSR set to: 1
 21079  00EDC2  828A               	bsf	3978,1,c	;volatile
 21080                           
 21081                           ; BSR set to: 1
 21082                           ;motor.c: 88: ++motor_current_stepcount;
 21083  00EDC4  0E01               	movlw	1
 21084  00EDC6  271F               	addwf	_motor_current_stepcount& (0+255),f,b	;volatile
 21085  00EDC8  0E00               	movlw	0
 21086  00EDCA  2320               	addwfc	(_motor_current_stepcount+1)& (0+255),f,b	;volatile
 21087  00EDCC  2321               	addwfc	(_motor_current_stepcount+2)& (0+255),f,b	;volatile
 21088  00EDCE  2322               	addwfc	(_motor_current_stepcount+3)& (0+255),f,b	;volatile
 21089                           
 21090                           ;motor.c: 91: os.current_position_in_steps += motor_direction;
 21091  00EDD0  5149               	movf	_motor_direction& (0+255),w,b
 21092  00EDD2  0100               	movlb	0	; () banked
 21093  00EDD4  6F67               	movwf	??__motor_run& (0+255),b
 21094  00EDD6  0E00               	movlw	0
 21095  00EDD8  BF67               	btfsc	??__motor_run& (0+255),7,b
 21096  00EDDA  0EFF               	movlw	255
 21097  00EDDC  6F68               	movwf	(??__motor_run+1)& (0+255),b
 21098  00EDDE  6F69               	movwf	(??__motor_run+2)& (0+255),b
 21099  00EDE0  6F6A               	movwf	(??__motor_run+3)& (0+255),b
 21100  00EDE2  5167               	movf	??__motor_run& (0+255),w,b
 21101  00EDE4  0101               	movlb	1	; () banked
 21102  00EDE6  276B               	addwf	(_os+7)& (0+255),f,b	;volatile
 21103  00EDE8  0100               	movlb	0	; () banked
 21104  00EDEA  5168               	movf	(??__motor_run+1)& (0+255),w,b
 21105  00EDEC  0101               	movlb	1	; () banked
 21106  00EDEE  236C               	addwfc	(_os+8)& (0+255),f,b	;volatile
 21107  00EDF0  0100               	movlb	0	; () banked
 21108  00EDF2  5169               	movf	(??__motor_run+2)& (0+255),w,b
 21109  00EDF4  0101               	movlb	1	; () banked
 21110  00EDF6  236D               	addwfc	(_os+9)& (0+255),f,b	;volatile
 21111  00EDF8  0100               	movlb	0	; () banked
 21112  00EDFA  516A               	movf	(??__motor_run+3)& (0+255),w,b
 21113  00EDFC  0101               	movlb	1	; () banked
 21114  00EDFE  236E               	addwfc	(_os+10)& (0+255),f,b	;volatile
 21115                           
 21116                           ;motor.c: 92: if(os.current_position_in_steps==config.full_circle_in_steps)
 21117  00EE00  5195               	movf	_config& (0+255),w,b
 21118  00EE02  196B               	xorwf	(_os+7)& (0+255),w,b	;volatile
 21119  00EE04  E114               	bnz	l18229
 21120  00EE06  5196               	movf	(_config+1)& (0+255),w,b
 21121  00EE08  196C               	xorwf	(_os+8)& (0+255),w,b	;volatile
 21122  00EE0A  E111               	bnz	l18229
 21123  00EE0C  5197               	movf	(_config+2)& (0+255),w,b
 21124  00EE0E  196D               	xorwf	(_os+9)& (0+255),w,b	;volatile
 21125  00EE10  E10E               	bnz	l18229
 21126  00EE12  5198               	movf	(_config+3)& (0+255),w,b
 21127  00EE14  196E               	xorwf	(_os+10)& (0+255),w,b	;volatile
 21128  00EE16  A4D8               	btfss	status,2,c
 21129  00EE18  D00A               	goto	l2474
 21130                           
 21131                           ; BSR set to: 1
 21132                           ;motor.c: 93: {;motor.c: 94: os.current_position_in_steps = 0;
 21133  00EE1A  0E00               	movlw	0
 21134  00EE1C  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
 21135  00EE1E  0E00               	movlw	0
 21136  00EE20  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
 21137  00EE22  0E00               	movlw	0
 21138  00EE24  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
 21139  00EE26  0E00               	movlw	0
 21140  00EE28  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
 21141                           
 21142                           ; BSR set to: 1
 21143                           ;motor.c: 95: ++os.absolute_position;
 21144  00EE2A  4B6F               	infsnz	(_os+11)& (0+255),f,b	;volatile
 21145  00EE2C  2B70               	incf	(_os+12)& (0+255),f,b	;volatile
 21146  00EE2E                     l2474:
 21147  00EE2E                     l18229:
 21148                           
 21149                           ; BSR set to: 1
 21150                           ;motor.c: 96: };motor.c: 97: if(os.current_position_in_steps==0xFFFFFFFF)
 21151  00EE2E  296B               	incf	(_os+7)& (0+255),w,b	;volatile
 21152  00EE30  E116               	bnz	l18235
 21153  00EE32  296C               	incf	(_os+8)& (0+255),w,b	;volatile
 21154  00EE34  E114               	bnz	l18235
 21155  00EE36  296D               	incf	(_os+9)& (0+255),w,b	;volatile
 21156  00EE38  E112               	bnz	l18235
 21157  00EE3A  296E               	incf	(_os+10)& (0+255),w,b	;volatile
 21158  00EE3C  A4D8               	btfss	status,2,c
 21159  00EE3E  D00F               	goto	l2475
 21160                           
 21161                           ; BSR set to: 1
 21162                           ;motor.c: 98: {;motor.c: 99: os.current_position_in_steps = (config.full_circle_in_steps
      +                          -1);
 21163  00EE40  0EFF               	movlw	255
 21164  00EE42  2595               	addwf	_config& (0+255),w,b
 21165  00EE44  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
 21166  00EE46  0EFF               	movlw	255
 21167  00EE48  2196               	addwfc	(_config+1)& (0+255),w,b
 21168  00EE4A  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
 21169  00EE4C  0EFF               	movlw	255
 21170  00EE4E  2197               	addwfc	(_config+2)& (0+255),w,b
 21171  00EE50  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
 21172  00EE52  0EFF               	movlw	255
 21173  00EE54  2198               	addwfc	(_config+3)& (0+255),w,b
 21174  00EE56  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
 21175                           
 21176                           ; BSR set to: 1
 21177                           ;motor.c: 100: --os.absolute_position;
 21178  00EE58  076F               	decf	(_os+11)& (0+255),f,b	;volatile
 21179  00EE5A  A0D8               	btfss	status,0,c
 21180  00EE5C  0770               	decf	(_os+12)& (0+255),f,b	;volatile
 21181  00EE5E                     l2475:
 21182  00EE5E                     l18235:
 21183                           
 21184                           ; BSR set to: 1
 21185                           ;motor.c: 101: };motor.c: 104: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOL
      +                          OCK = 0;};
 21186  00EE5E  0E55               	movlw	85
 21187  00EE60  6EA7               	movwf	4007,c	;volsfr
 21188                           
 21189                           ; BSR set to: 1
 21190  00EE62  0EAA               	movlw	170
 21191  00EE64  6EA7               	movwf	4007,c	;volsfr
 21192                           
 21193                           ; BSR set to: 1
 21194  00EE66  010E               	movlb	14	; () banked
 21195  00EE68  91BF               	bcf	191,0,b	;volatile
 21196                           
 21197                           ; BSR set to: 14
 21198                           ;motor.c: 105: RPOR4 = 0;
 21199  00EE6A  0E00               	movlw	0
 21200  00EE6C  6FC4               	movwf	196,b	;volatile
 21201                           
 21202                           ; BSR set to: 14
 21203                           ;motor.c: 106: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 21204  00EE6E  0E55               	movlw	85
 21205  00EE70  6EA7               	movwf	4007,c	;volsfr
 21206                           
 21207                           ; BSR set to: 14
 21208  00EE72  0EAA               	movlw	170
 21209  00EE74  6EA7               	movwf	4007,c	;volsfr
 21210                           
 21211                           ; BSR set to: 14
 21212  00EE76  81BF               	bsf	191,0,b	;volatile
 21213                           
 21214                           ; BSR set to: 14
 21215                           ;motor.c: 109: motor_mode = MOTOR_MODE_MANUAL;
 21216  00EE78  0E00               	movlw	0
 21217  00EE7A  0101               	movlb	1	; () banked
 21218  00EE7C  6F48               	movwf	_motor_mode& (0+255),b	;volatile
 21219                           
 21220                           ; BSR set to: 1
 21221                           ;motor.c: 113: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_speed];
 21222  00EE7E  0EFD               	movlw	low _motor_prescaler_lookup
 21223  00EE80  2457               	addwf	_motor_current_speed,w,c	;volatile
 21224  00EE82  6EF6               	movwf	tblptrl,c
 21225  00EE84  0E9B               	movlw	high _motor_prescaler_lookup
 21226  00EE86  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 21227  00EE88  6EF7               	movwf	tblptrh,c
 21228  00EE8A                     	if	1	;There are 3 active tblptr bytes
 21229  00EE8A  6AF8               	clrf	tblptru,c
 21230  00EE8C  0E00               	movlw	low (__mediumconst shr (0+16))
 21231  00EE8E  22F8               	addwfc	tblptru,f,c
 21232  00EE90                     	endif
 21233  00EE90  0008               	tblrd		*
 21234  00EE92  CFF5 F067          	movff	tablat,??__motor_run
 21235  00EE96  50CA               	movf	4042,w,c	;volatile
 21236  00EE98  0100               	movlb	0	; () banked
 21237  00EE9A  1967               	xorwf	??__motor_run& (0+255),w,b
 21238  00EE9C  0BFC               	andlw	-4
 21239  00EE9E  1967               	xorwf	??__motor_run& (0+255),w,b
 21240  00EEA0  6ECA               	movwf	4042,c	;volatile
 21241                           
 21242                           ; BSR set to: 0
 21243                           ;motor.c: 115: PR2 = motor_period_lookup[motor_current_speed];
 21244  00EEA2  0E16               	movlw	low _motor_period_lookup
 21245  00EEA4  2457               	addwf	_motor_current_speed,w,c	;volatile
 21246  00EEA6  6EF6               	movwf	tblptrl,c
 21247  00EEA8  0E9A               	movlw	high _motor_period_lookup
 21248  00EEAA  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 21249  00EEAC  6EF7               	movwf	tblptrh,c
 21250  00EEAE                     	if	1	;There are 3 active tblptr bytes
 21251  00EEAE  6AF8               	clrf	tblptru,c
 21252  00EEB0  0E00               	movlw	low (__mediumconst shr (0+16))
 21253  00EEB2  22F8               	addwfc	tblptru,f,c
 21254  00EEB4                     	endif
 21255  00EEB4  0008               	tblrd		*
 21256  00EEB6  CFF5 FFCB          	movff	tablat,4043	;volatile
 21257                           
 21258                           ; BSR set to: 0
 21259                           ;motor.c: 117: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 21260  00EEBA  0E2F               	movlw	low _motor_postscaler_lookup
 21261  00EEBC  2457               	addwf	_motor_current_speed,w,c	;volatile
 21262  00EEBE  6EF6               	movwf	tblptrl,c
 21263  00EEC0  0E98               	movlw	high _motor_postscaler_lookup
 21264  00EEC2  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 21265  00EEC4  6EF7               	movwf	tblptrh,c
 21266  00EEC6                     	if	1	;There are 3 active tblptr bytes
 21267  00EEC6  6AF8               	clrf	tblptru,c
 21268  00EEC8  0E00               	movlw	low (__mediumconst shr (0+16))
 21269  00EECA  22F8               	addwfc	tblptru,f,c
 21270  00EECC                     	endif
 21271  00EECC  0008               	tblrd		*
 21272  00EECE  CFF5 F067          	movff	tablat,??__motor_run
 21273  00EED2  4767               	rlncf	??__motor_run& (0+255),f,b
 21274  00EED4  4767               	rlncf	??__motor_run& (0+255),f,b
 21275  00EED6  4767               	rlncf	??__motor_run& (0+255),f,b
 21276  00EED8  50CA               	movf	4042,w,c	;volatile
 21277  00EEDA  1967               	xorwf	??__motor_run& (0+255),w,b
 21278  00EEDC  0B87               	andlw	-121
 21279  00EEDE  1967               	xorwf	??__motor_run& (0+255),w,b
 21280  00EEE0  6ECA               	movwf	4042,c	;volatile
 21281                           
 21282                           ; BSR set to: 0
 21283                           ;motor.c: 119: CCPR1L = PR2>>1;
 21284  00EEE2  90D8               	bcf	status,0,c
 21285  00EEE4  30CB               	rrcf	4043,w,c	;volatile
 21286  00EEE6  6EBB               	movwf	4027,c	;volatile
 21287                           
 21288                           ; BSR set to: 0
 21289                           ;motor.c: 122: PIR1bits.TMR2IF = 0;
 21290  00EEE8  929E               	bcf	3998,1,c	;volatile
 21291                           
 21292                           ; BSR set to: 0
 21293                           ;motor.c: 123: PIE1bits.TMR2IE = 1;
 21294  00EEEA  829D               	bsf	3997,1,c	;volatile
 21295                           
 21296                           ; BSR set to: 0
 21297                           ;motor.c: 126: TMR2 = 0;
 21298  00EEEC  0E00               	movlw	0
 21299  00EEEE  6ECC               	movwf	4044,c	;volatile
 21300                           
 21301                           ; BSR set to: 0
 21302                           ;motor.c: 127: T2CONbits.TMR2ON = 1;
 21303  00EEF0  84CA               	bsf	4042,2,c	;volatile
 21304                           
 21305                           ; BSR set to: 0
 21306                           ;motor.c: 130: os.busy = 1;
 21307  00EEF2  0E01               	movlw	1
 21308  00EEF4  0101               	movlb	1	; () banked
 21309  00EEF6  6F74               	movwf	(_os+16)& (0+255),b	;volatile
 21310                           
 21311                           ; BSR set to: 1
 21312  00EEF8  0012               	return		;funcret
 21313  00EEFA                     __end_of__motor_run:
 21314                           	opt stack 0
 21315                           tblptru	equ	0xFF8
 21316                           tblptrh	equ	0xFF7
 21317                           tblptrl	equ	0xFF6
 21318                           tablat	equ	0xFF5
 21319                           prodh	equ	0xFF4
 21320                           prodl	equ	0xFF3
 21321                           intcon	equ	0xFF2
 21322                           postinc0	equ	0xFEE
 21323                           wreg	equ	0xFE8
 21324                           indf1	equ	0xFE7
 21325                           postinc1	equ	0xFE6
 21326                           postdec1	equ	0xFE5
 21327                           plusw1	equ	0xFE3
 21328                           fsr1h	equ	0xFE2
 21329                           fsr1l	equ	0xFE1
 21330                           indf2	equ	0xFDF
 21331                           postinc2	equ	0xFDE
 21332                           postdec2	equ	0xFDD
 21333                           plusw2	equ	0xFDB
 21334                           fsr2h	equ	0xFDA
 21335                           fsr2l	equ	0xFD9
 21336                           status	equ	0xFD8
 21337                           
 21338 ;; *************** function _encoder_statemachine *****************
 21339 ;; Defined at:
 21340 ;;		line 621 in file "encoder.c"
 21341 ;; Parameters:    Size  Location     Type
 21342 ;;		None
 21343 ;; Auto vars:     Size  Location     Type
 21344 ;;		None
 21345 ;; Return value:  Size  Location     Type
 21346 ;;                  1    wreg      void 
 21347 ;; Registers used:
 21348 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21349 ;; Tracked objects:
 21350 ;;		On entry : 0/0
 21351 ;;		On exit  : 0/0
 21352 ;;		Unchanged: 0/0
 21353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21356 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21357 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21358 ;;Total ram usage:        2 bytes
 21359 ;; Hardware stack levels used:    1
 21360 ;; Hardware stack levels required when called:   16
 21361 ;; This function calls:
 21362 ;;		__encoder_statemachine_arc
 21363 ;;		__encoder_statemachine_divide
 21364 ;;		__encoder_statemachine_main
 21365 ;;		__encoder_statemachine_manual
 21366 ;;		__encoder_statemachine_setup
 21367 ;;		__encoder_statemachine_zero
 21368 ;; This function is called by:
 21369 ;;		_main
 21370 ;; This function uses a non-reentrant model
 21371 ;;
 21372                           
 21373                           	psect	text85
 21374  013F02                     __ptext85:
 21375                           	opt stack 0
 21376  013F02                     _encoder_statemachine:
 21377                           	opt stack 14
 21378                           
 21379                           ;encoder.c: 630: switch(os.displayState & 0xF0)
 21380                           
 21381                           ; BSR set to: 1
 21382                           ;incstack = 0
 21383  013F02  D018               	goto	l2990
 21384  013F04                     
 21385                           ;encoder.c: 633: _encoder_statemachine_main(config.menu_structure);
 21386  013F04  0101               	movlb	1	; () banked
 21387  013F06  51BE               	movf	(_config+41)& (0+255),w,b
 21388  013F08  EC4F  F061         	call	__encoder_statemachine_main
 21389                           
 21390                           ;encoder.c: 634: break;
 21391  013F0C  D03A               	goto	l2992
 21392  013F0E                     
 21393                           ;encoder.c: 637: case DISPLAY_STATE_SETUP2:;encoder.c: 638: _encoder_statemachine_setup(
      +                          );
 21394  013F0E  ECB7  F073         	call	__encoder_statemachine_setup	;wreg free
 21395                           
 21396                           ;encoder.c: 639: break;
 21397  013F12  D037               	goto	l2992
 21398  013F14                     
 21399                           ;encoder.c: 642: case DISPLAY_STATE_DIVIDE2:;encoder.c: 643: _encoder_statemachine_divid
      +                          e();
 21400  013F14  EC73  F088         	call	__encoder_statemachine_divide	;wreg free
 21401                           
 21402                           ;encoder.c: 644: break;
 21403  013F18  D034               	goto	l2992
 21404  013F1A                     
 21405                           ;encoder.c: 647: case DISPLAY_STATE_ARC2:;encoder.c: 648: _encoder_statemachine_arc();
 21406  013F1A  ECB0  F072         	call	__encoder_statemachine_arc	;wreg free
 21407                           
 21408                           ;encoder.c: 649: break;
 21409  013F1E  D031               	goto	l2992
 21410  013F20                     
 21411                           ;encoder.c: 652: _encoder_statemachine_manual();
 21412  013F20  EC63  F091         	call	__encoder_statemachine_manual	;wreg free
 21413                           
 21414                           ;encoder.c: 653: break;
 21415  013F24  D02E               	goto	l2992
 21416  013F26                     
 21417                           ;encoder.c: 656: _encoder_statemachine_zero();
 21418  013F26  EC6B  F0A6         	call	__encoder_statemachine_zero	;wreg free
 21419                           
 21420                           ;encoder.c: 657: break;
 21421  013F2A  D02B               	goto	l2992
 21422  013F2C                     
 21423                           ;encoder.c: 662: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 21424  013F2C  0E01               	movlw	1
 21425  013F2E  0101               	movlb	1	; () banked
 21426  013F30  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21427                           
 21428                           ;encoder.c: 663: }
 21429  013F32  D027               	goto	l2992
 21430  013F34                     l2990:
 21431                           
 21432                           ; BSR set to: 1
 21433  013F34  0101               	movlb	1	; () banked
 21434  013F36  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 21435  013F38  0BF0               	andlw	240
 21436  013F3A  0100               	movlb	0	; () banked
 21437  013F3C  6FAB               	movwf	??_encoder_statemachine& (0+255),b
 21438  013F3E  6BAC               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21439                           
 21440                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21441                           ; Switch size 1, requested type "space"
 21442                           ; Number of cases is 1, Range of values is 0 to 0
 21443                           ; switch strategies available:
 21444                           ; Name         Instructions Cycles
 21445                           ; simple_byte            4     3 (average)
 21446                           ;	Chosen strategy is simple_byte
 21447  013F40  51AC               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21448  013F42  0A00               	xorlw	0	; case 0
 21449  013F44  A4D8               	btfss	status,2,c
 21450  013F46  D7F2               	goto	l3001
 21451                           
 21452                           ; BSR set to: 0
 21453                           ; Switch size 1, requested type "space"
 21454                           ; Number of cases is 9, Range of values is 0 to 128
 21455                           ; switch strategies available:
 21456                           ; Name         Instructions Cycles
 21457                           ; simple_byte           28    15 (average)
 21458                           ;	Chosen strategy is simple_byte
 21459  013F48  51AB               	movf	??_encoder_statemachine& (0+255),w,b
 21460  013F4A  0A00               	xorlw	0	; case 0
 21461  013F4C  B4D8               	btfsc	status,2,c
 21462  013F4E  D7DA               	goto	l2991
 21463  013F50  0A10               	xorlw	16	; case 16
 21464  013F52  B4D8               	btfsc	status,2,c
 21465  013F54  D7DC               	goto	l2993
 21466  013F56  0A30               	xorlw	48	; case 32
 21467  013F58  B4D8               	btfsc	status,2,c
 21468  013F5A  D7D9               	goto	l2993
 21469  013F5C  0A10               	xorlw	16	; case 48
 21470  013F5E  B4D8               	btfsc	status,2,c
 21471  013F60  D7D9               	goto	l2995
 21472  013F62  0A70               	xorlw	112	; case 64
 21473  013F64  B4D8               	btfsc	status,2,c
 21474  013F66  D7D6               	goto	l2995
 21475  013F68  0A10               	xorlw	16	; case 80
 21476  013F6A  B4D8               	btfsc	status,2,c
 21477  013F6C  D7D6               	goto	l2997
 21478  013F6E  0A30               	xorlw	48	; case 96
 21479  013F70  B4D8               	btfsc	status,2,c
 21480  013F72  D7D3               	goto	l2997
 21481  013F74  0A10               	xorlw	16	; case 112
 21482  013F76  B4D8               	btfsc	status,2,c
 21483  013F78  D7D6               	goto	l3000
 21484  013F7A  0AF0               	xorlw	240	; case 128
 21485  013F7C  B4D8               	btfsc	status,2,c
 21486  013F7E  D7D0               	goto	l2999
 21487  013F80  D7D5               	goto	l3001
 21488  013F82                     l2992:
 21489                           
 21490                           ;encoder.c: 666: os.encoder1Count = 0;
 21491                           
 21492                           ; BSR set to: 0
 21493  013F82  0E00               	movlw	0
 21494  013F84  0101               	movlb	1	; () banked
 21495  013F86  6F67               	movwf	(_os+3)& (0+255),b	;volatile
 21496                           
 21497                           ;encoder.c: 667: os.encoder2Count = 0;
 21498  013F88  0E00               	movlw	0
 21499  013F8A  6F69               	movwf	(_os+5)& (0+255),b	;volatile
 21500                           
 21501                           ;encoder.c: 668: os.button1 = 0;
 21502  013F8C  0E00               	movlw	0
 21503  013F8E  6F68               	movwf	(_os+4)& (0+255),b	;volatile
 21504                           
 21505                           ;encoder.c: 669: os.button2 = 0;
 21506  013F90  0E00               	movlw	0
 21507  013F92  6F6A               	movwf	(_os+6)& (0+255),b	;volatile
 21508                           
 21509                           ; BSR set to: 1
 21510  013F94  0012               	return		;funcret
 21511  013F96                     __end_of_encoder_statemachine:
 21512                           	opt stack 0
 21513                           tblptru	equ	0xFF8
 21514                           tblptrh	equ	0xFF7
 21515                           tblptrl	equ	0xFF6
 21516                           tablat	equ	0xFF5
 21517                           prodh	equ	0xFF4
 21518                           prodl	equ	0xFF3
 21519                           intcon	equ	0xFF2
 21520                           postinc0	equ	0xFEE
 21521                           wreg	equ	0xFE8
 21522                           indf1	equ	0xFE7
 21523                           postinc1	equ	0xFE6
 21524                           postdec1	equ	0xFE5
 21525                           plusw1	equ	0xFE3
 21526                           fsr1h	equ	0xFE2
 21527                           fsr1l	equ	0xFE1
 21528                           indf2	equ	0xFDF
 21529                           postinc2	equ	0xFDE
 21530                           postdec2	equ	0xFDD
 21531                           plusw2	equ	0xFDB
 21532                           fsr2h	equ	0xFDA
 21533                           fsr2l	equ	0xFD9
 21534                           status	equ	0xFD8
 21535                           
 21536 ;; *************** function __encoder_statemachine_zero *****************
 21537 ;; Defined at:
 21538 ;;		line 599 in file "encoder.c"
 21539 ;; Parameters:    Size  Location     Type
 21540 ;;		None
 21541 ;; Auto vars:     Size  Location     Type
 21542 ;;		None
 21543 ;; Return value:  Size  Location     Type
 21544 ;;                  1    wreg      void 
 21545 ;; Registers used:
 21546 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21547 ;; Tracked objects:
 21548 ;;		On entry : 0/0
 21549 ;;		On exit  : 0/0
 21550 ;;		Unchanged: 0/0
 21551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21554 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21555 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21556 ;;Total ram usage:        2 bytes
 21557 ;; Hardware stack levels used:    1
 21558 ;; Hardware stack levels required when called:   14
 21559 ;; This function calls:
 21560 ;;		_motor_goto_steps
 21561 ;; This function is called by:
 21562 ;;		_encoder_statemachine
 21563 ;; This function uses a non-reentrant model
 21564 ;;
 21565                           
 21566                           	psect	text86
 21567  014CD6                     __ptext86:
 21568                           	opt stack 0
 21569  014CD6                     __encoder_statemachine_zero:
 21570                           	opt stack 15
 21571                           
 21572                           ;encoder.c: 601: switch(os.displayState & 0xF0)
 21573                           
 21574                           ; BSR set to: 1
 21575                           ;incstack = 0
 21576  014CD6  D022               	goto	l2982
 21577  014CD8                     
 21578                           ;encoder.c: 604: if(os.button2==1)
 21579  014CD8  0101               	movlb	1	; () banked
 21580  014CDA  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 21581  014CDC  A4D8               	btfss	status,2,c
 21582  014CDE  D018               	goto	l2984
 21583                           
 21584                           ; BSR set to: 1
 21585                           ;encoder.c: 605: {;encoder.c: 607: motor_goto_steps(MOTOR_DIRECTION_SHORTEST, 0, 0xFFFF,
      +                           MOTOR_OVERSHOOT_WITH_OVERSHOOT);
 21586  014CE0  0E00               	movlw	0
 21587  014CE2  0100               	movlb	0	; () banked
 21588  014CE4  6F92               	movwf	motor_goto_steps@position& (0+255),b
 21589  014CE6  0E00               	movlw	0
 21590  014CE8  6F93               	movwf	(motor_goto_steps@position+1)& (0+255),b
 21591  014CEA  0E00               	movlw	0
 21592  014CEC  6F94               	movwf	(motor_goto_steps@position+2)& (0+255),b
 21593  014CEE  0E00               	movlw	0
 21594  014CF0  6F95               	movwf	(motor_goto_steps@position+3)& (0+255),b
 21595  014CF2  0EFF               	movlw	255
 21596  014CF4  6F97               	movwf	(motor_goto_steps@speed+1)& (0+255),b
 21597  014CF6  6996               	setf	motor_goto_steps@speed& (0+255),b
 21598  014CF8  0E00               	movlw	0
 21599  014CFA  6F98               	movwf	motor_goto_steps@overshoot& (0+255),b
 21600  014CFC  0E00               	movlw	0
 21601  014CFE  ECBB  F09D         	call	_motor_goto_steps
 21602                           
 21603                           ;encoder.c: 609: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 21604  014D02  0E05               	movlw	5
 21605  014D04  0101               	movlb	1	; () banked
 21606  014D06  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21607                           
 21608                           ; BSR set to: 1
 21609                           ;encoder.c: 610: os.divide_position = 0;
 21610  014D08  0E00               	movlw	0
 21611  014D0A  6F7C               	movwf	(_os+24)& (0+255),b	;volatile
 21612  014D0C  0E00               	movlw	0
 21613  014D0E  6F7B               	movwf	(_os+23)& (0+255),b	;volatile
 21614  014D10                     l2984:
 21615                           
 21616                           ; BSR set to: 1
 21617                           ;encoder.c: 611: };encoder.c: 612: if(os.button1==1)
 21618                           
 21619                           ; BSR set to: 1
 21620  014D10  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 21621  014D12  A4D8               	btfss	status,2,c
 21622  014D14  0012               	return	
 21623                           
 21624                           ; BSR set to: 1
 21625                           ;encoder.c: 613: {;encoder.c: 614: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 21626  014D16  0E05               	movlw	5
 21627  014D18  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21628                           
 21629                           ; BSR set to: 1
 21630                           ;encoder.c: 617: }
 21631                           
 21632                           ; BSR set to: 1
 21633                           ;encoder.c: 615: };encoder.c: 616: break;
 21634  014D1A  0012               	return	
 21635  014D1C                     l2982:
 21636                           
 21637                           ; BSR set to: 1
 21638  014D1C  0101               	movlb	1	; () banked
 21639  014D1E  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 21640  014D20  0BF0               	andlw	240
 21641  014D22  0100               	movlb	0	; () banked
 21642  014D24  6F9E               	movwf	??__encoder_statemachine_zero& (0+255),b
 21643  014D26  6B9F               	clrf	(??__encoder_statemachine_zero+1)& (0+255),b
 21644                           
 21645                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21646                           ; Switch size 1, requested type "space"
 21647                           ; Number of cases is 1, Range of values is 0 to 0
 21648                           ; switch strategies available:
 21649                           ; Name         Instructions Cycles
 21650                           ; simple_byte            4     3 (average)
 21651                           ;	Chosen strategy is simple_byte
 21652  014D28  519F               	movf	(??__encoder_statemachine_zero+1)& (0+255),w,b
 21653  014D2A  0A00               	xorlw	0	; case 0
 21654  014D2C  A4D8               	btfss	status,2,c
 21655  014D2E  0012               	return	
 21656                           
 21657                           ; BSR set to: 0
 21658                           ; Switch size 1, requested type "space"
 21659                           ; Number of cases is 1, Range of values is 112 to 112
 21660                           ; switch strategies available:
 21661                           ; Name         Instructions Cycles
 21662                           ; simple_byte            4     3 (average)
 21663                           ;	Chosen strategy is simple_byte
 21664  014D30  519E               	movf	??__encoder_statemachine_zero& (0+255),w,b
 21665  014D32  0A70               	xorlw	112	; case 112
 21666  014D34  A4D8               	btfss	status,2,c
 21667  014D36  0012               	return	
 21668  014D38  D7CF               	goto	l2983
 21669  014D3A                     __end_of__encoder_statemachine_zero:
 21670                           	opt stack 0
 21671                           tblptru	equ	0xFF8
 21672                           tblptrh	equ	0xFF7
 21673                           tblptrl	equ	0xFF6
 21674                           tablat	equ	0xFF5
 21675                           prodh	equ	0xFF4
 21676                           prodl	equ	0xFF3
 21677                           intcon	equ	0xFF2
 21678                           postinc0	equ	0xFEE
 21679                           wreg	equ	0xFE8
 21680                           indf1	equ	0xFE7
 21681                           postinc1	equ	0xFE6
 21682                           postdec1	equ	0xFE5
 21683                           plusw1	equ	0xFE3
 21684                           fsr1h	equ	0xFE2
 21685                           fsr1l	equ	0xFE1
 21686                           indf2	equ	0xFDF
 21687                           postinc2	equ	0xFDE
 21688                           postdec2	equ	0xFDD
 21689                           plusw2	equ	0xFDB
 21690                           fsr2h	equ	0xFDA
 21691                           fsr2l	equ	0xFD9
 21692                           status	equ	0xFD8
 21693                           
 21694 ;; *************** function __encoder_statemachine_setup *****************
 21695 ;; Defined at:
 21696 ;;		line 302 in file "encoder.c"
 21697 ;; Parameters:    Size  Location     Type
 21698 ;;		None
 21699 ;; Auto vars:     Size  Location     Type
 21700 ;;		None
 21701 ;; Return value:  Size  Location     Type
 21702 ;;                  1    wreg      void 
 21703 ;; Registers used:
 21704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21705 ;; Tracked objects:
 21706 ;;		On entry : 0/0
 21707 ;;		On exit  : 0/0
 21708 ;;		Unchanged: 0/0
 21709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21712 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21713 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21714 ;;Total ram usage:        4 bytes
 21715 ;; Hardware stack levels used:    1
 21716 ;; Hardware stack levels required when called:   14
 21717 ;; This function calls:
 21718 ;;		__encoder_next_setup_stepsize
 21719 ;;		_motor_move_degrees_int
 21720 ;;		_motor_set_zero
 21721 ;; This function is called by:
 21722 ;;		_encoder_statemachine
 21723 ;; This function uses a non-reentrant model
 21724 ;;
 21725                           
 21726                           	psect	text87
 21727  00E76E                     __ptext87:
 21728                           	opt stack 0
 21729  00E76E                     __encoder_statemachine_setup:
 21730                           	opt stack 15
 21731                           
 21732                           ;encoder.c: 304: switch(os.displayState & 0xF0)
 21733                           
 21734                           ;incstack = 0
 21735  00E76E  D0E5               	goto	l2856
 21736  00E770                     
 21737                           ;encoder.c: 310: if(os.button1==1)
 21738  00E770  0101               	movlb	1	; () banked
 21739  00E772  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 21740  00E774  A4D8               	btfss	status,2,c
 21741  00E776  D00E               	goto	l2860
 21742                           
 21743                           ; BSR set to: 1
 21744                           ;encoder.c: 311: {;encoder.c: 312: os.current_position_in_steps = 0;
 21745  00E778  0E00               	movlw	0
 21746  00E77A  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
 21747  00E77C  0E00               	movlw	0
 21748  00E77E  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
 21749  00E780  0E00               	movlw	0
 21750  00E782  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
 21751  00E784  0E00               	movlw	0
 21752  00E786  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
 21753                           
 21754                           ;encoder.c: 313: os.divide_position = 0;
 21755  00E788  0E00               	movlw	0
 21756  00E78A  6F7C               	movwf	(_os+24)& (0+255),b	;volatile
 21757  00E78C  0E00               	movlw	0
 21758  00E78E  6F7B               	movwf	(_os+23)& (0+255),b	;volatile
 21759                           
 21760                           ;encoder.c: 314: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 21761  00E790  0E21               	movlw	33
 21762  00E792  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21763  00E794                     l2860:
 21764                           
 21765                           ; BSR set to: 1
 21766                           ;encoder.c: 315: };encoder.c: 316: if(os.encoder1Count>0)
 21767                           
 21768                           ; BSR set to: 1
 21769  00E794  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 21770  00E796  0A80               	xorlw	128
 21771  00E798  0F7F               	addlw	-129
 21772  00E79A  A0D8               	btfss	status,0,c
 21773  00E79C  D002               	goto	l2861
 21774                           
 21775                           ; BSR set to: 1
 21776                           ;encoder.c: 317: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
 21777  00E79E  0E12               	movlw	18
 21778  00E7A0  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21779  00E7A2                     l2861:
 21780                           
 21781                           ; BSR set to: 1
 21782                           ;encoder.c: 318: if(os.encoder1Count<0)
 21783                           
 21784                           ; BSR set to: 1
 21785  00E7A2  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 21786  00E7A4  D01B               	goto	l2863
 21787                           
 21788                           ; BSR set to: 1
 21789                           ;encoder.c: 319: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
 21790  00E7A6  0E12               	movlw	18
 21791  00E7A8  D00F               	goto	L5
 21792  00E7AA                     
 21793                           ; BSR set to: 1
 21794                           ;encoder.c: 322: if(os.button1==1)
 21795                           
 21796                           ; BSR set to: 1
 21797  00E7AA  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 21798  00E7AC  A4D8               	btfss	status,2,c
 21799  00E7AE  D002               	goto	l2865
 21800                           
 21801                           ; BSR set to: 1
 21802                           ;encoder.c: 323: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 21803  00E7B0  0E01               	movlw	1
 21804  00E7B2  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21805  00E7B4                     l2865:
 21806                           
 21807                           ; BSR set to: 1
 21808                           ;encoder.c: 324: if(os.encoder1Count>0)
 21809                           
 21810                           ; BSR set to: 1
 21811  00E7B4  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 21812  00E7B6  0A80               	xorlw	128
 21813  00E7B8  0F7F               	addlw	-129
 21814  00E7BA  A0D8               	btfss	status,0,c
 21815  00E7BC  D002               	goto	l2866
 21816                           
 21817                           ; BSR set to: 1
 21818                           ;encoder.c: 325: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 21819  00E7BE  0E11               	movlw	17
 21820  00E7C0  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21821  00E7C2                     l2866:
 21822                           
 21823                           ; BSR set to: 1
 21824                           ;encoder.c: 326: if(os.encoder1Count<0)
 21825                           
 21826                           ; BSR set to: 1
 21827  00E7C2  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 21828  00E7C4  D00B               	goto	l2863
 21829                           
 21830                           ; BSR set to: 1
 21831                           ;encoder.c: 327: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 21832  00E7C6  0E11               	movlw	17
 21833  00E7C8                     L5:
 21834  00E7C8  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21835                           
 21836                           ; BSR set to: 1
 21837                           ;encoder.c: 329: }
 21838                           
 21839                           ; BSR set to: 1
 21840                           ;encoder.c: 328: break;
 21841  00E7CA  D008               	goto	l2863
 21842  00E7CC                     
 21843                           ; BSR set to: 1
 21844  00E7CC  0101               	movlb	1	; () banked
 21845  00E7CE  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 21846                           
 21847                           ; Switch size 1, requested type "space"
 21848                           ; Number of cases is 2, Range of values is 17 to 18
 21849                           ; switch strategies available:
 21850                           ; Name         Instructions Cycles
 21851                           ; simple_byte            7     4 (average)
 21852                           ;	Chosen strategy is simple_byte
 21853  00E7D0  0A11               	xorlw	17	; case 17
 21854  00E7D2  B4D8               	btfsc	status,2,c
 21855  00E7D4  D7CD               	goto	l2859
 21856  00E7D6  0A03               	xorlw	3	; case 18
 21857  00E7D8  B4D8               	btfsc	status,2,c
 21858  00E7DA  D7E7               	goto	l2864
 21859  00E7DC                     l2863:
 21860                           
 21861                           ; BSR set to: 1
 21862                           ;encoder.c: 330: if(os.button2==1)
 21863                           
 21864                           ; BSR set to: 1
 21865  00E7DC  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 21866  00E7DE  A4D8               	btfss	status,2,c
 21867  00E7E0  D00A               	goto	l2868
 21868                           
 21869                           ; BSR set to: 1
 21870                           ;encoder.c: 331: {;encoder.c: 332: os.setup_step_size = _encoder_next_setup_stepsize(os.
      +                          setup_step_size);
 21871  00E7E2  C175  F060         	movff	_os+17,__encoder_next_setup_stepsize@old_stepsize	;volatile
 21872  00E7E6  C176  F061         	movff	_os+18,__encoder_next_setup_stepsize@old_stepsize+1	;volatile
 21873  00E7EA  ECB8  F0A4         	call	__encoder_next_setup_stepsize	;wreg free
 21874  00E7EE  C060  F175         	movff	?__encoder_next_setup_stepsize,_os+17	;volatile
 21875  00E7F2  C061  F176         	movff	?__encoder_next_setup_stepsize+1,_os+18	;volatile
 21876  00E7F6                     l2868:
 21877                           
 21878                           ;encoder.c: 333: };encoder.c: 334: if(os.encoder2Count>0)
 21879  00E7F6  0101               	movlb	1	; () banked
 21880  00E7F8  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 21881  00E7FA  0A80               	xorlw	128
 21882  00E7FC  0F7F               	addlw	-129
 21883  00E7FE  A0D8               	btfss	status,0,c
 21884  00E800  D010               	goto	l2870
 21885                           
 21886                           ; BSR set to: 1
 21887                           ;encoder.c: 335: {;encoder.c: 337: if(!os.busy)
 21888  00E802  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 21889  00E804  A4D8               	btfss	status,2,c
 21890  00E806  D00D               	goto	l2870
 21891                           
 21892                           ; BSR set to: 1
 21893                           ;encoder.c: 338: motor_move_degrees_int(MOTOR_DIRECTION_CW, os.setup_step_size, 0xFFFF, 
      +                          MOTOR_OVERSHOOT_NO_OVERSHOOT);
 21894  00E808  C175  F099         	movff	_os+17,motor_move_degrees_int@distance	;volatile
 21895  00E80C  C176  F09A         	movff	_os+18,motor_move_degrees_int@distance+1	;volatile
 21896  00E810  0EFF               	movlw	255
 21897  00E812  0100               	movlb	0	; () banked
 21898  00E814  6F9C               	movwf	(motor_move_degrees_int@speed+1)& (0+255),b
 21899  00E816  699B               	setf	motor_move_degrees_int@speed& (0+255),b
 21900  00E818  0E01               	movlw	1
 21901  00E81A  6F9D               	movwf	motor_move_degrees_int@overshoot& (0+255),b
 21902  00E81C  0E01               	movlw	1
 21903  00E81E  EC41  F0AC         	call	_motor_move_degrees_int
 21904  00E822                     l2870:
 21905                           
 21906                           ;encoder.c: 339: };encoder.c: 340: if(os.encoder2Count<0)
 21907  00E822  0101               	movlb	1	; () banked
 21908  00E824  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 21909  00E826  0012               	return	
 21910                           
 21911                           ; BSR set to: 1
 21912                           ;encoder.c: 341: {;encoder.c: 343: if(!os.busy)
 21913  00E828  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 21914  00E82A  A4D8               	btfss	status,2,c
 21915  00E82C  0012               	return	
 21916                           
 21917                           ; BSR set to: 1
 21918                           ;encoder.c: 344: motor_move_degrees_int(MOTOR_DIRECTION_CCW, os.setup_step_size, 0xFFFF,
      +                           MOTOR_OVERSHOOT_NO_OVERSHOOT);
 21919  00E82E  C175  F099         	movff	_os+17,motor_move_degrees_int@distance	;volatile
 21920  00E832  C176  F09A         	movff	_os+18,motor_move_degrees_int@distance+1	;volatile
 21921  00E836  0EFF               	movlw	255
 21922  00E838  0100               	movlb	0	; () banked
 21923  00E83A  6F9C               	movwf	(motor_move_degrees_int@speed+1)& (0+255),b
 21924  00E83C  699B               	setf	motor_move_degrees_int@speed& (0+255),b
 21925  00E83E  0E01               	movlw	1
 21926  00E840  6F9D               	movwf	motor_move_degrees_int@overshoot& (0+255),b
 21927  00E842  0EFF               	movlw	255
 21928  00E844  EC41  F0AC         	call	_motor_move_degrees_int
 21929                           
 21930                           ;encoder.c: 345: };encoder.c: 346: break;
 21931  00E848  0012               	return	
 21932  00E84A                     
 21933                           ;encoder.c: 352: if(os.button1==1 || os.button2==1)
 21934  00E84A  0101               	movlb	1	; () banked
 21935  00E84C  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 21936  00E84E  B4D8               	btfsc	status,2,c
 21937  00E850  D003               	goto	u17910
 21938                           
 21939                           ; BSR set to: 1
 21940  00E852  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 21941  00E854  A4D8               	btfss	status,2,c
 21942  00E856  D003               	goto	l2877
 21943  00E858                     u17910:
 21944                           
 21945                           ; BSR set to: 1
 21946                           ;encoder.c: 353: {;encoder.c: 354: motor_set_zero(MOTOR_DIRECTION_CCW);
 21947                           
 21948                           ; BSR set to: 1
 21949  00E858  0EFF               	movlw	255
 21950  00E85A  ECDD  F0AD         	call	_motor_set_zero
 21951  00E85E                     l2877:
 21952                           
 21953                           ;encoder.c: 355: };encoder.c: 356: if(os.encoder1Count+os.encoder2Count>0)
 21954  00E85E  C169  F0A3         	movff	_os+5,??__encoder_statemachine_setup	;volatile
 21955  00E862  0100               	movlb	0	; () banked
 21956  00E864  6BA4               	clrf	(??__encoder_statemachine_setup+1)& (0+255),b
 21957  00E866  BFA3               	btfsc	??__encoder_statemachine_setup& (0+255),7,b
 21958  00E868  07A4               	decf	(??__encoder_statemachine_setup+1)& (0+255),f,b
 21959  00E86A  C167  F0A5         	movff	_os+3,??__encoder_statemachine_setup+2	;volatile
 21960  00E86E  6BA6               	clrf	(??__encoder_statemachine_setup+3)& (0+255),b
 21961  00E870  BFA5               	btfsc	(??__encoder_statemachine_setup+2)& (0+255),7,b
 21962  00E872  07A6               	decf	(??__encoder_statemachine_setup+3)& (0+255),f,b
 21963  00E874  51A3               	movf	??__encoder_statemachine_setup& (0+255),w,b
 21964  00E876  27A5               	addwf	(??__encoder_statemachine_setup+2)& (0+255),f,b
 21965  00E878  51A4               	movf	(??__encoder_statemachine_setup+1)& (0+255),w,b
 21966  00E87A  23A6               	addwfc	(??__encoder_statemachine_setup+3)& (0+255),f,b
 21967  00E87C  BFA6               	btfsc	(??__encoder_statemachine_setup+3)& (0+255),7,b
 21968  00E87E  D008               	goto	l2880
 21969  00E880  51A6               	movf	(??__encoder_statemachine_setup+3)& (0+255),w,b
 21970  00E882  E103               	bnz	u17920
 21971  00E884  05A5               	decf	(??__encoder_statemachine_setup+2)& (0+255),w,b
 21972  00E886  A0D8               	btfss	status,0,c
 21973  00E888  D003               	goto	l2880
 21974  00E88A                     u17920:
 21975                           
 21976                           ; BSR set to: 0
 21977                           ;encoder.c: 357: os.displayState = DISPLAY_STATE_SETUP2_CW;
 21978  00E88A  0E22               	movlw	34
 21979  00E88C  0101               	movlb	1	; () banked
 21980  00E88E  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21981  00E890                     l2880:
 21982                           
 21983                           ;encoder.c: 358: if(os.encoder1Count+os.encoder2Count<0)
 21984                           
 21985                           ; BSR set to: 1
 21986  00E890  C169  F0A3         	movff	_os+5,??__encoder_statemachine_setup	;volatile
 21987  00E894  0100               	movlb	0	; () banked
 21988  00E896  6BA4               	clrf	(??__encoder_statemachine_setup+1)& (0+255),b
 21989  00E898  BFA3               	btfsc	??__encoder_statemachine_setup& (0+255),7,b
 21990  00E89A  07A4               	decf	(??__encoder_statemachine_setup+1)& (0+255),f,b
 21991  00E89C  C167  F0A5         	movff	_os+3,??__encoder_statemachine_setup+2	;volatile
 21992  00E8A0  6BA6               	clrf	(??__encoder_statemachine_setup+3)& (0+255),b
 21993  00E8A2  BFA5               	btfsc	(??__encoder_statemachine_setup+2)& (0+255),7,b
 21994  00E8A4  07A6               	decf	(??__encoder_statemachine_setup+3)& (0+255),f,b
 21995  00E8A6  51A3               	movf	??__encoder_statemachine_setup& (0+255),w,b
 21996  00E8A8  27A5               	addwf	(??__encoder_statemachine_setup+2)& (0+255),f,b
 21997  00E8AA  51A4               	movf	(??__encoder_statemachine_setup+1)& (0+255),w,b
 21998  00E8AC  23A6               	addwfc	(??__encoder_statemachine_setup+3)& (0+255),f,b
 21999  00E8AE  AFA6               	btfss	(??__encoder_statemachine_setup+3)& (0+255),7,b
 22000  00E8B0  0012               	return	
 22001                           
 22002                           ; BSR set to: 0
 22003                           ;encoder.c: 359: os.displayState = DISPLAY_STATE_SETUP2_CW;
 22004  00E8B2  0E22               	movlw	34
 22005  00E8B4  0101               	movlb	1	; () banked
 22006  00E8B6  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22007                           
 22008                           ; BSR set to: 1
 22009                           ;encoder.c: 360: break;
 22010  00E8B8  0012               	return	
 22011  00E8BA                     
 22012                           ; BSR set to: 1
 22013                           ;encoder.c: 362: if(os.button1==1 || os.button2==1)
 22014                           
 22015                           ; BSR set to: 1
 22016  00E8BA  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 22017  00E8BC  B4D8               	btfsc	status,2,c
 22018  00E8BE  D003               	goto	u17950
 22019                           
 22020                           ; BSR set to: 1
 22021  00E8C0  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 22022  00E8C2  A4D8               	btfss	status,2,c
 22023  00E8C4  D003               	goto	l2884
 22024  00E8C6                     u17950:
 22025                           
 22026                           ; BSR set to: 1
 22027                           ;encoder.c: 363: {;encoder.c: 364: motor_set_zero(MOTOR_DIRECTION_CW);
 22028                           
 22029                           ; BSR set to: 1
 22030  00E8C6  0E01               	movlw	1
 22031  00E8C8  ECDD  F0AD         	call	_motor_set_zero
 22032  00E8CC                     l2884:
 22033                           
 22034                           ;encoder.c: 365: };encoder.c: 366: if(os.encoder1Count+os.encoder2Count>0)
 22035  00E8CC  C169  F0A3         	movff	_os+5,??__encoder_statemachine_setup	;volatile
 22036  00E8D0  0100               	movlb	0	; () banked
 22037  00E8D2  6BA4               	clrf	(??__encoder_statemachine_setup+1)& (0+255),b
 22038  00E8D4  BFA3               	btfsc	??__encoder_statemachine_setup& (0+255),7,b
 22039  00E8D6  07A4               	decf	(??__encoder_statemachine_setup+1)& (0+255),f,b
 22040  00E8D8  C167  F0A5         	movff	_os+3,??__encoder_statemachine_setup+2	;volatile
 22041  00E8DC  6BA6               	clrf	(??__encoder_statemachine_setup+3)& (0+255),b
 22042  00E8DE  BFA5               	btfsc	(??__encoder_statemachine_setup+2)& (0+255),7,b
 22043  00E8E0  07A6               	decf	(??__encoder_statemachine_setup+3)& (0+255),f,b
 22044  00E8E2  51A3               	movf	??__encoder_statemachine_setup& (0+255),w,b
 22045  00E8E4  27A5               	addwf	(??__encoder_statemachine_setup+2)& (0+255),f,b
 22046  00E8E6  51A4               	movf	(??__encoder_statemachine_setup+1)& (0+255),w,b
 22047  00E8E8  23A6               	addwfc	(??__encoder_statemachine_setup+3)& (0+255),f,b
 22048  00E8EA  BFA6               	btfsc	(??__encoder_statemachine_setup+3)& (0+255),7,b
 22049  00E8EC  D008               	goto	l2887
 22050  00E8EE  51A6               	movf	(??__encoder_statemachine_setup+3)& (0+255),w,b
 22051  00E8F0  E103               	bnz	u17960
 22052  00E8F2  05A5               	decf	(??__encoder_statemachine_setup+2)& (0+255),w,b
 22053  00E8F4  A0D8               	btfss	status,0,c
 22054  00E8F6  D003               	goto	l2887
 22055  00E8F8                     u17960:
 22056                           
 22057                           ; BSR set to: 0
 22058                           ;encoder.c: 367: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 22059  00E8F8  0E21               	movlw	33
 22060  00E8FA  0101               	movlb	1	; () banked
 22061  00E8FC  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22062  00E8FE                     l2887:
 22063                           
 22064                           ;encoder.c: 368: if(os.encoder1Count+os.encoder2Count<0)
 22065                           
 22066                           ; BSR set to: 1
 22067  00E8FE  C169  F0A3         	movff	_os+5,??__encoder_statemachine_setup	;volatile
 22068  00E902  0100               	movlb	0	; () banked
 22069  00E904  6BA4               	clrf	(??__encoder_statemachine_setup+1)& (0+255),b
 22070  00E906  BFA3               	btfsc	??__encoder_statemachine_setup& (0+255),7,b
 22071  00E908  07A4               	decf	(??__encoder_statemachine_setup+1)& (0+255),f,b
 22072  00E90A  C167  F0A5         	movff	_os+3,??__encoder_statemachine_setup+2	;volatile
 22073  00E90E  6BA6               	clrf	(??__encoder_statemachine_setup+3)& (0+255),b
 22074  00E910  BFA5               	btfsc	(??__encoder_statemachine_setup+2)& (0+255),7,b
 22075  00E912  07A6               	decf	(??__encoder_statemachine_setup+3)& (0+255),f,b
 22076  00E914  51A3               	movf	??__encoder_statemachine_setup& (0+255),w,b
 22077  00E916  27A5               	addwf	(??__encoder_statemachine_setup+2)& (0+255),f,b
 22078  00E918  51A4               	movf	(??__encoder_statemachine_setup+1)& (0+255),w,b
 22079  00E91A  23A6               	addwfc	(??__encoder_statemachine_setup+3)& (0+255),f,b
 22080  00E91C  AFA6               	btfss	(??__encoder_statemachine_setup+3)& (0+255),7,b
 22081  00E91E  0012               	return	
 22082                           
 22083                           ; BSR set to: 0
 22084                           ;encoder.c: 369: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 22085  00E920  0E21               	movlw	33
 22086  00E922  0101               	movlb	1	; () banked
 22087  00E924  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22088                           
 22089                           ; BSR set to: 1
 22090                           ;encoder.c: 371: }
 22091                           
 22092                           ; BSR set to: 1
 22093                           ;encoder.c: 370: break;
 22094  00E926  0012               	return	
 22095  00E928                     
 22096                           ; BSR set to: 1
 22097  00E928  0101               	movlb	1	; () banked
 22098  00E92A  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 22099                           
 22100                           ; Switch size 1, requested type "space"
 22101                           ; Number of cases is 2, Range of values is 33 to 34
 22102                           ; switch strategies available:
 22103                           ; Name         Instructions Cycles
 22104                           ; simple_byte            7     4 (average)
 22105                           ;	Chosen strategy is simple_byte
 22106  00E92C  0A21               	xorlw	33	; case 33
 22107  00E92E  B4D8               	btfsc	status,2,c
 22108  00E930  D78C               	goto	l2876
 22109  00E932  0A03               	xorlw	3	; case 34
 22110  00E934  A4D8               	btfss	status,2,c
 22111                           
 22112                           ; BSR set to: 1
 22113                           ;encoder.c: 373: }
 22114                           
 22115                           ; BSR set to: 1
 22116                           ;encoder.c: 372: break;
 22117  00E936  0012               	return	
 22118  00E938  D7C0               	goto	l2883
 22119  00E93A                     l2856:
 22120                           
 22121                           ; BSR set to: 1
 22122  00E93A  0101               	movlb	1	; () banked
 22123  00E93C  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 22124  00E93E  0BF0               	andlw	240
 22125  00E940  0100               	movlb	0	; () banked
 22126  00E942  6FA3               	movwf	??__encoder_statemachine_setup& (0+255),b
 22127  00E944  6BA4               	clrf	(??__encoder_statemachine_setup+1)& (0+255),b
 22128                           
 22129                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22130                           ; Switch size 1, requested type "space"
 22131                           ; Number of cases is 1, Range of values is 0 to 0
 22132                           ; switch strategies available:
 22133                           ; Name         Instructions Cycles
 22134                           ; simple_byte            4     3 (average)
 22135                           ;	Chosen strategy is simple_byte
 22136  00E946  51A4               	movf	(??__encoder_statemachine_setup+1)& (0+255),w,b
 22137  00E948  0A00               	xorlw	0	; case 0
 22138  00E94A  A4D8               	btfss	status,2,c
 22139  00E94C  0012               	return	
 22140                           
 22141                           ; BSR set to: 0
 22142                           ; Switch size 1, requested type "space"
 22143                           ; Number of cases is 2, Range of values is 16 to 32
 22144                           ; switch strategies available:
 22145                           ; Name         Instructions Cycles
 22146                           ; simple_byte            7     4 (average)
 22147                           ;	Chosen strategy is simple_byte
 22148  00E94E  51A3               	movf	??__encoder_statemachine_setup& (0+255),w,b
 22149  00E950  0A10               	xorlw	16	; case 16
 22150  00E952  B4D8               	btfsc	status,2,c
 22151  00E954  D73B               	goto	l2858
 22152  00E956  0A30               	xorlw	48	; case 32
 22153  00E958  A4D8               	btfss	status,2,c
 22154  00E95A  0012               	return	
 22155  00E95C  D7E5               	goto	l2875
 22156  00E95E                     __end_of__encoder_statemachine_setup:
 22157                           	opt stack 0
 22158                           tblptru	equ	0xFF8
 22159                           tblptrh	equ	0xFF7
 22160                           tblptrl	equ	0xFF6
 22161                           tablat	equ	0xFF5
 22162                           prodh	equ	0xFF4
 22163                           prodl	equ	0xFF3
 22164                           intcon	equ	0xFF2
 22165                           postinc0	equ	0xFEE
 22166                           wreg	equ	0xFE8
 22167                           indf1	equ	0xFE7
 22168                           postinc1	equ	0xFE6
 22169                           postdec1	equ	0xFE5
 22170                           plusw1	equ	0xFE3
 22171                           fsr1h	equ	0xFE2
 22172                           fsr1l	equ	0xFE1
 22173                           indf2	equ	0xFDF
 22174                           postinc2	equ	0xFDE
 22175                           postdec2	equ	0xFDD
 22176                           plusw2	equ	0xFDB
 22177                           fsr2h	equ	0xFDA
 22178                           fsr2l	equ	0xFD9
 22179                           status	equ	0xFD8
 22180                           
 22181 ;; *************** function _motor_move_degrees_int *****************
 22182 ;; Defined at:
 22183 ;;		line 1023 in file "motor.c"
 22184 ;; Parameters:    Size  Location     Type
 22185 ;;  direction       1    wreg     enum E6622
 22186 ;;  distance        2   57[BANK0 ] unsigned int 
 22187 ;;  speed           2   59[BANK0 ] unsigned int 
 22188 ;;  overshoot       1   61[BANK0 ] enum E6635
 22189 ;; Auto vars:     Size  Location     Type
 22190 ;;  direction       1   66[BANK0 ] enum E6622
 22191 ;;  distance_in_    4   62[BANK0 ] unsigned long 
 22192 ;; Return value:  Size  Location     Type
 22193 ;;                  1    wreg      enum E6639
 22194 ;; Registers used:
 22195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22196 ;; Tracked objects:
 22197 ;;		On entry : 0/0
 22198 ;;		On exit  : 0/0
 22199 ;;		Unchanged: 0/0
 22200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22201 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22202 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22204 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22205 ;;Total ram usage:       10 bytes
 22206 ;; Hardware stack levels used:    1
 22207 ;; Hardware stack levels required when called:   13
 22208 ;; This function calls:
 22209 ;;		__motor_move_steps
 22210 ;;		__motor_steps_from_degrees_int
 22211 ;; This function is called by:
 22212 ;;		__encoder_statemachine_setup
 22213 ;; This function uses a non-reentrant model
 22214 ;;
 22215                           
 22216                           	psect	text88
 22217  015882                     __ptext88:
 22218                           	opt stack 0
 22219  015882                     _motor_move_degrees_int:
 22220                           	opt stack 15
 22221                           
 22222                           ;incstack = 0
 22223                           ;motor_move_degrees_int@direction stored from wreg
 22224  015882  0100               	movlb	0	; () banked
 22225  015884  6FA2               	movwf	motor_move_degrees_int@direction& (0+255),b
 22226                           
 22227                           ;motor.c: 1026: uint32_t distance_in_steps = _motor_steps_from_degrees_int(distance);
 22228  015886  C099  F091         	movff	motor_move_degrees_int@distance,__motor_steps_from_degrees_int@degrees
 22229  01588A  C09A  F092         	movff	motor_move_degrees_int@distance+1,__motor_steps_from_degrees_int@degrees+1
 22230  01588E  ECCE  F086         	call	__motor_steps_from_degrees_int	;wreg free
 22231  015892  C091  F09E         	movff	?__motor_steps_from_degrees_int,motor_move_degrees_int@distance_in_steps
 22232  015896  C092  F09F         	movff	?__motor_steps_from_degrees_int+1,motor_move_degrees_int@distance_in_steps+1
 22233  01589A  C093  F0A0         	movff	?__motor_steps_from_degrees_int+2,motor_move_degrees_int@distance_in_steps+2
 22234  01589E  C094  F0A1         	movff	?__motor_steps_from_degrees_int+3,motor_move_degrees_int@distance_in_steps+3
 22235                           
 22236                           ;motor.c: 1029: return _motor_move_steps(direction, distance_in_steps, speed, overshoot,
      +                           MOTOR_MOVE_TYPE_NORMAL);;	Return value of _motor_move_degrees_int is never used
 22237  0158A2  C09E  F07D         	movff	motor_move_degrees_int@distance_in_steps,__motor_move_steps@distance_in_steps
 22238  0158A6  C09F  F07E         	movff	motor_move_degrees_int@distance_in_steps+1,__motor_move_steps@distance_in_steps+1
 22239  0158AA  C0A0  F07F         	movff	motor_move_degrees_int@distance_in_steps+2,__motor_move_steps@distance_in_steps+2
 22240  0158AE  C0A1  F080         	movff	motor_move_degrees_int@distance_in_steps+3,__motor_move_steps@distance_in_steps+3
 22241  0158B2  C09B  F081         	movff	motor_move_degrees_int@speed,__motor_move_steps@speed
 22242  0158B6  C09C  F082         	movff	motor_move_degrees_int@speed+1,__motor_move_steps@speed+1
 22243  0158BA  C09D  F083         	movff	motor_move_degrees_int@overshoot,__motor_move_steps@overshoot
 22244  0158BE  0E00               	movlw	0
 22245  0158C0  0100               	movlb	0	; () banked
 22246  0158C2  6F84               	movwf	__motor_move_steps@type& (0+255),b
 22247  0158C4  51A2               	movf	motor_move_degrees_int@direction& (0+255),w,b
 22248  0158C6  EC7D  F077         	call	__motor_move_steps
 22249  0158CA  0012               	return	
 22250  0158CC                     __end_of_motor_move_degrees_int:
 22251                           	opt stack 0
 22252                           tblptru	equ	0xFF8
 22253                           tblptrh	equ	0xFF7
 22254                           tblptrl	equ	0xFF6
 22255                           tablat	equ	0xFF5
 22256                           prodh	equ	0xFF4
 22257                           prodl	equ	0xFF3
 22258                           intcon	equ	0xFF2
 22259                           postinc0	equ	0xFEE
 22260                           wreg	equ	0xFE8
 22261                           indf1	equ	0xFE7
 22262                           postinc1	equ	0xFE6
 22263                           postdec1	equ	0xFE5
 22264                           plusw1	equ	0xFE3
 22265                           fsr1h	equ	0xFE2
 22266                           fsr1l	equ	0xFE1
 22267                           indf2	equ	0xFDF
 22268                           postinc2	equ	0xFDE
 22269                           postdec2	equ	0xFDD
 22270                           plusw2	equ	0xFDB
 22271                           fsr2h	equ	0xFDA
 22272                           fsr2l	equ	0xFD9
 22273                           status	equ	0xFD8
 22274                           
 22275 ;; *************** function __motor_steps_from_degrees_int *****************
 22276 ;; Defined at:
 22277 ;;		line 426 in file "motor.c"
 22278 ;; Parameters:    Size  Location     Type
 22279 ;;  degrees         2   49[BANK0 ] unsigned int 
 22280 ;; Auto vars:     Size  Location     Type
 22281 ;;  temp            4   53[BANK0 ] unsigned int 
 22282 ;; Return value:  Size  Location     Type
 22283 ;;                  4   49[BANK0 ] unsigned long 
 22284 ;; Registers used:
 22285 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 22286 ;; Tracked objects:
 22287 ;;		On entry : 0/0
 22288 ;;		On exit  : 0/0
 22289 ;;		Unchanged: 0/0
 22290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22291 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22292 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22294 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22295 ;;Total ram usage:        8 bytes
 22296 ;; Hardware stack levels used:    1
 22297 ;; Hardware stack levels required when called:   11
 22298 ;; This function calls:
 22299 ;;		___fladd
 22300 ;;		___fldiv
 22301 ;;		___flmul
 22302 ;;		___fltol
 22303 ;;		___xxtofl
 22304 ;; This function is called by:
 22305 ;;		_motor_move_degrees_int
 22306 ;;		_motor_goto_degrees_int
 22307 ;; This function uses a non-reentrant model
 22308 ;;
 22309                           
 22310                           	psect	text89
 22311  010D9C                     __ptext89:
 22312                           	opt stack 0
 22313  010D9C                     __motor_steps_from_degrees_int:
 22314                           	opt stack 16
 22315                           
 22316                           ;motor.c: 428: double temp;;motor.c: 431: if(degrees==0)
 22317                           
 22318                           ;incstack = 0
 22319  010D9C  0100               	movlb	0	; () banked
 22320  010D9E  5191               	movf	__motor_steps_from_degrees_int@degrees& (0+255),w,b
 22321  010DA0  1192               	iorwf	(__motor_steps_from_degrees_int@degrees+1)& (0+255),w,b
 22322  010DA2  A4D8               	btfss	status,2,c
 22323  010DA4  D009               	goto	l2534
 22324                           
 22325                           ; BSR set to: 0
 22326                           ;motor.c: 432: {;motor.c: 433: return 0;
 22327  010DA6  0E00               	movlw	0
 22328  010DA8  6F91               	movwf	?__motor_steps_from_degrees_int& (0+255),b
 22329  010DAA  0E00               	movlw	0
 22330  010DAC  6F92               	movwf	(?__motor_steps_from_degrees_int+1)& (0+255),b
 22331  010DAE  0E00               	movlw	0
 22332  010DB0  6F93               	movwf	(?__motor_steps_from_degrees_int+2)& (0+255),b
 22333  010DB2  0E00               	movlw	0
 22334  010DB4  6F94               	movwf	(?__motor_steps_from_degrees_int+3)& (0+255),b
 22335                           
 22336                           ; BSR set to: 0
 22337  010DB6  0012               	return	
 22338  010DB8                     l2534:
 22339                           
 22340                           ; BSR set to: 0
 22341                           ;motor.c: 434: };motor.c: 437: temp = (float) degrees;
 22342                           
 22343                           ; BSR set to: 0
 22344  010DB8  C091  F06A         	movff	__motor_steps_from_degrees_int@degrees,___xxtofl@val
 22345  010DBC  C092  F06B         	movff	__motor_steps_from_degrees_int@degrees+1,___xxtofl@val+1
 22346  010DC0  6B6C               	clrf	(___xxtofl@val+2)& (0+255),b
 22347  010DC2  6B6D               	clrf	(___xxtofl@val+3)& (0+255),b
 22348  010DC4  0E00               	movlw	0
 22349  010DC6  EC91  F082         	call	___xxtofl
 22350  010DCA  C06A  F095         	movff	?___xxtofl,__motor_steps_from_degrees_int@temp
 22351  010DCE  C06B  F096         	movff	?___xxtofl+1,__motor_steps_from_degrees_int@temp+1
 22352  010DD2  C06C  F097         	movff	?___xxtofl+2,__motor_steps_from_degrees_int@temp+2
 22353  010DD6  C06D  F098         	movff	?___xxtofl+3,__motor_steps_from_degrees_int@temp+3
 22354                           
 22355                           ;motor.c: 440: temp *= config.full_circle_in_steps;
 22356  010DDA  C095  F078         	movff	__motor_steps_from_degrees_int@temp,___flmul@b
 22357  010DDE  C096  F079         	movff	__motor_steps_from_degrees_int@temp+1,___flmul@b+1
 22358  010DE2  C097  F07A         	movff	__motor_steps_from_degrees_int@temp+2,___flmul@b+2
 22359  010DE6  C098  F07B         	movff	__motor_steps_from_degrees_int@temp+3,___flmul@b+3
 22360  010DEA  C195  F06A         	movff	_config,___xxtofl@val
 22361  010DEE  C196  F06B         	movff	_config+1,___xxtofl@val+1
 22362  010DF2  C197  F06C         	movff	_config+2,___xxtofl@val+2
 22363  010DF6  C198  F06D         	movff	_config+3,___xxtofl@val+3
 22364  010DFA  0E00               	movlw	0
 22365  010DFC  EC91  F082         	call	___xxtofl
 22366  010E00  C06A  F07C         	movff	?___xxtofl,___flmul@a
 22367  010E04  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 22368  010E08  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 22369  010E0C  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 22370  010E10  EC2B  F063         	call	___flmul	;wreg free
 22371  010E14  C078  F095         	movff	?___flmul,__motor_steps_from_degrees_int@temp
 22372  010E18  C079  F096         	movff	?___flmul+1,__motor_steps_from_degrees_int@temp+1
 22373  010E1C  C07A  F097         	movff	?___flmul+2,__motor_steps_from_degrees_int@temp+2
 22374  010E20  C07B  F098         	movff	?___flmul+3,__motor_steps_from_degrees_int@temp+3
 22375                           
 22376                           ;motor.c: 441: temp /= 36000.0;
 22377  010E24  C095  F078         	movff	__motor_steps_from_degrees_int@temp,___fldiv@b
 22378  010E28  C096  F079         	movff	__motor_steps_from_degrees_int@temp+1,___fldiv@b+1
 22379  010E2C  C097  F07A         	movff	__motor_steps_from_degrees_int@temp+2,___fldiv@b+2
 22380  010E30  C098  F07B         	movff	__motor_steps_from_degrees_int@temp+3,___fldiv@b+3
 22381  010E34  0E00               	movlw	0
 22382  010E36  0100               	movlb	0	; () banked
 22383  010E38  6F7C               	movwf	___fldiv@a& (0+255),b
 22384  010E3A  0EA0               	movlw	160
 22385  010E3C  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 22386  010E3E  0E0C               	movlw	12
 22387  010E40  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 22388  010E42  0E47               	movlw	71
 22389  010E44  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 22390  010E46  EC53  F069         	call	___fldiv	;wreg free
 22391  010E4A  C078  F095         	movff	?___fldiv,__motor_steps_from_degrees_int@temp
 22392  010E4E  C079  F096         	movff	?___fldiv+1,__motor_steps_from_degrees_int@temp+1
 22393  010E52  C07A  F097         	movff	?___fldiv+2,__motor_steps_from_degrees_int@temp+2
 22394  010E56  C07B  F098         	movff	?___fldiv+3,__motor_steps_from_degrees_int@temp+3
 22395                           
 22396                           ;motor.c: 442: temp += 0.5;
 22397  010E5A  C095  F07C         	movff	__motor_steps_from_degrees_int@temp,___fladd@b
 22398  010E5E  C096  F07D         	movff	__motor_steps_from_degrees_int@temp+1,___fladd@b+1
 22399  010E62  C097  F07E         	movff	__motor_steps_from_degrees_int@temp+2,___fladd@b+2
 22400  010E66  C098  F07F         	movff	__motor_steps_from_degrees_int@temp+3,___fladd@b+3
 22401  010E6A  0E00               	movlw	0
 22402  010E6C  0100               	movlb	0	; () banked
 22403  010E6E  6F80               	movwf	___fladd@a& (0+255),b
 22404  010E70  0E00               	movlw	0
 22405  010E72  6F81               	movwf	(___fladd@a+1)& (0+255),b
 22406  010E74  0E00               	movlw	0
 22407  010E76  6F82               	movwf	(___fladd@a+2)& (0+255),b
 22408  010E78  0E3F               	movlw	63
 22409  010E7A  6F83               	movwf	(___fladd@a+3)& (0+255),b
 22410  010E7C  ECD4  F064         	call	___fladd	;wreg free
 22411  010E80  C07C  F095         	movff	?___fladd,__motor_steps_from_degrees_int@temp
 22412  010E84  C07D  F096         	movff	?___fladd+1,__motor_steps_from_degrees_int@temp+1
 22413  010E88  C07E  F097         	movff	?___fladd+2,__motor_steps_from_degrees_int@temp+2
 22414  010E8C  C07F  F098         	movff	?___fladd+3,__motor_steps_from_degrees_int@temp+3
 22415                           
 22416                           ;motor.c: 445: return (uint32_t) temp;
 22417  010E90  C095  F060         	movff	__motor_steps_from_degrees_int@temp,___fltol@f1
 22418  010E94  C096  F061         	movff	__motor_steps_from_degrees_int@temp+1,___fltol@f1+1
 22419  010E98  C097  F062         	movff	__motor_steps_from_degrees_int@temp+2,___fltol@f1+2
 22420  010E9C  C098  F063         	movff	__motor_steps_from_degrees_int@temp+3,___fltol@f1+3
 22421  010EA0  ECEA  F094         	call	___fltol	;wreg free
 22422  010EA4  C060  F091         	movff	?___fltol,?__motor_steps_from_degrees_int
 22423  010EA8  C061  F092         	movff	?___fltol+1,?__motor_steps_from_degrees_int+1
 22424  010EAC  C062  F093         	movff	?___fltol+2,?__motor_steps_from_degrees_int+2
 22425  010EB0  C063  F094         	movff	?___fltol+3,?__motor_steps_from_degrees_int+3
 22426  010EB4  0012               	return	
 22427  010EB6                     __end_of__motor_steps_from_degrees_int:
 22428                           	opt stack 0
 22429                           tblptru	equ	0xFF8
 22430                           tblptrh	equ	0xFF7
 22431                           tblptrl	equ	0xFF6
 22432                           tablat	equ	0xFF5
 22433                           prodh	equ	0xFF4
 22434                           prodl	equ	0xFF3
 22435                           intcon	equ	0xFF2
 22436                           postinc0	equ	0xFEE
 22437                           wreg	equ	0xFE8
 22438                           indf1	equ	0xFE7
 22439                           postinc1	equ	0xFE6
 22440                           postdec1	equ	0xFE5
 22441                           plusw1	equ	0xFE3
 22442                           fsr1h	equ	0xFE2
 22443                           fsr1l	equ	0xFE1
 22444                           indf2	equ	0xFDF
 22445                           postinc2	equ	0xFDE
 22446                           postdec2	equ	0xFDD
 22447                           plusw2	equ	0xFDB
 22448                           fsr2h	equ	0xFDA
 22449                           fsr2l	equ	0xFD9
 22450                           status	equ	0xFD8
 22451                           
 22452 ;; *************** function __encoder_next_setup_stepsize *****************
 22453 ;; Defined at:
 22454 ;;		line 31 in file "encoder.c"
 22455 ;; Parameters:    Size  Location     Type
 22456 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 22457 ;; Auto vars:     Size  Location     Type
 22458 ;;		None
 22459 ;; Return value:  Size  Location     Type
 22460 ;;                  2    0[BANK0 ] unsigned int 
 22461 ;; Registers used:
 22462 ;;		wreg, status,2, status,0
 22463 ;; Tracked objects:
 22464 ;;		On entry : 0/0
 22465 ;;		On exit  : 0/0
 22466 ;;		Unchanged: 0/0
 22467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22468 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22470 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22471 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22472 ;;Total ram usage:        4 bytes
 22473 ;; Hardware stack levels used:    1
 22474 ;; Hardware stack levels required when called:   10
 22475 ;; This function calls:
 22476 ;;		Nothing
 22477 ;; This function is called by:
 22478 ;;		__encoder_statemachine_setup
 22479 ;; This function uses a non-reentrant model
 22480 ;;
 22481                           
 22482                           	psect	text90
 22483  014970                     __ptext90:
 22484                           	opt stack 0
 22485  014970                     __encoder_next_setup_stepsize:
 22486                           	opt stack 18
 22487                           
 22488                           ;encoder.c: 33: switch(old_stepsize)
 22489                           
 22490                           ;incstack = 0
 22491  014970  D01A               	goto	l2729
 22492  014972                     
 22493                           ;encoder.c: 36: return 100;
 22494  014972  0E00               	movlw	0
 22495  014974  0100               	movlb	0	; () banked
 22496  014976  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 22497  014978  0E64               	movlw	100
 22498  01497A  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 22499                           
 22500                           ; BSR set to: 0
 22501  01497C  0012               	return	
 22502  01497E                     
 22503                           ; BSR set to: 0
 22504                           ;encoder.c: 38: return 10;
 22505                           
 22506                           ; BSR set to: 0
 22507  01497E  0E00               	movlw	0
 22508  014980  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 22509  014982  0E0A               	movlw	10
 22510  014984  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 22511                           
 22512                           ; BSR set to: 0
 22513  014986  0012               	return	
 22514  014988                     
 22515                           ; BSR set to: 0
 22516                           ;encoder.c: 40: return 1;
 22517                           
 22518                           ; BSR set to: 0
 22519  014988  0E00               	movlw	0
 22520  01498A  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 22521  01498C  0E01               	movlw	1
 22522  01498E  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 22523                           
 22524                           ; BSR set to: 0
 22525  014990  0012               	return	
 22526  014992                     
 22527                           ; BSR set to: 0
 22528                           ;encoder.c: 42: return 1000;
 22529                           
 22530                           ; BSR set to: 0
 22531  014992  0E03               	movlw	3
 22532  014994  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 22533  014996  0EE8               	movlw	232
 22534  014998  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 22535                           
 22536                           ; BSR set to: 0
 22537  01499A  0012               	return	
 22538  01499C                     
 22539                           ; BSR set to: 0
 22540                           ;encoder.c: 44: return 100;
 22541                           
 22542                           ; BSR set to: 0
 22543  01499C  0E00               	movlw	0
 22544  01499E  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 22545  0149A0  0E64               	movlw	100
 22546  0149A2  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 22547                           
 22548                           ; BSR set to: 0
 22549                           ;encoder.c: 45: }
 22550                           
 22551                           ; BSR set to: 0
 22552  0149A4  0012               	return	
 22553  0149A6                     l2729:
 22554                           
 22555                           ; BSR set to: 0
 22556  0149A6  C060  F062         	movff	__encoder_next_setup_stepsize@old_stepsize,??__encoder_next_setup_stepsize
 22557  0149AA  C061  F063         	movff	__encoder_next_setup_stepsize@old_stepsize+1,??__encoder_next_setup_stepsize+1
 22558                           
 22559                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 22560                           ; Switch size 1, requested type "space"
 22561                           ; Number of cases is 2, Range of values is 0 to 3
 22562                           ; switch strategies available:
 22563                           ; Name         Instructions Cycles
 22564                           ; simple_byte            7     4 (average)
 22565                           ;	Chosen strategy is simple_byte
 22566  0149AE  0100               	movlb	0	; () banked
 22567  0149B0  5163               	movf	(??__encoder_next_setup_stepsize+1)& (0+255),w,b
 22568  0149B2  0A00               	xorlw	0	; case 0
 22569  0149B4  B4D8               	btfsc	status,2,c
 22570  0149B6  D004               	goto	l20707
 22571  0149B8  0A03               	xorlw	3	; case 3
 22572  0149BA  B4D8               	btfsc	status,2,c
 22573  0149BC  D00C               	goto	l20709
 22574  0149BE  D7EE               	goto	l2735
 22575  0149C0                     l20707:
 22576                           
 22577                           ; BSR set to: 0
 22578                           ; Switch size 1, requested type "space"
 22579                           ; Number of cases is 3, Range of values is 1 to 100
 22580                           ; switch strategies available:
 22581                           ; Name         Instructions Cycles
 22582                           ; simple_byte           10     6 (average)
 22583                           ;	Chosen strategy is simple_byte
 22584  0149C0  5162               	movf	??__encoder_next_setup_stepsize& (0+255),w,b
 22585  0149C2  0A01               	xorlw	1	; case 1
 22586  0149C4  B4D8               	btfsc	status,2,c
 22587  0149C6  D7E5               	goto	l2734
 22588  0149C8  0A0B               	xorlw	11	; case 10
 22589  0149CA  B4D8               	btfsc	status,2,c
 22590  0149CC  D7DD               	goto	l2733
 22591  0149CE  0A6E               	xorlw	110	; case 100
 22592  0149D0  B4D8               	btfsc	status,2,c
 22593  0149D2  D7D5               	goto	l2732
 22594  0149D4  D7E3               	goto	l2735
 22595  0149D6                     l20709:
 22596                           
 22597                           ; BSR set to: 0
 22598                           ; Switch size 1, requested type "space"
 22599                           ; Number of cases is 1, Range of values is 232 to 232
 22600                           ; switch strategies available:
 22601                           ; Name         Instructions Cycles
 22602                           ; simple_byte            4     3 (average)
 22603                           ;	Chosen strategy is simple_byte
 22604  0149D6  5162               	movf	??__encoder_next_setup_stepsize& (0+255),w,b
 22605  0149D8  0AE8               	xorlw	232	; case 232
 22606  0149DA  B4D8               	btfsc	status,2,c
 22607  0149DC  D7CA               	goto	l2730
 22608  0149DE  D7DE               	goto	l2735
 22609  0149E0                     __end_of__encoder_next_setup_stepsize:
 22610                           	opt stack 0
 22611                           tblptru	equ	0xFF8
 22612                           tblptrh	equ	0xFF7
 22613                           tblptrl	equ	0xFF6
 22614                           tablat	equ	0xFF5
 22615                           prodh	equ	0xFF4
 22616                           prodl	equ	0xFF3
 22617                           intcon	equ	0xFF2
 22618                           postinc0	equ	0xFEE
 22619                           wreg	equ	0xFE8
 22620                           indf1	equ	0xFE7
 22621                           postinc1	equ	0xFE6
 22622                           postdec1	equ	0xFE5
 22623                           plusw1	equ	0xFE3
 22624                           fsr1h	equ	0xFE2
 22625                           fsr1l	equ	0xFE1
 22626                           indf2	equ	0xFDF
 22627                           postinc2	equ	0xFDE
 22628                           postdec2	equ	0xFDD
 22629                           plusw2	equ	0xFDB
 22630                           fsr2h	equ	0xFDA
 22631                           fsr2l	equ	0xFD9
 22632                           status	equ	0xFD8
 22633                           
 22634 ;; *************** function __encoder_statemachine_manual *****************
 22635 ;; Defined at:
 22636 ;;		line 542 in file "encoder.c"
 22637 ;; Parameters:    Size  Location     Type
 22638 ;;		None
 22639 ;; Auto vars:     Size  Location     Type
 22640 ;;		None
 22641 ;; Return value:  Size  Location     Type
 22642 ;;                  1    wreg      void 
 22643 ;; Registers used:
 22644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22645 ;; Tracked objects:
 22646 ;;		On entry : 0/0
 22647 ;;		On exit  : 0/0
 22648 ;;		Unchanged: 0/0
 22649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22652 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22653 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22654 ;;Total ram usage:        2 bytes
 22655 ;; Hardware stack levels used:    1
 22656 ;; Hardware stack levels required when called:   14
 22657 ;; This function calls:
 22658 ;;		_motor_decrease_manual_speed
 22659 ;;		_motor_increase_manual_speed
 22660 ;;		_motor_move_endless
 22661 ;;		_motor_stop
 22662 ;; This function is called by:
 22663 ;;		_encoder_statemachine
 22664 ;; This function uses a non-reentrant model
 22665 ;;
 22666                           
 22667                           	psect	text91
 22668  0122C6                     __ptext91:
 22669                           	opt stack 0
 22670  0122C6                     __encoder_statemachine_manual:
 22671                           	opt stack 15
 22672                           
 22673                           ;encoder.c: 544: switch(os.displayState & 0xF0)
 22674                           
 22675                           ; BSR set to: 0
 22676                           ;incstack = 0
 22677  0122C6  D063               	goto	l2959
 22678  0122C8                     
 22679                           ;encoder.c: 547: if(os.encoder1Count>0)
 22680  0122C8  0101               	movlb	1	; () banked
 22681  0122CA  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 22682  0122CC  0A80               	xorlw	128
 22683  0122CE  0F7F               	addlw	-129
 22684  0122D0  B0D8               	btfsc	status,0,c
 22685                           
 22686                           ; BSR set to: 1
 22687                           ;encoder.c: 548: {;encoder.c: 549: motor_increase_manual_speed();
 22688  0122D2  EC04  F0B1         	call	_motor_increase_manual_speed	;wreg free
 22689                           
 22690                           ;encoder.c: 550: };encoder.c: 551: if(os.encoder1Count<0)
 22691  0122D6  0101               	movlb	1	; () banked
 22692  0122D8  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 22693  0122DA  D04A               	goto	l2963
 22694                           
 22695                           ; BSR set to: 1
 22696                           ;encoder.c: 552: {;encoder.c: 553: motor_decrease_manual_speed();
 22697  0122DC  EC4A  F0B1         	call	_motor_decrease_manual_speed	;wreg free
 22698                           
 22699                           ;encoder.c: 554: };encoder.c: 555: switch(os.displayState)
 22700  0122E0  D047               	goto	l2963
 22701  0122E2                     
 22702                           ;encoder.c: 558: if(os.button2==1)
 22703  0122E2  0101               	movlb	1	; () banked
 22704  0122E4  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 22705  0122E6  A4D8               	btfss	status,2,c
 22706  0122E8  D00A               	goto	l2965
 22707                           
 22708                           ; BSR set to: 1
 22709                           ;encoder.c: 559: {;encoder.c: 560: motor_move_endless(MOTOR_DIRECTION_CCW, os.manual_spe
      +                          ed);
 22710  0122EA  C188  F08C         	movff	_os+36,motor_move_endless@speed	;volatile
 22711  0122EE  C189  F08D         	movff	_os+37,motor_move_endless@speed+1	;volatile
 22712  0122F2  0EFF               	movlw	255
 22713  0122F4  ECD1  F0AF         	call	_motor_move_endless
 22714                           
 22715                           ;encoder.c: 561: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 22716  0122F8  0E84               	movlw	132
 22717  0122FA  0101               	movlb	1	; () banked
 22718  0122FC  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22719  0122FE                     l2965:
 22720                           
 22721                           ; BSR set to: 1
 22722                           ;encoder.c: 562: };encoder.c: 563: if(os.encoder2Count>0)
 22723                           
 22724                           ; BSR set to: 1
 22725  0122FE  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 22726  012300  0A80               	xorlw	128
 22727  012302  0F7F               	addlw	-129
 22728  012304  A0D8               	btfss	status,0,c
 22729  012306  0012               	return	
 22730                           
 22731                           ; BSR set to: 1
 22732                           ;encoder.c: 564: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 22733  012308  0E82               	movlw	130
 22734  01230A  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22735                           
 22736                           ; BSR set to: 1
 22737                           ;encoder.c: 565: break;
 22738  01230C  0012               	return	
 22739  01230E                     
 22740                           ; BSR set to: 1
 22741                           ;encoder.c: 567: if(os.button2==1)
 22742                           
 22743                           ; BSR set to: 1
 22744  01230E  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 22745  012310  A4D8               	btfss	status,2,c
 22746  012312  D002               	goto	l2969
 22747                           
 22748                           ; BSR set to: 1
 22749                           ;encoder.c: 568: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 22750  012314  0E04               	movlw	4
 22751  012316  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22752  012318                     l2969:
 22753                           
 22754                           ; BSR set to: 1
 22755                           ;encoder.c: 569: if(os.encoder2Count>0)
 22756                           
 22757                           ; BSR set to: 1
 22758  012318  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 22759  01231A  0A80               	xorlw	128
 22760  01231C  0F7F               	addlw	-129
 22761  01231E  A0D8               	btfss	status,0,c
 22762  012320  D002               	goto	l2970
 22763                           
 22764                           ; BSR set to: 1
 22765                           ;encoder.c: 570: os.displayState = DISPLAY_STATE_MANUAL_CW;
 22766  012322  0E83               	movlw	131
 22767  012324  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22768  012326                     l2970:
 22769                           
 22770                           ; BSR set to: 1
 22771                           ;encoder.c: 571: if(os.encoder2Count<0)
 22772                           
 22773                           ; BSR set to: 1
 22774  012326  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 22775  012328  0012               	return	
 22776                           
 22777                           ; BSR set to: 1
 22778                           ;encoder.c: 572: os.displayState = DISPLAY_STATE_MANUAL_CCW;
 22779  01232A  0E81               	movlw	129
 22780  01232C  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22781                           
 22782                           ; BSR set to: 1
 22783                           ;encoder.c: 573: break;
 22784  01232E  0012               	return	
 22785  012330                     
 22786                           ; BSR set to: 1
 22787                           ;encoder.c: 575: if(os.button2==1)
 22788                           
 22789                           ; BSR set to: 1
 22790  012330  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 22791  012332  A4D8               	btfss	status,2,c
 22792  012334  D009               	goto	l2973
 22793                           
 22794                           ; BSR set to: 1
 22795                           ;encoder.c: 576: {;encoder.c: 577: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 22796  012336  0E84               	movlw	132
 22797  012338  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22798                           
 22799                           ; BSR set to: 1
 22800                           ;encoder.c: 578: motor_move_endless(MOTOR_DIRECTION_CW, os.manual_speed);
 22801  01233A  C188  F08C         	movff	_os+36,motor_move_endless@speed	;volatile
 22802  01233E  C189  F08D         	movff	_os+37,motor_move_endless@speed+1	;volatile
 22803  012342  0E01               	movlw	1
 22804  012344  ECD1  F0AF         	call	_motor_move_endless
 22805  012348                     l2973:
 22806                           
 22807                           ;encoder.c: 579: };encoder.c: 580: if(os.encoder2Count<0)
 22808  012348  0101               	movlb	1	; () banked
 22809  01234A  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 22810  01234C  0012               	return	
 22811                           
 22812                           ; BSR set to: 1
 22813                           ;encoder.c: 581: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 22814  01234E  0E82               	movlw	130
 22815  012350  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22816                           
 22817                           ; BSR set to: 1
 22818                           ;encoder.c: 582: break;
 22819  012352  0012               	return	
 22820  012354                     
 22821                           ; BSR set to: 1
 22822                           ;encoder.c: 584: if(!os.busy)
 22823                           
 22824                           ; BSR set to: 1
 22825  012354  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 22826  012356  A4D8               	btfss	status,2,c
 22827  012358  D002               	goto	l2976
 22828                           
 22829                           ; BSR set to: 1
 22830                           ;encoder.c: 585: {;encoder.c: 586: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 22831  01235A  0E82               	movlw	130
 22832  01235C  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22833  01235E                     l2976:
 22834                           
 22835                           ; BSR set to: 1
 22836                           ;encoder.c: 587: };encoder.c: 588: if(os.button2==1)
 22837                           
 22838                           ; BSR set to: 1
 22839  01235E  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 22840  012360  A4D8               	btfss	status,2,c
 22841  012362  0012               	return	
 22842                           
 22843                           ; BSR set to: 1
 22844                           ;encoder.c: 589: {;encoder.c: 590: motor_stop();
 22845  012364  ECA4  F0AB         	call	_motor_stop	;wreg free
 22846                           
 22847                           ;encoder.c: 591: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 22848  012368  0E82               	movlw	130
 22849  01236A  0101               	movlb	1	; () banked
 22850  01236C  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22851                           
 22852                           ; BSR set to: 1
 22853                           ;encoder.c: 594: }
 22854                           
 22855                           ; BSR set to: 1
 22856                           ;encoder.c: 592: };encoder.c: 593: break;
 22857  01236E  0012               	return	
 22858  012370                     l2963:
 22859                           
 22860                           ; BSR set to: 1
 22861  012370  0101               	movlb	1	; () banked
 22862  012372  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 22863                           
 22864                           ; Switch size 1, requested type "space"
 22865                           ; Number of cases is 4, Range of values is 129 to 132
 22866                           ; switch strategies available:
 22867                           ; Name         Instructions Cycles
 22868                           ; simple_byte           13     7 (average)
 22869                           ;	Chosen strategy is simple_byte
 22870  012374  0A81               	xorlw	129	; case 129
 22871  012376  B4D8               	btfsc	status,2,c
 22872  012378  D7B4               	goto	l2964
 22873  01237A  0A03               	xorlw	3	; case 130
 22874  01237C  B4D8               	btfsc	status,2,c
 22875  01237E  D7C7               	goto	l2968
 22876  012380  0A01               	xorlw	1	; case 131
 22877  012382  B4D8               	btfsc	status,2,c
 22878  012384  D7D5               	goto	l2972
 22879  012386  0A07               	xorlw	7	; case 132
 22880  012388  A4D8               	btfss	status,2,c
 22881                           
 22882                           ; BSR set to: 1
 22883                           ;encoder.c: 596: }
 22884                           
 22885                           ; BSR set to: 1
 22886                           ;encoder.c: 595: break;
 22887  01238A  0012               	return	
 22888  01238C  D7E3               	goto	l2975
 22889  01238E                     l2959:
 22890                           
 22891                           ; BSR set to: 1
 22892  01238E  0101               	movlb	1	; () banked
 22893  012390  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 22894  012392  0BF0               	andlw	240
 22895  012394  0100               	movlb	0	; () banked
 22896  012396  6F8F               	movwf	??__encoder_statemachine_manual& (0+255),b
 22897  012398  6B90               	clrf	(??__encoder_statemachine_manual+1)& (0+255),b
 22898                           
 22899                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22900                           ; Switch size 1, requested type "space"
 22901                           ; Number of cases is 1, Range of values is 0 to 0
 22902                           ; switch strategies available:
 22903                           ; Name         Instructions Cycles
 22904                           ; simple_byte            4     3 (average)
 22905                           ;	Chosen strategy is simple_byte
 22906  01239A  5190               	movf	(??__encoder_statemachine_manual+1)& (0+255),w,b
 22907  01239C  0A00               	xorlw	0	; case 0
 22908  01239E  A4D8               	btfss	status,2,c
 22909  0123A0  0012               	return	
 22910                           
 22911                           ; BSR set to: 0
 22912                           ; Switch size 1, requested type "space"
 22913                           ; Number of cases is 1, Range of values is 128 to 128
 22914                           ; switch strategies available:
 22915                           ; Name         Instructions Cycles
 22916                           ; simple_byte            4     3 (average)
 22917                           ;	Chosen strategy is simple_byte
 22918  0123A2  518F               	movf	??__encoder_statemachine_manual& (0+255),w,b
 22919  0123A4  0A80               	xorlw	128	; case 128
 22920  0123A6  A4D8               	btfss	status,2,c
 22921  0123A8  0012               	return	
 22922  0123AA  D78E               	goto	l2960
 22923  0123AC                     __end_of__encoder_statemachine_manual:
 22924                           	opt stack 0
 22925                           tblptru	equ	0xFF8
 22926                           tblptrh	equ	0xFF7
 22927                           tblptrl	equ	0xFF6
 22928                           tablat	equ	0xFF5
 22929                           prodh	equ	0xFF4
 22930                           prodl	equ	0xFF3
 22931                           intcon	equ	0xFF2
 22932                           postinc0	equ	0xFEE
 22933                           wreg	equ	0xFE8
 22934                           indf1	equ	0xFE7
 22935                           postinc1	equ	0xFE6
 22936                           postdec1	equ	0xFE5
 22937                           plusw1	equ	0xFE3
 22938                           fsr1h	equ	0xFE2
 22939                           fsr1l	equ	0xFE1
 22940                           indf2	equ	0xFDF
 22941                           postinc2	equ	0xFDE
 22942                           postdec2	equ	0xFDD
 22943                           plusw2	equ	0xFDB
 22944                           fsr2h	equ	0xFDA
 22945                           fsr2l	equ	0xFD9
 22946                           status	equ	0xFD8
 22947                           
 22948 ;; *************** function _motor_increase_manual_speed *****************
 22949 ;; Defined at:
 22950 ;;		line 866 in file "motor.c"
 22951 ;; Parameters:    Size  Location     Type
 22952 ;;		None
 22953 ;; Auto vars:     Size  Location     Type
 22954 ;;		None
 22955 ;; Return value:  Size  Location     Type
 22956 ;;                  1    wreg      void 
 22957 ;; Registers used:
 22958 ;;		wreg, status,2, status,0, cstack
 22959 ;; Tracked objects:
 22960 ;;		On entry : 0/0
 22961 ;;		On exit  : 0/0
 22962 ;;		Unchanged: 0/0
 22963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22968 ;;Total ram usage:        0 bytes
 22969 ;; Hardware stack levels used:    1
 22970 ;; Hardware stack levels required when called:   12
 22971 ;; This function calls:
 22972 ;;		_motor_set_manual_speed
 22973 ;; This function is called by:
 22974 ;;		__encoder_statemachine_manual
 22975 ;; This function uses a non-reentrant model
 22976 ;;
 22977                           
 22978                           	psect	text92
 22979  016208                     __ptext92:
 22980                           	opt stack 0
 22981  016208                     _motor_increase_manual_speed:
 22982                           	opt stack 16
 22983                           
 22984                           ;motor.c: 868: if(os.manual_speed<0xFFFF)
 22985                           
 22986                           ;incstack = 0
 22987  016208  0101               	movlb	1	; () banked
 22988  01620A  2988               	incf	(_os+36)& (0+255),w,b	;volatile
 22989  01620C  E103               	bnz	u15950
 22990  01620E  2989               	incf	(_os+37)& (0+255),w,b	;volatile
 22991  016210  B4D8               	btfsc	status,2,c
 22992  016212  0012               	return	
 22993  016214                     u15950:
 22994                           
 22995                           ; BSR set to: 1
 22996                           ;motor.c: 869: {;motor.c: 870: motor_set_manual_speed(os.manual_speed+1);
 22997  016214  0E01               	movlw	1
 22998  016216  2588               	addwf	(_os+36)& (0+255),w,b	;volatile
 22999  016218  0100               	movlb	0	; () banked
 23000  01621A  6F62               	movwf	motor_set_manual_speed@new_speed& (0+255),b
 23001  01621C  0E00               	movlw	0
 23002  01621E  0101               	movlb	1	; () banked
 23003  016220  2189               	addwfc	(_os+37)& (0+255),w,b	;volatile
 23004  016222  0100               	movlb	0	; () banked
 23005  016224  6F63               	movwf	(motor_set_manual_speed@new_speed+1)& (0+255),b
 23006  016226  EC7C  F0A4         	call	_motor_set_manual_speed	;wreg free
 23007  01622A  0012               	return	
 23008  01622C                     __end_of_motor_increase_manual_speed:
 23009                           	opt stack 0
 23010                           tblptru	equ	0xFF8
 23011                           tblptrh	equ	0xFF7
 23012                           tblptrl	equ	0xFF6
 23013                           tablat	equ	0xFF5
 23014                           prodh	equ	0xFF4
 23015                           prodl	equ	0xFF3
 23016                           intcon	equ	0xFF2
 23017                           postinc0	equ	0xFEE
 23018                           wreg	equ	0xFE8
 23019                           indf1	equ	0xFE7
 23020                           postinc1	equ	0xFE6
 23021                           postdec1	equ	0xFE5
 23022                           plusw1	equ	0xFE3
 23023                           fsr1h	equ	0xFE2
 23024                           fsr1l	equ	0xFE1
 23025                           indf2	equ	0xFDF
 23026                           postinc2	equ	0xFDE
 23027                           postdec2	equ	0xFDD
 23028                           plusw2	equ	0xFDB
 23029                           fsr2h	equ	0xFDA
 23030                           fsr2l	equ	0xFD9
 23031                           status	equ	0xFD8
 23032                           
 23033 ;; *************** function _motor_decrease_manual_speed *****************
 23034 ;; Defined at:
 23035 ;;		line 874 in file "motor.c"
 23036 ;; Parameters:    Size  Location     Type
 23037 ;;		None
 23038 ;; Auto vars:     Size  Location     Type
 23039 ;;		None
 23040 ;; Return value:  Size  Location     Type
 23041 ;;                  1    wreg      void 
 23042 ;; Registers used:
 23043 ;;		wreg, status,2, status,0, cstack
 23044 ;; Tracked objects:
 23045 ;;		On entry : 0/0
 23046 ;;		On exit  : 0/0
 23047 ;;		Unchanged: 0/0
 23048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23053 ;;Total ram usage:        0 bytes
 23054 ;; Hardware stack levels used:    1
 23055 ;; Hardware stack levels required when called:   12
 23056 ;; This function calls:
 23057 ;;		_motor_set_manual_speed
 23058 ;; This function is called by:
 23059 ;;		__encoder_statemachine_manual
 23060 ;; This function uses a non-reentrant model
 23061 ;;
 23062                           
 23063                           	psect	text93
 23064  016294                     __ptext93:
 23065                           	opt stack 0
 23066  016294                     _motor_decrease_manual_speed:
 23067                           	opt stack 16
 23068                           
 23069                           ;motor.c: 876: if(os.manual_speed>0)
 23070                           
 23071                           ;incstack = 0
 23072  016294  0101               	movlb	1	; () banked
 23073  016296  5188               	movf	(_os+36)& (0+255),w,b	;volatile
 23074  016298  1189               	iorwf	(_os+37)& (0+255),w,b	;volatile
 23075  01629A  B4D8               	btfsc	status,2,c
 23076  01629C  0012               	return	
 23077                           
 23078                           ; BSR set to: 1
 23079                           ;motor.c: 877: {;motor.c: 878: motor_set_manual_speed(os.manual_speed-1);
 23080  01629E  0EFF               	movlw	255
 23081  0162A0  2588               	addwf	(_os+36)& (0+255),w,b	;volatile
 23082  0162A2  0100               	movlb	0	; () banked
 23083  0162A4  6F62               	movwf	motor_set_manual_speed@new_speed& (0+255),b
 23084  0162A6  0EFF               	movlw	255
 23085  0162A8  0101               	movlb	1	; () banked
 23086  0162AA  2189               	addwfc	(_os+37)& (0+255),w,b	;volatile
 23087  0162AC  0100               	movlb	0	; () banked
 23088  0162AE  6F63               	movwf	(motor_set_manual_speed@new_speed+1)& (0+255),b
 23089  0162B0  EC7C  F0A4         	call	_motor_set_manual_speed	;wreg free
 23090  0162B4  0012               	return	
 23091  0162B6                     __end_of_motor_decrease_manual_speed:
 23092                           	opt stack 0
 23093                           tblptru	equ	0xFF8
 23094                           tblptrh	equ	0xFF7
 23095                           tblptrl	equ	0xFF6
 23096                           tablat	equ	0xFF5
 23097                           prodh	equ	0xFF4
 23098                           prodl	equ	0xFF3
 23099                           intcon	equ	0xFF2
 23100                           postinc0	equ	0xFEE
 23101                           wreg	equ	0xFE8
 23102                           indf1	equ	0xFE7
 23103                           postinc1	equ	0xFE6
 23104                           postdec1	equ	0xFE5
 23105                           plusw1	equ	0xFE3
 23106                           fsr1h	equ	0xFE2
 23107                           fsr1l	equ	0xFE1
 23108                           indf2	equ	0xFDF
 23109                           postinc2	equ	0xFDE
 23110                           postdec2	equ	0xFDD
 23111                           plusw2	equ	0xFDB
 23112                           fsr2h	equ	0xFDA
 23113                           fsr2l	equ	0xFD9
 23114                           status	equ	0xFD8
 23115                           
 23116 ;; *************** function __encoder_statemachine_main *****************
 23117 ;; Defined at:
 23118 ;;		line 217 in file "encoder.c"
 23119 ;; Parameters:    Size  Location     Type
 23120 ;;  structure       1    wreg     enum E6840
 23121 ;; Auto vars:     Size  Location     Type
 23122 ;;  structure       1    4[BANK0 ] enum E6840
 23123 ;; Return value:  Size  Location     Type
 23124 ;;                  1    wreg      void 
 23125 ;; Registers used:
 23126 ;;		wreg, status,2, status,0
 23127 ;; Tracked objects:
 23128 ;;		On entry : 0/0
 23129 ;;		On exit  : 0/0
 23130 ;;		Unchanged: 0/0
 23131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23133 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23134 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23135 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23136 ;;Total ram usage:        5 bytes
 23137 ;; Hardware stack levels used:    1
 23138 ;; Hardware stack levels required when called:   10
 23139 ;; This function calls:
 23140 ;;		Nothing
 23141 ;; This function is called by:
 23142 ;;		_encoder_statemachine
 23143 ;; This function uses a non-reentrant model
 23144 ;;
 23145                           
 23146                           	psect	text94
 23147  00C29E                     __ptext94:
 23148                           	opt stack 0
 23149  00C29E                     __encoder_statemachine_main:
 23150                           	opt stack 19
 23151                           
 23152                           ;incstack = 0
 23153                           ;__encoder_statemachine_main@structure stored from wreg
 23154  00C29E  0100               	movlb	0	; () banked
 23155  00C2A0  6F64               	movwf	__encoder_statemachine_main@structure& (0+255),b
 23156                           
 23157                           ;encoder.c: 219: switch(structure)
 23158  00C2A2  D1D0               	goto	l2796
 23159  00C2A4                     
 23160                           ;encoder.c: 225: if(os.button1==1 || os.button2==1)
 23161  00C2A4  0101               	movlb	1	; () banked
 23162  00C2A6  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 23163  00C2A8  B4D8               	btfsc	status,2,c
 23164  00C2AA  D003               	goto	u17480
 23165                           
 23166                           ; BSR set to: 1
 23167  00C2AC  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 23168  00C2AE  A4D8               	btfss	status,2,c
 23169  00C2B0  D002               	goto	l2800
 23170  00C2B2                     u17480:
 23171                           
 23172                           ; BSR set to: 1
 23173                           ;encoder.c: 226: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 23174                           
 23175                           ; BSR set to: 1
 23176  00C2B2  0E11               	movlw	17
 23177  00C2B4  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23178  00C2B6                     l2800:
 23179                           
 23180                           ; BSR set to: 1
 23181                           ;encoder.c: 227: if(os.encoder1Count+os.encoder2Count>0)
 23182                           
 23183                           ; BSR set to: 1
 23184  00C2B6  C169  F060         	movff	_os+5,??__encoder_statemachine_main	;volatile
 23185  00C2BA  0100               	movlb	0	; () banked
 23186  00C2BC  6B61               	clrf	(??__encoder_statemachine_main+1)& (0+255),b
 23187  00C2BE  BF60               	btfsc	??__encoder_statemachine_main& (0+255),7,b
 23188  00C2C0  0761               	decf	(??__encoder_statemachine_main+1)& (0+255),f,b
 23189  00C2C2  C167  F062         	movff	_os+3,??__encoder_statemachine_main+2	;volatile
 23190  00C2C6  6B63               	clrf	(??__encoder_statemachine_main+3)& (0+255),b
 23191  00C2C8  BF62               	btfsc	(??__encoder_statemachine_main+2)& (0+255),7,b
 23192  00C2CA  0763               	decf	(??__encoder_statemachine_main+3)& (0+255),f,b
 23193  00C2CC  5160               	movf	??__encoder_statemachine_main& (0+255),w,b
 23194  00C2CE  2762               	addwf	(??__encoder_statemachine_main+2)& (0+255),f,b
 23195  00C2D0  5161               	movf	(??__encoder_statemachine_main+1)& (0+255),w,b
 23196  00C2D2  2363               	addwfc	(??__encoder_statemachine_main+3)& (0+255),f,b
 23197  00C2D4  BF63               	btfsc	(??__encoder_statemachine_main+3)& (0+255),7,b
 23198  00C2D6  D008               	goto	l2803
 23199  00C2D8  5163               	movf	(??__encoder_statemachine_main+3)& (0+255),w,b
 23200  00C2DA  E103               	bnz	u17490
 23201  00C2DC  0562               	decf	(??__encoder_statemachine_main+2)& (0+255),w,b
 23202  00C2DE  A0D8               	btfss	status,0,c
 23203  00C2E0  D003               	goto	l2803
 23204  00C2E2                     u17490:
 23205                           
 23206                           ; BSR set to: 0
 23207                           ;encoder.c: 228: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 23208  00C2E2  0E02               	movlw	2
 23209  00C2E4  0101               	movlb	1	; () banked
 23210  00C2E6  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23211  00C2E8                     l2803:
 23212                           
 23213                           ;encoder.c: 229: if(os.encoder1Count+os.encoder2Count<0)
 23214                           
 23215                           ; BSR set to: 1
 23216  00C2E8  C169  F060         	movff	_os+5,??__encoder_statemachine_main	;volatile
 23217  00C2EC  0100               	movlb	0	; () banked
 23218  00C2EE  6B61               	clrf	(??__encoder_statemachine_main+1)& (0+255),b
 23219  00C2F0  BF60               	btfsc	??__encoder_statemachine_main& (0+255),7,b
 23220  00C2F2  0761               	decf	(??__encoder_statemachine_main+1)& (0+255),f,b
 23221  00C2F4  C167  F062         	movff	_os+3,??__encoder_statemachine_main+2	;volatile
 23222  00C2F8  6B63               	clrf	(??__encoder_statemachine_main+3)& (0+255),b
 23223  00C2FA  BF62               	btfsc	(??__encoder_statemachine_main+2)& (0+255),7,b
 23224  00C2FC  0763               	decf	(??__encoder_statemachine_main+3)& (0+255),f,b
 23225  00C2FE  5160               	movf	??__encoder_statemachine_main& (0+255),w,b
 23226  00C300  2762               	addwf	(??__encoder_statemachine_main+2)& (0+255),f,b
 23227  00C302  5161               	movf	(??__encoder_statemachine_main+1)& (0+255),w,b
 23228  00C304  2363               	addwfc	(??__encoder_statemachine_main+3)& (0+255),f,b
 23229  00C306  AF63               	btfss	(??__encoder_statemachine_main+3)& (0+255),7,b
 23230  00C308  0012               	return	
 23231                           
 23232                           ; BSR set to: 0
 23233                           ;encoder.c: 230: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 23234  00C30A  0E05               	movlw	5
 23235  00C30C  0101               	movlb	1	; () banked
 23236  00C30E  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23237                           
 23238                           ; BSR set to: 1
 23239                           ;encoder.c: 231: break;
 23240  00C310  0012               	return	
 23241  00C312                     
 23242                           ; BSR set to: 1
 23243                           ;encoder.c: 233: if(os.button1==1 || os.button2==1)
 23244                           
 23245                           ; BSR set to: 1
 23246  00C312  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 23247  00C314  B4D8               	btfsc	status,2,c
 23248  00C316  D003               	goto	u17520
 23249                           
 23250                           ; BSR set to: 1
 23251  00C318  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 23252  00C31A  A4D8               	btfss	status,2,c
 23253  00C31C  D002               	goto	l2807
 23254  00C31E                     u17520:
 23255                           
 23256                           ; BSR set to: 1
 23257                           ;encoder.c: 234: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 23258                           
 23259                           ; BSR set to: 1
 23260  00C31E  0E31               	movlw	49
 23261  00C320  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23262  00C322                     l2807:
 23263                           
 23264                           ; BSR set to: 1
 23265                           ;encoder.c: 235: if(os.encoder1Count+os.encoder2Count>0)
 23266                           
 23267                           ; BSR set to: 1
 23268  00C322  C169  F060         	movff	_os+5,??__encoder_statemachine_main	;volatile
 23269  00C326  0100               	movlb	0	; () banked
 23270  00C328  6B61               	clrf	(??__encoder_statemachine_main+1)& (0+255),b
 23271  00C32A  BF60               	btfsc	??__encoder_statemachine_main& (0+255),7,b
 23272  00C32C  0761               	decf	(??__encoder_statemachine_main+1)& (0+255),f,b
 23273  00C32E  C167  F062         	movff	_os+3,??__encoder_statemachine_main+2	;volatile
 23274  00C332  6B63               	clrf	(??__encoder_statemachine_main+3)& (0+255),b
 23275  00C334  BF62               	btfsc	(??__encoder_statemachine_main+2)& (0+255),7,b
 23276  00C336  0763               	decf	(??__encoder_statemachine_main+3)& (0+255),f,b
 23277  00C338  5160               	movf	??__encoder_statemachine_main& (0+255),w,b
 23278  00C33A  2762               	addwf	(??__encoder_statemachine_main+2)& (0+255),f,b
 23279  00C33C  5161               	movf	(??__encoder_statemachine_main+1)& (0+255),w,b
 23280  00C33E  2363               	addwfc	(??__encoder_statemachine_main+3)& (0+255),f,b
 23281  00C340  BF63               	btfsc	(??__encoder_statemachine_main+3)& (0+255),7,b
 23282  00C342  D008               	goto	l2810
 23283  00C344  5163               	movf	(??__encoder_statemachine_main+3)& (0+255),w,b
 23284  00C346  E103               	bnz	u17530
 23285  00C348  0562               	decf	(??__encoder_statemachine_main+2)& (0+255),w,b
 23286  00C34A  A0D8               	btfss	status,0,c
 23287  00C34C  D003               	goto	l2810
 23288  00C34E                     u17530:
 23289                           
 23290                           ; BSR set to: 0
 23291                           ;encoder.c: 236: os.displayState = DISPLAY_STATE_MAIN_ARC;
 23292  00C34E  0E03               	movlw	3
 23293  00C350  0101               	movlb	1	; () banked
 23294  00C352  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23295  00C354                     l2810:
 23296                           
 23297                           ;encoder.c: 237: if(os.encoder1Count+os.encoder2Count<0)
 23298                           
 23299                           ; BSR set to: 1
 23300  00C354  C169  F060         	movff	_os+5,??__encoder_statemachine_main	;volatile
 23301  00C358  0100               	movlb	0	; () banked
 23302  00C35A  6B61               	clrf	(??__encoder_statemachine_main+1)& (0+255),b
 23303  00C35C  BF60               	btfsc	??__encoder_statemachine_main& (0+255),7,b
 23304  00C35E  0761               	decf	(??__encoder_statemachine_main+1)& (0+255),f,b
 23305  00C360  C167  F062         	movff	_os+3,??__encoder_statemachine_main+2	;volatile
 23306  00C364  6B63               	clrf	(??__encoder_statemachine_main+3)& (0+255),b
 23307  00C366  BF62               	btfsc	(??__encoder_statemachine_main+2)& (0+255),7,b
 23308  00C368  0763               	decf	(??__encoder_statemachine_main+3)& (0+255),f,b
 23309  00C36A  5160               	movf	??__encoder_statemachine_main& (0+255),w,b
 23310  00C36C  2762               	addwf	(??__encoder_statemachine_main+2)& (0+255),f,b
 23311  00C36E  5161               	movf	(??__encoder_statemachine_main+1)& (0+255),w,b
 23312  00C370  2363               	addwfc	(??__encoder_statemachine_main+3)& (0+255),f,b
 23313  00C372  AF63               	btfss	(??__encoder_statemachine_main+3)& (0+255),7,b
 23314  00C374  0012               	return	
 23315                           
 23316                           ; BSR set to: 0
 23317                           ;encoder.c: 238: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 23318  00C376  0E01               	movlw	1
 23319  00C378  0101               	movlb	1	; () banked
 23320  00C37A  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23321                           
 23322                           ; BSR set to: 1
 23323                           ;encoder.c: 239: break;
 23324  00C37C  0012               	return	
 23325  00C37E                     
 23326                           ; BSR set to: 1
 23327                           ;encoder.c: 241: if(os.button1==1 || os.button2==1)
 23328                           
 23329                           ; BSR set to: 1
 23330  00C37E  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 23331  00C380  B4D8               	btfsc	status,2,c
 23332  00C382  D003               	goto	u17560
 23333                           
 23334                           ; BSR set to: 1
 23335  00C384  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 23336  00C386  A4D8               	btfss	status,2,c
 23337  00C388  D002               	goto	l2813
 23338  00C38A                     u17560:
 23339                           
 23340                           ; BSR set to: 1
 23341                           ;encoder.c: 242: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 23342                           
 23343                           ; BSR set to: 1
 23344  00C38A  0E51               	movlw	81
 23345  00C38C  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23346  00C38E                     l2813:
 23347                           
 23348                           ; BSR set to: 1
 23349                           ;encoder.c: 243: if(os.encoder1Count+os.encoder2Count>0)
 23350                           
 23351                           ; BSR set to: 1
 23352  00C38E  C169  F060         	movff	_os+5,??__encoder_statemachine_main	;volatile
 23353  00C392  0100               	movlb	0	; () banked
 23354  00C394  6B61               	clrf	(??__encoder_statemachine_main+1)& (0+255),b
 23355  00C396  BF60               	btfsc	??__encoder_statemachine_main& (0+255),7,b
 23356  00C398  0761               	decf	(??__encoder_statemachine_main+1)& (0+255),f,b
 23357  00C39A  C167  F062         	movff	_os+3,??__encoder_statemachine_main+2	;volatile
 23358  00C39E  6B63               	clrf	(??__encoder_statemachine_main+3)& (0+255),b
 23359  00C3A0  BF62               	btfsc	(??__encoder_statemachine_main+2)& (0+255),7,b
 23360  00C3A2  0763               	decf	(??__encoder_statemachine_main+3)& (0+255),f,b
 23361  00C3A4  5160               	movf	??__encoder_statemachine_main& (0+255),w,b
 23362  00C3A6  2762               	addwf	(??__encoder_statemachine_main+2)& (0+255),f,b
 23363  00C3A8  5161               	movf	(??__encoder_statemachine_main+1)& (0+255),w,b
 23364  00C3AA  2363               	addwfc	(??__encoder_statemachine_main+3)& (0+255),f,b
 23365  00C3AC  BF63               	btfsc	(??__encoder_statemachine_main+3)& (0+255),7,b
 23366  00C3AE  D008               	goto	l2816
 23367  00C3B0  5163               	movf	(??__encoder_statemachine_main+3)& (0+255),w,b
 23368  00C3B2  E103               	bnz	u17570
 23369  00C3B4  0562               	decf	(??__encoder_statemachine_main+2)& (0+255),w,b
 23370  00C3B6  A0D8               	btfss	status,0,c
 23371  00C3B8  D003               	goto	l2816
 23372  00C3BA                     u17570:
 23373                           
 23374                           ; BSR set to: 0
 23375                           ;encoder.c: 244: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 23376  00C3BA  0E04               	movlw	4
 23377  00C3BC  0101               	movlb	1	; () banked
 23378  00C3BE  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23379  00C3C0                     l2816:
 23380                           
 23381                           ;encoder.c: 245: if(os.encoder1Count+os.encoder2Count<0)
 23382                           
 23383                           ; BSR set to: 1
 23384  00C3C0  C169  F060         	movff	_os+5,??__encoder_statemachine_main	;volatile
 23385  00C3C4  0100               	movlb	0	; () banked
 23386  00C3C6  6B61               	clrf	(??__encoder_statemachine_main+1)& (0+255),b
 23387  00C3C8  BF60               	btfsc	??__encoder_statemachine_main& (0+255),7,b
 23388  00C3CA  0761               	decf	(??__encoder_statemachine_main+1)& (0+255),f,b
 23389  00C3CC  C167  F062         	movff	_os+3,??__encoder_statemachine_main+2	;volatile
 23390  00C3D0  6B63               	clrf	(??__encoder_statemachine_main+3)& (0+255),b
 23391  00C3D2  BF62               	btfsc	(??__encoder_statemachine_main+2)& (0+255),7,b
 23392  00C3D4  0763               	decf	(??__encoder_statemachine_main+3)& (0+255),f,b
 23393  00C3D6  5160               	movf	??__encoder_statemachine_main& (0+255),w,b
 23394  00C3D8  2762               	addwf	(??__encoder_statemachine_main+2)& (0+255),f,b
 23395  00C3DA  5161               	movf	(??__encoder_statemachine_main+1)& (0+255),w,b
 23396  00C3DC  2363               	addwfc	(??__encoder_statemachine_main+3)& (0+255),f,b
 23397  00C3DE  AF63               	btfss	(??__encoder_statemachine_main+3)& (0+255),7,b
 23398  00C3E0  0012               	return	
 23399                           
 23400                           ; BSR set to: 0
 23401                           ;encoder.c: 246: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 23402  00C3E2  0E02               	movlw	2
 23403  00C3E4  0101               	movlb	1	; () banked
 23404  00C3E6  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23405                           
 23406                           ; BSR set to: 1
 23407                           ;encoder.c: 247: break;
 23408  00C3E8  0012               	return	
 23409  00C3EA                     
 23410                           ; BSR set to: 1
 23411                           ;encoder.c: 249: if(os.button1==1 || os.button2==1)
 23412                           
 23413                           ; BSR set to: 1
 23414  00C3EA  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 23415  00C3EC  B4D8               	btfsc	status,2,c
 23416  00C3EE  D003               	goto	u17600
 23417                           
 23418                           ; BSR set to: 1
 23419  00C3F0  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 23420  00C3F2  A4D8               	btfss	status,2,c
 23421  00C3F4  D002               	goto	l2819
 23422  00C3F6                     u17600:
 23423                           
 23424                           ; BSR set to: 1
 23425                           ;encoder.c: 250: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 23426                           
 23427                           ; BSR set to: 1
 23428  00C3F6  0E82               	movlw	130
 23429  00C3F8  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23430  00C3FA                     l2819:
 23431                           
 23432                           ; BSR set to: 1
 23433                           ;encoder.c: 251: if(os.encoder1Count+os.encoder2Count>0)
 23434                           
 23435                           ; BSR set to: 1
 23436  00C3FA  C169  F060         	movff	_os+5,??__encoder_statemachine_main	;volatile
 23437  00C3FE  0100               	movlb	0	; () banked
 23438  00C400  6B61               	clrf	(??__encoder_statemachine_main+1)& (0+255),b
 23439  00C402  BF60               	btfsc	??__encoder_statemachine_main& (0+255),7,b
 23440  00C404  0761               	decf	(??__encoder_statemachine_main+1)& (0+255),f,b
 23441  00C406  C167  F062         	movff	_os+3,??__encoder_statemachine_main+2	;volatile
 23442  00C40A  6B63               	clrf	(??__encoder_statemachine_main+3)& (0+255),b
 23443  00C40C  BF62               	btfsc	(??__encoder_statemachine_main+2)& (0+255),7,b
 23444  00C40E  0763               	decf	(??__encoder_statemachine_main+3)& (0+255),f,b
 23445  00C410  5160               	movf	??__encoder_statemachine_main& (0+255),w,b
 23446  00C412  2762               	addwf	(??__encoder_statemachine_main+2)& (0+255),f,b
 23447  00C414  5161               	movf	(??__encoder_statemachine_main+1)& (0+255),w,b
 23448  00C416  2363               	addwfc	(??__encoder_statemachine_main+3)& (0+255),f,b
 23449  00C418  BF63               	btfsc	(??__encoder_statemachine_main+3)& (0+255),7,b
 23450  00C41A  D008               	goto	l2822
 23451  00C41C  5163               	movf	(??__encoder_statemachine_main+3)& (0+255),w,b
 23452  00C41E  E103               	bnz	u17610
 23453  00C420  0562               	decf	(??__encoder_statemachine_main+2)& (0+255),w,b
 23454  00C422  A0D8               	btfss	status,0,c
 23455  00C424  D003               	goto	l2822
 23456  00C426                     u17610:
 23457                           
 23458                           ; BSR set to: 0
 23459                           ;encoder.c: 252: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 23460  00C426  0E05               	movlw	5
 23461  00C428  0101               	movlb	1	; () banked
 23462  00C42A  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23463  00C42C                     l2822:
 23464                           
 23465                           ;encoder.c: 253: if(os.encoder1Count+os.encoder2Count<0)
 23466                           
 23467                           ; BSR set to: 1
 23468  00C42C  C169  F060         	movff	_os+5,??__encoder_statemachine_main	;volatile
 23469  00C430  0100               	movlb	0	; () banked
 23470  00C432  6B61               	clrf	(??__encoder_statemachine_main+1)& (0+255),b
 23471  00C434  BF60               	btfsc	??__encoder_statemachine_main& (0+255),7,b
 23472  00C436  0761               	decf	(??__encoder_statemachine_main+1)& (0+255),f,b
 23473  00C438  C167  F062         	movff	_os+3,??__encoder_statemachine_main+2	;volatile
 23474  00C43C  6B63               	clrf	(??__encoder_statemachine_main+3)& (0+255),b
 23475  00C43E  BF62               	btfsc	(??__encoder_statemachine_main+2)& (0+255),7,b
 23476  00C440  0763               	decf	(??__encoder_statemachine_main+3)& (0+255),f,b
 23477  00C442  5160               	movf	??__encoder_statemachine_main& (0+255),w,b
 23478  00C444  2762               	addwf	(??__encoder_statemachine_main+2)& (0+255),f,b
 23479  00C446  5161               	movf	(??__encoder_statemachine_main+1)& (0+255),w,b
 23480  00C448  2363               	addwfc	(??__encoder_statemachine_main+3)& (0+255),f,b
 23481  00C44A  AF63               	btfss	(??__encoder_statemachine_main+3)& (0+255),7,b
 23482  00C44C  0012               	return	
 23483                           
 23484                           ; BSR set to: 0
 23485                           ;encoder.c: 254: os.displayState = DISPLAY_STATE_MAIN_ARC;
 23486  00C44E  0E03               	movlw	3
 23487  00C450  0101               	movlb	1	; () banked
 23488  00C452  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23489                           
 23490                           ; BSR set to: 1
 23491                           ;encoder.c: 255: break;
 23492  00C454  0012               	return	
 23493  00C456                     
 23494                           ; BSR set to: 1
 23495                           ;encoder.c: 257: if(os.button1==1 || os.button2==1)
 23496                           
 23497                           ; BSR set to: 1
 23498  00C456  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 23499  00C458  B4D8               	btfsc	status,2,c
 23500  00C45A  D003               	goto	u17640
 23501                           
 23502                           ; BSR set to: 1
 23503  00C45C  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 23504  00C45E  A4D8               	btfss	status,2,c
 23505  00C460  D002               	goto	l2825
 23506  00C462                     u17640:
 23507                           
 23508                           ; BSR set to: 1
 23509                           ;encoder.c: 258: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
 23510                           
 23511                           ; BSR set to: 1
 23512  00C462  0E71               	movlw	113
 23513  00C464  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23514  00C466                     l2825:
 23515                           
 23516                           ; BSR set to: 1
 23517                           ;encoder.c: 259: if(os.encoder1Count+os.encoder2Count>0)
 23518                           
 23519                           ; BSR set to: 1
 23520  00C466  C169  F060         	movff	_os+5,??__encoder_statemachine_main	;volatile
 23521  00C46A  0100               	movlb	0	; () banked
 23522  00C46C  6B61               	clrf	(??__encoder_statemachine_main+1)& (0+255),b
 23523  00C46E  BF60               	btfsc	??__encoder_statemachine_main& (0+255),7,b
 23524  00C470  0761               	decf	(??__encoder_statemachine_main+1)& (0+255),f,b
 23525  00C472  C167  F062         	movff	_os+3,??__encoder_statemachine_main+2	;volatile
 23526  00C476  6B63               	clrf	(??__encoder_statemachine_main+3)& (0+255),b
 23527  00C478  BF62               	btfsc	(??__encoder_statemachine_main+2)& (0+255),7,b
 23528  00C47A  0763               	decf	(??__encoder_statemachine_main+3)& (0+255),f,b
 23529  00C47C  5160               	movf	??__encoder_statemachine_main& (0+255),w,b
 23530  00C47E  2762               	addwf	(??__encoder_statemachine_main+2)& (0+255),f,b
 23531  00C480  5161               	movf	(??__encoder_statemachine_main+1)& (0+255),w,b
 23532  00C482  2363               	addwfc	(??__encoder_statemachine_main+3)& (0+255),f,b
 23533  00C484  BF63               	btfsc	(??__encoder_statemachine_main+3)& (0+255),7,b
 23534  00C486  D008               	goto	l2828
 23535  00C488  5163               	movf	(??__encoder_statemachine_main+3)& (0+255),w,b
 23536  00C48A  E103               	bnz	u17650
 23537  00C48C  0562               	decf	(??__encoder_statemachine_main+2)& (0+255),w,b
 23538  00C48E  A0D8               	btfss	status,0,c
 23539  00C490  D003               	goto	l2828
 23540  00C492                     u17650:
 23541                           
 23542                           ; BSR set to: 0
 23543                           ;encoder.c: 260: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 23544  00C492  0E01               	movlw	1
 23545  00C494  0101               	movlb	1	; () banked
 23546  00C496  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23547  00C498                     l2828:
 23548                           
 23549                           ;encoder.c: 261: if(os.encoder1Count+os.encoder2Count<0)
 23550                           
 23551                           ; BSR set to: 1
 23552  00C498  C169  F060         	movff	_os+5,??__encoder_statemachine_main	;volatile
 23553  00C49C  0100               	movlb	0	; () banked
 23554  00C49E  6B61               	clrf	(??__encoder_statemachine_main+1)& (0+255),b
 23555  00C4A0  BF60               	btfsc	??__encoder_statemachine_main& (0+255),7,b
 23556  00C4A2  0761               	decf	(??__encoder_statemachine_main+1)& (0+255),f,b
 23557  00C4A4  C167  F062         	movff	_os+3,??__encoder_statemachine_main+2	;volatile
 23558  00C4A8  6B63               	clrf	(??__encoder_statemachine_main+3)& (0+255),b
 23559  00C4AA  BF62               	btfsc	(??__encoder_statemachine_main+2)& (0+255),7,b
 23560  00C4AC  0763               	decf	(??__encoder_statemachine_main+3)& (0+255),f,b
 23561  00C4AE  5160               	movf	??__encoder_statemachine_main& (0+255),w,b
 23562  00C4B0  2762               	addwf	(??__encoder_statemachine_main+2)& (0+255),f,b
 23563  00C4B2  5161               	movf	(??__encoder_statemachine_main+1)& (0+255),w,b
 23564  00C4B4  2363               	addwfc	(??__encoder_statemachine_main+3)& (0+255),f,b
 23565  00C4B6  AF63               	btfss	(??__encoder_statemachine_main+3)& (0+255),7,b
 23566  00C4B8  0012               	return	
 23567                           
 23568                           ; BSR set to: 0
 23569                           ;encoder.c: 262: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 23570  00C4BA  0E04               	movlw	4
 23571  00C4BC  0101               	movlb	1	; () banked
 23572  00C4BE  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23573                           
 23574                           ; BSR set to: 1
 23575                           ;encoder.c: 267: }
 23576                           
 23577                           ; BSR set to: 1
 23578                           ;encoder.c: 266: break;
 23579                           
 23580                           ;encoder.c: 264: case DISPLAY_STATE_ENCODER_TEST:
 23581                           
 23582                           ; BSR set to: 1
 23583                           ;encoder.c: 263: break;
 23584  00C4C0  0012               	return	
 23585  00C4C2                     
 23586                           ; BSR set to: 1
 23587  00C4C2  0101               	movlb	1	; () banked
 23588  00C4C4  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 23589                           
 23590                           ; Switch size 1, requested type "space"
 23591                           ; Number of cases is 6, Range of values is 1 to 240
 23592                           ; switch strategies available:
 23593                           ; Name         Instructions Cycles
 23594                           ; simple_byte           19    10 (average)
 23595                           ;	Chosen strategy is simple_byte
 23596  00C4C6  0A01               	xorlw	1	; case 1
 23597  00C4C8  B4D8               	btfsc	status,2,c
 23598  00C4CA  D6EC               	goto	l2799
 23599  00C4CC  0A03               	xorlw	3	; case 2
 23600  00C4CE  B4D8               	btfsc	status,2,c
 23601  00C4D0  D720               	goto	l2806
 23602  00C4D2  0A01               	xorlw	1	; case 3
 23603  00C4D4  B4D8               	btfsc	status,2,c
 23604  00C4D6  D753               	goto	l2812
 23605  00C4D8  0A07               	xorlw	7	; case 4
 23606  00C4DA  B4D8               	btfsc	status,2,c
 23607  00C4DC  D786               	goto	l2818
 23608  00C4DE  0A01               	xorlw	1	; case 5
 23609  00C4E0  B4D8               	btfsc	status,2,c
 23610  00C4E2  D7B9               	goto	l2824
 23611  00C4E4  0AF5               	xorlw	245	; case 240
 23612                           
 23613                           ; BSR set to: 1
 23614                           ;encoder.c: 268: break;
 23615  00C4E6  0012               	return	
 23616  00C4E8                     
 23617                           ; BSR set to: 1
 23618                           ;encoder.c: 274: if(os.button1==1 || os.button2==1)
 23619                           
 23620                           ; BSR set to: 1
 23621  00C4E8  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 23622  00C4EA  B4D8               	btfsc	status,2,c
 23623  00C4EC  D003               	goto	u17680
 23624                           
 23625                           ; BSR set to: 1
 23626  00C4EE  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 23627  00C4F0  A4D8               	btfss	status,2,c
 23628  00C4F2  D002               	goto	l2835
 23629  00C4F4                     u17680:
 23630                           
 23631                           ; BSR set to: 1
 23632                           ;encoder.c: 275: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 23633                           
 23634                           ; BSR set to: 1
 23635  00C4F4  0E11               	movlw	17
 23636  00C4F6  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23637  00C4F8                     l2835:
 23638                           
 23639                           ; BSR set to: 1
 23640                           ;encoder.c: 276: if(os.encoder1Count+os.encoder2Count>0)
 23641                           
 23642                           ; BSR set to: 1
 23643  00C4F8  C169  F060         	movff	_os+5,??__encoder_statemachine_main	;volatile
 23644  00C4FC  0100               	movlb	0	; () banked
 23645  00C4FE  6B61               	clrf	(??__encoder_statemachine_main+1)& (0+255),b
 23646  00C500  BF60               	btfsc	??__encoder_statemachine_main& (0+255),7,b
 23647  00C502  0761               	decf	(??__encoder_statemachine_main+1)& (0+255),f,b
 23648  00C504  C167  F062         	movff	_os+3,??__encoder_statemachine_main+2	;volatile
 23649  00C508  6B63               	clrf	(??__encoder_statemachine_main+3)& (0+255),b
 23650  00C50A  BF62               	btfsc	(??__encoder_statemachine_main+2)& (0+255),7,b
 23651  00C50C  0763               	decf	(??__encoder_statemachine_main+3)& (0+255),f,b
 23652  00C50E  5160               	movf	??__encoder_statemachine_main& (0+255),w,b
 23653  00C510  2762               	addwf	(??__encoder_statemachine_main+2)& (0+255),f,b
 23654  00C512  5161               	movf	(??__encoder_statemachine_main+1)& (0+255),w,b
 23655  00C514  2363               	addwfc	(??__encoder_statemachine_main+3)& (0+255),f,b
 23656  00C516  BF63               	btfsc	(??__encoder_statemachine_main+3)& (0+255),7,b
 23657  00C518  D008               	goto	l2838
 23658  00C51A  5163               	movf	(??__encoder_statemachine_main+3)& (0+255),w,b
 23659  00C51C  E103               	bnz	u17690
 23660  00C51E  0562               	decf	(??__encoder_statemachine_main+2)& (0+255),w,b
 23661  00C520  A0D8               	btfss	status,0,c
 23662  00C522  D003               	goto	l2838
 23663  00C524                     u17690:
 23664                           
 23665                           ; BSR set to: 0
 23666                           ;encoder.c: 277: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 23667  00C524  0E04               	movlw	4
 23668  00C526  0101               	movlb	1	; () banked
 23669  00C528  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23670  00C52A                     l2838:
 23671                           
 23672                           ;encoder.c: 278: if(os.encoder1Count+os.encoder2Count<0)
 23673                           
 23674                           ; BSR set to: 1
 23675  00C52A  C169  F060         	movff	_os+5,??__encoder_statemachine_main	;volatile
 23676  00C52E  0100               	movlb	0	; () banked
 23677  00C530  6B61               	clrf	(??__encoder_statemachine_main+1)& (0+255),b
 23678  00C532  BF60               	btfsc	??__encoder_statemachine_main& (0+255),7,b
 23679  00C534  0761               	decf	(??__encoder_statemachine_main+1)& (0+255),f,b
 23680  00C536  C167  F062         	movff	_os+3,??__encoder_statemachine_main+2	;volatile
 23681  00C53A  6B63               	clrf	(??__encoder_statemachine_main+3)& (0+255),b
 23682  00C53C  BF62               	btfsc	(??__encoder_statemachine_main+2)& (0+255),7,b
 23683  00C53E  0763               	decf	(??__encoder_statemachine_main+3)& (0+255),f,b
 23684  00C540  5160               	movf	??__encoder_statemachine_main& (0+255),w,b
 23685  00C542  2762               	addwf	(??__encoder_statemachine_main+2)& (0+255),f,b
 23686  00C544  5161               	movf	(??__encoder_statemachine_main+1)& (0+255),w,b
 23687  00C546  2363               	addwfc	(??__encoder_statemachine_main+3)& (0+255),f,b
 23688  00C548  AF63               	btfss	(??__encoder_statemachine_main+3)& (0+255),7,b
 23689  00C54A  0012               	return	
 23690                           
 23691                           ; BSR set to: 0
 23692                           ;encoder.c: 279: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 23693  00C54C  0E05               	movlw	5
 23694  00C54E  0101               	movlb	1	; () banked
 23695  00C550  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23696                           
 23697                           ; BSR set to: 1
 23698                           ;encoder.c: 280: break;
 23699  00C552  0012               	return	
 23700  00C554                     
 23701                           ; BSR set to: 1
 23702                           ;encoder.c: 282: if(os.button1==1 || os.button2==1)
 23703                           
 23704                           ; BSR set to: 1
 23705  00C554  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 23706  00C556  B4D8               	btfsc	status,2,c
 23707  00C558  D003               	goto	u17720
 23708                           
 23709                           ; BSR set to: 1
 23710  00C55A  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 23711  00C55C  A4D8               	btfss	status,2,c
 23712  00C55E  D002               	goto	l2842
 23713  00C560                     u17720:
 23714                           
 23715                           ; BSR set to: 1
 23716                           ;encoder.c: 283: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 23717                           
 23718                           ; BSR set to: 1
 23719  00C560  0E82               	movlw	130
 23720  00C562  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23721  00C564                     l2842:
 23722                           
 23723                           ; BSR set to: 1
 23724                           ;encoder.c: 284: if(os.encoder1Count+os.encoder2Count>0)
 23725                           
 23726                           ; BSR set to: 1
 23727  00C564  C169  F060         	movff	_os+5,??__encoder_statemachine_main	;volatile
 23728  00C568  0100               	movlb	0	; () banked
 23729  00C56A  6B61               	clrf	(??__encoder_statemachine_main+1)& (0+255),b
 23730  00C56C  BF60               	btfsc	??__encoder_statemachine_main& (0+255),7,b
 23731  00C56E  0761               	decf	(??__encoder_statemachine_main+1)& (0+255),f,b
 23732  00C570  C167  F062         	movff	_os+3,??__encoder_statemachine_main+2	;volatile
 23733  00C574  6B63               	clrf	(??__encoder_statemachine_main+3)& (0+255),b
 23734  00C576  BF62               	btfsc	(??__encoder_statemachine_main+2)& (0+255),7,b
 23735  00C578  0763               	decf	(??__encoder_statemachine_main+3)& (0+255),f,b
 23736  00C57A  5160               	movf	??__encoder_statemachine_main& (0+255),w,b
 23737  00C57C  2762               	addwf	(??__encoder_statemachine_main+2)& (0+255),f,b
 23738  00C57E  5161               	movf	(??__encoder_statemachine_main+1)& (0+255),w,b
 23739  00C580  2363               	addwfc	(??__encoder_statemachine_main+3)& (0+255),f,b
 23740  00C582  BF63               	btfsc	(??__encoder_statemachine_main+3)& (0+255),7,b
 23741  00C584  D008               	goto	l2845
 23742  00C586  5163               	movf	(??__encoder_statemachine_main+3)& (0+255),w,b
 23743  00C588  E103               	bnz	u17730
 23744  00C58A  0562               	decf	(??__encoder_statemachine_main+2)& (0+255),w,b
 23745  00C58C  A0D8               	btfss	status,0,c
 23746  00C58E  D003               	goto	l2845
 23747  00C590                     u17730:
 23748                           
 23749                           ; BSR set to: 0
 23750                           ;encoder.c: 285: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 23751  00C590  0E05               	movlw	5
 23752  00C592  0101               	movlb	1	; () banked
 23753  00C594  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23754  00C596                     l2845:
 23755                           
 23756                           ;encoder.c: 286: if(os.encoder1Count+os.encoder2Count<0)
 23757                           
 23758                           ; BSR set to: 1
 23759  00C596  C169  F060         	movff	_os+5,??__encoder_statemachine_main	;volatile
 23760  00C59A  0100               	movlb	0	; () banked
 23761  00C59C  6B61               	clrf	(??__encoder_statemachine_main+1)& (0+255),b
 23762  00C59E  BF60               	btfsc	??__encoder_statemachine_main& (0+255),7,b
 23763  00C5A0  0761               	decf	(??__encoder_statemachine_main+1)& (0+255),f,b
 23764  00C5A2  C167  F062         	movff	_os+3,??__encoder_statemachine_main+2	;volatile
 23765  00C5A6  6B63               	clrf	(??__encoder_statemachine_main+3)& (0+255),b
 23766  00C5A8  BF62               	btfsc	(??__encoder_statemachine_main+2)& (0+255),7,b
 23767  00C5AA  0763               	decf	(??__encoder_statemachine_main+3)& (0+255),f,b
 23768  00C5AC  5160               	movf	??__encoder_statemachine_main& (0+255),w,b
 23769  00C5AE  2762               	addwf	(??__encoder_statemachine_main+2)& (0+255),f,b
 23770  00C5B0  5161               	movf	(??__encoder_statemachine_main+1)& (0+255),w,b
 23771  00C5B2  2363               	addwfc	(??__encoder_statemachine_main+3)& (0+255),f,b
 23772  00C5B4  AF63               	btfss	(??__encoder_statemachine_main+3)& (0+255),7,b
 23773  00C5B6  0012               	return	
 23774                           
 23775                           ; BSR set to: 0
 23776                           ;encoder.c: 287: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 23777  00C5B8  0E01               	movlw	1
 23778  00C5BA  0101               	movlb	1	; () banked
 23779  00C5BC  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23780                           
 23781                           ; BSR set to: 1
 23782                           ;encoder.c: 288: break;
 23783  00C5BE  0012               	return	
 23784  00C5C0                     
 23785                           ; BSR set to: 1
 23786                           ;encoder.c: 290: if(os.button1==1 || os.button2==1)
 23787                           
 23788                           ; BSR set to: 1
 23789  00C5C0  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 23790  00C5C2  B4D8               	btfsc	status,2,c
 23791  00C5C4  D003               	goto	u17760
 23792                           
 23793                           ; BSR set to: 1
 23794  00C5C6  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 23795  00C5C8  A4D8               	btfss	status,2,c
 23796  00C5CA  D002               	goto	l2848
 23797  00C5CC                     u17760:
 23798                           
 23799                           ; BSR set to: 1
 23800                           ;encoder.c: 291: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
 23801                           
 23802                           ; BSR set to: 1
 23803  00C5CC  0E71               	movlw	113
 23804  00C5CE  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23805  00C5D0                     l2848:
 23806                           
 23807                           ; BSR set to: 1
 23808                           ;encoder.c: 292: if(os.encoder1Count+os.encoder2Count>0)
 23809                           
 23810                           ; BSR set to: 1
 23811  00C5D0  C169  F060         	movff	_os+5,??__encoder_statemachine_main	;volatile
 23812  00C5D4  0100               	movlb	0	; () banked
 23813  00C5D6  6B61               	clrf	(??__encoder_statemachine_main+1)& (0+255),b
 23814  00C5D8  BF60               	btfsc	??__encoder_statemachine_main& (0+255),7,b
 23815  00C5DA  0761               	decf	(??__encoder_statemachine_main+1)& (0+255),f,b
 23816  00C5DC  C167  F062         	movff	_os+3,??__encoder_statemachine_main+2	;volatile
 23817  00C5E0  6B63               	clrf	(??__encoder_statemachine_main+3)& (0+255),b
 23818  00C5E2  BF62               	btfsc	(??__encoder_statemachine_main+2)& (0+255),7,b
 23819  00C5E4  0763               	decf	(??__encoder_statemachine_main+3)& (0+255),f,b
 23820  00C5E6  5160               	movf	??__encoder_statemachine_main& (0+255),w,b
 23821  00C5E8  2762               	addwf	(??__encoder_statemachine_main+2)& (0+255),f,b
 23822  00C5EA  5161               	movf	(??__encoder_statemachine_main+1)& (0+255),w,b
 23823  00C5EC  2363               	addwfc	(??__encoder_statemachine_main+3)& (0+255),f,b
 23824  00C5EE  BF63               	btfsc	(??__encoder_statemachine_main+3)& (0+255),7,b
 23825  00C5F0  D008               	goto	l2851
 23826  00C5F2  5163               	movf	(??__encoder_statemachine_main+3)& (0+255),w,b
 23827  00C5F4  E103               	bnz	u17770
 23828  00C5F6  0562               	decf	(??__encoder_statemachine_main+2)& (0+255),w,b
 23829  00C5F8  A0D8               	btfss	status,0,c
 23830  00C5FA  D003               	goto	l2851
 23831  00C5FC                     u17770:
 23832                           
 23833                           ; BSR set to: 0
 23834                           ;encoder.c: 293: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 23835  00C5FC  0E01               	movlw	1
 23836  00C5FE  0101               	movlb	1	; () banked
 23837  00C600  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23838  00C602                     l2851:
 23839                           
 23840                           ;encoder.c: 294: if(os.encoder1Count+os.encoder2Count<0)
 23841                           
 23842                           ; BSR set to: 1
 23843  00C602  C169  F060         	movff	_os+5,??__encoder_statemachine_main	;volatile
 23844  00C606  0100               	movlb	0	; () banked
 23845  00C608  6B61               	clrf	(??__encoder_statemachine_main+1)& (0+255),b
 23846  00C60A  BF60               	btfsc	??__encoder_statemachine_main& (0+255),7,b
 23847  00C60C  0761               	decf	(??__encoder_statemachine_main+1)& (0+255),f,b
 23848  00C60E  C167  F062         	movff	_os+3,??__encoder_statemachine_main+2	;volatile
 23849  00C612  6B63               	clrf	(??__encoder_statemachine_main+3)& (0+255),b
 23850  00C614  BF62               	btfsc	(??__encoder_statemachine_main+2)& (0+255),7,b
 23851  00C616  0763               	decf	(??__encoder_statemachine_main+3)& (0+255),f,b
 23852  00C618  5160               	movf	??__encoder_statemachine_main& (0+255),w,b
 23853  00C61A  2762               	addwf	(??__encoder_statemachine_main+2)& (0+255),f,b
 23854  00C61C  5161               	movf	(??__encoder_statemachine_main+1)& (0+255),w,b
 23855  00C61E  2363               	addwfc	(??__encoder_statemachine_main+3)& (0+255),f,b
 23856  00C620  AF63               	btfss	(??__encoder_statemachine_main+3)& (0+255),7,b
 23857  00C622  0012               	return	
 23858                           
 23859                           ; BSR set to: 0
 23860                           ;encoder.c: 295: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 23861  00C624  0E04               	movlw	4
 23862  00C626  0101               	movlb	1	; () banked
 23863  00C628  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23864                           
 23865                           ; BSR set to: 1
 23866                           ;encoder.c: 297: }
 23867                           
 23868                           ; BSR set to: 1
 23869                           ;encoder.c: 296: break;
 23870  00C62A  0012               	return	
 23871  00C62C                     
 23872                           ; BSR set to: 1
 23873  00C62C  0101               	movlb	1	; () banked
 23874  00C62E  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 23875                           
 23876                           ; Switch size 1, requested type "space"
 23877                           ; Number of cases is 3, Range of values is 1 to 5
 23878                           ; switch strategies available:
 23879                           ; Name         Instructions Cycles
 23880                           ; simple_byte           10     6 (average)
 23881                           ;	Chosen strategy is simple_byte
 23882  00C630  0A01               	xorlw	1	; case 1
 23883  00C632  B4D8               	btfsc	status,2,c
 23884  00C634  D759               	goto	l2834
 23885  00C636  0A05               	xorlw	5	; case 4
 23886  00C638  B4D8               	btfsc	status,2,c
 23887  00C63A  D78C               	goto	l2841
 23888  00C63C  0A01               	xorlw	1	; case 5
 23889  00C63E  A4D8               	btfss	status,2,c
 23890                           
 23891                           ; BSR set to: 1
 23892                           ;encoder.c: 299: }
 23893                           
 23894                           ; BSR set to: 1
 23895                           ;encoder.c: 298: break;
 23896  00C640  0012               	return	
 23897  00C642  D7BE               	goto	l2847
 23898  00C644                     l2796:
 23899                           
 23900                           ; BSR set to: 1
 23901  00C644  0100               	movlb	0	; () banked
 23902  00C646  5164               	movf	__encoder_statemachine_main@structure& (0+255),w,b
 23903                           
 23904                           ; Switch size 1, requested type "space"
 23905                           ; Number of cases is 2, Range of values is 0 to 1
 23906                           ; switch strategies available:
 23907                           ; Name         Instructions Cycles
 23908                           ; simple_byte            7     4 (average)
 23909                           ;	Chosen strategy is simple_byte
 23910  00C648  0A00               	xorlw	0	; case 0
 23911  00C64A  B4D8               	btfsc	status,2,c
 23912  00C64C  D73A               	goto	l2798
 23913  00C64E  0A01               	xorlw	1	; case 1
 23914  00C650  A4D8               	btfss	status,2,c
 23915  00C652  0012               	return	
 23916  00C654  D7EB               	goto	l2833
 23917  00C656                     __end_of__encoder_statemachine_main:
 23918                           	opt stack 0
 23919                           tblptru	equ	0xFF8
 23920                           tblptrh	equ	0xFF7
 23921                           tblptrl	equ	0xFF6
 23922                           tablat	equ	0xFF5
 23923                           prodh	equ	0xFF4
 23924                           prodl	equ	0xFF3
 23925                           intcon	equ	0xFF2
 23926                           postinc0	equ	0xFEE
 23927                           wreg	equ	0xFE8
 23928                           indf1	equ	0xFE7
 23929                           postinc1	equ	0xFE6
 23930                           postdec1	equ	0xFE5
 23931                           plusw1	equ	0xFE3
 23932                           fsr1h	equ	0xFE2
 23933                           fsr1l	equ	0xFE1
 23934                           indf2	equ	0xFDF
 23935                           postinc2	equ	0xFDE
 23936                           postdec2	equ	0xFDD
 23937                           plusw2	equ	0xFDB
 23938                           fsr2h	equ	0xFDA
 23939                           fsr2l	equ	0xFD9
 23940                           status	equ	0xFD8
 23941                           
 23942 ;; *************** function __encoder_statemachine_divide *****************
 23943 ;; Defined at:
 23944 ;;		line 376 in file "encoder.c"
 23945 ;; Parameters:    Size  Location     Type
 23946 ;;		None
 23947 ;; Auto vars:     Size  Location     Type
 23948 ;;		None
 23949 ;; Return value:  Size  Location     Type
 23950 ;;                  1    wreg      void 
 23951 ;; Registers used:
 23952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23953 ;; Tracked objects:
 23954 ;;		On entry : 0/0
 23955 ;;		On exit  : 0/0
 23956 ;;		Unchanged: 0/0
 23957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23960 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23961 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23962 ;;Total ram usage:        3 bytes
 23963 ;; Hardware stack levels used:    1
 23964 ;; Hardware stack levels required when called:   15
 23965 ;; This function calls:
 23966 ;;		__divide_jump_size_decrement
 23967 ;;		__divide_jump_size_increment
 23968 ;;		__encoder_next_divide_step_size
 23969 ;;		_motor_divide_jump
 23970 ;;		_motor_divide_jump_to_nearest
 23971 ;; This function is called by:
 23972 ;;		_encoder_statemachine
 23973 ;; This function uses a non-reentrant model
 23974 ;;
 23975                           
 23976                           	psect	text95
 23977  0110E6                     __ptext95:
 23978                           	opt stack 0
 23979  0110E6                     __encoder_statemachine_divide:
 23980                           	opt stack 14
 23981                           
 23982                           ;encoder.c: 378: switch(os.displayState & 0xF0)
 23983                           
 23984                           ;incstack = 0
 23985  0110E6  D075               	goto	l2892
 23986  0110E8                     
 23987                           ;encoder.c: 384: if(os.button1==1)
 23988  0110E8  0101               	movlb	1	; () banked
 23989  0110EA  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 23990  0110EC  A4D8               	btfss	status,2,c
 23991  0110EE  D005               	goto	l2896
 23992                           
 23993                           ; BSR set to: 1
 23994                           ;encoder.c: 385: {;encoder.c: 387: motor_divide_jump_to_nearest();
 23995  0110F0  EC01  F07E         	call	_motor_divide_jump_to_nearest	;wreg free
 23996                           
 23997                           ;encoder.c: 388: os.displayState = DISPLAY_STATE_DIVIDE2_NORMAL;
 23998  0110F4  0E41               	movlw	65
 23999  0110F6  0101               	movlb	1	; () banked
 24000  0110F8  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 24001  0110FA                     l2896:
 24002                           
 24003                           ; BSR set to: 1
 24004                           ;encoder.c: 389: };encoder.c: 390: if(os.encoder1Count>0)
 24005                           
 24006                           ; BSR set to: 1
 24007  0110FA  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 24008  0110FC  0A80               	xorlw	128
 24009  0110FE  0F7F               	addlw	-129
 24010  011100  A0D8               	btfss	status,0,c
 24011  011102  D002               	goto	l2897
 24012                           
 24013                           ; BSR set to: 1
 24014                           ;encoder.c: 391: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
 24015  011104  0E32               	movlw	50
 24016  011106  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 24017  011108                     l2897:
 24018                           
 24019                           ; BSR set to: 1
 24020                           ;encoder.c: 392: if(os.encoder1Count<0)
 24021                           
 24022                           ; BSR set to: 1
 24023  011108  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 24024  01110A  D01B               	goto	l2899
 24025                           
 24026                           ; BSR set to: 1
 24027                           ;encoder.c: 393: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
 24028  01110C  0E32               	movlw	50
 24029  01110E  D00F               	goto	L6
 24030  011110                     
 24031                           ; BSR set to: 1
 24032                           ;encoder.c: 396: if(os.button1==1)
 24033                           
 24034                           ; BSR set to: 1
 24035  011110  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 24036  011112  A4D8               	btfss	status,2,c
 24037  011114  D002               	goto	l2901
 24038                           
 24039                           ; BSR set to: 1
 24040                           ;encoder.c: 397: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 24041  011116  0E02               	movlw	2
 24042  011118  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 24043  01111A                     l2901:
 24044                           
 24045                           ; BSR set to: 1
 24046                           ;encoder.c: 398: if(os.encoder1Count>0)
 24047                           
 24048                           ; BSR set to: 1
 24049  01111A  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 24050  01111C  0A80               	xorlw	128
 24051  01111E  0F7F               	addlw	-129
 24052  011120  A0D8               	btfss	status,0,c
 24053  011122  D002               	goto	l2902
 24054                           
 24055                           ; BSR set to: 1
 24056                           ;encoder.c: 399: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 24057  011124  0E31               	movlw	49
 24058  011126  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 24059  011128                     l2902:
 24060                           
 24061                           ; BSR set to: 1
 24062                           ;encoder.c: 400: if(os.encoder1Count<0)
 24063                           
 24064                           ; BSR set to: 1
 24065  011128  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 24066  01112A  D00B               	goto	l2899
 24067                           
 24068                           ; BSR set to: 1
 24069                           ;encoder.c: 401: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 24070  01112C  0E31               	movlw	49
 24071  01112E                     L6:
 24072  01112E  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 24073                           
 24074                           ; BSR set to: 1
 24075                           ;encoder.c: 403: }
 24076                           
 24077                           ; BSR set to: 1
 24078                           ;encoder.c: 402: break;
 24079  011130  D008               	goto	l2899
 24080  011132                     
 24081                           ; BSR set to: 1
 24082  011132  0101               	movlb	1	; () banked
 24083  011134  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 24084                           
 24085                           ; Switch size 1, requested type "space"
 24086                           ; Number of cases is 2, Range of values is 49 to 50
 24087                           ; switch strategies available:
 24088                           ; Name         Instructions Cycles
 24089                           ; simple_byte            7     4 (average)
 24090                           ;	Chosen strategy is simple_byte
 24091  011136  0A31               	xorlw	49	; case 49
 24092  011138  B4D8               	btfsc	status,2,c
 24093  01113A  D7D6               	goto	l2895
 24094  01113C  0A03               	xorlw	3	; case 50
 24095  01113E  B4D8               	btfsc	status,2,c
 24096  011140  D7E7               	goto	l2900
 24097  011142                     l2899:
 24098                           
 24099                           ; BSR set to: 1
 24100                           ;encoder.c: 404: if(os.button2==1)
 24101                           
 24102                           ; BSR set to: 1
 24103  011142  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 24104  011144  A4D8               	btfss	status,2,c
 24105  011146  D005               	goto	l2904
 24106                           
 24107                           ; BSR set to: 1
 24108                           ;encoder.c: 405: {;encoder.c: 406: os.divide_step_size = _encoder_next_divide_step_size(
      +                          os.divide_step_size);
 24109  011148  517A               	movf	(_os+22)& (0+255),w,b	;volatile
 24110  01114A  ECA3  F0AF         	call	__encoder_next_divide_step_size
 24111  01114E  0101               	movlb	1	; () banked
 24112  011150  6F7A               	movwf	(_os+22)& (0+255),b	;volatile
 24113  011152                     l2904:
 24114                           
 24115                           ; BSR set to: 1
 24116                           ;encoder.c: 407: };encoder.c: 408: if(os.encoder2Count>0)
 24117                           
 24118                           ; BSR set to: 1
 24119  011152  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 24120  011154  0A80               	xorlw	128
 24121  011156  0F7F               	addlw	-129
 24122  011158  A0D8               	btfss	status,0,c
 24123  01115A  D004               	goto	l2905
 24124                           
 24125                           ; BSR set to: 1
 24126                           ;encoder.c: 409: {;encoder.c: 410: os.division += os.divide_step_size;
 24127  01115C  517A               	movf	(_os+22)& (0+255),w,b	;volatile
 24128  01115E  2778               	addwf	(_os+20)& (0+255),f,b	;volatile
 24129  011160  0E00               	movlw	0
 24130  011162  2379               	addwfc	(_os+21)& (0+255),f,b	;volatile
 24131  011164                     l2905:
 24132                           
 24133                           ; BSR set to: 1
 24134                           ;encoder.c: 411: };encoder.c: 412: if(os.encoder2Count<0)
 24135  011164  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 24136  011166  0012               	return	
 24137                           
 24138                           ; BSR set to: 1
 24139                           ;encoder.c: 413: {;encoder.c: 414: if(os.division>os.divide_step_size)
 24140  011168  517A               	movf	(_os+22)& (0+255),w,b	;volatile
 24141  01116A  0100               	movlb	0	; () banked
 24142  01116C  6FA8               	movwf	??__encoder_statemachine_divide& (0+255),b
 24143  01116E  6BA9               	clrf	(??__encoder_statemachine_divide+1)& (0+255),b
 24144  011170  0101               	movlb	1	; () banked
 24145  011172  5178               	movf	(_os+20)& (0+255),w,b	;volatile
 24146  011174  0100               	movlb	0	; () banked
 24147  011176  5DA8               	subwf	??__encoder_statemachine_divide& (0+255),w,b
 24148  011178  51A9               	movf	(??__encoder_statemachine_divide+1)& (0+255),w,b
 24149  01117A  0A80               	xorlw	128
 24150  01117C  6FAA               	movwf	(??__encoder_statemachine_divide+2)& (0+255),b
 24151  01117E  0101               	movlb	1	; () banked
 24152  011180  5179               	movf	(_os+21)& (0+255),w,b	;volatile
 24153  011182  0A80               	xorlw	128
 24154  011184  0100               	movlb	0	; () banked
 24155  011186  59AA               	subwfb	(??__encoder_statemachine_divide+2)& (0+255),w,b
 24156  011188  B0D8               	btfsc	status,0,c
 24157  01118A  D006               	goto	l2907
 24158                           
 24159                           ; BSR set to: 0
 24160                           ;encoder.c: 415: {;encoder.c: 416: os.division -= os.divide_step_size;
 24161  01118C  0101               	movlb	1	; () banked
 24162  01118E  517A               	movf	(_os+22)& (0+255),w,b	;volatile
 24163  011190  5F78               	subwf	(_os+20)& (0+255),f,b	;volatile
 24164  011192  0E00               	movlw	0
 24165  011194  5B79               	subwfb	(_os+21)& (0+255),f,b	;volatile
 24166                           
 24167                           ;encoder.c: 417: }
 24168  011196  0012               	return	
 24169  011198                     l2907:
 24170                           
 24171                           ;encoder.c: 418: else;encoder.c: 419: {;encoder.c: 420: os.division = 1;
 24172                           
 24173                           ; BSR set to: 1
 24174  011198  0E00               	movlw	0
 24175  01119A  0101               	movlb	1	; () banked
 24176  01119C  6F79               	movwf	(_os+21)& (0+255),b	;volatile
 24177  01119E  0E01               	movlw	1
 24178  0111A0  6F78               	movwf	(_os+20)& (0+255),b	;volatile
 24179                           
 24180                           ; BSR set to: 1
 24181                           ;encoder.c: 421: };encoder.c: 422: };encoder.c: 423: break;
 24182                           
 24183                           ; BSR set to: 1
 24184  0111A2  0012               	return	
 24185  0111A4                     
 24186                           ;encoder.c: 426: if(os.button1==1)
 24187                           
 24188                           ; BSR set to: 1
 24189  0111A4  0101               	movlb	1	; () banked
 24190  0111A6  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 24191  0111A8  A4D8               	btfss	status,2,c
 24192  0111AA  D002               	goto	l2911
 24193                           
 24194                           ; BSR set to: 1
 24195                           ;encoder.c: 427: {;encoder.c: 428: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 24196  0111AC  0E02               	movlw	2
 24197  0111AE  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 24198  0111B0                     l2911:
 24199                           
 24200                           ; BSR set to: 1
 24201                           ;encoder.c: 429: };encoder.c: 430: if(os.button2==1)
 24202                           
 24203                           ; BSR set to: 1
 24204  0111B0  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 24205  0111B2  B4D8               	btfsc	status,2,c
 24206                           
 24207                           ; BSR set to: 1
 24208                           ;encoder.c: 431: {;encoder.c: 432: motor_divide_jump();
 24209  0111B4  EC5E  F099         	call	_motor_divide_jump	;wreg free
 24210                           
 24211                           ;encoder.c: 433: };encoder.c: 434: if(os.encoder2Count>0)
 24212  0111B8  0101               	movlb	1	; () banked
 24213  0111BA  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 24214  0111BC  0A80               	xorlw	128
 24215  0111BE  0F7F               	addlw	-129
 24216  0111C0  B0D8               	btfsc	status,0,c
 24217                           
 24218                           ; BSR set to: 1
 24219                           ;encoder.c: 435: {;encoder.c: 436: _divide_jump_size_increment();
 24220  0111C2  EC9E  F0AD         	call	__divide_jump_size_increment	;wreg free
 24221                           
 24222                           ;encoder.c: 437: };encoder.c: 438: if(os.encoder2Count<0)
 24223  0111C6  0101               	movlb	1	; () banked
 24224  0111C8  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 24225  0111CA  0012               	return	
 24226                           
 24227                           ; BSR set to: 1
 24228                           ;encoder.c: 439: {;encoder.c: 440: _divide_jump_size_decrement();
 24229  0111CC  EC5F  F0A5         	call	__divide_jump_size_decrement	;wreg free
 24230                           
 24231                           ;encoder.c: 443: }
 24232                           
 24233                           ;encoder.c: 441: };encoder.c: 442: break;
 24234  0111D0  0012               	return	
 24235  0111D2                     l2892:
 24236  0111D2  0101               	movlb	1	; () banked
 24237  0111D4  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 24238  0111D6  0BF0               	andlw	240
 24239  0111D8  0100               	movlb	0	; () banked
 24240  0111DA  6FA8               	movwf	??__encoder_statemachine_divide& (0+255),b
 24241  0111DC  6BA9               	clrf	(??__encoder_statemachine_divide+1)& (0+255),b
 24242                           
 24243                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24244                           ; Switch size 1, requested type "space"
 24245                           ; Number of cases is 1, Range of values is 0 to 0
 24246                           ; switch strategies available:
 24247                           ; Name         Instructions Cycles
 24248                           ; simple_byte            4     3 (average)
 24249                           ;	Chosen strategy is simple_byte
 24250  0111DE  51A9               	movf	(??__encoder_statemachine_divide+1)& (0+255),w,b
 24251  0111E0  0A00               	xorlw	0	; case 0
 24252  0111E2  A4D8               	btfss	status,2,c
 24253  0111E4  0012               	return	
 24254                           
 24255                           ; BSR set to: 0
 24256                           ; Switch size 1, requested type "space"
 24257                           ; Number of cases is 2, Range of values is 48 to 64
 24258                           ; switch strategies available:
 24259                           ; Name         Instructions Cycles
 24260                           ; simple_byte            7     4 (average)
 24261                           ;	Chosen strategy is simple_byte
 24262  0111E6  51A8               	movf	??__encoder_statemachine_divide& (0+255),w,b
 24263  0111E8  0A30               	xorlw	48	; case 48
 24264  0111EA  B4D8               	btfsc	status,2,c
 24265  0111EC  D7A2               	goto	l2894
 24266  0111EE  0A70               	xorlw	112	; case 64
 24267  0111F0  A4D8               	btfss	status,2,c
 24268  0111F2  0012               	return	
 24269  0111F4  D7D7               	goto	l2910
 24270  0111F6                     __end_of__encoder_statemachine_divide:
 24271                           	opt stack 0
 24272                           tblptru	equ	0xFF8
 24273                           tblptrh	equ	0xFF7
 24274                           tblptrl	equ	0xFF6
 24275                           tablat	equ	0xFF5
 24276                           prodh	equ	0xFF4
 24277                           prodl	equ	0xFF3
 24278                           intcon	equ	0xFF2
 24279                           postinc0	equ	0xFEE
 24280                           wreg	equ	0xFE8
 24281                           indf1	equ	0xFE7
 24282                           postinc1	equ	0xFE6
 24283                           postdec1	equ	0xFE5
 24284                           plusw1	equ	0xFE3
 24285                           fsr1h	equ	0xFE2
 24286                           fsr1l	equ	0xFE1
 24287                           indf2	equ	0xFDF
 24288                           postinc2	equ	0xFDE
 24289                           postdec2	equ	0xFDD
 24290                           plusw2	equ	0xFDB
 24291                           fsr2h	equ	0xFDA
 24292                           fsr2l	equ	0xFD9
 24293                           status	equ	0xFD8
 24294                           
 24295 ;; *************** function _motor_divide_jump_to_nearest *****************
 24296 ;; Defined at:
 24297 ;;		line 944 in file "motor.c"
 24298 ;; Parameters:    Size  Location     Type
 24299 ;;		None
 24300 ;; Auto vars:     Size  Location     Type
 24301 ;;  divide_posit    4   68[BANK0 ] float 
 24302 ;;  nearest_posi    4   62[BANK0 ] unsigned long 
 24303 ;;  nearest_divi    2   66[BANK0 ] int 
 24304 ;; Return value:  Size  Location     Type
 24305 ;;                  1    wreg      void 
 24306 ;; Registers used:
 24307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24308 ;; Tracked objects:
 24309 ;;		On entry : 0/0
 24310 ;;		On exit  : 0/0
 24311 ;;		Unchanged: 0/0
 24312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24314 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24316 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24317 ;;Total ram usage:       10 bytes
 24318 ;; Hardware stack levels used:    1
 24319 ;; Hardware stack levels required when called:   14
 24320 ;; This function calls:
 24321 ;;		___fladd
 24322 ;;		___fldiv
 24323 ;;		___flmul
 24324 ;;		___fltol
 24325 ;;		___xxtofl
 24326 ;;		__step_position_from_divide_position
 24327 ;;		_motor_goto_steps
 24328 ;; This function is called by:
 24329 ;;		__encoder_statemachine_divide
 24330 ;; This function uses a non-reentrant model
 24331 ;;
 24332                           
 24333                           	psect	text96
 24334  00FC02                     __ptext96:
 24335                           	opt stack 0
 24336  00FC02                     _motor_divide_jump_to_nearest:
 24337                           	opt stack 14
 24338                           
 24339                           ;motor.c: 946: float divide_position_float;;motor.c: 947: int16_t nearest_divide_positio
      +                          n;;motor.c: 948: uint32_t nearest_position_in_steps;;motor.c: 950: divide_position_float
      +                           = (float) os.current_position_in_steps;
 24340                           
 24341                           ;incstack = 0
 24342  00FC02  C16B  F06A         	movff	_os+7,___xxtofl@val	;volatile
 24343  00FC06  C16C  F06B         	movff	_os+8,___xxtofl@val+1	;volatile
 24344  00FC0A  C16D  F06C         	movff	_os+9,___xxtofl@val+2	;volatile
 24345  00FC0E  C16E  F06D         	movff	_os+10,___xxtofl@val+3	;volatile
 24346  00FC12  0E00               	movlw	0
 24347  00FC14  EC91  F082         	call	___xxtofl
 24348  00FC18  C06A  F0A4         	movff	?___xxtofl,motor_divide_jump_to_nearest@divide_position_float
 24349  00FC1C  C06B  F0A5         	movff	?___xxtofl+1,motor_divide_jump_to_nearest@divide_position_float+1
 24350  00FC20  C06C  F0A6         	movff	?___xxtofl+2,motor_divide_jump_to_nearest@divide_position_float+2
 24351  00FC24  C06D  F0A7         	movff	?___xxtofl+3,motor_divide_jump_to_nearest@divide_position_float+3
 24352                           
 24353                           ;motor.c: 951: divide_position_float *= (float) os.division;
 24354  00FC28  C0A4  F078         	movff	motor_divide_jump_to_nearest@divide_position_float,___flmul@b
 24355  00FC2C  C0A5  F079         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___flmul@b+1
 24356  00FC30  C0A6  F07A         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___flmul@b+2
 24357  00FC34  C0A7  F07B         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___flmul@b+3
 24358  00FC38  EE21  F078         	lfsr	2,_os+20	;volatile
 24359  00FC3C  CFDE F06A          	movff	postinc2,___xxtofl@val
 24360  00FC40  CFDD F06B          	movff	postdec2,___xxtofl@val+1
 24361  00FC44  0100               	movlb	0	; () banked
 24362  00FC46  0E00               	movlw	0
 24363  00FC48  BF6B               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 24364  00FC4A  0EFF               	movlw	-1
 24365  00FC4C  6F6C               	movwf	(___xxtofl@val+2)& (0+255),b
 24366  00FC4E  6F6D               	movwf	(___xxtofl@val+3)& (0+255),b
 24367  00FC50  0E01               	movlw	1
 24368  00FC52  EC91  F082         	call	___xxtofl
 24369  00FC56  C06A  F07C         	movff	?___xxtofl,___flmul@a
 24370  00FC5A  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 24371  00FC5E  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 24372  00FC62  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 24373  00FC66  EC2B  F063         	call	___flmul	;wreg free
 24374  00FC6A  C078  F0A4         	movff	?___flmul,motor_divide_jump_to_nearest@divide_position_float
 24375  00FC6E  C079  F0A5         	movff	?___flmul+1,motor_divide_jump_to_nearest@divide_position_float+1
 24376  00FC72  C07A  F0A6         	movff	?___flmul+2,motor_divide_jump_to_nearest@divide_position_float+2
 24377  00FC76  C07B  F0A7         	movff	?___flmul+3,motor_divide_jump_to_nearest@divide_position_float+3
 24378                           
 24379                           ;motor.c: 952: divide_position_float /= (float) config.full_circle_in_steps;
 24380  00FC7A  C0A4  F078         	movff	motor_divide_jump_to_nearest@divide_position_float,___fldiv@b
 24381  00FC7E  C0A5  F079         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fldiv@b+1
 24382  00FC82  C0A6  F07A         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fldiv@b+2
 24383  00FC86  C0A7  F07B         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fldiv@b+3
 24384  00FC8A  C195  F06A         	movff	_config,___xxtofl@val
 24385  00FC8E  C196  F06B         	movff	_config+1,___xxtofl@val+1
 24386  00FC92  C197  F06C         	movff	_config+2,___xxtofl@val+2
 24387  00FC96  C198  F06D         	movff	_config+3,___xxtofl@val+3
 24388  00FC9A  0E00               	movlw	0
 24389  00FC9C  EC91  F082         	call	___xxtofl
 24390  00FCA0  C06A  F07C         	movff	?___xxtofl,___fldiv@a
 24391  00FCA4  C06B  F07D         	movff	?___xxtofl+1,___fldiv@a+1
 24392  00FCA8  C06C  F07E         	movff	?___xxtofl+2,___fldiv@a+2
 24393  00FCAC  C06D  F07F         	movff	?___xxtofl+3,___fldiv@a+3
 24394  00FCB0  EC53  F069         	call	___fldiv	;wreg free
 24395  00FCB4  C078  F0A4         	movff	?___fldiv,motor_divide_jump_to_nearest@divide_position_float
 24396  00FCB8  C079  F0A5         	movff	?___fldiv+1,motor_divide_jump_to_nearest@divide_position_float+1
 24397  00FCBC  C07A  F0A6         	movff	?___fldiv+2,motor_divide_jump_to_nearest@divide_position_float+2
 24398  00FCC0  C07B  F0A7         	movff	?___fldiv+3,motor_divide_jump_to_nearest@divide_position_float+3
 24399                           
 24400                           ;motor.c: 953: divide_position_float += 0.5;
 24401  00FCC4  C0A4  F07C         	movff	motor_divide_jump_to_nearest@divide_position_float,___fladd@b
 24402  00FCC8  C0A5  F07D         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fladd@b+1
 24403  00FCCC  C0A6  F07E         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fladd@b+2
 24404  00FCD0  C0A7  F07F         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fladd@b+3
 24405  00FCD4  0E00               	movlw	0
 24406  00FCD6  0100               	movlb	0	; () banked
 24407  00FCD8  6F80               	movwf	___fladd@a& (0+255),b
 24408  00FCDA  0E00               	movlw	0
 24409  00FCDC  6F81               	movwf	(___fladd@a+1)& (0+255),b
 24410  00FCDE  0E00               	movlw	0
 24411  00FCE0  6F82               	movwf	(___fladd@a+2)& (0+255),b
 24412  00FCE2  0E3F               	movlw	63
 24413  00FCE4  6F83               	movwf	(___fladd@a+3)& (0+255),b
 24414  00FCE6  ECD4  F064         	call	___fladd	;wreg free
 24415  00FCEA  C07C  F0A4         	movff	?___fladd,motor_divide_jump_to_nearest@divide_position_float
 24416  00FCEE  C07D  F0A5         	movff	?___fladd+1,motor_divide_jump_to_nearest@divide_position_float+1
 24417  00FCF2  C07E  F0A6         	movff	?___fladd+2,motor_divide_jump_to_nearest@divide_position_float+2
 24418  00FCF6  C07F  F0A7         	movff	?___fladd+3,motor_divide_jump_to_nearest@divide_position_float+3
 24419                           
 24420                           ;motor.c: 954: nearest_divide_position = (int16_t) divide_position_float;
 24421  00FCFA  C0A4  F060         	movff	motor_divide_jump_to_nearest@divide_position_float,___fltol@f1
 24422  00FCFE  C0A5  F061         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fltol@f1+1
 24423  00FD02  C0A6  F062         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fltol@f1+2
 24424  00FD06  C0A7  F063         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fltol@f1+3
 24425  00FD0A  ECEA  F094         	call	___fltol	;wreg free
 24426  00FD0E  C060  F0A2         	movff	?___fltol,motor_divide_jump_to_nearest@nearest_divide_position
 24427  00FD12  C061  F0A3         	movff	?___fltol+1,motor_divide_jump_to_nearest@nearest_divide_position+1
 24428                           
 24429                           ;motor.c: 957: nearest_position_in_steps = _step_position_from_divide_position(nearest_d
      +                          ivide_position);
 24430  00FD16  C0A2  F091         	movff	motor_divide_jump_to_nearest@nearest_divide_position,__step_position_from_divide_
      +                          position@divide_position
 24431  00FD1A  C0A3  F092         	movff	motor_divide_jump_to_nearest@nearest_divide_position+1,__step_position_from_divid
      +                          e_position@divide_position+1
 24432  00FD1E  EC90  F08F         	call	__step_position_from_divide_position	;wreg free
 24433  00FD22  C091  F09E         	movff	?__step_position_from_divide_position,motor_divide_jump_to_nearest@nearest_positi
      +                          on_in_steps
 24434  00FD26  C092  F09F         	movff	?__step_position_from_divide_position+1,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+1
 24435  00FD2A  C093  F0A0         	movff	?__step_position_from_divide_position+2,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+2
 24436  00FD2E  C094  F0A1         	movff	?__step_position_from_divide_position+3,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+3
 24437                           
 24438                           ;motor.c: 960: os.divide_position = nearest_divide_position;
 24439  00FD32  C0A2  F17B         	movff	motor_divide_jump_to_nearest@nearest_divide_position,_os+23	;volatile
 24440  00FD36  C0A3  F17C         	movff	motor_divide_jump_to_nearest@nearest_divide_position+1,_os+24	;volatile
 24441                           
 24442                           ;motor.c: 961: motor_goto_steps(MOTOR_DIRECTION_SHORTEST, nearest_position_in_steps, 0xF
      +                          FFF, MOTOR_OVERSHOOT_WITH_OVERSHOOT);
 24443  00FD3A  C09E  F092         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps,motor_goto_steps@position
 24444  00FD3E  C09F  F093         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+1,motor_goto_steps@positio
      +                          n+1
 24445  00FD42  C0A0  F094         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+2,motor_goto_steps@positio
      +                          n+2
 24446  00FD46  C0A1  F095         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+3,motor_goto_steps@positio
      +                          n+3
 24447  00FD4A  0EFF               	movlw	255
 24448  00FD4C  0100               	movlb	0	; () banked
 24449  00FD4E  6F97               	movwf	(motor_goto_steps@speed+1)& (0+255),b
 24450  00FD50  6996               	setf	motor_goto_steps@speed& (0+255),b
 24451  00FD52  0E00               	movlw	0
 24452  00FD54  6F98               	movwf	motor_goto_steps@overshoot& (0+255),b
 24453  00FD56  0E00               	movlw	0
 24454  00FD58  ECBB  F09D         	call	_motor_goto_steps
 24455  00FD5C  0012               	return		;funcret
 24456  00FD5E                     __end_of_motor_divide_jump_to_nearest:
 24457                           	opt stack 0
 24458                           tblptru	equ	0xFF8
 24459                           tblptrh	equ	0xFF7
 24460                           tblptrl	equ	0xFF6
 24461                           tablat	equ	0xFF5
 24462                           prodh	equ	0xFF4
 24463                           prodl	equ	0xFF3
 24464                           intcon	equ	0xFF2
 24465                           postinc0	equ	0xFEE
 24466                           wreg	equ	0xFE8
 24467                           indf1	equ	0xFE7
 24468                           postinc1	equ	0xFE6
 24469                           postdec1	equ	0xFE5
 24470                           plusw1	equ	0xFE3
 24471                           fsr1h	equ	0xFE2
 24472                           fsr1l	equ	0xFE1
 24473                           indf2	equ	0xFDF
 24474                           postinc2	equ	0xFDE
 24475                           postdec2	equ	0xFDD
 24476                           plusw2	equ	0xFDB
 24477                           fsr2h	equ	0xFDA
 24478                           fsr2l	equ	0xFD9
 24479                           status	equ	0xFD8
 24480                           
 24481 ;; *************** function _motor_divide_jump *****************
 24482 ;; Defined at:
 24483 ;;		line 913 in file "motor.c"
 24484 ;; Parameters:    Size  Location     Type
 24485 ;;		None
 24486 ;; Auto vars:     Size  Location     Type
 24487 ;;  target_posit    4   63[BANK0 ] unsigned long 
 24488 ;;  target_divid    2   67[BANK0 ] int 
 24489 ;; Return value:  Size  Location     Type
 24490 ;;                  1    wreg      void 
 24491 ;; Registers used:
 24492 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24493 ;; Tracked objects:
 24494 ;;		On entry : 0/0
 24495 ;;		On exit  : 0/0
 24496 ;;		Unchanged: 0/0
 24497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24499 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24500 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24501 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24502 ;;Total ram usage:        7 bytes
 24503 ;; Hardware stack levels used:    1
 24504 ;; Hardware stack levels required when called:   14
 24505 ;; This function calls:
 24506 ;;		__step_position_from_divide_position
 24507 ;;		_motor_goto_steps
 24508 ;; This function is called by:
 24509 ;;		__encoder_statemachine_divide
 24510 ;; This function uses a non-reentrant model
 24511 ;;
 24512                           
 24513                           	psect	text97
 24514  0132BC                     __ptext97:
 24515                           	opt stack 0
 24516  0132BC                     _motor_divide_jump:
 24517                           	opt stack 14
 24518                           
 24519                           ;motor.c: 915: int16_t target_divide_position;;motor.c: 916: uint32_t target_position_in
      +                          _steps;;motor.c: 919: if(os.divide_jump_size>0)
 24520                           
 24521                           ;incstack = 0
 24522  0132BC  0101               	movlb	1	; () banked
 24523  0132BE  BF7E               	btfsc	(_os+26)& (0+255),7,b	;volatile
 24524  0132C0  D023               	goto	l2642
 24525  0132C2  517E               	movf	(_os+26)& (0+255),w,b	;volatile
 24526  0132C4  E103               	bnz	u15970
 24527  0132C6  057D               	decf	(_os+25)& (0+255),w,b	;volatile
 24528  0132C8  A0D8               	btfss	status,0,c
 24529  0132CA  D01E               	goto	l2642
 24530  0132CC                     u15970:
 24531                           
 24532                           ; BSR set to: 1
 24533                           ;motor.c: 920: {;motor.c: 921: target_divide_position = os.divide_position + os.divide_j
      +                          ump_size;
 24534  0132CC  517D               	movf	(_os+25)& (0+255),w,b	;volatile
 24535  0132CE  257B               	addwf	(_os+23)& (0+255),w,b	;volatile
 24536  0132D0  0100               	movlb	0	; () banked
 24537  0132D2  6FA3               	movwf	motor_divide_jump@target_divide_position& (0+255),b
 24538  0132D4  0101               	movlb	1	; () banked
 24539  0132D6  517E               	movf	(_os+26)& (0+255),w,b	;volatile
 24540  0132D8  217C               	addwfc	(_os+24)& (0+255),w,b	;volatile
 24541  0132DA  0100               	movlb	0	; () banked
 24542  0132DC  6FA4               	movwf	(motor_divide_jump@target_divide_position+1)& (0+255),b
 24543                           
 24544                           ;motor.c: 922: if(target_divide_position>=os.division)
 24545  0132DE  0101               	movlb	1	; () banked
 24546  0132E0  5178               	movf	(_os+20)& (0+255),w,b	;volatile
 24547  0132E2  0100               	movlb	0	; () banked
 24548  0132E4  5DA3               	subwf	motor_divide_jump@target_divide_position& (0+255),w,b
 24549  0132E6  51A4               	movf	(motor_divide_jump@target_divide_position+1)& (0+255),w,b
 24550  0132E8  0A80               	xorlw	128
 24551  0132EA  6F9E               	movwf	??_motor_divide_jump& (0+255),b
 24552  0132EC  0101               	movlb	1	; () banked
 24553  0132EE  5179               	movf	(_os+21)& (0+255),w,b	;volatile
 24554  0132F0  0A80               	xorlw	128
 24555  0132F2  0100               	movlb	0	; () banked
 24556  0132F4  599E               	subwfb	??_motor_divide_jump& (0+255),w,b
 24557  0132F6  A0D8               	btfss	status,0,c
 24558  0132F8  D019               	goto	l2645
 24559                           
 24560                           ; BSR set to: 0
 24561                           ;motor.c: 923: {;motor.c: 924: target_divide_position -= os.division;
 24562  0132FA  EE21  F078         	lfsr	2,_os+20	;volatile
 24563  0132FE  50DE               	movf	postinc2,w,c
 24564  013300  5FA3               	subwf	motor_divide_jump@target_divide_position& (0+255),f,b
 24565  013302  50DD               	movf	postdec2,w,c
 24566  013304  5BA4               	subwfb	(motor_divide_jump@target_divide_position+1)& (0+255),f,b
 24567                           
 24568                           ; BSR set to: 0
 24569                           ;motor.c: 925: };motor.c: 926: }
 24570  013306  D012               	goto	l2645
 24571  013308                     l2642:
 24572                           
 24573                           ;motor.c: 927: else;motor.c: 928: {;motor.c: 929: target_divide_position = os.divide_pos
      +                          ition + os.divide_jump_size;
 24574                           
 24575                           ; BSR set to: 0
 24576  013308  0101               	movlb	1	; () banked
 24577  01330A  517D               	movf	(_os+25)& (0+255),w,b	;volatile
 24578  01330C  257B               	addwf	(_os+23)& (0+255),w,b	;volatile
 24579  01330E  0100               	movlb	0	; () banked
 24580  013310  6FA3               	movwf	motor_divide_jump@target_divide_position& (0+255),b
 24581  013312  0101               	movlb	1	; () banked
 24582  013314  517E               	movf	(_os+26)& (0+255),w,b	;volatile
 24583  013316  217C               	addwfc	(_os+24)& (0+255),w,b	;volatile
 24584  013318  0100               	movlb	0	; () banked
 24585  01331A  6FA4               	movwf	(motor_divide_jump@target_divide_position+1)& (0+255),b
 24586                           
 24587                           ;motor.c: 930: if(target_divide_position<0)
 24588  01331C  AFA4               	btfss	(motor_divide_jump@target_divide_position+1)& (0+255),7,b
 24589  01331E  D006               	goto	l2645
 24590                           
 24591                           ; BSR set to: 0
 24592                           ;motor.c: 931: {;motor.c: 932: target_divide_position += os.division;
 24593  013320  EE21  F078         	lfsr	2,_os+20	;volatile
 24594  013324  50DE               	movf	postinc2,w,c
 24595  013326  27A3               	addwf	motor_divide_jump@target_divide_position& (0+255),f,b
 24596  013328  50DD               	movf	postdec2,w,c
 24597  01332A  23A4               	addwfc	(motor_divide_jump@target_divide_position+1)& (0+255),f,b
 24598  01332C                     l2645:
 24599                           
 24600                           ; BSR set to: 0
 24601                           ;motor.c: 933: };motor.c: 934: };motor.c: 937: target_position_in_steps = _step_position
      +                          _from_divide_position(target_divide_position);
 24602                           
 24603                           ; BSR set to: 0
 24604                           
 24605                           ; BSR set to: 0
 24606  01332C  C0A3  F091         	movff	motor_divide_jump@target_divide_position,__step_position_from_divide_position@div
      +                          ide_position
 24607  013330  C0A4  F092         	movff	motor_divide_jump@target_divide_position+1,__step_position_from_divide_position@d
      +                          ivide_position+1
 24608  013334  EC90  F08F         	call	__step_position_from_divide_position	;wreg free
 24609  013338  C091  F09F         	movff	?__step_position_from_divide_position,motor_divide_jump@target_position_in_steps
 24610  01333C  C092  F0A0         	movff	?__step_position_from_divide_position+1,motor_divide_jump@target_position_in_step
      +                          s+1
 24611  013340  C093  F0A1         	movff	?__step_position_from_divide_position+2,motor_divide_jump@target_position_in_step
      +                          s+2
 24612  013344  C094  F0A2         	movff	?__step_position_from_divide_position+3,motor_divide_jump@target_position_in_step
      +                          s+3
 24613                           
 24614                           ;motor.c: 940: os.divide_position = target_divide_position;
 24615  013348  C0A3  F17B         	movff	motor_divide_jump@target_divide_position,_os+23	;volatile
 24616  01334C  C0A4  F17C         	movff	motor_divide_jump@target_divide_position+1,_os+24	;volatile
 24617                           
 24618                           ;motor.c: 941: motor_goto_steps(MOTOR_DIRECTION_SHORTEST, target_position_in_steps, 0xFF
      +                          FF, MOTOR_OVERSHOOT_WITH_OVERSHOOT);
 24619  013350  C09F  F092         	movff	motor_divide_jump@target_position_in_steps,motor_goto_steps@position
 24620  013354  C0A0  F093         	movff	motor_divide_jump@target_position_in_steps+1,motor_goto_steps@position+1
 24621  013358  C0A1  F094         	movff	motor_divide_jump@target_position_in_steps+2,motor_goto_steps@position+2
 24622  01335C  C0A2  F095         	movff	motor_divide_jump@target_position_in_steps+3,motor_goto_steps@position+3
 24623  013360  0EFF               	movlw	255
 24624  013362  0100               	movlb	0	; () banked
 24625  013364  6F97               	movwf	(motor_goto_steps@speed+1)& (0+255),b
 24626  013366  6996               	setf	motor_goto_steps@speed& (0+255),b
 24627  013368  0E00               	movlw	0
 24628  01336A  6F98               	movwf	motor_goto_steps@overshoot& (0+255),b
 24629  01336C  0E00               	movlw	0
 24630  01336E  ECBB  F09D         	call	_motor_goto_steps
 24631  013372  0012               	return		;funcret
 24632  013374                     __end_of_motor_divide_jump:
 24633                           	opt stack 0
 24634                           tblptru	equ	0xFF8
 24635                           tblptrh	equ	0xFF7
 24636                           tblptrl	equ	0xFF6
 24637                           tablat	equ	0xFF5
 24638                           prodh	equ	0xFF4
 24639                           prodl	equ	0xFF3
 24640                           intcon	equ	0xFF2
 24641                           postinc0	equ	0xFEE
 24642                           wreg	equ	0xFE8
 24643                           indf1	equ	0xFE7
 24644                           postinc1	equ	0xFE6
 24645                           postdec1	equ	0xFE5
 24646                           plusw1	equ	0xFE3
 24647                           fsr1h	equ	0xFE2
 24648                           fsr1l	equ	0xFE1
 24649                           indf2	equ	0xFDF
 24650                           postinc2	equ	0xFDE
 24651                           postdec2	equ	0xFDD
 24652                           plusw2	equ	0xFDB
 24653                           fsr2h	equ	0xFDA
 24654                           fsr2l	equ	0xFD9
 24655                           status	equ	0xFD8
 24656                           
 24657 ;; *************** function __step_position_from_divide_position *****************
 24658 ;; Defined at:
 24659 ;;		line 581 in file "motor.c"
 24660 ;; Parameters:    Size  Location     Type
 24661 ;;  divide_posit    2   49[BANK0 ] int 
 24662 ;; Auto vars:     Size  Location     Type
 24663 ;;  target_posit    4   53[BANK0 ] float 
 24664 ;; Return value:  Size  Location     Type
 24665 ;;                  4   49[BANK0 ] unsigned long 
 24666 ;; Registers used:
 24667 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24668 ;; Tracked objects:
 24669 ;;		On entry : 0/0
 24670 ;;		On exit  : 0/0
 24671 ;;		Unchanged: 0/0
 24672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24673 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24674 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24676 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24677 ;;Total ram usage:        8 bytes
 24678 ;; Hardware stack levels used:    1
 24679 ;; Hardware stack levels required when called:   11
 24680 ;; This function calls:
 24681 ;;		___fldiv
 24682 ;;		___flmul
 24683 ;;		___fltol
 24684 ;;		___xxtofl
 24685 ;; This function is called by:
 24686 ;;		_motor_divide_jump
 24687 ;;		_motor_divide_jump_to_nearest
 24688 ;; This function uses a non-reentrant model
 24689 ;;
 24690                           
 24691                           	psect	text98
 24692  011F20                     __ptext98:
 24693                           	opt stack 0
 24694  011F20                     __step_position_from_divide_position:
 24695                           	opt stack 16
 24696                           
 24697                           ;motor.c: 583: float target_position;;motor.c: 586: target_position = (float) config.ful
      +                          l_circle_in_steps;
 24698                           
 24699                           ;incstack = 0
 24700  011F20  C195  F06A         	movff	_config,___xxtofl@val
 24701  011F24  C196  F06B         	movff	_config+1,___xxtofl@val+1
 24702  011F28  C197  F06C         	movff	_config+2,___xxtofl@val+2
 24703  011F2C  C198  F06D         	movff	_config+3,___xxtofl@val+3
 24704  011F30  0E00               	movlw	0
 24705  011F32  EC91  F082         	call	___xxtofl
 24706  011F36  C06A  F095         	movff	?___xxtofl,__step_position_from_divide_position@target_position
 24707  011F3A  C06B  F096         	movff	?___xxtofl+1,__step_position_from_divide_position@target_position+1
 24708  011F3E  C06C  F097         	movff	?___xxtofl+2,__step_position_from_divide_position@target_position+2
 24709  011F42  C06D  F098         	movff	?___xxtofl+3,__step_position_from_divide_position@target_position+3
 24710                           
 24711                           ;motor.c: 587: target_position *= (float) divide_position;
 24712  011F46  C095  F078         	movff	__step_position_from_divide_position@target_position,___flmul@b
 24713  011F4A  C096  F079         	movff	__step_position_from_divide_position@target_position+1,___flmul@b+1
 24714  011F4E  C097  F07A         	movff	__step_position_from_divide_position@target_position+2,___flmul@b+2
 24715  011F52  C098  F07B         	movff	__step_position_from_divide_position@target_position+3,___flmul@b+3
 24716  011F56  C091  F06A         	movff	__step_position_from_divide_position@divide_position,___xxtofl@val
 24717  011F5A  C092  F06B         	movff	__step_position_from_divide_position@divide_position+1,___xxtofl@val+1
 24718  011F5E  0100               	movlb	0	; () banked
 24719  011F60  0E00               	movlw	0
 24720  011F62  BF6B               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 24721  011F64  0EFF               	movlw	-1
 24722  011F66  6F6C               	movwf	(___xxtofl@val+2)& (0+255),b
 24723  011F68  6F6D               	movwf	(___xxtofl@val+3)& (0+255),b
 24724  011F6A  0E01               	movlw	1
 24725  011F6C  EC91  F082         	call	___xxtofl
 24726  011F70  C06A  F07C         	movff	?___xxtofl,___flmul@a
 24727  011F74  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 24728  011F78  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 24729  011F7C  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 24730  011F80  EC2B  F063         	call	___flmul	;wreg free
 24731  011F84  C078  F095         	movff	?___flmul,__step_position_from_divide_position@target_position
 24732  011F88  C079  F096         	movff	?___flmul+1,__step_position_from_divide_position@target_position+1
 24733  011F8C  C07A  F097         	movff	?___flmul+2,__step_position_from_divide_position@target_position+2
 24734  011F90  C07B  F098         	movff	?___flmul+3,__step_position_from_divide_position@target_position+3
 24735                           
 24736                           ;motor.c: 588: target_position /= (float) os.division;
 24737  011F94  C095  F078         	movff	__step_position_from_divide_position@target_position,___fldiv@b
 24738  011F98  C096  F079         	movff	__step_position_from_divide_position@target_position+1,___fldiv@b+1
 24739  011F9C  C097  F07A         	movff	__step_position_from_divide_position@target_position+2,___fldiv@b+2
 24740  011FA0  C098  F07B         	movff	__step_position_from_divide_position@target_position+3,___fldiv@b+3
 24741  011FA4  EE21  F078         	lfsr	2,_os+20	;volatile
 24742  011FA8  CFDE F06A          	movff	postinc2,___xxtofl@val
 24743  011FAC  CFDD F06B          	movff	postdec2,___xxtofl@val+1
 24744  011FB0  0100               	movlb	0	; () banked
 24745  011FB2  0E00               	movlw	0
 24746  011FB4  BF6B               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 24747  011FB6  0EFF               	movlw	-1
 24748  011FB8  6F6C               	movwf	(___xxtofl@val+2)& (0+255),b
 24749  011FBA  6F6D               	movwf	(___xxtofl@val+3)& (0+255),b
 24750  011FBC  0E01               	movlw	1
 24751  011FBE  EC91  F082         	call	___xxtofl
 24752  011FC2  C06A  F07C         	movff	?___xxtofl,___fldiv@a
 24753  011FC6  C06B  F07D         	movff	?___xxtofl+1,___fldiv@a+1
 24754  011FCA  C06C  F07E         	movff	?___xxtofl+2,___fldiv@a+2
 24755  011FCE  C06D  F07F         	movff	?___xxtofl+3,___fldiv@a+3
 24756  011FD2  EC53  F069         	call	___fldiv	;wreg free
 24757  011FD6  C078  F095         	movff	?___fldiv,__step_position_from_divide_position@target_position
 24758  011FDA  C079  F096         	movff	?___fldiv+1,__step_position_from_divide_position@target_position+1
 24759  011FDE  C07A  F097         	movff	?___fldiv+2,__step_position_from_divide_position@target_position+2
 24760  011FE2  C07B  F098         	movff	?___fldiv+3,__step_position_from_divide_position@target_position+3
 24761                           
 24762                           ;motor.c: 590: return (uint32_t) target_position;
 24763  011FE6  C095  F060         	movff	__step_position_from_divide_position@target_position,___fltol@f1
 24764  011FEA  C096  F061         	movff	__step_position_from_divide_position@target_position+1,___fltol@f1+1
 24765  011FEE  C097  F062         	movff	__step_position_from_divide_position@target_position+2,___fltol@f1+2
 24766  011FF2  C098  F063         	movff	__step_position_from_divide_position@target_position+3,___fltol@f1+3
 24767  011FF6  ECEA  F094         	call	___fltol	;wreg free
 24768  011FFA  C060  F091         	movff	?___fltol,?__step_position_from_divide_position
 24769  011FFE  C061  F092         	movff	?___fltol+1,?__step_position_from_divide_position+1
 24770  012002  C062  F093         	movff	?___fltol+2,?__step_position_from_divide_position+2
 24771  012006  C063  F094         	movff	?___fltol+3,?__step_position_from_divide_position+3
 24772  01200A  0012               	return	
 24773  01200C                     __end_of__step_position_from_divide_position:
 24774                           	opt stack 0
 24775                           tblptru	equ	0xFF8
 24776                           tblptrh	equ	0xFF7
 24777                           tblptrl	equ	0xFF6
 24778                           tablat	equ	0xFF5
 24779                           prodh	equ	0xFF4
 24780                           prodl	equ	0xFF3
 24781                           intcon	equ	0xFF2
 24782                           postinc0	equ	0xFEE
 24783                           wreg	equ	0xFE8
 24784                           indf1	equ	0xFE7
 24785                           postinc1	equ	0xFE6
 24786                           postdec1	equ	0xFE5
 24787                           plusw1	equ	0xFE3
 24788                           fsr1h	equ	0xFE2
 24789                           fsr1l	equ	0xFE1
 24790                           indf2	equ	0xFDF
 24791                           postinc2	equ	0xFDE
 24792                           postdec2	equ	0xFDD
 24793                           plusw2	equ	0xFDB
 24794                           fsr2h	equ	0xFDA
 24795                           fsr2l	equ	0xFD9
 24796                           status	equ	0xFD8
 24797                           
 24798 ;; *************** function __encoder_next_divide_step_size *****************
 24799 ;; Defined at:
 24800 ;;		line 48 in file "encoder.c"
 24801 ;; Parameters:    Size  Location     Type
 24802 ;;  old_stepsize    1    wreg     unsigned char 
 24803 ;; Auto vars:     Size  Location     Type
 24804 ;;  old_stepsize    1    0[BANK0 ] unsigned char 
 24805 ;; Return value:  Size  Location     Type
 24806 ;;                  1    wreg      unsigned char 
 24807 ;; Registers used:
 24808 ;;		wreg, status,2, status,0
 24809 ;; Tracked objects:
 24810 ;;		On entry : 0/0
 24811 ;;		On exit  : 0/0
 24812 ;;		Unchanged: 0/0
 24813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24815 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24817 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24818 ;;Total ram usage:        1 bytes
 24819 ;; Hardware stack levels used:    1
 24820 ;; Hardware stack levels required when called:   10
 24821 ;; This function calls:
 24822 ;;		Nothing
 24823 ;; This function is called by:
 24824 ;;		__encoder_statemachine_divide
 24825 ;; This function uses a non-reentrant model
 24826 ;;
 24827                           
 24828                           	psect	text99
 24829  015F46                     __ptext99:
 24830                           	opt stack 0
 24831  015F46                     __encoder_next_divide_step_size:
 24832                           	opt stack 18
 24833                           
 24834                           ;incstack = 0
 24835                           ;__encoder_next_divide_step_size@old_stepsize stored from wreg
 24836  015F46  0100               	movlb	0	; () banked
 24837  015F48  6F60               	movwf	__encoder_next_divide_step_size@old_stepsize& (0+255),b
 24838                           
 24839                           ;encoder.c: 50: switch(old_stepsize)
 24840  015F4A  D008               	goto	l2739
 24841  015F4C                     
 24842                           ;encoder.c: 53: return 10;
 24843  015F4C  0E0A               	movlw	10
 24844  015F4E  0012               	return	
 24845  015F50                     
 24846                           ;encoder.c: 55: return 1;
 24847  015F50  0E01               	movlw	1
 24848  015F52  0012               	return	
 24849  015F54                     
 24850                           ;encoder.c: 57: return 100;
 24851  015F54  0E64               	movlw	100
 24852  015F56  0012               	return	
 24853  015F58                     
 24854                           ;encoder.c: 59: return 1;
 24855  015F58  0E01               	movlw	1
 24856                           
 24857                           ;encoder.c: 60: }
 24858  015F5A  0012               	return	
 24859  015F5C                     l2739:
 24860  015F5C  0100               	movlb	0	; () banked
 24861  015F5E  5160               	movf	__encoder_next_divide_step_size@old_stepsize& (0+255),w,b
 24862                           
 24863                           ; Switch size 1, requested type "space"
 24864                           ; Number of cases is 3, Range of values is 1 to 100
 24865                           ; switch strategies available:
 24866                           ; Name         Instructions Cycles
 24867                           ; simple_byte           10     6 (average)
 24868                           ;	Chosen strategy is simple_byte
 24869  015F60  0A01               	xorlw	1	; case 1
 24870  015F62  B4D8               	btfsc	status,2,c
 24871  015F64  D7F7               	goto	l2743
 24872  015F66  0A0B               	xorlw	11	; case 10
 24873  015F68  B4D8               	btfsc	status,2,c
 24874  015F6A  D7F2               	goto	l2742
 24875  015F6C  0A6E               	xorlw	110	; case 100
 24876  015F6E  B4D8               	btfsc	status,2,c
 24877  015F70  D7ED               	goto	l2740
 24878  015F72  D7F2               	goto	l2744
 24879  015F74                     __end_of__encoder_next_divide_step_size:
 24880                           	opt stack 0
 24881                           tblptru	equ	0xFF8
 24882                           tblptrh	equ	0xFF7
 24883                           tblptrl	equ	0xFF6
 24884                           tablat	equ	0xFF5
 24885                           prodh	equ	0xFF4
 24886                           prodl	equ	0xFF3
 24887                           intcon	equ	0xFF2
 24888                           postinc0	equ	0xFEE
 24889                           wreg	equ	0xFE8
 24890                           indf1	equ	0xFE7
 24891                           postinc1	equ	0xFE6
 24892                           postdec1	equ	0xFE5
 24893                           plusw1	equ	0xFE3
 24894                           fsr1h	equ	0xFE2
 24895                           fsr1l	equ	0xFE1
 24896                           indf2	equ	0xFDF
 24897                           postinc2	equ	0xFDE
 24898                           postdec2	equ	0xFDD
 24899                           plusw2	equ	0xFDB
 24900                           fsr2h	equ	0xFDA
 24901                           fsr2l	equ	0xFD9
 24902                           status	equ	0xFD8
 24903                           
 24904 ;; *************** function __divide_jump_size_increment *****************
 24905 ;; Defined at:
 24906 ;;		line 80 in file "encoder.c"
 24907 ;; Parameters:    Size  Location     Type
 24908 ;;		None
 24909 ;; Auto vars:     Size  Location     Type
 24910 ;;		None
 24911 ;; Return value:  Size  Location     Type
 24912 ;;                  1    wreg      void 
 24913 ;; Registers used:
 24914 ;;		wreg, status,2, status,0
 24915 ;; Tracked objects:
 24916 ;;		On entry : 0/0
 24917 ;;		On exit  : 0/0
 24918 ;;		Unchanged: 0/0
 24919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24922 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24923 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24924 ;;Total ram usage:        1 bytes
 24925 ;; Hardware stack levels used:    1
 24926 ;; Hardware stack levels required when called:   10
 24927 ;; This function calls:
 24928 ;;		Nothing
 24929 ;; This function is called by:
 24930 ;;		__encoder_statemachine_divide
 24931 ;; This function uses a non-reentrant model
 24932 ;;
 24933                           
 24934                           	psect	text100
 24935  015B3C                     __ptext100:
 24936                           	opt stack 0
 24937  015B3C                     __divide_jump_size_increment:
 24938                           	opt stack 18
 24939                           
 24940                           ;encoder.c: 82: ++os.divide_jump_size;
 24941                           
 24942                           ;incstack = 0
 24943  015B3C  0101               	movlb	1	; () banked
 24944  015B3E  4B7D               	infsnz	(_os+25)& (0+255),f,b	;volatile
 24945  015B40  2B7E               	incf	(_os+26)& (0+255),f,b	;volatile
 24946                           
 24947                           ; BSR set to: 1
 24948                           ;encoder.c: 83: if(os.divide_jump_size==0)
 24949  015B42  517D               	movf	(_os+25)& (0+255),w,b	;volatile
 24950  015B44  117E               	iorwf	(_os+26)& (0+255),w,b	;volatile
 24951  015B46  A4D8               	btfss	status,2,c
 24952  015B48  D004               	goto	l2758
 24953                           
 24954                           ; BSR set to: 1
 24955                           ;encoder.c: 84: os.divide_jump_size = 1;
 24956  015B4A  0E00               	movlw	0
 24957  015B4C  6F7E               	movwf	(_os+26)& (0+255),b	;volatile
 24958  015B4E  0E01               	movlw	1
 24959  015B50  6F7D               	movwf	(_os+25)& (0+255),b	;volatile
 24960  015B52                     l2758:
 24961                           
 24962                           ; BSR set to: 1
 24963                           ;encoder.c: 85: if(os.divide_jump_size>=os.division)
 24964                           
 24965                           ; BSR set to: 1
 24966  015B52  5178               	movf	(_os+20)& (0+255),w,b	;volatile
 24967  015B54  5D7D               	subwf	(_os+25)& (0+255),w,b	;volatile
 24968  015B56  517E               	movf	(_os+26)& (0+255),w,b	;volatile
 24969  015B58  0A80               	xorlw	128
 24970  015B5A  0100               	movlb	0	; () banked
 24971  015B5C  6F60               	movwf	??__divide_jump_size_increment& (0+255),b
 24972  015B5E  0101               	movlb	1	; () banked
 24973  015B60  5179               	movf	(_os+21)& (0+255),w,b	;volatile
 24974  015B62  0A80               	xorlw	128
 24975  015B64  0100               	movlb	0	; () banked
 24976  015B66  5960               	subwfb	??__divide_jump_size_increment& (0+255),w,b
 24977  015B68  A0D8               	btfss	status,0,c
 24978  015B6A  0012               	return	
 24979                           
 24980                           ; BSR set to: 0
 24981                           ;encoder.c: 86: os.divide_jump_size = os.division - 1;
 24982  015B6C  0EFF               	movlw	255
 24983  015B6E  0101               	movlb	1	; () banked
 24984  015B70  2578               	addwf	(_os+20)& (0+255),w,b	;volatile
 24985  015B72  6F7D               	movwf	(_os+25)& (0+255),b	;volatile
 24986  015B74  0EFF               	movlw	255
 24987  015B76  2179               	addwfc	(_os+21)& (0+255),w,b	;volatile
 24988  015B78  6F7E               	movwf	(_os+26)& (0+255),b	;volatile
 24989  015B7A  0012               	return	
 24990  015B7C                     __end_of__divide_jump_size_increment:
 24991                           	opt stack 0
 24992                           tblptru	equ	0xFF8
 24993                           tblptrh	equ	0xFF7
 24994                           tblptrl	equ	0xFF6
 24995                           tablat	equ	0xFF5
 24996                           prodh	equ	0xFF4
 24997                           prodl	equ	0xFF3
 24998                           intcon	equ	0xFF2
 24999                           postinc0	equ	0xFEE
 25000                           wreg	equ	0xFE8
 25001                           indf1	equ	0xFE7
 25002                           postinc1	equ	0xFE6
 25003                           postdec1	equ	0xFE5
 25004                           plusw1	equ	0xFE3
 25005                           fsr1h	equ	0xFE2
 25006                           fsr1l	equ	0xFE1
 25007                           indf2	equ	0xFDF
 25008                           postinc2	equ	0xFDE
 25009                           postdec2	equ	0xFDD
 25010                           plusw2	equ	0xFDB
 25011                           fsr2h	equ	0xFDA
 25012                           fsr2l	equ	0xFD9
 25013                           status	equ	0xFD8
 25014                           
 25015 ;; *************** function __divide_jump_size_decrement *****************
 25016 ;; Defined at:
 25017 ;;		line 89 in file "encoder.c"
 25018 ;; Parameters:    Size  Location     Type
 25019 ;;		None
 25020 ;; Auto vars:     Size  Location     Type
 25021 ;;		None
 25022 ;; Return value:  Size  Location     Type
 25023 ;;                  1    wreg      void 
 25024 ;; Registers used:
 25025 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25026 ;; Tracked objects:
 25027 ;;		On entry : 0/0
 25028 ;;		On exit  : 0/0
 25029 ;;		Unchanged: 0/0
 25030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25033 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25034 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25035 ;;Total ram usage:        3 bytes
 25036 ;; Hardware stack levels used:    1
 25037 ;; Hardware stack levels required when called:   10
 25038 ;; This function calls:
 25039 ;;		Nothing
 25040 ;; This function is called by:
 25041 ;;		__encoder_statemachine_divide
 25042 ;; This function uses a non-reentrant model
 25043 ;;
 25044                           
 25045                           	psect	text101
 25046  014ABE                     __ptext101:
 25047                           	opt stack 0
 25048  014ABE                     __divide_jump_size_decrement:
 25049                           	opt stack 18
 25050                           
 25051                           ;encoder.c: 91: --os.divide_jump_size;
 25052                           
 25053                           ;incstack = 0
 25054  014ABE  0101               	movlb	1	; () banked
 25055  014AC0  077D               	decf	(_os+25)& (0+255),f,b	;volatile
 25056  014AC2  A0D8               	btfss	status,0,c
 25057  014AC4  077E               	decf	(_os+26)& (0+255),f,b	;volatile
 25058                           
 25059                           ; BSR set to: 1
 25060                           ;encoder.c: 92: if(os.divide_jump_size==0)
 25061  014AC6  517D               	movf	(_os+25)& (0+255),w,b	;volatile
 25062  014AC8  117E               	iorwf	(_os+26)& (0+255),w,b	;volatile
 25063  014ACA  A4D8               	btfss	status,2,c
 25064  014ACC  D002               	goto	l2763
 25065                           
 25066                           ; BSR set to: 1
 25067                           ;encoder.c: 93: os.divide_jump_size = -1;
 25068  014ACE  697D               	setf	(_os+25)& (0+255),b	;volatile
 25069  014AD0  697E               	setf	(_os+26)& (0+255),b	;volatile
 25070  014AD2                     l2763:
 25071                           
 25072                           ; BSR set to: 1
 25073                           ;encoder.c: 94: if(os.divide_jump_size<=(-os.division))
 25074                           
 25075                           ; BSR set to: 1
 25076  014AD2  EE21  F078         	lfsr	2,_os+20	;volatile
 25077  014AD6  CFDE F060          	movff	postinc2,??__divide_jump_size_decrement
 25078  014ADA  CFDD F061          	movff	postdec2,??__divide_jump_size_decrement+1
 25079  014ADE  0100               	movlb	0	; () banked
 25080  014AE0  1F60               	comf	??__divide_jump_size_decrement& (0+255),f,b
 25081  014AE2  1F61               	comf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 25082  014AE4  4B60               	infsnz	??__divide_jump_size_decrement& (0+255),f,b
 25083  014AE6  2B61               	incf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 25084  014AE8  0101               	movlb	1	; () banked
 25085  014AEA  517D               	movf	(_os+25)& (0+255),w,b	;volatile
 25086  014AEC  0100               	movlb	0	; () banked
 25087  014AEE  5D60               	subwf	??__divide_jump_size_decrement& (0+255),w,b
 25088  014AF0  5161               	movf	(??__divide_jump_size_decrement+1)& (0+255),w,b
 25089  014AF2  0A80               	xorlw	128
 25090  014AF4  6F62               	movwf	(??__divide_jump_size_decrement+2)& (0+255),b
 25091  014AF6  0101               	movlb	1	; () banked
 25092  014AF8  517E               	movf	(_os+26)& (0+255),w,b	;volatile
 25093  014AFA  0A80               	xorlw	128
 25094  014AFC  0100               	movlb	0	; () banked
 25095  014AFE  5962               	subwfb	(??__divide_jump_size_decrement+2)& (0+255),w,b
 25096  014B00  A0D8               	btfss	status,0,c
 25097  014B02  0012               	return	
 25098                           
 25099                           ; BSR set to: 0
 25100                           ;encoder.c: 95: os.divide_jump_size = 1 - os.division;
 25101  014B04  EE21  F078         	lfsr	2,_os+20	;volatile
 25102  014B08  CFDE F060          	movff	postinc2,??__divide_jump_size_decrement
 25103  014B0C  CFDD F061          	movff	postdec2,??__divide_jump_size_decrement+1
 25104  014B10  1F60               	comf	??__divide_jump_size_decrement& (0+255),f,b
 25105  014B12  1F61               	comf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 25106  014B14  4B60               	infsnz	??__divide_jump_size_decrement& (0+255),f,b
 25107  014B16  2B61               	incf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 25108  014B18  0E01               	movlw	1
 25109  014B1A  2560               	addwf	??__divide_jump_size_decrement& (0+255),w,b
 25110  014B1C  0101               	movlb	1	; () banked
 25111  014B1E  6F7D               	movwf	(_os+25)& (0+255),b	;volatile
 25112  014B20  0E00               	movlw	0
 25113  014B22  0100               	movlb	0	; () banked
 25114  014B24  2161               	addwfc	(??__divide_jump_size_decrement+1)& (0+255),w,b
 25115  014B26  0101               	movlb	1	; () banked
 25116  014B28  6F7E               	movwf	(_os+26)& (0+255),b	;volatile
 25117  014B2A  0012               	return	
 25118  014B2C                     __end_of__divide_jump_size_decrement:
 25119                           	opt stack 0
 25120                           tblptru	equ	0xFF8
 25121                           tblptrh	equ	0xFF7
 25122                           tblptrl	equ	0xFF6
 25123                           tablat	equ	0xFF5
 25124                           prodh	equ	0xFF4
 25125                           prodl	equ	0xFF3
 25126                           intcon	equ	0xFF2
 25127                           postinc0	equ	0xFEE
 25128                           wreg	equ	0xFE8
 25129                           indf1	equ	0xFE7
 25130                           postinc1	equ	0xFE6
 25131                           postdec1	equ	0xFE5
 25132                           plusw1	equ	0xFE3
 25133                           fsr1h	equ	0xFE2
 25134                           fsr1l	equ	0xFE1
 25135                           indf2	equ	0xFDF
 25136                           postinc2	equ	0xFDE
 25137                           postdec2	equ	0xFDD
 25138                           plusw2	equ	0xFDB
 25139                           fsr2h	equ	0xFDA
 25140                           fsr2l	equ	0xFD9
 25141                           status	equ	0xFD8
 25142                           
 25143 ;; *************** function __encoder_statemachine_arc *****************
 25144 ;; Defined at:
 25145 ;;		line 446 in file "encoder.c"
 25146 ;; Parameters:    Size  Location     Type
 25147 ;;		None
 25148 ;; Auto vars:     Size  Location     Type
 25149 ;;		None
 25150 ;; Return value:  Size  Location     Type
 25151 ;;                  1    wreg      void 
 25152 ;; Registers used:
 25153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25154 ;; Tracked objects:
 25155 ;;		On entry : 0/0
 25156 ;;		On exit  : 0/0
 25157 ;;		Unchanged: 0/0
 25158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25161 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25162 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25163 ;;Total ram usage:        4 bytes
 25164 ;; Hardware stack levels used:    1
 25165 ;; Hardware stack levels required when called:   15
 25166 ;; This function calls:
 25167 ;;		__encoder_next_arc_step_size
 25168 ;;		_motor_arc_move
 25169 ;;		_motor_change_speed
 25170 ;;		_motor_stop
 25171 ;; This function is called by:
 25172 ;;		_encoder_statemachine
 25173 ;; This function uses a non-reentrant model
 25174 ;;
 25175                           
 25176                           	psect	text102
 25177  00E560                     __ptext102:
 25178                           	opt stack 0
 25179  00E560                     __encoder_statemachine_arc:
 25180                           	opt stack 14
 25181                           
 25182                           ;encoder.c: 448: switch(os.displayState & 0xF0)
 25183                           
 25184                           ;incstack = 0
 25185  00E560  D0F4               	goto	l2918
 25186  00E562                     
 25187                           ;encoder.c: 454: if(os.button1==1)
 25188  00E562  0101               	movlb	1	; () banked
 25189  00E564  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 25190  00E566  A4D8               	btfss	status,2,c
 25191  00E568  D002               	goto	l2922
 25192                           
 25193                           ; BSR set to: 1
 25194                           ;encoder.c: 455: {;encoder.c: 456: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 25195  00E56A  0E62               	movlw	98
 25196  00E56C  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 25197  00E56E                     l2922:
 25198                           
 25199                           ; BSR set to: 1
 25200                           ;encoder.c: 457: };encoder.c: 458: if(os.encoder1Count>0)
 25201                           
 25202                           ; BSR set to: 1
 25203  00E56E  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 25204  00E570  0A80               	xorlw	128
 25205  00E572  0F7F               	addlw	-129
 25206  00E574  A0D8               	btfss	status,0,c
 25207  00E576  D002               	goto	l2923
 25208                           
 25209                           ; BSR set to: 1
 25210                           ;encoder.c: 459: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
 25211  00E578  0E52               	movlw	82
 25212  00E57A  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 25213  00E57C                     l2923:
 25214                           
 25215                           ; BSR set to: 1
 25216                           ;encoder.c: 460: if(os.encoder1Count<0)
 25217                           
 25218                           ; BSR set to: 1
 25219  00E57C  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 25220  00E57E  D01B               	goto	l2925
 25221                           
 25222                           ; BSR set to: 1
 25223                           ;encoder.c: 461: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
 25224  00E580  0E52               	movlw	82
 25225  00E582  D00F               	goto	L7
 25226  00E584                     
 25227                           ; BSR set to: 1
 25228                           ;encoder.c: 464: if(os.button1==1)
 25229                           
 25230                           ; BSR set to: 1
 25231  00E584  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 25232  00E586  A4D8               	btfss	status,2,c
 25233  00E588  D002               	goto	l2927
 25234                           
 25235                           ; BSR set to: 1
 25236                           ;encoder.c: 465: os.displayState = DISPLAY_STATE_MAIN_ARC;
 25237  00E58A  0E03               	movlw	3
 25238  00E58C  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 25239  00E58E                     l2927:
 25240                           
 25241                           ; BSR set to: 1
 25242                           ;encoder.c: 466: if(os.encoder1Count>0)
 25243                           
 25244                           ; BSR set to: 1
 25245  00E58E  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 25246  00E590  0A80               	xorlw	128
 25247  00E592  0F7F               	addlw	-129
 25248  00E594  A0D8               	btfss	status,0,c
 25249  00E596  D002               	goto	l2928
 25250                           
 25251                           ; BSR set to: 1
 25252                           ;encoder.c: 467: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 25253  00E598  0E51               	movlw	81
 25254  00E59A  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 25255  00E59C                     l2928:
 25256                           
 25257                           ; BSR set to: 1
 25258                           ;encoder.c: 468: if(os.encoder1Count<0)
 25259                           
 25260                           ; BSR set to: 1
 25261  00E59C  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 25262  00E59E  D00B               	goto	l2925
 25263                           
 25264                           ; BSR set to: 1
 25265                           ;encoder.c: 469: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 25266  00E5A0  0E51               	movlw	81
 25267  00E5A2                     L7:
 25268  00E5A2  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 25269                           
 25270                           ; BSR set to: 1
 25271                           ;encoder.c: 471: }
 25272                           
 25273                           ; BSR set to: 1
 25274                           ;encoder.c: 470: break;
 25275  00E5A4  D008               	goto	l2925
 25276  00E5A6                     
 25277                           ; BSR set to: 1
 25278  00E5A6  0101               	movlb	1	; () banked
 25279  00E5A8  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 25280                           
 25281                           ; Switch size 1, requested type "space"
 25282                           ; Number of cases is 2, Range of values is 81 to 82
 25283                           ; switch strategies available:
 25284                           ; Name         Instructions Cycles
 25285                           ; simple_byte            7     4 (average)
 25286                           ;	Chosen strategy is simple_byte
 25287  00E5AA  0A51               	xorlw	81	; case 81
 25288  00E5AC  B4D8               	btfsc	status,2,c
 25289  00E5AE  D7D9               	goto	l2921
 25290  00E5B0  0A03               	xorlw	3	; case 82
 25291  00E5B2  B4D8               	btfsc	status,2,c
 25292  00E5B4  D7E7               	goto	l2926
 25293  00E5B6                     l2925:
 25294                           
 25295                           ; BSR set to: 1
 25296                           ;encoder.c: 472: if(os.button2==1)
 25297                           
 25298                           ; BSR set to: 1
 25299  00E5B6  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 25300  00E5B8  A4D8               	btfss	status,2,c
 25301  00E5BA  D00A               	goto	l2930
 25302                           
 25303                           ; BSR set to: 1
 25304                           ;encoder.c: 473: {;encoder.c: 474: os.arc_step_size = _encoder_next_arc_step_size(os.arc
      +                          _step_size);
 25305  00E5BC  C17F  F060         	movff	_os+27,__encoder_next_arc_step_size@old_stepsize	;volatile
 25306  00E5C0  C180  F061         	movff	_os+28,__encoder_next_arc_step_size@old_stepsize+1	;volatile
 25307  00E5C4  ECF0  F0A4         	call	__encoder_next_arc_step_size	;wreg free
 25308  00E5C8  C060  F17F         	movff	?__encoder_next_arc_step_size,_os+27	;volatile
 25309  00E5CC  C061  F180         	movff	?__encoder_next_arc_step_size+1,_os+28	;volatile
 25310  00E5D0                     l2930:
 25311                           
 25312                           ;encoder.c: 475: };encoder.c: 476: if(os.encoder2Count>0)
 25313  00E5D0  0101               	movlb	1	; () banked
 25314  00E5D2  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 25315  00E5D4  0A80               	xorlw	128
 25316  00E5D6  0F7F               	addlw	-129
 25317  00E5D8  A0D8               	btfss	status,0,c
 25318  00E5DA  D01C               	goto	l2932
 25319                           
 25320                           ; BSR set to: 1
 25321                           ;encoder.c: 477: {;encoder.c: 478: os.arc_size += os.arc_step_size;
 25322  00E5DC  517F               	movf	(_os+27)& (0+255),w,b	;volatile
 25323  00E5DE  2781               	addwf	(_os+29)& (0+255),f,b	;volatile
 25324  00E5E0  5180               	movf	(_os+28)& (0+255),w,b	;volatile
 25325  00E5E2  2382               	addwfc	(_os+30)& (0+255),f,b	;volatile
 25326  00E5E4  0E00               	movlw	0
 25327  00E5E6  2383               	addwfc	(_os+31)& (0+255),f,b	;volatile
 25328  00E5E8  0E00               	movlw	0
 25329  00E5EA  2384               	addwfc	(_os+32)& (0+255),f,b	;volatile
 25330                           
 25331                           ; BSR set to: 1
 25332                           ;encoder.c: 479: if(os.arc_size>100000)
 25333  00E5EC  BF84               	btfsc	(_os+32)& (0+255),7,b	;volatile
 25334  00E5EE  D012               	goto	l2932
 25335  00E5F0  5184               	movf	(_os+32)& (0+255),w,b	;volatile
 25336  00E5F2  E108               	bnz	u18200
 25337  00E5F4  0EA1               	movlw	161
 25338  00E5F6  5D81               	subwf	(_os+29)& (0+255),w,b	;volatile
 25339  00E5F8  0E86               	movlw	134
 25340  00E5FA  5982               	subwfb	(_os+30)& (0+255),w,b	;volatile
 25341  00E5FC  0E01               	movlw	1
 25342  00E5FE  5983               	subwfb	(_os+31)& (0+255),w,b	;volatile
 25343  00E600  A0D8               	btfss	status,0,c
 25344  00E602  D008               	goto	l2932
 25345  00E604                     u18200:
 25346                           
 25347                           ; BSR set to: 1
 25348                           ;encoder.c: 480: os.arc_size = 100000;
 25349  00E604  0EA0               	movlw	160
 25350  00E606  6F81               	movwf	(_os+29)& (0+255),b	;volatile
 25351  00E608  0E86               	movlw	134
 25352  00E60A  6F82               	movwf	(_os+30)& (0+255),b	;volatile
 25353  00E60C  0E01               	movlw	1
 25354  00E60E  6F83               	movwf	(_os+31)& (0+255),b	;volatile
 25355  00E610  0E00               	movlw	0
 25356  00E612  6F84               	movwf	(_os+32)& (0+255),b	;volatile
 25357  00E614                     l2932:
 25358                           
 25359                           ; BSR set to: 1
 25360                           ;encoder.c: 481: };encoder.c: 482: if(os.encoder2Count<0)
 25361                           
 25362                           ; BSR set to: 1
 25363                           
 25364                           ; BSR set to: 1
 25365  00E614  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 25366  00E616  0012               	return	
 25367                           
 25368                           ; BSR set to: 1
 25369                           ;encoder.c: 483: {;encoder.c: 484: os.arc_size -= os.arc_step_size;
 25370  00E618  517F               	movf	(_os+27)& (0+255),w,b	;volatile
 25371  00E61A  0100               	movlb	0	; () banked
 25372  00E61C  6F99               	movwf	??__encoder_statemachine_arc& (0+255),b
 25373  00E61E  0101               	movlb	1	; () banked
 25374  00E620  5180               	movf	(_os+28)& (0+255),w,b	;volatile
 25375  00E622  0100               	movlb	0	; () banked
 25376  00E624  6F9A               	movwf	(??__encoder_statemachine_arc+1)& (0+255),b
 25377  00E626  6B9B               	clrf	(??__encoder_statemachine_arc+2)& (0+255),b
 25378  00E628  6B9C               	clrf	(??__encoder_statemachine_arc+3)& (0+255),b
 25379  00E62A  5199               	movf	??__encoder_statemachine_arc& (0+255),w,b
 25380  00E62C  0101               	movlb	1	; () banked
 25381  00E62E  5F81               	subwf	(_os+29)& (0+255),f,b	;volatile
 25382  00E630  0100               	movlb	0	; () banked
 25383  00E632  519A               	movf	(??__encoder_statemachine_arc+1)& (0+255),w,b
 25384  00E634  0101               	movlb	1	; () banked
 25385  00E636  5B82               	subwfb	(_os+30)& (0+255),f,b	;volatile
 25386  00E638  0100               	movlb	0	; () banked
 25387  00E63A  519B               	movf	(??__encoder_statemachine_arc+2)& (0+255),w,b
 25388  00E63C  0101               	movlb	1	; () banked
 25389  00E63E  5B83               	subwfb	(_os+31)& (0+255),f,b	;volatile
 25390  00E640  0100               	movlb	0	; () banked
 25391  00E642  519C               	movf	(??__encoder_statemachine_arc+3)& (0+255),w,b
 25392  00E644  0101               	movlb	1	; () banked
 25393  00E646  5B84               	subwfb	(_os+32)& (0+255),f,b	;volatile
 25394                           
 25395                           ;encoder.c: 485: if(os.arc_size<1)
 25396  00E648  BF84               	btfsc	(_os+32)& (0+255),7,b	;volatile
 25397  00E64A  D007               	goto	u18220
 25398  00E64C  5184               	movf	(_os+32)& (0+255),w,b	;volatile
 25399  00E64E  1183               	iorwf	(_os+31)& (0+255),w,b	;volatile
 25400  00E650  1182               	iorwf	(_os+30)& (0+255),w,b	;volatile
 25401  00E652  E102               	bnz	u18221
 25402  00E654  0581               	decf	(_os+29)& (0+255),w,b	;volatile
 25403  00E656  B0D8               	btfsc	status,0,c
 25404  00E658                     u18221:
 25405  00E658  0012               	return	
 25406  00E65A                     u18220:
 25407                           
 25408                           ; BSR set to: 1
 25409                           ;encoder.c: 486: os.arc_size = 1;
 25410  00E65A  0E01               	movlw	1
 25411  00E65C  6F81               	movwf	(_os+29)& (0+255),b	;volatile
 25412  00E65E  0E00               	movlw	0
 25413  00E660  6F82               	movwf	(_os+30)& (0+255),b	;volatile
 25414  00E662  0E00               	movlw	0
 25415  00E664  6F83               	movwf	(_os+31)& (0+255),b	;volatile
 25416  00E666  0E00               	movlw	0
 25417  00E668  6F84               	movwf	(_os+32)& (0+255),b	;volatile
 25418                           
 25419                           ; BSR set to: 1
 25420                           ;encoder.c: 487: };encoder.c: 488: break;
 25421                           
 25422                           ; BSR set to: 1
 25423  00E66A  0012               	return	
 25424  00E66C                     
 25425                           ;encoder.c: 491: if(os.encoder1Count>0)
 25426                           
 25427                           ; BSR set to: 1
 25428  00E66C  0101               	movlb	1	; () banked
 25429  00E66E  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 25430  00E670  0A80               	xorlw	128
 25431  00E672  0F7F               	addlw	-129
 25432  00E674  A0D8               	btfss	status,0,c
 25433  00E676  D011               	goto	l2939
 25434                           
 25435                           ; BSR set to: 1
 25436                           ;encoder.c: 492: {;encoder.c: 493: if(os.arc_speed<config.maximum_speed_arc)
 25437  00E678  51A4               	movf	(_config+15)& (0+255),w,b
 25438  00E67A  5D85               	subwf	(_os+33)& (0+255),w,b	;volatile
 25439  00E67C  51A5               	movf	(_config+16)& (0+255),w,b
 25440  00E67E  5986               	subwfb	(_os+34)& (0+255),w,b	;volatile
 25441  00E680  B0D8               	btfsc	status,0,c
 25442  00E682  D002               	goto	l2938
 25443                           
 25444                           ; BSR set to: 1
 25445                           ;encoder.c: 494: ++os.arc_speed;
 25446  00E684  4B85               	infsnz	(_os+33)& (0+255),f,b	;volatile
 25447  00E686  2B86               	incf	(_os+34)& (0+255),f,b	;volatile
 25448  00E688                     l2938:
 25449                           
 25450                           ; BSR set to: 1
 25451                           ;encoder.c: 495: if(os.busy)
 25452                           
 25453                           ; BSR set to: 1
 25454  00E688  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 25455  00E68A  B4D8               	btfsc	status,2,c
 25456  00E68C  D006               	goto	l2939
 25457                           
 25458                           ; BSR set to: 1
 25459                           ;encoder.c: 496: motor_change_speed(os.arc_speed);
 25460  00E68E  C185  F060         	movff	_os+33,motor_change_speed@new_speed	;volatile
 25461  00E692  C186  F061         	movff	_os+34,motor_change_speed@new_speed+1	;volatile
 25462  00E696  EC40  F0B2         	call	_motor_change_speed	;wreg free
 25463  00E69A                     l2939:
 25464                           
 25465                           ;encoder.c: 497: };encoder.c: 498: if(os.encoder1Count<0)
 25466  00E69A  0101               	movlb	1	; () banked
 25467  00E69C  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 25468  00E69E  D049               	goto	l2943
 25469                           
 25470                           ; BSR set to: 1
 25471                           ;encoder.c: 499: {;encoder.c: 500: if(os.arc_speed>config.minimum_speed)
 25472  00E6A0  5185               	movf	(_os+33)& (0+255),w,b	;volatile
 25473  00E6A2  5D9E               	subwf	(_config+9)& (0+255),w,b
 25474  00E6A4  5186               	movf	(_os+34)& (0+255),w,b	;volatile
 25475  00E6A6  599F               	subwfb	(_config+10)& (0+255),w,b
 25476  00E6A8  B0D8               	btfsc	status,0,c
 25477  00E6AA  D003               	goto	l2941
 25478                           
 25479                           ; BSR set to: 1
 25480                           ;encoder.c: 501: --os.arc_speed;
 25481  00E6AC  0785               	decf	(_os+33)& (0+255),f,b	;volatile
 25482  00E6AE  A0D8               	btfss	status,0,c
 25483  00E6B0  0786               	decf	(_os+34)& (0+255),f,b	;volatile
 25484  00E6B2                     l2941:
 25485                           
 25486                           ; BSR set to: 1
 25487                           ;encoder.c: 502: if(os.busy)
 25488                           
 25489                           ; BSR set to: 1
 25490  00E6B2  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 25491  00E6B4  B4D8               	btfsc	status,2,c
 25492  00E6B6  D03D               	goto	l2943
 25493                           
 25494                           ; BSR set to: 1
 25495                           ;encoder.c: 503: motor_change_speed(os.arc_speed);
 25496  00E6B8  C185  F060         	movff	_os+33,motor_change_speed@new_speed	;volatile
 25497  00E6BC  C186  F061         	movff	_os+34,motor_change_speed@new_speed+1	;volatile
 25498  00E6C0  EC40  F0B2         	call	_motor_change_speed	;wreg free
 25499                           
 25500                           ;encoder.c: 504: };encoder.c: 505: switch(os.displayState)
 25501  00E6C4  D036               	goto	l2943
 25502  00E6C6                     
 25503                           ;encoder.c: 508: if(os.button2==1)
 25504  00E6C6  0101               	movlb	1	; () banked
 25505  00E6C8  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 25506  00E6CA  A4D8               	btfss	status,2,c
 25507  00E6CC  D006               	goto	l2945
 25508                           
 25509                           ; BSR set to: 1
 25510                           ;encoder.c: 509: {;encoder.c: 510: motor_arc_move(MOTOR_DIRECTION_CCW);
 25511  00E6CE  0EFF               	movlw	255
 25512  00E6D0  ECD6  F091         	call	_motor_arc_move
 25513                           
 25514                           ;encoder.c: 511: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 25515  00E6D4  0E62               	movlw	98
 25516  00E6D6  0101               	movlb	1	; () banked
 25517  00E6D8  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 25518  00E6DA                     l2945:
 25519                           
 25520                           ; BSR set to: 1
 25521                           ;encoder.c: 512: };encoder.c: 513: if(os.encoder2Count>0)
 25522                           
 25523                           ; BSR set to: 1
 25524  00E6DA  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 25525  00E6DC  0A80               	xorlw	128
 25526  00E6DE  0F7F               	addlw	-129
 25527  00E6E0  A0D8               	btfss	status,0,c
 25528  00E6E2  0012               	return	
 25529                           
 25530                           ; BSR set to: 1
 25531                           ;encoder.c: 514: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 25532  00E6E4  0E62               	movlw	98
 25533  00E6E6  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 25534                           
 25535                           ; BSR set to: 1
 25536                           ;encoder.c: 515: break;
 25537  00E6E8  0012               	return	
 25538  00E6EA                     
 25539                           ; BSR set to: 1
 25540                           ;encoder.c: 517: if(os.button2==1)
 25541                           
 25542                           ; BSR set to: 1
 25543  00E6EA  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 25544  00E6EC  A4D8               	btfss	status,2,c
 25545  00E6EE  D007               	goto	l2949
 25546                           
 25547                           ; BSR set to: 1
 25548                           ;encoder.c: 518: {;encoder.c: 519: if(os.busy)
 25549  00E6F0  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 25550  00E6F2  A4D8               	btfss	status,2,c
 25551                           
 25552                           ; BSR set to: 1
 25553                           ;encoder.c: 520: motor_stop();
 25554  00E6F4  ECA4  F0AB         	call	_motor_stop	;wreg free
 25555                           
 25556                           ;encoder.c: 521: os.displayState = DISPLAY_STATE_MAIN_ARC;
 25557  00E6F8  0E03               	movlw	3
 25558  00E6FA  0101               	movlb	1	; () banked
 25559  00E6FC  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 25560  00E6FE                     l2949:
 25561                           
 25562                           ; BSR set to: 1
 25563                           ;encoder.c: 522: };encoder.c: 523: if(os.encoder2Count>0)
 25564                           
 25565                           ; BSR set to: 1
 25566  00E6FE  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 25567  00E700  0A80               	xorlw	128
 25568  00E702  0F7F               	addlw	-129
 25569  00E704  A0D8               	btfss	status,0,c
 25570  00E706  D002               	goto	l2951
 25571                           
 25572                           ; BSR set to: 1
 25573                           ;encoder.c: 524: os.displayState = DISPLAY_STATE_ARC2_CW;
 25574  00E708  0E63               	movlw	99
 25575  00E70A  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 25576  00E70C                     l2951:
 25577                           
 25578                           ; BSR set to: 1
 25579                           ;encoder.c: 525: if(os.encoder2Count<0)
 25580                           
 25581                           ; BSR set to: 1
 25582  00E70C  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 25583  00E70E  0012               	return	
 25584                           
 25585                           ; BSR set to: 1
 25586                           ;encoder.c: 526: os.displayState = DISPLAY_STATE_ARC2_CCW;
 25587  00E710  0E61               	movlw	97
 25588  00E712  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 25589                           
 25590                           ; BSR set to: 1
 25591                           ;encoder.c: 527: break;
 25592  00E714  0012               	return	
 25593  00E716                     
 25594                           ; BSR set to: 1
 25595                           ;encoder.c: 529: if(os.button2==1)
 25596                           
 25597                           ; BSR set to: 1
 25598  00E716  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 25599  00E718  A4D8               	btfss	status,2,c
 25600  00E71A  D006               	goto	l2954
 25601                           
 25602                           ; BSR set to: 1
 25603                           ;encoder.c: 530: {;encoder.c: 531: motor_arc_move(MOTOR_DIRECTION_CW);
 25604  00E71C  0E01               	movlw	1
 25605  00E71E  ECD6  F091         	call	_motor_arc_move
 25606                           
 25607                           ;encoder.c: 532: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 25608  00E722  0E62               	movlw	98
 25609  00E724  0101               	movlb	1	; () banked
 25610  00E726  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 25611  00E728                     l2954:
 25612                           
 25613                           ; BSR set to: 1
 25614                           ;encoder.c: 533: };encoder.c: 534: if(os.encoder2Count<0)
 25615                           
 25616                           ; BSR set to: 1
 25617  00E728  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 25618  00E72A  0012               	return	
 25619                           
 25620                           ; BSR set to: 1
 25621                           ;encoder.c: 535: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 25622  00E72C  0E62               	movlw	98
 25623  00E72E  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 25624                           
 25625                           ; BSR set to: 1
 25626                           ;encoder.c: 537: }
 25627                           
 25628                           ; BSR set to: 1
 25629                           ;encoder.c: 536: break;
 25630  00E730  0012               	return	
 25631  00E732                     l2943:
 25632                           
 25633                           ; BSR set to: 1
 25634  00E732  0101               	movlb	1	; () banked
 25635  00E734  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 25636                           
 25637                           ; Switch size 1, requested type "space"
 25638                           ; Number of cases is 3, Range of values is 97 to 99
 25639                           ; switch strategies available:
 25640                           ; Name         Instructions Cycles
 25641                           ; simple_byte           10     6 (average)
 25642                           ;	Chosen strategy is simple_byte
 25643  00E736  0A61               	xorlw	97	; case 97
 25644  00E738  B4D8               	btfsc	status,2,c
 25645  00E73A  D7C5               	goto	l2944
 25646  00E73C  0A03               	xorlw	3	; case 98
 25647  00E73E  B4D8               	btfsc	status,2,c
 25648  00E740  D7D4               	goto	l2948
 25649  00E742  0A01               	xorlw	1	; case 99
 25650  00E744  A4D8               	btfss	status,2,c
 25651                           
 25652                           ; BSR set to: 1
 25653                           ;encoder.c: 539: }
 25654                           
 25655                           ; BSR set to: 1
 25656                           ;encoder.c: 538: break;
 25657  00E746  0012               	return	
 25658  00E748  D7E6               	goto	l2953
 25659  00E74A                     l2918:
 25660                           
 25661                           ; BSR set to: 1
 25662  00E74A  0101               	movlb	1	; () banked
 25663  00E74C  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 25664  00E74E  0BF0               	andlw	240
 25665  00E750  0100               	movlb	0	; () banked
 25666  00E752  6F99               	movwf	??__encoder_statemachine_arc& (0+255),b
 25667  00E754  6B9A               	clrf	(??__encoder_statemachine_arc+1)& (0+255),b
 25668                           
 25669                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25670                           ; Switch size 1, requested type "space"
 25671                           ; Number of cases is 1, Range of values is 0 to 0
 25672                           ; switch strategies available:
 25673                           ; Name         Instructions Cycles
 25674                           ; simple_byte            4     3 (average)
 25675                           ;	Chosen strategy is simple_byte
 25676  00E756  519A               	movf	(??__encoder_statemachine_arc+1)& (0+255),w,b
 25677  00E758  0A00               	xorlw	0	; case 0
 25678  00E75A  A4D8               	btfss	status,2,c
 25679  00E75C  0012               	return	
 25680                           
 25681                           ; BSR set to: 0
 25682                           ; Switch size 1, requested type "space"
 25683                           ; Number of cases is 2, Range of values is 80 to 96
 25684                           ; switch strategies available:
 25685                           ; Name         Instructions Cycles
 25686                           ; simple_byte            7     4 (average)
 25687                           ;	Chosen strategy is simple_byte
 25688  00E75E  5199               	movf	??__encoder_statemachine_arc& (0+255),w,b
 25689  00E760  0A50               	xorlw	80	; case 80
 25690  00E762  B4D8               	btfsc	status,2,c
 25691  00E764  D720               	goto	l2920
 25692  00E766  0A30               	xorlw	48	; case 96
 25693  00E768  A4D8               	btfss	status,2,c
 25694  00E76A  0012               	return	
 25695  00E76C  D77F               	goto	l2936
 25696  00E76E                     __end_of__encoder_statemachine_arc:
 25697                           	opt stack 0
 25698                           tblptru	equ	0xFF8
 25699                           tblptrh	equ	0xFF7
 25700                           tblptrl	equ	0xFF6
 25701                           tablat	equ	0xFF5
 25702                           prodh	equ	0xFF4
 25703                           prodl	equ	0xFF3
 25704                           intcon	equ	0xFF2
 25705                           postinc0	equ	0xFEE
 25706                           wreg	equ	0xFE8
 25707                           indf1	equ	0xFE7
 25708                           postinc1	equ	0xFE6
 25709                           postdec1	equ	0xFE5
 25710                           plusw1	equ	0xFE3
 25711                           fsr1h	equ	0xFE2
 25712                           fsr1l	equ	0xFE1
 25713                           indf2	equ	0xFDF
 25714                           postinc2	equ	0xFDE
 25715                           postdec2	equ	0xFDD
 25716                           plusw2	equ	0xFDB
 25717                           fsr2h	equ	0xFDA
 25718                           fsr2l	equ	0xFD9
 25719                           status	equ	0xFD8
 25720                           
 25721 ;; *************** function _motor_arc_move *****************
 25722 ;; Defined at:
 25723 ;;		line 964 in file "motor.c"
 25724 ;; Parameters:    Size  Location     Type
 25725 ;;  direction       1    wreg     enum E6622
 25726 ;; Auto vars:     Size  Location     Type
 25727 ;;  direction       1   52[BANK0 ] enum E6622
 25728 ;;  arc_in_steps    4   53[BANK0 ] float 
 25729 ;; Return value:  Size  Location     Type
 25730 ;;                  1    wreg      void 
 25731 ;; Registers used:
 25732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25733 ;; Tracked objects:
 25734 ;;		On entry : 0/0
 25735 ;;		On exit  : 0/0
 25736 ;;		Unchanged: 0/0
 25737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25739 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25741 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25742 ;;Total ram usage:        5 bytes
 25743 ;; Hardware stack levels used:    1
 25744 ;; Hardware stack levels required when called:   14
 25745 ;; This function calls:
 25746 ;;		___fldiv
 25747 ;;		___flmul
 25748 ;;		___fltol
 25749 ;;		___xxtofl
 25750 ;;		_motor_move_steps
 25751 ;; This function is called by:
 25752 ;;		__encoder_statemachine_arc
 25753 ;; This function uses a non-reentrant model
 25754 ;;
 25755                           
 25756                           	psect	text103
 25757  0123AC                     __ptext103:
 25758                           	opt stack 0
 25759  0123AC                     _motor_arc_move:
 25760                           	opt stack 14
 25761                           
 25762                           ;incstack = 0
 25763                           ;motor_arc_move@direction stored from wreg
 25764  0123AC  0100               	movlb	0	; () banked
 25765  0123AE  6F94               	movwf	motor_arc_move@direction& (0+255),b
 25766                           
 25767                           ;motor.c: 966: float arc_in_steps;;motor.c: 969: arc_in_steps = (float) os.arc_size;
 25768  0123B0  C181  F06A         	movff	_os+29,___xxtofl@val	;volatile
 25769  0123B4  C182  F06B         	movff	_os+30,___xxtofl@val+1	;volatile
 25770  0123B8  C183  F06C         	movff	_os+31,___xxtofl@val+2	;volatile
 25771  0123BC  C184  F06D         	movff	_os+32,___xxtofl@val+3	;volatile
 25772  0123C0  0E01               	movlw	1
 25773  0123C2  EC91  F082         	call	___xxtofl
 25774  0123C6  C06A  F095         	movff	?___xxtofl,motor_arc_move@arc_in_steps
 25775  0123CA  C06B  F096         	movff	?___xxtofl+1,motor_arc_move@arc_in_steps+1
 25776  0123CE  C06C  F097         	movff	?___xxtofl+2,motor_arc_move@arc_in_steps+2
 25777  0123D2  C06D  F098         	movff	?___xxtofl+3,motor_arc_move@arc_in_steps+3
 25778                           
 25779                           ;motor.c: 970: arc_in_steps *= (float) config.full_circle_in_steps;
 25780  0123D6  C095  F078         	movff	motor_arc_move@arc_in_steps,___flmul@b
 25781  0123DA  C096  F079         	movff	motor_arc_move@arc_in_steps+1,___flmul@b+1
 25782  0123DE  C097  F07A         	movff	motor_arc_move@arc_in_steps+2,___flmul@b+2
 25783  0123E2  C098  F07B         	movff	motor_arc_move@arc_in_steps+3,___flmul@b+3
 25784  0123E6  C195  F06A         	movff	_config,___xxtofl@val
 25785  0123EA  C196  F06B         	movff	_config+1,___xxtofl@val+1
 25786  0123EE  C197  F06C         	movff	_config+2,___xxtofl@val+2
 25787  0123F2  C198  F06D         	movff	_config+3,___xxtofl@val+3
 25788  0123F6  0E00               	movlw	0
 25789  0123F8  EC91  F082         	call	___xxtofl
 25790  0123FC  C06A  F07C         	movff	?___xxtofl,___flmul@a
 25791  012400  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 25792  012404  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 25793  012408  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 25794  01240C  EC2B  F063         	call	___flmul	;wreg free
 25795  012410  C078  F095         	movff	?___flmul,motor_arc_move@arc_in_steps
 25796  012414  C079  F096         	movff	?___flmul+1,motor_arc_move@arc_in_steps+1
 25797  012418  C07A  F097         	movff	?___flmul+2,motor_arc_move@arc_in_steps+2
 25798  01241C  C07B  F098         	movff	?___flmul+3,motor_arc_move@arc_in_steps+3
 25799                           
 25800                           ;motor.c: 971: arc_in_steps /= (float) 36000.0;
 25801  012420  C095  F078         	movff	motor_arc_move@arc_in_steps,___fldiv@b
 25802  012424  C096  F079         	movff	motor_arc_move@arc_in_steps+1,___fldiv@b+1
 25803  012428  C097  F07A         	movff	motor_arc_move@arc_in_steps+2,___fldiv@b+2
 25804  01242C  C098  F07B         	movff	motor_arc_move@arc_in_steps+3,___fldiv@b+3
 25805  012430  0E00               	movlw	0
 25806  012432  0100               	movlb	0	; () banked
 25807  012434  6F7C               	movwf	___fldiv@a& (0+255),b
 25808  012436  0EA0               	movlw	160
 25809  012438  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 25810  01243A  0E0C               	movlw	12
 25811  01243C  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 25812  01243E  0E47               	movlw	71
 25813  012440  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 25814  012442  EC53  F069         	call	___fldiv	;wreg free
 25815  012446  C078  F095         	movff	?___fldiv,motor_arc_move@arc_in_steps
 25816  01244A  C079  F096         	movff	?___fldiv+1,motor_arc_move@arc_in_steps+1
 25817  01244E  C07A  F097         	movff	?___fldiv+2,motor_arc_move@arc_in_steps+2
 25818  012452  C07B  F098         	movff	?___fldiv+3,motor_arc_move@arc_in_steps+3
 25819                           
 25820                           ;motor.c: 974: motor_move_steps(direction, (uint32_t) arc_in_steps, os.arc_speed, MOTOR_
      +                          OVERSHOOT_NO_OVERSHOOT);
 25821  012456  C095  F060         	movff	motor_arc_move@arc_in_steps,___fltol@f1
 25822  01245A  C096  F061         	movff	motor_arc_move@arc_in_steps+1,___fltol@f1+1
 25823  01245E  C097  F062         	movff	motor_arc_move@arc_in_steps+2,___fltol@f1+2
 25824  012462  C098  F063         	movff	motor_arc_move@arc_in_steps+3,___fltol@f1+3
 25825  012466  ECEA  F094         	call	___fltol	;wreg free
 25826  01246A  C060  F08C         	movff	?___fltol,motor_move_steps@distance
 25827  01246E  C061  F08D         	movff	?___fltol+1,motor_move_steps@distance+1
 25828  012472  C062  F08E         	movff	?___fltol+2,motor_move_steps@distance+2
 25829  012476  C063  F08F         	movff	?___fltol+3,motor_move_steps@distance+3
 25830  01247A  C185  F090         	movff	_os+33,motor_move_steps@speed	;volatile
 25831  01247E  C186  F091         	movff	_os+34,motor_move_steps@speed+1	;volatile
 25832  012482  0E01               	movlw	1
 25833  012484  0100               	movlb	0	; () banked
 25834  012486  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 25835  012488  5194               	movf	motor_arc_move@direction& (0+255),w,b
 25836  01248A  ECE8  F0AF         	call	_motor_move_steps
 25837  01248E  0012               	return		;funcret
 25838  012490                     __end_of_motor_arc_move:
 25839                           	opt stack 0
 25840                           tblptru	equ	0xFF8
 25841                           tblptrh	equ	0xFF7
 25842                           tblptrl	equ	0xFF6
 25843                           tablat	equ	0xFF5
 25844                           prodh	equ	0xFF4
 25845                           prodl	equ	0xFF3
 25846                           intcon	equ	0xFF2
 25847                           postinc0	equ	0xFEE
 25848                           wreg	equ	0xFE8
 25849                           indf1	equ	0xFE7
 25850                           postinc1	equ	0xFE6
 25851                           postdec1	equ	0xFE5
 25852                           plusw1	equ	0xFE3
 25853                           fsr1h	equ	0xFE2
 25854                           fsr1l	equ	0xFE1
 25855                           indf2	equ	0xFDF
 25856                           postinc2	equ	0xFDE
 25857                           postdec2	equ	0xFDD
 25858                           plusw2	equ	0xFDB
 25859                           fsr2h	equ	0xFDA
 25860                           fsr2l	equ	0xFD9
 25861                           status	equ	0xFD8
 25862                           
 25863 ;; *************** function __encoder_next_arc_step_size *****************
 25864 ;; Defined at:
 25865 ;;		line 63 in file "encoder.c"
 25866 ;; Parameters:    Size  Location     Type
 25867 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 25868 ;; Auto vars:     Size  Location     Type
 25869 ;;		None
 25870 ;; Return value:  Size  Location     Type
 25871 ;;                  2    0[BANK0 ] unsigned int 
 25872 ;; Registers used:
 25873 ;;		wreg, status,2, status,0
 25874 ;; Tracked objects:
 25875 ;;		On entry : 0/0
 25876 ;;		On exit  : 0/0
 25877 ;;		Unchanged: 0/0
 25878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25879 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25881 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25882 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25883 ;;Total ram usage:        4 bytes
 25884 ;; Hardware stack levels used:    1
 25885 ;; Hardware stack levels required when called:   10
 25886 ;; This function calls:
 25887 ;;		Nothing
 25888 ;; This function is called by:
 25889 ;;		__encoder_statemachine_arc
 25890 ;; This function uses a non-reentrant model
 25891 ;;
 25892                           
 25893                           	psect	text104
 25894  0149E0                     __ptext104:
 25895                           	opt stack 0
 25896  0149E0                     __encoder_next_arc_step_size:
 25897                           	opt stack 18
 25898                           
 25899                           ;encoder.c: 65: switch(old_stepsize)
 25900                           
 25901                           ;incstack = 0
 25902  0149E0  D01A               	goto	l2748
 25903  0149E2                     
 25904                           ;encoder.c: 68: return 100;
 25905  0149E2  0E00               	movlw	0
 25906  0149E4  0100               	movlb	0	; () banked
 25907  0149E6  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 25908  0149E8  0E64               	movlw	100
 25909  0149EA  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 25910                           
 25911                           ; BSR set to: 0
 25912  0149EC  0012               	return	
 25913  0149EE                     
 25914                           ; BSR set to: 0
 25915                           ;encoder.c: 70: return 10;
 25916                           
 25917                           ; BSR set to: 0
 25918  0149EE  0E00               	movlw	0
 25919  0149F0  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 25920  0149F2  0E0A               	movlw	10
 25921  0149F4  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 25922                           
 25923                           ; BSR set to: 0
 25924  0149F6  0012               	return	
 25925  0149F8                     
 25926                           ; BSR set to: 0
 25927                           ;encoder.c: 72: return 1;
 25928                           
 25929                           ; BSR set to: 0
 25930  0149F8  0E00               	movlw	0
 25931  0149FA  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 25932  0149FC  0E01               	movlw	1
 25933  0149FE  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 25934                           
 25935                           ; BSR set to: 0
 25936  014A00  0012               	return	
 25937  014A02                     
 25938                           ; BSR set to: 0
 25939                           ;encoder.c: 74: return 1000;
 25940                           
 25941                           ; BSR set to: 0
 25942  014A02  0E03               	movlw	3
 25943  014A04  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 25944  014A06  0EE8               	movlw	232
 25945  014A08  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 25946                           
 25947                           ; BSR set to: 0
 25948  014A0A  0012               	return	
 25949  014A0C                     
 25950                           ; BSR set to: 0
 25951                           ;encoder.c: 76: return 100;
 25952                           
 25953                           ; BSR set to: 0
 25954  014A0C  0E00               	movlw	0
 25955  014A0E  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 25956  014A10  0E64               	movlw	100
 25957  014A12  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 25958                           
 25959                           ; BSR set to: 0
 25960                           ;encoder.c: 77: }
 25961                           
 25962                           ; BSR set to: 0
 25963  014A14  0012               	return	
 25964  014A16                     l2748:
 25965                           
 25966                           ; BSR set to: 0
 25967  014A16  C060  F062         	movff	__encoder_next_arc_step_size@old_stepsize,??__encoder_next_arc_step_size
 25968  014A1A  C061  F063         	movff	__encoder_next_arc_step_size@old_stepsize+1,??__encoder_next_arc_step_size+1
 25969                           
 25970                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 25971                           ; Switch size 1, requested type "space"
 25972                           ; Number of cases is 2, Range of values is 0 to 3
 25973                           ; switch strategies available:
 25974                           ; Name         Instructions Cycles
 25975                           ; simple_byte            7     4 (average)
 25976                           ;	Chosen strategy is simple_byte
 25977  014A1E  0100               	movlb	0	; () banked
 25978  014A20  5163               	movf	(??__encoder_next_arc_step_size+1)& (0+255),w,b
 25979  014A22  0A00               	xorlw	0	; case 0
 25980  014A24  B4D8               	btfsc	status,2,c
 25981  014A26  D004               	goto	l20717
 25982  014A28  0A03               	xorlw	3	; case 3
 25983  014A2A  B4D8               	btfsc	status,2,c
 25984  014A2C  D00C               	goto	l20719
 25985  014A2E  D7EE               	goto	l2754
 25986  014A30                     l20717:
 25987                           
 25988                           ; BSR set to: 0
 25989                           ; Switch size 1, requested type "space"
 25990                           ; Number of cases is 3, Range of values is 1 to 100
 25991                           ; switch strategies available:
 25992                           ; Name         Instructions Cycles
 25993                           ; simple_byte           10     6 (average)
 25994                           ;	Chosen strategy is simple_byte
 25995  014A30  5162               	movf	??__encoder_next_arc_step_size& (0+255),w,b
 25996  014A32  0A01               	xorlw	1	; case 1
 25997  014A34  B4D8               	btfsc	status,2,c
 25998  014A36  D7E5               	goto	l2753
 25999  014A38  0A0B               	xorlw	11	; case 10
 26000  014A3A  B4D8               	btfsc	status,2,c
 26001  014A3C  D7DD               	goto	l2752
 26002  014A3E  0A6E               	xorlw	110	; case 100
 26003  014A40  B4D8               	btfsc	status,2,c
 26004  014A42  D7D5               	goto	l2751
 26005  014A44  D7E3               	goto	l2754
 26006  014A46                     l20719:
 26007                           
 26008                           ; BSR set to: 0
 26009                           ; Switch size 1, requested type "space"
 26010                           ; Number of cases is 1, Range of values is 232 to 232
 26011                           ; switch strategies available:
 26012                           ; Name         Instructions Cycles
 26013                           ; simple_byte            4     3 (average)
 26014                           ;	Chosen strategy is simple_byte
 26015  014A46  5162               	movf	??__encoder_next_arc_step_size& (0+255),w,b
 26016  014A48  0AE8               	xorlw	232	; case 232
 26017  014A4A  B4D8               	btfsc	status,2,c
 26018  014A4C  D7CA               	goto	l2749
 26019  014A4E  D7DE               	goto	l2754
 26020  014A50                     __end_of__encoder_next_arc_step_size:
 26021                           	opt stack 0
 26022                           tblptru	equ	0xFF8
 26023                           tblptrh	equ	0xFF7
 26024                           tblptrl	equ	0xFF6
 26025                           tablat	equ	0xFF5
 26026                           prodh	equ	0xFF4
 26027                           prodl	equ	0xFF3
 26028                           intcon	equ	0xFF2
 26029                           postinc0	equ	0xFEE
 26030                           wreg	equ	0xFE8
 26031                           indf1	equ	0xFE7
 26032                           postinc1	equ	0xFE6
 26033                           postdec1	equ	0xFE5
 26034                           plusw1	equ	0xFE3
 26035                           fsr1h	equ	0xFE2
 26036                           fsr1l	equ	0xFE1
 26037                           indf2	equ	0xFDF
 26038                           postinc2	equ	0xFDE
 26039                           postdec2	equ	0xFDD
 26040                           plusw2	equ	0xFDB
 26041                           fsr2h	equ	0xFDA
 26042                           fsr2l	equ	0xFD9
 26043                           status	equ	0xFD8
 26044                           
 26045 ;; *************** function _display_prepare *****************
 26046 ;; Defined at:
 26047 ;;		line 301 in file "display.c"
 26048 ;; Parameters:    Size  Location     Type
 26049 ;;		None
 26050 ;; Auto vars:     Size  Location     Type
 26051 ;;  temp           10  104[BANK0 ] unsigned char [10]
 26052 ;;  cntr            1  115[BANK0 ] unsigned char 
 26053 ;;  space           1  114[BANK0 ] unsigned char 
 26054 ;; Return value:  Size  Location     Type
 26055 ;;                  1    wreg      void 
 26056 ;; Registers used:
 26057 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26058 ;; Tracked objects:
 26059 ;;		On entry : 0/0
 26060 ;;		On exit  : 0/0
 26061 ;;		Unchanged: 0/0
 26062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26064 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26065 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26066 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26067 ;;Total ram usage:       14 bytes
 26068 ;; Hardware stack levels used:    1
 26069 ;; Hardware stack levels required when called:   15
 26070 ;; This function calls:
 26071 ;;		__display_clear
 26072 ;;		__display_itoa
 26073 ;;		__display_itoa_long
 26074 ;;		__display_padded_itoa
 26075 ;;		__display_position_in_degrees
 26076 ;;		__display_signed_itoa
 26077 ;;		_memcpy
 26078 ;;		_motor_speed_from_index
 26079 ;;		_strlen
 26080 ;; This function is called by:
 26081 ;;		_main
 26082 ;; This function uses a non-reentrant model
 26083 ;;
 26084                           
 26085                           	psect	text105
 26086  00A3A4                     __ptext105:
 26087                           	opt stack 0
 26088  00A3A4                     _display_prepare:
 26089                           	opt stack 15
 26090                           
 26091                           ;display.c: 303: uint8_t cntr;;display.c: 304: uint8_t space;;display.c: 305: char temp[
      +                          10];;display.c: 307: switch(os.displayState & 0xF0)
 26092                           
 26093                           ; BSR set to: 0
 26094                           ;incstack = 0
 26095  00A3A4  EFFD  F057         	goto	l1400
 26096  00A3A8                     
 26097                           ;display.c: 314: memcpy(display_content, dc_main, sizeof display_content);
 26098  00A3A8  0E49               	movlw	low _display_content
 26099  00A3AA  0100               	movlb	0	; () banked
 26100  00A3AC  6F60               	movwf	memcpy@d1& (0+255),b
 26101  00A3AE  0E02               	movlw	high _display_content
 26102  00A3B0  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26103  00A3B2  0EBE               	movlw	low _dc_main
 26104  00A3B4  6F62               	movwf	memcpy@s1& (0+255),b
 26105  00A3B6  0EA0               	movlw	high _dc_main
 26106  00A3B8  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26107  00A3BA  0E00               	movlw	0
 26108  00A3BC  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26109  00A3BE  0E50               	movlw	80
 26110  00A3C0  6F64               	movwf	memcpy@n& (0+255),b
 26111  00A3C2  EC93  F0A7         	call	_memcpy	;wreg free
 26112                           
 26113                           ;display.c: 315: switch(os.displayState)
 26114  00A3C6  D00A               	goto	l1404
 26115  00A3C8                     
 26116                           ;display.c: 321: display_content[1][9] = '>';
 26117                           
 26118                           ; BSR set to: 2
 26119  00A3C8  0E3E               	movlw	62
 26120  00A3CA  0102               	movlb	2	; () banked
 26121  00A3CC  6F66               	movwf	(_display_content+29)& (0+255),b
 26122                           
 26123                           ;display.c: 322: break;
 26124  00A3CE  EF2B  F058         	goto	l1418
 26125  00A3D2                     
 26126                           ;display.c: 327: display_content[2][9] = '>';
 26127                           
 26128                           ; BSR set to: 2
 26129  00A3D2  0E3E               	movlw	62
 26130  00A3D4  0102               	movlb	2	; () banked
 26131  00A3D6  6F7A               	movwf	(_display_content+49)& (0+255),b
 26132                           
 26133                           ;display.c: 328: break;
 26134  00A3D8  EF2B  F058         	goto	l1418
 26135  00A3DC                     l1404:
 26136                           
 26137                           ; BSR set to: 2
 26138  00A3DC  0101               	movlb	1	; () banked
 26139  00A3DE  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 26140                           
 26141                           ; Switch size 1, requested type "space"
 26142                           ; Number of cases is 5, Range of values is 1 to 5
 26143                           ; switch strategies available:
 26144                           ; Name         Instructions Cycles
 26145                           ; simple_byte           16     9 (average)
 26146                           ;	Chosen strategy is simple_byte
 26147  00A3E0  0A01               	xorlw	1	; case 1
 26148  00A3E2  B4D8               	btfsc	status,2,c
 26149  00A3E4  D01B               	goto	l1414
 26150  00A3E6  0A03               	xorlw	3	; case 2
 26151  00A3E8  B4D8               	btfsc	status,2,c
 26152  00A3EA  D7EE               	goto	l1407
 26153  00A3EC  0A01               	xorlw	1	; case 3
 26154  00A3EE  B4D8               	btfsc	status,2,c
 26155  00A3F0  D08F               	goto	l1431
 26156  00A3F2  0A07               	xorlw	7	; case 4
 26157  00A3F4  B4D8               	btfsc	status,2,c
 26158  00A3F6  D7ED               	goto	l1409
 26159  00A3F8  0A01               	xorlw	1	; case 5
 26160  00A3FA  D09A               	goto	L74
 26161  00A3FC                     
 26162                           ; BSR set to: 1
 26163                           ;display.c: 336: memcpy(display_content, dc_main_simplified, sizeof display_content);
 26164                           
 26165                           ; BSR set to: 1
 26166  00A3FC  0E49               	movlw	low _display_content
 26167  00A3FE  0100               	movlb	0	; () banked
 26168  00A400  6F60               	movwf	memcpy@d1& (0+255),b
 26169  00A402  0E02               	movlw	high _display_content
 26170  00A404  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26171  00A406  0E6E               	movlw	low _dc_main_simplified
 26172  00A408  6F62               	movwf	memcpy@s1& (0+255),b
 26173  00A40A  0EA0               	movlw	high _dc_main_simplified
 26174  00A40C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26175  00A40E  0E00               	movlw	0
 26176  00A410  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26177  00A412  0E50               	movlw	80
 26178  00A414  6F64               	movwf	memcpy@n& (0+255),b
 26179  00A416  EC93  F0A7         	call	_memcpy	;wreg free
 26180                           
 26181                           ;display.c: 337: switch(os.displayState)
 26182  00A41A  D005               	goto	l1413
 26183  00A41C                     l1414:
 26184                           
 26185                           ;display.c: 340: display_content[1][0] = '>';
 26186  00A41C  0E3E               	movlw	62
 26187  00A41E  0102               	movlb	2	; () banked
 26188  00A420  6F5D               	movwf	(_display_content+20)& (0+255),b
 26189                           
 26190                           ;display.c: 341: break;
 26191  00A422  EF2B  F058         	goto	l1418
 26192  00A426                     l1413:
 26193                           
 26194                           ; BSR set to: 2
 26195  00A426  0101               	movlb	1	; () banked
 26196  00A428  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 26197                           
 26198                           ; Switch size 1, requested type "space"
 26199                           ; Number of cases is 3, Range of values is 1 to 5
 26200                           ; switch strategies available:
 26201                           ; Name         Instructions Cycles
 26202                           ; simple_byte           10     6 (average)
 26203                           ;	Chosen strategy is simple_byte
 26204  00A42A  0A01               	xorlw	1	; case 1
 26205  00A42C  B4D8               	btfsc	status,2,c
 26206  00A42E  D7F6               	goto	l1414
 26207  00A430  0A05               	xorlw	5	; case 4
 26208  00A432  B4D8               	btfsc	status,2,c
 26209  00A434  D06D               	goto	l1431
 26210  00A436  D7E0               	goto	L14
 26211  00A438                     
 26212                           ; BSR set to: 1
 26213  00A438  0101               	movlb	1	; () banked
 26214  00A43A  51BE               	movf	(_config+41)& (0+255),w,b
 26215                           
 26216                           ; Switch size 1, requested type "space"
 26217                           ; Number of cases is 2, Range of values is 0 to 1
 26218                           ; switch strategies available:
 26219                           ; Name         Instructions Cycles
 26220                           ; simple_byte            7     4 (average)
 26221                           ;	Chosen strategy is simple_byte
 26222  00A43C  0A00               	xorlw	0	; case 0
 26223  00A43E  B4D8               	btfsc	status,2,c
 26224  00A440  D7B3               	goto	l1403
 26225  00A442  0A01               	xorlw	1	; case 1
 26226  00A444  B4D8               	btfsc	status,2,c
 26227  00A446  D7DA               	goto	l1412
 26228                           
 26229                           ; BSR set to: 1
 26230                           ;display.c: 351: break;
 26231  00A448  EF2B  F058         	goto	l1418
 26232  00A44C                     
 26233                           ;display.c: 354: memcpy(display_content, dc_setup1, sizeof display_content);
 26234                           
 26235                           ; BSR set to: 1
 26236  00A44C  0E49               	movlw	low _display_content
 26237  00A44E  0100               	movlb	0	; () banked
 26238  00A450  6F60               	movwf	memcpy@d1& (0+255),b
 26239  00A452  0E02               	movlw	high _display_content
 26240  00A454  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26241  00A456  0E1E               	movlw	low _dc_setup1
 26242  00A458  6F62               	movwf	memcpy@s1& (0+255),b
 26243  00A45A  0EA0               	movlw	high _dc_setup1
 26244  00A45C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26245  00A45E  0E00               	movlw	0
 26246  00A460  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26247  00A462  0E50               	movlw	80
 26248  00A464  6F64               	movwf	memcpy@n& (0+255),b
 26249  00A466  EC93  F0A7         	call	_memcpy	;wreg free
 26250                           
 26251                           ;display.c: 355: _display_itoa(os.setup_step_size, 2, temp);
 26252  00A46A  C175  F09F         	movff	_os+17,__display_itoa@value	;volatile
 26253  00A46E  C176  F0A0         	movff	_os+18,__display_itoa@value+1	;volatile
 26254  00A472  0E02               	movlw	2
 26255  00A474  0100               	movlb	0	; () banked
 26256  00A476  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 26257  00A478  0EC8               	movlw	low display_prepare@temp
 26258  00A47A  6FA2               	movwf	__display_itoa@text& (0+255),b
 26259  00A47C  0E00               	movlw	high display_prepare@temp
 26260  00A47E  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 26261  00A480  EC8C  F070         	call	__display_itoa	;wreg free
 26262                           
 26263                           ;display.c: 356: if(os.setup_step_size>999)
 26264  00A484  0EE8               	movlw	232
 26265  00A486  0101               	movlb	1	; () banked
 26266  00A488  5D75               	subwf	(_os+17)& (0+255),w,b	;volatile
 26267  00A48A  0E03               	movlw	3
 26268  00A48C  5976               	subwfb	(_os+18)& (0+255),w,b	;volatile
 26269  00A48E  A0D8               	btfss	status,0,c
 26270  00A490  D002               	goto	l1420
 26271                           
 26272                           ; BSR set to: 1
 26273                           ;display.c: 357: space = 0;
 26274  00A492  0E00               	movlw	0
 26275  00A494  D001               	goto	L8
 26276  00A496                     l1420:
 26277                           
 26278                           ;display.c: 358: else;display.c: 359: space = 1;
 26279                           
 26280                           ; BSR set to: 0
 26281  00A496  0E01               	movlw	1
 26282  00A498                     L8:
 26283  00A498  0100               	movlb	0	; () banked
 26284  00A49A  6FD2               	movwf	display_prepare@space& (0+255),b
 26285                           
 26286                           ; BSR set to: 0
 26287                           ;display.c: 360: for(cntr=0; temp[cntr]; ++cntr)
 26288  00A49C  0E00               	movlw	0
 26289  00A49E  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26290  00A4A0  D018               	goto	l1422
 26291  00A4A2                     
 26292                           ; BSR set to: 0
 26293                           ;display.c: 361: {;display.c: 362: display_content[3][space+cntr] = temp[cntr];
 26294                           
 26295                           ; BSR set to: 0
 26296  00A4A2  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26297  00A4A4  0D01               	mullw	1
 26298  00A4A6  0EC8               	movlw	low display_prepare@temp
 26299  00A4A8  24F3               	addwf	prodl,w,c
 26300  00A4AA  6ED9               	movwf	fsr2l,c
 26301  00A4AC  0E00               	movlw	high display_prepare@temp
 26302  00A4AE  20F4               	addwfc	prodh,w,c
 26303  00A4B0  6EDA               	movwf	fsr2h,c
 26304  00A4B2  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26305  00A4B4  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 26306  00A4B8  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26307  00A4BA  27C6               	addwf	??_display_prepare& (0+255),f,b
 26308  00A4BC  0E00               	movlw	0
 26309  00A4BE  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26310  00A4C0  0E85               	movlw	low (_display_content+60)
 26311  00A4C2  25C6               	addwf	??_display_prepare& (0+255),w,b
 26312  00A4C4  6EE1               	movwf	fsr1l,c
 26313  00A4C6  0E02               	movlw	high (_display_content+60)
 26314  00A4C8  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26315  00A4CA  6EE2               	movwf	fsr1h,c
 26316  00A4CC  CFDF FFE7          	movff	indf2,indf1
 26317                           
 26318                           ; BSR set to: 0
 26319  00A4D0  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26320  00A4D2                     l1422:
 26321                           
 26322                           ; BSR set to: 0
 26323                           
 26324                           ; BSR set to: 0
 26325  00A4D2  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26326  00A4D4  0D01               	mullw	1
 26327  00A4D6  0EC8               	movlw	low display_prepare@temp
 26328  00A4D8  24F3               	addwf	prodl,w,c
 26329  00A4DA  6ED9               	movwf	fsr2l,c
 26330  00A4DC  0E00               	movlw	high display_prepare@temp
 26331  00A4DE  20F4               	addwfc	prodh,w,c
 26332  00A4E0  6EDA               	movwf	fsr2h,c
 26333  00A4E2  50DF               	movf	indf2,w,c
 26334  00A4E4  A4D8               	btfss	status,2,c
 26335  00A4E6  D7DD               	goto	l1423
 26336                           
 26337                           ; BSR set to: 2
 26338                           
 26339                           ; BSR set to: 2
 26340                           ;display.c: 372: }
 26341                           
 26342                           ;display.c: 371: break;
 26343                           
 26344                           ;display.c: 370: display_content[3][12] = '>';
 26345                           
 26346                           ; BSR set to: 2
 26347                           
 26348                           ;display.c: 369: case DISPLAY_STATE_SETUP1_CANCEL:
 26349                           
 26350                           ;display.c: 368: break;
 26351                           
 26352                           ;display.c: 367: display_content[2][12] = '>';
 26353                           
 26354                           ; BSR set to: 0
 26355                           
 26356                           ;display.c: 365: {;display.c: 366: case DISPLAY_STATE_SETUP1_CONFIRM:
 26357                           
 26358                           ; BSR set to: 0
 26359                           ;display.c: 363: };display.c: 364: switch(os.displayState)
 26360  00A4E8  0101               	movlb	1	; () banked
 26361  00A4EA  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 26362                           
 26363                           ; Switch size 1, requested type "space"
 26364                           ; Number of cases is 2, Range of values is 17 to 18
 26365                           ; switch strategies available:
 26366                           ; Name         Instructions Cycles
 26367                           ; simple_byte            7     4 (average)
 26368                           ;	Chosen strategy is simple_byte
 26369  00A4EC  0A11               	xorlw	17	; case 17
 26370  00A4EE  D08E               	goto	L15
 26371  00A4F0                     
 26372                           ;display.c: 376: memcpy(display_content, dc_setup2, sizeof display_content);
 26373                           
 26374                           ; BSR set to: 1
 26375  00A4F0  0E49               	movlw	low _display_content
 26376  00A4F2  0100               	movlb	0	; () banked
 26377  00A4F4  6F60               	movwf	memcpy@d1& (0+255),b
 26378  00A4F6  0E02               	movlw	high _display_content
 26379  00A4F8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26380  00A4FA  0ECE               	movlw	low _dc_setup2
 26381  00A4FC  6F62               	movwf	memcpy@s1& (0+255),b
 26382  00A4FE  0E9F               	movlw	high _dc_setup2
 26383  00A500  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26384  00A502  0E00               	movlw	0
 26385  00A504  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26386  00A506  0E50               	movlw	80
 26387  00A508  6F64               	movwf	memcpy@n& (0+255),b
 26388  00A50A  EC93  F0A7         	call	_memcpy	;wreg free
 26389                           
 26390                           ;display.c: 377: switch(os.displayState)
 26391  00A50E  D00A               	goto	l1430
 26392  00A510                     l1431:
 26393                           
 26394                           ;display.c: 380: display_content[2][0] = '>';
 26395  00A510  0E3E               	movlw	62
 26396  00A512  0102               	movlb	2	; () banked
 26397  00A514  6F71               	movwf	(_display_content+40)& (0+255),b
 26398                           
 26399                           ;display.c: 381: break;
 26400  00A516  EF2B  F058         	goto	l1418
 26401  00A51A                     l1433:
 26402                           
 26403                           ;display.c: 383: display_content[3][0] = '>';
 26404                           
 26405                           ; BSR set to: 2
 26406  00A51A  0E3E               	movlw	62
 26407  00A51C  0102               	movlb	2	; () banked
 26408  00A51E  6F85               	movwf	(_display_content+60)& (0+255),b
 26409                           
 26410                           ; BSR set to: 2
 26411                           ;display.c: 385: }
 26412                           
 26413                           ;display.c: 384: break;
 26414  00A520  EF2B  F058         	goto	l1418
 26415  00A524                     l1430:
 26416                           
 26417                           ; BSR set to: 2
 26418  00A524  0101               	movlb	1	; () banked
 26419  00A526  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 26420                           
 26421                           ; Switch size 1, requested type "space"
 26422                           ; Number of cases is 2, Range of values is 33 to 34
 26423                           ; switch strategies available:
 26424                           ; Name         Instructions Cycles
 26425                           ; simple_byte            7     4 (average)
 26426                           ;	Chosen strategy is simple_byte
 26427  00A528  0A21               	xorlw	33	; case 33
 26428  00A52A  B4D8               	btfsc	status,2,c
 26429  00A52C  D7F1               	goto	l1431
 26430  00A52E  0A03               	xorlw	3	; case 34
 26431  00A530                     L74:
 26432  00A530  B4D8               	btfsc	status,2,c
 26433  00A532  D7F3               	goto	l1433
 26434                           
 26435                           ; BSR set to: 1
 26436                           ;display.c: 386: break;
 26437  00A534  EF2B  F058         	goto	l1418
 26438  00A538                     
 26439                           ;display.c: 389: memcpy(display_content, dc_divide1, sizeof display_content);
 26440                           
 26441                           ; BSR set to: 1
 26442  00A538  0E49               	movlw	low _display_content
 26443  00A53A  0100               	movlb	0	; () banked
 26444  00A53C  6F60               	movwf	memcpy@d1& (0+255),b
 26445  00A53E  0E02               	movlw	high _display_content
 26446  00A540  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26447  00A542  0E7E               	movlw	low _dc_divide1
 26448  00A544  6F62               	movwf	memcpy@s1& (0+255),b
 26449  00A546  0E9F               	movlw	high _dc_divide1
 26450  00A548  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26451  00A54A  0E00               	movlw	0
 26452  00A54C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26453  00A54E  0E50               	movlw	80
 26454  00A550  6F64               	movwf	memcpy@n& (0+255),b
 26455  00A552  EC93  F0A7         	call	_memcpy	;wreg free
 26456                           
 26457                           ;display.c: 391: _display_padded_itoa(os.divide_step_size, 3, temp);
 26458  00A556  C17A  F078         	movff	_os+22,__display_padded_itoa@value	;volatile
 26459  00A55A  0100               	movlb	0	; () banked
 26460  00A55C  6B79               	clrf	(__display_padded_itoa@value+1)& (0+255),b
 26461  00A55E  0E03               	movlw	3
 26462  00A560  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 26463  00A562  0EC8               	movlw	low display_prepare@temp
 26464  00A564  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 26465  00A566  0E00               	movlw	high display_prepare@temp
 26466  00A568  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 26467  00A56A  EC48  F092         	call	__display_padded_itoa	;wreg free
 26468                           
 26469                           ;display.c: 392: for(cntr=0; cntr<3; ++cntr)
 26470  00A56E  0E00               	movlw	0
 26471  00A570  0100               	movlb	0	; () banked
 26472  00A572  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26473  00A574                     l19325:
 26474                           
 26475                           ; BSR set to: 0
 26476  00A574  0E02               	movlw	2
 26477  00A576  65D3               	cpfsgt	display_prepare@cntr& (0+255),b
 26478  00A578  D001               	goto	l1435
 26479  00A57A  D014               	goto	u19120
 26480  00A57C                     l1435:
 26481                           
 26482                           ; BSR set to: 0
 26483                           ;display.c: 393: {;display.c: 394: display_content[2][cntr] = temp[cntr];
 26484                           
 26485                           ; BSR set to: 0
 26486  00A57C  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26487  00A57E  0D01               	mullw	1
 26488  00A580  0EC8               	movlw	low display_prepare@temp
 26489  00A582  24F3               	addwf	prodl,w,c
 26490  00A584  6ED9               	movwf	fsr2l,c
 26491  00A586  0E00               	movlw	high display_prepare@temp
 26492  00A588  20F4               	addwfc	prodh,w,c
 26493  00A58A  6EDA               	movwf	fsr2h,c
 26494  00A58C  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26495  00A58E  0D01               	mullw	1
 26496  00A590  0E71               	movlw	low (_display_content+40)
 26497  00A592  24F3               	addwf	prodl,w,c
 26498  00A594  6EE1               	movwf	fsr1l,c
 26499  00A596  0E02               	movlw	high (_display_content+40)
 26500  00A598  20F4               	addwfc	prodh,w,c
 26501  00A59A  6EE2               	movwf	fsr1h,c
 26502  00A59C  CFDF FFE7          	movff	indf2,indf1
 26503                           
 26504                           ; BSR set to: 0
 26505  00A5A0  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26506  00A5A2  D7E8               	goto	l19325
 26507  00A5A4                     u19120:
 26508                           
 26509                           ; BSR set to: 0
 26510                           ;display.c: 395: };display.c: 397: _display_padded_itoa(os.division, 4, temp);
 26511                           
 26512                           ; BSR set to: 0
 26513  00A5A4  C178  F078         	movff	_os+20,__display_padded_itoa@value	;volatile
 26514  00A5A8  C179  F079         	movff	_os+21,__display_padded_itoa@value+1	;volatile
 26515  00A5AC  0E04               	movlw	4
 26516  00A5AE  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 26517  00A5B0  0EC8               	movlw	low display_prepare@temp
 26518  00A5B2  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 26519  00A5B4  0E00               	movlw	high display_prepare@temp
 26520  00A5B6  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 26521  00A5B8  EC48  F092         	call	__display_padded_itoa	;wreg free
 26522                           
 26523                           ;display.c: 398: for(cntr=0; cntr<4; ++cntr)
 26524  00A5BC  0E00               	movlw	0
 26525  00A5BE  0100               	movlb	0	; () banked
 26526  00A5C0  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26527  00A5C2                     l19339:
 26528                           
 26529                           ; BSR set to: 0
 26530  00A5C2  0E03               	movlw	3
 26531  00A5C4  65D3               	cpfsgt	display_prepare@cntr& (0+255),b
 26532  00A5C6  D001               	goto	l1437
 26533  00A5C8  D01E               	goto	l1439
 26534  00A5CA                     l1437:
 26535                           
 26536                           ; BSR set to: 0
 26537                           ;display.c: 399: {;display.c: 400: display_content[3][cntr] = temp[cntr];
 26538                           
 26539                           ; BSR set to: 0
 26540  00A5CA  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26541  00A5CC  0D01               	mullw	1
 26542  00A5CE  0EC8               	movlw	low display_prepare@temp
 26543  00A5D0  24F3               	addwf	prodl,w,c
 26544  00A5D2  6ED9               	movwf	fsr2l,c
 26545  00A5D4  0E00               	movlw	high display_prepare@temp
 26546  00A5D6  20F4               	addwfc	prodh,w,c
 26547  00A5D8  6EDA               	movwf	fsr2h,c
 26548  00A5DA  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26549  00A5DC  0D01               	mullw	1
 26550  00A5DE  0E85               	movlw	low (_display_content+60)
 26551  00A5E0  24F3               	addwf	prodl,w,c
 26552  00A5E2  6EE1               	movwf	fsr1l,c
 26553  00A5E4  0E02               	movlw	high (_display_content+60)
 26554  00A5E6  20F4               	addwfc	prodh,w,c
 26555  00A5E8  6EE2               	movwf	fsr1h,c
 26556  00A5EA  CFDF FFE7          	movff	indf2,indf1
 26557                           
 26558                           ; BSR set to: 0
 26559  00A5EE  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26560  00A5F0  D7E8               	goto	l19339
 26561  00A5F2                     
 26562                           ;display.c: 405: display_content[2][12] = '>';
 26563                           
 26564                           ; BSR set to: 0
 26565  00A5F2  0E3E               	movlw	62
 26566  00A5F4  0102               	movlb	2	; () banked
 26567  00A5F6  6F7D               	movwf	(_display_content+52)& (0+255),b
 26568                           
 26569                           ;display.c: 406: break;
 26570  00A5F8  EF2B  F058         	goto	l1418
 26571  00A5FC                     
 26572                           ;display.c: 408: display_content[3][12] = '>';
 26573                           
 26574                           ; BSR set to: 2
 26575  00A5FC  0E3E               	movlw	62
 26576  00A5FE  0102               	movlb	2	; () banked
 26577  00A600  6F91               	movwf	(_display_content+72)& (0+255),b
 26578                           
 26579                           ; BSR set to: 2
 26580                           ;display.c: 410: }
 26581                           
 26582                           ;display.c: 409: break;
 26583  00A602  EF2B  F058         	goto	l1418
 26584  00A606                     l1439:
 26585                           
 26586                           ; BSR set to: 2
 26587  00A606  0101               	movlb	1	; () banked
 26588  00A608  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 26589                           
 26590                           ; Switch size 1, requested type "space"
 26591                           ; Number of cases is 2, Range of values is 49 to 50
 26592                           ; switch strategies available:
 26593                           ; Name         Instructions Cycles
 26594                           ; simple_byte            7     4 (average)
 26595                           ;	Chosen strategy is simple_byte
 26596  00A60A  0A31               	xorlw	49	; case 49
 26597  00A60C                     L15:
 26598  00A60C  B4D8               	btfsc	status,2,c
 26599  00A60E  D7F1               	goto	l1440
 26600  00A610  0A03               	xorlw	3	; case 50
 26601  00A612  B4D8               	btfsc	status,2,c
 26602  00A614  D7F3               	goto	l1442
 26603                           
 26604                           ; BSR set to: 1
 26605                           ;display.c: 411: break;
 26606  00A616  EF2B  F058         	goto	l1418
 26607  00A61A                     
 26608                           ;display.c: 414: memcpy(display_content, dc_divide2, sizeof display_content);
 26609                           
 26610                           ; BSR set to: 1
 26611  00A61A  0E49               	movlw	low _display_content
 26612  00A61C  0100               	movlb	0	; () banked
 26613  00A61E  6F60               	movwf	memcpy@d1& (0+255),b
 26614  00A620  0E02               	movlw	high _display_content
 26615  00A622  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26616  00A624  0E2E               	movlw	low _dc_divide2
 26617  00A626  6F62               	movwf	memcpy@s1& (0+255),b
 26618  00A628  0E9F               	movlw	high _dc_divide2
 26619  00A62A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26620  00A62C  0E00               	movlw	0
 26621  00A62E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26622  00A630  0E50               	movlw	80
 26623  00A632  6F64               	movwf	memcpy@n& (0+255),b
 26624  00A634  EC93  F0A7         	call	_memcpy	;wreg free
 26625                           
 26626                           ;display.c: 416: _display_padded_itoa(os.division, 0, temp);
 26627  00A638  C178  F078         	movff	_os+20,__display_padded_itoa@value	;volatile
 26628  00A63C  C179  F079         	movff	_os+21,__display_padded_itoa@value+1	;volatile
 26629  00A640  0E00               	movlw	0
 26630  00A642  0100               	movlb	0	; () banked
 26631  00A644  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 26632  00A646  0EC8               	movlw	low display_prepare@temp
 26633  00A648  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 26634  00A64A  0E00               	movlw	high display_prepare@temp
 26635  00A64C  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 26636  00A64E  EC48  F092         	call	__display_padded_itoa	;wreg free
 26637                           
 26638                           ;display.c: 417: for(cntr=0; temp[cntr]; ++cntr)
 26639  00A652  0E00               	movlw	0
 26640  00A654  0100               	movlb	0	; () banked
 26641  00A656  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26642  00A658  D018               	goto	l1444
 26643  00A65A                     
 26644                           ; BSR set to: 0
 26645                           ;display.c: 418: {;display.c: 419: display_content[0][cntr+8] = temp[cntr];
 26646                           
 26647                           ; BSR set to: 0
 26648  00A65A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26649  00A65C  0D01               	mullw	1
 26650  00A65E  0EC8               	movlw	low display_prepare@temp
 26651  00A660  24F3               	addwf	prodl,w,c
 26652  00A662  6ED9               	movwf	fsr2l,c
 26653  00A664  0E00               	movlw	high display_prepare@temp
 26654  00A666  20F4               	addwfc	prodh,w,c
 26655  00A668  6EDA               	movwf	fsr2h,c
 26656  00A66A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26657  00A66C  6FC6               	movwf	??_display_prepare& (0+255),b
 26658  00A66E  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26659  00A670  0E08               	movlw	8
 26660  00A672  27C6               	addwf	??_display_prepare& (0+255),f,b
 26661  00A674  0E00               	movlw	0
 26662  00A676  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26663  00A678  0E49               	movlw	low _display_content
 26664  00A67A  25C6               	addwf	??_display_prepare& (0+255),w,b
 26665  00A67C  6EE1               	movwf	fsr1l,c
 26666  00A67E  0E02               	movlw	high _display_content
 26667  00A680  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26668  00A682  6EE2               	movwf	fsr1h,c
 26669  00A684  CFDF FFE7          	movff	indf2,indf1
 26670                           
 26671                           ; BSR set to: 0
 26672  00A688  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26673  00A68A                     l1444:
 26674                           
 26675                           ; BSR set to: 0
 26676                           
 26677                           ; BSR set to: 0
 26678  00A68A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26679  00A68C  0D01               	mullw	1
 26680  00A68E  0EC8               	movlw	low display_prepare@temp
 26681  00A690  24F3               	addwf	prodl,w,c
 26682  00A692  6ED9               	movwf	fsr2l,c
 26683  00A694  0E00               	movlw	high display_prepare@temp
 26684  00A696  20F4               	addwfc	prodh,w,c
 26685  00A698  6EDA               	movwf	fsr2h,c
 26686  00A69A  50DF               	movf	indf2,w,c
 26687  00A69C  A4D8               	btfss	status,2,c
 26688  00A69E  D7DD               	goto	l1445
 26689                           
 26690                           ; BSR set to: 0
 26691                           ;display.c: 420: };display.c: 422: display_content[0][cntr+8] = ',';
 26692                           
 26693                           ; BSR set to: 0
 26694  00A6A0  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26695  00A6A2  6FC6               	movwf	??_display_prepare& (0+255),b
 26696  00A6A4  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26697  00A6A6  0E08               	movlw	8
 26698  00A6A8  27C6               	addwf	??_display_prepare& (0+255),f,b
 26699  00A6AA  0E00               	movlw	0
 26700  00A6AC  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26701  00A6AE  0E49               	movlw	low _display_content
 26702  00A6B0  25C6               	addwf	??_display_prepare& (0+255),w,b
 26703  00A6B2  6ED9               	movwf	fsr2l,c
 26704  00A6B4  0E02               	movlw	high _display_content
 26705  00A6B6  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26706  00A6B8  6EDA               	movwf	fsr2h,c
 26707  00A6BA  0E2C               	movlw	44
 26708  00A6BC  6EDF               	movwf	indf2,c
 26709                           
 26710                           ; BSR set to: 0
 26711                           ;display.c: 423: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 26712  00A6BE  0101               	movlb	1	; () banked
 26713  00A6C0  2977               	incf	(_os+19)& (0+255),w,b	;volatile
 26714  00A6C2  A4D8               	btfss	status,2,c
 26715  00A6C4  D024               	goto	l1447
 26716                           
 26717                           ; BSR set to: 1
 26718                           ;display.c: 424: {;display.c: 425: display_content[0][cntr+10] = 'C';
 26719  00A6C6  0100               	movlb	0	; () banked
 26720  00A6C8  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26721  00A6CA  6FC6               	movwf	??_display_prepare& (0+255),b
 26722  00A6CC  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26723  00A6CE  0E0A               	movlw	10
 26724  00A6D0  27C6               	addwf	??_display_prepare& (0+255),f,b
 26725  00A6D2  0E00               	movlw	0
 26726  00A6D4  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26727  00A6D6  0E49               	movlw	low _display_content
 26728  00A6D8  25C6               	addwf	??_display_prepare& (0+255),w,b
 26729  00A6DA  6ED9               	movwf	fsr2l,c
 26730  00A6DC  0E02               	movlw	high _display_content
 26731  00A6DE  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26732  00A6E0  6EDA               	movwf	fsr2h,c
 26733  00A6E2  0E43               	movlw	67
 26734  00A6E4  6EDF               	movwf	indf2,c
 26735                           
 26736                           ;display.c: 426: display_content[0][cntr+11] = 'C';
 26737  00A6E6  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26738  00A6E8  6FC6               	movwf	??_display_prepare& (0+255),b
 26739  00A6EA  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26740  00A6EC  0E0B               	movlw	11
 26741  00A6EE  27C6               	addwf	??_display_prepare& (0+255),f,b
 26742  00A6F0  0E00               	movlw	0
 26743  00A6F2  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26744  00A6F4  0E49               	movlw	low _display_content
 26745  00A6F6  25C6               	addwf	??_display_prepare& (0+255),w,b
 26746  00A6F8  6ED9               	movwf	fsr2l,c
 26747  00A6FA  0E02               	movlw	high _display_content
 26748  00A6FC  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26749  00A6FE  6EDA               	movwf	fsr2h,c
 26750  00A700  0E43               	movlw	67
 26751  00A702  6EDF               	movwf	indf2,c
 26752                           
 26753                           ;display.c: 427: display_content[0][cntr+12] = 'W';
 26754  00A704  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26755  00A706  6FC6               	movwf	??_display_prepare& (0+255),b
 26756  00A708  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26757  00A70A  0E0C               	movlw	12
 26758  00A70C  D014               	goto	L16
 26759  00A70E                     l1447:
 26760                           
 26761                           ;display.c: 429: else;display.c: 430: {;display.c: 431: display_content[0][cntr+10] = 'C
      +                          ';
 26762                           
 26763                           ; BSR set to: 0
 26764  00A70E  0100               	movlb	0	; () banked
 26765  00A710  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26766  00A712  6FC6               	movwf	??_display_prepare& (0+255),b
 26767  00A714  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26768  00A716  0E0A               	movlw	10
 26769  00A718  27C6               	addwf	??_display_prepare& (0+255),f,b
 26770  00A71A  0E00               	movlw	0
 26771  00A71C  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26772  00A71E  0E49               	movlw	low _display_content
 26773  00A720  25C6               	addwf	??_display_prepare& (0+255),w,b
 26774  00A722  6ED9               	movwf	fsr2l,c
 26775  00A724  0E02               	movlw	high _display_content
 26776  00A726  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26777  00A728  6EDA               	movwf	fsr2h,c
 26778  00A72A  0E43               	movlw	67
 26779  00A72C  6EDF               	movwf	indf2,c
 26780                           
 26781                           ;display.c: 432: display_content[0][cntr+11] = 'W';
 26782  00A72E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26783  00A730  6FC6               	movwf	??_display_prepare& (0+255),b
 26784  00A732  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26785  00A734  0E0B               	movlw	11
 26786  00A736                     L16:
 26787  00A736  27C6               	addwf	??_display_prepare& (0+255),f,b
 26788  00A738  0E00               	movlw	0
 26789  00A73A  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26790  00A73C  0E49               	movlw	low _display_content
 26791  00A73E  25C6               	addwf	??_display_prepare& (0+255),w,b
 26792  00A740  6ED9               	movwf	fsr2l,c
 26793  00A742  0E02               	movlw	high _display_content
 26794  00A744  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26795  00A746  6EDA               	movwf	fsr2h,c
 26796  00A748  0E57               	movlw	87
 26797  00A74A  6EDF               	movwf	indf2,c
 26798                           
 26799                           ; BSR set to: 0
 26800                           ;display.c: 433: };display.c: 435: _display_padded_itoa(os.divide_position, 0, temp);
 26801                           
 26802                           ; BSR set to: 0
 26803  00A74C  C17B  F078         	movff	_os+23,__display_padded_itoa@value	;volatile
 26804  00A750  C17C  F079         	movff	_os+24,__display_padded_itoa@value+1	;volatile
 26805  00A754  0E00               	movlw	0
 26806  00A756  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 26807  00A758  0EC8               	movlw	low display_prepare@temp
 26808  00A75A  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 26809  00A75C  0E00               	movlw	high display_prepare@temp
 26810  00A75E  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 26811  00A760  EC48  F092         	call	__display_padded_itoa	;wreg free
 26812                           
 26813                           ;display.c: 436: for(cntr=0; temp[cntr]; ++cntr)
 26814  00A764  0E00               	movlw	0
 26815  00A766  0100               	movlb	0	; () banked
 26816  00A768  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26817  00A76A  D018               	goto	l1449
 26818  00A76C                     
 26819                           ; BSR set to: 0
 26820                           ;display.c: 437: {;display.c: 438: display_content[1][cntr+5] = temp[cntr];
 26821                           
 26822                           ; BSR set to: 0
 26823  00A76C  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26824  00A76E  0D01               	mullw	1
 26825  00A770  0EC8               	movlw	low display_prepare@temp
 26826  00A772  24F3               	addwf	prodl,w,c
 26827  00A774  6ED9               	movwf	fsr2l,c
 26828  00A776  0E00               	movlw	high display_prepare@temp
 26829  00A778  20F4               	addwfc	prodh,w,c
 26830  00A77A  6EDA               	movwf	fsr2h,c
 26831  00A77C  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26832  00A77E  6FC6               	movwf	??_display_prepare& (0+255),b
 26833  00A780  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26834  00A782  0E05               	movlw	5
 26835  00A784  27C6               	addwf	??_display_prepare& (0+255),f,b
 26836  00A786  0E00               	movlw	0
 26837  00A788  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26838  00A78A  0E5D               	movlw	low (_display_content+20)
 26839  00A78C  25C6               	addwf	??_display_prepare& (0+255),w,b
 26840  00A78E  6EE1               	movwf	fsr1l,c
 26841  00A790  0E02               	movlw	high (_display_content+20)
 26842  00A792  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26843  00A794  6EE2               	movwf	fsr1h,c
 26844  00A796  CFDF FFE7          	movff	indf2,indf1
 26845                           
 26846                           ; BSR set to: 0
 26847  00A79A  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26848  00A79C                     l1449:
 26849                           
 26850                           ; BSR set to: 0
 26851                           
 26852                           ; BSR set to: 0
 26853  00A79C  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26854  00A79E  0D01               	mullw	1
 26855  00A7A0  0EC8               	movlw	low display_prepare@temp
 26856  00A7A2  24F3               	addwf	prodl,w,c
 26857  00A7A4  6ED9               	movwf	fsr2l,c
 26858  00A7A6  0E00               	movlw	high display_prepare@temp
 26859  00A7A8  20F4               	addwfc	prodh,w,c
 26860  00A7AA  6EDA               	movwf	fsr2h,c
 26861  00A7AC  50DF               	movf	indf2,w,c
 26862  00A7AE  A4D8               	btfss	status,2,c
 26863  00A7B0  D7DD               	goto	l1450
 26864                           
 26865                           ; BSR set to: 0
 26866                           ;display.c: 439: };display.c: 441: display_content[1][cntr+6] = '(';
 26867                           
 26868                           ; BSR set to: 0
 26869  00A7B2  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26870  00A7B4  6FC6               	movwf	??_display_prepare& (0+255),b
 26871  00A7B6  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26872  00A7B8  0E06               	movlw	6
 26873  00A7BA  27C6               	addwf	??_display_prepare& (0+255),f,b
 26874  00A7BC  0E00               	movlw	0
 26875  00A7BE  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26876  00A7C0  0E5D               	movlw	low (_display_content+20)
 26877  00A7C2  25C6               	addwf	??_display_prepare& (0+255),w,b
 26878  00A7C4  6ED9               	movwf	fsr2l,c
 26879  00A7C6  0E02               	movlw	high (_display_content+20)
 26880  00A7C8  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26881  00A7CA  6EDA               	movwf	fsr2h,c
 26882  00A7CC  0E28               	movlw	40
 26883  00A7CE  6EDF               	movwf	indf2,c
 26884                           
 26885                           ; BSR set to: 0
 26886                           ;display.c: 442: space = cntr + 7;
 26887  00A7D0  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26888  00A7D2  0F07               	addlw	7
 26889  00A7D4  6FD2               	movwf	display_prepare@space& (0+255),b
 26890                           
 26891                           ; BSR set to: 0
 26892                           ;display.c: 443: _display_itoa_long(_display_position_in_degrees(), 2, temp);
 26893  00A7D6  EC54  F0AB         	call	__display_position_in_degrees	;wreg free
 26894  00A7DA  C060  F0B7         	movff	?__display_position_in_degrees,__display_itoa_long@value
 26895  00A7DE  C061  F0B8         	movff	?__display_position_in_degrees+1,__display_itoa_long@value+1
 26896  00A7E2  C062  F0B9         	movff	?__display_position_in_degrees+2,__display_itoa_long@value+2
 26897  00A7E6  C063  F0BA         	movff	?__display_position_in_degrees+3,__display_itoa_long@value+3
 26898  00A7EA  0E02               	movlw	2
 26899  00A7EC  0100               	movlb	0	; () banked
 26900  00A7EE  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 26901  00A7F0  0EC8               	movlw	low display_prepare@temp
 26902  00A7F2  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 26903  00A7F4  0E00               	movlw	high display_prepare@temp
 26904  00A7F6  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26905  00A7F8  ECFB  F088         	call	__display_itoa_long	;wreg free
 26906                           
 26907                           ;display.c: 444: for(cntr=0; temp[cntr]; ++cntr)
 26908  00A7FC  0E00               	movlw	0
 26909  00A7FE  0100               	movlb	0	; () banked
 26910  00A800  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26911  00A802  D018               	goto	l1452
 26912  00A804                     
 26913                           ; BSR set to: 0
 26914                           ;display.c: 445: {;display.c: 446: display_content[1][cntr+space] = temp[cntr];
 26915                           
 26916                           ; BSR set to: 0
 26917  00A804  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26918  00A806  0D01               	mullw	1
 26919  00A808  0EC8               	movlw	low display_prepare@temp
 26920  00A80A  24F3               	addwf	prodl,w,c
 26921  00A80C  6ED9               	movwf	fsr2l,c
 26922  00A80E  0E00               	movlw	high display_prepare@temp
 26923  00A810  20F4               	addwfc	prodh,w,c
 26924  00A812  6EDA               	movwf	fsr2h,c
 26925  00A814  51D2               	movf	display_prepare@space& (0+255),w,b
 26926  00A816  C0D3  F0C6         	movff	display_prepare@cntr,??_display_prepare
 26927  00A81A  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26928  00A81C  27C6               	addwf	??_display_prepare& (0+255),f,b
 26929  00A81E  0E00               	movlw	0
 26930  00A820  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26931  00A822  0E5D               	movlw	low (_display_content+20)
 26932  00A824  25C6               	addwf	??_display_prepare& (0+255),w,b
 26933  00A826  6EE1               	movwf	fsr1l,c
 26934  00A828  0E02               	movlw	high (_display_content+20)
 26935  00A82A  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26936  00A82C  6EE2               	movwf	fsr1h,c
 26937  00A82E  CFDF FFE7          	movff	indf2,indf1
 26938                           
 26939                           ; BSR set to: 0
 26940  00A832  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26941  00A834                     l1452:
 26942                           
 26943                           ; BSR set to: 0
 26944                           
 26945                           ; BSR set to: 0
 26946  00A834  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26947  00A836  0D01               	mullw	1
 26948  00A838  0EC8               	movlw	low display_prepare@temp
 26949  00A83A  24F3               	addwf	prodl,w,c
 26950  00A83C  6ED9               	movwf	fsr2l,c
 26951  00A83E  0E00               	movlw	high display_prepare@temp
 26952  00A840  20F4               	addwfc	prodh,w,c
 26953  00A842  6EDA               	movwf	fsr2h,c
 26954  00A844  50DF               	movf	indf2,w,c
 26955  00A846  A4D8               	btfss	status,2,c
 26956  00A848  D7DD               	goto	l1453
 26957                           
 26958                           ; BSR set to: 0
 26959                           ;display.c: 447: };display.c: 448: display_content[1][cntr+space] = 0x01;
 26960                           
 26961                           ; BSR set to: 0
 26962  00A84A  51D2               	movf	display_prepare@space& (0+255),w,b
 26963  00A84C  C0D3  F0C6         	movff	display_prepare@cntr,??_display_prepare
 26964  00A850  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26965  00A852  27C6               	addwf	??_display_prepare& (0+255),f,b
 26966  00A854  0E00               	movlw	0
 26967  00A856  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26968  00A858  0E5D               	movlw	low (_display_content+20)
 26969  00A85A  25C6               	addwf	??_display_prepare& (0+255),w,b
 26970  00A85C  6ED9               	movwf	fsr2l,c
 26971  00A85E  0E02               	movlw	high (_display_content+20)
 26972  00A860  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26973  00A862  6EDA               	movwf	fsr2h,c
 26974  00A864  0E01               	movlw	1
 26975  00A866  6EDF               	movwf	indf2,c
 26976                           
 26977                           ;display.c: 449: display_content[1][cntr+space+1] = ')';
 26978  00A868  51D2               	movf	display_prepare@space& (0+255),w,b
 26979  00A86A  C0D3  F0C6         	movff	display_prepare@cntr,??_display_prepare
 26980  00A86E  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26981  00A870  27C6               	addwf	??_display_prepare& (0+255),f,b
 26982  00A872  0E00               	movlw	0
 26983  00A874  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26984  00A876  0E01               	movlw	1
 26985  00A878  27C6               	addwf	??_display_prepare& (0+255),f,b
 26986  00A87A  0E00               	movlw	0
 26987  00A87C  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26988  00A87E  0E5D               	movlw	low (_display_content+20)
 26989  00A880  25C6               	addwf	??_display_prepare& (0+255),w,b
 26990  00A882  6ED9               	movwf	fsr2l,c
 26991  00A884  0E02               	movlw	high (_display_content+20)
 26992  00A886  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26993  00A888  6EDA               	movwf	fsr2h,c
 26994  00A88A  0E29               	movlw	41
 26995  00A88C  6EDF               	movwf	indf2,c
 26996                           
 26997                           ; BSR set to: 0
 26998                           ;display.c: 451: _display_signed_itoa(os.divide_jump_size, temp);
 26999  00A88E  C17D  F08F         	movff	_os+25,__display_signed_itoa@value	;volatile
 27000  00A892  C17E  F090         	movff	_os+26,__display_signed_itoa@value+1	;volatile
 27001  00A896  0EC8               	movlw	low display_prepare@temp
 27002  00A898  6F91               	movwf	__display_signed_itoa@text& (0+255),b
 27003  00A89A  0E00               	movlw	high display_prepare@temp
 27004  00A89C  6F92               	movwf	(__display_signed_itoa@text+1)& (0+255),b
 27005  00A89E  ECF6  F0AC         	call	__display_signed_itoa	;wreg free
 27006                           
 27007                           ;display.c: 452: for(cntr=0; temp[cntr]; ++cntr)
 27008  00A8A2  0E00               	movlw	0
 27009  00A8A4  0100               	movlb	0	; () banked
 27010  00A8A6  6FD3               	movwf	display_prepare@cntr& (0+255),b
 27011  00A8A8  D018               	goto	l1455
 27012  00A8AA                     
 27013                           ; BSR set to: 0
 27014                           ;display.c: 453: {;display.c: 454: display_content[2][cntr+11] = temp[cntr];
 27015                           
 27016                           ; BSR set to: 0
 27017  00A8AA  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27018  00A8AC  0D01               	mullw	1
 27019  00A8AE  0EC8               	movlw	low display_prepare@temp
 27020  00A8B0  24F3               	addwf	prodl,w,c
 27021  00A8B2  6ED9               	movwf	fsr2l,c
 27022  00A8B4  0E00               	movlw	high display_prepare@temp
 27023  00A8B6  20F4               	addwfc	prodh,w,c
 27024  00A8B8  6EDA               	movwf	fsr2h,c
 27025  00A8BA  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27026  00A8BC  6FC6               	movwf	??_display_prepare& (0+255),b
 27027  00A8BE  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27028  00A8C0  0E0B               	movlw	11
 27029  00A8C2  27C6               	addwf	??_display_prepare& (0+255),f,b
 27030  00A8C4  0E00               	movlw	0
 27031  00A8C6  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27032  00A8C8  0E71               	movlw	low (_display_content+40)
 27033  00A8CA  25C6               	addwf	??_display_prepare& (0+255),w,b
 27034  00A8CC  6EE1               	movwf	fsr1l,c
 27035  00A8CE  0E02               	movlw	high (_display_content+40)
 27036  00A8D0  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27037  00A8D2  6EE2               	movwf	fsr1h,c
 27038  00A8D4  CFDF FFE7          	movff	indf2,indf1
 27039                           
 27040                           ; BSR set to: 0
 27041  00A8D8  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 27042  00A8DA                     l1455:
 27043                           
 27044                           ; BSR set to: 0
 27045                           
 27046                           ; BSR set to: 0
 27047  00A8DA  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27048  00A8DC  0D01               	mullw	1
 27049  00A8DE  0EC8               	movlw	low display_prepare@temp
 27050  00A8E0  24F3               	addwf	prodl,w,c
 27051  00A8E2  6ED9               	movwf	fsr2l,c
 27052  00A8E4  0E00               	movlw	high display_prepare@temp
 27053  00A8E6  20F4               	addwfc	prodh,w,c
 27054  00A8E8  6EDA               	movwf	fsr2h,c
 27055  00A8EA  50DF               	movf	indf2,w,c
 27056  00A8EC  B4D8               	btfsc	status,2,c
 27057  00A8EE  D3B3               	goto	l1418
 27058  00A8F0  D7DC               	goto	l1456
 27059  00A8F2                     
 27060                           ; BSR set to: 0
 27061                           ;display.c: 459: memcpy(display_content, dc_arc1, sizeof display_content);
 27062                           
 27063                           ; BSR set to: 0
 27064  00A8F2  0E49               	movlw	low _display_content
 27065  00A8F4  6F60               	movwf	memcpy@d1& (0+255),b
 27066  00A8F6  0E02               	movlw	high _display_content
 27067  00A8F8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27068  00A8FA  0EDE               	movlw	low _dc_arc1
 27069  00A8FC  6F62               	movwf	memcpy@s1& (0+255),b
 27070  00A8FE  0E9E               	movlw	high _dc_arc1
 27071  00A900  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27072  00A902  0E00               	movlw	0
 27073  00A904  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27074  00A906  0E50               	movlw	80
 27075  00A908  6F64               	movwf	memcpy@n& (0+255),b
 27076  00A90A  EC93  F0A7         	call	_memcpy	;wreg free
 27077                           
 27078                           ;display.c: 460: switch(os.displayState)
 27079  00A90E  D008               	goto	l1459
 27080  00A910                     
 27081                           ;display.c: 463: display_content[2][12] = '>';
 27082  00A910  0E3E               	movlw	62
 27083  00A912  0102               	movlb	2	; () banked
 27084  00A914  6F7D               	movwf	(_display_content+52)& (0+255),b
 27085                           
 27086                           ;display.c: 464: break;
 27087  00A916  D00C               	goto	l1461
 27088  00A918                     
 27089                           ;display.c: 466: display_content[3][12] = '>';
 27090                           
 27091                           ; BSR set to: 2
 27092  00A918  0E3E               	movlw	62
 27093  00A91A  0102               	movlb	2	; () banked
 27094  00A91C  6F91               	movwf	(_display_content+72)& (0+255),b
 27095                           
 27096                           ; BSR set to: 2
 27097                           ;display.c: 468: }
 27098                           
 27099                           ;display.c: 467: break;
 27100  00A91E  D008               	goto	l1461
 27101  00A920                     l1459:
 27102                           
 27103                           ; BSR set to: 2
 27104  00A920  0101               	movlb	1	; () banked
 27105  00A922  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 27106                           
 27107                           ; Switch size 1, requested type "space"
 27108                           ; Number of cases is 2, Range of values is 81 to 82
 27109                           ; switch strategies available:
 27110                           ; Name         Instructions Cycles
 27111                           ; simple_byte            7     4 (average)
 27112                           ;	Chosen strategy is simple_byte
 27113  00A924  0A51               	xorlw	81	; case 81
 27114  00A926  B4D8               	btfsc	status,2,c
 27115  00A928  D7F3               	goto	l1460
 27116  00A92A  0A03               	xorlw	3	; case 82
 27117  00A92C  B4D8               	btfsc	status,2,c
 27118  00A92E  D7F4               	goto	l1462
 27119  00A930                     l1461:
 27120                           
 27121                           ;display.c: 471: _display_itoa_long(os.arc_size, 2, temp);
 27122                           
 27123                           ; BSR set to: 1
 27124  00A930  C181  F0B7         	movff	_os+29,__display_itoa_long@value	;volatile
 27125  00A934  C182  F0B8         	movff	_os+30,__display_itoa_long@value+1	;volatile
 27126  00A938  C183  F0B9         	movff	_os+31,__display_itoa_long@value+2	;volatile
 27127  00A93C  C184  F0BA         	movff	_os+32,__display_itoa_long@value+3	;volatile
 27128  00A940  0E02               	movlw	2
 27129  00A942  0100               	movlb	0	; () banked
 27130  00A944  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 27131  00A946  0EC8               	movlw	low display_prepare@temp
 27132  00A948  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 27133  00A94A  0E00               	movlw	high display_prepare@temp
 27134  00A94C  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 27135  00A94E  ECFB  F088         	call	__display_itoa_long	;wreg free
 27136                           
 27137                           ;display.c: 472: for(cntr=0; temp[cntr]; ++cntr)
 27138  00A952  0E00               	movlw	0
 27139  00A954  0100               	movlb	0	; () banked
 27140  00A956  6FD3               	movwf	display_prepare@cntr& (0+255),b
 27141  00A958  D018               	goto	l1463
 27142  00A95A                     
 27143                           ; BSR set to: 0
 27144                           ;display.c: 473: {;display.c: 474: display_content[1][10+cntr] = temp[cntr];
 27145                           
 27146                           ; BSR set to: 0
 27147  00A95A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27148  00A95C  0D01               	mullw	1
 27149  00A95E  0EC8               	movlw	low display_prepare@temp
 27150  00A960  24F3               	addwf	prodl,w,c
 27151  00A962  6ED9               	movwf	fsr2l,c
 27152  00A964  0E00               	movlw	high display_prepare@temp
 27153  00A966  20F4               	addwfc	prodh,w,c
 27154  00A968  6EDA               	movwf	fsr2h,c
 27155  00A96A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27156  00A96C  6FC6               	movwf	??_display_prepare& (0+255),b
 27157  00A96E  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27158  00A970  0E0A               	movlw	10
 27159  00A972  27C6               	addwf	??_display_prepare& (0+255),f,b
 27160  00A974  0E00               	movlw	0
 27161  00A976  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27162  00A978  0E5D               	movlw	low (_display_content+20)
 27163  00A97A  25C6               	addwf	??_display_prepare& (0+255),w,b
 27164  00A97C  6EE1               	movwf	fsr1l,c
 27165  00A97E  0E02               	movlw	high (_display_content+20)
 27166  00A980  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27167  00A982  6EE2               	movwf	fsr1h,c
 27168  00A984  CFDF FFE7          	movff	indf2,indf1
 27169                           
 27170                           ; BSR set to: 0
 27171  00A988  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 27172  00A98A                     l1463:
 27173                           
 27174                           ; BSR set to: 0
 27175                           
 27176                           ; BSR set to: 0
 27177  00A98A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27178  00A98C  0D01               	mullw	1
 27179  00A98E  0EC8               	movlw	low display_prepare@temp
 27180  00A990  24F3               	addwf	prodl,w,c
 27181  00A992  6ED9               	movwf	fsr2l,c
 27182  00A994  0E00               	movlw	high display_prepare@temp
 27183  00A996  20F4               	addwfc	prodh,w,c
 27184  00A998  6EDA               	movwf	fsr2h,c
 27185  00A99A  50DF               	movf	indf2,w,c
 27186  00A99C  A4D8               	btfss	status,2,c
 27187  00A99E  D7DD               	goto	l1464
 27188                           
 27189                           ; BSR set to: 0
 27190                           ;display.c: 475: };display.c: 476: display_content[1][10+cntr] = 0x01;
 27191                           
 27192                           ; BSR set to: 0
 27193  00A9A0  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27194  00A9A2  6FC6               	movwf	??_display_prepare& (0+255),b
 27195  00A9A4  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27196  00A9A6  0E0A               	movlw	10
 27197  00A9A8  27C6               	addwf	??_display_prepare& (0+255),f,b
 27198  00A9AA  0E00               	movlw	0
 27199  00A9AC  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27200  00A9AE  0E5D               	movlw	low (_display_content+20)
 27201  00A9B0  25C6               	addwf	??_display_prepare& (0+255),w,b
 27202  00A9B2  6ED9               	movwf	fsr2l,c
 27203  00A9B4  0E02               	movlw	high (_display_content+20)
 27204  00A9B6  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27205  00A9B8  6EDA               	movwf	fsr2h,c
 27206  00A9BA  0E01               	movlw	1
 27207  00A9BC  6EDF               	movwf	indf2,c
 27208                           
 27209                           ; BSR set to: 0
 27210                           ;display.c: 479: _display_itoa(os.arc_step_size, 2, temp);
 27211  00A9BE  C17F  F09F         	movff	_os+27,__display_itoa@value	;volatile
 27212  00A9C2  C180  F0A0         	movff	_os+28,__display_itoa@value+1	;volatile
 27213  00A9C6  0E02               	movlw	2
 27214  00A9C8  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 27215  00A9CA  0EC8               	movlw	low display_prepare@temp
 27216  00A9CC  6FA2               	movwf	__display_itoa@text& (0+255),b
 27217  00A9CE  0E00               	movlw	high display_prepare@temp
 27218  00A9D0  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 27219  00A9D2  EC8C  F070         	call	__display_itoa	;wreg free
 27220                           
 27221                           ;display.c: 480: if(os.arc_step_size>999)
 27222  00A9D6  0EE8               	movlw	232
 27223  00A9D8  0101               	movlb	1	; () banked
 27224  00A9DA  5D7F               	subwf	(_os+27)& (0+255),w,b	;volatile
 27225  00A9DC  0E03               	movlw	3
 27226  00A9DE  5980               	subwfb	(_os+28)& (0+255),w,b	;volatile
 27227  00A9E0  A0D8               	btfss	status,0,c
 27228  00A9E2  D002               	goto	l1466
 27229                           
 27230                           ; BSR set to: 1
 27231                           ;display.c: 481: space = 0;
 27232  00A9E4  0E00               	movlw	0
 27233  00A9E6  D001               	goto	L9
 27234  00A9E8                     l1466:
 27235                           
 27236                           ;display.c: 482: else;display.c: 483: space = 1;
 27237                           
 27238                           ; BSR set to: 0
 27239  00A9E8  0E01               	movlw	1
 27240  00A9EA                     L9:
 27241  00A9EA  0100               	movlb	0	; () banked
 27242  00A9EC  6FD2               	movwf	display_prepare@space& (0+255),b
 27243                           
 27244                           ; BSR set to: 0
 27245                           ;display.c: 484: for(cntr=0; temp[cntr]; ++cntr)
 27246  00A9EE  0E00               	movlw	0
 27247  00A9F0  6FD3               	movwf	display_prepare@cntr& (0+255),b
 27248  00A9F2  D018               	goto	l1468
 27249  00A9F4                     
 27250                           ; BSR set to: 0
 27251                           ;display.c: 485: {;display.c: 486: display_content[3][space+cntr] = temp[cntr];
 27252                           
 27253                           ; BSR set to: 0
 27254  00A9F4  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27255  00A9F6  0D01               	mullw	1
 27256  00A9F8  0EC8               	movlw	low display_prepare@temp
 27257  00A9FA  24F3               	addwf	prodl,w,c
 27258  00A9FC  6ED9               	movwf	fsr2l,c
 27259  00A9FE  0E00               	movlw	high display_prepare@temp
 27260  00AA00  20F4               	addwfc	prodh,w,c
 27261  00AA02  6EDA               	movwf	fsr2h,c
 27262  00AA04  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27263  00AA06  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 27264  00AA0A  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27265  00AA0C  27C6               	addwf	??_display_prepare& (0+255),f,b
 27266  00AA0E  0E00               	movlw	0
 27267  00AA10  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27268  00AA12  0E85               	movlw	low (_display_content+60)
 27269  00AA14  25C6               	addwf	??_display_prepare& (0+255),w,b
 27270  00AA16  6EE1               	movwf	fsr1l,c
 27271  00AA18  0E02               	movlw	high (_display_content+60)
 27272  00AA1A  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27273  00AA1C  6EE2               	movwf	fsr1h,c
 27274  00AA1E  CFDF FFE7          	movff	indf2,indf1
 27275                           
 27276                           ; BSR set to: 0
 27277  00AA22  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 27278  00AA24                     l1468:
 27279                           
 27280                           ; BSR set to: 0
 27281                           
 27282                           ; BSR set to: 0
 27283  00AA24  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27284  00AA26  0D01               	mullw	1
 27285  00AA28  0EC8               	movlw	low display_prepare@temp
 27286  00AA2A  24F3               	addwf	prodl,w,c
 27287  00AA2C  6ED9               	movwf	fsr2l,c
 27288  00AA2E  0E00               	movlw	high display_prepare@temp
 27289  00AA30  20F4               	addwfc	prodh,w,c
 27290  00AA32  6EDA               	movwf	fsr2h,c
 27291  00AA34  50DF               	movf	indf2,w,c
 27292  00AA36  A4D8               	btfss	status,2,c
 27293  00AA38  D7DD               	goto	l1469
 27294                           
 27295                           ; BSR set to: 0
 27296                           ;display.c: 487: };display.c: 488: display_content[3][space+cntr] = 0x01 ;
 27297                           
 27298                           ; BSR set to: 0
 27299  00AA3A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27300  00AA3C  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 27301  00AA40  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27302  00AA42  27C6               	addwf	??_display_prepare& (0+255),f,b
 27303  00AA44  0E00               	movlw	0
 27304  00AA46  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27305  00AA48  0E85               	movlw	low (_display_content+60)
 27306  00AA4A  25C6               	addwf	??_display_prepare& (0+255),w,b
 27307  00AA4C  6ED9               	movwf	fsr2l,c
 27308  00AA4E  0E02               	movlw	high (_display_content+60)
 27309  00AA50  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27310  00AA52  6EDA               	movwf	fsr2h,c
 27311  00AA54  0E01               	movlw	1
 27312  00AA56  D268               	goto	L12
 27313  00AA58                     
 27314                           ; BSR set to: 0
 27315                           ;display.c: 493: memcpy(display_content, dc_arc2, sizeof display_content);
 27316                           
 27317                           ; BSR set to: 0
 27318  00AA58  0E49               	movlw	low _display_content
 27319  00AA5A  6F60               	movwf	memcpy@d1& (0+255),b
 27320  00AA5C  0E02               	movlw	high _display_content
 27321  00AA5E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27322  00AA60  0E8E               	movlw	low _dc_arc2
 27323  00AA62  6F62               	movwf	memcpy@s1& (0+255),b
 27324  00AA64  0E9E               	movlw	high _dc_arc2
 27325  00AA66  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27326  00AA68  0E00               	movlw	0
 27327  00AA6A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27328  00AA6C  0E50               	movlw	80
 27329  00AA6E  6F64               	movwf	memcpy@n& (0+255),b
 27330  00AA70  EC93  F0A7         	call	_memcpy	;wreg free
 27331                           
 27332                           ;display.c: 494: switch(os.displayState)
 27333  00AA74  D025               	goto	l1472
 27334  00AA76                     
 27335                           ;display.c: 497: display_content[2][6] = 'W';
 27336  00AA76  0E57               	movlw	87
 27337  00AA78  0102               	movlb	2	; () banked
 27338  00AA7A  6F77               	movwf	(_display_content+46)& (0+255),b
 27339                           
 27340                           ;display.c: 498: display_content[2][7] = ' ';
 27341  00AA7C  0E20               	movlw	32
 27342  00AA7E  6F78               	movwf	(_display_content+47)& (0+255),b
 27343                           
 27344                           ;display.c: 499: break;
 27345  00AA80  D027               	goto	l1474
 27346  00AA82                     
 27347                           ;display.c: 501: memcpy(display_content[2], "        ", 8);
 27348                           
 27349                           ; BSR set to: 2
 27350  00AA82  0E71               	movlw	low (_display_content+40)
 27351  00AA84  0100               	movlb	0	; () banked
 27352  00AA86  6F60               	movwf	memcpy@d1& (0+255),b
 27353  00AA88  0E02               	movlw	high (_display_content+40)
 27354  00AA8A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27355  00AA8C  0E88               	movlw	low STR_1
 27356  00AA8E  6F62               	movwf	memcpy@s1& (0+255),b
 27357  00AA90  0EA3               	movlw	high STR_1
 27358  00AA92  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27359  00AA94  0E00               	movlw	0
 27360  00AA96  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27361  00AA98  0E08               	movlw	8
 27362  00AA9A  6F64               	movwf	memcpy@n& (0+255),b
 27363  00AA9C  EC93  F0A7         	call	_memcpy	;wreg free
 27364                           
 27365                           ;display.c: 502: memcpy(display_content[3], "Cancel", 6);
 27366  00AAA0  0E85               	movlw	low (_display_content+60)
 27367  00AAA2  0100               	movlb	0	; () banked
 27368  00AAA4  6F60               	movwf	memcpy@d1& (0+255),b
 27369  00AAA6  0E02               	movlw	high (_display_content+60)
 27370  00AAA8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27371  00AAAA  0E91               	movlw	low STR_2
 27372  00AAAC  6F62               	movwf	memcpy@s1& (0+255),b
 27373  00AAAE  0EA3               	movlw	high STR_2
 27374  00AAB0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27375  00AAB2  0E00               	movlw	0
 27376  00AAB4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27377  00AAB6  0E06               	movlw	6
 27378  00AAB8  6F64               	movwf	memcpy@n& (0+255),b
 27379  00AABA  EC93  F0A7         	call	_memcpy	;wreg free
 27380                           
 27381                           ;display.c: 504: }
 27382                           
 27383                           ;display.c: 503: break;
 27384  00AABE  D008               	goto	l1474
 27385  00AAC0                     l1472:
 27386  00AAC0  0101               	movlb	1	; () banked
 27387  00AAC2  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 27388                           
 27389                           ; Switch size 1, requested type "space"
 27390                           ; Number of cases is 2, Range of values is 98 to 99
 27391                           ; switch strategies available:
 27392                           ; Name         Instructions Cycles
 27393                           ; simple_byte            7     4 (average)
 27394                           ;	Chosen strategy is simple_byte
 27395  00AAC4  0A62               	xorlw	98	; case 98
 27396  00AAC6  B4D8               	btfsc	status,2,c
 27397  00AAC8  D7DC               	goto	l1475
 27398  00AACA  0A01               	xorlw	1	; case 99
 27399  00AACC  B4D8               	btfsc	status,2,c
 27400  00AACE  D7D3               	goto	l1473
 27401  00AAD0                     l1474:
 27402                           
 27403                           ;display.c: 507: _display_itoa_long(os.arc_size, 2, temp);
 27404                           
 27405                           ; BSR set to: 1
 27406  00AAD0  C181  F0B7         	movff	_os+29,__display_itoa_long@value	;volatile
 27407  00AAD4  C182  F0B8         	movff	_os+30,__display_itoa_long@value+1	;volatile
 27408  00AAD8  C183  F0B9         	movff	_os+31,__display_itoa_long@value+2	;volatile
 27409  00AADC  C184  F0BA         	movff	_os+32,__display_itoa_long@value+3	;volatile
 27410  00AAE0  0E02               	movlw	2
 27411  00AAE2  0100               	movlb	0	; () banked
 27412  00AAE4  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 27413  00AAE6  0EC8               	movlw	low display_prepare@temp
 27414  00AAE8  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 27415  00AAEA  0E00               	movlw	high display_prepare@temp
 27416  00AAEC  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 27417  00AAEE  ECFB  F088         	call	__display_itoa_long	;wreg free
 27418                           
 27419                           ;display.c: 508: for(cntr=0; temp[cntr]; ++cntr)
 27420  00AAF2  0E00               	movlw	0
 27421  00AAF4  0100               	movlb	0	; () banked
 27422  00AAF6  6FD3               	movwf	display_prepare@cntr& (0+255),b
 27423  00AAF8  D018               	goto	l1476
 27424  00AAFA                     
 27425                           ; BSR set to: 0
 27426                           ;display.c: 509: {;display.c: 510: display_content[0][10+cntr] = temp[cntr];
 27427                           
 27428                           ; BSR set to: 0
 27429  00AAFA  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27430  00AAFC  0D01               	mullw	1
 27431  00AAFE  0EC8               	movlw	low display_prepare@temp
 27432  00AB00  24F3               	addwf	prodl,w,c
 27433  00AB02  6ED9               	movwf	fsr2l,c
 27434  00AB04  0E00               	movlw	high display_prepare@temp
 27435  00AB06  20F4               	addwfc	prodh,w,c
 27436  00AB08  6EDA               	movwf	fsr2h,c
 27437  00AB0A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27438  00AB0C  6FC6               	movwf	??_display_prepare& (0+255),b
 27439  00AB0E  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27440  00AB10  0E0A               	movlw	10
 27441  00AB12  27C6               	addwf	??_display_prepare& (0+255),f,b
 27442  00AB14  0E00               	movlw	0
 27443  00AB16  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27444  00AB18  0E49               	movlw	low _display_content
 27445  00AB1A  25C6               	addwf	??_display_prepare& (0+255),w,b
 27446  00AB1C  6EE1               	movwf	fsr1l,c
 27447  00AB1E  0E02               	movlw	high _display_content
 27448  00AB20  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27449  00AB22  6EE2               	movwf	fsr1h,c
 27450  00AB24  CFDF FFE7          	movff	indf2,indf1
 27451                           
 27452                           ; BSR set to: 0
 27453  00AB28  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 27454  00AB2A                     l1476:
 27455                           
 27456                           ; BSR set to: 0
 27457                           
 27458                           ; BSR set to: 0
 27459  00AB2A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27460  00AB2C  0D01               	mullw	1
 27461  00AB2E  0EC8               	movlw	low display_prepare@temp
 27462  00AB30  24F3               	addwf	prodl,w,c
 27463  00AB32  6ED9               	movwf	fsr2l,c
 27464  00AB34  0E00               	movlw	high display_prepare@temp
 27465  00AB36  20F4               	addwfc	prodh,w,c
 27466  00AB38  6EDA               	movwf	fsr2h,c
 27467  00AB3A  50DF               	movf	indf2,w,c
 27468  00AB3C  A4D8               	btfss	status,2,c
 27469  00AB3E  D7DD               	goto	l1477
 27470                           
 27471                           ; BSR set to: 0
 27472                           ;display.c: 511: };display.c: 512: display_content[0][10+cntr] = 0x01;
 27473                           
 27474                           ; BSR set to: 0
 27475  00AB40  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27476  00AB42  6FC6               	movwf	??_display_prepare& (0+255),b
 27477  00AB44  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27478  00AB46  0E0A               	movlw	10
 27479  00AB48  27C6               	addwf	??_display_prepare& (0+255),f,b
 27480  00AB4A  0E00               	movlw	0
 27481  00AB4C  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27482  00AB4E  0E49               	movlw	low _display_content
 27483  00AB50  25C6               	addwf	??_display_prepare& (0+255),w,b
 27484  00AB52  6ED9               	movwf	fsr2l,c
 27485  00AB54  0E02               	movlw	high _display_content
 27486  00AB56  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27487  00AB58  6EDA               	movwf	fsr2h,c
 27488  00AB5A  0E01               	movlw	1
 27489  00AB5C  6EDF               	movwf	indf2,c
 27490                           
 27491                           ; BSR set to: 0
 27492                           ;display.c: 515: _display_itoa_long(_display_position_in_degrees(), 2, temp);
 27493  00AB5E  EC54  F0AB         	call	__display_position_in_degrees	;wreg free
 27494  00AB62  C060  F0B7         	movff	?__display_position_in_degrees,__display_itoa_long@value
 27495  00AB66  C061  F0B8         	movff	?__display_position_in_degrees+1,__display_itoa_long@value+1
 27496  00AB6A  C062  F0B9         	movff	?__display_position_in_degrees+2,__display_itoa_long@value+2
 27497  00AB6E  C063  F0BA         	movff	?__display_position_in_degrees+3,__display_itoa_long@value+3
 27498  00AB72  0E02               	movlw	2
 27499  00AB74  0100               	movlb	0	; () banked
 27500  00AB76  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 27501  00AB78  0EC8               	movlw	low display_prepare@temp
 27502  00AB7A  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 27503  00AB7C  0E00               	movlw	high display_prepare@temp
 27504  00AB7E  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 27505  00AB80  ECFB  F088         	call	__display_itoa_long	;wreg free
 27506                           
 27507                           ;display.c: 516: space = 6-strlen(temp);
 27508  00AB84  0EC8               	movlw	low display_prepare@temp
 27509  00AB86  0100               	movlb	0	; () banked
 27510  00AB88  6F60               	movwf	strlen@s& (0+255),b
 27511  00AB8A  0E00               	movlw	high display_prepare@temp
 27512  00AB8C  6F61               	movwf	(strlen@s+1)& (0+255),b
 27513  00AB8E  ECBE  F0AD         	call	_strlen	;wreg free
 27514  00AB92  0100               	movlb	0	; () banked
 27515  00AB94  5160               	movf	?_strlen& (0+255),w,b
 27516  00AB96  0800               	sublw	0
 27517  00AB98  0F06               	addlw	6
 27518  00AB9A  6FD2               	movwf	display_prepare@space& (0+255),b
 27519                           
 27520                           ; BSR set to: 0
 27521                           ;display.c: 517: for(cntr=0; temp[cntr]; ++cntr)
 27522  00AB9C  0E00               	movlw	0
 27523  00AB9E  6FD3               	movwf	display_prepare@cntr& (0+255),b
 27524  00ABA0  D01C               	goto	l1479
 27525  00ABA2                     
 27526                           ; BSR set to: 0
 27527                           ;display.c: 518: {;display.c: 519: display_content[1][13+space+cntr] = temp[cntr];
 27528                           
 27529                           ; BSR set to: 0
 27530  00ABA2  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27531  00ABA4  0D01               	mullw	1
 27532  00ABA6  0EC8               	movlw	low display_prepare@temp
 27533  00ABA8  24F3               	addwf	prodl,w,c
 27534  00ABAA  6ED9               	movwf	fsr2l,c
 27535  00ABAC  0E00               	movlw	high display_prepare@temp
 27536  00ABAE  20F4               	addwfc	prodh,w,c
 27537  00ABB0  6EDA               	movwf	fsr2h,c
 27538  00ABB2  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27539  00ABB4  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 27540  00ABB8  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27541  00ABBA  27C6               	addwf	??_display_prepare& (0+255),f,b
 27542  00ABBC  0E00               	movlw	0
 27543  00ABBE  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27544  00ABC0  0E0D               	movlw	13
 27545  00ABC2  27C6               	addwf	??_display_prepare& (0+255),f,b
 27546  00ABC4  0E00               	movlw	0
 27547  00ABC6  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27548  00ABC8  0E5D               	movlw	low (_display_content+20)
 27549  00ABCA  25C6               	addwf	??_display_prepare& (0+255),w,b
 27550  00ABCC  6EE1               	movwf	fsr1l,c
 27551  00ABCE  0E02               	movlw	high (_display_content+20)
 27552  00ABD0  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27553  00ABD2  6EE2               	movwf	fsr1h,c
 27554  00ABD4  CFDF FFE7          	movff	indf2,indf1
 27555                           
 27556                           ; BSR set to: 0
 27557  00ABD8  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 27558  00ABDA                     l1479:
 27559                           
 27560                           ; BSR set to: 0
 27561                           
 27562                           ; BSR set to: 0
 27563  00ABDA  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27564  00ABDC  0D01               	mullw	1
 27565  00ABDE  0EC8               	movlw	low display_prepare@temp
 27566  00ABE0  24F3               	addwf	prodl,w,c
 27567  00ABE2  6ED9               	movwf	fsr2l,c
 27568  00ABE4  0E00               	movlw	high display_prepare@temp
 27569  00ABE6  20F4               	addwfc	prodh,w,c
 27570  00ABE8  6EDA               	movwf	fsr2h,c
 27571  00ABEA  50DF               	movf	indf2,w,c
 27572  00ABEC  A4D8               	btfss	status,2,c
 27573  00ABEE  D7D9               	goto	l1480
 27574                           
 27575                           ; BSR set to: 0
 27576                           ;display.c: 520: };display.c: 523: _display_itoa(motor_speed_from_index(os.arc_speed), 2
      +                          , temp);
 27577                           
 27578                           ; BSR set to: 0
 27579  00ABF0  C185  F09D         	movff	_os+33,motor_speed_from_index@speed_index	;volatile
 27580  00ABF4  C186  F09E         	movff	_os+34,motor_speed_from_index@speed_index+1	;volatile
 27581  00ABF8  ECCC  F0B1         	call	_motor_speed_from_index	;wreg free
 27582  00ABFC  C09D  F09F         	movff	?_motor_speed_from_index,__display_itoa@value
 27583  00AC00  C09E  F0A0         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 27584  00AC04  0E02               	movlw	2
 27585  00AC06  0100               	movlb	0	; () banked
 27586  00AC08  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 27587  00AC0A  0EC8               	movlw	low display_prepare@temp
 27588  00AC0C  6FA2               	movwf	__display_itoa@text& (0+255),b
 27589  00AC0E  0E00               	movlw	high display_prepare@temp
 27590  00AC10  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 27591  00AC12  EC8C  F070         	call	__display_itoa	;wreg free
 27592                           
 27593                           ;display.c: 524: for(cntr=0; temp[cntr]; ++cntr)
 27594  00AC16  0E00               	movlw	0
 27595  00AC18  0100               	movlb	0	; () banked
 27596  00AC1A  6FD3               	movwf	display_prepare@cntr& (0+255),b
 27597  00AC1C  D018               	goto	l1482
 27598  00AC1E                     
 27599                           ; BSR set to: 0
 27600                           ;display.c: 525: {;display.c: 526: display_content[3][11+cntr] = temp[cntr];
 27601                           
 27602                           ; BSR set to: 0
 27603  00AC1E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27604  00AC20  0D01               	mullw	1
 27605  00AC22  0EC8               	movlw	low display_prepare@temp
 27606  00AC24  24F3               	addwf	prodl,w,c
 27607  00AC26  6ED9               	movwf	fsr2l,c
 27608  00AC28  0E00               	movlw	high display_prepare@temp
 27609  00AC2A  20F4               	addwfc	prodh,w,c
 27610  00AC2C  6EDA               	movwf	fsr2h,c
 27611  00AC2E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27612  00AC30  6FC6               	movwf	??_display_prepare& (0+255),b
 27613  00AC32  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27614  00AC34  0E0B               	movlw	11
 27615  00AC36  27C6               	addwf	??_display_prepare& (0+255),f,b
 27616  00AC38  0E00               	movlw	0
 27617  00AC3A  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27618  00AC3C  0E85               	movlw	low (_display_content+60)
 27619  00AC3E  25C6               	addwf	??_display_prepare& (0+255),w,b
 27620  00AC40  6EE1               	movwf	fsr1l,c
 27621  00AC42  0E02               	movlw	high (_display_content+60)
 27622  00AC44  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27623  00AC46  6EE2               	movwf	fsr1h,c
 27624  00AC48  CFDF FFE7          	movff	indf2,indf1
 27625                           
 27626                           ; BSR set to: 0
 27627  00AC4C  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 27628  00AC4E                     l1482:
 27629                           
 27630                           ; BSR set to: 0
 27631                           
 27632                           ; BSR set to: 0
 27633  00AC4E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27634  00AC50  0D01               	mullw	1
 27635  00AC52  0EC8               	movlw	low display_prepare@temp
 27636  00AC54  24F3               	addwf	prodl,w,c
 27637  00AC56  6ED9               	movwf	fsr2l,c
 27638  00AC58  0E00               	movlw	high display_prepare@temp
 27639  00AC5A  20F4               	addwfc	prodh,w,c
 27640  00AC5C  6EDA               	movwf	fsr2h,c
 27641  00AC5E  50DF               	movf	indf2,w,c
 27642  00AC60  A4D8               	btfss	status,2,c
 27643  00AC62  D7DD               	goto	l1483
 27644  00AC64  D135               	goto	L75
 27645  00AC66                     
 27646                           ; BSR set to: 0
 27647                           ;display.c: 539: memcpy(display_content, dc_zero, sizeof display_content);
 27648                           
 27649                           ; BSR set to: 0
 27650  00AC66  0E49               	movlw	low _display_content
 27651  00AC68  6F60               	movwf	memcpy@d1& (0+255),b
 27652  00AC6A  0E02               	movlw	high _display_content
 27653  00AC6C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27654  00AC6E  0E3E               	movlw	low _dc_zero
 27655  00AC70  6F62               	movwf	memcpy@s1& (0+255),b
 27656  00AC72  0E9E               	movlw	high _dc_zero
 27657  00AC74  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27658  00AC76  0E00               	movlw	0
 27659  00AC78  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27660  00AC7A  0E50               	movlw	80
 27661  00AC7C  6F64               	movwf	memcpy@n& (0+255),b
 27662  00AC7E  EC93  F0A7         	call	_memcpy	;wreg free
 27663                           
 27664                           ;display.c: 542: _display_itoa_long(_display_position_in_degrees(), 2, temp);
 27665  00AC82  EC54  F0AB         	call	__display_position_in_degrees	;wreg free
 27666  00AC86  C060  F0B7         	movff	?__display_position_in_degrees,__display_itoa_long@value
 27667  00AC8A  C061  F0B8         	movff	?__display_position_in_degrees+1,__display_itoa_long@value+1
 27668  00AC8E  C062  F0B9         	movff	?__display_position_in_degrees+2,__display_itoa_long@value+2
 27669  00AC92  C063  F0BA         	movff	?__display_position_in_degrees+3,__display_itoa_long@value+3
 27670  00AC96  0E02               	movlw	2
 27671  00AC98  0100               	movlb	0	; () banked
 27672  00AC9A  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 27673  00AC9C  0EC8               	movlw	low display_prepare@temp
 27674  00AC9E  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 27675  00ACA0  0E00               	movlw	high display_prepare@temp
 27676  00ACA2  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 27677  00ACA4  ECFB  F088         	call	__display_itoa_long	;wreg free
 27678                           
 27679                           ;display.c: 543: for(cntr=0; temp[cntr]; ++cntr)
 27680  00ACA8  0E00               	movlw	0
 27681  00ACAA  0100               	movlb	0	; () banked
 27682  00ACAC  6FD3               	movwf	display_prepare@cntr& (0+255),b
 27683  00ACAE  D018               	goto	l1486
 27684  00ACB0                     
 27685                           ; BSR set to: 0
 27686                           ;display.c: 544: {;display.c: 545: display_content[1][13+cntr] = temp[cntr];
 27687                           
 27688                           ; BSR set to: 0
 27689  00ACB0  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27690  00ACB2  0D01               	mullw	1
 27691  00ACB4  0EC8               	movlw	low display_prepare@temp
 27692  00ACB6  24F3               	addwf	prodl,w,c
 27693  00ACB8  6ED9               	movwf	fsr2l,c
 27694  00ACBA  0E00               	movlw	high display_prepare@temp
 27695  00ACBC  20F4               	addwfc	prodh,w,c
 27696  00ACBE  6EDA               	movwf	fsr2h,c
 27697  00ACC0  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27698  00ACC2  6FC6               	movwf	??_display_prepare& (0+255),b
 27699  00ACC4  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27700  00ACC6  0E0D               	movlw	13
 27701  00ACC8  27C6               	addwf	??_display_prepare& (0+255),f,b
 27702  00ACCA  0E00               	movlw	0
 27703  00ACCC  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27704  00ACCE  0E5D               	movlw	low (_display_content+20)
 27705  00ACD0  25C6               	addwf	??_display_prepare& (0+255),w,b
 27706  00ACD2  6EE1               	movwf	fsr1l,c
 27707  00ACD4  0E02               	movlw	high (_display_content+20)
 27708  00ACD6  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27709  00ACD8  6EE2               	movwf	fsr1h,c
 27710  00ACDA  CFDF FFE7          	movff	indf2,indf1
 27711                           
 27712                           ; BSR set to: 0
 27713  00ACDE  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 27714  00ACE0                     l1486:
 27715                           
 27716                           ; BSR set to: 0
 27717                           
 27718                           ; BSR set to: 0
 27719  00ACE0  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27720  00ACE2  0D01               	mullw	1
 27721  00ACE4  0EC8               	movlw	low display_prepare@temp
 27722  00ACE6  24F3               	addwf	prodl,w,c
 27723  00ACE8  6ED9               	movwf	fsr2l,c
 27724  00ACEA  0E00               	movlw	high display_prepare@temp
 27725  00ACEC  20F4               	addwfc	prodh,w,c
 27726  00ACEE  6EDA               	movwf	fsr2h,c
 27727  00ACF0  50DF               	movf	indf2,w,c
 27728  00ACF2  A4D8               	btfss	status,2,c
 27729  00ACF4  D7DD               	goto	l1487
 27730                           
 27731                           ; BSR set to: 0
 27732                           ;display.c: 546: };display.c: 547: display_content[1][13+cntr] = 0x01;
 27733                           
 27734                           ; BSR set to: 0
 27735  00ACF6  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27736  00ACF8  6FC6               	movwf	??_display_prepare& (0+255),b
 27737  00ACFA  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27738  00ACFC  0E0D               	movlw	13
 27739  00ACFE  27C6               	addwf	??_display_prepare& (0+255),f,b
 27740  00AD00  0E00               	movlw	0
 27741  00AD02  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27742  00AD04  0E5D               	movlw	low (_display_content+20)
 27743  00AD06  25C6               	addwf	??_display_prepare& (0+255),w,b
 27744  00AD08  6ED9               	movwf	fsr2l,c
 27745  00AD0A  0E02               	movlw	high (_display_content+20)
 27746  00AD0C  D6A1               	goto	L22
 27747  00AD0E                     
 27748                           ; BSR set to: 0
 27749                           ;display.c: 552: memcpy(display_content, dc_manual, sizeof display_content);
 27750                           
 27751                           ; BSR set to: 0
 27752  00AD0E  0E49               	movlw	low _display_content
 27753  00AD10  6F60               	movwf	memcpy@d1& (0+255),b
 27754  00AD12  0E02               	movlw	high _display_content
 27755  00AD14  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27756  00AD16  0EEE               	movlw	low _dc_manual
 27757  00AD18  6F62               	movwf	memcpy@s1& (0+255),b
 27758  00AD1A  0E9D               	movlw	high _dc_manual
 27759  00AD1C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27760  00AD1E  0E00               	movlw	0
 27761  00AD20  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27762  00AD22  0E50               	movlw	80
 27763  00AD24  6F64               	movwf	memcpy@n& (0+255),b
 27764  00AD26  EC93  F0A7         	call	_memcpy	;wreg free
 27765                           
 27766                           ;display.c: 553: switch(os.displayState)
 27767  00AD2A  D044               	goto	l1490
 27768  00AD2C                     
 27769                           ;display.c: 556: display_content[2][6] = 'W';
 27770  00AD2C  0E57               	movlw	87
 27771  00AD2E  0102               	movlb	2	; () banked
 27772  00AD30  6F77               	movwf	(_display_content+46)& (0+255),b
 27773                           
 27774                           ;display.c: 557: display_content[2][7] = ' ';
 27775  00AD32  0E20               	movlw	32
 27776  00AD34  6F78               	movwf	(_display_content+47)& (0+255),b
 27777                           
 27778                           ;display.c: 558: break;
 27779  00AD36  D049               	goto	l1492
 27780  00AD38                     
 27781                           ;display.c: 560: memcpy(display_content[2], "        ", 8);
 27782                           
 27783                           ; BSR set to: 2
 27784  00AD38  0E71               	movlw	low (_display_content+40)
 27785  00AD3A  0100               	movlb	0	; () banked
 27786  00AD3C  6F60               	movwf	memcpy@d1& (0+255),b
 27787  00AD3E  0E02               	movlw	high (_display_content+40)
 27788  00AD40  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27789  00AD42  0E88               	movlw	low STR_1
 27790  00AD44  6F62               	movwf	memcpy@s1& (0+255),b
 27791  00AD46  0EA3               	movlw	high STR_1
 27792  00AD48  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27793  00AD4A  0E00               	movlw	0
 27794  00AD4C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27795  00AD4E  0E08               	movlw	8
 27796  00AD50  6F64               	movwf	memcpy@n& (0+255),b
 27797  00AD52  EC93  F0A7         	call	_memcpy	;wreg free
 27798                           
 27799                           ;display.c: 561: memcpy(display_content[3], "Cancel", 6);
 27800  00AD56  0E85               	movlw	low (_display_content+60)
 27801  00AD58  0100               	movlb	0	; () banked
 27802  00AD5A  6F60               	movwf	memcpy@d1& (0+255),b
 27803  00AD5C  0E02               	movlw	high (_display_content+60)
 27804  00AD5E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27805  00AD60  0E91               	movlw	low STR_2
 27806  00AD62  6F62               	movwf	memcpy@s1& (0+255),b
 27807  00AD64  0EA3               	movlw	high STR_2
 27808  00AD66  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27809  00AD68  0E00               	movlw	0
 27810  00AD6A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27811  00AD6C  0E06               	movlw	6
 27812  00AD6E  6F64               	movwf	memcpy@n& (0+255),b
 27813  00AD70  EC93  F0A7         	call	_memcpy	;wreg free
 27814                           
 27815                           ;display.c: 562: break;
 27816  00AD74  D02A               	goto	l1492
 27817  00AD76                     
 27818                           ;display.c: 564: memcpy(&display_content[2][0], "        ", 8);
 27819  00AD76  0E71               	movlw	low (_display_content+40)
 27820  00AD78  0100               	movlb	0	; () banked
 27821  00AD7A  6F60               	movwf	memcpy@d1& (0+255),b
 27822  00AD7C  0E02               	movlw	high (_display_content+40)
 27823  00AD7E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27824  00AD80  0E88               	movlw	low STR_1
 27825  00AD82  6F62               	movwf	memcpy@s1& (0+255),b
 27826  00AD84  0EA3               	movlw	high STR_1
 27827  00AD86  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27828  00AD88  0E00               	movlw	0
 27829  00AD8A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27830  00AD8C  0E08               	movlw	8
 27831  00AD8E  6F64               	movwf	memcpy@n& (0+255),b
 27832  00AD90  EC93  F0A7         	call	_memcpy	;wreg free
 27833                           
 27834                           ;display.c: 565: memcpy(&display_content[3][0], "Stop ", 5);
 27835  00AD94  0E85               	movlw	low (_display_content+60)
 27836  00AD96  0100               	movlb	0	; () banked
 27837  00AD98  6F60               	movwf	memcpy@d1& (0+255),b
 27838  00AD9A  0E02               	movlw	high (_display_content+60)
 27839  00AD9C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27840  00AD9E  0E98               	movlw	low STR_6
 27841  00ADA0  6F62               	movwf	memcpy@s1& (0+255),b
 27842  00ADA2  0EA3               	movlw	high STR_6
 27843  00ADA4  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27844  00ADA6  0E00               	movlw	0
 27845  00ADA8  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27846  00ADAA  0E05               	movlw	5
 27847  00ADAC  6F64               	movwf	memcpy@n& (0+255),b
 27848  00ADAE  EC93  F0A7         	call	_memcpy	;wreg free
 27849                           
 27850                           ;display.c: 567: }
 27851                           
 27852                           ;display.c: 566: break;
 27853  00ADB2  D00B               	goto	l1492
 27854  00ADB4                     l1490:
 27855  00ADB4  0101               	movlb	1	; () banked
 27856  00ADB6  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 27857                           
 27858                           ; Switch size 1, requested type "space"
 27859                           ; Number of cases is 3, Range of values is 130 to 132
 27860                           ; switch strategies available:
 27861                           ; Name         Instructions Cycles
 27862                           ; simple_byte           10     6 (average)
 27863                           ;	Chosen strategy is simple_byte
 27864  00ADB8  0A82               	xorlw	130	; case 130
 27865  00ADBA  B4D8               	btfsc	status,2,c
 27866  00ADBC  D7BD               	goto	l1493
 27867  00ADBE  0A01               	xorlw	1	; case 131
 27868  00ADC0  B4D8               	btfsc	status,2,c
 27869  00ADC2  D7B4               	goto	l1491
 27870  00ADC4  0A07               	xorlw	7	; case 132
 27871  00ADC6  B4D8               	btfsc	status,2,c
 27872  00ADC8  D7D6               	goto	l1494
 27873  00ADCA                     l1492:
 27874                           
 27875                           ;display.c: 570: _display_itoa_long(_display_position_in_degrees(), 2, temp);
 27876                           
 27877                           ; BSR set to: 1
 27878  00ADCA  EC54  F0AB         	call	__display_position_in_degrees	;wreg free
 27879  00ADCE  C060  F0B7         	movff	?__display_position_in_degrees,__display_itoa_long@value
 27880  00ADD2  C061  F0B8         	movff	?__display_position_in_degrees+1,__display_itoa_long@value+1
 27881  00ADD6  C062  F0B9         	movff	?__display_position_in_degrees+2,__display_itoa_long@value+2
 27882  00ADDA  C063  F0BA         	movff	?__display_position_in_degrees+3,__display_itoa_long@value+3
 27883  00ADDE  0E02               	movlw	2
 27884  00ADE0  0100               	movlb	0	; () banked
 27885  00ADE2  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 27886  00ADE4  0EC8               	movlw	low display_prepare@temp
 27887  00ADE6  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 27888  00ADE8  0E00               	movlw	high display_prepare@temp
 27889  00ADEA  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 27890  00ADEC  ECFB  F088         	call	__display_itoa_long	;wreg free
 27891                           
 27892                           ;display.c: 571: space = 7-strlen(temp);
 27893  00ADF0  0EC8               	movlw	low display_prepare@temp
 27894  00ADF2  0100               	movlb	0	; () banked
 27895  00ADF4  6F60               	movwf	strlen@s& (0+255),b
 27896  00ADF6  0E00               	movlw	high display_prepare@temp
 27897  00ADF8  6F61               	movwf	(strlen@s+1)& (0+255),b
 27898  00ADFA  ECBE  F0AD         	call	_strlen	;wreg free
 27899  00ADFE  0100               	movlb	0	; () banked
 27900  00AE00  5160               	movf	?_strlen& (0+255),w,b
 27901  00AE02  0800               	sublw	0
 27902  00AE04  0F07               	addlw	7
 27903  00AE06  6FD2               	movwf	display_prepare@space& (0+255),b
 27904                           
 27905                           ; BSR set to: 0
 27906                           ;display.c: 572: for(cntr=0; temp[cntr]; ++cntr)
 27907  00AE08  0E00               	movlw	0
 27908  00AE0A  6FD3               	movwf	display_prepare@cntr& (0+255),b
 27909  00AE0C  D01C               	goto	l1495
 27910  00AE0E                     
 27911                           ; BSR set to: 0
 27912                           ;display.c: 573: {;display.c: 574: display_content[1][12+space+cntr] = temp[cntr];
 27913                           
 27914                           ; BSR set to: 0
 27915  00AE0E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27916  00AE10  0D01               	mullw	1
 27917  00AE12  0EC8               	movlw	low display_prepare@temp
 27918  00AE14  24F3               	addwf	prodl,w,c
 27919  00AE16  6ED9               	movwf	fsr2l,c
 27920  00AE18  0E00               	movlw	high display_prepare@temp
 27921  00AE1A  20F4               	addwfc	prodh,w,c
 27922  00AE1C  6EDA               	movwf	fsr2h,c
 27923  00AE1E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27924  00AE20  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 27925  00AE24  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27926  00AE26  27C6               	addwf	??_display_prepare& (0+255),f,b
 27927  00AE28  0E00               	movlw	0
 27928  00AE2A  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27929  00AE2C  0E0C               	movlw	12
 27930  00AE2E  27C6               	addwf	??_display_prepare& (0+255),f,b
 27931  00AE30  0E00               	movlw	0
 27932  00AE32  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27933  00AE34  0E5D               	movlw	low (_display_content+20)
 27934  00AE36  25C6               	addwf	??_display_prepare& (0+255),w,b
 27935  00AE38  6EE1               	movwf	fsr1l,c
 27936  00AE3A  0E02               	movlw	high (_display_content+20)
 27937  00AE3C  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27938  00AE3E  6EE2               	movwf	fsr1h,c
 27939  00AE40  CFDF FFE7          	movff	indf2,indf1
 27940                           
 27941                           ; BSR set to: 0
 27942  00AE44  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 27943  00AE46                     l1495:
 27944                           
 27945                           ; BSR set to: 0
 27946                           
 27947                           ; BSR set to: 0
 27948  00AE46  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27949  00AE48  0D01               	mullw	1
 27950  00AE4A  0EC8               	movlw	low display_prepare@temp
 27951  00AE4C  24F3               	addwf	prodl,w,c
 27952  00AE4E  6ED9               	movwf	fsr2l,c
 27953  00AE50  0E00               	movlw	high display_prepare@temp
 27954  00AE52  20F4               	addwfc	prodh,w,c
 27955  00AE54  6EDA               	movwf	fsr2h,c
 27956  00AE56  50DF               	movf	indf2,w,c
 27957  00AE58  A4D8               	btfss	status,2,c
 27958  00AE5A  D7D9               	goto	l1496
 27959                           
 27960                           ; BSR set to: 0
 27961                           ;display.c: 575: };display.c: 578: _display_itoa(motor_speed_from_index(os.manual_speed)
      +                          , 2, temp);
 27962                           
 27963                           ; BSR set to: 0
 27964  00AE5C  C188  F09D         	movff	_os+36,motor_speed_from_index@speed_index	;volatile
 27965  00AE60  C189  F09E         	movff	_os+37,motor_speed_from_index@speed_index+1	;volatile
 27966  00AE64  ECCC  F0B1         	call	_motor_speed_from_index	;wreg free
 27967  00AE68  C09D  F09F         	movff	?_motor_speed_from_index,__display_itoa@value
 27968  00AE6C  C09E  F0A0         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 27969  00AE70  0E02               	movlw	2
 27970  00AE72  0100               	movlb	0	; () banked
 27971  00AE74  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 27972  00AE76  0EC8               	movlw	low display_prepare@temp
 27973  00AE78  6FA2               	movwf	__display_itoa@text& (0+255),b
 27974  00AE7A  0E00               	movlw	high display_prepare@temp
 27975  00AE7C  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 27976  00AE7E  EC8C  F070         	call	__display_itoa	;wreg free
 27977                           
 27978                           ;display.c: 579: for(cntr=0; temp[cntr]; ++cntr)
 27979  00AE82  0E00               	movlw	0
 27980  00AE84  0100               	movlb	0	; () banked
 27981  00AE86  6FD3               	movwf	display_prepare@cntr& (0+255),b
 27982  00AE88  D018               	goto	l1498
 27983  00AE8A                     
 27984                           ; BSR set to: 0
 27985                           ;display.c: 580: {;display.c: 581: display_content[3][11+cntr] = temp[cntr];
 27986                           
 27987                           ; BSR set to: 0
 27988  00AE8A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27989  00AE8C  0D01               	mullw	1
 27990  00AE8E  0EC8               	movlw	low display_prepare@temp
 27991  00AE90  24F3               	addwf	prodl,w,c
 27992  00AE92  6ED9               	movwf	fsr2l,c
 27993  00AE94  0E00               	movlw	high display_prepare@temp
 27994  00AE96  20F4               	addwfc	prodh,w,c
 27995  00AE98  6EDA               	movwf	fsr2h,c
 27996  00AE9A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27997  00AE9C  6FC6               	movwf	??_display_prepare& (0+255),b
 27998  00AE9E  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27999  00AEA0  0E0B               	movlw	11
 28000  00AEA2  27C6               	addwf	??_display_prepare& (0+255),f,b
 28001  00AEA4  0E00               	movlw	0
 28002  00AEA6  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 28003  00AEA8  0E85               	movlw	low (_display_content+60)
 28004  00AEAA  25C6               	addwf	??_display_prepare& (0+255),w,b
 28005  00AEAC  6EE1               	movwf	fsr1l,c
 28006  00AEAE  0E02               	movlw	high (_display_content+60)
 28007  00AEB0  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 28008  00AEB2  6EE2               	movwf	fsr1h,c
 28009  00AEB4  CFDF FFE7          	movff	indf2,indf1
 28010                           
 28011                           ; BSR set to: 0
 28012  00AEB8  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 28013  00AEBA                     l1498:
 28014                           
 28015                           ; BSR set to: 0
 28016                           
 28017                           ; BSR set to: 0
 28018  00AEBA  51D3               	movf	display_prepare@cntr& (0+255),w,b
 28019  00AEBC  0D01               	mullw	1
 28020  00AEBE  0EC8               	movlw	low display_prepare@temp
 28021  00AEC0  24F3               	addwf	prodl,w,c
 28022  00AEC2  6ED9               	movwf	fsr2l,c
 28023  00AEC4  0E00               	movlw	high display_prepare@temp
 28024  00AEC6  20F4               	addwfc	prodh,w,c
 28025  00AEC8  6EDA               	movwf	fsr2h,c
 28026  00AECA  50DF               	movf	indf2,w,c
 28027  00AECC  A4D8               	btfss	status,2,c
 28028  00AECE  D7DD               	goto	l1499
 28029  00AED0                     L75:
 28030                           
 28031                           ; BSR set to: 0
 28032                           ;display.c: 582: };display.c: 583: display_content[3][11+cntr] = 0x01;
 28033                           
 28034                           ; BSR set to: 0
 28035  00AED0  51D3               	movf	display_prepare@cntr& (0+255),w,b
 28036  00AED2  6FC6               	movwf	??_display_prepare& (0+255),b
 28037  00AED4  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 28038  00AED6  0E0B               	movlw	11
 28039  00AED8  27C6               	addwf	??_display_prepare& (0+255),f,b
 28040  00AEDA  0E00               	movlw	0
 28041  00AEDC  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 28042  00AEDE  0E85               	movlw	low (_display_content+60)
 28043  00AEE0  25C6               	addwf	??_display_prepare& (0+255),w,b
 28044  00AEE2  6ED9               	movwf	fsr2l,c
 28045  00AEE4  0E02               	movlw	high (_display_content+60)
 28046  00AEE6  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 28047  00AEE8  6EDA               	movwf	fsr2h,c
 28048  00AEEA  0E01               	movlw	1
 28049  00AEEC  6EDF               	movwf	indf2,c
 28050                           
 28051                           ;display.c: 584: display_content[3][12+cntr] = '/';
 28052  00AEEE  51D3               	movf	display_prepare@cntr& (0+255),w,b
 28053  00AEF0  6FC6               	movwf	??_display_prepare& (0+255),b
 28054  00AEF2  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 28055  00AEF4  0E0C               	movlw	12
 28056  00AEF6  27C6               	addwf	??_display_prepare& (0+255),f,b
 28057  00AEF8  0E00               	movlw	0
 28058  00AEFA  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 28059  00AEFC  0E85               	movlw	low (_display_content+60)
 28060  00AEFE  25C6               	addwf	??_display_prepare& (0+255),w,b
 28061  00AF00  6ED9               	movwf	fsr2l,c
 28062  00AF02  0E02               	movlw	high (_display_content+60)
 28063  00AF04  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 28064  00AF06  6EDA               	movwf	fsr2h,c
 28065  00AF08  0E2F               	movlw	47
 28066  00AF0A  6EDF               	movwf	indf2,c
 28067                           
 28068                           ;display.c: 585: display_content[3][13+cntr] = 's';
 28069  00AF0C  51D3               	movf	display_prepare@cntr& (0+255),w,b
 28070  00AF0E  6FC6               	movwf	??_display_prepare& (0+255),b
 28071  00AF10  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 28072  00AF12  0E0D               	movlw	13
 28073  00AF14  27C6               	addwf	??_display_prepare& (0+255),f,b
 28074  00AF16  0E00               	movlw	0
 28075  00AF18  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 28076  00AF1A  0E85               	movlw	low (_display_content+60)
 28077  00AF1C  25C6               	addwf	??_display_prepare& (0+255),w,b
 28078  00AF1E  6ED9               	movwf	fsr2l,c
 28079  00AF20  0E02               	movlw	high (_display_content+60)
 28080  00AF22  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 28081  00AF24  6EDA               	movwf	fsr2h,c
 28082  00AF26  0E73               	movlw	115
 28083  00AF28                     L12:
 28084  00AF28  6EDF               	movwf	indf2,c
 28085                           
 28086                           ;display.c: 586: break;
 28087  00AF2A  D095               	goto	l1418
 28088  00AF2C                     
 28089                           ; BSR set to: 0
 28090                           ;display.c: 589: _display_clear();
 28091                           
 28092                           ; BSR set to: 0
 28093  00AF2C  EC66  F0AC         	call	__display_clear	;wreg free
 28094                           
 28095                           ;display.c: 590: _display_itoa((int16_t) (os.encoder1Count), 0, display_content[0]);
 28096  00AF30  0101               	movlb	1	; () banked
 28097  00AF32  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 28098  00AF34  0100               	movlb	0	; () banked
 28099  00AF36  6F9F               	movwf	__display_itoa@value& (0+255),b
 28100  00AF38  6BA0               	clrf	(__display_itoa@value+1)& (0+255),b
 28101  00AF3A  BF9F               	btfsc	__display_itoa@value& (0+255),7,b
 28102  00AF3C  07A0               	decf	(__display_itoa@value+1)& (0+255),f,b
 28103  00AF3E  0E00               	movlw	0
 28104  00AF40  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 28105  00AF42  0E49               	movlw	low _display_content
 28106  00AF44  6FA2               	movwf	__display_itoa@text& (0+255),b
 28107  00AF46  0E02               	movlw	high _display_content
 28108  00AF48  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 28109  00AF4A  EC8C  F070         	call	__display_itoa	;wreg free
 28110                           
 28111                           ;display.c: 591: if(PORTEbits.RE2)
 28112  00AF4E  A484               	btfss	3972,2,c	;volatile
 28113  00AF50  D002               	goto	l1502
 28114                           
 28115                           ;display.c: 592: display_content[0][8] = 'H';
 28116  00AF52  0E48               	movlw	72
 28117  00AF54  D001               	goto	L17
 28118  00AF56                     l1502:
 28119                           
 28120                           ;display.c: 593: else;display.c: 594: display_content[0][8] = 'L';
 28121                           
 28122                           ; BSR set to: 2
 28123  00AF56  0E4C               	movlw	76
 28124  00AF58                     L17:
 28125  00AF58  0102               	movlb	2	; () banked
 28126  00AF5A  6F51               	movwf	(_display_content+8)& (0+255),b
 28127                           
 28128                           ; BSR set to: 2
 28129                           ;display.c: 595: if(PORTEbits.RE0)
 28130                           
 28131                           ; BSR set to: 2
 28132  00AF5C  A084               	btfss	3972,0,c	;volatile
 28133  00AF5E  D002               	goto	l1504
 28134                           
 28135                           ; BSR set to: 2
 28136                           ;display.c: 596: display_content[0][9] = 'H';
 28137  00AF60  0E48               	movlw	72
 28138  00AF62  D001               	goto	L18
 28139  00AF64                     l1504:
 28140                           
 28141                           ; BSR set to: 2
 28142                           ;display.c: 597: else;display.c: 598: display_content[0][9] = 'L';
 28143                           
 28144                           ; BSR set to: 2
 28145  00AF64  0E4C               	movlw	76
 28146  00AF66                     L18:
 28147  00AF66  6F52               	movwf	(_display_content+9)& (0+255),b
 28148                           
 28149                           ; BSR set to: 2
 28150                           ;display.c: 599: _display_itoa((int16_t) (os.button1), 0, display_content[1]);
 28151                           
 28152                           ; BSR set to: 2
 28153  00AF68  0101               	movlb	1	; () banked
 28154  00AF6A  5168               	movf	(_os+4)& (0+255),w,b	;volatile
 28155  00AF6C  0100               	movlb	0	; () banked
 28156  00AF6E  6F9F               	movwf	__display_itoa@value& (0+255),b
 28157  00AF70  6BA0               	clrf	(__display_itoa@value+1)& (0+255),b
 28158  00AF72  BF9F               	btfsc	__display_itoa@value& (0+255),7,b
 28159  00AF74  07A0               	decf	(__display_itoa@value+1)& (0+255),f,b
 28160  00AF76  0E00               	movlw	0
 28161  00AF78  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 28162  00AF7A  0E5D               	movlw	low (_display_content+20)
 28163  00AF7C  6FA2               	movwf	__display_itoa@text& (0+255),b
 28164  00AF7E  0E02               	movlw	high (_display_content+20)
 28165  00AF80  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 28166  00AF82  EC8C  F070         	call	__display_itoa	;wreg free
 28167                           
 28168                           ;display.c: 600: if(PORTEbits.RE1)
 28169  00AF86  A284               	btfss	3972,1,c	;volatile
 28170  00AF88  D002               	goto	l1506
 28171                           
 28172                           ;display.c: 601: display_content[1][8] = 'H';
 28173  00AF8A  0E48               	movlw	72
 28174  00AF8C  D001               	goto	L19
 28175  00AF8E                     l1506:
 28176                           
 28177                           ;display.c: 602: else;display.c: 603: display_content[1][8] = 'L';
 28178                           
 28179                           ; BSR set to: 2
 28180  00AF8E  0E4C               	movlw	76
 28181  00AF90                     L19:
 28182  00AF90  0102               	movlb	2	; () banked
 28183  00AF92  6F65               	movwf	(_display_content+28)& (0+255),b
 28184                           
 28185                           ; BSR set to: 2
 28186                           ;display.c: 604: _display_itoa((int16_t) (os.encoder2Count), 0, display_content[2]);
 28187                           
 28188                           ; BSR set to: 2
 28189  00AF94  0101               	movlb	1	; () banked
 28190  00AF96  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 28191  00AF98  0100               	movlb	0	; () banked
 28192  00AF9A  6F9F               	movwf	__display_itoa@value& (0+255),b
 28193  00AF9C  6BA0               	clrf	(__display_itoa@value+1)& (0+255),b
 28194  00AF9E  BF9F               	btfsc	__display_itoa@value& (0+255),7,b
 28195  00AFA0  07A0               	decf	(__display_itoa@value+1)& (0+255),f,b
 28196  00AFA2  0E00               	movlw	0
 28197  00AFA4  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 28198  00AFA6  0E71               	movlw	low (_display_content+40)
 28199  00AFA8  6FA2               	movwf	__display_itoa@text& (0+255),b
 28200  00AFAA  0E02               	movlw	high (_display_content+40)
 28201  00AFAC  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 28202  00AFAE  EC8C  F070         	call	__display_itoa	;wreg free
 28203                           
 28204                           ;display.c: 605: if(PORTAbits.RA0)
 28205  00AFB2  A080               	btfss	3968,0,c	;volatile
 28206  00AFB4  D002               	goto	l1508
 28207                           
 28208                           ;display.c: 606: display_content[2][8] = 'H';
 28209  00AFB6  0E48               	movlw	72
 28210  00AFB8  D001               	goto	L20
 28211  00AFBA                     l1508:
 28212                           
 28213                           ;display.c: 607: else;display.c: 608: display_content[2][8] = 'L';
 28214                           
 28215                           ; BSR set to: 2
 28216  00AFBA  0E4C               	movlw	76
 28217  00AFBC                     L20:
 28218  00AFBC  0102               	movlb	2	; () banked
 28219  00AFBE  6F79               	movwf	(_display_content+48)& (0+255),b
 28220                           
 28221                           ; BSR set to: 2
 28222                           ;display.c: 609: if(PORTAbits.RA2)
 28223                           
 28224                           ; BSR set to: 2
 28225  00AFC0  A480               	btfss	3968,2,c	;volatile
 28226  00AFC2  D002               	goto	l1510
 28227                           
 28228                           ; BSR set to: 2
 28229                           ;display.c: 610: display_content[2][9] = 'H';
 28230  00AFC4  0E48               	movlw	72
 28231  00AFC6  D001               	goto	L21
 28232  00AFC8                     l1510:
 28233                           
 28234                           ; BSR set to: 2
 28235                           ;display.c: 611: else;display.c: 612: display_content[2][9] = 'L';
 28236                           
 28237                           ; BSR set to: 2
 28238  00AFC8  0E4C               	movlw	76
 28239  00AFCA                     L21:
 28240  00AFCA  6F7A               	movwf	(_display_content+49)& (0+255),b
 28241                           
 28242                           ; BSR set to: 2
 28243                           ;display.c: 613: _display_itoa((int16_t) (os.button2), 0, display_content[3]);
 28244                           
 28245                           ; BSR set to: 2
 28246  00AFCC  0101               	movlb	1	; () banked
 28247  00AFCE  516A               	movf	(_os+6)& (0+255),w,b	;volatile
 28248  00AFD0  0100               	movlb	0	; () banked
 28249  00AFD2  6F9F               	movwf	__display_itoa@value& (0+255),b
 28250  00AFD4  6BA0               	clrf	(__display_itoa@value+1)& (0+255),b
 28251  00AFD6  BF9F               	btfsc	__display_itoa@value& (0+255),7,b
 28252  00AFD8  07A0               	decf	(__display_itoa@value+1)& (0+255),f,b
 28253  00AFDA  0E00               	movlw	0
 28254  00AFDC  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 28255  00AFDE  0E85               	movlw	low (_display_content+60)
 28256  00AFE0  6FA2               	movwf	__display_itoa@text& (0+255),b
 28257  00AFE2  0E02               	movlw	high (_display_content+60)
 28258  00AFE4  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 28259  00AFE6  EC8C  F070         	call	__display_itoa	;wreg free
 28260                           
 28261                           ;display.c: 614: if(PORTAbits.RA1)
 28262  00AFEA  A280               	btfss	3968,1,c	;volatile
 28263  00AFEC  D002               	goto	l1512
 28264                           
 28265                           ;display.c: 615: display_content[3][8] = 'H';
 28266  00AFEE  0E48               	movlw	72
 28267  00AFF0  D001               	goto	L13
 28268  00AFF2                     l1512:
 28269                           
 28270                           ;display.c: 616: else;display.c: 617: display_content[3][8] = 'L';
 28271                           
 28272                           ; BSR set to: 2
 28273  00AFF2  0E4C               	movlw	76
 28274  00AFF4                     L13:
 28275  00AFF4  0102               	movlb	2	; () banked
 28276  00AFF6  6F8D               	movwf	(_display_content+68)& (0+255),b
 28277                           
 28278                           ; BSR set to: 2
 28279                           ;display.c: 619: }
 28280                           
 28281                           ; BSR set to: 2
 28282                           ;display.c: 618: break;
 28283  00AFF8  D02E               	goto	l1418
 28284  00AFFA                     l1400:
 28285                           
 28286                           ; BSR set to: 2
 28287  00AFFA  0101               	movlb	1	; () banked
 28288  00AFFC  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 28289  00AFFE  0BF0               	andlw	240
 28290  00B000  0100               	movlb	0	; () banked
 28291  00B002  6FC6               	movwf	??_display_prepare& (0+255),b
 28292  00B004  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 28293                           
 28294                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28295                           ; Switch size 1, requested type "space"
 28296                           ; Number of cases is 1, Range of values is 0 to 0
 28297                           ; switch strategies available:
 28298                           ; Name         Instructions Cycles
 28299                           ; simple_byte            4     3 (average)
 28300                           ;	Chosen strategy is simple_byte
 28301  00B006  51C7               	movf	(??_display_prepare+1)& (0+255),w,b
 28302  00B008  0A00               	xorlw	0	; case 0
 28303  00B00A  A4D8               	btfss	status,2,c
 28304  00B00C  D024               	goto	l1418
 28305                           
 28306                           ; BSR set to: 0
 28307                           ; Switch size 1, requested type "space"
 28308                           ; Number of cases is 10, Range of values is 0 to 240
 28309                           ; switch strategies available:
 28310                           ; Name         Instructions Cycles
 28311                           ; simple_byte           31    16 (average)
 28312                           ;	Chosen strategy is simple_byte
 28313  00B00E  51C6               	movf	??_display_prepare& (0+255),w,b
 28314  00B010  0A00               	xorlw	0	; case 0
 28315  00B012  B4D8               	btfsc	status,2,c
 28316  00B014  EF1C  F052         	goto	l1402
 28317  00B018  0A10               	xorlw	16	; case 16
 28318  00B01A  B4D8               	btfsc	status,2,c
 28319  00B01C  EF26  F052         	goto	l1419
 28320  00B020  0A30               	xorlw	48	; case 32
 28321  00B022  B4D8               	btfsc	status,2,c
 28322  00B024  EF78  F052         	goto	l1429
 28323  00B028  0A10               	xorlw	16	; case 48
 28324  00B02A  B4D8               	btfsc	status,2,c
 28325  00B02C  EF9C  F052         	goto	l1434
 28326  00B030  0A70               	xorlw	112	; case 64
 28327  00B032  B4D8               	btfsc	status,2,c
 28328  00B034  EF0D  F053         	goto	l1443
 28329  00B038  0A10               	xorlw	16	; case 80
 28330  00B03A  B4D8               	btfsc	status,2,c
 28331  00B03C  D45A               	goto	l1458
 28332  00B03E  0A30               	xorlw	48	; case 96
 28333  00B040  B4D8               	btfsc	status,2,c
 28334  00B042  D50A               	goto	l1471
 28335  00B044  0A10               	xorlw	16	; case 112
 28336  00B046  B4D8               	btfsc	status,2,c
 28337  00B048  D60E               	goto	l1485
 28338  00B04A  0AF0               	xorlw	240	; case 128
 28339  00B04C  B4D8               	btfsc	status,2,c
 28340  00B04E  D65F               	goto	l1489
 28341  00B050  0A70               	xorlw	112	; case 240
 28342  00B052  B4D8               	btfsc	status,2,c
 28343  00B054  D76B               	goto	l1501
 28344  00B056                     l1418:
 28345                           
 28346                           ;display.c: 621: if(!PORTDbits.RD2)
 28347  00B056  B483               	btfsc	3971,2,c	;volatile
 28348  00B058  0012               	return	
 28349                           
 28350                           ;display.c: 622: {;display.c: 623: display_content[0][0] = 'E';
 28351  00B05A  0E45               	movlw	69
 28352  00B05C  0102               	movlb	2	; () banked
 28353  00B05E  6F49               	movwf	_display_content& (0+255),b
 28354                           
 28355                           ;display.c: 624: display_content[0][1] = 'R';
 28356  00B060  0E52               	movlw	82
 28357  00B062  6F4A               	movwf	(_display_content+1)& (0+255),b
 28358                           
 28359                           ;display.c: 625: display_content[0][2] = 'R';
 28360  00B064  0E52               	movlw	82
 28361  00B066  6F4B               	movwf	(_display_content+2)& (0+255),b
 28362                           
 28363                           ;display.c: 626: display_content[0][3] = 'O';
 28364  00B068  0E4F               	movlw	79
 28365  00B06A  6F4C               	movwf	(_display_content+3)& (0+255),b
 28366                           
 28367                           ;display.c: 627: display_content[0][4] = 'R';
 28368  00B06C  0E52               	movlw	82
 28369  00B06E  6F4D               	movwf	(_display_content+4)& (0+255),b
 28370  00B070  0012               	return	
 28371  00B072                     __end_of_display_prepare:
 28372                           	opt stack 0
 28373                           tblptru	equ	0xFF8
 28374                           tblptrh	equ	0xFF7
 28375                           tblptrl	equ	0xFF6
 28376                           tablat	equ	0xFF5
 28377                           prodh	equ	0xFF4
 28378                           prodl	equ	0xFF3
 28379                           intcon	equ	0xFF2
 28380                           postinc0	equ	0xFEE
 28381                           wreg	equ	0xFE8
 28382                           indf1	equ	0xFE7
 28383                           postinc1	equ	0xFE6
 28384                           postdec1	equ	0xFE5
 28385                           plusw1	equ	0xFE3
 28386                           fsr1h	equ	0xFE2
 28387                           fsr1l	equ	0xFE1
 28388                           indf2	equ	0xFDF
 28389                           postinc2	equ	0xFDE
 28390                           postdec2	equ	0xFDD
 28391                           plusw2	equ	0xFDB
 28392                           fsr2h	equ	0xFDA
 28393                           fsr2l	equ	0xFD9
 28394                           status	equ	0xFD8
 28395                           
 28396 ;; *************** function _motor_speed_from_index *****************
 28397 ;; Defined at:
 28398 ;;		line 603 in file "motor.c"
 28399 ;; Parameters:    Size  Location     Type
 28400 ;;  speed_index     2   61[BANK0 ] unsigned int 
 28401 ;; Auto vars:     Size  Location     Type
 28402 ;;		None
 28403 ;; Return value:  Size  Location     Type
 28404 ;;                  2   61[BANK0 ] unsigned int 
 28405 ;; Registers used:
 28406 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28407 ;; Tracked objects:
 28408 ;;		On entry : 0/0
 28409 ;;		On exit  : 0/0
 28410 ;;		Unchanged: 0/0
 28411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28412 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28415 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28416 ;;Total ram usage:        2 bytes
 28417 ;; Hardware stack levels used:    1
 28418 ;; Hardware stack levels required when called:   12
 28419 ;; This function calls:
 28420 ;;		__motor_get_speed_in_degrees
 28421 ;; This function is called by:
 28422 ;;		_display_prepare
 28423 ;; This function uses a non-reentrant model
 28424 ;;
 28425                           
 28426                           	psect	text106
 28427  016398                     __ptext106:
 28428                           	opt stack 0
 28429  016398                     _motor_speed_from_index:
 28430                           	opt stack 17
 28431                           
 28432                           ;motor.c: 605: return _motor_get_speed_in_degrees(speed_index);
 28433                           
 28434                           ;incstack = 0
 28435  016398  C09D  F091         	movff	motor_speed_from_index@speed_index,__motor_get_speed_in_degrees@speed_index
 28436  01639C  C09E  F092         	movff	motor_speed_from_index@speed_index+1,__motor_get_speed_in_degrees@speed_index+1
 28437  0163A0  EC71  F084         	call	__motor_get_speed_in_degrees	;wreg free
 28438  0163A4  C091  F09D         	movff	?__motor_get_speed_in_degrees,?_motor_speed_from_index
 28439  0163A8  C092  F09E         	movff	?__motor_get_speed_in_degrees+1,?_motor_speed_from_index+1
 28440  0163AC  0012               	return	
 28441  0163AE                     __end_of_motor_speed_from_index:
 28442                           	opt stack 0
 28443                           tblptru	equ	0xFF8
 28444                           tblptrh	equ	0xFF7
 28445                           tblptrl	equ	0xFF6
 28446                           tablat	equ	0xFF5
 28447                           prodh	equ	0xFF4
 28448                           prodl	equ	0xFF3
 28449                           intcon	equ	0xFF2
 28450                           postinc0	equ	0xFEE
 28451                           wreg	equ	0xFE8
 28452                           indf1	equ	0xFE7
 28453                           postinc1	equ	0xFE6
 28454                           postdec1	equ	0xFE5
 28455                           plusw1	equ	0xFE3
 28456                           fsr1h	equ	0xFE2
 28457                           fsr1l	equ	0xFE1
 28458                           indf2	equ	0xFDF
 28459                           postinc2	equ	0xFDE
 28460                           postdec2	equ	0xFDD
 28461                           plusw2	equ	0xFDB
 28462                           fsr2h	equ	0xFDA
 28463                           fsr2l	equ	0xFD9
 28464                           status	equ	0xFD8
 28465                           
 28466 ;; *************** function __motor_get_speed_in_degrees *****************
 28467 ;; Defined at:
 28468 ;;		line 564 in file "motor.c"
 28469 ;; Parameters:    Size  Location     Type
 28470 ;;  speed_index     2   49[BANK0 ] unsigned int 
 28471 ;; Auto vars:     Size  Location     Type
 28472 ;;  lookup          4   57[BANK0 ] unsigned long 
 28473 ;;  speed           4   53[BANK0 ] float 
 28474 ;; Return value:  Size  Location     Type
 28475 ;;                  2   49[BANK0 ] unsigned int 
 28476 ;; Registers used:
 28477 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28478 ;; Tracked objects:
 28479 ;;		On entry : 0/0
 28480 ;;		On exit  : 0/0
 28481 ;;		Unchanged: 0/0
 28482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28483 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28484 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28485 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28486 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28487 ;;Total ram usage:       12 bytes
 28488 ;; Hardware stack levels used:    1
 28489 ;; Hardware stack levels required when called:   11
 28490 ;; This function calls:
 28491 ;;		___fldiv
 28492 ;;		___fltol
 28493 ;;		___lmul
 28494 ;;		___xxtofl
 28495 ;; This function is called by:
 28496 ;;		_motor_speed_from_index
 28497 ;;		_motor_get_maximum_speed
 28498 ;;		_motor_get_current_speed
 28499 ;; This function uses a non-reentrant model
 28500 ;;
 28501                           
 28502                           	psect	text107
 28503  0108E2                     __ptext107:
 28504                           	opt stack 0
 28505  0108E2                     __motor_get_speed_in_degrees:
 28506                           	opt stack 17
 28507                           
 28508                           ;motor.c: 566: uint32_t lookup;;motor.c: 567: float speed;;motor.c: 569: lookup = motor_
      +                          speed_lookup[speed_index];
 28509                           
 28510                           ;incstack = 0
 28511  0108E2  90D8               	bcf	status,0,c
 28512  0108E4  0100               	movlb	0	; () banked
 28513  0108E6  3591               	rlcf	__motor_get_speed_in_degrees@speed_index& (0+255),w,b
 28514  0108E8  6EF6               	movwf	tblptrl,c
 28515  0108EA  3592               	rlcf	(__motor_get_speed_in_degrees@speed_index+1)& (0+255),w,b
 28516  0108EC  6EF7               	movwf	tblptrh,c
 28517  0108EE  0E93               	movlw	low _motor_speed_lookup
 28518  0108F0  26F6               	addwf	tblptrl,f,c
 28519  0108F2  0E90               	movlw	high _motor_speed_lookup
 28520  0108F4  22F7               	addwfc	tblptrh,f,c
 28521  0108F6                     	if	1	;There are 3 active tblptr bytes
 28522  0108F6  6AF8               	clrf	tblptru,c
 28523  0108F8  0E00               	movlw	low (__mediumconst shr (0+16))
 28524  0108FA  22F8               	addwfc	tblptru,f,c
 28525  0108FC                     	endif
 28526  0108FC  0009               	tblrd		*+
 28527  0108FE  CFF5 F093          	movff	tablat,??__motor_get_speed_in_degrees
 28528  010902  0009               	tblrd		*+
 28529  010904  CFF5 F094          	movff	tablat,??__motor_get_speed_in_degrees+1
 28530  010908  C093  F099         	movff	??__motor_get_speed_in_degrees,__motor_get_speed_in_degrees@lookup
 28531  01090C  C094  F09A         	movff	??__motor_get_speed_in_degrees+1,__motor_get_speed_in_degrees@lookup+1
 28532  010910  6B9B               	clrf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),b
 28533  010912  6B9C               	clrf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),b
 28534                           
 28535                           ; BSR set to: 0
 28536                           ;motor.c: 570: lookup *= 16;
 28537  010914  0E04               	movlw	4
 28538  010916                     u15945:
 28539  010916  90D8               	bcf	status,0,c
 28540  010918  3799               	rlcf	__motor_get_speed_in_degrees@lookup& (0+255),f,b
 28541  01091A  379A               	rlcf	(__motor_get_speed_in_degrees@lookup+1)& (0+255),f,b
 28542  01091C  379B               	rlcf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),f,b
 28543  01091E  379C               	rlcf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),f,b
 28544  010920  2EE8               	decfsz	wreg,f,c
 28545  010922  D7F9               	goto	u15945
 28546                           
 28547                           ; BSR set to: 0
 28548                           ;motor.c: 571: lookup *= 360;
 28549  010924  C099  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 28550  010928  C09A  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 28551  01092C  C09B  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 28552  010930  C09C  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 28553  010934  0E68               	movlw	104
 28554  010936  6F64               	movwf	___lmul@multiplicand& (0+255),b
 28555  010938  0E01               	movlw	1
 28556  01093A  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 28557  01093C  0E00               	movlw	0
 28558  01093E  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 28559  010940  0E00               	movlw	0
 28560  010942  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 28561  010944  EC85  F0A9         	call	___lmul	;wreg free
 28562  010948  C060  F099         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 28563  01094C  C061  F09A         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 28564  010950  C062  F09B         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 28565  010954  C063  F09C         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 28566                           
 28567                           ;motor.c: 572: lookup *= 100;
 28568  010958  C099  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 28569  01095C  C09A  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 28570  010960  C09B  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 28571  010964  C09C  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 28572  010968  0E64               	movlw	100
 28573  01096A  0100               	movlb	0	; () banked
 28574  01096C  6F64               	movwf	___lmul@multiplicand& (0+255),b
 28575  01096E  0E00               	movlw	0
 28576  010970  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 28577  010972  0E00               	movlw	0
 28578  010974  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 28579  010976  0E00               	movlw	0
 28580  010978  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 28581  01097A  EC85  F0A9         	call	___lmul	;wreg free
 28582  01097E  C060  F099         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 28583  010982  C061  F09A         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 28584  010986  C062  F09B         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 28585  01098A  C063  F09C         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 28586                           
 28587                           ;motor.c: 574: speed = (float) lookup;
 28588  01098E  C099  F06A         	movff	__motor_get_speed_in_degrees@lookup,___xxtofl@val
 28589  010992  C09A  F06B         	movff	__motor_get_speed_in_degrees@lookup+1,___xxtofl@val+1
 28590  010996  C09B  F06C         	movff	__motor_get_speed_in_degrees@lookup+2,___xxtofl@val+2
 28591  01099A  C09C  F06D         	movff	__motor_get_speed_in_degrees@lookup+3,___xxtofl@val+3
 28592  01099E  0E00               	movlw	0
 28593  0109A0  EC91  F082         	call	___xxtofl
 28594  0109A4  C06A  F095         	movff	?___xxtofl,__motor_get_speed_in_degrees@speed
 28595  0109A8  C06B  F096         	movff	?___xxtofl+1,__motor_get_speed_in_degrees@speed+1
 28596  0109AC  C06C  F097         	movff	?___xxtofl+2,__motor_get_speed_in_degrees@speed+2
 28597  0109B0  C06D  F098         	movff	?___xxtofl+3,__motor_get_speed_in_degrees@speed+3
 28598                           
 28599                           ;motor.c: 575: speed /= config.full_circle_in_steps;
 28600  0109B4  C095  F078         	movff	__motor_get_speed_in_degrees@speed,___fldiv@b
 28601  0109B8  C096  F079         	movff	__motor_get_speed_in_degrees@speed+1,___fldiv@b+1
 28602  0109BC  C097  F07A         	movff	__motor_get_speed_in_degrees@speed+2,___fldiv@b+2
 28603  0109C0  C098  F07B         	movff	__motor_get_speed_in_degrees@speed+3,___fldiv@b+3
 28604  0109C4  C195  F06A         	movff	_config,___xxtofl@val
 28605  0109C8  C196  F06B         	movff	_config+1,___xxtofl@val+1
 28606  0109CC  C197  F06C         	movff	_config+2,___xxtofl@val+2
 28607  0109D0  C198  F06D         	movff	_config+3,___xxtofl@val+3
 28608  0109D4  0E00               	movlw	0
 28609  0109D6  EC91  F082         	call	___xxtofl
 28610  0109DA  C06A  F07C         	movff	?___xxtofl,___fldiv@a
 28611  0109DE  C06B  F07D         	movff	?___xxtofl+1,___fldiv@a+1
 28612  0109E2  C06C  F07E         	movff	?___xxtofl+2,___fldiv@a+2
 28613  0109E6  C06D  F07F         	movff	?___xxtofl+3,___fldiv@a+3
 28614  0109EA  EC53  F069         	call	___fldiv	;wreg free
 28615  0109EE  C078  F095         	movff	?___fldiv,__motor_get_speed_in_degrees@speed
 28616  0109F2  C079  F096         	movff	?___fldiv+1,__motor_get_speed_in_degrees@speed+1
 28617  0109F6  C07A  F097         	movff	?___fldiv+2,__motor_get_speed_in_degrees@speed+2
 28618  0109FA  C07B  F098         	movff	?___fldiv+3,__motor_get_speed_in_degrees@speed+3
 28619                           
 28620                           ;motor.c: 578: return (uint16_t) speed;
 28621  0109FE  C095  F060         	movff	__motor_get_speed_in_degrees@speed,___fltol@f1
 28622  010A02  C096  F061         	movff	__motor_get_speed_in_degrees@speed+1,___fltol@f1+1
 28623  010A06  C097  F062         	movff	__motor_get_speed_in_degrees@speed+2,___fltol@f1+2
 28624  010A0A  C098  F063         	movff	__motor_get_speed_in_degrees@speed+3,___fltol@f1+3
 28625  010A0E  ECEA  F094         	call	___fltol	;wreg free
 28626  010A12  C060  F091         	movff	?___fltol,?__motor_get_speed_in_degrees
 28627  010A16  C061  F092         	movff	?___fltol+1,?__motor_get_speed_in_degrees+1
 28628  010A1A  0012               	return	
 28629  010A1C                     __end_of__motor_get_speed_in_degrees:
 28630                           	opt stack 0
 28631                           tblptru	equ	0xFF8
 28632                           tblptrh	equ	0xFF7
 28633                           tblptrl	equ	0xFF6
 28634                           tablat	equ	0xFF5
 28635                           prodh	equ	0xFF4
 28636                           prodl	equ	0xFF3
 28637                           intcon	equ	0xFF2
 28638                           postinc0	equ	0xFEE
 28639                           wreg	equ	0xFE8
 28640                           indf1	equ	0xFE7
 28641                           postinc1	equ	0xFE6
 28642                           postdec1	equ	0xFE5
 28643                           plusw1	equ	0xFE3
 28644                           fsr1h	equ	0xFE2
 28645                           fsr1l	equ	0xFE1
 28646                           indf2	equ	0xFDF
 28647                           postinc2	equ	0xFDE
 28648                           postdec2	equ	0xFDD
 28649                           plusw2	equ	0xFDB
 28650                           fsr2h	equ	0xFDA
 28651                           fsr2l	equ	0xFD9
 28652                           status	equ	0xFD8
 28653                           
 28654 ;; *************** function ___fldiv *****************
 28655 ;; Defined at:
 28656 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
 28657 ;; Parameters:    Size  Location     Type
 28658 ;;  b               4   24[BANK0 ] unsigned int 
 28659 ;;  a               4   28[BANK0 ] unsigned int 
 28660 ;; Auto vars:     Size  Location     Type
 28661 ;;  grs             4   43[BANK0 ] unsigned long 
 28662 ;;  rem             4   36[BANK0 ] unsigned long 
 28663 ;;  new_exp         2   41[BANK0 ] int 
 28664 ;;  aexp            1   48[BANK0 ] unsigned char 
 28665 ;;  bexp            1   47[BANK0 ] unsigned char 
 28666 ;;  sign            1   40[BANK0 ] unsigned char 
 28667 ;; Return value:  Size  Location     Type
 28668 ;;                  4   24[BANK0 ] unsigned char 
 28669 ;; Registers used:
 28670 ;;		wreg, status,2, status,0
 28671 ;; Tracked objects:
 28672 ;;		On entry : 0/0
 28673 ;;		On exit  : 0/0
 28674 ;;		Unchanged: 0/0
 28675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28676 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28677 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28678 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28679 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28680 ;;Total ram usage:       25 bytes
 28681 ;; Hardware stack levels used:    1
 28682 ;; Hardware stack levels required when called:   10
 28683 ;; This function calls:
 28684 ;;		Nothing
 28685 ;; This function is called by:
 28686 ;;		__motor_steps_from_degrees_int
 28687 ;;		_motor_calculate_position_in_degrees
 28688 ;;		__motor_get_speed_in_degrees
 28689 ;;		__step_position_from_divide_position
 28690 ;;		_motor_divide_jump_to_nearest
 28691 ;;		_motor_arc_move
 28692 ;;		__steps_from_degrees
 28693 ;;		__motor_steps_from_degrees_float
 28694 ;;		_motor_steps_from_degrees
 28695 ;; This function uses a non-reentrant model
 28696 ;;
 28697                           
 28698                           	psect	text108
 28699  00D2A6                     __ptext108:
 28700                           	opt stack 0
 28701  00D2A6                     ___fldiv:
 28702                           	opt stack 18
 28703                           
 28704                           ;incstack = 0
 28705  00D2A6  0100               	movlb	0	; () banked
 28706  00D2A8  517B               	movf	(___fldiv@b+3)& (0+255),w,b
 28707  00D2AA  0B80               	andlw	128
 28708  00D2AC  6F88               	movwf	___fldiv@sign& (0+255),b
 28709  00D2AE  517B               	movf	(___fldiv@b+3)& (0+255),w,b
 28710  00D2B0  257B               	addwf	(___fldiv@b+3)& (0+255),w,b
 28711  00D2B2  6F8F               	movwf	___fldiv@bexp& (0+255),b
 28712                           
 28713                           ; BSR set to: 0
 28714  00D2B4  BF7A               	btfsc	(___fldiv@b+2)& (0+255),7,b
 28715                           
 28716                           ; BSR set to: 0
 28717  00D2B6  818F               	bsf	___fldiv@bexp& (0+255),0,b
 28718                           
 28719                           ; BSR set to: 0
 28720                           
 28721                           ; BSR set to: 0
 28722  00D2B8  518F               	movf	___fldiv@bexp& (0+255),w,b
 28723  00D2BA  B4D8               	btfsc	status,2,c
 28724  00D2BC  D00D               	goto	l3735
 28725                           
 28726                           ; BSR set to: 0
 28727  00D2BE  298F               	incf	___fldiv@bexp& (0+255),w,b
 28728  00D2C0  A4D8               	btfss	status,2,c
 28729  00D2C2  D008               	goto	l3736
 28730                           
 28731                           ; BSR set to: 0
 28732  00D2C4  0E00               	movlw	0
 28733  00D2C6  6F78               	movwf	___fldiv@b& (0+255),b
 28734  00D2C8  0E00               	movlw	0
 28735  00D2CA  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 28736  00D2CC  0E00               	movlw	0
 28737  00D2CE  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 28738  00D2D0  0E00               	movlw	0
 28739  00D2D2  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 28740  00D2D4                     l3736:
 28741                           
 28742                           ; BSR set to: 0
 28743                           
 28744                           ; BSR set to: 0
 28745  00D2D4  8F7A               	bsf	(___fldiv@b+2)& (0+255),7,b
 28746  00D2D6  D006               	goto	L23
 28747  00D2D8                     l3735:
 28748                           
 28749                           ; BSR set to: 0
 28750                           
 28751                           ; BSR set to: 0
 28752  00D2D8  0E00               	movlw	0
 28753  00D2DA  6F78               	movwf	___fldiv@b& (0+255),b
 28754  00D2DC  0E00               	movlw	0
 28755  00D2DE  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 28756  00D2E0  0E00               	movlw	0
 28757  00D2E2  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 28758  00D2E4                     L23:
 28759  00D2E4  0E00               	movlw	0
 28760  00D2E6  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 28761                           
 28762                           ; BSR set to: 0
 28763                           
 28764                           ; BSR set to: 0
 28765  00D2E8  517F               	movf	(___fldiv@a+3)& (0+255),w,b
 28766  00D2EA  0B80               	andlw	128
 28767  00D2EC  1B88               	xorwf	___fldiv@sign& (0+255),f,b
 28768                           
 28769                           ; BSR set to: 0
 28770  00D2EE  517F               	movf	(___fldiv@a+3)& (0+255),w,b
 28771  00D2F0  257F               	addwf	(___fldiv@a+3)& (0+255),w,b
 28772  00D2F2  6F90               	movwf	___fldiv@aexp& (0+255),b
 28773                           
 28774                           ; BSR set to: 0
 28775  00D2F4  BF7E               	btfsc	(___fldiv@a+2)& (0+255),7,b
 28776                           
 28777                           ; BSR set to: 0
 28778  00D2F6  8190               	bsf	___fldiv@aexp& (0+255),0,b
 28779                           
 28780                           ; BSR set to: 0
 28781                           
 28782                           ; BSR set to: 0
 28783  00D2F8  5190               	movf	___fldiv@aexp& (0+255),w,b
 28784  00D2FA  B4D8               	btfsc	status,2,c
 28785  00D2FC  D00D               	goto	l3739
 28786                           
 28787                           ; BSR set to: 0
 28788  00D2FE  2990               	incf	___fldiv@aexp& (0+255),w,b
 28789  00D300  A4D8               	btfss	status,2,c
 28790  00D302  D008               	goto	l3740
 28791                           
 28792                           ; BSR set to: 0
 28793  00D304  0E00               	movlw	0
 28794  00D306  6F7C               	movwf	___fldiv@a& (0+255),b
 28795  00D308  0E00               	movlw	0
 28796  00D30A  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 28797  00D30C  0E00               	movlw	0
 28798  00D30E  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 28799  00D310  0E00               	movlw	0
 28800  00D312  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 28801  00D314                     l3740:
 28802                           
 28803                           ; BSR set to: 0
 28804                           
 28805                           ; BSR set to: 0
 28806  00D314  8F7E               	bsf	(___fldiv@a+2)& (0+255),7,b
 28807  00D316  D006               	goto	L24
 28808  00D318                     l3739:
 28809                           
 28810                           ; BSR set to: 0
 28811                           
 28812                           ; BSR set to: 0
 28813  00D318  0E00               	movlw	0
 28814  00D31A  6F7C               	movwf	___fldiv@a& (0+255),b
 28815  00D31C  0E00               	movlw	0
 28816  00D31E  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 28817  00D320  0E00               	movlw	0
 28818  00D322  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 28819  00D324                     L24:
 28820  00D324  0E00               	movlw	0
 28821  00D326  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 28822                           
 28823                           ; BSR set to: 0
 28824                           
 28825                           ; BSR set to: 0
 28826  00D328  517C               	movf	___fldiv@a& (0+255),w,b
 28827  00D32A  117D               	iorwf	(___fldiv@a+1)& (0+255),w,b
 28828  00D32C  117E               	iorwf	(___fldiv@a+2)& (0+255),w,b
 28829  00D32E  117F               	iorwf	(___fldiv@a+3)& (0+255),w,b
 28830  00D330  A4D8               	btfss	status,2,c
 28831  00D332  D017               	goto	l3742
 28832                           
 28833                           ; BSR set to: 0
 28834  00D334  0E00               	movlw	0
 28835  00D336  6F78               	movwf	___fldiv@b& (0+255),b
 28836  00D338  0E00               	movlw	0
 28837  00D33A  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 28838  00D33C  0E00               	movlw	0
 28839  00D33E  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 28840  00D340  0E00               	movlw	0
 28841  00D342  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 28842                           
 28843                           ; BSR set to: 0
 28844  00D344  0E80               	movlw	128
 28845  00D346  137A               	iorwf	(___fldiv@b+2)& (0+255),f,b
 28846  00D348  0E7F               	movlw	127
 28847  00D34A  137B               	iorwf	(___fldiv@b+3)& (0+255),f,b
 28848                           
 28849                           ; BSR set to: 0
 28850  00D34C  5188               	movf	___fldiv@sign& (0+255),w,b
 28851  00D34E  137B               	iorwf	(___fldiv@b+3)& (0+255),f,b
 28852                           
 28853                           ; BSR set to: 0
 28854  00D350  C078  F078         	movff	___fldiv@b,?___fldiv
 28855  00D354  C079  F079         	movff	___fldiv@b+1,?___fldiv+1
 28856  00D358  C07A  F07A         	movff	___fldiv@b+2,?___fldiv+2
 28857  00D35C  C07B  F07B         	movff	___fldiv@b+3,?___fldiv+3
 28858                           
 28859                           ; BSR set to: 0
 28860  00D360  0012               	return	
 28861  00D362                     l3742:
 28862                           
 28863                           ; BSR set to: 0
 28864                           
 28865                           ; BSR set to: 0
 28866  00D362  518F               	movf	___fldiv@bexp& (0+255),w,b
 28867  00D364  A4D8               	btfss	status,2,c
 28868  00D366  D011               	goto	l3744
 28869                           
 28870                           ; BSR set to: 0
 28871  00D368  0E00               	movlw	0
 28872  00D36A  6F78               	movwf	___fldiv@b& (0+255),b
 28873  00D36C  0E00               	movlw	0
 28874  00D36E  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 28875  00D370  0E00               	movlw	0
 28876  00D372  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 28877  00D374  0E00               	movlw	0
 28878  00D376  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 28879                           
 28880                           ; BSR set to: 0
 28881  00D378  C078  F078         	movff	___fldiv@b,?___fldiv
 28882  00D37C  C079  F079         	movff	___fldiv@b+1,?___fldiv+1
 28883  00D380  C07A  F07A         	movff	___fldiv@b+2,?___fldiv+2
 28884  00D384  C07B  F07B         	movff	___fldiv@b+3,?___fldiv+3
 28885                           
 28886                           ; BSR set to: 0
 28887  00D388  0012               	return	
 28888  00D38A                     l3744:
 28889                           
 28890                           ; BSR set to: 0
 28891                           
 28892                           ; BSR set to: 0
 28893  00D38A  5190               	movf	___fldiv@aexp& (0+255),w,b
 28894  00D38C  6F80               	movwf	??___fldiv& (0+255),b
 28895  00D38E  6B81               	clrf	(??___fldiv+1)& (0+255),b
 28896  00D390  1F80               	comf	??___fldiv& (0+255),f,b
 28897  00D392  1F81               	comf	(??___fldiv+1)& (0+255),f,b
 28898  00D394  4B80               	infsnz	??___fldiv& (0+255),f,b
 28899  00D396  2B81               	incf	(??___fldiv+1)& (0+255),f,b
 28900  00D398  518F               	movf	___fldiv@bexp& (0+255),w,b
 28901  00D39A  6F82               	movwf	(??___fldiv+2)& (0+255),b
 28902  00D39C  6B83               	clrf	(??___fldiv+3)& (0+255),b
 28903  00D39E  5180               	movf	??___fldiv& (0+255),w,b
 28904  00D3A0  2782               	addwf	(??___fldiv+2)& (0+255),f,b
 28905  00D3A2  5181               	movf	(??___fldiv+1)& (0+255),w,b
 28906  00D3A4  2383               	addwfc	(??___fldiv+3)& (0+255),f,b
 28907  00D3A6  0E7F               	movlw	127
 28908  00D3A8  2582               	addwf	(??___fldiv+2)& (0+255),w,b
 28909  00D3AA  6F89               	movwf	___fldiv@new_exp& (0+255),b
 28910  00D3AC  0E00               	movlw	0
 28911  00D3AE  2183               	addwfc	(??___fldiv+3)& (0+255),w,b
 28912  00D3B0  6F8A               	movwf	(___fldiv@new_exp+1)& (0+255),b
 28913                           
 28914                           ; BSR set to: 0
 28915  00D3B2  C078  F084         	movff	___fldiv@b,___fldiv@rem
 28916  00D3B6  C079  F085         	movff	___fldiv@b+1,___fldiv@rem+1
 28917  00D3BA  C07A  F086         	movff	___fldiv@b+2,___fldiv@rem+2
 28918  00D3BE  C07B  F087         	movff	___fldiv@b+3,___fldiv@rem+3
 28919                           
 28920                           ; BSR set to: 0
 28921  00D3C2  0E00               	movlw	0
 28922  00D3C4  6F78               	movwf	___fldiv@b& (0+255),b
 28923  00D3C6  0E00               	movlw	0
 28924  00D3C8  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 28925  00D3CA  0E00               	movlw	0
 28926  00D3CC  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 28927  00D3CE  0E00               	movlw	0
 28928  00D3D0  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 28929                           
 28930                           ; BSR set to: 0
 28931  00D3D2  0E00               	movlw	0
 28932  00D3D4  6F8B               	movwf	___fldiv@grs& (0+255),b
 28933  00D3D6  0E00               	movlw	0
 28934  00D3D8  6F8C               	movwf	(___fldiv@grs+1)& (0+255),b
 28935  00D3DA  0E00               	movlw	0
 28936  00D3DC  6F8D               	movwf	(___fldiv@grs+2)& (0+255),b
 28937  00D3DE  0E00               	movlw	0
 28938  00D3E0  6F8E               	movwf	(___fldiv@grs+3)& (0+255),b
 28939                           
 28940                           ; BSR set to: 0
 28941  00D3E2  0E00               	movlw	0
 28942  00D3E4  6F90               	movwf	___fldiv@aexp& (0+255),b
 28943  00D3E6  D028               	goto	l3745
 28944  00D3E8                     
 28945                           ; BSR set to: 0
 28946                           
 28947                           ; BSR set to: 0
 28948  00D3E8  5190               	movf	___fldiv@aexp& (0+255),w,b
 28949  00D3EA  B4D8               	btfsc	status,2,c
 28950  00D3EC  D011               	goto	l3747
 28951                           
 28952                           ; BSR set to: 0
 28953  00D3EE  90D8               	bcf	status,0,c
 28954  00D3F0  3784               	rlcf	___fldiv@rem& (0+255),f,b
 28955  00D3F2  3785               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 28956  00D3F4  3786               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 28957  00D3F6  3787               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 28958  00D3F8  90D8               	bcf	status,0,c
 28959  00D3FA  3778               	rlcf	___fldiv@b& (0+255),f,b
 28960  00D3FC  3779               	rlcf	(___fldiv@b+1)& (0+255),f,b
 28961  00D3FE  377A               	rlcf	(___fldiv@b+2)& (0+255),f,b
 28962  00D400  377B               	rlcf	(___fldiv@b+3)& (0+255),f,b
 28963                           
 28964                           ; BSR set to: 0
 28965  00D402  BF8E               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 28966                           
 28967                           ; BSR set to: 0
 28968  00D404  8178               	bsf	___fldiv@b& (0+255),0,b
 28969                           
 28970                           ; BSR set to: 0
 28971  00D406  90D8               	bcf	status,0,c
 28972  00D408  378B               	rlcf	___fldiv@grs& (0+255),f,b
 28973  00D40A  378C               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 28974  00D40C  378D               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 28975  00D40E  378E               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 28976  00D410                     l3747:
 28977                           
 28978                           ; BSR set to: 0
 28979                           
 28980                           ; BSR set to: 0
 28981  00D410  517C               	movf	___fldiv@a& (0+255),w,b
 28982  00D412  5D84               	subwf	___fldiv@rem& (0+255),w,b
 28983  00D414  517D               	movf	(___fldiv@a+1)& (0+255),w,b
 28984  00D416  5985               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 28985  00D418  517E               	movf	(___fldiv@a+2)& (0+255),w,b
 28986  00D41A  5986               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 28987  00D41C  517F               	movf	(___fldiv@a+3)& (0+255),w,b
 28988  00D41E  5987               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 28989  00D420  A0D8               	btfss	status,0,c
 28990  00D422  D009               	goto	l3749
 28991                           
 28992                           ; BSR set to: 0
 28993  00D424  8D8E               	bsf	(___fldiv@grs+3)& (0+255),6,b
 28994                           
 28995                           ; BSR set to: 0
 28996  00D426  517C               	movf	___fldiv@a& (0+255),w,b
 28997  00D428  5F84               	subwf	___fldiv@rem& (0+255),f,b
 28998  00D42A  517D               	movf	(___fldiv@a+1)& (0+255),w,b
 28999  00D42C  5B85               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 29000  00D42E  517E               	movf	(___fldiv@a+2)& (0+255),w,b
 29001  00D430  5B86               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 29002  00D432  517F               	movf	(___fldiv@a+3)& (0+255),w,b
 29003  00D434  5B87               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 29004  00D436                     l3749:
 29005                           
 29006                           ; BSR set to: 0
 29007                           
 29008                           ; BSR set to: 0
 29009  00D436  2B90               	incf	___fldiv@aexp& (0+255),f,b
 29010  00D438                     l3745:
 29011                           
 29012                           ; BSR set to: 0
 29013  00D438  0E19               	movlw	25
 29014  00D43A  6590               	cpfsgt	___fldiv@aexp& (0+255),b
 29015  00D43C  D7D5               	goto	l3746
 29016                           
 29017                           ; BSR set to: 0
 29018                           
 29019                           ; BSR set to: 0
 29020  00D43E  5184               	movf	___fldiv@rem& (0+255),w,b
 29021  00D440  1185               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 29022  00D442  1186               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 29023  00D444  1187               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 29024  00D446  B4D8               	btfsc	status,2,c
 29025  00D448  D011               	goto	l3752
 29026                           
 29027                           ; BSR set to: 0
 29028  00D44A  818B               	bsf	___fldiv@grs& (0+255),0,b
 29029                           
 29030                           ; BSR set to: 0
 29031  00D44C  D00F               	goto	l3752
 29032  00D44E                     
 29033                           ; BSR set to: 0
 29034                           
 29035                           ; BSR set to: 0
 29036  00D44E  90D8               	bcf	status,0,c
 29037  00D450  3778               	rlcf	___fldiv@b& (0+255),f,b
 29038  00D452  3779               	rlcf	(___fldiv@b+1)& (0+255),f,b
 29039  00D454  377A               	rlcf	(___fldiv@b+2)& (0+255),f,b
 29040  00D456  377B               	rlcf	(___fldiv@b+3)& (0+255),f,b
 29041                           
 29042                           ; BSR set to: 0
 29043  00D458  BF8E               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 29044                           
 29045                           ; BSR set to: 0
 29046  00D45A  8178               	bsf	___fldiv@b& (0+255),0,b
 29047                           
 29048                           ; BSR set to: 0
 29049  00D45C  90D8               	bcf	status,0,c
 29050  00D45E  378B               	rlcf	___fldiv@grs& (0+255),f,b
 29051  00D460  378C               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 29052  00D462  378D               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 29053  00D464  378E               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 29054  00D466  0789               	decf	___fldiv@new_exp& (0+255),f,b
 29055  00D468  A0D8               	btfss	status,0,c
 29056  00D46A  078A               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 29057  00D46C                     l3752:
 29058                           
 29059                           ; BSR set to: 0
 29060                           
 29061                           ; BSR set to: 0
 29062  00D46C  AF7A               	btfss	(___fldiv@b+2)& (0+255),7,b
 29063  00D46E  D7EF               	goto	l3753
 29064                           
 29065                           ; BSR set to: 0
 29066                           
 29067                           ; BSR set to: 0
 29068  00D470  0E00               	movlw	0
 29069  00D472  6F90               	movwf	___fldiv@aexp& (0+255),b
 29070                           
 29071                           ; BSR set to: 0
 29072  00D474  AF8E               	btfss	(___fldiv@grs+3)& (0+255),7,b
 29073  00D476  D016               	goto	l3759
 29074                           
 29075                           ; BSR set to: 0
 29076  00D478  0EFF               	movlw	255
 29077  00D47A  158B               	andwf	___fldiv@grs& (0+255),w,b
 29078  00D47C  6F80               	movwf	??___fldiv& (0+255),b
 29079  00D47E  0EFF               	movlw	255
 29080  00D480  158C               	andwf	(___fldiv@grs+1)& (0+255),w,b
 29081  00D482  6F81               	movwf	(??___fldiv+1)& (0+255),b
 29082  00D484  0EFF               	movlw	255
 29083  00D486  158D               	andwf	(___fldiv@grs+2)& (0+255),w,b
 29084  00D488  6F82               	movwf	(??___fldiv+2)& (0+255),b
 29085  00D48A  0E7F               	movlw	127
 29086  00D48C  158E               	andwf	(___fldiv@grs+3)& (0+255),w,b
 29087  00D48E  6F83               	movwf	(??___fldiv+3)& (0+255),b
 29088  00D490  5180               	movf	??___fldiv& (0+255),w,b
 29089  00D492  1181               	iorwf	(??___fldiv+1)& (0+255),w,b
 29090  00D494  1182               	iorwf	(??___fldiv+2)& (0+255),w,b
 29091  00D496  1183               	iorwf	(??___fldiv+3)& (0+255),w,b
 29092  00D498  A4D8               	btfss	status,2,c
 29093  00D49A  D002               	goto	u13610
 29094                           
 29095                           ; BSR set to: 0
 29096                           
 29097                           ; BSR set to: 0
 29098  00D49C  A178               	btfss	___fldiv@b& (0+255),0,b
 29099  00D49E  D002               	goto	l3759
 29100  00D4A0                     u13610:
 29101                           
 29102                           ; BSR set to: 0
 29103  00D4A0  0E01               	movlw	1
 29104  00D4A2  6F90               	movwf	___fldiv@aexp& (0+255),b
 29105  00D4A4                     l3759:
 29106                           
 29107                           ; BSR set to: 0
 29108                           
 29109                           ; BSR set to: 0
 29110                           
 29111                           ; BSR set to: 0
 29112  00D4A4  5190               	movf	___fldiv@aexp& (0+255),w,b
 29113  00D4A6  B4D8               	btfsc	status,2,c
 29114  00D4A8  D01F               	goto	l3761
 29115                           
 29116                           ; BSR set to: 0
 29117  00D4AA  0E01               	movlw	1
 29118  00D4AC  2778               	addwf	___fldiv@b& (0+255),f,b
 29119  00D4AE  0E00               	movlw	0
 29120  00D4B0  2379               	addwfc	(___fldiv@b+1)& (0+255),f,b
 29121  00D4B2  237A               	addwfc	(___fldiv@b+2)& (0+255),f,b
 29122  00D4B4  237B               	addwfc	(___fldiv@b+3)& (0+255),f,b
 29123                           
 29124                           ; BSR set to: 0
 29125  00D4B6  A17B               	btfss	(___fldiv@b+3)& (0+255),0,b
 29126  00D4B8  D017               	goto	l3761
 29127                           
 29128                           ; BSR set to: 0
 29129  00D4BA  C078  F080         	movff	___fldiv@b,??___fldiv
 29130  00D4BE  C079  F081         	movff	___fldiv@b+1,??___fldiv+1
 29131  00D4C2  C07A  F082         	movff	___fldiv@b+2,??___fldiv+2
 29132  00D4C6  C07B  F083         	movff	___fldiv@b+3,??___fldiv+3
 29133  00D4CA  3583               	rlcf	(??___fldiv+3)& (0+255),w,b
 29134  00D4CC  3383               	rrcf	(??___fldiv+3)& (0+255),f,b
 29135  00D4CE  3382               	rrcf	(??___fldiv+2)& (0+255),f,b
 29136  00D4D0  3381               	rrcf	(??___fldiv+1)& (0+255),f,b
 29137  00D4D2  3380               	rrcf	??___fldiv& (0+255),f,b
 29138  00D4D4  C080  F078         	movff	??___fldiv,___fldiv@b
 29139  00D4D8  C081  F079         	movff	??___fldiv+1,___fldiv@b+1
 29140  00D4DC  C082  F07A         	movff	??___fldiv+2,___fldiv@b+2
 29141  00D4E0  C083  F07B         	movff	??___fldiv+3,___fldiv@b+3
 29142                           
 29143                           ; BSR set to: 0
 29144  00D4E4  4B89               	infsnz	___fldiv@new_exp& (0+255),f,b
 29145  00D4E6  2B8A               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 29146  00D4E8                     l3761:
 29147                           
 29148                           ; BSR set to: 0
 29149                           
 29150                           ; BSR set to: 0
 29151                           
 29152                           ; BSR set to: 0
 29153  00D4E8  BF8A               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 29154  00D4EA  D010               	goto	l3762
 29155  00D4EC  518A               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 29156  00D4EE  E103               	bnz	u13640
 29157  00D4F0  2989               	incf	___fldiv@new_exp& (0+255),w,b
 29158  00D4F2  A0D8               	btfss	status,0,c
 29159  00D4F4  D00B               	goto	l3762
 29160  00D4F6                     u13640:
 29161                           
 29162                           ; BSR set to: 0
 29163  00D4F6  0E00               	movlw	0
 29164  00D4F8  6F8A               	movwf	(___fldiv@new_exp+1)& (0+255),b
 29165  00D4FA  6989               	setf	___fldiv@new_exp& (0+255),b
 29166  00D4FC  0E00               	movlw	0
 29167  00D4FE  6F78               	movwf	___fldiv@b& (0+255),b
 29168  00D500  0E00               	movlw	0
 29169  00D502  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 29170  00D504  0E00               	movlw	0
 29171  00D506  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 29172  00D508  0E00               	movlw	0
 29173  00D50A  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 29174  00D50C                     l3762:
 29175                           
 29176                           ; BSR set to: 0
 29177                           
 29178                           ; BSR set to: 0
 29179  00D50C  BF8A               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 29180  00D50E  D005               	goto	u13650
 29181  00D510  518A               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 29182  00D512  E111               	bnz	l14865
 29183  00D514  0589               	decf	___fldiv@new_exp& (0+255),w,b
 29184  00D516  B0D8               	btfsc	status,0,c
 29185  00D518  D00E               	goto	l3763
 29186  00D51A                     u13650:
 29187                           
 29188                           ; BSR set to: 0
 29189  00D51A  0E00               	movlw	0
 29190  00D51C  6F8A               	movwf	(___fldiv@new_exp+1)& (0+255),b
 29191  00D51E  0E00               	movlw	0
 29192  00D520  6F89               	movwf	___fldiv@new_exp& (0+255),b
 29193  00D522  0E00               	movlw	0
 29194  00D524  6F78               	movwf	___fldiv@b& (0+255),b
 29195  00D526  0E00               	movlw	0
 29196  00D528  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 29197  00D52A  0E00               	movlw	0
 29198  00D52C  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 29199  00D52E  0E00               	movlw	0
 29200  00D530  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 29201  00D532  0E00               	movlw	0
 29202  00D534  6F88               	movwf	___fldiv@sign& (0+255),b
 29203  00D536                     l3763:
 29204  00D536                     l14865:
 29205                           
 29206                           ; BSR set to: 0
 29207  00D536  C089  F08F         	movff	___fldiv@new_exp,___fldiv@bexp
 29208                           
 29209                           ; BSR set to: 0
 29210  00D53A  A18F               	btfss	___fldiv@bexp& (0+255),0,b
 29211  00D53C  D002               	goto	l3764
 29212                           
 29213                           ; BSR set to: 0
 29214  00D53E  8F7A               	bsf	(___fldiv@b+2)& (0+255),7,b
 29215  00D540  D001               	goto	l3765
 29216  00D542                     l3764:
 29217                           
 29218                           ; BSR set to: 0
 29219                           
 29220                           ; BSR set to: 0
 29221  00D542  9F7A               	bcf	(___fldiv@b+2)& (0+255),7,b
 29222  00D544                     l3765:
 29223                           
 29224                           ; BSR set to: 0
 29225                           
 29226                           ; BSR set to: 0
 29227  00D544  90D8               	bcf	status,0,c
 29228  00D546  318F               	rrcf	___fldiv@bexp& (0+255),w,b
 29229  00D548  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 29230                           
 29231                           ; BSR set to: 0
 29232  00D54A  5188               	movf	___fldiv@sign& (0+255),w,b
 29233  00D54C  137B               	iorwf	(___fldiv@b+3)& (0+255),f,b
 29234                           
 29235                           ; BSR set to: 0
 29236  00D54E  C078  F078         	movff	___fldiv@b,?___fldiv
 29237  00D552  C079  F079         	movff	___fldiv@b+1,?___fldiv+1
 29238  00D556  C07A  F07A         	movff	___fldiv@b+2,?___fldiv+2
 29239  00D55A  C07B  F07B         	movff	___fldiv@b+3,?___fldiv+3
 29240  00D55E  0012               	return	
 29241  00D560                     __end_of___fldiv:
 29242                           	opt stack 0
 29243                           tblptru	equ	0xFF8
 29244                           tblptrh	equ	0xFF7
 29245                           tblptrl	equ	0xFF6
 29246                           tablat	equ	0xFF5
 29247                           prodh	equ	0xFF4
 29248                           prodl	equ	0xFF3
 29249                           intcon	equ	0xFF2
 29250                           postinc0	equ	0xFEE
 29251                           wreg	equ	0xFE8
 29252                           indf1	equ	0xFE7
 29253                           postinc1	equ	0xFE6
 29254                           postdec1	equ	0xFE5
 29255                           plusw1	equ	0xFE3
 29256                           fsr1h	equ	0xFE2
 29257                           fsr1l	equ	0xFE1
 29258                           indf2	equ	0xFDF
 29259                           postinc2	equ	0xFDE
 29260                           postdec2	equ	0xFDD
 29261                           plusw2	equ	0xFDB
 29262                           fsr2h	equ	0xFDA
 29263                           fsr2l	equ	0xFD9
 29264                           status	equ	0xFD8
 29265                           
 29266 ;; *************** function __display_signed_itoa *****************
 29267 ;; Defined at:
 29268 ;;		line 126 in file "display.c"
 29269 ;; Parameters:    Size  Location     Type
 29270 ;;  value           2   47[BANK0 ] int 
 29271 ;;  text            2   49[BANK0 ] PTR unsigned char 
 29272 ;;		 -> display_prepare@temp(10), 
 29273 ;; Auto vars:     Size  Location     Type
 29274 ;;		None
 29275 ;; Return value:  Size  Location     Type
 29276 ;;                  1    wreg      void 
 29277 ;; Registers used:
 29278 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29279 ;; Tracked objects:
 29280 ;;		On entry : 0/0
 29281 ;;		On exit  : 0/0
 29282 ;;		Unchanged: 0/0
 29283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29284 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29287 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29288 ;;Total ram usage:        4 bytes
 29289 ;; Hardware stack levels used:    1
 29290 ;; Hardware stack levels required when called:   14
 29291 ;; This function calls:
 29292 ;;		__display_padded_itoa
 29293 ;; This function is called by:
 29294 ;;		_display_prepare
 29295 ;; This function uses a non-reentrant model
 29296 ;;
 29297                           
 29298                           	psect	text109
 29299  0159EC                     __ptext109:
 29300                           	opt stack 0
 29301  0159EC                     __display_signed_itoa:
 29302                           	opt stack 15
 29303                           
 29304                           ;display.c: 128: if(value<0)
 29305                           
 29306                           ; BSR set to: 0
 29307                           ;incstack = 0
 29308  0159EC  0100               	movlb	0	; () banked
 29309  0159EE  AF90               	btfss	(__display_signed_itoa@value+1)& (0+255),7,b
 29310  0159F0  D00A               	goto	l1345
 29311                           
 29312                           ; BSR set to: 0
 29313                           ;display.c: 129: {;display.c: 130: value = -value;
 29314  0159F2  6D8F               	negf	__display_signed_itoa@value& (0+255),b
 29315  0159F4  1F90               	comf	(__display_signed_itoa@value+1)& (0+255),f,b
 29316  0159F6  B0D8               	btfsc	status,0,c
 29317  0159F8  2B90               	incf	(__display_signed_itoa@value+1)& (0+255),f,b
 29318                           
 29319                           ; BSR set to: 0
 29320                           ;display.c: 131: text[0] = '-';
 29321  0159FA  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 29322  0159FE  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 29323  015A02  0E2D               	movlw	45
 29324  015A04  D005               	goto	L25
 29325  015A06                     l1345:
 29326                           
 29327                           ; BSR set to: 0
 29328                           ;display.c: 133: else;display.c: 134: {;display.c: 135: text[0] = '+';
 29329                           
 29330                           ; BSR set to: 0
 29331  015A06  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 29332  015A0A  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 29333  015A0E  0E2B               	movlw	43
 29334  015A10                     L25:
 29335  015A10  6EDF               	movwf	indf2,c
 29336                           
 29337                           ; BSR set to: 0
 29338                           ;display.c: 136: };display.c: 137: _display_padded_itoa(value, 0, &text[1]);
 29339                           
 29340                           ; BSR set to: 0
 29341  015A12  C08F  F078         	movff	__display_signed_itoa@value,__display_padded_itoa@value
 29342  015A16  C090  F079         	movff	__display_signed_itoa@value+1,__display_padded_itoa@value+1
 29343  015A1A  0E00               	movlw	0
 29344  015A1C  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 29345  015A1E  0E01               	movlw	1
 29346  015A20  2591               	addwf	__display_signed_itoa@text& (0+255),w,b
 29347  015A22  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 29348  015A24  0E00               	movlw	0
 29349  015A26  2192               	addwfc	(__display_signed_itoa@text+1)& (0+255),w,b
 29350  015A28  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 29351  015A2A  EC48  F092         	call	__display_padded_itoa	;wreg free
 29352  015A2E  0012               	return		;funcret
 29353  015A30                     __end_of__display_signed_itoa:
 29354                           	opt stack 0
 29355                           tblptru	equ	0xFF8
 29356                           tblptrh	equ	0xFF7
 29357                           tblptrl	equ	0xFF6
 29358                           tablat	equ	0xFF5
 29359                           prodh	equ	0xFF4
 29360                           prodl	equ	0xFF3
 29361                           intcon	equ	0xFF2
 29362                           postinc0	equ	0xFEE
 29363                           wreg	equ	0xFE8
 29364                           indf1	equ	0xFE7
 29365                           postinc1	equ	0xFE6
 29366                           postdec1	equ	0xFE5
 29367                           plusw1	equ	0xFE3
 29368                           fsr1h	equ	0xFE2
 29369                           fsr1l	equ	0xFE1
 29370                           indf2	equ	0xFDF
 29371                           postinc2	equ	0xFDE
 29372                           postdec2	equ	0xFDD
 29373                           plusw2	equ	0xFDB
 29374                           fsr2h	equ	0xFDA
 29375                           fsr2l	equ	0xFD9
 29376                           status	equ	0xFD8
 29377                           
 29378 ;; *************** function __display_padded_itoa *****************
 29379 ;; Defined at:
 29380 ;;		line 104 in file "display.c"
 29381 ;; Parameters:    Size  Location     Type
 29382 ;;  value           2   24[BANK0 ] int 
 29383 ;;  length          1   26[BANK0 ] unsigned char 
 29384 ;;  text            2   27[BANK0 ] PTR unsigned char 
 29385 ;;		 -> display_prepare@temp(10), 
 29386 ;; Auto vars:     Size  Location     Type
 29387 ;;  tmp            10   34[BANK0 ] unsigned char [10]
 29388 ;;  padding         1   46[BANK0 ] unsigned char 
 29389 ;;  pos             1   45[BANK0 ] unsigned char 
 29390 ;;  len             1   44[BANK0 ] unsigned char 
 29391 ;; Return value:  Size  Location     Type
 29392 ;;                  1    wreg      void 
 29393 ;; Registers used:
 29394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29395 ;; Tracked objects:
 29396 ;;		On entry : 0/0
 29397 ;;		On exit  : 0/0
 29398 ;;		Unchanged: 0/0
 29399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29400 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29401 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29402 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29403 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29404 ;;Total ram usage:       23 bytes
 29405 ;; Hardware stack levels used:    1
 29406 ;; Hardware stack levels required when called:   13
 29407 ;; This function calls:
 29408 ;;		_itoa
 29409 ;;		_strlen
 29410 ;; This function is called by:
 29411 ;;		__display_signed_itoa
 29412 ;;		_display_prepare
 29413 ;; This function uses a non-reentrant model
 29414 ;;
 29415                           
 29416                           	psect	text110
 29417  012490                     __ptext110:
 29418                           	opt stack 0
 29419  012490                     __display_padded_itoa:
 29420                           	opt stack 15
 29421                           
 29422                           ;display.c: 106: uint8_t pos;;display.c: 107: uint8_t padding;;display.c: 109: uint8_t l
      +                          en;;display.c: 110: char tmp[10];;display.c: 111: itoa(tmp, value, 10);
 29423                           
 29424                           ;incstack = 0
 29425  012490  0E82               	movlw	low __display_padded_itoa@tmp
 29426  012492  0100               	movlb	0	; () banked
 29427  012494  6F70               	movwf	itoa@buf& (0+255),b
 29428  012496  0E00               	movlw	high __display_padded_itoa@tmp
 29429  012498  6F71               	movwf	(itoa@buf+1)& (0+255),b
 29430  01249A  C078  F072         	movff	__display_padded_itoa@value,itoa@val
 29431  01249E  C079  F073         	movff	__display_padded_itoa@value+1,itoa@val+1
 29432  0124A2  0E00               	movlw	0
 29433  0124A4  6F75               	movwf	(itoa@base+1)& (0+255),b
 29434  0124A6  0E0A               	movlw	10
 29435  0124A8  6F74               	movwf	itoa@base& (0+255),b
 29436  0124AA  EC18  F0AD         	call	_itoa	;wreg free
 29437                           
 29438                           ;display.c: 112: len = strlen(tmp);
 29439  0124AE  0E82               	movlw	low __display_padded_itoa@tmp
 29440  0124B0  0100               	movlb	0	; () banked
 29441  0124B2  6F60               	movwf	strlen@s& (0+255),b
 29442  0124B4  0E00               	movlw	high __display_padded_itoa@tmp
 29443  0124B6  6F61               	movwf	(strlen@s+1)& (0+255),b
 29444  0124B8  ECBE  F0AD         	call	_strlen	;wreg free
 29445  0124BC  0100               	movlb	0	; () banked
 29446  0124BE  5160               	movf	?_strlen& (0+255),w,b
 29447  0124C0  6F8C               	movwf	__display_padded_itoa@len& (0+255),b
 29448                           
 29449                           ; BSR set to: 0
 29450                           ;display.c: 113: padding = 0;
 29451  0124C2  0E00               	movlw	0
 29452  0124C4  6F8E               	movwf	__display_padded_itoa@padding& (0+255),b
 29453                           
 29454                           ;display.c: 114: while((padding+len)<length)
 29455  0124C6  D00B               	goto	l1336
 29456  0124C8                     
 29457                           ; BSR set to: 0
 29458                           ;display.c: 115: {;display.c: 116: text[padding] = ' ';
 29459                           
 29460                           ; BSR set to: 0
 29461  0124C8  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 29462  0124CA  0D01               	mullw	1
 29463  0124CC  50F3               	movf	prodl,w,c
 29464  0124CE  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 29465  0124D0  6ED9               	movwf	fsr2l,c
 29466  0124D2  50F4               	movf	prodh,w,c
 29467  0124D4  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 29468  0124D6  6EDA               	movwf	fsr2h,c
 29469  0124D8  0E20               	movlw	32
 29470  0124DA  6EDF               	movwf	indf2,c
 29471                           
 29472                           ; BSR set to: 0
 29473                           ;display.c: 117: ++padding;
 29474  0124DC  2B8E               	incf	__display_padded_itoa@padding& (0+255),f,b
 29475  0124DE                     l1336:
 29476                           
 29477                           ; BSR set to: 0
 29478                           
 29479                           ; BSR set to: 0
 29480  0124DE  517A               	movf	__display_padded_itoa@length& (0+255),w,b
 29481  0124E0  6F7D               	movwf	??__display_padded_itoa& (0+255),b
 29482  0124E2  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 29483  0124E4  518C               	movf	__display_padded_itoa@len& (0+255),w,b
 29484  0124E6  C08E  F07F         	movff	__display_padded_itoa@padding,??__display_padded_itoa+2
 29485  0124EA  6B80               	clrf	(??__display_padded_itoa+3)& (0+255),b
 29486  0124EC  277F               	addwf	(??__display_padded_itoa+2)& (0+255),f,b
 29487  0124EE  0E00               	movlw	0
 29488  0124F0  2380               	addwfc	(??__display_padded_itoa+3)& (0+255),f,b
 29489  0124F2  517D               	movf	??__display_padded_itoa& (0+255),w,b
 29490  0124F4  5D7F               	subwf	(??__display_padded_itoa+2)& (0+255),w,b
 29491  0124F6  5180               	movf	(??__display_padded_itoa+3)& (0+255),w,b
 29492  0124F8  0A80               	xorlw	128
 29493  0124FA  6F81               	movwf	(??__display_padded_itoa+4)& (0+255),b
 29494  0124FC  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 29495  0124FE  0A80               	xorlw	128
 29496  012500  5981               	subwfb	(??__display_padded_itoa+4)& (0+255),w,b
 29497  012502  A0D8               	btfss	status,0,c
 29498  012504  D7E1               	goto	l1337
 29499                           
 29500                           ; BSR set to: 0
 29501                           ;display.c: 118: };display.c: 119: for(pos=0; tmp[pos]; ++pos)
 29502                           
 29503                           ; BSR set to: 0
 29504  012506  0E00               	movlw	0
 29505  012508  6F8D               	movwf	__display_padded_itoa@pos& (0+255),b
 29506  01250A  D018               	goto	l1339
 29507  01250C                     
 29508                           ; BSR set to: 0
 29509                           ;display.c: 120: {;display.c: 121: text[pos+padding] = tmp[pos];
 29510                           
 29511                           ; BSR set to: 0
 29512  01250C  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 29513  01250E  0D01               	mullw	1
 29514  012510  0E82               	movlw	low __display_padded_itoa@tmp
 29515  012512  24F3               	addwf	prodl,w,c
 29516  012514  6ED9               	movwf	fsr2l,c
 29517  012516  0E00               	movlw	high __display_padded_itoa@tmp
 29518  012518  20F4               	addwfc	prodh,w,c
 29519  01251A  6EDA               	movwf	fsr2h,c
 29520  01251C  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 29521  01251E  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 29522  012522  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 29523  012524  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 29524  012526  0E00               	movlw	0
 29525  012528  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 29526  01252A  517D               	movf	??__display_padded_itoa& (0+255),w,b
 29527  01252C  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 29528  01252E  6EE1               	movwf	fsr1l,c
 29529  012530  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 29530  012532  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 29531  012534  6EE2               	movwf	fsr1h,c
 29532  012536  CFDF FFE7          	movff	indf2,indf1
 29533                           
 29534                           ; BSR set to: 0
 29535  01253A  2B8D               	incf	__display_padded_itoa@pos& (0+255),f,b
 29536  01253C                     l1339:
 29537                           
 29538                           ; BSR set to: 0
 29539                           
 29540                           ; BSR set to: 0
 29541  01253C  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 29542  01253E  0D01               	mullw	1
 29543  012540  0E82               	movlw	low __display_padded_itoa@tmp
 29544  012542  24F3               	addwf	prodl,w,c
 29545  012544  6ED9               	movwf	fsr2l,c
 29546  012546  0E00               	movlw	high __display_padded_itoa@tmp
 29547  012548  20F4               	addwfc	prodh,w,c
 29548  01254A  6EDA               	movwf	fsr2h,c
 29549  01254C  50DF               	movf	indf2,w,c
 29550  01254E  A4D8               	btfss	status,2,c
 29551  012550  D7DD               	goto	l1340
 29552                           
 29553                           ; BSR set to: 0
 29554                           ;display.c: 122: };display.c: 123: text[pos+padding] = 0x00;
 29555                           
 29556                           ; BSR set to: 0
 29557  012552  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 29558  012554  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 29559  012558  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 29560  01255A  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 29561  01255C  0E00               	movlw	0
 29562  01255E  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 29563  012560  517D               	movf	??__display_padded_itoa& (0+255),w,b
 29564  012562  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 29565  012564  6ED9               	movwf	fsr2l,c
 29566  012566  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 29567  012568  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 29568  01256A  6EDA               	movwf	fsr2h,c
 29569  01256C  0E00               	movlw	0
 29570  01256E  6EDF               	movwf	indf2,c
 29571                           
 29572                           ; BSR set to: 0
 29573  012570  0012               	return		;funcret
 29574  012572                     __end_of__display_padded_itoa:
 29575                           	opt stack 0
 29576                           tblptru	equ	0xFF8
 29577                           tblptrh	equ	0xFF7
 29578                           tblptrl	equ	0xFF6
 29579                           tablat	equ	0xFF5
 29580                           prodh	equ	0xFF4
 29581                           prodl	equ	0xFF3
 29582                           intcon	equ	0xFF2
 29583                           postinc0	equ	0xFEE
 29584                           wreg	equ	0xFE8
 29585                           indf1	equ	0xFE7
 29586                           postinc1	equ	0xFE6
 29587                           postdec1	equ	0xFE5
 29588                           plusw1	equ	0xFE3
 29589                           fsr1h	equ	0xFE2
 29590                           fsr1l	equ	0xFE1
 29591                           indf2	equ	0xFDF
 29592                           postinc2	equ	0xFDE
 29593                           postdec2	equ	0xFDD
 29594                           plusw2	equ	0xFDB
 29595                           fsr2h	equ	0xFDA
 29596                           fsr2l	equ	0xFD9
 29597                           status	equ	0xFD8
 29598                           
 29599 ;; *************** function __display_position_in_degrees *****************
 29600 ;; Defined at:
 29601 ;;		line 263 in file "display.c"
 29602 ;; Parameters:    Size  Location     Type
 29603 ;;		None
 29604 ;; Auto vars:     Size  Location     Type
 29605 ;;  position        4    4[BANK0 ] long 
 29606 ;; Return value:  Size  Location     Type
 29607 ;;                  4    0[BANK0 ] long 
 29608 ;; Registers used:
 29609 ;;		wreg, status,2, status,0
 29610 ;; Tracked objects:
 29611 ;;		On entry : 0/0
 29612 ;;		On exit  : 0/0
 29613 ;;		Unchanged: 0/0
 29614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29615 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29616 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29618 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29619 ;;Total ram usage:        8 bytes
 29620 ;; Hardware stack levels used:    1
 29621 ;; Hardware stack levels required when called:   10
 29622 ;; This function calls:
 29623 ;;		Nothing
 29624 ;; This function is called by:
 29625 ;;		_display_prepare
 29626 ;; This function uses a non-reentrant model
 29627 ;;
 29628                           
 29629                           	psect	text111
 29630  0156A8                     __ptext111:
 29631                           	opt stack 0
 29632  0156A8                     __display_position_in_degrees:
 29633                           	opt stack 19
 29634                           
 29635                           ;display.c: 265: int32_t position;;display.c: 266: position = (int32_t) os.current_posit
      +                          ion_in_degrees;
 29636                           
 29637                           ; BSR set to: 0
 29638                           ;incstack = 0
 29639  0156A8  C171  F064         	movff	_os+13,__display_position_in_degrees@position	;volatile
 29640  0156AC  C172  F065         	movff	_os+14,__display_position_in_degrees@position+1	;volatile
 29641  0156B0  0100               	movlb	0	; () banked
 29642  0156B2  6B66               	clrf	(__display_position_in_degrees@position+2)& (0+255),b
 29643  0156B4  6B67               	clrf	(__display_position_in_degrees@position+3)& (0+255),b
 29644                           
 29645                           ; BSR set to: 0
 29646                           ;display.c: 268: if(config.position_display_180==1)
 29647  0156B6  0101               	movlb	1	; () banked
 29648  0156B8  05BD               	decf	(_config+40)& (0+255),w,b
 29649  0156BA  A4D8               	btfss	status,2,c
 29650  0156BC  D014               	goto	l1390
 29651                           
 29652                           ; BSR set to: 1
 29653                           ;display.c: 269: {;display.c: 270: if(position>18000)
 29654  0156BE  0100               	movlb	0	; () banked
 29655  0156C0  BF67               	btfsc	(__display_position_in_degrees@position+3)& (0+255),7,b
 29656  0156C2  D011               	goto	l1390
 29657  0156C4  5167               	movf	(__display_position_in_degrees@position+3)& (0+255),w,b
 29658  0156C6  1166               	iorwf	(__display_position_in_degrees@position+2)& (0+255),w,b
 29659  0156C8  E106               	bnz	u17370
 29660  0156CA  0E51               	movlw	81
 29661  0156CC  5D64               	subwf	__display_position_in_degrees@position& (0+255),w,b
 29662  0156CE  0E46               	movlw	70
 29663  0156D0  5965               	subwfb	(__display_position_in_degrees@position+1)& (0+255),w,b
 29664  0156D2  A0D8               	btfss	status,0,c
 29665  0156D4  D008               	goto	l1390
 29666  0156D6                     u17370:
 29667                           
 29668                           ; BSR set to: 0
 29669                           ;display.c: 271: {;display.c: 272: position -= 36000;
 29670  0156D6  0E60               	movlw	96
 29671  0156D8  2764               	addwf	__display_position_in_degrees@position& (0+255),f,b
 29672  0156DA  0E73               	movlw	115
 29673  0156DC  2365               	addwfc	(__display_position_in_degrees@position+1)& (0+255),f,b
 29674  0156DE  0EFF               	movlw	255
 29675  0156E0  2366               	addwfc	(__display_position_in_degrees@position+2)& (0+255),f,b
 29676  0156E2  0EFF               	movlw	255
 29677  0156E4  2367               	addwfc	(__display_position_in_degrees@position+3)& (0+255),f,b
 29678  0156E6                     l1390:
 29679                           
 29680                           ;display.c: 273: };display.c: 274: };display.c: 276: return position;
 29681                           
 29682                           ; BSR set to: 0
 29683                           
 29684                           ; BSR set to: 0
 29685  0156E6  C064  F060         	movff	__display_position_in_degrees@position,?__display_position_in_degrees
 29686  0156EA  C065  F061         	movff	__display_position_in_degrees@position+1,?__display_position_in_degrees+1
 29687  0156EE  C066  F062         	movff	__display_position_in_degrees@position+2,?__display_position_in_degrees+2
 29688  0156F2  C067  F063         	movff	__display_position_in_degrees@position+3,?__display_position_in_degrees+3
 29689  0156F6  0012               	return	
 29690  0156F8                     __end_of__display_position_in_degrees:
 29691                           	opt stack 0
 29692                           tblptru	equ	0xFF8
 29693                           tblptrh	equ	0xFF7
 29694                           tblptrl	equ	0xFF6
 29695                           tablat	equ	0xFF5
 29696                           prodh	equ	0xFF4
 29697                           prodl	equ	0xFF3
 29698                           intcon	equ	0xFF2
 29699                           postinc0	equ	0xFEE
 29700                           wreg	equ	0xFE8
 29701                           indf1	equ	0xFE7
 29702                           postinc1	equ	0xFE6
 29703                           postdec1	equ	0xFE5
 29704                           plusw1	equ	0xFE3
 29705                           fsr1h	equ	0xFE2
 29706                           fsr1l	equ	0xFE1
 29707                           indf2	equ	0xFDF
 29708                           postinc2	equ	0xFDE
 29709                           postdec2	equ	0xFDD
 29710                           plusw2	equ	0xFDB
 29711                           fsr2h	equ	0xFDA
 29712                           fsr2l	equ	0xFD9
 29713                           status	equ	0xFD8
 29714                           
 29715 ;; *************** function __display_itoa_long *****************
 29716 ;; Defined at:
 29717 ;;		line 208 in file "display.c"
 29718 ;; Parameters:    Size  Location     Type
 29719 ;;  value           4   87[BANK0 ] long 
 29720 ;;  decimals        1   91[BANK0 ] unsigned char 
 29721 ;;  text            2   92[BANK0 ] PTR unsigned char 
 29722 ;;		 -> display_prepare@temp(10), 
 29723 ;; Auto vars:     Size  Location     Type
 29724 ;;  short_value     2   99[BANK0 ] int 
 29725 ;;  last_digit      1  101[BANK0 ] char 
 29726 ;;  length          1   98[BANK0 ] unsigned char 
 29727 ;; Return value:  Size  Location     Type
 29728 ;;                  1    wreg      void 
 29729 ;; Registers used:
 29730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29731 ;; Tracked objects:
 29732 ;;		On entry : 0/0
 29733 ;;		On exit  : 0/0
 29734 ;;		Unchanged: 0/0
 29735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29736 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29737 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29738 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29739 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29740 ;;Total ram usage:       15 bytes
 29741 ;; Hardware stack levels used:    1
 29742 ;; Hardware stack levels required when called:   14
 29743 ;; This function calls:
 29744 ;;		___aldiv
 29745 ;;		___almod
 29746 ;;		__display_itoa
 29747 ;;		_strlen
 29748 ;; This function is called by:
 29749 ;;		_display_prepare
 29750 ;; This function uses a non-reentrant model
 29751 ;;
 29752                           
 29753                           	psect	text112
 29754  0111F6                     __ptext112:
 29755                           	opt stack 0
 29756  0111F6                     __display_itoa_long:
 29757                           	opt stack 15
 29758                           
 29759                           ;display.c: 210: int16_t short_value;;display.c: 211: int8_t last_digit;;display.c: 212:
      +                           uint8_t length;;display.c: 214: short_value = (int16_t) value;
 29760                           
 29761                           ;incstack = 0
 29762  0111F6  C0B7  F0C3         	movff	__display_itoa_long@value,__display_itoa_long@short_value
 29763  0111FA  C0B8  F0C4         	movff	__display_itoa_long@value+1,__display_itoa_long@short_value+1
 29764                           
 29765                           ;display.c: 215: if(short_value==value)
 29766  0111FE  C0C3  F0BE         	movff	__display_itoa_long@short_value,??__display_itoa_long
 29767  011202  C0C4  F0BF         	movff	__display_itoa_long@short_value+1,??__display_itoa_long+1
 29768  011206  0E00               	movlw	0
 29769  011208  0100               	movlb	0	; () banked
 29770  01120A  BFBF               	btfsc	(??__display_itoa_long+1)& (0+255),7,b
 29771  01120C  0EFF               	movlw	255
 29772  01120E  6FC0               	movwf	(??__display_itoa_long+2)& (0+255),b
 29773  011210  6FC1               	movwf	(??__display_itoa_long+3)& (0+255),b
 29774  011212  51B7               	movf	__display_itoa_long@value& (0+255),w,b
 29775  011214  19BE               	xorwf	??__display_itoa_long& (0+255),w,b
 29776  011216  E117               	bnz	l18145
 29777  011218  51B8               	movf	(__display_itoa_long@value+1)& (0+255),w,b
 29778  01121A  19BF               	xorwf	(??__display_itoa_long+1)& (0+255),w,b
 29779  01121C  E114               	bnz	l18145
 29780  01121E  51B9               	movf	(__display_itoa_long@value+2)& (0+255),w,b
 29781  011220  19C0               	xorwf	(??__display_itoa_long+2)& (0+255),w,b
 29782  011222  E111               	bnz	l18145
 29783  011224  51BA               	movf	(__display_itoa_long@value+3)& (0+255),w,b
 29784  011226  19C1               	xorwf	(??__display_itoa_long+3)& (0+255),w,b
 29785  011228  A4D8               	btfss	status,2,c
 29786  01122A  D00D               	goto	l1372
 29787                           
 29788                           ; BSR set to: 0
 29789                           ;display.c: 216: {;display.c: 217: _display_itoa(short_value, decimals, text);
 29790  01122C  C0C3  F09F         	movff	__display_itoa_long@short_value,__display_itoa@value
 29791  011230  C0C4  F0A0         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 29792  011234  C0BB  F0A1         	movff	__display_itoa_long@decimals,__display_itoa@decimals
 29793  011238  C0BC  F0A2         	movff	__display_itoa_long@text,__display_itoa@text
 29794  01123C  C0BD  F0A3         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 29795  011240  EC8C  F070         	call	__display_itoa	;wreg free
 29796                           
 29797                           ;display.c: 218: }
 29798  011244  0012               	return	
 29799  011246                     l1372:
 29800  011246                     l18145:
 29801                           
 29802                           ;display.c: 219: else;display.c: 220: {;display.c: 221: short_value = value / 10;
 29803  011246  C0B7  F060         	movff	__display_itoa_long@value,___aldiv@dividend
 29804  01124A  C0B8  F061         	movff	__display_itoa_long@value+1,___aldiv@dividend+1
 29805  01124E  C0B9  F062         	movff	__display_itoa_long@value+2,___aldiv@dividend+2
 29806  011252  C0BA  F063         	movff	__display_itoa_long@value+3,___aldiv@dividend+3
 29807  011256  0E0A               	movlw	10
 29808  011258  0100               	movlb	0	; () banked
 29809  01125A  6F64               	movwf	___aldiv@divisor& (0+255),b
 29810  01125C  0E00               	movlw	0
 29811  01125E  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 29812  011260  0E00               	movlw	0
 29813  011262  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 29814  011264  0E00               	movlw	0
 29815  011266  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 29816  011268  EC6B  F097         	call	___aldiv	;wreg free
 29817  01126C  C060  F0C3         	movff	?___aldiv,__display_itoa_long@short_value
 29818  011270  C061  F0C4         	movff	?___aldiv+1,__display_itoa_long@short_value+1
 29819                           
 29820                           ;display.c: 222: _display_itoa(short_value, decimals-1, text);
 29821  011274  C0C3  F09F         	movff	__display_itoa_long@short_value,__display_itoa@value
 29822  011278  C0C4  F0A0         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 29823  01127C  0100               	movlb	0	; () banked
 29824  01127E  05BB               	decf	__display_itoa_long@decimals& (0+255),w,b
 29825  011280  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 29826  011282  C0BC  F0A2         	movff	__display_itoa_long@text,__display_itoa@text
 29827  011286  C0BD  F0A3         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 29828  01128A  EC8C  F070         	call	__display_itoa	;wreg free
 29829                           
 29830                           ;display.c: 223: length = strlen(text);
 29831  01128E  C0BC  F060         	movff	__display_itoa_long@text,strlen@s
 29832  011292  C0BD  F061         	movff	__display_itoa_long@text+1,strlen@s+1
 29833  011296  ECBE  F0AD         	call	_strlen	;wreg free
 29834  01129A  0100               	movlb	0	; () banked
 29835  01129C  5160               	movf	?_strlen& (0+255),w,b
 29836  01129E  6FC2               	movwf	__display_itoa_long@length& (0+255),b
 29837                           
 29838                           ; BSR set to: 0
 29839                           ;display.c: 224: last_digit = value % 10;
 29840  0112A0  C0B7  F060         	movff	__display_itoa_long@value,___almod@dividend
 29841  0112A4  C0B8  F061         	movff	__display_itoa_long@value+1,___almod@dividend+1
 29842  0112A8  C0B9  F062         	movff	__display_itoa_long@value+2,___almod@dividend+2
 29843  0112AC  C0BA  F063         	movff	__display_itoa_long@value+3,___almod@dividend+3
 29844  0112B0  0E0A               	movlw	10
 29845  0112B2  6F64               	movwf	___almod@divisor& (0+255),b
 29846  0112B4  0E00               	movlw	0
 29847  0112B6  6F65               	movwf	(___almod@divisor+1)& (0+255),b
 29848  0112B8  0E00               	movlw	0
 29849  0112BA  6F66               	movwf	(___almod@divisor+2)& (0+255),b
 29850  0112BC  0E00               	movlw	0
 29851  0112BE  6F67               	movwf	(___almod@divisor+3)& (0+255),b
 29852  0112C0  EC20  F09B         	call	___almod	;wreg free
 29853  0112C4  0100               	movlb	0	; () banked
 29854  0112C6  5160               	movf	?___almod& (0+255),w,b
 29855  0112C8  6FC5               	movwf	__display_itoa_long@last_digit& (0+255),b
 29856                           
 29857                           ; BSR set to: 0
 29858                           ;display.c: 225: if(last_digit<0)
 29859  0112CA  BFC5               	btfsc	__display_itoa_long@last_digit& (0+255),7,b
 29860                           
 29861                           ; BSR set to: 0
 29862                           ;display.c: 226: last_digit = -last_digit;
 29863  0112CC  6DC5               	negf	__display_itoa_long@last_digit& (0+255),b
 29864                           
 29865                           ; BSR set to: 0
 29866                           ;display.c: 227: text[length] = last_digit + 0x30;
 29867                           
 29868                           ; BSR set to: 0
 29869  0112CE  51C2               	movf	__display_itoa_long@length& (0+255),w,b
 29870  0112D0  0D01               	mullw	1
 29871  0112D2  50F3               	movf	prodl,w,c
 29872  0112D4  25BC               	addwf	__display_itoa_long@text& (0+255),w,b
 29873  0112D6  6ED9               	movwf	fsr2l,c
 29874  0112D8  50F4               	movf	prodh,w,c
 29875  0112DA  21BD               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 29876  0112DC  6EDA               	movwf	fsr2h,c
 29877  0112DE  51C5               	movf	__display_itoa_long@last_digit& (0+255),w,b
 29878  0112E0  0F30               	addlw	48
 29879  0112E2  6EDF               	movwf	indf2,c
 29880                           
 29881                           ; BSR set to: 0
 29882                           ;display.c: 228: text[length+1] = 0x00;
 29883  0112E4  51C2               	movf	__display_itoa_long@length& (0+255),w,b
 29884  0112E6  6FBE               	movwf	??__display_itoa_long& (0+255),b
 29885  0112E8  6BBF               	clrf	(??__display_itoa_long+1)& (0+255),b
 29886  0112EA  0E01               	movlw	1
 29887  0112EC  27BE               	addwf	??__display_itoa_long& (0+255),f,b
 29888  0112EE  0E00               	movlw	0
 29889  0112F0  23BF               	addwfc	(??__display_itoa_long+1)& (0+255),f,b
 29890  0112F2  51BE               	movf	??__display_itoa_long& (0+255),w,b
 29891  0112F4  25BC               	addwf	__display_itoa_long@text& (0+255),w,b
 29892  0112F6  6ED9               	movwf	fsr2l,c
 29893  0112F8  51BF               	movf	(??__display_itoa_long+1)& (0+255),w,b
 29894  0112FA  21BD               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 29895  0112FC  6EDA               	movwf	fsr2h,c
 29896  0112FE  0E00               	movlw	0
 29897  011300  6EDF               	movwf	indf2,c
 29898  011302  0012               	return	
 29899  011304                     __end_of__display_itoa_long:
 29900                           	opt stack 0
 29901                           tblptru	equ	0xFF8
 29902                           tblptrh	equ	0xFF7
 29903                           tblptrl	equ	0xFF6
 29904                           tablat	equ	0xFF5
 29905                           prodh	equ	0xFF4
 29906                           prodl	equ	0xFF3
 29907                           intcon	equ	0xFF2
 29908                           postinc0	equ	0xFEE
 29909                           wreg	equ	0xFE8
 29910                           indf1	equ	0xFE7
 29911                           postinc1	equ	0xFE6
 29912                           postdec1	equ	0xFE5
 29913                           plusw1	equ	0xFE3
 29914                           fsr1h	equ	0xFE2
 29915                           fsr1l	equ	0xFE1
 29916                           indf2	equ	0xFDF
 29917                           postinc2	equ	0xFDE
 29918                           postdec2	equ	0xFDD
 29919                           plusw2	equ	0xFDB
 29920                           fsr2h	equ	0xFDA
 29921                           fsr2l	equ	0xFD9
 29922                           status	equ	0xFD8
 29923                           
 29924 ;; *************** function __display_itoa *****************
 29925 ;; Defined at:
 29926 ;;		line 140 in file "display.c"
 29927 ;; Parameters:    Size  Location     Type
 29928 ;;  value           2   63[BANK0 ] int 
 29929 ;;  decimals        1   65[BANK0 ] unsigned char 
 29930 ;;  text            2   66[BANK0 ] PTR unsigned char 
 29931 ;;		 -> display_prepare@temp(10), display_content(80), 
 29932 ;; Auto vars:     Size  Location     Type
 29933 ;;  tmp            10   74[BANK0 ] unsigned char [10]
 29934 ;;  pos             1   86[BANK0 ] unsigned char 
 29935 ;;  missing         1   85[BANK0 ] char 
 29936 ;;  len             1   84[BANK0 ] unsigned char 
 29937 ;; Return value:  Size  Location     Type
 29938 ;;                  1    wreg      void 
 29939 ;; Registers used:
 29940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29941 ;; Tracked objects:
 29942 ;;		On entry : 0/0
 29943 ;;		On exit  : 0/0
 29944 ;;		Unchanged: 0/0
 29945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29946 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29947 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29948 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29949 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29950 ;;Total ram usage:       24 bytes
 29951 ;; Hardware stack levels used:    1
 29952 ;; Hardware stack levels required when called:   13
 29953 ;; This function calls:
 29954 ;;		_itoa
 29955 ;;		_strlen
 29956 ;; This function is called by:
 29957 ;;		__display_itoa_long
 29958 ;;		_display_prepare
 29959 ;; This function uses a non-reentrant model
 29960 ;;
 29961                           
 29962                           	psect	text113
 29963  00E118                     __ptext113:
 29964                           	opt stack 0
 29965  00E118                     __display_itoa:
 29966                           	opt stack 15
 29967                           
 29968                           ;display.c: 142: uint8_t pos;;display.c: 143: uint8_t len;;display.c: 144: int8_t missin
      +                          g;;display.c: 145: char tmp[10];;display.c: 146: itoa(tmp, value, 10);
 29969                           
 29970                           ;incstack = 0
 29971  00E118  0EAA               	movlw	low __display_itoa@tmp
 29972  00E11A  0100               	movlb	0	; () banked
 29973  00E11C  6F70               	movwf	itoa@buf& (0+255),b
 29974  00E11E  0E00               	movlw	high __display_itoa@tmp
 29975  00E120  6F71               	movwf	(itoa@buf+1)& (0+255),b
 29976  00E122  C09F  F072         	movff	__display_itoa@value,itoa@val
 29977  00E126  C0A0  F073         	movff	__display_itoa@value+1,itoa@val+1
 29978  00E12A  0E00               	movlw	0
 29979  00E12C  6F75               	movwf	(itoa@base+1)& (0+255),b
 29980  00E12E  0E0A               	movlw	10
 29981  00E130  6F74               	movwf	itoa@base& (0+255),b
 29982  00E132  EC18  F0AD         	call	_itoa	;wreg free
 29983                           
 29984                           ;display.c: 147: len = strlen(tmp);
 29985  00E136  0EAA               	movlw	low __display_itoa@tmp
 29986  00E138  0100               	movlb	0	; () banked
 29987  00E13A  6F60               	movwf	strlen@s& (0+255),b
 29988  00E13C  0E00               	movlw	high __display_itoa@tmp
 29989  00E13E  6F61               	movwf	(strlen@s+1)& (0+255),b
 29990  00E140  ECBE  F0AD         	call	_strlen	;wreg free
 29991  00E144  0100               	movlb	0	; () banked
 29992  00E146  5160               	movf	?_strlen& (0+255),w,b
 29993  00E148  6FB4               	movwf	__display_itoa@len& (0+255),b
 29994                           
 29995                           ; BSR set to: 0
 29996                           ;display.c: 149: if(value<0)
 29997  00E14A  AFA0               	btfss	(__display_itoa@value+1)& (0+255),7,b
 29998  00E14C  D054               	goto	l1350
 29999                           
 30000                           ; BSR set to: 0
 30001                           ;display.c: 150: {;display.c: 151: missing = decimals + 2 - len;
 30002  00E14E  51B4               	movf	__display_itoa@len& (0+255),w,b
 30003  00E150  0800               	sublw	0
 30004  00E152  25A1               	addwf	__display_itoa@decimals& (0+255),w,b
 30005  00E154  0F02               	addlw	2
 30006  00E156  6FB5               	movwf	__display_itoa@missing& (0+255),b
 30007                           
 30008                           ;display.c: 152: if(missing>0)
 30009  00E158  51B5               	movf	__display_itoa@missing& (0+255),w,b
 30010  00E15A  0A80               	xorlw	128
 30011  00E15C  0F7F               	addlw	-129
 30012  00E15E  A0D8               	btfss	status,0,c
 30013  00E160  D090               	goto	l1357
 30014                           
 30015                           ; BSR set to: 0
 30016                           ;display.c: 153: {;display.c: 154: for(pos=decimals;pos!=0xFF;--pos)
 30017  00E162  C0A1  F0B6         	movff	__display_itoa@decimals,__display_itoa@pos
 30018  00E166                     l16543:
 30019                           
 30020                           ; BSR set to: 0
 30021  00E166  29B6               	incf	__display_itoa@pos& (0+255),w,b
 30022  00E168  B4D8               	btfsc	status,2,c
 30023  00E16A  D042               	goto	u15440
 30024                           
 30025                           ; BSR set to: 0
 30026                           ;display.c: 155: {;display.c: 156: if(pos>=missing)
 30027                           
 30028                           ; BSR set to: 0
 30029                           
 30030                           ; BSR set to: 0
 30031  00E16C  51B6               	movf	__display_itoa@pos& (0+255),w,b
 30032  00E16E  BFB5               	btfsc	__display_itoa@missing& (0+255),7,b
 30033  00E170  D004               	goto	u15430
 30034  00E172  0AFF               	xorlw	255
 30035  00E174  25B5               	addwf	__display_itoa@missing& (0+255),w,b
 30036  00E176  B0D8               	btfsc	status,0,c
 30037  00E178  D02A               	goto	l1354
 30038  00E17A                     u15430:
 30039                           
 30040                           ; BSR set to: 0
 30041                           ;display.c: 157: {;display.c: 158: tmp[pos+1] = tmp[pos+1-missing];
 30042  00E17A  C0B5  F0A4         	movff	__display_itoa@missing,??__display_itoa
 30043  00E17E  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 30044  00E180  BFA4               	btfsc	??__display_itoa& (0+255),7,b
 30045  00E182  07A5               	decf	(??__display_itoa+1)& (0+255),f,b
 30046  00E184  1FA4               	comf	??__display_itoa& (0+255),f,b
 30047  00E186  1FA5               	comf	(??__display_itoa+1)& (0+255),f,b
 30048  00E188  4BA4               	infsnz	??__display_itoa& (0+255),f,b
 30049  00E18A  2BA5               	incf	(??__display_itoa+1)& (0+255),f,b
 30050  00E18C  51B6               	movf	__display_itoa@pos& (0+255),w,b
 30051  00E18E  6FA6               	movwf	(??__display_itoa+2)& (0+255),b
 30052  00E190  6BA7               	clrf	(??__display_itoa+3)& (0+255),b
 30053  00E192  51A4               	movf	??__display_itoa& (0+255),w,b
 30054  00E194  27A6               	addwf	(??__display_itoa+2)& (0+255),f,b
 30055  00E196  51A5               	movf	(??__display_itoa+1)& (0+255),w,b
 30056  00E198  23A7               	addwfc	(??__display_itoa+3)& (0+255),f,b
 30057  00E19A  0E01               	movlw	1
 30058  00E19C  27A6               	addwf	(??__display_itoa+2)& (0+255),f,b
 30059  00E19E  0E00               	movlw	0
 30060  00E1A0  23A7               	addwfc	(??__display_itoa+3)& (0+255),f,b
 30061  00E1A2  0EAA               	movlw	low __display_itoa@tmp
 30062  00E1A4  25A6               	addwf	(??__display_itoa+2)& (0+255),w,b
 30063  00E1A6  6ED9               	movwf	fsr2l,c
 30064  00E1A8  0E00               	movlw	high __display_itoa@tmp
 30065  00E1AA  21A7               	addwfc	(??__display_itoa+3)& (0+255),w,b
 30066  00E1AC  6EDA               	movwf	fsr2h,c
 30067  00E1AE  51B6               	movf	__display_itoa@pos& (0+255),w,b
 30068  00E1B0  6FA8               	movwf	(??__display_itoa+4)& (0+255),b
 30069  00E1B2  6BA9               	clrf	(??__display_itoa+5)& (0+255),b
 30070  00E1B4  0E01               	movlw	1
 30071  00E1B6  27A8               	addwf	(??__display_itoa+4)& (0+255),f,b
 30072  00E1B8  0E00               	movlw	0
 30073  00E1BA  23A9               	addwfc	(??__display_itoa+5)& (0+255),f,b
 30074  00E1BC  0EAA               	movlw	low __display_itoa@tmp
 30075  00E1BE  25A8               	addwf	(??__display_itoa+4)& (0+255),w,b
 30076  00E1C0  6EE1               	movwf	fsr1l,c
 30077  00E1C2  0E00               	movlw	high __display_itoa@tmp
 30078  00E1C4  21A9               	addwfc	(??__display_itoa+5)& (0+255),w,b
 30079  00E1C6  6EE2               	movwf	fsr1h,c
 30080  00E1C8  CFDF FFE7          	movff	indf2,indf1
 30081                           
 30082                           ;display.c: 159: }
 30083  00E1CC  D00F               	goto	l1355
 30084  00E1CE                     l1354:
 30085                           
 30086                           ; BSR set to: 0
 30087                           ;display.c: 160: else;display.c: 161: {;display.c: 162: tmp[pos+1] = '0';
 30088                           
 30089                           ; BSR set to: 0
 30090  00E1CE  51B6               	movf	__display_itoa@pos& (0+255),w,b
 30091  00E1D0  6FA4               	movwf	??__display_itoa& (0+255),b
 30092  00E1D2  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 30093  00E1D4  0E01               	movlw	1
 30094  00E1D6  27A4               	addwf	??__display_itoa& (0+255),f,b
 30095  00E1D8  0E00               	movlw	0
 30096  00E1DA  23A5               	addwfc	(??__display_itoa+1)& (0+255),f,b
 30097  00E1DC  0EAA               	movlw	low __display_itoa@tmp
 30098  00E1DE  25A4               	addwf	??__display_itoa& (0+255),w,b
 30099  00E1E0  6ED9               	movwf	fsr2l,c
 30100  00E1E2  0E00               	movlw	high __display_itoa@tmp
 30101  00E1E4  21A5               	addwfc	(??__display_itoa+1)& (0+255),w,b
 30102  00E1E6  6EDA               	movwf	fsr2h,c
 30103  00E1E8  0E30               	movlw	48
 30104  00E1EA  6EDF               	movwf	indf2,c
 30105  00E1EC                     l1355:
 30106                           
 30107                           ; BSR set to: 0
 30108                           
 30109                           ; BSR set to: 0
 30110  00E1EC  07B6               	decf	__display_itoa@pos& (0+255),f,b
 30111  00E1EE  D7BB               	goto	l16543
 30112  00E1F0                     u15440:
 30113                           
 30114                           ; BSR set to: 0
 30115                           ;display.c: 163: };display.c: 164: };display.c: 165: len = decimals + 2;
 30116                           
 30117                           ; BSR set to: 0
 30118  00E1F0  51A1               	movf	__display_itoa@decimals& (0+255),w,b
 30119  00E1F2  0F02               	addlw	2
 30120  00E1F4  D045               	goto	L26
 30121  00E1F6                     l1350:
 30122                           
 30123                           ; BSR set to: 0
 30124                           ;display.c: 168: else;display.c: 169: {;display.c: 170: missing = decimals + 1 - len;
 30125                           
 30126                           ; BSR set to: 0
 30127  00E1F6  51B4               	movf	__display_itoa@len& (0+255),w,b
 30128  00E1F8  0800               	sublw	0
 30129  00E1FA  25A1               	addwf	__display_itoa@decimals& (0+255),w,b
 30130  00E1FC  6FA4               	movwf	??__display_itoa& (0+255),b
 30131  00E1FE  29A4               	incf	??__display_itoa& (0+255),w,b
 30132  00E200  6FB5               	movwf	__display_itoa@missing& (0+255),b
 30133                           
 30134                           ;display.c: 171: if(missing>0)
 30135  00E202  51B5               	movf	__display_itoa@missing& (0+255),w,b
 30136  00E204  0A80               	xorlw	128
 30137  00E206  0F7F               	addlw	-129
 30138  00E208  A0D8               	btfss	status,0,c
 30139  00E20A  D03B               	goto	l1357
 30140                           
 30141                           ; BSR set to: 0
 30142                           ;display.c: 172: {;display.c: 173: for(pos=decimals;pos!=0xFF;--pos)
 30143  00E20C  C0A1  F0B6         	movff	__display_itoa@decimals,__display_itoa@pos
 30144  00E210                     l16563:
 30145                           
 30146                           ; BSR set to: 0
 30147  00E210  29B6               	incf	__display_itoa@pos& (0+255),w,b
 30148  00E212  B4D8               	btfsc	status,2,c
 30149  00E214  D034               	goto	u15480
 30150                           
 30151                           ; BSR set to: 0
 30152                           ;display.c: 174: {;display.c: 175: if(pos>=missing)
 30153                           
 30154                           ; BSR set to: 0
 30155                           
 30156                           ; BSR set to: 0
 30157  00E216  51B6               	movf	__display_itoa@pos& (0+255),w,b
 30158  00E218  BFB5               	btfsc	__display_itoa@missing& (0+255),7,b
 30159  00E21A  D004               	goto	u15470
 30160  00E21C  0AFF               	xorlw	255
 30161  00E21E  25B5               	addwf	__display_itoa@missing& (0+255),w,b
 30162  00E220  B0D8               	btfsc	status,0,c
 30163  00E222  D021               	goto	l1360
 30164  00E224                     u15470:
 30165                           
 30166                           ; BSR set to: 0
 30167                           ;display.c: 176: {;display.c: 177: tmp[pos] = tmp[pos-missing];
 30168  00E224  C0B5  F0A4         	movff	__display_itoa@missing,??__display_itoa
 30169  00E228  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 30170  00E22A  BFA4               	btfsc	??__display_itoa& (0+255),7,b
 30171  00E22C  07A5               	decf	(??__display_itoa+1)& (0+255),f,b
 30172  00E22E  1FA4               	comf	??__display_itoa& (0+255),f,b
 30173  00E230  1FA5               	comf	(??__display_itoa+1)& (0+255),f,b
 30174  00E232  4BA4               	infsnz	??__display_itoa& (0+255),f,b
 30175  00E234  2BA5               	incf	(??__display_itoa+1)& (0+255),f,b
 30176  00E236  51B6               	movf	__display_itoa@pos& (0+255),w,b
 30177  00E238  6FA6               	movwf	(??__display_itoa+2)& (0+255),b
 30178  00E23A  6BA7               	clrf	(??__display_itoa+3)& (0+255),b
 30179  00E23C  51A4               	movf	??__display_itoa& (0+255),w,b
 30180  00E23E  27A6               	addwf	(??__display_itoa+2)& (0+255),f,b
 30181  00E240  51A5               	movf	(??__display_itoa+1)& (0+255),w,b
 30182  00E242  23A7               	addwfc	(??__display_itoa+3)& (0+255),f,b
 30183  00E244  0EAA               	movlw	low __display_itoa@tmp
 30184  00E246  25A6               	addwf	(??__display_itoa+2)& (0+255),w,b
 30185  00E248  6ED9               	movwf	fsr2l,c
 30186  00E24A  0E00               	movlw	high __display_itoa@tmp
 30187  00E24C  21A7               	addwfc	(??__display_itoa+3)& (0+255),w,b
 30188  00E24E  6EDA               	movwf	fsr2h,c
 30189  00E250  51B6               	movf	__display_itoa@pos& (0+255),w,b
 30190  00E252  0D01               	mullw	1
 30191  00E254  0EAA               	movlw	low __display_itoa@tmp
 30192  00E256  24F3               	addwf	prodl,w,c
 30193  00E258  6EE1               	movwf	fsr1l,c
 30194  00E25A  0E00               	movlw	high __display_itoa@tmp
 30195  00E25C  20F4               	addwfc	prodh,w,c
 30196  00E25E  6EE2               	movwf	fsr1h,c
 30197  00E260  CFDF FFE7          	movff	indf2,indf1
 30198                           
 30199                           ;display.c: 178: }
 30200  00E264  D00A               	goto	l1361
 30201  00E266                     l1360:
 30202                           
 30203                           ; BSR set to: 0
 30204                           ;display.c: 179: else;display.c: 180: {;display.c: 181: tmp[pos] = '0';
 30205                           
 30206                           ; BSR set to: 0
 30207  00E266  51B6               	movf	__display_itoa@pos& (0+255),w,b
 30208  00E268  0D01               	mullw	1
 30209  00E26A  0EAA               	movlw	low __display_itoa@tmp
 30210  00E26C  24F3               	addwf	prodl,w,c
 30211  00E26E  6ED9               	movwf	fsr2l,c
 30212  00E270  0E00               	movlw	high __display_itoa@tmp
 30213  00E272  20F4               	addwfc	prodh,w,c
 30214  00E274  6EDA               	movwf	fsr2h,c
 30215  00E276  0E30               	movlw	48
 30216  00E278  6EDF               	movwf	indf2,c
 30217  00E27A                     l1361:
 30218                           
 30219                           ; BSR set to: 0
 30220                           
 30221                           ; BSR set to: 0
 30222  00E27A  07B6               	decf	__display_itoa@pos& (0+255),f,b
 30223  00E27C  D7C9               	goto	l16563
 30224  00E27E                     u15480:
 30225                           
 30226                           ; BSR set to: 0
 30227                           ;display.c: 182: };display.c: 183: };display.c: 184: len = decimals + 1;
 30228                           
 30229                           ; BSR set to: 0
 30230  00E27E  29A1               	incf	__display_itoa@decimals& (0+255),w,b
 30231  00E280                     L26:
 30232  00E280  6FB4               	movwf	__display_itoa@len& (0+255),b
 30233  00E282                     l1357:
 30234                           
 30235                           ; BSR set to: 0
 30236                           ;display.c: 185: };display.c: 186: };display.c: 188: decimals = len - decimals - 1;
 30237                           
 30238                           ; BSR set to: 0
 30239  00E282  51A1               	movf	__display_itoa@decimals& (0+255),w,b
 30240  00E284  0800               	sublw	0
 30241  00E286  25B4               	addwf	__display_itoa@len& (0+255),w,b
 30242  00E288  6FA4               	movwf	??__display_itoa& (0+255),b
 30243  00E28A  05A4               	decf	??__display_itoa& (0+255),w,b
 30244  00E28C  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 30245                           
 30246                           ; BSR set to: 0
 30247                           ;display.c: 190: for(pos=0;pos<len;++pos)
 30248  00E28E  0E00               	movlw	0
 30249  00E290  6FB6               	movwf	__display_itoa@pos& (0+255),b
 30250  00E292  D023               	goto	l1362
 30251  00E294                     
 30252                           ; BSR set to: 0
 30253                           ;display.c: 191: {;display.c: 192: text[pos] = tmp[pos];
 30254                           
 30255                           ; BSR set to: 0
 30256  00E294  51B6               	movf	__display_itoa@pos& (0+255),w,b
 30257  00E296  0D01               	mullw	1
 30258  00E298  0EAA               	movlw	low __display_itoa@tmp
 30259  00E29A  24F3               	addwf	prodl,w,c
 30260  00E29C  6ED9               	movwf	fsr2l,c
 30261  00E29E  0E00               	movlw	high __display_itoa@tmp
 30262  00E2A0  20F4               	addwfc	prodh,w,c
 30263  00E2A2  6EDA               	movwf	fsr2h,c
 30264  00E2A4  51B6               	movf	__display_itoa@pos& (0+255),w,b
 30265  00E2A6  0D01               	mullw	1
 30266  00E2A8  50F3               	movf	prodl,w,c
 30267  00E2AA  25A2               	addwf	__display_itoa@text& (0+255),w,b
 30268  00E2AC  6EE1               	movwf	fsr1l,c
 30269  00E2AE  50F4               	movf	prodh,w,c
 30270  00E2B0  21A3               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 30271  00E2B2  6EE2               	movwf	fsr1h,c
 30272  00E2B4  CFDF FFE7          	movff	indf2,indf1
 30273                           
 30274                           ; BSR set to: 0
 30275                           ;display.c: 193: if(pos==decimals)
 30276  00E2B8  51A1               	movf	__display_itoa@decimals& (0+255),w,b
 30277  00E2BA  19B6               	xorwf	__display_itoa@pos& (0+255),w,b
 30278  00E2BC  A4D8               	btfss	status,2,c
 30279  00E2BE  D00C               	goto	l1364
 30280                           
 30281                           ; BSR set to: 0
 30282                           ;display.c: 194: {;display.c: 196: ++pos;
 30283  00E2C0  2BB6               	incf	__display_itoa@pos& (0+255),f,b
 30284                           
 30285                           ; BSR set to: 0
 30286                           ;display.c: 197: text[pos] = '.';
 30287  00E2C2  51B6               	movf	__display_itoa@pos& (0+255),w,b
 30288  00E2C4  0D01               	mullw	1
 30289  00E2C6  50F3               	movf	prodl,w,c
 30290  00E2C8  25A2               	addwf	__display_itoa@text& (0+255),w,b
 30291  00E2CA  6ED9               	movwf	fsr2l,c
 30292  00E2CC  50F4               	movf	prodh,w,c
 30293  00E2CE  21A3               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 30294  00E2D0  6EDA               	movwf	fsr2h,c
 30295  00E2D2  0E2E               	movlw	46
 30296  00E2D4  6EDF               	movwf	indf2,c
 30297                           
 30298                           ;display.c: 198: break;
 30299  00E2D6  D01E               	goto	l1366
 30300  00E2D8                     l1364:
 30301                           
 30302                           ; BSR set to: 0
 30303                           
 30304                           ; BSR set to: 0
 30305  00E2D8  2BB6               	incf	__display_itoa@pos& (0+255),f,b
 30306  00E2DA                     l1362:
 30307                           
 30308                           ; BSR set to: 0
 30309                           
 30310                           ; BSR set to: 0
 30311  00E2DA  51B4               	movf	__display_itoa@len& (0+255),w,b
 30312  00E2DC  5DB6               	subwf	__display_itoa@pos& (0+255),w,b
 30313  00E2DE  B0D8               	btfsc	status,0,c
 30314  00E2E0  D019               	goto	l1366
 30315  00E2E2  D7D8               	goto	l1363
 30316  00E2E4                     
 30317                           ; BSR set to: 0
 30318                           ;display.c: 202: {;display.c: 203: text[pos+1] = tmp[pos];
 30319                           
 30320                           ; BSR set to: 0
 30321  00E2E4  51B6               	movf	__display_itoa@pos& (0+255),w,b
 30322  00E2E6  0D01               	mullw	1
 30323  00E2E8  0EAA               	movlw	low __display_itoa@tmp
 30324  00E2EA  24F3               	addwf	prodl,w,c
 30325  00E2EC  6ED9               	movwf	fsr2l,c
 30326  00E2EE  0E00               	movlw	high __display_itoa@tmp
 30327  00E2F0  20F4               	addwfc	prodh,w,c
 30328  00E2F2  6EDA               	movwf	fsr2h,c
 30329  00E2F4  51B6               	movf	__display_itoa@pos& (0+255),w,b
 30330  00E2F6  6FA4               	movwf	??__display_itoa& (0+255),b
 30331  00E2F8  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 30332  00E2FA  0E01               	movlw	1
 30333  00E2FC  27A4               	addwf	??__display_itoa& (0+255),f,b
 30334  00E2FE  0E00               	movlw	0
 30335  00E300  23A5               	addwfc	(??__display_itoa+1)& (0+255),f,b
 30336  00E302  51A4               	movf	??__display_itoa& (0+255),w,b
 30337  00E304  25A2               	addwf	__display_itoa@text& (0+255),w,b
 30338  00E306  6EE1               	movwf	fsr1l,c
 30339  00E308  51A5               	movf	(??__display_itoa+1)& (0+255),w,b
 30340  00E30A  21A3               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 30341  00E30C  6EE2               	movwf	fsr1h,c
 30342  00E30E  CFDF FFE7          	movff	indf2,indf1
 30343                           
 30344                           ; BSR set to: 0
 30345  00E312  2BB6               	incf	__display_itoa@pos& (0+255),f,b
 30346  00E314                     l1366:
 30347                           
 30348                           ; BSR set to: 0
 30349                           
 30350                           ; BSR set to: 0
 30351  00E314  51B4               	movf	__display_itoa@len& (0+255),w,b
 30352  00E316  5DB6               	subwf	__display_itoa@pos& (0+255),w,b
 30353  00E318  A0D8               	btfss	status,0,c
 30354  00E31A  D7E4               	goto	l1367
 30355                           
 30356                           ; BSR set to: 0
 30357                           ;display.c: 204: };display.c: 205: text[pos+1] = 0;
 30358                           
 30359                           ; BSR set to: 0
 30360  00E31C  51B6               	movf	__display_itoa@pos& (0+255),w,b
 30361  00E31E  6FA4               	movwf	??__display_itoa& (0+255),b
 30362  00E320  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 30363  00E322  0E01               	movlw	1
 30364  00E324  27A4               	addwf	??__display_itoa& (0+255),f,b
 30365  00E326  0E00               	movlw	0
 30366  00E328  23A5               	addwfc	(??__display_itoa+1)& (0+255),f,b
 30367  00E32A  51A4               	movf	??__display_itoa& (0+255),w,b
 30368  00E32C  25A2               	addwf	__display_itoa@text& (0+255),w,b
 30369  00E32E  6ED9               	movwf	fsr2l,c
 30370  00E330  51A5               	movf	(??__display_itoa+1)& (0+255),w,b
 30371  00E332  21A3               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 30372  00E334  6EDA               	movwf	fsr2h,c
 30373  00E336  0E00               	movlw	0
 30374  00E338  6EDF               	movwf	indf2,c
 30375                           
 30376                           ; BSR set to: 0
 30377  00E33A  0012               	return		;funcret
 30378  00E33C                     __end_of__display_itoa:
 30379                           	opt stack 0
 30380                           tblptru	equ	0xFF8
 30381                           tblptrh	equ	0xFF7
 30382                           tblptrl	equ	0xFF6
 30383                           tablat	equ	0xFF5
 30384                           prodh	equ	0xFF4
 30385                           prodl	equ	0xFF3
 30386                           intcon	equ	0xFF2
 30387                           postinc0	equ	0xFEE
 30388                           wreg	equ	0xFE8
 30389                           indf1	equ	0xFE7
 30390                           postinc1	equ	0xFE6
 30391                           postdec1	equ	0xFE5
 30392                           plusw1	equ	0xFE3
 30393                           fsr1h	equ	0xFE2
 30394                           fsr1l	equ	0xFE1
 30395                           indf2	equ	0xFDF
 30396                           postinc2	equ	0xFDE
 30397                           postdec2	equ	0xFDD
 30398                           plusw2	equ	0xFDB
 30399                           fsr2h	equ	0xFDA
 30400                           fsr2l	equ	0xFD9
 30401                           status	equ	0xFD8
 30402                           
 30403 ;; *************** function _strlen *****************
 30404 ;; Defined at:
 30405 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
 30406 ;; Parameters:    Size  Location     Type
 30407 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 30408 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 30409 ;; Auto vars:     Size  Location     Type
 30410 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 30411 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 30412 ;; Return value:  Size  Location     Type
 30413 ;;                  2    0[BANK0 ] unsigned int 
 30414 ;; Registers used:
 30415 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30416 ;; Tracked objects:
 30417 ;;		On entry : 0/0
 30418 ;;		On exit  : 0/0
 30419 ;;		Unchanged: 0/0
 30420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30421 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30422 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30423 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30424 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30425 ;;Total ram usage:        6 bytes
 30426 ;; Hardware stack levels used:    1
 30427 ;; Hardware stack levels required when called:   10
 30428 ;; This function calls:
 30429 ;;		Nothing
 30430 ;; This function is called by:
 30431 ;;		__display_padded_itoa
 30432 ;;		__display_itoa
 30433 ;;		__display_itoa_long
 30434 ;;		_display_prepare
 30435 ;; This function uses a non-reentrant model
 30436 ;;
 30437                           
 30438                           	psect	text114
 30439  015B7C                     __ptext114:
 30440                           	opt stack 0
 30441  015B7C                     _strlen:
 30442                           	opt stack 19
 30443                           
 30444                           ; BSR set to: 0
 30445                           ;incstack = 0
 30446  015B7C  C060  F064         	movff	strlen@s,strlen@cp
 30447  015B80  C061  F065         	movff	strlen@s+1,strlen@cp+1
 30448  015B84  D003               	goto	l3919
 30449  015B86  0100               	movlb	0	; () banked
 30450  015B88  4B64               	infsnz	strlen@cp& (0+255),f,b
 30451  015B8A  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 30452  015B8C                     l3919:
 30453                           
 30454                           ; BSR set to: 0
 30455  015B8C  C064  FFD9         	movff	strlen@cp,fsr2l
 30456  015B90  C065  FFDA         	movff	strlen@cp+1,fsr2h
 30457  015B94  50DF               	movf	indf2,w,c
 30458  015B96  A4D8               	btfss	status,2,c
 30459  015B98  D7F6               	goto	l3920
 30460  015B9A  C060  F062         	movff	strlen@s,??_strlen
 30461  015B9E  C061  F063         	movff	strlen@s+1,??_strlen+1
 30462  015BA2  0100               	movlb	0	; () banked
 30463  015BA4  1F62               	comf	??_strlen& (0+255),f,b
 30464  015BA6  1F63               	comf	(??_strlen+1)& (0+255),f,b
 30465  015BA8  4B62               	infsnz	??_strlen& (0+255),f,b
 30466  015BAA  2B63               	incf	(??_strlen+1)& (0+255),f,b
 30467  015BAC  5164               	movf	strlen@cp& (0+255),w,b
 30468  015BAE  2562               	addwf	??_strlen& (0+255),w,b
 30469  015BB0  6F60               	movwf	?_strlen& (0+255),b
 30470  015BB2  5165               	movf	(strlen@cp+1)& (0+255),w,b
 30471  015BB4  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 30472  015BB6  6F61               	movwf	(?_strlen+1)& (0+255),b
 30473  015BB8  0012               	return	
 30474  015BBA                     __end_of_strlen:
 30475                           	opt stack 0
 30476                           tblptru	equ	0xFF8
 30477                           tblptrh	equ	0xFF7
 30478                           tblptrl	equ	0xFF6
 30479                           tablat	equ	0xFF5
 30480                           prodh	equ	0xFF4
 30481                           prodl	equ	0xFF3
 30482                           intcon	equ	0xFF2
 30483                           postinc0	equ	0xFEE
 30484                           wreg	equ	0xFE8
 30485                           indf1	equ	0xFE7
 30486                           postinc1	equ	0xFE6
 30487                           postdec1	equ	0xFE5
 30488                           plusw1	equ	0xFE3
 30489                           fsr1h	equ	0xFE2
 30490                           fsr1l	equ	0xFE1
 30491                           indf2	equ	0xFDF
 30492                           postinc2	equ	0xFDE
 30493                           postdec2	equ	0xFDD
 30494                           plusw2	equ	0xFDB
 30495                           fsr2h	equ	0xFDA
 30496                           fsr2l	equ	0xFD9
 30497                           status	equ	0xFD8
 30498                           
 30499 ;; *************** function _itoa *****************
 30500 ;; Defined at:
 30501 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 30502 ;; Parameters:    Size  Location     Type
 30503 ;;  buf             2   16[BANK0 ] PTR unsigned char 
 30504 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 30505 ;;  val             2   18[BANK0 ] int 
 30506 ;;  base            2   20[BANK0 ] int 
 30507 ;; Auto vars:     Size  Location     Type
 30508 ;;  cp              2   22[BANK0 ] PTR unsigned char 
 30509 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 30510 ;; Return value:  Size  Location     Type
 30511 ;;                  2   16[BANK0 ] PTR unsigned char 
 30512 ;; Registers used:
 30513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30514 ;; Tracked objects:
 30515 ;;		On entry : 0/0
 30516 ;;		On exit  : 0/0
 30517 ;;		Unchanged: 0/0
 30518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30519 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30520 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30522 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30523 ;;Total ram usage:        8 bytes
 30524 ;; Hardware stack levels used:    1
 30525 ;; Hardware stack levels required when called:   12
 30526 ;; This function calls:
 30527 ;;		_utoa
 30528 ;; This function is called by:
 30529 ;;		__display_padded_itoa
 30530 ;;		__display_itoa
 30531 ;;		__display_itoa_u16
 30532 ;; This function uses a non-reentrant model
 30533 ;;
 30534                           
 30535                           	psect	text115
 30536  015A30                     __ptext115:
 30537                           	opt stack 0
 30538  015A30                     _itoa:
 30539                           	opt stack 14
 30540                           
 30541                           ; BSR set to: 0
 30542                           ;incstack = 0
 30543  015A30  C070  F076         	movff	itoa@buf,itoa@cp
 30544  015A34  C071  F077         	movff	itoa@buf+1,itoa@cp+1
 30545  015A38  0100               	movlb	0	; () banked
 30546  015A3A  AF73               	btfss	(itoa@val+1)& (0+255),7,b
 30547  015A3C  D00C               	goto	l3871
 30548                           
 30549                           ; BSR set to: 0
 30550  015A3E  C070  FFD9         	movff	itoa@buf,fsr2l
 30551  015A42  C071  FFDA         	movff	itoa@buf+1,fsr2h
 30552  015A46  0E2D               	movlw	45
 30553  015A48  6EDF               	movwf	indf2,c
 30554                           
 30555                           ; BSR set to: 0
 30556  015A4A  4B70               	infsnz	itoa@buf& (0+255),f,b
 30557  015A4C  2B71               	incf	(itoa@buf+1)& (0+255),f,b
 30558                           
 30559                           ; BSR set to: 0
 30560  015A4E  6D72               	negf	itoa@val& (0+255),b
 30561  015A50  1F73               	comf	(itoa@val+1)& (0+255),f,b
 30562  015A52  B0D8               	btfsc	status,0,c
 30563  015A54  2B73               	incf	(itoa@val+1)& (0+255),f,b
 30564  015A56                     l3871:
 30565                           
 30566                           ; BSR set to: 0
 30567                           
 30568                           ; BSR set to: 0
 30569  015A56  C070  F067         	movff	itoa@buf,utoa@buf
 30570  015A5A  C071  F068         	movff	itoa@buf+1,utoa@buf+1
 30571  015A5E  C072  F069         	movff	itoa@val,utoa@val
 30572  015A62  C073  F06A         	movff	itoa@val+1,utoa@val+1
 30573  015A66  C074  F06B         	movff	itoa@base,utoa@base
 30574  015A6A  C075  F06C         	movff	itoa@base+1,utoa@base+1
 30575  015A6E  EC77  F09B         	call	_utoa	;wreg free
 30576  015A72  0012               	return	
 30577  015A74                     __end_of_itoa:
 30578                           	opt stack 0
 30579                           tblptru	equ	0xFF8
 30580                           tblptrh	equ	0xFF7
 30581                           tblptrl	equ	0xFF6
 30582                           tablat	equ	0xFF5
 30583                           prodh	equ	0xFF4
 30584                           prodl	equ	0xFF3
 30585                           intcon	equ	0xFF2
 30586                           postinc0	equ	0xFEE
 30587                           wreg	equ	0xFE8
 30588                           indf1	equ	0xFE7
 30589                           postinc1	equ	0xFE6
 30590                           postdec1	equ	0xFE5
 30591                           plusw1	equ	0xFE3
 30592                           fsr1h	equ	0xFE2
 30593                           fsr1l	equ	0xFE1
 30594                           indf2	equ	0xFDF
 30595                           postinc2	equ	0xFDE
 30596                           postdec2	equ	0xFDD
 30597                           plusw2	equ	0xFDB
 30598                           fsr2h	equ	0xFDA
 30599                           fsr2l	equ	0xFD9
 30600                           status	equ	0xFD8
 30601                           
 30602 ;; *************** function _utoa *****************
 30603 ;; Defined at:
 30604 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 30605 ;; Parameters:    Size  Location     Type
 30606 ;;  buf             2    7[BANK0 ] PTR unsigned char 
 30607 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 30608 ;;  val             2    9[BANK0 ] unsigned int 
 30609 ;;  base            2   11[BANK0 ] int 
 30610 ;; Auto vars:     Size  Location     Type
 30611 ;;  v               2   13[BANK0 ] unsigned int 
 30612 ;;  c               1   15[BANK0 ] unsigned char 
 30613 ;; Return value:  Size  Location     Type
 30614 ;;                  2    7[BANK0 ] PTR unsigned char 
 30615 ;; Registers used:
 30616 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30617 ;; Tracked objects:
 30618 ;;		On entry : 0/0
 30619 ;;		On exit  : 0/0
 30620 ;;		Unchanged: 0/0
 30621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30622 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30623 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30625 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30626 ;;Total ram usage:        9 bytes
 30627 ;; Hardware stack levels used:    1
 30628 ;; Hardware stack levels required when called:   11
 30629 ;; This function calls:
 30630 ;;		___lwdiv
 30631 ;;		___lwmod
 30632 ;; This function is called by:
 30633 ;;		_itoa
 30634 ;; This function uses a non-reentrant model
 30635 ;;
 30636                           
 30637                           	psect	text116
 30638  0136EE                     __ptext116:
 30639                           	opt stack 0
 30640  0136EE                     _utoa:
 30641                           	opt stack 14
 30642                           
 30643                           ;incstack = 0
 30644  0136EE  C069  F06D         	movff	utoa@val,utoa@v
 30645  0136F2  C06A  F06E         	movff	utoa@val+1,utoa@v+1
 30646  0136F6  C06D  F060         	movff	utoa@v,___lwdiv@dividend
 30647  0136FA  C06E  F061         	movff	utoa@v+1,___lwdiv@dividend+1
 30648  0136FE  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 30649  013702  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 30650  013706  EC87  F0AA         	call	___lwdiv	;wreg free
 30651  01370A  C060  F06D         	movff	?___lwdiv,utoa@v
 30652  01370E  C061  F06E         	movff	?___lwdiv+1,utoa@v+1
 30653  013712  0100               	movlb	0	; () banked
 30654  013714  4B67               	infsnz	utoa@buf& (0+255),f,b
 30655  013716  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 30656                           
 30657                           ; BSR set to: 0
 30658  013718  516D               	movf	utoa@v& (0+255),w,b
 30659  01371A  116E               	iorwf	(utoa@v+1)& (0+255),w,b
 30660  01371C  A4D8               	btfss	status,2,c
 30661  01371E  D7EB               	goto	l3875
 30662                           
 30663                           ; BSR set to: 0
 30664                           
 30665                           ; BSR set to: 0
 30666  013720  C067  FFD9         	movff	utoa@buf,fsr2l
 30667  013724  C068  FFDA         	movff	utoa@buf+1,fsr2h
 30668  013728  0E00               	movlw	0
 30669  01372A  6EDF               	movwf	indf2,c
 30670                           
 30671                           ; BSR set to: 0
 30672  01372C  0767               	decf	utoa@buf& (0+255),f,b
 30673  01372E  A0D8               	btfss	status,0,c
 30674  013730  0768               	decf	(utoa@buf+1)& (0+255),f,b
 30675  013732                     
 30676                           ; BSR set to: 0
 30677                           
 30678                           ; BSR set to: 0
 30679  013732  C069  F060         	movff	utoa@val,___lwmod@dividend
 30680  013736  C06A  F061         	movff	utoa@val+1,___lwmod@dividend+1
 30681  01373A  C06B  F062         	movff	utoa@base,___lwmod@divisor
 30682  01373E  C06C  F063         	movff	utoa@base+1,___lwmod@divisor+1
 30683  013742  EC3A  F0AD         	call	___lwmod	;wreg free
 30684  013746  0100               	movlb	0	; () banked
 30685  013748  5160               	movf	?___lwmod& (0+255),w,b
 30686  01374A  6F6F               	movwf	utoa@c& (0+255),b
 30687                           
 30688                           ; BSR set to: 0
 30689  01374C  C069  F060         	movff	utoa@val,___lwdiv@dividend
 30690  013750  C06A  F061         	movff	utoa@val+1,___lwdiv@dividend+1
 30691  013754  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 30692  013758  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 30693  01375C  EC87  F0AA         	call	___lwdiv	;wreg free
 30694  013760  C060  F069         	movff	?___lwdiv,utoa@val
 30695  013764  C061  F06A         	movff	?___lwdiv+1,utoa@val+1
 30696  013768  0E09               	movlw	9
 30697  01376A  0100               	movlb	0	; () banked
 30698  01376C  656F               	cpfsgt	utoa@c& (0+255),b
 30699  01376E  D002               	goto	l3878
 30700                           
 30701                           ; BSR set to: 0
 30702  013770  0E07               	movlw	7
 30703  013772  276F               	addwf	utoa@c& (0+255),f,b
 30704  013774                     l3878:
 30705                           
 30706                           ; BSR set to: 0
 30707  013774  0E30               	movlw	48
 30708  013776  276F               	addwf	utoa@c& (0+255),f,b
 30709                           
 30710                           ; BSR set to: 0
 30711  013778  C067  FFD9         	movff	utoa@buf,fsr2l
 30712  01377C  C068  FFDA         	movff	utoa@buf+1,fsr2h
 30713  013780  C06F  FFDF         	movff	utoa@c,indf2
 30714                           
 30715                           ; BSR set to: 0
 30716  013784  0767               	decf	utoa@buf& (0+255),f,b
 30717  013786  A0D8               	btfss	status,0,c
 30718  013788  0768               	decf	(utoa@buf+1)& (0+255),f,b
 30719                           
 30720                           ; BSR set to: 0
 30721  01378A  5169               	movf	utoa@val& (0+255),w,b
 30722  01378C  116A               	iorwf	(utoa@val+1)& (0+255),w,b
 30723  01378E  A4D8               	btfss	status,2,c
 30724  013790  D7D0               	goto	l3877
 30725                           
 30726                           ; BSR set to: 0
 30727                           ;	Return value of _utoa is never used
 30728                           
 30729                           ; BSR set to: 0
 30730  013792  4B67               	infsnz	utoa@buf& (0+255),f,b
 30731  013794  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 30732  013796  0012               	return	
 30733  013798                     __end_of_utoa:
 30734                           	opt stack 0
 30735                           tblptru	equ	0xFF8
 30736                           tblptrh	equ	0xFF7
 30737                           tblptrl	equ	0xFF6
 30738                           tablat	equ	0xFF5
 30739                           prodh	equ	0xFF4
 30740                           prodl	equ	0xFF3
 30741                           intcon	equ	0xFF2
 30742                           postinc0	equ	0xFEE
 30743                           wreg	equ	0xFE8
 30744                           indf1	equ	0xFE7
 30745                           postinc1	equ	0xFE6
 30746                           postdec1	equ	0xFE5
 30747                           plusw1	equ	0xFE3
 30748                           fsr1h	equ	0xFE2
 30749                           fsr1l	equ	0xFE1
 30750                           indf2	equ	0xFDF
 30751                           postinc2	equ	0xFDE
 30752                           postdec2	equ	0xFDD
 30753                           plusw2	equ	0xFDB
 30754                           fsr2h	equ	0xFDA
 30755                           fsr2l	equ	0xFD9
 30756                           status	equ	0xFD8
 30757                           
 30758 ;; *************** function ___lwmod *****************
 30759 ;; Defined at:
 30760 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 30761 ;; Parameters:    Size  Location     Type
 30762 ;;  dividend        2    0[BANK0 ] unsigned int 
 30763 ;;  divisor         2    2[BANK0 ] unsigned int 
 30764 ;; Auto vars:     Size  Location     Type
 30765 ;;  counter         1    4[BANK0 ] unsigned char 
 30766 ;; Return value:  Size  Location     Type
 30767 ;;                  2    0[BANK0 ] unsigned int 
 30768 ;; Registers used:
 30769 ;;		wreg, status,2, status,0
 30770 ;; Tracked objects:
 30771 ;;		On entry : 0/0
 30772 ;;		On exit  : 0/0
 30773 ;;		Unchanged: 0/0
 30774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30775 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30776 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30778 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30779 ;;Total ram usage:        5 bytes
 30780 ;; Hardware stack levels used:    1
 30781 ;; Hardware stack levels required when called:   10
 30782 ;; This function calls:
 30783 ;;		Nothing
 30784 ;; This function is called by:
 30785 ;;		_utoa
 30786 ;; This function uses a non-reentrant model
 30787 ;;
 30788                           
 30789                           	psect	text117
 30790  015A74                     __ptext117:
 30791                           	opt stack 0
 30792  015A74                     ___lwmod:
 30793                           	opt stack 14
 30794                           
 30795                           ; BSR set to: 0
 30796                           ;incstack = 0
 30797  015A74  0100               	movlb	0	; () banked
 30798  015A76  5162               	movf	___lwmod@divisor& (0+255),w,b
 30799  015A78  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 30800  015A7A  B4D8               	btfsc	status,2,c
 30801  015A7C  D018               	goto	l3668
 30802                           
 30803                           ; BSR set to: 0
 30804  015A7E  0E01               	movlw	1
 30805  015A80  6F64               	movwf	___lwmod@counter& (0+255),b
 30806  015A82  D004               	goto	l3663
 30807  015A84                     
 30808                           ; BSR set to: 0
 30809                           
 30810                           ; BSR set to: 0
 30811  015A84  90D8               	bcf	status,0,c
 30812  015A86  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 30813  015A88  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 30814  015A8A  2B64               	incf	___lwmod@counter& (0+255),f,b
 30815  015A8C                     l3663:
 30816                           
 30817                           ; BSR set to: 0
 30818                           
 30819                           ; BSR set to: 0
 30820  015A8C  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 30821  015A8E  D7FA               	goto	l3664
 30822  015A90                     u11150:
 30823                           
 30824                           ; BSR set to: 0
 30825                           
 30826                           ; BSR set to: 0
 30827                           
 30828                           ; BSR set to: 0
 30829  015A90  5162               	movf	___lwmod@divisor& (0+255),w,b
 30830  015A92  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 30831  015A94  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 30832  015A96  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 30833  015A98  A0D8               	btfss	status,0,c
 30834  015A9A  D004               	goto	l3667
 30835                           
 30836                           ; BSR set to: 0
 30837  015A9C  5162               	movf	___lwmod@divisor& (0+255),w,b
 30838  015A9E  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 30839  015AA0  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 30840  015AA2  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 30841  015AA4                     l3667:
 30842                           
 30843                           ; BSR set to: 0
 30844                           
 30845                           ; BSR set to: 0
 30846  015AA4  90D8               	bcf	status,0,c
 30847  015AA6  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 30848  015AA8  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 30849                           
 30850                           ; BSR set to: 0
 30851  015AAA  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 30852  015AAC  D7F1               	goto	u11150
 30853  015AAE                     l3668:
 30854                           
 30855                           ; BSR set to: 0
 30856                           
 30857                           ; BSR set to: 0
 30858  015AAE  C060  F060         	movff	___lwmod@dividend,?___lwmod
 30859  015AB2  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 30860                           
 30861                           ; BSR set to: 0
 30862  015AB6  0012               	return		;funcret
 30863  015AB8                     __end_of___lwmod:
 30864                           	opt stack 0
 30865                           tblptru	equ	0xFF8
 30866                           tblptrh	equ	0xFF7
 30867                           tblptrl	equ	0xFF6
 30868                           tablat	equ	0xFF5
 30869                           prodh	equ	0xFF4
 30870                           prodl	equ	0xFF3
 30871                           intcon	equ	0xFF2
 30872                           postinc0	equ	0xFEE
 30873                           wreg	equ	0xFE8
 30874                           indf1	equ	0xFE7
 30875                           postinc1	equ	0xFE6
 30876                           postdec1	equ	0xFE5
 30877                           plusw1	equ	0xFE3
 30878                           fsr1h	equ	0xFE2
 30879                           fsr1l	equ	0xFE1
 30880                           indf2	equ	0xFDF
 30881                           postinc2	equ	0xFDE
 30882                           postdec2	equ	0xFDD
 30883                           plusw2	equ	0xFDB
 30884                           fsr2h	equ	0xFDA
 30885                           fsr2l	equ	0xFD9
 30886                           status	equ	0xFD8
 30887                           
 30888 ;; *************** function ___lwdiv *****************
 30889 ;; Defined at:
 30890 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 30891 ;; Parameters:    Size  Location     Type
 30892 ;;  dividend        2    0[BANK0 ] unsigned int 
 30893 ;;  divisor         2    2[BANK0 ] unsigned int 
 30894 ;; Auto vars:     Size  Location     Type
 30895 ;;  quotient        2    4[BANK0 ] unsigned int 
 30896 ;;  counter         1    6[BANK0 ] unsigned char 
 30897 ;; Return value:  Size  Location     Type
 30898 ;;                  2    0[BANK0 ] unsigned int 
 30899 ;; Registers used:
 30900 ;;		wreg, status,2, status,0
 30901 ;; Tracked objects:
 30902 ;;		On entry : 0/0
 30903 ;;		On exit  : 0/0
 30904 ;;		Unchanged: 0/0
 30905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30906 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30907 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30909 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30910 ;;Total ram usage:        7 bytes
 30911 ;; Hardware stack levels used:    1
 30912 ;; Hardware stack levels required when called:   10
 30913 ;; This function calls:
 30914 ;;		Nothing
 30915 ;; This function is called by:
 30916 ;;		_utoa
 30917 ;; This function uses a non-reentrant model
 30918 ;;
 30919                           
 30920                           	psect	text118
 30921  01550E                     __ptext118:
 30922                           	opt stack 0
 30923  01550E                     ___lwdiv:
 30924                           	opt stack 14
 30925                           
 30926                           ; BSR set to: 0
 30927                           ;incstack = 0
 30928  01550E  0E00               	movlw	0
 30929  015510  0100               	movlb	0	; () banked
 30930  015512  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
 30931  015514  0E00               	movlw	0
 30932  015516  6F64               	movwf	___lwdiv@quotient& (0+255),b
 30933                           
 30934                           ; BSR set to: 0
 30935  015518  5162               	movf	___lwdiv@divisor& (0+255),w,b
 30936  01551A  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 30937  01551C  B4D8               	btfsc	status,2,c
 30938  01551E  D01C               	goto	l3658
 30939                           
 30940                           ; BSR set to: 0
 30941  015520  0E01               	movlw	1
 30942  015522  6F66               	movwf	___lwdiv@counter& (0+255),b
 30943  015524  D004               	goto	l3653
 30944  015526                     
 30945                           ; BSR set to: 0
 30946                           
 30947                           ; BSR set to: 0
 30948  015526  90D8               	bcf	status,0,c
 30949  015528  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 30950  01552A  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 30951  01552C  2B66               	incf	___lwdiv@counter& (0+255),f,b
 30952  01552E                     l3653:
 30953                           
 30954                           ; BSR set to: 0
 30955                           
 30956                           ; BSR set to: 0
 30957  01552E  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 30958  015530  D7FA               	goto	l3654
 30959  015532                     u11120:
 30960                           
 30961                           ; BSR set to: 0
 30962                           
 30963                           ; BSR set to: 0
 30964                           
 30965                           ; BSR set to: 0
 30966  015532  90D8               	bcf	status,0,c
 30967  015534  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
 30968  015536  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 30969                           
 30970                           ; BSR set to: 0
 30971  015538  5162               	movf	___lwdiv@divisor& (0+255),w,b
 30972  01553A  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 30973  01553C  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 30974  01553E  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 30975  015540  A0D8               	btfss	status,0,c
 30976  015542  D005               	goto	l3657
 30977                           
 30978                           ; BSR set to: 0
 30979  015544  5162               	movf	___lwdiv@divisor& (0+255),w,b
 30980  015546  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 30981  015548  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 30982  01554A  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 30983                           
 30984                           ; BSR set to: 0
 30985  01554C  8164               	bsf	___lwdiv@quotient& (0+255),0,b
 30986  01554E                     l3657:
 30987                           
 30988                           ; BSR set to: 0
 30989                           
 30990                           ; BSR set to: 0
 30991  01554E  90D8               	bcf	status,0,c
 30992  015550  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 30993  015552  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 30994                           
 30995                           ; BSR set to: 0
 30996  015554  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
 30997  015556  D7ED               	goto	u11120
 30998  015558                     l3658:
 30999                           
 31000                           ; BSR set to: 0
 31001                           
 31002                           ; BSR set to: 0
 31003  015558  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
 31004  01555C  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 31005                           
 31006                           ; BSR set to: 0
 31007  015560  0012               	return		;funcret
 31008  015562                     __end_of___lwdiv:
 31009                           	opt stack 0
 31010                           tblptru	equ	0xFF8
 31011                           tblptrh	equ	0xFF7
 31012                           tblptrl	equ	0xFF6
 31013                           tablat	equ	0xFF5
 31014                           prodh	equ	0xFF4
 31015                           prodl	equ	0xFF3
 31016                           intcon	equ	0xFF2
 31017                           postinc0	equ	0xFEE
 31018                           wreg	equ	0xFE8
 31019                           indf1	equ	0xFE7
 31020                           postinc1	equ	0xFE6
 31021                           postdec1	equ	0xFE5
 31022                           plusw1	equ	0xFE3
 31023                           fsr1h	equ	0xFE2
 31024                           fsr1l	equ	0xFE1
 31025                           indf2	equ	0xFDF
 31026                           postinc2	equ	0xFDE
 31027                           postdec2	equ	0xFDD
 31028                           plusw2	equ	0xFDB
 31029                           fsr2h	equ	0xFDA
 31030                           fsr2l	equ	0xFD9
 31031                           status	equ	0xFD8
 31032                           
 31033 ;; *************** function ___almod *****************
 31034 ;; Defined at:
 31035 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\almod.c"
 31036 ;; Parameters:    Size  Location     Type
 31037 ;;  dividend        4    0[BANK0 ] long 
 31038 ;;  divisor         4    4[BANK0 ] long 
 31039 ;; Auto vars:     Size  Location     Type
 31040 ;;  sign            1    9[BANK0 ] unsigned char 
 31041 ;;  counter         1    8[BANK0 ] unsigned char 
 31042 ;; Return value:  Size  Location     Type
 31043 ;;                  4    0[BANK0 ] long 
 31044 ;; Registers used:
 31045 ;;		wreg, status,2, status,0
 31046 ;; Tracked objects:
 31047 ;;		On entry : 0/0
 31048 ;;		On exit  : 0/0
 31049 ;;		Unchanged: 0/0
 31050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31051 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31052 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31054 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31055 ;;Total ram usage:       10 bytes
 31056 ;; Hardware stack levels used:    1
 31057 ;; Hardware stack levels required when called:   10
 31058 ;; This function calls:
 31059 ;;		Nothing
 31060 ;; This function is called by:
 31061 ;;		__display_itoa_long
 31062 ;; This function uses a non-reentrant model
 31063 ;;
 31064                           
 31065                           	psect	text119
 31066  013640                     __ptext119:
 31067                           	opt stack 0
 31068  013640                     ___almod:
 31069                           	opt stack 18
 31070                           
 31071                           ; BSR set to: 0
 31072                           ;incstack = 0
 31073  013640  0E00               	movlw	0
 31074  013642  0100               	movlb	0	; () banked
 31075  013644  6F69               	movwf	___almod@sign& (0+255),b
 31076                           
 31077                           ; BSR set to: 0
 31078  013646  AF63               	btfss	(___almod@dividend+3)& (0+255),7,b
 31079  013648  D00A               	goto	l3255
 31080                           
 31081                           ; BSR set to: 0
 31082  01364A  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 31083  01364C  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 31084  01364E  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 31085  013650  6D60               	negf	___almod@dividend& (0+255),b
 31086  013652  0E00               	movlw	0
 31087  013654  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 31088  013656  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 31089  013658  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 31090                           
 31091                           ; BSR set to: 0
 31092  01365A  0E01               	movlw	1
 31093  01365C  6F69               	movwf	___almod@sign& (0+255),b
 31094  01365E                     l3255:
 31095                           
 31096                           ; BSR set to: 0
 31097                           
 31098                           ; BSR set to: 0
 31099  01365E  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 31100  013660  D008               	goto	l3256
 31101                           
 31102                           ; BSR set to: 0
 31103  013662  1F67               	comf	(___almod@divisor+3)& (0+255),f,b
 31104  013664  1F66               	comf	(___almod@divisor+2)& (0+255),f,b
 31105  013666  1F65               	comf	(___almod@divisor+1)& (0+255),f,b
 31106  013668  6D64               	negf	___almod@divisor& (0+255),b
 31107  01366A  0E00               	movlw	0
 31108  01366C  2365               	addwfc	(___almod@divisor+1)& (0+255),f,b
 31109  01366E  2366               	addwfc	(___almod@divisor+2)& (0+255),f,b
 31110  013670  2367               	addwfc	(___almod@divisor+3)& (0+255),f,b
 31111  013672                     l3256:
 31112                           
 31113                           ; BSR set to: 0
 31114                           
 31115                           ; BSR set to: 0
 31116  013672  5164               	movf	___almod@divisor& (0+255),w,b
 31117  013674  1165               	iorwf	(___almod@divisor+1)& (0+255),w,b
 31118  013676  1166               	iorwf	(___almod@divisor+2)& (0+255),w,b
 31119  013678  1167               	iorwf	(___almod@divisor+3)& (0+255),w,b
 31120  01367A  B4D8               	btfsc	status,2,c
 31121  01367C  D024               	goto	l3263
 31122                           
 31123                           ; BSR set to: 0
 31124  01367E  0E01               	movlw	1
 31125  013680  6F68               	movwf	___almod@counter& (0+255),b
 31126  013682  D006               	goto	l3258
 31127  013684                     
 31128                           ; BSR set to: 0
 31129                           
 31130                           ; BSR set to: 0
 31131  013684  90D8               	bcf	status,0,c
 31132  013686  3764               	rlcf	___almod@divisor& (0+255),f,b
 31133  013688  3765               	rlcf	(___almod@divisor+1)& (0+255),f,b
 31134  01368A  3766               	rlcf	(___almod@divisor+2)& (0+255),f,b
 31135  01368C  3767               	rlcf	(___almod@divisor+3)& (0+255),f,b
 31136  01368E  2B68               	incf	___almod@counter& (0+255),f,b
 31137  013690                     l3258:
 31138                           
 31139                           ; BSR set to: 0
 31140                           
 31141                           ; BSR set to: 0
 31142  013690  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 31143  013692  D7F8               	goto	l3259
 31144  013694                     u16440:
 31145                           
 31146                           ; BSR set to: 0
 31147                           
 31148                           ; BSR set to: 0
 31149                           
 31150                           ; BSR set to: 0
 31151  013694  5164               	movf	___almod@divisor& (0+255),w,b
 31152  013696  5D60               	subwf	___almod@dividend& (0+255),w,b
 31153  013698  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 31154  01369A  5961               	subwfb	(___almod@dividend+1)& (0+255),w,b
 31155  01369C  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 31156  01369E  5962               	subwfb	(___almod@dividend+2)& (0+255),w,b
 31157  0136A0  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 31158  0136A2  5963               	subwfb	(___almod@dividend+3)& (0+255),w,b
 31159  0136A4  A0D8               	btfss	status,0,c
 31160  0136A6  D008               	goto	l3262
 31161                           
 31162                           ; BSR set to: 0
 31163  0136A8  5164               	movf	___almod@divisor& (0+255),w,b
 31164  0136AA  5F60               	subwf	___almod@dividend& (0+255),f,b
 31165  0136AC  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 31166  0136AE  5B61               	subwfb	(___almod@dividend+1)& (0+255),f,b
 31167  0136B0  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 31168  0136B2  5B62               	subwfb	(___almod@dividend+2)& (0+255),f,b
 31169  0136B4  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 31170  0136B6  5B63               	subwfb	(___almod@dividend+3)& (0+255),f,b
 31171  0136B8                     l3262:
 31172                           
 31173                           ; BSR set to: 0
 31174                           
 31175                           ; BSR set to: 0
 31176  0136B8  90D8               	bcf	status,0,c
 31177  0136BA  3367               	rrcf	(___almod@divisor+3)& (0+255),f,b
 31178  0136BC  3366               	rrcf	(___almod@divisor+2)& (0+255),f,b
 31179  0136BE  3365               	rrcf	(___almod@divisor+1)& (0+255),f,b
 31180  0136C0  3364               	rrcf	___almod@divisor& (0+255),f,b
 31181                           
 31182                           ; BSR set to: 0
 31183  0136C2  2F68               	decfsz	___almod@counter& (0+255),f,b
 31184  0136C4  D7E7               	goto	u16440
 31185  0136C6                     l3263:
 31186                           
 31187                           ; BSR set to: 0
 31188                           
 31189                           ; BSR set to: 0
 31190                           
 31191                           ; BSR set to: 0
 31192  0136C6  5169               	movf	___almod@sign& (0+255),w,b
 31193  0136C8  B4D8               	btfsc	status,2,c
 31194  0136CA  D008               	goto	l3264
 31195                           
 31196                           ; BSR set to: 0
 31197  0136CC  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 31198  0136CE  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 31199  0136D0  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 31200  0136D2  6D60               	negf	___almod@dividend& (0+255),b
 31201  0136D4  0E00               	movlw	0
 31202  0136D6  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 31203  0136D8  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 31204  0136DA  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 31205  0136DC                     l3264:
 31206                           
 31207                           ; BSR set to: 0
 31208                           
 31209                           ; BSR set to: 0
 31210  0136DC  C060  F060         	movff	___almod@dividend,?___almod
 31211  0136E0  C061  F061         	movff	___almod@dividend+1,?___almod+1
 31212  0136E4  C062  F062         	movff	___almod@dividend+2,?___almod+2
 31213  0136E8  C063  F063         	movff	___almod@dividend+3,?___almod+3
 31214  0136EC  0012               	return	
 31215  0136EE                     __end_of___almod:
 31216                           	opt stack 0
 31217                           tblptru	equ	0xFF8
 31218                           tblptrh	equ	0xFF7
 31219                           tblptrl	equ	0xFF6
 31220                           tablat	equ	0xFF5
 31221                           prodh	equ	0xFF4
 31222                           prodl	equ	0xFF3
 31223                           intcon	equ	0xFF2
 31224                           postinc0	equ	0xFEE
 31225                           wreg	equ	0xFE8
 31226                           indf1	equ	0xFE7
 31227                           postinc1	equ	0xFE6
 31228                           postdec1	equ	0xFE5
 31229                           plusw1	equ	0xFE3
 31230                           fsr1h	equ	0xFE2
 31231                           fsr1l	equ	0xFE1
 31232                           indf2	equ	0xFDF
 31233                           postinc2	equ	0xFDE
 31234                           postdec2	equ	0xFDD
 31235                           plusw2	equ	0xFDB
 31236                           fsr2h	equ	0xFDA
 31237                           fsr2l	equ	0xFD9
 31238                           status	equ	0xFD8
 31239                           
 31240 ;; *************** function ___aldiv *****************
 31241 ;; Defined at:
 31242 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
 31243 ;; Parameters:    Size  Location     Type
 31244 ;;  dividend        4    0[BANK0 ] long 
 31245 ;;  divisor         4    4[BANK0 ] long 
 31246 ;; Auto vars:     Size  Location     Type
 31247 ;;  quotient        4   10[BANK0 ] long 
 31248 ;;  sign            1    9[BANK0 ] unsigned char 
 31249 ;;  counter         1    8[BANK0 ] unsigned char 
 31250 ;; Return value:  Size  Location     Type
 31251 ;;                  4    0[BANK0 ] long 
 31252 ;; Registers used:
 31253 ;;		wreg, status,2, status,0
 31254 ;; Tracked objects:
 31255 ;;		On entry : 0/0
 31256 ;;		On exit  : 0/0
 31257 ;;		Unchanged: 0/0
 31258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31259 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31260 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31262 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31263 ;;Total ram usage:       14 bytes
 31264 ;; Hardware stack levels used:    1
 31265 ;; Hardware stack levels required when called:   10
 31266 ;; This function calls:
 31267 ;;		Nothing
 31268 ;; This function is called by:
 31269 ;;		__display_itoa_long
 31270 ;; This function uses a non-reentrant model
 31271 ;;
 31272                           
 31273                           	psect	text120
 31274  012ED6                     __ptext120:
 31275                           	opt stack 0
 31276  012ED6                     ___aldiv:
 31277                           	opt stack 18
 31278                           
 31279                           ; BSR set to: 0
 31280                           ;incstack = 0
 31281  012ED6  0E00               	movlw	0
 31282  012ED8  0100               	movlb	0	; () banked
 31283  012EDA  6F69               	movwf	___aldiv@sign& (0+255),b
 31284                           
 31285                           ; BSR set to: 0
 31286  012EDC  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 31287  012EDE  D00A               	goto	l3242
 31288                           
 31289                           ; BSR set to: 0
 31290  012EE0  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
 31291  012EE2  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
 31292  012EE4  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
 31293  012EE6  6D64               	negf	___aldiv@divisor& (0+255),b
 31294  012EE8  0E00               	movlw	0
 31295  012EEA  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 31296  012EEC  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 31297  012EEE  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 31298                           
 31299                           ; BSR set to: 0
 31300  012EF0  0E01               	movlw	1
 31301  012EF2  6F69               	movwf	___aldiv@sign& (0+255),b
 31302  012EF4                     l3242:
 31303                           
 31304                           ; BSR set to: 0
 31305                           
 31306                           ; BSR set to: 0
 31307  012EF4  AF63               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 31308  012EF6  D00A               	goto	l3243
 31309                           
 31310                           ; BSR set to: 0
 31311  012EF8  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
 31312  012EFA  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
 31313  012EFC  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
 31314  012EFE  6D60               	negf	___aldiv@dividend& (0+255),b
 31315  012F00  0E00               	movlw	0
 31316  012F02  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 31317  012F04  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 31318  012F06  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 31319                           
 31320                           ; BSR set to: 0
 31321  012F08  0E01               	movlw	1
 31322  012F0A  1B69               	xorwf	___aldiv@sign& (0+255),f,b
 31323  012F0C                     l3243:
 31324                           
 31325                           ; BSR set to: 0
 31326                           
 31327                           ; BSR set to: 0
 31328  012F0C  0E00               	movlw	0
 31329  012F0E  6F6A               	movwf	___aldiv@quotient& (0+255),b
 31330  012F10  0E00               	movlw	0
 31331  012F12  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
 31332  012F14  0E00               	movlw	0
 31333  012F16  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
 31334  012F18  0E00               	movlw	0
 31335  012F1A  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
 31336                           
 31337                           ; BSR set to: 0
 31338  012F1C  5164               	movf	___aldiv@divisor& (0+255),w,b
 31339  012F1E  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 31340  012F20  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 31341  012F22  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 31342  012F24  B4D8               	btfsc	status,2,c
 31343  012F26  D02A               	goto	l3250
 31344                           
 31345                           ; BSR set to: 0
 31346  012F28  0E01               	movlw	1
 31347  012F2A  6F68               	movwf	___aldiv@counter& (0+255),b
 31348  012F2C  D006               	goto	l3245
 31349  012F2E                     
 31350                           ; BSR set to: 0
 31351                           
 31352                           ; BSR set to: 0
 31353  012F2E  90D8               	bcf	status,0,c
 31354  012F30  3764               	rlcf	___aldiv@divisor& (0+255),f,b
 31355  012F32  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 31356  012F34  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 31357  012F36  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 31358  012F38  2B68               	incf	___aldiv@counter& (0+255),f,b
 31359  012F3A                     l3245:
 31360                           
 31361                           ; BSR set to: 0
 31362                           
 31363                           ; BSR set to: 0
 31364  012F3A  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 31365  012F3C  D7F8               	goto	l3246
 31366  012F3E                     u16380:
 31367                           
 31368                           ; BSR set to: 0
 31369                           
 31370                           ; BSR set to: 0
 31371                           
 31372                           ; BSR set to: 0
 31373  012F3E  90D8               	bcf	status,0,c
 31374  012F40  376A               	rlcf	___aldiv@quotient& (0+255),f,b
 31375  012F42  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 31376  012F44  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 31377  012F46  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 31378                           
 31379                           ; BSR set to: 0
 31380  012F48  5164               	movf	___aldiv@divisor& (0+255),w,b
 31381  012F4A  5D60               	subwf	___aldiv@dividend& (0+255),w,b
 31382  012F4C  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 31383  012F4E  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 31384  012F50  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 31385  012F52  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 31386  012F54  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 31387  012F56  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 31388  012F58  A0D8               	btfss	status,0,c
 31389  012F5A  D009               	goto	l3249
 31390                           
 31391                           ; BSR set to: 0
 31392  012F5C  5164               	movf	___aldiv@divisor& (0+255),w,b
 31393  012F5E  5F60               	subwf	___aldiv@dividend& (0+255),f,b
 31394  012F60  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 31395  012F62  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 31396  012F64  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 31397  012F66  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 31398  012F68  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 31399  012F6A  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 31400                           
 31401                           ; BSR set to: 0
 31402  012F6C  816A               	bsf	___aldiv@quotient& (0+255),0,b
 31403  012F6E                     l3249:
 31404                           
 31405                           ; BSR set to: 0
 31406                           
 31407                           ; BSR set to: 0
 31408  012F6E  90D8               	bcf	status,0,c
 31409  012F70  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 31410  012F72  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 31411  012F74  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 31412  012F76  3364               	rrcf	___aldiv@divisor& (0+255),f,b
 31413                           
 31414                           ; BSR set to: 0
 31415  012F78  2F68               	decfsz	___aldiv@counter& (0+255),f,b
 31416  012F7A  D7E1               	goto	u16380
 31417  012F7C                     l3250:
 31418                           
 31419                           ; BSR set to: 0
 31420                           
 31421                           ; BSR set to: 0
 31422                           
 31423                           ; BSR set to: 0
 31424  012F7C  5169               	movf	___aldiv@sign& (0+255),w,b
 31425  012F7E  B4D8               	btfsc	status,2,c
 31426  012F80  D008               	goto	l3251
 31427                           
 31428                           ; BSR set to: 0
 31429  012F82  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
 31430  012F84  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
 31431  012F86  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
 31432  012F88  6D6A               	negf	___aldiv@quotient& (0+255),b
 31433  012F8A  0E00               	movlw	0
 31434  012F8C  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 31435  012F8E  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 31436  012F90  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 31437  012F92                     l3251:
 31438                           
 31439                           ; BSR set to: 0
 31440                           
 31441                           ; BSR set to: 0
 31442  012F92  C06A  F060         	movff	___aldiv@quotient,?___aldiv
 31443  012F96  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
 31444  012F9A  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
 31445  012F9E  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
 31446  012FA2  0012               	return	
 31447  012FA4                     __end_of___aldiv:
 31448                           	opt stack 0
 31449                           tblptru	equ	0xFF8
 31450                           tblptrh	equ	0xFF7
 31451                           tblptrl	equ	0xFF6
 31452                           tablat	equ	0xFF5
 31453                           prodh	equ	0xFF4
 31454                           prodl	equ	0xFF3
 31455                           intcon	equ	0xFF2
 31456                           postinc0	equ	0xFEE
 31457                           wreg	equ	0xFE8
 31458                           indf1	equ	0xFE7
 31459                           postinc1	equ	0xFE6
 31460                           postdec1	equ	0xFE5
 31461                           plusw1	equ	0xFE3
 31462                           fsr1h	equ	0xFE2
 31463                           fsr1l	equ	0xFE1
 31464                           indf2	equ	0xFDF
 31465                           postinc2	equ	0xFDE
 31466                           postdec2	equ	0xFDD
 31467                           plusw2	equ	0xFDB
 31468                           fsr2h	equ	0xFDA
 31469                           fsr2l	equ	0xFD9
 31470                           status	equ	0xFD8
 31471                           
 31472 ;; *************** function __display_clear *****************
 31473 ;; Defined at:
 31474 ;;		line 91 in file "display.c"
 31475 ;; Parameters:    Size  Location     Type
 31476 ;;		None
 31477 ;; Auto vars:     Size  Location     Type
 31478 ;;  col             1    3[BANK0 ] unsigned char 
 31479 ;;  row             1    2[BANK0 ] unsigned char 
 31480 ;; Return value:  Size  Location     Type
 31481 ;;                  1    wreg      void 
 31482 ;; Registers used:
 31483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31484 ;; Tracked objects:
 31485 ;;		On entry : 0/0
 31486 ;;		On exit  : 0/0
 31487 ;;		Unchanged: 0/0
 31488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31490 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31491 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31492 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31493 ;;Total ram usage:        4 bytes
 31494 ;; Hardware stack levels used:    1
 31495 ;; Hardware stack levels required when called:   10
 31496 ;; This function calls:
 31497 ;;		Nothing
 31498 ;; This function is called by:
 31499 ;;		_display_prepare
 31500 ;; This function uses a non-reentrant model
 31501 ;;
 31502                           
 31503                           	psect	text121
 31504  0158CC                     __ptext121:
 31505                           	opt stack 0
 31506  0158CC                     __display_clear:
 31507                           	opt stack 19
 31508                           
 31509                           ;display.c: 93: uint8_t row;;display.c: 94: uint8_t col;;display.c: 95: for(row=0;row<4;
      +                          ++row)
 31510                           
 31511                           ; BSR set to: 0
 31512                           ;incstack = 0
 31513  0158CC  0E00               	movlw	0
 31514  0158CE  0100               	movlb	0	; () banked
 31515  0158D0  6F62               	movwf	__display_clear@row& (0+255),b
 31516  0158D2                     l18109:
 31517                           
 31518                           ; BSR set to: 0
 31519  0158D2  0E03               	movlw	3
 31520  0158D4  6562               	cpfsgt	__display_clear@row& (0+255),b
 31521  0158D6  D001               	goto	l1329
 31522  0158D8  0012               	return	
 31523  0158DA                     l1329:
 31524                           
 31525                           ; BSR set to: 0
 31526                           ;display.c: 96: {;display.c: 97: for(col=0;col<20;++col)
 31527                           
 31528                           ; BSR set to: 0
 31529  0158DA  0E00               	movlw	0
 31530  0158DC  6F63               	movwf	__display_clear@col& (0+255),b
 31531  0158DE                     l18115:
 31532                           
 31533                           ; BSR set to: 0
 31534  0158DE  0E13               	movlw	19
 31535  0158E0  6563               	cpfsgt	__display_clear@col& (0+255),b
 31536  0158E2  D001               	goto	l1331
 31537  0158E4  D016               	goto	u17310
 31538  0158E6                     l1331:
 31539                           
 31540                           ; BSR set to: 0
 31541                           ;display.c: 98: {;display.c: 99: display_content[row][col] = ' ';
 31542                           
 31543                           ; BSR set to: 0
 31544  0158E6  5162               	movf	__display_clear@row& (0+255),w,b
 31545  0158E8  0D14               	mullw	20
 31546  0158EA  0E49               	movlw	low _display_content
 31547  0158EC  6F60               	movwf	??__display_clear& (0+255),b
 31548  0158EE  0E02               	movlw	high _display_content
 31549  0158F0  6F61               	movwf	(??__display_clear+1)& (0+255),b
 31550  0158F2  50F3               	movf	prodl,w,c
 31551  0158F4  2760               	addwf	??__display_clear& (0+255),f,b
 31552  0158F6  50F4               	movf	prodh,w,c
 31553  0158F8  2361               	addwfc	(??__display_clear+1)& (0+255),f,b
 31554  0158FA  5163               	movf	__display_clear@col& (0+255),w,b
 31555  0158FC  0D01               	mullw	1
 31556  0158FE  50F3               	movf	prodl,w,c
 31557  015900  2560               	addwf	??__display_clear& (0+255),w,b
 31558  015902  6ED9               	movwf	fsr2l,c
 31559  015904  50F4               	movf	prodh,w,c
 31560  015906  2161               	addwfc	(??__display_clear+1)& (0+255),w,b
 31561  015908  6EDA               	movwf	fsr2h,c
 31562  01590A  0E20               	movlw	32
 31563  01590C  6EDF               	movwf	indf2,c
 31564                           
 31565                           ; BSR set to: 0
 31566  01590E  2B63               	incf	__display_clear@col& (0+255),f,b
 31567  015910  D7E6               	goto	l18115
 31568  015912                     u17310:
 31569                           
 31570                           ; BSR set to: 0
 31571                           
 31572                           ; BSR set to: 0
 31573  015912  2B62               	incf	__display_clear@row& (0+255),f,b
 31574  015914  D7DE               	goto	l18109
 31575  015916                     __end_of__display_clear:
 31576                           	opt stack 0
 31577                           tblptru	equ	0xFF8
 31578                           tblptrh	equ	0xFF7
 31579                           tblptrl	equ	0xFF6
 31580                           tablat	equ	0xFF5
 31581                           prodh	equ	0xFF4
 31582                           prodl	equ	0xFF3
 31583                           intcon	equ	0xFF2
 31584                           postinc0	equ	0xFEE
 31585                           wreg	equ	0xFE8
 31586                           indf1	equ	0xFE7
 31587                           postinc1	equ	0xFE6
 31588                           postdec1	equ	0xFE5
 31589                           plusw1	equ	0xFE3
 31590                           fsr1h	equ	0xFE2
 31591                           fsr1l	equ	0xFE1
 31592                           indf2	equ	0xFDF
 31593                           postinc2	equ	0xFDE
 31594                           postdec2	equ	0xFDD
 31595                           plusw2	equ	0xFDB
 31596                           fsr2h	equ	0xFDA
 31597                           fsr2l	equ	0xFD9
 31598                           status	equ	0xFD8
 31599                           
 31600 ;; *************** function _adc_read_temperature *****************
 31601 ;; Defined at:
 31602 ;;		line 44 in file "adc.c"
 31603 ;; Parameters:    Size  Location     Type
 31604 ;;		None
 31605 ;; Auto vars:     Size  Location     Type
 31606 ;;  temperature     4   53[BANK0 ] float 
 31607 ;;  adc_result      2   51[BANK0 ] unsigned int 
 31608 ;; Return value:  Size  Location     Type
 31609 ;;                  1    wreg      void 
 31610 ;; Registers used:
 31611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31612 ;; Tracked objects:
 31613 ;;		On entry : 0/0
 31614 ;;		On exit  : 0/0
 31615 ;;		Unchanged: 0/0
 31616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31618 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31619 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31620 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31621 ;;Total ram usage:        8 bytes
 31622 ;; Hardware stack levels used:    1
 31623 ;; Hardware stack levels required when called:   11
 31624 ;; This function calls:
 31625 ;;		___fladd
 31626 ;;		___flmul
 31627 ;;		___flneg
 31628 ;;		___fltol
 31629 ;;		___xxtofl
 31630 ;; This function is called by:
 31631 ;;		_main
 31632 ;; This function uses a non-reentrant model
 31633 ;;
 31634                           
 31635                           	psect	text122
 31636  00EB48                     __ptext122:
 31637                           	opt stack 0
 31638  00EB48                     _adc_read_temperature:
 31639                           	opt stack 19
 31640                           
 31641                           ;adc.c: 46: uint16_t adc_result;;adc.c: 47: float temperature;;adc.c: 50: adc_result = A
      +                          DRESH;
 31642                           
 31643                           ; BSR set to: 0
 31644                           ;incstack = 0
 31645  00EB48  CFC4 F093          	movff	4036,adc_read_temperature@adc_result	;volatile
 31646  00EB4C  0100               	movlb	0	; () banked
 31647  00EB4E  6B94               	clrf	(adc_read_temperature@adc_result+1)& (0+255),b
 31648                           
 31649                           ; BSR set to: 0
 31650                           ;adc.c: 51: adc_result <<= 8;
 31651  00EB50  5193               	movf	adc_read_temperature@adc_result& (0+255),w,b
 31652  00EB52  6F94               	movwf	(adc_read_temperature@adc_result+1)& (0+255),b
 31653  00EB54  6B93               	clrf	adc_read_temperature@adc_result& (0+255),b
 31654                           
 31655                           ; BSR set to: 0
 31656                           ;adc.c: 52: adc_result |= ADRESL;
 31657  00EB56  50C3               	movf	4035,w,c	;volatile
 31658  00EB58  1393               	iorwf	adc_read_temperature@adc_result& (0+255),f,b
 31659                           
 31660                           ; BSR set to: 0
 31661                           ;adc.c: 55: params.temperature_adc_sum[params.temperature_source] += adc_result;
 31662  00EB5A  0102               	movlb	2	; () banked
 31663  00EB5C  5131               	movf	_params& (0+255),w,b
 31664  00EB5E  0D02               	mullw	2
 31665  00EB60  0E32               	movlw	low (_params+1)
 31666  00EB62  24F3               	addwf	prodl,w,c
 31667  00EB64  6ED9               	movwf	fsr2l,c
 31668  00EB66  0E02               	movlw	high (_params+1)
 31669  00EB68  20F4               	addwfc	prodh,w,c
 31670  00EB6A  6EDA               	movwf	fsr2h,c
 31671  00EB6C  0100               	movlb	0	; () banked
 31672  00EB6E  5193               	movf	adc_read_temperature@adc_result& (0+255),w,b
 31673  00EB70  26DE               	addwf	postinc2,f,c
 31674  00EB72  5194               	movf	(adc_read_temperature@adc_result+1)& (0+255),w,b
 31675  00EB74  22DD               	addwfc	postdec2,f,c
 31676                           
 31677                           ; BSR set to: 0
 31678                           ;adc.c: 56: ++params.temperature_count[params.temperature_source];
 31679  00EB76  0102               	movlb	2	; () banked
 31680  00EB78  5131               	movf	_params& (0+255),w,b
 31681  00EB7A  0D01               	mullw	1
 31682  00EB7C  0E36               	movlw	low (_params+5)
 31683  00EB7E  24F3               	addwf	prodl,w,c
 31684  00EB80  6ED9               	movwf	fsr2l,c
 31685  00EB82  0E02               	movlw	high (_params+5)
 31686  00EB84  20F4               	addwfc	prodh,w,c
 31687  00EB86  6EDA               	movwf	fsr2h,c
 31688  00EB88  2ADF               	incf	indf2,f,c
 31689                           
 31690                           ; BSR set to: 2
 31691                           ;adc.c: 59: ADCON0bits.GO = 1;
 31692  00EB8A  82C2               	bsf	4034,1,c	;volatile
 31693                           
 31694                           ; BSR set to: 2
 31695                           ;adc.c: 62: if(params.temperature_count[params.temperature_source]==8)
 31696  00EB8C  5131               	movf	_params& (0+255),w,b
 31697  00EB8E  0D01               	mullw	1
 31698  00EB90  0E36               	movlw	low (_params+5)
 31699  00EB92  24F3               	addwf	prodl,w,c
 31700  00EB94  6ED9               	movwf	fsr2l,c
 31701  00EB96  0E02               	movlw	high (_params+5)
 31702  00EB98  20F4               	addwfc	prodh,w,c
 31703  00EB9A  6EDA               	movwf	fsr2h,c
 31704  00EB9C  0E08               	movlw	8
 31705  00EB9E  18DE               	xorwf	postinc2,w,c
 31706  00EBA0  A4D8               	btfss	status,2,c
 31707  00EBA2  D0AF               	goto	l3028
 31708                           
 31709                           ; BSR set to: 2
 31710                           ;adc.c: 63: {;adc.c: 67: temperature = 21064.0 - (float) params.temperature_adc_sum[para
      +                          ms.temperature_source];
 31711  00EBA4  5131               	movf	_params& (0+255),w,b
 31712  00EBA6  0D02               	mullw	2
 31713  00EBA8  0E32               	movlw	low (_params+1)
 31714  00EBAA  24F3               	addwf	prodl,w,c
 31715  00EBAC  6ED9               	movwf	fsr2l,c
 31716  00EBAE  0E02               	movlw	high (_params+1)
 31717  00EBB0  20F4               	addwfc	prodh,w,c
 31718  00EBB2  6EDA               	movwf	fsr2h,c
 31719  00EBB4  CFDE F091          	movff	postinc2,??_adc_read_temperature
 31720  00EBB8  CFDD F092          	movff	postdec2,??_adc_read_temperature+1
 31721  00EBBC  C091  F06A         	movff	??_adc_read_temperature,___xxtofl@val
 31722  00EBC0  C092  F06B         	movff	??_adc_read_temperature+1,___xxtofl@val+1
 31723  00EBC4  0100               	movlb	0	; () banked
 31724  00EBC6  6B6C               	clrf	(___xxtofl@val+2)& (0+255),b
 31725  00EBC8  6B6D               	clrf	(___xxtofl@val+3)& (0+255),b
 31726  00EBCA  0E00               	movlw	0
 31727  00EBCC  EC91  F082         	call	___xxtofl
 31728  00EBD0  C06A  F078         	movff	?___xxtofl,___flneg@f1
 31729  00EBD4  C06B  F079         	movff	?___xxtofl+1,___flneg@f1+1
 31730  00EBD8  C06C  F07A         	movff	?___xxtofl+2,___flneg@f1+2
 31731  00EBDC  C06D  F07B         	movff	?___xxtofl+3,___flneg@f1+3
 31732  00EBE0  EC5B  F0AF         	call	___flneg	;wreg free
 31733  00EBE4  C078  F07C         	movff	?___flneg,___fladd@b
 31734  00EBE8  C079  F07D         	movff	?___flneg+1,___fladd@b+1
 31735  00EBEC  C07A  F07E         	movff	?___flneg+2,___fladd@b+2
 31736  00EBF0  C07B  F07F         	movff	?___flneg+3,___fladd@b+3
 31737  00EBF4  0E00               	movlw	0
 31738  00EBF6  0100               	movlb	0	; () banked
 31739  00EBF8  6F80               	movwf	___fladd@a& (0+255),b
 31740  00EBFA  0E90               	movlw	144
 31741  00EBFC  6F81               	movwf	(___fladd@a+1)& (0+255),b
 31742  00EBFE  0EA4               	movlw	164
 31743  00EC00  6F82               	movwf	(___fladd@a+2)& (0+255),b
 31744  00EC02  0E46               	movlw	70
 31745  00EC04  6F83               	movwf	(___fladd@a+3)& (0+255),b
 31746  00EC06  ECD4  F064         	call	___fladd	;wreg free
 31747  00EC0A  C07C  F095         	movff	?___fladd,adc_read_temperature@temperature
 31748  00EC0E  C07D  F096         	movff	?___fladd+1,adc_read_temperature@temperature+1
 31749  00EC12  C07E  F097         	movff	?___fladd+2,adc_read_temperature@temperature+2
 31750  00EC16  C07F  F098         	movff	?___fladd+3,adc_read_temperature@temperature+3
 31751                           
 31752                           ;adc.c: 68: temperature *= 0.7405;
 31753  00EC1A  C095  F078         	movff	adc_read_temperature@temperature,___flmul@b
 31754  00EC1E  C096  F079         	movff	adc_read_temperature@temperature+1,___flmul@b+1
 31755  00EC22  C097  F07A         	movff	adc_read_temperature@temperature+2,___flmul@b+2
 31756  00EC26  C098  F07B         	movff	adc_read_temperature@temperature+3,___flmul@b+3
 31757  00EC2A  0E68               	movlw	104
 31758  00EC2C  0100               	movlb	0	; () banked
 31759  00EC2E  6F7C               	movwf	___flmul@a& (0+255),b
 31760  00EC30  0E91               	movlw	145
 31761  00EC32  6F7D               	movwf	(___flmul@a+1)& (0+255),b
 31762  00EC34  0E3D               	movlw	61
 31763  00EC36  6F7E               	movwf	(___flmul@a+2)& (0+255),b
 31764  00EC38  0E3F               	movlw	63
 31765  00EC3A  6F7F               	movwf	(___flmul@a+3)& (0+255),b
 31766  00EC3C  EC2B  F063         	call	___flmul	;wreg free
 31767  00EC40  C078  F095         	movff	?___flmul,adc_read_temperature@temperature
 31768  00EC44  C079  F096         	movff	?___flmul+1,adc_read_temperature@temperature+1
 31769  00EC48  C07A  F097         	movff	?___flmul+2,adc_read_temperature@temperature+2
 31770  00EC4C  C07B  F098         	movff	?___flmul+3,adc_read_temperature@temperature+3
 31771                           
 31772                           ;adc.c: 71: os.temperature[params.temperature_source] = (int16_t) temperature;
 31773  00EC50  C095  F060         	movff	adc_read_temperature@temperature,___fltol@f1
 31774  00EC54  C096  F061         	movff	adc_read_temperature@temperature+1,___fltol@f1+1
 31775  00EC58  C097  F062         	movff	adc_read_temperature@temperature+2,___fltol@f1+2
 31776  00EC5C  C098  F063         	movff	adc_read_temperature@temperature+3,___fltol@f1+3
 31777  00EC60  ECEA  F094         	call	___fltol	;wreg free
 31778  00EC64  0102               	movlb	2	; () banked
 31779  00EC66  5131               	movf	_params& (0+255),w,b
 31780  00EC68  0D02               	mullw	2
 31781  00EC6A  0E8C               	movlw	low (_os+40)
 31782  00EC6C  24F3               	addwf	prodl,w,c
 31783  00EC6E  6ED9               	movwf	fsr2l,c
 31784  00EC70  0E01               	movlw	high (_os+40)
 31785  00EC72  20F4               	addwfc	prodh,w,c
 31786  00EC74  6EDA               	movwf	fsr2h,c
 31787  00EC76  0100               	movlb	0	; () banked
 31788  00EC78  C060  FFDE         	movff	?___fltol,postinc2
 31789  00EC7C  C061  FFDD         	movff	?___fltol+1,postdec2
 31790                           
 31791                           ; BSR set to: 0
 31792                           ;adc.c: 74: params.temperature_adc_sum[params.temperature_source] = 0;
 31793  00EC80  0102               	movlb	2	; () banked
 31794  00EC82  5131               	movf	_params& (0+255),w,b
 31795  00EC84  0D02               	mullw	2
 31796  00EC86  0E32               	movlw	low (_params+1)
 31797  00EC88  24F3               	addwf	prodl,w,c
 31798  00EC8A  6ED9               	movwf	fsr2l,c
 31799  00EC8C  0E02               	movlw	high (_params+1)
 31800  00EC8E  20F4               	addwfc	prodh,w,c
 31801  00EC90  6EDA               	movwf	fsr2h,c
 31802  00EC92  0E00               	movlw	0
 31803  00EC94  6EDE               	movwf	postinc2,c
 31804  00EC96  0E00               	movlw	0
 31805  00EC98  6EDD               	movwf	postdec2,c
 31806                           
 31807                           ; BSR set to: 2
 31808                           ;adc.c: 75: params.temperature_count[params.temperature_source] = 0;
 31809  00EC9A  5131               	movf	_params& (0+255),w,b
 31810  00EC9C  0D01               	mullw	1
 31811  00EC9E  0E36               	movlw	low (_params+5)
 31812  00ECA0  24F3               	addwf	prodl,w,c
 31813  00ECA2  6ED9               	movwf	fsr2l,c
 31814  00ECA4  0E02               	movlw	high (_params+5)
 31815  00ECA6  20F4               	addwfc	prodh,w,c
 31816  00ECA8  6EDA               	movwf	fsr2h,c
 31817  00ECAA  0E00               	movlw	0
 31818  00ECAC  6EDF               	movwf	indf2,c
 31819                           
 31820                           ; BSR set to: 2
 31821                           ;adc.c: 78: if(os.fan_on)
 31822  00ECAE  0101               	movlb	1	; () banked
 31823  00ECB0  5193               	movf	(_os+47)& (0+255),w,b	;volatile
 31824  00ECB2  B4D8               	btfsc	status,2,c
 31825  00ECB4  D013               	goto	l3025
 31826                           
 31827                           ; BSR set to: 1
 31828                           ;adc.c: 79: {;adc.c: 80: if((os.temperature[TEMPERATURE_SOURCE_INTERNAL]<2400) && (os.te
      +                          mperature[TEMPERATURE_SOURCE_EXTERNAL]<2400))
 31829  00ECB6  BF8D               	btfsc	(_os+41)& (0+255),7,b	;volatile
 31830  00ECB8  D006               	goto	u19040
 31831  00ECBA  0E60               	movlw	96
 31832  00ECBC  5D8C               	subwf	(_os+40)& (0+255),w,b	;volatile
 31833  00ECBE  0E09               	movlw	9
 31834  00ECC0  598D               	subwfb	(_os+41)& (0+255),w,b	;volatile
 31835  00ECC2  B0D8               	btfsc	status,0,c
 31836  00ECC4  D01E               	goto	l3028
 31837  00ECC6                     u19040:
 31838                           
 31839                           ; BSR set to: 1
 31840  00ECC6  BF8F               	btfsc	(_os+43)& (0+255),7,b	;volatile
 31841  00ECC8  D006               	goto	u19050
 31842  00ECCA  0E60               	movlw	96
 31843  00ECCC  5D8E               	subwf	(_os+42)& (0+255),w,b	;volatile
 31844  00ECCE  0E09               	movlw	9
 31845  00ECD0  598F               	subwfb	(_os+43)& (0+255),w,b	;volatile
 31846  00ECD2  B0D8               	btfsc	status,0,c
 31847  00ECD4  D016               	goto	l3028
 31848  00ECD6                     u19050:
 31849                           
 31850                           ; BSR set to: 1
 31851                           ;adc.c: 81: {;adc.c: 82: LATCbits.LC6 = 0;
 31852  00ECD6  9C8B               	bcf	3979,6,c	;volatile
 31853                           
 31854                           ; BSR set to: 1
 31855                           ;adc.c: 83: os.fan_on = 0;
 31856  00ECD8  0E00               	movlw	0
 31857  00ECDA  D012               	goto	L27
 31858  00ECDC                     l3025:
 31859                           
 31860                           ; BSR set to: 1
 31861                           ;adc.c: 86: else;adc.c: 87: {;adc.c: 88: if((os.temperature[TEMPERATURE_SOURCE_INTERNAL]
      +                          >2500) || (os.temperature[TEMPERATURE_SOURCE_EXTERNAL]>2500))
 31862                           
 31863                           ; BSR set to: 1
 31864  00ECDC  BF8D               	btfsc	(_os+41)& (0+255),7,b	;volatile
 31865  00ECDE  D006               	goto	u19060
 31866  00ECE0  0EC5               	movlw	197
 31867  00ECE2  5D8C               	subwf	(_os+40)& (0+255),w,b	;volatile
 31868  00ECE4  0E09               	movlw	9
 31869  00ECE6  598D               	subwfb	(_os+41)& (0+255),w,b	;volatile
 31870  00ECE8  B0D8               	btfsc	status,0,c
 31871  00ECEA  D008               	goto	u19070
 31872  00ECEC                     u19060:
 31873                           
 31874                           ; BSR set to: 1
 31875  00ECEC  BF8F               	btfsc	(_os+43)& (0+255),7,b	;volatile
 31876  00ECEE  D009               	goto	l3028
 31877  00ECF0  0EC5               	movlw	197
 31878  00ECF2  5D8E               	subwf	(_os+42)& (0+255),w,b	;volatile
 31879  00ECF4  0E09               	movlw	9
 31880  00ECF6  598F               	subwfb	(_os+43)& (0+255),w,b	;volatile
 31881  00ECF8  A0D8               	btfss	status,0,c
 31882  00ECFA  D003               	goto	l3028
 31883  00ECFC                     u19070:
 31884                           
 31885                           ; BSR set to: 1
 31886                           ;adc.c: 89: {;adc.c: 90: LATCbits.LC6 = 1;
 31887  00ECFC  8C8B               	bsf	3979,6,c	;volatile
 31888                           
 31889                           ; BSR set to: 1
 31890                           ;adc.c: 91: os.fan_on = 1;
 31891  00ECFE  0E01               	movlw	1
 31892  00ED00                     L27:
 31893  00ED00  6F93               	movwf	(_os+47)& (0+255),b	;volatile
 31894  00ED02                     l3028:
 31895                           
 31896                           ;adc.c: 92: };adc.c: 93: };adc.c: 94: };adc.c: 97: if(params.temperature_source==TEMPERA
      +                          TURE_SOURCE_INTERNAL)
 31897                           
 31898                           ; BSR set to: 1
 31899                           
 31900                           ; BSR set to: 1
 31901  00ED02  0102               	movlb	2	; () banked
 31902  00ED04  5131               	movf	_params& (0+255),w,b
 31903  00ED06  A4D8               	btfss	status,2,c
 31904  00ED08  D007               	goto	l3031
 31905                           
 31906                           ; BSR set to: 2
 31907                           ;adc.c: 98: {;adc.c: 99: ADCON0bits.CHS = 0b1011;
 31908  00ED0A  50C2               	movf	4034,w,c	;volatile
 31909  00ED0C  0BC3               	andlw	-61
 31910  00ED0E  092C               	iorlw	44
 31911  00ED10  6EC2               	movwf	4034,c	;volatile
 31912                           
 31913                           ;adc.c: 100: params.temperature_source = TEMPERATURE_SOURCE_EXTERNAL;
 31914  00ED12  0E01               	movlw	1
 31915  00ED14  6F31               	movwf	_params& (0+255),b
 31916                           
 31917                           ;adc.c: 101: }
 31918  00ED16  0012               	return	
 31919  00ED18                     l3031:
 31920                           
 31921                           ; BSR set to: 2
 31922                           ;adc.c: 102: else;adc.c: 103: {;adc.c: 104: ADCON0bits.CHS = 0b1001;
 31923                           
 31924                           ; BSR set to: 2
 31925  00ED18  50C2               	movf	4034,w,c	;volatile
 31926  00ED1A  0BC3               	andlw	-61
 31927  00ED1C  0924               	iorlw	36
 31928  00ED1E  6EC2               	movwf	4034,c	;volatile
 31929                           
 31930                           ;adc.c: 105: params.temperature_source = TEMPERATURE_SOURCE_INTERNAL;
 31931  00ED20  0E00               	movlw	0
 31932  00ED22  6F31               	movwf	_params& (0+255),b
 31933  00ED24  0012               	return	
 31934  00ED26                     __end_of_adc_read_temperature:
 31935                           	opt stack 0
 31936                           tblptru	equ	0xFF8
 31937                           tblptrh	equ	0xFF7
 31938                           tblptrl	equ	0xFF6
 31939                           tablat	equ	0xFF5
 31940                           prodh	equ	0xFF4
 31941                           prodl	equ	0xFF3
 31942                           intcon	equ	0xFF2
 31943                           postinc0	equ	0xFEE
 31944                           wreg	equ	0xFE8
 31945                           indf1	equ	0xFE7
 31946                           postinc1	equ	0xFE6
 31947                           postdec1	equ	0xFE5
 31948                           plusw1	equ	0xFE3
 31949                           fsr1h	equ	0xFE2
 31950                           fsr1l	equ	0xFE1
 31951                           indf2	equ	0xFDF
 31952                           postinc2	equ	0xFDE
 31953                           postdec2	equ	0xFDD
 31954                           plusw2	equ	0xFDB
 31955                           fsr2h	equ	0xFDA
 31956                           fsr2l	equ	0xFD9
 31957                           status	equ	0xFD8
 31958                           
 31959 ;; *************** function ___xxtofl *****************
 31960 ;; Defined at:
 31961 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
 31962 ;; Parameters:    Size  Location     Type
 31963 ;;  sign            1    wreg     unsigned char 
 31964 ;;  val             4   10[BANK0 ] long 
 31965 ;; Auto vars:     Size  Location     Type
 31966 ;;  sign            1   18[BANK0 ] unsigned char 
 31967 ;;  arg             4   20[BANK0 ] unsigned long 
 31968 ;;  exp             1   19[BANK0 ] unsigned char 
 31969 ;; Return value:  Size  Location     Type
 31970 ;;                  4   10[BANK0 ] unsigned char 
 31971 ;; Registers used:
 31972 ;;		wreg, status,2, status,0
 31973 ;; Tracked objects:
 31974 ;;		On entry : 0/0
 31975 ;;		On exit  : 0/0
 31976 ;;		Unchanged: 0/0
 31977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31978 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31979 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31980 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31981 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31982 ;;Total ram usage:       14 bytes
 31983 ;; Hardware stack levels used:    1
 31984 ;; Hardware stack levels required when called:   10
 31985 ;; This function calls:
 31986 ;;		Nothing
 31987 ;; This function is called by:
 31988 ;;		__motor_steps_from_degrees_int
 31989 ;;		_motor_calculate_position_in_degrees
 31990 ;;		__motor_get_speed_in_degrees
 31991 ;;		__step_position_from_divide_position
 31992 ;;		_motor_divide_jump_to_nearest
 31993 ;;		_motor_arc_move
 31994 ;;		_adc_read_temperature
 31995 ;;		__steps_from_degrees
 31996 ;;		__motor_steps_from_degrees_float
 31997 ;;		_motor_steps_from_degrees
 31998 ;; This function uses a non-reentrant model
 31999 ;;
 32000                           
 32001                           	psect	text123
 32002  010522                     __ptext123:
 32003                           	opt stack 0
 32004  010522                     ___xxtofl:
 32005                           	opt stack 18
 32006                           
 32007                           ; BSR set to: 2
 32008                           ;incstack = 0
 32009                           ;___xxtofl@sign stored from wreg
 32010  010522  0100               	movlb	0	; () banked
 32011  010524  6F72               	movwf	___xxtofl@sign& (0+255),b
 32012  010526  0100               	movlb	0	; () banked
 32013  010528  5172               	movf	___xxtofl@sign& (0+255),w,b
 32014  01052A  A4D8               	btfss	status,2,c
 32015                           
 32016                           ; BSR set to: 0
 32017  01052C  AF6D               	btfss	(___xxtofl@val+3)& (0+255),7,b
 32018  01052E  D01A               	goto	l3816
 32019                           
 32020                           ; BSR set to: 0
 32021  010530  C06A  F06E         	movff	___xxtofl@val,??___xxtofl
 32022  010534  C06B  F06F         	movff	___xxtofl@val+1,??___xxtofl+1
 32023  010538  C06C  F070         	movff	___xxtofl@val+2,??___xxtofl+2
 32024  01053C  C06D  F071         	movff	___xxtofl@val+3,??___xxtofl+3
 32025  010540  1F6E               	comf	??___xxtofl& (0+255),f,b
 32026  010542  1F6F               	comf	(??___xxtofl+1)& (0+255),f,b
 32027  010544  1F70               	comf	(??___xxtofl+2)& (0+255),f,b
 32028  010546  1F71               	comf	(??___xxtofl+3)& (0+255),f,b
 32029  010548  2B6E               	incf	??___xxtofl& (0+255),f,b
 32030  01054A  0E00               	movlw	0
 32031  01054C  236F               	addwfc	(??___xxtofl+1)& (0+255),f,b
 32032  01054E  2370               	addwfc	(??___xxtofl+2)& (0+255),f,b
 32033  010550  2371               	addwfc	(??___xxtofl+3)& (0+255),f,b
 32034  010552  C06E  F074         	movff	??___xxtofl,___xxtofl@arg
 32035  010556  C06F  F075         	movff	??___xxtofl+1,___xxtofl@arg+1
 32036  01055A  C070  F076         	movff	??___xxtofl+2,___xxtofl@arg+2
 32037  01055E  C071  F077         	movff	??___xxtofl+3,___xxtofl@arg+3
 32038  010562  D008               	goto	l3817
 32039  010564                     l3816:
 32040                           
 32041                           ; BSR set to: 0
 32042  010564  C06A  F074         	movff	___xxtofl@val,___xxtofl@arg
 32043  010568  C06B  F075         	movff	___xxtofl@val+1,___xxtofl@arg+1
 32044  01056C  C06C  F076         	movff	___xxtofl@val+2,___xxtofl@arg+2
 32045  010570  C06D  F077         	movff	___xxtofl@val+3,___xxtofl@arg+3
 32046  010574                     l3817:
 32047                           
 32048                           ; BSR set to: 0
 32049                           
 32050                           ; BSR set to: 0
 32051  010574  516A               	movf	___xxtofl@val& (0+255),w,b
 32052  010576  116B               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 32053  010578  116C               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 32054  01057A  116D               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 32055  01057C  A4D8               	btfss	status,2,c
 32056  01057E  D009               	goto	l3818
 32057                           
 32058                           ; BSR set to: 0
 32059  010580  0E00               	movlw	0
 32060  010582  6F6A               	movwf	?___xxtofl& (0+255),b
 32061  010584  0E00               	movlw	0
 32062  010586  6F6B               	movwf	(?___xxtofl+1)& (0+255),b
 32063  010588  0E00               	movlw	0
 32064  01058A  6F6C               	movwf	(?___xxtofl+2)& (0+255),b
 32065  01058C  0E00               	movlw	0
 32066  01058E  6F6D               	movwf	(?___xxtofl+3)& (0+255),b
 32067                           
 32068                           ; BSR set to: 0
 32069  010590  0012               	return	
 32070  010592                     l3818:
 32071                           
 32072                           ; BSR set to: 0
 32073                           
 32074                           ; BSR set to: 0
 32075  010592  0E96               	movlw	150
 32076  010594  6F73               	movwf	___xxtofl@exp& (0+255),b
 32077  010596  D006               	goto	l3820
 32078  010598                     
 32079                           ; BSR set to: 0
 32080                           
 32081                           ; BSR set to: 0
 32082  010598  2B73               	incf	___xxtofl@exp& (0+255),f,b
 32083  01059A  90D8               	bcf	status,0,c
 32084  01059C  3377               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 32085  01059E  3376               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 32086  0105A0  3375               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 32087  0105A2  3374               	rrcf	___xxtofl@arg& (0+255),f,b
 32088  0105A4                     l3820:
 32089                           
 32090                           ; BSR set to: 0
 32091                           
 32092                           ; BSR set to: 0
 32093  0105A4  0E00               	movlw	0
 32094  0105A6  1574               	andwf	___xxtofl@arg& (0+255),w,b
 32095  0105A8  6F6E               	movwf	??___xxtofl& (0+255),b
 32096  0105AA  0E00               	movlw	0
 32097  0105AC  1575               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 32098  0105AE  6F6F               	movwf	(??___xxtofl+1)& (0+255),b
 32099  0105B0  0E00               	movlw	0
 32100  0105B2  1576               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 32101  0105B4  6F70               	movwf	(??___xxtofl+2)& (0+255),b
 32102  0105B6  0EFE               	movlw	254
 32103  0105B8  1577               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 32104  0105BA  6F71               	movwf	(??___xxtofl+3)& (0+255),b
 32105  0105BC  516E               	movf	??___xxtofl& (0+255),w,b
 32106  0105BE  116F               	iorwf	(??___xxtofl+1)& (0+255),w,b
 32107  0105C0  1170               	iorwf	(??___xxtofl+2)& (0+255),w,b
 32108  0105C2  1171               	iorwf	(??___xxtofl+3)& (0+255),w,b
 32109  0105C4  B4D8               	btfsc	status,2,c
 32110  0105C6  D00D               	goto	l3823
 32111  0105C8  D7E7               	goto	l3821
 32112  0105CA                     
 32113                           ; BSR set to: 0
 32114                           
 32115                           ; BSR set to: 0
 32116  0105CA  2B73               	incf	___xxtofl@exp& (0+255),f,b
 32117                           
 32118                           ; BSR set to: 0
 32119  0105CC  0E01               	movlw	1
 32120  0105CE  2774               	addwf	___xxtofl@arg& (0+255),f,b
 32121  0105D0  0E00               	movlw	0
 32122  0105D2  2375               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 32123  0105D4  2376               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 32124  0105D6  2377               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 32125                           
 32126                           ; BSR set to: 0
 32127  0105D8  90D8               	bcf	status,0,c
 32128  0105DA  3377               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 32129  0105DC  3376               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 32130  0105DE  3375               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 32131  0105E0  3374               	rrcf	___xxtofl@arg& (0+255),f,b
 32132  0105E2                     l3823:
 32133                           
 32134                           ; BSR set to: 0
 32135  0105E2  0E00               	movlw	0
 32136  0105E4  1574               	andwf	___xxtofl@arg& (0+255),w,b
 32137  0105E6  6F6E               	movwf	??___xxtofl& (0+255),b
 32138  0105E8  0E00               	movlw	0
 32139  0105EA  1575               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 32140  0105EC  6F6F               	movwf	(??___xxtofl+1)& (0+255),b
 32141  0105EE  0E00               	movlw	0
 32142  0105F0  1576               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 32143  0105F2  6F70               	movwf	(??___xxtofl+2)& (0+255),b
 32144  0105F4  0EFF               	movlw	255
 32145  0105F6  1577               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 32146  0105F8  6F71               	movwf	(??___xxtofl+3)& (0+255),b
 32147  0105FA  516E               	movf	??___xxtofl& (0+255),w,b
 32148  0105FC  116F               	iorwf	(??___xxtofl+1)& (0+255),w,b
 32149  0105FE  1170               	iorwf	(??___xxtofl+2)& (0+255),w,b
 32150  010600  1171               	iorwf	(??___xxtofl+3)& (0+255),w,b
 32151  010602  B4D8               	btfsc	status,2,c
 32152  010604  D007               	goto	l3826
 32153  010606  D7E1               	goto	l3824
 32154  010608                     
 32155                           ; BSR set to: 0
 32156                           
 32157                           ; BSR set to: 0
 32158  010608  0773               	decf	___xxtofl@exp& (0+255),f,b
 32159  01060A  90D8               	bcf	status,0,c
 32160  01060C  3774               	rlcf	___xxtofl@arg& (0+255),f,b
 32161  01060E  3775               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 32162  010610  3776               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 32163  010612  3777               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 32164  010614                     l3826:
 32165                           
 32166                           ; BSR set to: 0
 32167                           
 32168                           ; BSR set to: 0
 32169  010614  BF76               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 32170  010616  D003               	goto	u14040
 32171                           
 32172                           ; BSR set to: 0
 32173  010618  0E02               	movlw	2
 32174  01061A  6173               	cpfslt	___xxtofl@exp& (0+255),b
 32175  01061C  D7F5               	goto	l3827
 32176  01061E                     u14040:
 32177                           
 32178                           ; BSR set to: 0
 32179                           
 32180                           ; BSR set to: 0
 32181  01061E  A173               	btfss	___xxtofl@exp& (0+255),0,b
 32182                           
 32183                           ; BSR set to: 0
 32184  010620  9F76               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 32185                           
 32186                           ; BSR set to: 0
 32187                           
 32188                           ; BSR set to: 0
 32189  010622  90D8               	bcf	status,0,c
 32190  010624  3373               	rrcf	___xxtofl@exp& (0+255),f,b
 32191                           
 32192                           ; BSR set to: 0
 32193  010626  C073  F06E         	movff	___xxtofl@exp,??___xxtofl
 32194  01062A  6B6F               	clrf	(??___xxtofl+1)& (0+255),b
 32195  01062C  6B70               	clrf	(??___xxtofl+2)& (0+255),b
 32196  01062E  6B71               	clrf	(??___xxtofl+3)& (0+255),b
 32197  010630  C06E  F071         	movff	??___xxtofl,??___xxtofl+3
 32198  010634  6B70               	clrf	(??___xxtofl+2)& (0+255),b
 32199  010636  6B6F               	clrf	(??___xxtofl+1)& (0+255),b
 32200  010638  6B6E               	clrf	??___xxtofl& (0+255),b
 32201  01063A  516E               	movf	??___xxtofl& (0+255),w,b
 32202  01063C  1374               	iorwf	___xxtofl@arg& (0+255),f,b
 32203  01063E  516F               	movf	(??___xxtofl+1)& (0+255),w,b
 32204  010640  1375               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 32205  010642  5170               	movf	(??___xxtofl+2)& (0+255),w,b
 32206  010644  1376               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 32207  010646  5171               	movf	(??___xxtofl+3)& (0+255),w,b
 32208  010648  1377               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 32209                           
 32210                           ; BSR set to: 0
 32211  01064A  5172               	movf	___xxtofl@sign& (0+255),w,b
 32212  01064C  A4D8               	btfss	status,2,c
 32213                           
 32214                           ; BSR set to: 0
 32215  01064E  AF6D               	btfss	(___xxtofl@val+3)& (0+255),7,b
 32216  010650  D001               	goto	l3832
 32217                           
 32218                           ; BSR set to: 0
 32219  010652  8F77               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 32220  010654                     l3832:
 32221                           
 32222                           ; BSR set to: 0
 32223                           
 32224                           ; BSR set to: 0
 32225  010654  C074  F06A         	movff	___xxtofl@arg,?___xxtofl
 32226  010658  C075  F06B         	movff	___xxtofl@arg+1,?___xxtofl+1
 32227  01065C  C076  F06C         	movff	___xxtofl@arg+2,?___xxtofl+2
 32228  010660  C077  F06D         	movff	___xxtofl@arg+3,?___xxtofl+3
 32229  010664  0012               	return	
 32230  010666                     __end_of___xxtofl:
 32231                           	opt stack 0
 32232                           tblptru	equ	0xFF8
 32233                           tblptrh	equ	0xFF7
 32234                           tblptrl	equ	0xFF6
 32235                           tablat	equ	0xFF5
 32236                           prodh	equ	0xFF4
 32237                           prodl	equ	0xFF3
 32238                           intcon	equ	0xFF2
 32239                           postinc0	equ	0xFEE
 32240                           wreg	equ	0xFE8
 32241                           indf1	equ	0xFE7
 32242                           postinc1	equ	0xFE6
 32243                           postdec1	equ	0xFE5
 32244                           plusw1	equ	0xFE3
 32245                           fsr1h	equ	0xFE2
 32246                           fsr1l	equ	0xFE1
 32247                           indf2	equ	0xFDF
 32248                           postinc2	equ	0xFDE
 32249                           postdec2	equ	0xFDD
 32250                           plusw2	equ	0xFDB
 32251                           fsr2h	equ	0xFDA
 32252                           fsr2l	equ	0xFD9
 32253                           status	equ	0xFD8
 32254                           
 32255 ;; *************** function ___fltol *****************
 32256 ;; Defined at:
 32257 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
 32258 ;; Parameters:    Size  Location     Type
 32259 ;;  f1              4    0[BANK0 ] unsigned char 
 32260 ;; Auto vars:     Size  Location     Type
 32261 ;;  exp1            1    9[BANK0 ] unsigned char 
 32262 ;;  sign1           1    8[BANK0 ] unsigned char 
 32263 ;; Return value:  Size  Location     Type
 32264 ;;                  4    0[BANK0 ] long 
 32265 ;; Registers used:
 32266 ;;		wreg, status,2, status,0
 32267 ;; Tracked objects:
 32268 ;;		On entry : 0/0
 32269 ;;		On exit  : 0/0
 32270 ;;		Unchanged: 0/0
 32271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32272 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32273 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32274 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32275 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32276 ;;Total ram usage:       10 bytes
 32277 ;; Hardware stack levels used:    1
 32278 ;; Hardware stack levels required when called:   10
 32279 ;; This function calls:
 32280 ;;		Nothing
 32281 ;; This function is called by:
 32282 ;;		__motor_steps_from_degrees_int
 32283 ;;		_motor_calculate_position_in_degrees
 32284 ;;		__motor_get_speed_in_degrees
 32285 ;;		__step_position_from_divide_position
 32286 ;;		_motor_divide_jump_to_nearest
 32287 ;;		_motor_arc_move
 32288 ;;		_adc_read_temperature
 32289 ;;		__steps_from_degrees
 32290 ;;		__motor_steps_from_degrees_float
 32291 ;;		_motor_steps_from_degrees
 32292 ;; This function uses a non-reentrant model
 32293 ;;
 32294                           
 32295                           	psect	text124
 32296  0129D4                     __ptext124:
 32297                           	opt stack 0
 32298  0129D4                     ___fltol:
 32299                           	opt stack 18
 32300                           
 32301                           ; BSR set to: 0
 32302                           ;incstack = 0
 32303  0129D4  0100               	movlb	0	; () banked
 32304  0129D6  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
 32305  0129D8  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
 32306  0129DA  6F69               	movwf	___fltol@exp1& (0+255),b
 32307  0129DC  5169               	movf	___fltol@exp1& (0+255),w,b
 32308  0129DE  A4D8               	btfss	status,2,c
 32309  0129E0  D009               	goto	l3461
 32310                           
 32311                           ; BSR set to: 0
 32312  0129E2  0E00               	movlw	0
 32313  0129E4  6F60               	movwf	?___fltol& (0+255),b
 32314  0129E6  0E00               	movlw	0
 32315  0129E8  6F61               	movwf	(?___fltol+1)& (0+255),b
 32316  0129EA  0E00               	movlw	0
 32317  0129EC  6F62               	movwf	(?___fltol+2)& (0+255),b
 32318  0129EE  0E00               	movlw	0
 32319  0129F0  6F63               	movwf	(?___fltol+3)& (0+255),b
 32320                           
 32321                           ; BSR set to: 0
 32322  0129F2  0012               	return	
 32323  0129F4                     l3461:
 32324                           
 32325                           ; BSR set to: 0
 32326                           
 32327                           ; BSR set to: 0
 32328  0129F4  C060  F064         	movff	___fltol@f1,??___fltol
 32329  0129F8  C061  F065         	movff	___fltol@f1+1,??___fltol+1
 32330  0129FC  C062  F066         	movff	___fltol@f1+2,??___fltol+2
 32331  012A00  C063  F067         	movff	___fltol@f1+3,??___fltol+3
 32332  012A04  0E20               	movlw	32
 32333  012A06  D005               	goto	u13920
 32334  012A08                     u13925:
 32335  012A08  90D8               	bcf	status,0,c
 32336  012A0A  3367               	rrcf	(??___fltol+3)& (0+255),f,b
 32337  012A0C  3366               	rrcf	(??___fltol+2)& (0+255),f,b
 32338  012A0E  3365               	rrcf	(??___fltol+1)& (0+255),f,b
 32339  012A10  3364               	rrcf	??___fltol& (0+255),f,b
 32340  012A12                     u13920:
 32341  012A12  2EE8               	decfsz	wreg,f,c
 32342  012A14  D7F9               	goto	u13925
 32343  012A16  5164               	movf	??___fltol& (0+255),w,b
 32344  012A18  6F68               	movwf	___fltol@sign1& (0+255),b
 32345                           
 32346                           ; BSR set to: 0
 32347  012A1A  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
 32348                           
 32349                           ; BSR set to: 0
 32350  012A1C  0EFF               	movlw	255
 32351  012A1E  1760               	andwf	___fltol@f1& (0+255),f,b
 32352  012A20  0EFF               	movlw	255
 32353  012A22  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
 32354  012A24  0EFF               	movlw	255
 32355  012A26  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
 32356  012A28  0E00               	movlw	0
 32357  012A2A  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
 32358                           
 32359                           ; BSR set to: 0
 32360  012A2C  0E96               	movlw	150
 32361  012A2E  5F69               	subwf	___fltol@exp1& (0+255),f,b
 32362                           
 32363                           ; BSR set to: 0
 32364  012A30  AF69               	btfss	___fltol@exp1& (0+255),7,b
 32365  012A32  D016               	goto	l3463
 32366                           
 32367                           ; BSR set to: 0
 32368  012A34  5169               	movf	___fltol@exp1& (0+255),w,b
 32369  012A36  0A80               	xorlw	128
 32370  012A38  0F97               	addlw	151
 32371  012A3A  B0D8               	btfsc	status,0,c
 32372  012A3C  D009               	goto	l3464
 32373                           
 32374                           ; BSR set to: 0
 32375  012A3E  0E00               	movlw	0
 32376  012A40  6F60               	movwf	?___fltol& (0+255),b
 32377  012A42  0E00               	movlw	0
 32378  012A44  6F61               	movwf	(?___fltol+1)& (0+255),b
 32379  012A46  0E00               	movlw	0
 32380  012A48  6F62               	movwf	(?___fltol+2)& (0+255),b
 32381  012A4A  0E00               	movlw	0
 32382  012A4C  6F63               	movwf	(?___fltol+3)& (0+255),b
 32383                           
 32384                           ; BSR set to: 0
 32385  012A4E  0012               	return	
 32386  012A50                     l3464:
 32387                           
 32388                           ; BSR set to: 0
 32389                           
 32390                           ; BSR set to: 0
 32391                           
 32392                           ; BSR set to: 0
 32393  012A50  90D8               	bcf	status,0,c
 32394  012A52  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
 32395  012A54  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
 32396  012A56  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
 32397  012A58  3360               	rrcf	___fltol@f1& (0+255),f,b
 32398                           
 32399                           ; BSR set to: 0
 32400  012A5A  3F69               	incfsz	___fltol@exp1& (0+255),f,b
 32401  012A5C  D7F9               	goto	l3464
 32402                           
 32403                           ; BSR set to: 0
 32404  012A5E  D015               	goto	u13960
 32405  012A60                     l3463:
 32406                           
 32407                           ; BSR set to: 0
 32408                           
 32409                           ; BSR set to: 0
 32410  012A60  0E1F               	movlw	31
 32411  012A62  6569               	cpfsgt	___fltol@exp1& (0+255),b
 32412  012A64  D00F               	goto	l3469
 32413                           
 32414                           ; BSR set to: 0
 32415  012A66  0E00               	movlw	0
 32416  012A68  6F60               	movwf	?___fltol& (0+255),b
 32417  012A6A  0E00               	movlw	0
 32418  012A6C  6F61               	movwf	(?___fltol+1)& (0+255),b
 32419  012A6E  0E00               	movlw	0
 32420  012A70  6F62               	movwf	(?___fltol+2)& (0+255),b
 32421  012A72  0E00               	movlw	0
 32422  012A74  6F63               	movwf	(?___fltol+3)& (0+255),b
 32423                           
 32424                           ; BSR set to: 0
 32425  012A76  0012               	return	
 32426  012A78                     
 32427                           ; BSR set to: 0
 32428                           
 32429                           ; BSR set to: 0
 32430  012A78  90D8               	bcf	status,0,c
 32431  012A7A  3760               	rlcf	___fltol@f1& (0+255),f,b
 32432  012A7C  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
 32433  012A7E  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
 32434  012A80  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
 32435  012A82  0769               	decf	___fltol@exp1& (0+255),f,b
 32436  012A84                     l3469:
 32437                           
 32438                           ; BSR set to: 0
 32439                           
 32440                           ; BSR set to: 0
 32441  012A84  5169               	movf	___fltol@exp1& (0+255),w,b
 32442  012A86  A4D8               	btfss	status,2,c
 32443  012A88  D7F7               	goto	l3470
 32444  012A8A                     u13960:
 32445                           
 32446                           ; BSR set to: 0
 32447                           
 32448                           ; BSR set to: 0
 32449                           
 32450                           ; BSR set to: 0
 32451  012A8A  5168               	movf	___fltol@sign1& (0+255),w,b
 32452  012A8C  B4D8               	btfsc	status,2,c
 32453  012A8E  D008               	goto	l3472
 32454                           
 32455                           ; BSR set to: 0
 32456  012A90  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
 32457  012A92  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
 32458  012A94  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
 32459  012A96  6D60               	negf	___fltol@f1& (0+255),b
 32460  012A98  0E00               	movlw	0
 32461  012A9A  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
 32462  012A9C  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
 32463  012A9E  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
 32464  012AA0                     l3472:
 32465                           
 32466                           ; BSR set to: 0
 32467                           
 32468                           ; BSR set to: 0
 32469  012AA0  C060  F060         	movff	___fltol@f1,?___fltol
 32470  012AA4  C061  F061         	movff	___fltol@f1+1,?___fltol+1
 32471  012AA8  C062  F062         	movff	___fltol@f1+2,?___fltol+2
 32472  012AAC  C063  F063         	movff	___fltol@f1+3,?___fltol+3
 32473  012AB0  0012               	return	
 32474  012AB2                     __end_of___fltol:
 32475                           	opt stack 0
 32476                           tblptru	equ	0xFF8
 32477                           tblptrh	equ	0xFF7
 32478                           tblptrl	equ	0xFF6
 32479                           tablat	equ	0xFF5
 32480                           prodh	equ	0xFF4
 32481                           prodl	equ	0xFF3
 32482                           intcon	equ	0xFF2
 32483                           postinc0	equ	0xFEE
 32484                           wreg	equ	0xFE8
 32485                           indf1	equ	0xFE7
 32486                           postinc1	equ	0xFE6
 32487                           postdec1	equ	0xFE5
 32488                           plusw1	equ	0xFE3
 32489                           fsr1h	equ	0xFE2
 32490                           fsr1l	equ	0xFE1
 32491                           indf2	equ	0xFDF
 32492                           postinc2	equ	0xFDE
 32493                           postdec2	equ	0xFDD
 32494                           plusw2	equ	0xFDB
 32495                           fsr2h	equ	0xFDA
 32496                           fsr2l	equ	0xFD9
 32497                           status	equ	0xFD8
 32498                           
 32499 ;; *************** function ___flneg *****************
 32500 ;; Defined at:
 32501 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
 32502 ;; Parameters:    Size  Location     Type
 32503 ;;  f1              4   24[BANK0 ] long 
 32504 ;; Auto vars:     Size  Location     Type
 32505 ;;		None
 32506 ;; Return value:  Size  Location     Type
 32507 ;;                  4   24[BANK0 ] long 
 32508 ;; Registers used:
 32509 ;;		wreg, status,2, status,0
 32510 ;; Tracked objects:
 32511 ;;		On entry : 0/0
 32512 ;;		On exit  : 0/0
 32513 ;;		Unchanged: 0/0
 32514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32515 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32518 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32519 ;;Total ram usage:        4 bytes
 32520 ;; Hardware stack levels used:    1
 32521 ;; Hardware stack levels required when called:   10
 32522 ;; This function calls:
 32523 ;;		Nothing
 32524 ;; This function is called by:
 32525 ;;		_adc_read_temperature
 32526 ;;		__motor_steps_from_degrees_float
 32527 ;; This function uses a non-reentrant model
 32528 ;;
 32529                           
 32530                           	psect	text125
 32531  015EB6                     __ptext125:
 32532                           	opt stack 0
 32533  015EB6                     ___flneg:
 32534                           	opt stack 19
 32535                           
 32536                           ; BSR set to: 0
 32537                           ;incstack = 0
 32538  015EB6  0100               	movlb	0	; () banked
 32539  015EB8  5178               	movf	___flneg@f1& (0+255),w,b
 32540  015EBA  1179               	iorwf	(___flneg@f1+1)& (0+255),w,b
 32541  015EBC  117A               	iorwf	(___flneg@f1+2)& (0+255),w,b
 32542  015EBE  117B               	iorwf	(___flneg@f1+3)& (0+255),w,b
 32543  015EC0  B4D8               	btfsc	status,2,c
 32544  015EC2  D008               	goto	l3438
 32545                           
 32546                           ; BSR set to: 0
 32547  015EC4  0E00               	movlw	0
 32548  015EC6  1B78               	xorwf	___flneg@f1& (0+255),f,b
 32549  015EC8  0E00               	movlw	0
 32550  015ECA  1B79               	xorwf	(___flneg@f1+1)& (0+255),f,b
 32551  015ECC  0E00               	movlw	0
 32552  015ECE  1B7A               	xorwf	(___flneg@f1+2)& (0+255),f,b
 32553  015ED0  0E80               	movlw	128
 32554  015ED2  1B7B               	xorwf	(___flneg@f1+3)& (0+255),f,b
 32555  015ED4                     l3438:
 32556                           
 32557                           ; BSR set to: 0
 32558                           
 32559                           ; BSR set to: 0
 32560  015ED4  C078  F078         	movff	___flneg@f1,?___flneg
 32561  015ED8  C079  F079         	movff	___flneg@f1+1,?___flneg+1
 32562  015EDC  C07A  F07A         	movff	___flneg@f1+2,?___flneg+2
 32563  015EE0  C07B  F07B         	movff	___flneg@f1+3,?___flneg+3
 32564  015EE4  0012               	return	
 32565  015EE6                     __end_of___flneg:
 32566                           	opt stack 0
 32567                           tblptru	equ	0xFF8
 32568                           tblptrh	equ	0xFF7
 32569                           tblptrl	equ	0xFF6
 32570                           tablat	equ	0xFF5
 32571                           prodh	equ	0xFF4
 32572                           prodl	equ	0xFF3
 32573                           intcon	equ	0xFF2
 32574                           postinc0	equ	0xFEE
 32575                           wreg	equ	0xFE8
 32576                           indf1	equ	0xFE7
 32577                           postinc1	equ	0xFE6
 32578                           postdec1	equ	0xFE5
 32579                           plusw1	equ	0xFE3
 32580                           fsr1h	equ	0xFE2
 32581                           fsr1l	equ	0xFE1
 32582                           indf2	equ	0xFDF
 32583                           postinc2	equ	0xFDE
 32584                           postdec2	equ	0xFDD
 32585                           plusw2	equ	0xFDB
 32586                           fsr2h	equ	0xFDA
 32587                           fsr2l	equ	0xFD9
 32588                           status	equ	0xFD8
 32589                           
 32590 ;; *************** function ___flmul *****************
 32591 ;; Defined at:
 32592 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
 32593 ;; Parameters:    Size  Location     Type
 32594 ;;  b               4   24[BANK0 ] long 
 32595 ;;  a               4   28[BANK0 ] long 
 32596 ;; Auto vars:     Size  Location     Type
 32597 ;;  prod            4   43[BANK0 ] struct .
 32598 ;;  grs             4   37[BANK0 ] unsigned long 
 32599 ;;  temp            2   47[BANK0 ] struct .
 32600 ;;  bexp            1   42[BANK0 ] unsigned char 
 32601 ;;  aexp            1   41[BANK0 ] unsigned char 
 32602 ;;  sign            1   36[BANK0 ] unsigned char 
 32603 ;; Return value:  Size  Location     Type
 32604 ;;                  4   24[BANK0 ] unsigned char 
 32605 ;; Registers used:
 32606 ;;		wreg, status,2, status,0, prodl, prodh
 32607 ;; Tracked objects:
 32608 ;;		On entry : 0/0
 32609 ;;		On exit  : 0/0
 32610 ;;		Unchanged: 0/0
 32611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32612 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32613 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32614 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32615 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32616 ;;Total ram usage:       25 bytes
 32617 ;; Hardware stack levels used:    1
 32618 ;; Hardware stack levels required when called:   10
 32619 ;; This function calls:
 32620 ;;		Nothing
 32621 ;; This function is called by:
 32622 ;;		__motor_steps_from_degrees_int
 32623 ;;		_motor_calculate_position_in_degrees
 32624 ;;		__step_position_from_divide_position
 32625 ;;		_motor_divide_jump_to_nearest
 32626 ;;		_motor_arc_move
 32627 ;;		_adc_read_temperature
 32628 ;;		__steps_from_degrees
 32629 ;;		__motor_steps_from_degrees_float
 32630 ;;		_motor_steps_from_degrees
 32631 ;; This function uses a non-reentrant model
 32632 ;;
 32633                           
 32634                           	psect	text126
 32635  00C656                     __ptext126:
 32636                           	opt stack 0
 32637  00C656                     ___flmul:
 32638                           	opt stack 18
 32639                           
 32640                           ; BSR set to: 0
 32641                           ;incstack = 0
 32642  00C656  0100               	movlb	0	; () banked
 32643  00C658  517B               	movf	(___flmul@b+3)& (0+255),w,b
 32644  00C65A  0B80               	andlw	128
 32645  00C65C  6F84               	movwf	___flmul@sign& (0+255),b
 32646  00C65E  517B               	movf	(___flmul@b+3)& (0+255),w,b
 32647  00C660  257B               	addwf	(___flmul@b+3)& (0+255),w,b
 32648  00C662  6F8A               	movwf	___flmul@bexp& (0+255),b
 32649                           
 32650                           ; BSR set to: 0
 32651  00C664  BF7A               	btfsc	(___flmul@b+2)& (0+255),7,b
 32652                           
 32653                           ; BSR set to: 0
 32654  00C666  818A               	bsf	___flmul@bexp& (0+255),0,b
 32655                           
 32656                           ; BSR set to: 0
 32657                           
 32658                           ; BSR set to: 0
 32659  00C668  518A               	movf	___flmul@bexp& (0+255),w,b
 32660  00C66A  B4D8               	btfsc	status,2,c
 32661  00C66C  D00D               	goto	l3769
 32662                           
 32663                           ; BSR set to: 0
 32664  00C66E  298A               	incf	___flmul@bexp& (0+255),w,b
 32665  00C670  A4D8               	btfss	status,2,c
 32666  00C672  D008               	goto	l3770
 32667                           
 32668                           ; BSR set to: 0
 32669  00C674  0E00               	movlw	0
 32670  00C676  6F78               	movwf	___flmul@b& (0+255),b
 32671  00C678  0E00               	movlw	0
 32672  00C67A  6F79               	movwf	(___flmul@b+1)& (0+255),b
 32673  00C67C  0E00               	movlw	0
 32674  00C67E  6F7A               	movwf	(___flmul@b+2)& (0+255),b
 32675  00C680  0E00               	movlw	0
 32676  00C682  6F7B               	movwf	(___flmul@b+3)& (0+255),b
 32677  00C684                     l3770:
 32678                           
 32679                           ; BSR set to: 0
 32680                           
 32681                           ; BSR set to: 0
 32682  00C684  8F7A               	bsf	(___flmul@b+2)& (0+255),7,b
 32683  00C686  D008               	goto	l3771
 32684  00C688                     l3769:
 32685                           
 32686                           ; BSR set to: 0
 32687                           
 32688                           ; BSR set to: 0
 32689  00C688  0E00               	movlw	0
 32690  00C68A  6F78               	movwf	___flmul@b& (0+255),b
 32691  00C68C  0E00               	movlw	0
 32692  00C68E  6F79               	movwf	(___flmul@b+1)& (0+255),b
 32693  00C690  0E00               	movlw	0
 32694  00C692  6F7A               	movwf	(___flmul@b+2)& (0+255),b
 32695  00C694  0E00               	movlw	0
 32696  00C696  6F7B               	movwf	(___flmul@b+3)& (0+255),b
 32697  00C698                     l3771:
 32698                           
 32699                           ; BSR set to: 0
 32700                           
 32701                           ; BSR set to: 0
 32702  00C698  517F               	movf	(___flmul@a+3)& (0+255),w,b
 32703  00C69A  0B80               	andlw	128
 32704  00C69C  1B84               	xorwf	___flmul@sign& (0+255),f,b
 32705                           
 32706                           ; BSR set to: 0
 32707  00C69E  517F               	movf	(___flmul@a+3)& (0+255),w,b
 32708  00C6A0  257F               	addwf	(___flmul@a+3)& (0+255),w,b
 32709  00C6A2  6F89               	movwf	___flmul@aexp& (0+255),b
 32710                           
 32711                           ; BSR set to: 0
 32712  00C6A4  BF7E               	btfsc	(___flmul@a+2)& (0+255),7,b
 32713                           
 32714                           ; BSR set to: 0
 32715  00C6A6  8189               	bsf	___flmul@aexp& (0+255),0,b
 32716                           
 32717                           ; BSR set to: 0
 32718                           
 32719                           ; BSR set to: 0
 32720  00C6A8  5189               	movf	___flmul@aexp& (0+255),w,b
 32721  00C6AA  B4D8               	btfsc	status,2,c
 32722  00C6AC  D00D               	goto	l3773
 32723                           
 32724                           ; BSR set to: 0
 32725  00C6AE  2989               	incf	___flmul@aexp& (0+255),w,b
 32726  00C6B0  A4D8               	btfss	status,2,c
 32727  00C6B2  D008               	goto	l3774
 32728                           
 32729                           ; BSR set to: 0
 32730  00C6B4  0E00               	movlw	0
 32731  00C6B6  6F7C               	movwf	___flmul@a& (0+255),b
 32732  00C6B8  0E00               	movlw	0
 32733  00C6BA  6F7D               	movwf	(___flmul@a+1)& (0+255),b
 32734  00C6BC  0E00               	movlw	0
 32735  00C6BE  6F7E               	movwf	(___flmul@a+2)& (0+255),b
 32736  00C6C0  0E00               	movlw	0
 32737  00C6C2  6F7F               	movwf	(___flmul@a+3)& (0+255),b
 32738  00C6C4                     l3774:
 32739                           
 32740                           ; BSR set to: 0
 32741                           
 32742                           ; BSR set to: 0
 32743  00C6C4  8F7E               	bsf	(___flmul@a+2)& (0+255),7,b
 32744  00C6C6  D008               	goto	l3775
 32745  00C6C8                     l3773:
 32746                           
 32747                           ; BSR set to: 0
 32748                           
 32749                           ; BSR set to: 0
 32750  00C6C8  0E00               	movlw	0
 32751  00C6CA  6F7C               	movwf	___flmul@a& (0+255),b
 32752  00C6CC  0E00               	movlw	0
 32753  00C6CE  6F7D               	movwf	(___flmul@a+1)& (0+255),b
 32754  00C6D0  0E00               	movlw	0
 32755  00C6D2  6F7E               	movwf	(___flmul@a+2)& (0+255),b
 32756  00C6D4  0E00               	movlw	0
 32757  00C6D6  6F7F               	movwf	(___flmul@a+3)& (0+255),b
 32758  00C6D8                     l3775:
 32759                           
 32760                           ; BSR set to: 0
 32761  00C6D8  5189               	movf	___flmul@aexp& (0+255),w,b
 32762  00C6DA  B4D8               	btfsc	status,2,c
 32763  00C6DC  D003               	goto	u13740
 32764                           
 32765                           ; BSR set to: 0
 32766  00C6DE  518A               	movf	___flmul@bexp& (0+255),w,b
 32767  00C6E0  A4D8               	btfss	status,2,c
 32768  00C6E2  D009               	goto	l3776
 32769  00C6E4                     u13740:
 32770                           
 32771                           ; BSR set to: 0
 32772                           
 32773                           ; BSR set to: 0
 32774  00C6E4  0E00               	movlw	0
 32775  00C6E6  6F78               	movwf	?___flmul& (0+255),b
 32776  00C6E8  0E00               	movlw	0
 32777  00C6EA  6F79               	movwf	(?___flmul+1)& (0+255),b
 32778  00C6EC  0E00               	movlw	0
 32779  00C6EE  6F7A               	movwf	(?___flmul+2)& (0+255),b
 32780  00C6F0  0E00               	movlw	0
 32781  00C6F2  6F7B               	movwf	(?___flmul+3)& (0+255),b
 32782                           
 32783                           ; BSR set to: 0
 32784  00C6F4  0012               	return	
 32785  00C6F6                     l3776:
 32786                           
 32787                           ; BSR set to: 0
 32788                           
 32789                           ; BSR set to: 0
 32790  00C6F6  517E               	movf	(___flmul@a+2)& (0+255),w,b
 32791  00C6F8  0378               	mulwf	___flmul@b& (0+255),b
 32792  00C6FA  CFF3 F08F          	movff	prodl,___flmul@temp
 32793  00C6FE  CFF4 F090          	movff	prodh,___flmul@temp+1
 32794                           
 32795                           ; BSR set to: 0
 32796  00C702  518F               	movf	___flmul@temp& (0+255),w,b
 32797  00C704  6F85               	movwf	___flmul@grs& (0+255),b
 32798  00C706  6B86               	clrf	(___flmul@grs+1)& (0+255),b
 32799  00C708  6B87               	clrf	(___flmul@grs+2)& (0+255),b
 32800  00C70A  6B88               	clrf	(___flmul@grs+3)& (0+255),b
 32801                           
 32802                           ; BSR set to: 0
 32803  00C70C  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32804  00C70E  6F8B               	movwf	___flmul@prod& (0+255),b
 32805  00C710  6B8C               	clrf	(___flmul@prod+1)& (0+255),b
 32806  00C712  6B8D               	clrf	(___flmul@prod+2)& (0+255),b
 32807  00C714  6B8E               	clrf	(___flmul@prod+3)& (0+255),b
 32808  00C716  517D               	movf	(___flmul@a+1)& (0+255),w,b
 32809  00C718  0379               	mulwf	(___flmul@b+1)& (0+255),b
 32810  00C71A  CFF3 F08F          	movff	prodl,___flmul@temp
 32811  00C71E  CFF4 F090          	movff	prodh,___flmul@temp+1
 32812                           
 32813                           ; BSR set to: 0
 32814  00C722  518F               	movf	___flmul@temp& (0+255),w,b
 32815  00C724  2785               	addwf	___flmul@grs& (0+255),f,b
 32816  00C726  0E00               	movlw	0
 32817  00C728  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 32818  00C72A  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 32819  00C72C  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 32820                           
 32821                           ; BSR set to: 0
 32822  00C72E  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32823  00C730  278B               	addwf	___flmul@prod& (0+255),f,b
 32824  00C732  0E00               	movlw	0
 32825  00C734  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32826  00C736  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32827  00C738  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32828  00C73A  517C               	movf	___flmul@a& (0+255),w,b
 32829  00C73C  037A               	mulwf	(___flmul@b+2)& (0+255),b
 32830  00C73E  CFF3 F08F          	movff	prodl,___flmul@temp
 32831  00C742  CFF4 F090          	movff	prodh,___flmul@temp+1
 32832                           
 32833                           ; BSR set to: 0
 32834  00C746  518F               	movf	___flmul@temp& (0+255),w,b
 32835  00C748  2785               	addwf	___flmul@grs& (0+255),f,b
 32836  00C74A  0E00               	movlw	0
 32837  00C74C  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 32838  00C74E  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 32839  00C750  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 32840                           
 32841                           ; BSR set to: 0
 32842  00C752  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32843  00C754  278B               	addwf	___flmul@prod& (0+255),f,b
 32844  00C756  0E00               	movlw	0
 32845  00C758  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32846  00C75A  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32847  00C75C  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32848                           
 32849                           ; BSR set to: 0
 32850  00C75E  C087  F088         	movff	___flmul@grs+2,___flmul@grs+3
 32851  00C762  C086  F087         	movff	___flmul@grs+1,___flmul@grs+2
 32852  00C766  C085  F086         	movff	___flmul@grs,___flmul@grs+1
 32853  00C76A  6B85               	clrf	___flmul@grs& (0+255),b
 32854                           
 32855                           ; BSR set to: 0
 32856  00C76C  517C               	movf	___flmul@a& (0+255),w,b
 32857  00C76E  0379               	mulwf	(___flmul@b+1)& (0+255),b
 32858  00C770  CFF3 F08F          	movff	prodl,___flmul@temp
 32859  00C774  CFF4 F090          	movff	prodh,___flmul@temp+1
 32860                           
 32861                           ; BSR set to: 0
 32862  00C778  518F               	movf	___flmul@temp& (0+255),w,b
 32863  00C77A  2785               	addwf	___flmul@grs& (0+255),f,b
 32864  00C77C  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32865  00C77E  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 32866  00C780  0E00               	movlw	0
 32867  00C782  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 32868  00C784  0E00               	movlw	0
 32869  00C786  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 32870                           
 32871                           ; BSR set to: 0
 32872  00C788  517D               	movf	(___flmul@a+1)& (0+255),w,b
 32873  00C78A  0378               	mulwf	___flmul@b& (0+255),b
 32874  00C78C  CFF3 F08F          	movff	prodl,___flmul@temp
 32875  00C790  CFF4 F090          	movff	prodh,___flmul@temp+1
 32876                           
 32877                           ; BSR set to: 0
 32878  00C794  518F               	movf	___flmul@temp& (0+255),w,b
 32879  00C796  2785               	addwf	___flmul@grs& (0+255),f,b
 32880  00C798  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32881  00C79A  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 32882  00C79C  0E00               	movlw	0
 32883  00C79E  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 32884  00C7A0  0E00               	movlw	0
 32885  00C7A2  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 32886                           
 32887                           ; BSR set to: 0
 32888  00C7A4  C087  F088         	movff	___flmul@grs+2,___flmul@grs+3
 32889  00C7A8  C086  F087         	movff	___flmul@grs+1,___flmul@grs+2
 32890  00C7AC  C085  F086         	movff	___flmul@grs,___flmul@grs+1
 32891  00C7B0  6B85               	clrf	___flmul@grs& (0+255),b
 32892  00C7B2  517C               	movf	___flmul@a& (0+255),w,b
 32893  00C7B4  0378               	mulwf	___flmul@b& (0+255),b
 32894  00C7B6  CFF3 F08F          	movff	prodl,___flmul@temp
 32895  00C7BA  CFF4 F090          	movff	prodh,___flmul@temp+1
 32896                           
 32897                           ; BSR set to: 0
 32898  00C7BE  518F               	movf	___flmul@temp& (0+255),w,b
 32899  00C7C0  2785               	addwf	___flmul@grs& (0+255),f,b
 32900  00C7C2  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32901  00C7C4  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 32902  00C7C6  0E00               	movlw	0
 32903  00C7C8  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 32904  00C7CA  0E00               	movlw	0
 32905  00C7CC  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 32906                           
 32907                           ; BSR set to: 0
 32908  00C7CE  517E               	movf	(___flmul@a+2)& (0+255),w,b
 32909  00C7D0  0379               	mulwf	(___flmul@b+1)& (0+255),b
 32910  00C7D2  CFF3 F08F          	movff	prodl,___flmul@temp
 32911  00C7D6  CFF4 F090          	movff	prodh,___flmul@temp+1
 32912  00C7DA  518F               	movf	___flmul@temp& (0+255),w,b
 32913  00C7DC  278B               	addwf	___flmul@prod& (0+255),f,b
 32914  00C7DE  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32915  00C7E0  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32916  00C7E2  0E00               	movlw	0
 32917  00C7E4  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32918  00C7E6  0E00               	movlw	0
 32919  00C7E8  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32920                           
 32921                           ; BSR set to: 0
 32922  00C7EA  517D               	movf	(___flmul@a+1)& (0+255),w,b
 32923  00C7EC  037A               	mulwf	(___flmul@b+2)& (0+255),b
 32924  00C7EE  CFF3 F08F          	movff	prodl,___flmul@temp
 32925  00C7F2  CFF4 F090          	movff	prodh,___flmul@temp+1
 32926                           
 32927                           ; BSR set to: 0
 32928  00C7F6  518F               	movf	___flmul@temp& (0+255),w,b
 32929  00C7F8  278B               	addwf	___flmul@prod& (0+255),f,b
 32930  00C7FA  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32931  00C7FC  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32932  00C7FE  0E00               	movlw	0
 32933  00C800  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32934  00C802  0E00               	movlw	0
 32935  00C804  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32936  00C806  517E               	movf	(___flmul@a+2)& (0+255),w,b
 32937  00C808  037A               	mulwf	(___flmul@b+2)& (0+255),b
 32938  00C80A  CFF3 F08F          	movff	prodl,___flmul@temp
 32939  00C80E  CFF4 F090          	movff	prodh,___flmul@temp+1
 32940                           
 32941                           ; BSR set to: 0
 32942  00C812  518F               	movf	___flmul@temp& (0+255),w,b
 32943  00C814  6F80               	movwf	??___flmul& (0+255),b
 32944  00C816  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32945  00C818  6F81               	movwf	(??___flmul+1)& (0+255),b
 32946  00C81A  6B82               	clrf	(??___flmul+2)& (0+255),b
 32947  00C81C  6B83               	clrf	(??___flmul+3)& (0+255),b
 32948  00C81E  C082  F083         	movff	??___flmul+2,??___flmul+3
 32949  00C822  C081  F082         	movff	??___flmul+1,??___flmul+2
 32950  00C826  C080  F081         	movff	??___flmul,??___flmul+1
 32951  00C82A  6B80               	clrf	??___flmul& (0+255),b
 32952  00C82C  5180               	movf	??___flmul& (0+255),w,b
 32953  00C82E  278B               	addwf	___flmul@prod& (0+255),f,b
 32954  00C830  5181               	movf	(??___flmul+1)& (0+255),w,b
 32955  00C832  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32956  00C834  5182               	movf	(??___flmul+2)& (0+255),w,b
 32957  00C836  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32958  00C838  5183               	movf	(??___flmul+3)& (0+255),w,b
 32959  00C83A  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32960                           
 32961                           ; BSR set to: 0
 32962  00C83C  C085  F080         	movff	___flmul@grs,??___flmul
 32963  00C840  C086  F081         	movff	___flmul@grs+1,??___flmul+1
 32964  00C844  C087  F082         	movff	___flmul@grs+2,??___flmul+2
 32965  00C848  C088  F083         	movff	___flmul@grs+3,??___flmul+3
 32966  00C84C  0E19               	movlw	25
 32967  00C84E  D005               	goto	u13750
 32968  00C850                     u13755:
 32969  00C850  90D8               	bcf	status,0,c
 32970  00C852  3383               	rrcf	(??___flmul+3)& (0+255),f,b
 32971  00C854  3382               	rrcf	(??___flmul+2)& (0+255),f,b
 32972  00C856  3381               	rrcf	(??___flmul+1)& (0+255),f,b
 32973  00C858  3380               	rrcf	??___flmul& (0+255),f,b
 32974  00C85A                     u13750:
 32975  00C85A  2EE8               	decfsz	wreg,f,c
 32976  00C85C  D7F9               	goto	u13755
 32977  00C85E  5180               	movf	??___flmul& (0+255),w,b
 32978  00C860  278B               	addwf	___flmul@prod& (0+255),f,b
 32979  00C862  5181               	movf	(??___flmul+1)& (0+255),w,b
 32980  00C864  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32981  00C866  5182               	movf	(??___flmul+2)& (0+255),w,b
 32982  00C868  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32983  00C86A  5183               	movf	(??___flmul+3)& (0+255),w,b
 32984  00C86C  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32985                           
 32986                           ; BSR set to: 0
 32987  00C86E  C087  F088         	movff	___flmul@grs+2,___flmul@grs+3
 32988  00C872  C086  F087         	movff	___flmul@grs+1,___flmul@grs+2
 32989  00C876  C085  F086         	movff	___flmul@grs,___flmul@grs+1
 32990  00C87A  6B85               	clrf	___flmul@grs& (0+255),b
 32991                           
 32992                           ; BSR set to: 0
 32993  00C87C  5189               	movf	___flmul@aexp& (0+255),w,b
 32994  00C87E  C08A  F080         	movff	___flmul@bexp,??___flmul
 32995  00C882  6B81               	clrf	(??___flmul+1)& (0+255),b
 32996  00C884  2780               	addwf	??___flmul& (0+255),f,b
 32997  00C886  0E00               	movlw	0
 32998  00C888  2381               	addwfc	(??___flmul+1)& (0+255),f,b
 32999  00C88A  0E82               	movlw	130
 33000  00C88C  2580               	addwf	??___flmul& (0+255),w,b
 33001  00C88E  6F8F               	movwf	___flmul@temp& (0+255),b
 33002  00C890  0EFF               	movlw	255
 33003  00C892  2181               	addwfc	(??___flmul+1)& (0+255),w,b
 33004  00C894  6F90               	movwf	(___flmul@temp+1)& (0+255),b
 33005  00C896  D00F               	goto	l3780
 33006  00C898                     
 33007                           ; BSR set to: 0
 33008                           
 33009                           ; BSR set to: 0
 33010  00C898  90D8               	bcf	status,0,c
 33011  00C89A  378B               	rlcf	___flmul@prod& (0+255),f,b
 33012  00C89C  378C               	rlcf	(___flmul@prod+1)& (0+255),f,b
 33013  00C89E  378D               	rlcf	(___flmul@prod+2)& (0+255),f,b
 33014  00C8A0  378E               	rlcf	(___flmul@prod+3)& (0+255),f,b
 33015                           
 33016                           ; BSR set to: 0
 33017  00C8A2  BF88               	btfsc	(___flmul@grs+3)& (0+255),7,b
 33018                           
 33019                           ; BSR set to: 0
 33020  00C8A4  818B               	bsf	___flmul@prod& (0+255),0,b
 33021                           
 33022                           ; BSR set to: 0
 33023  00C8A6  90D8               	bcf	status,0,c
 33024  00C8A8  3785               	rlcf	___flmul@grs& (0+255),f,b
 33025  00C8AA  3786               	rlcf	(___flmul@grs+1)& (0+255),f,b
 33026  00C8AC  3787               	rlcf	(___flmul@grs+2)& (0+255),f,b
 33027  00C8AE  3788               	rlcf	(___flmul@grs+3)& (0+255),f,b
 33028  00C8B0  078F               	decf	___flmul@temp& (0+255),f,b
 33029  00C8B2  A0D8               	btfss	status,0,c
 33030  00C8B4  0790               	decf	(___flmul@temp+1)& (0+255),f,b
 33031  00C8B6                     l3780:
 33032                           
 33033                           ; BSR set to: 0
 33034                           
 33035                           ; BSR set to: 0
 33036  00C8B6  AF8D               	btfss	(___flmul@prod+2)& (0+255),7,b
 33037  00C8B8  D7EF               	goto	l3781
 33038                           
 33039                           ; BSR set to: 0
 33040                           
 33041                           ; BSR set to: 0
 33042  00C8BA  0E00               	movlw	0
 33043  00C8BC  6F89               	movwf	___flmul@aexp& (0+255),b
 33044                           
 33045                           ; BSR set to: 0
 33046  00C8BE  AF88               	btfss	(___flmul@grs+3)& (0+255),7,b
 33047  00C8C0  D016               	goto	l3787
 33048                           
 33049                           ; BSR set to: 0
 33050  00C8C2  0EFF               	movlw	255
 33051  00C8C4  1585               	andwf	___flmul@grs& (0+255),w,b
 33052  00C8C6  6F80               	movwf	??___flmul& (0+255),b
 33053  00C8C8  0EFF               	movlw	255
 33054  00C8CA  1586               	andwf	(___flmul@grs+1)& (0+255),w,b
 33055  00C8CC  6F81               	movwf	(??___flmul+1)& (0+255),b
 33056  00C8CE  0EFF               	movlw	255
 33057  00C8D0  1587               	andwf	(___flmul@grs+2)& (0+255),w,b
 33058  00C8D2  6F82               	movwf	(??___flmul+2)& (0+255),b
 33059  00C8D4  0E7F               	movlw	127
 33060  00C8D6  1588               	andwf	(___flmul@grs+3)& (0+255),w,b
 33061  00C8D8  6F83               	movwf	(??___flmul+3)& (0+255),b
 33062  00C8DA  5180               	movf	??___flmul& (0+255),w,b
 33063  00C8DC  1181               	iorwf	(??___flmul+1)& (0+255),w,b
 33064  00C8DE  1182               	iorwf	(??___flmul+2)& (0+255),w,b
 33065  00C8E0  1183               	iorwf	(??___flmul+3)& (0+255),w,b
 33066  00C8E2  A4D8               	btfss	status,2,c
 33067  00C8E4  D002               	goto	u13800
 33068                           
 33069                           ; BSR set to: 0
 33070                           
 33071                           ; BSR set to: 0
 33072  00C8E6  A18B               	btfss	___flmul@prod& (0+255),0,b
 33073  00C8E8  D002               	goto	l3787
 33074  00C8EA                     u13800:
 33075                           
 33076                           ; BSR set to: 0
 33077  00C8EA  0E01               	movlw	1
 33078  00C8EC  6F89               	movwf	___flmul@aexp& (0+255),b
 33079  00C8EE                     l3787:
 33080                           
 33081                           ; BSR set to: 0
 33082                           
 33083                           ; BSR set to: 0
 33084                           
 33085                           ; BSR set to: 0
 33086  00C8EE  5189               	movf	___flmul@aexp& (0+255),w,b
 33087  00C8F0  B4D8               	btfsc	status,2,c
 33088  00C8F2  D01F               	goto	l3789
 33089                           
 33090                           ; BSR set to: 0
 33091  00C8F4  0E01               	movlw	1
 33092  00C8F6  278B               	addwf	___flmul@prod& (0+255),f,b
 33093  00C8F8  0E00               	movlw	0
 33094  00C8FA  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 33095  00C8FC  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 33096  00C8FE  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 33097                           
 33098                           ; BSR set to: 0
 33099  00C900  A18E               	btfss	(___flmul@prod+3)& (0+255),0,b
 33100  00C902  D017               	goto	l3789
 33101                           
 33102                           ; BSR set to: 0
 33103  00C904  C08B  F080         	movff	___flmul@prod,??___flmul
 33104  00C908  C08C  F081         	movff	___flmul@prod+1,??___flmul+1
 33105  00C90C  C08D  F082         	movff	___flmul@prod+2,??___flmul+2
 33106  00C910  C08E  F083         	movff	___flmul@prod+3,??___flmul+3
 33107  00C914  3583               	rlcf	(??___flmul+3)& (0+255),w,b
 33108  00C916  3383               	rrcf	(??___flmul+3)& (0+255),f,b
 33109  00C918  3382               	rrcf	(??___flmul+2)& (0+255),f,b
 33110  00C91A  3381               	rrcf	(??___flmul+1)& (0+255),f,b
 33111  00C91C  3380               	rrcf	??___flmul& (0+255),f,b
 33112  00C91E  C080  F08B         	movff	??___flmul,___flmul@prod
 33113  00C922  C081  F08C         	movff	??___flmul+1,___flmul@prod+1
 33114  00C926  C082  F08D         	movff	??___flmul+2,___flmul@prod+2
 33115  00C92A  C083  F08E         	movff	??___flmul+3,___flmul@prod+3
 33116                           
 33117                           ; BSR set to: 0
 33118  00C92E  4B8F               	infsnz	___flmul@temp& (0+255),f,b
 33119  00C930  2B90               	incf	(___flmul@temp+1)& (0+255),f,b
 33120  00C932                     l3789:
 33121                           
 33122                           ; BSR set to: 0
 33123                           
 33124                           ; BSR set to: 0
 33125                           
 33126                           ; BSR set to: 0
 33127  00C932  BF90               	btfsc	(___flmul@temp+1)& (0+255),7,b
 33128  00C934  D00D               	goto	l3790
 33129  00C936  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 33130  00C938  E103               	bnz	u13830
 33131  00C93A  298F               	incf	___flmul@temp& (0+255),w,b
 33132  00C93C  A0D8               	btfss	status,0,c
 33133  00C93E  D008               	goto	l3790
 33134  00C940                     u13830:
 33135                           
 33136                           ; BSR set to: 0
 33137  00C940  0E00               	movlw	0
 33138  00C942  6F8B               	movwf	___flmul@prod& (0+255),b
 33139  00C944  0E00               	movlw	0
 33140  00C946  6F8C               	movwf	(___flmul@prod+1)& (0+255),b
 33141  00C948  0E80               	movlw	128
 33142  00C94A  6F8D               	movwf	(___flmul@prod+2)& (0+255),b
 33143  00C94C  0E7F               	movlw	127
 33144  00C94E  D020               	goto	L28
 33145  00C950                     l3790:
 33146                           
 33147                           ; BSR set to: 0
 33148                           
 33149                           ; BSR set to: 0
 33150  00C950  BF90               	btfsc	(___flmul@temp+1)& (0+255),7,b
 33151  00C952  D005               	goto	u13840
 33152  00C954  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 33153  00C956  E10E               	bnz	l3792
 33154  00C958  058F               	decf	___flmul@temp& (0+255),w,b
 33155  00C95A  B0D8               	btfsc	status,0,c
 33156  00C95C  D00B               	goto	l3792
 33157  00C95E                     u13840:
 33158                           
 33159                           ; BSR set to: 0
 33160  00C95E  0E00               	movlw	0
 33161  00C960  6F8B               	movwf	___flmul@prod& (0+255),b
 33162  00C962  0E00               	movlw	0
 33163  00C964  6F8C               	movwf	(___flmul@prod+1)& (0+255),b
 33164  00C966  0E00               	movlw	0
 33165  00C968  6F8D               	movwf	(___flmul@prod+2)& (0+255),b
 33166  00C96A  0E00               	movlw	0
 33167  00C96C  6F8E               	movwf	(___flmul@prod+3)& (0+255),b
 33168  00C96E  0E00               	movlw	0
 33169  00C970  6F84               	movwf	___flmul@sign& (0+255),b
 33170  00C972  D00F               	goto	l3793
 33171  00C974                     l3792:
 33172                           
 33173                           ; BSR set to: 0
 33174  00C974  C08F  F08A         	movff	___flmul@temp,___flmul@bexp
 33175                           
 33176                           ; BSR set to: 0
 33177  00C978  0EFF               	movlw	255
 33178  00C97A  178B               	andwf	___flmul@prod& (0+255),f,b
 33179  00C97C  0EFF               	movlw	255
 33180  00C97E  178C               	andwf	(___flmul@prod+1)& (0+255),f,b
 33181  00C980  0E7F               	movlw	127
 33182  00C982  178D               	andwf	(___flmul@prod+2)& (0+255),f,b
 33183  00C984  0E00               	movlw	0
 33184  00C986  178E               	andwf	(___flmul@prod+3)& (0+255),f,b
 33185                           
 33186                           ; BSR set to: 0
 33187  00C988  B18A               	btfsc	___flmul@bexp& (0+255),0,b
 33188                           
 33189                           ; BSR set to: 0
 33190  00C98A  8F8D               	bsf	(___flmul@prod+2)& (0+255),7,b
 33191                           
 33192                           ; BSR set to: 0
 33193                           
 33194                           ; BSR set to: 0
 33195  00C98C  90D8               	bcf	status,0,c
 33196  00C98E  318A               	rrcf	___flmul@bexp& (0+255),w,b
 33197  00C990                     L28:
 33198  00C990  6F8E               	movwf	(___flmul@prod+3)& (0+255),b
 33199  00C992                     l3793:
 33200                           
 33201                           ; BSR set to: 0
 33202                           
 33203                           ; BSR set to: 0
 33204                           
 33205                           ; BSR set to: 0
 33206  00C992  5184               	movf	___flmul@sign& (0+255),w,b
 33207  00C994  138E               	iorwf	(___flmul@prod+3)& (0+255),f,b
 33208                           
 33209                           ; BSR set to: 0
 33210  00C996  C08B  F078         	movff	___flmul@prod,?___flmul
 33211  00C99A  C08C  F079         	movff	___flmul@prod+1,?___flmul+1
 33212  00C99E  C08D  F07A         	movff	___flmul@prod+2,?___flmul+2
 33213  00C9A2  C08E  F07B         	movff	___flmul@prod+3,?___flmul+3
 33214  00C9A6  0012               	return	
 33215  00C9A8                     __end_of___flmul:
 33216                           	opt stack 0
 33217                           tblptru	equ	0xFF8
 33218                           tblptrh	equ	0xFF7
 33219                           tblptrl	equ	0xFF6
 33220                           tablat	equ	0xFF5
 33221                           prodh	equ	0xFF4
 33222                           prodl	equ	0xFF3
 33223                           intcon	equ	0xFF2
 33224                           postinc0	equ	0xFEE
 33225                           wreg	equ	0xFE8
 33226                           indf1	equ	0xFE7
 33227                           postinc1	equ	0xFE6
 33228                           postdec1	equ	0xFE5
 33229                           plusw1	equ	0xFE3
 33230                           fsr1h	equ	0xFE2
 33231                           fsr1l	equ	0xFE1
 33232                           indf2	equ	0xFDF
 33233                           postinc2	equ	0xFDE
 33234                           postdec2	equ	0xFDD
 33235                           plusw2	equ	0xFDB
 33236                           fsr2h	equ	0xFDA
 33237                           fsr2l	equ	0xFD9
 33238                           status	equ	0xFD8
 33239                           
 33240 ;; *************** function ___fladd *****************
 33241 ;; Defined at:
 33242 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
 33243 ;; Parameters:    Size  Location     Type
 33244 ;;  b               4   28[BANK0 ] unsigned char 
 33245 ;;  a               4   32[BANK0 ] unsigned char 
 33246 ;; Auto vars:     Size  Location     Type
 33247 ;;  grs             1   47[BANK0 ] unsigned char 
 33248 ;;  bexp            1   46[BANK0 ] unsigned char 
 33249 ;;  aexp            1   45[BANK0 ] unsigned char 
 33250 ;;  signs           1   44[BANK0 ] unsigned char 
 33251 ;; Return value:  Size  Location     Type
 33252 ;;                  4   28[BANK0 ] unsigned char 
 33253 ;; Registers used:
 33254 ;;		wreg, status,2, status,0
 33255 ;; Tracked objects:
 33256 ;;		On entry : 0/0
 33257 ;;		On exit  : 0/0
 33258 ;;		Unchanged: 0/0
 33259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33260 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33261 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33262 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33263 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33264 ;;Total ram usage:       20 bytes
 33265 ;; Hardware stack levels used:    1
 33266 ;; Hardware stack levels required when called:   10
 33267 ;; This function calls:
 33268 ;;		Nothing
 33269 ;; This function is called by:
 33270 ;;		__motor_steps_from_degrees_int
 33271 ;;		_motor_divide_jump_to_nearest
 33272 ;;		_adc_read_temperature
 33273 ;;		__motor_steps_from_degrees_float
 33274 ;; This function uses a non-reentrant model
 33275 ;;
 33276                           
 33277                           	psect	text127
 33278  00C9A8                     __ptext127:
 33279                           	opt stack 0
 33280  00C9A8                     ___fladd:
 33281                           	opt stack 16
 33282                           
 33283                           ; BSR set to: 0
 33284                           ;incstack = 0
 33285  00C9A8  0100               	movlb	0	; () banked
 33286  00C9AA  517F               	movf	(___fladd@b+3)& (0+255),w,b
 33287  00C9AC  0B80               	andlw	128
 33288  00C9AE  6F8C               	movwf	___fladd@signs& (0+255),b
 33289  00C9B0  517F               	movf	(___fladd@b+3)& (0+255),w,b
 33290  00C9B2  257F               	addwf	(___fladd@b+3)& (0+255),w,b
 33291  00C9B4  6F8E               	movwf	___fladd@bexp& (0+255),b
 33292                           
 33293                           ; BSR set to: 0
 33294  00C9B6  BF7E               	btfsc	(___fladd@b+2)& (0+255),7,b
 33295                           
 33296                           ; BSR set to: 0
 33297  00C9B8  818E               	bsf	___fladd@bexp& (0+255),0,b
 33298                           
 33299                           ; BSR set to: 0
 33300                           
 33301                           ; BSR set to: 0
 33302  00C9BA  518E               	movf	___fladd@bexp& (0+255),w,b
 33303  00C9BC  B4D8               	btfsc	status,2,c
 33304  00C9BE  D00D               	goto	l3678
 33305                           
 33306                           ; BSR set to: 0
 33307  00C9C0  298E               	incf	___fladd@bexp& (0+255),w,b
 33308  00C9C2  A4D8               	btfss	status,2,c
 33309  00C9C4  D008               	goto	l3679
 33310                           
 33311                           ; BSR set to: 0
 33312  00C9C6  0E00               	movlw	0
 33313  00C9C8  6F7C               	movwf	___fladd@b& (0+255),b
 33314  00C9CA  0E00               	movlw	0
 33315  00C9CC  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 33316  00C9CE  0E00               	movlw	0
 33317  00C9D0  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 33318  00C9D2  0E00               	movlw	0
 33319  00C9D4  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 33320  00C9D6                     l3679:
 33321                           
 33322                           ; BSR set to: 0
 33323                           
 33324                           ; BSR set to: 0
 33325  00C9D6  8F7E               	bsf	(___fladd@b+2)& (0+255),7,b
 33326  00C9D8  D006               	goto	L29
 33327  00C9DA                     l3678:
 33328                           
 33329                           ; BSR set to: 0
 33330                           
 33331                           ; BSR set to: 0
 33332  00C9DA  0E00               	movlw	0
 33333  00C9DC  6F7C               	movwf	___fladd@b& (0+255),b
 33334  00C9DE  0E00               	movlw	0
 33335  00C9E0  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 33336  00C9E2  0E00               	movlw	0
 33337  00C9E4  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 33338  00C9E6                     L29:
 33339  00C9E6  0E00               	movlw	0
 33340  00C9E8  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 33341                           
 33342                           ; BSR set to: 0
 33343                           
 33344                           ; BSR set to: 0
 33345  00C9EA  5183               	movf	(___fladd@a+3)& (0+255),w,b
 33346  00C9EC  0B80               	andlw	128
 33347  00C9EE  6F8D               	movwf	___fladd@aexp& (0+255),b
 33348                           
 33349                           ; BSR set to: 0
 33350  00C9F0  518C               	movf	___fladd@signs& (0+255),w,b
 33351  00C9F2  198D               	xorwf	___fladd@aexp& (0+255),w,b
 33352  00C9F4  A4D8               	btfss	status,2,c
 33353                           
 33354                           ; BSR set to: 0
 33355  00C9F6  8D8C               	bsf	___fladd@signs& (0+255),6,b
 33356                           
 33357                           ; BSR set to: 0
 33358                           
 33359                           ; BSR set to: 0
 33360  00C9F8  5183               	movf	(___fladd@a+3)& (0+255),w,b
 33361  00C9FA  2583               	addwf	(___fladd@a+3)& (0+255),w,b
 33362  00C9FC  6F8D               	movwf	___fladd@aexp& (0+255),b
 33363                           
 33364                           ; BSR set to: 0
 33365  00C9FE  BF82               	btfsc	(___fladd@a+2)& (0+255),7,b
 33366                           
 33367                           ; BSR set to: 0
 33368  00CA00  818D               	bsf	___fladd@aexp& (0+255),0,b
 33369                           
 33370                           ; BSR set to: 0
 33371                           
 33372                           ; BSR set to: 0
 33373  00CA02  518D               	movf	___fladd@aexp& (0+255),w,b
 33374  00CA04  B4D8               	btfsc	status,2,c
 33375  00CA06  D00D               	goto	l3683
 33376                           
 33377                           ; BSR set to: 0
 33378  00CA08  298D               	incf	___fladd@aexp& (0+255),w,b
 33379  00CA0A  A4D8               	btfss	status,2,c
 33380  00CA0C  D008               	goto	l3684
 33381                           
 33382                           ; BSR set to: 0
 33383  00CA0E  0E00               	movlw	0
 33384  00CA10  6F80               	movwf	___fladd@a& (0+255),b
 33385  00CA12  0E00               	movlw	0
 33386  00CA14  6F81               	movwf	(___fladd@a+1)& (0+255),b
 33387  00CA16  0E00               	movlw	0
 33388  00CA18  6F82               	movwf	(___fladd@a+2)& (0+255),b
 33389  00CA1A  0E00               	movlw	0
 33390  00CA1C  6F83               	movwf	(___fladd@a+3)& (0+255),b
 33391  00CA1E                     l3684:
 33392                           
 33393                           ; BSR set to: 0
 33394                           
 33395                           ; BSR set to: 0
 33396  00CA1E  8F82               	bsf	(___fladd@a+2)& (0+255),7,b
 33397  00CA20  D006               	goto	L30
 33398  00CA22                     l3683:
 33399                           
 33400                           ; BSR set to: 0
 33401                           
 33402                           ; BSR set to: 0
 33403  00CA22  0E00               	movlw	0
 33404  00CA24  6F80               	movwf	___fladd@a& (0+255),b
 33405  00CA26  0E00               	movlw	0
 33406  00CA28  6F81               	movwf	(___fladd@a+1)& (0+255),b
 33407  00CA2A  0E00               	movlw	0
 33408  00CA2C  6F82               	movwf	(___fladd@a+2)& (0+255),b
 33409  00CA2E                     L30:
 33410  00CA2E  0E00               	movlw	0
 33411  00CA30  6F83               	movwf	(___fladd@a+3)& (0+255),b
 33412                           
 33413                           ; BSR set to: 0
 33414                           
 33415                           ; BSR set to: 0
 33416  00CA32  518E               	movf	___fladd@bexp& (0+255),w,b
 33417  00CA34  5D8D               	subwf	___fladd@aexp& (0+255),w,b
 33418  00CA36  B0D8               	btfsc	status,0,c
 33419  00CA38  D022               	goto	l3686
 33420                           
 33421                           ; BSR set to: 0
 33422  00CA3A  AD8C               	btfss	___fladd@signs& (0+255),6,b
 33423  00CA3C  D002               	goto	l3687
 33424                           
 33425                           ; BSR set to: 0
 33426  00CA3E  0E80               	movlw	128
 33427  00CA40  1B8C               	xorwf	___fladd@signs& (0+255),f,b
 33428  00CA42                     l3687:
 33429                           
 33430                           ; BSR set to: 0
 33431                           
 33432                           ; BSR set to: 0
 33433  00CA42  C08E  F08F         	movff	___fladd@bexp,___fladd@grs
 33434                           
 33435                           ; BSR set to: 0
 33436  00CA46  C08D  F08E         	movff	___fladd@aexp,___fladd@bexp
 33437                           
 33438                           ; BSR set to: 0
 33439  00CA4A  C08F  F08D         	movff	___fladd@grs,___fladd@aexp
 33440                           
 33441                           ; BSR set to: 0
 33442  00CA4E  C07C  F08F         	movff	___fladd@b,___fladd@grs
 33443                           
 33444                           ; BSR set to: 0
 33445  00CA52  C080  F07C         	movff	___fladd@a,___fladd@b
 33446                           
 33447                           ; BSR set to: 0
 33448  00CA56  C08F  F080         	movff	___fladd@grs,___fladd@a
 33449                           
 33450                           ; BSR set to: 0
 33451  00CA5A  C07D  F08F         	movff	___fladd@b+1,___fladd@grs
 33452                           
 33453                           ; BSR set to: 0
 33454  00CA5E  C081  F07D         	movff	___fladd@a+1,___fladd@b+1
 33455                           
 33456                           ; BSR set to: 0
 33457  00CA62  C08F  F081         	movff	___fladd@grs,___fladd@a+1
 33458                           
 33459                           ; BSR set to: 0
 33460  00CA66  C07E  F08F         	movff	___fladd@b+2,___fladd@grs
 33461                           
 33462                           ; BSR set to: 0
 33463  00CA6A  C082  F07E         	movff	___fladd@a+2,___fladd@b+2
 33464                           
 33465                           ; BSR set to: 0
 33466  00CA6E  C08F  F082         	movff	___fladd@grs,___fladd@a+2
 33467                           
 33468                           ; BSR set to: 0
 33469  00CA72  C07F  F08F         	movff	___fladd@b+3,___fladd@grs
 33470                           
 33471                           ; BSR set to: 0
 33472  00CA76  C083  F07F         	movff	___fladd@a+3,___fladd@b+3
 33473                           
 33474                           ; BSR set to: 0
 33475  00CA7A  C08F  F083         	movff	___fladd@grs,___fladd@a+3
 33476  00CA7E                     l3686:
 33477                           
 33478                           ; BSR set to: 0
 33479                           
 33480                           ; BSR set to: 0
 33481  00CA7E  0E00               	movlw	0
 33482  00CA80  6F8F               	movwf	___fladd@grs& (0+255),b
 33483                           
 33484                           ; BSR set to: 0
 33485  00CA82  518E               	movf	___fladd@bexp& (0+255),w,b
 33486  00CA84  6F84               	movwf	??___fladd& (0+255),b
 33487  00CA86  6B85               	clrf	(??___fladd+1)& (0+255),b
 33488  00CA88  1F84               	comf	??___fladd& (0+255),f,b
 33489  00CA8A  1F85               	comf	(??___fladd+1)& (0+255),f,b
 33490  00CA8C  4B84               	infsnz	??___fladd& (0+255),f,b
 33491  00CA8E  2B85               	incf	(??___fladd+1)& (0+255),f,b
 33492  00CA90  518D               	movf	___fladd@aexp& (0+255),w,b
 33493  00CA92  6F86               	movwf	(??___fladd+2)& (0+255),b
 33494  00CA94  6B87               	clrf	(??___fladd+3)& (0+255),b
 33495  00CA96  5184               	movf	??___fladd& (0+255),w,b
 33496  00CA98  2786               	addwf	(??___fladd+2)& (0+255),f,b
 33497  00CA9A  5185               	movf	(??___fladd+1)& (0+255),w,b
 33498  00CA9C  2387               	addwfc	(??___fladd+3)& (0+255),f,b
 33499  00CA9E  BF87               	btfsc	(??___fladd+3)& (0+255),7,b
 33500  00CAA0  D02C               	goto	l3690
 33501  00CAA2  5187               	movf	(??___fladd+3)& (0+255),w,b
 33502  00CAA4  E104               	bnz	u13140
 33503  00CAA6  0E1A               	movlw	26
 33504  00CAA8  5D86               	subwf	(??___fladd+2)& (0+255),w,b
 33505  00CAAA  A0D8               	btfss	status,0,c
 33506  00CAAC  D026               	goto	l3690
 33507  00CAAE                     u13140:
 33508                           
 33509                           ; BSR set to: 0
 33510  00CAAE  517C               	movf	___fladd@b& (0+255),w,b
 33511  00CAB0  117D               	iorwf	(___fladd@b+1)& (0+255),w,b
 33512  00CAB2  117E               	iorwf	(___fladd@b+2)& (0+255),w,b
 33513  00CAB4  117F               	iorwf	(___fladd@b+3)& (0+255),w,b
 33514  00CAB6  B4D8               	btfsc	status,2,c
 33515  00CAB8  D002               	goto	u13150
 33516  00CABA  0E01               	movlw	1
 33517  00CABC  D001               	goto	u13160
 33518  00CABE                     u13150:
 33519  00CABE  0E00               	movlw	0
 33520  00CAC0                     u13160:
 33521  00CAC0  6F8F               	movwf	___fladd@grs& (0+255),b
 33522                           
 33523                           ; BSR set to: 0
 33524  00CAC2  0E00               	movlw	0
 33525  00CAC4  6F7C               	movwf	___fladd@b& (0+255),b
 33526  00CAC6  0E00               	movlw	0
 33527  00CAC8  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 33528  00CACA  0E00               	movlw	0
 33529  00CACC  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 33530  00CACE  0E00               	movlw	0
 33531  00CAD0  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 33532                           
 33533                           ; BSR set to: 0
 33534  00CAD2  C08D  F08E         	movff	___fladd@aexp,___fladd@bexp
 33535  00CAD6  D015               	goto	u13190
 33536  00CAD8                     l3691:
 33537                           
 33538                           ; BSR set to: 0
 33539  00CAD8  A18F               	btfss	___fladd@grs& (0+255),0,b
 33540  00CADA  D005               	goto	l3692
 33541                           
 33542                           ; BSR set to: 0
 33543  00CADC  90D8               	bcf	status,0,c
 33544  00CADE  318F               	rrcf	___fladd@grs& (0+255),w,b
 33545  00CAE0  0901               	iorlw	1
 33546  00CAE2  6F8F               	movwf	___fladd@grs& (0+255),b
 33547  00CAE4  D002               	goto	l3693
 33548  00CAE6                     l3692:
 33549                           
 33550                           ; BSR set to: 0
 33551                           
 33552                           ; BSR set to: 0
 33553  00CAE6  90D8               	bcf	status,0,c
 33554  00CAE8  338F               	rrcf	___fladd@grs& (0+255),f,b
 33555  00CAEA                     l3693:
 33556                           
 33557                           ; BSR set to: 0
 33558                           
 33559                           ; BSR set to: 0
 33560  00CAEA  B17C               	btfsc	___fladd@b& (0+255),0,b
 33561                           
 33562                           ; BSR set to: 0
 33563  00CAEC  8F8F               	bsf	___fladd@grs& (0+255),7,b
 33564                           
 33565                           ; BSR set to: 0
 33566                           
 33567                           ; BSR set to: 0
 33568  00CAEE  357F               	rlcf	(___fladd@b+3)& (0+255),w,b
 33569  00CAF0  337F               	rrcf	(___fladd@b+3)& (0+255),f,b
 33570  00CAF2  337E               	rrcf	(___fladd@b+2)& (0+255),f,b
 33571  00CAF4  337D               	rrcf	(___fladd@b+1)& (0+255),f,b
 33572  00CAF6  337C               	rrcf	___fladd@b& (0+255),f,b
 33573                           
 33574                           ; BSR set to: 0
 33575  00CAF8  2B8E               	incf	___fladd@bexp& (0+255),f,b
 33576  00CAFA                     l3690:
 33577                           
 33578                           ; BSR set to: 0
 33579  00CAFA  518D               	movf	___fladd@aexp& (0+255),w,b
 33580  00CAFC  5D8E               	subwf	___fladd@bexp& (0+255),w,b
 33581  00CAFE  A0D8               	btfss	status,0,c
 33582  00CB00  D7EB               	goto	l3691
 33583  00CB02                     u13190:
 33584                           
 33585                           ; BSR set to: 0
 33586                           
 33587                           ; BSR set to: 0
 33588  00CB02  BD8C               	btfsc	___fladd@signs& (0+255),6,b
 33589  00CB04  D028               	goto	l3696
 33590                           
 33591                           ; BSR set to: 0
 33592  00CB06  518E               	movf	___fladd@bexp& (0+255),w,b
 33593  00CB08  A4D8               	btfss	status,2,c
 33594  00CB0A  D009               	goto	l3697
 33595                           
 33596                           ; BSR set to: 0
 33597  00CB0C  0E00               	movlw	0
 33598  00CB0E  6F7C               	movwf	?___fladd& (0+255),b
 33599  00CB10  0E00               	movlw	0
 33600  00CB12  6F7D               	movwf	(?___fladd+1)& (0+255),b
 33601  00CB14  0E00               	movlw	0
 33602  00CB16  6F7E               	movwf	(?___fladd+2)& (0+255),b
 33603  00CB18  0E00               	movlw	0
 33604  00CB1A  6F7F               	movwf	(?___fladd+3)& (0+255),b
 33605                           
 33606                           ; BSR set to: 0
 33607  00CB1C  0012               	return	
 33608  00CB1E                     l3697:
 33609                           
 33610                           ; BSR set to: 0
 33611                           
 33612                           ; BSR set to: 0
 33613  00CB1E  5180               	movf	___fladd@a& (0+255),w,b
 33614  00CB20  277C               	addwf	___fladd@b& (0+255),f,b
 33615  00CB22  5181               	movf	(___fladd@a+1)& (0+255),w,b
 33616  00CB24  237D               	addwfc	(___fladd@b+1)& (0+255),f,b
 33617  00CB26  5182               	movf	(___fladd@a+2)& (0+255),w,b
 33618  00CB28  237E               	addwfc	(___fladd@b+2)& (0+255),f,b
 33619  00CB2A  5183               	movf	(___fladd@a+3)& (0+255),w,b
 33620  00CB2C  237F               	addwfc	(___fladd@b+3)& (0+255),f,b
 33621                           
 33622                           ; BSR set to: 0
 33623  00CB2E  A17F               	btfss	(___fladd@b+3)& (0+255),0,b
 33624  00CB30  D082               	goto	u13320
 33625                           
 33626                           ; BSR set to: 0
 33627  00CB32  A18F               	btfss	___fladd@grs& (0+255),0,b
 33628  00CB34  D005               	goto	l3700
 33629                           
 33630                           ; BSR set to: 0
 33631  00CB36  90D8               	bcf	status,0,c
 33632  00CB38  318F               	rrcf	___fladd@grs& (0+255),w,b
 33633  00CB3A  0901               	iorlw	1
 33634  00CB3C  6F8F               	movwf	___fladd@grs& (0+255),b
 33635  00CB3E  D002               	goto	l3701
 33636  00CB40                     l3700:
 33637                           
 33638                           ; BSR set to: 0
 33639                           
 33640                           ; BSR set to: 0
 33641  00CB40  90D8               	bcf	status,0,c
 33642  00CB42  338F               	rrcf	___fladd@grs& (0+255),f,b
 33643  00CB44                     l3701:
 33644                           
 33645                           ; BSR set to: 0
 33646                           
 33647                           ; BSR set to: 0
 33648  00CB44  B17C               	btfsc	___fladd@b& (0+255),0,b
 33649                           
 33650                           ; BSR set to: 0
 33651  00CB46  8F8F               	bsf	___fladd@grs& (0+255),7,b
 33652                           
 33653                           ; BSR set to: 0
 33654                           
 33655                           ; BSR set to: 0
 33656  00CB48  357F               	rlcf	(___fladd@b+3)& (0+255),w,b
 33657  00CB4A  337F               	rrcf	(___fladd@b+3)& (0+255),f,b
 33658  00CB4C  337E               	rrcf	(___fladd@b+2)& (0+255),f,b
 33659  00CB4E  337D               	rrcf	(___fladd@b+1)& (0+255),f,b
 33660  00CB50  337C               	rrcf	___fladd@b& (0+255),f,b
 33661                           
 33662                           ; BSR set to: 0
 33663  00CB52  2B8E               	incf	___fladd@bexp& (0+255),f,b
 33664                           
 33665                           ; BSR set to: 0
 33666  00CB54  D070               	goto	u13320
 33667  00CB56                     l3696:
 33668                           
 33669                           ; BSR set to: 0
 33670                           
 33671                           ; BSR set to: 0
 33672  00CB56  5180               	movf	___fladd@a& (0+255),w,b
 33673  00CB58  5D7C               	subwf	___fladd@b& (0+255),w,b
 33674  00CB5A  5181               	movf	(___fladd@a+1)& (0+255),w,b
 33675  00CB5C  597D               	subwfb	(___fladd@b+1)& (0+255),w,b
 33676  00CB5E  5182               	movf	(___fladd@a+2)& (0+255),w,b
 33677  00CB60  597E               	subwfb	(___fladd@b+2)& (0+255),w,b
 33678  00CB62  517F               	movf	(___fladd@b+3)& (0+255),w,b
 33679  00CB64  0A80               	xorlw	128
 33680  00CB66  6F84               	movwf	??___fladd& (0+255),b
 33681  00CB68  5183               	movf	(___fladd@a+3)& (0+255),w,b
 33682  00CB6A  0A80               	xorlw	128
 33683  00CB6C  5984               	subwfb	??___fladd& (0+255),w,b
 33684  00CB6E  B0D8               	btfsc	status,0,c
 33685  00CB70  D036               	goto	l3704
 33686                           
 33687                           ; BSR set to: 0
 33688  00CB72  C07C  F084         	movff	___fladd@b,??___fladd
 33689  00CB76  C07D  F085         	movff	___fladd@b+1,??___fladd+1
 33690  00CB7A  C07E  F086         	movff	___fladd@b+2,??___fladd+2
 33691  00CB7E  C07F  F087         	movff	___fladd@b+3,??___fladd+3
 33692  00CB82  1F84               	comf	??___fladd& (0+255),f,b
 33693  00CB84  1F85               	comf	(??___fladd+1)& (0+255),f,b
 33694  00CB86  1F86               	comf	(??___fladd+2)& (0+255),f,b
 33695  00CB88  1F87               	comf	(??___fladd+3)& (0+255),f,b
 33696  00CB8A  2B84               	incf	??___fladd& (0+255),f,b
 33697  00CB8C  0E00               	movlw	0
 33698  00CB8E  2385               	addwfc	(??___fladd+1)& (0+255),f,b
 33699  00CB90  2386               	addwfc	(??___fladd+2)& (0+255),f,b
 33700  00CB92  2387               	addwfc	(??___fladd+3)& (0+255),f,b
 33701  00CB94  5180               	movf	___fladd@a& (0+255),w,b
 33702  00CB96  2584               	addwf	??___fladd& (0+255),w,b
 33703  00CB98  6F88               	movwf	(??___fladd+4)& (0+255),b
 33704  00CB9A  5181               	movf	(___fladd@a+1)& (0+255),w,b
 33705  00CB9C  2185               	addwfc	(??___fladd+1)& (0+255),w,b
 33706  00CB9E  6F89               	movwf	(??___fladd+5)& (0+255),b
 33707  00CBA0  5182               	movf	(___fladd@a+2)& (0+255),w,b
 33708  00CBA2  2186               	addwfc	(??___fladd+2)& (0+255),w,b
 33709  00CBA4  6F8A               	movwf	(??___fladd+6)& (0+255),b
 33710  00CBA6  5183               	movf	(___fladd@a+3)& (0+255),w,b
 33711  00CBA8  2187               	addwfc	(??___fladd+3)& (0+255),w,b
 33712  00CBAA  6F8B               	movwf	(??___fladd+7)& (0+255),b
 33713  00CBAC  0EFF               	movlw	255
 33714  00CBAE  2588               	addwf	(??___fladd+4)& (0+255),w,b
 33715  00CBB0  6F7C               	movwf	___fladd@b& (0+255),b
 33716  00CBB2  0EFF               	movlw	255
 33717  00CBB4  2189               	addwfc	(??___fladd+5)& (0+255),w,b
 33718  00CBB6  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 33719  00CBB8  0EFF               	movlw	255
 33720  00CBBA  218A               	addwfc	(??___fladd+6)& (0+255),w,b
 33721  00CBBC  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 33722  00CBBE  0EFF               	movlw	255
 33723  00CBC0  218B               	addwfc	(??___fladd+7)& (0+255),w,b
 33724  00CBC2  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 33725  00CBC4  0E80               	movlw	128
 33726  00CBC6  1B8C               	xorwf	___fladd@signs& (0+255),f,b
 33727                           
 33728                           ; BSR set to: 0
 33729  00CBC8  6D8F               	negf	___fladd@grs& (0+255),b
 33730                           
 33731                           ; BSR set to: 0
 33732  00CBCA  518F               	movf	___fladd@grs& (0+255),w,b
 33733  00CBCC  A4D8               	btfss	status,2,c
 33734  00CBCE  D00F               	goto	l3706
 33735                           
 33736                           ; BSR set to: 0
 33737  00CBD0  0E01               	movlw	1
 33738  00CBD2  277C               	addwf	___fladd@b& (0+255),f,b
 33739  00CBD4  0E00               	movlw	0
 33740  00CBD6  237D               	addwfc	(___fladd@b+1)& (0+255),f,b
 33741  00CBD8  237E               	addwfc	(___fladd@b+2)& (0+255),f,b
 33742  00CBDA  237F               	addwfc	(___fladd@b+3)& (0+255),f,b
 33743                           
 33744                           ; BSR set to: 0
 33745  00CBDC  D008               	goto	l3706
 33746  00CBDE                     l3704:
 33747                           
 33748                           ; BSR set to: 0
 33749                           
 33750                           ; BSR set to: 0
 33751  00CBDE  5180               	movf	___fladd@a& (0+255),w,b
 33752  00CBE0  5F7C               	subwf	___fladd@b& (0+255),f,b
 33753  00CBE2  5181               	movf	(___fladd@a+1)& (0+255),w,b
 33754  00CBE4  5B7D               	subwfb	(___fladd@b+1)& (0+255),f,b
 33755  00CBE6  5182               	movf	(___fladd@a+2)& (0+255),w,b
 33756  00CBE8  5B7E               	subwfb	(___fladd@b+2)& (0+255),f,b
 33757  00CBEA  5183               	movf	(___fladd@a+3)& (0+255),w,b
 33758  00CBEC  5B7F               	subwfb	(___fladd@b+3)& (0+255),f,b
 33759  00CBEE                     l3706:
 33760                           
 33761                           ; BSR set to: 0
 33762  00CBEE  517C               	movf	___fladd@b& (0+255),w,b
 33763  00CBF0  117D               	iorwf	(___fladd@b+1)& (0+255),w,b
 33764  00CBF2  117E               	iorwf	(___fladd@b+2)& (0+255),w,b
 33765  00CBF4  117F               	iorwf	(___fladd@b+3)& (0+255),w,b
 33766  00CBF6  A4D8               	btfss	status,2,c
 33767  00CBF8  D01C               	goto	l3713
 33768                           
 33769                           ; BSR set to: 0
 33770  00CBFA  518F               	movf	___fladd@grs& (0+255),w,b
 33771  00CBFC  A4D8               	btfss	status,2,c
 33772  00CBFE  D019               	goto	l3713
 33773                           
 33774                           ; BSR set to: 0
 33775  00CC00  0E00               	movlw	0
 33776  00CC02  6F7C               	movwf	?___fladd& (0+255),b
 33777  00CC04  0E00               	movlw	0
 33778  00CC06  6F7D               	movwf	(?___fladd+1)& (0+255),b
 33779  00CC08  0E00               	movlw	0
 33780  00CC0A  6F7E               	movwf	(?___fladd+2)& (0+255),b
 33781  00CC0C  0E00               	movlw	0
 33782  00CC0E  6F7F               	movwf	(?___fladd+3)& (0+255),b
 33783                           
 33784                           ; BSR set to: 0
 33785  00CC10  0012               	return	
 33786  00CC12                     
 33787                           ; BSR set to: 0
 33788                           
 33789                           ; BSR set to: 0
 33790  00CC12  90D8               	bcf	status,0,c
 33791  00CC14  377C               	rlcf	___fladd@b& (0+255),f,b
 33792  00CC16  377D               	rlcf	(___fladd@b+1)& (0+255),f,b
 33793  00CC18  377E               	rlcf	(___fladd@b+2)& (0+255),f,b
 33794  00CC1A  377F               	rlcf	(___fladd@b+3)& (0+255),f,b
 33795                           
 33796                           ; BSR set to: 0
 33797  00CC1C  BF8F               	btfsc	___fladd@grs& (0+255),7,b
 33798                           
 33799                           ; BSR set to: 0
 33800  00CC1E  817C               	bsf	___fladd@b& (0+255),0,b
 33801                           
 33802                           ; BSR set to: 0
 33803                           
 33804                           ; BSR set to: 0
 33805  00CC20  A18F               	btfss	___fladd@grs& (0+255),0,b
 33806  00CC22  D002               	goto	l3711
 33807                           
 33808                           ; BSR set to: 0
 33809  00CC24  80D8               	bsf	status,0,c
 33810  00CC26  D001               	goto	L31
 33811  00CC28                     l3711:
 33812                           
 33813                           ; BSR set to: 0
 33814                           
 33815                           ; BSR set to: 0
 33816  00CC28  90D8               	bcf	status,0,c
 33817  00CC2A                     L31:
 33818  00CC2A  378F               	rlcf	___fladd@grs& (0+255),f,b
 33819                           
 33820                           ; BSR set to: 0
 33821                           
 33822                           ; BSR set to: 0
 33823  00CC2C  518E               	movf	___fladd@bexp& (0+255),w,b
 33824  00CC2E  A4D8               	btfss	status,2,c
 33825                           
 33826                           ; BSR set to: 0
 33827  00CC30  078E               	decf	___fladd@bexp& (0+255),f,b
 33828  00CC32                     l3713:
 33829                           
 33830                           ; BSR set to: 0
 33831                           
 33832                           ; BSR set to: 0
 33833                           
 33834                           ; BSR set to: 0
 33835  00CC32  AF7E               	btfss	(___fladd@b+2)& (0+255),7,b
 33836  00CC34  D7EE               	goto	l3709
 33837  00CC36                     u13320:
 33838                           
 33839                           ; BSR set to: 0
 33840                           
 33841                           ; BSR set to: 0
 33842                           
 33843                           ; BSR set to: 0
 33844  00CC36  0E00               	movlw	0
 33845  00CC38  6F8D               	movwf	___fladd@aexp& (0+255),b
 33846                           
 33847                           ; BSR set to: 0
 33848  00CC3A  AF8F               	btfss	___fladd@grs& (0+255),7,b
 33849  00CC3C  D00A               	goto	l3718
 33850                           
 33851                           ; BSR set to: 0
 33852  00CC3E  C08F  F084         	movff	___fladd@grs,??___fladd
 33853  00CC42  0E7F               	movlw	127
 33854  00CC44  1784               	andwf	??___fladd& (0+255),f,b
 33855  00CC46  A4D8               	btfss	status,2,c
 33856  00CC48  D002               	goto	u13350
 33857                           
 33858                           ; BSR set to: 0
 33859                           
 33860                           ; BSR set to: 0
 33861  00CC4A  A17C               	btfss	___fladd@b& (0+255),0,b
 33862  00CC4C  D002               	goto	l3718
 33863  00CC4E                     u13350:
 33864                           
 33865                           ; BSR set to: 0
 33866  00CC4E  0E01               	movlw	1
 33867  00CC50  6F8D               	movwf	___fladd@aexp& (0+255),b
 33868  00CC52                     l3718:
 33869                           
 33870                           ; BSR set to: 0
 33871                           
 33872                           ; BSR set to: 0
 33873                           
 33874                           ; BSR set to: 0
 33875  00CC52  518D               	movf	___fladd@aexp& (0+255),w,b
 33876  00CC54  B4D8               	btfsc	status,2,c
 33877  00CC56  D020               	goto	l3721
 33878                           
 33879                           ; BSR set to: 0
 33880  00CC58  0E01               	movlw	1
 33881  00CC5A  277C               	addwf	___fladd@b& (0+255),f,b
 33882  00CC5C  0E00               	movlw	0
 33883  00CC5E  237D               	addwfc	(___fladd@b+1)& (0+255),f,b
 33884  00CC60  237E               	addwfc	(___fladd@b+2)& (0+255),f,b
 33885  00CC62  237F               	addwfc	(___fladd@b+3)& (0+255),f,b
 33886                           
 33887                           ; BSR set to: 0
 33888  00CC64  A17F               	btfss	(___fladd@b+3)& (0+255),0,b
 33889  00CC66  D018               	goto	l3721
 33890                           
 33891                           ; BSR set to: 0
 33892  00CC68  C07C  F084         	movff	___fladd@b,??___fladd
 33893  00CC6C  C07D  F085         	movff	___fladd@b+1,??___fladd+1
 33894  00CC70  C07E  F086         	movff	___fladd@b+2,??___fladd+2
 33895  00CC74  C07F  F087         	movff	___fladd@b+3,??___fladd+3
 33896  00CC78  3587               	rlcf	(??___fladd+3)& (0+255),w,b
 33897  00CC7A  3387               	rrcf	(??___fladd+3)& (0+255),f,b
 33898  00CC7C  3386               	rrcf	(??___fladd+2)& (0+255),f,b
 33899  00CC7E  3385               	rrcf	(??___fladd+1)& (0+255),f,b
 33900  00CC80  3384               	rrcf	??___fladd& (0+255),f,b
 33901  00CC82  C084  F07C         	movff	??___fladd,___fladd@b
 33902  00CC86  C085  F07D         	movff	??___fladd+1,___fladd@b+1
 33903  00CC8A  C086  F07E         	movff	??___fladd+2,___fladd@b+2
 33904  00CC8E  C087  F07F         	movff	??___fladd+3,___fladd@b+3
 33905  00CC92  298E               	incf	___fladd@bexp& (0+255),w,b
 33906  00CC94  A4D8               	btfss	status,2,c
 33907                           
 33908                           ; BSR set to: 0
 33909  00CC96  2B8E               	incf	___fladd@bexp& (0+255),f,b
 33910  00CC98                     l3721:
 33911                           
 33912                           ; BSR set to: 0
 33913                           
 33914                           ; BSR set to: 0
 33915                           
 33916                           ; BSR set to: 0
 33917                           
 33918                           ; BSR set to: 0
 33919  00CC98  298E               	incf	___fladd@bexp& (0+255),w,b
 33920  00CC9A  B4D8               	btfsc	status,2,c
 33921  00CC9C  D003               	goto	u13400
 33922                           
 33923                           ; BSR set to: 0
 33924  00CC9E  518E               	movf	___fladd@bexp& (0+255),w,b
 33925  00CCA0  A4D8               	btfss	status,2,c
 33926  00CCA2  D00D               	goto	l3725
 33927  00CCA4                     u13400:
 33928                           
 33929                           ; BSR set to: 0
 33930                           
 33931                           ; BSR set to: 0
 33932  00CCA4  0E00               	movlw	0
 33933  00CCA6  6F7C               	movwf	___fladd@b& (0+255),b
 33934  00CCA8  0E00               	movlw	0
 33935  00CCAA  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 33936  00CCAC  0E00               	movlw	0
 33937  00CCAE  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 33938  00CCB0  0E00               	movlw	0
 33939  00CCB2  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 33940  00CCB4  518E               	movf	___fladd@bexp& (0+255),w,b
 33941  00CCB6  A4D8               	btfss	status,2,c
 33942  00CCB8  D002               	goto	l3725
 33943                           
 33944                           ; BSR set to: 0
 33945  00CCBA  0E00               	movlw	0
 33946  00CCBC  6F8C               	movwf	___fladd@signs& (0+255),b
 33947  00CCBE                     l3725:
 33948                           
 33949                           ; BSR set to: 0
 33950                           
 33951                           ; BSR set to: 0
 33952                           
 33953                           ; BSR set to: 0
 33954  00CCBE  A18E               	btfss	___fladd@bexp& (0+255),0,b
 33955  00CCC0  D002               	goto	l3726
 33956                           
 33957                           ; BSR set to: 0
 33958  00CCC2  8F7E               	bsf	(___fladd@b+2)& (0+255),7,b
 33959  00CCC4  D001               	goto	l3727
 33960  00CCC6                     l3726:
 33961                           
 33962                           ; BSR set to: 0
 33963                           
 33964                           ; BSR set to: 0
 33965  00CCC6  9F7E               	bcf	(___fladd@b+2)& (0+255),7,b
 33966  00CCC8                     l3727:
 33967                           
 33968                           ; BSR set to: 0
 33969                           
 33970                           ; BSR set to: 0
 33971  00CCC8  90D8               	bcf	status,0,c
 33972  00CCCA  318E               	rrcf	___fladd@bexp& (0+255),w,b
 33973  00CCCC  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 33974                           
 33975                           ; BSR set to: 0
 33976  00CCCE  BF8C               	btfsc	___fladd@signs& (0+255),7,b
 33977                           
 33978                           ; BSR set to: 0
 33979  00CCD0  8F7F               	bsf	(___fladd@b+3)& (0+255),7,b
 33980                           
 33981                           ; BSR set to: 0
 33982                           
 33983                           ; BSR set to: 0
 33984  00CCD2  C07C  F07C         	movff	___fladd@b,?___fladd
 33985  00CCD6  C07D  F07D         	movff	___fladd@b+1,?___fladd+1
 33986  00CCDA  C07E  F07E         	movff	___fladd@b+2,?___fladd+2
 33987  00CCDE  C07F  F07F         	movff	___fladd@b+3,?___fladd+3
 33988  00CCE2  0012               	return	
 33989  00CCE4                     __end_of___fladd:
 33990                           	opt stack 0
 33991                           tblptru	equ	0xFF8
 33992                           tblptrh	equ	0xFF7
 33993                           tblptrl	equ	0xFF6
 33994                           tablat	equ	0xFF5
 33995                           prodh	equ	0xFF4
 33996                           prodl	equ	0xFF3
 33997                           intcon	equ	0xFF2
 33998                           postinc0	equ	0xFEE
 33999                           wreg	equ	0xFE8
 34000                           indf1	equ	0xFE7
 34001                           postinc1	equ	0xFE6
 34002                           postdec1	equ	0xFE5
 34003                           plusw1	equ	0xFE3
 34004                           fsr1h	equ	0xFE2
 34005                           fsr1l	equ	0xFE1
 34006                           indf2	equ	0xFDF
 34007                           postinc2	equ	0xFDE
 34008                           postdec2	equ	0xFDD
 34009                           plusw2	equ	0xFDB
 34010                           fsr2h	equ	0xFDA
 34011                           fsr2l	equ	0xFD9
 34012                           status	equ	0xFD8
 34013                           
 34014 ;; *************** function _USBDeviceInit *****************
 34015 ;; Defined at:
 34016 ;;		line 277 in file "usb_device.c"
 34017 ;; Parameters:    Size  Location     Type
 34018 ;;		None
 34019 ;; Auto vars:     Size  Location     Type
 34020 ;;  i               1    8[BANK0 ] unsigned char 
 34021 ;; Return value:  Size  Location     Type
 34022 ;;                  1    wreg      void 
 34023 ;; Registers used:
 34024 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34025 ;; Tracked objects:
 34026 ;;		On entry : 0/0
 34027 ;;		On exit  : 0/0
 34028 ;;		Unchanged: 0/0
 34029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34031 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34033 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34034 ;;Total ram usage:        1 bytes
 34035 ;; Hardware stack levels used:    1
 34036 ;; Hardware stack levels required when called:   11
 34037 ;; This function calls:
 34038 ;;		_memset
 34039 ;; This function is called by:
 34040 ;;		_main
 34041 ;; This function uses a non-reentrant model
 34042 ;;
 34043                           
 34044                           	psect	text128
 34045  010002                     __ptext128:
 34046                           	opt stack 0
 34047  010002                     _USBDeviceInit:
 34048                           	opt stack 19
 34049                           
 34050                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 34051                           
 34052                           ; BSR set to: 0
 34053                           ;incstack = 0
 34054  010002  98A0               	bcf	4000,4,c	;volatile
 34055                           
 34056                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 34057  010004  0E00               	movlw	0
 34058  010006  6E63               	movwf	3939,c	;volatile
 34059                           
 34060                           ;usb_device.c: 291: {UIR = 0;};
 34061  010008  0E00               	movlw	0
 34062  01000A  6E62               	movwf	3938,c	;volatile
 34063                           
 34064                           ;usb_device.c: 294: UEP0 = 0;
 34065  01000C  0E00               	movlw	0
 34066  01000E  010F               	movlb	15	; () banked
 34067  010010  6F26               	movwf	38,b	;volatile
 34068                           
 34069                           ; BSR set to: 15
 34070                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 34071  010012  0E27               	movlw	39
 34072  010014  0100               	movlb	0	; () banked
 34073  010016  6F60               	movwf	memset@p1& (0+255),b
 34074  010018  0E0F               	movlw	15
 34075  01001A  6F61               	movwf	(memset@p1+1)& (0+255),b
 34076  01001C  0E00               	movlw	0
 34077  01001E  6F63               	movwf	(memset@c+1)& (0+255),b
 34078  010020  0E00               	movlw	0
 34079  010022  6F62               	movwf	memset@c& (0+255),b
 34080  010024  0E00               	movlw	0
 34081  010026  6F65               	movwf	(memset@n+1)& (0+255),b
 34082  010028  0E02               	movlw	2
 34083  01002A  6F64               	movwf	memset@n& (0+255),b
 34084  01002C  EC73  F0AF         	call	_memset	;wreg free
 34085                           
 34086                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 34087  010030  0E16               	movlw	22
 34088  010032  010F               	movlb	15	; () banked
 34089  010034  6F39               	movwf	57,b	;volatile
 34090                           
 34091                           ; BSR set to: 15
 34092  010036  0E9F               	movlw	159
 34093  010038  6F37               	movwf	55,b	;volatile
 34094                           
 34095                           ; BSR set to: 15
 34096  01003A  0E7B               	movlw	123
 34097  01003C  6F36               	movwf	54,b	;volatile
 34098                           
 34099                           ; BSR set to: 15
 34100                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 34101  01003E  0E00               	movlw	0
 34102  010040  0100               	movlb	0	; () banked
 34103  010042  6F68               	movwf	USBDeviceInit@i& (0+255),b
 34104  010044                     l18847:
 34105                           
 34106                           ; BSR set to: 0
 34107  010044  0E0B               	movlw	11
 34108  010046  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 34109  010048  D001               	goto	l145
 34110  01004A  D00E               	goto	u18570
 34111  01004C                     l145:
 34112                           
 34113                           ; BSR set to: 0
 34114                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 34115                           
 34116                           ; BSR set to: 0
 34117  01004C  5168               	movf	USBDeviceInit@i& (0+255),w,b
 34118  01004E  0D04               	mullw	4
 34119  010050  0E00               	movlw	0
 34120  010052  24F3               	addwf	prodl,w,c
 34121  010054  6ED9               	movwf	fsr2l,c
 34122  010056  0E0D               	movlw	13
 34123  010058  20F4               	addwfc	prodh,w,c
 34124  01005A  6EDA               	movwf	fsr2h,c
 34125  01005C  6ADE               	clrf	postinc2,c
 34126  01005E  6ADE               	clrf	postinc2,c
 34127  010060  6ADE               	clrf	postinc2,c
 34128  010062  6ADD               	clrf	postdec2,c
 34129                           
 34130                           ; BSR set to: 0
 34131  010064  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 34132  010066  D7EE               	goto	l18847
 34133  010068                     u18570:
 34134                           
 34135                           ; BSR set to: 0
 34136                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 34137  010068  8C65               	bsf	3941,6,c	;volatile
 34138                           
 34139                           ; BSR set to: 0
 34140                           ;usb_device.c: 316: UADDR = 0x00;
 34141  01006A  0E00               	movlw	0
 34142  01006C  010F               	movlb	15	; () banked
 34143  01006E  6F38               	movwf	56,b	;volatile
 34144                           
 34145                           ; BSR set to: 15
 34146                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 34147  010070  9865               	bcf	3941,4,c	;volatile
 34148                           
 34149                           ; BSR set to: 15
 34150                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 34151  010072  9C65               	bcf	3941,6,c	;volatile
 34152  010074                     
 34153                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 34154                           
 34155                           ; BSR set to: 15
 34156  010074  9662               	bcf	3938,3,c	;volatile
 34157                           
 34158                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 34159  010076  0E00               	movlw	0
 34160  010078  0101               	movlb	1	; () banked
 34161  01007A  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 34162                           
 34163                           ; BSR set to: 1
 34164                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 34165  01007C  0E00               	movlw	0
 34166  01007E  6F03               	movwf	(_outPipes+3)& (0+255),b	;volatile
 34167                           
 34168                           ; BSR set to: 1
 34169                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 34170  010080  0E00               	movlw	0
 34171  010082  6F05               	movwf	(_outPipes+5)& (0+255),b	;volatile
 34172  010084  0E00               	movlw	0
 34173  010086  6F04               	movwf	(_outPipes+4)& (0+255),b	;volatile
 34174                           
 34175                           ; BSR set to: 1
 34176                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 34177  010088  B662               	btfsc	3938,3,c	;volatile
 34178  01008A  D7F4               	goto	l147
 34179                           
 34180                           ; BSR set to: 1
 34181                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 34182                           
 34183                           ; BSR set to: 1
 34184  01008C  0E01               	movlw	1
 34185  01008E  6F5C               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 34186                           
 34187                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 34188  010090  0E01               	movlw	1
 34189  010092  6F5B               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 34190                           
 34191                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 34192  010094  0E00               	movlw	0
 34193  010096  6F5A               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 34194                           
 34195                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 34196  010098  0E00               	movlw	0
 34197  01009A  6F59               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 34198                           
 34199                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 34200  01009C  0E00               	movlw	0
 34201  01009E  6F61               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 34202                           
 34203                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 34204  0100A0  0E00               	movlw	0
 34205  0100A2  0100               	movlb	0	; () banked
 34206  0100A4  6F68               	movwf	USBDeviceInit@i& (0+255),b
 34207  0100A6                     l18875:
 34208                           
 34209                           ; BSR set to: 0
 34210  0100A6  0E02               	movlw	2
 34211  0100A8  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 34212  0100AA  D001               	goto	l149
 34213  0100AC  D02E               	goto	u18600
 34214  0100AE                     l149:
 34215                           
 34216                           ; BSR set to: 0
 34217                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 34218                           
 34219                           ; BSR set to: 0
 34220  0100AE  5168               	movf	USBDeviceInit@i& (0+255),w,b
 34221  0100B0  0D02               	mullw	2
 34222  0100B2  0E0F               	movlw	low _pBDTEntryIn
 34223  0100B4  24F3               	addwf	prodl,w,c
 34224  0100B6  6ED9               	movwf	fsr2l,c
 34225  0100B8  0E01               	movlw	high _pBDTEntryIn
 34226  0100BA  20F4               	addwfc	prodh,w,c
 34227  0100BC  6EDA               	movwf	fsr2h,c
 34228  0100BE  0E00               	movlw	0
 34229  0100C0  6EDE               	movwf	postinc2,c
 34230  0100C2  0E00               	movlw	0
 34231  0100C4  6EDD               	movwf	postdec2,c
 34232                           
 34233                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 34234  0100C6  5168               	movf	USBDeviceInit@i& (0+255),w,b
 34235  0100C8  0D02               	mullw	2
 34236  0100CA  0E15               	movlw	low _pBDTEntryOut
 34237  0100CC  24F3               	addwf	prodl,w,c
 34238  0100CE  6ED9               	movwf	fsr2l,c
 34239  0100D0  0E01               	movlw	high _pBDTEntryOut
 34240  0100D2  20F4               	addwfc	prodh,w,c
 34241  0100D4  6EDA               	movwf	fsr2h,c
 34242  0100D6  0E00               	movlw	0
 34243  0100D8  6EDE               	movwf	postinc2,c
 34244  0100DA  0E00               	movlw	0
 34245  0100DC  6EDD               	movwf	postdec2,c
 34246                           
 34247                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 34248  0100DE  5168               	movf	USBDeviceInit@i& (0+255),w,b
 34249  0100E0  0D01               	mullw	1
 34250  0100E2  0E31               	movlw	low _ep_data_in
 34251  0100E4  24F3               	addwf	prodl,w,c
 34252  0100E6  6ED9               	movwf	fsr2l,c
 34253  0100E8  0E01               	movlw	high _ep_data_in
 34254  0100EA  20F4               	addwfc	prodh,w,c
 34255  0100EC  6EDA               	movwf	fsr2h,c
 34256  0100EE  0E00               	movlw	0
 34257  0100F0  6EDF               	movwf	indf2,c
 34258                           
 34259                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 34260  0100F2  5168               	movf	USBDeviceInit@i& (0+255),w,b
 34261  0100F4  0D01               	mullw	1
 34262  0100F6  0E2E               	movlw	low _ep_data_out
 34263  0100F8  24F3               	addwf	prodl,w,c
 34264  0100FA  6ED9               	movwf	fsr2l,c
 34265  0100FC  0E01               	movlw	high _ep_data_out
 34266  0100FE  20F4               	addwfc	prodh,w,c
 34267  010100  6EDA               	movwf	fsr2h,c
 34268  010102  0E00               	movlw	0
 34269  010104  6EDF               	movwf	indf2,c
 34270                           
 34271                           ; BSR set to: 0
 34272  010106  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 34273  010108  D7CE               	goto	l18875
 34274  01010A                     u18600:
 34275                           
 34276                           ; BSR set to: 0
 34277                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 34278                           
 34279                           ; BSR set to: 0
 34280  01010A  0E08               	movlw	8
 34281  01010C  0101               	movlb	1	; () banked
 34282  01010E  6F0F               	movwf	_pBDTEntryIn& (0+255),b
 34283  010110  0E0D               	movlw	13
 34284  010112  6F10               	movwf	(_pBDTEntryIn+1)& (0+255),b
 34285                           
 34286                           ; BSR set to: 1
 34287                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 34288  010114  0E16               	movlw	22
 34289  010116  010F               	movlb	15	; () banked
 34290  010118  6F26               	movwf	38,b	;volatile
 34291                           
 34292                           ; BSR set to: 15
 34293                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 34294  01011A  0E0D               	movlw	13
 34295  01011C  010D               	movlb	13	; () banked
 34296  01011E  6F03               	movwf	3,b	;volatile
 34297  010120  0E30               	movlw	48
 34298  010122  6F02               	movwf	2,b	;volatile
 34299                           
 34300                           ; BSR set to: 13
 34301                           ;usb_device.c: 359: BDT[0].CNT = 8;
 34302  010124  0E08               	movlw	8
 34303  010126  6F01               	movwf	1,b	;volatile
 34304                           
 34305                           ; BSR set to: 13
 34306                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 34307  010128  0E04               	movlw	4
 34308  01012A  6F00               	movwf	0,b	;volatile
 34309                           
 34310                           ; BSR set to: 13
 34311                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 34312  01012C  8F00               	bsf	0,7,b	;volatile
 34313                           
 34314                           ; BSR set to: 13
 34315                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 34316  01012E  0E00               	movlw	0
 34317  010130  0101               	movlb	1	; () banked
 34318  010132  6FC3               	movwf	_USBActiveConfiguration& (0+255),b	;volatile
 34319                           
 34320                           ; BSR set to: 1
 34321                           ;usb_device.c: 366: USB1msTickCount = 0;
 34322  010134  0E00               	movlw	0
 34323  010136  6F27               	movwf	_USB1msTickCount& (0+255),b	;volatile
 34324  010138  0E00               	movlw	0
 34325  01013A  6F28               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 34326  01013C  0E00               	movlw	0
 34327  01013E  6F29               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 34328  010140  0E00               	movlw	0
 34329  010142  6F2A               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 34330                           
 34331                           ; BSR set to: 1
 34332                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 34333  010144  0E00               	movlw	0
 34334  010146  6F58               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 34335                           
 34336                           ; BSR set to: 1
 34337                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 34338  010148  0E00               	movlw	0
 34339  01014A  6E5D               	movwf	_USBDeviceState,c	;volatile
 34340                           
 34341                           ; BSR set to: 1
 34342  01014C  0012               	return		;funcret
 34343  01014E                     __end_of_USBDeviceInit:
 34344                           	opt stack 0
 34345                           tblptru	equ	0xFF8
 34346                           tblptrh	equ	0xFF7
 34347                           tblptrl	equ	0xFF6
 34348                           tablat	equ	0xFF5
 34349                           prodh	equ	0xFF4
 34350                           prodl	equ	0xFF3
 34351                           intcon	equ	0xFF2
 34352                           postinc0	equ	0xFEE
 34353                           wreg	equ	0xFE8
 34354                           indf1	equ	0xFE7
 34355                           postinc1	equ	0xFE6
 34356                           postdec1	equ	0xFE5
 34357                           plusw1	equ	0xFE3
 34358                           fsr1h	equ	0xFE2
 34359                           fsr1l	equ	0xFE1
 34360                           indf2	equ	0xFDF
 34361                           postinc2	equ	0xFDE
 34362                           postdec2	equ	0xFDD
 34363                           plusw2	equ	0xFDB
 34364                           fsr2h	equ	0xFDA
 34365                           fsr2l	equ	0xFD9
 34366                           status	equ	0xFD8
 34367                           
 34368 ;; *************** function _memset *****************
 34369 ;; Defined at:
 34370 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 34371 ;; Parameters:    Size  Location     Type
 34372 ;;  p1              2    0[BANK0 ] PTR void 
 34373 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 34374 ;;  c               2    2[BANK0 ] int 
 34375 ;;  n               2    4[BANK0 ] unsigned int 
 34376 ;; Auto vars:     Size  Location     Type
 34377 ;;  p               2    6[BANK0 ] PTR unsigned char 
 34378 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 34379 ;; Return value:  Size  Location     Type
 34380 ;;                  2    0[BANK0 ] PTR void 
 34381 ;; Registers used:
 34382 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34383 ;; Tracked objects:
 34384 ;;		On entry : 0/0
 34385 ;;		On exit  : 0/0
 34386 ;;		Unchanged: 0/0
 34387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34388 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34389 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34391 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34392 ;;Total ram usage:        8 bytes
 34393 ;; Hardware stack levels used:    1
 34394 ;; Hardware stack levels required when called:   10
 34395 ;; This function calls:
 34396 ;;		Nothing
 34397 ;; This function is called by:
 34398 ;;		_USBDeviceInit
 34399 ;; This function uses a non-reentrant model
 34400 ;;
 34401                           
 34402                           	psect	text129
 34403  015EE6                     __ptext129:
 34404                           	opt stack 0
 34405  015EE6                     _memset:
 34406                           	opt stack 19
 34407                           
 34408                           ; BSR set to: 1
 34409                           ;incstack = 0
 34410  015EE6  C060  F066         	movff	memset@p1,memset@p
 34411  015EEA  C061  F067         	movff	memset@p1+1,memset@p+1
 34412  015EEE  D009               	goto	l3903
 34413  015EF0                     l17547:
 34414  015EF0  C066  FFD9         	movff	memset@p,fsr2l
 34415  015EF4  C067  FFDA         	movff	memset@p+1,fsr2h
 34416  015EF8  C062  FFDF         	movff	memset@c,indf2
 34417  015EFC  0100               	movlb	0	; () banked
 34418  015EFE  4B66               	infsnz	memset@p& (0+255),f,b
 34419  015F00  2B67               	incf	(memset@p+1)& (0+255),f,b
 34420  015F02                     l3903:
 34421                           
 34422                           ; BSR set to: 0
 34423  015F02  0100               	movlb	0	; () banked
 34424  015F04  0764               	decf	memset@n& (0+255),f,b
 34425  015F06  A0D8               	btfss	status,0,c
 34426  015F08  0765               	decf	(memset@n+1)& (0+255),f,b
 34427  015F0A  2964               	incf	memset@n& (0+255),w,b
 34428  015F0C  E1F1               	bnz	l17547
 34429  015F0E  2965               	incf	(memset@n+1)& (0+255),w,b
 34430  015F10  B4D8               	btfsc	status,2,c
 34431  015F12  0012               	return	
 34432  015F14  D7ED               	goto	l3904
 34433  015F16                     __end_of_memset:
 34434                           	opt stack 0
 34435                           tblptru	equ	0xFF8
 34436                           tblptrh	equ	0xFF7
 34437                           tblptrl	equ	0xFF6
 34438                           tablat	equ	0xFF5
 34439                           prodh	equ	0xFF4
 34440                           prodl	equ	0xFF3
 34441                           intcon	equ	0xFF2
 34442                           postinc0	equ	0xFEE
 34443                           wreg	equ	0xFE8
 34444                           indf1	equ	0xFE7
 34445                           postinc1	equ	0xFE6
 34446                           postdec1	equ	0xFE5
 34447                           plusw1	equ	0xFE3
 34448                           fsr1h	equ	0xFE2
 34449                           fsr1l	equ	0xFE1
 34450                           indf2	equ	0xFDF
 34451                           postinc2	equ	0xFDE
 34452                           postdec2	equ	0xFDD
 34453                           plusw2	equ	0xFDB
 34454                           fsr2h	equ	0xFDA
 34455                           fsr2l	equ	0xFD9
 34456                           status	equ	0xFD8
 34457                           
 34458 ;; *************** function _USBDeviceAttach *****************
 34459 ;; Defined at:
 34460 ;;		line 1354 in file "usb_device.c"
 34461 ;; Parameters:    Size  Location     Type
 34462 ;;		None
 34463 ;; Auto vars:     Size  Location     Type
 34464 ;;		None
 34465 ;; Return value:  Size  Location     Type
 34466 ;;                  1    wreg      void 
 34467 ;; Registers used:
 34468 ;;		wreg, status,2
 34469 ;; Tracked objects:
 34470 ;;		On entry : 0/0
 34471 ;;		On exit  : 0/0
 34472 ;;		Unchanged: 0/0
 34473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34478 ;;Total ram usage:        0 bytes
 34479 ;; Hardware stack levels used:    1
 34480 ;; Hardware stack levels required when called:   10
 34481 ;; This function calls:
 34482 ;;		Nothing
 34483 ;; This function is called by:
 34484 ;;		_main
 34485 ;; This function uses a non-reentrant model
 34486 ;;
 34487                           
 34488                           	psect	text130
 34489  015E54                     __ptext130:
 34490                           	opt stack 0
 34491  015E54                     _USBDeviceAttach:
 34492                           	opt stack 20
 34493                           
 34494                           ;usb_device.c: 1358: {;usb_device.c: 1359: if(1 == 1)
 34495                           
 34496                           ; BSR set to: 0
 34497                           ;incstack = 0
 34498  015E54  505D               	movf	_USBDeviceState,w,c	;volatile
 34499  015E56  A4D8               	btfss	status,2,c
 34500  015E58  0012               	return	
 34501                           
 34502                           ;usb_device.c: 1360: {;usb_device.c: 1362: UCON = 0;
 34503  015E5A  0E00               	movlw	0
 34504  015E5C  6E65               	movwf	3941,c	;volatile
 34505                           
 34506                           ;usb_device.c: 1365: UIE = 0;
 34507  015E5E  0E00               	movlw	0
 34508  015E60  010F               	movlb	15	; () banked
 34509  015E62  6F36               	movwf	54,b	;volatile
 34510                           
 34511                           ;usb_device.c: 1369: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 34512  015E64  0E16               	movlw	22
 34513  015E66  6F39               	movwf	57,b	;volatile
 34514  015E68  0E9F               	movlw	159
 34515  015E6A  6F37               	movwf	55,b	;volatile
 34516  015E6C  0E7B               	movlw	123
 34517  015E6E  6F36               	movwf	54,b	;volatile
 34518                           
 34519                           ; BSR set to: 15
 34520                           ;usb_device.c: 1371: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 34521  015E70  8ED0               	bsf	4048,7,c	;volatile
 34522                           
 34523                           ; BSR set to: 15
 34524  015E72  88A2               	bsf	4002,4,c	;volatile
 34525                           
 34526                           ; BSR set to: 15
 34527  015E74  88A0               	bsf	4000,4,c	;volatile
 34528                           
 34529                           ; BSR set to: 15
 34530  015E76  8EF2               	bsf	intcon,7,c	;volatile
 34531                           
 34532                           ;usb_device.c: 1374: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 34533  015E78  D001               	goto	l206
 34534  015E7A                     l207:
 34535  015E7A  8665               	bsf	3941,3,c	;volatile
 34536  015E7C                     l206:
 34537  015E7C  A665               	btfss	3941,3,c	;volatile
 34538  015E7E  D7FD               	goto	l207
 34539                           
 34540                           ;usb_device.c: 1377: USBDeviceState = ATTACHED_STATE;
 34541  015E80  0E01               	movlw	1
 34542  015E82  6E5D               	movwf	_USBDeviceState,c	;volatile
 34543  015E84  0012               	return	
 34544  015E86                     __end_of_USBDeviceAttach:
 34545                           	opt stack 0
 34546                           tblptru	equ	0xFF8
 34547                           tblptrh	equ	0xFF7
 34548                           tblptrl	equ	0xFF6
 34549                           tablat	equ	0xFF5
 34550                           prodh	equ	0xFF4
 34551                           prodl	equ	0xFF3
 34552                           intcon	equ	0xFF2
 34553                           postinc0	equ	0xFEE
 34554                           wreg	equ	0xFE8
 34555                           indf1	equ	0xFE7
 34556                           postinc1	equ	0xFE6
 34557                           postdec1	equ	0xFE5
 34558                           plusw1	equ	0xFE3
 34559                           fsr1h	equ	0xFE2
 34560                           fsr1l	equ	0xFE1
 34561                           indf2	equ	0xFDF
 34562                           postinc2	equ	0xFDE
 34563                           postdec2	equ	0xFDD
 34564                           plusw2	equ	0xFDB
 34565                           fsr2h	equ	0xFDA
 34566                           fsr2l	equ	0xFD9
 34567                           status	equ	0xFD8
 34568                           
 34569 ;; *************** function _SYSTEM_Initialize *****************
 34570 ;; Defined at:
 34571 ;;		line 39 in file "system.c"
 34572 ;; Parameters:    Size  Location     Type
 34573 ;;  state           1    wreg     enum E6623
 34574 ;; Auto vars:     Size  Location     Type
 34575 ;;  state           1    4[BANK0 ] enum E6623
 34576 ;;  pll_startup_    2    2[BANK0 ] unsigned int 
 34577 ;;  pll_startup_    2    0[BANK0 ] unsigned int 
 34578 ;; Return value:  Size  Location     Type
 34579 ;;                  1    wreg      void 
 34580 ;; Registers used:
 34581 ;;		wreg, status,2, status,0
 34582 ;; Tracked objects:
 34583 ;;		On entry : 0/0
 34584 ;;		On exit  : 0/0
 34585 ;;		Unchanged: 0/0
 34586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34588 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34590 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34591 ;;Total ram usage:        5 bytes
 34592 ;; Hardware stack levels used:    1
 34593 ;; Hardware stack levels required when called:   10
 34594 ;; This function calls:
 34595 ;;		Nothing
 34596 ;; This function is called by:
 34597 ;;		_main
 34598 ;; This function uses a non-reentrant model
 34599 ;;
 34600                           
 34601                           	psect	text131
 34602  0150F4                     __ptext131:
 34603                           	opt stack 0
 34604  0150F4                     _SYSTEM_Initialize:
 34605                           	opt stack 20
 34606                           
 34607                           ;incstack = 0
 34608                           ;SYSTEM_Initialize@state stored from wreg
 34609  0150F4  0100               	movlb	0	; () banked
 34610  0150F6  6F64               	movwf	SYSTEM_Initialize@state& (0+255),b
 34611                           
 34612                           ;system.c: 41: switch(state)
 34613  0150F8  D01E               	goto	l897
 34614  0150FA                     
 34615                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 34616  0150FA  0E02               	movlw	2
 34617  0150FC  0100               	movlb	0	; () banked
 34618  0150FE  6F61               	movwf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),b
 34619  015100  0E58               	movlw	88
 34620  015102  6F60               	movwf	SYSTEM_Initialize@pll_startup_counter& (0+255),b
 34621                           
 34622                           ; BSR set to: 0
 34623                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 34624  015104  8C9B               	bsf	3995,6,c	;volatile
 34625  015106                     l19027:
 34626                           
 34627                           ; BSR set to: 0
 34628  015106  0760               	decf	SYSTEM_Initialize@pll_startup_counter& (0+255),f,b
 34629  015108  A0D8               	btfss	status,0,c
 34630  01510A  0761               	decf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),f,b
 34631  01510C  2960               	incf	SYSTEM_Initialize@pll_startup_counter& (0+255),w,b
 34632  01510E  E1FB               	bnz	l19027
 34633  015110  2961               	incf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),w,b
 34634  015112  B4D8               	btfsc	status,2,c
 34635  015114  0012               	return	
 34636  015116  D7F7               	goto	l900
 34637  015118                     
 34638                           ; BSR set to: 0
 34639                           ;system.c: 78: OSCCON = 0x70;
 34640                           
 34641                           ; BSR set to: 0
 34642  015118  0E70               	movlw	112
 34643  01511A  6ED3               	movwf	4051,c	;volatile
 34644                           
 34645                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 34646  01511C  0E03               	movlw	3
 34647  01511E  6F63               	movwf	(SYSTEM_Initialize@pll_startup_counter_3152+1)& (0+255),b
 34648  015120  0E20               	movlw	32
 34649  015122  6F62               	movwf	SYSTEM_Initialize@pll_startup_counter_3152& (0+255),b
 34650  015124                     l19031:
 34651                           
 34652                           ; BSR set to: 0
 34653  015124  0762               	decf	SYSTEM_Initialize@pll_startup_counter_3152& (0+255),f,b
 34654  015126  A0D8               	btfss	status,0,c
 34655  015128  0763               	decf	(SYSTEM_Initialize@pll_startup_counter_3152+1)& (0+255),f,b
 34656  01512A  2962               	incf	SYSTEM_Initialize@pll_startup_counter_3152& (0+255),w,b
 34657  01512C  E1FB               	bnz	l19031
 34658  01512E  2963               	incf	(SYSTEM_Initialize@pll_startup_counter_3152+1)& (0+255),w,b
 34659  015130  B4D8               	btfsc	status,2,c
 34660  015132  0012               	return	
 34661  015134  D7F7               	goto	l906
 34662  015136                     l897:
 34663                           
 34664                           ; BSR set to: 0
 34665  015136  0100               	movlb	0	; () banked
 34666  015138  5164               	movf	SYSTEM_Initialize@state& (0+255),w,b
 34667                           
 34668                           ; Switch size 1, requested type "space"
 34669                           ; Number of cases is 3, Range of values is 0 to 2
 34670                           ; switch strategies available:
 34671                           ; Name         Instructions Cycles
 34672                           ; simple_byte           10     6 (average)
 34673                           ;	Chosen strategy is simple_byte
 34674  01513A  0A00               	xorlw	0	; case 0
 34675  01513C  B4D8               	btfsc	status,2,c
 34676  01513E  D7DD               	goto	l898
 34677  015140  0A01               	xorlw	1	; case 1
 34678  015142  B4D8               	btfsc	status,2,c
 34679  015144  0012               	return	
 34680  015146  0A03               	xorlw	3	; case 2
 34681  015148  A4D8               	btfss	status,2,c
 34682  01514A  0012               	return	
 34683  01514C  D7E5               	goto	l904
 34684  01514E                     __end_of_SYSTEM_Initialize:
 34685                           	opt stack 0
 34686                           tblptru	equ	0xFF8
 34687                           tblptrh	equ	0xFF7
 34688                           tblptrl	equ	0xFF6
 34689                           tablat	equ	0xFF5
 34690                           prodh	equ	0xFF4
 34691                           prodl	equ	0xFF3
 34692                           intcon	equ	0xFF2
 34693                           postinc0	equ	0xFEE
 34694                           wreg	equ	0xFE8
 34695                           indf1	equ	0xFE7
 34696                           postinc1	equ	0xFE6
 34697                           postdec1	equ	0xFE5
 34698                           plusw1	equ	0xFE3
 34699                           fsr1h	equ	0xFE2
 34700                           fsr1l	equ	0xFE1
 34701                           indf2	equ	0xFDF
 34702                           postinc2	equ	0xFDE
 34703                           postdec2	equ	0xFDD
 34704                           plusw2	equ	0xFDB
 34705                           fsr2h	equ	0xFDA
 34706                           fsr2l	equ	0xFD9
 34707                           status	equ	0xFD8
 34708                           
 34709 ;; *************** function _APP_DeviceMSDTasks *****************
 34710 ;; Defined at:
 34711 ;;		line 110 in file "app_device_msd.c"
 34712 ;; Parameters:    Size  Location     Type
 34713 ;;		None
 34714 ;; Auto vars:     Size  Location     Type
 34715 ;;		None
 34716 ;; Return value:  Size  Location     Type
 34717 ;;                  1    wreg      void 
 34718 ;; Registers used:
 34719 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 34720 ;; Tracked objects:
 34721 ;;		On entry : 0/0
 34722 ;;		On exit  : 0/0
 34723 ;;		Unchanged: 0/0
 34724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34729 ;;Total ram usage:        0 bytes
 34730 ;; Hardware stack levels used:    1
 34731 ;; Hardware stack levels required when called:   21
 34732 ;; This function calls:
 34733 ;;		_MSDTasks
 34734 ;; This function is called by:
 34735 ;;		_main
 34736 ;; This function uses a non-reentrant model
 34737 ;;
 34738                           
 34739                           	psect	text132
 34740  0163C2                     __ptext132:
 34741                           	opt stack 0
 34742  0163C2                     _APP_DeviceMSDTasks:
 34743                           	opt stack 9
 34744                           
 34745                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 34746                           
 34747                           ; BSR set to: 0
 34748                           ;incstack = 0
 34749  0163C2  0E20               	movlw	32
 34750  0163C4  605D               	cpfslt	_USBDeviceState,c	;volatile
 34751  0163C6  D001               	goto	l986
 34752  0163C8  0012               	return	
 34753  0163CA                     l986:
 34754                           
 34755                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 34756  0163CA  B265               	btfsc	3941,1,c	;volatile
 34757  0163CC  0012               	return	
 34758                           
 34759                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 34760                           
 34761                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 34762  0163CE  EC2C  F06D         	call	_MSDTasks	;wreg free
 34763  0163D2  0012               	return		;funcret
 34764  0163D4                     __end_of_APP_DeviceMSDTasks:
 34765                           	opt stack 0
 34766                           tblptru	equ	0xFF8
 34767                           tblptrh	equ	0xFF7
 34768                           tblptrl	equ	0xFF6
 34769                           tablat	equ	0xFF5
 34770                           prodh	equ	0xFF4
 34771                           prodl	equ	0xFF3
 34772                           intcon	equ	0xFF2
 34773                           postinc0	equ	0xFEE
 34774                           wreg	equ	0xFE8
 34775                           indf1	equ	0xFE7
 34776                           postinc1	equ	0xFE6
 34777                           postdec1	equ	0xFE5
 34778                           plusw1	equ	0xFE3
 34779                           fsr1h	equ	0xFE2
 34780                           fsr1l	equ	0xFE1
 34781                           indf2	equ	0xFDF
 34782                           postinc2	equ	0xFDE
 34783                           postdec2	equ	0xFDD
 34784                           plusw2	equ	0xFDB
 34785                           fsr2h	equ	0xFDA
 34786                           fsr2l	equ	0xFD9
 34787                           status	equ	0xFD8
 34788                           
 34789 ;; *************** function _MSDTasks *****************
 34790 ;; Defined at:
 34791 ;;		line 335 in file "usb_device_msd.c"
 34792 ;; Parameters:    Size  Location     Type
 34793 ;;		None
 34794 ;; Auto vars:     Size  Location     Type
 34795 ;;  i               1   81[BANK0 ] unsigned char 
 34796 ;; Return value:  Size  Location     Type
 34797 ;;                  1    wreg      unsigned char 
 34798 ;; Registers used:
 34799 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 34800 ;; Tracked objects:
 34801 ;;		On entry : 0/0
 34802 ;;		On exit  : 0/0
 34803 ;;		Unchanged: 0/0
 34804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34806 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34807 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34808 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34809 ;;Total ram usage:        6 bytes
 34810 ;; Hardware stack levels used:    1
 34811 ;; Hardware stack levels required when called:   20
 34812 ;; This function calls:
 34813 ;;		_MSDProcessCommand
 34814 ;;		_USBStallEndpoint
 34815 ;;		_USBTransferOnePacket
 34816 ;; This function is called by:
 34817 ;;		_APP_DeviceMSDTasks
 34818 ;; This function uses a non-reentrant model
 34819 ;;
 34820                           
 34821                           	psect	text133
 34822  00DA58                     __ptext133:
 34823                           	opt stack 0
 34824  00DA58                     _MSDTasks:
 34825                           	opt stack 9
 34826                           
 34827                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 34828                           
 34829                           ;incstack = 0
 34830  00DA58  0E20               	movlw	32
 34831  00DA5A  185D               	xorwf	_USBDeviceState,w,c	;volatile
 34832  00DA5C  A4D8               	btfss	status,2,c
 34833  00DA5E  0012               	return	
 34834                           
 34835                           ;usb_device_msd.c: 345: };usb_device_msd.c: 353: {PIE2bits.USBIE = 0;};
 34836                           
 34837                           ;usb_device_msd.c: 343: {;usb_device_msd.c: 344: return 0x00;;	Return value of _MSDTasks
      +                           is never used
 34838  00DA60  98A0               	bcf	4000,4,c	;volatile
 34839                           
 34840                           ;usb_device_msd.c: 357: switch(MSD_State)
 34841  00DA62  D11C               	goto	l570
 34842  00DA64                     
 34843                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 34844  00DA64  0101               	movlb	1	; () banked
 34845  00DA66  5140               	movf	_USBMSDOutHandle& (0+255),w,b
 34846  00DA68  1141               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 34847  00DA6A  B4D8               	btfsc	status,2,c
 34848  00DA6C  D006               	goto	u16610
 34849                           
 34850                           ; BSR set to: 1
 34851  00DA6E  C140  FFD9         	movff	_USBMSDOutHandle,fsr2l
 34852  00DA72  C141  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 34853  00DA76  BEDF               	btfsc	indf2,7,c
 34854  00DA78  D120               	goto	l586
 34855  00DA7A                     u16610:
 34856                           
 34857                           ; BSR set to: 1
 34858                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 34859                           
 34860                           ; BSR set to: 1
 34861  00DA7A  0E00               	movlw	0
 34862  00DA7C  0100               	movlb	0	; () banked
 34863  00DA7E  6FB1               	movwf	MSDTasks@i& (0+255),b
 34864  00DA80                     l17633:
 34865                           
 34866                           ; BSR set to: 0
 34867  00DA80  0E1E               	movlw	30
 34868  00DA82  65B1               	cpfsgt	MSDTasks@i& (0+255),b
 34869  00DA84  D001               	goto	l575
 34870  00DA86  D014               	goto	u16630
 34871  00DA88                     l575:
 34872                           
 34873                           ; BSR set to: 0
 34874                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 34875                           
 34876                           ; BSR set to: 0
 34877  00DA88  51B1               	movf	MSDTasks@i& (0+255),w,b
 34878  00DA8A  0D01               	mullw	1
 34879  00DA8C  0E40               	movlw	64
 34880  00DA8E  24F3               	addwf	prodl,w,c
 34881  00DA90  6ED9               	movwf	fsr2l,c
 34882  00DA92  0E0D               	movlw	13
 34883  00DA94  20F4               	addwfc	prodh,w,c
 34884  00DA96  6EDA               	movwf	fsr2h,c
 34885  00DA98  51B1               	movf	MSDTasks@i& (0+255),w,b
 34886  00DA9A  0D01               	mullw	1
 34887  00DA9C  0E00               	movlw	low _gblCBW
 34888  00DA9E  24F3               	addwf	prodl,w,c
 34889  00DAA0  6EE1               	movwf	fsr1l,c
 34890  00DAA2  0E02               	movlw	high _gblCBW
 34891  00DAA4  20F4               	addwfc	prodh,w,c
 34892  00DAA6  6EE2               	movwf	fsr1h,c
 34893  00DAA8  CFDF FFE7          	movff	indf2,indf1
 34894                           
 34895                           ; BSR set to: 0
 34896  00DAAC  2BB1               	incf	MSDTasks@i& (0+255),f,b
 34897  00DAAE  D7E8               	goto	l17633
 34898  00DAB0                     u16630:
 34899                           
 34900                           ; BSR set to: 0
 34901                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 34902                           
 34903                           ; BSR set to: 0
 34904  00DAB0  0101               	movlb	1	; () banked
 34905  00DAB2  EE20 F001          	lfsr	2,1
 34906  00DAB6  5140               	movf	_USBMSDOutHandle& (0+255),w,b
 34907  00DAB8  26D9               	addwf	fsr2l,f,c
 34908  00DABA  5141               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 34909  00DABC  22DA               	addwfc	fsr2h,f,c
 34910  00DABE  0E1F               	movlw	31
 34911  00DAC0  18DE               	xorwf	postinc2,w,c
 34912  00DAC2  A4D8               	btfss	status,2,c
 34913  00DAC4  D075               	goto	l577
 34914                           
 34915                           ; BSR set to: 1
 34916  00DAC6  0E55               	movlw	85
 34917  00DAC8  0102               	movlb	2	; () banked
 34918  00DACA  1900               	xorwf	_gblCBW& (0+255),w,b
 34919  00DACC  E171               	bnz	l577
 34920  00DACE  0E53               	movlw	83
 34921  00DAD0  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 34922  00DAD2  E16E               	bnz	l577
 34923  00DAD4  0E42               	movlw	66
 34924  00DAD6  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 34925  00DAD8  E16B               	bnz	l577
 34926  00DADA  0E43               	movlw	67
 34927  00DADC  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 34928  00DADE  A4D8               	btfss	status,2,c
 34929  00DAE0  D067               	goto	l577
 34930                           
 34931                           ; BSR set to: 2
 34932                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 34933  00DAE2  0E01               	movlw	1
 34934  00DAE4  0101               	movlb	1	; () banked
 34935  00DAE6  6F4F               	movwf	_MSDCBWValid& (0+255),b
 34936                           
 34937                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 34938  00DAE8  0102               	movlb	2	; () banked
 34939  00DAEA  510D               	movf	(_gblCBW+13)& (0+255),w,b
 34940  00DAEC  A4D8               	btfss	status,2,c
 34941  00DAEE  D053               	goto	l578
 34942                           
 34943                           ; BSR set to: 2
 34944  00DAF0  0E11               	movlw	17
 34945  00DAF2  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 34946  00DAF4  D050               	goto	l578
 34947                           
 34948                           ; BSR set to: 2
 34949  00DAF6  510E               	movf	(_gblCBW+14)& (0+255),w,b
 34950  00DAF8  B4D8               	btfsc	status,2,c
 34951  00DAFA  D04D               	goto	l578
 34952                           
 34953                           ; BSR set to: 2
 34954  00DAFC  C20C  F0AC         	movff	_gblCBW+12,??_MSDTasks
 34955  00DB00  0E3F               	movlw	63
 34956  00DB02  0100               	movlb	0	; () banked
 34957  00DB04  17AC               	andwf	??_MSDTasks& (0+255),f,b
 34958  00DB06  A4D8               	btfss	status,2,c
 34959  00DB08  D046               	goto	l578
 34960                           
 34961                           ; BSR set to: 0
 34962                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 34963  00DB0A  0E55               	movlw	85
 34964  00DB0C  010D               	movlb	13	; () banked
 34965  00DB0E  6F80               	movwf	128,b	;volatile
 34966  00DB10  0E53               	movlw	83
 34967  00DB12  6F81               	movwf	129,b	;volatile
 34968  00DB14  0E42               	movlw	66
 34969  00DB16  6F82               	movwf	130,b	;volatile
 34970  00DB18  0E53               	movlw	83
 34971  00DB1A  6F83               	movwf	131,b	;volatile
 34972                           
 34973                           ; BSR set to: 13
 34974                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 34975  00DB1C  C204  FD84         	movff	_gblCBW+4,3460	;volatile
 34976  00DB20  C205  FD85         	movff	_gblCBW+5,3461	;volatile
 34977  00DB24  C206  FD86         	movff	_gblCBW+6,3462	;volatile
 34978  00DB28  C207  FD87         	movff	_gblCBW+7,3463	;volatile
 34979                           
 34980                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 34981  00DB2C  0E00               	movlw	0
 34982  00DB2E  6F88               	movwf	136,b	;volatile
 34983  00DB30  0E00               	movlw	0
 34984  00DB32  6F89               	movwf	137,b	;volatile
 34985  00DB34  0E00               	movlw	0
 34986  00DB36  6F8A               	movwf	138,b	;volatile
 34987  00DB38  0E00               	movlw	0
 34988  00DB3A  6F8B               	movwf	139,b	;volatile
 34989                           
 34990                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 34991  00DB3C  0E00               	movlw	0
 34992  00DB3E  6F8C               	movwf	140,b	;volatile
 34993                           
 34994                           ; BSR set to: 13
 34995                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 34996  00DB40  0101               	movlb	1	; () banked
 34997  00DB42  6956               	setf	_MSDCommandState& (0+255),b
 34998                           
 34999                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 35000  00DB44  0E00               	movlw	0
 35001  00DB46  6F55               	movwf	_MSDReadState& (0+255),b
 35002                           
 35003                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 35004  00DB48  0E00               	movlw	0
 35005  00DB4A  6F54               	movwf	_MSDWriteState& (0+255),b
 35006                           
 35007                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 35008  00DB4C  0E00               	movlw	0
 35009  00DB4E  6F53               	movwf	_MSDRetryAttempt& (0+255),b
 35010                           
 35011                           ; BSR set to: 1
 35012                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 35013  00DB50  0E03               	movlw	3
 35014  00DB52  0102               	movlb	2	; () banked
 35015  00DB54  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 35016  00DB56  B4D8               	btfsc	status,2,c
 35017  00DB58  D008               	goto	l579
 35018                           
 35019                           ; BSR set to: 2
 35020                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 35021  00DB5A  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 35022  00DB5C  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 35023  00DB5E  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 35024  00DB60  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 35025                           
 35026                           ; BSR set to: 2
 35027                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 35028  00DB62  0E00               	movlw	0
 35029  00DB64  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 35030                           
 35031                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 35032  00DB66  0E00               	movlw	0
 35033  00DB68  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 35034  00DB6A                     l579:
 35035                           
 35036                           ; BSR set to: 2
 35037                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 35038                           
 35039                           ; BSR set to: 2
 35040  00DB6A  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 35041  00DB6C  D002               	goto	l580
 35042                           
 35043                           ; BSR set to: 2
 35044                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 35045  00DB6E  0E01               	movlw	1
 35046  00DB70  D001               	goto	L33
 35047  00DB72                     l580:
 35048                           
 35049                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 35050                           
 35051                           ; BSR set to: 1
 35052  00DB72  0E02               	movlw	2
 35053  00DB74                     L33:
 35054  00DB74  0101               	movlb	1	; () banked
 35055  00DB76  6F57               	movwf	_MSD_State& (0+255),b
 35056                           
 35057                           ; BSR set to: 1
 35058                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 35059                           
 35060                           ; BSR set to: 1
 35061  00DB78  0102               	movlb	2	; () banked
 35062  00DB7A  5108               	movf	(_gblCBW+8)& (0+255),w,b
 35063  00DB7C  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 35064  00DB7E  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 35065  00DB80  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 35066  00DB82  B4D8               	btfsc	status,2,c
 35067  00DB84  D002               	goto	l582
 35068                           
 35069                           ; BSR set to: 2
 35070                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 35071  00DB86  0E00               	movlw	0
 35072  00DB88  D001               	goto	L34
 35073  00DB8A                     l582:
 35074                           
 35075                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 35076                           
 35077                           ; BSR set to: 1
 35078  00DB8A  0E01               	movlw	1
 35079  00DB8C                     L34:
 35080  00DB8C  0101               	movlb	1	; () banked
 35081  00DB8E  6F50               	movwf	_MSDHostNoData& (0+255),b
 35082                           
 35083                           ; BSR set to: 1
 35084                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 35085                           
 35086                           ; BSR set to: 1
 35087  00DB90  C20F  F156         	movff	_gblCBW+15,_MSDCommandState
 35088                           
 35089                           ;usb_device_msd.c: 454: }
 35090  00DB94  D092               	goto	l586
 35091  00DB96                     l578:
 35092                           
 35093                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 35094                           
 35095                           ; BSR set to: 1
 35096  00DB96  0E01               	movlw	1
 35097  00DB98  0100               	movlb	0	; () banked
 35098  00DB9A  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35099  00DB9C  0E02               	movlw	2
 35100  00DB9E  EC90  F08A         	call	_USBStallEndpoint
 35101                           
 35102                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 35103  00DBA2  0E00               	movlw	0
 35104  00DBA4  0100               	movlb	0	; () banked
 35105  00DBA6  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35106  00DBA8  0E02               	movlw	2
 35107  00DBAA  EC90  F08A         	call	_USBStallEndpoint
 35108                           
 35109                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 35110  00DBAE  D085               	goto	l586
 35111  00DBB0                     l577:
 35112                           
 35113                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 35114  00DBB0  0E01               	movlw	1
 35115  00DBB2  0100               	movlb	0	; () banked
 35116  00DBB4  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35117  00DBB6  0E02               	movlw	2
 35118  00DBB8  EC90  F08A         	call	_USBStallEndpoint
 35119                           
 35120                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 35121  00DBBC  0E00               	movlw	0
 35122  00DBBE  0100               	movlb	0	; () banked
 35123  00DBC0  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35124  00DBC2  0E02               	movlw	2
 35125  00DBC4  EC90  F08A         	call	_USBStallEndpoint
 35126                           
 35127                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 35128  00DBC8  0E00               	movlw	0
 35129  00DBCA  0101               	movlb	1	; () banked
 35130  00DBCC  6F4F               	movwf	_MSDCBWValid& (0+255),b
 35131                           
 35132                           ; BSR set to: 1
 35133                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 35134                           
 35135                           ; BSR set to: 1
 35136  00DBCE  D075               	goto	l586
 35137  00DBD0                     
 35138                           ; BSR set to: 1
 35139                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 35140                           
 35141                           ; BSR set to: 1
 35142  00DBD0  EC0E  F085         	call	_MSDProcessCommand	;wreg free
 35143  00DBD4  0AFF               	xorlw	255
 35144  00DBD6  A4D8               	btfss	status,2,c
 35145  00DBD8  D070               	goto	l586
 35146  00DBDA  D011               	goto	l591
 35147  00DBDC                     
 35148                           ; BSR set to: 1
 35149                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 35150                           
 35151                           ; BSR set to: 1
 35152  00DBDC  EC0E  F085         	call	_MSDProcessCommand	;wreg free
 35153  00DBE0  0AFF               	xorlw	255
 35154  00DBE2  A4D8               	btfss	status,2,c
 35155  00DBE4  D06A               	goto	l586
 35156                           
 35157                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 35158  00DBE6  010D               	movlb	13	; () banked
 35159  00DBE8  518C               	movf	140,w,b	;volatile
 35160  00DBEA  A4D8               	btfss	status,2,c
 35161  00DBEC  D008               	goto	l591
 35162                           
 35163                           ; BSR set to: 13
 35164  00DBEE  5188               	movf	136,w,b	;volatile
 35165  00DBF0  1189               	iorwf	137,w,b	;volatile
 35166  00DBF2  118A               	iorwf	138,w,b	;volatile
 35167  00DBF4  118B               	iorwf	139,w,b	;volatile
 35168  00DBF6  B4D8               	btfsc	status,2,c
 35169  00DBF8  D002               	goto	l591
 35170                           
 35171                           ; BSR set to: 13
 35172                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 35173  00DBFA  0E02               	movlw	2
 35174  00DBFC  6F8C               	movwf	140,b	;volatile
 35175  00DBFE                     l591:
 35176                           
 35177                           ; BSR set to: 13
 35178                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 35179  00DBFE  0E03               	movlw	3
 35180  00DC00  D03E               	goto	L32
 35181  00DC02                     
 35182                           ; BSR set to: 1
 35183                           
 35184                           ; BSR set to: 1
 35185  00DC02  C113  F0AD         	movff	_pBDTEntryIn+4,_MSDTasks$2588
 35186  00DC06  C114  F0AE         	movff	_pBDTEntryIn+5,_MSDTasks$2588+1
 35187                           
 35188                           ; BSR set to: 1
 35189                           
 35190                           ; BSR set to: 1
 35191                           
 35192                           ; BSR set to: 1
 35193  00DC0A  0100               	movlb	0	; () banked
 35194  00DC0C  51AD               	movf	_MSDTasks$2588& (0+255),w,b
 35195  00DC0E  11AE               	iorwf	(_MSDTasks$2588+1)& (0+255),w,b
 35196  00DC10  B4D8               	btfsc	status,2,c
 35197  00DC12  D00A               	goto	l593
 35198                           
 35199                           ; BSR set to: 0
 35200  00DC14  C113  F0AF         	movff	_pBDTEntryIn+4,_MSDTasks$2589
 35201  00DC18  C114  F0B0         	movff	_pBDTEntryIn+5,_MSDTasks$2589+1
 35202                           
 35203                           ; BSR set to: 0
 35204                           
 35205                           ; BSR set to: 0
 35206                           
 35207                           ; BSR set to: 0
 35208                           
 35209                           ; BSR set to: 0
 35210  00DC1C  C0AF  FFD9         	movff	_MSDTasks$2589,fsr2l
 35211  00DC20  C0B0  FFDA         	movff	_MSDTasks$2589+1,fsr2h
 35212  00DC24  BEDF               	btfsc	indf2,7,c
 35213  00DC26  D049               	goto	l586
 35214  00DC28                     l593:
 35215                           
 35216                           ; BSR set to: 0
 35217                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 35218                           
 35219                           ; BSR set to: 0
 35220  00DC28  0E01               	movlw	1
 35221  00DC2A  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 35222  00DC2C  0E80               	movlw	128
 35223  00DC2E  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 35224  00DC30  0E0D               	movlw	13
 35225  00DC32  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 35226  00DC34  0E0D               	movlw	13
 35227  00DC36  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 35228  00DC38  0E02               	movlw	2
 35229  00DC3A  EC15  F08B         	call	_USBTransferOnePacket
 35230  00DC3E  C060  F13E         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 35231  00DC42  C061  F13F         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 35232                           
 35233                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 35234  00DC46  0101               	movlb	1	; () banked
 35235  00DC48  5140               	movf	_USBMSDOutHandle& (0+255),w,b
 35236  00DC4A  1141               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 35237  00DC4C  B4D8               	btfsc	status,2,c
 35238  00DC4E  D006               	goto	u16800
 35239                           
 35240                           ; BSR set to: 1
 35241  00DC50  C140  FFD9         	movff	_USBMSDOutHandle,fsr2l
 35242  00DC54  C141  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 35243  00DC58  BEDF               	btfsc	indf2,7,c
 35244  00DC5A  D010               	goto	l602
 35245  00DC5C                     u16800:
 35246                           
 35247                           ; BSR set to: 1
 35248                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 35249                           
 35250                           ; BSR set to: 1
 35251  00DC5C  0E00               	movlw	0
 35252  00DC5E  0100               	movlb	0	; () banked
 35253  00DC60  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 35254  00DC62  0E40               	movlw	64
 35255  00DC64  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 35256  00DC66  0E0D               	movlw	13
 35257  00DC68  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 35258  00DC6A  0E40               	movlw	64
 35259  00DC6C  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 35260  00DC6E  0E02               	movlw	2
 35261  00DC70  EC15  F08B         	call	_USBTransferOnePacket
 35262  00DC74  C060  F140         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 35263  00DC78  C061  F141         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 35264  00DC7C                     l602:
 35265                           
 35266                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 35267  00DC7C  0E00               	movlw	0
 35268  00DC7E                     L32:
 35269  00DC7E  0101               	movlb	1	; () banked
 35270  00DC80  6F57               	movwf	_MSD_State& (0+255),b
 35271                           
 35272                           ;usb_device_msd.c: 513: break;
 35273  00DC82  D01B               	goto	l586
 35274  00DC84                     
 35275                           ; BSR set to: 1
 35276                           ;usb_device_msd.c: 518: MSD_State=0x00;
 35277                           
 35278                           ; BSR set to: 1
 35279  00DC84  0E00               	movlw	0
 35280  00DC86  6F57               	movwf	_MSD_State& (0+255),b
 35281                           
 35282                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 35283  00DC88  0E02               	movlw	2
 35284  00DC8A  010D               	movlb	13	; () banked
 35285  00DC8C  6F8C               	movwf	140,b	;volatile
 35286                           
 35287                           ; BSR set to: 13
 35288                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 35289  00DC8E  0E00               	movlw	0
 35290  00DC90  0100               	movlb	0	; () banked
 35291  00DC92  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35292  00DC94  0E02               	movlw	2
 35293  00DC96  EC90  F08A         	call	_USBStallEndpoint
 35294                           
 35295                           ;usb_device_msd.c: 521: }
 35296  00DC9A  D00F               	goto	l586
 35297  00DC9C                     l570:
 35298  00DC9C  0101               	movlb	1	; () banked
 35299  00DC9E  5157               	movf	_MSD_State& (0+255),w,b
 35300                           
 35301                           ; Switch size 1, requested type "space"
 35302                           ; Number of cases is 4, Range of values is 0 to 3
 35303                           ; switch strategies available:
 35304                           ; Name         Instructions Cycles
 35305                           ; simple_byte           13     7 (average)
 35306                           ;	Chosen strategy is simple_byte
 35307  00DCA0  0A00               	xorlw	0	; case 0
 35308  00DCA2  B4D8               	btfsc	status,2,c
 35309  00DCA4  D6DF               	goto	l571
 35310  00DCA6  0A01               	xorlw	1	; case 1
 35311  00DCA8  B4D8               	btfsc	status,2,c
 35312  00DCAA  D792               	goto	l587
 35313  00DCAC  0A03               	xorlw	3	; case 2
 35314  00DCAE  B4D8               	btfsc	status,2,c
 35315  00DCB0  D795               	goto	l589
 35316  00DCB2  0A01               	xorlw	1	; case 3
 35317  00DCB4  B4D8               	btfsc	status,2,c
 35318  00DCB6  D7A5               	goto	l592
 35319  00DCB8  D7E5               	goto	l605
 35320  00DCBA                     l586:
 35321                           
 35322                           ;usb_device_msd.c: 524: {PIE2bits.USBIE = 1;};
 35323  00DCBA  88A0               	bsf	4000,4,c	;volatile
 35324                           
 35325                           ;usb_device_msd.c: 526: return MSD_State;;	Return value of _MSDTasks is never used
 35326  00DCBC  0012               	return		;funcret
 35327  00DCBE                     __end_of_MSDTasks:
 35328                           	opt stack 0
 35329                           tblptru	equ	0xFF8
 35330                           tblptrh	equ	0xFF7
 35331                           tblptrl	equ	0xFF6
 35332                           tablat	equ	0xFF5
 35333                           prodh	equ	0xFF4
 35334                           prodl	equ	0xFF3
 35335                           intcon	equ	0xFF2
 35336                           postinc0	equ	0xFEE
 35337                           wreg	equ	0xFE8
 35338                           indf1	equ	0xFE7
 35339                           postinc1	equ	0xFE6
 35340                           postdec1	equ	0xFE5
 35341                           plusw1	equ	0xFE3
 35342                           fsr1h	equ	0xFE2
 35343                           fsr1l	equ	0xFE1
 35344                           indf2	equ	0xFDF
 35345                           postinc2	equ	0xFDE
 35346                           postdec2	equ	0xFDD
 35347                           plusw2	equ	0xFDB
 35348                           fsr2h	equ	0xFDA
 35349                           fsr2l	equ	0xFD9
 35350                           status	equ	0xFD8
 35351                           
 35352 ;; *************** function _MSDProcessCommand *****************
 35353 ;; Defined at:
 35354 ;;		line 553 in file "usb_device_msd.c"
 35355 ;; Parameters:    Size  Location     Type
 35356 ;;		None
 35357 ;; Auto vars:     Size  Location     Type
 35358 ;;		None
 35359 ;; Return value:  Size  Location     Type
 35360 ;;                  1    wreg      unsigned char 
 35361 ;; Registers used:
 35362 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 35363 ;; Tracked objects:
 35364 ;;		On entry : 0/0
 35365 ;;		On exit  : 0/0
 35366 ;;		Unchanged: 0/0
 35367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35370 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35371 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35372 ;;Total ram usage:        5 bytes
 35373 ;; Hardware stack levels used:    1
 35374 ;; Hardware stack levels required when called:   19
 35375 ;; This function calls:
 35376 ;;		_ExternalFlash_MediaDetect
 35377 ;;		_ExternalFlash_MediaInitialize
 35378 ;;		_MSDProcessCommandMediaAbsent
 35379 ;;		_MSDProcessCommandMediaPresent
 35380 ;; This function is called by:
 35381 ;;		_MSDTasks
 35382 ;; This function uses a non-reentrant model
 35383 ;;
 35384                           
 35385                           	psect	text134
 35386  010A1C                     __ptext134:
 35387                           	opt stack 0
 35388  010A1C                     _MSDProcessCommand:
 35389                           	opt stack 9
 35390                           
 35391                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 35392                           
 35393                           ;incstack = 0
 35394  010A1C  C2B3  F060         	movff	_LUN+21,ExternalFlash_MediaDetect@config
 35395  010A20  C2B4  F061         	movff	_LUN+22,ExternalFlash_MediaDetect@config+1
 35396  010A24  EE22  F0A7         	lfsr	2,_LUN+9
 35397  010A28  D801               	call	u15208
 35398  010A2A  D00A               	goto	u15209
 35399  010A2C                     u15208:
 35400  010A2C  0005               	push	
 35401  010A2E  6EFA               	movwf	pclath,c
 35402  010A30  50DE               	movf	postinc2,w,c
 35403  010A32  6EFD               	movwf	tosl,c
 35404  010A34  50DE               	movf	postinc2,w,c
 35405  010A36  6EFE               	movwf	tosh,c
 35406  010A38  50DE               	movf	postinc2,w,c
 35407  010A3A  6EFF               	movwf	tosu,c
 35408  010A3C  50FA               	movf	pclath,w,c
 35409  010A3E  0012               	return		;indir
 35410  010A40                     u15209:
 35411  010A40  0900               	iorlw	0
 35412  010A42  B4D8               	btfsc	status,2,c
 35413  010A44  D00C               	goto	u15220
 35414  010A46  0102               	movlb	2	; () banked
 35415  010A48  510D               	movf	(_gblCBW+13)& (0+255),w,b
 35416  010A4A  0D01               	mullw	1
 35417  010A4C  0E51               	movlw	low _SoftDetach
 35418  010A4E  24F3               	addwf	prodl,w,c
 35419  010A50  6ED9               	movwf	fsr2l,c
 35420  010A52  0E01               	movlw	high _SoftDetach
 35421  010A54  20F4               	addwfc	prodh,w,c
 35422  010A56  6EDA               	movwf	fsr2h,c
 35423  010A58  04DE               	decf	postinc2,w,c
 35424  010A5A  A4D8               	btfss	status,2,c
 35425  010A5C  D01D               	goto	l608
 35426  010A5E                     u15220:
 35427                           
 35428                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 35429                           
 35430                           ; BSR set to: 2
 35431  010A5E  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 35432  010A62  0E01               	movlw	1
 35433  010A64  0100               	movlb	0	; () banked
 35434  010A66  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 35435  010A68  0E00               	movlw	0
 35436  010A6A  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 35437  010A6C  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 35438  010A6E  D003               	goto	u15234
 35439  010A70                     u15235:
 35440  010A70  90D8               	bcf	status,0,c
 35441  010A72  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 35442  010A74  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 35443  010A76                     u15234:
 35444  010A76  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 35445  010A78  D7FB               	goto	u15235
 35446  010A7A  0100               	movlb	0	; () banked
 35447  010A7C  1DA8               	comf	(??_MSDProcessCommand+1)& (0+255),w,b
 35448  010A7E  6FAA               	movwf	(??_MSDProcessCommand+3)& (0+255),b
 35449  010A80  1DA9               	comf	(??_MSDProcessCommand+2)& (0+255),w,b
 35450  010A82  6FAB               	movwf	(??_MSDProcessCommand+4)& (0+255),b
 35451  010A84  51AA               	movf	(??_MSDProcessCommand+3)& (0+255),w,b
 35452  010A86  0101               	movlb	1	; () banked
 35453  010A88  173C               	andwf	_gblMediaPresent& (0+255),f,b
 35454  010A8A  0100               	movlb	0	; () banked
 35455  010A8C  51AB               	movf	(??_MSDProcessCommand+4)& (0+255),w,b
 35456  010A8E  0101               	movlb	1	; () banked
 35457  010A90  173D               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 35458                           
 35459                           ; BSR set to: 1
 35460                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 35461  010A92  ECCF  F0A6         	call	_MSDProcessCommandMediaAbsent	;wreg free
 35462                           
 35463                           ;usb_device_msd.c: 563: }
 35464  010A96  D059               	goto	l615
 35465  010A98                     l608:
 35466                           
 35467                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 35468  010A98  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 35469  010A9C  0E01               	movlw	1
 35470  010A9E  0100               	movlb	0	; () banked
 35471  010AA0  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 35472  010AA2  0E00               	movlw	0
 35473  010AA4  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 35474  010AA6  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 35475  010AA8  D003               	goto	u15244
 35476  010AAA                     u15245:
 35477  010AAA  90D8               	bcf	status,0,c
 35478  010AAC  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 35479  010AAE  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 35480  010AB0                     u15244:
 35481  010AB0  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 35482  010AB2  D7FB               	goto	u15245
 35483  010AB4  0101               	movlb	1	; () banked
 35484  010AB6  513C               	movf	_gblMediaPresent& (0+255),w,b
 35485  010AB8  0100               	movlb	0	; () banked
 35486  010ABA  17A8               	andwf	(??_MSDProcessCommand+1)& (0+255),f,b
 35487  010ABC  0101               	movlb	1	; () banked
 35488  010ABE  513D               	movf	(_gblMediaPresent+1)& (0+255),w,b
 35489  010AC0  0100               	movlb	0	; () banked
 35490  010AC2  17A9               	andwf	(??_MSDProcessCommand+2)& (0+255),f,b
 35491  010AC4  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 35492  010AC6  11A9               	iorwf	(??_MSDProcessCommand+2)& (0+255),w,b
 35493  010AC8  A4D8               	btfss	status,2,c
 35494  010ACA  D03D               	goto	l612
 35495                           
 35496                           ; BSR set to: 0
 35497                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 35498  010ACC  C2B3  F060         	movff	_LUN+21,ExternalFlash_MediaInitialize@config
 35499  010AD0  C2B4  F061         	movff	_LUN+22,ExternalFlash_MediaInitialize@config+1
 35500  010AD4  D801               	call	u15268
 35501  010AD6  D00B               	goto	u15269
 35502  010AD8                     u15268:
 35503  010AD8  0005               	push	
 35504  010ADA  6EFA               	movwf	pclath,c
 35505  010ADC  0102               	movlb	2	; () banked
 35506  010ADE  519E               	movf	_LUN& (0+255),w,b
 35507  010AE0  6EFD               	movwf	tosl,c
 35508  010AE2  519F               	movf	(_LUN+1)& (0+255),w,b
 35509  010AE4  6EFE               	movwf	tosh,c
 35510  010AE6  51A0               	movf	(_LUN+2)& (0+255),w,b
 35511  010AE8  6EFF               	movwf	tosu,c
 35512  010AEA  50FA               	movf	pclath,w,c
 35513  010AEC  0012               	return		;indir
 35514  010AEE                     u15269:
 35515  010AEE  0100               	movlb	0	; () banked
 35516  010AF0  5160               	movf	?_ExternalFlash_MediaInitialize& (0+255),w,b
 35517  010AF2  1161               	iorwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),w,b
 35518  010AF4  B4D8               	btfsc	status,2,c
 35519  010AF6  D024               	goto	l613
 35520                           
 35521                           ; BSR set to: 0
 35522                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 35523  010AF8  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 35524  010AFC  0E01               	movlw	1
 35525  010AFE  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 35526  010B00  0E00               	movlw	0
 35527  010B02  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 35528  010B04  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 35529  010B06  D003               	goto	u15284
 35530  010B08                     u15285:
 35531  010B08  90D8               	bcf	status,0,c
 35532  010B0A  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 35533  010B0C  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 35534  010B0E                     u15284:
 35535  010B0E  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 35536  010B10  D7FB               	goto	u15285
 35537  010B12  0100               	movlb	0	; () banked
 35538  010B14  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 35539  010B16  0101               	movlb	1	; () banked
 35540  010B18  133C               	iorwf	_gblMediaPresent& (0+255),f,b
 35541  010B1A  0100               	movlb	0	; () banked
 35542  010B1C  51A9               	movf	(??_MSDProcessCommand+2)& (0+255),w,b
 35543  010B1E  0101               	movlb	1	; () banked
 35544  010B20  133D               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 35545                           
 35546                           ; BSR set to: 1
 35547                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 35548  010B22  0102               	movlb	2	; () banked
 35549  010B24  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 35550  010B26  0BF0               	andlw	-16
 35551  010B28  0906               	iorlw	6
 35552  010B2A  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 35553                           
 35554                           ; BSR set to: 2
 35555                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 35556  010B2C  0E28               	movlw	40
 35557  010B2E  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 35558                           
 35559                           ; BSR set to: 2
 35560                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 35561  010B30  0E00               	movlw	0
 35562  010B32  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 35563                           
 35564                           ; BSR set to: 2
 35565                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 35566  010B34  0E01               	movlw	1
 35567  010B36  010D               	movlb	13	; () banked
 35568  010B38  6F8C               	movwf	140,b	;volatile
 35569                           
 35570                           ; BSR set to: 13
 35571                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 35572  010B3A  EC58  F05F         	call	_MSDProcessCommandMediaPresent	;wreg free
 35573                           
 35574                           ;usb_device_msd.c: 589: }
 35575  010B3E  D005               	goto	l615
 35576  010B40                     l613:
 35577                           
 35578                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 35579  010B40  ECCF  F0A6         	call	_MSDProcessCommandMediaAbsent	;wreg free
 35580                           
 35581                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 35582  010B44  D002               	goto	l615
 35583  010B46                     l612:
 35584                           
 35585                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 35586  010B46  EC58  F05F         	call	_MSDProcessCommandMediaPresent	;wreg free
 35587  010B4A                     l615:
 35588                           
 35589                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 35590  010B4A  0101               	movlb	1	; () banked
 35591  010B4C  5156               	movf	_MSDCommandState& (0+255),w,b
 35592  010B4E  0012               	return	
 35593  010B50                     __end_of_MSDProcessCommand:
 35594                           	opt stack 0
 35595                           tosu	equ	0xFFF
 35596                           tosh	equ	0xFFE
 35597                           tosl	equ	0xFFD
 35598                           pclath	equ	0xFFA
 35599                           tblptru	equ	0xFF8
 35600                           tblptrh	equ	0xFF7
 35601                           tblptrl	equ	0xFF6
 35602                           tablat	equ	0xFF5
 35603                           prodh	equ	0xFF4
 35604                           prodl	equ	0xFF3
 35605                           intcon	equ	0xFF2
 35606                           postinc0	equ	0xFEE
 35607                           wreg	equ	0xFE8
 35608                           indf1	equ	0xFE7
 35609                           postinc1	equ	0xFE6
 35610                           postdec1	equ	0xFE5
 35611                           plusw1	equ	0xFE3
 35612                           fsr1h	equ	0xFE2
 35613                           fsr1l	equ	0xFE1
 35614                           indf2	equ	0xFDF
 35615                           postinc2	equ	0xFDE
 35616                           postdec2	equ	0xFDD
 35617                           plusw2	equ	0xFDB
 35618                           fsr2h	equ	0xFDA
 35619                           fsr2l	equ	0xFD9
 35620                           status	equ	0xFD8
 35621                           
 35622 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 35623 ;; Defined at:
 35624 ;;		line 635 in file "usb_device_msd.c"
 35625 ;; Parameters:    Size  Location     Type
 35626 ;;		None
 35627 ;; Auto vars:     Size  Location     Type
 35628 ;;		None
 35629 ;; Return value:  Size  Location     Type
 35630 ;;                  1    wreg      void 
 35631 ;; Registers used:
 35632 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 35633 ;; Tracked objects:
 35634 ;;		On entry : 0/0
 35635 ;;		On exit  : 0/0
 35636 ;;		Unchanged: 0/0
 35637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35642 ;;Total ram usage:        0 bytes
 35643 ;; Hardware stack levels used:    1
 35644 ;; Hardware stack levels required when called:   18
 35645 ;; This function calls:
 35646 ;;		_MSDErrorHandler
 35647 ;;		_MSDProcessCommandMediaPresent
 35648 ;;		_ResetSenseData
 35649 ;; This function is called by:
 35650 ;;		_MSDProcessCommand
 35651 ;; This function uses a non-reentrant model
 35652 ;;
 35653                           
 35654                           	psect	text135
 35655  014D9E                     __ptext135:
 35656                           	opt stack 0
 35657  014D9E                     _MSDProcessCommandMediaAbsent:
 35658                           	opt stack 9
 35659                           
 35660                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 35661                           
 35662                           ; BSR set to: 1
 35663                           ;incstack = 0
 35664  014D9E  D01E               	goto	l619
 35665  014DA0                     
 35666                           ;usb_device_msd.c: 646: ResetSenseData();
 35667  014DA0  EC00  F0A7         	call	_ResetSenseData	;wreg free
 35668                           
 35669                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 35670  014DA4  0102               	movlb	2	; () banked
 35671  014DA6  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 35672  014DA8  0BF0               	andlw	-16
 35673  014DAA  0902               	iorlw	2
 35674  014DAC  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 35675                           
 35676                           ; BSR set to: 2
 35677                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 35678  014DAE  0E3A               	movlw	58
 35679  014DB0  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 35680                           
 35681                           ; BSR set to: 2
 35682                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 35683  014DB2  0E00               	movlw	0
 35684  014DB4  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 35685                           
 35686                           ; BSR set to: 2
 35687                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 35688  014DB6  EC58  F05F         	call	_MSDProcessCommandMediaPresent	;wreg free
 35689                           
 35690                           ;usb_device_msd.c: 655: break;
 35691  014DBA  0012               	return	
 35692  014DBC                     
 35693                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 35694  014DBC  0E01               	movlw	1
 35695  014DBE  010D               	movlb	13	; () banked
 35696  014DC0  6F8C               	movwf	140,b	;volatile
 35697                           
 35698                           ; BSR set to: 13
 35699                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 35700  014DC2  0101               	movlb	1	; () banked
 35701  014DC4  6956               	setf	_MSDCommandState& (0+255),b
 35702                           
 35703                           ;usb_device_msd.c: 665: break;
 35704  014DC6  0012               	return	
 35705  014DC8                     
 35706                           ; BSR set to: 1
 35707                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 35708                           
 35709                           ; BSR set to: 1
 35710  014DC8  EC58  F05F         	call	_MSDProcessCommandMediaPresent	;wreg free
 35711                           
 35712                           ;usb_device_msd.c: 671: break;
 35713  014DCC  0012               	return	
 35714  014DCE                     
 35715                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 35716  014DCE  EC58  F05F         	call	_MSDProcessCommandMediaPresent	;wreg free
 35717                           
 35718                           ;usb_device_msd.c: 677: break;
 35719  014DD2  0012               	return	
 35720  014DD4                     
 35721                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 35722  014DD4  0E7F               	movlw	127
 35723  014DD6  EC5B  F087         	call	_MSDErrorHandler
 35724                           
 35725                           ;usb_device_msd.c: 685: }
 35726                           
 35727                           ;usb_device_msd.c: 684: break;
 35728  014DDA  0012               	return	
 35729  014DDC                     l619:
 35730  014DDC  0101               	movlb	1	; () banked
 35731  014DDE  5156               	movf	_MSDCommandState& (0+255),w,b
 35732                           
 35733                           ; Switch size 1, requested type "space"
 35734                           ; Number of cases is 5, Range of values is 0 to 253
 35735                           ; switch strategies available:
 35736                           ; Name         Instructions Cycles
 35737                           ; simple_byte           16     9 (average)
 35738                           ;	Chosen strategy is simple_byte
 35739  014DE0  0A00               	xorlw	0	; case 0
 35740  014DE2  B4D8               	btfsc	status,2,c
 35741  014DE4  D7EB               	goto	l622
 35742  014DE6  0A03               	xorlw	3	; case 3
 35743  014DE8  B4D8               	btfsc	status,2,c
 35744  014DEA  D7DA               	goto	l620
 35745  014DEC  0A11               	xorlw	17	; case 18
 35746  014DEE  B4D8               	btfsc	status,2,c
 35747  014DF0  D7EB               	goto	l624
 35748  014DF2  0A0C               	xorlw	12	; case 30
 35749  014DF4  B4D8               	btfsc	status,2,c
 35750  014DF6  D7E2               	goto	l622
 35751  014DF8  0AE3               	xorlw	227	; case 253
 35752  014DFA  B4D8               	btfsc	status,2,c
 35753  014DFC  D7E8               	goto	l625
 35754  014DFE  D7EA               	goto	l626
 35755  014E00                     __end_of_MSDProcessCommandMediaAbsent:
 35756                           	opt stack 0
 35757                           tosu	equ	0xFFF
 35758                           tosh	equ	0xFFE
 35759                           tosl	equ	0xFFD
 35760                           pclath	equ	0xFFA
 35761                           tblptru	equ	0xFF8
 35762                           tblptrh	equ	0xFF7
 35763                           tblptrl	equ	0xFF6
 35764                           tablat	equ	0xFF5
 35765                           prodh	equ	0xFF4
 35766                           prodl	equ	0xFF3
 35767                           intcon	equ	0xFF2
 35768                           postinc0	equ	0xFEE
 35769                           wreg	equ	0xFE8
 35770                           indf1	equ	0xFE7
 35771                           postinc1	equ	0xFE6
 35772                           postdec1	equ	0xFE5
 35773                           plusw1	equ	0xFE3
 35774                           fsr1h	equ	0xFE2
 35775                           fsr1l	equ	0xFE1
 35776                           indf2	equ	0xFDF
 35777                           postinc2	equ	0xFDE
 35778                           postdec2	equ	0xFDD
 35779                           plusw2	equ	0xFDB
 35780                           fsr2h	equ	0xFDA
 35781                           fsr2l	equ	0xFD9
 35782                           status	equ	0xFD8
 35783                           
 35784 ;; *************** function _MSDProcessCommandMediaPresent *****************
 35785 ;; Defined at:
 35786 ;;		line 712 in file "usb_device_msd.c"
 35787 ;; Parameters:    Size  Location     Type
 35788 ;;		None
 35789 ;; Auto vars:     Size  Location     Type
 35790 ;;  capacity        4   66[BANK0 ] struct .
 35791 ;;  sectorSize      4   62[BANK0 ] struct .
 35792 ;;  i               1   70[BANK0 ] unsigned char 
 35793 ;;  NumBytesInPa    1   61[BANK0 ] unsigned char 
 35794 ;; Return value:  Size  Location     Type
 35795 ;;                  1    wreg      void 
 35796 ;; Registers used:
 35797 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 35798 ;; Tracked objects:
 35799 ;;		On entry : 0/0
 35800 ;;		On exit  : 0/0
 35801 ;;		Unchanged: 0/0
 35802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35804 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35805 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35806 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35807 ;;Total ram usage:       14 bytes
 35808 ;; Hardware stack levels used:    1
 35809 ;; Hardware stack levels required when called:   17
 35810 ;; This function calls:
 35811 ;;		_ExternalFlash_CapacityRead
 35812 ;;		_ExternalFlash_SectorSizeRead
 35813 ;;		_ExternalFlash_WriteProtectStateGet
 35814 ;;		_MSDCheckForErrorCases
 35815 ;;		_MSDComputeDeviceInAndResidue
 35816 ;;		_MSDErrorHandler
 35817 ;;		_MSDReadHandler
 35818 ;;		_MSDWriteHandler
 35819 ;;		_ResetSenseData
 35820 ;;		_USBTransferOnePacket
 35821 ;;		_memcpy
 35822 ;; This function is called by:
 35823 ;;		_MSDProcessCommand
 35824 ;;		_MSDProcessCommandMediaAbsent
 35825 ;; This function uses a non-reentrant model
 35826 ;;
 35827                           
 35828                           	psect	text136
 35829  00BEB0                     __ptext136:
 35830                           	opt stack 0
 35831  00BEB0                     _MSDProcessCommandMediaPresent:
 35832                           	opt stack 10
 35833                           
 35834                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 35835                           
 35836                           ;incstack = 0
 35837  00BEB0  D1D1               	goto	l630
 35838  00BEB2                     
 35839                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 35840  00BEB2  ECAF  F074         	call	_MSDReadHandler	;wreg free
 35841  00BEB6  0900               	iorlw	0
 35842  00BEB8  A4D8               	btfss	status,2,c
 35843  00BEBA  0012               	return	
 35844                           
 35845                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 35846  00BEBC  0101               	movlb	1	; () banked
 35847  00BEBE  6956               	setf	_MSDCommandState& (0+255),b
 35848                           
 35849                           ; BSR set to: 1
 35850                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 35851  00BEC0  0012               	return	
 35852  00BEC2                     
 35853                           ; BSR set to: 1
 35854                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 35855                           
 35856                           ; BSR set to: 1
 35857  00BEC2  EC72  F066         	call	_MSDWriteHandler	;wreg free
 35858  00BEC6  0900               	iorlw	0
 35859  00BEC8  A4D8               	btfss	status,2,c
 35860  00BECA  0012               	return	
 35861                           
 35862                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 35863  00BECC  0101               	movlb	1	; () banked
 35864  00BECE  6956               	setf	_MSDCommandState& (0+255),b
 35865                           
 35866                           ; BSR set to: 1
 35867                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 35868  00BED0  0012               	return	
 35869  00BED2                     
 35870                           ; BSR set to: 1
 35871                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 35872                           
 35873                           ; BSR set to: 1
 35874  00BED2  0550               	decf	_MSDHostNoData& (0+255),w,b
 35875  00BED4  A4D8               	btfss	status,2,c
 35876  00BED6  D002               	goto	l637
 35877                           
 35878                           ; BSR set to: 1
 35879                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 35880  00BED8  6956               	setf	_MSDCommandState& (0+255),b
 35881                           
 35882                           ;usb_device_msd.c: 751: break;
 35883  00BEDA  0012               	return	
 35884  00BEDC                     l637:
 35885                           
 35886                           ; BSR set to: 1
 35887                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 35888  00BEDC  C212  F13B         	movff	_gblCBW+18,_TransferLength+1
 35889                           
 35890                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 35891  00BEE0  C213  F13A         	movff	_gblCBW+19,_TransferLength
 35892                           
 35893                           ; BSR set to: 1
 35894                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 35895  00BEE4  C13A  F06A         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 35896  00BEE8  C13B  F06B         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 35897  00BEEC  0100               	movlb	0	; () banked
 35898  00BEEE  6B6C               	clrf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 35899  00BEF0  6B6D               	clrf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 35900  00BEF2  ECE8  F087         	call	_MSDCheckForErrorCases	;wreg free
 35901  00BEF6  0900               	iorlw	0
 35902  00BEF8  A4D8               	btfss	status,2,c
 35903  00BEFA  0012               	return	
 35904                           
 35905                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 35906                           
 35907                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 35908  00BEFC  0E00               	movlw	0
 35909  00BEFE  0100               	movlb	0	; () banked
 35910  00BF00  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 35911  00BF02  0E24               	movlw	36
 35912  00BF04  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 35913  00BF06  ECFE  F098         	call	_MSDComputeDeviceInAndResidue	;wreg free
 35914                           
 35915                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 35916  00BF0A  0E00               	movlw	0
 35917  00BF0C  0100               	movlb	0	; () banked
 35918  00BF0E  6F60               	movwf	memcpy@d1& (0+255),b
 35919  00BF10  0E06               	movlw	6
 35920  00BF12  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 35921  00BF14  0EB0               	movlw	low _inq_resp
 35922  00BF16  6F62               	movwf	memcpy@s1& (0+255),b
 35923  00BF18  0EA1               	movlw	high _inq_resp
 35924  00BF1A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 35925  00BF1C  0E00               	movlw	0
 35926  00BF1E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 35927  00BF20  0E24               	movlw	36
 35928  00BF22  6F64               	movwf	memcpy@n& (0+255),b
 35929  00BF24  EC93  F0A7         	call	_memcpy	;wreg free
 35930                           
 35931                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 35932  00BF28  0EFD               	movlw	253
 35933  00BF2A  0101               	movlb	1	; () banked
 35934  00BF2C  6F56               	movwf	_MSDCommandState& (0+255),b
 35935                           
 35936                           ;usb_device_msd.c: 773: break;
 35937  00BF2E  0012               	return	
 35938  00BF30                     
 35939                           ; BSR set to: 1
 35940                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 35941                           
 35942                           ; BSR set to: 1
 35943  00BF30  C2B3  F060         	movff	_LUN+21,ExternalFlash_CapacityRead@config
 35944  00BF34  C2B4  F061         	movff	_LUN+22,ExternalFlash_CapacityRead@config+1
 35945  00BF38  EE22  F0A1         	lfsr	2,_LUN+3
 35946  00BF3C  D801               	call	u12508
 35947  00BF3E  D00A               	goto	u12509
 35948  00BF40                     u12508:
 35949  00BF40  0005               	push	
 35950  00BF42  6EFA               	movwf	pclath,c
 35951  00BF44  50DE               	movf	postinc2,w,c
 35952  00BF46  6EFD               	movwf	tosl,c
 35953  00BF48  50DE               	movf	postinc2,w,c
 35954  00BF4A  6EFE               	movwf	tosh,c
 35955  00BF4C  50DE               	movf	postinc2,w,c
 35956  00BF4E  6EFF               	movwf	tosu,c
 35957  00BF50  50FA               	movf	pclath,w,c
 35958  00BF52  0012               	return		;indir
 35959  00BF54                     u12509:
 35960  00BF54  C060  F0A2         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 35961  00BF58  C061  F0A3         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 35962  00BF5C  C062  F0A4         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 35963  00BF60  C063  F0A5         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 35964                           
 35965                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 35966  00BF64  C2B3  F060         	movff	_LUN+21,ExternalFlash_SectorSizeRead@config
 35967  00BF68  C2B4  F061         	movff	_LUN+22,ExternalFlash_SectorSizeRead@config+1
 35968  00BF6C  EE22  F0A4         	lfsr	2,_LUN+6
 35969  00BF70  D801               	call	u12518
 35970  00BF72  D00A               	goto	u12519
 35971  00BF74                     u12518:
 35972  00BF74  0005               	push	
 35973  00BF76  6EFA               	movwf	pclath,c
 35974  00BF78  50DE               	movf	postinc2,w,c
 35975  00BF7A  6EFD               	movwf	tosl,c
 35976  00BF7C  50DE               	movf	postinc2,w,c
 35977  00BF7E  6EFE               	movwf	tosh,c
 35978  00BF80  50DE               	movf	postinc2,w,c
 35979  00BF82  6EFF               	movwf	tosu,c
 35980  00BF84  50FA               	movf	pclath,w,c
 35981  00BF86  0012               	return		;indir
 35982  00BF88                     u12519:
 35983  00BF88  0100               	movlb	0	; () banked
 35984  00BF8A  C060  F09E         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 35985  00BF8E  C061  F09F         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 35986  00BF92  6BA0               	clrf	(MSDProcessCommandMediaPresent@sectorSize+2)& (0+255),b
 35987  00BF94  6BA1               	clrf	(MSDProcessCommandMediaPresent@sectorSize+3)& (0+255),b
 35988                           
 35989                           ; BSR set to: 0
 35990                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 35991  00BF96  EE26 F000          	lfsr	2,1536
 35992  00BF9A  C0A5  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 35993                           
 35994                           ; BSR set to: 0
 35995                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 35996  00BF9E  EE26 F001          	lfsr	2,1537	;volatile
 35997  00BFA2  C0A4  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 35998                           
 35999                           ; BSR set to: 0
 36000                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 36001  00BFA6  EE26 F002          	lfsr	2,1538	;volatile
 36002  00BFAA  C0A3  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 36003                           
 36004                           ; BSR set to: 0
 36005                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 36006  00BFAE  EE26 F003          	lfsr	2,1539	;volatile
 36007  00BFB2  C0A2  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 36008                           
 36009                           ; BSR set to: 0
 36010                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 36011  00BFB6  EE26 F004          	lfsr	2,1540	;volatile
 36012  00BFBA  C0A1  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 36013                           
 36014                           ; BSR set to: 0
 36015                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 36016  00BFBE  EE26 F005          	lfsr	2,1541	;volatile
 36017  00BFC2  C0A0  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 36018                           
 36019                           ; BSR set to: 0
 36020                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 36021  00BFC6  EE26 F006          	lfsr	2,1542	;volatile
 36022  00BFCA  C09F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 36023                           
 36024                           ; BSR set to: 0
 36025                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 36026  00BFCE  EE26 F007          	lfsr	2,1543	;volatile
 36027  00BFD2  C09E  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 36028                           
 36029                           ; BSR set to: 0
 36030                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 36031  00BFD6  0E00               	movlw	0
 36032  00BFD8  0101               	movlb	1	; () banked
 36033  00BFDA  6F3B               	movwf	(_TransferLength+1)& (0+255),b
 36034  00BFDC  0E08               	movlw	8
 36035  00BFDE  6F3A               	movwf	_TransferLength& (0+255),b
 36036                           
 36037                           ; BSR set to: 1
 36038                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 36039  00BFE0  0E00               	movlw	0
 36040  00BFE2  0100               	movlb	0	; () banked
 36041  00BFE4  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 36042  00BFE6  0E08               	movlw	8
 36043  00BFE8  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 36044  00BFEA  ECFE  F098         	call	_MSDComputeDeviceInAndResidue	;wreg free
 36045                           
 36046                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 36047  00BFEE  0EFD               	movlw	253
 36048  00BFF0  0101               	movlb	1	; () banked
 36049  00BFF2  6F56               	movwf	_MSDCommandState& (0+255),b
 36050                           
 36051                           ;usb_device_msd.c: 802: break;
 36052  00BFF4  0012               	return	
 36053  00BFF6                     
 36054                           ; BSR set to: 1
 36055                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 36056                           
 36057                           ; BSR set to: 1
 36058  00BFF6  0550               	decf	_MSDHostNoData& (0+255),w,b
 36059  00BFF8  A4D8               	btfss	status,2,c
 36060  00BFFA  D002               	goto	l641
 36061                           
 36062                           ; BSR set to: 1
 36063                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 36064  00BFFC  6956               	setf	_MSDCommandState& (0+255),b
 36065                           
 36066                           ;usb_device_msd.c: 814: break;
 36067  00BFFE  0012               	return	
 36068  00C000                     l641:
 36069                           
 36070                           ; BSR set to: 1
 36071                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 36072                           
 36073                           ; BSR set to: 1
 36074  00C000  0E00               	movlw	0
 36075  00C002  6F3B               	movwf	(_TransferLength+1)& (0+255),b
 36076  00C004  0E12               	movlw	18
 36077  00C006  6F3A               	movwf	_TransferLength& (0+255),b
 36078                           
 36079                           ; BSR set to: 1
 36080                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 36081  00C008  0E00               	movlw	0
 36082  00C00A  0100               	movlb	0	; () banked
 36083  00C00C  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 36084  00C00E  0E12               	movlw	18
 36085  00C010  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 36086  00C012  ECFE  F098         	call	_MSDComputeDeviceInAndResidue	;wreg free
 36087                           
 36088                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 36089  00C016  0E00               	movlw	0
 36090  00C018  0100               	movlb	0	; () banked
 36091  00C01A  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 36092  00C01C                     l14177:
 36093                           
 36094                           ; BSR set to: 0
 36095  00C01C  0E11               	movlw	17
 36096  00C01E  65A6               	cpfsgt	MSDProcessCommandMediaPresent@i& (0+255),b
 36097  00C020  D001               	goto	l642
 36098  00C022  D014               	goto	u12540
 36099  00C024                     l642:
 36100                           
 36101                           ; BSR set to: 0
 36102                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 36103                           
 36104                           ; BSR set to: 0
 36105  00C024  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 36106  00C026  0D01               	mullw	1
 36107  00C028  0E1F               	movlw	low _gblSenseData
 36108  00C02A  24F3               	addwf	prodl,w,c
 36109  00C02C  6ED9               	movwf	fsr2l,c
 36110  00C02E  0E02               	movlw	high _gblSenseData
 36111  00C030  20F4               	addwfc	prodh,w,c
 36112  00C032  6EDA               	movwf	fsr2h,c
 36113  00C034  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 36114  00C036  0D01               	mullw	1
 36115  00C038  0E00               	movlw	0
 36116  00C03A  24F3               	addwf	prodl,w,c
 36117  00C03C  6EE1               	movwf	fsr1l,c
 36118  00C03E  0E06               	movlw	6
 36119  00C040  20F4               	addwfc	prodh,w,c
 36120  00C042  6EE2               	movwf	fsr1h,c
 36121  00C044  CFDF FFE7          	movff	indf2,indf1
 36122                           
 36123                           ; BSR set to: 0
 36124  00C048  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 36125  00C04A  D7E8               	goto	l14177
 36126  00C04C                     u12540:
 36127                           
 36128                           ; BSR set to: 0
 36129                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 36130                           
 36131                           ; BSR set to: 0
 36132  00C04C  0EFD               	movlw	253
 36133  00C04E  0101               	movlb	1	; () banked
 36134  00C050  6F56               	movwf	_MSDCommandState& (0+255),b
 36135                           
 36136                           ;usb_device_msd.c: 827: break;
 36137  00C052  0012               	return	
 36138  00C054                     l644:
 36139                           
 36140                           ; BSR set to: 1
 36141                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 36142  00C054  0E03               	movlw	3
 36143  00C056  CFE8 F600          	movff	wreg,1536
 36144                           
 36145                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 36146  00C05A  0E00               	movlw	0
 36147  00C05C  CFE8 F601          	movff	wreg,1537	;volatile
 36148                           
 36149                           ; BSR set to: 1
 36150                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 36151  00C060  C2B3  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 36152  00C064  C2B4  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 36153  00C068  EE22  F0AD         	lfsr	2,_LUN+15
 36154  00C06C  D801               	call	u12558
 36155  00C06E  D00A               	goto	u12559
 36156  00C070                     u12558:
 36157  00C070  0005               	push	
 36158  00C072  6EFA               	movwf	pclath,c
 36159  00C074  50DE               	movf	postinc2,w,c
 36160  00C076  6EFD               	movwf	tosl,c
 36161  00C078  50DE               	movf	postinc2,w,c
 36162  00C07A  6EFE               	movwf	tosh,c
 36163  00C07C  50DE               	movf	postinc2,w,c
 36164  00C07E  6EFF               	movwf	tosu,c
 36165  00C080  50FA               	movf	pclath,w,c
 36166  00C082  0012               	return		;indir
 36167  00C084                     u12559:
 36168  00C084  0900               	iorlw	0
 36169  00C086  A4D8               	btfss	status,2,c
 36170  00C088  D005               	goto	l646
 36171  00C08A  0E00               	movlw	0
 36172  00C08C  0100               	movlb	0	; () banked
 36173  00C08E  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2606+1)& (0+255),b
 36174  00C090  0E00               	movlw	0
 36175  00C092  D004               	goto	L35
 36176  00C094                     l646:
 36177                           
 36178                           ; BSR set to: 0
 36179  00C094  0E00               	movlw	0
 36180  00C096  0100               	movlb	0	; () banked
 36181  00C098  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2606+1)& (0+255),b
 36182  00C09A  0E80               	movlw	128
 36183  00C09C                     L35:
 36184  00C09C  6F9B               	movwf	_MSDProcessCommandMediaPresent$2606& (0+255),b
 36185                           
 36186                           ; BSR set to: 0
 36187                           
 36188                           ; BSR set to: 0
 36189  00C09E  EE26 F002          	lfsr	2,1538	;volatile
 36190  00C0A2  C09B  FFDF         	movff	_MSDProcessCommandMediaPresent$2606,indf2
 36191                           
 36192                           ; BSR set to: 0
 36193                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 36194  00C0A6  0E00               	movlw	0
 36195  00C0A8  CFE8 F603          	movff	wreg,1539	;volatile
 36196                           
 36197                           ; BSR set to: 0
 36198                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 36199  00C0AC  0E00               	movlw	0
 36200  00C0AE  0101               	movlb	1	; () banked
 36201  00C0B0  6F3B               	movwf	(_TransferLength+1)& (0+255),b
 36202  00C0B2  0E04               	movlw	4
 36203  00C0B4  6F3A               	movwf	_TransferLength& (0+255),b
 36204                           
 36205                           ; BSR set to: 1
 36206                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 36207  00C0B6  0E00               	movlw	0
 36208  00C0B8  0100               	movlb	0	; () banked
 36209  00C0BA  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 36210  00C0BC  0E04               	movlw	4
 36211  00C0BE  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 36212  00C0C0  ECFE  F098         	call	_MSDComputeDeviceInAndResidue	;wreg free
 36213                           
 36214                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 36215  00C0C4  0EFD               	movlw	253
 36216  00C0C6  0101               	movlb	1	; () banked
 36217  00C0C8  6F56               	movwf	_MSDCommandState& (0+255),b
 36218                           
 36219                           ;usb_device_msd.c: 839: break;
 36220  00C0CA  0012               	return	
 36221  00C0CC                     
 36222                           ; BSR set to: 1
 36223                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 36224                           
 36225                           ; BSR set to: 1
 36226  00C0CC  0102               	movlb	2	; () banked
 36227  00C0CE  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 36228  00C0D0  0BF0               	andlw	-16
 36229  00C0D2  0905               	iorlw	5
 36230  00C0D4  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 36231                           
 36232                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 36233  00C0D6  0E20               	movlw	32
 36234  00C0D8  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 36235                           
 36236                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 36237  00C0DA  0E00               	movlw	0
 36238  00C0DC  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 36239                           
 36240                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 36241  00C0DE  0E01               	movlw	1
 36242  00C0E0  010D               	movlb	13	; () banked
 36243  00C0E2  6F8C               	movwf	140,b	;volatile
 36244                           
 36245                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 36246  00C0E4  0E00               	movlw	0
 36247  00C0E6  6F88               	movwf	136,b	;volatile
 36248  00C0E8  0E00               	movlw	0
 36249  00C0EA  6F89               	movwf	137,b	;volatile
 36250  00C0EC  0E00               	movlw	0
 36251  00C0EE  6F8A               	movwf	138,b	;volatile
 36252  00C0F0  0E00               	movlw	0
 36253  00C0F2  6F8B               	movwf	139,b	;volatile
 36254                           
 36255                           ; BSR set to: 13
 36256                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 36257  00C0F4  0101               	movlb	1	; () banked
 36258  00C0F6  6956               	setf	_MSDCommandState& (0+255),b
 36259                           
 36260                           ;usb_device_msd.c: 848: break;
 36261  00C0F8  0012               	return	
 36262  00C0FA                     
 36263                           ; BSR set to: 1
 36264                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 36265                           
 36266                           ; BSR set to: 1
 36267  00C0FA  0E00               	movlw	0
 36268  00C0FC  0100               	movlb	0	; () banked
 36269  00C0FE  6F6A               	movwf	MSDCheckForErrorCases@DeviceBytes& (0+255),b
 36270  00C100  0E00               	movlw	0
 36271  00C102  6F6B               	movwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),b
 36272  00C104  0E00               	movlw	0
 36273  00C106  6F6C               	movwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 36274  00C108  0E00               	movlw	0
 36275  00C10A  6F6D               	movwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 36276  00C10C  ECE8  F087         	call	_MSDCheckForErrorCases	;wreg free
 36277  00C110  0900               	iorlw	0
 36278  00C112  A4D8               	btfss	status,2,c
 36279  00C114  0012               	return	
 36280                           
 36281                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 36282                           
 36283                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 36284  00C116  0102               	movlb	2	; () banked
 36285  00C118  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 36286  00C11A  0B0F               	andlw	15
 36287  00C11C  0A06               	xorlw	6
 36288  00C11E  A4D8               	btfss	status,2,c
 36289  00C120  D007               	goto	l652
 36290                           
 36291                           ; BSR set to: 2
 36292  00C122  010D               	movlb	13	; () banked
 36293  00C124  058C               	decf	140,w,b	;volatile
 36294  00C126  A4D8               	btfss	status,2,c
 36295  00C128  D003               	goto	l652
 36296                           
 36297                           ; BSR set to: 13
 36298                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 36299  00C12A  0101               	movlb	1	; () banked
 36300  00C12C  6956               	setf	_MSDCommandState& (0+255),b
 36301                           
 36302                           ;usb_device_msd.c: 870: }
 36303  00C12E  0012               	return	
 36304  00C130                     l652:
 36305                           
 36306                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 36307                           
 36308                           ; BSR set to: 1
 36309  00C130  EC00  F0A7         	call	_ResetSenseData	;wreg free
 36310                           
 36311                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 36312  00C134  0E00               	movlw	0
 36313  00C136  010D               	movlb	13	; () banked
 36314  00C138  6F88               	movwf	136,b	;volatile
 36315  00C13A  0E00               	movlw	0
 36316  00C13C  6F89               	movwf	137,b	;volatile
 36317  00C13E  0E00               	movlw	0
 36318  00C140  6F8A               	movwf	138,b	;volatile
 36319  00C142  0E00               	movlw	0
 36320  00C144  6F8B               	movwf	139,b	;volatile
 36321                           
 36322                           ; BSR set to: 13
 36323                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 36324  00C146  0101               	movlb	1	; () banked
 36325  00C148  6956               	setf	_MSDCommandState& (0+255),b
 36326                           
 36327                           ; BSR set to: 1
 36328                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 36329  00C14A  0012               	return	
 36330  00C14C                     
 36331                           ; BSR set to: 1
 36332                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 36333                           
 36334                           ; BSR set to: 1
 36335                           
 36336                           ; BSR set to: 1
 36337  00C14C  0E00               	movlw	0
 36338  00C14E  010D               	movlb	13	; () banked
 36339  00C150  6F88               	movwf	136,b	;volatile
 36340  00C152  0E00               	movlw	0
 36341  00C154  6F89               	movwf	137,b	;volatile
 36342  00C156  0E00               	movlw	0
 36343  00C158  6F8A               	movwf	138,b	;volatile
 36344  00C15A  0E00               	movlw	0
 36345  00C15C  6F8B               	movwf	139,b	;volatile
 36346                           
 36347                           ; BSR set to: 13
 36348                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 36349  00C15E  0101               	movlb	1	; () banked
 36350  00C160  6956               	setf	_MSDCommandState& (0+255),b
 36351                           
 36352                           ;usb_device_msd.c: 885: break;
 36353  00C162  0012               	return	
 36354  00C164                     
 36355                           ; BSR set to: 1
 36356                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 36357                           
 36358                           ; BSR set to: 1
 36359  00C164  513E               	movf	_USBMSDInHandle& (0+255),w,b
 36360  00C166  113F               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 36361  00C168  B4D8               	btfsc	status,2,c
 36362  00C16A  D006               	goto	u12610
 36363                           
 36364                           ; BSR set to: 1
 36365  00C16C  C13E  FFD9         	movff	_USBMSDInHandle,fsr2l
 36366  00C170  C13F  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 36367  00C174  BEDF               	btfsc	indf2,7,c
 36368  00C176  0012               	return	
 36369  00C178                     u12610:
 36370                           
 36371                           ; BSR set to: 1
 36372                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 36373                           
 36374                           ; BSR set to: 1
 36375  00C178  0102               	movlb	2	; () banked
 36376  00C17A  510B               	movf	(_gblCBW+11)& (0+255),w,b
 36377  00C17C  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 36378  00C17E  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 36379  00C180  E104               	bnz	u12620
 36380  00C182  0E40               	movlw	64
 36381  00C184  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 36382  00C186  A0D8               	btfss	status,0,c
 36383  00C188  D00B               	goto	l660
 36384  00C18A                     u12620:
 36385                           
 36386                           ; BSR set to: 2
 36387                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 36388  00C18A  0E40               	movlw	64
 36389  00C18C  0100               	movlb	0	; () banked
 36390  00C18E  6F9D               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),b
 36391                           
 36392                           ; BSR set to: 0
 36393                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 36394  00C190  0E40               	movlw	64
 36395  00C192  0102               	movlb	2	; () banked
 36396  00C194  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 36397  00C196  0E00               	movlw	0
 36398  00C198  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 36399  00C19A  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 36400  00C19C  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 36401                           
 36402                           ;usb_device_msd.c: 900: }
 36403  00C19E  D00A               	goto	l661
 36404  00C1A0                     l660:
 36405                           
 36406                           ; BSR set to: 2
 36407                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 36408  00C1A0  C208  F09D         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 36409                           
 36410                           ; BSR set to: 2
 36411                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 36412  00C1A4  0E00               	movlw	0
 36413  00C1A6  6F08               	movwf	(_gblCBW+8)& (0+255),b
 36414  00C1A8  0E00               	movlw	0
 36415  00C1AA  6F09               	movwf	(_gblCBW+9)& (0+255),b
 36416  00C1AC  0E00               	movlw	0
 36417  00C1AE  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 36418  00C1B0  0E00               	movlw	0
 36419  00C1B2  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 36420  00C1B4                     l661:
 36421                           
 36422                           ; BSR set to: 2
 36423                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 36424                           
 36425                           ; BSR set to: 2
 36426  00C1B4  0100               	movlb	0	; () banked
 36427  00C1B6  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 36428  00C1B8  6F99               	movwf	??_MSDProcessCommandMediaPresent& (0+255),b
 36429  00C1BA  6B9A               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),b
 36430  00C1BC  5199               	movf	??_MSDProcessCommandMediaPresent& (0+255),w,b
 36431  00C1BE  0101               	movlb	1	; () banked
 36432  00C1C0  5D3A               	subwf	_TransferLength& (0+255),w,b
 36433  00C1C2  0100               	movlb	0	; () banked
 36434  00C1C4  519A               	movf	(??_MSDProcessCommandMediaPresent+1)& (0+255),w,b
 36435  00C1C6  0101               	movlb	1	; () banked
 36436  00C1C8  593B               	subwfb	(_TransferLength+1)& (0+255),w,b
 36437  00C1CA  A0D8               	btfss	status,0,c
 36438  00C1CC  D007               	goto	l662
 36439                           
 36440                           ; BSR set to: 1
 36441                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 36442  00C1CE  0100               	movlb	0	; () banked
 36443  00C1D0  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 36444  00C1D2  0101               	movlb	1	; () banked
 36445  00C1D4  5F3A               	subwf	_TransferLength& (0+255),f,b
 36446  00C1D6  0E00               	movlw	0
 36447  00C1D8  5B3B               	subwfb	(_TransferLength+1)& (0+255),f,b
 36448                           
 36449                           ;usb_device_msd.c: 918: }
 36450  00C1DA  D01E               	goto	u12650
 36451  00C1DC                     l662:
 36452                           
 36453                           ; BSR set to: 1
 36454                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 36455                           
 36456                           ; BSR set to: 1
 36457  00C1DC  0E00               	movlw	0
 36458  00C1DE  0100               	movlb	0	; () banked
 36459  00C1E0  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 36460  00C1E2  D016               	goto	l664
 36461  00C1E4                     
 36462                           ; BSR set to: 0
 36463                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 36464                           
 36465                           ; BSR set to: 0
 36466  00C1E4  0101               	movlb	1	; () banked
 36467  00C1E6  513A               	movf	_TransferLength& (0+255),w,b
 36468  00C1E8  113B               	iorwf	(_TransferLength+1)& (0+255),w,b
 36469  00C1EA  B4D8               	btfsc	status,2,c
 36470  00C1EC  D004               	goto	l666
 36471                           
 36472                           ; BSR set to: 1
 36473                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 36474  00C1EE  073A               	decf	_TransferLength& (0+255),f,b
 36475  00C1F0  A0D8               	btfss	status,0,c
 36476  00C1F2  073B               	decf	(_TransferLength+1)& (0+255),f,b
 36477                           
 36478                           ;usb_device_msd.c: 932: }
 36479  00C1F4  D00B               	goto	l667
 36480  00C1F6                     l666:
 36481                           
 36482                           ; BSR set to: 1
 36483                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 36484                           
 36485                           ; BSR set to: 1
 36486  00C1F6  0100               	movlb	0	; () banked
 36487  00C1F8  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 36488  00C1FA  0D01               	mullw	1
 36489  00C1FC  0E00               	movlw	0
 36490  00C1FE  24F3               	addwf	prodl,w,c
 36491  00C200  6ED9               	movwf	fsr2l,c
 36492  00C202  0E06               	movlw	6
 36493  00C204  20F4               	addwfc	prodh,w,c
 36494  00C206  6EDA               	movwf	fsr2h,c
 36495  00C208  0E00               	movlw	0
 36496  00C20A  6EDF               	movwf	indf2,c
 36497  00C20C                     l667:
 36498                           
 36499                           ; BSR set to: 0
 36500  00C20C  0100               	movlb	0	; () banked
 36501  00C20E  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 36502  00C210                     l664:
 36503                           
 36504                           ; BSR set to: 0
 36505                           
 36506                           ; BSR set to: 0
 36507  00C210  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 36508  00C212  5DA6               	subwf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 36509  00C214  A0D8               	btfss	status,0,c
 36510  00C216  D7E6               	goto	l665
 36511  00C218                     u12650:
 36512                           
 36513                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 36514                           
 36515                           ; BSR set to: 0
 36516                           
 36517                           ; BSR set to: 0
 36518  00C218  0E01               	movlw	1
 36519  00C21A  0100               	movlb	0	; () banked
 36520  00C21C  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 36521  00C21E  0E00               	movlw	0
 36522  00C220  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 36523  00C222  0E06               	movlw	6
 36524  00C224  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 36525  00C226  C09D  F063         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 36526  00C22A  0E02               	movlw	2
 36527  00C22C  EC15  F08B         	call	_USBTransferOnePacket
 36528  00C230  C060  F13E         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 36529  00C234  C061  F13F         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 36530                           
 36531                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 36532  00C238  0102               	movlb	2	; () banked
 36533  00C23A  5108               	movf	(_gblCBW+8)& (0+255),w,b
 36534  00C23C  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 36535  00C23E  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 36536  00C240  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 36537  00C242  A4D8               	btfss	status,2,c
 36538  00C244  0012               	return	
 36539                           
 36540                           ; BSR set to: 2
 36541                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 36542  00C246  0101               	movlb	1	; () banked
 36543  00C248  6956               	setf	_MSDCommandState& (0+255),b
 36544                           
 36545                           ; BSR set to: 1
 36546                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 36547                           
 36548                           ; BSR set to: 1
 36549                           
 36550                           ;usb_device_msd.c: 949: break;
 36551  00C24A  0012               	return	
 36552  00C24C                     
 36553                           ; BSR set to: 1
 36554                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 36555                           
 36556                           ; BSR set to: 1
 36557                           
 36558                           ;usb_device_msd.c: 954: default:
 36559                           
 36560                           ; BSR set to: 1
 36561  00C24C  0E7F               	movlw	127
 36562  00C24E  EC5B  F087         	call	_MSDErrorHandler
 36563                           
 36564                           ;usb_device_msd.c: 960: }
 36565                           
 36566                           ;usb_device_msd.c: 959: break;
 36567  00C252  0012               	return	
 36568  00C254                     l630:
 36569  00C254  0101               	movlb	1	; () banked
 36570  00C256  5156               	movf	_MSDCommandState& (0+255),w,b
 36571                           
 36572                           ; Switch size 1, requested type "space"
 36573                           ; Number of cases is 12, Range of values is 0 to 254
 36574                           ; switch strategies available:
 36575                           ; Name         Instructions Cycles
 36576                           ; simple_byte           37    19 (average)
 36577                           ;	Chosen strategy is simple_byte
 36578  00C258  0A00               	xorlw	0	; case 0
 36579  00C25A  B4D8               	btfsc	status,2,c
 36580  00C25C  D74E               	goto	l650
 36581  00C25E  0A03               	xorlw	3	; case 3
 36582  00C260  B4D8               	btfsc	status,2,c
 36583  00C262  D6C9               	goto	l640
 36584  00C264  0A11               	xorlw	17	; case 18
 36585  00C266  B4D8               	btfsc	status,2,c
 36586  00C268  D634               	goto	l636
 36587  00C26A  0A08               	xorlw	8	; case 26
 36588  00C26C  B4D8               	btfsc	status,2,c
 36589  00C26E  D6F2               	goto	l644
 36590  00C270  0A01               	xorlw	1	; case 27
 36591  00C272  B4D8               	btfsc	status,2,c
 36592  00C274  D76B               	goto	l654
 36593  00C276  0A05               	xorlw	5	; case 30
 36594  00C278  B4D8               	btfsc	status,2,c
 36595  00C27A  D728               	goto	l649
 36596  00C27C  0A3B               	xorlw	59	; case 37
 36597  00C27E  B4D8               	btfsc	status,2,c
 36598  00C280  D657               	goto	l639
 36599  00C282  0A0D               	xorlw	13	; case 40
 36600  00C284  B4D8               	btfsc	status,2,c
 36601  00C286  D615               	goto	l631
 36602  00C288  0A02               	xorlw	2	; case 42
 36603  00C28A  B4D8               	btfsc	status,2,c
 36604  00C28C  D61A               	goto	l634
 36605  00C28E  0A05               	xorlw	5	; case 47
 36606  00C290  B4D8               	btfsc	status,2,c
 36607  00C292  D75C               	goto	l654
 36608  00C294  0AD2               	xorlw	210	; case 253
 36609  00C296  B4D8               	btfsc	status,2,c
 36610  00C298  D765               	goto	l656
 36611  00C29A  0A03               	xorlw	3	; case 254
 36612  00C29C  D7D7               	goto	l670
 36613  00C29E                     __end_of_MSDProcessCommandMediaPresent:
 36614                           	opt stack 0
 36615                           tosu	equ	0xFFF
 36616                           tosh	equ	0xFFE
 36617                           tosl	equ	0xFFD
 36618                           pclath	equ	0xFFA
 36619                           tblptru	equ	0xFF8
 36620                           tblptrh	equ	0xFF7
 36621                           tblptrl	equ	0xFF6
 36622                           tablat	equ	0xFF5
 36623                           prodh	equ	0xFF4
 36624                           prodl	equ	0xFF3
 36625                           intcon	equ	0xFF2
 36626                           postinc0	equ	0xFEE
 36627                           wreg	equ	0xFE8
 36628                           indf1	equ	0xFE7
 36629                           postinc1	equ	0xFE6
 36630                           postdec1	equ	0xFE5
 36631                           plusw1	equ	0xFE3
 36632                           fsr1h	equ	0xFE2
 36633                           fsr1l	equ	0xFE1
 36634                           indf2	equ	0xFDF
 36635                           postinc2	equ	0xFDE
 36636                           postdec2	equ	0xFDD
 36637                           plusw2	equ	0xFDB
 36638                           fsr2h	equ	0xFDA
 36639                           fsr2l	equ	0xFD9
 36640                           status	equ	0xFD8
 36641                           
 36642 ;; *************** function _MSDWriteHandler *****************
 36643 ;; Defined at:
 36644 ;;		line 1188 in file "usb_device_msd.c"
 36645 ;; Parameters:    Size  Location     Type
 36646 ;;		None
 36647 ;; Auto vars:     Size  Location     Type
 36648 ;;		None
 36649 ;; Return value:  Size  Location     Type
 36650 ;;                  1    wreg      unsigned char 
 36651 ;; Registers used:
 36652 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 36653 ;; Tracked objects:
 36654 ;;		On entry : 0/0
 36655 ;;		On exit  : 0/0
 36656 ;;		Unchanged: 0/0
 36657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36660 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36661 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36662 ;;Total ram usage:        5 bytes
 36663 ;; Hardware stack levels used:    1
 36664 ;; Hardware stack levels required when called:   16
 36665 ;; This function calls:
 36666 ;;		_ExternalFlash_SectorWrite
 36667 ;;		_ExternalFlash_WriteProtectStateGet
 36668 ;;		_MSDCheckForErrorCases
 36669 ;;		_USBStallEndpoint
 36670 ;;		_USBTransferOnePacket
 36671 ;; This function is called by:
 36672 ;;		_MSDProcessCommandMediaPresent
 36673 ;; This function uses a non-reentrant model
 36674 ;;
 36675                           
 36676                           	psect	text137
 36677  00CCE4                     __ptext137:
 36678                           	opt stack 0
 36679  00CCE4                     _MSDWriteHandler:
 36680                           	opt stack 10
 36681                           
 36682                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 36683                           
 36684                           ;incstack = 0
 36685  00CCE4  D160               	goto	l700
 36686  00CCE6                     l701:
 36687                           
 36688                           ; BSR set to: 1
 36689                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 36690  00CCE6  C211  F126         	movff	_gblCBW+17,_LBA+3
 36691                           
 36692                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 36693  00CCEA  C212  F125         	movff	_gblCBW+18,_LBA+2
 36694                           
 36695                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 36696  00CCEE  C213  F124         	movff	_gblCBW+19,_LBA+1
 36697                           
 36698                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 36699  00CCF2  C214  F123         	movff	_gblCBW+20,_LBA
 36700                           
 36701                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 36702  00CCF6  C216  F13B         	movff	_gblCBW+22,_TransferLength+1
 36703                           
 36704                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 36705  00CCFA  C217  F13A         	movff	_gblCBW+23,_TransferLength
 36706                           
 36707                           ; BSR set to: 1
 36708                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 36709  00CCFE  513A               	movf	_TransferLength& (0+255),w,b
 36710  00CD00  0100               	movlb	0	; () banked
 36711  00CD02  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 36712  00CD04  0101               	movlb	1	; () banked
 36713  00CD06  513B               	movf	(_TransferLength+1)& (0+255),w,b
 36714  00CD08  0100               	movlb	0	; () banked
 36715  00CD0A  6F90               	movwf	(??_MSDWriteHandler+1)& (0+255),b
 36716  00CD0C  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 36717  00CD0E  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 36718  00CD10  0E09               	movlw	9
 36719  00CD12                     u11405:
 36720  00CD12  90D8               	bcf	status,0,c
 36721  00CD14  378F               	rlcf	??_MSDWriteHandler& (0+255),f,b
 36722  00CD16  3790               	rlcf	(??_MSDWriteHandler+1)& (0+255),f,b
 36723  00CD18  3791               	rlcf	(??_MSDWriteHandler+2)& (0+255),f,b
 36724  00CD1A  3792               	rlcf	(??_MSDWriteHandler+3)& (0+255),f,b
 36725  00CD1C  2EE8               	decfsz	wreg,f,c
 36726  00CD1E  D7F9               	goto	u11405
 36727  00CD20  C08F  F06A         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 36728  00CD24  C090  F06B         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 36729  00CD28  C091  F06C         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 36730  00CD2C  C092  F06D         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 36731  00CD30  ECE8  F087         	call	_MSDCheckForErrorCases	;wreg free
 36732  00CD34  0900               	iorlw	0
 36733  00CD36  A4D8               	btfss	status,2,c
 36734  00CD38  D148               	goto	l703
 36735                           
 36736                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 36737                           
 36738                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 36739  00CD3A  C2B3  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 36740  00CD3E  C2B4  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 36741  00CD42  EE22  F0AD         	lfsr	2,_LUN+15
 36742  00CD46  D801               	call	u11428
 36743  00CD48  D00A               	goto	u11429
 36744  00CD4A                     u11428:
 36745  00CD4A  0005               	push	
 36746  00CD4C  6EFA               	movwf	pclath,c
 36747  00CD4E  50DE               	movf	postinc2,w,c
 36748  00CD50  6EFD               	movwf	tosl,c
 36749  00CD52  50DE               	movf	postinc2,w,c
 36750  00CD54  6EFE               	movwf	tosh,c
 36751  00CD56  50DE               	movf	postinc2,w,c
 36752  00CD58  6EFF               	movwf	tosu,c
 36753  00CD5A  50FA               	movf	pclath,w,c
 36754  00CD5C  0012               	return		;indir
 36755  00CD5E                     u11429:
 36756  00CD5E  0900               	iorlw	0
 36757  00CD60  B4D8               	btfsc	status,2,c
 36758  00CD62  D017               	goto	l704
 36759                           
 36760                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 36761  00CD64  0E01               	movlw	1
 36762  00CD66  010D               	movlb	13	; () banked
 36763  00CD68  6F8C               	movwf	140,b	;volatile
 36764                           
 36765                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 36766  00CD6A  0102               	movlb	2	; () banked
 36767  00CD6C  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 36768  00CD6E  0BF0               	andlw	-16
 36769  00CD70  0907               	iorlw	7
 36770  00CD72  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 36771                           
 36772                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 36773  00CD74  0E27               	movlw	39
 36774  00CD76  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 36775                           
 36776                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 36777  00CD78  0E00               	movlw	0
 36778  00CD7A  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 36779                           
 36780                           ; BSR set to: 2
 36781                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 36782  00CD7C  0E00               	movlw	0
 36783  00CD7E  0100               	movlb	0	; () banked
 36784  00CD80  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 36785  00CD82  0E02               	movlw	2
 36786  00CD84  EC90  F08A         	call	_USBStallEndpoint
 36787                           
 36788                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 36789  00CD88  0E00               	movlw	0
 36790  00CD8A  0101               	movlb	1	; () banked
 36791  00CD8C  6F54               	movwf	_MSDWriteState& (0+255),b
 36792                           
 36793                           ; BSR set to: 1
 36794                           ;usb_device_msd.c: 1228: return MSDWriteState;
 36795  00CD8E  5154               	movf	_MSDWriteState& (0+255),w,b
 36796                           
 36797                           ; BSR set to: 1
 36798  00CD90  0012               	return	
 36799  00CD92                     l704:
 36800                           
 36801                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 36802                           
 36803                           ; BSR set to: 1
 36804  00CD92  0E01               	movlw	1
 36805  00CD94  0101               	movlb	1	; () banked
 36806  00CD96  6F57               	movwf	_MSD_State& (0+255),b
 36807  00CD98                     
 36808                           ; BSR set to: 1
 36809                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 36810                           
 36811                           ; BSR set to: 1
 36812  00CD98  513A               	movf	_TransferLength& (0+255),w,b
 36813  00CD9A  113B               	iorwf	(_TransferLength+1)& (0+255),w,b
 36814  00CD9C  A4D8               	btfss	status,2,c
 36815  00CD9E  D002               	goto	l707
 36816                           
 36817                           ; BSR set to: 1
 36818                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 36819  00CDA0  0E00               	movlw	0
 36820  00CDA2  D0FF               	goto	L39
 36821  00CDA4                     l707:
 36822                           
 36823                           ; BSR set to: 1
 36824                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 36825                           
 36826                           ; BSR set to: 1
 36827  00CDA4  0E03               	movlw	3
 36828  00CDA6  6F54               	movwf	_MSDWriteState& (0+255),b
 36829                           
 36830                           ; BSR set to: 1
 36831                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 36832  00CDA8  0E00               	movlw	0
 36833  00CDAA  6F42               	movwf	_ptrNextData& (0+255),b
 36834  00CDAC  0E06               	movlw	6
 36835  00CDAE  6F43               	movwf	(_ptrNextData+1)& (0+255),b
 36836                           
 36837                           ; BSR set to: 1
 36838                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 36839  00CDB0  0E00               	movlw	0
 36840  00CDB2  010D               	movlb	13	; () banked
 36841  00CDB4  6F88               	movwf	136,b	;volatile
 36842  00CDB6  0E02               	movlw	2
 36843  00CDB8  6F89               	movwf	137,b	;volatile
 36844  00CDBA  0E00               	movlw	0
 36845  00CDBC  6F8A               	movwf	138,b	;volatile
 36846  00CDBE  0E00               	movlw	0
 36847  00CDC0  6F8B               	movwf	139,b	;volatile
 36848  00CDC2                     l708:
 36849                           
 36850                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 36851  00CDC2  010D               	movlb	13	; () banked
 36852  00CDC4  5188               	movf	136,w,b	;volatile
 36853  00CDC6  1189               	iorwf	137,w,b	;volatile
 36854  00CDC8  118A               	iorwf	138,w,b	;volatile
 36855  00CDCA  118B               	iorwf	139,w,b	;volatile
 36856  00CDCC  B4D8               	btfsc	status,2,c
 36857  00CDCE  D01F               	goto	l709
 36858                           
 36859                           ; BSR set to: 13
 36860                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 36861  00CDD0  0101               	movlb	1	; () banked
 36862  00CDD2  5140               	movf	_USBMSDOutHandle& (0+255),w,b
 36863  00CDD4  1141               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 36864  00CDD6  B4D8               	btfsc	status,2,c
 36865  00CDD8  D006               	goto	l710
 36866                           
 36867                           ; BSR set to: 1
 36868  00CDDA  C140  FFD9         	movff	_USBMSDOutHandle,fsr2l
 36869  00CDDE  C141  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 36870  00CDE2  BEDF               	btfsc	indf2,7,c
 36871  00CDE4  D0F2               	goto	l703
 36872  00CDE6                     l710:
 36873                           
 36874                           ; BSR set to: 1
 36875                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 36876                           
 36877                           ; BSR set to: 1
 36878  00CDE6  0E00               	movlw	0
 36879  00CDE8  0100               	movlb	0	; () banked
 36880  00CDEA  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 36881  00CDEC  C142  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 36882  00CDF0  C143  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 36883  00CDF4  0E40               	movlw	64
 36884  00CDF6  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 36885  00CDF8  0E02               	movlw	2
 36886  00CDFA  EC15  F08B         	call	_USBTransferOnePacket
 36887  00CDFE  C060  F140         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 36888  00CE02  C061  F141         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 36889                           
 36890                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 36891  00CE06  0E04               	movlw	4
 36892  00CE08  0101               	movlb	1	; () banked
 36893  00CE0A  6F54               	movwf	_MSDWriteState& (0+255),b
 36894                           
 36895                           ;usb_device_msd.c: 1260: }
 36896  00CE0C  D023               	goto	l711
 36897  00CE0E                     l709:
 36898                           
 36899                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 36900                           
 36901                           ; BSR set to: 1
 36902  00CE0E  C2B3  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 36903  00CE12  C2B4  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 36904  00CE16  EE22  F0AD         	lfsr	2,_LUN+15
 36905  00CE1A  D801               	call	u11488
 36906  00CE1C  D00A               	goto	u11489
 36907  00CE1E                     u11488:
 36908  00CE1E  0005               	push	
 36909  00CE20  6EFA               	movwf	pclath,c
 36910  00CE22  50DE               	movf	postinc2,w,c
 36911  00CE24  6EFD               	movwf	tosl,c
 36912  00CE26  50DE               	movf	postinc2,w,c
 36913  00CE28  6EFE               	movwf	tosh,c
 36914  00CE2A  50DE               	movf	postinc2,w,c
 36915  00CE2C  6EFF               	movwf	tosu,c
 36916  00CE2E  50FA               	movf	pclath,w,c
 36917  00CE30  0012               	return		;indir
 36918  00CE32                     u11489:
 36919  00CE32  0900               	iorlw	0
 36920  00CE34  B4D8               	btfsc	status,2,c
 36921  00CE36  D00C               	goto	l712
 36922                           
 36923                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 36924  00CE38  0E01               	movlw	1
 36925  00CE3A  010D               	movlb	13	; () banked
 36926  00CE3C  6F8C               	movwf	140,b	;volatile
 36927                           
 36928                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 36929  00CE3E  0102               	movlb	2	; () banked
 36930  00CE40  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 36931  00CE42  0BF0               	andlw	-16
 36932  00CE44  0902               	iorlw	2
 36933  00CE46  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 36934                           
 36935                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 36936  00CE48  0E27               	movlw	39
 36937  00CE4A  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 36938                           
 36939                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 36940  00CE4C  0E00               	movlw	0
 36941  00CE4E  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 36942  00CE50                     l712:
 36943                           
 36944                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 36945  00CE50  0E02               	movlw	2
 36946  00CE52  D0A6               	goto	L76
 36947  00CE54                     l711:
 36948                           
 36949                           ; BSR set to: 1
 36950                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 36951                           
 36952                           ; BSR set to: 1
 36953                           
 36954                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 36955                           
 36956                           ; BSR set to: 1
 36957  00CE54  5140               	movf	_USBMSDOutHandle& (0+255),w,b
 36958  00CE56  1141               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 36959  00CE58  B4D8               	btfsc	status,2,c
 36960  00CE5A  D006               	goto	l714
 36961                           
 36962                           ; BSR set to: 1
 36963  00CE5C  C140  FFD9         	movff	_USBMSDOutHandle,fsr2l
 36964  00CE60  C141  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 36965  00CE64  BEDF               	btfsc	indf2,7,c
 36966  00CE66  D0B1               	goto	l703
 36967  00CE68                     l714:
 36968                           
 36969                           ; BSR set to: 1
 36970                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 36971                           
 36972                           ; BSR set to: 1
 36973  00CE68  EE20 F001          	lfsr	2,1
 36974  00CE6C  5140               	movf	_USBMSDOutHandle& (0+255),w,b
 36975  00CE6E  26D9               	addwf	fsr2l,f,c
 36976  00CE70  5141               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 36977  00CE72  22DA               	addwfc	fsr2h,f,c
 36978  00CE74  50DF               	movf	indf2,w,c
 36979  00CE76  0100               	movlb	0	; () banked
 36980  00CE78  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 36981  00CE7A  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 36982  00CE7E  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 36983  00CE80  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 36984  00CE82  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 36985  00CE84  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 36986  00CE86  0102               	movlb	2	; () banked
 36987  00CE88  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 36988  00CE8A  0100               	movlb	0	; () banked
 36989  00CE8C  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 36990  00CE8E  0102               	movlb	2	; () banked
 36991  00CE90  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 36992  00CE92  0100               	movlb	0	; () banked
 36993  00CE94  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 36994  00CE96  0102               	movlb	2	; () banked
 36995  00CE98  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 36996  00CE9A  0100               	movlb	0	; () banked
 36997  00CE9C  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 36998  00CE9E  0102               	movlb	2	; () banked
 36999  00CEA0  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 37000                           
 37001                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 37002  00CEA2  0101               	movlb	1	; () banked
 37003  00CEA4  EE20 F001          	lfsr	2,1
 37004  00CEA8  5140               	movf	_USBMSDOutHandle& (0+255),w,b
 37005  00CEAA  26D9               	addwf	fsr2l,f,c
 37006  00CEAC  5141               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 37007  00CEAE  22DA               	addwfc	fsr2h,f,c
 37008  00CEB0  50DF               	movf	indf2,w,c
 37009  00CEB2  0100               	movlb	0	; () banked
 37010  00CEB4  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 37011  00CEB6  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 37012  00CEBA  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 37013  00CEBC  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 37014  00CEBE  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 37015  00CEC0  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 37016  00CEC2  010D               	movlb	13	; () banked
 37017  00CEC4  5F88               	subwf	136,f,b	;volatile
 37018  00CEC6  0100               	movlb	0	; () banked
 37019  00CEC8  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 37020  00CECA  010D               	movlb	13	; () banked
 37021  00CECC  5B89               	subwfb	137,f,b	;volatile
 37022  00CECE  0100               	movlb	0	; () banked
 37023  00CED0  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 37024  00CED2  010D               	movlb	13	; () banked
 37025  00CED4  5B8A               	subwfb	138,f,b	;volatile
 37026  00CED6  0100               	movlb	0	; () banked
 37027  00CED8  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 37028  00CEDA  010D               	movlb	13	; () banked
 37029  00CEDC  5B8B               	subwfb	139,f,b	;volatile
 37030                           
 37031                           ; BSR set to: 13
 37032                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 37033  00CEDE  0E40               	movlw	64
 37034  00CEE0  0101               	movlb	1	; () banked
 37035  00CEE2  2742               	addwf	_ptrNextData& (0+255),f,b
 37036  00CEE4  0E00               	movlw	0
 37037  00CEE6  2343               	addwfc	(_ptrNextData+1)& (0+255),f,b
 37038                           
 37039                           ; BSR set to: 1
 37040                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 37041  00CEE8  0E03               	movlw	3
 37042  00CEEA  D05B               	goto	L39
 37043  00CEEC                     
 37044                           ; BSR set to: 1
 37045                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 37046                           
 37047                           ; BSR set to: 1
 37048  00CEEC  010D               	movlb	13	; () banked
 37049  00CEEE  518C               	movf	140,w,b	;volatile
 37050  00CEF0  A4D8               	btfss	status,2,c
 37051  00CEF2  D040               	goto	l719
 37052                           
 37053                           ; BSR set to: 13
 37054                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 37055  00CEF4  C2B3  F084         	movff	_LUN+21,ExternalFlash_SectorWrite@config
 37056  00CEF8  C2B4  F085         	movff	_LUN+22,ExternalFlash_SectorWrite@config+1
 37057  00CEFC  C123  F086         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 37058  00CF00  C124  F087         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 37059  00CF04  C125  F088         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 37060  00CF08  C126  F089         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 37061  00CF0C  0E00               	movlw	0
 37062  00CF0E  0100               	movlb	0	; () banked
 37063  00CF10  6F8A               	movwf	ExternalFlash_SectorWrite@buffer& (0+255),b
 37064  00CF12  0E06               	movlw	6
 37065  00CF14  6F8B               	movwf	(ExternalFlash_SectorWrite@buffer+1)& (0+255),b
 37066  00CF16  0101               	movlb	1	; () banked
 37067  00CF18  5123               	movf	_LBA& (0+255),w,b
 37068  00CF1A  1124               	iorwf	(_LBA+1)& (0+255),w,b
 37069  00CF1C  1125               	iorwf	(_LBA+2)& (0+255),w,b
 37070  00CF1E  1126               	iorwf	(_LBA+3)& (0+255),w,b
 37071  00CF20  A4D8               	btfss	status,2,c
 37072  00CF22  D002               	goto	u11530
 37073  00CF24  0E01               	movlw	1
 37074  00CF26  D001               	goto	u11540
 37075  00CF28                     u11530:
 37076  00CF28  0E00               	movlw	0
 37077  00CF2A                     u11540:
 37078  00CF2A  0100               	movlb	0	; () banked
 37079  00CF2C  6F8C               	movwf	ExternalFlash_SectorWrite@allowWriteToZero& (0+255),b
 37080  00CF2E  EE22  F0B0         	lfsr	2,_LUN+18
 37081  00CF32  D801               	call	u11558
 37082  00CF34  D00A               	goto	u11559
 37083  00CF36                     u11558:
 37084  00CF36  0005               	push	
 37085  00CF38  6EFA               	movwf	pclath,c
 37086  00CF3A  50DE               	movf	postinc2,w,c
 37087  00CF3C  6EFD               	movwf	tosl,c
 37088  00CF3E  50DE               	movf	postinc2,w,c
 37089  00CF40  6EFE               	movwf	tosh,c
 37090  00CF42  50DE               	movf	postinc2,w,c
 37091  00CF44  6EFF               	movwf	tosu,c
 37092  00CF46  50FA               	movf	pclath,w,c
 37093  00CF48  0012               	return		;indir
 37094  00CF4A                     u11559:
 37095  00CF4A  06E8               	decf	wreg,f,c
 37096  00CF4C  B4D8               	btfsc	status,2,c
 37097  00CF4E  D012               	goto	l719
 37098                           
 37099                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 37100  00CF50  0E64               	movlw	100
 37101  00CF52  0101               	movlb	1	; () banked
 37102  00CF54  6153               	cpfslt	_MSDRetryAttempt& (0+255),b
 37103  00CF56  D002               	goto	l718
 37104                           
 37105                           ; BSR set to: 1
 37106                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 37107  00CF58  2B53               	incf	_MSDRetryAttempt& (0+255),f,b
 37108                           
 37109                           ;usb_device_msd.c: 1314: break;
 37110  00CF5A  D037               	goto	l703
 37111  00CF5C                     l718:
 37112                           
 37113                           ; BSR set to: 1
 37114                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 37115                           
 37116                           ; BSR set to: 1
 37117  00CF5C  0E01               	movlw	1
 37118  00CF5E  010D               	movlb	13	; () banked
 37119  00CF60  6F8C               	movwf	140,b	;volatile
 37120                           
 37121                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 37122  00CF62  0102               	movlb	2	; () banked
 37123  00CF64  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 37124  00CF66  0BF0               	andlw	-16
 37125  00CF68  0903               	iorlw	3
 37126  00CF6A  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 37127                           
 37128                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 37129  00CF6C  0E00               	movlw	0
 37130  00CF6E  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 37131                           
 37132                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 37133  00CF70  0E00               	movlw	0
 37134  00CF72  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 37135  00CF74                     l719:
 37136                           
 37137                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 37138                           
 37139                           ; BSR set to: 2
 37140                           
 37141                           ; BSR set to: 2
 37142                           
 37143                           ; BSR set to: 2
 37144  00CF74  0E01               	movlw	1
 37145  00CF76  0101               	movlb	1	; () banked
 37146  00CF78  2723               	addwf	_LBA& (0+255),f,b
 37147  00CF7A  0E00               	movlw	0
 37148  00CF7C  2324               	addwfc	(_LBA+1)& (0+255),f,b
 37149  00CF7E  2325               	addwfc	(_LBA+2)& (0+255),f,b
 37150  00CF80  2326               	addwfc	(_LBA+3)& (0+255),f,b
 37151                           
 37152                           ; BSR set to: 1
 37153                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 37154  00CF82  073A               	decf	_TransferLength& (0+255),f,b
 37155  00CF84  A0D8               	btfss	status,0,c
 37156  00CF86  073B               	decf	(_TransferLength+1)& (0+255),f,b
 37157                           
 37158                           ; BSR set to: 1
 37159                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 37160  00CF88  0E01               	movlw	1
 37161  00CF8A  D00B               	goto	L39
 37162  00CF8C                     
 37163                           ; BSR set to: 1
 37164                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 37165                           
 37166                           ; BSR set to: 1
 37167  00CF8C  0E02               	movlw	2
 37168  00CF8E  010D               	movlb	13	; () banked
 37169  00CF90  6F8C               	movwf	140,b	;volatile
 37170                           
 37171                           ; BSR set to: 13
 37172                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 37173  00CF92  0E00               	movlw	0
 37174  00CF94  0100               	movlb	0	; () banked
 37175  00CF96  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 37176  00CF98  0E02               	movlw	2
 37177  00CF9A  EC90  F08A         	call	_USBStallEndpoint
 37178                           
 37179                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 37180  00CF9E  0E00               	movlw	0
 37181  00CFA0                     L76:
 37182  00CFA0  0101               	movlb	1	; () banked
 37183  00CFA2                     L39:
 37184  00CFA2  6F54               	movwf	_MSDWriteState& (0+255),b
 37185                           
 37186                           ; BSR set to: 1
 37187                           ;usb_device_msd.c: 1345: }
 37188                           
 37189                           ;usb_device_msd.c: 1344: break;
 37190  00CFA4  D012               	goto	l703
 37191  00CFA6                     l700:
 37192                           
 37193                           ; BSR set to: 1
 37194  00CFA6  0101               	movlb	1	; () banked
 37195  00CFA8  5154               	movf	_MSDWriteState& (0+255),w,b
 37196                           
 37197                           ; Switch size 1, requested type "space"
 37198                           ; Number of cases is 5, Range of values is 0 to 4
 37199                           ; switch strategies available:
 37200                           ; Name         Instructions Cycles
 37201                           ; simple_byte           16     9 (average)
 37202                           ;	Chosen strategy is simple_byte
 37203  00CFAA  0A00               	xorlw	0	; case 0
 37204  00CFAC  B4D8               	btfsc	status,2,c
 37205  00CFAE  D69B               	goto	l701
 37206  00CFB0  0A01               	xorlw	1	; case 1
 37207  00CFB2  B4D8               	btfsc	status,2,c
 37208  00CFB4  D6F1               	goto	l706
 37209  00CFB6  0A03               	xorlw	3	; case 2
 37210  00CFB8  B4D8               	btfsc	status,2,c
 37211  00CFBA  D798               	goto	l715
 37212  00CFBC  0A01               	xorlw	1	; case 3
 37213  00CFBE  B4D8               	btfsc	status,2,c
 37214  00CFC0  D700               	goto	l708
 37215  00CFC2  0A07               	xorlw	7	; case 4
 37216  00CFC4  B4D8               	btfsc	status,2,c
 37217  00CFC6  D746               	goto	l711
 37218  00CFC8  D7E1               	goto	l720
 37219  00CFCA                     l703:
 37220                           
 37221                           ;usb_device_msd.c: 1347: return MSDWriteState;
 37222                           
 37223                           ; BSR set to: 1
 37224  00CFCA  0101               	movlb	1	; () banked
 37225  00CFCC  5154               	movf	_MSDWriteState& (0+255),w,b
 37226  00CFCE  0012               	return	
 37227  00CFD0                     __end_of_MSDWriteHandler:
 37228                           	opt stack 0
 37229                           tosu	equ	0xFFF
 37230                           tosh	equ	0xFFE
 37231                           tosl	equ	0xFFD
 37232                           pclath	equ	0xFFA
 37233                           tblptru	equ	0xFF8
 37234                           tblptrh	equ	0xFF7
 37235                           tblptrl	equ	0xFF6
 37236                           tablat	equ	0xFF5
 37237                           prodh	equ	0xFF4
 37238                           prodl	equ	0xFF3
 37239                           intcon	equ	0xFF2
 37240                           postinc0	equ	0xFEE
 37241                           wreg	equ	0xFE8
 37242                           indf1	equ	0xFE7
 37243                           postinc1	equ	0xFE6
 37244                           postdec1	equ	0xFE5
 37245                           plusw1	equ	0xFE3
 37246                           fsr1h	equ	0xFE2
 37247                           fsr1l	equ	0xFE1
 37248                           indf2	equ	0xFDF
 37249                           postinc2	equ	0xFDE
 37250                           postdec2	equ	0xFDD
 37251                           plusw2	equ	0xFDB
 37252                           fsr2h	equ	0xFDA
 37253                           fsr2l	equ	0xFD9
 37254                           status	equ	0xFD8
 37255                           
 37256 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 37257 ;; Defined at:
 37258 ;;		line 34 in file "external_flash.c"
 37259 ;; Parameters:    Size  Location     Type
 37260 ;;  config          2    0[BANK0 ] PTR void 
 37261 ;;		 -> NULL(0), 
 37262 ;; Auto vars:     Size  Location     Type
 37263 ;;		None
 37264 ;; Return value:  Size  Location     Type
 37265 ;;                  1    wreg      unsigned char 
 37266 ;; Registers used:
 37267 ;;		wreg
 37268 ;; Tracked objects:
 37269 ;;		On entry : 0/0
 37270 ;;		On exit  : 0/0
 37271 ;;		Unchanged: 0/0
 37272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37273 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37276 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37277 ;;Total ram usage:        2 bytes
 37278 ;; Hardware stack levels used:    1
 37279 ;; Hardware stack levels required when called:   10
 37280 ;; This function calls:
 37281 ;;		Nothing
 37282 ;; This function is called by:
 37283 ;;		_MSDWriteHandler
 37284 ;;		_MSDProcessCommandMediaPresent
 37285 ;; This function uses a non-reentrant model
 37286 ;;
 37287                           
 37288                           	psect	text138
 37289  0164B6                     __ptext138:
 37290                           	opt stack 0
 37291  0164B6                     _ExternalFlash_WriteProtectStateGet:
 37292                           	opt stack 15
 37293                           
 37294                           ;external_flash.c: 37: return 0;
 37295                           
 37296                           ; BSR set to: 1
 37297                           ;incstack = 0
 37298  0164B6  0E00               	movlw	0
 37299  0164B8  0012               	return	
 37300  0164BA                     __end_of_ExternalFlash_WriteProtectStateGet:
 37301                           	opt stack 0
 37302                           tosu	equ	0xFFF
 37303                           tosh	equ	0xFFE
 37304                           tosl	equ	0xFFD
 37305                           pclath	equ	0xFFA
 37306                           tblptru	equ	0xFF8
 37307                           tblptrh	equ	0xFF7
 37308                           tblptrl	equ	0xFF6
 37309                           tablat	equ	0xFF5
 37310                           prodh	equ	0xFF4
 37311                           prodl	equ	0xFF3
 37312                           intcon	equ	0xFF2
 37313                           postinc0	equ	0xFEE
 37314                           wreg	equ	0xFE8
 37315                           indf1	equ	0xFE7
 37316                           postinc1	equ	0xFE6
 37317                           postdec1	equ	0xFE5
 37318                           plusw1	equ	0xFE3
 37319                           fsr1h	equ	0xFE2
 37320                           fsr1l	equ	0xFE1
 37321                           indf2	equ	0xFDF
 37322                           postinc2	equ	0xFDE
 37323                           postdec2	equ	0xFDD
 37324                           plusw2	equ	0xFDB
 37325                           fsr2h	equ	0xFDA
 37326                           fsr2l	equ	0xFD9
 37327                           status	equ	0xFD8
 37328                           
 37329 ;; *************** function _ExternalFlash_SectorWrite *****************
 37330 ;; Defined at:
 37331 ;;		line 56 in file "external_flash.c"
 37332 ;; Parameters:    Size  Location     Type
 37333 ;;  config          2   36[BANK0 ] PTR void 
 37334 ;;		 -> NULL(0), 
 37335 ;;  sector_addr     4   38[BANK0 ] unsigned long 
 37336 ;;  buffer          2   42[BANK0 ] PTR unsigned char 
 37337 ;;		 -> msd_buffer(512), 
 37338 ;;  allowWriteTo    1   44[BANK0 ] unsigned char 
 37339 ;; Auto vars:     Size  Location     Type
 37340 ;;  page            2   45[BANK0 ] unsigned int 
 37341 ;; Return value:  Size  Location     Type
 37342 ;;                  1    wreg      unsigned char 
 37343 ;; Registers used:
 37344 ;;		wreg, status,2, status,0, cstack
 37345 ;; Tracked objects:
 37346 ;;		On entry : 0/0
 37347 ;;		On exit  : 0/0
 37348 ;;		Unchanged: 0/0
 37349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37350 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37351 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37353 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37354 ;;Total ram usage:       11 bytes
 37355 ;; Hardware stack levels used:    1
 37356 ;; Hardware stack levels required when called:   15
 37357 ;; This function calls:
 37358 ;;		_flash_sector_write
 37359 ;; This function is called by:
 37360 ;;		_MSDWriteHandler
 37361 ;; This function uses a non-reentrant model
 37362 ;;
 37363                           
 37364                           	psect	text139
 37365  015D84                     __ptext139:
 37366                           	opt stack 0
 37367  015D84                     _ExternalFlash_SectorWrite:
 37368                           	opt stack 10
 37369                           
 37370                           ;external_flash.c: 58: uint16_t page = (uint16_t) sector_addr;
 37371                           
 37372                           ;incstack = 0
 37373  015D84  C086  F08D         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 37374  015D88  C087  F08E         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 37375                           
 37376                           ;external_flash.c: 61: if(sector_addr >= 8192)
 37377  015D8C  0100               	movlb	0	; () banked
 37378  015D8E  5189               	movf	(ExternalFlash_SectorWrite@sector_addr+3)& (0+255),w,b
 37379  015D90  1188               	iorwf	(ExternalFlash_SectorWrite@sector_addr+2)& (0+255),w,b
 37380  015D92  E104               	bnz	u10970
 37381  015D94  0E20               	movlw	32
 37382  015D96  5D87               	subwf	(ExternalFlash_SectorWrite@sector_addr+1)& (0+255),w,b
 37383  015D98  A0D8               	btfss	status,0,c
 37384  015D9A  D002               	goto	l1714
 37385  015D9C                     u10970:
 37386                           
 37387                           ; BSR set to: 0
 37388                           ;external_flash.c: 62: {;external_flash.c: 63: return 0;
 37389  015D9C  0E00               	movlw	0
 37390                           
 37391                           ; BSR set to: 0
 37392  015D9E  0012               	return	
 37393  015DA0                     l1714:
 37394                           
 37395                           ; BSR set to: 0
 37396                           ;external_flash.c: 64: };external_flash.c: 67: flash_sector_write(page, buffer);
 37397                           
 37398                           ; BSR set to: 0
 37399  015DA0  C08D  F07F         	movff	ExternalFlash_SectorWrite@page,flash_sector_write@page
 37400  015DA4  C08E  F080         	movff	ExternalFlash_SectorWrite@page+1,flash_sector_write@page+1
 37401  015DA8  C08A  F081         	movff	ExternalFlash_SectorWrite@buffer,flash_sector_write@data
 37402  015DAC  C08B  F082         	movff	ExternalFlash_SectorWrite@buffer+1,flash_sector_write@data+1
 37403  015DB0  EC7C  F0AB         	call	_flash_sector_write	;wreg free
 37404                           
 37405                           ;external_flash.c: 69: return 1;
 37406  015DB4  0E01               	movlw	1
 37407  015DB6  0012               	return	
 37408  015DB8                     __end_of_ExternalFlash_SectorWrite:
 37409                           	opt stack 0
 37410                           tosu	equ	0xFFF
 37411                           tosh	equ	0xFFE
 37412                           tosl	equ	0xFFD
 37413                           pclath	equ	0xFFA
 37414                           tblptru	equ	0xFF8
 37415                           tblptrh	equ	0xFF7
 37416                           tblptrl	equ	0xFF6
 37417                           tablat	equ	0xFF5
 37418                           prodh	equ	0xFF4
 37419                           prodl	equ	0xFF3
 37420                           intcon	equ	0xFF2
 37421                           postinc0	equ	0xFEE
 37422                           wreg	equ	0xFE8
 37423                           indf1	equ	0xFE7
 37424                           postinc1	equ	0xFE6
 37425                           postdec1	equ	0xFE5
 37426                           plusw1	equ	0xFE3
 37427                           fsr1h	equ	0xFE2
 37428                           fsr1l	equ	0xFE1
 37429                           indf2	equ	0xFDF
 37430                           postinc2	equ	0xFDE
 37431                           postdec2	equ	0xFDD
 37432                           plusw2	equ	0xFDB
 37433                           fsr2h	equ	0xFDA
 37434                           fsr2l	equ	0xFD9
 37435                           status	equ	0xFD8
 37436                           
 37437 ;; *************** function _flash_sector_write *****************
 37438 ;; Defined at:
 37439 ;;		line 434 in file "flash.c"
 37440 ;; Parameters:    Size  Location     Type
 37441 ;;  page            2   31[BANK0 ] unsigned int 
 37442 ;;  data            2   33[BANK0 ] PTR unsigned char 
 37443 ;;		 -> buffer(512), msd_buffer(512), 
 37444 ;; Auto vars:     Size  Location     Type
 37445 ;;  match           1   35[BANK0 ] enum E7073
 37446 ;; Return value:  Size  Location     Type
 37447 ;;                  1    wreg      void 
 37448 ;; Registers used:
 37449 ;;		wreg, status,2, status,0, cstack
 37450 ;; Tracked objects:
 37451 ;;		On entry : 0/0
 37452 ;;		On exit  : 0/0
 37453 ;;		Unchanged: 0/0
 37454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37455 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37456 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37458 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37459 ;;Total ram usage:        5 bytes
 37460 ;; Hardware stack levels used:    1
 37461 ;; Hardware stack levels required when called:   14
 37462 ;; This function calls:
 37463 ;;		__flash_compare_page_to_buffer
 37464 ;;		__flash_write_page_from_buffer
 37465 ;;		__flash_write_to_buffer
 37466 ;; This function is called by:
 37467 ;;		_ExternalFlash_SectorWrite
 37468 ;;		__make_cluster_chain
 37469 ;;		_fat_restore_mbr_fbr
 37470 ;;		_fat_format
 37471 ;; This function uses a non-reentrant model
 37472 ;;
 37473                           
 37474                           	psect	text140
 37475  0156F8                     __ptext140:
 37476                           	opt stack 0
 37477  0156F8                     _flash_sector_write:
 37478                           	opt stack 13
 37479                           
 37480                           ;flash.c: 436: flashMatchResult_t match;;flash.c: 439: _flash_write_to_buffer(0, data, 5
      +                          12, FLASH_BUFFER_1);
 37481                           
 37482                           ;incstack = 0
 37483  0156F8  0E00               	movlw	0
 37484  0156FA  0100               	movlb	0	; () banked
 37485  0156FC  6F74               	movwf	(__flash_write_to_buffer@start+1)& (0+255),b
 37486  0156FE  0E00               	movlw	0
 37487  015700  6F73               	movwf	__flash_write_to_buffer@start& (0+255),b
 37488  015702  C081  F075         	movff	flash_sector_write@data,__flash_write_to_buffer@data
 37489  015706  C082  F076         	movff	flash_sector_write@data+1,__flash_write_to_buffer@data+1
 37490  01570A  0E02               	movlw	2
 37491  01570C  6F78               	movwf	(__flash_write_to_buffer@data_length+1)& (0+255),b
 37492  01570E  0E00               	movlw	0
 37493  015710  6F77               	movwf	__flash_write_to_buffer@data_length& (0+255),b
 37494  015712  0E00               	movlw	0
 37495  015714  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 37496  015716  ECDB  F0AA         	call	__flash_write_to_buffer	;wreg free
 37497                           
 37498                           ;flash.c: 442: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 37499  01571A  C07F  F073         	movff	flash_sector_write@page,__flash_compare_page_to_buffer@page
 37500  01571E  C080  F074         	movff	flash_sector_write@page+1,__flash_compare_page_to_buffer@page+1
 37501  015722  0E00               	movlw	0
 37502  015724  0100               	movlb	0	; () banked
 37503  015726  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 37504  015728  EC87  F0A3         	call	__flash_compare_page_to_buffer	;wreg free
 37505  01572C  0100               	movlb	0	; () banked
 37506  01572E  6F83               	movwf	flash_sector_write@match& (0+255),b
 37507                           
 37508                           ; BSR set to: 0
 37509                           ;flash.c: 445: if(match==DATA_DOES_NOT_MATCH)
 37510  015730  0583               	decf	flash_sector_write@match& (0+255),w,b
 37511  015732  A4D8               	btfss	status,2,c
 37512  015734  0012               	return	
 37513                           
 37514                           ; BSR set to: 0
 37515                           ;flash.c: 446: {;flash.c: 447: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 37516  015736  C07F  F073         	movff	flash_sector_write@page,__flash_write_page_from_buffer@page
 37517  01573A  C080  F074         	movff	flash_sector_write@page+1,__flash_write_page_from_buffer@page+1
 37518  01573E  0E00               	movlw	0
 37519  015740  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 37520  015742  ECA7  F0A8         	call	__flash_write_page_from_buffer	;wreg free
 37521  015746  0012               	return	
 37522  015748                     __end_of_flash_sector_write:
 37523                           	opt stack 0
 37524                           tosu	equ	0xFFF
 37525                           tosh	equ	0xFFE
 37526                           tosl	equ	0xFFD
 37527                           pclath	equ	0xFFA
 37528                           tblptru	equ	0xFF8
 37529                           tblptrh	equ	0xFF7
 37530                           tblptrl	equ	0xFF6
 37531                           tablat	equ	0xFF5
 37532                           prodh	equ	0xFF4
 37533                           prodl	equ	0xFF3
 37534                           intcon	equ	0xFF2
 37535                           postinc0	equ	0xFEE
 37536                           wreg	equ	0xFE8
 37537                           indf1	equ	0xFE7
 37538                           postinc1	equ	0xFE6
 37539                           postdec1	equ	0xFE5
 37540                           plusw1	equ	0xFE3
 37541                           fsr1h	equ	0xFE2
 37542                           fsr1l	equ	0xFE1
 37543                           indf2	equ	0xFDF
 37544                           postinc2	equ	0xFDE
 37545                           postdec2	equ	0xFDD
 37546                           plusw2	equ	0xFDB
 37547                           fsr2h	equ	0xFDA
 37548                           fsr2l	equ	0xFD9
 37549                           status	equ	0xFD8
 37550                           
 37551 ;; *************** function __flash_write_to_buffer *****************
 37552 ;; Defined at:
 37553 ;;		line 236 in file "flash.c"
 37554 ;; Parameters:    Size  Location     Type
 37555 ;;  start           2   19[BANK0 ] unsigned int 
 37556 ;;  data            2   21[BANK0 ] PTR unsigned char 
 37557 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 37558 ;;		 -> _delete_root@deleted_value(1), buffer(512), msd_buffer(512), 
 37559 ;;  data_length     2   23[BANK0 ] unsigned int 
 37560 ;;  buffer          1   25[BANK0 ] enum E7069
 37561 ;; Auto vars:     Size  Location     Type
 37562 ;;  command         4   26[BANK0 ] unsigned char [4]
 37563 ;; Return value:  Size  Location     Type
 37564 ;;                  1    wreg      void 
 37565 ;; Registers used:
 37566 ;;		wreg, status,2, status,0, cstack
 37567 ;; Tracked objects:
 37568 ;;		On entry : 0/0
 37569 ;;		On exit  : 0/0
 37570 ;;		Unchanged: 0/0
 37571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37572 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37573 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37575 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37576 ;;Total ram usage:       11 bytes
 37577 ;; Hardware stack levels used:    1
 37578 ;; Hardware stack levels required when called:   13
 37579 ;; This function calls:
 37580 ;;		__flash_is_busy
 37581 ;;		_spi_tx_tx
 37582 ;; This function is called by:
 37583 ;;		_flash_sector_write
 37584 ;;		_flash_partial_write
 37585 ;;		_flash_write_to_buffer
 37586 ;; This function uses a non-reentrant model
 37587 ;;
 37588                           
 37589                           	psect	text141
 37590  0155B6                     __ptext141:
 37591                           	opt stack 0
 37592  0155B6                     __flash_write_to_buffer:
 37593                           	opt stack 13
 37594                           
 37595                           ;flash.c: 238: uint8_t command[4];;flash.c: 241: while(_flash_is_busy());
 37596                           
 37597                           ;incstack = 0
 37598  0155B6  EC16  F0B1         	call	__flash_is_busy	;wreg free
 37599  0155BA  0900               	iorlw	0
 37600  0155BC  A4D8               	btfss	status,2,c
 37601  0155BE  D7FB               	goto	__flash_write_to_buffer
 37602                           
 37603                           ;flash.c: 244: if(buffer==FLASH_BUFFER_1)
 37604  0155C0  0100               	movlb	0	; () banked
 37605  0155C2  5179               	movf	__flash_write_to_buffer@buffer& (0+255),w,b
 37606  0155C4  A4D8               	btfss	status,2,c
 37607  0155C6  D002               	goto	l1600
 37608                           
 37609                           ; BSR set to: 0
 37610                           ;flash.c: 245: command[0] = 0x84;
 37611  0155C8  0E84               	movlw	132
 37612  0155CA  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 37613  0155CC                     l1600:
 37614                           
 37615                           ; BSR set to: 0
 37616                           ;flash.c: 246: if(buffer==FLASH_BUFFER_2)
 37617                           
 37618                           ; BSR set to: 0
 37619  0155CC  0579               	decf	__flash_write_to_buffer@buffer& (0+255),w,b
 37620  0155CE  A4D8               	btfss	status,2,c
 37621  0155D0  D002               	goto	l1601
 37622                           
 37623                           ; BSR set to: 0
 37624                           ;flash.c: 247: command[0] = 0x87;
 37625  0155D2  0E87               	movlw	135
 37626  0155D4  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 37627  0155D6                     l1601:
 37628                           
 37629                           ; BSR set to: 0
 37630                           ;flash.c: 249: command[1] = 0x00;
 37631  0155D6  0E00               	movlw	0
 37632  0155D8  6F7B               	movwf	(__flash_write_to_buffer@command+1)& (0+255),b
 37633                           
 37634                           ;flash.c: 250: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 37635  0155DA  5174               	movf	(__flash_write_to_buffer@start+1)& (0+255),w,b
 37636  0155DC  6F7C               	movwf	(__flash_write_to_buffer@command+2)& (0+255),b
 37637                           
 37638                           ; BSR set to: 0
 37639                           ;flash.c: 251: command[3] = ((unsigned char)((start)&0xFF));
 37640  0155DE  C073  F07D         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 37641                           
 37642                           ; BSR set to: 0
 37643                           ;flash.c: 254: spi_tx_tx(command, 4, data, data_length);
 37644  0155E2  0E7A               	movlw	low __flash_write_to_buffer@command
 37645  0155E4  6F60               	movwf	spi_tx_tx@command& (0+255),b
 37646  0155E6  0E00               	movlw	high __flash_write_to_buffer@command
 37647  0155E8  6F61               	movwf	(spi_tx_tx@command+1)& (0+255),b
 37648  0155EA  0E00               	movlw	0
 37649  0155EC  6F63               	movwf	(spi_tx_tx@command_length+1)& (0+255),b
 37650  0155EE  0E04               	movlw	4
 37651  0155F0  6F62               	movwf	spi_tx_tx@command_length& (0+255),b
 37652  0155F2  C075  F064         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
 37653  0155F6  C076  F065         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
 37654  0155FA  C077  F066         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
 37655  0155FE  C078  F067         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
 37656  015602  ECF1  F0A0         	call	_spi_tx_tx	;wreg free
 37657  015606  0012               	return		;funcret
 37658  015608                     __end_of__flash_write_to_buffer:
 37659                           	opt stack 0
 37660                           tosu	equ	0xFFF
 37661                           tosh	equ	0xFFE
 37662                           tosl	equ	0xFFD
 37663                           pclath	equ	0xFFA
 37664                           tblptru	equ	0xFF8
 37665                           tblptrh	equ	0xFF7
 37666                           tblptrl	equ	0xFF6
 37667                           tablat	equ	0xFF5
 37668                           prodh	equ	0xFF4
 37669                           prodl	equ	0xFF3
 37670                           intcon	equ	0xFF2
 37671                           postinc0	equ	0xFEE
 37672                           wreg	equ	0xFE8
 37673                           indf1	equ	0xFE7
 37674                           postinc1	equ	0xFE6
 37675                           postdec1	equ	0xFE5
 37676                           plusw1	equ	0xFE3
 37677                           fsr1h	equ	0xFE2
 37678                           fsr1l	equ	0xFE1
 37679                           indf2	equ	0xFDF
 37680                           postinc2	equ	0xFDE
 37681                           postdec2	equ	0xFDD
 37682                           plusw2	equ	0xFDB
 37683                           fsr2h	equ	0xFDA
 37684                           fsr2l	equ	0xFD9
 37685                           status	equ	0xFD8
 37686                           
 37687 ;; *************** function _spi_tx_tx *****************
 37688 ;; Defined at:
 37689 ;;		line 146 in file "spi.c"
 37690 ;; Parameters:    Size  Location     Type
 37691 ;;  command         2    0[BANK0 ] PTR unsigned char 
 37692 ;;		 -> _flash_write_to_buffer@command(4), 
 37693 ;;  command_leng    2    2[BANK0 ] unsigned int 
 37694 ;;  data            2    4[BANK0 ] PTR unsigned char 
 37695 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 37696 ;;		 -> _delete_root@deleted_value(1), buffer(512), msd_buffer(512), 
 37697 ;;  data_length     2    6[BANK0 ] unsigned int 
 37698 ;; Auto vars:     Size  Location     Type
 37699 ;;		None
 37700 ;; Return value:  Size  Location     Type
 37701 ;;                  1    wreg      void 
 37702 ;; Registers used:
 37703 ;;		wreg, status,2, status,0
 37704 ;; Tracked objects:
 37705 ;;		On entry : 0/0
 37706 ;;		On exit  : 0/0
 37707 ;;		Unchanged: 0/0
 37708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37709 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37711 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37712 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37713 ;;Total ram usage:       12 bytes
 37714 ;; Hardware stack levels used:    1
 37715 ;; Hardware stack levels required when called:   10
 37716 ;; This function calls:
 37717 ;;		Nothing
 37718 ;; This function is called by:
 37719 ;;		__flash_write_to_buffer
 37720 ;; This function uses a non-reentrant model
 37721 ;;
 37722                           
 37723                           	psect	text142
 37724  0141E2                     __ptext142:
 37725                           	opt stack 0
 37726  0141E2                     _spi_tx_tx:
 37727                           	opt stack 15
 37728                           
 37729                           ;spi.c: 149: DMACON1bits.SSCON1 = 0;
 37730                           
 37731                           ;incstack = 0
 37732  0141E2  9E88               	bcf	3976,7,c	;volatile
 37733                           
 37734                           ;spi.c: 150: DMACON1bits.SSCON0 = 0;
 37735  0141E4  9C88               	bcf	3976,6,c	;volatile
 37736                           
 37737                           ;spi.c: 152: DMACON1bits.TXINC = 1;
 37738  0141E6  8A88               	bsf	3976,5,c	;volatile
 37739                           
 37740                           ;spi.c: 154: DMACON1bits.RXINC = 0;
 37741  0141E8  9888               	bcf	3976,4,c	;volatile
 37742                           
 37743                           ;spi.c: 156: DMACON1bits.DUPLEX1 = 0;
 37744  0141EA  9688               	bcf	3976,3,c	;volatile
 37745                           
 37746                           ;spi.c: 157: DMACON1bits.DUPLEX0 = 1;
 37747  0141EC  8488               	bsf	3976,2,c	;volatile
 37748                           
 37749                           ;spi.c: 159: DMACON1bits.DLYINTEN = 0;
 37750  0141EE  9288               	bcf	3976,1,c	;volatile
 37751                           
 37752                           ;spi.c: 161: DMACON2bits.DLYCYC = 0b0000;
 37753  0141F0  9886               	bcf	3974,4,c	;volatile
 37754  0141F2  9A86               	bcf	3974,5,c	;volatile
 37755  0141F4  9C86               	bcf	3974,6,c	;volatile
 37756  0141F6  9E86               	bcf	3974,7,c	;volatile
 37757                           
 37758                           ;spi.c: 163: DMACON2bits.INTLVL = 0b0000;
 37759  0141F8  9086               	bcf	3974,0,c	;volatile
 37760  0141FA  9286               	bcf	3974,1,c	;volatile
 37761  0141FC  9486               	bcf	3974,2,c	;volatile
 37762  0141FE  9686               	bcf	3974,3,c	;volatile
 37763                           
 37764                           ;spi.c: 166: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 37765  014200  0100               	movlb	0	; () banked
 37766  014202  5161               	movf	(spi_tx_tx@command+1)& (0+255),w,b
 37767  014204  6E6A               	movwf	3946,c	;volatile
 37768                           
 37769                           ; BSR set to: 0
 37770                           ;spi.c: 167: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 37771  014206  C060  FF6B         	movff	spi_tx_tx@command,3947	;volatile
 37772                           
 37773                           ; BSR set to: 0
 37774                           ;spi.c: 170: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 37775  01420A  0EFF               	movlw	255
 37776  01420C  6F68               	movwf	??_spi_tx_tx& (0+255),b
 37777  01420E  0EFF               	movlw	255
 37778  014210  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
 37779  014212  C062  F06A         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
 37780  014216  C063  F06B         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
 37781  01421A  5168               	movf	??_spi_tx_tx& (0+255),w,b
 37782  01421C  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
 37783  01421E  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
 37784  014220  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
 37785  014222  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 37786  014226  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
 37787  014228  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
 37788  01422A  6E66               	movwf	3942,c	;volatile
 37789                           
 37790                           ; BSR set to: 0
 37791                           ;spi.c: 171: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 37792  01422C  0562               	decf	spi_tx_tx@command_length& (0+255),w,b
 37793  01422E  6E67               	movwf	3943,c	;volatile
 37794                           
 37795                           ; BSR set to: 0
 37796                           ;spi.c: 174: LATDbits.LD7 = 0;
 37797  014230  9E8C               	bcf	3980,7,c	;volatile
 37798                           
 37799                           ; BSR set to: 0
 37800                           ;spi.c: 177: DMACON1bits.DMAEN = 1;
 37801  014232  8088               	bsf	3976,0,c	;volatile
 37802  014234                     
 37803                           ; BSR set to: 0
 37804  014234  B088               	btfsc	3976,0,c	;volatile
 37805  014236  D7FE               	goto	l2216
 37806                           
 37807                           ;spi.c: 181: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 37808  014238  0100               	movlb	0	; () banked
 37809  01423A  5165               	movf	(spi_tx_tx@data+1)& (0+255),w,b
 37810  01423C  6E6A               	movwf	3946,c	;volatile
 37811                           
 37812                           ; BSR set to: 0
 37813                           ;spi.c: 182: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 37814  01423E  C064  FF6B         	movff	spi_tx_tx@data,3947	;volatile
 37815                           
 37816                           ; BSR set to: 0
 37817                           ;spi.c: 185: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 37818  014242  0EFF               	movlw	255
 37819  014244  6F68               	movwf	??_spi_tx_tx& (0+255),b
 37820  014246  0EFF               	movlw	255
 37821  014248  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
 37822  01424A  C066  F06A         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
 37823  01424E  C067  F06B         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
 37824  014252  5168               	movf	??_spi_tx_tx& (0+255),w,b
 37825  014254  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
 37826  014256  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
 37827  014258  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
 37828  01425A  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 37829  01425E  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
 37830  014260  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
 37831  014262  6E66               	movwf	3942,c	;volatile
 37832                           
 37833                           ; BSR set to: 0
 37834                           ;spi.c: 186: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 37835  014264  0566               	decf	spi_tx_tx@data_length& (0+255),w,b
 37836  014266  6E67               	movwf	3943,c	;volatile
 37837                           
 37838                           ; BSR set to: 0
 37839                           ;spi.c: 189: DMACON1bits.DMAEN = 1;
 37840  014268  8088               	bsf	3976,0,c	;volatile
 37841  01426A                     
 37842                           ; BSR set to: 0
 37843  01426A  B088               	btfsc	3976,0,c	;volatile
 37844  01426C  D7FE               	goto	l2219
 37845                           
 37846                           ;spi.c: 193: LATDbits.LD7 = 1;
 37847  01426E  8E8C               	bsf	3980,7,c	;volatile
 37848  014270  0012               	return		;funcret
 37849  014272                     __end_of_spi_tx_tx:
 37850                           	opt stack 0
 37851                           tosu	equ	0xFFF
 37852                           tosh	equ	0xFFE
 37853                           tosl	equ	0xFFD
 37854                           pclath	equ	0xFFA
 37855                           tblptru	equ	0xFF8
 37856                           tblptrh	equ	0xFF7
 37857                           tblptrl	equ	0xFF6
 37858                           tablat	equ	0xFF5
 37859                           prodh	equ	0xFF4
 37860                           prodl	equ	0xFF3
 37861                           intcon	equ	0xFF2
 37862                           postinc0	equ	0xFEE
 37863                           wreg	equ	0xFE8
 37864                           indf1	equ	0xFE7
 37865                           postinc1	equ	0xFE6
 37866                           postdec1	equ	0xFE5
 37867                           plusw1	equ	0xFE3
 37868                           fsr1h	equ	0xFE2
 37869                           fsr1l	equ	0xFE1
 37870                           indf2	equ	0xFDF
 37871                           postinc2	equ	0xFDE
 37872                           postdec2	equ	0xFDD
 37873                           plusw2	equ	0xFDB
 37874                           fsr2h	equ	0xFDA
 37875                           fsr2l	equ	0xFD9
 37876                           status	equ	0xFD8
 37877                           
 37878 ;; *************** function __flash_write_page_from_buffer *****************
 37879 ;; Defined at:
 37880 ;;		line 258 in file "flash.c"
 37881 ;; Parameters:    Size  Location     Type
 37882 ;;  page            2   19[BANK0 ] unsigned int 
 37883 ;;  buffer          1   21[BANK0 ] enum E7069
 37884 ;; Auto vars:     Size  Location     Type
 37885 ;;  command         4   25[BANK0 ] unsigned char [4]
 37886 ;; Return value:  Size  Location     Type
 37887 ;;                  1    wreg      void 
 37888 ;; Registers used:
 37889 ;;		wreg, status,2, status,0, cstack
 37890 ;; Tracked objects:
 37891 ;;		On entry : 0/0
 37892 ;;		On exit  : 0/0
 37893 ;;		Unchanged: 0/0
 37894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37895 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37896 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37897 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37898 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37899 ;;Total ram usage:       10 bytes
 37900 ;; Hardware stack levels used:    1
 37901 ;; Hardware stack levels required when called:   13
 37902 ;; This function calls:
 37903 ;;		__flash_is_busy
 37904 ;;		_spi_tx
 37905 ;; This function is called by:
 37906 ;;		_flash_sector_write
 37907 ;;		_flash_partial_write
 37908 ;;		_flash_write_page_from_buffer
 37909 ;; This function uses a non-reentrant model
 37910 ;;
 37911                           
 37912                           	psect	text143
 37913  01514E                     __ptext143:
 37914                           	opt stack 0
 37915  01514E                     __flash_write_page_from_buffer:
 37916                           	opt stack 13
 37917                           
 37918                           ;flash.c: 260: uint8_t command[4];;flash.c: 263: while(_flash_is_busy());
 37919                           
 37920                           ;incstack = 0
 37921  01514E  EC16  F0B1         	call	__flash_is_busy	;wreg free
 37922  015152  0900               	iorlw	0
 37923  015154  A4D8               	btfss	status,2,c
 37924  015156  D7FB               	goto	__flash_write_page_from_buffer
 37925                           
 37926                           ;flash.c: 266: if(buffer==FLASH_BUFFER_1)
 37927  015158  0100               	movlb	0	; () banked
 37928  01515A  5175               	movf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 37929  01515C  A4D8               	btfss	status,2,c
 37930  01515E  D002               	goto	l1608
 37931                           
 37932                           ; BSR set to: 0
 37933                           ;flash.c: 267: command[0] = 0x83;
 37934  015160  0E83               	movlw	131
 37935  015162  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 37936  015164                     l1608:
 37937                           
 37938                           ; BSR set to: 0
 37939                           ;flash.c: 268: if(buffer==FLASH_BUFFER_2)
 37940                           
 37941                           ; BSR set to: 0
 37942  015164  0575               	decf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 37943  015166  A4D8               	btfss	status,2,c
 37944  015168  D002               	goto	l1609
 37945                           
 37946                           ; BSR set to: 0
 37947                           ;flash.c: 269: command[0] = 0x86;
 37948  01516A  0E86               	movlw	134
 37949  01516C  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 37950  01516E                     l1609:
 37951                           
 37952                           ; BSR set to: 0
 37953                           ;flash.c: 271: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 37954                           
 37955                           ; BSR set to: 0
 37956  01516E  C073  F076         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 37957  015172  C074  F077         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 37958  015176  0E07               	movlw	7
 37959  015178  6F78               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),b
 37960  01517A                     u10365:
 37961  01517A  90D8               	bcf	status,0,c
 37962  01517C  3377               	rrcf	(??__flash_write_page_from_buffer+1)& (0+255),f,b
 37963  01517E  3376               	rrcf	??__flash_write_page_from_buffer& (0+255),f,b
 37964  015180  2F78               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,b
 37965  015182  D7FB               	goto	u10365
 37966  015184  5176               	movf	??__flash_write_page_from_buffer& (0+255),w,b
 37967  015186  6F7A               	movwf	(__flash_write_page_from_buffer@command+1)& (0+255),b
 37968                           
 37969                           ; BSR set to: 0
 37970                           ;flash.c: 272: command[2] = ((unsigned char)((page<<1)&0xFF));
 37971  015188  5173               	movf	__flash_write_page_from_buffer@page& (0+255),w,b
 37972  01518A  2573               	addwf	__flash_write_page_from_buffer@page& (0+255),w,b
 37973  01518C  6F7B               	movwf	(__flash_write_page_from_buffer@command+2)& (0+255),b
 37974                           
 37975                           ;flash.c: 273: command[3] = 0x00;
 37976  01518E  0E00               	movlw	0
 37977  015190  6F7C               	movwf	(__flash_write_page_from_buffer@command+3)& (0+255),b
 37978                           
 37979                           ; BSR set to: 0
 37980                           ;flash.c: 276: spi_tx(command, 4);
 37981  015192  0E79               	movlw	low __flash_write_page_from_buffer@command
 37982  015194  6F60               	movwf	spi_tx@data& (0+255),b
 37983  015196  0E00               	movlw	high __flash_write_page_from_buffer@command
 37984  015198  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 37985  01519A  0E00               	movlw	0
 37986  01519C  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 37987  01519E  0E04               	movlw	4
 37988  0151A0  6F62               	movwf	spi_tx@length& (0+255),b
 37989  0151A2  ECD4  F0A8         	call	_spi_tx	;wreg free
 37990  0151A6  0012               	return		;funcret
 37991  0151A8                     __end_of__flash_write_page_from_buffer:
 37992                           	opt stack 0
 37993                           tosu	equ	0xFFF
 37994                           tosh	equ	0xFFE
 37995                           tosl	equ	0xFFD
 37996                           pclath	equ	0xFFA
 37997                           tblptru	equ	0xFF8
 37998                           tblptrh	equ	0xFF7
 37999                           tblptrl	equ	0xFF6
 38000                           tablat	equ	0xFF5
 38001                           prodh	equ	0xFF4
 38002                           prodl	equ	0xFF3
 38003                           intcon	equ	0xFF2
 38004                           postinc0	equ	0xFEE
 38005                           wreg	equ	0xFE8
 38006                           indf1	equ	0xFE7
 38007                           postinc1	equ	0xFE6
 38008                           postdec1	equ	0xFE5
 38009                           plusw1	equ	0xFE3
 38010                           fsr1h	equ	0xFE2
 38011                           fsr1l	equ	0xFE1
 38012                           indf2	equ	0xFDF
 38013                           postinc2	equ	0xFDE
 38014                           postdec2	equ	0xFDD
 38015                           plusw2	equ	0xFDB
 38016                           fsr2h	equ	0xFDA
 38017                           fsr2l	equ	0xFD9
 38018                           status	equ	0xFD8
 38019                           
 38020 ;; *************** function __flash_compare_page_to_buffer *****************
 38021 ;; Defined at:
 38022 ;;		line 176 in file "flash.c"
 38023 ;; Parameters:    Size  Location     Type
 38024 ;;  page            2   19[BANK0 ] unsigned int 
 38025 ;;  buffer          1   21[BANK0 ] enum E7069
 38026 ;; Auto vars:     Size  Location     Type
 38027 ;;  command         4   27[BANK0 ] unsigned char [4]
 38028 ;;  status          2   25[BANK0 ] unsigned int 
 38029 ;; Return value:  Size  Location     Type
 38030 ;;                  1    wreg      enum E7073
 38031 ;; Registers used:
 38032 ;;		wreg, status,2, status,0, cstack
 38033 ;; Tracked objects:
 38034 ;;		On entry : 0/0
 38035 ;;		On exit  : 0/0
 38036 ;;		Unchanged: 0/0
 38037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38038 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38039 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38040 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38041 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38042 ;;Total ram usage:       12 bytes
 38043 ;; Hardware stack levels used:    1
 38044 ;; Hardware stack levels required when called:   13
 38045 ;; This function calls:
 38046 ;;		__flash_get_status
 38047 ;;		__flash_is_busy
 38048 ;;		_spi_tx
 38049 ;; This function is called by:
 38050 ;;		_flash_sector_write
 38051 ;;		_flash_partial_write
 38052 ;; This function uses a non-reentrant model
 38053 ;;
 38054                           
 38055                           	psect	text144
 38056  01470E                     __ptext144:
 38057                           	opt stack 0
 38058  01470E                     __flash_compare_page_to_buffer:
 38059                           	opt stack 13
 38060                           
 38061                           ;flash.c: 178: uint8_t command[4];;flash.c: 179: uint16_t status;;flash.c: 182: while(_f
      +                          lash_is_busy());
 38062                           
 38063                           ;incstack = 0
 38064  01470E  EC16  F0B1         	call	__flash_is_busy	;wreg free
 38065  014712  0900               	iorlw	0
 38066  014714  A4D8               	btfss	status,2,c
 38067  014716  D7FB               	goto	__flash_compare_page_to_buffer
 38068                           
 38069                           ;flash.c: 185: if(buffer==FLASH_BUFFER_1)
 38070  014718  0100               	movlb	0	; () banked
 38071  01471A  5175               	movf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 38072  01471C  A4D8               	btfss	status,2,c
 38073  01471E  D002               	goto	l1581
 38074                           
 38075                           ; BSR set to: 0
 38076                           ;flash.c: 186: command[0] = 0x60;
 38077  014720  0E60               	movlw	96
 38078  014722  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 38079  014724                     l1581:
 38080                           
 38081                           ; BSR set to: 0
 38082                           ;flash.c: 187: if(buffer==FLASH_BUFFER_2)
 38083                           
 38084                           ; BSR set to: 0
 38085  014724  0575               	decf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 38086  014726  A4D8               	btfss	status,2,c
 38087  014728  D002               	goto	l1582
 38088                           
 38089                           ; BSR set to: 0
 38090                           ;flash.c: 188: command[0] = 0x60;
 38091  01472A  0E60               	movlw	96
 38092  01472C  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 38093  01472E                     l1582:
 38094                           
 38095                           ; BSR set to: 0
 38096                           ;flash.c: 190: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 38097                           
 38098                           ; BSR set to: 0
 38099  01472E  C073  F076         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 38100  014732  C074  F077         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 38101  014736  0E07               	movlw	7
 38102  014738  6F78               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),b
 38103  01473A                     u10275:
 38104  01473A  90D8               	bcf	status,0,c
 38105  01473C  3377               	rrcf	(??__flash_compare_page_to_buffer+1)& (0+255),f,b
 38106  01473E  3376               	rrcf	??__flash_compare_page_to_buffer& (0+255),f,b
 38107  014740  2F78               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,b
 38108  014742  D7FB               	goto	u10275
 38109  014744  5176               	movf	??__flash_compare_page_to_buffer& (0+255),w,b
 38110  014746  6F7C               	movwf	(__flash_compare_page_to_buffer@command+1)& (0+255),b
 38111                           
 38112                           ; BSR set to: 0
 38113                           ;flash.c: 191: command[2] = ((unsigned char)((page<<1)&0xFF));
 38114  014748  5173               	movf	__flash_compare_page_to_buffer@page& (0+255),w,b
 38115  01474A  2573               	addwf	__flash_compare_page_to_buffer@page& (0+255),w,b
 38116  01474C  6F7D               	movwf	(__flash_compare_page_to_buffer@command+2)& (0+255),b
 38117                           
 38118                           ;flash.c: 192: command[3] = 0x00;
 38119  01474E  0E00               	movlw	0
 38120  014750  6F7E               	movwf	(__flash_compare_page_to_buffer@command+3)& (0+255),b
 38121                           
 38122                           ; BSR set to: 0
 38123                           ;flash.c: 195: spi_tx(command, 4);
 38124  014752  0E7B               	movlw	low __flash_compare_page_to_buffer@command
 38125  014754  6F60               	movwf	spi_tx@data& (0+255),b
 38126  014756  0E00               	movlw	high __flash_compare_page_to_buffer@command
 38127  014758  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 38128  01475A  0E00               	movlw	0
 38129  01475C  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 38130  01475E  0E04               	movlw	4
 38131  014760  6F62               	movwf	spi_tx@length& (0+255),b
 38132  014762  ECD4  F0A8         	call	_spi_tx	;wreg free
 38133  014766  EC16  F0B1         	call	__flash_is_busy	;wreg free
 38134  01476A  0900               	iorlw	0
 38135  01476C  A4D8               	btfss	status,2,c
 38136  01476E  D7FB               	goto	l1584
 38137                           
 38138                           ;flash.c: 201: status = _flash_get_status();
 38139  014770  ECF6  F0AE         	call	__flash_get_status	;wreg free
 38140  014774  C06C  F079         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 38141  014778  C06D  F07A         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 38142                           
 38143                           ;flash.c: 204: if(status & 0b0000000001000000)
 38144  01477C  0100               	movlb	0	; () banked
 38145  01477E  AD79               	btfss	__flash_compare_page_to_buffer@status& (0+255),6,b
 38146  014780  D002               	goto	l1586
 38147                           
 38148                           ; BSR set to: 0
 38149                           ;flash.c: 205: {;flash.c: 207: return DATA_DOES_NOT_MATCH;
 38150  014782  0E01               	movlw	1
 38151                           
 38152                           ; BSR set to: 0
 38153                           ;flash.c: 208: }
 38154                           
 38155                           ; BSR set to: 0
 38156  014784  0012               	return	
 38157  014786                     l1586:
 38158                           
 38159                           ; BSR set to: 0
 38160                           ;flash.c: 209: else;flash.c: 210: {;flash.c: 212: return DATA_DOES_MATCH;
 38161                           
 38162                           ; BSR set to: 0
 38163  014786  0E00               	movlw	0
 38164                           
 38165                           ; BSR set to: 0
 38166  014788  0012               	return	
 38167  01478A                     __end_of__flash_compare_page_to_buffer:
 38168                           	opt stack 0
 38169                           tosu	equ	0xFFF
 38170                           tosh	equ	0xFFE
 38171                           tosl	equ	0xFFD
 38172                           pclath	equ	0xFFA
 38173                           tblptru	equ	0xFF8
 38174                           tblptrh	equ	0xFF7
 38175                           tblptrl	equ	0xFF6
 38176                           tablat	equ	0xFF5
 38177                           prodh	equ	0xFF4
 38178                           prodl	equ	0xFF3
 38179                           intcon	equ	0xFF2
 38180                           postinc0	equ	0xFEE
 38181                           wreg	equ	0xFE8
 38182                           indf1	equ	0xFE7
 38183                           postinc1	equ	0xFE6
 38184                           postdec1	equ	0xFE5
 38185                           plusw1	equ	0xFE3
 38186                           fsr1h	equ	0xFE2
 38187                           fsr1l	equ	0xFE1
 38188                           indf2	equ	0xFDF
 38189                           postinc2	equ	0xFDE
 38190                           postdec2	equ	0xFDD
 38191                           plusw2	equ	0xFDB
 38192                           fsr2h	equ	0xFDA
 38193                           fsr2l	equ	0xFD9
 38194                           status	equ	0xFD8
 38195                           
 38196 ;; *************** function _MSDReadHandler *****************
 38197 ;; Defined at:
 38198 ;;		line 1038 in file "usb_device_msd.c"
 38199 ;; Parameters:    Size  Location     Type
 38200 ;;		None
 38201 ;; Auto vars:     Size  Location     Type
 38202 ;;		None
 38203 ;; Return value:  Size  Location     Type
 38204 ;;                  1    wreg      unsigned char 
 38205 ;; Registers used:
 38206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 38207 ;; Tracked objects:
 38208 ;;		On entry : 0/0
 38209 ;;		On exit  : 0/0
 38210 ;;		Unchanged: 0/0
 38211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38214 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38215 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38216 ;;Total ram usage:        4 bytes
 38217 ;; Hardware stack levels used:    1
 38218 ;; Hardware stack levels required when called:   16
 38219 ;; This function calls:
 38220 ;;		_ExternalFlash_SectorRead
 38221 ;;		_MSDCheckForErrorCases
 38222 ;;		_USBStallEndpoint
 38223 ;;		_USBTransferOnePacket
 38224 ;; This function is called by:
 38225 ;;		_MSDProcessCommandMediaPresent
 38226 ;; This function uses a non-reentrant model
 38227 ;;
 38228                           
 38229                           	psect	text145
 38230  00E95E                     __ptext145:
 38231                           	opt stack 0
 38232  00E95E                     _MSDReadHandler:
 38233                           	opt stack 10
 38234                           
 38235                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 38236                           
 38237                           ; BSR set to: 0
 38238                           ;incstack = 0
 38239  00E95E  D0DF               	goto	l681
 38240  00E960                     l682:
 38241                           
 38242                           ; BSR set to: 1
 38243                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 38244  00E960  C211  F126         	movff	_gblCBW+17,_LBA+3
 38245                           
 38246                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 38247  00E964  C212  F125         	movff	_gblCBW+18,_LBA+2
 38248                           
 38249                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 38250  00E968  C213  F124         	movff	_gblCBW+19,_LBA+1
 38251                           
 38252                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 38253  00E96C  C214  F123         	movff	_gblCBW+20,_LBA
 38254                           
 38255                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 38256  00E970  C216  F13B         	movff	_gblCBW+22,_TransferLength+1
 38257                           
 38258                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 38259  00E974  C217  F13A         	movff	_gblCBW+23,_TransferLength
 38260                           
 38261                           ; BSR set to: 1
 38262                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 38263  00E978  513A               	movf	_TransferLength& (0+255),w,b
 38264  00E97A  0100               	movlb	0	; () banked
 38265  00E97C  6F95               	movwf	??_MSDReadHandler& (0+255),b
 38266  00E97E  0101               	movlb	1	; () banked
 38267  00E980  513B               	movf	(_TransferLength+1)& (0+255),w,b
 38268  00E982  0100               	movlb	0	; () banked
 38269  00E984  6F96               	movwf	(??_MSDReadHandler+1)& (0+255),b
 38270  00E986  6B97               	clrf	(??_MSDReadHandler+2)& (0+255),b
 38271  00E988  6B98               	clrf	(??_MSDReadHandler+3)& (0+255),b
 38272  00E98A  0E09               	movlw	9
 38273  00E98C                     u11295:
 38274  00E98C  90D8               	bcf	status,0,c
 38275  00E98E  3795               	rlcf	??_MSDReadHandler& (0+255),f,b
 38276  00E990  3796               	rlcf	(??_MSDReadHandler+1)& (0+255),f,b
 38277  00E992  3797               	rlcf	(??_MSDReadHandler+2)& (0+255),f,b
 38278  00E994  3798               	rlcf	(??_MSDReadHandler+3)& (0+255),f,b
 38279  00E996  2EE8               	decfsz	wreg,f,c
 38280  00E998  D7F9               	goto	u11295
 38281  00E99A  C095  F06A         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 38282  00E99E  C096  F06B         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 38283  00E9A2  C097  F06C         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 38284  00E9A6  C098  F06D         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 38285  00E9AA  ECE8  F087         	call	_MSDCheckForErrorCases	;wreg free
 38286  00E9AE  0900               	iorlw	0
 38287  00E9B0  A4D8               	btfss	status,2,c
 38288  00E9B2  D0C7               	goto	l684
 38289                           
 38290                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 38291                           
 38292                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 38293  00E9B4  0E01               	movlw	1
 38294  00E9B6  0101               	movlb	1	; () banked
 38295  00E9B8  6F55               	movwf	_MSDReadState& (0+255),b
 38296  00E9BA                     
 38297                           ; BSR set to: 1
 38298                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 38299                           
 38300                           ; BSR set to: 1
 38301  00E9BA  513A               	movf	_TransferLength& (0+255),w,b
 38302  00E9BC  113B               	iorwf	(_TransferLength+1)& (0+255),w,b
 38303  00E9BE  A4D8               	btfss	status,2,c
 38304  00E9C0  D002               	goto	l686
 38305                           
 38306                           ; BSR set to: 1
 38307                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 38308  00E9C2  0E00               	movlw	0
 38309  00E9C4  D04A               	goto	L40
 38310  00E9C6                     l686:
 38311                           
 38312                           ; BSR set to: 1
 38313                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 38314                           
 38315                           ; BSR set to: 1
 38316  00E9C6  073A               	decf	_TransferLength& (0+255),f,b
 38317  00E9C8  A0D8               	btfss	status,0,c
 38318  00E9CA  073B               	decf	(_TransferLength+1)& (0+255),f,b
 38319                           
 38320                           ; BSR set to: 1
 38321                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 38322  00E9CC  0E02               	movlw	2
 38323  00E9CE  6F55               	movwf	_MSDReadState& (0+255),b
 38324  00E9D0                     
 38325                           ; BSR set to: 1
 38326                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 38327                           
 38328                           ; BSR set to: 1
 38329  00E9D0  513E               	movf	_USBMSDInHandle& (0+255),w,b
 38330  00E9D2  113F               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 38331  00E9D4  B4D8               	btfsc	status,2,c
 38332  00E9D6  D006               	goto	l688
 38333                           
 38334                           ; BSR set to: 1
 38335  00E9D8  C13E  FFD9         	movff	_USBMSDInHandle,fsr2l
 38336  00E9DC  C13F  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 38337  00E9E0  BEDF               	btfsc	indf2,7,c
 38338  00E9E2  D0AF               	goto	l684
 38339  00E9E4                     l688:
 38340                           
 38341                           ; BSR set to: 1
 38342                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 38343                           
 38344                           ; BSR set to: 1
 38345  00E9E4  C2B3  F08B         	movff	_LUN+21,ExternalFlash_SectorRead@config
 38346  00E9E8  C2B4  F08C         	movff	_LUN+22,ExternalFlash_SectorRead@config+1
 38347  00E9EC  C123  F08D         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 38348  00E9F0  C124  F08E         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 38349  00E9F4  C125  F08F         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 38350  00E9F8  C126  F090         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 38351  00E9FC  0E00               	movlw	0
 38352  00E9FE  0100               	movlb	0	; () banked
 38353  00EA00  6F91               	movwf	ExternalFlash_SectorRead@buffer& (0+255),b
 38354  00EA02  0E06               	movlw	6
 38355  00EA04  6F92               	movwf	(ExternalFlash_SectorRead@buffer+1)& (0+255),b
 38356  00EA06  EE22  F0AA         	lfsr	2,_LUN+12
 38357  00EA0A  D801               	call	u11348
 38358  00EA0C  D00A               	goto	u11349
 38359  00EA0E                     u11348:
 38360  00EA0E  0005               	push	
 38361  00EA10  6EFA               	movwf	pclath,c
 38362  00EA12  50DE               	movf	postinc2,w,c
 38363  00EA14  6EFD               	movwf	tosl,c
 38364  00EA16  50DE               	movf	postinc2,w,c
 38365  00EA18  6EFE               	movwf	tosh,c
 38366  00EA1A  50DE               	movf	postinc2,w,c
 38367  00EA1C  6EFF               	movwf	tosu,c
 38368  00EA1E  50FA               	movf	pclath,w,c
 38369  00EA20  0012               	return		;indir
 38370  00EA22                     u11349:
 38371  00EA22  06E8               	decf	wreg,f,c
 38372  00EA24  B4D8               	btfsc	status,2,c
 38373  00EA26  D01B               	goto	l691
 38374                           
 38375                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 38376  00EA28  0E64               	movlw	100
 38377  00EA2A  0101               	movlb	1	; () banked
 38378  00EA2C  6153               	cpfslt	_MSDRetryAttempt& (0+255),b
 38379  00EA2E  D002               	goto	l690
 38380                           
 38381                           ; BSR set to: 1
 38382                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 38383  00EA30  2B53               	incf	_MSDRetryAttempt& (0+255),f,b
 38384                           
 38385                           ;usb_device_msd.c: 1088: break;
 38386  00EA32  D087               	goto	l684
 38387  00EA34                     l690:
 38388                           
 38389                           ; BSR set to: 1
 38390                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 38391                           
 38392                           ; BSR set to: 1
 38393  00EA34  0E02               	movlw	2
 38394  00EA36  010D               	movlb	13	; () banked
 38395  00EA38  6F8C               	movwf	140,b	;volatile
 38396                           
 38397                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 38398  00EA3A  0102               	movlb	2	; () banked
 38399  00EA3C  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 38400  00EA3E  0BF0               	andlw	-16
 38401  00EA40  0903               	iorlw	3
 38402  00EA42  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 38403                           
 38404                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 38405  00EA44  0E00               	movlw	0
 38406  00EA46  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 38407                           
 38408                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 38409  00EA48  0E00               	movlw	0
 38410  00EA4A  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 38411                           
 38412                           ; BSR set to: 2
 38413                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 38414  00EA4C  0E01               	movlw	1
 38415  00EA4E  0100               	movlb	0	; () banked
 38416  00EA50  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 38417  00EA52  0E02               	movlw	2
 38418  00EA54  EC90  F08A         	call	_USBStallEndpoint
 38419  00EA58  D05F               	goto	l13485
 38420  00EA5A                     L40:
 38421  00EA5A  6F55               	movwf	_MSDReadState& (0+255),b
 38422                           
 38423                           ;usb_device_msd.c: 1109: break;
 38424  00EA5C  D072               	goto	l684
 38425  00EA5E                     l691:
 38426                           
 38427                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 38428                           
 38429                           ; BSR set to: 1
 38430                           
 38431                           ; BSR set to: 1
 38432  00EA5E  0E01               	movlw	1
 38433  00EA60  0101               	movlb	1	; () banked
 38434  00EA62  2723               	addwf	_LBA& (0+255),f,b
 38435  00EA64  0E00               	movlw	0
 38436  00EA66  2324               	addwfc	(_LBA+1)& (0+255),f,b
 38437  00EA68  2325               	addwfc	(_LBA+2)& (0+255),f,b
 38438  00EA6A  2326               	addwfc	(_LBA+3)& (0+255),f,b
 38439                           
 38440                           ; BSR set to: 1
 38441                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 38442  00EA6C  0E00               	movlw	0
 38443  00EA6E  010D               	movlb	13	; () banked
 38444  00EA70  6F88               	movwf	136,b	;volatile
 38445  00EA72  0E02               	movlw	2
 38446  00EA74  6F89               	movwf	137,b	;volatile
 38447  00EA76  0E00               	movlw	0
 38448  00EA78  6F8A               	movwf	138,b	;volatile
 38449  00EA7A  0E00               	movlw	0
 38450  00EA7C  6F8B               	movwf	139,b	;volatile
 38451                           
 38452                           ; BSR set to: 13
 38453                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 38454  00EA7E  0E00               	movlw	0
 38455  00EA80  0101               	movlb	1	; () banked
 38456  00EA82  6F42               	movwf	_ptrNextData& (0+255),b
 38457  00EA84  0E06               	movlw	6
 38458  00EA86  6F43               	movwf	(_ptrNextData+1)& (0+255),b
 38459                           
 38460                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 38461  00EA88  0E03               	movlw	3
 38462  00EA8A  6F55               	movwf	_MSDReadState& (0+255),b
 38463  00EA8C                     
 38464                           ; BSR set to: 1
 38465                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 38466                           
 38467                           ; BSR set to: 1
 38468  00EA8C  010D               	movlb	13	; () banked
 38469  00EA8E  5188               	movf	136,w,b	;volatile
 38470  00EA90  1189               	iorwf	137,w,b	;volatile
 38471  00EA92  118A               	iorwf	138,w,b	;volatile
 38472  00EA94  118B               	iorwf	139,w,b	;volatile
 38473  00EA96  A4D8               	btfss	status,2,c
 38474  00EA98  D002               	goto	l693
 38475                           
 38476                           ; BSR set to: 13
 38477                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 38478  00EA9A  0E01               	movlw	1
 38479  00EA9C  D03E               	goto	L42
 38480  00EA9E                     l693:
 38481                           
 38482                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 38483                           
 38484                           ; BSR set to: 1
 38485  00EA9E  0E04               	movlw	4
 38486  00EAA0  0101               	movlb	1	; () banked
 38487  00EAA2  6F55               	movwf	_MSDReadState& (0+255),b
 38488  00EAA4                     
 38489                           ; BSR set to: 1
 38490                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 38491                           
 38492                           ; BSR set to: 1
 38493  00EAA4  513E               	movf	_USBMSDInHandle& (0+255),w,b
 38494  00EAA6  113F               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 38495  00EAA8  B4D8               	btfsc	status,2,c
 38496  00EAAA  D006               	goto	l695
 38497                           
 38498                           ; BSR set to: 1
 38499  00EAAC  C13E  FFD9         	movff	_USBMSDInHandle,fsr2l
 38500  00EAB0  C13F  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 38501  00EAB4  BEDF               	btfsc	indf2,7,c
 38502  00EAB6  D045               	goto	l684
 38503  00EAB8                     l695:
 38504                           
 38505                           ; BSR set to: 1
 38506                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 38507                           
 38508                           ; BSR set to: 1
 38509  00EAB8  0E01               	movlw	1
 38510  00EABA  0100               	movlb	0	; () banked
 38511  00EABC  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 38512  00EABE  C142  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 38513  00EAC2  C143  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 38514  00EAC6  0E40               	movlw	64
 38515  00EAC8  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 38516  00EACA  0E02               	movlw	2
 38517  00EACC  EC15  F08B         	call	_USBTransferOnePacket
 38518  00EAD0  C060  F13E         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 38519  00EAD4  C061  F13F         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 38520                           
 38521                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 38522  00EAD8  0E03               	movlw	3
 38523  00EADA  0101               	movlb	1	; () banked
 38524  00EADC  6F55               	movwf	_MSDReadState& (0+255),b
 38525                           
 38526                           ; BSR set to: 1
 38527                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 38528  00EADE  0E40               	movlw	64
 38529  00EAE0  0102               	movlb	2	; () banked
 38530  00EAE2  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 38531  00EAE4  0E00               	movlw	0
 38532  00EAE6  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 38533  00EAE8  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 38534  00EAEA  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 38535                           
 38536                           ; BSR set to: 2
 38537                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 38538  00EAEC  0E40               	movlw	64
 38539  00EAEE  010D               	movlb	13	; () banked
 38540  00EAF0  5F88               	subwf	136,f,b	;volatile
 38541  00EAF2  0E00               	movlw	0
 38542  00EAF4  5B89               	subwfb	137,f,b	;volatile
 38543  00EAF6  5B8A               	subwfb	138,f,b	;volatile
 38544  00EAF8  5B8B               	subwfb	139,f,b	;volatile
 38545                           
 38546                           ; BSR set to: 13
 38547                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 38548  00EAFA  0E40               	movlw	64
 38549  00EAFC  0101               	movlb	1	; () banked
 38550  00EAFE  2742               	addwf	_ptrNextData& (0+255),f,b
 38551  00EB00  0E00               	movlw	0
 38552  00EB02  2343               	addwfc	(_ptrNextData+1)& (0+255),f,b
 38553                           
 38554                           ;usb_device_msd.c: 1149: break;
 38555  00EB04  D01E               	goto	l684
 38556  00EB06                     
 38557                           ; BSR set to: 1
 38558                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 38559                           
 38560                           ; BSR set to: 1
 38561  00EB06  0E02               	movlw	2
 38562  00EB08  010D               	movlb	13	; () banked
 38563  00EB0A  6F8C               	movwf	140,b	;volatile
 38564                           
 38565                           ; BSR set to: 13
 38566                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 38567  00EB0C  0E01               	movlw	1
 38568  00EB0E  0100               	movlb	0	; () banked
 38569  00EB10  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 38570  00EB12  0E02               	movlw	2
 38571  00EB14  EC90  F08A         	call	_USBStallEndpoint
 38572  00EB18                     l13485:
 38573                           
 38574                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 38575  00EB18  0E00               	movlw	0
 38576  00EB1A                     L42:
 38577  00EB1A  0101               	movlb	1	; () banked
 38578  00EB1C  D79E               	goto	L40
 38579  00EB1E                     l681:
 38580                           
 38581                           ; BSR set to: 1
 38582  00EB1E  0101               	movlb	1	; () banked
 38583  00EB20  5155               	movf	_MSDReadState& (0+255),w,b
 38584                           
 38585                           ; Switch size 1, requested type "space"
 38586                           ; Number of cases is 5, Range of values is 0 to 4
 38587                           ; switch strategies available:
 38588                           ; Name         Instructions Cycles
 38589                           ; simple_byte           16     9 (average)
 38590                           ;	Chosen strategy is simple_byte
 38591  00EB22  0A00               	xorlw	0	; case 0
 38592  00EB24  B4D8               	btfsc	status,2,c
 38593  00EB26  D71C               	goto	l682
 38594  00EB28  0A01               	xorlw	1	; case 1
 38595  00EB2A  B4D8               	btfsc	status,2,c
 38596  00EB2C  D746               	goto	l685
 38597  00EB2E  0A03               	xorlw	3	; case 2
 38598  00EB30  B4D8               	btfsc	status,2,c
 38599  00EB32  D74E               	goto	l687
 38600  00EB34  0A01               	xorlw	1	; case 3
 38601  00EB36  B4D8               	btfsc	status,2,c
 38602  00EB38  D7A9               	goto	l692
 38603  00EB3A  0A07               	xorlw	7	; case 4
 38604  00EB3C  B4D8               	btfsc	status,2,c
 38605  00EB3E  D7B2               	goto	l694
 38606  00EB40  D7E2               	goto	l696
 38607  00EB42                     l684:
 38608                           
 38609                           ;usb_device_msd.c: 1161: return MSDReadState;
 38610                           
 38611                           ; BSR set to: 1
 38612  00EB42  0101               	movlb	1	; () banked
 38613  00EB44  5155               	movf	_MSDReadState& (0+255),w,b
 38614  00EB46  0012               	return	
 38615  00EB48                     __end_of_MSDReadHandler:
 38616                           	opt stack 0
 38617                           tosu	equ	0xFFF
 38618                           tosh	equ	0xFFE
 38619                           tosl	equ	0xFFD
 38620                           pclath	equ	0xFFA
 38621                           tblptru	equ	0xFF8
 38622                           tblptrh	equ	0xFF7
 38623                           tblptrl	equ	0xFF6
 38624                           tablat	equ	0xFF5
 38625                           prodh	equ	0xFF4
 38626                           prodl	equ	0xFF3
 38627                           intcon	equ	0xFF2
 38628                           postinc0	equ	0xFEE
 38629                           wreg	equ	0xFE8
 38630                           indf1	equ	0xFE7
 38631                           postinc1	equ	0xFE6
 38632                           postdec1	equ	0xFE5
 38633                           plusw1	equ	0xFE3
 38634                           fsr1h	equ	0xFE2
 38635                           fsr1l	equ	0xFE1
 38636                           indf2	equ	0xFDF
 38637                           postinc2	equ	0xFDE
 38638                           postdec2	equ	0xFDD
 38639                           plusw2	equ	0xFDB
 38640                           fsr2h	equ	0xFDA
 38641                           fsr2l	equ	0xFD9
 38642                           status	equ	0xFD8
 38643                           
 38644 ;; *************** function _MSDCheckForErrorCases *****************
 38645 ;; Defined at:
 38646 ;;		line 1434 in file "usb_device_msd.c"
 38647 ;; Parameters:    Size  Location     Type
 38648 ;;  DeviceBytes     4   10[BANK0 ] unsigned long 
 38649 ;; Auto vars:     Size  Location     Type
 38650 ;;  DeviceNoData    1   16[BANK0 ] unsigned char 
 38651 ;;  MSDErrorCase    1   15[BANK0 ] unsigned char 
 38652 ;;  HostMoreData    1   14[BANK0 ] unsigned char 
 38653 ;; Return value:  Size  Location     Type
 38654 ;;                  1    wreg      unsigned char 
 38655 ;; Registers used:
 38656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38657 ;; Tracked objects:
 38658 ;;		On entry : 0/0
 38659 ;;		On exit  : 0/0
 38660 ;;		Unchanged: 0/0
 38661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38662 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38663 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38665 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38666 ;;Total ram usage:        7 bytes
 38667 ;; Hardware stack levels used:    1
 38668 ;; Hardware stack levels required when called:   12
 38669 ;; This function calls:
 38670 ;;		_MSDErrorHandler
 38671 ;; This function is called by:
 38672 ;;		_MSDProcessCommandMediaPresent
 38673 ;;		_MSDReadHandler
 38674 ;;		_MSDWriteHandler
 38675 ;; This function uses a non-reentrant model
 38676 ;;
 38677                           
 38678                           	psect	text146
 38679  010FD0                     __ptext146:
 38680                           	opt stack 0
 38681  010FD0                     _MSDCheckForErrorCases:
 38682                           	opt stack 13
 38683                           
 38684                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 38685                           
 38686                           ; BSR set to: 1
 38687                           ;incstack = 0
 38688  010FD0  0100               	movlb	0	; () banked
 38689  010FD2  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 38690  010FD4  116B               	iorwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 38691  010FD6  116C               	iorwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 38692  010FD8  116D               	iorwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 38693  010FDA  A4D8               	btfss	status,2,c
 38694  010FDC  D002               	goto	l726
 38695                           
 38696                           ; BSR set to: 0
 38697                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 38698  010FDE  0E01               	movlw	1
 38699  010FE0  D001               	goto	L43
 38700  010FE2                     l726:
 38701                           
 38702                           ; BSR set to: 0
 38703                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 38704                           
 38705                           ; BSR set to: 0
 38706  010FE2  0E00               	movlw	0
 38707  010FE4                     L43:
 38708  010FE4  6F70               	movwf	MSDCheckForErrorCases@DeviceNoData& (0+255),b
 38709                           
 38710                           ; BSR set to: 0
 38711                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 38712                           
 38713                           ; BSR set to: 0
 38714  010FE6  0101               	movlb	1	; () banked
 38715  010FE8  0550               	decf	_MSDHostNoData& (0+255),w,b
 38716  010FEA  A4D8               	btfss	status,2,c
 38717  010FEC  D006               	goto	l728
 38718                           
 38719                           ; BSR set to: 1
 38720  010FEE  0100               	movlb	0	; () banked
 38721  010FF0  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 38722  010FF2  A4D8               	btfss	status,2,c
 38723  010FF4  D002               	goto	l728
 38724                           
 38725                           ; BSR set to: 0
 38726                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 38727  010FF6  0E00               	movlw	0
 38728                           
 38729                           ; BSR set to: 0
 38730  010FF8  0012               	return	
 38731  010FFA                     l728:
 38732                           
 38733                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 38734                           
 38735                           ; BSR set to: 0
 38736  010FFA  0100               	movlb	0	; () banked
 38737  010FFC  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 38738  010FFE  0102               	movlb	2	; () banked
 38739  011000  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 38740  011002  E120               	bnz	l13077
 38741  011004  0100               	movlb	0	; () banked
 38742  011006  516B               	movf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 38743  011008  0102               	movlb	2	; () banked
 38744  01100A  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 38745  01100C  E11B               	bnz	l13077
 38746  01100E  0100               	movlb	0	; () banked
 38747  011010  516C               	movf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 38748  011012  0102               	movlb	2	; () banked
 38749  011014  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 38750  011016  E116               	bnz	l13077
 38751  011018  0100               	movlb	0	; () banked
 38752  01101A  516D               	movf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 38753  01101C  0102               	movlb	2	; () banked
 38754  01101E  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 38755  011020  A4D8               	btfss	status,2,c
 38756  011022  D010               	goto	l734
 38757                           
 38758                           ; BSR set to: 2
 38759                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 38760  011024  0101               	movlb	1	; () banked
 38761  011026  0557               	decf	_MSD_State& (0+255),w,b
 38762  011028  A4D8               	btfss	status,2,c
 38763  01102A  D006               	goto	l731
 38764                           
 38765                           ; BSR set to: 1
 38766                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 38767  01102C  0E2A               	movlw	42
 38768  01102E  1956               	xorwf	_MSDCommandState& (0+255),w,b
 38769  011030  B4D8               	btfsc	status,2,c
 38770  011032  D008               	goto	l734
 38771                           
 38772                           ; BSR set to: 1
 38773                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 38774  011034  0E00               	movlw	0
 38775                           
 38776                           ; BSR set to: 1
 38777  011036  0012               	return	
 38778  011038                     l731:
 38779                           
 38780                           ; BSR set to: 1
 38781                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 38782                           
 38783                           ; BSR set to: 1
 38784  011038  0E2A               	movlw	42
 38785  01103A  1956               	xorwf	_MSDCommandState& (0+255),w,b
 38786  01103C  A4D8               	btfss	status,2,c
 38787  01103E  D002               	goto	l734
 38788                           
 38789                           ; BSR set to: 1
 38790                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 38791  011040  0E00               	movlw	0
 38792                           
 38793                           ; BSR set to: 1
 38794  011042  0012               	return	
 38795  011044                     l734:
 38796  011044                     l13077:
 38797                           
 38798                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 38799  011044  0102               	movlb	2	; () banked
 38800  011046  5108               	movf	(_gblCBW+8)& (0+255),w,b
 38801  011048  0100               	movlb	0	; () banked
 38802  01104A  5D6A               	subwf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 38803  01104C  0102               	movlb	2	; () banked
 38804  01104E  5109               	movf	(_gblCBW+9)& (0+255),w,b
 38805  011050  0100               	movlb	0	; () banked
 38806  011052  596B               	subwfb	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 38807  011054  0102               	movlb	2	; () banked
 38808  011056  510A               	movf	(_gblCBW+10)& (0+255),w,b
 38809  011058  0100               	movlb	0	; () banked
 38810  01105A  596C               	subwfb	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 38811  01105C  0102               	movlb	2	; () banked
 38812  01105E  510B               	movf	(_gblCBW+11)& (0+255),w,b
 38813  011060  0100               	movlb	0	; () banked
 38814  011062  596D               	subwfb	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 38815  011064  B0D8               	btfsc	status,0,c
 38816  011066  D002               	goto	l735
 38817                           
 38818                           ; BSR set to: 0
 38819                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 38820  011068  0E01               	movlw	1
 38821  01106A  D001               	goto	L44
 38822  01106C                     l735:
 38823                           
 38824                           ; BSR set to: 0
 38825                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 38826                           
 38827                           ; BSR set to: 0
 38828  01106C  0E00               	movlw	0
 38829  01106E                     L44:
 38830  01106E  6F6E               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),b
 38831                           
 38832                           ; BSR set to: 0
 38833                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 38834                           
 38835                           ; BSR set to: 0
 38836  011070  0E02               	movlw	2
 38837  011072  0101               	movlb	1	; () banked
 38838  011074  1957               	xorwf	_MSD_State& (0+255),w,b
 38839  011076  A4D8               	btfss	status,2,c
 38840  011078  D017               	goto	l737
 38841                           
 38842                           ; BSR set to: 1
 38843                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 38844  01107A  0E2A               	movlw	42
 38845  01107C  1956               	xorwf	_MSDCommandState& (0+255),w,b
 38846  01107E  B4D8               	btfsc	status,2,c
 38847  011080  D006               	goto	l738
 38848                           
 38849                           ; BSR set to: 1
 38850  011082  0100               	movlb	0	; () banked
 38851  011084  5170               	movf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 38852  011086  A4D8               	btfss	status,2,c
 38853  011088  D002               	goto	l738
 38854  01108A                     u10860:
 38855                           
 38856                           ; BSR set to: 0
 38857                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 38858  01108A  0E05               	movlw	5
 38859  01108C  D025               	goto	L49
 38860  01108E                     l738:
 38861                           
 38862                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 38863                           
 38864                           ; BSR set to: 0
 38865  01108E  0101               	movlb	1	; () banked
 38866  011090  0550               	decf	_MSDHostNoData& (0+255),w,b
 38867  011092  B4D8               	btfsc	status,2,c
 38868  011094  D014               	goto	u10910
 38869                           
 38870                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 38871                           
 38872                           ; BSR set to: 0
 38873                           
 38874                           ; BSR set to: 1
 38875                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 38876  011096  0100               	movlb	0	; () banked
 38877  011098  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 38878  01109A  B4D8               	btfsc	status,2,c
 38879  01109C  D003               	goto	u10890
 38880                           
 38881                           ; BSR set to: 0
 38882                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 38883                           
 38884                           ; BSR set to: 0
 38885                           
 38886                           ; BSR set to: 0
 38887                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 38888  01109E  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 38889  0110A0  A4D8               	btfss	status,2,c
 38890  0110A2  D7F3               	goto	u10860
 38891  0110A4                     u10890:
 38892                           
 38893                           ; BSR set to: 0
 38894                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 38895  0110A4  0E04               	movlw	4
 38896  0110A6  D018               	goto	L49
 38897  0110A8                     l737:
 38898                           
 38899                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 38900                           
 38901                           ; BSR set to: 0
 38902  0110A8  0E2A               	movlw	42
 38903  0110AA  0101               	movlb	1	; () banked
 38904  0110AC  1956               	xorwf	_MSDCommandState& (0+255),w,b
 38905  0110AE  A4D8               	btfss	status,2,c
 38906  0110B0  D002               	goto	l747
 38907                           
 38908                           ; BSR set to: 1
 38909                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 38910  0110B2  0E03               	movlw	3
 38911  0110B4  D005               	goto	L48
 38912  0110B6                     l747:
 38913                           
 38914                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 38915                           
 38916                           ; BSR set to: 0
 38917  0110B6  0101               	movlb	1	; () banked
 38918  0110B8  0550               	decf	_MSDHostNoData& (0+255),w,b
 38919  0110BA  A4D8               	btfss	status,2,c
 38920  0110BC  D003               	goto	l749
 38921  0110BE                     u10910:
 38922                           
 38923                           ; BSR set to: 1
 38924                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 38925  0110BE  0E01               	movlw	1
 38926  0110C0                     L48:
 38927  0110C0  0100               	movlb	0	; () banked
 38928  0110C2  D00A               	goto	L49
 38929  0110C4                     l749:
 38930                           
 38931                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 38932                           
 38933                           ; BSR set to: 0
 38934  0110C4  0100               	movlb	0	; () banked
 38935  0110C6  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 38936  0110C8  B4D8               	btfsc	status,2,c
 38937  0110CA  D003               	goto	u10930
 38938                           
 38939                           ; BSR set to: 0
 38940                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 38941                           
 38942                           ; BSR set to: 0
 38943                           
 38944                           ; BSR set to: 0
 38945                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 38946  0110CC  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 38947  0110CE  A4D8               	btfss	status,2,c
 38948  0110D0  D002               	goto	l753
 38949  0110D2                     u10930:
 38950                           
 38951                           ; BSR set to: 0
 38952                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 38953  0110D2  0E02               	movlw	2
 38954  0110D4  D001               	goto	L49
 38955  0110D6                     l753:
 38956                           
 38957                           ; BSR set to: 0
 38958                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 38959                           
 38960                           ; BSR set to: 0
 38961  0110D6  0E03               	movlw	3
 38962  0110D8                     L49:
 38963  0110D8  6F6F               	movwf	MSDCheckForErrorCases@MSDErrorCase& (0+255),b
 38964                           
 38965                           ; BSR set to: 0
 38966                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 38967                           
 38968                           ; BSR set to: 0
 38969                           
 38970                           ; BSR set to: 0
 38971                           
 38972                           ; BSR set to: 0
 38973                           
 38974                           ; BSR set to: 0
 38975                           
 38976                           ; BSR set to: 0
 38977  0110DA  516F               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 38978  0110DC  EC5B  F087         	call	_MSDErrorHandler
 38979                           
 38980                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 38981  0110E0  0100               	movlb	0	; () banked
 38982  0110E2  516F               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 38983  0110E4  0012               	return	
 38984  0110E6                     __end_of_MSDCheckForErrorCases:
 38985                           	opt stack 0
 38986                           tosu	equ	0xFFF
 38987                           tosh	equ	0xFFE
 38988                           tosl	equ	0xFFD
 38989                           pclath	equ	0xFFA
 38990                           tblptru	equ	0xFF8
 38991                           tblptrh	equ	0xFF7
 38992                           tblptrl	equ	0xFF6
 38993                           tablat	equ	0xFF5
 38994                           prodh	equ	0xFF4
 38995                           prodl	equ	0xFF3
 38996                           intcon	equ	0xFF2
 38997                           postinc0	equ	0xFEE
 38998                           wreg	equ	0xFE8
 38999                           indf1	equ	0xFE7
 39000                           postinc1	equ	0xFE6
 39001                           postdec1	equ	0xFE5
 39002                           plusw1	equ	0xFE3
 39003                           fsr1h	equ	0xFE2
 39004                           fsr1l	equ	0xFE1
 39005                           indf2	equ	0xFDF
 39006                           postinc2	equ	0xFDE
 39007                           postdec2	equ	0xFDD
 39008                           plusw2	equ	0xFDB
 39009                           fsr2h	equ	0xFDA
 39010                           fsr2l	equ	0xFD9
 39011                           status	equ	0xFD8
 39012                           
 39013 ;; *************** function _MSDErrorHandler *****************
 39014 ;; Defined at:
 39015 ;;		line 1577 in file "usb_device_msd.c"
 39016 ;; Parameters:    Size  Location     Type
 39017 ;;  ErrorCase       1    wreg     unsigned char 
 39018 ;; Auto vars:     Size  Location     Type
 39019 ;;  ErrorCase       1    8[BANK0 ] unsigned char 
 39020 ;;  OldMSD_State    1    9[BANK0 ] unsigned char 
 39021 ;; Return value:  Size  Location     Type
 39022 ;;                  1    wreg      void 
 39023 ;; Registers used:
 39024 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39025 ;; Tracked objects:
 39026 ;;		On entry : 0/0
 39027 ;;		On exit  : 0/0
 39028 ;;		Unchanged: 0/0
 39029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39031 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39033 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39034 ;;Total ram usage:        2 bytes
 39035 ;; Hardware stack levels used:    1
 39036 ;; Hardware stack levels required when called:   11
 39037 ;; This function calls:
 39038 ;;		_ResetSenseData
 39039 ;;		_USBStallEndpoint
 39040 ;; This function is called by:
 39041 ;;		_MSDProcessCommandMediaAbsent
 39042 ;;		_MSDProcessCommandMediaPresent
 39043 ;;		_MSDCheckForErrorCases
 39044 ;; This function uses a non-reentrant model
 39045 ;;
 39046                           
 39047                           	psect	text147
 39048  010EB6                     __ptext147:
 39049                           	opt stack 0
 39050  010EB6                     _MSDErrorHandler:
 39051                           	opt stack 13
 39052                           
 39053                           ;incstack = 0
 39054                           ;MSDErrorHandler@ErrorCase stored from wreg
 39055  010EB6  0100               	movlb	0	; () banked
 39056  010EB8  6F68               	movwf	MSDErrorHandler@ErrorCase& (0+255),b
 39057                           
 39058                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 39059  010EBA  0101               	movlb	1	; () banked
 39060  010EBC  513E               	movf	_USBMSDInHandle& (0+255),w,b
 39061  010EBE  113F               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 39062  010EC0  B4D8               	btfsc	status,2,c
 39063  010EC2  D006               	goto	u10510
 39064                           
 39065                           ; BSR set to: 1
 39066  010EC4  C13E  FFD9         	movff	_USBMSDInHandle,fsr2l
 39067  010EC8  C13F  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 39068  010ECC  BEDF               	btfsc	indf2,7,c
 39069  010ECE  0012               	return	
 39070  010ED0                     u10510:
 39071                           
 39072                           ; BSR set to: 1
 39073                           
 39074                           ; BSR set to: 1
 39075  010ED0  5140               	movf	_USBMSDOutHandle& (0+255),w,b
 39076  010ED2  1141               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 39077  010ED4  B4D8               	btfsc	status,2,c
 39078  010ED6  D006               	goto	l757
 39079                           
 39080                           ; BSR set to: 1
 39081  010ED8  C140  FFD9         	movff	_USBMSDOutHandle,fsr2l
 39082  010EDC  C141  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 39083  010EE0  BEDF               	btfsc	indf2,7,c
 39084  010EE2  0012               	return	
 39085  010EE4                     l757:
 39086                           
 39087                           ; BSR set to: 1
 39088                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 39089  010EE4  C157  F069         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 39090                           
 39091                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 39092  010EE8  6956               	setf	_MSDCommandState& (0+255),b
 39093                           
 39094                           ; BSR set to: 1
 39095                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 39096  010EEA  0E00               	movlw	0
 39097  010EEC  6F55               	movwf	_MSDReadState& (0+255),b
 39098                           
 39099                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 39100  010EEE  0E00               	movlw	0
 39101  010EF0  6F54               	movwf	_MSDWriteState& (0+255),b
 39102                           
 39103                           ; BSR set to: 1
 39104                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 39105  010EF2  C208  FD88         	movff	_gblCBW+8,3464	;volatile
 39106  010EF6  C209  FD89         	movff	_gblCBW+9,3465	;volatile
 39107  010EFA  C20A  FD8A         	movff	_gblCBW+10,3466	;volatile
 39108  010EFE  C20B  FD8B         	movff	_gblCBW+11,3467	;volatile
 39109                           
 39110                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 39111  010F02  0E01               	movlw	1
 39112  010F04  010D               	movlb	13	; () banked
 39113  010F06  6F8C               	movwf	140,b	;volatile
 39114                           
 39115                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 39116  010F08  0E03               	movlw	3
 39117  010F0A  0101               	movlb	1	; () banked
 39118  010F0C  6F57               	movwf	_MSD_State& (0+255),b
 39119                           
 39120                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 39121  010F0E  D04B               	goto	l763
 39122  010F10                     
 39123                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 39124                           
 39125                           ; BSR set to: 1
 39126  010F10  0E02               	movlw	2
 39127  010F12  010D               	movlb	13	; () banked
 39128  010F14  6F8C               	movwf	140,b	;volatile
 39129                           
 39130                           ;usb_device_msd.c: 1607: break;
 39131  010F16  0012               	return	
 39132  010F18                     
 39133                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 39134                           
 39135                           ; BSR set to: 13
 39136  010F18  0E01               	movlw	1
 39137  010F1A  0100               	movlb	0	; () banked
 39138  010F1C  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 39139  010F1E  0E02               	movlw	2
 39140  010F20  EC90  F08A         	call	_USBStallEndpoint
 39141                           
 39142                           ;usb_device_msd.c: 1611: break;
 39143  010F24  0012               	return	
 39144  010F26                     
 39145                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 39146  010F26  0E02               	movlw	2
 39147  010F28  010D               	movlb	13	; () banked
 39148  010F2A  6F8C               	movwf	140,b	;volatile
 39149                           
 39150                           ; BSR set to: 13
 39151                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 39152  010F2C  0E01               	movlw	1
 39153  010F2E  0100               	movlb	0	; () banked
 39154  010F30  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 39155  010F32  0E02               	movlw	2
 39156  010F34  EC90  F08A         	call	_USBStallEndpoint
 39157                           
 39158                           ;usb_device_msd.c: 1616: break;
 39159  010F38  0012               	return	
 39160  010F3A                     
 39161                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 39162  010F3A  0E00               	movlw	0
 39163  010F3C  0100               	movlb	0	; () banked
 39164  010F3E  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 39165  010F40  0E02               	movlw	2
 39166  010F42  EC90  F08A         	call	_USBStallEndpoint
 39167                           
 39168                           ;usb_device_msd.c: 1620: break;
 39169  010F46  0012               	return	
 39170  010F48                     
 39171                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 39172  010F48  0E02               	movlw	2
 39173  010F4A  010D               	movlb	13	; () banked
 39174  010F4C  6F8C               	movwf	140,b	;volatile
 39175                           
 39176                           ; BSR set to: 13
 39177                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 39178  010F4E  0E00               	movlw	0
 39179  010F50  0100               	movlb	0	; () banked
 39180  010F52  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 39181  010F54  0E02               	movlw	2
 39182  010F56  EC90  F08A         	call	_USBStallEndpoint
 39183                           
 39184                           ;usb_device_msd.c: 1625: break;
 39185  010F5A  0012               	return	
 39186  010F5C                     
 39187                           ;usb_device_msd.c: 1628: ResetSenseData();
 39188  010F5C  EC00  F0A7         	call	_ResetSenseData	;wreg free
 39189                           
 39190                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 39191  010F60  0102               	movlb	2	; () banked
 39192  010F62  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 39193  010F64  0BF0               	andlw	-16
 39194  010F66  0905               	iorlw	5
 39195  010F68  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 39196                           
 39197                           ; BSR set to: 2
 39198                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 39199  010F6A  0E20               	movlw	32
 39200  010F6C  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 39201                           
 39202                           ; BSR set to: 2
 39203                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 39204  010F6E  0E00               	movlw	0
 39205  010F70  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 39206                           
 39207                           ; BSR set to: 2
 39208                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 39209  010F72  0E02               	movlw	2
 39210  010F74  0100               	movlb	0	; () banked
 39211  010F76  1969               	xorwf	MSDErrorHandler@OldMSD_State& (0+255),w,b
 39212  010F78  A4D8               	btfss	status,2,c
 39213  010F7A  D00E               	goto	l771
 39214                           
 39215                           ; BSR set to: 0
 39216  010F7C  0102               	movlb	2	; () banked
 39217  010F7E  5108               	movf	(_gblCBW+8)& (0+255),w,b
 39218  010F80  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 39219  010F82  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 39220  010F84  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 39221  010F86  B4D8               	btfsc	status,2,c
 39222  010F88  D007               	goto	l771
 39223                           
 39224                           ; BSR set to: 2
 39225                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 39226  010F8A  0E00               	movlw	0
 39227  010F8C  0100               	movlb	0	; () banked
 39228  010F8E  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 39229  010F90  0E02               	movlw	2
 39230  010F92  EC90  F08A         	call	_USBStallEndpoint
 39231                           
 39232                           ;usb_device_msd.c: 1636: }
 39233  010F96  0012               	return	
 39234  010F98                     l771:
 39235                           
 39236                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 39237  010F98  0E01               	movlw	1
 39238  010F9A  0100               	movlb	0	; () banked
 39239  010F9C  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 39240  010F9E  0E02               	movlw	2
 39241  010FA0  EC90  F08A         	call	_USBStallEndpoint
 39242                           
 39243                           ;usb_device_msd.c: 1644: }
 39244                           
 39245                           ;usb_device_msd.c: 1643: break;
 39246                           
 39247                           ;usb_device_msd.c: 1642: default:
 39248                           
 39249                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 39250  010FA4  0012               	return	
 39251  010FA6                     l763:
 39252  010FA6  0100               	movlb	0	; () banked
 39253  010FA8  5168               	movf	MSDErrorHandler@ErrorCase& (0+255),w,b
 39254                           
 39255                           ; Switch size 1, requested type "space"
 39256                           ; Number of cases is 6, Range of values is 1 to 127
 39257                           ; switch strategies available:
 39258                           ; Name         Instructions Cycles
 39259                           ; simple_byte           19    10 (average)
 39260                           ;	Chosen strategy is simple_byte
 39261  010FAA  0A01               	xorlw	1	; case 1
 39262  010FAC  B4D8               	btfsc	status,2,c
 39263  010FAE  D7B0               	goto	l764
 39264  010FB0  0A03               	xorlw	3	; case 2
 39265  010FB2  B4D8               	btfsc	status,2,c
 39266  010FB4  D7B1               	goto	l766
 39267  010FB6  0A01               	xorlw	1	; case 3
 39268  010FB8  B4D8               	btfsc	status,2,c
 39269  010FBA  D7B5               	goto	l767
 39270  010FBC  0A07               	xorlw	7	; case 4
 39271  010FBE  B4D8               	btfsc	status,2,c
 39272  010FC0  D7BC               	goto	l768
 39273  010FC2  0A01               	xorlw	1	; case 5
 39274  010FC4  B4D8               	btfsc	status,2,c
 39275  010FC6  D7C0               	goto	l769
 39276  010FC8  0A7A               	xorlw	122	; case 127
 39277  010FCA  A4D8               	btfss	status,2,c
 39278  010FCC  0012               	return	
 39279  010FCE  D7C6               	goto	l770
 39280  010FD0                     __end_of_MSDErrorHandler:
 39281                           	opt stack 0
 39282                           tosu	equ	0xFFF
 39283                           tosh	equ	0xFFE
 39284                           tosl	equ	0xFFD
 39285                           pclath	equ	0xFFA
 39286                           tblptru	equ	0xFF8
 39287                           tblptrh	equ	0xFF7
 39288                           tblptrl	equ	0xFF6
 39289                           tablat	equ	0xFF5
 39290                           prodh	equ	0xFF4
 39291                           prodl	equ	0xFF3
 39292                           intcon	equ	0xFF2
 39293                           postinc0	equ	0xFEE
 39294                           wreg	equ	0xFE8
 39295                           indf1	equ	0xFE7
 39296                           postinc1	equ	0xFE6
 39297                           postdec1	equ	0xFE5
 39298                           plusw1	equ	0xFE3
 39299                           fsr1h	equ	0xFE2
 39300                           fsr1l	equ	0xFE1
 39301                           indf2	equ	0xFDF
 39302                           postinc2	equ	0xFDE
 39303                           postdec2	equ	0xFDD
 39304                           plusw2	equ	0xFDB
 39305                           fsr2h	equ	0xFDA
 39306                           fsr2l	equ	0xFD9
 39307                           status	equ	0xFD8
 39308                           
 39309 ;; *************** function _USBStallEndpoint *****************
 39310 ;; Defined at:
 39311 ;;		line 1073 in file "usb_device.c"
 39312 ;; Parameters:    Size  Location     Type
 39313 ;;  ep              1    wreg     unsigned char 
 39314 ;;  dir             1    0[BANK0 ] unsigned char 
 39315 ;; Auto vars:     Size  Location     Type
 39316 ;;  ep              1    5[BANK0 ] unsigned char 
 39317 ;;  p               2    6[BANK0 ] PTR struct __BDT
 39318 ;;		 -> BDT(48), 
 39319 ;; Return value:  Size  Location     Type
 39320 ;;                  1    wreg      void 
 39321 ;; Registers used:
 39322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 39323 ;; Tracked objects:
 39324 ;;		On entry : 0/0
 39325 ;;		On exit  : 0/0
 39326 ;;		Unchanged: 0/0
 39327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39328 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39329 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39330 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39331 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39332 ;;Total ram usage:        8 bytes
 39333 ;; Hardware stack levels used:    1
 39334 ;; Hardware stack levels required when called:   10
 39335 ;; This function calls:
 39336 ;;		Nothing
 39337 ;; This function is called by:
 39338 ;;		_MSDTasks
 39339 ;;		_MSDReadHandler
 39340 ;;		_MSDWriteHandler
 39341 ;;		_MSDErrorHandler
 39342 ;; This function uses a non-reentrant model
 39343 ;;
 39344                           
 39345                           	psect	text148
 39346  011520                     __ptext148:
 39347                           	opt stack 0
 39348  011520                     _USBStallEndpoint:
 39349                           	opt stack 18
 39350                           
 39351                           ;incstack = 0
 39352                           ;USBStallEndpoint@ep stored from wreg
 39353  011520  0100               	movlb	0	; () banked
 39354  011522  6F65               	movwf	USBStallEndpoint@ep& (0+255),b
 39355                           
 39356                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 39357  011524  0100               	movlb	0	; () banked
 39358  011526  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 39359  011528  A4D8               	btfss	status,2,c
 39360  01152A  D02B               	goto	l192
 39361                           
 39362                           ; BSR set to: 0
 39363                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 39364  01152C  EE20 F001          	lfsr	2,1
 39365  011530  5059               	movf	_pBDTEntryEP0OutNext,w,c
 39366  011532  26D9               	addwf	fsr2l,f,c
 39367  011534  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 39368  011536  22DA               	addwfc	fsr2h,f,c
 39369  011538  0E08               	movlw	8
 39370  01153A  6EDF               	movwf	indf2,c
 39371                           
 39372                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 39373  01153C  EE20 F002          	lfsr	2,2
 39374  011540  5059               	movf	_pBDTEntryEP0OutNext,w,c
 39375  011542  26D9               	addwf	fsr2l,f,c
 39376  011544  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 39377  011546  22DA               	addwfc	fsr2h,f,c
 39378  011548  0E30               	movlw	48
 39379  01154A  6EDE               	movwf	postinc2,c
 39380  01154C  0E0D               	movlw	13
 39381  01154E  6EDD               	movwf	postdec2,c
 39382                           
 39383                           ; BSR set to: 0
 39384                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 39385  011550  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 39386  011554  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 39387  011558  0E0C               	movlw	12
 39388  01155A  6EDF               	movwf	indf2,c
 39389                           
 39390                           ; BSR set to: 0
 39391                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 39392  01155C  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 39393  011560  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 39394  011564  0E00               	movlw	0
 39395  011566  8EDB               	bsf	plusw2,7,c
 39396                           
 39397                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 39398  011568  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 39399  01156C  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 39400  011570  0E04               	movlw	4
 39401  011572  6EDF               	movwf	indf2,c
 39402                           
 39403                           ; BSR set to: 0
 39404                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 39405  011574  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 39406  011578  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 39407  01157C  0E00               	movlw	0
 39408  01157E  8EDB               	bsf	plusw2,7,c
 39409                           
 39410                           ;usb_device.c: 1089: }
 39411  011580  0012               	return	
 39412  011582                     l192:
 39413                           
 39414                           ; BSR set to: 0
 39415                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 39416                           
 39417                           ; BSR set to: 0
 39418  011582  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 39419  011584  6F61               	movwf	??_USBStallEndpoint& (0+255),b
 39420  011586  6B62               	clrf	(??_USBStallEndpoint+1)& (0+255),b
 39421  011588  90D8               	bcf	status,0,c
 39422  01158A  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 39423  01158C  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 39424  01158E  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 39425  011590  6F63               	movwf	(??_USBStallEndpoint+2)& (0+255),b
 39426  011592  6B64               	clrf	(??_USBStallEndpoint+3)& (0+255),b
 39427  011594  90D8               	bcf	status,0,c
 39428  011596  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 39429  011598  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 39430  01159A  90D8               	bcf	status,0,c
 39431  01159C  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 39432  01159E  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 39433  0115A0  5161               	movf	??_USBStallEndpoint& (0+255),w,b
 39434  0115A2  2763               	addwf	(??_USBStallEndpoint+2)& (0+255),f,b
 39435  0115A4  5162               	movf	(??_USBStallEndpoint+1)& (0+255),w,b
 39436  0115A6  2364               	addwfc	(??_USBStallEndpoint+3)& (0+255),f,b
 39437  0115A8  90D8               	bcf	status,0,c
 39438  0115AA  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 39439  0115AC  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 39440  0115AE  90D8               	bcf	status,0,c
 39441  0115B0  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 39442  0115B2  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 39443  0115B4  0E00               	movlw	0
 39444  0115B6  2563               	addwf	(??_USBStallEndpoint+2)& (0+255),w,b
 39445  0115B8  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 39446  0115BA  0E0D               	movlw	13
 39447  0115BC  2164               	addwfc	(??_USBStallEndpoint+3)& (0+255),w,b
 39448  0115BE  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 39449                           
 39450                           ; BSR set to: 0
 39451                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 39452  0115C0  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 39453  0115C4  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 39454  0115C8  0E00               	movlw	0
 39455  0115CA  84DB               	bsf	plusw2,2,c
 39456                           
 39457                           ; BSR set to: 0
 39458                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 39459  0115CC  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 39460  0115D0  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 39461  0115D4  0E00               	movlw	0
 39462  0115D6  8EDB               	bsf	plusw2,7,c
 39463                           
 39464                           ; BSR set to: 0
 39465                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 39466  0115D8  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 39467  0115DA  0D04               	mullw	4
 39468  0115DC  CFF3 F061          	movff	prodl,??_USBStallEndpoint
 39469  0115E0  CFF4 F062          	movff	prodh,??_USBStallEndpoint+1
 39470  0115E4  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 39471  0115E6  0D02               	mullw	2
 39472  0115E8  50F3               	movf	prodl,w,c
 39473  0115EA  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 39474  0115EC  50F4               	movf	prodh,w,c
 39475  0115EE  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 39476  0115F0  90D8               	bcf	status,0,c
 39477  0115F2  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 39478  0115F4  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 39479  0115F6  90D8               	bcf	status,0,c
 39480  0115F8  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 39481  0115FA  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 39482  0115FC  0E04               	movlw	4
 39483  0115FE  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 39484  011600  0E00               	movlw	0
 39485  011602  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 39486  011604  0E00               	movlw	0
 39487  011606  2561               	addwf	??_USBStallEndpoint& (0+255),w,b
 39488  011608  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 39489  01160A  0E0D               	movlw	13
 39490  01160C  2162               	addwfc	(??_USBStallEndpoint+1)& (0+255),w,b
 39491  01160E  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 39492                           
 39493                           ; BSR set to: 0
 39494                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 39495  011610  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 39496  011614  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 39497  011618  0E00               	movlw	0
 39498  01161A  84DB               	bsf	plusw2,2,c
 39499                           
 39500                           ; BSR set to: 0
 39501                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 39502  01161C  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 39503  011620  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 39504  011624  0E00               	movlw	0
 39505  011626  8EDB               	bsf	plusw2,7,c
 39506  011628  0012               	return	
 39507  01162A                     __end_of_USBStallEndpoint:
 39508                           	opt stack 0
 39509                           tosu	equ	0xFFF
 39510                           tosh	equ	0xFFE
 39511                           tosl	equ	0xFFD
 39512                           pclath	equ	0xFFA
 39513                           tblptru	equ	0xFF8
 39514                           tblptrh	equ	0xFF7
 39515                           tblptrl	equ	0xFF6
 39516                           tablat	equ	0xFF5
 39517                           prodh	equ	0xFF4
 39518                           prodl	equ	0xFF3
 39519                           intcon	equ	0xFF2
 39520                           postinc0	equ	0xFEE
 39521                           wreg	equ	0xFE8
 39522                           indf1	equ	0xFE7
 39523                           postinc1	equ	0xFE6
 39524                           postdec1	equ	0xFE5
 39525                           plusw1	equ	0xFE3
 39526                           fsr1h	equ	0xFE2
 39527                           fsr1l	equ	0xFE1
 39528                           indf2	equ	0xFDF
 39529                           postinc2	equ	0xFDE
 39530                           postdec2	equ	0xFDD
 39531                           plusw2	equ	0xFDB
 39532                           fsr2h	equ	0xFDA
 39533                           fsr2l	equ	0xFD9
 39534                           status	equ	0xFD8
 39535                           
 39536 ;; *************** function _ResetSenseData *****************
 39537 ;; Defined at:
 39538 ;;		line 1373 in file "usb_device_msd.c"
 39539 ;; Parameters:    Size  Location     Type
 39540 ;;		None
 39541 ;; Auto vars:     Size  Location     Type
 39542 ;;		None
 39543 ;; Return value:  Size  Location     Type
 39544 ;;                  1    wreg      void 
 39545 ;; Registers used:
 39546 ;;		wreg, status,2
 39547 ;; Tracked objects:
 39548 ;;		On entry : 0/0
 39549 ;;		On exit  : 0/0
 39550 ;;		Unchanged: 0/0
 39551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39556 ;;Total ram usage:        0 bytes
 39557 ;; Hardware stack levels used:    1
 39558 ;; Hardware stack levels required when called:   10
 39559 ;; This function calls:
 39560 ;;		Nothing
 39561 ;; This function is called by:
 39562 ;;		_MSDProcessCommandMediaAbsent
 39563 ;;		_MSDProcessCommandMediaPresent
 39564 ;;		_MSDErrorHandler
 39565 ;; This function uses a non-reentrant model
 39566 ;;
 39567                           
 39568                           	psect	text149
 39569  014E00                     __ptext149:
 39570                           	opt stack 0
 39571  014E00                     _ResetSenseData:
 39572                           	opt stack 16
 39573                           
 39574                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 39575                           
 39576                           ; BSR set to: 0
 39577                           ;incstack = 0
 39578  014E00  0102               	movlb	2	; () banked
 39579  014E02  911F               	bcf	_gblSenseData& (0+255),0,b
 39580  014E04  931F               	bcf	_gblSenseData& (0+255),1,b
 39581  014E06  951F               	bcf	_gblSenseData& (0+255),2,b
 39582  014E08  971F               	bcf	_gblSenseData& (0+255),3,b
 39583  014E0A  891F               	bsf	_gblSenseData& (0+255),4,b
 39584  014E0C  8B1F               	bsf	_gblSenseData& (0+255),5,b
 39585  014E0E  8D1F               	bsf	_gblSenseData& (0+255),6,b
 39586                           
 39587                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 39588  014E10  9F1F               	bcf	_gblSenseData& (0+255),7,b
 39589                           
 39590                           ; BSR set to: 2
 39591                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 39592  014E12  0E00               	movlw	0
 39593  014E14  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 39594                           
 39595                           ; BSR set to: 2
 39596                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 39597  014E16  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 39598  014E18  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 39599  014E1A  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 39600  014E1C  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 39601                           
 39602                           ; BSR set to: 2
 39603                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 39604  014E1E  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 39605                           
 39606                           ; BSR set to: 2
 39607                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 39608  014E20  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 39609                           
 39610                           ; BSR set to: 2
 39611                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 39612  014E22  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 39613                           
 39614                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 39615  014E24  0E00               	movlw	0
 39616  014E26  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 39617                           
 39618                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 39619  014E28  0E00               	movlw	0
 39620  014E2A  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 39621                           
 39622                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 39623  014E2C  0E00               	movlw	0
 39624  014E2E  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 39625                           
 39626                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 39627  014E30  0E00               	movlw	0
 39628  014E32  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 39629                           
 39630                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 39631  014E34  0E0A               	movlw	10
 39632  014E36  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 39633                           
 39634                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 39635  014E38  0E00               	movlw	0
 39636  014E3A  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 39637  014E3C  0E00               	movlw	0
 39638  014E3E  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 39639  014E40  0E00               	movlw	0
 39640  014E42  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 39641  014E44  0E00               	movlw	0
 39642  014E46  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 39643                           
 39644                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 39645  014E48  0E00               	movlw	0
 39646  014E4A  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 39647                           
 39648                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 39649  014E4C  0E00               	movlw	0
 39650  014E4E  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 39651                           
 39652                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 39653  014E50  0E00               	movlw	0
 39654  014E52  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 39655                           
 39656                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 39657  014E54  0E00               	movlw	0
 39658  014E56  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 39659                           
 39660                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 39661  014E58  0E00               	movlw	0
 39662  014E5A  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 39663                           
 39664                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 39665  014E5C  0E00               	movlw	0
 39666  014E5E  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 39667                           
 39668                           ; BSR set to: 2
 39669  014E60  0012               	return		;funcret
 39670  014E62                     __end_of_ResetSenseData:
 39671                           	opt stack 0
 39672                           tosu	equ	0xFFF
 39673                           tosh	equ	0xFFE
 39674                           tosl	equ	0xFFD
 39675                           pclath	equ	0xFFA
 39676                           tblptru	equ	0xFF8
 39677                           tblptrh	equ	0xFF7
 39678                           tblptrl	equ	0xFF6
 39679                           tablat	equ	0xFF5
 39680                           prodh	equ	0xFF4
 39681                           prodl	equ	0xFF3
 39682                           intcon	equ	0xFF2
 39683                           postinc0	equ	0xFEE
 39684                           wreg	equ	0xFE8
 39685                           indf1	equ	0xFE7
 39686                           postinc1	equ	0xFE6
 39687                           postdec1	equ	0xFE5
 39688                           plusw1	equ	0xFE3
 39689                           fsr1h	equ	0xFE2
 39690                           fsr1l	equ	0xFE1
 39691                           indf2	equ	0xFDF
 39692                           postinc2	equ	0xFDE
 39693                           postdec2	equ	0xFDD
 39694                           plusw2	equ	0xFDB
 39695                           fsr2h	equ	0xFDA
 39696                           fsr2l	equ	0xFD9
 39697                           status	equ	0xFD8
 39698                           
 39699 ;; *************** function _ExternalFlash_SectorRead *****************
 39700 ;; Defined at:
 39701 ;;		line 40 in file "external_flash.c"
 39702 ;; Parameters:    Size  Location     Type
 39703 ;;  config          2   43[BANK0 ] PTR void 
 39704 ;;		 -> NULL(0), 
 39705 ;;  sector_addr     4   45[BANK0 ] unsigned long 
 39706 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 39707 ;;		 -> msd_buffer(512), 
 39708 ;; Auto vars:     Size  Location     Type
 39709 ;;  page            2   51[BANK0 ] unsigned int 
 39710 ;; Return value:  Size  Location     Type
 39711 ;;                  1    wreg      unsigned char 
 39712 ;; Registers used:
 39713 ;;		wreg, status,2, status,0, cstack
 39714 ;; Tracked objects:
 39715 ;;		On entry : 0/0
 39716 ;;		On exit  : 0/0
 39717 ;;		Unchanged: 0/0
 39718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39719 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39720 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39722 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39723 ;;Total ram usage:       10 bytes
 39724 ;; Hardware stack levels used:    1
 39725 ;; Hardware stack levels required when called:   15
 39726 ;; This function calls:
 39727 ;;		_flash_sector_read
 39728 ;; This function is called by:
 39729 ;;		_MSDReadHandler
 39730 ;; This function uses a non-reentrant model
 39731 ;;
 39732                           
 39733                           	psect	text150
 39734  015DB8                     __ptext150:
 39735                           	opt stack 0
 39736  015DB8                     _ExternalFlash_SectorRead:
 39737                           	opt stack 10
 39738                           
 39739                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 39740                           
 39741                           ; BSR set to: 2
 39742                           ;incstack = 0
 39743  015DB8  C08D  F093         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 39744  015DBC  C08E  F094         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 39745                           
 39746                           ;external_flash.c: 45: if(sector_addr >= 8192)
 39747  015DC0  0100               	movlb	0	; () banked
 39748  015DC2  5190               	movf	(ExternalFlash_SectorRead@sector_addr+3)& (0+255),w,b
 39749  015DC4  118F               	iorwf	(ExternalFlash_SectorRead@sector_addr+2)& (0+255),w,b
 39750  015DC6  E104               	bnz	u10960
 39751  015DC8  0E20               	movlw	32
 39752  015DCA  5D8E               	subwf	(ExternalFlash_SectorRead@sector_addr+1)& (0+255),w,b
 39753  015DCC  A0D8               	btfss	status,0,c
 39754  015DCE  D002               	goto	l1710
 39755  015DD0                     u10960:
 39756                           
 39757                           ; BSR set to: 0
 39758                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 39759  015DD0  0E00               	movlw	0
 39760                           
 39761                           ; BSR set to: 0
 39762  015DD2  0012               	return	
 39763  015DD4                     l1710:
 39764                           
 39765                           ; BSR set to: 0
 39766                           ;external_flash.c: 48: };external_flash.c: 51: flash_sector_read(page, buffer);
 39767                           
 39768                           ; BSR set to: 0
 39769  015DD4  C093  F087         	movff	ExternalFlash_SectorRead@page,flash_sector_read@page
 39770  015DD8  C094  F088         	movff	ExternalFlash_SectorRead@page+1,flash_sector_read@page+1
 39771  015DDC  C091  F089         	movff	ExternalFlash_SectorRead@buffer,flash_sector_read@data
 39772  015DE0  C092  F08A         	movff	ExternalFlash_SectorRead@buffer+1,flash_sector_read@data+1
 39773  015DE4  EC92  F0B0         	call	_flash_sector_read	;wreg free
 39774                           
 39775                           ;external_flash.c: 53: return 1;
 39776  015DE8  0E01               	movlw	1
 39777  015DEA  0012               	return	
 39778  015DEC                     __end_of_ExternalFlash_SectorRead:
 39779                           	opt stack 0
 39780                           tosu	equ	0xFFF
 39781                           tosh	equ	0xFFE
 39782                           tosl	equ	0xFFD
 39783                           pclath	equ	0xFFA
 39784                           tblptru	equ	0xFF8
 39785                           tblptrh	equ	0xFF7
 39786                           tblptrl	equ	0xFF6
 39787                           tablat	equ	0xFF5
 39788                           prodh	equ	0xFF4
 39789                           prodl	equ	0xFF3
 39790                           intcon	equ	0xFF2
 39791                           postinc0	equ	0xFEE
 39792                           wreg	equ	0xFE8
 39793                           indf1	equ	0xFE7
 39794                           postinc1	equ	0xFE6
 39795                           postdec1	equ	0xFE5
 39796                           plusw1	equ	0xFE3
 39797                           fsr1h	equ	0xFE2
 39798                           fsr1l	equ	0xFE1
 39799                           indf2	equ	0xFDF
 39800                           postinc2	equ	0xFDE
 39801                           postdec2	equ	0xFDD
 39802                           plusw2	equ	0xFDB
 39803                           fsr2h	equ	0xFDA
 39804                           fsr2l	equ	0xFD9
 39805                           status	equ	0xFD8
 39806                           
 39807 ;; *************** function _flash_sector_read *****************
 39808 ;; Defined at:
 39809 ;;		line 426 in file "flash.c"
 39810 ;; Parameters:    Size  Location     Type
 39811 ;;  page            2   39[BANK0 ] unsigned int 
 39812 ;;  data            2   41[BANK0 ] PTR unsigned char 
 39813 ;;		 -> buffer(512), msd_buffer(512), 
 39814 ;; Auto vars:     Size  Location     Type
 39815 ;;		None
 39816 ;; Return value:  Size  Location     Type
 39817 ;;                  1    wreg      void 
 39818 ;; Registers used:
 39819 ;;		wreg, status,2, status,0, cstack
 39820 ;; Tracked objects:
 39821 ;;		On entry : 0/0
 39822 ;;		On exit  : 0/0
 39823 ;;		Unchanged: 0/0
 39824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39825 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39828 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39829 ;;Total ram usage:        4 bytes
 39830 ;; Hardware stack levels used:    1
 39831 ;; Hardware stack levels required when called:   14
 39832 ;; This function calls:
 39833 ;;		__flash_partial_read
 39834 ;; This function is called by:
 39835 ;;		_ExternalFlash_SectorRead
 39836 ;;		__get_available_cluster
 39837 ;;		__find_nth_cluster
 39838 ;;		__make_cluster_chain
 39839 ;;		_fat_find_file
 39840 ;;		_fat_get_format_status
 39841 ;; This function uses a non-reentrant model
 39842 ;;
 39843                           
 39844                           	psect	text151
 39845  016124                     __ptext151:
 39846                           	opt stack 0
 39847  016124                     _flash_sector_read:
 39848                           	opt stack 13
 39849                           
 39850                           ;flash.c: 429: _flash_partial_read(page, 0, 512, data);
 39851                           
 39852                           ;incstack = 0
 39853  016124  C087  F073         	movff	flash_sector_read@page,__flash_partial_read@page
 39854  016128  C088  F074         	movff	flash_sector_read@page+1,__flash_partial_read@page+1
 39855  01612C  0E00               	movlw	0
 39856  01612E  0100               	movlb	0	; () banked
 39857  016130  6F76               	movwf	(__flash_partial_read@start+1)& (0+255),b
 39858  016132  0E00               	movlw	0
 39859  016134  6F75               	movwf	__flash_partial_read@start& (0+255),b
 39860  016136  0E02               	movlw	2
 39861  016138  6F78               	movwf	(__flash_partial_read@length+1)& (0+255),b
 39862  01613A  0E00               	movlw	0
 39863  01613C  6F77               	movwf	__flash_partial_read@length& (0+255),b
 39864  01613E  C089  F079         	movff	flash_sector_read@data,__flash_partial_read@data
 39865  016142  C08A  F07A         	movff	flash_sector_read@data+1,__flash_partial_read@data+1
 39866  016146  EC3F  F0A4         	call	__flash_partial_read	;wreg free
 39867  01614A  0012               	return		;funcret
 39868  01614C                     __end_of_flash_sector_read:
 39869                           	opt stack 0
 39870                           tosu	equ	0xFFF
 39871                           tosh	equ	0xFFE
 39872                           tosl	equ	0xFFD
 39873                           pclath	equ	0xFFA
 39874                           tblptru	equ	0xFF8
 39875                           tblptrh	equ	0xFF7
 39876                           tblptrl	equ	0xFF6
 39877                           tablat	equ	0xFF5
 39878                           prodh	equ	0xFF4
 39879                           prodl	equ	0xFF3
 39880                           intcon	equ	0xFF2
 39881                           postinc0	equ	0xFEE
 39882                           wreg	equ	0xFE8
 39883                           indf1	equ	0xFE7
 39884                           postinc1	equ	0xFE6
 39885                           postdec1	equ	0xFE5
 39886                           plusw1	equ	0xFE3
 39887                           fsr1h	equ	0xFE2
 39888                           fsr1l	equ	0xFE1
 39889                           indf2	equ	0xFDF
 39890                           postinc2	equ	0xFDE
 39891                           postdec2	equ	0xFDD
 39892                           plusw2	equ	0xFDB
 39893                           fsr2h	equ	0xFDA
 39894                           fsr2l	equ	0xFD9
 39895                           status	equ	0xFD8
 39896                           
 39897 ;; *************** function __flash_partial_read *****************
 39898 ;; Defined at:
 39899 ;;		line 309 in file "flash.c"
 39900 ;; Parameters:    Size  Location     Type
 39901 ;;  page            2   19[BANK0 ] unsigned int 
 39902 ;;  start           2   21[BANK0 ] unsigned int 
 39903 ;;  length          2   23[BANK0 ] unsigned int 
 39904 ;;  data            2   25[BANK0 ] PTR unsigned char 
 39905 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 39906 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 39907 ;;		 -> _root_is_available@first_byte(1), buffer(512), msd_buffer(512), 
 39908 ;; Auto vars:     Size  Location     Type
 39909 ;;  command         4   31[BANK0 ] unsigned char [4]
 39910 ;;  address         4   35[BANK0 ] unsigned long 
 39911 ;; Return value:  Size  Location     Type
 39912 ;;                  1    wreg      void 
 39913 ;; Registers used:
 39914 ;;		wreg, status,2, status,0, cstack
 39915 ;; Tracked objects:
 39916 ;;		On entry : 0/0
 39917 ;;		On exit  : 0/0
 39918 ;;		Unchanged: 0/0
 39919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39920 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39921 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39922 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39923 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39924 ;;Total ram usage:       20 bytes
 39925 ;; Hardware stack levels used:    1
 39926 ;; Hardware stack levels required when called:   13
 39927 ;; This function calls:
 39928 ;;		__flash_is_busy
 39929 ;;		_spi_tx_rx
 39930 ;; This function is called by:
 39931 ;;		_flash_sector_read
 39932 ;;		_flash_partial_read
 39933 ;; This function uses a non-reentrant model
 39934 ;;
 39935                           
 39936                           	psect	text152
 39937  01487E                     __ptext152:
 39938                           	opt stack 0
 39939  01487E                     __flash_partial_read:
 39940                           	opt stack 13
 39941                           
 39942                           ;flash.c: 311: uint32_t address;;flash.c: 312: uint8_t command[4];;flash.c: 315: while(_
      +                          flash_is_busy());
 39943                           
 39944                           ;incstack = 0
 39945  01487E  EC16  F0B1         	call	__flash_is_busy	;wreg free
 39946  014882  0900               	iorlw	0
 39947  014884  A4D8               	btfss	status,2,c
 39948  014886  D7FB               	goto	__flash_partial_read
 39949                           
 39950                           ;flash.c: 318: address = page;
 39951  014888  C073  F083         	movff	__flash_partial_read@page,__flash_partial_read@address
 39952  01488C  C074  F084         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 39953  014890  0100               	movlb	0	; () banked
 39954  014892  6B85               	clrf	(__flash_partial_read@address+2)& (0+255),b
 39955  014894  6B86               	clrf	(__flash_partial_read@address+3)& (0+255),b
 39956                           
 39957                           ; BSR set to: 0
 39958                           ;flash.c: 319: address <<= 9;
 39959  014896  0E09               	movlw	9
 39960  014898                     u10385:
 39961  014898  90D8               	bcf	status,0,c
 39962  01489A  3783               	rlcf	__flash_partial_read@address& (0+255),f,b
 39963  01489C  3784               	rlcf	(__flash_partial_read@address+1)& (0+255),f,b
 39964  01489E  3785               	rlcf	(__flash_partial_read@address+2)& (0+255),f,b
 39965  0148A0  3786               	rlcf	(__flash_partial_read@address+3)& (0+255),f,b
 39966  0148A2  2EE8               	decfsz	wreg,f,c
 39967  0148A4  D7F9               	goto	u10385
 39968                           
 39969                           ; BSR set to: 0
 39970                           ;flash.c: 320: address |= start;
 39971  0148A6  5175               	movf	__flash_partial_read@start& (0+255),w,b
 39972  0148A8  6F7B               	movwf	??__flash_partial_read& (0+255),b
 39973  0148AA  5176               	movf	(__flash_partial_read@start+1)& (0+255),w,b
 39974  0148AC  6F7C               	movwf	(??__flash_partial_read+1)& (0+255),b
 39975  0148AE  6B7D               	clrf	(??__flash_partial_read+2)& (0+255),b
 39976  0148B0  6B7E               	clrf	(??__flash_partial_read+3)& (0+255),b
 39977  0148B2  517B               	movf	??__flash_partial_read& (0+255),w,b
 39978  0148B4  1383               	iorwf	__flash_partial_read@address& (0+255),f,b
 39979  0148B6  517C               	movf	(??__flash_partial_read+1)& (0+255),w,b
 39980  0148B8  1384               	iorwf	(__flash_partial_read@address+1)& (0+255),f,b
 39981  0148BA  517D               	movf	(??__flash_partial_read+2)& (0+255),w,b
 39982  0148BC  1385               	iorwf	(__flash_partial_read@address+2)& (0+255),f,b
 39983  0148BE  517E               	movf	(??__flash_partial_read+3)& (0+255),w,b
 39984  0148C0  1386               	iorwf	(__flash_partial_read@address+3)& (0+255),f,b
 39985                           
 39986                           ; BSR set to: 0
 39987                           ;flash.c: 323: command[0] = 0x03;
 39988  0148C2  0E03               	movlw	3
 39989  0148C4  6F7F               	movwf	__flash_partial_read@command& (0+255),b
 39990                           
 39991                           ; BSR set to: 0
 39992                           ;flash.c: 324: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 39993  0148C6  C085  F080         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 39994                           
 39995                           ; BSR set to: 0
 39996                           ;flash.c: 325: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 39997  0148CA  5184               	movf	(__flash_partial_read@address+1)& (0+255),w,b
 39998  0148CC  6F81               	movwf	(__flash_partial_read@command+2)& (0+255),b
 39999                           
 40000                           ; BSR set to: 0
 40001                           ;flash.c: 326: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 40002  0148CE  C083  F082         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 40003                           
 40004                           ; BSR set to: 0
 40005                           ;flash.c: 329: spi_tx_rx(command, 4, data, length);
 40006  0148D2  0E7F               	movlw	low __flash_partial_read@command
 40007  0148D4  6F60               	movwf	spi_tx_rx@command& (0+255),b
 40008  0148D6  0E00               	movlw	high __flash_partial_read@command
 40009  0148D8  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 40010  0148DA  0E00               	movlw	0
 40011  0148DC  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 40012  0148DE  0E04               	movlw	4
 40013  0148E0  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 40014  0148E2  C079  F064         	movff	__flash_partial_read@data,spi_tx_rx@data
 40015  0148E6  C07A  F065         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 40016  0148EA  C077  F066         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 40017  0148EE  C078  F067         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 40018  0148F2  EC54  F09E         	call	_spi_tx_rx	;wreg free
 40019  0148F6  0012               	return		;funcret
 40020  0148F8                     __end_of__flash_partial_read:
 40021                           	opt stack 0
 40022                           tosu	equ	0xFFF
 40023                           tosh	equ	0xFFE
 40024                           tosl	equ	0xFFD
 40025                           pclath	equ	0xFFA
 40026                           tblptru	equ	0xFF8
 40027                           tblptrh	equ	0xFF7
 40028                           tblptrl	equ	0xFF6
 40029                           tablat	equ	0xFF5
 40030                           prodh	equ	0xFF4
 40031                           prodl	equ	0xFF3
 40032                           intcon	equ	0xFF2
 40033                           postinc0	equ	0xFEE
 40034                           wreg	equ	0xFE8
 40035                           indf1	equ	0xFE7
 40036                           postinc1	equ	0xFE6
 40037                           postdec1	equ	0xFE5
 40038                           plusw1	equ	0xFE3
 40039                           fsr1h	equ	0xFE2
 40040                           fsr1l	equ	0xFE1
 40041                           indf2	equ	0xFDF
 40042                           postinc2	equ	0xFDE
 40043                           postdec2	equ	0xFDD
 40044                           plusw2	equ	0xFDB
 40045                           fsr2h	equ	0xFDA
 40046                           fsr2l	equ	0xFD9
 40047                           status	equ	0xFD8
 40048                           
 40049 ;; *************** function __flash_is_busy *****************
 40050 ;; Defined at:
 40051 ;;		line 281 in file "flash.c"
 40052 ;; Parameters:    Size  Location     Type
 40053 ;;		None
 40054 ;; Auto vars:     Size  Location     Type
 40055 ;;  status          2   17[BANK0 ] unsigned int 
 40056 ;; Return value:  Size  Location     Type
 40057 ;;                  1    wreg      unsigned char 
 40058 ;; Registers used:
 40059 ;;		wreg, status,2, status,0, cstack
 40060 ;; Tracked objects:
 40061 ;;		On entry : 0/0
 40062 ;;		On exit  : 0/0
 40063 ;;		Unchanged: 0/0
 40064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40066 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40068 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40069 ;;Total ram usage:        2 bytes
 40070 ;; Hardware stack levels used:    1
 40071 ;; Hardware stack levels required when called:   12
 40072 ;; This function calls:
 40073 ;;		__flash_get_status
 40074 ;;		__flash_wakeup
 40075 ;; This function is called by:
 40076 ;;		__flash_set_page_size
 40077 ;;		__flash_copy_page_to_buffer
 40078 ;;		__flash_compare_page_to_buffer
 40079 ;;		__flash_write_to_buffer
 40080 ;;		__flash_write_page_from_buffer
 40081 ;;		__flash_partial_read
 40082 ;;		_flash_partial_write
 40083 ;;		__flash_erase_page
 40084 ;;		__flash_buffer_read
 40085 ;;		_flash_is_busy
 40086 ;;		_flash_set_power_state
 40087 ;; This function uses a non-reentrant model
 40088 ;;
 40089                           
 40090                           	psect	text153
 40091  01622C                     __ptext153:
 40092                           	opt stack 0
 40093  01622C                     __flash_is_busy:
 40094                           	opt stack 15
 40095                           
 40096                           ;flash.c: 283: uint16_t status;;flash.c: 286: if(power_state!=FLASH_POWER_STATE_NORMAL)
 40097                           
 40098                           ;incstack = 0
 40099  01622C  0101               	movlb	1	; () banked
 40100  01622E  514E               	movf	_power_state& (0+255),w,b
 40101  016230  A4D8               	btfss	status,2,c
 40102                           
 40103                           ; BSR set to: 1
 40104                           ;flash.c: 287: {;flash.c: 288: _flash_wakeup();
 40105  016232  EC59  F0A9         	call	__flash_wakeup	;wreg free
 40106                           
 40107                           ;flash.c: 289: };flash.c: 292: status = _flash_get_status();
 40108  016236  ECF6  F0AE         	call	__flash_get_status	;wreg free
 40109  01623A  C06C  F071         	movff	?__flash_get_status,__flash_is_busy@status
 40110  01623E  C06D  F072         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 40111                           
 40112                           ;flash.c: 295: if(status & 0b0000000010000000)
 40113  016242  0100               	movlb	0	; () banked
 40114  016244  AF71               	btfss	__flash_is_busy@status& (0+255),7,b
 40115  016246  D002               	goto	l1614
 40116                           
 40117                           ; BSR set to: 0
 40118                           ;flash.c: 296: {;flash.c: 298: return 0;
 40119  016248  0E00               	movlw	0
 40120                           
 40121                           ; BSR set to: 0
 40122                           ;flash.c: 299: }
 40123                           
 40124                           ; BSR set to: 0
 40125  01624A  0012               	return	
 40126  01624C                     l1614:
 40127                           
 40128                           ; BSR set to: 0
 40129                           ;flash.c: 300: else;flash.c: 301: {;flash.c: 303: return 1;
 40130                           
 40131                           ; BSR set to: 0
 40132  01624C  0E01               	movlw	1
 40133                           
 40134                           ; BSR set to: 0
 40135  01624E  0012               	return	
 40136  016250                     __end_of__flash_is_busy:
 40137                           	opt stack 0
 40138                           tosu	equ	0xFFF
 40139                           tosh	equ	0xFFE
 40140                           tosl	equ	0xFFD
 40141                           pclath	equ	0xFFA
 40142                           tblptru	equ	0xFF8
 40143                           tblptrh	equ	0xFF7
 40144                           tblptrl	equ	0xFF6
 40145                           tablat	equ	0xFF5
 40146                           prodh	equ	0xFF4
 40147                           prodl	equ	0xFF3
 40148                           intcon	equ	0xFF2
 40149                           postinc0	equ	0xFEE
 40150                           wreg	equ	0xFE8
 40151                           indf1	equ	0xFE7
 40152                           postinc1	equ	0xFE6
 40153                           postdec1	equ	0xFE5
 40154                           plusw1	equ	0xFE3
 40155                           fsr1h	equ	0xFE2
 40156                           fsr1l	equ	0xFE1
 40157                           indf2	equ	0xFDF
 40158                           postinc2	equ	0xFDE
 40159                           postdec2	equ	0xFDD
 40160                           plusw2	equ	0xFDB
 40161                           fsr2h	equ	0xFDA
 40162                           fsr2l	equ	0xFD9
 40163                           status	equ	0xFD8
 40164                           
 40165 ;; *************** function __flash_wakeup *****************
 40166 ;; Defined at:
 40167 ;;		line 128 in file "flash.c"
 40168 ;; Parameters:    Size  Location     Type
 40169 ;;		None
 40170 ;; Auto vars:     Size  Location     Type
 40171 ;;  command         1    8[BANK0 ] unsigned char 
 40172 ;; Return value:  Size  Location     Type
 40173 ;;                  1    wreg      void 
 40174 ;; Registers used:
 40175 ;;		wreg, status,2, status,0, cstack
 40176 ;; Tracked objects:
 40177 ;;		On entry : 0/0
 40178 ;;		On exit  : 0/0
 40179 ;;		Unchanged: 0/0
 40180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40182 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40184 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40185 ;;Total ram usage:        1 bytes
 40186 ;; Hardware stack levels used:    1
 40187 ;; Hardware stack levels required when called:   11
 40188 ;; This function calls:
 40189 ;;		_spi_tx
 40190 ;; This function is called by:
 40191 ;;		__flash_is_busy
 40192 ;;		_flash_set_power_state
 40193 ;; This function uses a non-reentrant model
 40194 ;;
 40195                           
 40196                           	psect	text154
 40197  0152B2                     __ptext154:
 40198                           	opt stack 0
 40199  0152B2                     __flash_wakeup:
 40200                           	opt stack 15
 40201                           
 40202                           ;flash.c: 130: uint8_t command;;flash.c: 132: switch(power_state)
 40203                           
 40204                           ; BSR set to: 0
 40205                           ;incstack = 0
 40206  0152B2  D022               	goto	l1563
 40207  0152B4                     
 40208                           ;flash.c: 135: command = 0xAB;
 40209  0152B4  0EAB               	movlw	171
 40210  0152B6  0100               	movlb	0	; () banked
 40211  0152B8  6F68               	movwf	__flash_wakeup@command& (0+255),b
 40212                           
 40213                           ; BSR set to: 0
 40214                           ;flash.c: 136: spi_tx(&command, 1);
 40215  0152BA  0E68               	movlw	low __flash_wakeup@command
 40216  0152BC  6F60               	movwf	spi_tx@data& (0+255),b
 40217  0152BE  0E00               	movlw	high __flash_wakeup@command
 40218  0152C0  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 40219  0152C2  0E00               	movlw	0
 40220  0152C4  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 40221  0152C6  0E01               	movlw	1
 40222  0152C8  6F62               	movwf	spi_tx@length& (0+255),b
 40223  0152CA  ECD4  F0A8         	call	_spi_tx	;wreg free
 40224                           
 40225                           ;flash.c: 137: _delay((unsigned long)((35)*(8000000/4000000.0)));
 40226  0152CE  0E17               	movlw	23
 40227  0152D0                     u20287:
 40228  0152D0  2EE8               	decfsz	wreg,f,c
 40229  0152D2  D7FE               	bra	u20287
 40230  0152D4  F000               	nop	
 40231                           
 40232                           ;flash.c: 138: power_state = FLASH_POWER_STATE_NORMAL;
 40233  0152D6  0E00               	movlw	0
 40234  0152D8  0101               	movlb	1	; () banked
 40235  0152DA  6F4E               	movwf	_power_state& (0+255),b
 40236                           
 40237                           ;flash.c: 139: break;
 40238  0152DC  0012               	return	
 40239  0152DE                     l1566:
 40240                           
 40241                           ; BSR set to: 1
 40242                           ;flash.c: 144: LATDbits.LD7 = 0;
 40243  0152DE  9E8C               	bcf	3980,7,c	;volatile
 40244                           
 40245                           ; BSR set to: 1
 40246                           ;flash.c: 145: _delay((unsigned long)((20)*(8000000/4000000.0)));
 40247  0152E0  0E0D               	movlw	13
 40248  0152E2                     u20297:
 40249  0152E2  2EE8               	decfsz	wreg,f,c
 40250  0152E4  D7FE               	bra	u20297
 40251  0152E6  F000               	nop	
 40252                           
 40253                           ;flash.c: 146: LATDbits.LD7 = 1;
 40254  0152E8  8E8C               	bsf	3980,7,c	;volatile
 40255                           
 40256                           ;flash.c: 147: _delay((unsigned long)((120)*(8000000/4000000.0)));
 40257  0152EA  0E50               	movlw	80
 40258  0152EC                     u20307:
 40259  0152EC  2EE8               	decfsz	wreg,f,c
 40260  0152EE  D7FE               	bra	u20307
 40261                           
 40262                           ;flash.c: 148: power_state = FLASH_POWER_STATE_NORMAL;
 40263  0152F0  0E00               	movlw	0
 40264  0152F2  0101               	movlb	1	; () banked
 40265  0152F4  6F4E               	movwf	_power_state& (0+255),b
 40266                           
 40267                           ; BSR set to: 1
 40268                           ;flash.c: 150: }
 40269                           
 40270                           ;flash.c: 149: break;
 40271  0152F6  0012               	return	
 40272  0152F8                     l1563:
 40273                           
 40274                           ; BSR set to: 1
 40275  0152F8  0101               	movlb	1	; () banked
 40276  0152FA  514E               	movf	_power_state& (0+255),w,b
 40277                           
 40278                           ; Switch size 1, requested type "space"
 40279                           ; Number of cases is 2, Range of values is 1 to 2
 40280                           ; switch strategies available:
 40281                           ; Name         Instructions Cycles
 40282                           ; simple_byte            7     4 (average)
 40283                           ;	Chosen strategy is simple_byte
 40284  0152FC  0A01               	xorlw	1	; case 1
 40285  0152FE  B4D8               	btfsc	status,2,c
 40286  015300  D7D9               	goto	l1564
 40287  015302  0A03               	xorlw	3	; case 2
 40288  015304  A4D8               	btfss	status,2,c
 40289  015306  0012               	return	
 40290  015308  D7EA               	goto	l1566
 40291  01530A                     __end_of__flash_wakeup:
 40292                           	opt stack 0
 40293                           tosu	equ	0xFFF
 40294                           tosh	equ	0xFFE
 40295                           tosl	equ	0xFFD
 40296                           pclath	equ	0xFFA
 40297                           tblptru	equ	0xFF8
 40298                           tblptrh	equ	0xFF7
 40299                           tblptrl	equ	0xFF6
 40300                           tablat	equ	0xFF5
 40301                           prodh	equ	0xFF4
 40302                           prodl	equ	0xFF3
 40303                           intcon	equ	0xFF2
 40304                           postinc0	equ	0xFEE
 40305                           wreg	equ	0xFE8
 40306                           indf1	equ	0xFE7
 40307                           postinc1	equ	0xFE6
 40308                           postdec1	equ	0xFE5
 40309                           plusw1	equ	0xFE3
 40310                           fsr1h	equ	0xFE2
 40311                           fsr1l	equ	0xFE1
 40312                           indf2	equ	0xFDF
 40313                           postinc2	equ	0xFDE
 40314                           postdec2	equ	0xFDD
 40315                           plusw2	equ	0xFDB
 40316                           fsr2h	equ	0xFDA
 40317                           fsr2l	equ	0xFD9
 40318                           status	equ	0xFD8
 40319                           
 40320 ;; *************** function _spi_tx *****************
 40321 ;; Defined at:
 40322 ;;		line 108 in file "spi.c"
 40323 ;; Parameters:    Size  Location     Type
 40324 ;;  data            2    0[BANK0 ] PTR unsigned char 
 40325 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 40326 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 40327 ;;  length          2    2[BANK0 ] unsigned int 
 40328 ;; Auto vars:     Size  Location     Type
 40329 ;;		None
 40330 ;; Return value:  Size  Location     Type
 40331 ;;                  1    wreg      void 
 40332 ;; Registers used:
 40333 ;;		wreg, status,2, status,0
 40334 ;; Tracked objects:
 40335 ;;		On entry : 0/0
 40336 ;;		On exit  : 0/0
 40337 ;;		Unchanged: 0/0
 40338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40339 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40341 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40342 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40343 ;;Total ram usage:        8 bytes
 40344 ;; Hardware stack levels used:    1
 40345 ;; Hardware stack levels required when called:   10
 40346 ;; This function calls:
 40347 ;;		Nothing
 40348 ;; This function is called by:
 40349 ;;		__flash_set_page_size
 40350 ;;		__flash_wakeup
 40351 ;;		__flash_copy_page_to_buffer
 40352 ;;		__flash_compare_page_to_buffer
 40353 ;;		__flash_write_page_from_buffer
 40354 ;;		__flash_erase_page
 40355 ;;		_flash_set_power_state
 40356 ;; This function uses a non-reentrant model
 40357 ;;
 40358                           
 40359                           	psect	text155
 40360  0151A8                     __ptext155:
 40361                           	opt stack 0
 40362  0151A8                     _spi_tx:
 40363                           	opt stack 17
 40364                           
 40365                           ;spi.c: 111: DMACON1bits.SSCON1 = 0;
 40366                           
 40367                           ; BSR set to: 1
 40368                           ;incstack = 0
 40369  0151A8  9E88               	bcf	3976,7,c	;volatile
 40370                           
 40371                           ;spi.c: 112: DMACON1bits.SSCON0 = 0;
 40372  0151AA  9C88               	bcf	3976,6,c	;volatile
 40373                           
 40374                           ;spi.c: 114: DMACON1bits.TXINC = 1;
 40375  0151AC  8A88               	bsf	3976,5,c	;volatile
 40376                           
 40377                           ;spi.c: 116: DMACON1bits.RXINC = 0;
 40378  0151AE  9888               	bcf	3976,4,c	;volatile
 40379                           
 40380                           ;spi.c: 118: DMACON1bits.DUPLEX1 = 0;
 40381  0151B0  9688               	bcf	3976,3,c	;volatile
 40382                           
 40383                           ;spi.c: 119: DMACON1bits.DUPLEX0 = 1;
 40384  0151B2  8488               	bsf	3976,2,c	;volatile
 40385                           
 40386                           ;spi.c: 121: DMACON1bits.DLYINTEN = 0;
 40387  0151B4  9288               	bcf	3976,1,c	;volatile
 40388                           
 40389                           ;spi.c: 123: DMACON2bits.DLYCYC = 0b0000;
 40390  0151B6  9886               	bcf	3974,4,c	;volatile
 40391  0151B8  9A86               	bcf	3974,5,c	;volatile
 40392  0151BA  9C86               	bcf	3974,6,c	;volatile
 40393  0151BC  9E86               	bcf	3974,7,c	;volatile
 40394                           
 40395                           ;spi.c: 125: DMACON2bits.INTLVL = 0b0000;
 40396  0151BE  9086               	bcf	3974,0,c	;volatile
 40397  0151C0  9286               	bcf	3974,1,c	;volatile
 40398  0151C2  9486               	bcf	3974,2,c	;volatile
 40399  0151C4  9686               	bcf	3974,3,c	;volatile
 40400                           
 40401                           ;spi.c: 128: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 40402  0151C6  0100               	movlb	0	; () banked
 40403  0151C8  5161               	movf	(spi_tx@data+1)& (0+255),w,b
 40404  0151CA  6E6A               	movwf	3946,c	;volatile
 40405                           
 40406                           ; BSR set to: 0
 40407                           ;spi.c: 129: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 40408  0151CC  C060  FF6B         	movff	spi_tx@data,3947	;volatile
 40409                           
 40410                           ; BSR set to: 0
 40411                           ;spi.c: 132: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 40412  0151D0  0EFF               	movlw	255
 40413  0151D2  6F64               	movwf	??_spi_tx& (0+255),b
 40414  0151D4  0EFF               	movlw	255
 40415  0151D6  6F65               	movwf	(??_spi_tx+1)& (0+255),b
 40416  0151D8  C062  F066         	movff	spi_tx@length,??_spi_tx+2
 40417  0151DC  C063  F067         	movff	spi_tx@length+1,??_spi_tx+3
 40418  0151E0  5164               	movf	??_spi_tx& (0+255),w,b
 40419  0151E2  2766               	addwf	(??_spi_tx+2)& (0+255),f,b
 40420  0151E4  5165               	movf	(??_spi_tx+1)& (0+255),w,b
 40421  0151E6  2367               	addwfc	(??_spi_tx+3)& (0+255),f,b
 40422  0151E8  C067  F066         	movff	??_spi_tx+3,??_spi_tx+2
 40423  0151EC  6B67               	clrf	(??_spi_tx+3)& (0+255),b
 40424  0151EE  5166               	movf	(??_spi_tx+2)& (0+255),w,b
 40425  0151F0  6E66               	movwf	3942,c	;volatile
 40426                           
 40427                           ; BSR set to: 0
 40428                           ;spi.c: 133: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 40429  0151F2  0562               	decf	spi_tx@length& (0+255),w,b
 40430  0151F4  6E67               	movwf	3943,c	;volatile
 40431                           
 40432                           ; BSR set to: 0
 40433                           ;spi.c: 136: LATDbits.LD7 = 0;
 40434  0151F6  9E8C               	bcf	3980,7,c	;volatile
 40435                           
 40436                           ; BSR set to: 0
 40437                           ;spi.c: 137: DMACON1bits.DMAEN = 1;
 40438  0151F8  8088               	bsf	3976,0,c	;volatile
 40439  0151FA                     
 40440                           ; BSR set to: 0
 40441  0151FA  B088               	btfsc	3976,0,c	;volatile
 40442  0151FC  D7FE               	goto	l2210
 40443                           
 40444                           ;spi.c: 139: LATDbits.LD7 = 1;
 40445  0151FE  8E8C               	bsf	3980,7,c	;volatile
 40446  015200  0012               	return		;funcret
 40447  015202                     __end_of_spi_tx:
 40448                           	opt stack 0
 40449                           tosu	equ	0xFFF
 40450                           tosh	equ	0xFFE
 40451                           tosl	equ	0xFFD
 40452                           pclath	equ	0xFFA
 40453                           tblptru	equ	0xFF8
 40454                           tblptrh	equ	0xFF7
 40455                           tblptrl	equ	0xFF6
 40456                           tablat	equ	0xFF5
 40457                           prodh	equ	0xFF4
 40458                           prodl	equ	0xFF3
 40459                           intcon	equ	0xFF2
 40460                           postinc0	equ	0xFEE
 40461                           wreg	equ	0xFE8
 40462                           indf1	equ	0xFE7
 40463                           postinc1	equ	0xFE6
 40464                           postdec1	equ	0xFE5
 40465                           plusw1	equ	0xFE3
 40466                           fsr1h	equ	0xFE2
 40467                           fsr1l	equ	0xFE1
 40468                           indf2	equ	0xFDF
 40469                           postinc2	equ	0xFDE
 40470                           postdec2	equ	0xFDD
 40471                           plusw2	equ	0xFDB
 40472                           fsr2h	equ	0xFDA
 40473                           fsr2l	equ	0xFD9
 40474                           status	equ	0xFD8
 40475                           
 40476 ;; *************** function __flash_get_status *****************
 40477 ;; Defined at:
 40478 ;;		line 117 in file "flash.c"
 40479 ;; Parameters:    Size  Location     Type
 40480 ;;		None
 40481 ;; Auto vars:     Size  Location     Type
 40482 ;;  status          2   15[BANK0 ] unsigned int 
 40483 ;;  command         1   14[BANK0 ] unsigned char 
 40484 ;; Return value:  Size  Location     Type
 40485 ;;                  2   12[BANK0 ] unsigned int 
 40486 ;; Registers used:
 40487 ;;		wreg, status,2, status,0, cstack
 40488 ;; Tracked objects:
 40489 ;;		On entry : 0/0
 40490 ;;		On exit  : 0/0
 40491 ;;		Unchanged: 0/0
 40492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40493 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40494 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40496 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40497 ;;Total ram usage:        5 bytes
 40498 ;; Hardware stack levels used:    1
 40499 ;; Hardware stack levels required when called:   11
 40500 ;; This function calls:
 40501 ;;		_spi_tx_rx
 40502 ;; This function is called by:
 40503 ;;		__flash_compare_page_to_buffer
 40504 ;;		__flash_is_busy
 40505 ;; This function uses a non-reentrant model
 40506 ;;
 40507                           
 40508                           	psect	text156
 40509  015DEC                     __ptext156:
 40510                           	opt stack 0
 40511  015DEC                     __flash_get_status:
 40512                           	opt stack 15
 40513                           
 40514                           ;flash.c: 121: uint8_t command = 0xD7;
 40515                           
 40516                           ;incstack = 0
 40517  015DEC  0ED7               	movlw	215
 40518  015DEE  0100               	movlb	0	; () banked
 40519  015DF0  6F6E               	movwf	__flash_get_status@command& (0+255),b
 40520                           
 40521                           ; BSR set to: 0
 40522                           ;flash.c: 122: uint16_t status;;flash.c: 123: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 40523  015DF2  0E6E               	movlw	low __flash_get_status@command
 40524  015DF4  6F60               	movwf	spi_tx_rx@command& (0+255),b
 40525  015DF6  0E00               	movlw	high __flash_get_status@command
 40526  015DF8  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 40527  015DFA  0E00               	movlw	0
 40528  015DFC  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 40529  015DFE  0E01               	movlw	1
 40530  015E00  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 40531  015E02  0E6F               	movlw	low __flash_get_status@status
 40532  015E04  6F64               	movwf	spi_tx_rx@data& (0+255),b
 40533  015E06  0E00               	movlw	high __flash_get_status@status
 40534  015E08  6F65               	movwf	(spi_tx_rx@data+1)& (0+255),b
 40535  015E0A  0E00               	movlw	0
 40536  015E0C  6F67               	movwf	(spi_tx_rx@data_length+1)& (0+255),b
 40537  015E0E  0E02               	movlw	2
 40538  015E10  6F66               	movwf	spi_tx_rx@data_length& (0+255),b
 40539  015E12  EC54  F09E         	call	_spi_tx_rx	;wreg free
 40540                           
 40541                           ;flash.c: 124: return status;
 40542  015E16  C06F  F06C         	movff	__flash_get_status@status,?__flash_get_status
 40543  015E1A  C070  F06D         	movff	__flash_get_status@status+1,?__flash_get_status+1
 40544  015E1E  0012               	return	
 40545  015E20                     __end_of__flash_get_status:
 40546                           	opt stack 0
 40547                           tosu	equ	0xFFF
 40548                           tosh	equ	0xFFE
 40549                           tosl	equ	0xFFD
 40550                           pclath	equ	0xFFA
 40551                           tblptru	equ	0xFF8
 40552                           tblptrh	equ	0xFF7
 40553                           tblptrl	equ	0xFF6
 40554                           tablat	equ	0xFF5
 40555                           prodh	equ	0xFF4
 40556                           prodl	equ	0xFF3
 40557                           intcon	equ	0xFF2
 40558                           postinc0	equ	0xFEE
 40559                           wreg	equ	0xFE8
 40560                           indf1	equ	0xFE7
 40561                           postinc1	equ	0xFE6
 40562                           postdec1	equ	0xFE5
 40563                           plusw1	equ	0xFE3
 40564                           fsr1h	equ	0xFE2
 40565                           fsr1l	equ	0xFE1
 40566                           indf2	equ	0xFDF
 40567                           postinc2	equ	0xFDE
 40568                           postdec2	equ	0xFDD
 40569                           plusw2	equ	0xFDB
 40570                           fsr2h	equ	0xFDA
 40571                           fsr2l	equ	0xFD9
 40572                           status	equ	0xFD8
 40573                           
 40574 ;; *************** function _spi_tx_rx *****************
 40575 ;; Defined at:
 40576 ;;		line 199 in file "spi.c"
 40577 ;; Parameters:    Size  Location     Type
 40578 ;;  command         2    0[BANK0 ] PTR unsigned char 
 40579 ;;		 -> _flash_buffer_read@command(4), _flash_partial_read@command(4), _flash_get_status@command(1), 
 40580 ;;  command_leng    2    2[BANK0 ] unsigned int 
 40581 ;;  data            2    4[BANK0 ] PTR unsigned char 
 40582 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 40583 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 40584 ;;		 -> _root_is_available@first_byte(1), buffer(512), _flash_get_status@status(2), msd_buffer(512), 
 40585 ;;  data_length     2    6[BANK0 ] unsigned int 
 40586 ;; Auto vars:     Size  Location     Type
 40587 ;;		None
 40588 ;; Return value:  Size  Location     Type
 40589 ;;                  1    wreg      void 
 40590 ;; Registers used:
 40591 ;;		wreg, status,2, status,0
 40592 ;; Tracked objects:
 40593 ;;		On entry : 0/0
 40594 ;;		On exit  : 0/0
 40595 ;;		Unchanged: 0/0
 40596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40597 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40599 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40600 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40601 ;;Total ram usage:       12 bytes
 40602 ;; Hardware stack levels used:    1
 40603 ;; Hardware stack levels required when called:   10
 40604 ;; This function calls:
 40605 ;;		Nothing
 40606 ;; This function is called by:
 40607 ;;		__flash_get_status
 40608 ;;		__flash_partial_read
 40609 ;;		__flash_buffer_read
 40610 ;; This function uses a non-reentrant model
 40611 ;;
 40612                           
 40613                           	psect	text157
 40614  013CA8                     __ptext157:
 40615                           	opt stack 0
 40616  013CA8                     _spi_tx_rx:
 40617                           	opt stack 15
 40618                           
 40619                           ;spi.c: 202: DMACON1bits.SSCON1 = 0;
 40620                           
 40621                           ;incstack = 0
 40622  013CA8  9E88               	bcf	3976,7,c	;volatile
 40623                           
 40624                           ;spi.c: 203: DMACON1bits.SSCON0 = 0;
 40625  013CAA  9C88               	bcf	3976,6,c	;volatile
 40626                           
 40627                           ;spi.c: 205: DMACON1bits.TXINC = 1;
 40628  013CAC  8A88               	bsf	3976,5,c	;volatile
 40629                           
 40630                           ;spi.c: 207: DMACON1bits.RXINC = 0;
 40631  013CAE  9888               	bcf	3976,4,c	;volatile
 40632                           
 40633                           ;spi.c: 209: DMACON1bits.DUPLEX1 = 0;
 40634  013CB0  9688               	bcf	3976,3,c	;volatile
 40635                           
 40636                           ;spi.c: 210: DMACON1bits.DUPLEX0 = 1;
 40637  013CB2  8488               	bsf	3976,2,c	;volatile
 40638                           
 40639                           ;spi.c: 212: DMACON1bits.DLYINTEN = 0;
 40640  013CB4  9288               	bcf	3976,1,c	;volatile
 40641                           
 40642                           ;spi.c: 214: DMACON2bits.DLYCYC = 0b0000;
 40643  013CB6  9886               	bcf	3974,4,c	;volatile
 40644  013CB8  9A86               	bcf	3974,5,c	;volatile
 40645  013CBA  9C86               	bcf	3974,6,c	;volatile
 40646  013CBC  9E86               	bcf	3974,7,c	;volatile
 40647                           
 40648                           ;spi.c: 216: DMACON2bits.INTLVL = 0b0000;
 40649  013CBE  9086               	bcf	3974,0,c	;volatile
 40650  013CC0  9286               	bcf	3974,1,c	;volatile
 40651  013CC2  9486               	bcf	3974,2,c	;volatile
 40652  013CC4  9686               	bcf	3974,3,c	;volatile
 40653                           
 40654                           ;spi.c: 219: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 40655  013CC6  0100               	movlb	0	; () banked
 40656  013CC8  5161               	movf	(spi_tx_rx@command+1)& (0+255),w,b
 40657  013CCA  6E6A               	movwf	3946,c	;volatile
 40658                           
 40659                           ; BSR set to: 0
 40660                           ;spi.c: 220: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 40661  013CCC  C060  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 40662                           
 40663                           ; BSR set to: 0
 40664                           ;spi.c: 223: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 40665  013CD0  0EFF               	movlw	255
 40666  013CD2  6F68               	movwf	??_spi_tx_rx& (0+255),b
 40667  013CD4  0EFF               	movlw	255
 40668  013CD6  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 40669  013CD8  C062  F06A         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 40670  013CDC  C063  F06B         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 40671  013CE0  5168               	movf	??_spi_tx_rx& (0+255),w,b
 40672  013CE2  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 40673  013CE4  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 40674  013CE6  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 40675  013CE8  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 40676  013CEC  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 40677  013CEE  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 40678  013CF0  6E66               	movwf	3942,c	;volatile
 40679                           
 40680                           ; BSR set to: 0
 40681                           ;spi.c: 224: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 40682  013CF2  0562               	decf	spi_tx_rx@command_length& (0+255),w,b
 40683  013CF4  6E67               	movwf	3943,c	;volatile
 40684                           
 40685                           ; BSR set to: 0
 40686                           ;spi.c: 227: LATDbits.LD7 = 0;
 40687  013CF6  9E8C               	bcf	3980,7,c	;volatile
 40688                           
 40689                           ; BSR set to: 0
 40690                           ;spi.c: 230: DMACON1bits.DMAEN = 1;
 40691  013CF8  8088               	bsf	3976,0,c	;volatile
 40692  013CFA                     
 40693                           ; BSR set to: 0
 40694  013CFA  B088               	btfsc	3976,0,c	;volatile
 40695  013CFC  D7FE               	goto	l2225
 40696                           
 40697                           ;spi.c: 234: DMACON1bits.TXINC = 0;
 40698  013CFE  9A88               	bcf	3976,5,c	;volatile
 40699                           
 40700                           ;spi.c: 236: DMACON1bits.RXINC = 1;
 40701  013D00  8888               	bsf	3976,4,c	;volatile
 40702                           
 40703                           ;spi.c: 238: DMACON1bits.DUPLEX1 = 0;
 40704  013D02  9688               	bcf	3976,3,c	;volatile
 40705                           
 40706                           ;spi.c: 239: DMACON1bits.DUPLEX0 = 0;
 40707  013D04  9488               	bcf	3976,2,c	;volatile
 40708                           
 40709                           ;spi.c: 242: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 40710  013D06  0100               	movlb	0	; () banked
 40711  013D08  5165               	movf	(spi_tx_rx@data+1)& (0+255),w,b
 40712  013D0A  6E68               	movwf	3944,c	;volatile
 40713                           
 40714                           ; BSR set to: 0
 40715                           ;spi.c: 243: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 40716  013D0C  C064  FF69         	movff	spi_tx_rx@data,3945	;volatile
 40717                           
 40718                           ; BSR set to: 0
 40719                           ;spi.c: 246: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 40720  013D10  0EFF               	movlw	255
 40721  013D12  6F68               	movwf	??_spi_tx_rx& (0+255),b
 40722  013D14  0EFF               	movlw	255
 40723  013D16  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 40724  013D18  C066  F06A         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 40725  013D1C  C067  F06B         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 40726  013D20  5168               	movf	??_spi_tx_rx& (0+255),w,b
 40727  013D22  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 40728  013D24  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 40729  013D26  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 40730  013D28  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 40731  013D2C  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 40732  013D2E  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 40733  013D30  6E66               	movwf	3942,c	;volatile
 40734                           
 40735                           ; BSR set to: 0
 40736                           ;spi.c: 247: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 40737  013D32  0566               	decf	spi_tx_rx@data_length& (0+255),w,b
 40738  013D34  6E67               	movwf	3943,c	;volatile
 40739                           
 40740                           ; BSR set to: 0
 40741                           ;spi.c: 250: DMACON1bits.DMAEN = 1;
 40742  013D36  8088               	bsf	3976,0,c	;volatile
 40743  013D38                     
 40744                           ; BSR set to: 0
 40745  013D38  B088               	btfsc	3976,0,c	;volatile
 40746  013D3A  D7FE               	goto	l2228
 40747                           
 40748                           ;spi.c: 254: LATDbits.LD7 = 1;
 40749  013D3C  8E8C               	bsf	3980,7,c	;volatile
 40750  013D3E  0012               	return		;funcret
 40751  013D40                     __end_of_spi_tx_rx:
 40752                           	opt stack 0
 40753                           tosu	equ	0xFFF
 40754                           tosh	equ	0xFFE
 40755                           tosl	equ	0xFFD
 40756                           pclath	equ	0xFFA
 40757                           tblptru	equ	0xFF8
 40758                           tblptrh	equ	0xFF7
 40759                           tblptrl	equ	0xFF6
 40760                           tablat	equ	0xFF5
 40761                           prodh	equ	0xFF4
 40762                           prodl	equ	0xFF3
 40763                           intcon	equ	0xFF2
 40764                           postinc0	equ	0xFEE
 40765                           wreg	equ	0xFE8
 40766                           indf1	equ	0xFE7
 40767                           postinc1	equ	0xFE6
 40768                           postdec1	equ	0xFE5
 40769                           plusw1	equ	0xFE3
 40770                           fsr1h	equ	0xFE2
 40771                           fsr1l	equ	0xFE1
 40772                           indf2	equ	0xFDF
 40773                           postinc2	equ	0xFDE
 40774                           postdec2	equ	0xFDD
 40775                           plusw2	equ	0xFDB
 40776                           fsr2h	equ	0xFDA
 40777                           fsr2l	equ	0xFD9
 40778                           status	equ	0xFD8
 40779                           
 40780 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 40781 ;; Defined at:
 40782 ;;		line 993 in file "usb_device_msd.c"
 40783 ;; Parameters:    Size  Location     Type
 40784 ;;  DiExpected      2    0[BANK0 ] unsigned int 
 40785 ;; Auto vars:     Size  Location     Type
 40786 ;;		None
 40787 ;; Return value:  Size  Location     Type
 40788 ;;                  1    wreg      void 
 40789 ;; Registers used:
 40790 ;;		wreg, status,2, status,0
 40791 ;; Tracked objects:
 40792 ;;		On entry : 0/0
 40793 ;;		On exit  : 0/0
 40794 ;;		Unchanged: 0/0
 40795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40796 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40798 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40799 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40800 ;;Total ram usage:        6 bytes
 40801 ;; Hardware stack levels used:    1
 40802 ;; Hardware stack levels required when called:   10
 40803 ;; This function calls:
 40804 ;;		Nothing
 40805 ;; This function is called by:
 40806 ;;		_MSDProcessCommandMediaPresent
 40807 ;; This function uses a non-reentrant model
 40808 ;;
 40809                           
 40810                           	psect	text158
 40811  0131FC                     __ptext158:
 40812                           	opt stack 0
 40813  0131FC                     _MSDComputeDeviceInAndResidue:
 40814                           	opt stack 16
 40815                           
 40816                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 40817                           
 40818                           ;incstack = 0
 40819  0131FC  0100               	movlb	0	; () banked
 40820  0131FE  5160               	movf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 40821  013200  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 40822  013202  5161               	movf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 40823  013204  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 40824  013206  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 40825  013208  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 40826  01320A  5162               	movf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 40827  01320C  0102               	movlb	2	; () banked
 40828  01320E  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 40829  013210  0100               	movlb	0	; () banked
 40830  013212  5163               	movf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 40831  013214  0102               	movlb	2	; () banked
 40832  013216  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 40833  013218  0100               	movlb	0	; () banked
 40834  01321A  5164               	movf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 40835  01321C  0102               	movlb	2	; () banked
 40836  01321E  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 40837  013220  0100               	movlb	0	; () banked
 40838  013222  5165               	movf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 40839  013224  0102               	movlb	2	; () banked
 40840  013226  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 40841  013228  B0D8               	btfsc	status,0,c
 40842  01322A  D00E               	goto	l675
 40843                           
 40844                           ; BSR set to: 2
 40845                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 40846  01322C  0E00               	movlw	0
 40847  01322E  010D               	movlb	13	; () banked
 40848  013230  6F88               	movwf	136,b	;volatile
 40849  013232  0E00               	movlw	0
 40850  013234  6F89               	movwf	137,b	;volatile
 40851  013236  0E00               	movlw	0
 40852  013238  6F8A               	movwf	138,b	;volatile
 40853  01323A  0E00               	movlw	0
 40854  01323C  6F8B               	movwf	139,b	;volatile
 40855                           
 40856                           ; BSR set to: 13
 40857                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 40858  01323E  C208  F13A         	movff	_gblCBW+8,_TransferLength
 40859  013242  C209  F13B         	movff	_gblCBW+9,_TransferLength+1
 40860                           
 40861                           ;usb_device_msd.c: 1002: }
 40862  013246  0012               	return	
 40863  013248                     l675:
 40864                           
 40865                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 40866                           
 40867                           ; BSR set to: 13
 40868  013248  0101               	movlb	1	; () banked
 40869  01324A  513A               	movf	_TransferLength& (0+255),w,b
 40870  01324C  0100               	movlb	0	; () banked
 40871  01324E  5D60               	subwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 40872  013250  0101               	movlb	1	; () banked
 40873  013252  513B               	movf	(_TransferLength+1)& (0+255),w,b
 40874  013254  0100               	movlb	0	; () banked
 40875  013256  5961               	subwfb	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 40876  013258  B0D8               	btfsc	status,0,c
 40877  01325A  D004               	goto	l677
 40878                           
 40879                           ; BSR set to: 0
 40880                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 40881  01325C  C060  F13A         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 40882  013260  C061  F13B         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 40883  013264                     l677:
 40884                           
 40885                           ; BSR set to: 0
 40886                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 40887                           
 40888                           ; BSR set to: 0
 40889  013264  0101               	movlb	1	; () banked
 40890  013266  513A               	movf	_TransferLength& (0+255),w,b
 40891  013268  0100               	movlb	0	; () banked
 40892  01326A  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 40893  01326C  0101               	movlb	1	; () banked
 40894  01326E  513B               	movf	(_TransferLength+1)& (0+255),w,b
 40895  013270  0100               	movlb	0	; () banked
 40896  013272  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 40897  013274  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 40898  013276  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 40899  013278  1F62               	comf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 40900  01327A  1F63               	comf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 40901  01327C  1F64               	comf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 40902  01327E  1F65               	comf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 40903  013280  2B62               	incf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 40904  013282  0E00               	movlw	0
 40905  013284  2363               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 40906  013286  2364               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 40907  013288  2365               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 40908  01328A  0102               	movlb	2	; () banked
 40909  01328C  5108               	movf	(_gblCBW+8)& (0+255),w,b
 40910  01328E  0100               	movlb	0	; () banked
 40911  013290  2562               	addwf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 40912  013292  010D               	movlb	13	; () banked
 40913  013294  6F88               	movwf	136,b	;volatile
 40914  013296  0102               	movlb	2	; () banked
 40915  013298  5109               	movf	(_gblCBW+9)& (0+255),w,b
 40916  01329A  0100               	movlb	0	; () banked
 40917  01329C  2163               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 40918  01329E  010D               	movlb	13	; () banked
 40919  0132A0  6F89               	movwf	137,b	;volatile
 40920  0132A2  0102               	movlb	2	; () banked
 40921  0132A4  510A               	movf	(_gblCBW+10)& (0+255),w,b
 40922  0132A6  0100               	movlb	0	; () banked
 40923  0132A8  2164               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 40924  0132AA  010D               	movlb	13	; () banked
 40925  0132AC  6F8A               	movwf	138,b	;volatile
 40926  0132AE  0102               	movlb	2	; () banked
 40927  0132B0  510B               	movf	(_gblCBW+11)& (0+255),w,b
 40928  0132B2  0100               	movlb	0	; () banked
 40929  0132B4  2165               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 40930  0132B6  010D               	movlb	13	; () banked
 40931  0132B8  6F8B               	movwf	139,b	;volatile
 40932  0132BA  0012               	return	
 40933  0132BC                     __end_of_MSDComputeDeviceInAndResidue:
 40934                           	opt stack 0
 40935                           tosu	equ	0xFFF
 40936                           tosh	equ	0xFFE
 40937                           tosl	equ	0xFFD
 40938                           pclath	equ	0xFFA
 40939                           tblptru	equ	0xFF8
 40940                           tblptrh	equ	0xFF7
 40941                           tblptrl	equ	0xFF6
 40942                           tablat	equ	0xFF5
 40943                           prodh	equ	0xFF4
 40944                           prodl	equ	0xFF3
 40945                           intcon	equ	0xFF2
 40946                           postinc0	equ	0xFEE
 40947                           wreg	equ	0xFE8
 40948                           indf1	equ	0xFE7
 40949                           postinc1	equ	0xFE6
 40950                           postdec1	equ	0xFE5
 40951                           plusw1	equ	0xFE3
 40952                           fsr1h	equ	0xFE2
 40953                           fsr1l	equ	0xFE1
 40954                           indf2	equ	0xFDF
 40955                           postinc2	equ	0xFDE
 40956                           postdec2	equ	0xFDD
 40957                           plusw2	equ	0xFDB
 40958                           fsr2h	equ	0xFDA
 40959                           fsr2l	equ	0xFD9
 40960                           status	equ	0xFD8
 40961                           
 40962 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 40963 ;; Defined at:
 40964 ;;		line 18 in file "external_flash.c"
 40965 ;; Parameters:    Size  Location     Type
 40966 ;;  config          2    0[BANK0 ] PTR void 
 40967 ;;		 -> NULL(0), 
 40968 ;; Auto vars:     Size  Location     Type
 40969 ;;		None
 40970 ;; Return value:  Size  Location     Type
 40971 ;;                  2    0[BANK0 ] unsigned int 
 40972 ;; Registers used:
 40973 ;;		wreg, status,2
 40974 ;; Tracked objects:
 40975 ;;		On entry : 0/0
 40976 ;;		On exit  : 0/0
 40977 ;;		Unchanged: 0/0
 40978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40979 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40982 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40983 ;;Total ram usage:        2 bytes
 40984 ;; Hardware stack levels used:    1
 40985 ;; Hardware stack levels required when called:   10
 40986 ;; This function calls:
 40987 ;;		Nothing
 40988 ;; This function is called by:
 40989 ;;		_MSDProcessCommandMediaPresent
 40990 ;; This function uses a non-reentrant model
 40991 ;;
 40992                           
 40993                           	psect	text159
 40994  01642A                     __ptext159:
 40995                           	opt stack 0
 40996  01642A                     _ExternalFlash_SectorSizeRead:
 40997                           	opt stack 16
 40998                           
 40999                           ;external_flash.c: 20: return 512;
 41000                           
 41001                           ; BSR set to: 13
 41002                           ;incstack = 0
 41003  01642A  0E02               	movlw	2
 41004  01642C  0100               	movlb	0	; () banked
 41005  01642E  6F61               	movwf	(?_ExternalFlash_SectorSizeRead+1)& (0+255),b
 41006  016430  0E00               	movlw	0
 41007  016432  6F60               	movwf	?_ExternalFlash_SectorSizeRead& (0+255),b
 41008  016434  0012               	return	
 41009  016436                     __end_of_ExternalFlash_SectorSizeRead:
 41010                           	opt stack 0
 41011                           tosu	equ	0xFFF
 41012                           tosh	equ	0xFFE
 41013                           tosl	equ	0xFFD
 41014                           pclath	equ	0xFFA
 41015                           tblptru	equ	0xFF8
 41016                           tblptrh	equ	0xFF7
 41017                           tblptrl	equ	0xFF6
 41018                           tablat	equ	0xFF5
 41019                           prodh	equ	0xFF4
 41020                           prodl	equ	0xFF3
 41021                           intcon	equ	0xFF2
 41022                           postinc0	equ	0xFEE
 41023                           wreg	equ	0xFE8
 41024                           indf1	equ	0xFE7
 41025                           postinc1	equ	0xFE6
 41026                           postdec1	equ	0xFE5
 41027                           plusw1	equ	0xFE3
 41028                           fsr1h	equ	0xFE2
 41029                           fsr1l	equ	0xFE1
 41030                           indf2	equ	0xFDF
 41031                           postinc2	equ	0xFDE
 41032                           postdec2	equ	0xFDD
 41033                           plusw2	equ	0xFDB
 41034                           fsr2h	equ	0xFDA
 41035                           fsr2l	equ	0xFD9
 41036                           status	equ	0xFD8
 41037                           
 41038 ;; *************** function _ExternalFlash_CapacityRead *****************
 41039 ;; Defined at:
 41040 ;;		line 23 in file "external_flash.c"
 41041 ;; Parameters:    Size  Location     Type
 41042 ;;  config          2    0[BANK0 ] PTR void 
 41043 ;;		 -> NULL(0), 
 41044 ;; Auto vars:     Size  Location     Type
 41045 ;;		None
 41046 ;; Return value:  Size  Location     Type
 41047 ;;                  4    0[BANK0 ] unsigned long 
 41048 ;; Registers used:
 41049 ;;		wreg, status,2
 41050 ;; Tracked objects:
 41051 ;;		On entry : 0/0
 41052 ;;		On exit  : 0/0
 41053 ;;		Unchanged: 0/0
 41054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41055 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41058 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41059 ;;Total ram usage:        4 bytes
 41060 ;; Hardware stack levels used:    1
 41061 ;; Hardware stack levels required when called:   10
 41062 ;; This function calls:
 41063 ;;		Nothing
 41064 ;; This function is called by:
 41065 ;;		_MSDProcessCommandMediaPresent
 41066 ;; This function uses a non-reentrant model
 41067 ;;
 41068                           
 41069                           	psect	text160
 41070  0163AE                     __ptext160:
 41071                           	opt stack 0
 41072  0163AE                     _ExternalFlash_CapacityRead:
 41073                           	opt stack 16
 41074                           
 41075                           ;external_flash.c: 26: return ((uint32_t) 8192 - 1);
 41076                           
 41077                           ; BSR set to: 0
 41078                           ;incstack = 0
 41079  0163AE  0EFF               	movlw	255
 41080  0163B0  0100               	movlb	0	; () banked
 41081  0163B2  6F60               	movwf	?_ExternalFlash_CapacityRead& (0+255),b
 41082  0163B4  0E1F               	movlw	31
 41083  0163B6  6F61               	movwf	(?_ExternalFlash_CapacityRead+1)& (0+255),b
 41084  0163B8  0E00               	movlw	0
 41085  0163BA  6F62               	movwf	(?_ExternalFlash_CapacityRead+2)& (0+255),b
 41086  0163BC  0E00               	movlw	0
 41087  0163BE  6F63               	movwf	(?_ExternalFlash_CapacityRead+3)& (0+255),b
 41088  0163C0  0012               	return	
 41089  0163C2                     __end_of_ExternalFlash_CapacityRead:
 41090                           	opt stack 0
 41091                           tosu	equ	0xFFF
 41092                           tosh	equ	0xFFE
 41093                           tosl	equ	0xFFD
 41094                           pclath	equ	0xFFA
 41095                           tblptru	equ	0xFF8
 41096                           tblptrh	equ	0xFF7
 41097                           tblptrl	equ	0xFF6
 41098                           tablat	equ	0xFF5
 41099                           prodh	equ	0xFF4
 41100                           prodl	equ	0xFF3
 41101                           intcon	equ	0xFF2
 41102                           postinc0	equ	0xFEE
 41103                           wreg	equ	0xFE8
 41104                           indf1	equ	0xFE7
 41105                           postinc1	equ	0xFE6
 41106                           postdec1	equ	0xFE5
 41107                           plusw1	equ	0xFE3
 41108                           fsr1h	equ	0xFE2
 41109                           fsr1l	equ	0xFE1
 41110                           indf2	equ	0xFDF
 41111                           postinc2	equ	0xFDE
 41112                           postdec2	equ	0xFDD
 41113                           plusw2	equ	0xFDB
 41114                           fsr2h	equ	0xFDA
 41115                           fsr2l	equ	0xFD9
 41116                           status	equ	0xFD8
 41117                           
 41118 ;; *************** function _ExternalFlash_MediaInitialize *****************
 41119 ;; Defined at:
 41120 ;;		line 10 in file "external_flash.c"
 41121 ;; Parameters:    Size  Location     Type
 41122 ;;  config          2    0[BANK0 ] PTR void 
 41123 ;;		 -> NULL(0), 
 41124 ;; Auto vars:     Size  Location     Type
 41125 ;;		None
 41126 ;; Return value:  Size  Location     Type
 41127 ;;                  2    0[BANK0 ] PTR struct .
 41128 ;; Registers used:
 41129 ;;		wreg, status,2, status,0
 41130 ;; Tracked objects:
 41131 ;;		On entry : 0/0
 41132 ;;		On exit  : 0/0
 41133 ;;		Unchanged: 0/0
 41134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41135 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41138 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41139 ;;Total ram usage:        2 bytes
 41140 ;; Hardware stack levels used:    1
 41141 ;; Hardware stack levels required when called:   10
 41142 ;; This function calls:
 41143 ;;		Nothing
 41144 ;; This function is called by:
 41145 ;;		_USBMSDInit
 41146 ;;		_MSDProcessCommand
 41147 ;; This function uses a non-reentrant model
 41148 ;;
 41149                           
 41150                           	psect	text161
 41151  0162B6                     __ptext161:
 41152                           	opt stack 0
 41153  0162B6                     _ExternalFlash_MediaInitialize:
 41154                           	opt stack 0
 41155                           
 41156                           ; BSR set to: 0
 41157                           ;Skip over the trampoline to the duplicate function for level 2
 41158  0162B6  B25F               	btfsc	btemp,1,c
 41159  0162B8  EFB3  F0B1         	goto	i2_ExternalFlash_MediaInitialize
 41160  0162BC                     _ExternalFlash_MediaInitialize$intlevel0:
 41161                           	opt stack 17
 41162                           
 41163                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 41164                           
 41165                           ;incstack = 0
 41166  0162BC  0102               	movlb	2	; () banked
 41167  0162BE  819A               	bsf	(_mediaInformation+1)& (0+255),0,b
 41168                           
 41169                           ; BSR set to: 2
 41170                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 41171  0162C0  0E02               	movlw	2
 41172  0162C2  6F9C               	movwf	(_mediaInformation+3)& (0+255),b
 41173  0162C4  0E00               	movlw	0
 41174  0162C6  6F9B               	movwf	(_mediaInformation+2)& (0+255),b
 41175                           
 41176                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 41177  0162C8  0E00               	movlw	0
 41178  0162CA  6F99               	movwf	_mediaInformation& (0+255),b
 41179                           
 41180                           ; BSR set to: 2
 41181                           ;external_flash.c: 15: return &mediaInformation;
 41182  0162CC  0E99               	movlw	low _mediaInformation
 41183  0162CE  0100               	movlb	0	; () banked
 41184  0162D0  6F60               	movwf	?_ExternalFlash_MediaInitialize& (0+255),b
 41185  0162D2  0E02               	movlw	high _mediaInformation
 41186  0162D4  6F61               	movwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),b
 41187  0162D6  0012               	return	
 41188  0162D8                     __end_of_ExternalFlash_MediaInitialize:
 41189                           	opt stack 0
 41190                           tosu	equ	0xFFF
 41191                           tosh	equ	0xFFE
 41192                           tosl	equ	0xFFD
 41193                           pclath	equ	0xFFA
 41194                           tblptru	equ	0xFF8
 41195                           tblptrh	equ	0xFF7
 41196                           tblptrl	equ	0xFF6
 41197                           tablat	equ	0xFF5
 41198                           prodh	equ	0xFF4
 41199                           prodl	equ	0xFF3
 41200                           intcon	equ	0xFF2
 41201                           postinc0	equ	0xFEE
 41202                           wreg	equ	0xFE8
 41203                           indf1	equ	0xFE7
 41204                           postinc1	equ	0xFE6
 41205                           postdec1	equ	0xFE5
 41206                           plusw1	equ	0xFE3
 41207                           fsr1h	equ	0xFE2
 41208                           fsr1l	equ	0xFE1
 41209                           indf2	equ	0xFDF
 41210                           postinc2	equ	0xFDE
 41211                           postdec2	equ	0xFDD
 41212                           plusw2	equ	0xFDB
 41213                           fsr2h	equ	0xFDA
 41214                           fsr2l	equ	0xFD9
 41215                           status	equ	0xFD8
 41216                           
 41217 ;; *************** function _ExternalFlash_MediaDetect *****************
 41218 ;; Defined at:
 41219 ;;		line 29 in file "external_flash.c"
 41220 ;; Parameters:    Size  Location     Type
 41221 ;;  config          2    0[BANK0 ] PTR void 
 41222 ;;		 -> NULL(0), 
 41223 ;; Auto vars:     Size  Location     Type
 41224 ;;		None
 41225 ;; Return value:  Size  Location     Type
 41226 ;;                  1    wreg      unsigned char 
 41227 ;; Registers used:
 41228 ;;		wreg
 41229 ;; Tracked objects:
 41230 ;;		On entry : 0/0
 41231 ;;		On exit  : 0/0
 41232 ;;		Unchanged: 0/0
 41233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41234 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41237 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41238 ;;Total ram usage:        2 bytes
 41239 ;; Hardware stack levels used:    1
 41240 ;; Hardware stack levels required when called:   10
 41241 ;; This function calls:
 41242 ;;		Nothing
 41243 ;; This function is called by:
 41244 ;;		_USBMSDInit
 41245 ;;		_MSDProcessCommand
 41246 ;; This function uses a non-reentrant model
 41247 ;;
 41248                           
 41249                           	psect	text162
 41250  01646C                     __ptext162:
 41251                           	opt stack 0
 41252  01646C                     _ExternalFlash_MediaDetect:
 41253                           	opt stack 0
 41254                           
 41255                           ; BSR set to: 0
 41256                           ;Skip over the trampoline to the duplicate function for level 2
 41257  01646C  B25F               	btfsc	btemp,1,c
 41258  01646E  EF5D  F0B2         	goto	i2_ExternalFlash_MediaDetect
 41259  016472                     _ExternalFlash_MediaDetect$intlevel0:
 41260                           	opt stack 17
 41261                           
 41262                           ;external_flash.c: 31: return 1;
 41263                           
 41264                           ;incstack = 0
 41265  016472  0E01               	movlw	1
 41266  016474  0012               	return	
 41267  016476                     __end_of_ExternalFlash_MediaDetect:
 41268                           	opt stack 0
 41269                           tosu	equ	0xFFF
 41270                           tosh	equ	0xFFE
 41271                           tosl	equ	0xFFD
 41272                           pclath	equ	0xFFA
 41273                           tblptru	equ	0xFF8
 41274                           tblptrh	equ	0xFF7
 41275                           tblptrl	equ	0xFF6
 41276                           tablat	equ	0xFF5
 41277                           prodh	equ	0xFF4
 41278                           prodl	equ	0xFF3
 41279                           intcon	equ	0xFF2
 41280                           postinc0	equ	0xFEE
 41281                           wreg	equ	0xFE8
 41282                           indf1	equ	0xFE7
 41283                           postinc1	equ	0xFE6
 41284                           postdec1	equ	0xFE5
 41285                           plusw1	equ	0xFE3
 41286                           fsr1h	equ	0xFE2
 41287                           fsr1l	equ	0xFE1
 41288                           indf2	equ	0xFDF
 41289                           postinc2	equ	0xFDE
 41290                           postdec2	equ	0xFDD
 41291                           plusw2	equ	0xFDB
 41292                           fsr2h	equ	0xFDA
 41293                           fsr2l	equ	0xFD9
 41294                           status	equ	0xFD8
 41295                           
 41296 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 41297 ;; Defined at:
 41298 ;;		line 73 in file "app_device_custom_hid.c"
 41299 ;; Parameters:    Size  Location     Type
 41300 ;;		None
 41301 ;; Auto vars:     Size  Location     Type
 41302 ;;  idx             1    0        unsigned char 
 41303 ;; Return value:  Size  Location     Type
 41304 ;;                  1    wreg      void 
 41305 ;; Registers used:
 41306 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41307 ;; Tracked objects:
 41308 ;;		On entry : 0/0
 41309 ;;		On exit  : 0/0
 41310 ;;		Unchanged: 0/0
 41311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41316 ;;Total ram usage:        0 bytes
 41317 ;; Hardware stack levels used:    1
 41318 ;; Hardware stack levels required when called:   17
 41319 ;; This function calls:
 41320 ;;		_USBTransferOnePacket
 41321 ;;		_api_parse
 41322 ;;		_api_prepare
 41323 ;; This function is called by:
 41324 ;;		_main
 41325 ;; This function uses a non-reentrant model
 41326 ;;
 41327                           
 41328                           	psect	text163
 41329  0138EC                     __ptext163:
 41330                           	opt stack 0
 41331  0138EC                     _APP_DeviceCustomHIDTasks:
 41332                           	opt stack 13
 41333                           
 41334                           ;app_device_custom_hid.c: 75: uint8_t idx;;app_device_custom_hid.c: 80: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 41335                           
 41336                           ;incstack = 0
 41337  0138EC  0E20               	movlw	32
 41338  0138EE  605D               	cpfslt	_USBDeviceState,c	;volatile
 41339  0138F0  D001               	goto	l944
 41340  0138F2  0012               	return	
 41341  0138F4                     l944:
 41342                           
 41343                           ;app_device_custom_hid.c: 83: };app_device_custom_hid.c: 89: if( UCONbits.SUSPND== 1 )
 41344  0138F4  B265               	btfsc	3941,1,c	;volatile
 41345  0138F6  0012               	return	
 41346                           
 41347                           ;app_device_custom_hid.c: 92: };app_device_custom_hid.c: 95: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 41348                           
 41349                           ;app_device_custom_hid.c: 90: {;app_device_custom_hid.c: 91: return;
 41350  0138F8  0101               	movlb	1	; () banked
 41351  0138FA  5138               	movf	_USBOutHandle& (0+255),w,b
 41352  0138FC  1139               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 41353  0138FE  B4D8               	btfsc	status,2,c
 41354  013900  D006               	goto	u18970
 41355                           
 41356                           ; BSR set to: 1
 41357  013902  C138  FFD9         	movff	_USBOutHandle,fsr2l
 41358  013906  C139  FFDA         	movff	_USBOutHandle+1,fsr2h
 41359  01390A  BEDF               	btfsc	indf2,7,c
 41360  01390C  0012               	return	
 41361  01390E                     u18970:
 41362                           
 41363                           ; BSR set to: 1
 41364                           ;app_device_custom_hid.c: 96: {;app_device_custom_hid.c: 101: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 41365                           
 41366                           ; BSR set to: 1
 41367  01390E  5136               	movf	_USBInHandle& (0+255),w,b
 41368  013910  1137               	iorwf	(_USBInHandle+1)& (0+255),w,b
 41369  013912  B4D8               	btfsc	status,2,c
 41370  013914  D006               	goto	u18990
 41371                           
 41372                           ; BSR set to: 1
 41373  013916  C136  FFD9         	movff	_USBInHandle,fsr2l
 41374  01391A  C137  FFDA         	movff	_USBInHandle+1,fsr2h
 41375  01391E  BEDF               	btfsc	indf2,7,c
 41376  013920  D01B               	goto	l950
 41377  013922                     u18990:
 41378                           
 41379                           ; BSR set to: 1
 41380                           ;app_device_custom_hid.c: 102: {;app_device_custom_hid.c: 104: api_prepare((uint8_t*) Re
      +                          ceivedDataBuffer, (uint8_t*) ToSendDataBuffer);
 41381                           
 41382                           ; BSR set to: 1
 41383  013922  0E80               	movlw	low _ReceivedDataBuffer
 41384  013924  0100               	movlb	0	; () banked
 41385  013926  6F70               	movwf	api_prepare@inBuffer& (0+255),b
 41386  013928  0E03               	movlw	high _ReceivedDataBuffer
 41387  01392A  6F71               	movwf	(api_prepare@inBuffer+1)& (0+255),b
 41388  01392C  0E40               	movlw	low _ToSendDataBuffer
 41389  01392E  6F72               	movwf	api_prepare@outBuffer& (0+255),b
 41390  013930  0E03               	movlw	high _ToSendDataBuffer
 41391  013932  6F73               	movwf	(api_prepare@outBuffer+1)& (0+255),b
 41392  013934  EC59  F095         	call	_api_prepare	;wreg free
 41393                           
 41394                           ;app_device_custom_hid.c: 106: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 41395  013938  0E01               	movlw	1
 41396  01393A  0100               	movlb	0	; () banked
 41397  01393C  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 41398  01393E  0E40               	movlw	low _ToSendDataBuffer
 41399  013940  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 41400  013942  0E03               	movlw	high _ToSendDataBuffer
 41401  013944  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 41402  013946  0E40               	movlw	64
 41403  013948  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 41404  01394A  0E01               	movlw	1
 41405  01394C  EC15  F08B         	call	_USBTransferOnePacket
 41406  013950  C060  F136         	movff	?_USBTransferOnePacket,_USBInHandle
 41407  013954  C061  F137         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 41408  013958                     l950:
 41409                           
 41410                           ;app_device_custom_hid.c: 107: };app_device_custom_hid.c: 110: api_parse(ReceivedDataBuf
      +                          fer, 64, ToSendDataBuffer);
 41411  013958  0E80               	movlw	low _ReceivedDataBuffer
 41412  01395A  0100               	movlb	0	; () banked
 41413  01395C  6FA7               	movwf	api_parse@inBuffer& (0+255),b
 41414  01395E  0E03               	movlw	high _ReceivedDataBuffer
 41415  013960  6FA8               	movwf	(api_parse@inBuffer+1)& (0+255),b
 41416  013962  0E40               	movlw	64
 41417  013964  6FA9               	movwf	api_parse@receivedDataLength& (0+255),b
 41418  013966  0E40               	movlw	low _ToSendDataBuffer
 41419  013968  6FAA               	movwf	api_parse@outBuffer& (0+255),b
 41420  01396A  0E03               	movlw	high _ToSendDataBuffer
 41421  01396C  6FAB               	movwf	(api_parse@outBuffer+1)& (0+255),b
 41422  01396E  ECA8  F085         	call	_api_parse	;wreg free
 41423                           
 41424                           ;app_device_custom_hid.c: 114: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 41425  013972  0E00               	movlw	0
 41426  013974  0100               	movlb	0	; () banked
 41427  013976  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 41428  013978  0E80               	movlw	low _ReceivedDataBuffer
 41429  01397A  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 41430  01397C  0E03               	movlw	high _ReceivedDataBuffer
 41431  01397E  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 41432  013980  0E40               	movlw	64
 41433  013982  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 41434  013984  0E01               	movlw	1
 41435  013986  EC15  F08B         	call	_USBTransferOnePacket
 41436  01398A  C060  F138         	movff	?_USBTransferOnePacket,_USBOutHandle
 41437  01398E  C061  F139         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 41438  013992  0012               	return	
 41439  013994                     __end_of_APP_DeviceCustomHIDTasks:
 41440                           	opt stack 0
 41441                           tosu	equ	0xFFF
 41442                           tosh	equ	0xFFE
 41443                           tosl	equ	0xFFD
 41444                           pclath	equ	0xFFA
 41445                           tblptru	equ	0xFF8
 41446                           tblptrh	equ	0xFF7
 41447                           tblptrl	equ	0xFF6
 41448                           tablat	equ	0xFF5
 41449                           prodh	equ	0xFF4
 41450                           prodl	equ	0xFF3
 41451                           intcon	equ	0xFF2
 41452                           postinc0	equ	0xFEE
 41453                           wreg	equ	0xFE8
 41454                           indf1	equ	0xFE7
 41455                           postinc1	equ	0xFE6
 41456                           postdec1	equ	0xFE5
 41457                           plusw1	equ	0xFE3
 41458                           fsr1h	equ	0xFE2
 41459                           fsr1l	equ	0xFE1
 41460                           indf2	equ	0xFDF
 41461                           postinc2	equ	0xFDE
 41462                           postdec2	equ	0xFDD
 41463                           plusw2	equ	0xFDB
 41464                           fsr2h	equ	0xFDA
 41465                           fsr2l	equ	0xFD9
 41466                           status	equ	0xFD8
 41467                           
 41468 ;; *************** function _api_prepare *****************
 41469 ;; Defined at:
 41470 ;;		line 38 in file "api.c"
 41471 ;; Parameters:    Size  Location     Type
 41472 ;;  inBuffer        2   16[BANK0 ] PTR unsigned char 
 41473 ;;		 -> ReceivedDataBuffer(64), 
 41474 ;;  outBuffer       2   18[BANK0 ] PTR unsigned char 
 41475 ;;		 -> ToSendDataBuffer(64), 
 41476 ;; Auto vars:     Size  Location     Type
 41477 ;;  command         1   20[BANK0 ] enum E6715
 41478 ;; Return value:  Size  Location     Type
 41479 ;;                  1    wreg      void 
 41480 ;; Registers used:
 41481 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41482 ;; Tracked objects:
 41483 ;;		On entry : 0/0
 41484 ;;		On exit  : 0/0
 41485 ;;		Unchanged: 0/0
 41486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41487 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41488 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41490 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41491 ;;Total ram usage:        5 bytes
 41492 ;; Hardware stack levels used:    1
 41493 ;; Hardware stack levels required when called:   12
 41494 ;; This function calls:
 41495 ;;		__fill_buffer_get_display
 41496 ;;		__fill_buffer_get_mode_details
 41497 ;;		__fill_buffer_get_status
 41498 ;;		_memcpy
 41499 ;; This function is called by:
 41500 ;;		_APP_DeviceCustomHIDTasks
 41501 ;; This function uses a non-reentrant model
 41502 ;;
 41503                           
 41504                           	psect	text164
 41505  012AB2                     __ptext164:
 41506                           	opt stack 0
 41507  012AB2                     _api_prepare:
 41508                           	opt stack 17
 41509                           
 41510                           ;api.c: 40: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 41511                           
 41512                           ;incstack = 0
 41513  012AB2  C070  FFD9         	movff	api_prepare@inBuffer,fsr2l
 41514  012AB6  C071  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 41515  012ABA  50DF               	movf	indf2,w,c
 41516  012ABC  0100               	movlb	0	; () banked
 41517  012ABE  6F74               	movwf	api_prepare@command& (0+255),b
 41518                           
 41519                           ; BSR set to: 0
 41520                           ;api.c: 42: if(command>0x7F)
 41521  012AC0  0E7F               	movlw	127
 41522  012AC2  6574               	cpfsgt	api_prepare@command& (0+255),b
 41523  012AC4  D051               	goto	l2280
 41524                           
 41525                           ; BSR set to: 0
 41526                           ;api.c: 49: outBuffer[0] = 0x99;
 41527                           
 41528                           ; BSR set to: 0
 41529                           
 41530                           ;api.c: 45: {;api.c: 48: default:
 41531                           
 41532                           ; BSR set to: 0
 41533                           ;api.c: 43: {;api.c: 44: switch(command)
 41534  012AC6  C072  FFD9         	movff	api_prepare@outBuffer,fsr2l
 41535  012ACA  C073  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 41536  012ACE  0E99               	movlw	153
 41537  012AD0  6EDF               	movwf	indf2,c
 41538                           
 41539                           ; BSR set to: 0
 41540                           ;api.c: 50: outBuffer[1] = 0x99;
 41541  012AD2  EE20 F001          	lfsr	2,1
 41542  012AD6  5172               	movf	api_prepare@outBuffer& (0+255),w,b
 41543  012AD8  26D9               	addwf	fsr2l,f,c
 41544  012ADA  5173               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 41545  012ADC  22DA               	addwfc	fsr2h,f,c
 41546  012ADE  0E99               	movlw	153
 41547  012AE0  6EDF               	movwf	indf2,c
 41548                           
 41549                           ;api.c: 51: }
 41550  012AE2  0012               	return	
 41551  012AE4                     
 41552                           ; BSR set to: 0
 41553                           ;api.c: 64: _fill_buffer_get_status(outBuffer);
 41554                           
 41555                           ; BSR set to: 0
 41556  012AE4  C072  F06B         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 41557  012AE8  C073  F06C         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 41558  012AEC  EC9E  F071         	call	__fill_buffer_get_status	;wreg free
 41559                           
 41560                           ;api.c: 65: break;
 41561  012AF0  0012               	return	
 41562  012AF2                     
 41563                           ;api.c: 69: _fill_buffer_get_display(outBuffer, 0);
 41564  012AF2  C072  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 41565  012AF6  C073  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 41566  012AFA  0E00               	movlw	0
 41567  012AFC  0100               	movlb	0	; () banked
 41568  012AFE  6F66               	movwf	__fill_buffer_get_display@secondHalf& (0+255),b
 41569  012B00  ECBA  F099         	call	__fill_buffer_get_display	;wreg free
 41570                           
 41571                           ;api.c: 70: break;
 41572  012B04  0012               	return	
 41573  012B06                     
 41574                           ;api.c: 74: _fill_buffer_get_display(outBuffer, 1);
 41575  012B06  C072  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 41576  012B0A  C073  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 41577  012B0E  0E01               	movlw	1
 41578  012B10  0100               	movlb	0	; () banked
 41579  012B12  6F66               	movwf	__fill_buffer_get_display@secondHalf& (0+255),b
 41580  012B14  ECBA  F099         	call	__fill_buffer_get_display	;wreg free
 41581                           
 41582                           ;api.c: 75: break;
 41583  012B18  0012               	return	
 41584  012B1A                     
 41585                           ;api.c: 79: _fill_buffer_get_mode_details(outBuffer);
 41586  012B1A  C072  F060         	movff	api_prepare@outBuffer,__fill_buffer_get_mode_details@outBuffer
 41587  012B1E  C073  F061         	movff	api_prepare@outBuffer+1,__fill_buffer_get_mode_details@outBuffer+1
 41588  012B22  EC42  F079         	call	__fill_buffer_get_mode_details	;wreg free
 41589                           
 41590                           ;api.c: 80: break;
 41591  012B26  0012               	return	
 41592  012B28                     
 41593                           ;api.c: 84: memcpy(outBuffer, inBuffer, 64);
 41594  012B28  C072  F060         	movff	api_prepare@outBuffer,memcpy@d1
 41595  012B2C  C073  F061         	movff	api_prepare@outBuffer+1,memcpy@d1+1
 41596  012B30  C070  F062         	movff	api_prepare@inBuffer,memcpy@s1
 41597  012B34  C071  F063         	movff	api_prepare@inBuffer+1,memcpy@s1+1
 41598  012B38  0E00               	movlw	0
 41599  012B3A  0100               	movlb	0	; () banked
 41600  012B3C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 41601  012B3E  0E40               	movlw	64
 41602  012B40  6F64               	movwf	memcpy@n& (0+255),b
 41603  012B42  EC93  F0A7         	call	_memcpy	;wreg free
 41604                           
 41605                           ;api.c: 85: break;
 41606  012B46  0012               	return	
 41607  012B48                     
 41608                           ;api.c: 88: outBuffer[0] = 0x99;
 41609  012B48  C072  FFD9         	movff	api_prepare@outBuffer,fsr2l
 41610  012B4C  C073  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 41611  012B50  0E99               	movlw	153
 41612  012B52  6EDF               	movwf	indf2,c
 41613                           
 41614                           ;api.c: 89: outBuffer[1] = 0x99;
 41615  012B54  0100               	movlb	0	; () banked
 41616  012B56  EE20 F001          	lfsr	2,1
 41617  012B5A  5172               	movf	api_prepare@outBuffer& (0+255),w,b
 41618  012B5C  26D9               	addwf	fsr2l,f,c
 41619  012B5E  5173               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 41620  012B60  22DA               	addwfc	fsr2h,f,c
 41621  012B62  0E99               	movlw	153
 41622  012B64  6EDF               	movwf	indf2,c
 41623                           
 41624                           ;api.c: 90: }
 41625  012B66  0012               	return	
 41626  012B68                     l2280:
 41627                           
 41628                           ; BSR set to: 0
 41629                           
 41630                           ; BSR set to: 0
 41631  012B68  5174               	movf	api_prepare@command& (0+255),w,b
 41632                           
 41633                           ; Switch size 1, requested type "space"
 41634                           ; Number of cases is 6, Range of values is 0 to 32
 41635                           ; switch strategies available:
 41636                           ; Name         Instructions Cycles
 41637                           ; simple_byte           19    10 (average)
 41638                           ;	Chosen strategy is simple_byte
 41639  012B6A  0A00               	xorlw	0	; case 0
 41640  012B6C  B4D8               	btfsc	status,2,c
 41641  012B6E  0012               	return	
 41642  012B70  0A10               	xorlw	16	; case 16
 41643  012B72  B4D8               	btfsc	status,2,c
 41644  012B74  D7B7               	goto	l2283
 41645  012B76  0A01               	xorlw	1	; case 17
 41646  012B78  B4D8               	btfsc	status,2,c
 41647  012B7A  D7BB               	goto	l2284
 41648  012B7C  0A03               	xorlw	3	; case 18
 41649  012B7E  B4D8               	btfsc	status,2,c
 41650  012B80  D7C2               	goto	l2285
 41651  012B82  0A01               	xorlw	1	; case 19
 41652  012B84  B4D8               	btfsc	status,2,c
 41653  012B86  D7C9               	goto	l2286
 41654  012B88  0A33               	xorlw	51	; case 32
 41655  012B8A  B4D8               	btfsc	status,2,c
 41656  012B8C  D7CD               	goto	l2287
 41657  012B8E  D7DC               	goto	l2288
 41658  012B90                     __end_of_api_prepare:
 41659                           	opt stack 0
 41660                           tosu	equ	0xFFF
 41661                           tosh	equ	0xFFE
 41662                           tosl	equ	0xFFD
 41663                           pclath	equ	0xFFA
 41664                           tblptru	equ	0xFF8
 41665                           tblptrh	equ	0xFF7
 41666                           tblptrl	equ	0xFF6
 41667                           tablat	equ	0xFF5
 41668                           prodh	equ	0xFF4
 41669                           prodl	equ	0xFF3
 41670                           intcon	equ	0xFF2
 41671                           postinc0	equ	0xFEE
 41672                           wreg	equ	0xFE8
 41673                           indf1	equ	0xFE7
 41674                           postinc1	equ	0xFE6
 41675                           postdec1	equ	0xFE5
 41676                           plusw1	equ	0xFE3
 41677                           fsr1h	equ	0xFE2
 41678                           fsr1l	equ	0xFE1
 41679                           indf2	equ	0xFDF
 41680                           postinc2	equ	0xFDE
 41681                           postdec2	equ	0xFDD
 41682                           plusw2	equ	0xFDB
 41683                           fsr2h	equ	0xFDA
 41684                           fsr2l	equ	0xFD9
 41685                           status	equ	0xFD8
 41686                           
 41687 ;; *************** function __fill_buffer_get_status *****************
 41688 ;; Defined at:
 41689 ;;		line 171 in file "api.c"
 41690 ;; Parameters:    Size  Location     Type
 41691 ;;  outBuffer       2   11[BANK0 ] PTR unsigned char 
 41692 ;;		 -> ToSendDataBuffer(64), 
 41693 ;; Auto vars:     Size  Location     Type
 41694 ;;		None
 41695 ;; Return value:  Size  Location     Type
 41696 ;;                  1    wreg      void 
 41697 ;; Registers used:
 41698 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 41699 ;; Tracked objects:
 41700 ;;		On entry : 0/0
 41701 ;;		On exit  : 0/0
 41702 ;;		Unchanged: 0/0
 41703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41704 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41707 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41708 ;;Total ram usage:        2 bytes
 41709 ;; Hardware stack levels used:    1
 41710 ;; Hardware stack levels required when called:   11
 41711 ;; This function calls:
 41712 ;;		_memcpy
 41713 ;; This function is called by:
 41714 ;;		_api_prepare
 41715 ;; This function uses a non-reentrant model
 41716 ;;
 41717                           
 41718                           	psect	text165
 41719  00E33C                     __ptext165:
 41720                           	opt stack 0
 41721  00E33C                     __fill_buffer_get_status:
 41722                           	opt stack 17
 41723                           
 41724                           ;api.c: 174: outBuffer[0] = DATAREQUEST_GET_STATUS;
 41725                           
 41726                           ;incstack = 0
 41727  00E33C  C06B  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 41728  00E340  C06C  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 41729  00E344  0E10               	movlw	16
 41730  00E346  6EDF               	movwf	indf2,c
 41731                           
 41732                           ;api.c: 177: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 41733  00E348  0100               	movlb	0	; () banked
 41734  00E34A  EE20 F001          	lfsr	2,1
 41735  00E34E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41736  00E350  26D9               	addwf	fsr2l,f,c
 41737  00E352  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41738  00E354  22DA               	addwfc	fsr2h,f,c
 41739  00E356  0EBC               	movlw	188
 41740  00E358  6EDF               	movwf	indf2,c
 41741                           
 41742                           ; BSR set to: 0
 41743                           ;api.c: 178: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 41744  00E35A  EE20 F002          	lfsr	2,2
 41745  00E35E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41746  00E360  26D9               	addwf	fsr2l,f,c
 41747  00E362  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41748  00E364  22DA               	addwfc	fsr2h,f,c
 41749  00E366  0E26               	movlw	38
 41750  00E368  6EDF               	movwf	indf2,c
 41751                           
 41752                           ; BSR set to: 0
 41753                           ;api.c: 181: outBuffer[3] = 0x00;
 41754  00E36A  EE20 F003          	lfsr	2,3
 41755  00E36E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41756  00E370  26D9               	addwf	fsr2l,f,c
 41757  00E372  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41758  00E374  22DA               	addwfc	fsr2h,f,c
 41759  00E376  0E00               	movlw	0
 41760  00E378  6EDF               	movwf	indf2,c
 41761                           
 41762                           ; BSR set to: 0
 41763                           ;api.c: 182: outBuffer[4] = 0x06;
 41764  00E37A  EE20 F004          	lfsr	2,4
 41765  00E37E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41766  00E380  26D9               	addwf	fsr2l,f,c
 41767  00E382  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41768  00E384  22DA               	addwfc	fsr2h,f,c
 41769  00E386  0E06               	movlw	6
 41770  00E388  6EDF               	movwf	indf2,c
 41771                           
 41772                           ; BSR set to: 0
 41773                           ;api.c: 183: outBuffer[5] = 0x07;
 41774  00E38A  EE20 F005          	lfsr	2,5
 41775  00E38E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41776  00E390  26D9               	addwf	fsr2l,f,c
 41777  00E392  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41778  00E394  22DA               	addwfc	fsr2h,f,c
 41779  00E396  0E07               	movlw	7
 41780  00E398  6EDF               	movwf	indf2,c
 41781                           
 41782                           ; BSR set to: 0
 41783                           ;api.c: 186: outBuffer[6] = os.subTimeSlot;
 41784  00E39A  EE20 F006          	lfsr	2,6
 41785  00E39E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41786  00E3A0  26D9               	addwf	fsr2l,f,c
 41787  00E3A2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41788  00E3A4  22DA               	addwfc	fsr2h,f,c
 41789  00E3A6  C164  FFDF         	movff	_os,indf2	;volatile
 41790                           
 41791                           ; BSR set to: 0
 41792                           ;api.c: 187: outBuffer[7] = os.timeSlot;
 41793  00E3AA  EE20 F007          	lfsr	2,7
 41794  00E3AE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41795  00E3B0  26D9               	addwf	fsr2l,f,c
 41796  00E3B2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41797  00E3B4  22DA               	addwfc	fsr2h,f,c
 41798  00E3B6  C165  FFDF         	movff	_os+1,indf2	;volatile
 41799                           
 41800                           ; BSR set to: 0
 41801                           ;api.c: 188: outBuffer[8] = os.done;
 41802  00E3BA  EE20 F008          	lfsr	2,8
 41803  00E3BE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41804  00E3C0  26D9               	addwf	fsr2l,f,c
 41805  00E3C2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41806  00E3C4  22DA               	addwfc	fsr2h,f,c
 41807  00E3C6  C166  FFDF         	movff	_os+2,indf2	;volatile
 41808                           
 41809                           ; BSR set to: 0
 41810                           ;api.c: 189: outBuffer[9] = os.encoder1Count;
 41811  00E3CA  EE20 F009          	lfsr	2,9
 41812  00E3CE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41813  00E3D0  26D9               	addwf	fsr2l,f,c
 41814  00E3D2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41815  00E3D4  22DA               	addwfc	fsr2h,f,c
 41816  00E3D6  C167  FFDF         	movff	_os+3,indf2	;volatile
 41817                           
 41818                           ; BSR set to: 0
 41819                           ;api.c: 190: outBuffer[10] = os.button1;
 41820  00E3DA  EE20 F00A          	lfsr	2,10
 41821  00E3DE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41822  00E3E0  26D9               	addwf	fsr2l,f,c
 41823  00E3E2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41824  00E3E4  22DA               	addwfc	fsr2h,f,c
 41825  00E3E6  C168  FFDF         	movff	_os+4,indf2	;volatile
 41826                           
 41827                           ; BSR set to: 0
 41828                           ;api.c: 191: outBuffer[11] = os.encoder2Count;
 41829  00E3EA  EE20 F00B          	lfsr	2,11
 41830  00E3EE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41831  00E3F0  26D9               	addwf	fsr2l,f,c
 41832  00E3F2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41833  00E3F4  22DA               	addwfc	fsr2h,f,c
 41834  00E3F6  C169  FFDF         	movff	_os+5,indf2	;volatile
 41835                           
 41836                           ; BSR set to: 0
 41837                           ;api.c: 192: outBuffer[12] = os.button2;
 41838  00E3FA  EE20 F00C          	lfsr	2,12
 41839  00E3FE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41840  00E400  26D9               	addwf	fsr2l,f,c
 41841  00E402  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41842  00E404  22DA               	addwfc	fsr2h,f,c
 41843  00E406  C16A  FFDF         	movff	_os+6,indf2	;volatile
 41844                           
 41845                           ; BSR set to: 0
 41846                           ;api.c: 193: memcpy(&outBuffer[13], &os.current_position_in_steps, 4);
 41847  00E40A  0E0D               	movlw	13
 41848  00E40C  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41849  00E40E  6F60               	movwf	memcpy@d1& (0+255),b
 41850  00E410  0E00               	movlw	0
 41851  00E412  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41852  00E414  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 41853  00E416  0E6B               	movlw	low (_os+7)
 41854  00E418  6F62               	movwf	memcpy@s1& (0+255),b
 41855  00E41A  0E01               	movlw	high (_os+7)
 41856  00E41C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 41857  00E41E  0E00               	movlw	0
 41858  00E420  6F65               	movwf	(memcpy@n+1)& (0+255),b
 41859  00E422  0E04               	movlw	4
 41860  00E424  6F64               	movwf	memcpy@n& (0+255),b
 41861  00E426  EC93  F0A7         	call	_memcpy	;wreg free
 41862                           
 41863                           ;api.c: 198: memcpy(&outBuffer[17], &os.current_position_in_degrees, 4);
 41864  00E42A  0E11               	movlw	17
 41865  00E42C  0100               	movlb	0	; () banked
 41866  00E42E  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41867  00E430  6F60               	movwf	memcpy@d1& (0+255),b
 41868  00E432  0E00               	movlw	0
 41869  00E434  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41870  00E436  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 41871  00E438  0E71               	movlw	low (_os+13)
 41872  00E43A  6F62               	movwf	memcpy@s1& (0+255),b
 41873  00E43C  0E01               	movlw	high (_os+13)
 41874  00E43E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 41875  00E440  0E00               	movlw	0
 41876  00E442  6F65               	movwf	(memcpy@n+1)& (0+255),b
 41877  00E444  0E04               	movlw	4
 41878  00E446  6F64               	movwf	memcpy@n& (0+255),b
 41879  00E448  EC93  F0A7         	call	_memcpy	;wreg free
 41880                           
 41881                           ;api.c: 203: outBuffer[21] = os.displayState;
 41882  00E44C  0100               	movlb	0	; () banked
 41883  00E44E  EE20 F015          	lfsr	2,21
 41884  00E452  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41885  00E454  26D9               	addwf	fsr2l,f,c
 41886  00E456  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41887  00E458  22DA               	addwfc	fsr2h,f,c
 41888  00E45A  C173  FFDF         	movff	_os+15,indf2	;volatile
 41889                           
 41890                           ; BSR set to: 0
 41891                           ;api.c: 204: outBuffer[22] = os.beep_count;
 41892  00E45E  EE20 F016          	lfsr	2,22
 41893  00E462  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41894  00E464  26D9               	addwf	fsr2l,f,c
 41895  00E466  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41896  00E468  22DA               	addwfc	fsr2h,f,c
 41897  00E46A  C18B  FFDF         	movff	_os+39,indf2	;volatile
 41898                           
 41899                           ; BSR set to: 0
 41900                           ;api.c: 205: outBuffer[23] = ((unsigned char)((os.temperature[TEMPERATURE_SOURCE_INTERNA
      +                          L])&0xFF));
 41901  00E46E  EE20 F017          	lfsr	2,23
 41902  00E472  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41903  00E474  26D9               	addwf	fsr2l,f,c
 41904  00E476  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41905  00E478  22DA               	addwfc	fsr2h,f,c
 41906  00E47A  C18C  FFDF         	movff	_os+40,indf2	;volatile
 41907                           
 41908                           ; BSR set to: 0
 41909                           ;api.c: 206: outBuffer[24] = ((unsigned char)(((os.temperature[TEMPERATURE_SOURCE_INTERN
      +                          AL])>>8)&0xFF));
 41910  00E47E  EE20 F018          	lfsr	2,24
 41911  00E482  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41912  00E484  26D9               	addwf	fsr2l,f,c
 41913  00E486  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41914  00E488  22DA               	addwfc	fsr2h,f,c
 41915  00E48A  0101               	movlb	1	; () banked
 41916  00E48C  518D               	movf	(_os+41)& (0+255),w,b	;volatile
 41917  00E48E  6EDF               	movwf	indf2,c
 41918                           
 41919                           ; BSR set to: 1
 41920                           ;api.c: 207: outBuffer[25] = ((unsigned char)((os.temperature[TEMPERATURE_SOURCE_EXTERNA
      +                          L])&0xFF));
 41921  00E490  0100               	movlb	0	; () banked
 41922  00E492  EE20 F019          	lfsr	2,25
 41923  00E496  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41924  00E498  26D9               	addwf	fsr2l,f,c
 41925  00E49A  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41926  00E49C  22DA               	addwfc	fsr2h,f,c
 41927  00E49E  C18E  FFDF         	movff	_os+42,indf2	;volatile
 41928                           
 41929                           ; BSR set to: 0
 41930                           ;api.c: 208: outBuffer[26] = ((unsigned char)(((os.temperature[TEMPERATURE_SOURCE_EXTERN
      +                          AL])>>8)&0xFF));
 41931  00E4A2  EE20 F01A          	lfsr	2,26
 41932  00E4A6  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41933  00E4A8  26D9               	addwf	fsr2l,f,c
 41934  00E4AA  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41935  00E4AC  22DA               	addwfc	fsr2h,f,c
 41936  00E4AE  0101               	movlb	1	; () banked
 41937  00E4B0  518F               	movf	(_os+43)& (0+255),w,b	;volatile
 41938  00E4B2  6EDF               	movwf	indf2,c
 41939                           
 41940                           ; BSR set to: 1
 41941                           ;api.c: 209: outBuffer[27] = os.fan_on;
 41942  00E4B4  0100               	movlb	0	; () banked
 41943  00E4B6  EE20 F01B          	lfsr	2,27
 41944  00E4BA  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41945  00E4BC  26D9               	addwf	fsr2l,f,c
 41946  00E4BE  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41947  00E4C0  22DA               	addwfc	fsr2h,f,c
 41948  00E4C2  C193  FFDF         	movff	_os+47,indf2	;volatile
 41949                           
 41950                           ; BSR set to: 0
 41951                           ;api.c: 210: outBuffer[28] = os.brake_on;
 41952  00E4C6  EE20 F01C          	lfsr	2,28
 41953  00E4CA  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41954  00E4CC  26D9               	addwf	fsr2l,f,c
 41955  00E4CE  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41956  00E4D0  22DA               	addwfc	fsr2h,f,c
 41957  00E4D2  C194  FFDF         	movff	_os+48,indf2	;volatile
 41958                           
 41959                           ; BSR set to: 0
 41960                           ;api.c: 211: outBuffer[29] = os.busy;
 41961  00E4D6  EE20 F01D          	lfsr	2,29
 41962  00E4DA  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41963  00E4DC  26D9               	addwf	fsr2l,f,c
 41964  00E4DE  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41965  00E4E0  22DA               	addwfc	fsr2h,f,c
 41966  00E4E2  C174  FFDF         	movff	_os+16,indf2	;volatile
 41967                           
 41968                           ; BSR set to: 0
 41969                           ;api.c: 213: outBuffer[30] = ((unsigned char)((os.manual_speed)&0xFF));
 41970  00E4E6  EE20 F01E          	lfsr	2,30
 41971  00E4EA  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41972  00E4EC  26D9               	addwf	fsr2l,f,c
 41973  00E4EE  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41974  00E4F0  22DA               	addwfc	fsr2h,f,c
 41975  00E4F2  C188  FFDF         	movff	_os+36,indf2	;volatile
 41976                           
 41977                           ; BSR set to: 0
 41978                           ;api.c: 214: outBuffer[31] = ((unsigned char)(((os.manual_speed)>>8)&0xFF));
 41979  00E4F6  EE20 F01F          	lfsr	2,31
 41980  00E4FA  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41981  00E4FC  26D9               	addwf	fsr2l,f,c
 41982  00E4FE  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41983  00E500  22DA               	addwfc	fsr2h,f,c
 41984  00E502  0101               	movlb	1	; () banked
 41985  00E504  5189               	movf	(_os+37)& (0+255),w,b	;volatile
 41986  00E506  6EDF               	movwf	indf2,c
 41987                           
 41988                           ; BSR set to: 1
 41989                           ;api.c: 215: outBuffer[32] = ((unsigned char)((os.absolute_position)&0xFF));
 41990  00E508  0100               	movlb	0	; () banked
 41991  00E50A  EE20 F020          	lfsr	2,32
 41992  00E50E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41993  00E510  26D9               	addwf	fsr2l,f,c
 41994  00E512  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41995  00E514  22DA               	addwfc	fsr2h,f,c
 41996  00E516  C16F  FFDF         	movff	_os+11,indf2	;volatile
 41997                           
 41998                           ; BSR set to: 0
 41999                           ;api.c: 216: outBuffer[33] = ((unsigned char)(((os.absolute_position)>>8)&0xFF));
 42000  00E51A  EE20 F021          	lfsr	2,33
 42001  00E51E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 42002  00E520  26D9               	addwf	fsr2l,f,c
 42003  00E522  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 42004  00E524  22DA               	addwfc	fsr2h,f,c
 42005  00E526  0101               	movlb	1	; () banked
 42006  00E528  5170               	movf	(_os+12)& (0+255),w,b	;volatile
 42007  00E52A  6EDF               	movwf	indf2,c
 42008                           
 42009                           ; BSR set to: 1
 42010                           ;api.c: 218: outBuffer[34] = config.position_display_180;
 42011  00E52C  0100               	movlb	0	; () banked
 42012  00E52E  EE20 F022          	lfsr	2,34
 42013  00E532  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 42014  00E534  26D9               	addwf	fsr2l,f,c
 42015  00E536  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 42016  00E538  22DA               	addwfc	fsr2h,f,c
 42017  00E53A  C1BD  FFDF         	movff	_config+40,indf2
 42018                           
 42019                           ; BSR set to: 0
 42020                           ;api.c: 232: memcpy(&outBuffer[42], &config, 22);
 42021  00E53E  0E2A               	movlw	42
 42022  00E540  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 42023  00E542  6F60               	movwf	memcpy@d1& (0+255),b
 42024  00E544  0E00               	movlw	0
 42025  00E546  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 42026  00E548  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 42027  00E54A  0E95               	movlw	low _config
 42028  00E54C  6F62               	movwf	memcpy@s1& (0+255),b
 42029  00E54E  0E01               	movlw	high _config
 42030  00E550  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 42031  00E552  0E00               	movlw	0
 42032  00E554  6F65               	movwf	(memcpy@n+1)& (0+255),b
 42033  00E556  0E16               	movlw	22
 42034  00E558  6F64               	movwf	memcpy@n& (0+255),b
 42035  00E55A  EC93  F0A7         	call	_memcpy	;wreg free
 42036  00E55E  0012               	return		;funcret
 42037  00E560                     __end_of__fill_buffer_get_status:
 42038                           	opt stack 0
 42039                           tosu	equ	0xFFF
 42040                           tosh	equ	0xFFE
 42041                           tosl	equ	0xFFD
 42042                           pclath	equ	0xFFA
 42043                           tblptru	equ	0xFF8
 42044                           tblptrh	equ	0xFF7
 42045                           tblptrl	equ	0xFF6
 42046                           tablat	equ	0xFF5
 42047                           prodh	equ	0xFF4
 42048                           prodl	equ	0xFF3
 42049                           intcon	equ	0xFF2
 42050                           postinc0	equ	0xFEE
 42051                           wreg	equ	0xFE8
 42052                           indf1	equ	0xFE7
 42053                           postinc1	equ	0xFE6
 42054                           postdec1	equ	0xFE5
 42055                           plusw1	equ	0xFE3
 42056                           fsr1h	equ	0xFE2
 42057                           fsr1l	equ	0xFE1
 42058                           indf2	equ	0xFDF
 42059                           postinc2	equ	0xFDE
 42060                           postdec2	equ	0xFDD
 42061                           plusw2	equ	0xFDB
 42062                           fsr2h	equ	0xFDA
 42063                           fsr2l	equ	0xFD9
 42064                           status	equ	0xFD8
 42065                           
 42066 ;; *************** function _memcpy *****************
 42067 ;; Defined at:
 42068 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 42069 ;; Parameters:    Size  Location     Type
 42070 ;;  d1              2    0[BANK0 ] PTR void 
 42071 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), i2c_eeprom_save_position@b
      +uffer(11), 
 42072 ;;		 -> os.divide_position(2), os.division(2), os.absolute_position(2), os.current_position_in_steps(4), 
 42073 ;;		 -> ToSendDataBuffer(64), os(49), msd_buffer(512), SetupPkt(8), 
 42074 ;;  s1              2    2[BANK0 ] PTR const void 
 42075 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 42076 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 42077 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 42078 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 42079 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main_simplified(80), dc_main(80), 
 42080 ;;		 -> dc_startup(80), i2c_eeprom_recover_position@buffer(11), config(42), os.current_position_in_degrees(2), 
 42081 ;;		 -> os.current_position_in_steps(4), ReceivedDataBuffer(64), os(49), inq_resp(36), 
 42082 ;;		 -> RAM(3759), 
 42083 ;;  n               2    4[BANK0 ] unsigned int 
 42084 ;; Auto vars:     Size  Location     Type
 42085 ;;  s               2    8[BANK0 ] PTR const unsigned char 
 42086 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 42087 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 42088 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 42089 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 42090 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main_simplified(80), dc_main(80), 
 42091 ;;		 -> dc_startup(80), i2c_eeprom_recover_position@buffer(11), config(42), os.current_position_in_degrees(2), 
 42092 ;;		 -> os.current_position_in_steps(4), ReceivedDataBuffer(64), os(49), inq_resp(36), 
 42093 ;;		 -> RAM(3759), 
 42094 ;;  d               2    6[BANK0 ] PTR unsigned char 
 42095 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), i2c_eeprom_save_position@b
      +uffer(11), 
 42096 ;;		 -> os.divide_position(2), os.division(2), os.absolute_position(2), os.current_position_in_steps(4), 
 42097 ;;		 -> ToSendDataBuffer(64), os(49), msd_buffer(512), SetupPkt(8), 
 42098 ;;  tmp             1   10[BANK0 ] unsigned char 
 42099 ;; Return value:  Size  Location     Type
 42100 ;;                  2    0[BANK0 ] PTR void 
 42101 ;; Registers used:
 42102 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 42103 ;; Tracked objects:
 42104 ;;		On entry : 0/0
 42105 ;;		On exit  : 0/0
 42106 ;;		Unchanged: 0/0
 42107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42108 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42109 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42111 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42112 ;;Total ram usage:       11 bytes
 42113 ;; Hardware stack levels used:    1
 42114 ;; Hardware stack levels required when called:   10
 42115 ;; This function calls:
 42116 ;;		Nothing
 42117 ;; This function is called by:
 42118 ;;		_MSDProcessCommandMediaPresent
 42119 ;;		_i2c_eeprom_recover_position
 42120 ;;		__display_start
 42121 ;;		_display_prepare
 42122 ;;		__flash_set_page_size
 42123 ;;		_fat_create_file
 42124 ;;		_api_prepare
 42125 ;;		__fill_buffer_get_status
 42126 ;; This function uses a non-reentrant model
 42127 ;;
 42128                           
 42129                           	psect	text166
 42130  014F26                     __ptext166:
 42131                           	opt stack 0
 42132  014F26                     _memcpy:
 42133                           	opt stack 18
 42134                           
 42135                           ;incstack = 0
 42136  014F26  C062  F068         	movff	memcpy@s1,memcpy@s
 42137  014F2A  C063  F069         	movff	memcpy@s1+1,memcpy@s+1
 42138  014F2E  C060  F066         	movff	memcpy@d1,memcpy@d
 42139  014F32  C061  F067         	movff	memcpy@d1+1,memcpy@d+1
 42140  014F36  D01D               	goto	l3897
 42141  014F38                     l13407:
 42142  014F38  C068  FFF6         	movff	memcpy@s,tblptrl
 42143  014F3C  C069  FFF7         	movff	memcpy@s+1,tblptrh
 42144  014F40  0E00               	movlw	low (__mediumconst shr (0+16))
 42145  014F42  6EF8               	movwf	tblptru,c
 42146  014F44  0E0E               	movlw	(high __ramtop+-1)
 42147  014F46  64F7               	cpfsgt	tblptrh,c
 42148  014F48  D003               	bra	u11277
 42149  014F4A  0008               	tblrd		*
 42150  014F4C  50F5               	movf	tablat,w,c
 42151  014F4E  D005               	bra	u11270
 42152  014F50                     u11277:
 42153  014F50  CFF6 FFE9          	movff	tblptrl,fsr0l
 42154  014F54  CFF7 FFEA          	movff	tblptrh,fsr0h
 42155  014F58  50EF               	movf	indf0,w,c
 42156  014F5A                     u11270:
 42157  014F5A  0100               	movlb	0	; () banked
 42158  014F5C  6F6A               	movwf	memcpy@tmp& (0+255),b
 42159                           
 42160                           ; BSR set to: 0
 42161  014F5E  4B68               	infsnz	memcpy@s& (0+255),f,b
 42162  014F60  2B69               	incf	(memcpy@s+1)& (0+255),f,b
 42163                           
 42164                           ; BSR set to: 0
 42165  014F62  C066  FFD9         	movff	memcpy@d,fsr2l
 42166  014F66  C067  FFDA         	movff	memcpy@d+1,fsr2h
 42167  014F6A  C06A  FFDF         	movff	memcpy@tmp,indf2
 42168                           
 42169                           ; BSR set to: 0
 42170  014F6E  4B66               	infsnz	memcpy@d& (0+255),f,b
 42171  014F70  2B67               	incf	(memcpy@d+1)& (0+255),f,b
 42172  014F72                     l3897:
 42173                           
 42174                           ; BSR set to: 0
 42175  014F72  0100               	movlb	0	; () banked
 42176  014F74  0764               	decf	memcpy@n& (0+255),f,b
 42177  014F76  A0D8               	btfss	status,0,c
 42178  014F78  0765               	decf	(memcpy@n+1)& (0+255),f,b
 42179  014F7A  2964               	incf	memcpy@n& (0+255),w,b
 42180  014F7C  E1DD               	bnz	l13407
 42181  014F7E  2965               	incf	(memcpy@n+1)& (0+255),w,b
 42182  014F80  B4D8               	btfsc	status,2,c
 42183  014F82  0012               	return	
 42184  014F84  D7D9               	goto	l3898
 42185  014F86                     __end_of_memcpy:
 42186                           	opt stack 0
 42187                           tosu	equ	0xFFF
 42188                           tosh	equ	0xFFE
 42189                           tosl	equ	0xFFD
 42190                           pclath	equ	0xFFA
 42191                           tblptru	equ	0xFF8
 42192                           tblptrh	equ	0xFF7
 42193                           tblptrl	equ	0xFF6
 42194                           tablat	equ	0xFF5
 42195                           prodh	equ	0xFF4
 42196                           prodl	equ	0xFF3
 42197                           intcon	equ	0xFF2
 42198                           indf0	equ	0xFEF
 42199                           postinc0	equ	0xFEE
 42200                           fsr0h	equ	0xFEA
 42201                           fsr0l	equ	0xFE9
 42202                           wreg	equ	0xFE8
 42203                           indf1	equ	0xFE7
 42204                           postinc1	equ	0xFE6
 42205                           postdec1	equ	0xFE5
 42206                           plusw1	equ	0xFE3
 42207                           fsr1h	equ	0xFE2
 42208                           fsr1l	equ	0xFE1
 42209                           indf2	equ	0xFDF
 42210                           postinc2	equ	0xFDE
 42211                           postdec2	equ	0xFDD
 42212                           plusw2	equ	0xFDB
 42213                           fsr2h	equ	0xFDA
 42214                           fsr2l	equ	0xFD9
 42215                           status	equ	0xFD8
 42216                           
 42217 ;; *************** function __fill_buffer_get_mode_details *****************
 42218 ;; Defined at:
 42219 ;;		line 277 in file "api.c"
 42220 ;; Parameters:    Size  Location     Type
 42221 ;;  outBuffer       2    0[BANK0 ] PTR unsigned char 
 42222 ;;		 -> ToSendDataBuffer(64), 
 42223 ;; Auto vars:     Size  Location     Type
 42224 ;;		None
 42225 ;; Return value:  Size  Location     Type
 42226 ;;                  1    wreg      void 
 42227 ;; Registers used:
 42228 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42229 ;; Tracked objects:
 42230 ;;		On entry : 0/0
 42231 ;;		On exit  : 0/0
 42232 ;;		Unchanged: 0/0
 42233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42234 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42236 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42237 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42238 ;;Total ram usage:        4 bytes
 42239 ;; Hardware stack levels used:    1
 42240 ;; Hardware stack levels required when called:   10
 42241 ;; This function calls:
 42242 ;;		Nothing
 42243 ;; This function is called by:
 42244 ;;		_api_prepare
 42245 ;; This function uses a non-reentrant model
 42246 ;;
 42247                           
 42248                           	psect	text167
 42249  00F284                     __ptext167:
 42250                           	opt stack 0
 42251  00F284                     __fill_buffer_get_mode_details:
 42252                           	opt stack 18
 42253                           
 42254                           ;api.c: 280: outBuffer[0] = DATAREQUEST_GET_MODE_DETAILS;
 42255                           
 42256                           ; BSR set to: 0
 42257                           ;incstack = 0
 42258  00F284  C060  FFD9         	movff	__fill_buffer_get_mode_details@outBuffer,fsr2l
 42259  00F288  C061  FFDA         	movff	__fill_buffer_get_mode_details@outBuffer+1,fsr2h
 42260  00F28C  0E13               	movlw	19
 42261  00F28E  6EDF               	movwf	indf2,c
 42262                           
 42263                           ;api.c: 283: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 42264  00F290  0100               	movlb	0	; () banked
 42265  00F292  EE20 F001          	lfsr	2,1
 42266  00F296  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 42267  00F298  26D9               	addwf	fsr2l,f,c
 42268  00F29A  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 42269  00F29C  22DA               	addwfc	fsr2h,f,c
 42270  00F29E  0EBC               	movlw	188
 42271  00F2A0  6EDF               	movwf	indf2,c
 42272                           
 42273                           ; BSR set to: 0
 42274                           ;api.c: 284: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 42275  00F2A2  EE20 F002          	lfsr	2,2
 42276  00F2A6  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 42277  00F2A8  26D9               	addwf	fsr2l,f,c
 42278  00F2AA  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 42279  00F2AC  22DA               	addwfc	fsr2h,f,c
 42280  00F2AE  0E26               	movlw	38
 42281  00F2B0  6EDF               	movwf	indf2,c
 42282                           
 42283                           ; BSR set to: 0
 42284                           ;api.c: 287: outBuffer[3] = os.displayState;
 42285  00F2B2  EE20 F003          	lfsr	2,3
 42286  00F2B6  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 42287  00F2B8  26D9               	addwf	fsr2l,f,c
 42288  00F2BA  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 42289  00F2BC  22DA               	addwfc	fsr2h,f,c
 42290  00F2BE  C173  FFDF         	movff	_os+15,indf2	;volatile
 42291                           
 42292                           ;api.c: 289: switch(os.displayState & 0x0F)
 42293  00F2C2  D090               	goto	l2323
 42294  00F2C4                     
 42295                           ; BSR set to: 0
 42296                           ;api.c: 295: case DISPLAY_STATE_SETUP2:;api.c: 296: outBuffer[4] = os.setup_step_size;
 42297                           
 42298                           ; BSR set to: 0
 42299                           
 42300                           ; BSR set to: 0
 42301  00F2C4  EE20 F004          	lfsr	2,4
 42302  00F2C8  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 42303  00F2CA  26D9               	addwf	fsr2l,f,c
 42304  00F2CC  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 42305  00F2CE  22DA               	addwfc	fsr2h,f,c
 42306  00F2D0  C175  FFDF         	movff	_os+17,indf2	;volatile
 42307                           
 42308                           ;api.c: 297: break;
 42309  00F2D4  0012               	return	
 42310  00F2D6                     
 42311                           ; BSR set to: 0
 42312                           ;api.c: 300: case DISPLAY_STATE_DIVIDE2:;api.c: 302: outBuffer[4] = os.divide_step_size;
 42313                           
 42314                           ; BSR set to: 0
 42315                           
 42316                           ; BSR set to: 0
 42317  00F2D6  EE20 F004          	lfsr	2,4
 42318  00F2DA  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 42319  00F2DC  26D9               	addwf	fsr2l,f,c
 42320  00F2DE  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 42321  00F2E0  22DA               	addwfc	fsr2h,f,c
 42322  00F2E2  C17A  FFDF         	movff	_os+22,indf2	;volatile
 42323                           
 42324                           ;api.c: 303: outBuffer[5] = ((unsigned char)(((os.division)>>8)&0xFF));
 42325  00F2E6  EE20 F005          	lfsr	2,5
 42326  00F2EA  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 42327  00F2EC  26D9               	addwf	fsr2l,f,c
 42328  00F2EE  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 42329  00F2F0  22DA               	addwfc	fsr2h,f,c
 42330  00F2F2  0101               	movlb	1	; () banked
 42331  00F2F4  5179               	movf	(_os+21)& (0+255),w,b	;volatile
 42332  00F2F6  6EDF               	movwf	indf2,c
 42333                           
 42334                           ;api.c: 304: outBuffer[6] = ((unsigned char)((os.division)&0xFF));
 42335  00F2F8  0100               	movlb	0	; () banked
 42336  00F2FA  EE20 F006          	lfsr	2,6
 42337  00F2FE  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 42338  00F300  26D9               	addwf	fsr2l,f,c
 42339  00F302  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 42340  00F304  22DA               	addwfc	fsr2h,f,c
 42341  00F306  C178  FFDF         	movff	_os+20,indf2	;volatile
 42342                           
 42343                           ;api.c: 305: outBuffer[7] = ((unsigned char)(((os.divide_jump_size)>>8)&0xFF));
 42344  00F30A  EE20 F007          	lfsr	2,7
 42345  00F30E  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 42346  00F310  26D9               	addwf	fsr2l,f,c
 42347  00F312  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 42348  00F314  22DA               	addwfc	fsr2h,f,c
 42349  00F316  0101               	movlb	1	; () banked
 42350  00F318  517E               	movf	(_os+26)& (0+255),w,b	;volatile
 42351  00F31A  6EDF               	movwf	indf2,c
 42352                           
 42353                           ;api.c: 306: outBuffer[8] = ((unsigned char)((os.divide_jump_size)&0xFF));
 42354  00F31C  0100               	movlb	0	; () banked
 42355  00F31E  EE20 F008          	lfsr	2,8
 42356  00F322  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 42357  00F324  26D9               	addwf	fsr2l,f,c
 42358  00F326  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 42359  00F328  22DA               	addwfc	fsr2h,f,c
 42360  00F32A  C17D  FFDF         	movff	_os+25,indf2	;volatile
 42361                           
 42362                           ;api.c: 307: outBuffer[9] = ((unsigned char)(((os.divide_position)>>8)&0xFF));
 42363  00F32E  EE20 F009          	lfsr	2,9
 42364  00F332  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 42365  00F334  26D9               	addwf	fsr2l,f,c
 42366  00F336  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 42367  00F338  22DA               	addwfc	fsr2h,f,c
 42368  00F33A  0101               	movlb	1	; () banked
 42369  00F33C  517C               	movf	(_os+24)& (0+255),w,b	;volatile
 42370  00F33E  6EDF               	movwf	indf2,c
 42371                           
 42372                           ;api.c: 308: outBuffer[10] = ((unsigned char)((os.divide_position)&0xFF));
 42373  00F340  0100               	movlb	0	; () banked
 42374  00F342  EE20 F00A          	lfsr	2,10
 42375  00F346  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 42376  00F348  26D9               	addwf	fsr2l,f,c
 42377  00F34A  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 42378  00F34C  22DA               	addwfc	fsr2h,f,c
 42379  00F34E  C17B  FFDF         	movff	_os+23,indf2	;volatile
 42380                           
 42381                           ;api.c: 309: break;
 42382  00F352  0012               	return	
 42383  00F354                     
 42384                           ; BSR set to: 0
 42385                           ;api.c: 312: case DISPLAY_STATE_ARC2:;api.c: 313: outBuffer[4] = ((unsigned char)(((os.a
      +                          rc_step_size)>>8)&0xFF));
 42386                           
 42387                           ; BSR set to: 0
 42388                           
 42389                           ; BSR set to: 0
 42390  00F354  EE20 F004          	lfsr	2,4
 42391  00F358  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 42392  00F35A  26D9               	addwf	fsr2l,f,c
 42393  00F35C  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 42394  00F35E  22DA               	addwfc	fsr2h,f,c
 42395  00F360  0101               	movlb	1	; () banked
 42396  00F362  5180               	movf	(_os+28)& (0+255),w,b	;volatile
 42397  00F364  6EDF               	movwf	indf2,c
 42398                           
 42399                           ;api.c: 314: outBuffer[5] = ((unsigned char)((os.arc_step_size)&0xFF));
 42400  00F366  0100               	movlb	0	; () banked
 42401  00F368  EE20 F005          	lfsr	2,5
 42402  00F36C  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 42403  00F36E  26D9               	addwf	fsr2l,f,c
 42404  00F370  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 42405  00F372  22DA               	addwfc	fsr2h,f,c
 42406  00F374  C17F  FFDF         	movff	_os+27,indf2	;volatile
 42407                           
 42408                           ;api.c: 315: outBuffer[6] = os.arc_direction;
 42409  00F378  EE20 F006          	lfsr	2,6
 42410  00F37C  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 42411  00F37E  26D9               	addwf	fsr2l,f,c
 42412  00F380  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 42413  00F382  22DA               	addwfc	fsr2h,f,c
 42414  00F384  C187  FFDF         	movff	_os+35,indf2	;volatile
 42415                           
 42416                           ;api.c: 316: outBuffer[7] = ((unsigned char)(((os.arc_speed)>>8)&0xFF));
 42417  00F388  EE20 F007          	lfsr	2,7
 42418  00F38C  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 42419  00F38E  26D9               	addwf	fsr2l,f,c
 42420  00F390  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 42421  00F392  22DA               	addwfc	fsr2h,f,c
 42422  00F394  0101               	movlb	1	; () banked
 42423  00F396  5186               	movf	(_os+34)& (0+255),w,b	;volatile
 42424  00F398  6EDF               	movwf	indf2,c
 42425                           
 42426                           ;api.c: 317: outBuffer[8] = ((unsigned char)((os.arc_speed)&0xFF));
 42427  00F39A  0100               	movlb	0	; () banked
 42428  00F39C  EE20 F008          	lfsr	2,8
 42429  00F3A0  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 42430  00F3A2  26D9               	addwf	fsr2l,f,c
 42431  00F3A4  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 42432  00F3A6  22DA               	addwfc	fsr2h,f,c
 42433  00F3A8  C185  FFDF         	movff	_os+33,indf2	;volatile
 42434                           
 42435                           ; BSR set to: 0
 42436                           ;api.c: 321: break;
 42437                           
 42438                           ;api.c: 320: case DISPLAY_STATE_ZERO:
 42439                           
 42440                           ;api.c: 318: break;
 42441  00F3AC  0012               	return	
 42442  00F3AE                     
 42443                           ; BSR set to: 0
 42444                           ;api.c: 324: outBuffer[4] = os.manual_direction;
 42445                           
 42446                           ; BSR set to: 0
 42447  00F3AE  EE20 F004          	lfsr	2,4
 42448  00F3B2  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 42449  00F3B4  26D9               	addwf	fsr2l,f,c
 42450  00F3B6  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 42451  00F3B8  22DA               	addwfc	fsr2h,f,c
 42452  00F3BA  C18A  FFDF         	movff	_os+38,indf2	;volatile
 42453                           
 42454                           ;api.c: 325: outBuffer[5] = ((unsigned char)(((os.manual_speed)>>8)&0xFF));
 42455  00F3BE  EE20 F005          	lfsr	2,5
 42456  00F3C2  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 42457  00F3C4  26D9               	addwf	fsr2l,f,c
 42458  00F3C6  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 42459  00F3C8  22DA               	addwfc	fsr2h,f,c
 42460  00F3CA  0101               	movlb	1	; () banked
 42461  00F3CC  5189               	movf	(_os+37)& (0+255),w,b	;volatile
 42462  00F3CE  6EDF               	movwf	indf2,c
 42463                           
 42464                           ;api.c: 326: outBuffer[6] = ((unsigned char)((os.manual_speed)&0xFF));
 42465  00F3D0  0100               	movlb	0	; () banked
 42466  00F3D2  EE20 F006          	lfsr	2,6
 42467  00F3D6  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 42468  00F3D8  26D9               	addwf	fsr2l,f,c
 42469  00F3DA  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 42470  00F3DC  22DA               	addwfc	fsr2h,f,c
 42471  00F3DE  C188  FFDF         	movff	_os+36,indf2	;volatile
 42472                           
 42473                           ; BSR set to: 0
 42474                           ;api.c: 328: }
 42475                           
 42476                           ;api.c: 327: break;
 42477  00F3E2  0012               	return	
 42478  00F3E4                     l2323:
 42479                           
 42480                           ; BSR set to: 0
 42481                           
 42482                           ; BSR set to: 0
 42483  00F3E4  0101               	movlb	1	; () banked
 42484  00F3E6  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 42485  00F3E8  0B0F               	andlw	15
 42486  00F3EA  0100               	movlb	0	; () banked
 42487  00F3EC  6F62               	movwf	??__fill_buffer_get_mode_details& (0+255),b
 42488  00F3EE  6B63               	clrf	(??__fill_buffer_get_mode_details+1)& (0+255),b
 42489                           
 42490                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 42491                           ; Switch size 1, requested type "space"
 42492                           ; Number of cases is 1, Range of values is 0 to 0
 42493                           ; switch strategies available:
 42494                           ; Name         Instructions Cycles
 42495                           ; simple_byte            4     3 (average)
 42496                           ;	Chosen strategy is simple_byte
 42497  00F3F0  5163               	movf	(??__fill_buffer_get_mode_details+1)& (0+255),w,b
 42498  00F3F2  0A00               	xorlw	0	; case 0
 42499  00F3F4  A4D8               	btfss	status,2,c
 42500  00F3F6  0012               	return	
 42501                           
 42502                           ; BSR set to: 0
 42503                           ; Switch size 1, requested type "space"
 42504                           ; Number of cases is 9, Range of values is 0 to 128
 42505                           ; switch strategies available:
 42506                           ; Name         Instructions Cycles
 42507                           ; simple_byte           28    15 (average)
 42508                           ;	Chosen strategy is simple_byte
 42509  00F3F8  5162               	movf	??__fill_buffer_get_mode_details& (0+255),w,b
 42510  00F3FA  0A00               	xorlw	0	; case 0
 42511  00F3FC  B4D8               	btfsc	status,2,c
 42512  00F3FE  0012               	return	
 42513  00F400  0A10               	xorlw	16	; case 16
 42514  00F402  B4D8               	btfsc	status,2,c
 42515  00F404  D75F               	goto	l2326
 42516  00F406  0A30               	xorlw	48	; case 32
 42517  00F408  B4D8               	btfsc	status,2,c
 42518  00F40A  D75C               	goto	l2326
 42519  00F40C  0A10               	xorlw	16	; case 48
 42520  00F40E  B4D8               	btfsc	status,2,c
 42521  00F410  D762               	goto	l2328
 42522  00F412  0A70               	xorlw	112	; case 64
 42523  00F414  B4D8               	btfsc	status,2,c
 42524  00F416  D75F               	goto	l2328
 42525  00F418  0A10               	xorlw	16	; case 80
 42526  00F41A  B4D8               	btfsc	status,2,c
 42527  00F41C  D79B               	goto	l2330
 42528  00F41E  0A30               	xorlw	48	; case 96
 42529  00F420  B4D8               	btfsc	status,2,c
 42530  00F422  D798               	goto	l2330
 42531  00F424  0A10               	xorlw	16	; case 112
 42532  00F426  B4D8               	btfsc	status,2,c
 42533  00F428  0012               	return	
 42534  00F42A  0AF0               	xorlw	240	; case 128
 42535  00F42C  A4D8               	btfss	status,2,c
 42536  00F42E  0012               	return	
 42537  00F430  D7BE               	goto	l2333
 42538  00F432                     __end_of__fill_buffer_get_mode_details:
 42539                           	opt stack 0
 42540                           tosu	equ	0xFFF
 42541                           tosh	equ	0xFFE
 42542                           tosl	equ	0xFFD
 42543                           pclath	equ	0xFFA
 42544                           tblptru	equ	0xFF8
 42545                           tblptrh	equ	0xFF7
 42546                           tblptrl	equ	0xFF6
 42547                           tablat	equ	0xFF5
 42548                           prodh	equ	0xFF4
 42549                           prodl	equ	0xFF3
 42550                           intcon	equ	0xFF2
 42551                           indf0	equ	0xFEF
 42552                           postinc0	equ	0xFEE
 42553                           fsr0h	equ	0xFEA
 42554                           fsr0l	equ	0xFE9
 42555                           wreg	equ	0xFE8
 42556                           indf1	equ	0xFE7
 42557                           postinc1	equ	0xFE6
 42558                           postdec1	equ	0xFE5
 42559                           plusw1	equ	0xFE3
 42560                           fsr1h	equ	0xFE2
 42561                           fsr1l	equ	0xFE1
 42562                           indf2	equ	0xFDF
 42563                           postinc2	equ	0xFDE
 42564                           postdec2	equ	0xFDD
 42565                           plusw2	equ	0xFDB
 42566                           fsr2h	equ	0xFDA
 42567                           fsr2l	equ	0xFD9
 42568                           status	equ	0xFD8
 42569                           
 42570 ;; *************** function __fill_buffer_get_display *****************
 42571 ;; Defined at:
 42572 ;;		line 236 in file "api.c"
 42573 ;; Parameters:    Size  Location     Type
 42574 ;;  outBuffer       2    4[BANK0 ] PTR unsigned char 
 42575 ;;		 -> ToSendDataBuffer(64), 
 42576 ;;  secondHalf      1    6[BANK0 ] unsigned char 
 42577 ;; Auto vars:     Size  Location     Type
 42578 ;;  position        1   15[BANK0 ] unsigned char 
 42579 ;;  start_line      1   14[BANK0 ] unsigned char 
 42580 ;;  line            1   13[BANK0 ] unsigned char 
 42581 ;;  cntr            1   12[BANK0 ] unsigned char 
 42582 ;; Return value:  Size  Location     Type
 42583 ;;                  1    wreg      void 
 42584 ;; Registers used:
 42585 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 42586 ;; Tracked objects:
 42587 ;;		On entry : 0/0
 42588 ;;		On exit  : 0/0
 42589 ;;		Unchanged: 0/0
 42590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42591 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42592 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42593 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42594 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42595 ;;Total ram usage:       12 bytes
 42596 ;; Hardware stack levels used:    1
 42597 ;; Hardware stack levels required when called:   11
 42598 ;; This function calls:
 42599 ;;		_display_get_character
 42600 ;; This function is called by:
 42601 ;;		_api_prepare
 42602 ;; This function uses a non-reentrant model
 42603 ;;
 42604                           
 42605                           	psect	text168
 42606  013374                     __ptext168:
 42607                           	opt stack 0
 42608  013374                     __fill_buffer_get_display:
 42609                           	opt stack 17
 42610                           
 42611                           ;api.c: 238: uint8_t cntr;;api.c: 239: uint8_t line;;api.c: 240: uint8_t start_line;;api
      +                          .c: 241: uint8_t position;;api.c: 244: if(secondHalf)
 42612                           
 42613                           ; BSR set to: 0
 42614                           ;incstack = 0
 42615  013374  0100               	movlb	0	; () banked
 42616  013376  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 42617  013378  B4D8               	btfsc	status,2,c
 42618  01337A  D006               	goto	l2311
 42619                           
 42620                           ; BSR set to: 0
 42621                           ;api.c: 245: {;api.c: 246: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 42622  01337C  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 42623  013380  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 42624  013384  0E12               	movlw	18
 42625  013386  D005               	goto	L50
 42626  013388                     l2311:
 42627                           
 42628                           ; BSR set to: 0
 42629                           ;api.c: 248: else;api.c: 249: {;api.c: 250: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 42630                           
 42631                           ; BSR set to: 0
 42632  013388  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 42633  01338C  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 42634  013390  0E11               	movlw	17
 42635  013392                     L50:
 42636  013392  6EDF               	movwf	indf2,c
 42637                           
 42638                           ; BSR set to: 0
 42639                           ;api.c: 251: };api.c: 254: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 42640                           
 42641                           ; BSR set to: 0
 42642  013394  EE20 F001          	lfsr	2,1
 42643  013398  5164               	movf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 42644  01339A  26D9               	addwf	fsr2l,f,c
 42645  01339C  5165               	movf	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 42646  01339E  22DA               	addwfc	fsr2h,f,c
 42647  0133A0  0EBC               	movlw	188
 42648  0133A2  6EDF               	movwf	indf2,c
 42649                           
 42650                           ; BSR set to: 0
 42651                           ;api.c: 255: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 42652  0133A4  EE20 F002          	lfsr	2,2
 42653  0133A8  5164               	movf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 42654  0133AA  26D9               	addwf	fsr2l,f,c
 42655  0133AC  5165               	movf	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 42656  0133AE  22DA               	addwfc	fsr2h,f,c
 42657  0133B0  0E26               	movlw	38
 42658  0133B2  6EDF               	movwf	indf2,c
 42659                           
 42660                           ; BSR set to: 0
 42661                           ;api.c: 258: cntr = 3;
 42662  0133B4  0E03               	movlw	3
 42663  0133B6  6F6C               	movwf	__fill_buffer_get_display@cntr& (0+255),b
 42664                           
 42665                           ; BSR set to: 0
 42666                           ;api.c: 259: if(secondHalf)
 42667  0133B8  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 42668  0133BA  B4D8               	btfsc	status,2,c
 42669  0133BC  D002               	goto	l2313
 42670                           
 42671                           ; BSR set to: 0
 42672                           ;api.c: 260: {;api.c: 261: start_line = 2;
 42673  0133BE  0E02               	movlw	2
 42674  0133C0  D001               	goto	L51
 42675  0133C2                     l2313:
 42676                           
 42677                           ; BSR set to: 0
 42678                           ;api.c: 263: else;api.c: 264: {;api.c: 265: start_line = 0;
 42679                           
 42680                           ; BSR set to: 0
 42681  0133C2  0E00               	movlw	0
 42682  0133C4                     L51:
 42683  0133C4  6F6E               	movwf	__fill_buffer_get_display@start_line& (0+255),b
 42684                           
 42685                           ; BSR set to: 0
 42686                           ;api.c: 266: };api.c: 267: for(line=start_line; line<start_line+2; ++line)
 42687                           
 42688                           ; BSR set to: 0
 42689  0133C6  C06E  F06D         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 42690  0133CA  D01B               	goto	l2315
 42691  0133CC                     
 42692                           ; BSR set to: 0
 42693                           ;api.c: 268: {;api.c: 269: for(position=0; position<20; ++position)
 42694                           
 42695                           ; BSR set to: 0
 42696  0133CC  0E00               	movlw	0
 42697  0133CE  6F6F               	movwf	__fill_buffer_get_display@position& (0+255),b
 42698  0133D0                     l16959:
 42699                           
 42700                           ; BSR set to: 0
 42701  0133D0  0E13               	movlw	19
 42702  0133D2  656F               	cpfsgt	__fill_buffer_get_display@position& (0+255),b
 42703  0133D4  D001               	goto	l2317
 42704  0133D6  D014               	goto	u15890
 42705  0133D8                     l2317:
 42706                           
 42707                           ; BSR set to: 0
 42708                           ;api.c: 270: {;api.c: 271: outBuffer[cntr] = (uint8_t) display_get_character(line, posit
      +                          ion);
 42709                           
 42710                           ; BSR set to: 0
 42711  0133D8  C06F  F060         	movff	__fill_buffer_get_display@position,display_get_character@position
 42712  0133DC  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 42713  0133DE  ECBA  F0AF         	call	_display_get_character
 42714  0133E2  0100               	movlb	0	; () banked
 42715  0133E4  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 42716  0133E6  516C               	movf	__fill_buffer_get_display@cntr& (0+255),w,b
 42717  0133E8  0D01               	mullw	1
 42718  0133EA  50F3               	movf	prodl,w,c
 42719  0133EC  2564               	addwf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 42720  0133EE  6ED9               	movwf	fsr2l,c
 42721  0133F0  50F4               	movf	prodh,w,c
 42722  0133F2  2165               	addwfc	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 42723  0133F4  6EDA               	movwf	fsr2h,c
 42724  0133F6  C067  FFDF         	movff	??__fill_buffer_get_display,indf2
 42725                           
 42726                           ; BSR set to: 0
 42727                           ;api.c: 272: ++cntr;
 42728  0133FA  2B6C               	incf	__fill_buffer_get_display@cntr& (0+255),f,b
 42729                           
 42730                           ; BSR set to: 0
 42731  0133FC  2B6F               	incf	__fill_buffer_get_display@position& (0+255),f,b
 42732  0133FE  D7E8               	goto	l16959
 42733  013400                     u15890:
 42734                           
 42735                           ; BSR set to: 0
 42736                           
 42737                           ; BSR set to: 0
 42738  013400  2B6D               	incf	__fill_buffer_get_display@line& (0+255),f,b
 42739  013402                     l2315:
 42740                           
 42741                           ; BSR set to: 0
 42742                           
 42743                           ; BSR set to: 0
 42744  013402  516E               	movf	__fill_buffer_get_display@start_line& (0+255),w,b
 42745  013404  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 42746  013406  6B68               	clrf	(??__fill_buffer_get_display+1)& (0+255),b
 42747  013408  0E02               	movlw	2
 42748  01340A  2767               	addwf	??__fill_buffer_get_display& (0+255),f,b
 42749  01340C  0E00               	movlw	0
 42750  01340E  2368               	addwfc	(??__fill_buffer_get_display+1)& (0+255),f,b
 42751  013410  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 42752  013412  6F69               	movwf	(??__fill_buffer_get_display+2)& (0+255),b
 42753  013414  6B6A               	clrf	(??__fill_buffer_get_display+3)& (0+255),b
 42754  013416  5167               	movf	??__fill_buffer_get_display& (0+255),w,b
 42755  013418  5D69               	subwf	(??__fill_buffer_get_display+2)& (0+255),w,b
 42756  01341A  516A               	movf	(??__fill_buffer_get_display+3)& (0+255),w,b
 42757  01341C  0A80               	xorlw	128
 42758  01341E  6F6B               	movwf	(??__fill_buffer_get_display+4)& (0+255),b
 42759  013420  5168               	movf	(??__fill_buffer_get_display+1)& (0+255),w,b
 42760  013422  0A80               	xorlw	128
 42761  013424  596B               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,b
 42762  013426  B0D8               	btfsc	status,0,c
 42763  013428  0012               	return	
 42764  01342A  D7D0               	goto	l2316
 42765  01342C                     __end_of__fill_buffer_get_display:
 42766                           	opt stack 0
 42767                           tosu	equ	0xFFF
 42768                           tosh	equ	0xFFE
 42769                           tosl	equ	0xFFD
 42770                           pclath	equ	0xFFA
 42771                           tblptru	equ	0xFF8
 42772                           tblptrh	equ	0xFF7
 42773                           tblptrl	equ	0xFF6
 42774                           tablat	equ	0xFF5
 42775                           prodh	equ	0xFF4
 42776                           prodl	equ	0xFF3
 42777                           intcon	equ	0xFF2
 42778                           indf0	equ	0xFEF
 42779                           postinc0	equ	0xFEE
 42780                           fsr0h	equ	0xFEA
 42781                           fsr0l	equ	0xFE9
 42782                           wreg	equ	0xFE8
 42783                           indf1	equ	0xFE7
 42784                           postinc1	equ	0xFE6
 42785                           postdec1	equ	0xFE5
 42786                           plusw1	equ	0xFE3
 42787                           fsr1h	equ	0xFE2
 42788                           fsr1l	equ	0xFE1
 42789                           indf2	equ	0xFDF
 42790                           postinc2	equ	0xFDE
 42791                           postdec2	equ	0xFDD
 42792                           plusw2	equ	0xFDB
 42793                           fsr2h	equ	0xFDA
 42794                           fsr2l	equ	0xFD9
 42795                           status	equ	0xFD8
 42796                           
 42797 ;; *************** function _display_get_character *****************
 42798 ;; Defined at:
 42799 ;;		line 672 in file "display.c"
 42800 ;; Parameters:    Size  Location     Type
 42801 ;;  line            1    wreg     unsigned char 
 42802 ;;  position        1    0[BANK0 ] unsigned char 
 42803 ;; Auto vars:     Size  Location     Type
 42804 ;;  line            1    3[BANK0 ] unsigned char 
 42805 ;; Return value:  Size  Location     Type
 42806 ;;                  1    wreg      unsigned char 
 42807 ;; Registers used:
 42808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 42809 ;; Tracked objects:
 42810 ;;		On entry : 0/0
 42811 ;;		On exit  : 0/0
 42812 ;;		Unchanged: 0/0
 42813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42814 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42815 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42816 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42817 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42818 ;;Total ram usage:        4 bytes
 42819 ;; Hardware stack levels used:    1
 42820 ;; Hardware stack levels required when called:   10
 42821 ;; This function calls:
 42822 ;;		Nothing
 42823 ;; This function is called by:
 42824 ;;		__fill_buffer_get_display
 42825 ;; This function uses a non-reentrant model
 42826 ;;
 42827                           
 42828                           	psect	text169
 42829  015F74                     __ptext169:
 42830                           	opt stack 0
 42831  015F74                     _display_get_character:
 42832                           	opt stack 17
 42833                           
 42834                           ; BSR set to: 0
 42835                           ;incstack = 0
 42836                           ;display_get_character@line stored from wreg
 42837  015F74  0100               	movlb	0	; () banked
 42838  015F76  6F63               	movwf	display_get_character@line& (0+255),b
 42839                           
 42840                           ;display.c: 674: return display_content[line][position];
 42841  015F78  0100               	movlb	0	; () banked
 42842  015F7A  5163               	movf	display_get_character@line& (0+255),w,b
 42843  015F7C  0D14               	mullw	20
 42844  015F7E  0E49               	movlw	low _display_content
 42845  015F80  6F61               	movwf	??_display_get_character& (0+255),b
 42846  015F82  0E02               	movlw	high _display_content
 42847  015F84  6F62               	movwf	(??_display_get_character+1)& (0+255),b
 42848  015F86  50F3               	movf	prodl,w,c
 42849  015F88  2761               	addwf	??_display_get_character& (0+255),f,b
 42850  015F8A  50F4               	movf	prodh,w,c
 42851  015F8C  2362               	addwfc	(??_display_get_character+1)& (0+255),f,b
 42852  015F8E  5160               	movf	display_get_character@position& (0+255),w,b
 42853  015F90  0D01               	mullw	1
 42854  015F92  50F3               	movf	prodl,w,c
 42855  015F94  2561               	addwf	??_display_get_character& (0+255),w,b
 42856  015F96  6ED9               	movwf	fsr2l,c
 42857  015F98  50F4               	movf	prodh,w,c
 42858  015F9A  2162               	addwfc	(??_display_get_character+1)& (0+255),w,b
 42859  015F9C  6EDA               	movwf	fsr2h,c
 42860  015F9E  50DF               	movf	indf2,w,c
 42861  015FA0  0012               	return	
 42862  015FA2                     __end_of_display_get_character:
 42863                           	opt stack 0
 42864                           tosu	equ	0xFFF
 42865                           tosh	equ	0xFFE
 42866                           tosl	equ	0xFFD
 42867                           pclath	equ	0xFFA
 42868                           tblptru	equ	0xFF8
 42869                           tblptrh	equ	0xFF7
 42870                           tblptrl	equ	0xFF6
 42871                           tablat	equ	0xFF5
 42872                           prodh	equ	0xFF4
 42873                           prodl	equ	0xFF3
 42874                           intcon	equ	0xFF2
 42875                           indf0	equ	0xFEF
 42876                           postinc0	equ	0xFEE
 42877                           fsr0h	equ	0xFEA
 42878                           fsr0l	equ	0xFE9
 42879                           wreg	equ	0xFE8
 42880                           indf1	equ	0xFE7
 42881                           postinc1	equ	0xFE6
 42882                           postdec1	equ	0xFE5
 42883                           plusw1	equ	0xFE3
 42884                           fsr1h	equ	0xFE2
 42885                           fsr1l	equ	0xFE1
 42886                           indf2	equ	0xFDF
 42887                           postinc2	equ	0xFDE
 42888                           postdec2	equ	0xFDD
 42889                           plusw2	equ	0xFDB
 42890                           fsr2h	equ	0xFDA
 42891                           fsr2l	equ	0xFD9
 42892                           status	equ	0xFD8
 42893                           
 42894 ;; *************** function _api_parse *****************
 42895 ;; Defined at:
 42896 ;;		line 94 in file "api.c"
 42897 ;; Parameters:    Size  Location     Type
 42898 ;;  inBuffer        2   71[BANK0 ] PTR unsigned char 
 42899 ;;		 -> ReceivedDataBuffer(64), 
 42900 ;;  receivedData    1   73[BANK0 ] unsigned char 
 42901 ;;  outBuffer       2   74[BANK0 ] PTR unsigned char 
 42902 ;;		 -> ToSendDataBuffer(64), 
 42903 ;; Auto vars:     Size  Location     Type
 42904 ;;  out_idx_ptr     2   78[BANK0 ] PTR unsigned char 
 42905 ;;		 -> api_parse@out_idx(1), 
 42906 ;;  in_idx          1   81[BANK0 ] unsigned char 
 42907 ;;  out_idx         1   80[BANK0 ] unsigned char 
 42908 ;; Return value:  Size  Location     Type
 42909 ;;                  1    wreg      void 
 42910 ;; Registers used:
 42911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42912 ;; Tracked objects:
 42913 ;;		On entry : 0/0
 42914 ;;		On exit  : 0/0
 42915 ;;		Unchanged: 0/0
 42916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42917 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42918 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42919 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42920 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42921 ;;Total ram usage:       11 bytes
 42922 ;; Hardware stack levels used:    1
 42923 ;; Hardware stack levels required when called:   16
 42924 ;; This function calls:
 42925 ;;		__parse_command_long
 42926 ;;		__parse_command_short
 42927 ;; This function is called by:
 42928 ;;		_APP_DeviceCustomHIDTasks
 42929 ;; This function uses a non-reentrant model
 42930 ;;
 42931                           
 42932                           	psect	text170
 42933  010B50                     __ptext170:
 42934                           	opt stack 0
 42935  010B50                     _api_parse:
 42936                           	opt stack 13
 42937                           
 42938                           ;api.c: 98: uint8_t in_idx;;api.c: 99: uint8_t out_idx;;api.c: 100: uint8_t *out_idx_ptr
      +                          ;;api.c: 102: out_idx = 0;
 42939                           
 42940                           ; BSR set to: 0
 42941                           ;incstack = 0
 42942  010B50  0E00               	movlw	0
 42943  010B52  0100               	movlb	0	; () banked
 42944  010B54  6FB0               	movwf	api_parse@out_idx& (0+255),b
 42945                           
 42946                           ; BSR set to: 0
 42947                           ;api.c: 103: out_idx_ptr = &out_idx;
 42948  010B56  0EB0               	movlw	low api_parse@out_idx
 42949  010B58  6FAE               	movwf	api_parse@out_idx_ptr& (0+255),b
 42950  010B5A  0E00               	movlw	high api_parse@out_idx
 42951  010B5C  6FAF               	movwf	(api_parse@out_idx_ptr+1)& (0+255),b
 42952                           
 42953                           ; BSR set to: 0
 42954                           ;api.c: 105: if(inBuffer[0]>0x7F)
 42955  010B5E  C0A7  FFD9         	movff	api_parse@inBuffer,fsr2l
 42956  010B62  C0A8  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 42957  010B66  0E7F               	movlw	127
 42958  010B68  64DF               	cpfsgt	indf2,c
 42959  010B6A  D001               	goto	l2292
 42960  010B6C  0012               	return	
 42961  010B6E                     l2292:
 42962                           
 42963                           ; BSR set to: 0
 42964                           ;api.c: 110: };api.c: 112: if(inBuffer[0]==DATAREQUEST_GET_ECHO)
 42965                           
 42966                           ; BSR set to: 0
 42967  010B6E  C0A7  FFD9         	movff	api_parse@inBuffer,fsr2l
 42968  010B72  C0A8  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 42969  010B76  0E20               	movlw	32
 42970  010B78  18DE               	xorwf	postinc2,w,c
 42971  010B7A  B4D8               	btfsc	status,2,c
 42972  010B7C  0012               	return	
 42973                           
 42974                           ; BSR set to: 0
 42975                           ;api.c: 117: };api.c: 119: if(inBuffer[0]==DATAREQUEST_GET_COMMAND_RESPONSE)
 42976                           
 42977                           ; BSR set to: 0
 42978                           
 42979                           ; BSR set to: 0
 42980                           ;api.c: 113: {;api.c: 116: return;
 42981  010B7E  C0A7  FFD9         	movff	api_parse@inBuffer,fsr2l
 42982  010B82  C0A8  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 42983  010B86  50DF               	movf	indf2,w,c
 42984  010B88  A4D8               	btfss	status,2,c
 42985  010B8A  D018               	goto	l2295
 42986                           
 42987                           ; BSR set to: 0
 42988                           ;api.c: 120: {;api.c: 122: outBuffer[0] = DATAREQUEST_GET_COMMAND_RESPONSE;
 42989  010B8C  C0AA  FFD9         	movff	api_parse@outBuffer,fsr2l
 42990  010B90  C0AB  FFDA         	movff	api_parse@outBuffer+1,fsr2h
 42991  010B94  0E00               	movlw	0
 42992  010B96  6EDF               	movwf	indf2,c
 42993                           
 42994                           ; BSR set to: 0
 42995                           ;api.c: 125: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 42996  010B98  EE20 F001          	lfsr	2,1
 42997  010B9C  51AA               	movf	api_parse@outBuffer& (0+255),w,b
 42998  010B9E  26D9               	addwf	fsr2l,f,c
 42999  010BA0  51AB               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 43000  010BA2  22DA               	addwfc	fsr2h,f,c
 43001  010BA4  0EBC               	movlw	188
 43002  010BA6  6EDF               	movwf	indf2,c
 43003                           
 43004                           ; BSR set to: 0
 43005                           ;api.c: 126: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 43006  010BA8  EE20 F002          	lfsr	2,2
 43007  010BAC  51AA               	movf	api_parse@outBuffer& (0+255),w,b
 43008  010BAE  26D9               	addwf	fsr2l,f,c
 43009  010BB0  51AB               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 43010  010BB2  22DA               	addwfc	fsr2h,f,c
 43011  010BB4  0E26               	movlw	38
 43012  010BB6  6EDF               	movwf	indf2,c
 43013                           
 43014                           ; BSR set to: 0
 43015                           ;api.c: 129: out_idx = 3;
 43016  010BB8  0E03               	movlw	3
 43017  010BBA  6FB0               	movwf	api_parse@out_idx& (0+255),b
 43018  010BBC                     l2295:
 43019                           
 43020                           ; BSR set to: 0
 43021                           ;api.c: 130: };api.c: 132: in_idx = 1;
 43022                           
 43023                           ; BSR set to: 0
 43024  010BBC  0E01               	movlw	1
 43025  010BBE  6FB1               	movwf	api_parse@in_idx& (0+255),b
 43026                           
 43027                           ;api.c: 133: while(in_idx<receivedDataLength)
 43028  010BC0  D057               	goto	l2301
 43029  010BC2                     
 43030                           ; BSR set to: 0
 43031                           ;api.c: 134: {;api.c: 136: if(inBuffer[in_idx]==COMMAND_STOP_PARSING)
 43032                           
 43033                           ; BSR set to: 0
 43034  010BC2  51B1               	movf	api_parse@in_idx& (0+255),w,b
 43035  010BC4  0D01               	mullw	1
 43036  010BC6  50F3               	movf	prodl,w,c
 43037  010BC8  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 43038  010BCA  6ED9               	movwf	fsr2l,c
 43039  010BCC  50F4               	movf	prodh,w,c
 43040  010BCE  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 43041  010BD0  6EDA               	movwf	fsr2h,c
 43042  010BD2  0E99               	movlw	153
 43043  010BD4  18DE               	xorwf	postinc2,w,c
 43044  010BD6  B4D8               	btfsc	status,2,c
 43045  010BD8  0012               	return	
 43046  010BDA  D02F               	goto	l2299
 43047  010BDC                     
 43048                           ; BSR set to: 0
 43049                           ;api.c: 144: _parse_command_short(inBuffer[in_idx]);
 43050                           
 43051                           ; BSR set to: 0
 43052  010BDC  51B1               	movf	api_parse@in_idx& (0+255),w,b
 43053  010BDE  0D01               	mullw	1
 43054  010BE0  50F3               	movf	prodl,w,c
 43055  010BE2  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 43056  010BE4  6ED9               	movwf	fsr2l,c
 43057  010BE6  50F4               	movf	prodh,w,c
 43058  010BE8  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 43059  010BEA  6EDA               	movwf	fsr2h,c
 43060  010BEC  50DF               	movf	indf2,w,c
 43061  010BEE  ECEB  F07A         	call	__parse_command_short
 43062  010BF2  D00B               	goto	l17811
 43063  010BF4                     
 43064                           ; BSR set to: 0
 43065                           ;api.c: 149: _parse_command_short(inBuffer[in_idx]);
 43066                           
 43067                           ; BSR set to: 0
 43068  010BF4  51B1               	movf	api_parse@in_idx& (0+255),w,b
 43069  010BF6  0D01               	mullw	1
 43070  010BF8  50F3               	movf	prodl,w,c
 43071  010BFA  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 43072  010BFC  6ED9               	movwf	fsr2l,c
 43073  010BFE  50F4               	movf	prodh,w,c
 43074  010C00  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 43075  010C02  6EDA               	movwf	fsr2h,c
 43076  010C04  50DF               	movf	indf2,w,c
 43077  010C06  ECEB  F07A         	call	__parse_command_short
 43078  010C0A                     l17811:
 43079                           
 43080                           ;api.c: 150: ++in_idx;
 43081  010C0A  0100               	movlb	0	; () banked
 43082  010C0C  2BB1               	incf	api_parse@in_idx& (0+255),f,b
 43083                           
 43084                           ;api.c: 151: break;
 43085  010C0E  D030               	goto	l2301
 43086  010C10                     
 43087                           ; BSR set to: 0
 43088                           ;api.c: 154: in_idx += _parse_command_long(&inBuffer[in_idx], outBuffer, out_idx_ptr);
 43089                           
 43090                           ; BSR set to: 0
 43091  010C10  51B1               	movf	api_parse@in_idx& (0+255),w,b
 43092  010C12  0D01               	mullw	1
 43093  010C14  50F3               	movf	prodl,w,c
 43094  010C16  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 43095  010C18  6FA0               	movwf	__parse_command_long@data& (0+255),b
 43096  010C1A  50F4               	movf	prodh,w,c
 43097  010C1C  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 43098  010C1E  6FA1               	movwf	(__parse_command_long@data+1)& (0+255),b
 43099  010C20  C0AA  F0A2         	movff	api_parse@outBuffer,__parse_command_long@out_buffer
 43100  010C24  C0AB  F0A3         	movff	api_parse@outBuffer+1,__parse_command_long@out_buffer+1
 43101  010C28  C0AE  F0A4         	movff	api_parse@out_idx_ptr,__parse_command_long@out_idx_ptr
 43102  010C2C  C0AF  F0A5         	movff	api_parse@out_idx_ptr+1,__parse_command_long@out_idx_ptr+1
 43103  010C30  EC80  F0A1         	call	__parse_command_long	;wreg free
 43104  010C34  0100               	movlb	0	; () banked
 43105  010C36  27B1               	addwf	api_parse@in_idx& (0+255),f,b
 43106                           
 43107                           ;api.c: 155: break;
 43108  010C38  D01B               	goto	l2301
 43109  010C3A                     l2299:
 43110                           
 43111                           ; BSR set to: 0
 43112                           
 43113                           ; BSR set to: 0
 43114  010C3A  51B1               	movf	api_parse@in_idx& (0+255),w,b
 43115  010C3C  0D01               	mullw	1
 43116  010C3E  50F3               	movf	prodl,w,c
 43117  010C40  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 43118  010C42  6ED9               	movwf	fsr2l,c
 43119  010C44  50F4               	movf	prodh,w,c
 43120  010C46  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 43121  010C48  6EDA               	movwf	fsr2h,c
 43122  010C4A  50DF               	movf	indf2,w,c
 43123  010C4C  0BF0               	andlw	240
 43124  010C4E  6FAC               	movwf	??_api_parse& (0+255),b
 43125  010C50  6BAD               	clrf	(??_api_parse+1)& (0+255),b
 43126                           
 43127                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 43128                           ; Switch size 1, requested type "space"
 43129                           ; Number of cases is 1, Range of values is 0 to 0
 43130                           ; switch strategies available:
 43131                           ; Name         Instructions Cycles
 43132                           ; simple_byte            4     3 (average)
 43133                           ;	Chosen strategy is simple_byte
 43134  010C52  51AD               	movf	(??_api_parse+1)& (0+255),w,b
 43135  010C54  0A00               	xorlw	0	; case 0
 43136  010C56  A4D8               	btfss	status,2,c
 43137  010C58  0012               	return	
 43138                           
 43139                           ; BSR set to: 0
 43140                           ; Switch size 1, requested type "space"
 43141                           ; Number of cases is 3, Range of values is 32 to 144
 43142                           ; switch strategies available:
 43143                           ; Name         Instructions Cycles
 43144                           ; simple_byte           10     6 (average)
 43145                           ;	Chosen strategy is simple_byte
 43146  010C5A  51AC               	movf	??_api_parse& (0+255),w,b
 43147  010C5C  0A20               	xorlw	32	; case 32
 43148  010C5E  B4D8               	btfsc	status,2,c
 43149  010C60  D7BD               	goto	l2300
 43150  010C62  0A10               	xorlw	16	; case 48
 43151  010C64  B4D8               	btfsc	status,2,c
 43152  010C66  D7C6               	goto	l2302
 43153  010C68  0AA0               	xorlw	160	; case 144
 43154  010C6A  A4D8               	btfss	status,2,c
 43155  010C6C  0012               	return	
 43156  010C6E  D7D0               	goto	l2303
 43157  010C70                     l2301:
 43158                           
 43159                           ; BSR set to: 0
 43160                           
 43161                           ; BSR set to: 0
 43162                           
 43163                           ; BSR set to: 0
 43164  010C70  51A9               	movf	api_parse@receivedDataLength& (0+255),w,b
 43165  010C72  5DB1               	subwf	api_parse@in_idx& (0+255),w,b
 43166  010C74  B0D8               	btfsc	status,0,c
 43167  010C76  0012               	return	
 43168  010C78  D7A4               	goto	l2297
 43169  010C7A                     __end_of_api_parse:
 43170                           	opt stack 0
 43171                           tosu	equ	0xFFF
 43172                           tosh	equ	0xFFE
 43173                           tosl	equ	0xFFD
 43174                           pclath	equ	0xFFA
 43175                           tblptru	equ	0xFF8
 43176                           tblptrh	equ	0xFF7
 43177                           tblptrl	equ	0xFF6
 43178                           tablat	equ	0xFF5
 43179                           prodh	equ	0xFF4
 43180                           prodl	equ	0xFF3
 43181                           intcon	equ	0xFF2
 43182                           indf0	equ	0xFEF
 43183                           postinc0	equ	0xFEE
 43184                           fsr0h	equ	0xFEA
 43185                           fsr0l	equ	0xFE9
 43186                           wreg	equ	0xFE8
 43187                           indf1	equ	0xFE7
 43188                           postinc1	equ	0xFE6
 43189                           postdec1	equ	0xFE5
 43190                           plusw1	equ	0xFE3
 43191                           fsr1h	equ	0xFE2
 43192                           fsr1l	equ	0xFE1
 43193                           indf2	equ	0xFDF
 43194                           postinc2	equ	0xFDE
 43195                           postdec2	equ	0xFDD
 43196                           plusw2	equ	0xFDB
 43197                           fsr2h	equ	0xFDA
 43198                           fsr2l	equ	0xFD9
 43199                           status	equ	0xFD8
 43200                           
 43201 ;; *************** function __parse_command_short *****************
 43202 ;; Defined at:
 43203 ;;		line 331 in file "api.c"
 43204 ;; Parameters:    Size  Location     Type
 43205 ;;  cmd             1    wreg     unsigned char 
 43206 ;; Auto vars:     Size  Location     Type
 43207 ;;  cmd             1   62[BANK0 ] unsigned char 
 43208 ;; Return value:  Size  Location     Type
 43209 ;;                  1    wreg      void 
 43210 ;; Registers used:
 43211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43212 ;; Tracked objects:
 43213 ;;		On entry : 0/0
 43214 ;;		On exit  : 0/0
 43215 ;;		Unchanged: 0/0
 43216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43218 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43220 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43221 ;;Total ram usage:        1 bytes
 43222 ;; Hardware stack levels used:    1
 43223 ;; Hardware stack levels required when called:   14
 43224 ;; This function calls:
 43225 ;;		_i2c_eeprom_writeByte
 43226 ;;		_motor_clear_command_cue
 43227 ;;		_motor_goto_steps
 43228 ;;		_motor_move_endless
 43229 ;;		_motor_set_zero
 43230 ;;		_motor_stop
 43231 ;;		_reboot
 43232 ;; This function is called by:
 43233 ;;		_api_parse
 43234 ;; This function uses a non-reentrant model
 43235 ;;
 43236                           
 43237                           	psect	text171
 43238  00F5D6                     __ptext171:
 43239                           	opt stack 0
 43240  00F5D6                     __parse_command_short:
 43241                           	opt stack 14
 43242                           
 43243                           ; BSR set to: 0
 43244                           ;incstack = 0
 43245                           ;__parse_command_short@cmd stored from wreg
 43246  00F5D6  0100               	movlb	0	; () banked
 43247  00F5D8  6F9E               	movwf	__parse_command_short@cmd& (0+255),b
 43248                           
 43249                           ;api.c: 333: switch(cmd)
 43250  00F5DA  D08A               	goto	l2337
 43251  00F5DC                     
 43252                           ;api.c: 341: i2c_eeprom_writeByte(0x100, 0x94);
 43253  00F5DC  0E01               	movlw	1
 43254  00F5DE  0100               	movlb	0	; () banked
 43255  00F5E0  6F6B               	movwf	(i2c_eeprom_writeByte@address+1)& (0+255),b
 43256  00F5E2  0E00               	movlw	0
 43257  00F5E4  6F6A               	movwf	i2c_eeprom_writeByte@address& (0+255),b
 43258  00F5E6  0E94               	movlw	148
 43259  00F5E8  6F6C               	movwf	i2c_eeprom_writeByte@data& (0+255),b
 43260  00F5EA  ECD3  F0AC         	call	_i2c_eeprom_writeByte	;wreg free
 43261                           
 43262                           ;api.c: 342: reboot();
 43263  00F5EE  EC5F  F0B2         	call	_reboot	;wreg free
 43264                           
 43265                           ;api.c: 343: break;
 43266  00F5F2  0012               	return	
 43267  00F5F4                     
 43268                           ;api.c: 346: i2c_eeprom_writeByte(0x100, 0x78);
 43269  00F5F4  0E01               	movlw	1
 43270  00F5F6  0100               	movlb	0	; () banked
 43271  00F5F8  6F6B               	movwf	(i2c_eeprom_writeByte@address+1)& (0+255),b
 43272  00F5FA  0E00               	movlw	0
 43273  00F5FC  6F6A               	movwf	i2c_eeprom_writeByte@address& (0+255),b
 43274  00F5FE  0E78               	movlw	120
 43275  00F600  6F6C               	movwf	i2c_eeprom_writeByte@data& (0+255),b
 43276  00F602  ECD3  F0AC         	call	_i2c_eeprom_writeByte	;wreg free
 43277                           
 43278                           ;api.c: 347: reboot();
 43279  00F606  EC5F  F0B2         	call	_reboot	;wreg free
 43280                           
 43281                           ;api.c: 348: break;
 43282  00F60A  0012               	return	
 43283  00F60C                     
 43284                           ;api.c: 351: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 43285  00F60C  0E01               	movlw	1
 43286  00F60E  0101               	movlb	1	; () banked
 43287  00F610  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 43288                           
 43289                           ;api.c: 352: break;
 43290  00F612  0012               	return	
 43291  00F614                     
 43292                           ;api.c: 355: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 43293                           
 43294                           ; BSR set to: 1
 43295  00F614  0E11               	movlw	17
 43296  00F616  0101               	movlb	1	; () banked
 43297  00F618  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 43298                           
 43299                           ;api.c: 356: break;
 43300  00F61A  0012               	return	
 43301  00F61C                     
 43302                           ;api.c: 359: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 43303                           
 43304                           ; BSR set to: 1
 43305  00F61C  0E31               	movlw	49
 43306  00F61E  0101               	movlb	1	; () banked
 43307  00F620  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 43308                           
 43309                           ;api.c: 360: break;
 43310  00F622  0012               	return	
 43311  00F624                     
 43312                           ;api.c: 363: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 43313                           
 43314                           ; BSR set to: 1
 43315  00F624  0E51               	movlw	81
 43316  00F626  0101               	movlb	1	; () banked
 43317  00F628  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 43318                           
 43319                           ;api.c: 364: break;
 43320  00F62A  0012               	return	
 43321  00F62C                     
 43322                           ;api.c: 367: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 43323                           
 43324                           ; BSR set to: 1
 43325  00F62C  0E82               	movlw	130
 43326  00F62E  0101               	movlb	1	; () banked
 43327  00F630  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 43328                           
 43329                           ;api.c: 368: break;
 43330  00F632  0012               	return	
 43331  00F634                     
 43332                           ;api.c: 371: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
 43333                           
 43334                           ; BSR set to: 1
 43335  00F634  0E71               	movlw	113
 43336  00F636  0101               	movlb	1	; () banked
 43337  00F638  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 43338                           
 43339                           ;api.c: 372: break;
 43340  00F63A  0012               	return	
 43341  00F63C                     
 43342                           ;api.c: 375: motor_set_zero(MOTOR_DIRECTION_CCW);
 43343                           
 43344                           ; BSR set to: 1
 43345  00F63C  0EFF               	movlw	255
 43346  00F63E  ECDD  F0AD         	call	_motor_set_zero
 43347                           
 43348                           ;api.c: 376: break;
 43349  00F642  0012               	return	
 43350  00F644                     
 43351                           ;api.c: 379: motor_set_zero(MOTOR_DIRECTION_CW);
 43352  00F644  0E01               	movlw	1
 43353  00F646  ECDD  F0AD         	call	_motor_set_zero
 43354                           
 43355                           ;api.c: 380: break;
 43356  00F64A  0012               	return	
 43357  00F64C                     
 43358                           ;api.c: 383: motor_goto_steps(MOTOR_DIRECTION_SHORTEST, 0, 0xFFFF, MOTOR_OVERSHOOT_WITH_
      +                          OVERSHOOT);
 43359  00F64C  0E00               	movlw	0
 43360  00F64E  0100               	movlb	0	; () banked
 43361  00F650  6F92               	movwf	motor_goto_steps@position& (0+255),b
 43362  00F652  0E00               	movlw	0
 43363  00F654  6F93               	movwf	(motor_goto_steps@position+1)& (0+255),b
 43364  00F656  0E00               	movlw	0
 43365  00F658  6F94               	movwf	(motor_goto_steps@position+2)& (0+255),b
 43366  00F65A  0E00               	movlw	0
 43367  00F65C  6F95               	movwf	(motor_goto_steps@position+3)& (0+255),b
 43368  00F65E  0EFF               	movlw	255
 43369  00F660  6F97               	movwf	(motor_goto_steps@speed+1)& (0+255),b
 43370  00F662  6996               	setf	motor_goto_steps@speed& (0+255),b
 43371  00F664  0E00               	movlw	0
 43372  00F666  6F98               	movwf	motor_goto_steps@overshoot& (0+255),b
 43373  00F668  0E00               	movlw	0
 43374  00F66A  ECBB  F09D         	call	_motor_goto_steps
 43375                           
 43376                           ;api.c: 385: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 43377  00F66E  0E05               	movlw	5
 43378  00F670  0101               	movlb	1	; () banked
 43379  00F672  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 43380                           
 43381                           ; BSR set to: 1
 43382                           ;api.c: 386: os.divide_position = 0;
 43383  00F674  0E00               	movlw	0
 43384  00F676  6F7C               	movwf	(_os+24)& (0+255),b	;volatile
 43385  00F678  0E00               	movlw	0
 43386  00F67A  6F7B               	movwf	(_os+23)& (0+255),b	;volatile
 43387  00F67C                     
 43388                           ;api.c: 389: --os.encoder2Count;
 43389                           
 43390                           ; BSR set to: 1
 43391  00F67C  0101               	movlb	1	; () banked
 43392  00F67E  0769               	decf	(_os+5)& (0+255),f,b	;volatile
 43393                           
 43394                           ;api.c: 390: break;
 43395  00F680  0012               	return	
 43396  00F682                     
 43397                           ;api.c: 393: ++os.encoder2Count;
 43398                           
 43399                           ; BSR set to: 1
 43400  00F682  0101               	movlb	1	; () banked
 43401  00F684  2B69               	incf	(_os+5)& (0+255),f,b	;volatile
 43402                           
 43403                           ;api.c: 394: break;
 43404  00F686  0012               	return	
 43405  00F688                     
 43406                           ;api.c: 397: ++os.button2;
 43407                           
 43408                           ; BSR set to: 1
 43409  00F688  0101               	movlb	1	; () banked
 43410  00F68A  2B6A               	incf	(_os+6)& (0+255),f,b	;volatile
 43411                           
 43412                           ;api.c: 398: break;
 43413  00F68C  0012               	return	
 43414  00F68E                     
 43415                           ;api.c: 401: --os.encoder1Count;
 43416                           
 43417                           ; BSR set to: 1
 43418  00F68E  0101               	movlb	1	; () banked
 43419  00F690  0767               	decf	(_os+3)& (0+255),f,b	;volatile
 43420                           
 43421                           ;api.c: 402: break;
 43422  00F692  0012               	return	
 43423  00F694                     
 43424                           ;api.c: 405: ++os.encoder1Count;
 43425                           
 43426                           ; BSR set to: 1
 43427  00F694  0101               	movlb	1	; () banked
 43428  00F696  2B67               	incf	(_os+3)& (0+255),f,b	;volatile
 43429                           
 43430                           ;api.c: 406: break;
 43431  00F698  0012               	return	
 43432  00F69A                     
 43433                           ;api.c: 409: ++os.button1;
 43434                           
 43435                           ; BSR set to: 1
 43436  00F69A  0101               	movlb	1	; () banked
 43437  00F69C  2B68               	incf	(_os+4)& (0+255),f,b	;volatile
 43438                           
 43439                           ;api.c: 410: break;
 43440  00F69E  0012               	return	
 43441  00F6A0                     
 43442                           ;api.c: 413: if(!os.busy)
 43443                           
 43444                           ; BSR set to: 1
 43445  00F6A0  0101               	movlb	1	; () banked
 43446  00F6A2  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 43447  00F6A4  A4D8               	btfss	status,2,c
 43448  00F6A6  0012               	return	
 43449                           
 43450                           ; BSR set to: 1
 43451                           ;api.c: 414: {;api.c: 415: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 43452  00F6A8  0E84               	movlw	132
 43453  00F6AA  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 43454                           
 43455                           ; BSR set to: 1
 43456                           ;api.c: 416: motor_move_endless(MOTOR_DIRECTION_CCW, os.manual_speed);
 43457  00F6AC  C188  F08C         	movff	_os+36,motor_move_endless@speed	;volatile
 43458  00F6B0  C189  F08D         	movff	_os+37,motor_move_endless@speed+1	;volatile
 43459  00F6B4  0EFF               	movlw	255
 43460  00F6B6  ECD1  F0AF         	call	_motor_move_endless
 43461                           
 43462                           ;api.c: 417: };api.c: 418: break;
 43463  00F6BA  0012               	return	
 43464  00F6BC                     
 43465                           ;api.c: 421: if(!os.busy)
 43466  00F6BC  0101               	movlb	1	; () banked
 43467  00F6BE  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 43468  00F6C0  A4D8               	btfss	status,2,c
 43469  00F6C2  0012               	return	
 43470                           
 43471                           ; BSR set to: 1
 43472                           ;api.c: 422: {;api.c: 423: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 43473  00F6C4  0E84               	movlw	132
 43474  00F6C6  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 43475                           
 43476                           ; BSR set to: 1
 43477                           ;api.c: 424: motor_move_endless(MOTOR_DIRECTION_CW, os.manual_speed);
 43478  00F6C8  C188  F08C         	movff	_os+36,motor_move_endless@speed	;volatile
 43479  00F6CC  C189  F08D         	movff	_os+37,motor_move_endless@speed+1	;volatile
 43480  00F6D0  0E01               	movlw	1
 43481  00F6D2  ECD1  F0AF         	call	_motor_move_endless
 43482                           
 43483                           ;api.c: 425: };api.c: 426: break;
 43484  00F6D6  0012               	return	
 43485  00F6D8                     
 43486                           ;api.c: 429: if(os.busy)
 43487  00F6D8  0101               	movlb	1	; () banked
 43488  00F6DA  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 43489  00F6DC  B4D8               	btfsc	status,2,c
 43490  00F6DE  0012               	return	
 43491                           
 43492                           ; BSR set to: 1
 43493                           ;api.c: 430: {;api.c: 431: motor_stop();
 43494  00F6E0  ECA4  F0AB         	call	_motor_stop	;wreg free
 43495                           
 43496                           ;api.c: 432: motor_clear_command_cue();
 43497  00F6E4  EC1B  F0B2         	call	_motor_clear_command_cue	;wreg free
 43498                           
 43499                           ;api.c: 433: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 43500  00F6E8  0E82               	movlw	130
 43501  00F6EA  0101               	movlb	1	; () banked
 43502  00F6EC  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 43503                           
 43504                           ; BSR set to: 1
 43505                           ;api.c: 436: }
 43506                           
 43507                           ; BSR set to: 1
 43508                           ;api.c: 434: };api.c: 435: break;
 43509  00F6EE  0012               	return	
 43510  00F6F0                     l2337:
 43511                           
 43512                           ; BSR set to: 1
 43513  00F6F0  0100               	movlb	0	; () banked
 43514  00F6F2  519E               	movf	__parse_command_short@cmd& (0+255),w,b
 43515                           
 43516                           ; Switch size 1, requested type "space"
 43517                           ; Number of cases is 20, Range of values is 32 to 56
 43518                           ; switch strategies available:
 43519                           ; Name         Instructions Cycles
 43520                           ; simple_byte           61    31 (average)
 43521                           ;	Chosen strategy is simple_byte
 43522  00F6F4  0A20               	xorlw	32	; case 32
 43523  00F6F6  B4D8               	btfsc	status,2,c
 43524  00F6F8  D789               	goto	l2341
 43525  00F6FA  0A01               	xorlw	1	; case 33
 43526  00F6FC  B4D8               	btfsc	status,2,c
 43527  00F6FE  D78A               	goto	l2342
 43528  00F700  0A03               	xorlw	3	; case 34
 43529  00F702  B4D8               	btfsc	status,2,c
 43530  00F704  D78B               	goto	l2343
 43531  00F706  0A01               	xorlw	1	; case 35
 43532  00F708  B4D8               	btfsc	status,2,c
 43533  00F70A  D78C               	goto	l2344
 43534  00F70C  0A07               	xorlw	7	; case 36
 43535  00F70E  B4D8               	btfsc	status,2,c
 43536  00F710  D78D               	goto	l2345
 43537  00F712  0A01               	xorlw	1	; case 37
 43538  00F714  B4D8               	btfsc	status,2,c
 43539  00F716  D78E               	goto	l2346
 43540  00F718  0A03               	xorlw	3	; case 38
 43541  00F71A  B4D8               	btfsc	status,2,c
 43542  00F71C  D78F               	goto	l2347
 43543  00F71E  0A01               	xorlw	1	; case 39
 43544  00F720  B4D8               	btfsc	status,2,c
 43545  00F722  D790               	goto	l2348
 43546  00F724  0A0F               	xorlw	15	; case 40
 43547  00F726  B4D8               	btfsc	status,2,c
 43548  00F728  D791               	goto	l2349
 43549  00F72A  0A01               	xorlw	1	; case 41
 43550  00F72C  B4D8               	btfsc	status,2,c
 43551  00F72E  D756               	goto	l2338
 43552  00F730  0A03               	xorlw	3	; case 42
 43553  00F732  B4D8               	btfsc	status,2,c
 43554  00F734  D75F               	goto	l2340
 43555  00F736  0A1A               	xorlw	26	; case 48
 43556  00F738  B4D8               	btfsc	status,2,c
 43557  00F73A  D7A0               	goto	l2350
 43558  00F73C  0A01               	xorlw	1	; case 49
 43559  00F73E  B4D8               	btfsc	status,2,c
 43560  00F740  D7A0               	goto	l2351
 43561  00F742  0A03               	xorlw	3	; case 50
 43562  00F744  B4D8               	btfsc	status,2,c
 43563  00F746  D7A0               	goto	l2352
 43564  00F748  0A01               	xorlw	1	; case 51
 43565  00F74A  B4D8               	btfsc	status,2,c
 43566  00F74C  D7A0               	goto	l2353
 43567  00F74E  0A07               	xorlw	7	; case 52
 43568  00F750  B4D8               	btfsc	status,2,c
 43569  00F752  D7A0               	goto	l2354
 43570  00F754  0A01               	xorlw	1	; case 53
 43571  00F756  B4D8               	btfsc	status,2,c
 43572  00F758  D7A0               	goto	l2355
 43573  00F75A  0A03               	xorlw	3	; case 54
 43574  00F75C  B4D8               	btfsc	status,2,c
 43575  00F75E  D7A0               	goto	l2356
 43576  00F760  0A01               	xorlw	1	; case 55
 43577  00F762  B4D8               	btfsc	status,2,c
 43578  00F764  D7AB               	goto	l2358
 43579  00F766  0A0F               	xorlw	15	; case 56
 43580  00F768  A4D8               	btfss	status,2,c
 43581  00F76A  0012               	return	
 43582  00F76C  D7B5               	goto	l2360
 43583  00F76E                     __end_of__parse_command_short:
 43584                           	opt stack 0
 43585                           tosu	equ	0xFFF
 43586                           tosh	equ	0xFFE
 43587                           tosl	equ	0xFFD
 43588                           pclath	equ	0xFFA
 43589                           tblptru	equ	0xFF8
 43590                           tblptrh	equ	0xFF7
 43591                           tblptrl	equ	0xFF6
 43592                           tablat	equ	0xFF5
 43593                           prodh	equ	0xFF4
 43594                           prodl	equ	0xFF3
 43595                           intcon	equ	0xFF2
 43596                           indf0	equ	0xFEF
 43597                           postinc0	equ	0xFEE
 43598                           fsr0h	equ	0xFEA
 43599                           fsr0l	equ	0xFE9
 43600                           wreg	equ	0xFE8
 43601                           indf1	equ	0xFE7
 43602                           postinc1	equ	0xFE6
 43603                           postdec1	equ	0xFE5
 43604                           plusw1	equ	0xFE3
 43605                           fsr1h	equ	0xFE2
 43606                           fsr1l	equ	0xFE1
 43607                           indf2	equ	0xFDF
 43608                           postinc2	equ	0xFDE
 43609                           postdec2	equ	0xFDD
 43610                           plusw2	equ	0xFDB
 43611                           fsr2h	equ	0xFDA
 43612                           fsr2l	equ	0xFD9
 43613                           status	equ	0xFD8
 43614                           
 43615 ;; *************** function _reboot *****************
 43616 ;; Defined at:
 43617 ;;		line 265 in file "os.c"
 43618 ;; Parameters:    Size  Location     Type
 43619 ;;		None
 43620 ;; Auto vars:     Size  Location     Type
 43621 ;;		None
 43622 ;; Return value:  Size  Location     Type
 43623 ;;                  1    wreg      void 
 43624 ;; Registers used:
 43625 ;;		None
 43626 ;; Tracked objects:
 43627 ;;		On entry : 0/0
 43628 ;;		On exit  : 0/0
 43629 ;;		Unchanged: 0/0
 43630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43635 ;;Total ram usage:        0 bytes
 43636 ;; Hardware stack levels used:    1
 43637 ;; Hardware stack levels required when called:   10
 43638 ;; This function calls:
 43639 ;;		Nothing
 43640 ;; This function is called by:
 43641 ;;		__parse_command_short
 43642 ;; This function uses a non-reentrant model
 43643 ;;
 43644                           
 43645                           	psect	text172
 43646  0164BE                     __ptext172:
 43647                           	opt stack 0
 43648  0164BE                     _reboot:
 43649                           	opt stack 17
 43650                           
 43651                           ;incstack = 0
 43652                           ;os.c: 268: while(1);
 43653  0164BE  D7FF               	goto	_reboot
 43654  0164C0                     __end_of_reboot:
 43655                           	opt stack 0
 43656                           tosu	equ	0xFFF
 43657                           tosh	equ	0xFFE
 43658                           tosl	equ	0xFFD
 43659                           pclath	equ	0xFFA
 43660                           tblptru	equ	0xFF8
 43661                           tblptrh	equ	0xFF7
 43662                           tblptrl	equ	0xFF6
 43663                           tablat	equ	0xFF5
 43664                           prodh	equ	0xFF4
 43665                           prodl	equ	0xFF3
 43666                           intcon	equ	0xFF2
 43667                           indf0	equ	0xFEF
 43668                           postinc0	equ	0xFEE
 43669                           fsr0h	equ	0xFEA
 43670                           fsr0l	equ	0xFE9
 43671                           wreg	equ	0xFE8
 43672                           indf1	equ	0xFE7
 43673                           postinc1	equ	0xFE6
 43674                           postdec1	equ	0xFE5
 43675                           plusw1	equ	0xFE3
 43676                           fsr1h	equ	0xFE2
 43677                           fsr1l	equ	0xFE1
 43678                           indf2	equ	0xFDF
 43679                           postinc2	equ	0xFDE
 43680                           postdec2	equ	0xFDD
 43681                           plusw2	equ	0xFDB
 43682                           fsr2h	equ	0xFDA
 43683                           fsr2l	equ	0xFD9
 43684                           status	equ	0xFD8
 43685                           
 43686 ;; *************** function _motor_stop *****************
 43687 ;; Defined at:
 43688 ;;		line 853 in file "motor.c"
 43689 ;; Parameters:    Size  Location     Type
 43690 ;;		None
 43691 ;; Auto vars:     Size  Location     Type
 43692 ;;		None
 43693 ;; Return value:  Size  Location     Type
 43694 ;;                  1    wreg      void 
 43695 ;; Registers used:
 43696 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 43697 ;; Tracked objects:
 43698 ;;		On entry : 0/0
 43699 ;;		On exit  : 0/0
 43700 ;;		Unchanged: 0/0
 43701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43704 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43705 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43706 ;;Total ram usage:        2 bytes
 43707 ;; Hardware stack levels used:    1
 43708 ;; Hardware stack levels required when called:   10
 43709 ;; This function calls:
 43710 ;;		Nothing
 43711 ;; This function is called by:
 43712 ;;		__parse_command_short
 43713 ;;		__encoder_statemachine_arc
 43714 ;;		__encoder_statemachine_manual
 43715 ;; This function uses a non-reentrant model
 43716 ;;
 43717                           
 43718                           	psect	text173
 43719  015748                     __ptext173:
 43720                           	opt stack 0
 43721  015748                     _motor_stop:
 43722                           	opt stack 18
 43723                           
 43724                           ;motor.c: 856: INTCONbits.GIE = 0;
 43725                           
 43726                           ;incstack = 0
 43727  015748  9EF2               	bcf	intcon,7,c	;volatile
 43728                           
 43729                           ;motor.c: 859: motor_move_type=MOTOR_MOVE_TYPE_NORMAL;
 43730  01574A  0E00               	movlw	0
 43731  01574C  0101               	movlb	1	; () banked
 43732  01574E  6F4A               	movwf	_motor_move_type& (0+255),b
 43733                           
 43734                           ; BSR set to: 1
 43735                           ;motor.c: 860: motor_final_stepcount = motor_current_stepcount + motor_steps_lookup[moto
      +                          r_current_speed];
 43736  015750  90D8               	bcf	status,0,c
 43737  015752  3457               	rlcf	_motor_current_speed,w,c	;volatile
 43738  015754  6EF6               	movwf	tblptrl,c
 43739  015756  3458               	rlcf	_motor_current_speed+1,w,c	;volatile
 43740  015758  6EF7               	movwf	tblptrh,c
 43741  01575A  0E61               	movlw	low _motor_steps_lookup
 43742  01575C  26F6               	addwf	tblptrl,f,c
 43743  01575E  0E94               	movlw	high _motor_steps_lookup
 43744  015760  22F7               	addwfc	tblptrh,f,c
 43745  015762                     	if	1	;There are 3 active tblptr bytes
 43746  015762  6AF8               	clrf	tblptru,c
 43747  015764  0E00               	movlw	low (__mediumconst shr (0+16))
 43748  015766  22F8               	addwfc	tblptru,f,c
 43749  015768                     	endif
 43750  015768  0009               	tblrd		*+
 43751  01576A  CFF5 F060          	movff	tablat,??_motor_stop
 43752  01576E  0009               	tblrd		*+
 43753  015770  CFF5 F061          	movff	tablat,??_motor_stop+1
 43754  015774  0100               	movlb	0	; () banked
 43755  015776  5160               	movf	??_motor_stop& (0+255),w,b
 43756  015778  0101               	movlb	1	; () banked
 43757  01577A  251F               	addwf	_motor_current_stepcount& (0+255),w,b	;volatile
 43758  01577C  6F1B               	movwf	_motor_final_stepcount& (0+255),b	;volatile
 43759  01577E  0100               	movlb	0	; () banked
 43760  015780  5161               	movf	(??_motor_stop+1)& (0+255),w,b
 43761  015782  0101               	movlb	1	; () banked
 43762  015784  2120               	addwfc	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 43763  015786  6F1C               	movwf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 43764  015788  0E00               	movlw	0
 43765  01578A  2121               	addwfc	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 43766  01578C  6F1D               	movwf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 43767  01578E  0E00               	movlw	0
 43768  015790  2122               	addwfc	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 43769  015792  6F1E               	movwf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 43770                           
 43771                           ; BSR set to: 1
 43772                           ;motor.c: 863: INTCONbits.GIE = 1;
 43773  015794  8EF2               	bsf	intcon,7,c	;volatile
 43774                           
 43775                           ; BSR set to: 1
 43776  015796  0012               	return		;funcret
 43777  015798                     __end_of_motor_stop:
 43778                           	opt stack 0
 43779                           tosu	equ	0xFFF
 43780                           tosh	equ	0xFFE
 43781                           tosl	equ	0xFFD
 43782                           pclath	equ	0xFFA
 43783                           tblptru	equ	0xFF8
 43784                           tblptrh	equ	0xFF7
 43785                           tblptrl	equ	0xFF6
 43786                           tablat	equ	0xFF5
 43787                           prodh	equ	0xFF4
 43788                           prodl	equ	0xFF3
 43789                           intcon	equ	0xFF2
 43790                           indf0	equ	0xFEF
 43791                           postinc0	equ	0xFEE
 43792                           fsr0h	equ	0xFEA
 43793                           fsr0l	equ	0xFE9
 43794                           wreg	equ	0xFE8
 43795                           indf1	equ	0xFE7
 43796                           postinc1	equ	0xFE6
 43797                           postdec1	equ	0xFE5
 43798                           plusw1	equ	0xFE3
 43799                           fsr1h	equ	0xFE2
 43800                           fsr1l	equ	0xFE1
 43801                           indf2	equ	0xFDF
 43802                           postinc2	equ	0xFDE
 43803                           postdec2	equ	0xFDD
 43804                           plusw2	equ	0xFDB
 43805                           fsr2h	equ	0xFDA
 43806                           fsr2l	equ	0xFD9
 43807                           status	equ	0xFD8
 43808                           
 43809 ;; *************** function _motor_set_zero *****************
 43810 ;; Defined at:
 43811 ;;		line 977 in file "motor.c"
 43812 ;; Parameters:    Size  Location     Type
 43813 ;;  direction       1    wreg     enum E6622
 43814 ;; Auto vars:     Size  Location     Type
 43815 ;;  direction       1   10[BANK0 ] enum E6622
 43816 ;; Return value:  Size  Location     Type
 43817 ;;                  1    wreg      void 
 43818 ;; Registers used:
 43819 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43820 ;; Tracked objects:
 43821 ;;		On entry : 0/0
 43822 ;;		On exit  : 0/0
 43823 ;;		Unchanged: 0/0
 43824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43826 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43828 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43829 ;;Total ram usage:        1 bytes
 43830 ;; Hardware stack levels used:    1
 43831 ;; Hardware stack levels required when called:   13
 43832 ;; This function calls:
 43833 ;;		__motor_move_back_forth
 43834 ;; This function is called by:
 43835 ;;		__parse_command_short
 43836 ;;		__encoder_statemachine_setup
 43837 ;; This function uses a non-reentrant model
 43838 ;;
 43839                           
 43840                           	psect	text174
 43841  015BBA                     __ptext174:
 43842                           	opt stack 0
 43843  015BBA                     _motor_set_zero:
 43844                           	opt stack 15
 43845                           
 43846                           ; BSR set to: 1
 43847                           ;incstack = 0
 43848                           ;motor_set_zero@direction stored from wreg
 43849  015BBA  0100               	movlb	0	; () banked
 43850  015BBC  6F6A               	movwf	motor_set_zero@direction& (0+255),b
 43851                           
 43852                           ;motor.c: 980: os.approach_direction = direction;
 43853  015BBE  C06A  F177         	movff	motor_set_zero@direction,_os+19	;volatile
 43854                           
 43855                           ;motor.c: 981: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 43856  015BC2  0E01               	movlw	1
 43857  015BC4  0101               	movlb	1	; () banked
 43858  015BC6  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 43859                           
 43860                           ; BSR set to: 1
 43861                           ;motor.c: 982: os.current_position_in_steps = 0;
 43862  015BC8  0E00               	movlw	0
 43863  015BCA  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
 43864  015BCC  0E00               	movlw	0
 43865  015BCE  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
 43866  015BD0  0E00               	movlw	0
 43867  015BD2  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
 43868  015BD4  0E00               	movlw	0
 43869  015BD6  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
 43870                           
 43871                           ; BSR set to: 1
 43872                           ;motor.c: 983: os.absolute_position = 0;
 43873  015BD8  0E00               	movlw	0
 43874  015BDA  6F70               	movwf	(_os+12)& (0+255),b	;volatile
 43875  015BDC  0E00               	movlw	0
 43876  015BDE  6F6F               	movwf	(_os+11)& (0+255),b	;volatile
 43877                           
 43878                           ; BSR set to: 1
 43879                           ;motor.c: 984: os.current_position_in_degrees = 0;
 43880  015BE0  0E00               	movlw	0
 43881  015BE2  6F72               	movwf	(_os+14)& (0+255),b	;volatile
 43882  015BE4  0E00               	movlw	0
 43883  015BE6  6F71               	movwf	(_os+13)& (0+255),b	;volatile
 43884                           
 43885                           ; BSR set to: 1
 43886                           ;motor.c: 985: os.divide_position = 0;
 43887  015BE8  0E00               	movlw	0
 43888  015BEA  6F7C               	movwf	(_os+24)& (0+255),b	;volatile
 43889  015BEC  0E00               	movlw	0
 43890  015BEE  6F7B               	movwf	(_os+23)& (0+255),b	;volatile
 43891                           
 43892                           ; BSR set to: 1
 43893                           ;motor.c: 988: _motor_move_back_forth();
 43894  015BF0  ECCC  F09B         	call	__motor_move_back_forth	;wreg free
 43895  015BF4  0012               	return		;funcret
 43896  015BF6                     __end_of_motor_set_zero:
 43897                           	opt stack 0
 43898                           tosu	equ	0xFFF
 43899                           tosh	equ	0xFFE
 43900                           tosl	equ	0xFFD
 43901                           pclath	equ	0xFFA
 43902                           tblptru	equ	0xFF8
 43903                           tblptrh	equ	0xFF7
 43904                           tblptrl	equ	0xFF6
 43905                           tablat	equ	0xFF5
 43906                           prodh	equ	0xFF4
 43907                           prodl	equ	0xFF3
 43908                           intcon	equ	0xFF2
 43909                           indf0	equ	0xFEF
 43910                           postinc0	equ	0xFEE
 43911                           fsr0h	equ	0xFEA
 43912                           fsr0l	equ	0xFE9
 43913                           wreg	equ	0xFE8
 43914                           indf1	equ	0xFE7
 43915                           postinc1	equ	0xFE6
 43916                           postdec1	equ	0xFE5
 43917                           plusw1	equ	0xFE3
 43918                           fsr1h	equ	0xFE2
 43919                           fsr1l	equ	0xFE1
 43920                           indf2	equ	0xFDF
 43921                           postinc2	equ	0xFDE
 43922                           postdec2	equ	0xFDD
 43923                           plusw2	equ	0xFDB
 43924                           fsr2h	equ	0xFDA
 43925                           fsr2l	equ	0xFD9
 43926                           status	equ	0xFD8
 43927                           
 43928 ;; *************** function __motor_move_back_forth *****************
 43929 ;; Defined at:
 43930 ;;		line 296 in file "motor.c"
 43931 ;; Parameters:    Size  Location     Type
 43932 ;;		None
 43933 ;; Auto vars:     Size  Location     Type
 43934 ;;  return_value    1    9[BANK0 ] enum E6639
 43935 ;;  return_value    1    8[BANK0 ] enum E6639
 43936 ;; Return value:  Size  Location     Type
 43937 ;;                  1    wreg      enum E6639
 43938 ;; Registers used:
 43939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43940 ;; Tracked objects:
 43941 ;;		On entry : 0/0
 43942 ;;		On exit  : 0/0
 43943 ;;		Unchanged: 0/0
 43944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43946 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43948 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43949 ;;Total ram usage:        2 bytes
 43950 ;; Hardware stack levels used:    1
 43951 ;; Hardware stack levels required when called:   12
 43952 ;; This function calls:
 43953 ;;		__motor_schedule_command
 43954 ;;		_motor_items_in_cue
 43955 ;; This function is called by:
 43956 ;;		_motor_set_zero
 43957 ;; This function uses a non-reentrant model
 43958 ;;
 43959                           
 43960                           	psect	text175
 43961  013798                     __ptext175:
 43962                           	opt stack 0
 43963  013798                     __motor_move_back_forth:
 43964                           	opt stack 15
 43965                           
 43966                           ;motor.c: 298: motorReturnValue_t return_value_1;;motor.c: 299: motorReturnValue_t retur
      +                          n_value_2;;motor.c: 301: if(os.busy || motor_items_in_cue()!=0)
 43967                           
 43968                           ;incstack = 0
 43969  013798  0101               	movlb	1	; () banked
 43970  01379A  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 43971  01379C  A4D8               	btfss	status,2,c
 43972  01379E  0012               	return	
 43973                           
 43974                           ; BSR set to: 1
 43975  0137A0  EC21  F0B2         	call	_motor_items_in_cue	;wreg free
 43976  0137A4  0900               	iorlw	0
 43977  0137A6  A4D8               	btfss	status,2,c
 43978  0137A8  0012               	return	
 43979                           
 43980                           ;motor.c: 305: };motor.c: 307: if(config.overshoot_in_steps==0)
 43981                           
 43982                           ;motor.c: 302: {;motor.c: 304: return MOTOR_RETURN_VALUE_BUSY;;	Return value of __motor_
      +                          move_back_forth is never used
 43983  0137AA  0101               	movlb	1	; () banked
 43984  0137AC  519A               	movf	(_config+5)& (0+255),w,b
 43985  0137AE  119B               	iorwf	(_config+6)& (0+255),w,b
 43986  0137B0  B4D8               	btfsc	status,2,c
 43987  0137B2  0012               	return	
 43988                           
 43989                           ; BSR set to: 1
 43990                           ;motor.c: 311: };motor.c: 313: if(os.approach_direction==MOTOR_DIRECTION_CW)
 43991                           
 43992                           ; BSR set to: 1
 43993                           
 43994                           ; BSR set to: 1
 43995                           ;motor.c: 308: {;motor.c: 310: return MOTOR_RETURN_VALUE_OK;;	Return value of __motor_mo
      +                          ve_back_forth is never used
 43996  0137B4  0577               	decf	(_os+19)& (0+255),w,b	;volatile
 43997  0137B6  A4D8               	btfss	status,2,c
 43998  0137B8  D022               	goto	l2512
 43999                           
 44000                           ; BSR set to: 1
 44001                           ;motor.c: 314: {;motor.c: 315: return_value_1 = _motor_schedule_command(MOTOR_DIRECTION_
      +                          CCW, config.overshoot_in_steps, 0xFFFF, MOTOR_MOVE_TYPE_NORMAL);
 44002  0137BA  C19A  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 44003  0137BE  C19B  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 44004  0137C2  0100               	movlb	0	; () banked
 44005  0137C4  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 44006  0137C6  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 44007  0137C8  0EFF               	movlw	255
 44008  0137CA  6F65               	movwf	(__motor_schedule_command@speed+1)& (0+255),b
 44009  0137CC  6964               	setf	__motor_schedule_command@speed& (0+255),b
 44010  0137CE  0E00               	movlw	0
 44011  0137D0  6F66               	movwf	__motor_schedule_command@type& (0+255),b
 44012  0137D2  0EFF               	movlw	255
 44013  0137D4  EC06  F090         	call	__motor_schedule_command
 44014  0137D8  0100               	movlb	0	; () banked
 44015  0137DA  6F68               	movwf	__motor_move_back_forth@return_value_1& (0+255),b
 44016                           
 44017                           ;motor.c: 316: return_value_2 = _motor_schedule_command(MOTOR_DIRECTION_CW, config.overs
      +                          hoot_in_steps, 0xFFFF, MOTOR_MOVE_TYPE_NORMAL);
 44018  0137DC  C19A  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 44019  0137E0  C19B  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 44020  0137E4  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 44021  0137E6  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 44022  0137E8  0EFF               	movlw	255
 44023  0137EA  6F65               	movwf	(__motor_schedule_command@speed+1)& (0+255),b
 44024  0137EC  6964               	setf	__motor_schedule_command@speed& (0+255),b
 44025  0137EE  0E00               	movlw	0
 44026  0137F0  6F66               	movwf	__motor_schedule_command@type& (0+255),b
 44027  0137F2  0E01               	movlw	1
 44028  0137F4  EC06  F090         	call	__motor_schedule_command
 44029  0137F8  0100               	movlb	0	; () banked
 44030  0137FA  6F69               	movwf	__motor_move_back_forth@return_value_2& (0+255),b
 44031                           
 44032                           ;motor.c: 317: }
 44033  0137FC  0012               	return	
 44034  0137FE                     l2512:
 44035                           
 44036                           ;motor.c: 318: else;motor.c: 319: {;motor.c: 320: return_value_1 = _motor_schedule_comma
      +                          nd(MOTOR_DIRECTION_CW, config.overshoot_in_steps, 0xFFFF, MOTOR_MOVE_TYPE_NORMAL);
 44037                           
 44038                           ; BSR set to: 0
 44039  0137FE  C19A  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 44040  013802  C19B  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 44041  013806  0100               	movlb	0	; () banked
 44042  013808  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 44043  01380A  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 44044  01380C  0EFF               	movlw	255
 44045  01380E  6F65               	movwf	(__motor_schedule_command@speed+1)& (0+255),b
 44046  013810  6964               	setf	__motor_schedule_command@speed& (0+255),b
 44047  013812  0E00               	movlw	0
 44048  013814  6F66               	movwf	__motor_schedule_command@type& (0+255),b
 44049  013816  0E01               	movlw	1
 44050  013818  EC06  F090         	call	__motor_schedule_command
 44051  01381C  0100               	movlb	0	; () banked
 44052  01381E  6F68               	movwf	__motor_move_back_forth@return_value_1& (0+255),b
 44053                           
 44054                           ;motor.c: 321: return_value_2 = _motor_schedule_command(MOTOR_DIRECTION_CCW, config.over
      +                          shoot_in_steps, 0xFFFF, MOTOR_MOVE_TYPE_NORMAL);
 44055  013820  C19A  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 44056  013824  C19B  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 44057  013828  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 44058  01382A  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 44059  01382C  0EFF               	movlw	255
 44060  01382E  6F65               	movwf	(__motor_schedule_command@speed+1)& (0+255),b
 44061  013830  6964               	setf	__motor_schedule_command@speed& (0+255),b
 44062  013832  0E00               	movlw	0
 44063  013834  6F66               	movwf	__motor_schedule_command@type& (0+255),b
 44064  013836  0EFF               	movlw	255
 44065  013838  EC06  F090         	call	__motor_schedule_command
 44066  01383C  0100               	movlb	0	; () banked
 44067  01383E  6F69               	movwf	__motor_move_back_forth@return_value_2& (0+255),b
 44068                           
 44069                           ; BSR set to: 0
 44070                           ;motor.c: 330: else;motor.c: 331: {;motor.c: 332: return return_value_2;;	Return value o
      +                          f __motor_move_back_forth is never used
 44071                           
 44072                           ; BSR set to: 0
 44073                           ;motor.c: 329: }
 44074                           
 44075                           ; BSR set to: 0
 44076                           ;motor.c: 327: {;motor.c: 328: return return_value_1;;	Return value of __motor_move_back
      +                          _forth is never used
 44077                           
 44078                           ; BSR set to: 0
 44079                           
 44080                           ; BSR set to: 0
 44081  013840  0012               	return	
 44082  013842                     __end_of__motor_move_back_forth:
 44083                           	opt stack 0
 44084                           tosu	equ	0xFFF
 44085                           tosh	equ	0xFFE
 44086                           tosl	equ	0xFFD
 44087                           pclath	equ	0xFFA
 44088                           tblptru	equ	0xFF8
 44089                           tblptrh	equ	0xFF7
 44090                           tblptrl	equ	0xFF6
 44091                           tablat	equ	0xFF5
 44092                           prodh	equ	0xFF4
 44093                           prodl	equ	0xFF3
 44094                           intcon	equ	0xFF2
 44095                           indf0	equ	0xFEF
 44096                           postinc0	equ	0xFEE
 44097                           fsr0h	equ	0xFEA
 44098                           fsr0l	equ	0xFE9
 44099                           wreg	equ	0xFE8
 44100                           indf1	equ	0xFE7
 44101                           postinc1	equ	0xFE6
 44102                           postdec1	equ	0xFE5
 44103                           plusw1	equ	0xFE3
 44104                           fsr1h	equ	0xFE2
 44105                           fsr1l	equ	0xFE1
 44106                           indf2	equ	0xFDF
 44107                           postinc2	equ	0xFDE
 44108                           postdec2	equ	0xFDD
 44109                           plusw2	equ	0xFDB
 44110                           fsr2h	equ	0xFDA
 44111                           fsr2l	equ	0xFD9
 44112                           status	equ	0xFD8
 44113                           
 44114 ;; *************** function _motor_move_endless *****************
 44115 ;; Defined at:
 44116 ;;		line 1109 in file "motor.c"
 44117 ;; Parameters:    Size  Location     Type
 44118 ;;  direction       1    wreg     enum E6622
 44119 ;;  speed           2   44[BANK0 ] unsigned int 
 44120 ;; Auto vars:     Size  Location     Type
 44121 ;;  direction       1   46[BANK0 ] enum E6622
 44122 ;; Return value:  Size  Location     Type
 44123 ;;                  1    wreg      enum E6782
 44124 ;; Registers used:
 44125 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44126 ;; Tracked objects:
 44127 ;;		On entry : 0/0
 44128 ;;		On exit  : 0/0
 44129 ;;		Unchanged: 0/0
 44130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44131 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44132 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44134 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44135 ;;Total ram usage:        3 bytes
 44136 ;; Hardware stack levels used:    1
 44137 ;; Hardware stack levels required when called:   13
 44138 ;; This function calls:
 44139 ;;		__motor_move_steps
 44140 ;; This function is called by:
 44141 ;;		__parse_command_short
 44142 ;;		__encoder_statemachine_manual
 44143 ;; This function uses a non-reentrant model
 44144 ;;
 44145                           
 44146                           	psect	text176
 44147  015FA2                     __ptext176:
 44148                           	opt stack 0
 44149  015FA2                     _motor_move_endless:
 44150                           	opt stack 15
 44151                           
 44152                           ;incstack = 0
 44153                           ;motor_move_endless@direction stored from wreg
 44154  015FA2  0100               	movlb	0	; () banked
 44155  015FA4  6F8E               	movwf	motor_move_endless@direction& (0+255),b
 44156                           
 44157                           ;motor.c: 1111: return _motor_move_steps(direction, 0xFFFFFFFF, speed, MOTOR_OVERSHOOT_N
      +                          O_OVERSHOOT, MOTOR_MOVE_TYPE_ENDLESS);;	Return value of _motor_move_endless is never use
      +                          d
 44158  015FA6  0EFF               	movlw	255
 44159  015FA8  0100               	movlb	0	; () banked
 44160  015FAA  6F7D               	movwf	__motor_move_steps@distance_in_steps& (0+255),b
 44161  015FAC  0EFF               	movlw	255
 44162  015FAE  6F7E               	movwf	(__motor_move_steps@distance_in_steps+1)& (0+255),b
 44163  015FB0  0EFF               	movlw	255
 44164  015FB2  6F7F               	movwf	(__motor_move_steps@distance_in_steps+2)& (0+255),b
 44165  015FB4  0EFF               	movlw	255
 44166  015FB6  6F80               	movwf	(__motor_move_steps@distance_in_steps+3)& (0+255),b
 44167  015FB8  C08C  F081         	movff	motor_move_endless@speed,__motor_move_steps@speed
 44168  015FBC  C08D  F082         	movff	motor_move_endless@speed+1,__motor_move_steps@speed+1
 44169  015FC0  0E01               	movlw	1
 44170  015FC2  6F83               	movwf	__motor_move_steps@overshoot& (0+255),b
 44171  015FC4  0E01               	movlw	1
 44172  015FC6  6F84               	movwf	__motor_move_steps@type& (0+255),b
 44173  015FC8  518E               	movf	motor_move_endless@direction& (0+255),w,b
 44174  015FCA  EC7D  F077         	call	__motor_move_steps
 44175  015FCE  0012               	return	
 44176  015FD0                     __end_of_motor_move_endless:
 44177                           	opt stack 0
 44178                           tosu	equ	0xFFF
 44179                           tosh	equ	0xFFE
 44180                           tosl	equ	0xFFD
 44181                           pclath	equ	0xFFA
 44182                           tblptru	equ	0xFF8
 44183                           tblptrh	equ	0xFF7
 44184                           tblptrl	equ	0xFF6
 44185                           tablat	equ	0xFF5
 44186                           prodh	equ	0xFF4
 44187                           prodl	equ	0xFF3
 44188                           intcon	equ	0xFF2
 44189                           indf0	equ	0xFEF
 44190                           postinc0	equ	0xFEE
 44191                           fsr0h	equ	0xFEA
 44192                           fsr0l	equ	0xFE9
 44193                           wreg	equ	0xFE8
 44194                           indf1	equ	0xFE7
 44195                           postinc1	equ	0xFE6
 44196                           postdec1	equ	0xFE5
 44197                           plusw1	equ	0xFE3
 44198                           fsr1h	equ	0xFE2
 44199                           fsr1l	equ	0xFE1
 44200                           indf2	equ	0xFDF
 44201                           postinc2	equ	0xFDE
 44202                           postdec2	equ	0xFDD
 44203                           plusw2	equ	0xFDB
 44204                           fsr2h	equ	0xFDA
 44205                           fsr2l	equ	0xFD9
 44206                           status	equ	0xFD8
 44207                           
 44208 ;; *************** function _motor_goto_steps *****************
 44209 ;; Defined at:
 44210 ;;		line 1032 in file "motor.c"
 44211 ;; Parameters:    Size  Location     Type
 44212 ;;  direction       1    wreg     enum E6622
 44213 ;;  position        4   50[BANK0 ] unsigned long 
 44214 ;;  speed           2   54[BANK0 ] unsigned int 
 44215 ;;  overshoot       1   56[BANK0 ] enum E6635
 44216 ;; Auto vars:     Size  Location     Type
 44217 ;;  direction       1   61[BANK0 ] enum E6622
 44218 ;;  distance_in_    4   57[BANK0 ] unsigned long 
 44219 ;; Return value:  Size  Location     Type
 44220 ;;                  1    wreg      enum E6782
 44221 ;; Registers used:
 44222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44223 ;; Tracked objects:
 44224 ;;		On entry : 0/0
 44225 ;;		On exit  : 0/0
 44226 ;;		Unchanged: 0/0
 44227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44228 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44229 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44231 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44232 ;;Total ram usage:       12 bytes
 44233 ;; Hardware stack levels used:    1
 44234 ;; Hardware stack levels required when called:   13
 44235 ;; This function calls:
 44236 ;;		__motor_calculate_distance
 44237 ;;		__motor_decide_direction
 44238 ;;		__motor_move_steps
 44239 ;; This function is called by:
 44240 ;;		__parse_command_short
 44241 ;;		_motor_divide_jump
 44242 ;;		_motor_divide_jump_to_nearest
 44243 ;;		__encoder_statemachine_zero
 44244 ;; This function uses a non-reentrant model
 44245 ;;
 44246                           
 44247                           	psect	text177
 44248  013B76                     __ptext177:
 44249                           	opt stack 0
 44250  013B76                     _motor_goto_steps:
 44251                           	opt stack 15
 44252                           
 44253                           ;incstack = 0
 44254                           ;motor_goto_steps@direction stored from wreg
 44255  013B76  0100               	movlb	0	; () banked
 44256  013B78  6F9D               	movwf	motor_goto_steps@direction& (0+255),b
 44257                           
 44258                           ;motor.c: 1034: uint32_t distance_in_steps;;motor.c: 1036: if(position>=config.full_circ
      +                          le_in_steps)
 44259  013B7A  0101               	movlb	1	; () banked
 44260  013B7C  5195               	movf	_config& (0+255),w,b
 44261  013B7E  0100               	movlb	0	; () banked
 44262  013B80  5D92               	subwf	motor_goto_steps@position& (0+255),w,b
 44263  013B82  0101               	movlb	1	; () banked
 44264  013B84  5196               	movf	(_config+1)& (0+255),w,b
 44265  013B86  0100               	movlb	0	; () banked
 44266  013B88  5993               	subwfb	(motor_goto_steps@position+1)& (0+255),w,b
 44267  013B8A  0101               	movlb	1	; () banked
 44268  013B8C  5197               	movf	(_config+2)& (0+255),w,b
 44269  013B8E  0100               	movlb	0	; () banked
 44270  013B90  5994               	subwfb	(motor_goto_steps@position+2)& (0+255),w,b
 44271  013B92  0101               	movlb	1	; () banked
 44272  013B94  5198               	movf	(_config+3)& (0+255),w,b
 44273  013B96  0100               	movlb	0	; () banked
 44274  013B98  5995               	subwfb	(motor_goto_steps@position+3)& (0+255),w,b
 44275  013B9A  B0D8               	btfsc	status,0,c
 44276  013B9C  0012               	return	
 44277                           
 44278                           ; BSR set to: 0
 44279                           ;motor.c: 1040: };motor.c: 1043: if(direction==MOTOR_DIRECTION_SHORTEST)
 44280                           
 44281                           ; BSR set to: 0
 44282                           
 44283                           ; BSR set to: 0
 44284                           ;motor.c: 1037: {;motor.c: 1039: return MOTOR_RETURN_VALUE_INVALID_POSITION;;	Return val
      +                          ue of _motor_goto_steps is never used
 44285  013B9E  519D               	movf	motor_goto_steps@direction& (0+255),w,b
 44286  013BA0  A4D8               	btfss	status,2,c
 44287  013BA2  D00E               	goto	l2671
 44288                           
 44289                           ; BSR set to: 0
 44290                           ;motor.c: 1044: {;motor.c: 1045: direction = _motor_decide_direction(position, overshoot
      +                          );
 44291  013BA4  C092  F07D         	movff	motor_goto_steps@position,__motor_decide_direction@target_position_in_steps
 44292  013BA8  C093  F07E         	movff	motor_goto_steps@position+1,__motor_decide_direction@target_position_in_steps+1
 44293  013BAC  C094  F07F         	movff	motor_goto_steps@position+2,__motor_decide_direction@target_position_in_steps+2
 44294  013BB0  C095  F080         	movff	motor_goto_steps@position+3,__motor_decide_direction@target_position_in_steps+3
 44295  013BB4  C098  F081         	movff	motor_goto_steps@overshoot,__motor_decide_direction@overshoot
 44296  013BB8  ECB7  F07B         	call	__motor_decide_direction	;wreg free
 44297  013BBC  0100               	movlb	0	; () banked
 44298  013BBE  6F9D               	movwf	motor_goto_steps@direction& (0+255),b
 44299  013BC0                     l2671:
 44300                           
 44301                           ; BSR set to: 0
 44302                           ;motor.c: 1046: };motor.c: 1049: distance_in_steps = _motor_calculate_distance(direction
      +                          , position);
 44303                           
 44304                           ; BSR set to: 0
 44305  013BC0  C092  F060         	movff	motor_goto_steps@position,__motor_calculate_distance@target_position
 44306  013BC4  C093  F061         	movff	motor_goto_steps@position+1,__motor_calculate_distance@target_position+1
 44307  013BC8  C094  F062         	movff	motor_goto_steps@position+2,__motor_calculate_distance@target_position+2
 44308  013BCC  C095  F063         	movff	motor_goto_steps@position+3,__motor_calculate_distance@target_position+3
 44309  013BD0  519D               	movf	motor_goto_steps@direction& (0+255),w,b
 44310  013BD2  EC9B  F093         	call	__motor_calculate_distance
 44311  013BD6  C060  F099         	movff	?__motor_calculate_distance,motor_goto_steps@distance_in_steps
 44312  013BDA  C061  F09A         	movff	?__motor_calculate_distance+1,motor_goto_steps@distance_in_steps+1
 44313  013BDE  C062  F09B         	movff	?__motor_calculate_distance+2,motor_goto_steps@distance_in_steps+2
 44314  013BE2  C063  F09C         	movff	?__motor_calculate_distance+3,motor_goto_steps@distance_in_steps+3
 44315                           
 44316                           ;motor.c: 1052: return _motor_move_steps(direction, distance_in_steps, speed, overshoot,
      +                           MOTOR_MOVE_TYPE_NORMAL);;	Return value of _motor_goto_steps is never used
 44317  013BE6  C099  F07D         	movff	motor_goto_steps@distance_in_steps,__motor_move_steps@distance_in_steps
 44318  013BEA  C09A  F07E         	movff	motor_goto_steps@distance_in_steps+1,__motor_move_steps@distance_in_steps+1
 44319  013BEE  C09B  F07F         	movff	motor_goto_steps@distance_in_steps+2,__motor_move_steps@distance_in_steps+2
 44320  013BF2  C09C  F080         	movff	motor_goto_steps@distance_in_steps+3,__motor_move_steps@distance_in_steps+3
 44321  013BF6  C096  F081         	movff	motor_goto_steps@speed,__motor_move_steps@speed
 44322  013BFA  C097  F082         	movff	motor_goto_steps@speed+1,__motor_move_steps@speed+1
 44323  013BFE  C098  F083         	movff	motor_goto_steps@overshoot,__motor_move_steps@overshoot
 44324  013C02  0E00               	movlw	0
 44325  013C04  0100               	movlb	0	; () banked
 44326  013C06  6F84               	movwf	__motor_move_steps@type& (0+255),b
 44327  013C08  519D               	movf	motor_goto_steps@direction& (0+255),w,b
 44328  013C0A  EC7D  F077         	call	__motor_move_steps
 44329  013C0E  0012               	return	
 44330  013C10                     __end_of_motor_goto_steps:
 44331                           	opt stack 0
 44332                           tosu	equ	0xFFF
 44333                           tosh	equ	0xFFE
 44334                           tosl	equ	0xFFD
 44335                           pclath	equ	0xFFA
 44336                           tblptru	equ	0xFF8
 44337                           tblptrh	equ	0xFF7
 44338                           tblptrl	equ	0xFF6
 44339                           tablat	equ	0xFF5
 44340                           prodh	equ	0xFF4
 44341                           prodl	equ	0xFF3
 44342                           intcon	equ	0xFF2
 44343                           indf0	equ	0xFEF
 44344                           postinc0	equ	0xFEE
 44345                           fsr0h	equ	0xFEA
 44346                           fsr0l	equ	0xFE9
 44347                           wreg	equ	0xFE8
 44348                           indf1	equ	0xFE7
 44349                           postinc1	equ	0xFE6
 44350                           postdec1	equ	0xFE5
 44351                           plusw1	equ	0xFE3
 44352                           fsr1h	equ	0xFE2
 44353                           fsr1l	equ	0xFE1
 44354                           indf2	equ	0xFDF
 44355                           postinc2	equ	0xFDE
 44356                           postdec2	equ	0xFDD
 44357                           plusw2	equ	0xFDB
 44358                           fsr2h	equ	0xFDA
 44359                           fsr2l	equ	0xFD9
 44360                           status	equ	0xFD8
 44361                           
 44362 ;; *************** function __motor_decide_direction *****************
 44363 ;; Defined at:
 44364 ;;		line 336 in file "motor.c"
 44365 ;; Parameters:    Size  Location     Type
 44366 ;;  target_posit    4   29[BANK0 ] unsigned long 
 44367 ;;  overshoot       1   33[BANK0 ] enum E6635
 44368 ;; Auto vars:     Size  Location     Type
 44369 ;;  distance_to_    4   46[BANK0 ] unsigned long 
 44370 ;;  distance_to_    4   42[BANK0 ] unsigned long 
 44371 ;;  distance_to_    4   38[BANK0 ] long 
 44372 ;;  distance_to_    4   34[BANK0 ] long 
 44373 ;; Return value:  Size  Location     Type
 44374 ;;                  1    wreg      enum E6622
 44375 ;; Registers used:
 44376 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 44377 ;; Tracked objects:
 44378 ;;		On entry : 0/0
 44379 ;;		On exit  : 0/0
 44380 ;;		Unchanged: 0/0
 44381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44382 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44383 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44385 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44386 ;;Total ram usage:       21 bytes
 44387 ;; Hardware stack levels used:    1
 44388 ;; Hardware stack levels required when called:   12
 44389 ;; This function calls:
 44390 ;;		__motor_calculate_distance
 44391 ;;		__motor_distance_to_limit
 44392 ;; This function is called by:
 44393 ;;		_motor_goto_steps
 44394 ;;		_motor_goto_degrees_float
 44395 ;;		_motor_goto_degrees_int
 44396 ;; This function uses a non-reentrant model
 44397 ;;
 44398                           
 44399                           	psect	text178
 44400  00F76E                     __ptext178:
 44401                           	opt stack 0
 44402  00F76E                     __motor_decide_direction:
 44403                           	opt stack 15
 44404                           
 44405                           ;motor.c: 343: uint32_t distance_to_target_cw;;motor.c: 344: uint32_t distance_to_target
      +                          _ccw;;motor.c: 346: int32_t distance_to_limit_cw;;motor.c: 347: int32_t distance_to_limi
      +                          t_ccw;;motor.c: 350: distance_to_target_cw = _motor_calculate_distance(MOTOR_DIRECTION_C
      +                          W, target_position_in_steps);
 44406                           
 44407                           ;incstack = 0
 44408  00F76E  C07D  F060         	movff	__motor_decide_direction@target_position_in_steps,__motor_calculate_distance@targ
      +                          et_position
 44409  00F772  C07E  F061         	movff	__motor_decide_direction@target_position_in_steps+1,__motor_calculate_distance@ta
      +                          rget_position+1
 44410  00F776  C07F  F062         	movff	__motor_decide_direction@target_position_in_steps+2,__motor_calculate_distance@ta
      +                          rget_position+2
 44411  00F77A  C080  F063         	movff	__motor_decide_direction@target_position_in_steps+3,__motor_calculate_distance@ta
      +                          rget_position+3
 44412  00F77E  0E01               	movlw	1
 44413  00F780  EC9B  F093         	call	__motor_calculate_distance
 44414  00F784  C060  F08A         	movff	?__motor_calculate_distance,__motor_decide_direction@distance_to_target_cw
 44415  00F788  C061  F08B         	movff	?__motor_calculate_distance+1,__motor_decide_direction@distance_to_target_cw+1
 44416  00F78C  C062  F08C         	movff	?__motor_calculate_distance+2,__motor_decide_direction@distance_to_target_cw+2
 44417  00F790  C063  F08D         	movff	?__motor_calculate_distance+3,__motor_decide_direction@distance_to_target_cw+3
 44418                           
 44419                           ;motor.c: 351: distance_to_target_ccw = _motor_calculate_distance(MOTOR_DIRECTION_CCW, t
      +                          arget_position_in_steps);
 44420  00F794  C07D  F060         	movff	__motor_decide_direction@target_position_in_steps,__motor_calculate_distance@targ
      +                          et_position
 44421  00F798  C07E  F061         	movff	__motor_decide_direction@target_position_in_steps+1,__motor_calculate_distance@ta
      +                          rget_position+1
 44422  00F79C  C07F  F062         	movff	__motor_decide_direction@target_position_in_steps+2,__motor_calculate_distance@ta
      +                          rget_position+2
 44423  00F7A0  C080  F063         	movff	__motor_decide_direction@target_position_in_steps+3,__motor_calculate_distance@ta
      +                          rget_position+3
 44424  00F7A4  0EFF               	movlw	255
 44425  00F7A6  EC9B  F093         	call	__motor_calculate_distance
 44426  00F7AA  C060  F08E         	movff	?__motor_calculate_distance,__motor_decide_direction@distance_to_target_ccw
 44427  00F7AE  C061  F08F         	movff	?__motor_calculate_distance+1,__motor_decide_direction@distance_to_target_ccw+1
 44428  00F7B2  C062  F090         	movff	?__motor_calculate_distance+2,__motor_decide_direction@distance_to_target_ccw+2
 44429  00F7B6  C063  F091         	movff	?__motor_calculate_distance+3,__motor_decide_direction@distance_to_target_ccw+3
 44430                           
 44431                           ;motor.c: 354: distance_to_limit_cw = _motor_distance_to_limit(MOTOR_DIRECTION_CW);
 44432  00F7BA  0E01               	movlw	1
 44433  00F7BC  ECA7  F080         	call	__motor_distance_to_limit
 44434  00F7C0  C06C  F082         	movff	?__motor_distance_to_limit,__motor_decide_direction@distance_to_limit_cw
 44435  00F7C4  C06D  F083         	movff	?__motor_distance_to_limit+1,__motor_decide_direction@distance_to_limit_cw+1
 44436  00F7C8  C06E  F084         	movff	?__motor_distance_to_limit+2,__motor_decide_direction@distance_to_limit_cw+2
 44437  00F7CC  C06F  F085         	movff	?__motor_distance_to_limit+3,__motor_decide_direction@distance_to_limit_cw+3
 44438                           
 44439                           ;motor.c: 355: distance_to_limit_ccw = _motor_distance_to_limit(MOTOR_DIRECTION_CCW);
 44440  00F7D0  0EFF               	movlw	255
 44441  00F7D2  ECA7  F080         	call	__motor_distance_to_limit
 44442  00F7D6  C06C  F086         	movff	?__motor_distance_to_limit,__motor_decide_direction@distance_to_limit_ccw
 44443  00F7DA  C06D  F087         	movff	?__motor_distance_to_limit+1,__motor_decide_direction@distance_to_limit_ccw+1
 44444  00F7DE  C06E  F088         	movff	?__motor_distance_to_limit+2,__motor_decide_direction@distance_to_limit_ccw+2
 44445  00F7E2  C06F  F089         	movff	?__motor_distance_to_limit+3,__motor_decide_direction@distance_to_limit_ccw+3
 44446                           
 44447                           ;motor.c: 359: if((distance_to_target_cw>distance_to_limit_cw) && (distance_to_target_cc
      +                          w>distance_to_limit_ccw))
 44448  00F7E6  0100               	movlb	0	; () banked
 44449  00F7E8  518A               	movf	__motor_decide_direction@distance_to_target_cw& (0+255),w,b
 44450  00F7EA  5D82               	subwf	__motor_decide_direction@distance_to_limit_cw& (0+255),w,b
 44451  00F7EC  518B               	movf	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),w,b
 44452  00F7EE  5983               	subwfb	(__motor_decide_direction@distance_to_limit_cw+1)& (0+255),w,b
 44453  00F7F0  518C               	movf	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),w,b
 44454  00F7F2  5984               	subwfb	(__motor_decide_direction@distance_to_limit_cw+2)& (0+255),w,b
 44455  00F7F4  518D               	movf	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),w,b
 44456  00F7F6  5985               	subwfb	(__motor_decide_direction@distance_to_limit_cw+3)& (0+255),w,b
 44457  00F7F8  B0D8               	btfsc	status,0,c
 44458  00F7FA  D00C               	goto	l2518
 44459                           
 44460                           ; BSR set to: 0
 44461  00F7FC  518E               	movf	__motor_decide_direction@distance_to_target_ccw& (0+255),w,b
 44462  00F7FE  5D86               	subwf	__motor_decide_direction@distance_to_limit_ccw& (0+255),w,b
 44463  00F800  518F               	movf	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),w,b
 44464  00F802  5987               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+1)& (0+255),w,b
 44465  00F804  5190               	movf	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),w,b
 44466  00F806  5988               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+2)& (0+255),w,b
 44467  00F808  5191               	movf	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),w,b
 44468  00F80A  5989               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+3)& (0+255),w,b
 44469  00F80C  B0D8               	btfsc	status,0,c
 44470  00F80E  D002               	goto	l2518
 44471                           
 44472                           ; BSR set to: 0
 44473                           ;motor.c: 360: {;motor.c: 361: return MOTOR_DIRECTION_SHORTEST;
 44474  00F810  0E00               	movlw	0
 44475                           
 44476                           ; BSR set to: 0
 44477  00F812  0012               	return	
 44478  00F814                     l2518:
 44479                           
 44480                           ; BSR set to: 0
 44481                           ;motor.c: 362: };motor.c: 363: if(distance_to_target_cw>distance_to_limit_cw)
 44482                           
 44483                           ; BSR set to: 0
 44484  00F814  518A               	movf	__motor_decide_direction@distance_to_target_cw& (0+255),w,b
 44485  00F816  5D82               	subwf	__motor_decide_direction@distance_to_limit_cw& (0+255),w,b
 44486  00F818  518B               	movf	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),w,b
 44487  00F81A  5983               	subwfb	(__motor_decide_direction@distance_to_limit_cw+1)& (0+255),w,b
 44488  00F81C  518C               	movf	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),w,b
 44489  00F81E  5984               	subwfb	(__motor_decide_direction@distance_to_limit_cw+2)& (0+255),w,b
 44490  00F820  518D               	movf	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),w,b
 44491  00F822  5985               	subwfb	(__motor_decide_direction@distance_to_limit_cw+3)& (0+255),w,b
 44492  00F824  B0D8               	btfsc	status,0,c
 44493  00F826  D002               	goto	l2520
 44494                           
 44495                           ; BSR set to: 0
 44496                           ;motor.c: 364: {;motor.c: 365: return MOTOR_DIRECTION_CCW;
 44497  00F828  0EFF               	movlw	255
 44498                           
 44499                           ; BSR set to: 0
 44500  00F82A  0012               	return	
 44501  00F82C                     l2520:
 44502                           
 44503                           ; BSR set to: 0
 44504                           ;motor.c: 366: };motor.c: 367: if(distance_to_target_ccw>distance_to_limit_ccw)
 44505                           
 44506                           ; BSR set to: 0
 44507  00F82C  518E               	movf	__motor_decide_direction@distance_to_target_ccw& (0+255),w,b
 44508  00F82E  5D86               	subwf	__motor_decide_direction@distance_to_limit_ccw& (0+255),w,b
 44509  00F830  518F               	movf	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),w,b
 44510  00F832  5987               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+1)& (0+255),w,b
 44511  00F834  5190               	movf	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),w,b
 44512  00F836  5988               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+2)& (0+255),w,b
 44513  00F838  5191               	movf	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),w,b
 44514  00F83A  5989               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+3)& (0+255),w,b
 44515  00F83C  B0D8               	btfsc	status,0,c
 44516  00F83E  D002               	goto	l2521
 44517                           
 44518                           ; BSR set to: 0
 44519                           ;motor.c: 368: {;motor.c: 369: return MOTOR_DIRECTION_CW;
 44520  00F840  0E01               	movlw	1
 44521                           
 44522                           ; BSR set to: 0
 44523  00F842  0012               	return	
 44524  00F844                     l2521:
 44525                           
 44526                           ; BSR set to: 0
 44527                           ;motor.c: 370: };motor.c: 374: if(overshoot==MOTOR_OVERSHOOT_WITH_OVERSHOOT)
 44528                           
 44529                           ; BSR set to: 0
 44530  00F844  5181               	movf	__motor_decide_direction@overshoot& (0+255),w,b
 44531  00F846  A4D8               	btfss	status,2,c
 44532  00F848  D04E               	goto	l2524
 44533                           
 44534                           ; BSR set to: 0
 44535                           ;motor.c: 375: {;motor.c: 376: if(os.approach_direction==MOTOR_DIRECTION_CW)
 44536  00F84A  0101               	movlb	1	; () banked
 44537  00F84C  0577               	decf	(_os+19)& (0+255),w,b	;volatile
 44538  00F84E  A4D8               	btfss	status,2,c
 44539  00F850  D023               	goto	l2523
 44540                           
 44541                           ; BSR set to: 1
 44542                           ;motor.c: 377: {;motor.c: 379: distance_to_target_ccw += config.overshoot_in_steps;
 44543  00F852  519A               	movf	(_config+5)& (0+255),w,b
 44544  00F854  0100               	movlb	0	; () banked
 44545  00F856  278E               	addwf	__motor_decide_direction@distance_to_target_ccw& (0+255),f,b
 44546  00F858  0101               	movlb	1	; () banked
 44547  00F85A  519B               	movf	(_config+6)& (0+255),w,b
 44548  00F85C  0100               	movlb	0	; () banked
 44549  00F85E  238F               	addwfc	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),f,b
 44550  00F860  0E00               	movlw	0
 44551  00F862  2390               	addwfc	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),f,b
 44552  00F864  0E00               	movlw	0
 44553  00F866  2391               	addwfc	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),f,b
 44554                           
 44555                           ;motor.c: 380: distance_to_target_ccw += config.overshoot_in_steps;
 44556  00F868  0101               	movlb	1	; () banked
 44557  00F86A  519A               	movf	(_config+5)& (0+255),w,b
 44558  00F86C  0100               	movlb	0	; () banked
 44559  00F86E  278E               	addwf	__motor_decide_direction@distance_to_target_ccw& (0+255),f,b
 44560  00F870  0101               	movlb	1	; () banked
 44561  00F872  519B               	movf	(_config+6)& (0+255),w,b
 44562  00F874  0100               	movlb	0	; () banked
 44563  00F876  238F               	addwfc	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),f,b
 44564  00F878  0E00               	movlw	0
 44565  00F87A  2390               	addwfc	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),f,b
 44566  00F87C  0E00               	movlw	0
 44567  00F87E  2391               	addwfc	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),f,b
 44568                           
 44569                           ;motor.c: 381: distance_to_target_ccw += config.overshoot_cost_in_steps;
 44570  00F880  0101               	movlb	1	; () banked
 44571  00F882  519C               	movf	(_config+7)& (0+255),w,b
 44572  00F884  0100               	movlb	0	; () banked
 44573  00F886  278E               	addwf	__motor_decide_direction@distance_to_target_ccw& (0+255),f,b
 44574  00F888  0101               	movlb	1	; () banked
 44575  00F88A  519D               	movf	(_config+8)& (0+255),w,b
 44576  00F88C  0100               	movlb	0	; () banked
 44577  00F88E  238F               	addwfc	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),f,b
 44578  00F890  0E00               	movlw	0
 44579  00F892  2390               	addwfc	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),f,b
 44580  00F894  0E00               	movlw	0
 44581  00F896  2391               	addwfc	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),f,b
 44582  00F898                     l2523:
 44583                           
 44584                           ;motor.c: 382: };motor.c: 383: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 44585                           
 44586                           ; BSR set to: 0
 44587  00F898  0101               	movlb	1	; () banked
 44588  00F89A  2977               	incf	(_os+19)& (0+255),w,b	;volatile
 44589  00F89C  A4D8               	btfss	status,2,c
 44590  00F89E  D023               	goto	l2524
 44591                           
 44592                           ; BSR set to: 1
 44593                           ;motor.c: 384: {;motor.c: 386: distance_to_target_cw += config.overshoot_in_steps;
 44594  00F8A0  519A               	movf	(_config+5)& (0+255),w,b
 44595  00F8A2  0100               	movlb	0	; () banked
 44596  00F8A4  278A               	addwf	__motor_decide_direction@distance_to_target_cw& (0+255),f,b
 44597  00F8A6  0101               	movlb	1	; () banked
 44598  00F8A8  519B               	movf	(_config+6)& (0+255),w,b
 44599  00F8AA  0100               	movlb	0	; () banked
 44600  00F8AC  238B               	addwfc	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),f,b
 44601  00F8AE  0E00               	movlw	0
 44602  00F8B0  238C               	addwfc	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),f,b
 44603  00F8B2  0E00               	movlw	0
 44604  00F8B4  238D               	addwfc	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),f,b
 44605                           
 44606                           ;motor.c: 387: distance_to_target_cw += config.overshoot_in_steps;
 44607  00F8B6  0101               	movlb	1	; () banked
 44608  00F8B8  519A               	movf	(_config+5)& (0+255),w,b
 44609  00F8BA  0100               	movlb	0	; () banked
 44610  00F8BC  278A               	addwf	__motor_decide_direction@distance_to_target_cw& (0+255),f,b
 44611  00F8BE  0101               	movlb	1	; () banked
 44612  00F8C0  519B               	movf	(_config+6)& (0+255),w,b
 44613  00F8C2  0100               	movlb	0	; () banked
 44614  00F8C4  238B               	addwfc	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),f,b
 44615  00F8C6  0E00               	movlw	0
 44616  00F8C8  238C               	addwfc	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),f,b
 44617  00F8CA  0E00               	movlw	0
 44618  00F8CC  238D               	addwfc	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),f,b
 44619                           
 44620                           ;motor.c: 388: distance_to_target_cw += config.overshoot_cost_in_steps;
 44621  00F8CE  0101               	movlb	1	; () banked
 44622  00F8D0  519C               	movf	(_config+7)& (0+255),w,b
 44623  00F8D2  0100               	movlb	0	; () banked
 44624  00F8D4  278A               	addwf	__motor_decide_direction@distance_to_target_cw& (0+255),f,b
 44625  00F8D6  0101               	movlb	1	; () banked
 44626  00F8D8  519D               	movf	(_config+8)& (0+255),w,b
 44627  00F8DA  0100               	movlb	0	; () banked
 44628  00F8DC  238B               	addwfc	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),f,b
 44629  00F8DE  0E00               	movlw	0
 44630  00F8E0  238C               	addwfc	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),f,b
 44631  00F8E2  0E00               	movlw	0
 44632  00F8E4  238D               	addwfc	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),f,b
 44633  00F8E6                     l2524:
 44634                           
 44635                           ;motor.c: 389: };motor.c: 390: };motor.c: 393: if(distance_to_target_ccw<distance_to_tar
      +                          get_cw)
 44636                           
 44637                           ; BSR set to: 0
 44638                           
 44639                           ; BSR set to: 0
 44640  00F8E6  0100               	movlb	0	; () banked
 44641  00F8E8  518A               	movf	__motor_decide_direction@distance_to_target_cw& (0+255),w,b
 44642  00F8EA  5D8E               	subwf	__motor_decide_direction@distance_to_target_ccw& (0+255),w,b
 44643  00F8EC  518B               	movf	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),w,b
 44644  00F8EE  598F               	subwfb	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),w,b
 44645  00F8F0  518C               	movf	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),w,b
 44646  00F8F2  5990               	subwfb	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),w,b
 44647  00F8F4  518D               	movf	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),w,b
 44648  00F8F6  5991               	subwfb	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),w,b
 44649  00F8F8  B0D8               	btfsc	status,0,c
 44650  00F8FA  D002               	goto	l2525
 44651                           
 44652                           ; BSR set to: 0
 44653                           ;motor.c: 394: {;motor.c: 395: return MOTOR_DIRECTION_CCW;
 44654  00F8FC  0EFF               	movlw	255
 44655                           
 44656                           ; BSR set to: 0
 44657                           ;motor.c: 396: }
 44658                           
 44659                           ; BSR set to: 0
 44660  00F8FE  0012               	return	
 44661  00F900                     l2525:
 44662                           
 44663                           ; BSR set to: 0
 44664                           ;motor.c: 397: else;motor.c: 398: {;motor.c: 399: return MOTOR_DIRECTION_CW;
 44665                           
 44666                           ; BSR set to: 0
 44667  00F900  0E01               	movlw	1
 44668                           
 44669                           ; BSR set to: 0
 44670  00F902  0012               	return	
 44671  00F904                     __end_of__motor_decide_direction:
 44672                           	opt stack 0
 44673                           tosu	equ	0xFFF
 44674                           tosh	equ	0xFFE
 44675                           tosl	equ	0xFFD
 44676                           pclath	equ	0xFFA
 44677                           tblptru	equ	0xFF8
 44678                           tblptrh	equ	0xFF7
 44679                           tblptrl	equ	0xFF6
 44680                           tablat	equ	0xFF5
 44681                           prodh	equ	0xFF4
 44682                           prodl	equ	0xFF3
 44683                           intcon	equ	0xFF2
 44684                           indf0	equ	0xFEF
 44685                           postinc0	equ	0xFEE
 44686                           fsr0h	equ	0xFEA
 44687                           fsr0l	equ	0xFE9
 44688                           wreg	equ	0xFE8
 44689                           indf1	equ	0xFE7
 44690                           postinc1	equ	0xFE6
 44691                           postdec1	equ	0xFE5
 44692                           plusw1	equ	0xFE3
 44693                           fsr1h	equ	0xFE2
 44694                           fsr1l	equ	0xFE1
 44695                           indf2	equ	0xFDF
 44696                           postinc2	equ	0xFDE
 44697                           postdec2	equ	0xFDD
 44698                           plusw2	equ	0xFDB
 44699                           fsr2h	equ	0xFDA
 44700                           fsr2l	equ	0xFD9
 44701                           status	equ	0xFD8
 44702                           
 44703 ;; *************** function __motor_calculate_distance *****************
 44704 ;; Defined at:
 44705 ;;		line 482 in file "motor.c"
 44706 ;; Parameters:    Size  Location     Type
 44707 ;;  direction       1    wreg     enum E6622
 44708 ;;  target_posit    4    0[BANK0 ] unsigned long 
 44709 ;; Auto vars:     Size  Location     Type
 44710 ;;  direction       1    8[BANK0 ] enum E6622
 44711 ;;  distance        4    9[BANK0 ] unsigned long 
 44712 ;; Return value:  Size  Location     Type
 44713 ;;                  4    0[BANK0 ] unsigned long 
 44714 ;; Registers used:
 44715 ;;		wreg, status,2, status,0
 44716 ;; Tracked objects:
 44717 ;;		On entry : 0/0
 44718 ;;		On exit  : 0/0
 44719 ;;		Unchanged: 0/0
 44720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44721 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44722 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44723 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44724 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44725 ;;Total ram usage:       13 bytes
 44726 ;; Hardware stack levels used:    1
 44727 ;; Hardware stack levels required when called:   10
 44728 ;; This function calls:
 44729 ;;		Nothing
 44730 ;; This function is called by:
 44731 ;;		__motor_decide_direction
 44732 ;;		_motor_goto_steps
 44733 ;;		_motor_goto_degrees_float
 44734 ;;		_motor_goto_degrees_int
 44735 ;; This function uses a non-reentrant model
 44736 ;;
 44737                           
 44738                           	psect	text179
 44739  012736                     __ptext179:
 44740                           	opt stack 0
 44741  012736                     __motor_calculate_distance:
 44742                           	opt stack 16
 44743                           
 44744                           ; BSR set to: 0
 44745                           ;incstack = 0
 44746                           ;__motor_calculate_distance@direction stored from wreg
 44747  012736  0100               	movlb	0	; () banked
 44748  012738  6F68               	movwf	__motor_calculate_distance@direction& (0+255),b
 44749                           
 44750                           ;motor.c: 484: uint32_t distance;;motor.c: 487: if(direction==MOTOR_DIRECTION_CW)
 44751  01273A  0100               	movlb	0	; () banked
 44752  01273C  0568               	decf	__motor_calculate_distance@direction& (0+255),w,b
 44753  01273E  A4D8               	btfss	status,2,c
 44754  012740  D01C               	goto	l2545
 44755                           
 44756                           ; BSR set to: 0
 44757                           ;motor.c: 488: {;motor.c: 489: distance = target_position - os.current_position_in_steps
      +                          ;
 44758  012742  C16B  F064         	movff	_os+7,??__motor_calculate_distance	;volatile
 44759  012746  C16C  F065         	movff	_os+8,??__motor_calculate_distance+1	;volatile
 44760  01274A  C16D  F066         	movff	_os+9,??__motor_calculate_distance+2	;volatile
 44761  01274E  C16E  F067         	movff	_os+10,??__motor_calculate_distance+3	;volatile
 44762  012752  1F64               	comf	??__motor_calculate_distance& (0+255),f,b
 44763  012754  1F65               	comf	(??__motor_calculate_distance+1)& (0+255),f,b
 44764  012756  1F66               	comf	(??__motor_calculate_distance+2)& (0+255),f,b
 44765  012758  1F67               	comf	(??__motor_calculate_distance+3)& (0+255),f,b
 44766  01275A  2B64               	incf	??__motor_calculate_distance& (0+255),f,b
 44767  01275C  0E00               	movlw	0
 44768  01275E  2365               	addwfc	(??__motor_calculate_distance+1)& (0+255),f,b
 44769  012760  2366               	addwfc	(??__motor_calculate_distance+2)& (0+255),f,b
 44770  012762  2367               	addwfc	(??__motor_calculate_distance+3)& (0+255),f,b
 44771  012764  5160               	movf	__motor_calculate_distance@target_position& (0+255),w,b
 44772  012766  2564               	addwf	??__motor_calculate_distance& (0+255),w,b
 44773  012768  6F69               	movwf	__motor_calculate_distance@distance& (0+255),b
 44774  01276A  5161               	movf	(__motor_calculate_distance@target_position+1)& (0+255),w,b
 44775  01276C  2165               	addwfc	(??__motor_calculate_distance+1)& (0+255),w,b
 44776  01276E  6F6A               	movwf	(__motor_calculate_distance@distance+1)& (0+255),b
 44777  012770  5162               	movf	(__motor_calculate_distance@target_position+2)& (0+255),w,b
 44778  012772  2166               	addwfc	(??__motor_calculate_distance+2)& (0+255),w,b
 44779  012774  6F6B               	movwf	(__motor_calculate_distance@distance+2)& (0+255),b
 44780  012776  5163               	movf	(__motor_calculate_distance@target_position+3)& (0+255),w,b
 44781  012778  D023               	goto	L77
 44782  01277A                     l2545:
 44783                           
 44784                           ; BSR set to: 0
 44785                           ;motor.c: 496: else;motor.c: 497: {;motor.c: 498: distance = os.current_position_in_step
      +                          s - target_position;
 44786                           
 44787                           ; BSR set to: 0
 44788  01277A  C060  F064         	movff	__motor_calculate_distance@target_position,??__motor_calculate_distance
 44789  01277E  C061  F065         	movff	__motor_calculate_distance@target_position+1,??__motor_calculate_distance+1
 44790  012782  C062  F066         	movff	__motor_calculate_distance@target_position+2,??__motor_calculate_distance+2
 44791  012786  C063  F067         	movff	__motor_calculate_distance@target_position+3,??__motor_calculate_distance+3
 44792  01278A  1F64               	comf	??__motor_calculate_distance& (0+255),f,b
 44793  01278C  1F65               	comf	(??__motor_calculate_distance+1)& (0+255),f,b
 44794  01278E  1F66               	comf	(??__motor_calculate_distance+2)& (0+255),f,b
 44795  012790  1F67               	comf	(??__motor_calculate_distance+3)& (0+255),f,b
 44796  012792  2B64               	incf	??__motor_calculate_distance& (0+255),f,b
 44797  012794  0E00               	movlw	0
 44798  012796  2365               	addwfc	(??__motor_calculate_distance+1)& (0+255),f,b
 44799  012798  2366               	addwfc	(??__motor_calculate_distance+2)& (0+255),f,b
 44800  01279A  2367               	addwfc	(??__motor_calculate_distance+3)& (0+255),f,b
 44801  01279C  0101               	movlb	1	; () banked
 44802  01279E  516B               	movf	(_os+7)& (0+255),w,b	;volatile
 44803  0127A0  0100               	movlb	0	; () banked
 44804  0127A2  2564               	addwf	??__motor_calculate_distance& (0+255),w,b
 44805  0127A4  6F69               	movwf	__motor_calculate_distance@distance& (0+255),b
 44806  0127A6  0101               	movlb	1	; () banked
 44807  0127A8  516C               	movf	(_os+8)& (0+255),w,b	;volatile
 44808  0127AA  0100               	movlb	0	; () banked
 44809  0127AC  2165               	addwfc	(??__motor_calculate_distance+1)& (0+255),w,b
 44810  0127AE  6F6A               	movwf	(__motor_calculate_distance@distance+1)& (0+255),b
 44811  0127B0  0101               	movlb	1	; () banked
 44812  0127B2  516D               	movf	(_os+9)& (0+255),w,b	;volatile
 44813  0127B4  0100               	movlb	0	; () banked
 44814  0127B6  2166               	addwfc	(??__motor_calculate_distance+2)& (0+255),w,b
 44815  0127B8  6F6B               	movwf	(__motor_calculate_distance@distance+2)& (0+255),b
 44816  0127BA  0101               	movlb	1	; () banked
 44817  0127BC  516E               	movf	(_os+10)& (0+255),w,b	;volatile
 44818  0127BE  0100               	movlb	0	; () banked
 44819  0127C0                     L77:
 44820  0127C0  2167               	addwfc	(??__motor_calculate_distance+3)& (0+255),w,b
 44821  0127C2  6F6C               	movwf	(__motor_calculate_distance@distance+3)& (0+255),b
 44822                           
 44823                           ;motor.c: 499: if(distance>config.full_circle_in_steps)
 44824  0127C4  5169               	movf	__motor_calculate_distance@distance& (0+255),w,b
 44825  0127C6  0101               	movlb	1	; () banked
 44826  0127C8  5D95               	subwf	_config& (0+255),w,b
 44827  0127CA  0100               	movlb	0	; () banked
 44828  0127CC  516A               	movf	(__motor_calculate_distance@distance+1)& (0+255),w,b
 44829  0127CE  0101               	movlb	1	; () banked
 44830  0127D0  5996               	subwfb	(_config+1)& (0+255),w,b
 44831  0127D2  0100               	movlb	0	; () banked
 44832  0127D4  516B               	movf	(__motor_calculate_distance@distance+2)& (0+255),w,b
 44833  0127D6  0101               	movlb	1	; () banked
 44834  0127D8  5997               	subwfb	(_config+2)& (0+255),w,b
 44835  0127DA  0100               	movlb	0	; () banked
 44836  0127DC  516C               	movf	(__motor_calculate_distance@distance+3)& (0+255),w,b
 44837  0127DE  0101               	movlb	1	; () banked
 44838  0127E0  5998               	subwfb	(_config+3)& (0+255),w,b
 44839  0127E2  B0D8               	btfsc	status,0,c
 44840  0127E4  D00F               	goto	l2548
 44841                           
 44842                           ; BSR set to: 1
 44843                           ;motor.c: 500: {;motor.c: 502: distance += config.full_circle_in_steps;
 44844  0127E6  5195               	movf	_config& (0+255),w,b
 44845  0127E8  0100               	movlb	0	; () banked
 44846  0127EA  2769               	addwf	__motor_calculate_distance@distance& (0+255),f,b
 44847  0127EC  0101               	movlb	1	; () banked
 44848  0127EE  5196               	movf	(_config+1)& (0+255),w,b
 44849  0127F0  0100               	movlb	0	; () banked
 44850  0127F2  236A               	addwfc	(__motor_calculate_distance@distance+1)& (0+255),f,b
 44851  0127F4  0101               	movlb	1	; () banked
 44852  0127F6  5197               	movf	(_config+2)& (0+255),w,b
 44853  0127F8  0100               	movlb	0	; () banked
 44854  0127FA  236B               	addwfc	(__motor_calculate_distance@distance+2)& (0+255),f,b
 44855  0127FC  0101               	movlb	1	; () banked
 44856  0127FE  5198               	movf	(_config+3)& (0+255),w,b
 44857  012800  0100               	movlb	0	; () banked
 44858  012802  236C               	addwfc	(__motor_calculate_distance@distance+3)& (0+255),f,b
 44859  012804                     l2548:
 44860                           
 44861                           ;motor.c: 503: };motor.c: 504: };motor.c: 506: return distance;
 44862                           
 44863                           ; BSR set to: 0
 44864                           
 44865                           ; BSR set to: 0
 44866  012804  C069  F060         	movff	__motor_calculate_distance@distance,?__motor_calculate_distance
 44867  012808  C06A  F061         	movff	__motor_calculate_distance@distance+1,?__motor_calculate_distance+1
 44868  01280C  C06B  F062         	movff	__motor_calculate_distance@distance+2,?__motor_calculate_distance+2
 44869  012810  C06C  F063         	movff	__motor_calculate_distance@distance+3,?__motor_calculate_distance+3
 44870  012814  0012               	return	
 44871  012816                     __end_of__motor_calculate_distance:
 44872                           	opt stack 0
 44873                           tosu	equ	0xFFF
 44874                           tosh	equ	0xFFE
 44875                           tosl	equ	0xFFD
 44876                           pclath	equ	0xFFA
 44877                           tblptru	equ	0xFF8
 44878                           tblptrh	equ	0xFF7
 44879                           tblptrl	equ	0xFF6
 44880                           tablat	equ	0xFF5
 44881                           prodh	equ	0xFF4
 44882                           prodl	equ	0xFF3
 44883                           intcon	equ	0xFF2
 44884                           indf0	equ	0xFEF
 44885                           postinc0	equ	0xFEE
 44886                           fsr0h	equ	0xFEA
 44887                           fsr0l	equ	0xFE9
 44888                           wreg	equ	0xFE8
 44889                           indf1	equ	0xFE7
 44890                           postinc1	equ	0xFE6
 44891                           postdec1	equ	0xFE5
 44892                           plusw1	equ	0xFE3
 44893                           fsr1h	equ	0xFE2
 44894                           fsr1l	equ	0xFE1
 44895                           indf2	equ	0xFDF
 44896                           postinc2	equ	0xFDE
 44897                           postdec2	equ	0xFDD
 44898                           plusw2	equ	0xFDB
 44899                           fsr2h	equ	0xFDA
 44900                           fsr2l	equ	0xFD9
 44901                           status	equ	0xFD8
 44902                           
 44903 ;; *************** function _motor_clear_command_cue *****************
 44904 ;; Defined at:
 44905 ;;		line 613 in file "motor.c"
 44906 ;; Parameters:    Size  Location     Type
 44907 ;;		None
 44908 ;; Auto vars:     Size  Location     Type
 44909 ;;		None
 44910 ;; Return value:  Size  Location     Type
 44911 ;;                  1    wreg      void 
 44912 ;; Registers used:
 44913 ;;		wreg, status,2
 44914 ;; Tracked objects:
 44915 ;;		On entry : 0/0
 44916 ;;		On exit  : 0/0
 44917 ;;		Unchanged: 0/0
 44918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44923 ;;Total ram usage:        0 bytes
 44924 ;; Hardware stack levels used:    1
 44925 ;; Hardware stack levels required when called:   10
 44926 ;; This function calls:
 44927 ;;		Nothing
 44928 ;; This function is called by:
 44929 ;;		__parse_command_short
 44930 ;; This function uses a non-reentrant model
 44931 ;;
 44932                           
 44933                           	psect	text180
 44934  016436                     __ptext180:
 44935                           	opt stack 0
 44936  016436                     _motor_clear_command_cue:
 44937                           	opt stack 17
 44938                           
 44939                           ;motor.c: 616: motor_cue_read_index = 0;
 44940                           
 44941                           ;incstack = 0
 44942  016436  0E00               	movlw	0
 44943  016438  0101               	movlb	1	; () banked
 44944  01643A  6F4C               	movwf	_motor_cue_read_index& (0+255),b
 44945                           
 44946                           ;motor.c: 617: motor_cue_write_index = 0;
 44947  01643C  0E00               	movlw	0
 44948  01643E  6F4B               	movwf	_motor_cue_write_index& (0+255),b
 44949                           
 44950                           ; BSR set to: 1
 44951  016440  0012               	return		;funcret
 44952  016442                     __end_of_motor_clear_command_cue:
 44953                           	opt stack 0
 44954                           tosu	equ	0xFFF
 44955                           tosh	equ	0xFFE
 44956                           tosl	equ	0xFFD
 44957                           pclath	equ	0xFFA
 44958                           tblptru	equ	0xFF8
 44959                           tblptrh	equ	0xFF7
 44960                           tblptrl	equ	0xFF6
 44961                           tablat	equ	0xFF5
 44962                           prodh	equ	0xFF4
 44963                           prodl	equ	0xFF3
 44964                           intcon	equ	0xFF2
 44965                           indf0	equ	0xFEF
 44966                           postinc0	equ	0xFEE
 44967                           fsr0h	equ	0xFEA
 44968                           fsr0l	equ	0xFE9
 44969                           wreg	equ	0xFE8
 44970                           indf1	equ	0xFE7
 44971                           postinc1	equ	0xFE6
 44972                           postdec1	equ	0xFE5
 44973                           plusw1	equ	0xFE3
 44974                           fsr1h	equ	0xFE2
 44975                           fsr1l	equ	0xFE1
 44976                           indf2	equ	0xFDF
 44977                           postinc2	equ	0xFDE
 44978                           postdec2	equ	0xFDD
 44979                           plusw2	equ	0xFDB
 44980                           fsr2h	equ	0xFDA
 44981                           fsr2l	equ	0xFD9
 44982                           status	equ	0xFD8
 44983                           
 44984 ;; *************** function _i2c_eeprom_writeByte *****************
 44985 ;; Defined at:
 44986 ;;		line 190 in file "i2c.c"
 44987 ;; Parameters:    Size  Location     Type
 44988 ;;  address         2   10[BANK0 ] unsigned int 
 44989 ;;  data            1   12[BANK0 ] unsigned char 
 44990 ;; Auto vars:     Size  Location     Type
 44991 ;;  dat             2   17[BANK0 ] unsigned char [2]
 44992 ;;  slave_addres    1   16[BANK0 ] unsigned char 
 44993 ;; Return value:  Size  Location     Type
 44994 ;;                  1    wreg      void 
 44995 ;; Registers used:
 44996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44997 ;; Tracked objects:
 44998 ;;		On entry : 0/0
 44999 ;;		On exit  : 0/0
 45000 ;;		Unchanged: 0/0
 45001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45002 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45003 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45004 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45005 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45006 ;;Total ram usage:        9 bytes
 45007 ;; Hardware stack levels used:    1
 45008 ;; Hardware stack levels required when called:   12
 45009 ;; This function calls:
 45010 ;;		__i2c_eeprom_busy
 45011 ;;		__i2c_write
 45012 ;; This function is called by:
 45013 ;;		__parse_command_short
 45014 ;; This function uses a non-reentrant model
 45015 ;;
 45016                           
 45017                           	psect	text181
 45018  0159A6                     __ptext181:
 45019                           	opt stack 0
 45020  0159A6                     _i2c_eeprom_writeByte:
 45021                           	opt stack 15
 45022                           
 45023                           ;i2c.c: 192: uint8_t slave_address;;i2c.c: 193: uint8_t dat[2];;i2c.c: 196: while(_i2c_e
      +                          eprom_busy());
 45024                           
 45025                           ; BSR set to: 1
 45026                           ;incstack = 0
 45027  0159A6  ECA6  F0B0         	call	__i2c_eeprom_busy	;wreg free
 45028  0159AA  0900               	iorlw	0
 45029  0159AC  A4D8               	btfss	status,2,c
 45030  0159AE  D7FB               	goto	_i2c_eeprom_writeByte
 45031                           
 45032                           ;i2c.c: 198: slave_address = 0b10100000 | ((address&0b0000011100000000)>>7);
 45033  0159B0  C06A  F06D         	movff	i2c_eeprom_writeByte@address,??_i2c_eeprom_writeByte
 45034  0159B4  C06B  F06E         	movff	i2c_eeprom_writeByte@address+1,??_i2c_eeprom_writeByte+1
 45035  0159B8  0E07               	movlw	7
 45036  0159BA  0100               	movlb	0	; () banked
 45037  0159BC  6F6F               	movwf	(??_i2c_eeprom_writeByte+2)& (0+255),b
 45038  0159BE                     u14395:
 45039  0159BE  90D8               	bcf	status,0,c
 45040  0159C0  336E               	rrcf	(??_i2c_eeprom_writeByte+1)& (0+255),f,b
 45041  0159C2  336D               	rrcf	??_i2c_eeprom_writeByte& (0+255),f,b
 45042  0159C4  2F6F               	decfsz	(??_i2c_eeprom_writeByte+2)& (0+255),f,b
 45043  0159C6  D7FB               	goto	u14395
 45044  0159C8  516D               	movf	??_i2c_eeprom_writeByte& (0+255),w,b
 45045  0159CA  0B0E               	andlw	14
 45046  0159CC  09A0               	iorlw	160
 45047  0159CE  6F70               	movwf	i2c_eeprom_writeByte@slave_address& (0+255),b
 45048                           
 45049                           ; BSR set to: 0
 45050                           ;i2c.c: 199: dat[0] = address & 0xFF;
 45051  0159D0  C06A  F071         	movff	i2c_eeprom_writeByte@address,i2c_eeprom_writeByte@dat
 45052                           
 45053                           ; BSR set to: 0
 45054                           ;i2c.c: 200: dat[1] = data;
 45055  0159D4  C06C  F072         	movff	i2c_eeprom_writeByte@data,i2c_eeprom_writeByte@dat+1
 45056                           
 45057                           ; BSR set to: 0
 45058                           ;i2c.c: 202: _i2c_write(slave_address, &dat[0], 2);
 45059  0159D8  0E71               	movlw	low i2c_eeprom_writeByte@dat
 45060  0159DA  6F65               	movwf	__i2c_write@data& (0+255),b
 45061  0159DC  0E00               	movlw	high i2c_eeprom_writeByte@dat
 45062  0159DE  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 45063  0159E0  0E02               	movlw	2
 45064  0159E2  6F67               	movwf	__i2c_write@length& (0+255),b
 45065  0159E4  5170               	movf	i2c_eeprom_writeByte@slave_address& (0+255),w,b
 45066  0159E6  ECCC  F0AB         	call	__i2c_write
 45067  0159EA  0012               	return		;funcret
 45068  0159EC                     __end_of_i2c_eeprom_writeByte:
 45069                           	opt stack 0
 45070                           tosu	equ	0xFFF
 45071                           tosh	equ	0xFFE
 45072                           tosl	equ	0xFFD
 45073                           pclath	equ	0xFFA
 45074                           tblptru	equ	0xFF8
 45075                           tblptrh	equ	0xFF7
 45076                           tblptrl	equ	0xFF6
 45077                           tablat	equ	0xFF5
 45078                           prodh	equ	0xFF4
 45079                           prodl	equ	0xFF3
 45080                           intcon	equ	0xFF2
 45081                           indf0	equ	0xFEF
 45082                           postinc0	equ	0xFEE
 45083                           fsr0h	equ	0xFEA
 45084                           fsr0l	equ	0xFE9
 45085                           wreg	equ	0xFE8
 45086                           indf1	equ	0xFE7
 45087                           postinc1	equ	0xFE6
 45088                           postdec1	equ	0xFE5
 45089                           plusw1	equ	0xFE3
 45090                           fsr1h	equ	0xFE2
 45091                           fsr1l	equ	0xFE1
 45092                           indf2	equ	0xFDF
 45093                           postinc2	equ	0xFDE
 45094                           postdec2	equ	0xFDD
 45095                           plusw2	equ	0xFDB
 45096                           fsr2h	equ	0xFDA
 45097                           fsr2l	equ	0xFD9
 45098                           status	equ	0xFD8
 45099                           
 45100 ;; *************** function __i2c_write *****************
 45101 ;; Defined at:
 45102 ;;		line 86 in file "i2c.c"
 45103 ;; Parameters:    Size  Location     Type
 45104 ;;  slave_addres    1    wreg     unsigned char 
 45105 ;;  data            2    5[BANK0 ] PTR unsigned char 
 45106 ;;		 -> i2c_display_program_custom_character@data_array(11), _ic2_display_set_cgram_address@data_array(3), _ic2_display_
      +set_ddram_address@data_array(2), i2c_display_init@init_sequence(9), 
 45107 ;;		 -> _i2c_display_send_init_sequence@init_sequence(9), i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_
      +readByte@addr(1), 
 45108 ;;		 -> i2c_eeprom_writeByte@dat(2), i2c_adc_start@configuration_byte(1), 
 45109 ;;  length          1    7[BANK0 ] unsigned char 
 45110 ;; Auto vars:     Size  Location     Type
 45111 ;;  slave_addres    1    8[BANK0 ] unsigned char 
 45112 ;;  cntr            1    9[BANK0 ] unsigned char 
 45113 ;; Return value:  Size  Location     Type
 45114 ;;                  1    wreg      void 
 45115 ;; Registers used:
 45116 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45117 ;; Tracked objects:
 45118 ;;		On entry : 0/0
 45119 ;;		On exit  : 0/0
 45120 ;;		Unchanged: 0/0
 45121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45122 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45123 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45125 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45126 ;;Total ram usage:        5 bytes
 45127 ;; Hardware stack levels used:    1
 45128 ;; Hardware stack levels required when called:   11
 45129 ;; This function calls:
 45130 ;;		__i2c_send
 45131 ;;		__i2c_start
 45132 ;;		__i2c_stop
 45133 ;;		__i2c_wait_idle
 45134 ;; This function is called by:
 45135 ;;		_i2c_eeprom_writeByte
 45136 ;;		_i2c_eeprom_read
 45137 ;;		_i2c_display_init
 45138 ;;		__ic2_display_set_ddram_address
 45139 ;;		__ic2_display_set_cgram_address
 45140 ;;		_i2c_display_program_custom_character
 45141 ;;		_i2c_adc_start
 45142 ;;		_i2c_eeprom_readByte
 45143 ;;		__i2c_display_send_init_sequence
 45144 ;; This function uses a non-reentrant model
 45145 ;;
 45146                           
 45147                           	psect	text182
 45148  015798                     __ptext182:
 45149                           	opt stack 0
 45150  015798                     __i2c_write:
 45151                           	opt stack 16
 45152                           
 45153                           ;incstack = 0
 45154                           ;__i2c_write@slave_address stored from wreg
 45155  015798  0100               	movlb	0	; () banked
 45156  01579A  6F68               	movwf	__i2c_write@slave_address& (0+255),b
 45157                           
 45158                           ;i2c.c: 88: uint8_t cntr;;i2c.c: 90: _i2c_wait_idle();
 45159  01579C  EC9D  F0A6         	call	__i2c_wait_idle	;wreg free
 45160                           
 45161                           ;i2c.c: 91: _i2c_start();
 45162  0157A0  EC49  F0B2         	call	__i2c_start	;wreg free
 45163                           
 45164                           ;i2c.c: 92: _i2c_wait_idle();
 45165  0157A4  EC9D  F0A6         	call	__i2c_wait_idle	;wreg free
 45166                           
 45167                           ;i2c.c: 93: _i2c_send(slave_address);
 45168  0157A8  0100               	movlb	0	; () banked
 45169  0157AA  5168               	movf	__i2c_write@slave_address& (0+255),w,b
 45170  0157AC  EC3B  F0B2         	call	__i2c_send
 45171                           
 45172                           ;i2c.c: 94: _i2c_wait_idle();
 45173  0157B0  EC9D  F0A6         	call	__i2c_wait_idle	;wreg free
 45174                           
 45175                           ;i2c.c: 96: for(cntr=0; cntr<length; ++cntr)
 45176  0157B4  0E00               	movlw	0
 45177  0157B6  0100               	movlb	0	; () banked
 45178  0157B8  6F69               	movwf	__i2c_write@cntr& (0+255),b
 45179  0157BA  D00F               	goto	l1163
 45180  0157BC                     
 45181                           ; BSR set to: 0
 45182                           ;i2c.c: 97: {;i2c.c: 98: _i2c_send(data[cntr]);
 45183                           
 45184                           ; BSR set to: 0
 45185  0157BC  5169               	movf	__i2c_write@cntr& (0+255),w,b
 45186  0157BE  0D01               	mullw	1
 45187  0157C0  50F3               	movf	prodl,w,c
 45188  0157C2  2565               	addwf	__i2c_write@data& (0+255),w,b
 45189  0157C4  6ED9               	movwf	fsr2l,c
 45190  0157C6  50F4               	movf	prodh,w,c
 45191  0157C8  2166               	addwfc	(__i2c_write@data+1)& (0+255),w,b
 45192  0157CA  6EDA               	movwf	fsr2h,c
 45193  0157CC  50DF               	movf	indf2,w,c
 45194  0157CE  EC3B  F0B2         	call	__i2c_send
 45195                           
 45196                           ;i2c.c: 99: _i2c_wait_idle();
 45197  0157D2  EC9D  F0A6         	call	__i2c_wait_idle	;wreg free
 45198  0157D6  0100               	movlb	0	; () banked
 45199  0157D8  2B69               	incf	__i2c_write@cntr& (0+255),f,b
 45200  0157DA                     l1163:
 45201                           
 45202                           ; BSR set to: 0
 45203                           
 45204                           ; BSR set to: 0
 45205  0157DA  5167               	movf	__i2c_write@length& (0+255),w,b
 45206  0157DC  5D69               	subwf	__i2c_write@cntr& (0+255),w,b
 45207  0157DE  A0D8               	btfss	status,0,c
 45208  0157E0  D7ED               	goto	l1164
 45209                           
 45210                           ; BSR set to: 0
 45211                           ;i2c.c: 100: };i2c.c: 102: _i2c_stop();
 45212                           
 45213                           ; BSR set to: 0
 45214  0157E2  EC45  F0B2         	call	__i2c_stop	;wreg free
 45215  0157E6  0012               	return		;funcret
 45216  0157E8                     __end_of__i2c_write:
 45217                           	opt stack 0
 45218                           tosu	equ	0xFFF
 45219                           tosh	equ	0xFFE
 45220                           tosl	equ	0xFFD
 45221                           pclath	equ	0xFFA
 45222                           tblptru	equ	0xFF8
 45223                           tblptrh	equ	0xFF7
 45224                           tblptrl	equ	0xFF6
 45225                           tablat	equ	0xFF5
 45226                           prodh	equ	0xFF4
 45227                           prodl	equ	0xFF3
 45228                           intcon	equ	0xFF2
 45229                           indf0	equ	0xFEF
 45230                           postinc0	equ	0xFEE
 45231                           fsr0h	equ	0xFEA
 45232                           fsr0l	equ	0xFE9
 45233                           wreg	equ	0xFE8
 45234                           indf1	equ	0xFE7
 45235                           postinc1	equ	0xFE6
 45236                           postdec1	equ	0xFE5
 45237                           plusw1	equ	0xFE3
 45238                           fsr1h	equ	0xFE2
 45239                           fsr1l	equ	0xFE1
 45240                           indf2	equ	0xFDF
 45241                           postinc2	equ	0xFDE
 45242                           postdec2	equ	0xFDD
 45243                           plusw2	equ	0xFDB
 45244                           fsr2h	equ	0xFDA
 45245                           fsr2l	equ	0xFD9
 45246                           status	equ	0xFD8
 45247                           
 45248 ;; *************** function __i2c_eeprom_busy *****************
 45249 ;; Defined at:
 45250 ;;		line 171 in file "i2c.c"
 45251 ;; Parameters:    Size  Location     Type
 45252 ;;		None
 45253 ;; Auto vars:     Size  Location     Type
 45254 ;;  busy            1    5[BANK0 ] unsigned char 
 45255 ;; Return value:  Size  Location     Type
 45256 ;;                  1    wreg      unsigned char 
 45257 ;; Registers used:
 45258 ;;		wreg, status,2, status,0, cstack
 45259 ;; Tracked objects:
 45260 ;;		On entry : 0/0
 45261 ;;		On exit  : 0/0
 45262 ;;		Unchanged: 0/0
 45263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45265 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45267 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45268 ;;Total ram usage:        1 bytes
 45269 ;; Hardware stack levels used:    1
 45270 ;; Hardware stack levels required when called:   11
 45271 ;; This function calls:
 45272 ;;		__i2c_send
 45273 ;;		__i2c_start
 45274 ;;		__i2c_stop
 45275 ;;		__i2c_wait_idle
 45276 ;; This function is called by:
 45277 ;;		_i2c_eeprom_writeByte
 45278 ;;		_i2c_eeprom_read
 45279 ;;		_i2c_eeprom_readByte
 45280 ;; This function uses a non-reentrant model
 45281 ;;
 45282                           
 45283                           	psect	text183
 45284  01614C                     __ptext183:
 45285                           	opt stack 0
 45286  01614C                     __i2c_eeprom_busy:
 45287                           	opt stack 16
 45288                           
 45289                           ;i2c.c: 173: uint8_t busy;;i2c.c: 174: _i2c_wait_idle();
 45290                           
 45291                           ;incstack = 0
 45292  01614C  EC9D  F0A6         	call	__i2c_wait_idle	;wreg free
 45293                           
 45294                           ;i2c.c: 175: _i2c_start();
 45295  016150  EC49  F0B2         	call	__i2c_start	;wreg free
 45296                           
 45297                           ;i2c.c: 176: _i2c_wait_idle();
 45298  016154  EC9D  F0A6         	call	__i2c_wait_idle	;wreg free
 45299                           
 45300                           ;i2c.c: 177: _i2c_send(0b10100000);
 45301  016158  0EA0               	movlw	160
 45302  01615A  EC3B  F0B2         	call	__i2c_send
 45303                           
 45304                           ;i2c.c: 178: _i2c_wait_idle();
 45305  01615E  EC9D  F0A6         	call	__i2c_wait_idle	;wreg free
 45306                           
 45307                           ;i2c.c: 182: busy = SSP1CON2bits.ACKSTAT;
 45308  016162  0E00               	movlw	0
 45309  016164  BCC5               	btfsc	4037,6,c	;volatile
 45310  016166  0E01               	movlw	1
 45311  016168  0100               	movlb	0	; () banked
 45312  01616A  6F65               	movwf	__i2c_eeprom_busy@busy& (0+255),b
 45313                           
 45314                           ; BSR set to: 0
 45315                           ;i2c.c: 183: _i2c_stop();
 45316  01616C  EC45  F0B2         	call	__i2c_stop	;wreg free
 45317                           
 45318                           ;i2c.c: 185: return 0;
 45319  016170  0E00               	movlw	0
 45320  016172  0012               	return	
 45321  016174                     __end_of__i2c_eeprom_busy:
 45322                           	opt stack 0
 45323                           tosu	equ	0xFFF
 45324                           tosh	equ	0xFFE
 45325                           tosl	equ	0xFFD
 45326                           pclath	equ	0xFFA
 45327                           tblptru	equ	0xFF8
 45328                           tblptrh	equ	0xFF7
 45329                           tblptrl	equ	0xFF6
 45330                           tablat	equ	0xFF5
 45331                           prodh	equ	0xFF4
 45332                           prodl	equ	0xFF3
 45333                           intcon	equ	0xFF2
 45334                           indf0	equ	0xFEF
 45335                           postinc0	equ	0xFEE
 45336                           fsr0h	equ	0xFEA
 45337                           fsr0l	equ	0xFE9
 45338                           wreg	equ	0xFE8
 45339                           indf1	equ	0xFE7
 45340                           postinc1	equ	0xFE6
 45341                           postdec1	equ	0xFE5
 45342                           plusw1	equ	0xFE3
 45343                           fsr1h	equ	0xFE2
 45344                           fsr1l	equ	0xFE1
 45345                           indf2	equ	0xFDF
 45346                           postinc2	equ	0xFDE
 45347                           postdec2	equ	0xFDD
 45348                           plusw2	equ	0xFDB
 45349                           fsr2h	equ	0xFDA
 45350                           fsr2l	equ	0xFD9
 45351                           status	equ	0xFD8
 45352                           
 45353 ;; *************** function __i2c_wait_idle *****************
 45354 ;; Defined at:
 45355 ;;		line 42 in file "i2c.c"
 45356 ;; Parameters:    Size  Location     Type
 45357 ;;		None
 45358 ;; Auto vars:     Size  Location     Type
 45359 ;;		None
 45360 ;; Return value:  Size  Location     Type
 45361 ;;                  1    wreg      void 
 45362 ;; Registers used:
 45363 ;;		wreg, status,2, status,0
 45364 ;; Tracked objects:
 45365 ;;		On entry : 0/0
 45366 ;;		On exit  : 0/0
 45367 ;;		Unchanged: 0/0
 45368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45371 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45372 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45373 ;;Total ram usage:        5 bytes
 45374 ;; Hardware stack levels used:    1
 45375 ;; Hardware stack levels required when called:   10
 45376 ;; This function calls:
 45377 ;;		Nothing
 45378 ;; This function is called by:
 45379 ;;		__i2c_write
 45380 ;;		__i2c_read
 45381 ;;		__i2c_eeprom_busy
 45382 ;;		_i2c_display_write_fixed
 45383 ;;		_i2c_adc_read
 45384 ;;		_i2c_display_write
 45385 ;; This function uses a non-reentrant model
 45386 ;;
 45387                           
 45388                           	psect	text184
 45389  014D3A                     __ptext184:
 45390                           	opt stack 0
 45391  014D3A                     __i2c_wait_idle:
 45392                           	opt stack 16
 45393                           
 45394                           ;i2c.c: 44: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 45395                           
 45396                           ;incstack = 0
 45397  014D3A  A4C7               	btfss	4039,2,c	;volatile
 45398  014D3C  D004               	goto	u11600
 45399  014D3E  0100               	movlb	0	; () banked
 45400  014D40  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 45401  014D42  2B60               	incf	??__i2c_wait_idle& (0+255),f,b
 45402  014D44  D002               	goto	u11608
 45403  014D46                     u11600:
 45404  014D46  0100               	movlb	0	; () banked
 45405  014D48  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 45406  014D4A                     u11608:
 45407  014D4A  A0C5               	btfss	4037,0,c	;volatile
 45408  014D4C  D003               	goto	u11610
 45409  014D4E  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 45410  014D50  2B61               	incf	(??__i2c_wait_idle+1)& (0+255),f,b
 45411  014D52  D002               	goto	u11618
 45412  014D54                     u11610:
 45413  014D54  0100               	movlb	0	; () banked
 45414  014D56  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 45415  014D58                     u11618:
 45416  014D58  A2C5               	btfss	4037,1,c	;volatile
 45417  014D5A  D003               	goto	u11620
 45418  014D5C  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 45419  014D5E  2B62               	incf	(??__i2c_wait_idle+2)& (0+255),f,b
 45420  014D60  D002               	goto	u11628
 45421  014D62                     u11620:
 45422  014D62  0100               	movlb	0	; () banked
 45423  014D64  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 45424  014D66                     u11628:
 45425  014D66  A4C5               	btfss	4037,2,c	;volatile
 45426  014D68  D003               	goto	u11630
 45427  014D6A  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 45428  014D6C  2B63               	incf	(??__i2c_wait_idle+3)& (0+255),f,b
 45429  014D6E  D002               	goto	u11638
 45430  014D70                     u11630:
 45431  014D70  0100               	movlb	0	; () banked
 45432  014D72  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 45433  014D74                     u11638:
 45434  014D74  A6C5               	btfss	4037,3,c	;volatile
 45435  014D76  D003               	goto	u11640
 45436  014D78  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 45437  014D7A  2B64               	incf	(??__i2c_wait_idle+4)& (0+255),f,b
 45438  014D7C  D002               	goto	u11648
 45439  014D7E                     u11640:
 45440  014D7E  0100               	movlb	0	; () banked
 45441  014D80  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 45442  014D82                     u11648:
 45443  014D82  A8C5               	btfss	4037,4,c	;volatile
 45444  014D84  D002               	goto	u11650
 45445  014D86  0E01               	movlw	1
 45446  014D88  D001               	goto	u11656
 45447  014D8A                     u11650:
 45448  014D8A  0E00               	movlw	0
 45449  014D8C                     u11656:
 45450  014D8C  1164               	iorwf	(??__i2c_wait_idle+4)& (0+255),w,b
 45451  014D8E  1163               	iorwf	(??__i2c_wait_idle+3)& (0+255),w,b
 45452  014D90  1162               	iorwf	(??__i2c_wait_idle+2)& (0+255),w,b
 45453  014D92  1161               	iorwf	(??__i2c_wait_idle+1)& (0+255),w,b
 45454  014D94  1160               	iorwf	??__i2c_wait_idle& (0+255),w,b
 45455  014D96  0900               	iorlw	0
 45456  014D98  B4D8               	btfsc	status,2,c
 45457  014D9A  0012               	return	
 45458  014D9C  D7CE               	goto	__i2c_wait_idle
 45459  014D9E                     __end_of__i2c_wait_idle:
 45460                           	opt stack 0
 45461                           tosu	equ	0xFFF
 45462                           tosh	equ	0xFFE
 45463                           tosl	equ	0xFFD
 45464                           pclath	equ	0xFFA
 45465                           tblptru	equ	0xFF8
 45466                           tblptrh	equ	0xFF7
 45467                           tblptrl	equ	0xFF6
 45468                           tablat	equ	0xFF5
 45469                           prodh	equ	0xFF4
 45470                           prodl	equ	0xFF3
 45471                           intcon	equ	0xFF2
 45472                           indf0	equ	0xFEF
 45473                           postinc0	equ	0xFEE
 45474                           fsr0h	equ	0xFEA
 45475                           fsr0l	equ	0xFE9
 45476                           wreg	equ	0xFE8
 45477                           indf1	equ	0xFE7
 45478                           postinc1	equ	0xFE6
 45479                           postdec1	equ	0xFE5
 45480                           plusw1	equ	0xFE3
 45481                           fsr1h	equ	0xFE2
 45482                           fsr1l	equ	0xFE1
 45483                           indf2	equ	0xFDF
 45484                           postinc2	equ	0xFDE
 45485                           postdec2	equ	0xFDD
 45486                           plusw2	equ	0xFDB
 45487                           fsr2h	equ	0xFDA
 45488                           fsr2l	equ	0xFD9
 45489                           status	equ	0xFD8
 45490                           
 45491 ;; *************** function __i2c_stop *****************
 45492 ;; Defined at:
 45493 ;;		line 65 in file "i2c.c"
 45494 ;; Parameters:    Size  Location     Type
 45495 ;;		None
 45496 ;; Auto vars:     Size  Location     Type
 45497 ;;		None
 45498 ;; Return value:  Size  Location     Type
 45499 ;;                  1    wreg      void 
 45500 ;; Registers used:
 45501 ;;		None
 45502 ;; Tracked objects:
 45503 ;;		On entry : 0/0
 45504 ;;		On exit  : 0/0
 45505 ;;		Unchanged: 0/0
 45506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45511 ;;Total ram usage:        0 bytes
 45512 ;; Hardware stack levels used:    1
 45513 ;; Hardware stack levels required when called:   10
 45514 ;; This function calls:
 45515 ;;		Nothing
 45516 ;; This function is called by:
 45517 ;;		__i2c_write
 45518 ;;		__i2c_read
 45519 ;;		__i2c_eeprom_busy
 45520 ;;		_i2c_display_write_fixed
 45521 ;;		_i2c_adc_read
 45522 ;;		_i2c_display_write
 45523 ;; This function uses a non-reentrant model
 45524 ;;
 45525                           
 45526                           	psect	text185
 45527  01648A                     __ptext185:
 45528                           	opt stack 0
 45529  01648A                     __i2c_stop:
 45530                           	opt stack 16
 45531                           
 45532                           ;i2c.c: 67: SSP1CON2bits.PEN = 1;
 45533                           
 45534                           ; BSR set to: 0
 45535                           ;incstack = 0
 45536  01648A  84C5               	bsf	4037,2,c	;volatile
 45537  01648C  A4C5               	btfss	4037,2,c	;volatile
 45538  01648E  0012               	return	
 45539  016490  D7FD               	goto	l1146
 45540  016492                     __end_of__i2c_stop:
 45541                           	opt stack 0
 45542                           tosu	equ	0xFFF
 45543                           tosh	equ	0xFFE
 45544                           tosl	equ	0xFFD
 45545                           pclath	equ	0xFFA
 45546                           tblptru	equ	0xFF8
 45547                           tblptrh	equ	0xFF7
 45548                           tblptrl	equ	0xFF6
 45549                           tablat	equ	0xFF5
 45550                           prodh	equ	0xFF4
 45551                           prodl	equ	0xFF3
 45552                           intcon	equ	0xFF2
 45553                           indf0	equ	0xFEF
 45554                           postinc0	equ	0xFEE
 45555                           fsr0h	equ	0xFEA
 45556                           fsr0l	equ	0xFE9
 45557                           wreg	equ	0xFE8
 45558                           indf1	equ	0xFE7
 45559                           postinc1	equ	0xFE6
 45560                           postdec1	equ	0xFE5
 45561                           plusw1	equ	0xFE3
 45562                           fsr1h	equ	0xFE2
 45563                           fsr1l	equ	0xFE1
 45564                           indf2	equ	0xFDF
 45565                           postinc2	equ	0xFDE
 45566                           postdec2	equ	0xFDD
 45567                           plusw2	equ	0xFDB
 45568                           fsr2h	equ	0xFDA
 45569                           fsr2l	equ	0xFD9
 45570                           status	equ	0xFD8
 45571                           
 45572 ;; *************** function __i2c_start *****************
 45573 ;; Defined at:
 45574 ;;		line 47 in file "i2c.c"
 45575 ;; Parameters:    Size  Location     Type
 45576 ;;		None
 45577 ;; Auto vars:     Size  Location     Type
 45578 ;;		None
 45579 ;; Return value:  Size  Location     Type
 45580 ;;                  1    wreg      void 
 45581 ;; Registers used:
 45582 ;;		None
 45583 ;; Tracked objects:
 45584 ;;		On entry : 0/0
 45585 ;;		On exit  : 0/0
 45586 ;;		Unchanged: 0/0
 45587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45592 ;;Total ram usage:        0 bytes
 45593 ;; Hardware stack levels used:    1
 45594 ;; Hardware stack levels required when called:   10
 45595 ;; This function calls:
 45596 ;;		Nothing
 45597 ;; This function is called by:
 45598 ;;		__i2c_write
 45599 ;;		__i2c_read
 45600 ;;		__i2c_eeprom_busy
 45601 ;;		_i2c_display_write_fixed
 45602 ;;		_i2c_adc_read
 45603 ;;		_i2c_display_write
 45604 ;; This function uses a non-reentrant model
 45605 ;;
 45606                           
 45607                           	psect	text186
 45608  016492                     __ptext186:
 45609                           	opt stack 0
 45610  016492                     __i2c_start:
 45611                           	opt stack 16
 45612                           
 45613                           ;i2c.c: 49: SSP1CON2bits.SEN=1;
 45614                           
 45615                           ;incstack = 0
 45616  016492  80C5               	bsf	4037,0,c	;volatile
 45617  016494  A0C5               	btfss	4037,0,c	;volatile
 45618  016496  0012               	return	
 45619  016498  D7FD               	goto	l1131
 45620  01649A                     __end_of__i2c_start:
 45621                           	opt stack 0
 45622                           tosu	equ	0xFFF
 45623                           tosh	equ	0xFFE
 45624                           tosl	equ	0xFFD
 45625                           pclath	equ	0xFFA
 45626                           tblptru	equ	0xFF8
 45627                           tblptrh	equ	0xFF7
 45628                           tblptrl	equ	0xFF6
 45629                           tablat	equ	0xFF5
 45630                           prodh	equ	0xFF4
 45631                           prodl	equ	0xFF3
 45632                           intcon	equ	0xFF2
 45633                           indf0	equ	0xFEF
 45634                           postinc0	equ	0xFEE
 45635                           fsr0h	equ	0xFEA
 45636                           fsr0l	equ	0xFE9
 45637                           wreg	equ	0xFE8
 45638                           indf1	equ	0xFE7
 45639                           postinc1	equ	0xFE6
 45640                           postdec1	equ	0xFE5
 45641                           plusw1	equ	0xFE3
 45642                           fsr1h	equ	0xFE2
 45643                           fsr1l	equ	0xFE1
 45644                           indf2	equ	0xFDF
 45645                           postinc2	equ	0xFDE
 45646                           postdec2	equ	0xFDD
 45647                           plusw2	equ	0xFDB
 45648                           fsr2h	equ	0xFDA
 45649                           fsr2l	equ	0xFD9
 45650                           status	equ	0xFD8
 45651                           
 45652 ;; *************** function __i2c_send *****************
 45653 ;; Defined at:
 45654 ;;		line 53 in file "i2c.c"
 45655 ;; Parameters:    Size  Location     Type
 45656 ;;  dat             1    wreg     unsigned char 
 45657 ;; Auto vars:     Size  Location     Type
 45658 ;;  dat             1    0[BANK0 ] unsigned char 
 45659 ;; Return value:  Size  Location     Type
 45660 ;;                  1    wreg      void 
 45661 ;; Registers used:
 45662 ;;		wreg
 45663 ;; Tracked objects:
 45664 ;;		On entry : 0/0
 45665 ;;		On exit  : 0/0
 45666 ;;		Unchanged: 0/0
 45667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45669 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45671 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45672 ;;Total ram usage:        1 bytes
 45673 ;; Hardware stack levels used:    1
 45674 ;; Hardware stack levels required when called:   10
 45675 ;; This function calls:
 45676 ;;		Nothing
 45677 ;; This function is called by:
 45678 ;;		__i2c_write
 45679 ;;		__i2c_read
 45680 ;;		__i2c_eeprom_busy
 45681 ;;		_i2c_display_write_fixed
 45682 ;;		_i2c_adc_read
 45683 ;;		_i2c_display_write
 45684 ;; This function uses a non-reentrant model
 45685 ;;
 45686                           
 45687                           	psect	text187
 45688  016476                     __ptext187:
 45689                           	opt stack 0
 45690  016476                     __i2c_send:
 45691                           	opt stack 16
 45692                           
 45693                           ;incstack = 0
 45694                           ;__i2c_send@dat stored from wreg
 45695  016476  0100               	movlb	0	; () banked
 45696  016478  6F60               	movwf	__i2c_send@dat& (0+255),b
 45697                           
 45698                           ;i2c.c: 55: SSP1BUF = dat;
 45699  01647A  C060  FFC9         	movff	__i2c_send@dat,4041	;volatile
 45700  01647E  0012               	return		;funcret
 45701  016480                     __end_of__i2c_send:
 45702                           	opt stack 0
 45703                           tosu	equ	0xFFF
 45704                           tosh	equ	0xFFE
 45705                           tosl	equ	0xFFD
 45706                           pclath	equ	0xFFA
 45707                           tblptru	equ	0xFF8
 45708                           tblptrh	equ	0xFF7
 45709                           tblptrl	equ	0xFF6
 45710                           tablat	equ	0xFF5
 45711                           prodh	equ	0xFF4
 45712                           prodl	equ	0xFF3
 45713                           intcon	equ	0xFF2
 45714                           indf0	equ	0xFEF
 45715                           postinc0	equ	0xFEE
 45716                           fsr0h	equ	0xFEA
 45717                           fsr0l	equ	0xFE9
 45718                           wreg	equ	0xFE8
 45719                           indf1	equ	0xFE7
 45720                           postinc1	equ	0xFE6
 45721                           postdec1	equ	0xFE5
 45722                           plusw1	equ	0xFE3
 45723                           fsr1h	equ	0xFE2
 45724                           fsr1l	equ	0xFE1
 45725                           indf2	equ	0xFDF
 45726                           postinc2	equ	0xFDE
 45727                           postdec2	equ	0xFDD
 45728                           plusw2	equ	0xFDB
 45729                           fsr2h	equ	0xFDA
 45730                           fsr2l	equ	0xFD9
 45731                           status	equ	0xFD8
 45732                           
 45733 ;; *************** function __parse_command_long *****************
 45734 ;; Defined at:
 45735 ;;		line 439 in file "api.c"
 45736 ;; Parameters:    Size  Location     Type
 45737 ;;  data            2   64[BANK0 ] PTR unsigned char 
 45738 ;;		 -> ReceivedDataBuffer(64), 
 45739 ;;  out_buffer      2   66[BANK0 ] PTR unsigned char 
 45740 ;;		 -> ToSendDataBuffer(64), 
 45741 ;;  out_idx_ptr     2   68[BANK0 ] PTR unsigned char 
 45742 ;;		 -> api_parse@out_idx(1), 
 45743 ;; Auto vars:     Size  Location     Type
 45744 ;;  length          1   70[BANK0 ] unsigned char 
 45745 ;; Return value:  Size  Location     Type
 45746 ;;                  1    wreg      unsigned char 
 45747 ;; Registers used:
 45748 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45749 ;; Tracked objects:
 45750 ;;		On entry : 0/0
 45751 ;;		On exit  : 0/0
 45752 ;;		Unchanged: 0/0
 45753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45754 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45755 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45757 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45758 ;;Total ram usage:        7 bytes
 45759 ;; Hardware stack levels used:    1
 45760 ;; Hardware stack levels required when called:   15
 45761 ;; This function calls:
 45762 ;;		__parse_jump_steps
 45763 ;;		__parse_jump_steps_with_overshoot
 45764 ;;		__parse_set_manual_speed
 45765 ;; This function is called by:
 45766 ;;		_api_parse
 45767 ;; This function uses a non-reentrant model
 45768 ;;
 45769                           
 45770                           	psect	text188
 45771  014300                     __ptext188:
 45772                           	opt stack 0
 45773  014300                     __parse_command_long:
 45774                           	opt stack 13
 45775                           
 45776                           ;api.c: 441: uint8_t length = 65;
 45777                           
 45778                           ;incstack = 0
 45779  014300  0E41               	movlw	65
 45780  014302  0100               	movlb	0	; () banked
 45781  014304  6FA6               	movwf	__parse_command_long@length& (0+255),b
 45782                           
 45783                           ;api.c: 443: switch(data[0])
 45784  014306  D02F               	goto	l2365
 45785  014308                     
 45786                           ; BSR set to: 0
 45787                           ;api.c: 450: length = _parse_jump_steps(data, out_buffer, out_idx_ptr);
 45788                           
 45789                           ; BSR set to: 0
 45790  014308  C0A0  F094         	movff	__parse_command_long@data,__parse_jump_steps@data
 45791  01430C  C0A1  F095         	movff	__parse_command_long@data+1,__parse_jump_steps@data+1
 45792  014310  C0A2  F096         	movff	__parse_command_long@out_buffer,__parse_jump_steps@out_buffer
 45793  014314  C0A3  F097         	movff	__parse_command_long@out_buffer+1,__parse_jump_steps@out_buffer+1
 45794  014318  C0A4  F098         	movff	__parse_command_long@out_idx_ptr,__parse_jump_steps@out_idx_ptr
 45795  01431C  C0A5  F099         	movff	__parse_command_long@out_idx_ptr+1,__parse_jump_steps@out_idx_ptr+1
 45796  014320  EC58  F07F         	call	__parse_jump_steps	;wreg free
 45797  014324  D01D               	goto	L53
 45798  014326                     
 45799                           ; BSR set to: 0
 45800                           ;api.c: 454: length = _parse_jump_steps_with_overshoot(data, out_buffer, out_idx_ptr);
 45801                           
 45802                           ; BSR set to: 0
 45803  014326  C0A0  F094         	movff	__parse_command_long@data,__parse_jump_steps_with_overshoot@data
 45804  01432A  C0A1  F095         	movff	__parse_command_long@data+1,__parse_jump_steps_with_overshoot@data+1
 45805  01432E  C0A2  F096         	movff	__parse_command_long@out_buffer,__parse_jump_steps_with_overshoot@out_buffer
 45806  014332  C0A3  F097         	movff	__parse_command_long@out_buffer+1,__parse_jump_steps_with_overshoot@out_buffer+1
 45807  014336  C0A4  F098         	movff	__parse_command_long@out_idx_ptr,__parse_jump_steps_with_overshoot@out_idx_ptr
 45808  01433A  C0A5  F099         	movff	__parse_command_long@out_idx_ptr+1,__parse_jump_steps_with_overshoot@out_idx_ptr+
      +                          1
 45809  01433E  ECAF  F07E         	call	__parse_jump_steps_with_overshoot	;wreg free
 45810  014342  D00E               	goto	L53
 45811  014344                     
 45812                           ; BSR set to: 0
 45813                           ;api.c: 458: length = _parse_set_manual_speed(data, out_buffer, out_idx_ptr);
 45814                           
 45815                           ; BSR set to: 0
 45816  014344  C0A0  F066         	movff	__parse_command_long@data,__parse_set_manual_speed@data
 45817  014348  C0A1  F067         	movff	__parse_command_long@data+1,__parse_set_manual_speed@data+1
 45818  01434C  C0A2  F068         	movff	__parse_command_long@out_buffer,__parse_set_manual_speed@out_buffer
 45819  014350  C0A3  F069         	movff	__parse_command_long@out_buffer+1,__parse_set_manual_speed@out_buffer+1
 45820  014354  C0A4  F06A         	movff	__parse_command_long@out_idx_ptr,__parse_set_manual_speed@out_idx_ptr
 45821  014358  C0A5  F06B         	movff	__parse_command_long@out_idx_ptr+1,__parse_set_manual_speed@out_idx_ptr+1
 45822  01435C  EC48  F0A2         	call	__parse_set_manual_speed	;wreg free
 45823  014360                     L53:
 45824  014360  0100               	movlb	0	; () banked
 45825  014362  6FA6               	movwf	__parse_command_long@length& (0+255),b
 45826                           
 45827                           ; BSR set to: 0
 45828                           ;api.c: 460: }
 45829                           
 45830                           ;api.c: 459: break;
 45831  014364  D00E               	goto	l2367
 45832  014366                     l2365:
 45833                           
 45834                           ; BSR set to: 0
 45835                           
 45836                           ; BSR set to: 0
 45837  014366  C0A0  FFD9         	movff	__parse_command_long@data,fsr2l
 45838  01436A  C0A1  FFDA         	movff	__parse_command_long@data+1,fsr2h
 45839  01436E  50DF               	movf	indf2,w,c
 45840                           
 45841                           ; Switch size 1, requested type "space"
 45842                           ; Number of cases is 3, Range of values is 144 to 146
 45843                           ; switch strategies available:
 45844                           ; Name         Instructions Cycles
 45845                           ; simple_byte           10     6 (average)
 45846                           ;	Chosen strategy is simple_byte
 45847  014370  0A90               	xorlw	144	; case 144
 45848  014372  B4D8               	btfsc	status,2,c
 45849  014374  D7C9               	goto	l2366
 45850  014376  0A01               	xorlw	1	; case 145
 45851  014378  B4D8               	btfsc	status,2,c
 45852  01437A  D7D5               	goto	l2368
 45853  01437C  0A03               	xorlw	3	; case 146
 45854  01437E  B4D8               	btfsc	status,2,c
 45855  014380  D7E1               	goto	l2369
 45856  014382                     l2367:
 45857                           
 45858                           ; BSR set to: 0
 45859                           ;api.c: 464: return length;
 45860                           
 45861                           ; BSR set to: 0
 45862  014382  51A6               	movf	__parse_command_long@length& (0+255),w,b
 45863  014384  0012               	return	
 45864  014386                     __end_of__parse_command_long:
 45865                           	opt stack 0
 45866                           tosu	equ	0xFFF
 45867                           tosh	equ	0xFFE
 45868                           tosl	equ	0xFFD
 45869                           pclath	equ	0xFFA
 45870                           tblptru	equ	0xFF8
 45871                           tblptrh	equ	0xFF7
 45872                           tblptrl	equ	0xFF6
 45873                           tablat	equ	0xFF5
 45874                           prodh	equ	0xFF4
 45875                           prodl	equ	0xFF3
 45876                           intcon	equ	0xFF2
 45877                           indf0	equ	0xFEF
 45878                           postinc0	equ	0xFEE
 45879                           fsr0h	equ	0xFEA
 45880                           fsr0l	equ	0xFE9
 45881                           wreg	equ	0xFE8
 45882                           indf1	equ	0xFE7
 45883                           postinc1	equ	0xFE6
 45884                           postdec1	equ	0xFE5
 45885                           plusw1	equ	0xFE3
 45886                           fsr1h	equ	0xFE2
 45887                           fsr1l	equ	0xFE1
 45888                           indf2	equ	0xFDF
 45889                           postinc2	equ	0xFDE
 45890                           postdec2	equ	0xFDD
 45891                           plusw2	equ	0xFDB
 45892                           fsr2h	equ	0xFDA
 45893                           fsr2l	equ	0xFD9
 45894                           status	equ	0xFD8
 45895                           
 45896 ;; *************** function __parse_set_manual_speed *****************
 45897 ;; Defined at:
 45898 ;;		line 559 in file "api.c"
 45899 ;; Parameters:    Size  Location     Type
 45900 ;;  data            2    6[BANK0 ] PTR unsigned char 
 45901 ;;		 -> ReceivedDataBuffer(64), 
 45902 ;;  out_buffer      2    8[BANK0 ] PTR unsigned char 
 45903 ;;		 -> ToSendDataBuffer(64), 
 45904 ;;  out_idx_ptr     2   10[BANK0 ] PTR unsigned char 
 45905 ;;		 -> api_parse@out_idx(1), 
 45906 ;; Auto vars:     Size  Location     Type
 45907 ;;  new_speed       2   13[BANK0 ] unsigned int 
 45908 ;; Return value:  Size  Location     Type
 45909 ;;                  1    wreg      unsigned char 
 45910 ;; Registers used:
 45911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45912 ;; Tracked objects:
 45913 ;;		On entry : 0/0
 45914 ;;		On exit  : 0/0
 45915 ;;		Unchanged: 0/0
 45916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45917 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45918 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45919 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45920 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45921 ;;Total ram usage:        9 bytes
 45922 ;; Hardware stack levels used:    1
 45923 ;; Hardware stack levels required when called:   12
 45924 ;; This function calls:
 45925 ;;		_motor_set_manual_speed
 45926 ;; This function is called by:
 45927 ;;		__parse_command_long
 45928 ;; This function uses a non-reentrant model
 45929 ;;
 45930                           
 45931                           	psect	text189
 45932  014490                     __ptext189:
 45933                           	opt stack 0
 45934  014490                     __parse_set_manual_speed:
 45935                           	opt stack 15
 45936                           
 45937                           ;api.c: 563: uint16_t new_speed;;api.c: 565: new_speed = data[1];
 45938                           
 45939                           ; BSR set to: 0
 45940                           ;incstack = 0
 45941  014490  0100               	movlb	0	; () banked
 45942  014492  EE20 F001          	lfsr	2,1
 45943  014496  5166               	movf	__parse_set_manual_speed@data& (0+255),w,b
 45944  014498  26D9               	addwf	fsr2l,f,c
 45945  01449A  5167               	movf	(__parse_set_manual_speed@data+1)& (0+255),w,b
 45946  01449C  22DA               	addwfc	fsr2h,f,c
 45947  01449E  50DF               	movf	indf2,w,c
 45948  0144A0  6F6C               	movwf	??__parse_set_manual_speed& (0+255),b
 45949  0144A2  516C               	movf	??__parse_set_manual_speed& (0+255),w,b
 45950  0144A4  6F6D               	movwf	__parse_set_manual_speed@new_speed& (0+255),b
 45951  0144A6  6B6E               	clrf	(__parse_set_manual_speed@new_speed+1)& (0+255),b
 45952                           
 45953                           ; BSR set to: 0
 45954                           ;api.c: 566: new_speed <<= 8;
 45955  0144A8  516D               	movf	__parse_set_manual_speed@new_speed& (0+255),w,b
 45956  0144AA  6F6E               	movwf	(__parse_set_manual_speed@new_speed+1)& (0+255),b
 45957  0144AC  6B6D               	clrf	__parse_set_manual_speed@new_speed& (0+255),b
 45958                           
 45959                           ; BSR set to: 0
 45960                           ;api.c: 567: new_speed |= data[2];
 45961  0144AE  EE20 F002          	lfsr	2,2
 45962  0144B2  5166               	movf	__parse_set_manual_speed@data& (0+255),w,b
 45963  0144B4  26D9               	addwf	fsr2l,f,c
 45964  0144B6  5167               	movf	(__parse_set_manual_speed@data+1)& (0+255),w,b
 45965  0144B8  22DA               	addwfc	fsr2h,f,c
 45966  0144BA  50DF               	movf	indf2,w,c
 45967  0144BC  6F6C               	movwf	??__parse_set_manual_speed& (0+255),b
 45968  0144BE  516C               	movf	??__parse_set_manual_speed& (0+255),w,b
 45969  0144C0  136D               	iorwf	__parse_set_manual_speed@new_speed& (0+255),f,b
 45970                           
 45971                           ; BSR set to: 0
 45972                           ;api.c: 569: motor_set_manual_speed(new_speed);
 45973  0144C2  C06D  F062         	movff	__parse_set_manual_speed@new_speed,motor_set_manual_speed@new_speed
 45974  0144C6  C06E  F063         	movff	__parse_set_manual_speed@new_speed+1,motor_set_manual_speed@new_speed+1
 45975  0144CA  EC7C  F0A4         	call	_motor_set_manual_speed	;wreg free
 45976                           
 45977                           ;api.c: 572: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 45978  0144CE  C06A  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 45979  0144D2  C06B  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 45980  0144D6  50DF               	movf	indf2,w,c
 45981  0144D8  B4D8               	btfsc	status,2,c
 45982  0144DA  D01A               	goto	l2385
 45983  0144DC  C06A  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 45984  0144E0  C06B  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 45985  0144E4  0E3F               	movlw	63
 45986  0144E6  60DF               	cpfslt	indf2,c
 45987  0144E8  D013               	goto	l2385
 45988                           
 45989                           ;api.c: 573: {;api.c: 574: out_buffer[(*out_idx_ptr)++] = COMMAND_SET_MANUAL_SPEED;
 45990  0144EA  C06A  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 45991  0144EE  C06B  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 45992  0144F2  CFDF F06C          	movff	indf2,??__parse_set_manual_speed
 45993  0144F6  0E01               	movlw	1
 45994  0144F8  26DF               	addwf	indf2,f,c
 45995  0144FA  0100               	movlb	0	; () banked
 45996  0144FC  516C               	movf	??__parse_set_manual_speed& (0+255),w,b
 45997  0144FE  0D01               	mullw	1
 45998  014500  50F3               	movf	prodl,w,c
 45999  014502  2568               	addwf	__parse_set_manual_speed@out_buffer& (0+255),w,b
 46000  014504  6ED9               	movwf	fsr2l,c
 46001  014506  50F4               	movf	prodh,w,c
 46002  014508  2169               	addwfc	(__parse_set_manual_speed@out_buffer+1)& (0+255),w,b
 46003  01450A  6EDA               	movwf	fsr2h,c
 46004  01450C  0E92               	movlw	146
 46005  01450E  6EDF               	movwf	indf2,c
 46006  014510                     l2385:
 46007                           
 46008                           ;api.c: 575: };api.c: 577: return 3;
 46009                           
 46010                           ; BSR set to: 0
 46011  014510  0E03               	movlw	3
 46012  014512  0012               	return	
 46013  014514                     __end_of__parse_set_manual_speed:
 46014                           	opt stack 0
 46015                           tosu	equ	0xFFF
 46016                           tosh	equ	0xFFE
 46017                           tosl	equ	0xFFD
 46018                           pclath	equ	0xFFA
 46019                           tblptru	equ	0xFF8
 46020                           tblptrh	equ	0xFF7
 46021                           tblptrl	equ	0xFF6
 46022                           tablat	equ	0xFF5
 46023                           prodh	equ	0xFF4
 46024                           prodl	equ	0xFF3
 46025                           intcon	equ	0xFF2
 46026                           indf0	equ	0xFEF
 46027                           postinc0	equ	0xFEE
 46028                           fsr0h	equ	0xFEA
 46029                           fsr0l	equ	0xFE9
 46030                           wreg	equ	0xFE8
 46031                           indf1	equ	0xFE7
 46032                           postinc1	equ	0xFE6
 46033                           postdec1	equ	0xFE5
 46034                           plusw1	equ	0xFE3
 46035                           fsr1h	equ	0xFE2
 46036                           fsr1l	equ	0xFE1
 46037                           indf2	equ	0xFDF
 46038                           postinc2	equ	0xFDE
 46039                           postdec2	equ	0xFDD
 46040                           plusw2	equ	0xFDB
 46041                           fsr2h	equ	0xFDA
 46042                           fsr2l	equ	0xFD9
 46043                           status	equ	0xFD8
 46044                           
 46045 ;; *************** function _motor_set_manual_speed *****************
 46046 ;; Defined at:
 46047 ;;		line 882 in file "motor.c"
 46048 ;; Parameters:    Size  Location     Type
 46049 ;;  new_speed       2    2[BANK0 ] unsigned int 
 46050 ;; Auto vars:     Size  Location     Type
 46051 ;;  old_speed       2    4[BANK0 ] unsigned int 
 46052 ;; Return value:  Size  Location     Type
 46053 ;;                  1    wreg      void 
 46054 ;; Registers used:
 46055 ;;		wreg, status,2, status,0, cstack
 46056 ;; Tracked objects:
 46057 ;;		On entry : 0/0
 46058 ;;		On exit  : 0/0
 46059 ;;		Unchanged: 0/0
 46060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46061 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46062 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46064 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46065 ;;Total ram usage:        4 bytes
 46066 ;; Hardware stack levels used:    1
 46067 ;; Hardware stack levels required when called:   11
 46068 ;; This function calls:
 46069 ;;		_motor_change_speed
 46070 ;; This function is called by:
 46071 ;;		__parse_set_manual_speed
 46072 ;;		_motor_increase_manual_speed
 46073 ;;		_motor_decrease_manual_speed
 46074 ;; This function uses a non-reentrant model
 46075 ;;
 46076                           
 46077                           	psect	text190
 46078  0148F8                     __ptext190:
 46079                           	opt stack 0
 46080  0148F8                     _motor_set_manual_speed:
 46081                           	opt stack 16
 46082                           
 46083                           ;motor.c: 884: uint16_t old_speed;;motor.c: 885: old_speed = os.manual_speed;
 46084                           
 46085                           ;incstack = 0
 46086  0148F8  C188  F064         	movff	_os+36,motor_set_manual_speed@old_speed	;volatile
 46087  0148FC  C189  F065         	movff	_os+37,motor_set_manual_speed@old_speed+1	;volatile
 46088                           
 46089                           ;motor.c: 887: if(new_speed>config.maximum_speed_manual)
 46090  014900  0100               	movlb	0	; () banked
 46091  014902  5162               	movf	motor_set_manual_speed@new_speed& (0+255),w,b
 46092  014904  0101               	movlb	1	; () banked
 46093  014906  5DA8               	subwf	(_config+19)& (0+255),w,b
 46094  014908  0100               	movlb	0	; () banked
 46095  01490A  5163               	movf	(motor_set_manual_speed@new_speed+1)& (0+255),w,b
 46096  01490C  0101               	movlb	1	; () banked
 46097  01490E  59A9               	subwfb	(_config+20)& (0+255),w,b
 46098  014910  B0D8               	btfsc	status,0,c
 46099  014912  D005               	goto	l2631
 46100                           
 46101                           ; BSR set to: 1
 46102                           ;motor.c: 888: {;motor.c: 889: os.manual_speed = config.maximum_speed_manual;
 46103  014914  C1A8  F188         	movff	_config+19,_os+36	;volatile
 46104  014918  C1A9  F189         	movff	_config+20,_os+37	;volatile
 46105                           
 46106                           ;motor.c: 890: }
 46107  01491C  D012               	goto	l2634
 46108  01491E                     l2631:
 46109                           
 46110                           ; BSR set to: 1
 46111                           ;motor.c: 891: else if(new_speed<config.minimum_speed)
 46112                           
 46113                           ; BSR set to: 1
 46114  01491E  519E               	movf	(_config+9)& (0+255),w,b
 46115  014920  0100               	movlb	0	; () banked
 46116  014922  5D62               	subwf	motor_set_manual_speed@new_speed& (0+255),w,b
 46117  014924  0101               	movlb	1	; () banked
 46118  014926  519F               	movf	(_config+10)& (0+255),w,b
 46119  014928  0100               	movlb	0	; () banked
 46120  01492A  5963               	subwfb	(motor_set_manual_speed@new_speed+1)& (0+255),w,b
 46121  01492C  B0D8               	btfsc	status,0,c
 46122  01492E  D005               	goto	l2633
 46123                           
 46124                           ; BSR set to: 0
 46125                           ;motor.c: 892: {;motor.c: 893: os.manual_speed = config.minimum_speed;
 46126  014930  C19E  F188         	movff	_config+9,_os+36	;volatile
 46127  014934  C19F  F189         	movff	_config+10,_os+37	;volatile
 46128                           
 46129                           ;motor.c: 894: }
 46130  014938  D004               	goto	l2634
 46131  01493A                     l2633:
 46132                           
 46133                           ; BSR set to: 0
 46134                           ;motor.c: 895: else;motor.c: 896: {;motor.c: 897: os.manual_speed = new_speed;
 46135  01493A  C062  F188         	movff	motor_set_manual_speed@new_speed,_os+36	;volatile
 46136  01493E  C063  F189         	movff	motor_set_manual_speed@new_speed+1,_os+37	;volatile
 46137  014942                     l2634:
 46138                           
 46139                           ;motor.c: 898: };motor.c: 902: if(os.busy && motor_maximum_speed==old_speed)
 46140                           
 46141                           ; BSR set to: 0
 46142                           
 46143                           ; BSR set to: 0
 46144  014942  0101               	movlb	1	; () banked
 46145  014944  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 46146  014946  B4D8               	btfsc	status,2,c
 46147  014948  0012               	return	
 46148                           
 46149                           ; BSR set to: 1
 46150  01494A  0100               	movlb	0	; () banked
 46151  01494C  5164               	movf	motor_set_manual_speed@old_speed& (0+255),w,b
 46152  01494E  0101               	movlb	1	; () banked
 46153  014950  1934               	xorwf	_motor_maximum_speed& (0+255),w,b
 46154  014952  E10D               	bnz	l2636
 46155  014954  0100               	movlb	0	; () banked
 46156  014956  5165               	movf	(motor_set_manual_speed@old_speed+1)& (0+255),w,b
 46157  014958  0101               	movlb	1	; () banked
 46158  01495A  1935               	xorwf	(_motor_maximum_speed+1)& (0+255),w,b
 46159  01495C  A4D8               	btfss	status,2,c
 46160  01495E  0012               	return	
 46161                           
 46162                           ; BSR set to: 1
 46163                           ;motor.c: 903: {;motor.c: 904: motor_change_speed(os.manual_speed);
 46164  014960  C188  F060         	movff	_os+36,motor_change_speed@new_speed	;volatile
 46165  014964  C189  F061         	movff	_os+37,motor_change_speed@new_speed+1	;volatile
 46166  014968  EC40  F0B2         	call	_motor_change_speed	;wreg free
 46167  01496C  0012               	return	
 46168  01496E                     l2636:
 46169  01496E  0012               	return		;funcret
 46170  014970                     __end_of_motor_set_manual_speed:
 46171                           	opt stack 0
 46172                           tosu	equ	0xFFF
 46173                           tosh	equ	0xFFE
 46174                           tosl	equ	0xFFD
 46175                           pclath	equ	0xFFA
 46176                           tblptru	equ	0xFF8
 46177                           tblptrh	equ	0xFF7
 46178                           tblptrl	equ	0xFF6
 46179                           tablat	equ	0xFF5
 46180                           prodh	equ	0xFF4
 46181                           prodl	equ	0xFF3
 46182                           intcon	equ	0xFF2
 46183                           indf0	equ	0xFEF
 46184                           postinc0	equ	0xFEE
 46185                           fsr0h	equ	0xFEA
 46186                           fsr0l	equ	0xFE9
 46187                           wreg	equ	0xFE8
 46188                           indf1	equ	0xFE7
 46189                           postinc1	equ	0xFE6
 46190                           postdec1	equ	0xFE5
 46191                           plusw1	equ	0xFE3
 46192                           fsr1h	equ	0xFE2
 46193                           fsr1l	equ	0xFE1
 46194                           indf2	equ	0xFDF
 46195                           postinc2	equ	0xFDE
 46196                           postdec2	equ	0xFDD
 46197                           plusw2	equ	0xFDB
 46198                           fsr2h	equ	0xFDA
 46199                           fsr2l	equ	0xFD9
 46200                           status	equ	0xFD8
 46201                           
 46202 ;; *************** function _motor_change_speed *****************
 46203 ;; Defined at:
 46204 ;;		line 908 in file "motor.c"
 46205 ;; Parameters:    Size  Location     Type
 46206 ;;  new_speed       2    0[BANK0 ] unsigned int 
 46207 ;; Auto vars:     Size  Location     Type
 46208 ;;		None
 46209 ;; Return value:  Size  Location     Type
 46210 ;;                  1    wreg      void 
 46211 ;; Registers used:
 46212 ;;		None
 46213 ;; Tracked objects:
 46214 ;;		On entry : 0/0
 46215 ;;		On exit  : 0/0
 46216 ;;		Unchanged: 0/0
 46217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46218 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46221 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46222 ;;Total ram usage:        2 bytes
 46223 ;; Hardware stack levels used:    1
 46224 ;; Hardware stack levels required when called:   10
 46225 ;; This function calls:
 46226 ;;		Nothing
 46227 ;; This function is called by:
 46228 ;;		_motor_set_manual_speed
 46229 ;;		__encoder_statemachine_arc
 46230 ;; This function uses a non-reentrant model
 46231 ;;
 46232                           
 46233                           	psect	text191
 46234  016480                     __ptext191:
 46235                           	opt stack 0
 46236  016480                     _motor_change_speed:
 46237                           	opt stack 16
 46238                           
 46239                           ;motor.c: 910: motor_maximum_speed = new_speed;
 46240                           
 46241                           ;incstack = 0
 46242  016480  C060  F134         	movff	motor_change_speed@new_speed,_motor_maximum_speed
 46243  016484  C061  F135         	movff	motor_change_speed@new_speed+1,_motor_maximum_speed+1
 46244  016488  0012               	return		;funcret
 46245  01648A                     __end_of_motor_change_speed:
 46246                           	opt stack 0
 46247                           tosu	equ	0xFFF
 46248                           tosh	equ	0xFFE
 46249                           tosl	equ	0xFFD
 46250                           pclath	equ	0xFFA
 46251                           tblptru	equ	0xFF8
 46252                           tblptrh	equ	0xFF7
 46253                           tblptrl	equ	0xFF6
 46254                           tablat	equ	0xFF5
 46255                           prodh	equ	0xFF4
 46256                           prodl	equ	0xFF3
 46257                           intcon	equ	0xFF2
 46258                           indf0	equ	0xFEF
 46259                           postinc0	equ	0xFEE
 46260                           fsr0h	equ	0xFEA
 46261                           fsr0l	equ	0xFE9
 46262                           wreg	equ	0xFE8
 46263                           indf1	equ	0xFE7
 46264                           postinc1	equ	0xFE6
 46265                           postdec1	equ	0xFE5
 46266                           plusw1	equ	0xFE3
 46267                           fsr1h	equ	0xFE2
 46268                           fsr1l	equ	0xFE1
 46269                           indf2	equ	0xFDF
 46270                           postinc2	equ	0xFDE
 46271                           postdec2	equ	0xFDD
 46272                           plusw2	equ	0xFDB
 46273                           fsr2h	equ	0xFDA
 46274                           fsr2l	equ	0xFD9
 46275                           status	equ	0xFD8
 46276                           
 46277 ;; *************** function __parse_jump_steps_with_overshoot *****************
 46278 ;; Defined at:
 46279 ;;		line 525 in file "api.c"
 46280 ;; Parameters:    Size  Location     Type
 46281 ;;  data            2   52[BANK0 ] PTR unsigned char 
 46282 ;;		 -> ReceivedDataBuffer(64), 
 46283 ;;  out_buffer      2   54[BANK0 ] PTR unsigned char 
 46284 ;;		 -> ToSendDataBuffer(64), 
 46285 ;;  out_idx_ptr     2   56[BANK0 ] PTR unsigned char 
 46286 ;;		 -> api_parse@out_idx(1), 
 46287 ;; Auto vars:     Size  Location     Type
 46288 ;;  number_of_st    4   60[BANK0 ] long 
 46289 ;;  return_value    1   59[BANK0 ] unsigned char 
 46290 ;; Return value:  Size  Location     Type
 46291 ;;                  1    wreg      unsigned char 
 46292 ;; Registers used:
 46293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 46294 ;; Tracked objects:
 46295 ;;		On entry : 0/0
 46296 ;;		On exit  : 0/0
 46297 ;;		Unchanged: 0/0
 46298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46299 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46300 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46301 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46302 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46303 ;;Total ram usage:       12 bytes
 46304 ;; Hardware stack levels used:    1
 46305 ;; Hardware stack levels required when called:   14
 46306 ;; This function calls:
 46307 ;;		_motor_move_steps
 46308 ;; This function is called by:
 46309 ;;		__parse_command_long
 46310 ;; This function uses a non-reentrant model
 46311 ;;
 46312                           
 46313                           	psect	text192
 46314  00FD5E                     __ptext192:
 46315                           	opt stack 0
 46316  00FD5E                     __parse_jump_steps_with_overshoot:
 46317                           	opt stack 13
 46318                           
 46319                           ;api.c: 528: uint8_t return_value;;api.c: 529: int32_t number_of_steps;;api.c: 531: numb
      +                          er_of_steps = data[1];
 46320                           
 46321                           ;incstack = 0
 46322  00FD5E  0100               	movlb	0	; () banked
 46323  00FD60  EE20 F001          	lfsr	2,1
 46324  00FD64  5194               	movf	__parse_jump_steps_with_overshoot@data& (0+255),w,b
 46325  00FD66  26D9               	addwf	fsr2l,f,c
 46326  00FD68  5195               	movf	(__parse_jump_steps_with_overshoot@data+1)& (0+255),w,b
 46327  00FD6A  22DA               	addwfc	fsr2h,f,c
 46328  00FD6C  50DF               	movf	indf2,w,c
 46329  00FD6E  6F9A               	movwf	??__parse_jump_steps_with_overshoot& (0+255),b
 46330  00FD70  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 46331  00FD72  6F9C               	movwf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 46332  00FD74  6B9D               	clrf	(__parse_jump_steps_with_overshoot@number_of_steps+1)& (0+255),b
 46333  00FD76  6B9E               	clrf	(__parse_jump_steps_with_overshoot@number_of_steps+2)& (0+255),b
 46334  00FD78  6B9F               	clrf	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),b
 46335                           
 46336                           ; BSR set to: 0
 46337                           ;api.c: 532: number_of_steps <<= 8;
 46338  00FD7A  C09E  F09F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+3
 46339  00FD7E  C09D  F09E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+2
 46340  00FD82  C09C  F09D         	movff	__parse_jump_steps_with_overshoot@number_of_steps,__parse_jump_steps_with_oversho
      +                          ot@number_of_steps+1
 46341  00FD86  6B9C               	clrf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 46342                           
 46343                           ; BSR set to: 0
 46344                           ;api.c: 533: number_of_steps |= data[2];
 46345  00FD88  EE20 F002          	lfsr	2,2
 46346  00FD8C  5194               	movf	__parse_jump_steps_with_overshoot@data& (0+255),w,b
 46347  00FD8E  26D9               	addwf	fsr2l,f,c
 46348  00FD90  5195               	movf	(__parse_jump_steps_with_overshoot@data+1)& (0+255),w,b
 46349  00FD92  22DA               	addwfc	fsr2h,f,c
 46350  00FD94  50DF               	movf	indf2,w,c
 46351  00FD96  6F9A               	movwf	??__parse_jump_steps_with_overshoot& (0+255),b
 46352  00FD98  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 46353  00FD9A  139C               	iorwf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),f,b
 46354                           
 46355                           ;api.c: 534: number_of_steps <<= 8;
 46356  00FD9C  C09E  F09F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+3
 46357  00FDA0  C09D  F09E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+2
 46358  00FDA4  C09C  F09D         	movff	__parse_jump_steps_with_overshoot@number_of_steps,__parse_jump_steps_with_oversho
      +                          ot@number_of_steps+1
 46359  00FDA8  6B9C               	clrf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 46360                           
 46361                           ; BSR set to: 0
 46362                           ;api.c: 535: number_of_steps |= data[3];
 46363  00FDAA  EE20 F003          	lfsr	2,3
 46364  00FDAE  5194               	movf	__parse_jump_steps_with_overshoot@data& (0+255),w,b
 46365  00FDB0  26D9               	addwf	fsr2l,f,c
 46366  00FDB2  5195               	movf	(__parse_jump_steps_with_overshoot@data+1)& (0+255),w,b
 46367  00FDB4  22DA               	addwfc	fsr2h,f,c
 46368  00FDB6  50DF               	movf	indf2,w,c
 46369  00FDB8  6F9A               	movwf	??__parse_jump_steps_with_overshoot& (0+255),b
 46370  00FDBA  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 46371  00FDBC  139C               	iorwf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),f,b
 46372                           
 46373                           ; BSR set to: 0
 46374                           ;api.c: 536: number_of_steps <<= 8;
 46375  00FDBE  C09E  F09F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+3
 46376  00FDC2  C09D  F09E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+2
 46377  00FDC6  C09C  F09D         	movff	__parse_jump_steps_with_overshoot@number_of_steps,__parse_jump_steps_with_oversho
      +                          ot@number_of_steps+1
 46378  00FDCA  6B9C               	clrf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 46379                           
 46380                           ;api.c: 537: number_of_steps |= data[4];
 46381  00FDCC  EE20 F004          	lfsr	2,4
 46382  00FDD0  5194               	movf	__parse_jump_steps_with_overshoot@data& (0+255),w,b
 46383  00FDD2  26D9               	addwf	fsr2l,f,c
 46384  00FDD4  5195               	movf	(__parse_jump_steps_with_overshoot@data+1)& (0+255),w,b
 46385  00FDD6  22DA               	addwfc	fsr2h,f,c
 46386  00FDD8  50DF               	movf	indf2,w,c
 46387  00FDDA  6F9A               	movwf	??__parse_jump_steps_with_overshoot& (0+255),b
 46388  00FDDC  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 46389  00FDDE  139C               	iorwf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),f,b
 46390                           
 46391                           ; BSR set to: 0
 46392                           ;api.c: 539: if(number_of_steps>0)
 46393  00FDE0  BF9F               	btfsc	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),7,b
 46394  00FDE2  D018               	goto	l2379
 46395  00FDE4  519F               	movf	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),w,b
 46396  00FDE6  119E               	iorwf	(__parse_jump_steps_with_overshoot@number_of_steps+2)& (0+255),w,b
 46397  00FDE8  119D               	iorwf	(__parse_jump_steps_with_overshoot@number_of_steps+1)& (0+255),w,b
 46398  00FDEA  E103               	bnz	u14870
 46399  00FDEC  059C               	decf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),w,b
 46400  00FDEE  A0D8               	btfss	status,0,c
 46401  00FDF0  D011               	goto	l2379
 46402  00FDF2                     u14870:
 46403                           
 46404                           ; BSR set to: 0
 46405                           ;api.c: 540: {;api.c: 541: motor_move_steps(MOTOR_DIRECTION_CW, (uint32_t) number_of_ste
      +                          ps, 0xFFFF, MOTOR_OVERSHOOT_WITH_OVERSHOOT);
 46406  00FDF2  C09C  F08C         	movff	__parse_jump_steps_with_overshoot@number_of_steps,motor_move_steps@distance
 46407  00FDF6  C09D  F08D         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,motor_move_steps@distance+1
 46408  00FDFA  C09E  F08E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,motor_move_steps@distance+2
 46409  00FDFE  C09F  F08F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+3,motor_move_steps@distance+3
 46410  00FE02  0EFF               	movlw	255
 46411  00FE04  6F91               	movwf	(motor_move_steps@speed+1)& (0+255),b
 46412  00FE06  6990               	setf	motor_move_steps@speed& (0+255),b
 46413  00FE08  0E00               	movlw	0
 46414  00FE0A  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 46415  00FE0C  0E01               	movlw	1
 46416  00FE0E  ECE8  F0AF         	call	_motor_move_steps
 46417                           
 46418                           ;api.c: 542: }
 46419  00FE12  D019               	goto	l2380
 46420  00FE14                     l2379:
 46421                           
 46422                           ;api.c: 543: else;api.c: 544: {;api.c: 545: number_of_steps = -number_of_steps;
 46423  00FE14  0100               	movlb	0	; () banked
 46424  00FE16  1F9F               	comf	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),f,b
 46425  00FE18  1F9E               	comf	(__parse_jump_steps_with_overshoot@number_of_steps+2)& (0+255),f,b
 46426  00FE1A  1F9D               	comf	(__parse_jump_steps_with_overshoot@number_of_steps+1)& (0+255),f,b
 46427  00FE1C  6D9C               	negf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 46428  00FE1E  0E00               	movlw	0
 46429  00FE20  239D               	addwfc	(__parse_jump_steps_with_overshoot@number_of_steps+1)& (0+255),f,b
 46430  00FE22  239E               	addwfc	(__parse_jump_steps_with_overshoot@number_of_steps+2)& (0+255),f,b
 46431  00FE24  239F               	addwfc	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),f,b
 46432                           
 46433                           ; BSR set to: 0
 46434                           ;api.c: 546: motor_move_steps(MOTOR_DIRECTION_CCW, (uint32_t) number_of_steps, 0xFFFF, M
      +                          OTOR_OVERSHOOT_WITH_OVERSHOOT);
 46435  00FE26  C09C  F08C         	movff	__parse_jump_steps_with_overshoot@number_of_steps,motor_move_steps@distance
 46436  00FE2A  C09D  F08D         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,motor_move_steps@distance+1
 46437  00FE2E  C09E  F08E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,motor_move_steps@distance+2
 46438  00FE32  C09F  F08F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+3,motor_move_steps@distance+3
 46439  00FE36  0EFF               	movlw	255
 46440  00FE38  6F91               	movwf	(motor_move_steps@speed+1)& (0+255),b
 46441  00FE3A  6990               	setf	motor_move_steps@speed& (0+255),b
 46442  00FE3C  0E00               	movlw	0
 46443  00FE3E  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 46444  00FE40  0EFF               	movlw	255
 46445  00FE42  ECE8  F0AF         	call	_motor_move_steps
 46446  00FE46                     l2380:
 46447                           
 46448                           ;api.c: 547: };api.c: 550: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<62))
 46449  00FE46  C098  FFD9         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr,fsr2l
 46450  00FE4A  C099  FFDA         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr+1,fsr2h
 46451  00FE4E  50DF               	movf	indf2,w,c
 46452  00FE50  B4D8               	btfsc	status,2,c
 46453  00FE52  D02C               	goto	l2381
 46454  00FE54  C098  FFD9         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr,fsr2l
 46455  00FE58  C099  FFDA         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr+1,fsr2h
 46456  00FE5C  0E3E               	movlw	62
 46457  00FE5E  60DF               	cpfslt	indf2,c
 46458  00FE60  D025               	goto	l2381
 46459                           
 46460                           ;api.c: 551: {;api.c: 552: out_buffer[(*out_idx_ptr)++] = COMMAND_JUMP_STEPS_WITH_OVERSH
      +                          OOT;
 46461  00FE62  C098  FFD9         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr,fsr2l
 46462  00FE66  C099  FFDA         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr+1,fsr2h
 46463  00FE6A  CFDF F09A          	movff	indf2,??__parse_jump_steps_with_overshoot
 46464  00FE6E  0E01               	movlw	1
 46465  00FE70  26DF               	addwf	indf2,f,c
 46466  00FE72  0100               	movlb	0	; () banked
 46467  00FE74  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 46468  00FE76  0D01               	mullw	1
 46469  00FE78  50F3               	movf	prodl,w,c
 46470  00FE7A  2596               	addwf	__parse_jump_steps_with_overshoot@out_buffer& (0+255),w,b
 46471  00FE7C  6ED9               	movwf	fsr2l,c
 46472  00FE7E  50F4               	movf	prodh,w,c
 46473  00FE80  2197               	addwfc	(__parse_jump_steps_with_overshoot@out_buffer+1)& (0+255),w,b
 46474  00FE82  6EDA               	movwf	fsr2h,c
 46475  00FE84  0E91               	movlw	145
 46476  00FE86  6EDF               	movwf	indf2,c
 46477                           
 46478                           ;api.c: 553: out_buffer[(*out_idx_ptr)++] = return_value;
 46479  00FE88  C098  FFD9         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr,fsr2l
 46480  00FE8C  C099  FFDA         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr+1,fsr2h
 46481  00FE90  CFDF F09A          	movff	indf2,??__parse_jump_steps_with_overshoot
 46482  00FE94  0E01               	movlw	1
 46483  00FE96  26DF               	addwf	indf2,f,c
 46484  00FE98  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 46485  00FE9A  0D01               	mullw	1
 46486  00FE9C  50F3               	movf	prodl,w,c
 46487  00FE9E  2596               	addwf	__parse_jump_steps_with_overshoot@out_buffer& (0+255),w,b
 46488  00FEA0  6ED9               	movwf	fsr2l,c
 46489  00FEA2  50F4               	movf	prodh,w,c
 46490  00FEA4  2197               	addwfc	(__parse_jump_steps_with_overshoot@out_buffer+1)& (0+255),w,b
 46491  00FEA6  6EDA               	movwf	fsr2h,c
 46492  00FEA8  C09B  FFDF         	movff	__parse_jump_steps_with_overshoot@return_value,indf2
 46493  00FEAC                     l2381:
 46494                           
 46495                           ;api.c: 554: };api.c: 556: return 5;
 46496                           
 46497                           ; BSR set to: 0
 46498  00FEAC  0E05               	movlw	5
 46499  00FEAE  0012               	return	
 46500  00FEB0                     __end_of__parse_jump_steps_with_overshoot:
 46501                           	opt stack 0
 46502                           tosu	equ	0xFFF
 46503                           tosh	equ	0xFFE
 46504                           tosl	equ	0xFFD
 46505                           pclath	equ	0xFFA
 46506                           tblptru	equ	0xFF8
 46507                           tblptrh	equ	0xFF7
 46508                           tblptrl	equ	0xFF6
 46509                           tablat	equ	0xFF5
 46510                           prodh	equ	0xFF4
 46511                           prodl	equ	0xFF3
 46512                           intcon	equ	0xFF2
 46513                           indf0	equ	0xFEF
 46514                           postinc0	equ	0xFEE
 46515                           fsr0h	equ	0xFEA
 46516                           fsr0l	equ	0xFE9
 46517                           wreg	equ	0xFE8
 46518                           indf1	equ	0xFE7
 46519                           postinc1	equ	0xFE6
 46520                           postdec1	equ	0xFE5
 46521                           plusw1	equ	0xFE3
 46522                           fsr1h	equ	0xFE2
 46523                           fsr1l	equ	0xFE1
 46524                           indf2	equ	0xFDF
 46525                           postinc2	equ	0xFDE
 46526                           postdec2	equ	0xFDD
 46527                           plusw2	equ	0xFDB
 46528                           fsr2h	equ	0xFDA
 46529                           fsr2l	equ	0xFD9
 46530                           status	equ	0xFD8
 46531                           
 46532 ;; *************** function __parse_jump_steps *****************
 46533 ;; Defined at:
 46534 ;;		line 490 in file "api.c"
 46535 ;; Parameters:    Size  Location     Type
 46536 ;;  data            2   52[BANK0 ] PTR unsigned char 
 46537 ;;		 -> ReceivedDataBuffer(64), 
 46538 ;;  out_buffer      2   54[BANK0 ] PTR unsigned char 
 46539 ;;		 -> ToSendDataBuffer(64), 
 46540 ;;  out_idx_ptr     2   56[BANK0 ] PTR unsigned char 
 46541 ;;		 -> api_parse@out_idx(1), 
 46542 ;; Auto vars:     Size  Location     Type
 46543 ;;  number_of_st    4   60[BANK0 ] long 
 46544 ;;  return_value    1   59[BANK0 ] unsigned char 
 46545 ;; Return value:  Size  Location     Type
 46546 ;;                  1    wreg      unsigned char 
 46547 ;; Registers used:
 46548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 46549 ;; Tracked objects:
 46550 ;;		On entry : 0/0
 46551 ;;		On exit  : 0/0
 46552 ;;		Unchanged: 0/0
 46553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46554 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46555 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46556 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46557 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46558 ;;Total ram usage:       12 bytes
 46559 ;; Hardware stack levels used:    1
 46560 ;; Hardware stack levels required when called:   14
 46561 ;; This function calls:
 46562 ;;		_motor_move_steps
 46563 ;; This function is called by:
 46564 ;;		__parse_command_long
 46565 ;; This function uses a non-reentrant model
 46566 ;;
 46567                           
 46568                           	psect	text193
 46569  00FEB0                     __ptext193:
 46570                           	opt stack 0
 46571  00FEB0                     __parse_jump_steps:
 46572                           	opt stack 13
 46573                           
 46574                           ;api.c: 494: uint8_t return_value;;api.c: 495: int32_t number_of_steps;;api.c: 497: numb
      +                          er_of_steps = data[1];
 46575                           
 46576                           ;incstack = 0
 46577  00FEB0  0100               	movlb	0	; () banked
 46578  00FEB2  EE20 F001          	lfsr	2,1
 46579  00FEB6  5194               	movf	__parse_jump_steps@data& (0+255),w,b
 46580  00FEB8  26D9               	addwf	fsr2l,f,c
 46581  00FEBA  5195               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 46582  00FEBC  22DA               	addwfc	fsr2h,f,c
 46583  00FEBE  50DF               	movf	indf2,w,c
 46584  00FEC0  6F9A               	movwf	??__parse_jump_steps& (0+255),b
 46585  00FEC2  519A               	movf	??__parse_jump_steps& (0+255),w,b
 46586  00FEC4  6F9C               	movwf	__parse_jump_steps@number_of_steps& (0+255),b
 46587  00FEC6  6B9D               	clrf	(__parse_jump_steps@number_of_steps+1)& (0+255),b
 46588  00FEC8  6B9E               	clrf	(__parse_jump_steps@number_of_steps+2)& (0+255),b
 46589  00FECA  6B9F               	clrf	(__parse_jump_steps@number_of_steps+3)& (0+255),b
 46590                           
 46591                           ; BSR set to: 0
 46592                           ;api.c: 498: number_of_steps <<= 8;
 46593  00FECC  C09E  F09F         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 46594  00FED0  C09D  F09E         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 46595  00FED4  C09C  F09D         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 46596  00FED8  6B9C               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 46597                           
 46598                           ; BSR set to: 0
 46599                           ;api.c: 499: number_of_steps |= data[2];
 46600  00FEDA  EE20 F002          	lfsr	2,2
 46601  00FEDE  5194               	movf	__parse_jump_steps@data& (0+255),w,b
 46602  00FEE0  26D9               	addwf	fsr2l,f,c
 46603  00FEE2  5195               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 46604  00FEE4  22DA               	addwfc	fsr2h,f,c
 46605  00FEE6  50DF               	movf	indf2,w,c
 46606  00FEE8  6F9A               	movwf	??__parse_jump_steps& (0+255),b
 46607  00FEEA  519A               	movf	??__parse_jump_steps& (0+255),w,b
 46608  00FEEC  139C               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 46609                           
 46610                           ;api.c: 500: number_of_steps <<= 8;
 46611  00FEEE  C09E  F09F         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 46612  00FEF2  C09D  F09E         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 46613  00FEF6  C09C  F09D         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 46614  00FEFA  6B9C               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 46615                           
 46616                           ; BSR set to: 0
 46617                           ;api.c: 501: number_of_steps |= data[3];
 46618  00FEFC  EE20 F003          	lfsr	2,3
 46619  00FF00  5194               	movf	__parse_jump_steps@data& (0+255),w,b
 46620  00FF02  26D9               	addwf	fsr2l,f,c
 46621  00FF04  5195               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 46622  00FF06  22DA               	addwfc	fsr2h,f,c
 46623  00FF08  50DF               	movf	indf2,w,c
 46624  00FF0A  6F9A               	movwf	??__parse_jump_steps& (0+255),b
 46625  00FF0C  519A               	movf	??__parse_jump_steps& (0+255),w,b
 46626  00FF0E  139C               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 46627                           
 46628                           ; BSR set to: 0
 46629                           ;api.c: 502: number_of_steps <<= 8;
 46630  00FF10  C09E  F09F         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 46631  00FF14  C09D  F09E         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 46632  00FF18  C09C  F09D         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 46633  00FF1C  6B9C               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 46634                           
 46635                           ;api.c: 503: number_of_steps |= data[4];
 46636  00FF1E  EE20 F004          	lfsr	2,4
 46637  00FF22  5194               	movf	__parse_jump_steps@data& (0+255),w,b
 46638  00FF24  26D9               	addwf	fsr2l,f,c
 46639  00FF26  5195               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 46640  00FF28  22DA               	addwfc	fsr2h,f,c
 46641  00FF2A  50DF               	movf	indf2,w,c
 46642  00FF2C  6F9A               	movwf	??__parse_jump_steps& (0+255),b
 46643  00FF2E  519A               	movf	??__parse_jump_steps& (0+255),w,b
 46644  00FF30  139C               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 46645                           
 46646                           ; BSR set to: 0
 46647                           ;api.c: 505: if(number_of_steps>0)
 46648  00FF32  BF9F               	btfsc	(__parse_jump_steps@number_of_steps+3)& (0+255),7,b
 46649  00FF34  D018               	goto	l2373
 46650  00FF36  519F               	movf	(__parse_jump_steps@number_of_steps+3)& (0+255),w,b
 46651  00FF38  119E               	iorwf	(__parse_jump_steps@number_of_steps+2)& (0+255),w,b
 46652  00FF3A  119D               	iorwf	(__parse_jump_steps@number_of_steps+1)& (0+255),w,b
 46653  00FF3C  E103               	bnz	u14840
 46654  00FF3E  059C               	decf	__parse_jump_steps@number_of_steps& (0+255),w,b
 46655  00FF40  A0D8               	btfss	status,0,c
 46656  00FF42  D011               	goto	l2373
 46657  00FF44                     u14840:
 46658                           
 46659                           ; BSR set to: 0
 46660                           ;api.c: 506: {;api.c: 507: return_value = motor_move_steps(MOTOR_DIRECTION_CW, (uint32_t
      +                          ) number_of_steps, 0xFFFF, MOTOR_OVERSHOOT_NO_OVERSHOOT);
 46661  00FF44  C09C  F08C         	movff	__parse_jump_steps@number_of_steps,motor_move_steps@distance
 46662  00FF48  C09D  F08D         	movff	__parse_jump_steps@number_of_steps+1,motor_move_steps@distance+1
 46663  00FF4C  C09E  F08E         	movff	__parse_jump_steps@number_of_steps+2,motor_move_steps@distance+2
 46664  00FF50  C09F  F08F         	movff	__parse_jump_steps@number_of_steps+3,motor_move_steps@distance+3
 46665  00FF54  0EFF               	movlw	255
 46666  00FF56  6F91               	movwf	(motor_move_steps@speed+1)& (0+255),b
 46667  00FF58  6990               	setf	motor_move_steps@speed& (0+255),b
 46668  00FF5A  0E01               	movlw	1
 46669  00FF5C  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 46670  00FF5E  0E01               	movlw	1
 46671  00FF60  ECE8  F0AF         	call	_motor_move_steps
 46672  00FF64  D018               	goto	L54
 46673  00FF66                     l2373:
 46674                           
 46675                           ; BSR set to: 0
 46676                           ;api.c: 509: else;api.c: 510: {;api.c: 511: number_of_steps = -number_of_steps;
 46677                           
 46678                           ; BSR set to: 0
 46679  00FF66  1F9F               	comf	(__parse_jump_steps@number_of_steps+3)& (0+255),f,b
 46680  00FF68  1F9E               	comf	(__parse_jump_steps@number_of_steps+2)& (0+255),f,b
 46681  00FF6A  1F9D               	comf	(__parse_jump_steps@number_of_steps+1)& (0+255),f,b
 46682  00FF6C  6D9C               	negf	__parse_jump_steps@number_of_steps& (0+255),b
 46683  00FF6E  0E00               	movlw	0
 46684  00FF70  239D               	addwfc	(__parse_jump_steps@number_of_steps+1)& (0+255),f,b
 46685  00FF72  239E               	addwfc	(__parse_jump_steps@number_of_steps+2)& (0+255),f,b
 46686  00FF74  239F               	addwfc	(__parse_jump_steps@number_of_steps+3)& (0+255),f,b
 46687                           
 46688                           ; BSR set to: 0
 46689                           ;api.c: 512: return_value = motor_move_steps(MOTOR_DIRECTION_CCW, (uint32_t) number_of_s
      +                          teps, 0xFFFF, MOTOR_OVERSHOOT_NO_OVERSHOOT);
 46690  00FF76  C09C  F08C         	movff	__parse_jump_steps@number_of_steps,motor_move_steps@distance
 46691  00FF7A  C09D  F08D         	movff	__parse_jump_steps@number_of_steps+1,motor_move_steps@distance+1
 46692  00FF7E  C09E  F08E         	movff	__parse_jump_steps@number_of_steps+2,motor_move_steps@distance+2
 46693  00FF82  C09F  F08F         	movff	__parse_jump_steps@number_of_steps+3,motor_move_steps@distance+3
 46694  00FF86  0EFF               	movlw	255
 46695  00FF88  6F91               	movwf	(motor_move_steps@speed+1)& (0+255),b
 46696  00FF8A  6990               	setf	motor_move_steps@speed& (0+255),b
 46697  00FF8C  0E01               	movlw	1
 46698  00FF8E  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 46699  00FF90  0EFF               	movlw	255
 46700  00FF92  ECE8  F0AF         	call	_motor_move_steps
 46701  00FF96                     L54:
 46702  00FF96  0100               	movlb	0	; () banked
 46703  00FF98  6F9B               	movwf	__parse_jump_steps@return_value& (0+255),b
 46704                           
 46705                           ; BSR set to: 0
 46706                           ;api.c: 513: };api.c: 516: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<62))
 46707                           
 46708                           ; BSR set to: 0
 46709  00FF9A  C098  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 46710  00FF9E  C099  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 46711  00FFA2  50DF               	movf	indf2,w,c
 46712  00FFA4  B4D8               	btfsc	status,2,c
 46713  00FFA6  D02B               	goto	l2375
 46714                           
 46715                           ; BSR set to: 0
 46716  00FFA8  C098  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 46717  00FFAC  C099  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 46718  00FFB0  0E3E               	movlw	62
 46719  00FFB2  60DF               	cpfslt	indf2,c
 46720  00FFB4  D024               	goto	l2375
 46721                           
 46722                           ; BSR set to: 0
 46723                           ;api.c: 517: {;api.c: 518: out_buffer[(*out_idx_ptr)++] = COMMAND_JUMP_STEPS;
 46724  00FFB6  C098  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 46725  00FFBA  C099  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 46726  00FFBE  CFDF F09A          	movff	indf2,??__parse_jump_steps
 46727  00FFC2  0E01               	movlw	1
 46728  00FFC4  26DF               	addwf	indf2,f,c
 46729  00FFC6  519A               	movf	??__parse_jump_steps& (0+255),w,b
 46730  00FFC8  0D01               	mullw	1
 46731  00FFCA  50F3               	movf	prodl,w,c
 46732  00FFCC  2596               	addwf	__parse_jump_steps@out_buffer& (0+255),w,b
 46733  00FFCE  6ED9               	movwf	fsr2l,c
 46734  00FFD0  50F4               	movf	prodh,w,c
 46735  00FFD2  2197               	addwfc	(__parse_jump_steps@out_buffer+1)& (0+255),w,b
 46736  00FFD4  6EDA               	movwf	fsr2h,c
 46737  00FFD6  0E90               	movlw	144
 46738  00FFD8  6EDF               	movwf	indf2,c
 46739                           
 46740                           ;api.c: 519: out_buffer[(*out_idx_ptr)++] = return_value;
 46741  00FFDA  C098  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 46742  00FFDE  C099  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 46743  00FFE2  CFDF F09A          	movff	indf2,??__parse_jump_steps
 46744  00FFE6  0E01               	movlw	1
 46745  00FFE8  26DF               	addwf	indf2,f,c
 46746  00FFEA  519A               	movf	??__parse_jump_steps& (0+255),w,b
 46747  00FFEC  0D01               	mullw	1
 46748  00FFEE  50F3               	movf	prodl,w,c
 46749  00FFF0  2596               	addwf	__parse_jump_steps@out_buffer& (0+255),w,b
 46750  00FFF2  6ED9               	movwf	fsr2l,c
 46751  00FFF4  50F4               	movf	prodh,w,c
 46752  00FFF6  2197               	addwfc	(__parse_jump_steps@out_buffer+1)& (0+255),w,b
 46753  00FFF8  6EDA               	movwf	fsr2h,c
 46754  00FFFA  C09B  FFDF         	movff	__parse_jump_steps@return_value,indf2
 46755  00FFFE                     l2375:
 46756                           
 46757                           ; BSR set to: 0
 46758                           ;api.c: 520: };api.c: 522: return 5;
 46759                           
 46760                           ; BSR set to: 0
 46761  00FFFE  0E05               	movlw	5
 46762  010000  0012               	return	
 46763  010002                     __end_of__parse_jump_steps:
 46764                           	opt stack 0
 46765                           tosu	equ	0xFFF
 46766                           tosh	equ	0xFFE
 46767                           tosl	equ	0xFFD
 46768                           pclath	equ	0xFFA
 46769                           tblptru	equ	0xFF8
 46770                           tblptrh	equ	0xFF7
 46771                           tblptrl	equ	0xFF6
 46772                           tablat	equ	0xFF5
 46773                           prodh	equ	0xFF4
 46774                           prodl	equ	0xFF3
 46775                           intcon	equ	0xFF2
 46776                           indf0	equ	0xFEF
 46777                           postinc0	equ	0xFEE
 46778                           fsr0h	equ	0xFEA
 46779                           fsr0l	equ	0xFE9
 46780                           wreg	equ	0xFE8
 46781                           indf1	equ	0xFE7
 46782                           postinc1	equ	0xFE6
 46783                           postdec1	equ	0xFE5
 46784                           plusw1	equ	0xFE3
 46785                           fsr1h	equ	0xFE2
 46786                           fsr1l	equ	0xFE1
 46787                           indf2	equ	0xFDF
 46788                           postinc2	equ	0xFDE
 46789                           postdec2	equ	0xFDD
 46790                           plusw2	equ	0xFDB
 46791                           fsr2h	equ	0xFDA
 46792                           fsr2l	equ	0xFD9
 46793                           status	equ	0xFD8
 46794                           
 46795 ;; *************** function _motor_move_steps *****************
 46796 ;; Defined at:
 46797 ;;		line 995 in file "motor.c"
 46798 ;; Parameters:    Size  Location     Type
 46799 ;;  direction       1    wreg     enum E6622
 46800 ;;  distance        4   44[BANK0 ] unsigned long 
 46801 ;;  speed           2   48[BANK0 ] unsigned int 
 46802 ;;  overshoot       1   50[BANK0 ] enum E6635
 46803 ;; Auto vars:     Size  Location     Type
 46804 ;;  direction       1   51[BANK0 ] enum E6622
 46805 ;; Return value:  Size  Location     Type
 46806 ;;                  1    wreg      enum E6782
 46807 ;; Registers used:
 46808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 46809 ;; Tracked objects:
 46810 ;;		On entry : 0/0
 46811 ;;		On exit  : 0/0
 46812 ;;		Unchanged: 0/0
 46813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46814 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46815 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46817 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46818 ;;Total ram usage:        8 bytes
 46819 ;; Hardware stack levels used:    1
 46820 ;; Hardware stack levels required when called:   13
 46821 ;; This function calls:
 46822 ;;		__motor_move_steps
 46823 ;; This function is called by:
 46824 ;;		__parse_jump_steps
 46825 ;;		__parse_jump_steps_with_overshoot
 46826 ;;		_motor_arc_move
 46827 ;; This function uses a non-reentrant model
 46828 ;;
 46829                           
 46830                           	psect	text194
 46831  015FD0                     __ptext194:
 46832                           	opt stack 0
 46833  015FD0                     _motor_move_steps:
 46834                           	opt stack 14
 46835                           
 46836                           ; BSR set to: 0
 46837                           ;incstack = 0
 46838                           ;motor_move_steps@direction stored from wreg
 46839  015FD0  0100               	movlb	0	; () banked
 46840  015FD2  6F93               	movwf	motor_move_steps@direction& (0+255),b
 46841                           
 46842                           ;motor.c: 998: return _motor_move_steps(direction, distance, speed, overshoot, MOTOR_MOV
      +                          E_TYPE_NORMAL);
 46843  015FD4  C08C  F07D         	movff	motor_move_steps@distance,__motor_move_steps@distance_in_steps
 46844  015FD8  C08D  F07E         	movff	motor_move_steps@distance+1,__motor_move_steps@distance_in_steps+1
 46845  015FDC  C08E  F07F         	movff	motor_move_steps@distance+2,__motor_move_steps@distance_in_steps+2
 46846  015FE0  C08F  F080         	movff	motor_move_steps@distance+3,__motor_move_steps@distance_in_steps+3
 46847  015FE4  C090  F081         	movff	motor_move_steps@speed,__motor_move_steps@speed
 46848  015FE8  C091  F082         	movff	motor_move_steps@speed+1,__motor_move_steps@speed+1
 46849  015FEC  C092  F083         	movff	motor_move_steps@overshoot,__motor_move_steps@overshoot
 46850  015FF0  0E00               	movlw	0
 46851  015FF2  0100               	movlb	0	; () banked
 46852  015FF4  6F84               	movwf	__motor_move_steps@type& (0+255),b
 46853  015FF6  5193               	movf	motor_move_steps@direction& (0+255),w,b
 46854  015FF8  EC7D  F077         	call	__motor_move_steps
 46855  015FFC  0012               	return	
 46856  015FFE                     __end_of_motor_move_steps:
 46857                           	opt stack 0
 46858                           tosu	equ	0xFFF
 46859                           tosh	equ	0xFFE
 46860                           tosl	equ	0xFFD
 46861                           pclath	equ	0xFFA
 46862                           tblptru	equ	0xFF8
 46863                           tblptrh	equ	0xFF7
 46864                           tblptrl	equ	0xFF6
 46865                           tablat	equ	0xFF5
 46866                           prodh	equ	0xFF4
 46867                           prodl	equ	0xFF3
 46868                           intcon	equ	0xFF2
 46869                           indf0	equ	0xFEF
 46870                           postinc0	equ	0xFEE
 46871                           fsr0h	equ	0xFEA
 46872                           fsr0l	equ	0xFE9
 46873                           wreg	equ	0xFE8
 46874                           indf1	equ	0xFE7
 46875                           postinc1	equ	0xFE6
 46876                           postdec1	equ	0xFE5
 46877                           plusw1	equ	0xFE3
 46878                           fsr1h	equ	0xFE2
 46879                           fsr1l	equ	0xFE1
 46880                           indf2	equ	0xFDF
 46881                           postinc2	equ	0xFDE
 46882                           postdec2	equ	0xFDD
 46883                           plusw2	equ	0xFDB
 46884                           fsr2h	equ	0xFDA
 46885                           fsr2l	equ	0xFD9
 46886                           status	equ	0xFD8
 46887                           
 46888 ;; *************** function __motor_move_steps *****************
 46889 ;; Defined at:
 46890 ;;		line 187 in file "motor.c"
 46891 ;; Parameters:    Size  Location     Type
 46892 ;;  direction       1    wreg     enum E6622
 46893 ;;  distance_in_    4   29[BANK0 ] unsigned long 
 46894 ;;  speed           2   33[BANK0 ] unsigned int 
 46895 ;;  overshoot       1   35[BANK0 ] enum E6635
 46896 ;;  type            1   36[BANK0 ] enum E6631
 46897 ;; Auto vars:     Size  Location     Type
 46898 ;;  direction       1   43[BANK0 ] enum E6622
 46899 ;;  distance_to_    4   39[BANK0 ] long 
 46900 ;;  return_value    1   38[BANK0 ] enum E6639
 46901 ;;  return_value    1   37[BANK0 ] enum E6639
 46902 ;; Return value:  Size  Location     Type
 46903 ;;                  1    wreg      enum E6639
 46904 ;; Registers used:
 46905 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 46906 ;; Tracked objects:
 46907 ;;		On entry : 0/0
 46908 ;;		On exit  : 0/0
 46909 ;;		Unchanged: 0/0
 46910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46911 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46912 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46914 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46915 ;;Total ram usage:       15 bytes
 46916 ;; Hardware stack levels used:    1
 46917 ;; Hardware stack levels required when called:   12
 46918 ;; This function calls:
 46919 ;;		__motor_distance_to_limit
 46920 ;;		__motor_schedule_command
 46921 ;;		_motor_items_in_cue
 46922 ;; This function is called by:
 46923 ;;		_motor_move_steps
 46924 ;;		_motor_move_degrees_int
 46925 ;;		_motor_goto_steps
 46926 ;;		_motor_move_endless
 46927 ;;		_motor_move_degrees_float
 46928 ;;		_motor_goto_degrees_float
 46929 ;;		_motor_goto_degrees_int
 46930 ;; This function uses a non-reentrant model
 46931 ;;
 46932                           
 46933                           	psect	text195
 46934  00EEFA                     __ptext195:
 46935                           	opt stack 0
 46936  00EEFA                     __motor_move_steps:
 46937                           	opt stack 15
 46938                           
 46939                           ;incstack = 0
 46940                           ;__motor_move_steps@direction stored from wreg
 46941  00EEFA  0100               	movlb	0	; () banked
 46942  00EEFC  6F8B               	movwf	__motor_move_steps@direction& (0+255),b
 46943                           
 46944                           ;motor.c: 189: int32_t distance_to_limit;;motor.c: 190: motorReturnValue_t return_value_
      +                          1;;motor.c: 191: motorReturnValue_t return_value_2;;motor.c: 193: if(os.busy || motor_it
      +                          ems_in_cue()!=0)
 46945  00EEFE  0101               	movlb	1	; () banked
 46946  00EF00  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 46947  00EF02  A4D8               	btfss	status,2,c
 46948  00EF04  D005               	goto	u11790
 46949                           
 46950                           ; BSR set to: 1
 46951  00EF06  EC21  F0B2         	call	_motor_items_in_cue	;wreg free
 46952  00EF0A  0900               	iorlw	0
 46953  00EF0C  B4D8               	btfsc	status,2,c
 46954  00EF0E  D002               	goto	l2488
 46955  00EF10                     u11790:
 46956                           
 46957                           ;motor.c: 194: {;motor.c: 196: return MOTOR_RETURN_VALUE_BUSY;
 46958  00EF10  0E01               	movlw	1
 46959  00EF12  0012               	return	
 46960  00EF14                     l2488:
 46961                           
 46962                           ;motor.c: 197: };motor.c: 199: if((direction!=MOTOR_DIRECTION_CW) && (direction!=MOTOR_D
      +                          IRECTION_CCW))
 46963  00EF14  0100               	movlb	0	; () banked
 46964  00EF16  058B               	decf	__motor_move_steps@direction& (0+255),w,b
 46965  00EF18  B4D8               	btfsc	status,2,c
 46966  00EF1A  D005               	goto	l2492
 46967                           
 46968                           ; BSR set to: 0
 46969  00EF1C  298B               	incf	__motor_move_steps@direction& (0+255),w,b
 46970  00EF1E  B4D8               	btfsc	status,2,c
 46971  00EF20  D002               	goto	l2492
 46972                           
 46973                           ; BSR set to: 0
 46974                           ;motor.c: 200: {;motor.c: 202: return MOTOR_RETURN_VALUE_INVALID_DIRECTION;
 46975  00EF22  0E04               	movlw	4
 46976                           
 46977                           ; BSR set to: 0
 46978  00EF24  0012               	return	
 46979  00EF26                     l2492:
 46980                           
 46981                           ; BSR set to: 0
 46982                           ;motor.c: 203: };motor.c: 205: if(distance_in_steps==0)
 46983                           
 46984                           ; BSR set to: 0
 46985  00EF26  517D               	movf	__motor_move_steps@distance_in_steps& (0+255),w,b
 46986  00EF28  117E               	iorwf	(__motor_move_steps@distance_in_steps+1)& (0+255),w,b
 46987  00EF2A  117F               	iorwf	(__motor_move_steps@distance_in_steps+2)& (0+255),w,b
 46988  00EF2C  1180               	iorwf	(__motor_move_steps@distance_in_steps+3)& (0+255),w,b
 46989  00EF2E  A4D8               	btfss	status,2,c
 46990  00EF30  D002               	goto	l2493
 46991                           
 46992                           ; BSR set to: 0
 46993                           ;motor.c: 206: {;motor.c: 208: return MOTOR_RETURN_VALUE_INVALID_DISTANCE;
 46994  00EF32  0E03               	movlw	3
 46995                           
 46996                           ; BSR set to: 0
 46997  00EF34  0012               	return	
 46998  00EF36                     l2493:
 46999                           
 47000                           ; BSR set to: 0
 47001                           ;motor.c: 209: };motor.c: 211: if(speed==0)
 47002                           
 47003                           ; BSR set to: 0
 47004  00EF36  5181               	movf	__motor_move_steps@speed& (0+255),w,b
 47005  00EF38  1182               	iorwf	(__motor_move_steps@speed+1)& (0+255),w,b
 47006  00EF3A  A4D8               	btfss	status,2,c
 47007  00EF3C  D002               	goto	l2494
 47008                           
 47009                           ; BSR set to: 0
 47010                           ;motor.c: 212: {;motor.c: 214: return MOTOR_RETURN_VALUE_INVALID_SPEED;
 47011  00EF3E  0E02               	movlw	2
 47012                           
 47013                           ; BSR set to: 0
 47014  00EF40  0012               	return	
 47015  00EF42                     l2494:
 47016                           
 47017                           ; BSR set to: 0
 47018                           ;motor.c: 215: };motor.c: 217: if(!((type==MOTOR_MOVE_TYPE_NORMAL) || (type==MOTOR_MOVE_
      +                          TYPE_ENDLESS)))
 47019                           
 47020                           ; BSR set to: 0
 47021  00EF42  5184               	movf	__motor_move_steps@type& (0+255),w,b
 47022  00EF44  B4D8               	btfsc	status,2,c
 47023  00EF46  D005               	goto	l2495
 47024                           
 47025                           ; BSR set to: 0
 47026  00EF48  0584               	decf	__motor_move_steps@type& (0+255),w,b
 47027  00EF4A  B4D8               	btfsc	status,2,c
 47028  00EF4C  D002               	goto	l2495
 47029                           
 47030                           ; BSR set to: 0
 47031                           ;motor.c: 218: {;motor.c: 220: return MOTOR_RETURN_VALUE_INVALID_MOVE_TYPE;
 47032  00EF4E  0E05               	movlw	5
 47033                           
 47034                           ; BSR set to: 0
 47035  00EF50  0012               	return	
 47036  00EF52                     l2495:
 47037                           
 47038                           ; BSR set to: 0
 47039                           ;motor.c: 221: };motor.c: 223: if(!((overshoot==MOTOR_OVERSHOOT_NO_OVERSHOOT) || (oversh
      +                          oot==MOTOR_OVERSHOOT_WITH_OVERSHOOT)))
 47040                           
 47041                           ; BSR set to: 0
 47042  00EF52  0583               	decf	__motor_move_steps@overshoot& (0+255),w,b
 47043  00EF54  B4D8               	btfsc	status,2,c
 47044  00EF56  D005               	goto	l2496
 47045                           
 47046                           ; BSR set to: 0
 47047  00EF58  5183               	movf	__motor_move_steps@overshoot& (0+255),w,b
 47048  00EF5A  B4D8               	btfsc	status,2,c
 47049  00EF5C  D002               	goto	l2496
 47050                           
 47051                           ; BSR set to: 0
 47052                           ;motor.c: 224: {;motor.c: 226: return MOTOR_RETURN_VALUE_INVALID_OVERSHOOT;
 47053  00EF5E  0E06               	movlw	6
 47054                           
 47055                           ; BSR set to: 0
 47056  00EF60  0012               	return	
 47057  00EF62                     l2496:
 47058                           
 47059                           ; BSR set to: 0
 47060                           ;motor.c: 227: };motor.c: 233: distance_to_limit = _motor_distance_to_limit(direction);
 47061                           
 47062                           ; BSR set to: 0
 47063  00EF62  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 47064  00EF64  ECA7  F080         	call	__motor_distance_to_limit
 47065  00EF68  C06C  F087         	movff	?__motor_distance_to_limit,__motor_move_steps@distance_to_limit
 47066  00EF6C  C06D  F088         	movff	?__motor_distance_to_limit+1,__motor_move_steps@distance_to_limit+1
 47067  00EF70  C06E  F089         	movff	?__motor_distance_to_limit+2,__motor_move_steps@distance_to_limit+2
 47068  00EF74  C06F  F08A         	movff	?__motor_distance_to_limit+3,__motor_move_steps@distance_to_limit+3
 47069                           
 47070                           ;motor.c: 236: if(distance_to_limit<=0)
 47071  00EF78  0100               	movlb	0	; () banked
 47072  00EF7A  BF8A               	btfsc	(__motor_move_steps@distance_to_limit+3)& (0+255),7,b
 47073  00EF7C  D007               	goto	u11880
 47074  00EF7E  518A               	movf	(__motor_move_steps@distance_to_limit+3)& (0+255),w,b
 47075  00EF80  1189               	iorwf	(__motor_move_steps@distance_to_limit+2)& (0+255),w,b
 47076  00EF82  1188               	iorwf	(__motor_move_steps@distance_to_limit+1)& (0+255),w,b
 47077  00EF84  E105               	bnz	l13745
 47078  00EF86  0587               	decf	__motor_move_steps@distance_to_limit& (0+255),w,b
 47079  00EF88  B0D8               	btfsc	status,0,c
 47080  00EF8A  D002               	goto	l2497
 47081  00EF8C                     u11880:
 47082                           
 47083                           ; BSR set to: 0
 47084                           ;motor.c: 237: {;motor.c: 238: return MOTOR_RETURN_VALUE_LIMIT_VIOLATED;
 47085  00EF8C  0E07               	movlw	7
 47086                           
 47087                           ; BSR set to: 0
 47088  00EF8E  0012               	return	
 47089  00EF90                     l2497:
 47090  00EF90                     l13745:
 47091                           
 47092                           ; BSR set to: 0
 47093                           ;motor.c: 239: };motor.c: 242: if(distance_to_limit!=2147483647)
 47094  00EF90  2987               	incf	__motor_move_steps@distance_to_limit& (0+255),w,b
 47095  00EF92  E108               	bnz	u11890
 47096  00EF94  2988               	incf	(__motor_move_steps@distance_to_limit+1)& (0+255),w,b
 47097  00EF96  E106               	bnz	u11890
 47098  00EF98  2989               	incf	(__motor_move_steps@distance_to_limit+2)& (0+255),w,b
 47099  00EF9A  E104               	bnz	u11890
 47100  00EF9C  0E7F               	movlw	127
 47101  00EF9E  198A               	xorwf	(__motor_move_steps@distance_to_limit+3)& (0+255),w,b
 47102  00EFA0  B4D8               	btfsc	status,2,c
 47103  00EFA2  D002               	goto	l2498
 47104  00EFA4                     u11890:
 47105                           
 47106                           ; BSR set to: 0
 47107                           ;motor.c: 243: {;motor.c: 244: type = MOTOR_MOVE_TYPE_NORMAL;
 47108  00EFA4  0E00               	movlw	0
 47109  00EFA6  6F84               	movwf	__motor_move_steps@type& (0+255),b
 47110  00EFA8                     l2498:
 47111                           
 47112                           ; BSR set to: 0
 47113                           ;motor.c: 245: };motor.c: 248: if(distance_in_steps>((uint32_t) distance_to_limit))
 47114                           
 47115                           ; BSR set to: 0
 47116  00EFA8  517D               	movf	__motor_move_steps@distance_in_steps& (0+255),w,b
 47117  00EFAA  5D87               	subwf	__motor_move_steps@distance_to_limit& (0+255),w,b
 47118  00EFAC  517E               	movf	(__motor_move_steps@distance_in_steps+1)& (0+255),w,b
 47119  00EFAE  5988               	subwfb	(__motor_move_steps@distance_to_limit+1)& (0+255),w,b
 47120  00EFB0  517F               	movf	(__motor_move_steps@distance_in_steps+2)& (0+255),w,b
 47121  00EFB2  5989               	subwfb	(__motor_move_steps@distance_to_limit+2)& (0+255),w,b
 47122  00EFB4  5180               	movf	(__motor_move_steps@distance_in_steps+3)& (0+255),w,b
 47123  00EFB6  598A               	subwfb	(__motor_move_steps@distance_to_limit+3)& (0+255),w,b
 47124  00EFB8  B0D8               	btfsc	status,0,c
 47125  00EFBA  D008               	goto	l2499
 47126                           
 47127                           ; BSR set to: 0
 47128                           ;motor.c: 249: {;motor.c: 250: distance_in_steps = (uint32_t) distance_to_limit;
 47129  00EFBC  C087  F07D         	movff	__motor_move_steps@distance_to_limit,__motor_move_steps@distance_in_steps
 47130  00EFC0  C088  F07E         	movff	__motor_move_steps@distance_to_limit+1,__motor_move_steps@distance_in_steps+1
 47131  00EFC4  C089  F07F         	movff	__motor_move_steps@distance_to_limit+2,__motor_move_steps@distance_in_steps+2
 47132  00EFC8  C08A  F080         	movff	__motor_move_steps@distance_to_limit+3,__motor_move_steps@distance_in_steps+3
 47133  00EFCC                     l2499:
 47134                           
 47135                           ; BSR set to: 0
 47136                           ;motor.c: 251: };motor.c: 255: if(overshoot==MOTOR_OVERSHOOT_NO_OVERSHOOT)
 47137                           
 47138                           ; BSR set to: 0
 47139  00EFCC  0583               	decf	__motor_move_steps@overshoot& (0+255),w,b
 47140  00EFCE  A4D8               	btfss	status,2,c
 47141  00EFD0  D012               	goto	l2500
 47142                           
 47143                           ; BSR set to: 0
 47144                           ;motor.c: 256: {;motor.c: 258: return _motor_schedule_command(direction, distance_in_ste
      +                          ps, speed, type);
 47145  00EFD2  C07D  F060         	movff	__motor_move_steps@distance_in_steps,__motor_schedule_command@distance_in_steps
 47146  00EFD6  C07E  F061         	movff	__motor_move_steps@distance_in_steps+1,__motor_schedule_command@distance_in_steps
      +                          +1
 47147  00EFDA  C07F  F062         	movff	__motor_move_steps@distance_in_steps+2,__motor_schedule_command@distance_in_steps
      +                          +2
 47148  00EFDE  C080  F063         	movff	__motor_move_steps@distance_in_steps+3,__motor_schedule_command@distance_in_steps
      +                          +3
 47149  00EFE2  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 47150  00EFE6  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 47151  00EFEA  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 47152  00EFEE  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 47153  00EFF0  EC06  F090         	call	__motor_schedule_command
 47154  00EFF4  0012               	return	
 47155  00EFF6                     l2500:
 47156                           
 47157                           ;motor.c: 260: };motor.c: 264: if(direction==os.approach_direction)
 47158  00EFF6  0100               	movlb	0	; () banked
 47159  00EFF8  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 47160  00EFFA  0101               	movlb	1	; () banked
 47161  00EFFC  1977               	xorwf	(_os+19)& (0+255),w,b	;volatile
 47162  00EFFE  A4D8               	btfss	status,2,c
 47163  00F000  D013               	goto	l2501
 47164                           
 47165                           ; BSR set to: 1
 47166                           ;motor.c: 265: {;motor.c: 266: return _motor_schedule_command(direction, distance_in_ste
      +                          ps, speed, type);
 47167  00F002  C07D  F060         	movff	__motor_move_steps@distance_in_steps,__motor_schedule_command@distance_in_steps
 47168  00F006  C07E  F061         	movff	__motor_move_steps@distance_in_steps+1,__motor_schedule_command@distance_in_steps
      +                          +1
 47169  00F00A  C07F  F062         	movff	__motor_move_steps@distance_in_steps+2,__motor_schedule_command@distance_in_steps
      +                          +2
 47170  00F00E  C080  F063         	movff	__motor_move_steps@distance_in_steps+3,__motor_schedule_command@distance_in_steps
      +                          +3
 47171  00F012  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 47172  00F016  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 47173  00F01A  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 47174  00F01E  0100               	movlb	0	; () banked
 47175  00F020  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 47176  00F022  EC06  F090         	call	__motor_schedule_command
 47177  00F026  0012               	return	
 47178  00F028                     l2501:
 47179                           
 47180                           ;motor.c: 267: };motor.c: 272: if(config.overshoot_in_steps==0)
 47181  00F028  0101               	movlb	1	; () banked
 47182  00F02A  519A               	movf	(_config+5)& (0+255),w,b
 47183  00F02C  119B               	iorwf	(_config+6)& (0+255),w,b
 47184  00F02E  A4D8               	btfss	status,2,c
 47185  00F030  D013               	goto	l2502
 47186                           
 47187                           ; BSR set to: 1
 47188                           ;motor.c: 273: {;motor.c: 274: return _motor_schedule_command(direction, distance_in_ste
      +                          ps, speed, type);
 47189  00F032  C07D  F060         	movff	__motor_move_steps@distance_in_steps,__motor_schedule_command@distance_in_steps
 47190  00F036  C07E  F061         	movff	__motor_move_steps@distance_in_steps+1,__motor_schedule_command@distance_in_steps
      +                          +1
 47191  00F03A  C07F  F062         	movff	__motor_move_steps@distance_in_steps+2,__motor_schedule_command@distance_in_steps
      +                          +2
 47192  00F03E  C080  F063         	movff	__motor_move_steps@distance_in_steps+3,__motor_schedule_command@distance_in_steps
      +                          +3
 47193  00F042  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 47194  00F046  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 47195  00F04A  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 47196  00F04E  0100               	movlb	0	; () banked
 47197  00F050  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 47198  00F052  EC06  F090         	call	__motor_schedule_command
 47199  00F056  0012               	return	
 47200  00F058                     l2502:
 47201                           
 47202                           ;motor.c: 275: };motor.c: 280: distance_in_steps += config.overshoot_in_steps;
 47203  00F058  0101               	movlb	1	; () banked
 47204  00F05A  519A               	movf	(_config+5)& (0+255),w,b
 47205  00F05C  0100               	movlb	0	; () banked
 47206  00F05E  277D               	addwf	__motor_move_steps@distance_in_steps& (0+255),f,b
 47207  00F060  0101               	movlb	1	; () banked
 47208  00F062  519B               	movf	(_config+6)& (0+255),w,b
 47209  00F064  0100               	movlb	0	; () banked
 47210  00F066  237E               	addwfc	(__motor_move_steps@distance_in_steps+1)& (0+255),f,b
 47211  00F068  0E00               	movlw	0
 47212  00F06A  237F               	addwfc	(__motor_move_steps@distance_in_steps+2)& (0+255),f,b
 47213  00F06C  0E00               	movlw	0
 47214  00F06E  2380               	addwfc	(__motor_move_steps@distance_in_steps+3)& (0+255),f,b
 47215                           
 47216                           ; BSR set to: 0
 47217                           ;motor.c: 281: return_value_1 = _motor_schedule_command(direction, distance_in_steps, sp
      +                          eed, type);
 47218  00F070  C07D  F060         	movff	__motor_move_steps@distance_in_steps,__motor_schedule_command@distance_in_steps
 47219  00F074  C07E  F061         	movff	__motor_move_steps@distance_in_steps+1,__motor_schedule_command@distance_in_steps
      +                          +1
 47220  00F078  C07F  F062         	movff	__motor_move_steps@distance_in_steps+2,__motor_schedule_command@distance_in_steps
      +                          +2
 47221  00F07C  C080  F063         	movff	__motor_move_steps@distance_in_steps+3,__motor_schedule_command@distance_in_steps
      +                          +3
 47222  00F080  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 47223  00F084  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 47224  00F088  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 47225  00F08C  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 47226  00F08E  EC06  F090         	call	__motor_schedule_command
 47227  00F092  0100               	movlb	0	; () banked
 47228  00F094  6F85               	movwf	__motor_move_steps@return_value_1& (0+255),b
 47229                           
 47230                           ; BSR set to: 0
 47231                           ;motor.c: 282: return_value_2 = _motor_schedule_command(os.approach_direction, (uint32_t
      +                          ) config.overshoot_in_steps, speed, type);
 47232  00F096  C19A  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 47233  00F09A  C19B  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 47234  00F09E  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 47235  00F0A0  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 47236  00F0A2  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 47237  00F0A6  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 47238  00F0AA  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 47239  00F0AE  0101               	movlb	1	; () banked
 47240  00F0B0  5177               	movf	(_os+19)& (0+255),w,b	;volatile
 47241  00F0B2  EC06  F090         	call	__motor_schedule_command
 47242  00F0B6  0100               	movlb	0	; () banked
 47243  00F0B8  6F86               	movwf	__motor_move_steps@return_value_2& (0+255),b
 47244                           
 47245                           ; BSR set to: 0
 47246                           ;motor.c: 286: if(return_value_1 > return_value_2)
 47247  00F0BA  5185               	movf	__motor_move_steps@return_value_1& (0+255),w,b
 47248  00F0BC  5D86               	subwf	__motor_move_steps@return_value_2& (0+255),w,b
 47249  00F0BE  B0D8               	btfsc	status,0,c
 47250  00F0C0  D002               	goto	l2503
 47251                           
 47252                           ; BSR set to: 0
 47253                           ;motor.c: 287: {;motor.c: 288: return return_value_1;
 47254  00F0C2  5185               	movf	__motor_move_steps@return_value_1& (0+255),w,b
 47255                           
 47256                           ; BSR set to: 0
 47257                           ;motor.c: 289: }
 47258                           
 47259                           ; BSR set to: 0
 47260  00F0C4  0012               	return	
 47261  00F0C6                     l2503:
 47262                           
 47263                           ; BSR set to: 0
 47264                           ;motor.c: 290: else;motor.c: 291: {;motor.c: 292: return return_value_2;
 47265                           
 47266                           ; BSR set to: 0
 47267  00F0C6  5186               	movf	__motor_move_steps@return_value_2& (0+255),w,b
 47268                           
 47269                           ; BSR set to: 0
 47270  00F0C8  0012               	return	
 47271  00F0CA                     __end_of__motor_move_steps:
 47272                           	opt stack 0
 47273                           tosu	equ	0xFFF
 47274                           tosh	equ	0xFFE
 47275                           tosl	equ	0xFFD
 47276                           pclath	equ	0xFFA
 47277                           tblptru	equ	0xFF8
 47278                           tblptrh	equ	0xFF7
 47279                           tblptrl	equ	0xFF6
 47280                           tablat	equ	0xFF5
 47281                           prodh	equ	0xFF4
 47282                           prodl	equ	0xFF3
 47283                           intcon	equ	0xFF2
 47284                           indf0	equ	0xFEF
 47285                           postinc0	equ	0xFEE
 47286                           fsr0h	equ	0xFEA
 47287                           fsr0l	equ	0xFE9
 47288                           wreg	equ	0xFE8
 47289                           indf1	equ	0xFE7
 47290                           postinc1	equ	0xFE6
 47291                           postdec1	equ	0xFE5
 47292                           plusw1	equ	0xFE3
 47293                           fsr1h	equ	0xFE2
 47294                           fsr1l	equ	0xFE1
 47295                           indf2	equ	0xFDF
 47296                           postinc2	equ	0xFDE
 47297                           postdec2	equ	0xFDD
 47298                           plusw2	equ	0xFDB
 47299                           fsr2h	equ	0xFDA
 47300                           fsr2l	equ	0xFD9
 47301                           status	equ	0xFD8
 47302                           
 47303 ;; *************** function __motor_schedule_command *****************
 47304 ;; Defined at:
 47305 ;;		line 135 in file "motor.c"
 47306 ;; Parameters:    Size  Location     Type
 47307 ;;  direction       1    wreg     enum E6622
 47308 ;;  distance_in_    4    0[BANK0 ] unsigned long 
 47309 ;;  speed           2    4[BANK0 ] unsigned int 
 47310 ;;  type            1    6[BANK0 ] enum E6631
 47311 ;; Auto vars:     Size  Location     Type
 47312 ;;  direction       1    7[BANK0 ] enum E6622
 47313 ;; Return value:  Size  Location     Type
 47314 ;;                  1    wreg      enum E6639
 47315 ;; Registers used:
 47316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 47317 ;; Tracked objects:
 47318 ;;		On entry : 0/0
 47319 ;;		On exit  : 0/0
 47320 ;;		Unchanged: 0/0
 47321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47322 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47323 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47325 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47326 ;;Total ram usage:        8 bytes
 47327 ;; Hardware stack levels used:    1
 47328 ;; Hardware stack levels required when called:   11
 47329 ;; This function calls:
 47330 ;;		_motor_items_in_cue
 47331 ;; This function is called by:
 47332 ;;		__motor_move_steps
 47333 ;;		__motor_move_back_forth
 47334 ;; This function uses a non-reentrant model
 47335 ;;
 47336                           
 47337                           	psect	text196
 47338  01200C                     __ptext196:
 47339                           	opt stack 0
 47340  01200C                     __motor_schedule_command:
 47341                           	opt stack 15
 47342                           
 47343                           ;incstack = 0
 47344                           ;__motor_schedule_command@direction stored from wreg
 47345  01200C  0100               	movlb	0	; () banked
 47346  01200E  6F67               	movwf	__motor_schedule_command@direction& (0+255),b
 47347                           
 47348                           ;motor.c: 137: if(motor_items_in_cue()==8-1)
 47349  012010  EC21  F0B2         	call	_motor_items_in_cue	;wreg free
 47350  012014  0A07               	xorlw	7
 47351  012016  A4D8               	btfss	status,2,c
 47352  012018  D002               	goto	l2479
 47353                           
 47354                           ;motor.c: 138: {;motor.c: 140: return MOTOR_RETURN_VALUE_BUFFER_FULL;
 47355  01201A  0E08               	movlw	8
 47356  01201C  0012               	return	
 47357  01201E                     l2479:
 47358                           
 47359                           ;motor.c: 141: };motor.c: 143: if((direction!=MOTOR_DIRECTION_CW) && (direction!=MOTOR_D
      +                          IRECTION_CCW))
 47360  01201E  0100               	movlb	0	; () banked
 47361  012020  0567               	decf	__motor_schedule_command@direction& (0+255),w,b
 47362  012022  B4D8               	btfsc	status,2,c
 47363  012024  D005               	goto	l2481
 47364                           
 47365                           ; BSR set to: 0
 47366  012026  2967               	incf	__motor_schedule_command@direction& (0+255),w,b
 47367  012028  B4D8               	btfsc	status,2,c
 47368  01202A  D002               	goto	l2481
 47369                           
 47370                           ; BSR set to: 0
 47371                           ;motor.c: 144: {;motor.c: 146: return MOTOR_RETURN_VALUE_INVALID_DIRECTION;
 47372  01202C  0E04               	movlw	4
 47373                           
 47374                           ; BSR set to: 0
 47375  01202E  0012               	return	
 47376  012030                     l2481:
 47377                           
 47378                           ; BSR set to: 0
 47379                           ;motor.c: 147: };motor.c: 149: if(distance_in_steps==0)
 47380                           
 47381                           ; BSR set to: 0
 47382  012030  5160               	movf	__motor_schedule_command@distance_in_steps& (0+255),w,b
 47383  012032  1161               	iorwf	(__motor_schedule_command@distance_in_steps+1)& (0+255),w,b
 47384  012034  1162               	iorwf	(__motor_schedule_command@distance_in_steps+2)& (0+255),w,b
 47385  012036  1163               	iorwf	(__motor_schedule_command@distance_in_steps+3)& (0+255),w,b
 47386  012038  A4D8               	btfss	status,2,c
 47387  01203A  D002               	goto	l2482
 47388                           
 47389                           ; BSR set to: 0
 47390                           ;motor.c: 150: {;motor.c: 152: return MOTOR_RETURN_VALUE_INVALID_DISTANCE;
 47391  01203C  0E03               	movlw	3
 47392                           
 47393                           ; BSR set to: 0
 47394  01203E  0012               	return	
 47395  012040                     l2482:
 47396                           
 47397                           ; BSR set to: 0
 47398                           ;motor.c: 153: };motor.c: 155: if((type!=MOTOR_MOVE_TYPE_NORMAL) && (type!=MOTOR_MOVE_TY
      +                          PE_ENDLESS))
 47399                           
 47400                           ; BSR set to: 0
 47401  012040  5166               	movf	__motor_schedule_command@type& (0+255),w,b
 47402  012042  B4D8               	btfsc	status,2,c
 47403  012044  D005               	goto	l2483
 47404                           
 47405                           ; BSR set to: 0
 47406  012046  0566               	decf	__motor_schedule_command@type& (0+255),w,b
 47407  012048  B4D8               	btfsc	status,2,c
 47408  01204A  D002               	goto	l2483
 47409                           
 47410                           ; BSR set to: 0
 47411                           ;motor.c: 156: {;motor.c: 158: return MOTOR_RETURN_VALUE_INVALID_MOVE_TYPE;
 47412  01204C  0E05               	movlw	5
 47413                           
 47414                           ; BSR set to: 0
 47415  01204E  0012               	return	
 47416  012050                     l2483:
 47417                           
 47418                           ; BSR set to: 0
 47419                           ;motor.c: 159: };motor.c: 161: if(speed==0)
 47420                           
 47421                           ; BSR set to: 0
 47422  012050  5164               	movf	__motor_schedule_command@speed& (0+255),w,b
 47423  012052  1165               	iorwf	(__motor_schedule_command@speed+1)& (0+255),w,b
 47424  012054  A4D8               	btfss	status,2,c
 47425  012056  D002               	goto	l2484
 47426                           
 47427                           ; BSR set to: 0
 47428                           ;motor.c: 162: {;motor.c: 164: return MOTOR_RETURN_VALUE_INVALID_SPEED;
 47429  012058  0E02               	movlw	2
 47430                           
 47431                           ; BSR set to: 0
 47432  01205A  0012               	return	
 47433  01205C                     l2484:
 47434                           
 47435                           ; BSR set to: 0
 47436                           ;motor.c: 165: };motor.c: 168: if(speed>config.maximum_speed)
 47437                           
 47438                           ; BSR set to: 0
 47439  01205C  5164               	movf	__motor_schedule_command@speed& (0+255),w,b
 47440  01205E  0101               	movlb	1	; () banked
 47441  012060  5DA0               	subwf	(_config+11)& (0+255),w,b
 47442  012062  0100               	movlb	0	; () banked
 47443  012064  5165               	movf	(__motor_schedule_command@speed+1)& (0+255),w,b
 47444  012066  0101               	movlb	1	; () banked
 47445  012068  59A1               	subwfb	(_config+12)& (0+255),w,b
 47446  01206A  B0D8               	btfsc	status,0,c
 47447  01206C  D004               	goto	l2485
 47448                           
 47449                           ; BSR set to: 1
 47450                           ;motor.c: 169: {;motor.c: 170: speed = config.maximum_speed;
 47451  01206E  C1A0  F064         	movff	_config+11,__motor_schedule_command@speed
 47452  012072  C1A1  F065         	movff	_config+12,__motor_schedule_command@speed+1
 47453  012076                     l2485:
 47454                           
 47455                           ; BSR set to: 1
 47456                           ;motor.c: 171: };motor.c: 174: motor_command_cue[motor_cue_write_index].direction = dire
      +                          ction;
 47457                           
 47458                           ; BSR set to: 1
 47459  012076  514B               	movf	_motor_cue_write_index& (0+255),w,b
 47460  012078  0D08               	mullw	8
 47461  01207A  0E00               	movlw	low _motor_command_cue
 47462  01207C  24F3               	addwf	prodl,w,c
 47463  01207E  6ED9               	movwf	fsr2l,c
 47464  012080  0E03               	movlw	high _motor_command_cue
 47465  012082  20F4               	addwfc	prodh,w,c
 47466  012084  6EDA               	movwf	fsr2h,c
 47467  012086  C067  FFDF         	movff	__motor_schedule_command@direction,indf2
 47468                           
 47469                           ;motor.c: 175: motor_command_cue[motor_cue_write_index].distance = distance_in_steps;
 47470  01208A  514B               	movf	_motor_cue_write_index& (0+255),w,b
 47471  01208C  0D08               	mullw	8
 47472  01208E  0E01               	movlw	1
 47473  012090  26F3               	addwf	prodl,f,c
 47474  012092  0E00               	movlw	0
 47475  012094  22F4               	addwfc	prodh,f,c
 47476  012096  0E00               	movlw	low _motor_command_cue
 47477  012098  24F3               	addwf	prodl,w,c
 47478  01209A  6ED9               	movwf	fsr2l,c
 47479  01209C  0E03               	movlw	high _motor_command_cue
 47480  01209E  20F4               	addwfc	prodh,w,c
 47481  0120A0  6EDA               	movwf	fsr2h,c
 47482  0120A2  C060  FFDE         	movff	__motor_schedule_command@distance_in_steps,postinc2
 47483  0120A6  C061  FFDE         	movff	__motor_schedule_command@distance_in_steps+1,postinc2
 47484  0120AA  C062  FFDE         	movff	__motor_schedule_command@distance_in_steps+2,postinc2
 47485  0120AE  C063  FFDE         	movff	__motor_schedule_command@distance_in_steps+3,postinc2
 47486                           
 47487                           ;motor.c: 176: motor_command_cue[motor_cue_write_index].speed = speed;
 47488  0120B2  514B               	movf	_motor_cue_write_index& (0+255),w,b
 47489  0120B4  0D08               	mullw	8
 47490  0120B6  0E05               	movlw	5
 47491  0120B8  26F3               	addwf	prodl,f,c
 47492  0120BA  0E00               	movlw	0
 47493  0120BC  22F4               	addwfc	prodh,f,c
 47494  0120BE  0E00               	movlw	low _motor_command_cue
 47495  0120C0  24F3               	addwf	prodl,w,c
 47496  0120C2  6ED9               	movwf	fsr2l,c
 47497  0120C4  0E03               	movlw	high _motor_command_cue
 47498  0120C6  20F4               	addwfc	prodh,w,c
 47499  0120C8  6EDA               	movwf	fsr2h,c
 47500  0120CA  C064  FFDE         	movff	__motor_schedule_command@speed,postinc2
 47501  0120CE  C065  FFDD         	movff	__motor_schedule_command@speed+1,postdec2
 47502                           
 47503                           ;motor.c: 177: motor_command_cue[motor_cue_write_index].type = type;
 47504  0120D2  514B               	movf	_motor_cue_write_index& (0+255),w,b
 47505  0120D4  0D08               	mullw	8
 47506  0120D6  0E07               	movlw	7
 47507  0120D8  26F3               	addwf	prodl,f,c
 47508  0120DA  0E00               	movlw	0
 47509  0120DC  22F4               	addwfc	prodh,f,c
 47510  0120DE  0E00               	movlw	low _motor_command_cue
 47511  0120E0  24F3               	addwf	prodl,w,c
 47512  0120E2  6ED9               	movwf	fsr2l,c
 47513  0120E4  0E03               	movlw	high _motor_command_cue
 47514  0120E6  20F4               	addwfc	prodh,w,c
 47515  0120E8  6EDA               	movwf	fsr2h,c
 47516  0120EA  C066  FFDF         	movff	__motor_schedule_command@type,indf2
 47517                           
 47518                           ; BSR set to: 1
 47519                           ;motor.c: 180: ++motor_cue_write_index;
 47520  0120EE  2B4B               	incf	_motor_cue_write_index& (0+255),f,b
 47521                           
 47522                           ; BSR set to: 1
 47523                           ;motor.c: 181: motor_cue_write_index &= 0b111;
 47524  0120F0  0E07               	movlw	7
 47525  0120F2  174B               	andwf	_motor_cue_write_index& (0+255),f,b
 47526                           
 47527                           ; BSR set to: 1
 47528                           ;motor.c: 184: return MOTOR_RETURN_VALUE_OK;
 47529  0120F4  0E00               	movlw	0
 47530  0120F6  0012               	return	
 47531  0120F8                     __end_of__motor_schedule_command:
 47532                           	opt stack 0
 47533                           tosu	equ	0xFFF
 47534                           tosh	equ	0xFFE
 47535                           tosl	equ	0xFFD
 47536                           pclath	equ	0xFFA
 47537                           tblptru	equ	0xFF8
 47538                           tblptrh	equ	0xFF7
 47539                           tblptrl	equ	0xFF6
 47540                           tablat	equ	0xFF5
 47541                           prodh	equ	0xFF4
 47542                           prodl	equ	0xFF3
 47543                           intcon	equ	0xFF2
 47544                           indf0	equ	0xFEF
 47545                           postinc0	equ	0xFEE
 47546                           fsr0h	equ	0xFEA
 47547                           fsr0l	equ	0xFE9
 47548                           wreg	equ	0xFE8
 47549                           indf1	equ	0xFE7
 47550                           postinc1	equ	0xFE6
 47551                           postdec1	equ	0xFE5
 47552                           plusw1	equ	0xFE3
 47553                           fsr1h	equ	0xFE2
 47554                           fsr1l	equ	0xFE1
 47555                           indf2	equ	0xFDF
 47556                           postinc2	equ	0xFDE
 47557                           postdec2	equ	0xFDD
 47558                           plusw2	equ	0xFDB
 47559                           fsr2h	equ	0xFDA
 47560                           fsr2l	equ	0xFD9
 47561                           status	equ	0xFD8
 47562                           
 47563 ;; *************** function _motor_items_in_cue *****************
 47564 ;; Defined at:
 47565 ;;		line 608 in file "motor.c"
 47566 ;; Parameters:    Size  Location     Type
 47567 ;;		None
 47568 ;; Auto vars:     Size  Location     Type
 47569 ;;		None
 47570 ;; Return value:  Size  Location     Type
 47571 ;;                  1    wreg      unsigned char 
 47572 ;; Registers used:
 47573 ;;		wreg, status,2, status,0
 47574 ;; Tracked objects:
 47575 ;;		On entry : 0/0
 47576 ;;		On exit  : 0/0
 47577 ;;		Unchanged: 0/0
 47578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47583 ;;Total ram usage:        0 bytes
 47584 ;; Hardware stack levels used:    1
 47585 ;; Hardware stack levels required when called:   10
 47586 ;; This function calls:
 47587 ;;		Nothing
 47588 ;; This function is called by:
 47589 ;;		__motor_schedule_command
 47590 ;;		__motor_move_steps
 47591 ;;		__motor_move_back_forth
 47592 ;;		_motor_process_cue
 47593 ;; This function uses a non-reentrant model
 47594 ;;
 47595                           
 47596                           	psect	text197
 47597  016442                     __ptext197:
 47598                           	opt stack 0
 47599  016442                     _motor_items_in_cue:
 47600                           	opt stack 19
 47601                           
 47602                           ;motor.c: 610: return ((motor_cue_write_index-motor_cue_read_index) & 0b111);
 47603                           
 47604                           ;incstack = 0
 47605  016442  0101               	movlb	1	; () banked
 47606  016444  514C               	movf	_motor_cue_read_index& (0+255),w,b
 47607  016446  0800               	sublw	0
 47608  016448  254B               	addwf	_motor_cue_write_index& (0+255),w,b
 47609  01644A  0B07               	andlw	7
 47610  01644C  0012               	return	
 47611  01644E                     __end_of_motor_items_in_cue:
 47612                           	opt stack 0
 47613                           tosu	equ	0xFFF
 47614                           tosh	equ	0xFFE
 47615                           tosl	equ	0xFFD
 47616                           pclath	equ	0xFFA
 47617                           tblptru	equ	0xFF8
 47618                           tblptrh	equ	0xFF7
 47619                           tblptrl	equ	0xFF6
 47620                           tablat	equ	0xFF5
 47621                           prodh	equ	0xFF4
 47622                           prodl	equ	0xFF3
 47623                           intcon	equ	0xFF2
 47624                           indf0	equ	0xFEF
 47625                           postinc0	equ	0xFEE
 47626                           fsr0h	equ	0xFEA
 47627                           fsr0l	equ	0xFE9
 47628                           wreg	equ	0xFE8
 47629                           indf1	equ	0xFE7
 47630                           postinc1	equ	0xFE6
 47631                           postdec1	equ	0xFE5
 47632                           plusw1	equ	0xFE3
 47633                           fsr1h	equ	0xFE2
 47634                           fsr1l	equ	0xFE1
 47635                           indf2	equ	0xFDF
 47636                           postinc2	equ	0xFDE
 47637                           postdec2	equ	0xFDD
 47638                           plusw2	equ	0xFDB
 47639                           fsr2h	equ	0xFDA
 47640                           fsr2l	equ	0xFD9
 47641                           status	equ	0xFD8
 47642                           
 47643 ;; *************** function __motor_distance_to_limit *****************
 47644 ;; Defined at:
 47645 ;;		line 448 in file "motor.c"
 47646 ;; Parameters:    Size  Location     Type
 47647 ;;  direction       1    wreg     enum E6622
 47648 ;; Auto vars:     Size  Location     Type
 47649 ;;  direction       1   24[BANK0 ] enum E6622
 47650 ;;  absolute_pos    4   25[BANK0 ] long 
 47651 ;;  distance_to_    4   20[BANK0 ] long 
 47652 ;; Return value:  Size  Location     Type
 47653 ;;                  4   12[BANK0 ] long 
 47654 ;; Registers used:
 47655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 47656 ;; Tracked objects:
 47657 ;;		On entry : 0/0
 47658 ;;		On exit  : 0/0
 47659 ;;		Unchanged: 0/0
 47660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47661 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47662 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47663 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47664 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47665 ;;Total ram usage:       17 bytes
 47666 ;; Hardware stack levels used:    1
 47667 ;; Hardware stack levels required when called:   11
 47668 ;; This function calls:
 47669 ;;		___lmul
 47670 ;; This function is called by:
 47671 ;;		__motor_move_steps
 47672 ;;		__motor_decide_direction
 47673 ;; This function uses a non-reentrant model
 47674 ;;
 47675                           
 47676                           	psect	text198
 47677  01014E                     __ptext198:
 47678                           	opt stack 0
 47679  01014E                     __motor_distance_to_limit:
 47680                           	opt stack 15
 47681                           
 47682                           ; BSR set to: 1
 47683                           ;incstack = 0
 47684                           ;__motor_distance_to_limit@direction stored from wreg
 47685  01014E  0100               	movlb	0	; () banked
 47686  010150  6F78               	movwf	__motor_distance_to_limit@direction& (0+255),b
 47687                           
 47688                           ;motor.c: 451: int32_t absolute_position_in_steps;;motor.c: 452: int32_t distance_to_lim
      +                          it_in_steps;;motor.c: 455: if(direction==MOTOR_DIRECTION_CCW && config.use_ccw_limit==0)
 47689  010152  0100               	movlb	0	; () banked
 47690  010154  2978               	incf	__motor_distance_to_limit@direction& (0+255),w,b
 47691  010156  A4D8               	btfss	status,2,c
 47692  010158  D00E               	goto	l2538
 47693                           
 47694                           ; BSR set to: 0
 47695  01015A  0101               	movlb	1	; () banked
 47696  01015C  51B4               	movf	(_config+31)& (0+255),w,b
 47697  01015E  A4D8               	btfss	status,2,c
 47698  010160  D00A               	goto	l2538
 47699                           
 47700                           ; BSR set to: 1
 47701                           ;motor.c: 456: {;motor.c: 457: return 2147483647;
 47702  010162  0EFF               	movlw	255
 47703  010164  0100               	movlb	0	; () banked
 47704  010166  6F6C               	movwf	?__motor_distance_to_limit& (0+255),b
 47705  010168  0EFF               	movlw	255
 47706  01016A  6F6D               	movwf	(?__motor_distance_to_limit+1)& (0+255),b
 47707  01016C  0EFF               	movlw	255
 47708  01016E  6F6E               	movwf	(?__motor_distance_to_limit+2)& (0+255),b
 47709  010170  0E7F               	movlw	127
 47710  010172  6F6F               	movwf	(?__motor_distance_to_limit+3)& (0+255),b
 47711                           
 47712                           ; BSR set to: 0
 47713  010174  0012               	return	
 47714  010176                     l2538:
 47715                           
 47716                           ;motor.c: 458: };motor.c: 459: if(direction==MOTOR_DIRECTION_CW && config.use_cw_limit==
      +                          0)
 47717                           
 47718                           ; BSR set to: 0
 47719  010176  0100               	movlb	0	; () banked
 47720  010178  0578               	decf	__motor_distance_to_limit@direction& (0+255),w,b
 47721  01017A  A4D8               	btfss	status,2,c
 47722  01017C  D00E               	goto	l2540
 47723                           
 47724                           ; BSR set to: 0
 47725  01017E  0101               	movlb	1	; () banked
 47726  010180  51AB               	movf	(_config+22)& (0+255),w,b
 47727  010182  A4D8               	btfss	status,2,c
 47728  010184  D00A               	goto	l2540
 47729                           
 47730                           ; BSR set to: 1
 47731                           ;motor.c: 460: {;motor.c: 461: return 2147483647;
 47732  010186  0EFF               	movlw	255
 47733  010188  0100               	movlb	0	; () banked
 47734  01018A  6F6C               	movwf	?__motor_distance_to_limit& (0+255),b
 47735  01018C  0EFF               	movlw	255
 47736  01018E  6F6D               	movwf	(?__motor_distance_to_limit+1)& (0+255),b
 47737  010190  0EFF               	movlw	255
 47738  010192  6F6E               	movwf	(?__motor_distance_to_limit+2)& (0+255),b
 47739  010194  0E7F               	movlw	127
 47740  010196  6F6F               	movwf	(?__motor_distance_to_limit+3)& (0+255),b
 47741                           
 47742                           ; BSR set to: 0
 47743  010198  0012               	return	
 47744  01019A                     l2540:
 47745                           
 47746                           ;motor.c: 462: };motor.c: 465: absolute_position_in_steps = os.absolute_position;
 47747                           
 47748                           ; BSR set to: 0
 47749  01019A  EE21  F06F         	lfsr	2,_os+11	;volatile
 47750  01019E  CFDE F079          	movff	postinc2,__motor_distance_to_limit@absolute_position_in_steps
 47751  0101A2  CFDD F07A          	movff	postdec2,__motor_distance_to_limit@absolute_position_in_steps+1
 47752  0101A6  0100               	movlb	0	; () banked
 47753  0101A8  0E00               	movlw	0
 47754  0101AA  BF7A               	btfsc	(__motor_distance_to_limit@absolute_position_in_steps+1)& (0+255),7,b
 47755  0101AC  0EFF               	movlw	-1
 47756  0101AE  6F7B               	movwf	(__motor_distance_to_limit@absolute_position_in_steps+2)& (0+255),b
 47757  0101B0  6F7C               	movwf	(__motor_distance_to_limit@absolute_position_in_steps+3)& (0+255),b
 47758                           
 47759                           ; BSR set to: 0
 47760                           ;motor.c: 466: absolute_position_in_steps *= config.full_circle_in_steps;
 47761  0101B2  C079  F060         	movff	__motor_distance_to_limit@absolute_position_in_steps,___lmul@multiplier
 47762  0101B6  C07A  F061         	movff	__motor_distance_to_limit@absolute_position_in_steps+1,___lmul@multiplier+1
 47763  0101BA  C07B  F062         	movff	__motor_distance_to_limit@absolute_position_in_steps+2,___lmul@multiplier+2
 47764  0101BE  C07C  F063         	movff	__motor_distance_to_limit@absolute_position_in_steps+3,___lmul@multiplier+3
 47765  0101C2  C195  F064         	movff	_config,___lmul@multiplicand
 47766  0101C6  C196  F065         	movff	_config+1,___lmul@multiplicand+1
 47767  0101CA  C197  F066         	movff	_config+2,___lmul@multiplicand+2
 47768  0101CE  C198  F067         	movff	_config+3,___lmul@multiplicand+3
 47769  0101D2  EC85  F0A9         	call	___lmul	;wreg free
 47770  0101D6  C060  F079         	movff	?___lmul,__motor_distance_to_limit@absolute_position_in_steps
 47771  0101DA  C061  F07A         	movff	?___lmul+1,__motor_distance_to_limit@absolute_position_in_steps+1
 47772  0101DE  C062  F07B         	movff	?___lmul+2,__motor_distance_to_limit@absolute_position_in_steps+2
 47773  0101E2  C063  F07C         	movff	?___lmul+3,__motor_distance_to_limit@absolute_position_in_steps+3
 47774                           
 47775                           ;motor.c: 467: absolute_position_in_steps += os.current_position_in_steps;
 47776  0101E6  EE21  F06B         	lfsr	2,_os+7	;volatile
 47777  0101EA  50DE               	movf	postinc2,w,c
 47778  0101EC  0100               	movlb	0	; () banked
 47779  0101EE  2779               	addwf	__motor_distance_to_limit@absolute_position_in_steps& (0+255),f,b
 47780  0101F0  50DE               	movf	postinc2,w,c
 47781  0101F2  237A               	addwfc	(__motor_distance_to_limit@absolute_position_in_steps+1)& (0+255),f,b
 47782  0101F4  50DE               	movf	postinc2,w,c
 47783  0101F6  237B               	addwfc	(__motor_distance_to_limit@absolute_position_in_steps+2)& (0+255),f,b
 47784  0101F8  50DD               	movf	postdec2,w,c
 47785  0101FA  237C               	addwfc	(__motor_distance_to_limit@absolute_position_in_steps+3)& (0+255),f,b
 47786                           
 47787                           ; BSR set to: 0
 47788                           ;motor.c: 470: if(direction==MOTOR_DIRECTION_CCW)
 47789  0101FC  2978               	incf	__motor_distance_to_limit@direction& (0+255),w,b
 47790  0101FE  A4D8               	btfss	status,2,c
 47791  010200  D01C               	goto	l2541
 47792                           
 47793                           ; BSR set to: 0
 47794                           ;motor.c: 471: {;motor.c: 472: distance_to_limit_in_steps = absolute_position_in_steps -
      +                           config.ccw_limit_in_steps;
 47795  010202  C1B9  F070         	movff	_config+36,??__motor_distance_to_limit
 47796  010206  C1BA  F071         	movff	_config+37,??__motor_distance_to_limit+1
 47797  01020A  C1BB  F072         	movff	_config+38,??__motor_distance_to_limit+2
 47798  01020E  C1BC  F073         	movff	_config+39,??__motor_distance_to_limit+3
 47799  010212  1F70               	comf	??__motor_distance_to_limit& (0+255),f,b
 47800  010214  1F71               	comf	(??__motor_distance_to_limit+1)& (0+255),f,b
 47801  010216  1F72               	comf	(??__motor_distance_to_limit+2)& (0+255),f,b
 47802  010218  1F73               	comf	(??__motor_distance_to_limit+3)& (0+255),f,b
 47803  01021A  2B70               	incf	??__motor_distance_to_limit& (0+255),f,b
 47804  01021C  0E00               	movlw	0
 47805  01021E  2371               	addwfc	(??__motor_distance_to_limit+1)& (0+255),f,b
 47806  010220  2372               	addwfc	(??__motor_distance_to_limit+2)& (0+255),f,b
 47807  010222  2373               	addwfc	(??__motor_distance_to_limit+3)& (0+255),f,b
 47808  010224  5179               	movf	__motor_distance_to_limit@absolute_position_in_steps& (0+255),w,b
 47809  010226  2570               	addwf	??__motor_distance_to_limit& (0+255),w,b
 47810  010228  6F74               	movwf	__motor_distance_to_limit@distance_to_limit_in_steps& (0+255),b
 47811  01022A  517A               	movf	(__motor_distance_to_limit@absolute_position_in_steps+1)& (0+255),w,b
 47812  01022C  2171               	addwfc	(??__motor_distance_to_limit+1)& (0+255),w,b
 47813  01022E  6F75               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+1)& (0+255),b
 47814  010230  517B               	movf	(__motor_distance_to_limit@absolute_position_in_steps+2)& (0+255),w,b
 47815  010232  2172               	addwfc	(??__motor_distance_to_limit+2)& (0+255),w,b
 47816  010234  6F76               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+2)& (0+255),b
 47817  010236  517C               	movf	(__motor_distance_to_limit@absolute_position_in_steps+3)& (0+255),w,b
 47818  010238  D023               	goto	L55
 47819  01023A                     l2541:
 47820                           
 47821                           ; BSR set to: 0
 47822                           ;motor.c: 474: else;motor.c: 475: {;motor.c: 476: distance_to_limit_in_steps = config.cw
      +                          _limit_in_steps - absolute_position_in_steps;
 47823                           
 47824                           ; BSR set to: 0
 47825  01023A  C079  F070         	movff	__motor_distance_to_limit@absolute_position_in_steps,??__motor_distance_to_limit
 47826  01023E  C07A  F071         	movff	__motor_distance_to_limit@absolute_position_in_steps+1,??__motor_distance_to_limi
      +                          t+1
 47827  010242  C07B  F072         	movff	__motor_distance_to_limit@absolute_position_in_steps+2,??__motor_distance_to_limi
      +                          t+2
 47828  010246  C07C  F073         	movff	__motor_distance_to_limit@absolute_position_in_steps+3,??__motor_distance_to_limi
      +                          t+3
 47829  01024A  1F70               	comf	??__motor_distance_to_limit& (0+255),f,b
 47830  01024C  1F71               	comf	(??__motor_distance_to_limit+1)& (0+255),f,b
 47831  01024E  1F72               	comf	(??__motor_distance_to_limit+2)& (0+255),f,b
 47832  010250  1F73               	comf	(??__motor_distance_to_limit+3)& (0+255),f,b
 47833  010252  2B70               	incf	??__motor_distance_to_limit& (0+255),f,b
 47834  010254  0E00               	movlw	0
 47835  010256  2371               	addwfc	(??__motor_distance_to_limit+1)& (0+255),f,b
 47836  010258  2372               	addwfc	(??__motor_distance_to_limit+2)& (0+255),f,b
 47837  01025A  2373               	addwfc	(??__motor_distance_to_limit+3)& (0+255),f,b
 47838  01025C  0101               	movlb	1	; () banked
 47839  01025E  51B0               	movf	(_config+27)& (0+255),w,b
 47840  010260  0100               	movlb	0	; () banked
 47841  010262  2570               	addwf	??__motor_distance_to_limit& (0+255),w,b
 47842  010264  6F74               	movwf	__motor_distance_to_limit@distance_to_limit_in_steps& (0+255),b
 47843  010266  0101               	movlb	1	; () banked
 47844  010268  51B1               	movf	(_config+28)& (0+255),w,b
 47845  01026A  0100               	movlb	0	; () banked
 47846  01026C  2171               	addwfc	(??__motor_distance_to_limit+1)& (0+255),w,b
 47847  01026E  6F75               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+1)& (0+255),b
 47848  010270  0101               	movlb	1	; () banked
 47849  010272  51B2               	movf	(_config+29)& (0+255),w,b
 47850  010274  0100               	movlb	0	; () banked
 47851  010276  2172               	addwfc	(??__motor_distance_to_limit+2)& (0+255),w,b
 47852  010278  6F76               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+2)& (0+255),b
 47853  01027A  0101               	movlb	1	; () banked
 47854  01027C  51B3               	movf	(_config+30)& (0+255),w,b
 47855  01027E  0100               	movlb	0	; () banked
 47856  010280                     L55:
 47857  010280  2173               	addwfc	(??__motor_distance_to_limit+3)& (0+255),w,b
 47858  010282  6F77               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+3)& (0+255),b
 47859                           
 47860                           ; BSR set to: 0
 47861                           ;motor.c: 477: };motor.c: 479: return distance_to_limit_in_steps;
 47862                           
 47863                           ; BSR set to: 0
 47864  010284  C074  F06C         	movff	__motor_distance_to_limit@distance_to_limit_in_steps,?__motor_distance_to_limit
 47865  010288  C075  F06D         	movff	__motor_distance_to_limit@distance_to_limit_in_steps+1,?__motor_distance_to_limit
      +                          +1
 47866  01028C  C076  F06E         	movff	__motor_distance_to_limit@distance_to_limit_in_steps+2,?__motor_distance_to_limit
      +                          +2
 47867  010290  C077  F06F         	movff	__motor_distance_to_limit@distance_to_limit_in_steps+3,?__motor_distance_to_limit
      +                          +3
 47868  010294  0012               	return	
 47869  010296                     __end_of__motor_distance_to_limit:
 47870                           	opt stack 0
 47871                           tosu	equ	0xFFF
 47872                           tosh	equ	0xFFE
 47873                           tosl	equ	0xFFD
 47874                           pclath	equ	0xFFA
 47875                           tblptru	equ	0xFF8
 47876                           tblptrh	equ	0xFF7
 47877                           tblptrl	equ	0xFF6
 47878                           tablat	equ	0xFF5
 47879                           prodh	equ	0xFF4
 47880                           prodl	equ	0xFF3
 47881                           intcon	equ	0xFF2
 47882                           indf0	equ	0xFEF
 47883                           postinc0	equ	0xFEE
 47884                           fsr0h	equ	0xFEA
 47885                           fsr0l	equ	0xFE9
 47886                           wreg	equ	0xFE8
 47887                           indf1	equ	0xFE7
 47888                           postinc1	equ	0xFE6
 47889                           postdec1	equ	0xFE5
 47890                           plusw1	equ	0xFE3
 47891                           fsr1h	equ	0xFE2
 47892                           fsr1l	equ	0xFE1
 47893                           indf2	equ	0xFDF
 47894                           postinc2	equ	0xFDE
 47895                           postdec2	equ	0xFDD
 47896                           plusw2	equ	0xFDB
 47897                           fsr2h	equ	0xFDA
 47898                           fsr2l	equ	0xFD9
 47899                           status	equ	0xFD8
 47900                           
 47901 ;; *************** function ___lmul *****************
 47902 ;; Defined at:
 47903 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
 47904 ;; Parameters:    Size  Location     Type
 47905 ;;  multiplier      4    0[BANK0 ] unsigned long 
 47906 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 47907 ;; Auto vars:     Size  Location     Type
 47908 ;;  product         4    8[BANK0 ] unsigned long 
 47909 ;; Return value:  Size  Location     Type
 47910 ;;                  4    0[BANK0 ] unsigned long 
 47911 ;; Registers used:
 47912 ;;		wreg, status,2, status,0
 47913 ;; Tracked objects:
 47914 ;;		On entry : 0/0
 47915 ;;		On exit  : 0/0
 47916 ;;		Unchanged: 0/0
 47917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47918 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47919 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47921 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47922 ;;Total ram usage:       12 bytes
 47923 ;; Hardware stack levels used:    1
 47924 ;; Hardware stack levels required when called:   10
 47925 ;; This function calls:
 47926 ;;		Nothing
 47927 ;; This function is called by:
 47928 ;;		__motor_distance_to_limit
 47929 ;;		__motor_get_speed_in_degrees
 47930 ;;		_atol
 47931 ;; This function uses a non-reentrant model
 47932 ;;
 47933                           
 47934                           	psect	text199
 47935  01530A                     __ptext199:
 47936                           	opt stack 0
 47937  01530A                     ___lmul:
 47938                           	opt stack 16
 47939                           
 47940                           ; BSR set to: 0
 47941                           ;incstack = 0
 47942  01530A  0E00               	movlw	0
 47943  01530C  0100               	movlb	0	; () banked
 47944  01530E  6F68               	movwf	___lmul@product& (0+255),b
 47945  015310  0E00               	movlw	0
 47946  015312  6F69               	movwf	(___lmul@product+1)& (0+255),b
 47947  015314  0E00               	movlw	0
 47948  015316  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 47949  015318  0E00               	movlw	0
 47950  01531A  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 47951  01531C                     
 47952                           ; BSR set to: 0
 47953                           
 47954                           ; BSR set to: 0
 47955  01531C  A160               	btfss	___lmul@multiplier& (0+255),0,b
 47956  01531E  D008               	goto	l3183
 47957                           
 47958                           ; BSR set to: 0
 47959  015320  5164               	movf	___lmul@multiplicand& (0+255),w,b
 47960  015322  2768               	addwf	___lmul@product& (0+255),f,b
 47961  015324  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 47962  015326  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 47963  015328  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 47964  01532A  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 47965  01532C  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 47966  01532E  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 47967  015330                     l3183:
 47968                           
 47969                           ; BSR set to: 0
 47970                           
 47971                           ; BSR set to: 0
 47972  015330  90D8               	bcf	status,0,c
 47973  015332  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 47974  015334  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 47975  015336  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 47976  015338  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 47977                           
 47978                           ; BSR set to: 0
 47979  01533A  90D8               	bcf	status,0,c
 47980  01533C  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 47981  01533E  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 47982  015340  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 47983  015342  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 47984  015344  5160               	movf	___lmul@multiplier& (0+255),w,b
 47985  015346  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 47986  015348  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 47987  01534A  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 47988  01534C  A4D8               	btfss	status,2,c
 47989  01534E  D7E6               	goto	l3182
 47990                           
 47991                           ; BSR set to: 0
 47992  015350  C068  F060         	movff	___lmul@product,?___lmul
 47993  015354  C069  F061         	movff	___lmul@product+1,?___lmul+1
 47994  015358  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 47995  01535C  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 47996                           
 47997                           ; BSR set to: 0
 47998  015360  0012               	return		;funcret
 47999  015362                     __end_of___lmul:
 48000                           	opt stack 0
 48001                           tosu	equ	0xFFF
 48002                           tosh	equ	0xFFE
 48003                           tosl	equ	0xFFD
 48004                           pclath	equ	0xFFA
 48005                           tblptru	equ	0xFF8
 48006                           tblptrh	equ	0xFF7
 48007                           tblptrl	equ	0xFF6
 48008                           tablat	equ	0xFF5
 48009                           prodh	equ	0xFF4
 48010                           prodl	equ	0xFF3
 48011                           intcon	equ	0xFF2
 48012                           indf0	equ	0xFEF
 48013                           postinc0	equ	0xFEE
 48014                           fsr0h	equ	0xFEA
 48015                           fsr0l	equ	0xFE9
 48016                           wreg	equ	0xFE8
 48017                           indf1	equ	0xFE7
 48018                           postinc1	equ	0xFE6
 48019                           postdec1	equ	0xFE5
 48020                           plusw1	equ	0xFE3
 48021                           fsr1h	equ	0xFE2
 48022                           fsr1l	equ	0xFE1
 48023                           indf2	equ	0xFDF
 48024                           postinc2	equ	0xFDE
 48025                           postdec2	equ	0xFDD
 48026                           plusw2	equ	0xFDB
 48027                           fsr2h	equ	0xFDA
 48028                           fsr2l	equ	0xFD9
 48029                           status	equ	0xFD8
 48030                           
 48031 ;; *************** function _USBTransferOnePacket *****************
 48032 ;; Defined at:
 48033 ;;		line 995 in file "usb_device.c"
 48034 ;; Parameters:    Size  Location     Type
 48035 ;;  ep              1    wreg     unsigned char 
 48036 ;;  dir             1    0[BANK0 ] unsigned char 
 48037 ;;  data            2    1[BANK0 ] PTR unsigned char 
 48038 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 48039 ;;		 -> msd_cbw(31), NULL(0), 
 48040 ;;  len             1    3[BANK0 ] unsigned char 
 48041 ;; Auto vars:     Size  Location     Type
 48042 ;;  ep              1    8[BANK0 ] unsigned char 
 48043 ;;  handle          2    9[BANK0 ] PTR volatile struct __BD
 48044 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 48045 ;; Return value:  Size  Location     Type
 48046 ;;                  2    0[BANK0 ] PTR void 
 48047 ;; Registers used:
 48048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 48049 ;; Tracked objects:
 48050 ;;		On entry : 0/0
 48051 ;;		On exit  : 0/0
 48052 ;;		Unchanged: 0/0
 48053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48054 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48055 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48056 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48057 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48058 ;;Total ram usage:       11 bytes
 48059 ;; Hardware stack levels used:    1
 48060 ;; Hardware stack levels required when called:   10
 48061 ;; This function calls:
 48062 ;;		Nothing
 48063 ;; This function is called by:
 48064 ;;		_MSDTasks
 48065 ;;		_MSDProcessCommandMediaPresent
 48066 ;;		_MSDReadHandler
 48067 ;;		_MSDWriteHandler
 48068 ;;		_APP_DeviceCustomHIDTasks
 48069 ;; This function uses a non-reentrant model
 48070 ;;
 48071                           
 48072                           	psect	text200
 48073  01162A                     __ptext200:
 48074                           	opt stack 0
 48075  01162A                     _USBTransferOnePacket:
 48076                           	opt stack 18
 48077                           
 48078                           ; BSR set to: 0
 48079                           ;incstack = 0
 48080                           ;USBTransferOnePacket@ep stored from wreg
 48081  01162A  0100               	movlb	0	; () banked
 48082  01162C  6F68               	movwf	USBTransferOnePacket@ep& (0+255),b
 48083                           
 48084                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 48085  01162E  0100               	movlb	0	; () banked
 48086  011630  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 48087  011632  B4D8               	btfsc	status,2,c
 48088  011634  D007               	goto	l184
 48089                           
 48090                           ; BSR set to: 0
 48091                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 48092  011636  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 48093  011638  0D02               	mullw	2
 48094  01163A  0E0F               	movlw	low _pBDTEntryIn
 48095  01163C  24F3               	addwf	prodl,w,c
 48096  01163E  6ED9               	movwf	fsr2l,c
 48097  011640  0E01               	movlw	high _pBDTEntryIn
 48098  011642  D006               	goto	L56
 48099  011644                     l184:
 48100                           
 48101                           ; BSR set to: 0
 48102                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 48103                           
 48104                           ; BSR set to: 0
 48105  011644  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 48106  011646  0D02               	mullw	2
 48107  011648  0E15               	movlw	low _pBDTEntryOut
 48108  01164A  24F3               	addwf	prodl,w,c
 48109  01164C  6ED9               	movwf	fsr2l,c
 48110  01164E  0E01               	movlw	high _pBDTEntryOut
 48111  011650                     L56:
 48112  011650  20F4               	addwfc	prodh,w,c
 48113  011652  6EDA               	movwf	fsr2h,c
 48114  011654  CFDE F069          	movff	postinc2,USBTransferOnePacket@handle
 48115  011658  CFDD F06A          	movff	postdec2,USBTransferOnePacket@handle+1
 48116                           
 48117                           ; BSR set to: 0
 48118                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 48119                           
 48120                           ; BSR set to: 0
 48121  01165C  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 48122  01165E  116A               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 48123  011660  A4D8               	btfss	status,2,c
 48124  011662  D005               	goto	l186
 48125                           
 48126                           ; BSR set to: 0
 48127                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 48128  011664  0E00               	movlw	0
 48129  011666  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 48130  011668  0E00               	movlw	0
 48131  01166A  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 48132                           
 48133                           ; BSR set to: 0
 48134  01166C  0012               	return	
 48135  01166E                     l186:
 48136                           
 48137                           ; BSR set to: 0
 48138                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 48139                           
 48140                           ; BSR set to: 0
 48141  01166E  EE20 F002          	lfsr	2,2
 48142  011672  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 48143  011674  26D9               	addwf	fsr2l,f,c
 48144  011676  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 48145  011678  22DA               	addwfc	fsr2h,f,c
 48146  01167A  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 48147  01167E  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 48148                           
 48149                           ;usb_device.c: 1030: handle->CNT = len;
 48150  011682  EE20 F001          	lfsr	2,1
 48151  011686  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 48152  011688  26D9               	addwf	fsr2l,f,c
 48153  01168A  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 48154  01168C  22DA               	addwfc	fsr2h,f,c
 48155  01168E  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 48156                           
 48157                           ; BSR set to: 0
 48158                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 48159  011692  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 48160  011696  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 48161  01169A  0E40               	movlw	64
 48162  01169C  16DF               	andwf	indf2,f,c
 48163                           
 48164                           ; BSR set to: 0
 48165                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 48166  01169E  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 48167  0116A2  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 48168  0116A6  0E00               	movlw	0
 48169  0116A8  86DB               	bsf	plusw2,3,c
 48170                           
 48171                           ; BSR set to: 0
 48172                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 48173  0116AA  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 48174  0116AE  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 48175  0116B2  0E00               	movlw	0
 48176  0116B4  8EDB               	bsf	plusw2,7,c
 48177                           
 48178                           ; BSR set to: 0
 48179                           ;usb_device.c: 1036: if(dir != 0)
 48180  0116B6  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 48181  0116B8  B4D8               	btfsc	status,2,c
 48182  0116BA  D018               	goto	l188
 48183                           
 48184                           ; BSR set to: 0
 48185                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 48186  0116BC  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 48187  0116BE  0D02               	mullw	2
 48188  0116C0  0E0F               	movlw	low _pBDTEntryIn
 48189  0116C2  24F3               	addwf	prodl,w,c
 48190  0116C4  6ED9               	movwf	fsr2l,c
 48191  0116C6  0E01               	movlw	high _pBDTEntryIn
 48192  0116C8  20F4               	addwfc	prodh,w,c
 48193  0116CA  6EDA               	movwf	fsr2h,c
 48194  0116CC  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 48195  0116D0  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 48196  0116D4  0E04               	movlw	4
 48197  0116D6  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 48198  0116D8  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 48199  0116DA  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 48200  0116DC  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 48201  0116DE  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 48202  0116E0  0D02               	mullw	2
 48203  0116E2  0E0F               	movlw	low _pBDTEntryIn
 48204  0116E4  24F3               	addwf	prodl,w,c
 48205  0116E6  6ED9               	movwf	fsr2l,c
 48206  0116E8  0E01               	movlw	high _pBDTEntryIn
 48207  0116EA  D017               	goto	L57
 48208  0116EC                     l188:
 48209                           
 48210                           ; BSR set to: 0
 48211                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 48212                           
 48213                           ; BSR set to: 0
 48214  0116EC  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 48215  0116EE  0D02               	mullw	2
 48216  0116F0  0E15               	movlw	low _pBDTEntryOut
 48217  0116F2  24F3               	addwf	prodl,w,c
 48218  0116F4  6ED9               	movwf	fsr2l,c
 48219  0116F6  0E01               	movlw	high _pBDTEntryOut
 48220  0116F8  20F4               	addwfc	prodh,w,c
 48221  0116FA  6EDA               	movwf	fsr2h,c
 48222  0116FC  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 48223  011700  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 48224  011704  0E04               	movlw	4
 48225  011706  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 48226  011708  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 48227  01170A  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 48228  01170C  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 48229  01170E  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 48230  011710  0D02               	mullw	2
 48231  011712  0E15               	movlw	low _pBDTEntryOut
 48232  011714  24F3               	addwf	prodl,w,c
 48233  011716  6ED9               	movwf	fsr2l,c
 48234  011718  0E01               	movlw	high _pBDTEntryOut
 48235  01171A                     L57:
 48236  01171A  20F4               	addwfc	prodh,w,c
 48237  01171C  6EDA               	movwf	fsr2h,c
 48238  01171E  C066  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 48239  011722  C067  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 48240                           
 48241                           ; BSR set to: 0
 48242                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 48243                           
 48244                           ; BSR set to: 0
 48245  011726  C069  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 48246  01172A  C06A  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 48247  01172E  0012               	return	
 48248  011730                     __end_of_USBTransferOnePacket:
 48249                           	opt stack 0
 48250                           tosu	equ	0xFFF
 48251                           tosh	equ	0xFFE
 48252                           tosl	equ	0xFFD
 48253                           pclath	equ	0xFFA
 48254                           tblptru	equ	0xFF8
 48255                           tblptrh	equ	0xFF7
 48256                           tblptrl	equ	0xFF6
 48257                           tablat	equ	0xFF5
 48258                           prodh	equ	0xFF4
 48259                           prodl	equ	0xFF3
 48260                           intcon	equ	0xFF2
 48261                           indf0	equ	0xFEF
 48262                           postinc0	equ	0xFEE
 48263                           fsr0h	equ	0xFEA
 48264                           fsr0l	equ	0xFE9
 48265                           wreg	equ	0xFE8
 48266                           indf1	equ	0xFE7
 48267                           postinc1	equ	0xFE6
 48268                           postdec1	equ	0xFE5
 48269                           plusw1	equ	0xFE3
 48270                           fsr1h	equ	0xFE2
 48271                           fsr1l	equ	0xFE1
 48272                           indf2	equ	0xFDF
 48273                           postinc2	equ	0xFDE
 48274                           postdec2	equ	0xFDD
 48275                           plusw2	equ	0xFDB
 48276                           fsr2h	equ	0xFDA
 48277                           fsr2l	equ	0xFD9
 48278                           status	equ	0xFD8
 48279                           
 48280 ;; *************** function _SYS_InterruptHigh *****************
 48281 ;; Defined at:
 48282 ;;		line 162 in file "system.c"
 48283 ;; Parameters:    Size  Location     Type
 48284 ;;		None
 48285 ;; Auto vars:     Size  Location     Type
 48286 ;;		None
 48287 ;; Return value:  Size  Location     Type
 48288 ;;                  1    wreg      void 
 48289 ;; Registers used:
 48290 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 48291 ;; Tracked objects:
 48292 ;;		On entry : 0/0
 48293 ;;		On exit  : 0/0
 48294 ;;		Unchanged: 0/0
 48295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48298 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48299 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48300 ;;Total ram usage:       14 bytes
 48301 ;; Hardware stack levels used:    1
 48302 ;; Hardware stack levels required when called:    9
 48303 ;; This function calls:
 48304 ;;		_USBDeviceTasks
 48305 ;;		_motor_isr
 48306 ;;		_tmr0_isr
 48307 ;; This function is called by:
 48308 ;;		Interrupt level 2
 48309 ;; This function uses a non-reentrant model
 48310 ;;
 48311                           
 48312                           	psect	intcode
 48313  009008                     __pintcode:
 48314                           	opt stack 0
 48315  009008                     _SYS_InterruptHigh:
 48316                           	opt stack 9
 48317                           
 48318                           ; BSR set to: 0
 48319                           ;incstack = 0
 48320  009008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 48321  00900A  CFFA F049          	movff	pclath,??_SYS_InterruptHigh
 48322  00900E  CFFB F04A          	movff	pclatu,??_SYS_InterruptHigh+1
 48323  009012  CFE9 F04B          	movff	fsr0l,??_SYS_InterruptHigh+2
 48324  009016  CFEA F04C          	movff	fsr0h,??_SYS_InterruptHigh+3
 48325  00901A  CFE1 F04D          	movff	fsr1l,??_SYS_InterruptHigh+4
 48326  00901E  CFE2 F04E          	movff	fsr1h,??_SYS_InterruptHigh+5
 48327  009022  CFD9 F04F          	movff	fsr2l,??_SYS_InterruptHigh+6
 48328  009026  CFDA F050          	movff	fsr2h,??_SYS_InterruptHigh+7
 48329  00902A  CFF3 F051          	movff	prodl,??_SYS_InterruptHigh+8
 48330  00902E  CFF4 F052          	movff	prodh,??_SYS_InterruptHigh+9
 48331  009032  CFF6 F053          	movff	tblptrl,??_SYS_InterruptHigh+10
 48332  009036  CFF7 F054          	movff	tblptrh,??_SYS_InterruptHigh+11
 48333  00903A  CFF8 F055          	movff	tblptru,??_SYS_InterruptHigh+12
 48334  00903E  CFF5 F056          	movff	tablat,??_SYS_InterruptHigh+13
 48335                           
 48336                           ;system.c: 165: USBDeviceTasks();
 48337  009042  EC4B  F081         	call	_USBDeviceTasks	;wreg free
 48338                           
 48339                           ;system.c: 169: if(PIR1bits.TMR2IF)
 48340  009046  B29E               	btfsc	3998,1,c	;volatile
 48341                           
 48342                           ;system.c: 170: {;system.c: 171: motor_isr();
 48343  009048  EC39  F058         	call	_motor_isr	;wreg free
 48344                           
 48345                           ;system.c: 172: };system.c: 174: if(INTCONbits.T0IF)
 48346  00904C  B4F2               	btfsc	intcon,2,c	;volatile
 48347                           
 48348                           ;system.c: 175: {;system.c: 176: tmr0_isr();
 48349  00904E  EC36  F0AE         	call	_tmr0_isr	;wreg free
 48350  009052  C056  FFF5         	movff	??_SYS_InterruptHigh+13,tablat
 48351  009056  C055  FFF8         	movff	??_SYS_InterruptHigh+12,tblptru
 48352  00905A  C054  FFF7         	movff	??_SYS_InterruptHigh+11,tblptrh
 48353  00905E  C053  FFF6         	movff	??_SYS_InterruptHigh+10,tblptrl
 48354  009062  C052  FFF4         	movff	??_SYS_InterruptHigh+9,prodh
 48355  009066  C051  FFF3         	movff	??_SYS_InterruptHigh+8,prodl
 48356  00906A  C050  FFDA         	movff	??_SYS_InterruptHigh+7,fsr2h
 48357  00906E  C04F  FFD9         	movff	??_SYS_InterruptHigh+6,fsr2l
 48358  009072  C04E  FFE2         	movff	??_SYS_InterruptHigh+5,fsr1h
 48359  009076  C04D  FFE1         	movff	??_SYS_InterruptHigh+4,fsr1l
 48360  00907A  C04C  FFEA         	movff	??_SYS_InterruptHigh+3,fsr0h
 48361  00907E  C04B  FFE9         	movff	??_SYS_InterruptHigh+2,fsr0l
 48362  009082  C04A  FFFB         	movff	??_SYS_InterruptHigh+1,pclatu
 48363  009086  C049  FFFA         	movff	??_SYS_InterruptHigh,pclath
 48364  00908A  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 48365  00908C  0011               	retfie		f
 48366  00908E                     __end_of_SYS_InterruptHigh:
 48367                           	opt stack 0
 48368                           tosu	equ	0xFFF
 48369                           tosh	equ	0xFFE
 48370                           tosl	equ	0xFFD
 48371                           pclatu	equ	0xFFB
 48372                           pclath	equ	0xFFA
 48373                           tblptru	equ	0xFF8
 48374                           tblptrh	equ	0xFF7
 48375                           tblptrl	equ	0xFF6
 48376                           tablat	equ	0xFF5
 48377                           prodh	equ	0xFF4
 48378                           prodl	equ	0xFF3
 48379                           intcon	equ	0xFF2
 48380                           indf0	equ	0xFEF
 48381                           postinc0	equ	0xFEE
 48382                           fsr0h	equ	0xFEA
 48383                           fsr0l	equ	0xFE9
 48384                           wreg	equ	0xFE8
 48385                           indf1	equ	0xFE7
 48386                           postinc1	equ	0xFE6
 48387                           postdec1	equ	0xFE5
 48388                           plusw1	equ	0xFE3
 48389                           fsr1h	equ	0xFE2
 48390                           fsr1l	equ	0xFE1
 48391                           indf2	equ	0xFDF
 48392                           postinc2	equ	0xFDE
 48393                           postdec2	equ	0xFDD
 48394                           plusw2	equ	0xFDB
 48395                           fsr2h	equ	0xFDA
 48396                           fsr2l	equ	0xFD9
 48397                           status	equ	0xFD8
 48398                           
 48399 ;; *************** function _tmr0_isr *****************
 48400 ;; Defined at:
 48401 ;;		line 24 in file "os.c"
 48402 ;; Parameters:    Size  Location     Type
 48403 ;;		None
 48404 ;; Auto vars:     Size  Location     Type
 48405 ;;		None
 48406 ;; Return value:  Size  Location     Type
 48407 ;;                  1    wreg      void 
 48408 ;; Registers used:
 48409 ;;		wreg, status,2, status,0, cstack
 48410 ;; Tracked objects:
 48411 ;;		On entry : 0/0
 48412 ;;		On exit  : 0/0
 48413 ;;		Unchanged: 0/0
 48414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48419 ;;Total ram usage:        0 bytes
 48420 ;; Hardware stack levels used:    1
 48421 ;; Hardware stack levels required when called:    1
 48422 ;; This function calls:
 48423 ;;		_encoder_run
 48424 ;; This function is called by:
 48425 ;;		_SYS_InterruptHigh
 48426 ;; This function uses a non-reentrant model
 48427 ;;
 48428                           
 48429                           	psect	text202
 48430  015C6C                     __ptext202:
 48431                           	opt stack 0
 48432  015C6C                     _tmr0_isr:
 48433                           	opt stack 16
 48434                           
 48435                           ;os.c: 27: if(INTCONbits.T0IF)
 48436                           
 48437                           ;incstack = 0
 48438  015C6C  A4F2               	btfss	intcon,2,c	;volatile
 48439  015C6E  0012               	return	
 48440                           
 48441                           ;os.c: 28: {;os.c: 30: TMR0H = 0xFA;
 48442  015C70  0EFA               	movlw	250
 48443  015C72  6ED7               	movwf	4055,c	;volatile
 48444                           
 48445                           ;os.c: 31: TMR0L = 0x24;
 48446  015C74  0E24               	movlw	36
 48447  015C76  6ED6               	movwf	4054,c	;volatile
 48448                           
 48449                           ;os.c: 34: INTCONbits.T0IF = 0;
 48450  015C78  94F2               	bcf	intcon,2,c	;volatile
 48451                           
 48452                           ;os.c: 37: encoder_run();
 48453  015C7A  EC16  F08F         	call	_encoder_run	;wreg free
 48454                           
 48455                           ;os.c: 40: ++os.subTimeSlot;
 48456  015C7E  0101               	movlb	1	; () banked
 48457  015C80  2B64               	incf	_os& (0+255),f,b	;volatile
 48458                           
 48459                           ; BSR set to: 1
 48460                           ;os.c: 41: if(os.subTimeSlot>=10)
 48461  015C82  0E09               	movlw	9
 48462  015C84  6564               	cpfsgt	_os& (0+255),b	;volatile
 48463  015C86  0012               	return	
 48464                           
 48465                           ; BSR set to: 1
 48466                           ;os.c: 42: {;os.c: 43: if(os.done)
 48467  015C88  5166               	movf	(_os+2)& (0+255),w,b	;volatile
 48468  015C8A  B4D8               	btfsc	status,2,c
 48469  015C8C  0012               	return	
 48470                           
 48471                           ; BSR set to: 1
 48472                           ;os.c: 44: {;os.c: 45: ++os.timeSlot;
 48473  015C8E  2B65               	incf	(_os+1)& (0+255),f,b	;volatile
 48474                           
 48475                           ; BSR set to: 1
 48476                           ;os.c: 46: if(os.timeSlot==16)
 48477  015C90  0E10               	movlw	16
 48478  015C92  1965               	xorwf	(_os+1)& (0+255),w,b	;volatile
 48479  015C94  A4D8               	btfss	status,2,c
 48480  015C96  D002               	goto	i2l1066
 48481                           
 48482                           ; BSR set to: 1
 48483                           ;os.c: 47: {;os.c: 48: os.timeSlot = 0;
 48484  015C98  0E00               	movlw	0
 48485  015C9A  6F65               	movwf	(_os+1)& (0+255),b	;volatile
 48486  015C9C                     i2l1066:
 48487                           
 48488                           ; BSR set to: 1
 48489                           ;os.c: 49: };os.c: 50: os.subTimeSlot = 0;
 48490  015C9C  0E00               	movlw	0
 48491  015C9E  6F64               	movwf	_os& (0+255),b	;volatile
 48492                           
 48493                           ;os.c: 51: os.done = 0;
 48494  015CA0  0E00               	movlw	0
 48495  015CA2  6F66               	movwf	(_os+2)& (0+255),b	;volatile
 48496                           
 48497                           ; BSR set to: 1
 48498                           
 48499                           ; BSR set to: 1
 48500  015CA4  0012               	return	
 48501  015CA6                     __end_of_tmr0_isr:
 48502                           	opt stack 0
 48503                           tosu	equ	0xFFF
 48504                           tosh	equ	0xFFE
 48505                           tosl	equ	0xFFD
 48506                           pclatu	equ	0xFFB
 48507                           pclath	equ	0xFFA
 48508                           tblptru	equ	0xFF8
 48509                           tblptrh	equ	0xFF7
 48510                           tblptrl	equ	0xFF6
 48511                           tablat	equ	0xFF5
 48512                           prodh	equ	0xFF4
 48513                           prodl	equ	0xFF3
 48514                           intcon	equ	0xFF2
 48515                           indf0	equ	0xFEF
 48516                           postinc0	equ	0xFEE
 48517                           fsr0h	equ	0xFEA
 48518                           fsr0l	equ	0xFE9
 48519                           wreg	equ	0xFE8
 48520                           indf1	equ	0xFE7
 48521                           postinc1	equ	0xFE6
 48522                           postdec1	equ	0xFE5
 48523                           plusw1	equ	0xFE3
 48524                           fsr1h	equ	0xFE2
 48525                           fsr1l	equ	0xFE1
 48526                           indf2	equ	0xFDF
 48527                           postinc2	equ	0xFDE
 48528                           postdec2	equ	0xFDD
 48529                           plusw2	equ	0xFDB
 48530                           fsr2h	equ	0xFDA
 48531                           fsr2l	equ	0xFD9
 48532                           status	equ	0xFD8
 48533                           
 48534 ;; *************** function _encoder_run *****************
 48535 ;; Defined at:
 48536 ;;		line 110 in file "encoder.c"
 48537 ;; Parameters:    Size  Location     Type
 48538 ;;		None
 48539 ;; Auto vars:     Size  Location     Type
 48540 ;;		None
 48541 ;; Return value:  Size  Location     Type
 48542 ;;                  1    wreg      void 
 48543 ;; Registers used:
 48544 ;;		wreg, status,2, status,0
 48545 ;; Tracked objects:
 48546 ;;		On entry : 0/0
 48547 ;;		On exit  : 0/0
 48548 ;;		Unchanged: 0/0
 48549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48554 ;;Total ram usage:        0 bytes
 48555 ;; Hardware stack levels used:    1
 48556 ;; This function calls:
 48557 ;;		Nothing
 48558 ;; This function is called by:
 48559 ;;		_tmr0_isr
 48560 ;; This function uses a non-reentrant model
 48561 ;;
 48562                           
 48563                           	psect	text203
 48564  011E2C                     __ptext203:
 48565                           	opt stack 0
 48566  011E2C                     _encoder_run:
 48567                           	opt stack 16
 48568                           
 48569                           ;encoder.c: 112: if(enc1 != (PORTE&0b00000111))
 48570                           
 48571                           ;incstack = 0
 48572  011E2C  5084               	movf	3972,w,c	;volatile
 48573  011E2E  0B07               	andlw	7
 48574  011E30  0101               	movlb	1	; () banked
 48575  011E32  1947               	xorwf	_enc1& (0+255),w,b
 48576  011E34  B4D8               	btfsc	status,2,c
 48577  011E36  D033               	goto	i2l2771
 48578                           
 48579                           ; BSR set to: 1
 48580                           ;encoder.c: 113: {;encoder.c: 115: if(PORTEbits.RE0 && PORTEbits.RE2 && (!(enc1&0b000000
      +                          01)))
 48581  011E38  B084               	btfsc	3972,0,c	;volatile
 48582                           
 48583                           ; BSR set to: 1
 48584  011E3A  A484               	btfss	3972,2,c	;volatile
 48585  011E3C  D00D               	goto	i2l2774
 48586                           
 48587                           ; BSR set to: 1
 48588  011E3E  B147               	btfsc	_enc1& (0+255),0,b
 48589  011E40  D00B               	goto	i2l2774
 48590                           
 48591                           ; BSR set to: 1
 48592                           ;encoder.c: 116: {;encoder.c: 117: if(os.encoder1Count<127)
 48593  011E42  0E7F               	movlw	127
 48594  011E44  1967               	xorwf	(_os+3)& (0+255),w,b	;volatile
 48595  011E46  B4D8               	btfsc	status,2,c
 48596  011E48  D007               	goto	i2l2774
 48597                           
 48598                           ; BSR set to: 1
 48599                           ;encoder.c: 118: {;encoder.c: 119: ++os.encoder1Count;
 48600  011E4A  2B67               	incf	(_os+3)& (0+255),f,b	;volatile
 48601                           
 48602                           ; BSR set to: 1
 48603                           ;encoder.c: 120: if(config.beep_duration)
 48604  011E4C  51AA               	movf	(_config+21)& (0+255),w,b
 48605  011E4E  B4D8               	btfsc	status,2,c
 48606  011E50  D003               	goto	i2l2774
 48607                           
 48608                           ; BSR set to: 1
 48609                           ;encoder.c: 121: {;encoder.c: 122: LATCbits.LC7 = 1;
 48610  011E52  8E8B               	bsf	3979,7,c	;volatile
 48611                           
 48612                           ;encoder.c: 123: os.beep_count = config.beep_duration;
 48613  011E54  C1AA  F18B         	movff	_config+21,_os+39	;volatile
 48614  011E58                     i2l2774:
 48615                           
 48616                           ; BSR set to: 1
 48617                           ;encoder.c: 124: };encoder.c: 125: };encoder.c: 126: };encoder.c: 128: if(PORTEbits.RE2 
      +                          && PORTEbits.RE0 && (!(enc1&0b00000100)))
 48618                           
 48619                           ; BSR set to: 1
 48620                           
 48621                           ; BSR set to: 1
 48622  011E58  B484               	btfsc	3972,2,c	;volatile
 48623                           
 48624                           ; BSR set to: 1
 48625  011E5A  A084               	btfss	3972,0,c	;volatile
 48626  011E5C  D00E               	goto	i2l2777
 48627                           
 48628                           ; BSR set to: 1
 48629  011E5E  B547               	btfsc	_enc1& (0+255),2,b
 48630  011E60  D00C               	goto	i2l2777
 48631                           
 48632                           ; BSR set to: 1
 48633                           ;encoder.c: 129: {;encoder.c: 130: if(os.encoder1Count>-128)
 48634  011E62  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 48635  011E64  0A80               	xorlw	128
 48636  011E66  0FFF               	addlw	255
 48637  011E68  A0D8               	btfss	status,0,c
 48638  011E6A  D007               	goto	i2l2777
 48639                           
 48640                           ; BSR set to: 1
 48641                           ;encoder.c: 131: {;encoder.c: 132: --os.encoder1Count;
 48642  011E6C  0767               	decf	(_os+3)& (0+255),f,b	;volatile
 48643                           
 48644                           ; BSR set to: 1
 48645                           ;encoder.c: 133: if(config.beep_duration)
 48646  011E6E  51AA               	movf	(_config+21)& (0+255),w,b
 48647  011E70  B4D8               	btfsc	status,2,c
 48648  011E72  D003               	goto	i2l2777
 48649                           
 48650                           ; BSR set to: 1
 48651                           ;encoder.c: 134: {;encoder.c: 135: LATCbits.LC7 = 1;
 48652  011E74  8E8B               	bsf	3979,7,c	;volatile
 48653                           
 48654                           ;encoder.c: 136: os.beep_count = config.beep_duration;
 48655  011E76  C1AA  F18B         	movff	_config+21,_os+39	;volatile
 48656  011E7A                     i2l2777:
 48657                           
 48658                           ; BSR set to: 1
 48659                           ;encoder.c: 137: };encoder.c: 138: };encoder.c: 139: };encoder.c: 141: if(PORTEbits.RE1 
      +                          && (!(enc1&0b00000010)))
 48660                           
 48661                           ; BSR set to: 1
 48662                           
 48663                           ; BSR set to: 1
 48664  011E7A  B284               	btfsc	3972,1,c	;volatile
 48665                           
 48666                           ; BSR set to: 1
 48667  011E7C  B347               	btfsc	_enc1& (0+255),1,b
 48668  011E7E  D008               	goto	i2l2779
 48669                           
 48670                           ; BSR set to: 1
 48671                           ;encoder.c: 142: {;encoder.c: 143: os.button1 = 1;
 48672  011E80  0E01               	movlw	1
 48673  011E82  6F68               	movwf	(_os+4)& (0+255),b	;volatile
 48674                           
 48675                           ;encoder.c: 144: if(config.beep_duration)
 48676  011E84  51AA               	movf	(_config+21)& (0+255),w,b
 48677  011E86  B4D8               	btfsc	status,2,c
 48678  011E88  D003               	goto	i2l2779
 48679                           
 48680                           ; BSR set to: 1
 48681                           ;encoder.c: 145: {;encoder.c: 146: LATCbits.LC7 = 1;
 48682  011E8A  8E8B               	bsf	3979,7,c	;volatile
 48683                           
 48684                           ;encoder.c: 147: os.beep_count = config.beep_duration;
 48685  011E8C  C1AA  F18B         	movff	_config+21,_os+39	;volatile
 48686  011E90                     i2l2779:
 48687                           
 48688                           ; BSR set to: 1
 48689                           ;encoder.c: 148: };encoder.c: 149: };encoder.c: 151: if((!PORTEbits.RE1) && (enc1&0b0000
      +                          0010))
 48690                           
 48691                           ; BSR set to: 1
 48692  011E90  A284               	btfss	3972,1,c	;volatile
 48693                           
 48694                           ; BSR set to: 1
 48695  011E92  A347               	btfss	_enc1& (0+255),1,b
 48696  011E94  D001               	goto	i2l2780
 48697                           
 48698                           ; BSR set to: 1
 48699                           ;encoder.c: 152: {;encoder.c: 153: os.button1 = -1;
 48700  011E96  6968               	setf	(_os+4)& (0+255),b	;volatile
 48701  011E98                     i2l2780:
 48702                           
 48703                           ; BSR set to: 1
 48704                           ;encoder.c: 154: };encoder.c: 156: enc1 = PORTE & 0b00000111;
 48705                           
 48706                           ; BSR set to: 1
 48707  011E98  5084               	movf	3972,w,c	;volatile
 48708  011E9A  0B07               	andlw	7
 48709  011E9C  6F47               	movwf	_enc1& (0+255),b
 48710  011E9E                     i2l2771:
 48711                           
 48712                           ; BSR set to: 1
 48713                           ;encoder.c: 157: };encoder.c: 159: if(enc2 != (PORTA&0b00000111))
 48714  011E9E  5080               	movf	3968,w,c	;volatile
 48715  011EA0  0B07               	andlw	7
 48716  011EA2  1946               	xorwf	_enc2& (0+255),w,b
 48717  011EA4  B4D8               	btfsc	status,2,c
 48718  011EA6  D033               	goto	i2l2781
 48719                           
 48720                           ; BSR set to: 1
 48721                           ;encoder.c: 160: {;encoder.c: 162: if(PORTAbits.RA2 && PORTAbits.RA0 && (!(enc2&0b000001
      +                          00)))
 48722  011EA8  B480               	btfsc	3968,2,c	;volatile
 48723                           
 48724                           ; BSR set to: 1
 48725  011EAA  A080               	btfss	3968,0,c	;volatile
 48726  011EAC  D00D               	goto	i2l2784
 48727                           
 48728                           ; BSR set to: 1
 48729  011EAE  B546               	btfsc	_enc2& (0+255),2,b
 48730  011EB0  D00B               	goto	i2l2784
 48731                           
 48732                           ; BSR set to: 1
 48733                           ;encoder.c: 163: {;encoder.c: 164: if(os.encoder2Count<127)
 48734  011EB2  0E7F               	movlw	127
 48735  011EB4  1969               	xorwf	(_os+5)& (0+255),w,b	;volatile
 48736  011EB6  B4D8               	btfsc	status,2,c
 48737  011EB8  D007               	goto	i2l2784
 48738                           
 48739                           ; BSR set to: 1
 48740                           ;encoder.c: 165: {;encoder.c: 166: ++os.encoder2Count;
 48741  011EBA  2B69               	incf	(_os+5)& (0+255),f,b	;volatile
 48742                           
 48743                           ; BSR set to: 1
 48744                           ;encoder.c: 167: if(config.beep_duration)
 48745  011EBC  51AA               	movf	(_config+21)& (0+255),w,b
 48746  011EBE  B4D8               	btfsc	status,2,c
 48747  011EC0  D003               	goto	i2l2784
 48748                           
 48749                           ; BSR set to: 1
 48750                           ;encoder.c: 168: {;encoder.c: 169: LATCbits.LC7 = 1;
 48751  011EC2  8E8B               	bsf	3979,7,c	;volatile
 48752                           
 48753                           ;encoder.c: 170: os.beep_count = config.beep_duration;
 48754  011EC4  C1AA  F18B         	movff	_config+21,_os+39	;volatile
 48755  011EC8                     i2l2784:
 48756                           
 48757                           ; BSR set to: 1
 48758                           ;encoder.c: 171: };encoder.c: 172: };encoder.c: 173: };encoder.c: 175: if(PORTAbits.RA0 
      +                          && PORTAbits.RA2 && (!(enc2&0b00000001)))
 48759                           
 48760                           ; BSR set to: 1
 48761                           
 48762                           ; BSR set to: 1
 48763  011EC8  B080               	btfsc	3968,0,c	;volatile
 48764                           
 48765                           ; BSR set to: 1
 48766  011ECA  A480               	btfss	3968,2,c	;volatile
 48767  011ECC  D00E               	goto	i2l2787
 48768                           
 48769                           ; BSR set to: 1
 48770  011ECE  B146               	btfsc	_enc2& (0+255),0,b
 48771  011ED0  D00C               	goto	i2l2787
 48772                           
 48773                           ; BSR set to: 1
 48774                           ;encoder.c: 176: {;encoder.c: 177: if(os.encoder2Count>-128)
 48775  011ED2  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 48776  011ED4  0A80               	xorlw	128
 48777  011ED6  0FFF               	addlw	255
 48778  011ED8  A0D8               	btfss	status,0,c
 48779  011EDA  D007               	goto	i2l2787
 48780                           
 48781                           ; BSR set to: 1
 48782                           ;encoder.c: 178: {;encoder.c: 179: --os.encoder2Count;
 48783  011EDC  0769               	decf	(_os+5)& (0+255),f,b	;volatile
 48784                           
 48785                           ; BSR set to: 1
 48786                           ;encoder.c: 180: if(config.beep_duration)
 48787  011EDE  51AA               	movf	(_config+21)& (0+255),w,b
 48788  011EE0  B4D8               	btfsc	status,2,c
 48789  011EE2  D003               	goto	i2l2787
 48790                           
 48791                           ; BSR set to: 1
 48792                           ;encoder.c: 181: {;encoder.c: 182: LATCbits.LC7 = 1;
 48793  011EE4  8E8B               	bsf	3979,7,c	;volatile
 48794                           
 48795                           ;encoder.c: 183: os.beep_count = config.beep_duration;
 48796  011EE6  C1AA  F18B         	movff	_config+21,_os+39	;volatile
 48797  011EEA                     i2l2787:
 48798                           
 48799                           ; BSR set to: 1
 48800                           ;encoder.c: 184: };encoder.c: 185: };encoder.c: 186: };encoder.c: 188: if(PORTAbits.RA1 
      +                          && (!(enc2&0b00000010)))
 48801                           
 48802                           ; BSR set to: 1
 48803                           
 48804                           ; BSR set to: 1
 48805  011EEA  B280               	btfsc	3968,1,c	;volatile
 48806                           
 48807                           ; BSR set to: 1
 48808  011EEC  B346               	btfsc	_enc2& (0+255),1,b
 48809  011EEE  D008               	goto	i2l2789
 48810                           
 48811                           ; BSR set to: 1
 48812                           ;encoder.c: 189: {;encoder.c: 190: os.button2 = 1;
 48813  011EF0  0E01               	movlw	1
 48814  011EF2  6F6A               	movwf	(_os+6)& (0+255),b	;volatile
 48815                           
 48816                           ;encoder.c: 191: if(config.beep_duration)
 48817  011EF4  51AA               	movf	(_config+21)& (0+255),w,b
 48818  011EF6  B4D8               	btfsc	status,2,c
 48819  011EF8  D003               	goto	i2l2789
 48820                           
 48821                           ; BSR set to: 1
 48822                           ;encoder.c: 192: {;encoder.c: 193: LATCbits.LC7 = 1;
 48823  011EFA  8E8B               	bsf	3979,7,c	;volatile
 48824                           
 48825                           ;encoder.c: 194: os.beep_count = config.beep_duration;
 48826  011EFC  C1AA  F18B         	movff	_config+21,_os+39	;volatile
 48827  011F00                     i2l2789:
 48828                           
 48829                           ; BSR set to: 1
 48830                           ;encoder.c: 195: };encoder.c: 196: };encoder.c: 198: if((!PORTAbits.RA1) && (enc2&0b0000
      +                          0010))
 48831                           
 48832                           ; BSR set to: 1
 48833  011F00  A280               	btfss	3968,1,c	;volatile
 48834                           
 48835                           ; BSR set to: 1
 48836  011F02  A346               	btfss	_enc2& (0+255),1,b
 48837  011F04  D001               	goto	i2l2790
 48838                           
 48839                           ; BSR set to: 1
 48840                           ;encoder.c: 199: {;encoder.c: 200: os.button2 = -1;
 48841  011F06  696A               	setf	(_os+6)& (0+255),b	;volatile
 48842  011F08                     i2l2790:
 48843                           
 48844                           ; BSR set to: 1
 48845                           ;encoder.c: 201: };encoder.c: 203: enc2 = PORTA & 0b00000111;
 48846                           
 48847                           ; BSR set to: 1
 48848  011F08  5080               	movf	3968,w,c	;volatile
 48849  011F0A  0B07               	andlw	7
 48850  011F0C  6F46               	movwf	_enc2& (0+255),b
 48851  011F0E                     i2l2781:
 48852                           
 48853                           ; BSR set to: 1
 48854                           ;encoder.c: 204: };encoder.c: 207: if(os.beep_count)
 48855                           
 48856                           ; BSR set to: 1
 48857  011F0E  518B               	movf	(_os+39)& (0+255),w,b	;volatile
 48858  011F10  B4D8               	btfsc	status,2,c
 48859  011F12  0012               	return	
 48860                           
 48861                           ; BSR set to: 1
 48862                           ;encoder.c: 208: {;encoder.c: 209: --os.beep_count;
 48863  011F14  078B               	decf	(_os+39)& (0+255),f,b	;volatile
 48864                           
 48865                           ; BSR set to: 1
 48866                           ;encoder.c: 210: if(!os.beep_count)
 48867  011F16  518B               	movf	(_os+39)& (0+255),w,b	;volatile
 48868  011F18  A4D8               	btfss	status,2,c
 48869  011F1A  0012               	return	
 48870                           
 48871                           ; BSR set to: 1
 48872                           ;encoder.c: 211: {;encoder.c: 212: LATCbits.LC7 = 0;
 48873  011F1C  9E8B               	bcf	3979,7,c	;volatile
 48874                           
 48875                           ; BSR set to: 1
 48876  011F1E  0012               	return	
 48877  011F20                     __end_of_encoder_run:
 48878                           	opt stack 0
 48879                           tosu	equ	0xFFF
 48880                           tosh	equ	0xFFE
 48881                           tosl	equ	0xFFD
 48882                           pclatu	equ	0xFFB
 48883                           pclath	equ	0xFFA
 48884                           tblptru	equ	0xFF8
 48885                           tblptrh	equ	0xFF7
 48886                           tblptrl	equ	0xFF6
 48887                           tablat	equ	0xFF5
 48888                           prodh	equ	0xFF4
 48889                           prodl	equ	0xFF3
 48890                           intcon	equ	0xFF2
 48891                           indf0	equ	0xFEF
 48892                           postinc0	equ	0xFEE
 48893                           fsr0h	equ	0xFEA
 48894                           fsr0l	equ	0xFE9
 48895                           wreg	equ	0xFE8
 48896                           indf1	equ	0xFE7
 48897                           postinc1	equ	0xFE6
 48898                           postdec1	equ	0xFE5
 48899                           plusw1	equ	0xFE3
 48900                           fsr1h	equ	0xFE2
 48901                           fsr1l	equ	0xFE1
 48902                           indf2	equ	0xFDF
 48903                           postinc2	equ	0xFDE
 48904                           postdec2	equ	0xFDD
 48905                           plusw2	equ	0xFDB
 48906                           fsr2h	equ	0xFDA
 48907                           fsr2l	equ	0xFD9
 48908                           status	equ	0xFD8
 48909                           
 48910 ;; *************** function _motor_isr *****************
 48911 ;; Defined at:
 48912 ;;		line 672 in file "motor.c"
 48913 ;; Parameters:    Size  Location     Type
 48914 ;;		None
 48915 ;; Auto vars:     Size  Location     Type
 48916 ;;  steps_remain    4   68[COMRAM] unsigned long 
 48917 ;;  steps_until_    2   66[COMRAM] unsigned int 
 48918 ;;  steps_until_    2   64[COMRAM] unsigned int 
 48919 ;; Return value:  Size  Location     Type
 48920 ;;                  1    wreg      void 
 48921 ;; Registers used:
 48922 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 48923 ;; Tracked objects:
 48924 ;;		On entry : 0/0
 48925 ;;		On exit  : 0/0
 48926 ;;		Unchanged: 0/0
 48927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48929 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48930 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48931 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48932 ;;Total ram usage:       24 bytes
 48933 ;; Hardware stack levels used:    1
 48934 ;; Hardware stack levels required when called:    4
 48935 ;; This function calls:
 48936 ;;		_i2c_eeprom_save_position
 48937 ;; This function is called by:
 48938 ;;		_SYS_InterruptHigh
 48939 ;; This function uses a non-reentrant model
 48940 ;;
 48941                           
 48942                           	psect	text204
 48943  00B072                     __ptext204:
 48944                           	opt stack 0
 48945  00B072                     _motor_isr:
 48946                           	opt stack 13
 48947                           
 48948                           ;motor.c: 674: uint32_t steps_remaining;;motor.c: 675: uint16_t steps_until_standstill;;
      +                          motor.c: 676: uint16_t steps_until_standstill_if_accelerate;;motor.c: 679: PIR1bits.TMR2
      +                          IF = 0;
 48949                           
 48950                           ; BSR set to: 1
 48951                           ;incstack = 0
 48952  00B072  929E               	bcf	3998,1,c	;volatile
 48953                           
 48954                           ;motor.c: 682: if(motor_move_type==MOTOR_MOVE_TYPE_ENDLESS)
 48955  00B074  0101               	movlb	1	; () banked
 48956  00B076  054A               	decf	_motor_move_type& (0+255),w,b
 48957  00B078  A4D8               	btfss	status,2,c
 48958  00B07A  D004               	goto	i2l2596
 48959                           
 48960                           ; BSR set to: 1
 48961                           ;motor.c: 683: {;motor.c: 684: motor_final_stepcount = 0xFFFFFFFF;
 48962  00B07C  691B               	setf	_motor_final_stepcount& (0+255),b	;volatile
 48963  00B07E  691C               	setf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 48964  00B080  691D               	setf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 48965  00B082  691E               	setf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 48966  00B084                     i2l2596:
 48967                           
 48968                           ; BSR set to: 1
 48969                           ;motor.c: 685: };motor.c: 687: if(motor_mode==MOTOR_MODE_MANUAL)
 48970                           
 48971                           ; BSR set to: 1
 48972  00B084  5148               	movf	_motor_mode& (0+255),w,b	;volatile
 48973  00B086  A4D8               	btfss	status,2,c
 48974  00B088  D01A               	goto	i2l2601
 48975                           
 48976                           ; BSR set to: 1
 48977                           ;motor.c: 688: {;motor.c: 690: if(LATBbits.LB1)
 48978  00B08A  A28A               	btfss	3978,1,c	;volatile
 48979  00B08C  D017               	goto	i2l2598
 48980                           
 48981                           ; BSR set to: 1
 48982                           ;motor.c: 691: {;motor.c: 693: LATBbits.LB1 = 0;
 48983  00B08E  928A               	bcf	3978,1,c	;volatile
 48984                           
 48985                           ; BSR set to: 1
 48986                           ;motor.c: 696: if(motor_current_stepcount==motor_final_stepcount)
 48987  00B090  511B               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 48988  00B092  191F               	xorwf	_motor_current_stepcount& (0+255),w,b	;volatile
 48989  00B094  E109               	bnz	i2u1939_41
 48990  00B096  511C               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 48991  00B098  1920               	xorwf	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 48992  00B09A  E106               	bnz	i2u1939_41
 48993  00B09C  511D               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 48994  00B09E  1921               	xorwf	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 48995  00B0A0  E103               	bnz	i2u1939_41
 48996  00B0A2  511E               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 48997  00B0A4  1922               	xorwf	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 48998  00B0A6  A4D8               	btfss	status,2,c
 48999  00B0A8                     i2u1939_41:
 49000  00B0A8  0012               	return	
 49001                           
 49002                           ; BSR set to: 1
 49003                           ;motor.c: 697: {;motor.c: 700: T2CONbits.TMR2ON = 0;
 49004  00B0AA  94CA               	bcf	4042,2,c	;volatile
 49005                           
 49006                           ;motor.c: 702: PIR1bits.TMR2IF = 0;
 49007  00B0AC  929E               	bcf	3998,1,c	;volatile
 49008                           
 49009                           ;motor.c: 703: PIE1bits.TMR2IE = 0;
 49010  00B0AE  929D               	bcf	3997,1,c	;volatile
 49011                           
 49012                           ; BSR set to: 1
 49013                           ;motor.c: 705: i2c_eeprom_save_position();
 49014  00B0B0  EC39  F0A1         	call	_i2c_eeprom_save_position	;wreg free
 49015                           
 49016                           ;motor.c: 707: os.busy = 0;
 49017  00B0B4  0E00               	movlw	0
 49018  00B0B6  0101               	movlb	1	; () banked
 49019  00B0B8  6F74               	movwf	(_os+16)& (0+255),b	;volatile
 49020                           
 49021                           ; BSR set to: 1
 49022                           ;motor.c: 708: };motor.c: 711: return;
 49023                           
 49024                           ; BSR set to: 1
 49025  00B0BA  0012               	return	
 49026  00B0BC                     i2l2598:
 49027                           
 49028                           ; BSR set to: 1
 49029                           ;motor.c: 713: else;motor.c: 714: {;motor.c: 716: LATBbits.LB1 = 1;
 49030  00B0BC  828A               	bsf	3978,1,c	;volatile
 49031  00B0BE                     i2l2601:
 49032                           
 49033                           ; BSR set to: 1
 49034                           ;motor.c: 717: };motor.c: 718: };motor.c: 720: ++motor_current_stepcount;
 49035                           
 49036                           ; BSR set to: 1
 49037                           
 49038                           ; BSR set to: 1
 49039  00B0BE  0E01               	movlw	1
 49040  00B0C0  271F               	addwf	_motor_current_stepcount& (0+255),f,b	;volatile
 49041  00B0C2  0E00               	movlw	0
 49042  00B0C4  2320               	addwfc	(_motor_current_stepcount+1)& (0+255),f,b	;volatile
 49043  00B0C6  2321               	addwfc	(_motor_current_stepcount+2)& (0+255),f,b	;volatile
 49044  00B0C8  2322               	addwfc	(_motor_current_stepcount+3)& (0+255),f,b	;volatile
 49045                           
 49046                           ;motor.c: 723: os.current_position_in_steps += motor_direction;
 49047  00B0CA  5149               	movf	_motor_direction& (0+255),w,b
 49048  00B0CC  6E31               	movwf	??_motor_isr& (0+255),c
 49049  00B0CE  0E00               	movlw	0
 49050  00B0D0  BE31               	btfsc	??_motor_isr& (0+255),7,c
 49051  00B0D2  0EFF               	movlw	255
 49052  00B0D4  6E32               	movwf	(??_motor_isr+1)& (0+255),c
 49053  00B0D6  6E33               	movwf	(??_motor_isr+2)& (0+255),c
 49054  00B0D8  6E34               	movwf	(??_motor_isr+3)& (0+255),c
 49055  00B0DA  5031               	movf	??_motor_isr,w,c
 49056  00B0DC  276B               	addwf	(_os+7)& (0+255),f,b	;volatile
 49057  00B0DE  5032               	movf	??_motor_isr+1,w,c
 49058  00B0E0  236C               	addwfc	(_os+8)& (0+255),f,b	;volatile
 49059  00B0E2  5033               	movf	??_motor_isr+2,w,c
 49060  00B0E4  236D               	addwfc	(_os+9)& (0+255),f,b	;volatile
 49061  00B0E6  5034               	movf	??_motor_isr+3,w,c
 49062  00B0E8  236E               	addwfc	(_os+10)& (0+255),f,b	;volatile
 49063                           
 49064                           ;motor.c: 724: if(os.current_position_in_steps==config.full_circle_in_steps)
 49065  00B0EA  5195               	movf	_config& (0+255),w,b
 49066  00B0EC  196B               	xorwf	(_os+7)& (0+255),w,b	;volatile
 49067  00B0EE  E114               	bnz	i2l19633
 49068  00B0F0  5196               	movf	(_config+1)& (0+255),w,b
 49069  00B0F2  196C               	xorwf	(_os+8)& (0+255),w,b	;volatile
 49070  00B0F4  E111               	bnz	i2l19633
 49071  00B0F6  5197               	movf	(_config+2)& (0+255),w,b
 49072  00B0F8  196D               	xorwf	(_os+9)& (0+255),w,b	;volatile
 49073  00B0FA  E10E               	bnz	i2l19633
 49074  00B0FC  5198               	movf	(_config+3)& (0+255),w,b
 49075  00B0FE  196E               	xorwf	(_os+10)& (0+255),w,b	;volatile
 49076  00B100  A4D8               	btfss	status,2,c
 49077  00B102  D00A               	goto	i2l2602
 49078                           
 49079                           ; BSR set to: 1
 49080                           ;motor.c: 725: {;motor.c: 726: os.current_position_in_steps = 0;
 49081  00B104  0E00               	movlw	0
 49082  00B106  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
 49083  00B108  0E00               	movlw	0
 49084  00B10A  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
 49085  00B10C  0E00               	movlw	0
 49086  00B10E  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
 49087  00B110  0E00               	movlw	0
 49088  00B112  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
 49089                           
 49090                           ; BSR set to: 1
 49091                           ;motor.c: 727: ++os.absolute_position;
 49092  00B114  4B6F               	infsnz	(_os+11)& (0+255),f,b	;volatile
 49093  00B116  2B70               	incf	(_os+12)& (0+255),f,b	;volatile
 49094  00B118                     i2l2602:
 49095  00B118                     i2l19633:
 49096                           
 49097                           ; BSR set to: 1
 49098                           ;motor.c: 728: };motor.c: 729: if(os.current_position_in_steps==0xFFFFFFFF)
 49099  00B118  296B               	incf	(_os+7)& (0+255),w,b	;volatile
 49100  00B11A  E116               	bnz	i2l19639
 49101  00B11C  296C               	incf	(_os+8)& (0+255),w,b	;volatile
 49102  00B11E  E114               	bnz	i2l19639
 49103  00B120  296D               	incf	(_os+9)& (0+255),w,b	;volatile
 49104  00B122  E112               	bnz	i2l19639
 49105  00B124  296E               	incf	(_os+10)& (0+255),w,b	;volatile
 49106  00B126  A4D8               	btfss	status,2,c
 49107  00B128  D00F               	goto	i2l2603
 49108                           
 49109                           ; BSR set to: 1
 49110                           ;motor.c: 730: {;motor.c: 731: os.current_position_in_steps = (config.full_circle_in_ste
      +                          ps-1);
 49111  00B12A  0EFF               	movlw	255
 49112  00B12C  2595               	addwf	_config& (0+255),w,b
 49113  00B12E  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
 49114  00B130  0EFF               	movlw	255
 49115  00B132  2196               	addwfc	(_config+1)& (0+255),w,b
 49116  00B134  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
 49117  00B136  0EFF               	movlw	255
 49118  00B138  2197               	addwfc	(_config+2)& (0+255),w,b
 49119  00B13A  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
 49120  00B13C  0EFF               	movlw	255
 49121  00B13E  2198               	addwfc	(_config+3)& (0+255),w,b
 49122  00B140  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
 49123                           
 49124                           ; BSR set to: 1
 49125                           ;motor.c: 732: --os.absolute_position;
 49126  00B142  076F               	decf	(_os+11)& (0+255),f,b	;volatile
 49127  00B144  A0D8               	btfss	status,0,c
 49128  00B146  0770               	decf	(_os+12)& (0+255),f,b	;volatile
 49129  00B148                     i2l2603:
 49130  00B148                     i2l19639:
 49131                           
 49132                           ; BSR set to: 1
 49133                           ;motor.c: 733: };motor.c: 736: if(motor_current_stepcount==motor_next_speed_check)
 49134  00B148  0102               	movlb	2	; () banked
 49135  00B14A  5138               	movf	_motor_next_speed_check& (0+255),w,b	;volatile
 49136  00B14C  0101               	movlb	1	; () banked
 49137  00B14E  191F               	xorwf	_motor_current_stepcount& (0+255),w,b	;volatile
 49138  00B150  E10F               	bnz	i2u1942_41
 49139  00B152  0102               	movlb	2	; () banked
 49140  00B154  5139               	movf	(_motor_next_speed_check+1)& (0+255),w,b	;volatile
 49141  00B156  0101               	movlb	1	; () banked
 49142  00B158  1920               	xorwf	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 49143  00B15A  E10A               	bnz	i2u1942_41
 49144  00B15C  0102               	movlb	2	; () banked
 49145  00B15E  513A               	movf	(_motor_next_speed_check+2)& (0+255),w,b	;volatile
 49146  00B160  0101               	movlb	1	; () banked
 49147  00B162  1921               	xorwf	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 49148  00B164  E105               	bnz	i2u1942_41
 49149  00B166  0102               	movlb	2	; () banked
 49150  00B168  513B               	movf	(_motor_next_speed_check+3)& (0+255),w,b	;volatile
 49151  00B16A  0101               	movlb	1	; () banked
 49152  00B16C  1922               	xorwf	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 49153  00B16E  A4D8               	btfss	status,2,c
 49154  00B170                     i2u1942_41:
 49155  00B170  0012               	return	
 49156                           
 49157                           ; BSR set to: 1
 49158                           ;motor.c: 737: {;motor.c: 739: steps_remaining = motor_final_stepcount - motor_current_s
      +                          tepcount;
 49159  00B172  C11F  F031         	movff	_motor_current_stepcount,??_motor_isr	;volatile
 49160  00B176  C120  F032         	movff	_motor_current_stepcount+1,??_motor_isr+1	;volatile
 49161  00B17A  C121  F033         	movff	_motor_current_stepcount+2,??_motor_isr+2	;volatile
 49162  00B17E  C122  F034         	movff	_motor_current_stepcount+3,??_motor_isr+3	;volatile
 49163  00B182  1E31               	comf	??_motor_isr,f,c
 49164  00B184  1E32               	comf	??_motor_isr+1,f,c
 49165  00B186  1E33               	comf	??_motor_isr+2,f,c
 49166  00B188  1E34               	comf	??_motor_isr+3,f,c
 49167  00B18A  2A31               	incf	??_motor_isr,f,c
 49168  00B18C  0E00               	movlw	0
 49169  00B18E  2232               	addwfc	??_motor_isr+1,f,c
 49170  00B190  2233               	addwfc	??_motor_isr+2,f,c
 49171  00B192  2234               	addwfc	??_motor_isr+3,f,c
 49172  00B194  511B               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 49173  00B196  2431               	addwf	??_motor_isr,w,c
 49174  00B198  6E45               	movwf	motor_isr@steps_remaining,c
 49175  00B19A  511C               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 49176  00B19C  2032               	addwfc	??_motor_isr+1,w,c
 49177  00B19E  6E46               	movwf	motor_isr@steps_remaining+1,c
 49178  00B1A0  511D               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 49179  00B1A2  2033               	addwfc	??_motor_isr+2,w,c
 49180  00B1A4  6E47               	movwf	motor_isr@steps_remaining+2,c
 49181  00B1A6  511E               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 49182  00B1A8  2034               	addwfc	??_motor_isr+3,w,c
 49183  00B1AA  6E48               	movwf	motor_isr@steps_remaining+3,c
 49184                           
 49185                           ; BSR set to: 1
 49186                           ;motor.c: 740: steps_until_standstill = motor_steps_lookup[motor_current_speed];
 49187  00B1AC  90D8               	bcf	status,0,c
 49188  00B1AE  3457               	rlcf	_motor_current_speed,w,c	;volatile
 49189  00B1B0  6EF6               	movwf	tblptrl,c
 49190  00B1B2  3458               	rlcf	_motor_current_speed+1,w,c	;volatile
 49191  00B1B4  6EF7               	movwf	tblptrh,c
 49192  00B1B6  0E61               	movlw	low _motor_steps_lookup
 49193  00B1B8  26F6               	addwf	tblptrl,f,c
 49194  00B1BA  0E94               	movlw	high _motor_steps_lookup
 49195  00B1BC  22F7               	addwfc	tblptrh,f,c
 49196  00B1BE                     	if	1	;There are 3 active tblptr bytes
 49197  00B1BE  6AF8               	clrf	tblptru,c
 49198  00B1C0  0E00               	movlw	low (__mediumconst shr (0+16))
 49199  00B1C2  22F8               	addwfc	tblptru,f,c
 49200  00B1C4                     	endif
 49201  00B1C4  0009               	tblrd		*+
 49202  00B1C6  CFF5 F041          	movff	tablat,motor_isr@steps_until_standstill
 49203  00B1CA  000A               	tblrd		*-
 49204  00B1CC  CFF5 F042          	movff	tablat,motor_isr@steps_until_standstill+1
 49205                           
 49206                           ; BSR set to: 1
 49207                           ;motor.c: 741: steps_until_standstill_if_accelerate = motor_steps_lookup[motor_current_s
      +                          peed+2];
 49208  00B1D0  C057  F031         	movff	_motor_current_speed,??_motor_isr	;volatile
 49209  00B1D4  C058  F032         	movff	_motor_current_speed+1,??_motor_isr+1	;volatile
 49210  00B1D8  90D8               	bcf	status,0,c
 49211  00B1DA  3631               	rlcf	??_motor_isr,f,c
 49212  00B1DC  3632               	rlcf	??_motor_isr+1,f,c
 49213  00B1DE  0E04               	movlw	4
 49214  00B1E0  2631               	addwf	??_motor_isr,f,c
 49215  00B1E2  0E00               	movlw	0
 49216  00B1E4  2232               	addwfc	??_motor_isr+1,f,c
 49217  00B1E6  0E61               	movlw	low _motor_steps_lookup
 49218  00B1E8  2431               	addwf	??_motor_isr,w,c
 49219  00B1EA  6EF6               	movwf	tblptrl,c
 49220  00B1EC  0E94               	movlw	high _motor_steps_lookup
 49221  00B1EE  2032               	addwfc	??_motor_isr+1,w,c
 49222  00B1F0  6EF7               	movwf	tblptrh,c
 49223  00B1F2                     	if	1	;There are 3 active tblptr bytes
 49224  00B1F2  6AF8               	clrf	tblptru,c
 49225  00B1F4  0E00               	movlw	low (__mediumconst shr (0+16))
 49226  00B1F6  22F8               	addwfc	tblptru,f,c
 49227  00B1F8                     	endif
 49228  00B1F8  0009               	tblrd		*+
 49229  00B1FA  CFF5 F043          	movff	tablat,motor_isr@steps_until_standstill_if_accelerate
 49230  00B1FE  000A               	tblrd		*-
 49231  00B200  CFF5 F044          	movff	tablat,motor_isr@steps_until_standstill_if_accelerate+1
 49232                           
 49233                           ;motor.c: 743: if((motor_current_speed>motor_maximum_speed) || (steps_until_standstill>=
      +                          steps_remaining))
 49234  00B204  5057               	movf	_motor_current_speed,w,c	;volatile
 49235  00B206  5D34               	subwf	_motor_maximum_speed& (0+255),w,b
 49236  00B208  5058               	movf	_motor_current_speed+1,w,c	;volatile
 49237  00B20A  5935               	subwfb	(_motor_maximum_speed+1)& (0+255),w,b
 49238  00B20C  A0D8               	btfss	status,0,c
 49239  00B20E  D010               	goto	i2u1944_40
 49240                           
 49241                           ; BSR set to: 1
 49242  00B210  5041               	movf	motor_isr@steps_until_standstill,w,c
 49243  00B212  6E31               	movwf	??_motor_isr& (0+255),c
 49244  00B214  5042               	movf	motor_isr@steps_until_standstill+1,w,c
 49245  00B216  6E32               	movwf	(??_motor_isr+1)& (0+255),c
 49246  00B218  6A33               	clrf	(??_motor_isr+2)& (0+255),c
 49247  00B21A  6A34               	clrf	(??_motor_isr+3)& (0+255),c
 49248  00B21C  5045               	movf	motor_isr@steps_remaining,w,c
 49249  00B21E  5C31               	subwf	??_motor_isr,w,c
 49250  00B220  5046               	movf	motor_isr@steps_remaining+1,w,c
 49251  00B222  5832               	subwfb	??_motor_isr+1,w,c
 49252  00B224  5047               	movf	motor_isr@steps_remaining+2,w,c
 49253  00B226  5833               	subwfb	??_motor_isr+2,w,c
 49254  00B228  5048               	movf	motor_isr@steps_remaining+3,w,c
 49255  00B22A  5834               	subwfb	??_motor_isr+3,w,c
 49256  00B22C  A0D8               	btfss	status,0,c
 49257  00B22E  D0ED               	goto	i2l2605
 49258  00B230                     i2u1944_40:
 49259                           
 49260                           ; BSR set to: 1
 49261                           ;motor.c: 744: {;motor.c: 746: if(motor_current_speed>0)
 49262                           
 49263                           ; BSR set to: 1
 49264  00B230  5057               	movf	_motor_current_speed,w,c	;volatile
 49265  00B232  1058               	iorwf	_motor_current_speed+1,w,c	;volatile
 49266  00B234  B4D8               	btfsc	status,2,c
 49267  00B236  D003               	goto	i2l2608
 49268                           
 49269                           ; BSR set to: 1
 49270                           ;motor.c: 747: {;motor.c: 748: --motor_current_speed;
 49271  00B238  0657               	decf	_motor_current_speed,f,c	;volatile
 49272  00B23A  A0D8               	btfss	status,0,c
 49273  00B23C  0658               	decf	_motor_current_speed+1,f,c	;volatile
 49274  00B23E                     i2l2608:
 49275                           
 49276                           ; BSR set to: 1
 49277                           ;motor.c: 749: };motor.c: 752: if((motor_mode==MOTOR_MODE_PWM) && (motor_postscaler_look
      +                          up[motor_current_speed]>0))
 49278                           
 49279                           ; BSR set to: 1
 49280  00B23E  0548               	decf	_motor_mode& (0+255),w,b	;volatile
 49281  00B240  A4D8               	btfss	status,2,c
 49282  00B242  D024               	goto	i2l2609
 49283                           
 49284                           ; BSR set to: 1
 49285  00B244  0E2F               	movlw	low _motor_postscaler_lookup
 49286  00B246  2457               	addwf	_motor_current_speed,w,c	;volatile
 49287  00B248  6EF6               	movwf	tblptrl,c
 49288  00B24A  0E98               	movlw	high _motor_postscaler_lookup
 49289  00B24C  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 49290  00B24E  6EF7               	movwf	tblptrh,c
 49291  00B250                     	if	1	;There are 3 active tblptr bytes
 49292  00B250  6AF8               	clrf	tblptru,c
 49293  00B252  0E00               	movlw	low (__mediumconst shr (0+16))
 49294  00B254  22F8               	addwfc	tblptru,f,c
 49295  00B256                     	endif
 49296  00B256  0008               	tblrd		*
 49297  00B258  50F5               	movf	tablat,w,c
 49298  00B25A  0900               	iorlw	0
 49299  00B25C  B4D8               	btfsc	status,2,c
 49300  00B25E  D016               	goto	i2l2609
 49301                           
 49302                           ; BSR set to: 1
 49303                           ;motor.c: 753: {;motor.c: 755: motor_mode = MOTOR_MODE_MANUAL;
 49304  00B260  0E00               	movlw	0
 49305  00B262  6F48               	movwf	_motor_mode& (0+255),b	;volatile
 49306                           
 49307                           ; BSR set to: 1
 49308                           ;motor.c: 758: LATBbits.LB1 = 1;
 49309  00B264  828A               	bsf	3978,1,c	;volatile
 49310                           
 49311                           ;motor.c: 759: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 49312  00B266  0E55               	movlw	85
 49313  00B268  6EA7               	movwf	4007,c	;volsfr
 49314  00B26A  0EAA               	movlw	170
 49315  00B26C  6EA7               	movwf	4007,c	;volsfr
 49316                           
 49317                           ; BSR set to: 1
 49318  00B26E  010E               	movlb	14	; () banked
 49319  00B270  91BF               	bcf	191,0,b	;volatile
 49320                           
 49321                           ;motor.c: 760: RPOR4 = 0;
 49322  00B272  0E00               	movlw	0
 49323  00B274  6FC4               	movwf	196,b	;volatile
 49324                           
 49325                           ;motor.c: 761: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 49326  00B276  0E55               	movlw	85
 49327  00B278  6EA7               	movwf	4007,c	;volsfr
 49328  00B27A  0EAA               	movlw	170
 49329  00B27C  6EA7               	movwf	4007,c	;volsfr
 49330                           
 49331                           ; BSR set to: 14
 49332  00B27E  81BF               	bsf	191,0,b	;volatile
 49333                           
 49334                           ;motor.c: 764: TMR2 = 0;
 49335  00B280  0E00               	movlw	0
 49336  00B282  6ECC               	movwf	4044,c	;volatile
 49337                           
 49338                           ; BSR set to: 14
 49339                           ;motor.c: 767: CCP1CONbits.CCP1M = 0b0000;
 49340  00B284  90BA               	bcf	4026,0,c	;volatile
 49341  00B286  92BA               	bcf	4026,1,c	;volatile
 49342  00B288  94BA               	bcf	4026,2,c	;volatile
 49343  00B28A  96BA               	bcf	4026,3,c	;volatile
 49344  00B28C                     i2l2609:
 49345                           
 49346                           ;motor.c: 768: };motor.c: 772: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_s
      +                          peed];
 49347                           
 49348                           ; BSR set to: 14
 49349  00B28C  0EFD               	movlw	low _motor_prescaler_lookup
 49350  00B28E  2457               	addwf	_motor_current_speed,w,c	;volatile
 49351  00B290  6EF6               	movwf	tblptrl,c
 49352  00B292  0E9B               	movlw	high _motor_prescaler_lookup
 49353  00B294  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 49354  00B296  6EF7               	movwf	tblptrh,c
 49355  00B298                     	if	1	;There are 3 active tblptr bytes
 49356  00B298  6AF8               	clrf	tblptru,c
 49357  00B29A  0E00               	movlw	low (__mediumconst shr (0+16))
 49358  00B29C  22F8               	addwfc	tblptru,f,c
 49359  00B29E                     	endif
 49360  00B29E  0008               	tblrd		*
 49361  00B2A0  CFF5 F031          	movff	tablat,??_motor_isr
 49362  00B2A4  50CA               	movf	4042,w,c	;volatile
 49363  00B2A6  1831               	xorwf	??_motor_isr,w,c
 49364  00B2A8  0BFC               	andlw	-4
 49365  00B2AA  1831               	xorwf	??_motor_isr,w,c
 49366  00B2AC  6ECA               	movwf	4042,c	;volatile
 49367                           
 49368                           ;motor.c: 774: PR2 = motor_period_lookup[motor_current_speed];
 49369  00B2AE  0E16               	movlw	low _motor_period_lookup
 49370  00B2B0  2457               	addwf	_motor_current_speed,w,c	;volatile
 49371  00B2B2  6EF6               	movwf	tblptrl,c
 49372  00B2B4  0E9A               	movlw	high _motor_period_lookup
 49373  00B2B6  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 49374  00B2B8  6EF7               	movwf	tblptrh,c
 49375  00B2BA                     	if	1	;There are 3 active tblptr bytes
 49376  00B2BA  6AF8               	clrf	tblptru,c
 49377  00B2BC  0E00               	movlw	low (__mediumconst shr (0+16))
 49378  00B2BE  22F8               	addwfc	tblptru,f,c
 49379  00B2C0                     	endif
 49380  00B2C0  0008               	tblrd		*
 49381  00B2C2  CFF5 FFCB          	movff	tablat,4043	;volatile
 49382                           
 49383                           ;motor.c: 776: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 49384  00B2C6  0E2F               	movlw	low _motor_postscaler_lookup
 49385  00B2C8  2457               	addwf	_motor_current_speed,w,c	;volatile
 49386  00B2CA  6EF6               	movwf	tblptrl,c
 49387  00B2CC  0E98               	movlw	high _motor_postscaler_lookup
 49388  00B2CE  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 49389  00B2D0  6EF7               	movwf	tblptrh,c
 49390  00B2D2                     	if	1	;There are 3 active tblptr bytes
 49391  00B2D2  6AF8               	clrf	tblptru,c
 49392  00B2D4  0E00               	movlw	low (__mediumconst shr (0+16))
 49393  00B2D6  22F8               	addwfc	tblptru,f,c
 49394  00B2D8                     	endif
 49395  00B2D8  0008               	tblrd		*
 49396  00B2DA  CFF5 F031          	movff	tablat,??_motor_isr
 49397  00B2DE  4631               	rlncf	??_motor_isr,f,c
 49398  00B2E0  4631               	rlncf	??_motor_isr,f,c
 49399  00B2E2  4631               	rlncf	??_motor_isr,f,c
 49400  00B2E4  50CA               	movf	4042,w,c	;volatile
 49401  00B2E6  1831               	xorwf	??_motor_isr,w,c
 49402  00B2E8  0B87               	andlw	-121
 49403  00B2EA  1831               	xorwf	??_motor_isr,w,c
 49404  00B2EC  6ECA               	movwf	4042,c	;volatile
 49405                           
 49406                           ;motor.c: 778: CCPR1L = PR2>>1;
 49407  00B2EE  90D8               	bcf	status,0,c
 49408  00B2F0  30CB               	rrcf	4043,w,c	;volatile
 49409  00B2F2  6EBB               	movwf	4027,c	;volatile
 49410                           
 49411                           ;motor.c: 781: if(motor_current_speed>0)
 49412  00B2F4  5057               	movf	_motor_current_speed,w,c	;volatile
 49413  00B2F6  1058               	iorwf	_motor_current_speed+1,w,c	;volatile
 49414  00B2F8  B4D8               	btfsc	status,2,c
 49415  00B2FA  D060               	goto	i2l2610
 49416                           
 49417                           ;motor.c: 782: {;motor.c: 783: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed] - motor_steps_lookup[motor_current_speed-1];
 49418  00B2FC  0EFE               	movlw	254
 49419  00B2FE  6E31               	movwf	??_motor_isr& (0+255),c
 49420  00B300  0EFF               	movlw	255
 49421  00B302  6E32               	movwf	(??_motor_isr+1)& (0+255),c
 49422  00B304  C057  F033         	movff	_motor_current_speed,??_motor_isr+2	;volatile
 49423  00B308  C058  F034         	movff	_motor_current_speed+1,??_motor_isr+3	;volatile
 49424  00B30C  90D8               	bcf	status,0,c
 49425  00B30E  3633               	rlcf	??_motor_isr+2,f,c
 49426  00B310  3634               	rlcf	??_motor_isr+3,f,c
 49427  00B312  5031               	movf	??_motor_isr,w,c
 49428  00B314  2633               	addwf	??_motor_isr+2,f,c
 49429  00B316  5032               	movf	??_motor_isr+1,w,c
 49430  00B318  2234               	addwfc	??_motor_isr+3,f,c
 49431  00B31A  0E61               	movlw	low _motor_steps_lookup
 49432  00B31C  2433               	addwf	??_motor_isr+2,w,c
 49433  00B31E  6EF6               	movwf	tblptrl,c
 49434  00B320  0E94               	movlw	high _motor_steps_lookup
 49435  00B322  2034               	addwfc	??_motor_isr+3,w,c
 49436  00B324  6EF7               	movwf	tblptrh,c
 49437  00B326                     	if	1	;There are 3 active tblptr bytes
 49438  00B326  6AF8               	clrf	tblptru,c
 49439  00B328  0E00               	movlw	low (__mediumconst shr (0+16))
 49440  00B32A  22F8               	addwfc	tblptru,f,c
 49441  00B32C                     	endif
 49442  00B32C  0009               	tblrd		*+
 49443  00B32E  CFF5 F035          	movff	tablat,??_motor_isr+4
 49444  00B332  0009               	tblrd		*+
 49445  00B334  CFF5 F036          	movff	tablat,??_motor_isr+5
 49446  00B338  5035               	movf	??_motor_isr+4,w,c
 49447  00B33A  6E37               	movwf	(??_motor_isr+6)& (0+255),c
 49448  00B33C  5036               	movf	??_motor_isr+5,w,c
 49449  00B33E  6E38               	movwf	(??_motor_isr+7)& (0+255),c
 49450  00B340  6A39               	clrf	(??_motor_isr+8)& (0+255),c
 49451  00B342  6A3A               	clrf	(??_motor_isr+9)& (0+255),c
 49452  00B344  1E37               	comf	??_motor_isr+6,f,c
 49453  00B346  1E38               	comf	??_motor_isr+7,f,c
 49454  00B348  1E39               	comf	??_motor_isr+8,f,c
 49455  00B34A  1E3A               	comf	??_motor_isr+9,f,c
 49456  00B34C  2A37               	incf	??_motor_isr+6,f,c
 49457  00B34E  0E00               	movlw	0
 49458  00B350  2238               	addwfc	??_motor_isr+7,f,c
 49459  00B352  2239               	addwfc	??_motor_isr+8,f,c
 49460  00B354  223A               	addwfc	??_motor_isr+9,f,c
 49461  00B356  90D8               	bcf	status,0,c
 49462  00B358  3457               	rlcf	_motor_current_speed,w,c	;volatile
 49463  00B35A  6EF6               	movwf	tblptrl,c
 49464  00B35C  3458               	rlcf	_motor_current_speed+1,w,c	;volatile
 49465  00B35E  6EF7               	movwf	tblptrh,c
 49466  00B360  0E61               	movlw	low _motor_steps_lookup
 49467  00B362  26F6               	addwf	tblptrl,f,c
 49468  00B364  0E94               	movlw	high _motor_steps_lookup
 49469  00B366  22F7               	addwfc	tblptrh,f,c
 49470  00B368                     	if	1	;There are 3 active tblptr bytes
 49471  00B368  6AF8               	clrf	tblptru,c
 49472  00B36A  0E00               	movlw	low (__mediumconst shr (0+16))
 49473  00B36C  22F8               	addwfc	tblptru,f,c
 49474  00B36E                     	endif
 49475  00B36E  0009               	tblrd		*+
 49476  00B370  CFF5 F03B          	movff	tablat,??_motor_isr+10
 49477  00B374  0009               	tblrd		*+
 49478  00B376  CFF5 F03C          	movff	tablat,??_motor_isr+11
 49479  00B37A  503B               	movf	??_motor_isr+10,w,c
 49480  00B37C  2437               	addwf	??_motor_isr+6,w,c
 49481  00B37E  6E3D               	movwf	(??_motor_isr+12)& (0+255),c
 49482  00B380  503C               	movf	??_motor_isr+11,w,c
 49483  00B382  2038               	addwfc	??_motor_isr+7,w,c
 49484  00B384  6E3E               	movwf	(??_motor_isr+13)& (0+255),c
 49485  00B386  0E00               	movlw	0
 49486  00B388  2039               	addwfc	??_motor_isr+8,w,c
 49487  00B38A  6E3F               	movwf	(??_motor_isr+14)& (0+255),c
 49488  00B38C  0E00               	movlw	0
 49489  00B38E  203A               	addwfc	??_motor_isr+9,w,c
 49490  00B390  6E40               	movwf	(??_motor_isr+15)& (0+255),c
 49491  00B392  0101               	movlb	1	; () banked
 49492  00B394  511F               	movf	_motor_current_stepcount& (0+255),w,b	;volatile
 49493  00B396  243D               	addwf	??_motor_isr+12,w,c
 49494  00B398  0102               	movlb	2	; () banked
 49495  00B39A  6F38               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 49496  00B39C  0101               	movlb	1	; () banked
 49497  00B39E  5120               	movf	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 49498  00B3A0  203E               	addwfc	??_motor_isr+13,w,c
 49499  00B3A2  0102               	movlb	2	; () banked
 49500  00B3A4  6F39               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 49501  00B3A6  0101               	movlb	1	; () banked
 49502  00B3A8  5121               	movf	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 49503  00B3AA  203F               	addwfc	??_motor_isr+14,w,c
 49504  00B3AC  0102               	movlb	2	; () banked
 49505  00B3AE  6F3A               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 49506  00B3B0  0101               	movlb	1	; () banked
 49507  00B3B2  5122               	movf	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 49508  00B3B4  2040               	addwfc	??_motor_isr+15,w,c
 49509  00B3B6  0102               	movlb	2	; () banked
 49510  00B3B8  6F3B               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 49511                           
 49512                           ;motor.c: 784: }
 49513  00B3BA  0012               	return	
 49514  00B3BC                     i2l2610:
 49515                           
 49516                           ;motor.c: 785: else;motor.c: 786: {;motor.c: 787: motor_next_speed_check = motor_current
      +                          _stepcount + motor_steps_lookup[motor_current_speed];
 49517                           
 49518                           ; BSR set to: 2
 49519  00B3BC  90D8               	bcf	status,0,c
 49520  00B3BE  3457               	rlcf	_motor_current_speed,w,c	;volatile
 49521  00B3C0  6EF6               	movwf	tblptrl,c
 49522  00B3C2  3458               	rlcf	_motor_current_speed+1,w,c	;volatile
 49523  00B3C4  6EF7               	movwf	tblptrh,c
 49524  00B3C6  0E61               	movlw	low _motor_steps_lookup
 49525  00B3C8  26F6               	addwf	tblptrl,f,c
 49526  00B3CA  0E94               	movlw	high _motor_steps_lookup
 49527  00B3CC  22F7               	addwfc	tblptrh,f,c
 49528  00B3CE                     	if	1	;There are 3 active tblptr bytes
 49529  00B3CE  6AF8               	clrf	tblptru,c
 49530  00B3D0  0E00               	movlw	low (__mediumconst shr (0+16))
 49531  00B3D2  22F8               	addwfc	tblptru,f,c
 49532  00B3D4                     	endif
 49533  00B3D4  0009               	tblrd		*+
 49534  00B3D6  CFF5 F031          	movff	tablat,??_motor_isr
 49535  00B3DA  0009               	tblrd		*+
 49536  00B3DC  CFF5 F032          	movff	tablat,??_motor_isr+1
 49537  00B3E0  5031               	movf	??_motor_isr,w,c
 49538  00B3E2  0101               	movlb	1	; () banked
 49539  00B3E4  251F               	addwf	_motor_current_stepcount& (0+255),w,b	;volatile
 49540  00B3E6  0102               	movlb	2	; () banked
 49541  00B3E8  6F38               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 49542  00B3EA  5032               	movf	??_motor_isr+1,w,c
 49543  00B3EC  0101               	movlb	1	; () banked
 49544  00B3EE  2120               	addwfc	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 49545  00B3F0  0102               	movlb	2	; () banked
 49546  00B3F2  6F39               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 49547  00B3F4  0E00               	movlw	0
 49548  00B3F6  0101               	movlb	1	; () banked
 49549  00B3F8  2121               	addwfc	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 49550  00B3FA  0102               	movlb	2	; () banked
 49551  00B3FC  6F3A               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 49552  00B3FE  0E00               	movlw	0
 49553  00B400  0101               	movlb	1	; () banked
 49554  00B402  2122               	addwfc	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 49555  00B404  0102               	movlb	2	; () banked
 49556  00B406  6F3B               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 49557                           
 49558                           ; BSR set to: 2
 49559                           ;motor.c: 788: };motor.c: 789: }
 49560  00B408  0012               	return	
 49561  00B40A                     i2l2605:
 49562                           
 49563                           ;motor.c: 790: else if((motor_current_speed==motor_maximum_speed) || (steps_until_stands
      +                          till_if_accelerate>=steps_remaining))
 49564                           
 49565                           ; BSR set to: 2
 49566  00B40A  0101               	movlb	1	; () banked
 49567  00B40C  5134               	movf	_motor_maximum_speed& (0+255),w,b
 49568  00B40E  1857               	xorwf	_motor_current_speed,w,c	;volatile
 49569  00B410  E104               	bnz	i2u1949_40
 49570  00B412  5135               	movf	(_motor_maximum_speed+1)& (0+255),w,b
 49571  00B414  1858               	xorwf	_motor_current_speed+1,w,c	;volatile
 49572  00B416  B4D8               	btfsc	status,2,c
 49573  00B418  D010               	goto	i2u1950_40
 49574  00B41A                     i2u1949_40:
 49575                           
 49576                           ; BSR set to: 1
 49577  00B41A  5043               	movf	motor_isr@steps_until_standstill_if_accelerate,w,c
 49578  00B41C  6E31               	movwf	??_motor_isr& (0+255),c
 49579  00B41E  5044               	movf	motor_isr@steps_until_standstill_if_accelerate+1,w,c
 49580  00B420  6E32               	movwf	(??_motor_isr+1)& (0+255),c
 49581  00B422  6A33               	clrf	(??_motor_isr+2)& (0+255),c
 49582  00B424  6A34               	clrf	(??_motor_isr+3)& (0+255),c
 49583  00B426  5045               	movf	motor_isr@steps_remaining,w,c
 49584  00B428  5C31               	subwf	??_motor_isr,w,c
 49585  00B42A  5046               	movf	motor_isr@steps_remaining+1,w,c
 49586  00B42C  5832               	subwfb	??_motor_isr+1,w,c
 49587  00B42E  5047               	movf	motor_isr@steps_remaining+2,w,c
 49588  00B430  5833               	subwfb	??_motor_isr+2,w,c
 49589  00B432  5048               	movf	motor_isr@steps_remaining+3,w,c
 49590  00B434  5834               	subwfb	??_motor_isr+3,w,c
 49591  00B436  A0D8               	btfss	status,0,c
 49592  00B438  D05B               	goto	i2l2613
 49593  00B43A                     i2u1950_40:
 49594                           
 49595                           ; BSR set to: 1
 49596                           ;motor.c: 791: {;motor.c: 794: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed+1] - motor_steps_lookup[motor_current_speed];
 49597                           
 49598                           ; BSR set to: 1
 49599  00B43A  90D8               	bcf	status,0,c
 49600  00B43C  3457               	rlcf	_motor_current_speed,w,c	;volatile
 49601  00B43E  6EF6               	movwf	tblptrl,c
 49602  00B440  3458               	rlcf	_motor_current_speed+1,w,c	;volatile
 49603  00B442  6EF7               	movwf	tblptrh,c
 49604  00B444  0E61               	movlw	low _motor_steps_lookup
 49605  00B446  26F6               	addwf	tblptrl,f,c
 49606  00B448  0E94               	movlw	high _motor_steps_lookup
 49607  00B44A  22F7               	addwfc	tblptrh,f,c
 49608  00B44C                     	if	1	;There are 3 active tblptr bytes
 49609  00B44C  6AF8               	clrf	tblptru,c
 49610  00B44E  0E00               	movlw	low (__mediumconst shr (0+16))
 49611  00B450  22F8               	addwfc	tblptru,f,c
 49612  00B452                     	endif
 49613  00B452  0009               	tblrd		*+
 49614  00B454  CFF5 F031          	movff	tablat,??_motor_isr
 49615  00B458  0009               	tblrd		*+
 49616  00B45A  CFF5 F032          	movff	tablat,??_motor_isr+1
 49617  00B45E  5031               	movf	??_motor_isr,w,c
 49618  00B460  6E33               	movwf	(??_motor_isr+2)& (0+255),c
 49619  00B462  5032               	movf	??_motor_isr+1,w,c
 49620  00B464  6E34               	movwf	(??_motor_isr+3)& (0+255),c
 49621  00B466  6A35               	clrf	(??_motor_isr+4)& (0+255),c
 49622  00B468  6A36               	clrf	(??_motor_isr+5)& (0+255),c
 49623  00B46A  1E33               	comf	??_motor_isr+2,f,c
 49624  00B46C  1E34               	comf	??_motor_isr+3,f,c
 49625  00B46E  1E35               	comf	??_motor_isr+4,f,c
 49626  00B470  1E36               	comf	??_motor_isr+5,f,c
 49627  00B472  2A33               	incf	??_motor_isr+2,f,c
 49628  00B474  0E00               	movlw	0
 49629  00B476  2234               	addwfc	??_motor_isr+3,f,c
 49630  00B478  2235               	addwfc	??_motor_isr+4,f,c
 49631  00B47A  2236               	addwfc	??_motor_isr+5,f,c
 49632  00B47C  C057  F037         	movff	_motor_current_speed,??_motor_isr+6	;volatile
 49633  00B480  C058  F038         	movff	_motor_current_speed+1,??_motor_isr+7	;volatile
 49634  00B484  90D8               	bcf	status,0,c
 49635  00B486  3637               	rlcf	??_motor_isr+6,f,c
 49636  00B488  3638               	rlcf	??_motor_isr+7,f,c
 49637  00B48A  0E02               	movlw	2
 49638  00B48C  2637               	addwf	??_motor_isr+6,f,c
 49639  00B48E  0E00               	movlw	0
 49640  00B490  2238               	addwfc	??_motor_isr+7,f,c
 49641  00B492  0E61               	movlw	low _motor_steps_lookup
 49642  00B494  2437               	addwf	??_motor_isr+6,w,c
 49643  00B496  6EF6               	movwf	tblptrl,c
 49644  00B498  0E94               	movlw	high _motor_steps_lookup
 49645  00B49A  2038               	addwfc	??_motor_isr+7,w,c
 49646  00B49C  6EF7               	movwf	tblptrh,c
 49647  00B49E                     	if	1	;There are 3 active tblptr bytes
 49648  00B49E  6AF8               	clrf	tblptru,c
 49649  00B4A0  0E00               	movlw	low (__mediumconst shr (0+16))
 49650  00B4A2  22F8               	addwfc	tblptru,f,c
 49651  00B4A4                     	endif
 49652  00B4A4  0009               	tblrd		*+
 49653  00B4A6  CFF5 F039          	movff	tablat,??_motor_isr+8
 49654  00B4AA  0009               	tblrd		*+
 49655  00B4AC  CFF5 F03A          	movff	tablat,??_motor_isr+9
 49656  00B4B0  5039               	movf	??_motor_isr+8,w,c
 49657  00B4B2  2433               	addwf	??_motor_isr+2,w,c
 49658  00B4B4  6E3B               	movwf	(??_motor_isr+10)& (0+255),c
 49659  00B4B6  503A               	movf	??_motor_isr+9,w,c
 49660  00B4B8  2034               	addwfc	??_motor_isr+3,w,c
 49661  00B4BA  6E3C               	movwf	(??_motor_isr+11)& (0+255),c
 49662  00B4BC  0E00               	movlw	0
 49663  00B4BE  2035               	addwfc	??_motor_isr+4,w,c
 49664  00B4C0  6E3D               	movwf	(??_motor_isr+12)& (0+255),c
 49665  00B4C2  0E00               	movlw	0
 49666  00B4C4  2036               	addwfc	??_motor_isr+5,w,c
 49667  00B4C6  6E3E               	movwf	(??_motor_isr+13)& (0+255),c
 49668  00B4C8  511F               	movf	_motor_current_stepcount& (0+255),w,b	;volatile
 49669  00B4CA  243B               	addwf	??_motor_isr+10,w,c
 49670  00B4CC  0102               	movlb	2	; () banked
 49671  00B4CE  6F38               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 49672  00B4D0  0101               	movlb	1	; () banked
 49673  00B4D2  5120               	movf	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 49674  00B4D4  203C               	addwfc	??_motor_isr+11,w,c
 49675  00B4D6  0102               	movlb	2	; () banked
 49676  00B4D8  6F39               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 49677  00B4DA  0101               	movlb	1	; () banked
 49678  00B4DC  5121               	movf	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 49679  00B4DE  203D               	addwfc	??_motor_isr+12,w,c
 49680  00B4E0  0102               	movlb	2	; () banked
 49681  00B4E2  6F3A               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 49682  00B4E4  0101               	movlb	1	; () banked
 49683  00B4E6  5122               	movf	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 49684  00B4E8  203E               	addwfc	??_motor_isr+13,w,c
 49685  00B4EA  0102               	movlb	2	; () banked
 49686  00B4EC  6F3B               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 49687                           
 49688                           ;motor.c: 795: }
 49689  00B4EE  0012               	return	
 49690  00B4F0                     i2l2613:
 49691                           
 49692                           ;motor.c: 796: else;motor.c: 797: {;motor.c: 799: ++motor_current_speed;
 49693                           
 49694                           ; BSR set to: 2
 49695  00B4F0  4A57               	infsnz	_motor_current_speed,f,c	;volatile
 49696  00B4F2  2A58               	incf	_motor_current_speed+1,f,c	;volatile
 49697                           
 49698                           ;motor.c: 803: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_speed];
 49699  00B4F4  0EFD               	movlw	low _motor_prescaler_lookup
 49700  00B4F6  2457               	addwf	_motor_current_speed,w,c	;volatile
 49701  00B4F8  6EF6               	movwf	tblptrl,c
 49702  00B4FA  0E9B               	movlw	high _motor_prescaler_lookup
 49703  00B4FC  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 49704  00B4FE  6EF7               	movwf	tblptrh,c
 49705  00B500                     	if	1	;There are 3 active tblptr bytes
 49706  00B500  6AF8               	clrf	tblptru,c
 49707  00B502  0E00               	movlw	low (__mediumconst shr (0+16))
 49708  00B504  22F8               	addwfc	tblptru,f,c
 49709  00B506                     	endif
 49710  00B506  0008               	tblrd		*
 49711  00B508  CFF5 F031          	movff	tablat,??_motor_isr
 49712  00B50C  50CA               	movf	4042,w,c	;volatile
 49713  00B50E  1831               	xorwf	??_motor_isr,w,c
 49714  00B510  0BFC               	andlw	-4
 49715  00B512  1831               	xorwf	??_motor_isr,w,c
 49716  00B514  6ECA               	movwf	4042,c	;volatile
 49717                           
 49718                           ;motor.c: 805: PR2 = motor_period_lookup[motor_current_speed];
 49719  00B516  0E16               	movlw	low _motor_period_lookup
 49720  00B518  2457               	addwf	_motor_current_speed,w,c	;volatile
 49721  00B51A  6EF6               	movwf	tblptrl,c
 49722  00B51C  0E9A               	movlw	high _motor_period_lookup
 49723  00B51E  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 49724  00B520  6EF7               	movwf	tblptrh,c
 49725  00B522                     	if	1	;There are 3 active tblptr bytes
 49726  00B522  6AF8               	clrf	tblptru,c
 49727  00B524  0E00               	movlw	low (__mediumconst shr (0+16))
 49728  00B526  22F8               	addwfc	tblptru,f,c
 49729  00B528                     	endif
 49730  00B528  0008               	tblrd		*
 49731  00B52A  CFF5 FFCB          	movff	tablat,4043	;volatile
 49732                           
 49733                           ;motor.c: 807: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 49734  00B52E  0E2F               	movlw	low _motor_postscaler_lookup
 49735  00B530  2457               	addwf	_motor_current_speed,w,c	;volatile
 49736  00B532  6EF6               	movwf	tblptrl,c
 49737  00B534  0E98               	movlw	high _motor_postscaler_lookup
 49738  00B536  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 49739  00B538  6EF7               	movwf	tblptrh,c
 49740  00B53A                     	if	1	;There are 3 active tblptr bytes
 49741  00B53A  6AF8               	clrf	tblptru,c
 49742  00B53C  0E00               	movlw	low (__mediumconst shr (0+16))
 49743  00B53E  22F8               	addwfc	tblptru,f,c
 49744  00B540                     	endif
 49745  00B540  0008               	tblrd		*
 49746  00B542  CFF5 F031          	movff	tablat,??_motor_isr
 49747  00B546  4631               	rlncf	??_motor_isr,f,c
 49748  00B548  4631               	rlncf	??_motor_isr,f,c
 49749  00B54A  4631               	rlncf	??_motor_isr,f,c
 49750  00B54C  50CA               	movf	4042,w,c	;volatile
 49751  00B54E  1831               	xorwf	??_motor_isr,w,c
 49752  00B550  0B87               	andlw	-121
 49753  00B552  1831               	xorwf	??_motor_isr,w,c
 49754  00B554  6ECA               	movwf	4042,c	;volatile
 49755                           
 49756                           ;motor.c: 809: CCPR1L = PR2>>1;
 49757  00B556  90D8               	bcf	status,0,c
 49758  00B558  30CB               	rrcf	4043,w,c	;volatile
 49759  00B55A  6EBB               	movwf	4027,c	;volatile
 49760                           
 49761                           ;motor.c: 811: if((motor_mode==MOTOR_MODE_MANUAL) && (motor_postscaler_lookup[motor_curr
      +                          ent_speed]==0))
 49762  00B55C  0101               	movlb	1	; () banked
 49763  00B55E  5148               	movf	_motor_mode& (0+255),w,b	;volatile
 49764  00B560  A4D8               	btfss	status,2,c
 49765  00B562  D021               	goto	i2l2617
 49766                           
 49767                           ; BSR set to: 1
 49768  00B564  0E2F               	movlw	low _motor_postscaler_lookup
 49769  00B566  2457               	addwf	_motor_current_speed,w,c	;volatile
 49770  00B568  6EF6               	movwf	tblptrl,c
 49771  00B56A  0E98               	movlw	high _motor_postscaler_lookup
 49772  00B56C  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 49773  00B56E  6EF7               	movwf	tblptrh,c
 49774  00B570                     	if	1	;There are 3 active tblptr bytes
 49775  00B570  6AF8               	clrf	tblptru,c
 49776  00B572  0E00               	movlw	low (__mediumconst shr (0+16))
 49777  00B574  22F8               	addwfc	tblptru,f,c
 49778  00B576                     	endif
 49779  00B576  0008               	tblrd		*
 49780  00B578  50F5               	movf	tablat,w,c
 49781  00B57A  0900               	iorlw	0
 49782  00B57C  A4D8               	btfss	status,2,c
 49783  00B57E  D013               	goto	i2l2617
 49784                           
 49785                           ; BSR set to: 1
 49786                           ;motor.c: 812: {;motor.c: 814: motor_mode = MOTOR_MODE_PWM;
 49787  00B580  0E01               	movlw	1
 49788  00B582  6F48               	movwf	_motor_mode& (0+255),b	;volatile
 49789                           
 49790                           ;motor.c: 817: CCP1CONbits.CCP1M = 0b1100;
 49791  00B584  50BA               	movf	4026,w,c	;volatile
 49792  00B586  0BF0               	andlw	-16
 49793  00B588  090C               	iorlw	12
 49794  00B58A  6EBA               	movwf	4026,c	;volatile
 49795                           
 49796                           ;motor.c: 820: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 49797  00B58C  0E55               	movlw	85
 49798  00B58E  6EA7               	movwf	4007,c	;volsfr
 49799  00B590  0EAA               	movlw	170
 49800  00B592  6EA7               	movwf	4007,c	;volsfr
 49801                           
 49802                           ; BSR set to: 1
 49803  00B594  010E               	movlb	14	; () banked
 49804  00B596  91BF               	bcf	191,0,b	;volatile
 49805                           
 49806                           ;motor.c: 821: RPOR4 = 14;
 49807  00B598  0E0E               	movlw	14
 49808  00B59A  6FC4               	movwf	196,b	;volatile
 49809                           
 49810                           ;motor.c: 822: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 49811  00B59C  0E55               	movlw	85
 49812  00B59E  6EA7               	movwf	4007,c	;volsfr
 49813  00B5A0  0EAA               	movlw	170
 49814  00B5A2  6EA7               	movwf	4007,c	;volsfr
 49815                           
 49816                           ; BSR set to: 14
 49817  00B5A4  81BF               	bsf	191,0,b	;volatile
 49818  00B5A6                     i2l2617:
 49819                           
 49820                           ;motor.c: 823: };motor.c: 826: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed+1] - motor_steps_lookup[motor_current_speed];
 49821                           
 49822                           ; BSR set to: 14
 49823  00B5A6  90D8               	bcf	status,0,c
 49824  00B5A8  3457               	rlcf	_motor_current_speed,w,c	;volatile
 49825  00B5AA  6EF6               	movwf	tblptrl,c
 49826  00B5AC  3458               	rlcf	_motor_current_speed+1,w,c	;volatile
 49827  00B5AE  6EF7               	movwf	tblptrh,c
 49828  00B5B0  0E61               	movlw	low _motor_steps_lookup
 49829  00B5B2  26F6               	addwf	tblptrl,f,c
 49830  00B5B4  0E94               	movlw	high _motor_steps_lookup
 49831  00B5B6  22F7               	addwfc	tblptrh,f,c
 49832  00B5B8                     	if	1	;There are 3 active tblptr bytes
 49833  00B5B8  6AF8               	clrf	tblptru,c
 49834  00B5BA  0E00               	movlw	low (__mediumconst shr (0+16))
 49835  00B5BC  22F8               	addwfc	tblptru,f,c
 49836  00B5BE                     	endif
 49837  00B5BE  0009               	tblrd		*+
 49838  00B5C0  CFF5 F031          	movff	tablat,??_motor_isr
 49839  00B5C4  0009               	tblrd		*+
 49840  00B5C6  CFF5 F032          	movff	tablat,??_motor_isr+1
 49841  00B5CA  5031               	movf	??_motor_isr,w,c
 49842  00B5CC  6E33               	movwf	(??_motor_isr+2)& (0+255),c
 49843  00B5CE  5032               	movf	??_motor_isr+1,w,c
 49844  00B5D0  6E34               	movwf	(??_motor_isr+3)& (0+255),c
 49845  00B5D2  6A35               	clrf	(??_motor_isr+4)& (0+255),c
 49846  00B5D4  6A36               	clrf	(??_motor_isr+5)& (0+255),c
 49847  00B5D6  1E33               	comf	??_motor_isr+2,f,c
 49848  00B5D8  1E34               	comf	??_motor_isr+3,f,c
 49849  00B5DA  1E35               	comf	??_motor_isr+4,f,c
 49850  00B5DC  1E36               	comf	??_motor_isr+5,f,c
 49851  00B5DE  2A33               	incf	??_motor_isr+2,f,c
 49852  00B5E0  0E00               	movlw	0
 49853  00B5E2  2234               	addwfc	??_motor_isr+3,f,c
 49854  00B5E4  2235               	addwfc	??_motor_isr+4,f,c
 49855  00B5E6  2236               	addwfc	??_motor_isr+5,f,c
 49856  00B5E8  C057  F037         	movff	_motor_current_speed,??_motor_isr+6	;volatile
 49857  00B5EC  C058  F038         	movff	_motor_current_speed+1,??_motor_isr+7	;volatile
 49858  00B5F0  90D8               	bcf	status,0,c
 49859  00B5F2  3637               	rlcf	??_motor_isr+6,f,c
 49860  00B5F4  3638               	rlcf	??_motor_isr+7,f,c
 49861  00B5F6  0E02               	movlw	2
 49862  00B5F8  2637               	addwf	??_motor_isr+6,f,c
 49863  00B5FA  0E00               	movlw	0
 49864  00B5FC  2238               	addwfc	??_motor_isr+7,f,c
 49865  00B5FE  0E61               	movlw	low _motor_steps_lookup
 49866  00B600  2437               	addwf	??_motor_isr+6,w,c
 49867  00B602  6EF6               	movwf	tblptrl,c
 49868  00B604  0E94               	movlw	high _motor_steps_lookup
 49869  00B606  2038               	addwfc	??_motor_isr+7,w,c
 49870  00B608  6EF7               	movwf	tblptrh,c
 49871  00B60A                     	if	1	;There are 3 active tblptr bytes
 49872  00B60A  6AF8               	clrf	tblptru,c
 49873  00B60C  0E00               	movlw	low (__mediumconst shr (0+16))
 49874  00B60E  22F8               	addwfc	tblptru,f,c
 49875  00B610                     	endif
 49876  00B610  0009               	tblrd		*+
 49877  00B612  CFF5 F039          	movff	tablat,??_motor_isr+8
 49878  00B616  0009               	tblrd		*+
 49879  00B618  CFF5 F03A          	movff	tablat,??_motor_isr+9
 49880  00B61C  5039               	movf	??_motor_isr+8,w,c
 49881  00B61E  2433               	addwf	??_motor_isr+2,w,c
 49882  00B620  6E3B               	movwf	(??_motor_isr+10)& (0+255),c
 49883  00B622  503A               	movf	??_motor_isr+9,w,c
 49884  00B624  2034               	addwfc	??_motor_isr+3,w,c
 49885  00B626  6E3C               	movwf	(??_motor_isr+11)& (0+255),c
 49886  00B628  0E00               	movlw	0
 49887  00B62A  2035               	addwfc	??_motor_isr+4,w,c
 49888  00B62C  6E3D               	movwf	(??_motor_isr+12)& (0+255),c
 49889  00B62E  0E00               	movlw	0
 49890  00B630  2036               	addwfc	??_motor_isr+5,w,c
 49891  00B632  6E3E               	movwf	(??_motor_isr+13)& (0+255),c
 49892  00B634  0101               	movlb	1	; () banked
 49893  00B636  511F               	movf	_motor_current_stepcount& (0+255),w,b	;volatile
 49894  00B638  243B               	addwf	??_motor_isr+10,w,c
 49895  00B63A  0102               	movlb	2	; () banked
 49896  00B63C  6F38               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 49897  00B63E  0101               	movlb	1	; () banked
 49898  00B640  5120               	movf	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 49899  00B642  203C               	addwfc	??_motor_isr+11,w,c
 49900  00B644  0102               	movlb	2	; () banked
 49901  00B646  6F39               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 49902  00B648  0101               	movlb	1	; () banked
 49903  00B64A  5121               	movf	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 49904  00B64C  203D               	addwfc	??_motor_isr+12,w,c
 49905  00B64E  0102               	movlb	2	; () banked
 49906  00B650  6F3A               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 49907  00B652  0101               	movlb	1	; () banked
 49908  00B654  5122               	movf	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 49909  00B656  203E               	addwfc	??_motor_isr+13,w,c
 49910  00B658  0102               	movlb	2	; () banked
 49911  00B65A  6F3B               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 49912                           
 49913                           ; BSR set to: 2
 49914                           
 49915                           ; BSR set to: 2
 49916  00B65C  0012               	return	
 49917  00B65E                     __end_of_motor_isr:
 49918                           	opt stack 0
 49919                           tosu	equ	0xFFF
 49920                           tosh	equ	0xFFE
 49921                           tosl	equ	0xFFD
 49922                           pclatu	equ	0xFFB
 49923                           pclath	equ	0xFFA
 49924                           tblptru	equ	0xFF8
 49925                           tblptrh	equ	0xFF7
 49926                           tblptrl	equ	0xFF6
 49927                           tablat	equ	0xFF5
 49928                           prodh	equ	0xFF4
 49929                           prodl	equ	0xFF3
 49930                           intcon	equ	0xFF2
 49931                           indf0	equ	0xFEF
 49932                           postinc0	equ	0xFEE
 49933                           fsr0h	equ	0xFEA
 49934                           fsr0l	equ	0xFE9
 49935                           wreg	equ	0xFE8
 49936                           indf1	equ	0xFE7
 49937                           postinc1	equ	0xFE6
 49938                           postdec1	equ	0xFE5
 49939                           plusw1	equ	0xFE3
 49940                           fsr1h	equ	0xFE2
 49941                           fsr1l	equ	0xFE1
 49942                           indf2	equ	0xFDF
 49943                           postinc2	equ	0xFDE
 49944                           postdec2	equ	0xFDD
 49945                           plusw2	equ	0xFDB
 49946                           fsr2h	equ	0xFDA
 49947                           fsr2l	equ	0xFD9
 49948                           status	equ	0xFD8
 49949                           
 49950 ;; *************** function _i2c_eeprom_save_position *****************
 49951 ;; Defined at:
 49952 ;;		line 293 in file "i2c.c"
 49953 ;; Parameters:    Size  Location     Type
 49954 ;;		None
 49955 ;; Auto vars:     Size  Location     Type
 49956 ;;  buffer         11   37[COMRAM] unsigned char [11]
 49957 ;; Return value:  Size  Location     Type
 49958 ;;                  1    wreg      void 
 49959 ;; Registers used:
 49960 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 49961 ;; Tracked objects:
 49962 ;;		On entry : 0/0
 49963 ;;		On exit  : 0/0
 49964 ;;		Unchanged: 0/0
 49965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49967 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49969 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49970 ;;Total ram usage:       11 bytes
 49971 ;; Hardware stack levels used:    1
 49972 ;; Hardware stack levels required when called:    3
 49973 ;; This function calls:
 49974 ;;		_i2c_eeprom_write
 49975 ;;		i2_memcpy
 49976 ;; This function is called by:
 49977 ;;		_motor_isr
 49978 ;; This function uses a non-reentrant model
 49979 ;;
 49980                           
 49981                           	psect	text205
 49982  014272                     __ptext205:
 49983                           	opt stack 0
 49984  014272                     _i2c_eeprom_save_position:
 49985                           	opt stack 13
 49986                           
 49987                           ;i2c.c: 295: uint8_t buffer[11];;i2c.c: 301: memcpy(&buffer[0], &os.current_position_in_
      +                          steps, 4);
 49988                           
 49989                           ;incstack = 0
 49990  014272  0E26               	movlw	low i2c_eeprom_save_position@buffer
 49991  014274  6E01               	movwf	i2memcpy@d1,c
 49992  014276  0E00               	movlw	high i2c_eeprom_save_position@buffer
 49993  014278  6E02               	movwf	i2memcpy@d1+1,c
 49994  01427A  0E6B               	movlw	low (_os+7)
 49995  01427C  6E03               	movwf	i2memcpy@s1,c
 49996  01427E  0E01               	movlw	high (_os+7)
 49997  014280  6E04               	movwf	i2memcpy@s1+1,c
 49998  014282  0E00               	movlw	0
 49999  014284  6E06               	movwf	i2memcpy@n+1,c
 50000  014286  0E04               	movlw	4
 50001  014288  6E05               	movwf	i2memcpy@n,c
 50002  01428A  ECF2  F0A7         	call	i2_memcpy	;wreg free
 50003                           
 50004                           ;i2c.c: 302: memcpy(&buffer[4], &os.absolute_position, 2);
 50005  01428E  0E2A               	movlw	low (i2c_eeprom_save_position@buffer+4)
 50006  014290  6E01               	movwf	i2memcpy@d1,c
 50007  014292  0E00               	movlw	high (i2c_eeprom_save_position@buffer+4)
 50008  014294  6E02               	movwf	i2memcpy@d1+1,c
 50009  014296  0E6F               	movlw	low (_os+11)
 50010  014298  6E03               	movwf	i2memcpy@s1,c
 50011  01429A  0E01               	movlw	high (_os+11)
 50012  01429C  6E04               	movwf	i2memcpy@s1+1,c
 50013  01429E  0E00               	movlw	0
 50014  0142A0  6E06               	movwf	i2memcpy@n+1,c
 50015  0142A2  0E02               	movlw	2
 50016  0142A4  6E05               	movwf	i2memcpy@n,c
 50017  0142A6  ECF2  F0A7         	call	i2_memcpy	;wreg free
 50018                           
 50019                           ;i2c.c: 303: buffer[6] = os.approach_direction;
 50020  0142AA  C177  F02C         	movff	_os+19,i2c_eeprom_save_position@buffer+6	;volatile
 50021                           
 50022                           ;i2c.c: 304: memcpy(&buffer[7], &os.division, 2);
 50023  0142AE  0E2D               	movlw	low (i2c_eeprom_save_position@buffer+7)
 50024  0142B0  6E01               	movwf	i2memcpy@d1,c
 50025  0142B2  0E00               	movlw	high (i2c_eeprom_save_position@buffer+7)
 50026  0142B4  6E02               	movwf	i2memcpy@d1+1,c
 50027  0142B6  0E78               	movlw	low (_os+20)
 50028  0142B8  6E03               	movwf	i2memcpy@s1,c
 50029  0142BA  0E01               	movlw	high (_os+20)
 50030  0142BC  6E04               	movwf	i2memcpy@s1+1,c
 50031  0142BE  0E00               	movlw	0
 50032  0142C0  6E06               	movwf	i2memcpy@n+1,c
 50033  0142C2  0E02               	movlw	2
 50034  0142C4  6E05               	movwf	i2memcpy@n,c
 50035  0142C6  ECF2  F0A7         	call	i2_memcpy	;wreg free
 50036                           
 50037                           ;i2c.c: 305: memcpy(&buffer[9], &os.divide_position, 2);
 50038  0142CA  0E2F               	movlw	low (i2c_eeprom_save_position@buffer+9)
 50039  0142CC  6E01               	movwf	i2memcpy@d1,c
 50040  0142CE  0E00               	movlw	high (i2c_eeprom_save_position@buffer+9)
 50041  0142D0  6E02               	movwf	i2memcpy@d1+1,c
 50042  0142D2  0E7B               	movlw	low (_os+23)
 50043  0142D4  6E03               	movwf	i2memcpy@s1,c
 50044  0142D6  0E01               	movlw	high (_os+23)
 50045  0142D8  6E04               	movwf	i2memcpy@s1+1,c
 50046  0142DA  0E00               	movlw	0
 50047  0142DC  6E06               	movwf	i2memcpy@n+1,c
 50048  0142DE  0E02               	movlw	2
 50049  0142E0  6E05               	movwf	i2memcpy@n,c
 50050  0142E2  ECF2  F0A7         	call	i2_memcpy	;wreg free
 50051                           
 50052                           ;i2c.c: 308: i2c_eeprom_write(0x200, &buffer[0], 11);
 50053  0142E6  0E02               	movlw	2
 50054  0142E8  6E0C               	movwf	i2c_eeprom_write@address+1,c
 50055  0142EA  0E00               	movlw	0
 50056  0142EC  6E0B               	movwf	i2c_eeprom_write@address,c
 50057  0142EE  0E26               	movlw	low i2c_eeprom_save_position@buffer
 50058  0142F0  6E0D               	movwf	i2c_eeprom_write@data,c
 50059  0142F2  0E00               	movlw	high i2c_eeprom_save_position@buffer
 50060  0142F4  6E0E               	movwf	i2c_eeprom_write@data+1,c
 50061  0142F6  0E0B               	movlw	11
 50062  0142F8  6E0F               	movwf	i2c_eeprom_write@length,c
 50063  0142FA  EC8A  F0A2         	call	_i2c_eeprom_write	;wreg free
 50064  0142FE  0012               	return		;funcret
 50065  014300                     __end_of_i2c_eeprom_save_position:
 50066                           	opt stack 0
 50067                           tosu	equ	0xFFF
 50068                           tosh	equ	0xFFE
 50069                           tosl	equ	0xFFD
 50070                           pclatu	equ	0xFFB
 50071                           pclath	equ	0xFFA
 50072                           tblptru	equ	0xFF8
 50073                           tblptrh	equ	0xFF7
 50074                           tblptrl	equ	0xFF6
 50075                           tablat	equ	0xFF5
 50076                           prodh	equ	0xFF4
 50077                           prodl	equ	0xFF3
 50078                           intcon	equ	0xFF2
 50079                           indf0	equ	0xFEF
 50080                           postinc0	equ	0xFEE
 50081                           fsr0h	equ	0xFEA
 50082                           fsr0l	equ	0xFE9
 50083                           wreg	equ	0xFE8
 50084                           indf1	equ	0xFE7
 50085                           postinc1	equ	0xFE6
 50086                           postdec1	equ	0xFE5
 50087                           plusw1	equ	0xFE3
 50088                           fsr1h	equ	0xFE2
 50089                           fsr1l	equ	0xFE1
 50090                           indf2	equ	0xFDF
 50091                           postinc2	equ	0xFDE
 50092                           postdec2	equ	0xFDD
 50093                           plusw2	equ	0xFDB
 50094                           fsr2h	equ	0xFDA
 50095                           fsr2l	equ	0xFD9
 50096                           status	equ	0xFD8
 50097                           
 50098 ;; *************** function _i2c_eeprom_write *****************
 50099 ;; Defined at:
 50100 ;;		line 256 in file "i2c.c"
 50101 ;; Parameters:    Size  Location     Type
 50102 ;;  address         2   10[COMRAM] unsigned int 
 50103 ;;  data            2   12[COMRAM] PTR unsigned char 
 50104 ;;		 -> i2c_eeprom_save_position@buffer(11), i2c_eeprom_writeInt16@data(2), i2c_eeprom_writeUint32@data(4), i2c_eeprom_w
      +riteUint16@data(2), 
 50105 ;;  length          1   14[COMRAM] unsigned char 
 50106 ;; Auto vars:     Size  Location     Type
 50107 ;;  dat            17   18[COMRAM] unsigned char [17]
 50108 ;;  cntr            1   36[COMRAM] unsigned char 
 50109 ;;  slave_addres    1   35[COMRAM] unsigned char 
 50110 ;; Return value:  Size  Location     Type
 50111 ;;                  1    wreg      void 
 50112 ;; Registers used:
 50113 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 50114 ;; Tracked objects:
 50115 ;;		On entry : 0/0
 50116 ;;		On exit  : 0/0
 50117 ;;		Unchanged: 0/0
 50118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50119 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50120 ;;      Locals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50121 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50122 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50123 ;;Total ram usage:       27 bytes
 50124 ;; Hardware stack levels used:    1
 50125 ;; Hardware stack levels required when called:    2
 50126 ;; This function calls:
 50127 ;;		i2__i2c_eeprom_busy
 50128 ;;		i2__i2c_write
 50129 ;; This function is called by:
 50130 ;;		_i2c_eeprom_save_position
 50131 ;;		_i2c_eeprom_writeUint16
 50132 ;;		_i2c_eeprom_writeUint32
 50133 ;;		_i2c_eeprom_writeInt16
 50134 ;; This function uses a non-reentrant model
 50135 ;;
 50136                           
 50137                           	psect	text206
 50138  014514                     __ptext206:
 50139                           	opt stack 0
 50140  014514                     _i2c_eeprom_write:
 50141                           	opt stack 13
 50142                           
 50143                           ;i2c.c: 258: uint8_t cntr;;i2c.c: 259: uint8_t slave_address;;i2c.c: 260: uint8_t dat[17
      +                          ];;i2c.c: 262: slave_address = 0b10100000 | ((address&0b0000011100000000)>>7);
 50144                           
 50145                           ;incstack = 0
 50146  014514  C00B  F010         	movff	i2c_eeprom_write@address,??_i2c_eeprom_write
 50147  014518  C00C  F011         	movff	i2c_eeprom_write@address+1,??_i2c_eeprom_write+1
 50148  01451C  0E07               	movlw	7
 50149  01451E  6E12               	movwf	(??_i2c_eeprom_write+2)& (0+255),c
 50150  014520                     i2u1529_45:
 50151  014520  90D8               	bcf	status,0,c
 50152  014522  3211               	rrcf	??_i2c_eeprom_write+1,f,c
 50153  014524  3210               	rrcf	??_i2c_eeprom_write,f,c
 50154  014526  2E12               	decfsz	(??_i2c_eeprom_write+2)& (0+255),f,c
 50155  014528  D7FB               	goto	i2u1529_45
 50156  01452A  5010               	movf	??_i2c_eeprom_write,w,c
 50157  01452C  0B0E               	andlw	14
 50158  01452E  09A0               	iorlw	160
 50159  014530  6E24               	movwf	i2c_eeprom_write@slave_address,c
 50160                           
 50161                           ;i2c.c: 263: dat[0] = address & 0xFF;
 50162  014532  C00B  F013         	movff	i2c_eeprom_write@address,i2c_eeprom_write@dat
 50163                           
 50164                           ;i2c.c: 265: length &= 0b00001111;
 50165  014536  0E0F               	movlw	15
 50166  014538  160F               	andwf	i2c_eeprom_write@length,f,c
 50167                           
 50168                           ;i2c.c: 266: for(cntr=0; cntr<length; ++cntr)
 50169  01453A  0E00               	movlw	0
 50170  01453C  6E25               	movwf	i2c_eeprom_write@cntr,c
 50171  01453E  D018               	goto	i2l1214
 50172  014540                     
 50173                           ;i2c.c: 267: {;i2c.c: 268: dat[cntr+1] = data[cntr];
 50174  014540  5025               	movf	i2c_eeprom_write@cntr,w,c
 50175  014542  0D01               	mullw	1
 50176  014544  50F3               	movf	prodl,w,c
 50177  014546  240D               	addwf	i2c_eeprom_write@data,w,c
 50178  014548  6ED9               	movwf	fsr2l,c
 50179  01454A  50F4               	movf	prodh,w,c
 50180  01454C  200E               	addwfc	i2c_eeprom_write@data+1,w,c
 50181  01454E  6EDA               	movwf	fsr2h,c
 50182  014550  5025               	movf	i2c_eeprom_write@cntr,w,c
 50183  014552  6E10               	movwf	??_i2c_eeprom_write& (0+255),c
 50184  014554  6A11               	clrf	(??_i2c_eeprom_write+1)& (0+255),c
 50185  014556  0E01               	movlw	1
 50186  014558  2610               	addwf	??_i2c_eeprom_write,f,c
 50187  01455A  0E00               	movlw	0
 50188  01455C  2211               	addwfc	??_i2c_eeprom_write+1,f,c
 50189  01455E  0E13               	movlw	low i2c_eeprom_write@dat
 50190  014560  2410               	addwf	??_i2c_eeprom_write,w,c
 50191  014562  6EE1               	movwf	fsr1l,c
 50192  014564  0E00               	movlw	high i2c_eeprom_write@dat
 50193  014566  2011               	addwfc	??_i2c_eeprom_write+1,w,c
 50194  014568  6EE2               	movwf	fsr1h,c
 50195  01456A  CFDF FFE7          	movff	indf2,indf1
 50196  01456E  2A25               	incf	i2c_eeprom_write@cntr,f,c
 50197  014570                     i2l1214:
 50198  014570  500F               	movf	i2c_eeprom_write@length,w,c
 50199  014572  5C25               	subwf	i2c_eeprom_write@cntr,w,c
 50200  014574  A0D8               	btfss	status,0,c
 50201  014576  D7E4               	goto	i2l1215
 50202  014578                     i2u1530_40:
 50203                           
 50204                           ;i2c.c: 269: };i2c.c: 272: while(_i2c_eeprom_busy());
 50205  014578  ECCD  F0B0         	call	i2__i2c_eeprom_busy	;wreg free
 50206  01457C  0900               	iorlw	0
 50207  01457E  A4D8               	btfss	status,2,c
 50208  014580  D7FB               	goto	i2u1530_40
 50209                           
 50210                           ;i2c.c: 274: _i2c_write(slave_address, &dat[0], length+1);
 50211  014582  0E13               	movlw	low i2c_eeprom_write@dat
 50212  014584  6E06               	movwf	i2__i2c_write@data,c
 50213  014586  0E00               	movlw	high i2c_eeprom_write@dat
 50214  014588  6E07               	movwf	i2__i2c_write@data+1,c
 50215  01458A  280F               	incf	i2c_eeprom_write@length,w,c
 50216  01458C  6E08               	movwf	i2__i2c_write@length,c
 50217  01458E  5024               	movf	i2c_eeprom_write@slave_address,w,c
 50218  014590  ECAF  F0AC         	call	i2__i2c_write
 50219  014594  0012               	return		;funcret
 50220  014596                     __end_of_i2c_eeprom_write:
 50221                           	opt stack 0
 50222                           tosu	equ	0xFFF
 50223                           tosh	equ	0xFFE
 50224                           tosl	equ	0xFFD
 50225                           pclatu	equ	0xFFB
 50226                           pclath	equ	0xFFA
 50227                           tblptru	equ	0xFF8
 50228                           tblptrh	equ	0xFF7
 50229                           tblptrl	equ	0xFF6
 50230                           tablat	equ	0xFF5
 50231                           prodh	equ	0xFF4
 50232                           prodl	equ	0xFF3
 50233                           intcon	equ	0xFF2
 50234                           indf0	equ	0xFEF
 50235                           postinc0	equ	0xFEE
 50236                           fsr0h	equ	0xFEA
 50237                           fsr0l	equ	0xFE9
 50238                           wreg	equ	0xFE8
 50239                           indf1	equ	0xFE7
 50240                           postinc1	equ	0xFE6
 50241                           postdec1	equ	0xFE5
 50242                           plusw1	equ	0xFE3
 50243                           fsr1h	equ	0xFE2
 50244                           fsr1l	equ	0xFE1
 50245                           indf2	equ	0xFDF
 50246                           postinc2	equ	0xFDE
 50247                           postdec2	equ	0xFDD
 50248                           plusw2	equ	0xFDB
 50249                           fsr2h	equ	0xFDA
 50250                           fsr2l	equ	0xFD9
 50251                           status	equ	0xFD8
 50252                           
 50253 ;; *************** function i2__i2c_write *****************
 50254 ;; Defined at:
 50255 ;;		line 86 in file "i2c.c"
 50256 ;; Parameters:    Size  Location     Type
 50257 ;;  slave_addres    1    wreg     unsigned char 
 50258 ;;  data            2    5[COMRAM] PTR unsigned char 
 50259 ;;		 -> i2c_display_program_custom_character@data_array(11), _ic2_display_set_cgram_address@data_array(3), _ic2_display_
      +set_ddram_address@data_array(2), i2c_display_init@init_sequence(9), 
 50260 ;;		 -> _i2c_display_send_init_sequence@init_sequence(9), i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_
      +readByte@addr(1), 
 50261 ;;		 -> i2c_eeprom_writeByte@dat(2), i2c_adc_start@configuration_byte(1), 
 50262 ;;  length          1    7[COMRAM] unsigned char 
 50263 ;; Auto vars:     Size  Location     Type
 50264 ;;  slave_addres    1    8[COMRAM] unsigned char 
 50265 ;;  _i2c_write      1    9[COMRAM] unsigned char 
 50266 ;; Return value:  Size  Location     Type
 50267 ;;                  1    wreg      void 
 50268 ;; Registers used:
 50269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 50270 ;; Tracked objects:
 50271 ;;		On entry : 0/0
 50272 ;;		On exit  : 0/0
 50273 ;;		Unchanged: 0/0
 50274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50275 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50276 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50278 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50279 ;;Total ram usage:        5 bytes
 50280 ;; Hardware stack levels used:    1
 50281 ;; Hardware stack levels required when called:    1
 50282 ;; This function calls:
 50283 ;;		i2__i2c_send
 50284 ;;		i2__i2c_start
 50285 ;;		i2__i2c_stop
 50286 ;;		i2__i2c_wait_idle
 50287 ;; This function is called by:
 50288 ;;		_i2c_eeprom_write
 50289 ;; This function uses a non-reentrant model
 50290 ;;
 50291                           
 50292                           	psect	text207
 50293  01595E                     __ptext207:
 50294                           	opt stack 0
 50295  01595E                     i2__i2c_write:
 50296                           	opt stack 13
 50297                           
 50298                           ;incstack = 0
 50299                           ;i2__i2c_write@slave_address stored from wreg
 50300  01595E  6E09               	movwf	i2__i2c_write@slave_address,c
 50301                           
 50302                           ;i2c.c: 88: uint8_t cntr;;i2c.c: 90: _i2c_wait_idle();
 50303  015960  ECB1  F0A9         	call	i2__i2c_wait_idle	;wreg free
 50304                           
 50305                           ;i2c.c: 91: _i2c_start();
 50306  015964  EC51  F0B2         	call	i2__i2c_start	;wreg free
 50307                           
 50308                           ;i2c.c: 92: _i2c_wait_idle();
 50309  015968  ECB1  F0A9         	call	i2__i2c_wait_idle	;wreg free
 50310                           
 50311                           ;i2c.c: 93: _i2c_send(slave_address);
 50312  01596C  5009               	movf	i2__i2c_write@slave_address,w,c
 50313  01596E  EC55  F0B2         	call	i2__i2c_send
 50314                           
 50315                           ;i2c.c: 94: _i2c_wait_idle();
 50316  015972  ECB1  F0A9         	call	i2__i2c_wait_idle	;wreg free
 50317                           
 50318                           ;i2c.c: 96: for(cntr=0; cntr<length; ++cntr)
 50319  015976  0E00               	movlw	0
 50320  015978  6E0A               	movwf	i2__i2c_write@cntr,c
 50321  01597A  D00E               	goto	i2l1163
 50322  01597C                     
 50323                           ;i2c.c: 97: {;i2c.c: 98: _i2c_send(data[cntr]);
 50324  01597C  500A               	movf	i2__i2c_write@cntr,w,c
 50325  01597E  0D01               	mullw	1
 50326  015980  50F3               	movf	prodl,w,c
 50327  015982  2406               	addwf	i2__i2c_write@data,w,c
 50328  015984  6ED9               	movwf	fsr2l,c
 50329  015986  50F4               	movf	prodh,w,c
 50330  015988  2007               	addwfc	i2__i2c_write@data+1,w,c
 50331  01598A  6EDA               	movwf	fsr2h,c
 50332  01598C  50DF               	movf	indf2,w,c
 50333  01598E  EC55  F0B2         	call	i2__i2c_send
 50334                           
 50335                           ;i2c.c: 99: _i2c_wait_idle();
 50336  015992  ECB1  F0A9         	call	i2__i2c_wait_idle	;wreg free
 50337  015996  2A0A               	incf	i2__i2c_write@cntr,f,c
 50338  015998                     i2l1163:
 50339  015998  5008               	movf	i2__i2c_write@length,w,c
 50340  01599A  5C0A               	subwf	i2__i2c_write@cntr,w,c
 50341  01599C  A0D8               	btfss	status,0,c
 50342  01599E  D7EE               	goto	i2l1164
 50343                           
 50344                           ;i2c.c: 100: };i2c.c: 102: _i2c_stop();
 50345  0159A0  EC4D  F0B2         	call	i2__i2c_stop	;wreg free
 50346  0159A4  0012               	return		;funcret
 50347  0159A6                     __end_ofi2__i2c_write:
 50348                           	opt stack 0
 50349                           tosu	equ	0xFFF
 50350                           tosh	equ	0xFFE
 50351                           tosl	equ	0xFFD
 50352                           pclatu	equ	0xFFB
 50353                           pclath	equ	0xFFA
 50354                           tblptru	equ	0xFF8
 50355                           tblptrh	equ	0xFF7
 50356                           tblptrl	equ	0xFF6
 50357                           tablat	equ	0xFF5
 50358                           prodh	equ	0xFF4
 50359                           prodl	equ	0xFF3
 50360                           intcon	equ	0xFF2
 50361                           indf0	equ	0xFEF
 50362                           postinc0	equ	0xFEE
 50363                           fsr0h	equ	0xFEA
 50364                           fsr0l	equ	0xFE9
 50365                           wreg	equ	0xFE8
 50366                           indf1	equ	0xFE7
 50367                           postinc1	equ	0xFE6
 50368                           postdec1	equ	0xFE5
 50369                           plusw1	equ	0xFE3
 50370                           fsr1h	equ	0xFE2
 50371                           fsr1l	equ	0xFE1
 50372                           indf2	equ	0xFDF
 50373                           postinc2	equ	0xFDE
 50374                           postdec2	equ	0xFDD
 50375                           plusw2	equ	0xFDB
 50376                           fsr2h	equ	0xFDA
 50377                           fsr2l	equ	0xFD9
 50378                           status	equ	0xFD8
 50379                           
 50380 ;; *************** function i2__i2c_eeprom_busy *****************
 50381 ;; Defined at:
 50382 ;;		line 171 in file "i2c.c"
 50383 ;; Parameters:    Size  Location     Type
 50384 ;;		None
 50385 ;; Auto vars:     Size  Location     Type
 50386 ;;  _i2c_eeprom_    1    5[COMRAM] unsigned char 
 50387 ;; Return value:  Size  Location     Type
 50388 ;;                  1    wreg      unsigned char 
 50389 ;; Registers used:
 50390 ;;		wreg, status,2, status,0, cstack
 50391 ;; Tracked objects:
 50392 ;;		On entry : 0/0
 50393 ;;		On exit  : 0/0
 50394 ;;		Unchanged: 0/0
 50395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50397 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50399 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50400 ;;Total ram usage:        1 bytes
 50401 ;; Hardware stack levels used:    1
 50402 ;; Hardware stack levels required when called:    1
 50403 ;; This function calls:
 50404 ;;		i2__i2c_send
 50405 ;;		i2__i2c_start
 50406 ;;		i2__i2c_stop
 50407 ;;		i2__i2c_wait_idle
 50408 ;; This function is called by:
 50409 ;;		_i2c_eeprom_write
 50410 ;; This function uses a non-reentrant model
 50411 ;;
 50412                           
 50413                           	psect	text208
 50414  01619A                     __ptext208:
 50415                           	opt stack 0
 50416  01619A                     i2__i2c_eeprom_busy:
 50417                           	opt stack 13
 50418                           
 50419                           ;i2c.c: 173: uint8_t busy;;i2c.c: 174: _i2c_wait_idle();
 50420                           
 50421                           ;incstack = 0
 50422  01619A  ECB1  F0A9         	call	i2__i2c_wait_idle	;wreg free
 50423                           
 50424                           ;i2c.c: 175: _i2c_start();
 50425  01619E  EC51  F0B2         	call	i2__i2c_start	;wreg free
 50426                           
 50427                           ;i2c.c: 176: _i2c_wait_idle();
 50428  0161A2  ECB1  F0A9         	call	i2__i2c_wait_idle	;wreg free
 50429                           
 50430                           ;i2c.c: 177: _i2c_send(0b10100000);
 50431  0161A6  0EA0               	movlw	160
 50432  0161A8  EC55  F0B2         	call	i2__i2c_send
 50433                           
 50434                           ;i2c.c: 178: _i2c_wait_idle();
 50435  0161AC  ECB1  F0A9         	call	i2__i2c_wait_idle	;wreg free
 50436                           
 50437                           ;i2c.c: 182: busy = SSP1CON2bits.ACKSTAT;
 50438  0161B0  0E00               	movlw	0
 50439  0161B2  BCC5               	btfsc	4037,6,c	;volatile
 50440  0161B4  0E01               	movlw	1
 50441  0161B6  6E06               	movwf	i2__i2c_eeprom_busy@busy,c
 50442                           
 50443                           ;i2c.c: 183: _i2c_stop();
 50444  0161B8  EC4D  F0B2         	call	i2__i2c_stop	;wreg free
 50445                           
 50446                           ;i2c.c: 185: return 0;
 50447  0161BC  0E00               	movlw	0
 50448  0161BE  0012               	return	
 50449  0161C0                     __end_ofi2__i2c_eeprom_busy:
 50450                           	opt stack 0
 50451                           tosu	equ	0xFFF
 50452                           tosh	equ	0xFFE
 50453                           tosl	equ	0xFFD
 50454                           pclatu	equ	0xFFB
 50455                           pclath	equ	0xFFA
 50456                           tblptru	equ	0xFF8
 50457                           tblptrh	equ	0xFF7
 50458                           tblptrl	equ	0xFF6
 50459                           tablat	equ	0xFF5
 50460                           prodh	equ	0xFF4
 50461                           prodl	equ	0xFF3
 50462                           intcon	equ	0xFF2
 50463                           indf0	equ	0xFEF
 50464                           postinc0	equ	0xFEE
 50465                           fsr0h	equ	0xFEA
 50466                           fsr0l	equ	0xFE9
 50467                           wreg	equ	0xFE8
 50468                           indf1	equ	0xFE7
 50469                           postinc1	equ	0xFE6
 50470                           postdec1	equ	0xFE5
 50471                           plusw1	equ	0xFE3
 50472                           fsr1h	equ	0xFE2
 50473                           fsr1l	equ	0xFE1
 50474                           indf2	equ	0xFDF
 50475                           postinc2	equ	0xFDE
 50476                           postdec2	equ	0xFDD
 50477                           plusw2	equ	0xFDB
 50478                           fsr2h	equ	0xFDA
 50479                           fsr2l	equ	0xFD9
 50480                           status	equ	0xFD8
 50481                           
 50482 ;; *************** function i2__i2c_wait_idle *****************
 50483 ;; Defined at:
 50484 ;;		line 42 in file "i2c.c"
 50485 ;; Parameters:    Size  Location     Type
 50486 ;;		None
 50487 ;; Auto vars:     Size  Location     Type
 50488 ;;		None
 50489 ;; Return value:  Size  Location     Type
 50490 ;;                  1    wreg      void 
 50491 ;; Registers used:
 50492 ;;		wreg, status,2, status,0
 50493 ;; Tracked objects:
 50494 ;;		On entry : 0/0
 50495 ;;		On exit  : 0/0
 50496 ;;		Unchanged: 0/0
 50497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50500 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50501 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50502 ;;Total ram usage:        5 bytes
 50503 ;; Hardware stack levels used:    1
 50504 ;; This function calls:
 50505 ;;		Nothing
 50506 ;; This function is called by:
 50507 ;;		i2__i2c_write
 50508 ;;		i2__i2c_eeprom_busy
 50509 ;; This function uses a non-reentrant model
 50510 ;;
 50511                           
 50512                           	psect	text209
 50513  015362                     __ptext209:
 50514                           	opt stack 0
 50515  015362                     i2__i2c_wait_idle:
 50516                           	opt stack 13
 50517                           
 50518                           ;i2c.c: 44: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 50519                           
 50520                           ;incstack = 0
 50521  015362  A4C7               	btfss	4039,2,c	;volatile
 50522  015364  D003               	goto	i2u1415_40
 50523  015366  6A01               	clrf	??i2__i2c_wait_idle& (0+255),c
 50524  015368  2A01               	incf	??i2__i2c_wait_idle& (0+255),f,c
 50525  01536A  D001               	goto	i2u1415_48
 50526  01536C                     i2u1415_40:
 50527  01536C  6A01               	clrf	??i2__i2c_wait_idle& (0+255),c
 50528  01536E                     i2u1415_48:
 50529  01536E  A0C5               	btfss	4037,0,c	;volatile
 50530  015370  D003               	goto	i2u1416_40
 50531  015372  6A02               	clrf	(??i2__i2c_wait_idle+1)& (0+255),c
 50532  015374  2A02               	incf	(??i2__i2c_wait_idle+1)& (0+255),f,c
 50533  015376  D001               	goto	i2u1416_48
 50534  015378                     i2u1416_40:
 50535  015378  6A02               	clrf	(??i2__i2c_wait_idle+1)& (0+255),c
 50536  01537A                     i2u1416_48:
 50537  01537A  A2C5               	btfss	4037,1,c	;volatile
 50538  01537C  D003               	goto	i2u1417_40
 50539  01537E  6A03               	clrf	(??i2__i2c_wait_idle+2)& (0+255),c
 50540  015380  2A03               	incf	(??i2__i2c_wait_idle+2)& (0+255),f,c
 50541  015382  D001               	goto	i2u1417_48
 50542  015384                     i2u1417_40:
 50543  015384  6A03               	clrf	(??i2__i2c_wait_idle+2)& (0+255),c
 50544  015386                     i2u1417_48:
 50545  015386  A4C5               	btfss	4037,2,c	;volatile
 50546  015388  D003               	goto	i2u1418_40
 50547  01538A  6A04               	clrf	(??i2__i2c_wait_idle+3)& (0+255),c
 50548  01538C  2A04               	incf	(??i2__i2c_wait_idle+3)& (0+255),f,c
 50549  01538E  D001               	goto	i2u1418_48
 50550  015390                     i2u1418_40:
 50551  015390  6A04               	clrf	(??i2__i2c_wait_idle+3)& (0+255),c
 50552  015392                     i2u1418_48:
 50553  015392  A6C5               	btfss	4037,3,c	;volatile
 50554  015394  D003               	goto	i2u1419_40
 50555  015396  6A05               	clrf	(??i2__i2c_wait_idle+4)& (0+255),c
 50556  015398  2A05               	incf	(??i2__i2c_wait_idle+4)& (0+255),f,c
 50557  01539A  D001               	goto	i2u1419_48
 50558  01539C                     i2u1419_40:
 50559  01539C  6A05               	clrf	(??i2__i2c_wait_idle+4)& (0+255),c
 50560  01539E                     i2u1419_48:
 50561  01539E  A8C5               	btfss	4037,4,c	;volatile
 50562  0153A0  D002               	goto	i2u1420_40
 50563  0153A2  0E01               	movlw	1
 50564  0153A4  D001               	goto	i2u1420_46
 50565  0153A6                     i2u1420_40:
 50566  0153A6  0E00               	movlw	0
 50567  0153A8                     i2u1420_46:
 50568  0153A8  1005               	iorwf	??i2__i2c_wait_idle+4,w,c
 50569  0153AA  1004               	iorwf	??i2__i2c_wait_idle+3,w,c
 50570  0153AC  1003               	iorwf	??i2__i2c_wait_idle+2,w,c
 50571  0153AE  1002               	iorwf	??i2__i2c_wait_idle+1,w,c
 50572  0153B0  1001               	iorwf	??i2__i2c_wait_idle,w,c
 50573  0153B2  0900               	iorlw	0
 50574  0153B4  B4D8               	btfsc	status,2,c
 50575  0153B6  0012               	return	
 50576  0153B8  D7D4               	goto	i2__i2c_wait_idle
 50577  0153BA                     __end_ofi2__i2c_wait_idle:
 50578                           	opt stack 0
 50579                           tosu	equ	0xFFF
 50580                           tosh	equ	0xFFE
 50581                           tosl	equ	0xFFD
 50582                           pclatu	equ	0xFFB
 50583                           pclath	equ	0xFFA
 50584                           tblptru	equ	0xFF8
 50585                           tblptrh	equ	0xFF7
 50586                           tblptrl	equ	0xFF6
 50587                           tablat	equ	0xFF5
 50588                           prodh	equ	0xFF4
 50589                           prodl	equ	0xFF3
 50590                           intcon	equ	0xFF2
 50591                           indf0	equ	0xFEF
 50592                           postinc0	equ	0xFEE
 50593                           fsr0h	equ	0xFEA
 50594                           fsr0l	equ	0xFE9
 50595                           wreg	equ	0xFE8
 50596                           indf1	equ	0xFE7
 50597                           postinc1	equ	0xFE6
 50598                           postdec1	equ	0xFE5
 50599                           plusw1	equ	0xFE3
 50600                           fsr1h	equ	0xFE2
 50601                           fsr1l	equ	0xFE1
 50602                           indf2	equ	0xFDF
 50603                           postinc2	equ	0xFDE
 50604                           postdec2	equ	0xFDD
 50605                           plusw2	equ	0xFDB
 50606                           fsr2h	equ	0xFDA
 50607                           fsr2l	equ	0xFD9
 50608                           status	equ	0xFD8
 50609                           
 50610 ;; *************** function i2__i2c_stop *****************
 50611 ;; Defined at:
 50612 ;;		line 65 in file "i2c.c"
 50613 ;; Parameters:    Size  Location     Type
 50614 ;;		None
 50615 ;; Auto vars:     Size  Location     Type
 50616 ;;		None
 50617 ;; Return value:  Size  Location     Type
 50618 ;;                  1    wreg      void 
 50619 ;; Registers used:
 50620 ;;		None
 50621 ;; Tracked objects:
 50622 ;;		On entry : 0/0
 50623 ;;		On exit  : 0/0
 50624 ;;		Unchanged: 0/0
 50625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50630 ;;Total ram usage:        0 bytes
 50631 ;; Hardware stack levels used:    1
 50632 ;; This function calls:
 50633 ;;		Nothing
 50634 ;; This function is called by:
 50635 ;;		i2__i2c_write
 50636 ;;		i2__i2c_eeprom_busy
 50637 ;; This function uses a non-reentrant model
 50638 ;;
 50639                           
 50640                           	psect	text210
 50641  01649A                     __ptext210:
 50642                           	opt stack 0
 50643  01649A                     i2__i2c_stop:
 50644                           	opt stack 13
 50645                           
 50646                           ;i2c.c: 67: SSP1CON2bits.PEN = 1;
 50647                           
 50648                           ;incstack = 0
 50649  01649A  84C5               	bsf	4037,2,c	;volatile
 50650  01649C  A4C5               	btfss	4037,2,c	;volatile
 50651  01649E  0012               	return	
 50652  0164A0  D7FD               	goto	i2l1146
 50653  0164A2                     __end_ofi2__i2c_stop:
 50654                           	opt stack 0
 50655                           tosu	equ	0xFFF
 50656                           tosh	equ	0xFFE
 50657                           tosl	equ	0xFFD
 50658                           pclatu	equ	0xFFB
 50659                           pclath	equ	0xFFA
 50660                           tblptru	equ	0xFF8
 50661                           tblptrh	equ	0xFF7
 50662                           tblptrl	equ	0xFF6
 50663                           tablat	equ	0xFF5
 50664                           prodh	equ	0xFF4
 50665                           prodl	equ	0xFF3
 50666                           intcon	equ	0xFF2
 50667                           indf0	equ	0xFEF
 50668                           postinc0	equ	0xFEE
 50669                           fsr0h	equ	0xFEA
 50670                           fsr0l	equ	0xFE9
 50671                           wreg	equ	0xFE8
 50672                           indf1	equ	0xFE7
 50673                           postinc1	equ	0xFE6
 50674                           postdec1	equ	0xFE5
 50675                           plusw1	equ	0xFE3
 50676                           fsr1h	equ	0xFE2
 50677                           fsr1l	equ	0xFE1
 50678                           indf2	equ	0xFDF
 50679                           postinc2	equ	0xFDE
 50680                           postdec2	equ	0xFDD
 50681                           plusw2	equ	0xFDB
 50682                           fsr2h	equ	0xFDA
 50683                           fsr2l	equ	0xFD9
 50684                           status	equ	0xFD8
 50685                           
 50686 ;; *************** function i2__i2c_start *****************
 50687 ;; Defined at:
 50688 ;;		line 47 in file "i2c.c"
 50689 ;; Parameters:    Size  Location     Type
 50690 ;;		None
 50691 ;; Auto vars:     Size  Location     Type
 50692 ;;		None
 50693 ;; Return value:  Size  Location     Type
 50694 ;;                  1    wreg      void 
 50695 ;; Registers used:
 50696 ;;		None
 50697 ;; Tracked objects:
 50698 ;;		On entry : 0/0
 50699 ;;		On exit  : 0/0
 50700 ;;		Unchanged: 0/0
 50701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50706 ;;Total ram usage:        0 bytes
 50707 ;; Hardware stack levels used:    1
 50708 ;; This function calls:
 50709 ;;		Nothing
 50710 ;; This function is called by:
 50711 ;;		i2__i2c_write
 50712 ;;		i2__i2c_eeprom_busy
 50713 ;; This function uses a non-reentrant model
 50714 ;;
 50715                           
 50716                           	psect	text211
 50717  0164A2                     __ptext211:
 50718                           	opt stack 0
 50719  0164A2                     i2__i2c_start:
 50720                           	opt stack 13
 50721                           
 50722                           ;i2c.c: 49: SSP1CON2bits.SEN=1;
 50723                           
 50724                           ;incstack = 0
 50725  0164A2  80C5               	bsf	4037,0,c	;volatile
 50726  0164A4  A0C5               	btfss	4037,0,c	;volatile
 50727  0164A6  0012               	return	
 50728  0164A8  D7FD               	goto	i2l1131
 50729  0164AA                     __end_ofi2__i2c_start:
 50730                           	opt stack 0
 50731                           tosu	equ	0xFFF
 50732                           tosh	equ	0xFFE
 50733                           tosl	equ	0xFFD
 50734                           pclatu	equ	0xFFB
 50735                           pclath	equ	0xFFA
 50736                           tblptru	equ	0xFF8
 50737                           tblptrh	equ	0xFF7
 50738                           tblptrl	equ	0xFF6
 50739                           tablat	equ	0xFF5
 50740                           prodh	equ	0xFF4
 50741                           prodl	equ	0xFF3
 50742                           intcon	equ	0xFF2
 50743                           indf0	equ	0xFEF
 50744                           postinc0	equ	0xFEE
 50745                           fsr0h	equ	0xFEA
 50746                           fsr0l	equ	0xFE9
 50747                           wreg	equ	0xFE8
 50748                           indf1	equ	0xFE7
 50749                           postinc1	equ	0xFE6
 50750                           postdec1	equ	0xFE5
 50751                           plusw1	equ	0xFE3
 50752                           fsr1h	equ	0xFE2
 50753                           fsr1l	equ	0xFE1
 50754                           indf2	equ	0xFDF
 50755                           postinc2	equ	0xFDE
 50756                           postdec2	equ	0xFDD
 50757                           plusw2	equ	0xFDB
 50758                           fsr2h	equ	0xFDA
 50759                           fsr2l	equ	0xFD9
 50760                           status	equ	0xFD8
 50761                           
 50762 ;; *************** function i2__i2c_send *****************
 50763 ;; Defined at:
 50764 ;;		line 53 in file "i2c.c"
 50765 ;; Parameters:    Size  Location     Type
 50766 ;;  dat             1    wreg     unsigned char 
 50767 ;; Auto vars:     Size  Location     Type
 50768 ;;  dat             1    0[COMRAM] unsigned char 
 50769 ;; Return value:  Size  Location     Type
 50770 ;;                  1    wreg      void 
 50771 ;; Registers used:
 50772 ;;		wreg
 50773 ;; Tracked objects:
 50774 ;;		On entry : 0/0
 50775 ;;		On exit  : 0/0
 50776 ;;		Unchanged: 0/0
 50777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50779 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50781 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50782 ;;Total ram usage:        1 bytes
 50783 ;; Hardware stack levels used:    1
 50784 ;; This function calls:
 50785 ;;		Nothing
 50786 ;; This function is called by:
 50787 ;;		i2__i2c_write
 50788 ;;		i2__i2c_eeprom_busy
 50789 ;; This function uses a non-reentrant model
 50790 ;;
 50791                           
 50792                           	psect	text212
 50793  0164AA                     __ptext212:
 50794                           	opt stack 0
 50795  0164AA                     i2__i2c_send:
 50796                           	opt stack 13
 50797                           
 50798                           ;incstack = 0
 50799                           ;i2__i2c_send@dat stored from wreg
 50800  0164AA  6E01               	movwf	i2__i2c_send@dat,c
 50801                           
 50802                           ;i2c.c: 55: SSP1BUF = dat;
 50803  0164AC  C001  FFC9         	movff	i2__i2c_send@dat,4041	;volatile
 50804  0164B0  0012               	return		;funcret
 50805  0164B2                     __end_ofi2__i2c_send:
 50806                           	opt stack 0
 50807                           tosu	equ	0xFFF
 50808                           tosh	equ	0xFFE
 50809                           tosl	equ	0xFFD
 50810                           pclatu	equ	0xFFB
 50811                           pclath	equ	0xFFA
 50812                           tblptru	equ	0xFF8
 50813                           tblptrh	equ	0xFF7
 50814                           tblptrl	equ	0xFF6
 50815                           tablat	equ	0xFF5
 50816                           prodh	equ	0xFF4
 50817                           prodl	equ	0xFF3
 50818                           intcon	equ	0xFF2
 50819                           indf0	equ	0xFEF
 50820                           postinc0	equ	0xFEE
 50821                           fsr0h	equ	0xFEA
 50822                           fsr0l	equ	0xFE9
 50823                           wreg	equ	0xFE8
 50824                           indf1	equ	0xFE7
 50825                           postinc1	equ	0xFE6
 50826                           postdec1	equ	0xFE5
 50827                           plusw1	equ	0xFE3
 50828                           fsr1h	equ	0xFE2
 50829                           fsr1l	equ	0xFE1
 50830                           indf2	equ	0xFDF
 50831                           postinc2	equ	0xFDE
 50832                           postdec2	equ	0xFDD
 50833                           plusw2	equ	0xFDB
 50834                           fsr2h	equ	0xFDA
 50835                           fsr2l	equ	0xFD9
 50836                           status	equ	0xFD8
 50837                           
 50838 ;; *************** function _USBDeviceTasks *****************
 50839 ;; Defined at:
 50840 ;;		line 477 in file "usb_device.c"
 50841 ;; Parameters:    Size  Location     Type
 50842 ;;		None
 50843 ;; Auto vars:     Size  Location     Type
 50844 ;;  i               1   30[COMRAM] unsigned char 
 50845 ;; Return value:  Size  Location     Type
 50846 ;;                  1    wreg      void 
 50847 ;; Registers used:
 50848 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 50849 ;; Tracked objects:
 50850 ;;		On entry : 0/0
 50851 ;;		On exit  : 0/0
 50852 ;;		Unchanged: 0/0
 50853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50855 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50857 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50858 ;;Total ram usage:        1 bytes
 50859 ;; Hardware stack levels used:    1
 50860 ;; Hardware stack levels required when called:    8
 50861 ;; This function calls:
 50862 ;;		_USBCtrlEPAllowStatusStage
 50863 ;;		_USBCtrlEPService
 50864 ;;		_USBIncrement1msInternalTimers
 50865 ;;		_USBStallHandler
 50866 ;;		_USBSuspend
 50867 ;;		_USBWakeFromSuspend
 50868 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 50869 ;;		i2_USBDeviceInit
 50870 ;; This function is called by:
 50871 ;;		_SYS_InterruptHigh
 50872 ;; This function uses a non-reentrant model
 50873 ;;
 50874                           
 50875                           	psect	text213
 50876  010296                     __ptext213:
 50877                           	opt stack 0
 50878  010296                     _USBDeviceTasks:
 50879                           	opt stack 9
 50880                           
 50881                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 50882                           
 50883                           ;incstack = 0
 50884  010296  045D               	decf	_USBDeviceState,w,c	;volatile
 50885  010298  B4D8               	btfsc	status,2,c
 50886                           
 50887                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 50888  01029A  BA65               	btfsc	3941,5,c	;volatile
 50889  01029C  D007               	goto	i2l155
 50890                           
 50891                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 50892  01029E  0E00               	movlw	0
 50893  0102A0  6E62               	movwf	3938,c	;volatile
 50894                           
 50895                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 50896  0102A2  010F               	movlb	15	; () banked
 50897  0102A4  8136               	bsf	54,0,b	;volatile
 50898                           
 50899                           ; BSR set to: 15
 50900                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 50901  0102A6  8936               	bsf	54,4,b	;volatile
 50902                           
 50903                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 50904  0102A8  0E02               	movlw	2
 50905  0102AA  6E5D               	movwf	_USBDeviceState,c	;volatile
 50906  0102AC                     i2l155:
 50907                           
 50908                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 50909                           
 50910                           ; BSR set to: 15
 50911                           
 50912                           ; BSR set to: 15
 50913  0102AC  A462               	btfss	3938,2,c	;volatile
 50914  0102AE  D006               	goto	i2l156
 50915  0102B0  010F               	movlb	15	; () banked
 50916  0102B2  A536               	btfss	54,2,b	;volatile
 50917  0102B4  D003               	goto	i2l156
 50918                           
 50919                           ; BSR set to: 15
 50920                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 50921  0102B6  9462               	bcf	3938,2,c	;volatile
 50922                           
 50923                           ; BSR set to: 15
 50924                           ;usb_device.c: 640: USBWakeFromSuspend();
 50925  0102B8  EC8B  F0AE         	call	_USBWakeFromSuspend	;wreg free
 50926  0102BC                     i2l156:
 50927                           
 50928                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 50929  0102BC  A265               	btfss	3941,1,c	;volatile
 50930  0102BE  D002               	goto	i2l157
 50931                           
 50932                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 50933  0102C0  98A1               	bcf	4001,4,c	;volatile
 50934                           
 50935                           ;usb_device.c: 650: return;
 50936  0102C2  0012               	return	
 50937  0102C4                     i2l157:
 50938                           
 50939                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 50940  0102C4  A062               	btfss	3938,0,c	;volatile
 50941  0102C6  D009               	goto	i2l159
 50942  0102C8  010F               	movlb	15	; () banked
 50943  0102CA  A136               	btfss	54,0,b	;volatile
 50944  0102CC  D006               	goto	i2l159
 50945                           
 50946                           ; BSR set to: 15
 50947                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 50948  0102CE  ECEE  F081         	call	i2_USBDeviceInit	;wreg free
 50949                           
 50950                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 50951  0102D2  88A0               	bsf	4000,4,c	;volatile
 50952                           
 50953                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 50954  0102D4  0E04               	movlw	4
 50955  0102D6  6E5D               	movwf	_USBDeviceState,c	;volatile
 50956                           
 50957                           ;usb_device.c: 681: (UIR &= 0xFE);
 50958  0102D8  9062               	bcf	3938,0,c	;volatile
 50959  0102DA                     i2l159:
 50960                           
 50961                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 50962  0102DA  A862               	btfss	3938,4,c	;volatile
 50963  0102DC  D004               	goto	i2l160
 50964  0102DE  010F               	movlb	15	; () banked
 50965  0102E0  B936               	btfsc	54,4,b	;volatile
 50966                           
 50967                           ; BSR set to: 15
 50968                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 50969  0102E2  EC8B  F0AF         	call	_USBSuspend	;wreg free
 50970  0102E6                     i2l160:
 50971                           
 50972                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 50973  0102E6  AC62               	btfss	3938,6,c	;volatile
 50974  0102E8  D01C               	goto	i2l164
 50975                           
 50976                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 50977  0102EA  010F               	movlb	15	; () banked
 50978  0102EC  AD36               	btfss	54,6,b	;volatile
 50979  0102EE  D00E               	goto	i2l162
 50980                           
 50981                           ; BSR set to: 15
 50982                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 50983  0102F0  0E00               	movlw	0
 50984  0102F2  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 50985  0102F4  0E73               	movlw	115
 50986  0102F6  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 50987  0102F8  0E00               	movlw	0
 50988  0102FA  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 50989  0102FC  0E00               	movlw	0
 50990  0102FE  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 50991  010300  0E00               	movlw	0
 50992  010302  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 50993  010304  0E01               	movlw	1
 50994  010306  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 50995  010308  ECC3  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 50996  01030C                     i2l162:
 50997                           
 50998                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 50999  01030C  9C62               	bcf	3938,6,c	;volatile
 51000                           
 51001                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 51002  01030E  EC6C  F0B1         	call	_USBIncrement1msInternalTimers	;wreg free
 51003                           
 51004                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 51005  010312  0101               	movlb	1	; () banked
 51006  010314  515E               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b	;volatile
 51007  010316  A4D8               	btfss	status,2,c
 51008                           
 51009                           ; BSR set to: 1
 51010                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 51011  010318  075E               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b	;volatile
 51012                           
 51013                           ; BSR set to: 1
 51014                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 51015                           
 51016                           ; BSR set to: 1
 51017  01031A  515E               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b	;volatile
 51018  01031C  B4D8               	btfsc	status,2,c
 51019                           
 51020                           ; BSR set to: 1
 51021                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 51022  01031E  ECD2  F097         	call	_USBCtrlEPAllowStatusStage	;wreg free
 51023  010322                     i2l164:
 51024                           
 51025                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 51026  010322  AA62               	btfss	3938,5,c	;volatile
 51027  010324  D004               	goto	i2l165
 51028  010326  010F               	movlb	15	; () banked
 51029  010328  BB36               	btfsc	54,5,b	;volatile
 51030                           
 51031                           ; BSR set to: 15
 51032                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 51033  01032A  EC5C  F0AD         	call	_USBStallHandler	;wreg free
 51034  01032E                     i2l165:
 51035                           
 51036                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 51037  01032E  A262               	btfss	3938,1,c	;volatile
 51038  010330  D012               	goto	i2l166
 51039  010332  010F               	movlb	15	; () banked
 51040  010334  A336               	btfss	54,1,b	;volatile
 51041  010336  D00F               	goto	i2l166
 51042                           
 51043                           ; BSR set to: 15
 51044                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 51045  010338  0E7F               	movlw	127
 51046  01033A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 51047  01033C  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 51048  01033E  0E00               	movlw	0
 51049  010340  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 51050  010342  0E00               	movlw	0
 51051  010344  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 51052  010346  0E00               	movlw	0
 51053  010348  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 51054  01034A  0E01               	movlw	1
 51055  01034C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 51056  01034E  ECC3  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 51057                           
 51058                           ;usb_device.c: 759: {UEIR = 0;};
 51059  010352  0E00               	movlw	0
 51060  010354  6E63               	movwf	3939,c	;volatile
 51061  010356                     i2l166:
 51062                           
 51063                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 51064  010356  0E04               	movlw	4
 51065  010358  605D               	cpfslt	_USBDeviceState,c	;volatile
 51066  01035A  D002               	goto	i2l167
 51067                           
 51068                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 51069  01035C  98A1               	bcf	4001,4,c	;volatile
 51070                           
 51071                           ;usb_device.c: 777: return;
 51072  01035E  0012               	return	
 51073  010360                     i2l167:
 51074                           
 51075                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 51076  010360  010F               	movlb	15	; () banked
 51077  010362  A736               	btfss	54,3,b	;volatile
 51078  010364  D039               	goto	i2u1884_40
 51079                           
 51080                           ; BSR set to: 15
 51081                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 51082  010366  0E00               	movlw	0
 51083  010368  6E1F               	movwf	USBDeviceTasks@i,c
 51084  01036A                     i2l18981:
 51085                           
 51086                           ; BSR set to: 15
 51087  01036A  0E03               	movlw	3
 51088  01036C  641F               	cpfsgt	USBDeviceTasks@i,c
 51089  01036E  D001               	goto	i2l169
 51090  010370  D033               	goto	i2u1884_40
 51091  010372                     i2l169:
 51092                           
 51093                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 51094  010372  A662               	btfss	3938,3,c	;volatile
 51095  010374  D031               	goto	i2u1884_40
 51096                           
 51097                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 51098  010376  CF64 F05E          	movff	3940,_USTATcopy	;volatile
 51099                           
 51100                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 51101  01037A  305E               	rrcf	_USTATcopy,w,c	;volatile
 51102  01037C  32E8               	rrcf	wreg,f,c
 51103  01037E  32E8               	rrcf	wreg,f,c
 51104  010380  0B0F               	andlw	15
 51105  010382  0101               	movlb	1	; () banked
 51106  010384  6F60               	movwf	_endpoint_number& (0+255),b	;volatile
 51107                           
 51108                           ; BSR set to: 1
 51109                           ;usb_device.c: 793: (UIR &= 0xF7);
 51110  010386  9662               	bcf	3938,3,c	;volatile
 51111                           
 51112                           ; BSR set to: 1
 51113                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 51114  010388  B45E               	btfsc	_USTATcopy,2,c	;volatile
 51115  01038A  D007               	goto	i2l172
 51116                           
 51117                           ; BSR set to: 1
 51118                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 51119  01038C  5160               	movf	_endpoint_number& (0+255),w,b	;volatile
 51120  01038E  0D01               	mullw	1
 51121  010390  0E2E               	movlw	low _ep_data_out
 51122  010392  24F3               	addwf	prodl,w,c
 51123  010394  6ED9               	movwf	fsr2l,c
 51124  010396  0E01               	movlw	high _ep_data_out
 51125  010398  D006               	goto	L58
 51126  01039A                     i2l172:
 51127                           
 51128                           ; BSR set to: 1
 51129                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 51130                           
 51131                           ; BSR set to: 1
 51132  01039A  5160               	movf	_endpoint_number& (0+255),w,b	;volatile
 51133  01039C  0D01               	mullw	1
 51134  01039E  0E31               	movlw	low _ep_data_in
 51135  0103A0  24F3               	addwf	prodl,w,c
 51136  0103A2  6ED9               	movwf	fsr2l,c
 51137  0103A4  0E01               	movlw	high _ep_data_in
 51138  0103A6                     L58:
 51139  0103A6  20F4               	addwfc	prodh,w,c
 51140  0103A8  6EDA               	movwf	fsr2h,c
 51141  0103AA  70DF               	btg	indf2,0,c
 51142                           
 51143                           ; BSR set to: 1
 51144                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 51145                           
 51146                           ; BSR set to: 1
 51147  0103AC  5160               	movf	_endpoint_number& (0+255),w,b	;volatile
 51148  0103AE  A4D8               	btfss	status,2,c
 51149  0103B0  D003               	goto	i2l174
 51150                           
 51151                           ; BSR set to: 1
 51152                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 51153  0103B2  ECA0  F09E         	call	_USBCtrlEPService	;wreg free
 51154                           
 51155                           ;usb_device.c: 813: }
 51156  0103B6  D00E               	goto	i2l176
 51157  0103B8                     i2l174:
 51158                           
 51159                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 51160  0103B8  0E00               	movlw	0
 51161  0103BA  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 51162  0103BC  0E72               	movlw	114
 51163  0103BE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 51164  0103C0  0E5E               	movlw	low _USTATcopy
 51165  0103C2  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 51166  0103C4  0E00               	movlw	high _USTATcopy
 51167  0103C6  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 51168  0103C8  0E00               	movlw	0
 51169  0103CA  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 51170  0103CC  0E00               	movlw	0
 51171  0103CE  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 51172  0103D0  ECC3  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 51173  0103D4                     i2l176:
 51174  0103D4  2A1F               	incf	USBDeviceTasks@i,f,c
 51175  0103D6  D7C9               	goto	i2l18981
 51176  0103D8                     i2u1884_40:
 51177                           
 51178                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 51179  0103D8  98A1               	bcf	4001,4,c	;volatile
 51180  0103DA  0012               	return		;funcret
 51181  0103DC                     __end_of_USBDeviceTasks:
 51182                           	opt stack 0
 51183                           tosu	equ	0xFFF
 51184                           tosh	equ	0xFFE
 51185                           tosl	equ	0xFFD
 51186                           pclatu	equ	0xFFB
 51187                           pclath	equ	0xFFA
 51188                           tblptru	equ	0xFF8
 51189                           tblptrh	equ	0xFF7
 51190                           tblptrl	equ	0xFF6
 51191                           tablat	equ	0xFF5
 51192                           prodh	equ	0xFF4
 51193                           prodl	equ	0xFF3
 51194                           intcon	equ	0xFF2
 51195                           indf0	equ	0xFEF
 51196                           postinc0	equ	0xFEE
 51197                           fsr0h	equ	0xFEA
 51198                           fsr0l	equ	0xFE9
 51199                           wreg	equ	0xFE8
 51200                           indf1	equ	0xFE7
 51201                           postinc1	equ	0xFE6
 51202                           postdec1	equ	0xFE5
 51203                           plusw1	equ	0xFE3
 51204                           fsr1h	equ	0xFE2
 51205                           fsr1l	equ	0xFE1
 51206                           indf2	equ	0xFDF
 51207                           postinc2	equ	0xFDE
 51208                           postdec2	equ	0xFDD
 51209                           plusw2	equ	0xFDB
 51210                           fsr2h	equ	0xFDA
 51211                           fsr2l	equ	0xFD9
 51212                           status	equ	0xFD8
 51213                           
 51214 ;; *************** function i2_USBDeviceInit *****************
 51215 ;; Defined at:
 51216 ;;		line 277 in file "usb_device.c"
 51217 ;; Parameters:    Size  Location     Type
 51218 ;;		None
 51219 ;; Auto vars:     Size  Location     Type
 51220 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 51221 ;; Return value:  Size  Location     Type
 51222 ;;                  1    wreg      void 
 51223 ;; Registers used:
 51224 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 51225 ;; Tracked objects:
 51226 ;;		On entry : 0/0
 51227 ;;		On exit  : 0/0
 51228 ;;		Unchanged: 0/0
 51229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51231 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51233 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51234 ;;Total ram usage:        1 bytes
 51235 ;; Hardware stack levels used:    1
 51236 ;; Hardware stack levels required when called:    1
 51237 ;; This function calls:
 51238 ;;		i2_memset
 51239 ;; This function is called by:
 51240 ;;		_USBDeviceTasks
 51241 ;; This function uses a non-reentrant model
 51242 ;;
 51243                           
 51244                           	psect	text214
 51245  0103DC                     __ptext214:
 51246                           	opt stack 0
 51247  0103DC                     i2_USBDeviceInit:
 51248                           	opt stack 15
 51249                           
 51250                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 51251                           
 51252                           ;incstack = 0
 51253  0103DC  98A0               	bcf	4000,4,c	;volatile
 51254                           
 51255                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 51256  0103DE  0E00               	movlw	0
 51257  0103E0  6E63               	movwf	3939,c	;volatile
 51258                           
 51259                           ;usb_device.c: 291: {UIR = 0;};
 51260  0103E2  0E00               	movlw	0
 51261  0103E4  6E62               	movwf	3938,c	;volatile
 51262                           
 51263                           ;usb_device.c: 294: UEP0 = 0;
 51264  0103E6  0E00               	movlw	0
 51265  0103E8  010F               	movlb	15	; () banked
 51266  0103EA  6F26               	movwf	38,b	;volatile
 51267                           
 51268                           ; BSR set to: 15
 51269                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 51270  0103EC  0E27               	movlw	39
 51271  0103EE  6E01               	movwf	i2memset@p1,c
 51272  0103F0  0E0F               	movlw	15
 51273  0103F2  6E02               	movwf	i2memset@p1+1,c
 51274  0103F4  0E00               	movlw	0
 51275  0103F6  6E04               	movwf	i2memset@c+1,c
 51276  0103F8  0E00               	movlw	0
 51277  0103FA  6E03               	movwf	i2memset@c,c
 51278  0103FC  0E00               	movlw	0
 51279  0103FE  6E06               	movwf	i2memset@n+1,c
 51280  010400  0E02               	movlw	2
 51281  010402  6E05               	movwf	i2memset@n,c
 51282  010404  EC15  F0B0         	call	i2_memset	;wreg free
 51283                           
 51284                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 51285  010408  0E16               	movlw	22
 51286  01040A  010F               	movlb	15	; () banked
 51287  01040C  6F39               	movwf	57,b	;volatile
 51288                           
 51289                           ; BSR set to: 15
 51290  01040E  0E9F               	movlw	159
 51291  010410  6F37               	movwf	55,b	;volatile
 51292                           
 51293                           ; BSR set to: 15
 51294  010412  0E7B               	movlw	123
 51295  010414  6F36               	movwf	54,b	;volatile
 51296                           
 51297                           ; BSR set to: 15
 51298                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 51299  010416  0E00               	movlw	0
 51300  010418  6E09               	movwf	i2USBDeviceInit@i,c
 51301  01041A                     i2l18775:
 51302                           
 51303                           ; BSR set to: 15
 51304  01041A  0E0B               	movlw	11
 51305  01041C  6409               	cpfsgt	i2USBDeviceInit@i,c
 51306  01041E  D001               	goto	i2l145
 51307  010420  D00E               	goto	i2u1852_40
 51308  010422                     i2l145:
 51309                           
 51310                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 51311                           
 51312                           ; BSR set to: 15
 51313  010422  5009               	movf	i2USBDeviceInit@i,w,c
 51314  010424  0D04               	mullw	4
 51315  010426  0E00               	movlw	0
 51316  010428  24F3               	addwf	prodl,w,c
 51317  01042A  6ED9               	movwf	fsr2l,c
 51318  01042C  0E0D               	movlw	13
 51319  01042E  20F4               	addwfc	prodh,w,c
 51320  010430  6EDA               	movwf	fsr2h,c
 51321  010432  6ADE               	clrf	postinc2,c
 51322  010434  6ADE               	clrf	postinc2,c
 51323  010436  6ADE               	clrf	postinc2,c
 51324  010438  6ADD               	clrf	postdec2,c
 51325  01043A  2A09               	incf	i2USBDeviceInit@i,f,c
 51326  01043C  D7EE               	goto	i2l18775
 51327  01043E                     i2u1852_40:
 51328                           
 51329                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 51330  01043E  8C65               	bsf	3941,6,c	;volatile
 51331                           
 51332                           ;usb_device.c: 316: UADDR = 0x00;
 51333  010440  0E00               	movlw	0
 51334  010442  010F               	movlb	15	; () banked
 51335  010444  6F38               	movwf	56,b	;volatile
 51336                           
 51337                           ; BSR set to: 15
 51338                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 51339  010446  9865               	bcf	3941,4,c	;volatile
 51340                           
 51341                           ; BSR set to: 15
 51342                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 51343  010448  9C65               	bcf	3941,6,c	;volatile
 51344  01044A                     
 51345                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 51346                           
 51347                           ; BSR set to: 15
 51348  01044A  9662               	bcf	3938,3,c	;volatile
 51349                           
 51350                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 51351  01044C  0E00               	movlw	0
 51352  01044E  0101               	movlb	1	; () banked
 51353  010450  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 51354                           
 51355                           ; BSR set to: 1
 51356                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 51357  010452  0E00               	movlw	0
 51358  010454  6F03               	movwf	(_outPipes+3)& (0+255),b	;volatile
 51359                           
 51360                           ; BSR set to: 1
 51361                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 51362  010456  0E00               	movlw	0
 51363  010458  6F05               	movwf	(_outPipes+5)& (0+255),b	;volatile
 51364  01045A  0E00               	movlw	0
 51365  01045C  6F04               	movwf	(_outPipes+4)& (0+255),b	;volatile
 51366                           
 51367                           ; BSR set to: 1
 51368                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 51369  01045E  B662               	btfsc	3938,3,c	;volatile
 51370  010460  D7F4               	goto	i2l147
 51371                           
 51372                           ; BSR set to: 1
 51373                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 51374                           
 51375                           ; BSR set to: 1
 51376  010462  0E01               	movlw	1
 51377  010464  6F5C               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 51378                           
 51379                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 51380  010466  0E01               	movlw	1
 51381  010468  6F5B               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 51382                           
 51383                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 51384  01046A  0E00               	movlw	0
 51385  01046C  6F5A               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 51386                           
 51387                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 51388  01046E  0E00               	movlw	0
 51389  010470  6F59               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 51390                           
 51391                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 51392  010472  0E00               	movlw	0
 51393  010474  6F61               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 51394                           
 51395                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 51396  010476  0E00               	movlw	0
 51397  010478  6E09               	movwf	i2USBDeviceInit@i,c
 51398  01047A                     i2l18803:
 51399                           
 51400                           ; BSR set to: 1
 51401  01047A  0E02               	movlw	2
 51402  01047C  6409               	cpfsgt	i2USBDeviceInit@i,c
 51403  01047E  D001               	goto	i2l149
 51404  010480  D02E               	goto	i2u1855_40
 51405  010482                     i2l149:
 51406                           
 51407                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 51408                           
 51409                           ; BSR set to: 1
 51410  010482  5009               	movf	i2USBDeviceInit@i,w,c
 51411  010484  0D02               	mullw	2
 51412  010486  0E0F               	movlw	low _pBDTEntryIn
 51413  010488  24F3               	addwf	prodl,w,c
 51414  01048A  6ED9               	movwf	fsr2l,c
 51415  01048C  0E01               	movlw	high _pBDTEntryIn
 51416  01048E  20F4               	addwfc	prodh,w,c
 51417  010490  6EDA               	movwf	fsr2h,c
 51418  010492  0E00               	movlw	0
 51419  010494  6EDE               	movwf	postinc2,c
 51420  010496  0E00               	movlw	0
 51421  010498  6EDD               	movwf	postdec2,c
 51422                           
 51423                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 51424  01049A  5009               	movf	i2USBDeviceInit@i,w,c
 51425  01049C  0D02               	mullw	2
 51426  01049E  0E15               	movlw	low _pBDTEntryOut
 51427  0104A0  24F3               	addwf	prodl,w,c
 51428  0104A2  6ED9               	movwf	fsr2l,c
 51429  0104A4  0E01               	movlw	high _pBDTEntryOut
 51430  0104A6  20F4               	addwfc	prodh,w,c
 51431  0104A8  6EDA               	movwf	fsr2h,c
 51432  0104AA  0E00               	movlw	0
 51433  0104AC  6EDE               	movwf	postinc2,c
 51434  0104AE  0E00               	movlw	0
 51435  0104B0  6EDD               	movwf	postdec2,c
 51436                           
 51437                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 51438  0104B2  5009               	movf	i2USBDeviceInit@i,w,c
 51439  0104B4  0D01               	mullw	1
 51440  0104B6  0E31               	movlw	low _ep_data_in
 51441  0104B8  24F3               	addwf	prodl,w,c
 51442  0104BA  6ED9               	movwf	fsr2l,c
 51443  0104BC  0E01               	movlw	high _ep_data_in
 51444  0104BE  20F4               	addwfc	prodh,w,c
 51445  0104C0  6EDA               	movwf	fsr2h,c
 51446  0104C2  0E00               	movlw	0
 51447  0104C4  6EDF               	movwf	indf2,c
 51448                           
 51449                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 51450  0104C6  5009               	movf	i2USBDeviceInit@i,w,c
 51451  0104C8  0D01               	mullw	1
 51452  0104CA  0E2E               	movlw	low _ep_data_out
 51453  0104CC  24F3               	addwf	prodl,w,c
 51454  0104CE  6ED9               	movwf	fsr2l,c
 51455  0104D0  0E01               	movlw	high _ep_data_out
 51456  0104D2  20F4               	addwfc	prodh,w,c
 51457  0104D4  6EDA               	movwf	fsr2h,c
 51458  0104D6  0E00               	movlw	0
 51459  0104D8  6EDF               	movwf	indf2,c
 51460  0104DA  2A09               	incf	i2USBDeviceInit@i,f,c
 51461  0104DC  D7CE               	goto	i2l18803
 51462  0104DE                     i2u1855_40:
 51463                           
 51464                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 51465  0104DE  0E08               	movlw	8
 51466  0104E0  0101               	movlb	1	; () banked
 51467  0104E2  6F0F               	movwf	_pBDTEntryIn& (0+255),b
 51468  0104E4  0E0D               	movlw	13
 51469  0104E6  6F10               	movwf	(_pBDTEntryIn+1)& (0+255),b
 51470                           
 51471                           ; BSR set to: 1
 51472                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 51473  0104E8  0E16               	movlw	22
 51474  0104EA  010F               	movlb	15	; () banked
 51475  0104EC  6F26               	movwf	38,b	;volatile
 51476                           
 51477                           ; BSR set to: 15
 51478                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 51479  0104EE  0E0D               	movlw	13
 51480  0104F0  010D               	movlb	13	; () banked
 51481  0104F2  6F03               	movwf	3,b	;volatile
 51482  0104F4  0E30               	movlw	48
 51483  0104F6  6F02               	movwf	2,b	;volatile
 51484                           
 51485                           ; BSR set to: 13
 51486                           ;usb_device.c: 359: BDT[0].CNT = 8;
 51487  0104F8  0E08               	movlw	8
 51488  0104FA  6F01               	movwf	1,b	;volatile
 51489                           
 51490                           ; BSR set to: 13
 51491                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 51492  0104FC  0E04               	movlw	4
 51493  0104FE  6F00               	movwf	0,b	;volatile
 51494                           
 51495                           ; BSR set to: 13
 51496                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 51497  010500  8F00               	bsf	0,7,b	;volatile
 51498                           
 51499                           ; BSR set to: 13
 51500                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 51501  010502  0E00               	movlw	0
 51502  010504  0101               	movlb	1	; () banked
 51503  010506  6FC3               	movwf	_USBActiveConfiguration& (0+255),b	;volatile
 51504                           
 51505                           ; BSR set to: 1
 51506                           ;usb_device.c: 366: USB1msTickCount = 0;
 51507  010508  0E00               	movlw	0
 51508  01050A  6F27               	movwf	_USB1msTickCount& (0+255),b	;volatile
 51509  01050C  0E00               	movlw	0
 51510  01050E  6F28               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 51511  010510  0E00               	movlw	0
 51512  010512  6F29               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 51513  010514  0E00               	movlw	0
 51514  010516  6F2A               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 51515                           
 51516                           ; BSR set to: 1
 51517                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 51518  010518  0E00               	movlw	0
 51519  01051A  6F58               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 51520                           
 51521                           ; BSR set to: 1
 51522                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 51523  01051C  0E00               	movlw	0
 51524  01051E  6E5D               	movwf	_USBDeviceState,c	;volatile
 51525                           
 51526                           ; BSR set to: 1
 51527  010520  0012               	return		;funcret
 51528  010522                     __end_ofi2_USBDeviceInit:
 51529                           	opt stack 0
 51530                           tosu	equ	0xFFF
 51531                           tosh	equ	0xFFE
 51532                           tosl	equ	0xFFD
 51533                           pclatu	equ	0xFFB
 51534                           pclath	equ	0xFFA
 51535                           tblptru	equ	0xFF8
 51536                           tblptrh	equ	0xFF7
 51537                           tblptrl	equ	0xFF6
 51538                           tablat	equ	0xFF5
 51539                           prodh	equ	0xFF4
 51540                           prodl	equ	0xFF3
 51541                           intcon	equ	0xFF2
 51542                           indf0	equ	0xFEF
 51543                           postinc0	equ	0xFEE
 51544                           fsr0h	equ	0xFEA
 51545                           fsr0l	equ	0xFE9
 51546                           wreg	equ	0xFE8
 51547                           indf1	equ	0xFE7
 51548                           postinc1	equ	0xFE6
 51549                           postdec1	equ	0xFE5
 51550                           plusw1	equ	0xFE3
 51551                           fsr1h	equ	0xFE2
 51552                           fsr1l	equ	0xFE1
 51553                           indf2	equ	0xFDF
 51554                           postinc2	equ	0xFDE
 51555                           postdec2	equ	0xFDD
 51556                           plusw2	equ	0xFDB
 51557                           fsr2h	equ	0xFDA
 51558                           fsr2l	equ	0xFD9
 51559                           status	equ	0xFD8
 51560                           
 51561 ;; *************** function _USBWakeFromSuspend *****************
 51562 ;; Defined at:
 51563 ;;		line 2305 in file "usb_device.c"
 51564 ;; Parameters:    Size  Location     Type
 51565 ;;		None
 51566 ;; Auto vars:     Size  Location     Type
 51567 ;;		None
 51568 ;; Return value:  Size  Location     Type
 51569 ;;                  1    wreg      void 
 51570 ;; Registers used:
 51571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 51572 ;; Tracked objects:
 51573 ;;		On entry : 0/0
 51574 ;;		On exit  : 0/0
 51575 ;;		Unchanged: 0/0
 51576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51581 ;;Total ram usage:        0 bytes
 51582 ;; Hardware stack levels used:    1
 51583 ;; Hardware stack levels required when called:    4
 51584 ;; This function calls:
 51585 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 51586 ;; This function is called by:
 51587 ;;		_USBDeviceTasks
 51588 ;; This function uses a non-reentrant model
 51589 ;;
 51590                           
 51591                           	psect	text215
 51592  015D16                     __ptext215:
 51593                           	opt stack 0
 51594  015D16                     _USBWakeFromSuspend:
 51595                           	opt stack 12
 51596                           
 51597                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 51598                           
 51599                           ; BSR set to: 1
 51600                           ;incstack = 0
 51601  015D16  0E00               	movlw	0
 51602  015D18  0101               	movlb	1	; () banked
 51603  015D1A  6F61               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 51604                           
 51605                           ; BSR set to: 1
 51606                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 51607  015D1C  0E00               	movlw	0
 51608  015D1E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 51609  015D20  0E74               	movlw	116
 51610  015D22  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 51611  015D24  0E00               	movlw	0
 51612  015D26  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 51613  015D28  0E00               	movlw	0
 51614  015D2A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 51615  015D2C  0E00               	movlw	0
 51616  015D2E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 51617  015D30  0E00               	movlw	0
 51618  015D32  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 51619  015D34  ECC3  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 51620                           
 51621                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 51622  015D38  9265               	bcf	3941,1,c	;volatile
 51623                           
 51624                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 51625  015D3A  010F               	movlb	15	; () banked
 51626  015D3C  9536               	bcf	54,2,b	;volatile
 51627                           
 51628                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 51629  015D3E  D001               	goto	i2l315
 51630  015D40                     
 51631                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 51632                           
 51633                           ; BSR set to: 15
 51634  015D40  9462               	bcf	3938,2,c	;volatile
 51635  015D42                     i2l315:
 51636  015D42  B462               	btfsc	3938,2,c	;volatile
 51637  015D44  D7FD               	goto	i2l316
 51638                           
 51639                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 51640  015D46  0E00               	movlw	0
 51641  015D48  0101               	movlb	1	; () banked
 51642  015D4A  6F58               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 51643                           
 51644                           ; BSR set to: 1
 51645  015D4C  0012               	return		;funcret
 51646  015D4E                     __end_of_USBWakeFromSuspend:
 51647                           	opt stack 0
 51648                           tosu	equ	0xFFF
 51649                           tosh	equ	0xFFE
 51650                           tosl	equ	0xFFD
 51651                           pclatu	equ	0xFFB
 51652                           pclath	equ	0xFFA
 51653                           tblptru	equ	0xFF8
 51654                           tblptrh	equ	0xFF7
 51655                           tblptrl	equ	0xFF6
 51656                           tablat	equ	0xFF5
 51657                           prodh	equ	0xFF4
 51658                           prodl	equ	0xFF3
 51659                           intcon	equ	0xFF2
 51660                           indf0	equ	0xFEF
 51661                           postinc0	equ	0xFEE
 51662                           fsr0h	equ	0xFEA
 51663                           fsr0l	equ	0xFE9
 51664                           wreg	equ	0xFE8
 51665                           indf1	equ	0xFE7
 51666                           postinc1	equ	0xFE6
 51667                           postdec1	equ	0xFE5
 51668                           plusw1	equ	0xFE3
 51669                           fsr1h	equ	0xFE2
 51670                           fsr1l	equ	0xFE1
 51671                           indf2	equ	0xFDF
 51672                           postinc2	equ	0xFDE
 51673                           postdec2	equ	0xFDD
 51674                           plusw2	equ	0xFDB
 51675                           fsr2h	equ	0xFDA
 51676                           fsr2l	equ	0xFD9
 51677                           status	equ	0xFD8
 51678                           
 51679 ;; *************** function _USBSuspend *****************
 51680 ;; Defined at:
 51681 ;;		line 2247 in file "usb_device.c"
 51682 ;; Parameters:    Size  Location     Type
 51683 ;;		None
 51684 ;; Auto vars:     Size  Location     Type
 51685 ;;		None
 51686 ;; Return value:  Size  Location     Type
 51687 ;;                  1    wreg      void 
 51688 ;; Registers used:
 51689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 51690 ;; Tracked objects:
 51691 ;;		On entry : 0/0
 51692 ;;		On exit  : 0/0
 51693 ;;		Unchanged: 0/0
 51694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51699 ;;Total ram usage:        0 bytes
 51700 ;; Hardware stack levels used:    1
 51701 ;; Hardware stack levels required when called:    4
 51702 ;; This function calls:
 51703 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 51704 ;; This function is called by:
 51705 ;;		_USBDeviceTasks
 51706 ;; This function uses a non-reentrant model
 51707 ;;
 51708                           
 51709                           	psect	text216
 51710  015F16                     __ptext216:
 51711                           	opt stack 0
 51712  015F16                     _USBSuspend:
 51713                           	opt stack 12
 51714                           
 51715                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 51716                           
 51717                           ; BSR set to: 1
 51718                           ;incstack = 0
 51719  015F16  010F               	movlb	15	; () banked
 51720  015F18  8536               	bsf	54,2,b	;volatile
 51721                           
 51722                           ; BSR set to: 15
 51723                           ;usb_device.c: 2273: (UIR &= 0xEF);
 51724  015F1A  9862               	bcf	3938,4,c	;volatile
 51725                           
 51726                           ; BSR set to: 15
 51727                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 51728  015F1C  8265               	bsf	3941,1,c	;volatile
 51729                           
 51730                           ; BSR set to: 15
 51731                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 51732  015F1E  0E01               	movlw	1
 51733  015F20  0101               	movlb	1	; () banked
 51734  015F22  6F61               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 51735                           
 51736                           ; BSR set to: 1
 51737                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 51738  015F24  0E00               	movlw	0
 51739  015F26  6F58               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 51740                           
 51741                           ; BSR set to: 1
 51742                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 51743  015F28  0E00               	movlw	0
 51744  015F2A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 51745  015F2C  0E75               	movlw	117
 51746  015F2E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 51747  015F30  0E00               	movlw	0
 51748  015F32  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 51749  015F34  0E00               	movlw	0
 51750  015F36  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 51751  015F38  0E00               	movlw	0
 51752  015F3A  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 51753  015F3C  0E00               	movlw	0
 51754  015F3E  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 51755  015F40  ECC3  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 51756  015F44  0012               	return		;funcret
 51757  015F46                     __end_of_USBSuspend:
 51758                           	opt stack 0
 51759                           tosu	equ	0xFFF
 51760                           tosh	equ	0xFFE
 51761                           tosl	equ	0xFFD
 51762                           pclatu	equ	0xFFB
 51763                           pclath	equ	0xFFA
 51764                           tblptru	equ	0xFF8
 51765                           tblptrh	equ	0xFF7
 51766                           tblptrl	equ	0xFF6
 51767                           tablat	equ	0xFF5
 51768                           prodh	equ	0xFF4
 51769                           prodl	equ	0xFF3
 51770                           intcon	equ	0xFF2
 51771                           indf0	equ	0xFEF
 51772                           postinc0	equ	0xFEE
 51773                           fsr0h	equ	0xFEA
 51774                           fsr0l	equ	0xFE9
 51775                           wreg	equ	0xFE8
 51776                           indf1	equ	0xFE7
 51777                           postinc1	equ	0xFE6
 51778                           postdec1	equ	0xFE5
 51779                           plusw1	equ	0xFE3
 51780                           fsr1h	equ	0xFE2
 51781                           fsr1l	equ	0xFE1
 51782                           indf2	equ	0xFDF
 51783                           postinc2	equ	0xFDE
 51784                           postdec2	equ	0xFDD
 51785                           plusw2	equ	0xFDB
 51786                           fsr2h	equ	0xFDA
 51787                           fsr2l	equ	0xFD9
 51788                           status	equ	0xFD8
 51789                           
 51790 ;; *************** function _USBStallHandler *****************
 51791 ;; Defined at:
 51792 ;;		line 2204 in file "usb_device.c"
 51793 ;; Parameters:    Size  Location     Type
 51794 ;;		None
 51795 ;; Auto vars:     Size  Location     Type
 51796 ;;		None
 51797 ;; Return value:  Size  Location     Type
 51798 ;;                  1    wreg      void 
 51799 ;; Registers used:
 51800 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 51801 ;; Tracked objects:
 51802 ;;		On entry : 0/0
 51803 ;;		On exit  : 0/0
 51804 ;;		Unchanged: 0/0
 51805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51808 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51809 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51810 ;;Total ram usage:        1 bytes
 51811 ;; Hardware stack levels used:    1
 51812 ;; This function calls:
 51813 ;;		Nothing
 51814 ;; This function is called by:
 51815 ;;		_USBDeviceTasks
 51816 ;; This function uses a non-reentrant model
 51817 ;;
 51818                           
 51819                           	psect	text217
 51820  015AB8                     __ptext217:
 51821                           	opt stack 0
 51822  015AB8                     _USBStallHandler:
 51823                           	opt stack 16
 51824                           
 51825                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 51826                           
 51827                           ;incstack = 0
 51828  015AB8  010F               	movlb	15	; () banked
 51829  015ABA  A126               	btfss	38,0,b	;volatile
 51830  015ABC  D01D               	goto	i2l307
 51831                           
 51832                           ; BSR set to: 15
 51833                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 51834  015ABE  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 51835  015AC2  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 51836  015AC6  0E80               	movlw	128
 51837  015AC8  18DE               	xorwf	postinc2,w,c
 51838  015ACA  A4D8               	btfss	status,2,c
 51839  015ACC  D014               	goto	i2l308
 51840                           
 51841                           ; BSR set to: 15
 51842  015ACE  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 51843  015AD2  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 51844  015AD6  0E84               	movlw	132
 51845  015AD8  18DE               	xorwf	postinc2,w,c
 51846  015ADA  A4D8               	btfss	status,2,c
 51847  015ADC  D00C               	goto	i2l308
 51848                           
 51849                           ; BSR set to: 15
 51850                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 51851  015ADE  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 51852  015AE2  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 51853  015AE6  0E0C               	movlw	12
 51854  015AE8  6EDF               	movwf	indf2,c
 51855                           
 51856                           ; BSR set to: 15
 51857                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 51858  015AEA  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 51859  015AEE  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 51860  015AF2  0E00               	movlw	0
 51861  015AF4  8EDB               	bsf	plusw2,7,c
 51862  015AF6                     i2l308:
 51863                           
 51864                           ; BSR set to: 15
 51865                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 51866                           
 51867                           ; BSR set to: 15
 51868  015AF6  9126               	bcf	38,0,b	;volatile
 51869  015AF8                     i2l307:
 51870                           
 51871                           ; BSR set to: 15
 51872                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 51873  015AF8  9A62               	bcf	3938,5,c	;volatile
 51874                           
 51875                           ; BSR set to: 15
 51876  015AFA  0012               	return		;funcret
 51877  015AFC                     __end_of_USBStallHandler:
 51878                           	opt stack 0
 51879                           tosu	equ	0xFFF
 51880                           tosh	equ	0xFFE
 51881                           tosl	equ	0xFFD
 51882                           pclatu	equ	0xFFB
 51883                           pclath	equ	0xFFA
 51884                           tblptru	equ	0xFF8
 51885                           tblptrh	equ	0xFF7
 51886                           tblptrl	equ	0xFF6
 51887                           tablat	equ	0xFF5
 51888                           prodh	equ	0xFF4
 51889                           prodl	equ	0xFF3
 51890                           intcon	equ	0xFF2
 51891                           indf0	equ	0xFEF
 51892                           postinc0	equ	0xFEE
 51893                           fsr0h	equ	0xFEA
 51894                           fsr0l	equ	0xFE9
 51895                           wreg	equ	0xFE8
 51896                           indf1	equ	0xFE7
 51897                           postinc1	equ	0xFE6
 51898                           postdec1	equ	0xFE5
 51899                           plusw1	equ	0xFE3
 51900                           fsr1h	equ	0xFE2
 51901                           fsr1l	equ	0xFE1
 51902                           indf2	equ	0xFDF
 51903                           postinc2	equ	0xFDE
 51904                           postdec2	equ	0xFDD
 51905                           plusw2	equ	0xFDB
 51906                           fsr2h	equ	0xFDA
 51907                           fsr2l	equ	0xFD9
 51908                           status	equ	0xFD8
 51909                           
 51910 ;; *************** function _USBIncrement1msInternalTimers *****************
 51911 ;; Defined at:
 51912 ;;		line 3027 in file "usb_device.c"
 51913 ;; Parameters:    Size  Location     Type
 51914 ;;		None
 51915 ;; Auto vars:     Size  Location     Type
 51916 ;;		None
 51917 ;; Return value:  Size  Location     Type
 51918 ;;                  1    wreg      void 
 51919 ;; Registers used:
 51920 ;;		wreg, status,2, status,0
 51921 ;; Tracked objects:
 51922 ;;		On entry : 0/0
 51923 ;;		On exit  : 0/0
 51924 ;;		Unchanged: 0/0
 51925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51930 ;;Total ram usage:        0 bytes
 51931 ;; Hardware stack levels used:    1
 51932 ;; This function calls:
 51933 ;;		Nothing
 51934 ;; This function is called by:
 51935 ;;		_USBDeviceTasks
 51936 ;; This function uses a non-reentrant model
 51937 ;;
 51938                           
 51939                           	psect	text218
 51940  0162D8                     __ptext218:
 51941                           	opt stack 0
 51942  0162D8                     _USBIncrement1msInternalTimers:
 51943                           	opt stack 16
 51944                           
 51945                           ;usb_device.c: 3035: USB1msTickCount++;
 51946                           
 51947                           ; BSR set to: 15
 51948                           ;incstack = 0
 51949  0162D8  0E01               	movlw	1
 51950  0162DA  0101               	movlb	1	; () banked
 51951  0162DC  2727               	addwf	_USB1msTickCount& (0+255),f,b	;volatile
 51952  0162DE  0E00               	movlw	0
 51953  0162E0  2328               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
 51954  0162E2  2329               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
 51955  0162E4  232A               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
 51956                           
 51957                           ; BSR set to: 1
 51958                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 51959  0162E6  5161               	movf	_USBBusIsSuspended& (0+255),w,b	;volatile
 51960  0162E8  A4D8               	btfss	status,2,c
 51961  0162EA  0012               	return	
 51962                           
 51963                           ; BSR set to: 1
 51964                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 51965  0162EC  2B58               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
 51966                           
 51967                           ; BSR set to: 1
 51968                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 51969  0162EE  5158               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
 51970  0162F0  A4D8               	btfss	status,2,c
 51971  0162F2  0012               	return	
 51972                           
 51973                           ; BSR set to: 1
 51974                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 51975  0162F4  6958               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 51976                           
 51977                           ; BSR set to: 1
 51978  0162F6  0012               	return	
 51979  0162F8                     __end_of_USBIncrement1msInternalTimers:
 51980                           	opt stack 0
 51981                           tosu	equ	0xFFF
 51982                           tosh	equ	0xFFE
 51983                           tosl	equ	0xFFD
 51984                           pclatu	equ	0xFFB
 51985                           pclath	equ	0xFFA
 51986                           tblptru	equ	0xFF8
 51987                           tblptrh	equ	0xFF7
 51988                           tblptrl	equ	0xFF6
 51989                           tablat	equ	0xFF5
 51990                           prodh	equ	0xFF4
 51991                           prodl	equ	0xFF3
 51992                           intcon	equ	0xFF2
 51993                           indf0	equ	0xFEF
 51994                           postinc0	equ	0xFEE
 51995                           fsr0h	equ	0xFEA
 51996                           fsr0l	equ	0xFE9
 51997                           wreg	equ	0xFE8
 51998                           indf1	equ	0xFE7
 51999                           postinc1	equ	0xFE6
 52000                           postdec1	equ	0xFE5
 52001                           plusw1	equ	0xFE3
 52002                           fsr1h	equ	0xFE2
 52003                           fsr1l	equ	0xFE1
 52004                           indf2	equ	0xFDF
 52005                           postinc2	equ	0xFDE
 52006                           postdec2	equ	0xFDD
 52007                           plusw2	equ	0xFDB
 52008                           fsr2h	equ	0xFDA
 52009                           fsr2l	equ	0xFD9
 52010                           status	equ	0xFD8
 52011                           
 52012 ;; *************** function _USBCtrlEPService *****************
 52013 ;; Defined at:
 52014 ;;		line 2374 in file "usb_device.c"
 52015 ;; Parameters:    Size  Location     Type
 52016 ;;		None
 52017 ;; Auto vars:     Size  Location     Type
 52018 ;;		None
 52019 ;; Return value:  Size  Location     Type
 52020 ;;                  1    wreg      void 
 52021 ;; Registers used:
 52022 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 52023 ;; Tracked objects:
 52024 ;;		On entry : 0/0
 52025 ;;		On exit  : 0/0
 52026 ;;		Unchanged: 0/0
 52027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52030 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52031 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52032 ;;Total ram usage:        1 bytes
 52033 ;; Hardware stack levels used:    1
 52034 ;; Hardware stack levels required when called:    7
 52035 ;; This function calls:
 52036 ;;		_USBCtrlTrfInHandler
 52037 ;;		_USBCtrlTrfOutHandler
 52038 ;;		_USBCtrlTrfSetupHandler
 52039 ;;		i2_memcpy
 52040 ;; This function is called by:
 52041 ;;		_USBDeviceTasks
 52042 ;; This function uses a non-reentrant model
 52043 ;;
 52044                           
 52045                           	psect	text219
 52046  013D40                     __ptext219:
 52047                           	opt stack 0
 52048  013D40                     _USBCtrlEPService:
 52049                           	opt stack 9
 52050                           
 52051                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 52052                           
 52053                           ; BSR set to: 1
 52054                           ;incstack = 0
 52055  013D40  0E2D               	movlw	45
 52056  013D42  0101               	movlb	1	; () banked
 52057  013D44  6F5E               	movwf	_USBStatusStageTimeoutCounter& (0+255),b	;volatile
 52058                           
 52059                           ; BSR set to: 1
 52060                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 52061  013D46  C05E  F01E         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 52062  013D4A  0EFD               	movlw	253
 52063  013D4C  161E               	andwf	??_USBCtrlEPService,f,c
 52064  013D4E  A4D8               	btfss	status,2,c
 52065  013D50  D03B               	goto	i2l321
 52066                           
 52067                           ; BSR set to: 1
 52068                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 52069  013D52  C05E  F01E         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 52070  013D56  90D8               	bcf	status,0,c
 52071  013D58  321E               	rrcf	??_USBCtrlEPService,f,c
 52072  013D5A  0E3F               	movlw	63
 52073  013D5C  161E               	andwf	??_USBCtrlEPService,f,c
 52074  013D5E  501E               	movf	??_USBCtrlEPService,w,c
 52075  013D60  0D04               	mullw	4
 52076  013D62  0E00               	movlw	0
 52077  013D64  24F3               	addwf	prodl,w,c
 52078  013D66  6E5B               	movwf	_pBDTEntryEP0OutCurrent,c
 52079  013D68  0E0D               	movlw	13
 52080  013D6A  20F4               	addwfc	prodh,w,c
 52081  013D6C  6E5C               	movwf	_pBDTEntryEP0OutCurrent+1,c
 52082                           
 52083                           ; BSR set to: 1
 52084                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 52085  013D6E  C05B  F059         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 52086  013D72  C05C  F05A         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 52087                           
 52088                           ; BSR set to: 1
 52089                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 52090  013D76  0E04               	movlw	4
 52091  013D78  1859               	xorwf	_pBDTEntryEP0OutNext,w,c
 52092  013D7A  6E59               	movwf	_pBDTEntryEP0OutNext,c
 52093  013D7C  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 52094  013D7E  6E5A               	movwf	_pBDTEntryEP0OutNext+1,c
 52095                           
 52096                           ; BSR set to: 1
 52097                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 52098  013D80  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 52099  013D84  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 52100  013D88  30DF               	rrcf	indf2,w,c
 52101  013D8A  32E8               	rrcf	wreg,f,c
 52102  013D8C  0B0F               	andlw	15
 52103  013D8E  0A0D               	xorlw	13
 52104  013D90  A4D8               	btfss	status,2,c
 52105  013D92  D017               	goto	i2l322
 52106                           
 52107                           ; BSR set to: 1
 52108                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 52109  013D94  0E30               	movlw	48
 52110  013D96  6E01               	movwf	i2memcpy@d1,c
 52111  013D98  0E0D               	movlw	13
 52112  013D9A  6E02               	movwf	i2memcpy@d1+1,c
 52113  013D9C  EE20 F002          	lfsr	2,2
 52114  013DA0  505B               	movf	_pBDTEntryEP0OutCurrent,w,c
 52115  013DA2  26D9               	addwf	fsr2l,f,c
 52116  013DA4  505C               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 52117  013DA6  22DA               	addwfc	fsr2h,f,c
 52118  013DA8  CFDE F003          	movff	postinc2,i2memcpy@s1
 52119  013DAC  CFDD F004          	movff	postdec2,i2memcpy@s1+1
 52120  013DB0  0E00               	movlw	0
 52121  013DB2  6E06               	movwf	i2memcpy@n+1,c
 52122  013DB4  0E08               	movlw	8
 52123  013DB6  6E05               	movwf	i2memcpy@n,c
 52124  013DB8  ECF2  F0A7         	call	i2_memcpy	;wreg free
 52125                           
 52126                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 52127  013DBC  ECCB  F09F         	call	_USBCtrlTrfSetupHandler	;wreg free
 52128                           
 52129                           ;usb_device.c: 2411: }
 52130  013DC0  0012               	return	
 52131  013DC2                     i2l322:
 52132                           
 52133                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 52134  013DC2  EC62  F0A7         	call	_USBCtrlTrfOutHandler	;wreg free
 52135                           
 52136                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 52137  013DC6  0012               	return	
 52138  013DC8                     i2l321:
 52139                           
 52140                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 52141  013DC8  505E               	movf	_USTATcopy,w,c	;volatile
 52142  013DCA  0BFD               	andlw	253
 52143  013DCC  0A04               	xorlw	4
 52144  013DCE  A4D8               	btfss	status,2,c
 52145  013DD0  0012               	return	
 52146                           
 52147                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 52148  013DD2  EC38  F098         	call	_USBCtrlTrfInHandler	;wreg free
 52149  013DD6  0012               	return	
 52150  013DD8                     __end_of_USBCtrlEPService:
 52151                           	opt stack 0
 52152                           tosu	equ	0xFFF
 52153                           tosh	equ	0xFFE
 52154                           tosl	equ	0xFFD
 52155                           pclatu	equ	0xFFB
 52156                           pclath	equ	0xFFA
 52157                           tblptru	equ	0xFF8
 52158                           tblptrh	equ	0xFF7
 52159                           tblptrl	equ	0xFF6
 52160                           tablat	equ	0xFF5
 52161                           prodh	equ	0xFF4
 52162                           prodl	equ	0xFF3
 52163                           intcon	equ	0xFF2
 52164                           indf0	equ	0xFEF
 52165                           postinc0	equ	0xFEE
 52166                           fsr0h	equ	0xFEA
 52167                           fsr0l	equ	0xFE9
 52168                           wreg	equ	0xFE8
 52169                           indf1	equ	0xFE7
 52170                           postinc1	equ	0xFE6
 52171                           postdec1	equ	0xFE5
 52172                           plusw1	equ	0xFE3
 52173                           fsr1h	equ	0xFE2
 52174                           fsr1l	equ	0xFE1
 52175                           indf2	equ	0xFDF
 52176                           postinc2	equ	0xFDE
 52177                           postdec2	equ	0xFDD
 52178                           plusw2	equ	0xFDB
 52179                           fsr2h	equ	0xFDA
 52180                           fsr2l	equ	0xFD9
 52181                           status	equ	0xFD8
 52182                           
 52183 ;; *************** function i2_memcpy *****************
 52184 ;; Defined at:
 52185 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 52186 ;; Parameters:    Size  Location     Type
 52187 ;;  d1              2    0[COMRAM] PTR void 
 52188 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), i2c_eeprom_save_position@b
      +uffer(11), 
 52189 ;;		 -> ToSendDataBuffer(64), os(49), msd_buffer(512), SetupPkt(8), 
 52190 ;;  s1              2    2[COMRAM] PTR const void 
 52191 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 52192 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 52193 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 52194 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 52195 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main_simplified(80), dc_main(80), 
 52196 ;;		 -> dc_startup(80), i2c_eeprom_recover_position@buffer(11), config(42), os.divide_position(2), 
 52197 ;;		 -> os.division(2), os.absolute_position(2), os.current_position_in_steps(4), ReceivedDataBuffer(64), 
 52198 ;;		 -> os(49), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 52199 ;;		 -> SetupPkt(8), 
 52200 ;;  n               2    4[COMRAM] unsigned int 
 52201 ;; Auto vars:     Size  Location     Type
 52202 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
 52203 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 52204 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 52205 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 52206 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 52207 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main_simplified(80), dc_main(80), 
 52208 ;;		 -> dc_startup(80), i2c_eeprom_recover_position@buffer(11), config(42), os.divide_position(2), 
 52209 ;;		 -> os.division(2), os.absolute_position(2), os.current_position_in_steps(4), ReceivedDataBuffer(64), 
 52210 ;;		 -> os(49), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 52211 ;;		 -> SetupPkt(8), 
 52212 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
 52213 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), i2c_eeprom_save_position@b
      +uffer(11), 
 52214 ;;		 -> ToSendDataBuffer(64), os(49), msd_buffer(512), SetupPkt(8), 
 52215 ;;  memcpy          1   10[COMRAM] unsigned char 
 52216 ;; Return value:  Size  Location     Type
 52217 ;;                  2    0[COMRAM] PTR void 
 52218 ;; Registers used:
 52219 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 52220 ;; Tracked objects:
 52221 ;;		On entry : 0/0
 52222 ;;		On exit  : 0/0
 52223 ;;		Unchanged: 0/0
 52224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52225 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52226 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52228 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52229 ;;Total ram usage:       11 bytes
 52230 ;; Hardware stack levels used:    1
 52231 ;; This function calls:
 52232 ;;		Nothing
 52233 ;; This function is called by:
 52234 ;;		_USBCtrlEPService
 52235 ;;		_i2c_eeprom_save_position
 52236 ;; This function uses a non-reentrant model
 52237 ;;
 52238                           
 52239                           	psect	text220
 52240  014FE4                     __ptext220:
 52241                           	opt stack 0
 52242  014FE4                     i2_memcpy:
 52243                           	opt stack 15
 52244                           
 52245                           ;incstack = 0
 52246  014FE4  C003  F009         	movff	i2memcpy@s1,i2memcpy@s
 52247  014FE8  C004  F00A         	movff	i2memcpy@s1+1,i2memcpy@s+1
 52248  014FEC  C001  F007         	movff	i2memcpy@d1,i2memcpy@d
 52249  014FF0  C002  F008         	movff	i2memcpy@d1+1,i2memcpy@d+1
 52250  014FF4  D01C               	goto	i2l3897
 52251  014FF6                     i2l17535:
 52252  014FF6  C009  FFF6         	movff	i2memcpy@s,tblptrl
 52253  014FFA  C00A  FFF7         	movff	i2memcpy@s+1,tblptrh
 52254  014FFE  0E00               	movlw	low (__mediumconst shr (0+16))
 52255  015000  6EF8               	movwf	tblptru,c
 52256  015002  0E0E               	movlw	(high __ramtop+-1)
 52257  015004  64F7               	cpfsgt	tblptrh,c
 52258  015006  D003               	bra	i2u1647_47
 52259  015008  0008               	tblrd		*
 52260  01500A  50F5               	movf	tablat,w,c
 52261  01500C  D005               	bra	i2u1647_40
 52262  01500E                     i2u1647_47:
 52263  01500E  CFF6 FFE9          	movff	tblptrl,fsr0l
 52264  015012  CFF7 FFEA          	movff	tblptrh,fsr0h
 52265  015016  50EF               	movf	indf0,w,c
 52266  015018                     i2u1647_40:
 52267  015018  6E0B               	movwf	i2memcpy@tmp,c
 52268  01501A  4A09               	infsnz	i2memcpy@s,f,c
 52269  01501C  2A0A               	incf	i2memcpy@s+1,f,c
 52270  01501E  C007  FFD9         	movff	i2memcpy@d,fsr2l
 52271  015022  C008  FFDA         	movff	i2memcpy@d+1,fsr2h
 52272  015026  C00B  FFDF         	movff	i2memcpy@tmp,indf2
 52273  01502A  4A07               	infsnz	i2memcpy@d,f,c
 52274  01502C  2A08               	incf	i2memcpy@d+1,f,c
 52275  01502E                     i2l3897:
 52276  01502E  0605               	decf	i2memcpy@n,f,c
 52277  015030  A0D8               	btfss	status,0,c
 52278  015032  0606               	decf	i2memcpy@n+1,f,c
 52279  015034  2805               	incf	i2memcpy@n,w,c
 52280  015036  E1DF               	bnz	i2l17535
 52281  015038  2806               	incf	i2memcpy@n+1,w,c
 52282  01503A  B4D8               	btfsc	status,2,c
 52283  01503C  0012               	return	
 52284  01503E  D7DB               	goto	i2l3898
 52285  015040                     __end_ofi2_memcpy:
 52286                           	opt stack 0
 52287                           tosu	equ	0xFFF
 52288                           tosh	equ	0xFFE
 52289                           tosl	equ	0xFFD
 52290                           pclatu	equ	0xFFB
 52291                           pclath	equ	0xFFA
 52292                           tblptru	equ	0xFF8
 52293                           tblptrh	equ	0xFF7
 52294                           tblptrl	equ	0xFF6
 52295                           tablat	equ	0xFF5
 52296                           prodh	equ	0xFF4
 52297                           prodl	equ	0xFF3
 52298                           intcon	equ	0xFF2
 52299                           indf0	equ	0xFEF
 52300                           postinc0	equ	0xFEE
 52301                           fsr0h	equ	0xFEA
 52302                           fsr0l	equ	0xFE9
 52303                           wreg	equ	0xFE8
 52304                           indf1	equ	0xFE7
 52305                           postinc1	equ	0xFE6
 52306                           postdec1	equ	0xFE5
 52307                           plusw1	equ	0xFE3
 52308                           fsr1h	equ	0xFE2
 52309                           fsr1l	equ	0xFE1
 52310                           indf2	equ	0xFDF
 52311                           postinc2	equ	0xFDE
 52312                           postdec2	equ	0xFDD
 52313                           plusw2	equ	0xFDB
 52314                           fsr2h	equ	0xFDA
 52315                           fsr2l	equ	0xFD9
 52316                           status	equ	0xFD8
 52317                           
 52318 ;; *************** function _USBCtrlTrfSetupHandler *****************
 52319 ;; Defined at:
 52320 ;;		line 2467 in file "usb_device.c"
 52321 ;; Parameters:    Size  Location     Type
 52322 ;;		None
 52323 ;; Auto vars:     Size  Location     Type
 52324 ;;		None
 52325 ;; Return value:  Size  Location     Type
 52326 ;;                  1    wreg      void 
 52327 ;; Registers used:
 52328 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 52329 ;; Tracked objects:
 52330 ;;		On entry : 0/0
 52331 ;;		On exit  : 0/0
 52332 ;;		Unchanged: 0/0
 52333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52338 ;;Total ram usage:        0 bytes
 52339 ;; Hardware stack levels used:    1
 52340 ;; Hardware stack levels required when called:    6
 52341 ;; This function calls:
 52342 ;;		_USBCheckStdRequest
 52343 ;;		_USBCtrlEPServiceComplete
 52344 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 52345 ;; This function is called by:
 52346 ;;		_USBCtrlEPService
 52347 ;; This function uses a non-reentrant model
 52348 ;;
 52349                           
 52350                           	psect	text221
 52351  013F96                     __ptext221:
 52352                           	opt stack 0
 52353  013F96                     _USBCtrlTrfSetupHandler:
 52354                           	opt stack 9
 52355                           
 52356                           ;usb_device.c: 2472: shortPacketStatus = 0;
 52357                           
 52358                           ;incstack = 0
 52359  013F96  0E00               	movlw	0
 52360  013F98  0101               	movlb	1	; () banked
 52361  013F9A  6F63               	movwf	_shortPacketStatus& (0+255),b	;volatile
 52362                           
 52363                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 52364  013F9C  0E00               	movlw	0
 52365  013F9E  6F5D               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 52366                           
 52367                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 52368  013FA0  0E00               	movlw	0
 52369  013FA2  6F5A               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 52370                           
 52371                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 52372  013FA4  0E00               	movlw	0
 52373  013FA6  6F59               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 52374                           
 52375                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 52376  013FA8  0E00               	movlw	0
 52377  013FAA  6F5F               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 52378                           
 52379                           ;usb_device.c: 2477: controlTransferState = 0;
 52380  013FAC  0E00               	movlw	0
 52381  013FAE  0100               	movlb	0	; () banked
 52382  013FB0  6FFF               	movwf	_controlTransferState& (0+255),b	;volatile
 52383                           
 52384                           ; BSR set to: 0
 52385                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 52386  013FB2  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 52387  013FB6  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52388  013FBA  0E7F               	movlw	127
 52389  013FBC  16DF               	andwf	indf2,f,c
 52390                           
 52391                           ; BSR set to: 0
 52392                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 52393  013FBE  0E04               	movlw	4
 52394  013FC0  0101               	movlb	1	; () banked
 52395  013FC2  190F               	xorwf	_pBDTEntryIn& (0+255),w,b
 52396  013FC4  6F0F               	movwf	_pBDTEntryIn& (0+255),b
 52397  013FC6  5110               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 52398  013FC8  6F10               	movwf	(_pBDTEntryIn+1)& (0+255),b
 52399                           
 52400                           ; BSR set to: 1
 52401                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 52402  013FCA  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 52403  013FCE  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52404  013FD2  0E7F               	movlw	127
 52405  013FD4  16DF               	andwf	indf2,f,c
 52406                           
 52407                           ; BSR set to: 1
 52408                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 52409  013FD6  0E04               	movlw	4
 52410  013FD8  190F               	xorwf	_pBDTEntryIn& (0+255),w,b
 52411  013FDA  6F0F               	movwf	_pBDTEntryIn& (0+255),b
 52412  013FDC  5110               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 52413  013FDE  6F10               	movwf	(_pBDTEntryIn+1)& (0+255),b
 52414                           
 52415                           ; BSR set to: 1
 52416                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 52417  013FE0  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 52418  013FE4  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 52419  013FE8  0E7F               	movlw	127
 52420  013FEA  16DF               	andwf	indf2,f,c
 52421                           
 52422                           ; BSR set to: 1
 52423                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 52424  013FEC  0E00               	movlw	0
 52425  013FEE  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 52426                           
 52427                           ; BSR set to: 1
 52428                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 52429  013FF0  0E00               	movlw	0
 52430  013FF2  6F0E               	movwf	(_inPipes+5)& (0+255),b	;volatile
 52431  013FF4  0E00               	movlw	0
 52432  013FF6  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 52433                           
 52434                           ; BSR set to: 1
 52435                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 52436  013FF8  0E00               	movlw	0
 52437  013FFA  6F03               	movwf	(_outPipes+3)& (0+255),b	;volatile
 52438                           
 52439                           ; BSR set to: 1
 52440                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 52441  013FFC  0E00               	movlw	0
 52442  013FFE  6F05               	movwf	(_outPipes+5)& (0+255),b	;volatile
 52443  014000  0E00               	movlw	0
 52444  014002  6F04               	movwf	(_outPipes+4)& (0+255),b	;volatile
 52445                           
 52446                           ; BSR set to: 1
 52447                           ;usb_device.c: 2502: USBCheckStdRequest();
 52448  014004  ECB9  F092         	call	_USBCheckStdRequest	;wreg free
 52449                           
 52450                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 52451  014008  0E00               	movlw	0
 52452  01400A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 52453  01400C  0E03               	movlw	3
 52454  01400E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 52455  014010  0E00               	movlw	0
 52456  014012  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 52457  014014  0E00               	movlw	0
 52458  014016  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 52459  014018  0E00               	movlw	0
 52460  01401A  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 52461  01401C  0E00               	movlw	0
 52462  01401E  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 52463  014020  ECC3  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 52464                           
 52465                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 52466  014024  EC1B  F08C         	call	_USBCtrlEPServiceComplete	;wreg free
 52467  014028  0012               	return		;funcret
 52468  01402A                     __end_of_USBCtrlTrfSetupHandler:
 52469                           	opt stack 0
 52470                           tosu	equ	0xFFF
 52471                           tosh	equ	0xFFE
 52472                           tosl	equ	0xFFD
 52473                           pclatu	equ	0xFFB
 52474                           pclath	equ	0xFFA
 52475                           tblptru	equ	0xFF8
 52476                           tblptrh	equ	0xFF7
 52477                           tblptrl	equ	0xFF6
 52478                           tablat	equ	0xFF5
 52479                           prodh	equ	0xFF4
 52480                           prodl	equ	0xFF3
 52481                           intcon	equ	0xFF2
 52482                           indf0	equ	0xFEF
 52483                           postinc0	equ	0xFEE
 52484                           fsr0h	equ	0xFEA
 52485                           fsr0l	equ	0xFE9
 52486                           wreg	equ	0xFE8
 52487                           indf1	equ	0xFE7
 52488                           postinc1	equ	0xFE6
 52489                           postdec1	equ	0xFE5
 52490                           plusw1	equ	0xFE3
 52491                           fsr1h	equ	0xFE2
 52492                           fsr1l	equ	0xFE1
 52493                           indf2	equ	0xFDF
 52494                           postinc2	equ	0xFDE
 52495                           postdec2	equ	0xFDD
 52496                           plusw2	equ	0xFDB
 52497                           fsr2h	equ	0xFDA
 52498                           fsr2l	equ	0xFD9
 52499                           status	equ	0xFD8
 52500                           
 52501 ;; *************** function _USBCtrlEPServiceComplete *****************
 52502 ;; Defined at:
 52503 ;;		line 1618 in file "usb_device.c"
 52504 ;; Parameters:    Size  Location     Type
 52505 ;;		None
 52506 ;; Auto vars:     Size  Location     Type
 52507 ;;		None
 52508 ;; Return value:  Size  Location     Type
 52509 ;;                  1    wreg      void 
 52510 ;; Registers used:
 52511 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 52512 ;; Tracked objects:
 52513 ;;		On entry : 0/0
 52514 ;;		On exit  : 0/0
 52515 ;;		Unchanged: 0/0
 52516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52521 ;;Total ram usage:        0 bytes
 52522 ;; Hardware stack levels used:    1
 52523 ;; Hardware stack levels required when called:    2
 52524 ;; This function calls:
 52525 ;;		_USBCtrlEPAllowDataStage
 52526 ;;		_USBCtrlEPAllowStatusStage
 52527 ;; This function is called by:
 52528 ;;		_USBCtrlTrfSetupHandler
 52529 ;; This function uses a non-reentrant model
 52530 ;;
 52531                           
 52532                           	psect	text222
 52533  011836                     __ptext222:
 52534                           	opt stack 0
 52535  011836                     _USBCtrlEPServiceComplete:
 52536                           	opt stack 12
 52537                           
 52538                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 52539                           
 52540                           ;incstack = 0
 52541  011836  9865               	bcf	3941,4,c	;volatile
 52542                           
 52543                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 52544  011838  0101               	movlb	1	; () banked
 52545  01183A  BF0C               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 52546  01183C  D03B               	goto	i2l231
 52547                           
 52548                           ; BSR set to: 1
 52549                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 52550  01183E  AF03               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 52551  011840  D00E               	goto	i2l232
 52552                           
 52553                           ; BSR set to: 1
 52554                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 52555  011842  0E02               	movlw	2
 52556  011844  0100               	movlb	0	; () banked
 52557  011846  6FFF               	movwf	_controlTransferState& (0+255),b	;volatile
 52558                           
 52559                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 52560  011848  0101               	movlb	1	; () banked
 52561  01184A  5159               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 52562  01184C  B4D8               	btfsc	status,2,c
 52563                           
 52564                           ; BSR set to: 1
 52565                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 52566  01184E  EC1D  F09D         	call	_USBCtrlEPAllowDataStage	;wreg free
 52567                           
 52568                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 52569  011852  0E00               	movlw	0
 52570  011854  0101               	movlb	1	; () banked
 52571  011856  6F5B               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 52572                           
 52573                           ; BSR set to: 1
 52574                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 52575  011858  0E00               	movlw	0
 52576  01185A  6F5C               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 52577                           
 52578                           ;usb_device.c: 1654: }
 52579  01185C  0012               	return	
 52580  01185E                     i2l232:
 52581                           
 52582                           ; BSR set to: 1
 52583                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 52584                           
 52585                           ; BSR set to: 1
 52586  01185E  EE20 F001          	lfsr	2,1
 52587  011862  5059               	movf	_pBDTEntryEP0OutNext,w,c
 52588  011864  26D9               	addwf	fsr2l,f,c
 52589  011866  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 52590  011868  22DA               	addwfc	fsr2h,f,c
 52591  01186A  0E08               	movlw	8
 52592  01186C  6EDF               	movwf	indf2,c
 52593                           
 52594                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 52595  01186E  EE20 F002          	lfsr	2,2
 52596  011872  5059               	movf	_pBDTEntryEP0OutNext,w,c
 52597  011874  26D9               	addwf	fsr2l,f,c
 52598  011876  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 52599  011878  22DA               	addwfc	fsr2h,f,c
 52600  01187A  0E30               	movlw	48
 52601  01187C  6EDE               	movwf	postinc2,c
 52602  01187E  0E0D               	movlw	13
 52603  011880  6EDD               	movwf	postdec2,c
 52604                           
 52605                           ; BSR set to: 1
 52606                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 52607  011882  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 52608  011886  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 52609  01188A  0E0C               	movlw	12
 52610  01188C  6EDF               	movwf	indf2,c
 52611                           
 52612                           ; BSR set to: 1
 52613                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 52614  01188E  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 52615  011892  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 52616  011896  0E00               	movlw	0
 52617  011898  8EDB               	bsf	plusw2,7,c
 52618                           
 52619                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 52620  01189A  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 52621  01189E  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52622  0118A2  0E04               	movlw	4
 52623  0118A4  6EDF               	movwf	indf2,c
 52624                           
 52625                           ; BSR set to: 1
 52626                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 52627  0118A6  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 52628  0118AA  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52629  0118AE  0E00               	movlw	0
 52630  0118B0  8EDB               	bsf	plusw2,7,c
 52631                           
 52632                           ; BSR set to: 1
 52633                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 52634  0118B2  0012               	return	
 52635  0118B4                     i2l231:
 52636                           
 52637                           ; BSR set to: 1
 52638                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 52639  0118B4  010D               	movlb	13	; () banked
 52640  0118B6  AF30               	btfss	48,7,b	;volatile
 52641  0118B8  D013               	goto	i2l236
 52642                           
 52643                           ; BSR set to: 13
 52644                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 52645  0118BA  0E01               	movlw	1
 52646  0118BC  0100               	movlb	0	; () banked
 52647  0118BE  6FFF               	movwf	_controlTransferState& (0+255),b	;volatile
 52648                           
 52649                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 52650  0118C0  0101               	movlb	1	; () banked
 52651  0118C2  515A               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 52652  0118C4  B4D8               	btfsc	status,2,c
 52653                           
 52654                           ; BSR set to: 1
 52655                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 52656  0118C6  EC1D  F09D         	call	_USBCtrlEPAllowDataStage	;wreg free
 52657                           
 52658                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 52659  0118CA  0E00               	movlw	0
 52660  0118CC  0101               	movlb	1	; () banked
 52661  0118CE  6F5B               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 52662                           
 52663                           ; BSR set to: 1
 52664                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 52665  0118D0  0E00               	movlw	0
 52666  0118D2  6F5C               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 52667                           
 52668                           ; BSR set to: 1
 52669                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 52670  0118D4  515D               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 52671  0118D6  A4D8               	btfss	status,2,c
 52672  0118D8  0012               	return	
 52673                           
 52674                           ; BSR set to: 1
 52675                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 52676  0118DA  ECD2  F097         	call	_USBCtrlEPAllowStatusStage	;wreg free
 52677                           
 52678                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 52679  0118DE  0012               	return	
 52680  0118E0                     i2l236:
 52681                           
 52682                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 52683  0118E0  0E02               	movlw	2
 52684  0118E2  0100               	movlb	0	; () banked
 52685  0118E4  6FFF               	movwf	_controlTransferState& (0+255),b	;volatile
 52686                           
 52687                           ; BSR set to: 0
 52688                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 52689  0118E6  EE20 F001          	lfsr	2,1
 52690  0118EA  5059               	movf	_pBDTEntryEP0OutNext,w,c
 52691  0118EC  26D9               	addwf	fsr2l,f,c
 52692  0118EE  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 52693  0118F0  22DA               	addwfc	fsr2h,f,c
 52694  0118F2  0E08               	movlw	8
 52695  0118F4  6EDF               	movwf	indf2,c
 52696                           
 52697                           ; BSR set to: 0
 52698                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 52699  0118F6  EE20 F002          	lfsr	2,2
 52700  0118FA  5059               	movf	_pBDTEntryEP0OutNext,w,c
 52701  0118FC  26D9               	addwf	fsr2l,f,c
 52702  0118FE  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 52703  011900  22DA               	addwfc	fsr2h,f,c
 52704  011902  0E30               	movlw	48
 52705  011904  6EDE               	movwf	postinc2,c
 52706  011906  0E0D               	movlw	13
 52707  011908  6EDD               	movwf	postdec2,c
 52708                           
 52709                           ; BSR set to: 0
 52710                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 52711  01190A  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 52712  01190E  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 52713  011912  0E04               	movlw	4
 52714  011914  6EDF               	movwf	indf2,c
 52715                           
 52716                           ; BSR set to: 0
 52717                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 52718  011916  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 52719  01191A  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 52720  01191E  0E00               	movlw	0
 52721  011920  8EDB               	bsf	plusw2,7,c
 52722                           
 52723                           ; BSR set to: 0
 52724                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 52725  011922  0E00               	movlw	0
 52726  011924  0101               	movlb	1	; () banked
 52727  011926  6F5B               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 52728                           
 52729                           ; BSR set to: 1
 52730                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 52731  011928  0E00               	movlw	0
 52732  01192A  6F5C               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 52733                           
 52734                           ; BSR set to: 1
 52735                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 52736  01192C  515D               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 52737  01192E  A4D8               	btfss	status,2,c
 52738  011930  0012               	return	
 52739                           
 52740                           ; BSR set to: 1
 52741                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 52742  011932  ECD2  F097         	call	_USBCtrlEPAllowStatusStage	;wreg free
 52743  011936  0012               	return	
 52744  011938                     __end_of_USBCtrlEPServiceComplete:
 52745                           	opt stack 0
 52746                           tosu	equ	0xFFF
 52747                           tosh	equ	0xFFE
 52748                           tosl	equ	0xFFD
 52749                           pclatu	equ	0xFFB
 52750                           pclath	equ	0xFFA
 52751                           tblptru	equ	0xFF8
 52752                           tblptrh	equ	0xFF7
 52753                           tblptrl	equ	0xFF6
 52754                           tablat	equ	0xFF5
 52755                           prodh	equ	0xFF4
 52756                           prodl	equ	0xFF3
 52757                           intcon	equ	0xFF2
 52758                           indf0	equ	0xFEF
 52759                           postinc0	equ	0xFEE
 52760                           fsr0h	equ	0xFEA
 52761                           fsr0l	equ	0xFE9
 52762                           wreg	equ	0xFE8
 52763                           indf1	equ	0xFE7
 52764                           postinc1	equ	0xFE6
 52765                           postdec1	equ	0xFE5
 52766                           plusw1	equ	0xFE3
 52767                           fsr1h	equ	0xFE2
 52768                           fsr1l	equ	0xFE1
 52769                           indf2	equ	0xFDF
 52770                           postinc2	equ	0xFDE
 52771                           postdec2	equ	0xFDD
 52772                           plusw2	equ	0xFDB
 52773                           fsr2h	equ	0xFDA
 52774                           fsr2l	equ	0xFD9
 52775                           status	equ	0xFD8
 52776                           
 52777 ;; *************** function _USBCtrlEPAllowDataStage *****************
 52778 ;; Defined at:
 52779 ;;		line 1490 in file "usb_device.c"
 52780 ;; Parameters:    Size  Location     Type
 52781 ;;		None
 52782 ;; Auto vars:     Size  Location     Type
 52783 ;;		None
 52784 ;; Return value:  Size  Location     Type
 52785 ;;                  1    wreg      void 
 52786 ;; Registers used:
 52787 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 52788 ;; Tracked objects:
 52789 ;;		On entry : 0/0
 52790 ;;		On exit  : 0/0
 52791 ;;		Unchanged: 0/0
 52792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52797 ;;Total ram usage:        0 bytes
 52798 ;; Hardware stack levels used:    1
 52799 ;; Hardware stack levels required when called:    1
 52800 ;; This function calls:
 52801 ;;		_USBCtrlTrfTxService
 52802 ;; This function is called by:
 52803 ;;		_USBCtrlEPServiceComplete
 52804 ;; This function uses a non-reentrant model
 52805 ;;
 52806                           
 52807                           	psect	text223
 52808  013A3A                     __ptext223:
 52809                           	opt stack 0
 52810  013A3A                     _USBCtrlEPAllowDataStage:
 52811                           	opt stack 12
 52812                           
 52813                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 52814                           
 52815                           ;incstack = 0
 52816  013A3A  0E00               	movlw	0
 52817  013A3C  0101               	movlb	1	; () banked
 52818  013A3E  6F5A               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 52819                           
 52820                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 52821  013A40  0E00               	movlw	0
 52822  013A42  6F59               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 52823                           
 52824                           ; BSR set to: 1
 52825                           ;usb_device.c: 1495: if(controlTransferState == 2)
 52826  013A44  0E02               	movlw	2
 52827  013A46  0100               	movlb	0	; () banked
 52828  013A48  19FF               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 52829  013A4A  A4D8               	btfss	status,2,c
 52830  013A4C  D01F               	goto	i2l220
 52831                           
 52832                           ; BSR set to: 0
 52833                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 52834  013A4E  EE20 F001          	lfsr	2,1
 52835  013A52  5059               	movf	_pBDTEntryEP0OutNext,w,c
 52836  013A54  26D9               	addwf	fsr2l,f,c
 52837  013A56  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 52838  013A58  22DA               	addwfc	fsr2h,f,c
 52839  013A5A  0E08               	movlw	8
 52840  013A5C  6EDF               	movwf	indf2,c
 52841                           
 52842                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 52843  013A5E  EE20 F002          	lfsr	2,2
 52844  013A62  5059               	movf	_pBDTEntryEP0OutNext,w,c
 52845  013A64  26D9               	addwf	fsr2l,f,c
 52846  013A66  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 52847  013A68  22DA               	addwfc	fsr2h,f,c
 52848  013A6A  0E38               	movlw	56
 52849  013A6C  6EDE               	movwf	postinc2,c
 52850  013A6E  0E0D               	movlw	13
 52851  013A70  6EDD               	movwf	postdec2,c
 52852                           
 52853                           ; BSR set to: 0
 52854                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 52855  013A72  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 52856  013A76  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 52857  013A7A  0E48               	movlw	72
 52858  013A7C  6EDF               	movwf	indf2,c
 52859                           
 52860                           ; BSR set to: 0
 52861                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 52862  013A7E  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 52863  013A82  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 52864  013A86  0E00               	movlw	0
 52865  013A88  8EDB               	bsf	plusw2,7,c
 52866                           
 52867                           ;usb_device.c: 1502: }
 52868  013A8A  0012               	return	
 52869  013A8C                     i2l220:
 52870                           
 52871                           ; BSR set to: 0
 52872                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 52873                           
 52874                           ; BSR set to: 0
 52875  013A8C  0101               	movlb	1	; () banked
 52876  013A8E  510D               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 52877  013A90  010D               	movlb	13	; () banked
 52878  013A92  5D36               	subwf	54,w,b	;volatile
 52879  013A94  0101               	movlb	1	; () banked
 52880  013A96  510E               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 52881  013A98  010D               	movlb	13	; () banked
 52882  013A9A  5937               	subwfb	55,w,b	;volatile
 52883  013A9C  B0D8               	btfsc	status,0,c
 52884  013A9E  D004               	goto	i2l222
 52885                           
 52886                           ; BSR set to: 13
 52887                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 52888  013AA0  CD36 F10D          	movff	3382,_inPipes+4	;volatile
 52889  013AA4  CD37 F10E          	movff	3383,_inPipes+5	;volatile
 52890  013AA8                     i2l222:
 52891                           
 52892                           ; BSR set to: 13
 52893                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 52894                           
 52895                           ; BSR set to: 13
 52896  013AA8  EC9C  F096         	call	_USBCtrlTrfTxService	;wreg free
 52897                           
 52898                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 52899  013AAC  0101               	movlb	1	; () banked
 52900  013AAE  EE20 F002          	lfsr	2,2
 52901  013AB2  510F               	movf	_pBDTEntryIn& (0+255),w,b
 52902  013AB4  26D9               	addwf	fsr2l,f,c
 52903  013AB6  5110               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 52904  013AB8  22DA               	addwfc	fsr2h,f,c
 52905  013ABA  0E38               	movlw	56
 52906  013ABC  6EDE               	movwf	postinc2,c
 52907  013ABE  0E0D               	movlw	13
 52908  013AC0  6EDD               	movwf	postdec2,c
 52909                           
 52910                           ; BSR set to: 1
 52911                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 52912  013AC2  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 52913  013AC6  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52914  013ACA  0E48               	movlw	72
 52915  013ACC  6EDF               	movwf	indf2,c
 52916                           
 52917                           ; BSR set to: 1
 52918                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 52919  013ACE  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 52920  013AD2  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52921  013AD6  0E00               	movlw	0
 52922  013AD8  8EDB               	bsf	plusw2,7,c
 52923  013ADA  0012               	return	
 52924  013ADC                     __end_of_USBCtrlEPAllowDataStage:
 52925                           	opt stack 0
 52926                           tosu	equ	0xFFF
 52927                           tosh	equ	0xFFE
 52928                           tosl	equ	0xFFD
 52929                           pclatu	equ	0xFFB
 52930                           pclath	equ	0xFFA
 52931                           tblptru	equ	0xFF8
 52932                           tblptrh	equ	0xFF7
 52933                           tblptrl	equ	0xFF6
 52934                           tablat	equ	0xFF5
 52935                           prodh	equ	0xFF4
 52936                           prodl	equ	0xFF3
 52937                           intcon	equ	0xFF2
 52938                           indf0	equ	0xFEF
 52939                           postinc0	equ	0xFEE
 52940                           fsr0h	equ	0xFEA
 52941                           fsr0l	equ	0xFE9
 52942                           wreg	equ	0xFE8
 52943                           indf1	equ	0xFE7
 52944                           postinc1	equ	0xFE6
 52945                           postdec1	equ	0xFE5
 52946                           plusw1	equ	0xFE3
 52947                           fsr1h	equ	0xFE2
 52948                           fsr1l	equ	0xFE1
 52949                           indf2	equ	0xFDF
 52950                           postinc2	equ	0xFDE
 52951                           postdec2	equ	0xFDD
 52952                           plusw2	equ	0xFDB
 52953                           fsr2h	equ	0xFDA
 52954                           fsr2l	equ	0xFD9
 52955                           status	equ	0xFD8
 52956                           
 52957 ;; *************** function _USBCheckStdRequest *****************
 52958 ;; Defined at:
 52959 ;;		line 2688 in file "usb_device.c"
 52960 ;; Parameters:    Size  Location     Type
 52961 ;;		None
 52962 ;; Auto vars:     Size  Location     Type
 52963 ;;		None
 52964 ;; Return value:  Size  Location     Type
 52965 ;;                  1    wreg      void 
 52966 ;; Registers used:
 52967 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 52968 ;; Tracked objects:
 52969 ;;		On entry : 0/0
 52970 ;;		On exit  : 0/0
 52971 ;;		Unchanged: 0/0
 52972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52977 ;;Total ram usage:        0 bytes
 52978 ;; Hardware stack levels used:    1
 52979 ;; Hardware stack levels required when called:    5
 52980 ;; This function calls:
 52981 ;;		_USBStdFeatureReqHandler
 52982 ;;		_USBStdGetDscHandler
 52983 ;;		_USBStdGetStatusHandler
 52984 ;;		_USBStdSetCfgHandler
 52985 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 52986 ;; This function is called by:
 52987 ;;		_USBCtrlTrfSetupHandler
 52988 ;; This function uses a non-reentrant model
 52989 ;;
 52990                           
 52991                           	psect	text224
 52992  012572                     __ptext224:
 52993                           	opt stack 0
 52994  012572                     _USBCheckStdRequest:
 52995                           	opt stack 9
 52996                           
 52997                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 52998                           
 52999                           ;incstack = 0
 53000  012572  010D               	movlb	13	; () banked
 53001  012574  3930               	swapf	48,w,b	;volatile
 53002  012576  32E8               	rrcf	wreg,f,c
 53003  012578  0B03               	andlw	3
 53004  01257A  0900               	iorlw	0
 53005  01257C  A4D8               	btfss	status,2,c
 53006  01257E  0012               	return	
 53007  012580  D047               	goto	i2l355
 53008  012582                     i2l356:
 53009                           
 53010                           ; BSR set to: 13
 53011                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 53012  012582  0101               	movlb	1	; () banked
 53013  012584  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 53014                           
 53015                           ; BSR set to: 1
 53016                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 53017  012586  0E08               	movlw	8
 53018  012588  6E5D               	movwf	_USBDeviceState,c	;volatile
 53019                           
 53020                           ;usb_device.c: 2698: break;
 53021  01258A  0012               	return	
 53022  01258C                     
 53023                           ;usb_device.c: 2700: USBStdGetDscHandler();
 53024                           
 53025                           ; BSR set to: 1
 53026  01258C  EC33  F083         	call	_USBStdGetDscHandler	;wreg free
 53027                           
 53028                           ;usb_device.c: 2701: break;
 53029  012590  0012               	return	
 53030  012592                     
 53031                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 53032  012592  EC0B  F094         	call	_USBStdSetCfgHandler	;wreg free
 53033                           
 53034                           ;usb_device.c: 2704: break;
 53035  012596  0012               	return	
 53036  012598                     
 53037                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 53038  012598  0EC3               	movlw	low _USBActiveConfiguration
 53039  01259A  0101               	movlb	1	; () banked
 53040  01259C  6F09               	movwf	_inPipes& (0+255),b	;volatile
 53041  01259E  0E01               	movlw	high _USBActiveConfiguration
 53042  0125A0  6F0A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 53043                           
 53044                           ; BSR set to: 1
 53045                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 53046  0125A2  810C               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 53047                           
 53048                           ; BSR set to: 1
 53049                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 53050  0125A4  0E01               	movlw	1
 53051  0125A6  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 53052                           
 53053                           ; BSR set to: 1
 53054                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 53055  0125A8  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 53056                           
 53057                           ;usb_device.c: 2710: break;
 53058  0125AA  0012               	return	
 53059  0125AC                     
 53060                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 53061                           
 53062                           ; BSR set to: 1
 53063  0125AC  EC21  F09C         	call	_USBStdGetStatusHandler	;wreg free
 53064                           
 53065                           ;usb_device.c: 2713: break;
 53066  0125B0  0012               	return	
 53067  0125B2                     
 53068                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 53069  0125B2  ECB0  F06A         	call	_USBStdFeatureReqHandler	;wreg free
 53070                           
 53071                           ;usb_device.c: 2717: break;
 53072  0125B6  0012               	return	
 53073  0125B8                     
 53074                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 53075  0125B8  010D               	movlb	13	; () banked
 53076  0125BA  5134               	movf	52,w,b	;volatile
 53077  0125BC  0D01               	mullw	1
 53078  0125BE  0EBF               	movlw	low _USBAlternateInterface
 53079  0125C0  24F3               	addwf	prodl,w,c
 53080  0125C2  0101               	movlb	1	; () banked
 53081  0125C4  6F09               	movwf	_inPipes& (0+255),b	;volatile
 53082  0125C6  0E01               	movlw	high _USBAlternateInterface
 53083  0125C8  20F4               	addwfc	prodh,w,c
 53084  0125CA  6F0A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 53085                           
 53086                           ; BSR set to: 1
 53087                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 53088  0125CC  810C               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 53089                           
 53090                           ; BSR set to: 1
 53091                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 53092  0125CE  0E01               	movlw	1
 53093  0125D0  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 53094                           
 53095                           ; BSR set to: 1
 53096                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 53097  0125D2  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 53098                           
 53099                           ;usb_device.c: 2723: break;
 53100  0125D4  0012               	return	
 53101  0125D6                     i2l365:
 53102                           
 53103                           ; BSR set to: 13
 53104                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 53105  0125D6  0101               	movlb	1	; () banked
 53106  0125D8  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 53107                           
 53108                           ; BSR set to: 1
 53109                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 53110  0125DA  010D               	movlb	13	; () banked
 53111  0125DC  5134               	movf	52,w,b	;volatile
 53112  0125DE  0D01               	mullw	1
 53113  0125E0  0EBF               	movlw	low _USBAlternateInterface
 53114  0125E2  24F3               	addwf	prodl,w,c
 53115  0125E4  6ED9               	movwf	fsr2l,c
 53116  0125E6  0E01               	movlw	high _USBAlternateInterface
 53117  0125E8  20F4               	addwfc	prodh,w,c
 53118  0125EA  6EDA               	movwf	fsr2h,c
 53119  0125EC  CD32 FFDF          	movff	3378,indf2	;volatile
 53120                           
 53121                           ;usb_device.c: 2727: break;
 53122  0125F0  0012               	return	
 53123  0125F2                     
 53124                           ; BSR set to: 13
 53125                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 53126                           
 53127                           ; BSR set to: 13
 53128  0125F2  0E00               	movlw	0
 53129  0125F4  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 53130  0125F6  0E02               	movlw	2
 53131  0125F8  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 53132  0125FA  0E00               	movlw	0
 53133  0125FC  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 53134  0125FE  0E00               	movlw	0
 53135  012600  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 53136  012602  0E00               	movlw	0
 53137  012604  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 53138  012606  0E00               	movlw	0
 53139  012608  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 53140  01260A  ECC3  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 53141                           
 53142                           ;usb_device.c: 2734: }
 53143                           
 53144                           ;usb_device.c: 2733: break;
 53145                           
 53146                           ;usb_device.c: 2732: default:
 53147                           
 53148                           ;usb_device.c: 2731: case 12:
 53149                           
 53150                           ;usb_device.c: 2730: break;
 53151  01260E  0012               	return	
 53152  012610                     i2l355:
 53153  012610  010D               	movlb	13	; () banked
 53154  012612  5131               	movf	49,w,b	;volatile
 53155                           
 53156                           ; Switch size 1, requested type "space"
 53157                           ; Number of cases is 11, Range of values is 0 to 12
 53158                           ; switch strategies available:
 53159                           ; Name         Instructions Cycles
 53160                           ; simple_byte           34    18 (average)
 53161                           ;	Chosen strategy is simple_byte
 53162  012614  0A00               	xorlw	0	; case 0
 53163  012616  B4D8               	btfsc	status,2,c
 53164  012618  D7C9               	goto	i2l361
 53165  01261A  0A01               	xorlw	1	; case 1
 53166  01261C  B4D8               	btfsc	status,2,c
 53167  01261E  D7C9               	goto	i2l362
 53168  012620  0A02               	xorlw	2	; case 3
 53169  012622  B4D8               	btfsc	status,2,c
 53170  012624  D7C6               	goto	i2l362
 53171  012626  0A06               	xorlw	6	; case 5
 53172  012628  B4D8               	btfsc	status,2,c
 53173  01262A  D7AB               	goto	i2l356
 53174  01262C  0A03               	xorlw	3	; case 6
 53175  01262E  B4D8               	btfsc	status,2,c
 53176  012630  D7AD               	goto	i2l358
 53177  012632  0A01               	xorlw	1	; case 7
 53178  012634  B4D8               	btfsc	status,2,c
 53179  012636  D7DD               	goto	i2l366
 53180  012638  0A0F               	xorlw	15	; case 8
 53181  01263A  B4D8               	btfsc	status,2,c
 53182  01263C  D7AD               	goto	i2l360
 53183  01263E  0A01               	xorlw	1	; case 9
 53184  012640  B4D8               	btfsc	status,2,c
 53185  012642  D7A7               	goto	i2l359
 53186  012644  0A03               	xorlw	3	; case 10
 53187  012646  B4D8               	btfsc	status,2,c
 53188  012648  D7B7               	goto	i2l364
 53189  01264A  0A01               	xorlw	1	; case 11
 53190  01264C  B4D8               	btfsc	status,2,c
 53191  01264E  D7C3               	goto	i2l365
 53192  012650  0A07               	xorlw	7	; case 12
 53193  012652  0012               	return	
 53194  012654                     __end_of_USBCheckStdRequest:
 53195                           	opt stack 0
 53196                           tosu	equ	0xFFF
 53197                           tosh	equ	0xFFE
 53198                           tosl	equ	0xFFD
 53199                           pclatu	equ	0xFFB
 53200                           pclath	equ	0xFFA
 53201                           tblptru	equ	0xFF8
 53202                           tblptrh	equ	0xFF7
 53203                           tblptrl	equ	0xFF6
 53204                           tablat	equ	0xFF5
 53205                           prodh	equ	0xFF4
 53206                           prodl	equ	0xFF3
 53207                           intcon	equ	0xFF2
 53208                           indf0	equ	0xFEF
 53209                           postinc0	equ	0xFEE
 53210                           fsr0h	equ	0xFEA
 53211                           fsr0l	equ	0xFE9
 53212                           wreg	equ	0xFE8
 53213                           indf1	equ	0xFE7
 53214                           postinc1	equ	0xFE6
 53215                           postdec1	equ	0xFE5
 53216                           plusw1	equ	0xFE3
 53217                           fsr1h	equ	0xFE2
 53218                           fsr1l	equ	0xFE1
 53219                           indf2	equ	0xFDF
 53220                           postinc2	equ	0xFDE
 53221                           postdec2	equ	0xFDD
 53222                           plusw2	equ	0xFDB
 53223                           fsr2h	equ	0xFDA
 53224                           fsr2l	equ	0xFD9
 53225                           status	equ	0xFD8
 53226                           
 53227 ;; *************** function _USBStdSetCfgHandler *****************
 53228 ;; Defined at:
 53229 ;;		line 1970 in file "usb_device.c"
 53230 ;; Parameters:    Size  Location     Type
 53231 ;;		None
 53232 ;; Auto vars:     Size  Location     Type
 53233 ;;  i               1   23[COMRAM] unsigned char 
 53234 ;; Return value:  Size  Location     Type
 53235 ;;                  1    wreg      void 
 53236 ;; Registers used:
 53237 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 53238 ;; Tracked objects:
 53239 ;;		On entry : 0/0
 53240 ;;		On exit  : 0/0
 53241 ;;		Unchanged: 0/0
 53242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53244 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53246 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53247 ;;Total ram usage:        1 bytes
 53248 ;; Hardware stack levels used:    1
 53249 ;; Hardware stack levels required when called:    4
 53250 ;; This function calls:
 53251 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 53252 ;;		i2_memset
 53253 ;; This function is called by:
 53254 ;;		_USBCheckStdRequest
 53255 ;; This function uses a non-reentrant model
 53256 ;;
 53257                           
 53258                           	psect	text225
 53259  012816                     __ptext225:
 53260                           	opt stack 0
 53261  012816                     _USBStdSetCfgHandler:
 53262                           	opt stack 9
 53263                           
 53264                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 53265                           
 53266                           ;incstack = 0
 53267  012816  0101               	movlb	1	; () banked
 53268  012818  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 53269                           
 53270                           ; BSR set to: 1
 53271                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 53272  01281A  0E27               	movlw	39
 53273  01281C  6E01               	movwf	i2memset@p1,c
 53274  01281E  0E0F               	movlw	15
 53275  012820  6E02               	movwf	i2memset@p1+1,c
 53276  012822  0E00               	movlw	0
 53277  012824  6E04               	movwf	i2memset@c+1,c
 53278  012826  0E00               	movlw	0
 53279  012828  6E03               	movwf	i2memset@c,c
 53280  01282A  0E00               	movlw	0
 53281  01282C  6E06               	movwf	i2memset@n+1,c
 53282  01282E  0E02               	movlw	2
 53283  012830  6E05               	movwf	i2memset@n,c
 53284  012832  EC15  F0B0         	call	i2_memset	;wreg free
 53285                           
 53286                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 53287  012836  0E00               	movlw	0
 53288  012838  6E01               	movwf	i2memset@p1,c
 53289  01283A  0E0D               	movlw	13
 53290  01283C  6E02               	movwf	i2memset@p1+1,c
 53291  01283E  0E00               	movlw	0
 53292  012840  6E04               	movwf	i2memset@c+1,c
 53293  012842  0E00               	movlw	0
 53294  012844  6E03               	movwf	i2memset@c,c
 53295  012846  0E00               	movlw	0
 53296  012848  6E06               	movwf	i2memset@n+1,c
 53297  01284A  0E30               	movlw	48
 53298  01284C  6E05               	movwf	i2memset@n,c
 53299  01284E  EC15  F0B0         	call	i2_memset	;wreg free
 53300                           
 53301                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 53302  012852  8C65               	bsf	3941,6,c	;volatile
 53303                           
 53304                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 53305  012854  0E00               	movlw	0
 53306  012856  6E18               	movwf	USBStdSetCfgHandler@i,c
 53307  012858                     i2l13945:
 53308  012858  0E02               	movlw	2
 53309  01285A  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 53310  01285C  D001               	goto	i2l272
 53311  01285E  D016               	goto	i2u1215_40
 53312  012860                     i2l272:
 53313                           
 53314                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 53315  012860  5018               	movf	USBStdSetCfgHandler@i,w,c
 53316  012862  0D01               	mullw	1
 53317  012864  0E31               	movlw	low _ep_data_in
 53318  012866  24F3               	addwf	prodl,w,c
 53319  012868  6ED9               	movwf	fsr2l,c
 53320  01286A  0E01               	movlw	high _ep_data_in
 53321  01286C  20F4               	addwfc	prodh,w,c
 53322  01286E  6EDA               	movwf	fsr2h,c
 53323  012870  0E00               	movlw	0
 53324  012872  6EDF               	movwf	indf2,c
 53325                           
 53326                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 53327  012874  5018               	movf	USBStdSetCfgHandler@i,w,c
 53328  012876  0D01               	mullw	1
 53329  012878  0E2E               	movlw	low _ep_data_out
 53330  01287A  24F3               	addwf	prodl,w,c
 53331  01287C  6ED9               	movwf	fsr2l,c
 53332  01287E  0E01               	movlw	high _ep_data_out
 53333  012880  20F4               	addwfc	prodh,w,c
 53334  012882  6EDA               	movwf	fsr2h,c
 53335  012884  0E00               	movlw	0
 53336  012886  6EDF               	movwf	indf2,c
 53337  012888  2A18               	incf	USBStdSetCfgHandler@i,f,c
 53338  01288A  D7E6               	goto	i2l13945
 53339  01288C                     i2u1215_40:
 53340                           
 53341                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 53342  01288C  0EBF               	movlw	low _USBAlternateInterface
 53343  01288E  6E01               	movwf	i2memset@p1,c
 53344  012890  0E01               	movlw	high _USBAlternateInterface
 53345  012892  6E02               	movwf	i2memset@p1+1,c
 53346  012894  0E00               	movlw	0
 53347  012896  6E04               	movwf	i2memset@c+1,c
 53348  012898  0E00               	movlw	0
 53349  01289A  6E03               	movwf	i2memset@c,c
 53350  01289C  0E00               	movlw	0
 53351  01289E  6E06               	movwf	i2memset@n+1,c
 53352  0128A0  0E02               	movlw	2
 53353  0128A2  6E05               	movwf	i2memset@n,c
 53354  0128A4  EC15  F0B0         	call	i2_memset	;wreg free
 53355                           
 53356                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 53357  0128A8  9C65               	bcf	3941,6,c	;volatile
 53358                           
 53359                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 53360  0128AA  0E08               	movlw	8
 53361  0128AC  0101               	movlb	1	; () banked
 53362  0128AE  6F0F               	movwf	_pBDTEntryIn& (0+255),b
 53363  0128B0  0E0D               	movlw	13
 53364  0128B2  6F10               	movwf	(_pBDTEntryIn+1)& (0+255),b
 53365                           
 53366                           ; BSR set to: 1
 53367                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 53368  0128B4  0E00               	movlw	0
 53369  0128B6  6E5B               	movwf	_pBDTEntryEP0OutCurrent,c
 53370  0128B8  0E0D               	movlw	13
 53371  0128BA  6E5C               	movwf	_pBDTEntryEP0OutCurrent+1,c
 53372                           
 53373                           ; BSR set to: 1
 53374                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 53375  0128BC  C05B  F059         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 53376  0128C0  C05C  F05A         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 53377                           
 53378                           ; BSR set to: 1
 53379                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 53380  0128C4  CD32 F1C3          	movff	3378,_USBActiveConfiguration	;volatile
 53381                           
 53382                           ; BSR set to: 1
 53383                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 53384  0128C8  51C3               	movf	_USBActiveConfiguration& (0+255),w,b	;volatile
 53385  0128CA  A4D8               	btfss	status,2,c
 53386  0128CC  D003               	goto	i2l274
 53387                           
 53388                           ; BSR set to: 1
 53389                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 53390  0128CE  0E10               	movlw	16
 53391  0128D0  6E5D               	movwf	_USBDeviceState,c	;volatile
 53392                           
 53393                           ;usb_device.c: 2015: }
 53394  0128D2  0012               	return	
 53395  0128D4                     i2l274:
 53396                           
 53397                           ; BSR set to: 1
 53398                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 53399                           
 53400                           ; BSR set to: 1
 53401  0128D4  0E00               	movlw	0
 53402  0128D6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 53403  0128D8  0E01               	movlw	1
 53404  0128DA  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 53405  0128DC  0EC3               	movlw	low _USBActiveConfiguration
 53406  0128DE  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 53407  0128E0  0E01               	movlw	high _USBActiveConfiguration
 53408  0128E2  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 53409  0128E4  0E00               	movlw	0
 53410  0128E6  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 53411  0128E8  0E01               	movlw	1
 53412  0128EA  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 53413  0128EC  ECC3  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 53414                           
 53415                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 53416  0128F0  0E20               	movlw	32
 53417  0128F2  6E5D               	movwf	_USBDeviceState,c	;volatile
 53418  0128F4  0012               	return	
 53419  0128F6                     __end_of_USBStdSetCfgHandler:
 53420                           	opt stack 0
 53421                           tosu	equ	0xFFF
 53422                           tosh	equ	0xFFE
 53423                           tosl	equ	0xFFD
 53424                           pclatu	equ	0xFFB
 53425                           pclath	equ	0xFFA
 53426                           tblptru	equ	0xFF8
 53427                           tblptrh	equ	0xFF7
 53428                           tblptrl	equ	0xFF6
 53429                           tablat	equ	0xFF5
 53430                           prodh	equ	0xFF4
 53431                           prodl	equ	0xFF3
 53432                           intcon	equ	0xFF2
 53433                           indf0	equ	0xFEF
 53434                           postinc0	equ	0xFEE
 53435                           fsr0h	equ	0xFEA
 53436                           fsr0l	equ	0xFE9
 53437                           wreg	equ	0xFE8
 53438                           indf1	equ	0xFE7
 53439                           postinc1	equ	0xFE6
 53440                           postdec1	equ	0xFE5
 53441                           plusw1	equ	0xFE3
 53442                           fsr1h	equ	0xFE2
 53443                           fsr1l	equ	0xFE1
 53444                           indf2	equ	0xFDF
 53445                           postinc2	equ	0xFDE
 53446                           postdec2	equ	0xFDD
 53447                           plusw2	equ	0xFDB
 53448                           fsr2h	equ	0xFDA
 53449                           fsr2l	equ	0xFD9
 53450                           status	equ	0xFD8
 53451                           
 53452 ;; *************** function i2_memset *****************
 53453 ;; Defined at:
 53454 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 53455 ;; Parameters:    Size  Location     Type
 53456 ;;  p1              2    0[COMRAM] PTR void 
 53457 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 53458 ;;  c               2    2[COMRAM] int 
 53459 ;;  n               2    4[COMRAM] unsigned int 
 53460 ;; Auto vars:     Size  Location     Type
 53461 ;;  memset          2    6[COMRAM] PTR unsigned char 
 53462 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 53463 ;; Return value:  Size  Location     Type
 53464 ;;                  2    0[COMRAM] PTR void 
 53465 ;; Registers used:
 53466 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 53467 ;; Tracked objects:
 53468 ;;		On entry : 0/0
 53469 ;;		On exit  : 0/0
 53470 ;;		Unchanged: 0/0
 53471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53472 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53473 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53475 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53476 ;;Total ram usage:        8 bytes
 53477 ;; Hardware stack levels used:    1
 53478 ;; This function calls:
 53479 ;;		Nothing
 53480 ;; This function is called by:
 53481 ;;		_USBStdSetCfgHandler
 53482 ;;		i2_USBDeviceInit
 53483 ;; This function uses a non-reentrant model
 53484 ;;
 53485                           
 53486                           	psect	text226
 53487  01602A                     __ptext226:
 53488                           	opt stack 0
 53489  01602A                     i2_memset:
 53490                           	opt stack 15
 53491                           
 53492                           ;incstack = 0
 53493  01602A  C001  F007         	movff	i2memset@p1,i2memset@p
 53494  01602E  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 53495  016032  D008               	goto	i2l3903
 53496  016034                     i2l13875:
 53497  016034  C007  FFD9         	movff	i2memset@p,fsr2l
 53498  016038  C008  FFDA         	movff	i2memset@p+1,fsr2h
 53499  01603C  C003  FFDF         	movff	i2memset@c,indf2
 53500  016040  4A07               	infsnz	i2memset@p,f,c
 53501  016042  2A08               	incf	i2memset@p+1,f,c
 53502  016044                     i2l3903:
 53503  016044  0605               	decf	i2memset@n,f,c
 53504  016046  A0D8               	btfss	status,0,c
 53505  016048  0606               	decf	i2memset@n+1,f,c
 53506  01604A  2805               	incf	i2memset@n,w,c
 53507  01604C  E1F3               	bnz	i2l13875
 53508  01604E  2806               	incf	i2memset@n+1,w,c
 53509  016050  B4D8               	btfsc	status,2,c
 53510  016052  0012               	return	
 53511  016054  D7EF               	goto	i2l3904
 53512  016056                     __end_ofi2_memset:
 53513                           	opt stack 0
 53514                           tosu	equ	0xFFF
 53515                           tosh	equ	0xFFE
 53516                           tosl	equ	0xFFD
 53517                           pclatu	equ	0xFFB
 53518                           pclath	equ	0xFFA
 53519                           tblptru	equ	0xFF8
 53520                           tblptrh	equ	0xFF7
 53521                           tblptrl	equ	0xFF6
 53522                           tablat	equ	0xFF5
 53523                           prodh	equ	0xFF4
 53524                           prodl	equ	0xFF3
 53525                           intcon	equ	0xFF2
 53526                           indf0	equ	0xFEF
 53527                           postinc0	equ	0xFEE
 53528                           fsr0h	equ	0xFEA
 53529                           fsr0l	equ	0xFE9
 53530                           wreg	equ	0xFE8
 53531                           indf1	equ	0xFE7
 53532                           postinc1	equ	0xFE6
 53533                           postdec1	equ	0xFE5
 53534                           plusw1	equ	0xFE3
 53535                           fsr1h	equ	0xFE2
 53536                           fsr1l	equ	0xFE1
 53537                           indf2	equ	0xFDF
 53538                           postinc2	equ	0xFDE
 53539                           postdec2	equ	0xFDD
 53540                           plusw2	equ	0xFDB
 53541                           fsr2h	equ	0xFDA
 53542                           fsr2l	equ	0xFD9
 53543                           status	equ	0xFD8
 53544                           
 53545 ;; *************** function _USBStdGetStatusHandler *****************
 53546 ;; Defined at:
 53547 ;;		line 2131 in file "usb_device.c"
 53548 ;; Parameters:    Size  Location     Type
 53549 ;;		None
 53550 ;; Auto vars:     Size  Location     Type
 53551 ;;  p               2    1[COMRAM] PTR struct __BDT
 53552 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 53553 ;; Return value:  Size  Location     Type
 53554 ;;                  1    wreg      void 
 53555 ;; Registers used:
 53556 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 53557 ;; Tracked objects:
 53558 ;;		On entry : 0/0
 53559 ;;		On exit  : 0/0
 53560 ;;		Unchanged: 0/0
 53561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53563 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53564 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53565 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53566 ;;Total ram usage:        3 bytes
 53567 ;; Hardware stack levels used:    1
 53568 ;; This function calls:
 53569 ;;		Nothing
 53570 ;; This function is called by:
 53571 ;;		_USBCheckStdRequest
 53572 ;; This function uses a non-reentrant model
 53573 ;;
 53574                           
 53575                           	psect	text227
 53576  013842                     __ptext227:
 53577                           	opt stack 0
 53578  013842                     _USBStdGetStatusHandler:
 53579                           	opt stack 13
 53580                           
 53581                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 53582                           
 53583                           ;incstack = 0
 53584  013842  0E00               	movlw	0
 53585  013844  010D               	movlb	13	; () banked
 53586  013846  6F38               	movwf	56,b	;volatile
 53587                           
 53588                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 53589  013848  0E00               	movlw	0
 53590  01384A  6F39               	movwf	57,b	;volatile
 53591                           
 53592                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 53593  01384C  D039               	goto	i2l293
 53594  01384E                     i2l294:
 53595                           
 53596                           ; BSR set to: 13
 53597                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 53598  01384E  0101               	movlb	1	; () banked
 53599  013850  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 53600                           
 53601                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 53602                           
 53603                           ; BSR set to: 13
 53604                           
 53605                           ; BSR set to: 1
 53606                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 53607                           
 53608                           ;usb_device.c: 2144: if(0 == 1)
 53609  013852  0101               	movlb	1	; () banked
 53610  013854  0562               	decf	_RemoteWakeup& (0+255),w,b	;volatile
 53611  013856  A4D8               	btfss	status,2,c
 53612  013858  D03E               	goto	i2l297
 53613                           
 53614                           ; BSR set to: 1
 53615                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 53616  01385A  010D               	movlb	13	; () banked
 53617  01385C  8338               	bsf	56,1,b	;volatile
 53618                           
 53619                           ; BSR set to: 13
 53620                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 53621  01385E  D03B               	goto	i2l297
 53622  013860                     i2l298:
 53623                           
 53624                           ; BSR set to: 13
 53625                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 53626  013860  0101               	movlb	1	; () banked
 53627  013862  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 53628                           
 53629                           ;usb_device.c: 2156: break;
 53630  013864  D038               	goto	i2l297
 53631  013866                     i2l299:
 53632                           
 53633                           ; BSR set to: 13
 53634                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 53635  013866  0101               	movlb	1	; () banked
 53636  013868  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 53637                           
 53638                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 53639  01386A  010D               	movlb	13	; () banked
 53640  01386C  BF34               	btfsc	52,7,b	;volatile
 53641  01386E  D00A               	goto	i2l300
 53642                           
 53643                           ; BSR set to: 13
 53644                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 53645  013870  5134               	movf	52,w,b	;volatile
 53646  013872  0B0F               	andlw	15
 53647  013874  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 53648  013876  5001               	movf	??_USBStdGetStatusHandler,w,c
 53649  013878  0D02               	mullw	2
 53650  01387A  0E15               	movlw	low _pBDTEntryOut
 53651  01387C  24F3               	addwf	prodl,w,c
 53652  01387E  6ED9               	movwf	fsr2l,c
 53653  013880  0E01               	movlw	high _pBDTEntryOut
 53654  013882  D009               	goto	L59
 53655  013884                     i2l300:
 53656                           
 53657                           ; BSR set to: 13
 53658                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 53659                           
 53660                           ; BSR set to: 13
 53661  013884  5134               	movf	52,w,b	;volatile
 53662  013886  0B0F               	andlw	15
 53663  013888  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 53664  01388A  5001               	movf	??_USBStdGetStatusHandler,w,c
 53665  01388C  0D02               	mullw	2
 53666  01388E  0E0F               	movlw	low _pBDTEntryIn
 53667  013890  24F3               	addwf	prodl,w,c
 53668  013892  6ED9               	movwf	fsr2l,c
 53669  013894  0E01               	movlw	high _pBDTEntryIn
 53670  013896                     L59:
 53671  013896  20F4               	addwfc	prodh,w,c
 53672  013898  6EDA               	movwf	fsr2h,c
 53673  01389A  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 53674  01389E  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 53675                           
 53676                           ; BSR set to: 13
 53677                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 53678                           
 53679                           ; BSR set to: 13
 53680  0138A2  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 53681  0138A6  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 53682  0138AA  AEDF               	btfss	indf2,7,c
 53683  0138AC  D014               	goto	i2l297
 53684                           
 53685                           ; BSR set to: 13
 53686  0138AE  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 53687  0138B2  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 53688  0138B6  A4DF               	btfss	indf2,2,c
 53689  0138B8  D00E               	goto	i2l297
 53690                           
 53691                           ; BSR set to: 13
 53692                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 53693  0138BA  0E01               	movlw	1
 53694  0138BC  6F38               	movwf	56,b	;volatile
 53695                           
 53696                           ; BSR set to: 13
 53697                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 53698                           
 53699                           ; BSR set to: 13
 53700                           ;usb_device.c: 2176: break;
 53701  0138BE  D00B               	goto	i2l297
 53702  0138C0                     i2l293:
 53703                           
 53704                           ; BSR set to: 13
 53705                           
 53706                           ; BSR set to: 13
 53707  0138C0  5130               	movf	48,w,b	;volatile
 53708  0138C2  0B1F               	andlw	31
 53709                           
 53710                           ; Switch size 1, requested type "space"
 53711                           ; Number of cases is 3, Range of values is 0 to 2
 53712                           ; switch strategies available:
 53713                           ; Name         Instructions Cycles
 53714                           ; simple_byte           10     6 (average)
 53715                           ;	Chosen strategy is simple_byte
 53716  0138C4  0A00               	xorlw	0	; case 0
 53717  0138C6  B4D8               	btfsc	status,2,c
 53718  0138C8  D7C2               	goto	i2l294
 53719  0138CA  0A01               	xorlw	1	; case 1
 53720  0138CC  B4D8               	btfsc	status,2,c
 53721  0138CE  D7C8               	goto	i2l298
 53722  0138D0  0A03               	xorlw	3	; case 2
 53723  0138D2  B4D8               	btfsc	status,2,c
 53724  0138D4  D7C8               	goto	i2l299
 53725  0138D6                     i2l297:
 53726                           
 53727                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 53728  0138D6  0101               	movlb	1	; () banked
 53729  0138D8  AF0C               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 53730  0138DA  0012               	return	
 53731                           
 53732                           ; BSR set to: 1
 53733                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 53734  0138DC  0E38               	movlw	56
 53735  0138DE  6F09               	movwf	_inPipes& (0+255),b	;volatile
 53736  0138E0  0E0D               	movlw	13
 53737  0138E2  6F0A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 53738                           
 53739                           ; BSR set to: 1
 53740                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 53741  0138E4  810C               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 53742                           
 53743                           ; BSR set to: 1
 53744                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 53745  0138E6  0E02               	movlw	2
 53746  0138E8  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 53747  0138EA  0012               	return	
 53748  0138EC                     __end_of_USBStdGetStatusHandler:
 53749                           	opt stack 0
 53750                           tosu	equ	0xFFF
 53751                           tosh	equ	0xFFE
 53752                           tosl	equ	0xFFD
 53753                           pclatu	equ	0xFFB
 53754                           pclath	equ	0xFFA
 53755                           tblptru	equ	0xFF8
 53756                           tblptrh	equ	0xFF7
 53757                           tblptrl	equ	0xFF6
 53758                           tablat	equ	0xFF5
 53759                           prodh	equ	0xFF4
 53760                           prodl	equ	0xFF3
 53761                           intcon	equ	0xFF2
 53762                           indf0	equ	0xFEF
 53763                           postinc0	equ	0xFEE
 53764                           fsr0h	equ	0xFEA
 53765                           fsr0l	equ	0xFE9
 53766                           wreg	equ	0xFE8
 53767                           indf1	equ	0xFE7
 53768                           postinc1	equ	0xFE6
 53769                           postdec1	equ	0xFE5
 53770                           plusw1	equ	0xFE3
 53771                           fsr1h	equ	0xFE2
 53772                           fsr1l	equ	0xFE1
 53773                           indf2	equ	0xFDF
 53774                           postinc2	equ	0xFDE
 53775                           postdec2	equ	0xFDD
 53776                           plusw2	equ	0xFDB
 53777                           fsr2h	equ	0xFDA
 53778                           fsr2l	equ	0xFD9
 53779                           status	equ	0xFD8
 53780                           
 53781 ;; *************** function _USBStdGetDscHandler *****************
 53782 ;; Defined at:
 53783 ;;		line 2045 in file "usb_device.c"
 53784 ;; Parameters:    Size  Location     Type
 53785 ;;		None
 53786 ;; Auto vars:     Size  Location     Type
 53787 ;;		None
 53788 ;; Return value:  Size  Location     Type
 53789 ;;                  1    wreg      void 
 53790 ;; Registers used:
 53791 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 53792 ;; Tracked objects:
 53793 ;;		On entry : 0/0
 53794 ;;		On exit  : 0/0
 53795 ;;		Unchanged: 0/0
 53796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53799 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53800 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53801 ;;Total ram usage:        2 bytes
 53802 ;; Hardware stack levels used:    1
 53803 ;; This function calls:
 53804 ;;		Nothing
 53805 ;; This function is called by:
 53806 ;;		_USBCheckStdRequest
 53807 ;; This function uses a non-reentrant model
 53808 ;;
 53809                           
 53810                           	psect	text228
 53811  010666                     __ptext228:
 53812                           	opt stack 0
 53813  010666                     _USBStdGetDscHandler:
 53814                           	opt stack 13
 53815                           
 53816                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 53817                           
 53818                           ; BSR set to: 1
 53819                           ;incstack = 0
 53820  010666  0E80               	movlw	128
 53821  010668  010D               	movlb	13	; () banked
 53822  01066A  1930               	xorwf	48,w,b	;volatile
 53823  01066C  A4D8               	btfss	status,2,c
 53824  01066E  0012               	return	
 53825                           
 53826                           ; BSR set to: 13
 53827                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 53828  010670  0EC0               	movlw	192
 53829  010672  0101               	movlb	1	; () banked
 53830  010674  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 53831                           
 53832                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 53833  010676  D08B               	goto	i2l280
 53834  010678                     
 53835                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 53836                           
 53837                           ; BSR set to: 1
 53838  010678  0EC0               	movlw	low _device_dsc
 53839  01067A  0101               	movlb	1	; () banked
 53840  01067C  6F09               	movwf	_inPipes& (0+255),b	;volatile
 53841  01067E  0EA2               	movlw	high _device_dsc
 53842  010680  6F0A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 53843                           
 53844                           ; BSR set to: 1
 53845                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 53846  010682  0E00               	movlw	0
 53847  010684  6F0E               	movwf	(_inPipes+5)& (0+255),b	;volatile
 53848  010686  0E12               	movlw	18
 53849  010688  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 53850                           
 53851                           ;usb_device.c: 2060: break;
 53852  01068A  0012               	return	
 53853  01068C                     
 53854                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 53855                           
 53856                           ; BSR set to: 1
 53857  01068C  010D               	movlb	13	; () banked
 53858  01068E  5132               	movf	50,w,b	;volatile
 53859  010690  A4D8               	btfss	status,2,c
 53860  010692  D045               	goto	i2l284
 53861                           
 53862                           ; BSR set to: 13
 53863                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 53864  010694  5132               	movf	50,w,b	;volatile
 53865  010696  0D02               	mullw	2
 53866  010698  0EEC               	movlw	low _USB_CD_Ptr
 53867  01069A  24F3               	addwf	prodl,w,c
 53868  01069C  6EF6               	movwf	tblptrl,c
 53869  01069E  0E9D               	movlw	high _USB_CD_Ptr
 53870  0106A0  20F4               	addwfc	prodh,w,c
 53871  0106A2  6EF7               	movwf	tblptrh,c
 53872  0106A4                     	if	1	;There are 3 active tblptr bytes
 53873  0106A4  6AF8               	clrf	tblptru,c
 53874  0106A6  0E00               	movlw	low (__mediumconst shr (0+16))
 53875  0106A8  22F8               	addwfc	tblptru,f,c
 53876  0106AA                     	endif
 53877  0106AA  0009               	tblrd		*+
 53878  0106AC  CFF5 F109          	movff	tablat,_inPipes	;volatile
 53879  0106B0  000A               	tblrd		*-
 53880  0106B2  CFF5 F10A          	movff	tablat,_inPipes+1	;volatile
 53881                           
 53882                           ; BSR set to: 13
 53883                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 53884  0106B6  0E02               	movlw	2
 53885  0106B8  0101               	movlb	1	; () banked
 53886  0106BA  2509               	addwf	_inPipes& (0+255),w,b	;volatile
 53887  0106BC  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 53888  0106BE  0E00               	movlw	0
 53889  0106C0  210A               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 53890  0106C2  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 53891  0106C4  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 53892  0106C8  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 53893  0106CC  0E00               	movlw	low (__mediumconst shr (0+16))
 53894  0106CE  6EF8               	movwf	tblptru,c
 53895  0106D0  0E0E               	movlw	(high __ramtop+-1)
 53896  0106D2  64F7               	cpfsgt	tblptrh,c
 53897  0106D4  D003               	bra	i2u1219_47
 53898  0106D6  0008               	tblrd		*
 53899  0106D8  50F5               	movf	tablat,w,c
 53900  0106DA  D005               	bra	i2u1219_40
 53901  0106DC                     i2u1219_47:
 53902  0106DC  CFF6 FFE9          	movff	tblptrl,fsr0l
 53903  0106E0  CFF7 FFEA          	movff	tblptrh,fsr0h
 53904  0106E4  50EF               	movf	indf0,w,c
 53905  0106E6                     i2u1219_40:
 53906  0106E6  0101               	movlb	1	; () banked
 53907  0106E8  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 53908                           
 53909                           ; BSR set to: 1
 53910                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 53911  0106EA  0E03               	movlw	3
 53912  0106EC  2509               	addwf	_inPipes& (0+255),w,b	;volatile
 53913  0106EE  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 53914  0106F0  0E00               	movlw	0
 53915  0106F2  210A               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 53916  0106F4  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 53917  0106F6  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 53918  0106FA  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 53919  0106FE  0E00               	movlw	low (__mediumconst shr (0+16))
 53920  010700  6EF8               	movwf	tblptru,c
 53921  010702  0E0E               	movlw	(high __ramtop+-1)
 53922  010704  64F7               	cpfsgt	tblptrh,c
 53923  010706  D003               	bra	i2u1220_47
 53924  010708  0008               	tblrd		*
 53925  01070A  50F5               	movf	tablat,w,c
 53926  01070C  D005               	bra	i2u1220_40
 53927  01070E                     i2u1220_47:
 53928  01070E  CFF6 FFE9          	movff	tblptrl,fsr0l
 53929  010712  CFF7 FFEA          	movff	tblptrh,fsr0h
 53930  010716  50EF               	movf	indf0,w,c
 53931  010718                     i2u1220_40:
 53932  010718  0101               	movlb	1	; () banked
 53933  01071A  6F0E               	movwf	(_inPipes+5)& (0+255),b	;volatile
 53934                           
 53935                           ;usb_device.c: 2078: }
 53936  01071C  0012               	return	
 53937  01071E                     i2l284:
 53938                           
 53939                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 53940                           
 53941                           ; BSR set to: 1
 53942  01071E  0E00               	movlw	0
 53943  010720  0101               	movlb	1	; () banked
 53944  010722  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 53945                           
 53946                           ; BSR set to: 1
 53947                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 53948  010724  0012               	return	
 53949  010726                     
 53950                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 53951                           
 53952                           ; BSR set to: 1
 53953  010726  0E04               	movlw	4
 53954  010728  010D               	movlb	13	; () banked
 53955  01072A  6132               	cpfslt	50,b	;volatile
 53956  01072C  D028               	goto	i2l287
 53957                           
 53958                           ; BSR set to: 13
 53959                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 53960  01072E  5132               	movf	50,w,b	;volatile
 53961  010730  0D02               	mullw	2
 53962  010732  0EE4               	movlw	low _USB_SD_Ptr
 53963  010734  24F3               	addwf	prodl,w,c
 53964  010736  6EF6               	movwf	tblptrl,c
 53965  010738  0E9D               	movlw	high _USB_SD_Ptr
 53966  01073A  20F4               	addwfc	prodh,w,c
 53967  01073C  6EF7               	movwf	tblptrh,c
 53968  01073E                     	if	1	;There are 3 active tblptr bytes
 53969  01073E  6AF8               	clrf	tblptru,c
 53970  010740  0E00               	movlw	low (__mediumconst shr (0+16))
 53971  010742  22F8               	addwfc	tblptru,f,c
 53972  010744                     	endif
 53973  010744  0009               	tblrd		*+
 53974  010746  CFF5 F109          	movff	tablat,_inPipes	;volatile
 53975  01074A  000A               	tblrd		*-
 53976  01074C  CFF5 F10A          	movff	tablat,_inPipes+1	;volatile
 53977                           
 53978                           ; BSR set to: 13
 53979                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 53980  010750  C109  FFF6         	movff	_inPipes,tblptrl	;volatile
 53981  010754  C10A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 53982  010758  0E00               	movlw	low (__mediumconst shr (0+16))
 53983  01075A  6EF8               	movwf	tblptru,c
 53984  01075C  0E0E               	movlw	(high __ramtop+-1)
 53985  01075E  64F7               	cpfsgt	tblptrh,c
 53986  010760  D003               	bra	i2u1222_47
 53987  010762  0008               	tblrd		*
 53988  010764  50F5               	movf	tablat,w,c
 53989  010766  D005               	bra	i2u1222_40
 53990  010768                     i2u1222_47:
 53991  010768  CFF6 FFE9          	movff	tblptrl,fsr0l
 53992  01076C  CFF7 FFEA          	movff	tblptrh,fsr0h
 53993  010770  50EF               	movf	indf0,w,c
 53994  010772                     i2u1222_40:
 53995  010772  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 53996  010774  5001               	movf	??_USBStdGetDscHandler,w,c
 53997  010776  0101               	movlb	1	; () banked
 53998  010778  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 53999  01077A  6B0E               	clrf	(_inPipes+5)& (0+255),b	;volatile
 54000                           
 54001                           ;usb_device.c: 2094: }
 54002  01077C  0012               	return	
 54003  01077E                     i2l287:
 54004                           
 54005                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 54006                           
 54007                           ; BSR set to: 1
 54008  01077E  0E00               	movlw	0
 54009  010780  0101               	movlb	1	; () banked
 54010  010782  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 54011                           
 54012                           ; BSR set to: 1
 54013                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 54014  010784  0012               	return	
 54015  010786                     
 54016                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 54017                           
 54018                           ; BSR set to: 1
 54019  010786  0E00               	movlw	0
 54020  010788  0101               	movlb	1	; () banked
 54021  01078A  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 54022                           
 54023                           ; BSR set to: 1
 54024                           ;usb_device.c: 2112: }
 54025                           
 54026                           ;usb_device.c: 2111: break;
 54027  01078C  0012               	return	
 54028  01078E                     i2l280:
 54029                           
 54030                           ; BSR set to: 1
 54031                           
 54032                           ; BSR set to: 1
 54033  01078E  010D               	movlb	13	; () banked
 54034  010790  5133               	movf	51,w,b	;volatile
 54035                           
 54036                           ; Switch size 1, requested type "space"
 54037                           ; Number of cases is 3, Range of values is 1 to 3
 54038                           ; switch strategies available:
 54039                           ; Name         Instructions Cycles
 54040                           ; simple_byte           10     6 (average)
 54041                           ;	Chosen strategy is simple_byte
 54042  010792  0A01               	xorlw	1	; case 1
 54043  010794  B4D8               	btfsc	status,2,c
 54044  010796  D770               	goto	i2l281
 54045  010798  0A03               	xorlw	3	; case 2
 54046  01079A  B4D8               	btfsc	status,2,c
 54047  01079C  D777               	goto	i2l283
 54048  01079E  0A01               	xorlw	1	; case 3
 54049  0107A0  B4D8               	btfsc	status,2,c
 54050  0107A2  D7C1               	goto	i2l286
 54051  0107A4  D7F0               	goto	i2l289
 54052  0107A6                     __end_of_USBStdGetDscHandler:
 54053                           	opt stack 0
 54054                           tosu	equ	0xFFF
 54055                           tosh	equ	0xFFE
 54056                           tosl	equ	0xFFD
 54057                           pclatu	equ	0xFFB
 54058                           pclath	equ	0xFFA
 54059                           tblptru	equ	0xFF8
 54060                           tblptrh	equ	0xFF7
 54061                           tblptrl	equ	0xFF6
 54062                           tablat	equ	0xFF5
 54063                           prodh	equ	0xFF4
 54064                           prodl	equ	0xFF3
 54065                           intcon	equ	0xFF2
 54066                           indf0	equ	0xFEF
 54067                           postinc0	equ	0xFEE
 54068                           fsr0h	equ	0xFEA
 54069                           fsr0l	equ	0xFE9
 54070                           wreg	equ	0xFE8
 54071                           indf1	equ	0xFE7
 54072                           postinc1	equ	0xFE6
 54073                           postdec1	equ	0xFE5
 54074                           plusw1	equ	0xFE3
 54075                           fsr1h	equ	0xFE2
 54076                           fsr1l	equ	0xFE1
 54077                           indf2	equ	0xFDF
 54078                           postinc2	equ	0xFDE
 54079                           postdec2	equ	0xFDD
 54080                           plusw2	equ	0xFDB
 54081                           fsr2h	equ	0xFDA
 54082                           fsr2l	equ	0xFD9
 54083                           status	equ	0xFD8
 54084                           
 54085 ;; *************** function _USBStdFeatureReqHandler *****************
 54086 ;; Defined at:
 54087 ;;		line 2756 in file "usb_device.c"
 54088 ;; Parameters:    Size  Location     Type
 54089 ;;		None
 54090 ;; Auto vars:     Size  Location     Type
 54091 ;;  p               2   27[COMRAM] PTR struct __BDT
 54092 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 54093 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 54094 ;;		 -> UEP0(1), 
 54095 ;;  current_ep_d    1   26[COMRAM] struct .
 54096 ;; Return value:  Size  Location     Type
 54097 ;;                  1    wreg      void 
 54098 ;; Registers used:
 54099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 54100 ;; Tracked objects:
 54101 ;;		On entry : 0/0
 54102 ;;		On exit  : 0/0
 54103 ;;		Unchanged: 0/0
 54104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54106 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54107 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54108 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54109 ;;Total ram usage:        6 bytes
 54110 ;; Hardware stack levels used:    1
 54111 ;; Hardware stack levels required when called:    4
 54112 ;; This function calls:
 54113 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 54114 ;; This function is called by:
 54115 ;;		_USBCheckStdRequest
 54116 ;; This function uses a non-reentrant model
 54117 ;;
 54118                           
 54119                           	psect	text229
 54120  00D560                     __ptext229:
 54121                           	opt stack 0
 54122  00D560                     _USBStdFeatureReqHandler:
 54123                           	opt stack 9
 54124                           
 54125                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 54126                           
 54127                           ;incstack = 0
 54128  00D560  010D               	movlb	13	; () banked
 54129  00D562  0532               	decf	50,w,b	;volatile
 54130  00D564  A4D8               	btfss	status,2,c
 54131  00D566  D011               	goto	i2l373
 54132                           
 54133                           ; BSR set to: 13
 54134  00D568  5130               	movf	48,w,b	;volatile
 54135  00D56A  0B1F               	andlw	31
 54136  00D56C  0900               	iorlw	0
 54137  00D56E  A4D8               	btfss	status,2,c
 54138  00D570  D00C               	goto	i2l373
 54139                           
 54140                           ; BSR set to: 13
 54141                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 54142  00D572  0101               	movlb	1	; () banked
 54143  00D574  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 54144                           
 54145                           ; BSR set to: 1
 54146                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 54147  00D576  0E03               	movlw	3
 54148  00D578  010D               	movlb	13	; () banked
 54149  00D57A  1931               	xorwf	49,w,b	;volatile
 54150  00D57C  A4D8               	btfss	status,2,c
 54151  00D57E  D002               	goto	i2l372
 54152                           
 54153                           ; BSR set to: 13
 54154                           ;usb_device.c: 2806: RemoteWakeup = 1;
 54155  00D580  0E01               	movlw	1
 54156  00D582  D001               	goto	L60
 54157  00D584                     i2l372:
 54158                           
 54159                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 54160                           
 54161                           ; BSR set to: 1
 54162  00D584  0E00               	movlw	0
 54163  00D586                     L60:
 54164  00D586  0101               	movlb	1	; () banked
 54165  00D588  6F62               	movwf	_RemoteWakeup& (0+255),b	;volatile
 54166  00D58A                     i2l373:
 54167                           
 54168                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 54169                           
 54170                           ; BSR set to: 1
 54171  00D58A  010D               	movlb	13	; () banked
 54172  00D58C  5132               	movf	50,w,b	;volatile
 54173  00D58E  A4D8               	btfss	status,2,c
 54174  00D590  0012               	return	
 54175                           
 54176                           ; BSR set to: 13
 54177  00D592  5130               	movf	48,w,b	;volatile
 54178  00D594  0B1F               	andlw	31
 54179  00D596  0A02               	xorlw	2
 54180  00D598  A4D8               	btfss	status,2,c
 54181  00D59A  0012               	return	
 54182                           
 54183                           ; BSR set to: 13
 54184  00D59C  5134               	movf	52,w,b	;volatile
 54185  00D59E  0B0F               	andlw	15
 54186  00D5A0  0900               	iorlw	0
 54187  00D5A2  B4D8               	btfsc	status,2,c
 54188  00D5A4  0012               	return	
 54189                           
 54190                           ; BSR set to: 13
 54191  00D5A6  5134               	movf	52,w,b	;volatile
 54192  00D5A8  0B0F               	andlw	15
 54193  00D5AA  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 54194  00D5AC  0E03               	movlw	3
 54195  00D5AE  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 54196  00D5B0  0012               	return	
 54197                           
 54198                           ; BSR set to: 13
 54199  00D5B2  0E20               	movlw	32
 54200  00D5B4  185D               	xorwf	_USBDeviceState,w,c	;volatile
 54201  00D5B6  A4D8               	btfss	status,2,c
 54202  00D5B8  0012               	return	
 54203                           
 54204                           ; BSR set to: 13
 54205                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 54206  00D5BA  0101               	movlb	1	; () banked
 54207  00D5BC  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 54208                           
 54209                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 54210  00D5BE  010D               	movlb	13	; () banked
 54211  00D5C0  BF34               	btfsc	52,7,b	;volatile
 54212  00D5C2  D019               	goto	i2l375
 54213                           
 54214                           ; BSR set to: 13
 54215                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 54216  00D5C4  5134               	movf	52,w,b	;volatile
 54217  00D5C6  0B0F               	andlw	15
 54218  00D5C8  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 54219  00D5CA  5018               	movf	??_USBStdFeatureReqHandler,w,c
 54220  00D5CC  0D02               	mullw	2
 54221  00D5CE  0E15               	movlw	low _pBDTEntryOut
 54222  00D5D0  24F3               	addwf	prodl,w,c
 54223  00D5D2  6ED9               	movwf	fsr2l,c
 54224  00D5D4  0E01               	movlw	high _pBDTEntryOut
 54225  00D5D6  20F4               	addwfc	prodh,w,c
 54226  00D5D8  6EDA               	movwf	fsr2h,c
 54227  00D5DA  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 54228  00D5DE  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 54229                           
 54230                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 54231  00D5E2  5134               	movf	52,w,b	;volatile
 54232  00D5E4  0B0F               	andlw	15
 54233  00D5E6  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 54234  00D5E8  5018               	movf	??_USBStdFeatureReqHandler,w,c
 54235  00D5EA  0D01               	mullw	1
 54236  00D5EC  0E2E               	movlw	low _ep_data_out
 54237  00D5EE  24F3               	addwf	prodl,w,c
 54238  00D5F0  6ED9               	movwf	fsr2l,c
 54239  00D5F2  0E01               	movlw	high _ep_data_out
 54240  00D5F4  D018               	goto	L61
 54241  00D5F6                     i2l375:
 54242                           
 54243                           ; BSR set to: 13
 54244                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 54245                           
 54246                           ; BSR set to: 13
 54247  00D5F6  5134               	movf	52,w,b	;volatile
 54248  00D5F8  0B0F               	andlw	15
 54249  00D5FA  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 54250  00D5FC  5018               	movf	??_USBStdFeatureReqHandler,w,c
 54251  00D5FE  0D02               	mullw	2
 54252  00D600  0E0F               	movlw	low _pBDTEntryIn
 54253  00D602  24F3               	addwf	prodl,w,c
 54254  00D604  6ED9               	movwf	fsr2l,c
 54255  00D606  0E01               	movlw	high _pBDTEntryIn
 54256  00D608  20F4               	addwfc	prodh,w,c
 54257  00D60A  6EDA               	movwf	fsr2h,c
 54258  00D60C  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 54259  00D610  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 54260                           
 54261                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 54262  00D614  5134               	movf	52,w,b	;volatile
 54263  00D616  0B0F               	andlw	15
 54264  00D618  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 54265  00D61A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 54266  00D61C  0D01               	mullw	1
 54267  00D61E  0E31               	movlw	low _ep_data_in
 54268  00D620  24F3               	addwf	prodl,w,c
 54269  00D622  6ED9               	movwf	fsr2l,c
 54270  00D624  0E01               	movlw	high _ep_data_in
 54271  00D626                     L61:
 54272  00D626  20F4               	addwfc	prodh,w,c
 54273  00D628  6EDA               	movwf	fsr2h,c
 54274  00D62A  50DF               	movf	indf2,w,c
 54275  00D62C  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 54276                           
 54277                           ; BSR set to: 13
 54278                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 54279                           
 54280                           ; BSR set to: 13
 54281  00D62E  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 54282  00D630  D006               	goto	i2l377
 54283                           
 54284                           ; BSR set to: 13
 54285                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 54286  00D632  0EFB               	movlw	251
 54287  00D634  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 54288  00D636  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 54289  00D638  0EFF               	movlw	255
 54290  00D63A  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 54291  00D63C  D004               	goto	L62
 54292  00D63E                     i2l377:
 54293                           
 54294                           ; BSR set to: 13
 54295                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 54296                           
 54297                           ; BSR set to: 13
 54298  00D63E  0E04               	movlw	4
 54299  00D640  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 54300  00D642  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 54301  00D644  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 54302  00D646                     L62:
 54303  00D646  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 54304                           
 54305                           ; BSR set to: 13
 54306                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 54307                           
 54308                           ; BSR set to: 13
 54309  00D648  BF34               	btfsc	52,7,b	;volatile
 54310  00D64A  D00A               	goto	i2l379
 54311                           
 54312                           ; BSR set to: 13
 54313                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 54314  00D64C  5134               	movf	52,w,b	;volatile
 54315  00D64E  0B0F               	andlw	15
 54316  00D650  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 54317  00D652  5018               	movf	??_USBStdFeatureReqHandler,w,c
 54318  00D654  0D02               	mullw	2
 54319  00D656  0E15               	movlw	low _pBDTEntryOut
 54320  00D658  24F3               	addwf	prodl,w,c
 54321  00D65A  6ED9               	movwf	fsr2l,c
 54322  00D65C  0E01               	movlw	high _pBDTEntryOut
 54323  00D65E  D009               	goto	L63
 54324  00D660                     i2l379:
 54325                           
 54326                           ; BSR set to: 13
 54327                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 54328                           
 54329                           ; BSR set to: 13
 54330  00D660  5134               	movf	52,w,b	;volatile
 54331  00D662  0B0F               	andlw	15
 54332  00D664  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 54333  00D666  5018               	movf	??_USBStdFeatureReqHandler,w,c
 54334  00D668  0D02               	mullw	2
 54335  00D66A  0E0F               	movlw	low _pBDTEntryIn
 54336  00D66C  24F3               	addwf	prodl,w,c
 54337  00D66E  6ED9               	movwf	fsr2l,c
 54338  00D670  0E01               	movlw	high _pBDTEntryIn
 54339  00D672                     L63:
 54340  00D672  20F4               	addwfc	prodh,w,c
 54341  00D674  6EDA               	movwf	fsr2h,c
 54342  00D676  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 54343  00D67A  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 54344                           
 54345                           ; BSR set to: 13
 54346                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 54347                           
 54348                           ; BSR set to: 13
 54349  00D67E  0E03               	movlw	3
 54350  00D680  1931               	xorwf	49,w,b	;volatile
 54351  00D682  A4D8               	btfss	status,2,c
 54352  00D684  D02D               	goto	i2l381
 54353                           
 54354                           ; BSR set to: 13
 54355                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 54356  00D686  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 54357  00D68A  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 54358  00D68E  AEDF               	btfss	indf2,7,c
 54359  00D690  D01A               	goto	i2l384
 54360                           
 54361                           ; BSR set to: 13
 54362                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 54363  00D692  BF34               	btfsc	52,7,b	;volatile
 54364  00D694  D00A               	goto	i2l383
 54365                           
 54366                           ; BSR set to: 13
 54367                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 54368  00D696  5134               	movf	52,w,b	;volatile
 54369  00D698  0B0F               	andlw	15
 54370  00D69A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 54371  00D69C  5018               	movf	??_USBStdFeatureReqHandler,w,c
 54372  00D69E  0D01               	mullw	1
 54373  00D6A0  0E2E               	movlw	low _ep_data_out
 54374  00D6A2  24F3               	addwf	prodl,w,c
 54375  00D6A4  6ED9               	movwf	fsr2l,c
 54376  00D6A6  0E01               	movlw	high _ep_data_out
 54377  00D6A8  D00A               	goto	L64
 54378  00D6AA                     i2l383:
 54379                           
 54380                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 54381                           
 54382                           ; BSR set to: 1
 54383  00D6AA  010D               	movlb	13	; () banked
 54384  00D6AC  5134               	movf	52,w,b	;volatile
 54385  00D6AE  0B0F               	andlw	15
 54386  00D6B0  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 54387  00D6B2  5018               	movf	??_USBStdFeatureReqHandler,w,c
 54388  00D6B4  0D01               	mullw	1
 54389  00D6B6  0E31               	movlw	low _ep_data_in
 54390  00D6B8  24F3               	addwf	prodl,w,c
 54391  00D6BA  6ED9               	movwf	fsr2l,c
 54392  00D6BC  0E01               	movlw	high _ep_data_in
 54393  00D6BE                     L64:
 54394  00D6BE  20F4               	addwfc	prodh,w,c
 54395  00D6C0  6EDA               	movwf	fsr2h,c
 54396  00D6C2  0101               	movlb	1	; () banked
 54397  00D6C4  82DF               	bsf	indf2,1,c
 54398  00D6C6                     i2l384:
 54399                           
 54400                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 54401                           
 54402                           ; BSR set to: 1
 54403                           
 54404                           ; BSR set to: 1
 54405  00D6C6  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 54406  00D6CA  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 54407  00D6CE  0E00               	movlw	0
 54408  00D6D0  84DB               	bsf	plusw2,2,c
 54409                           
 54410                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 54411  00D6D2  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 54412  00D6D6  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 54413  00D6DA  0E00               	movlw	0
 54414  00D6DC  8EDB               	bsf	plusw2,7,c
 54415                           
 54416                           ;usb_device.c: 2878: }
 54417  00D6DE  0012               	return	
 54418  00D6E0                     i2l381:
 54419                           
 54420                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 54421  00D6E0  0E04               	movlw	4
 54422  00D6E2  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 54423  00D6E4  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 54424  00D6E6  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 54425  00D6E8  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 54426                           
 54427                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 54428  00D6EA  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 54429  00D6EE  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 54430  00D6F2  AEDF               	btfss	indf2,7,c
 54431  00D6F4  D01B               	goto	i2l386
 54432                           
 54433                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 54434  00D6F6  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 54435  00D6FA  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 54436  00D6FE  0E7F               	movlw	127
 54437  00D700  16DF               	andwf	indf2,f,c
 54438                           
 54439                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 54440  00D702  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 54441  00D706  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 54442  00D70A  0E00               	movlw	0
 54443  00D70C  8CDB               	bsf	plusw2,6,c
 54444                           
 54445                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 54446  00D70E  0E00               	movlw	0
 54447  00D710  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 54448  00D712  0E05               	movlw	5
 54449  00D714  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 54450  00D716  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 54451  00D71A  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 54452  00D71E  0E00               	movlw	0
 54453  00D720  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 54454  00D722  0E02               	movlw	2
 54455  00D724  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 54456  00D726  ECC3  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 54457                           
 54458                           ;usb_device.c: 2893: }
 54459  00D72A  D006               	goto	i2l387
 54460  00D72C                     i2l386:
 54461                           
 54462                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 54463  00D72C  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 54464  00D730  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 54465  00D734  0E00               	movlw	0
 54466  00D736  8CDB               	bsf	plusw2,6,c
 54467  00D738                     i2l387:
 54468                           
 54469                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 54470  00D738  0E04               	movlw	4
 54471  00D73A  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 54472  00D73C  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 54473  00D73E  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 54474  00D740  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 54475                           
 54476                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 54477  00D742  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 54478  00D744  D006               	goto	i2u1244_40
 54479  00D746  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 54480  00D74A  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 54481  00D74E  AEDF               	btfss	indf2,7,c
 54482  00D750  D030               	goto	i2l388
 54483  00D752                     i2u1244_40:
 54484                           
 54485                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 54486  00D752  010D               	movlb	13	; () banked
 54487  00D754  BF34               	btfsc	52,7,b	;volatile
 54488  00D756  D00A               	goto	i2l391
 54489                           
 54490                           ; BSR set to: 13
 54491                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 54492  00D758  5134               	movf	52,w,b	;volatile
 54493  00D75A  0B0F               	andlw	15
 54494  00D75C  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 54495  00D75E  5018               	movf	??_USBStdFeatureReqHandler,w,c
 54496  00D760  0D01               	mullw	1
 54497  00D762  0E2E               	movlw	low _ep_data_out
 54498  00D764  24F3               	addwf	prodl,w,c
 54499  00D766  6ED9               	movwf	fsr2l,c
 54500  00D768  0E01               	movlw	high _ep_data_out
 54501  00D76A  D00A               	goto	L65
 54502  00D76C                     i2l391:
 54503                           
 54504                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 54505                           
 54506                           ; BSR set to: 1
 54507  00D76C  010D               	movlb	13	; () banked
 54508  00D76E  5134               	movf	52,w,b	;volatile
 54509  00D770  0B0F               	andlw	15
 54510  00D772  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 54511  00D774  5018               	movf	??_USBStdFeatureReqHandler,w,c
 54512  00D776  0D01               	mullw	1
 54513  00D778  0E31               	movlw	low _ep_data_in
 54514  00D77A  24F3               	addwf	prodl,w,c
 54515  00D77C  6ED9               	movwf	fsr2l,c
 54516  00D77E  0E01               	movlw	high _ep_data_in
 54517  00D780                     L65:
 54518  00D780  20F4               	addwfc	prodh,w,c
 54519  00D782  6EDA               	movwf	fsr2h,c
 54520  00D784  0101               	movlb	1	; () banked
 54521  00D786  92DF               	bcf	indf2,1,c
 54522                           
 54523                           ; BSR set to: 1
 54524                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 54525                           
 54526                           ; BSR set to: 1
 54527  00D788  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 54528  00D78C  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 54529  00D790  0E3B               	movlw	59
 54530  00D792  16DF               	andwf	indf2,f,c
 54531                           
 54532                           ; BSR set to: 1
 54533                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 54534  00D794  0E00               	movlw	0
 54535  00D796  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 54536  00D798  0E05               	movlw	5
 54537  00D79A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 54538  00D79C  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 54539  00D7A0  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 54540  00D7A4  0E00               	movlw	0
 54541  00D7A6  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 54542  00D7A8  0E02               	movlw	2
 54543  00D7AA  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 54544  00D7AC  ECC3  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 54545                           
 54546                           ;usb_device.c: 2923: }
 54547  00D7B0  D006               	goto	i2l393
 54548  00D7B2                     i2l388:
 54549                           
 54550                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 54551  00D7B2  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 54552  00D7B6  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 54553  00D7BA  0E3B               	movlw	59
 54554  00D7BC  16DF               	andwf	indf2,f,c
 54555  00D7BE                     i2l393:
 54556                           
 54557                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 54558  00D7BE  010D               	movlb	13	; () banked
 54559  00D7C0  5134               	movf	52,w,b	;volatile
 54560  00D7C2  0B0F               	andlw	15
 54561  00D7C4  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 54562  00D7C6  5018               	movf	??_USBStdFeatureReqHandler,w,c
 54563  00D7C8  0D01               	mullw	1
 54564  00D7CA  0E26               	movlw	38
 54565  00D7CC  24F3               	addwf	prodl,w,c
 54566  00D7CE  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 54567  00D7D0  0E0F               	movlw	15
 54568  00D7D2  20F4               	addwfc	prodh,w,c
 54569  00D7D4  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 54570                           
 54571                           ; BSR set to: 13
 54572                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 54573  00D7D6  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 54574  00D7DA  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 54575  00D7DE  0EFE               	movlw	254
 54576  00D7E0  16DF               	andwf	indf2,f,c
 54577                           
 54578                           ; BSR set to: 13
 54579  00D7E2  0012               	return	
 54580  00D7E4                     __end_of_USBStdFeatureReqHandler:
 54581                           	opt stack 0
 54582                           tosu	equ	0xFFF
 54583                           tosh	equ	0xFFE
 54584                           tosl	equ	0xFFD
 54585                           pclatu	equ	0xFFB
 54586                           pclath	equ	0xFFA
 54587                           tblptru	equ	0xFF8
 54588                           tblptrh	equ	0xFF7
 54589                           tblptrl	equ	0xFF6
 54590                           tablat	equ	0xFF5
 54591                           prodh	equ	0xFF4
 54592                           prodl	equ	0xFF3
 54593                           intcon	equ	0xFF2
 54594                           indf0	equ	0xFEF
 54595                           postinc0	equ	0xFEE
 54596                           fsr0h	equ	0xFEA
 54597                           fsr0l	equ	0xFE9
 54598                           wreg	equ	0xFE8
 54599                           indf1	equ	0xFE7
 54600                           postinc1	equ	0xFE6
 54601                           postdec1	equ	0xFE5
 54602                           plusw1	equ	0xFE3
 54603                           fsr1h	equ	0xFE2
 54604                           fsr1l	equ	0xFE1
 54605                           indf2	equ	0xFDF
 54606                           postinc2	equ	0xFDE
 54607                           postdec2	equ	0xFDD
 54608                           plusw2	equ	0xFDB
 54609                           fsr2h	equ	0xFDA
 54610                           fsr2l	equ	0xFD9
 54611                           status	equ	0xFD8
 54612                           
 54613 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 54614 ;; Defined at:
 54615 ;;		line 54 in file "usb_events.c"
 54616 ;; Parameters:    Size  Location     Type
 54617 ;;  event           2   15[COMRAM] enum E6832
 54618 ;;  pdata           2   17[COMRAM] PTR void 
 54619 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 54620 ;;		 -> BDT(48), 
 54621 ;;  size            2   19[COMRAM] unsigned int 
 54622 ;; Auto vars:     Size  Location     Type
 54623 ;;		None
 54624 ;; Return value:  Size  Location     Type
 54625 ;;                  1    wreg      unsigned char 
 54626 ;; Registers used:
 54627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 54628 ;; Tracked objects:
 54629 ;;		On entry : 0/0
 54630 ;;		On exit  : 0/0
 54631 ;;		Unchanged: 0/0
 54632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54633 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54635 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54636 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54637 ;;Total ram usage:        8 bytes
 54638 ;; Hardware stack levels used:    1
 54639 ;; Hardware stack levels required when called:    3
 54640 ;; This function calls:
 54641 ;;		_APP_DeviceCustomHIDInitialize
 54642 ;;		_APP_DeviceMSDInitialize
 54643 ;;		_MSDTransferTerminated
 54644 ;;		_USBCheckHIDRequest
 54645 ;;		_USBCheckMSDRequest
 54646 ;;		i2_SYSTEM_Initialize
 54647 ;; This function is called by:
 54648 ;;		_USBDeviceTasks
 54649 ;;		_USBStdSetCfgHandler
 54650 ;;		_USBSuspend
 54651 ;;		_USBWakeFromSuspend
 54652 ;;		_USBCtrlTrfSetupHandler
 54653 ;;		_USBCheckStdRequest
 54654 ;;		_USBStdFeatureReqHandler
 54655 ;; This function uses a non-reentrant model
 54656 ;;
 54657                           
 54658                           	psect	text230
 54659  014386                     __ptext230:
 54660                           	opt stack 0
 54661  014386                     _USER_USB_CALLBACK_EVENT_HANDLER:
 54662                           	opt stack 13
 54663                           
 54664                           ;usb_events.c: 56: switch((int)event)
 54665                           
 54666                           ;incstack = 0
 54667  014386  D019               	goto	i2l816
 54668  014388                     
 54669                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 54670  014388  0E01               	movlw	1
 54671  01438A  ECB1  F0AA         	call	i2_SYSTEM_Initialize
 54672                           
 54673                           ;usb_events.c: 79: break;
 54674  01438E  0012               	return	
 54675  014390                     
 54676                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 54677  014390  0E02               	movlw	2
 54678  014392  ECB1  F0AA         	call	i2_SYSTEM_Initialize
 54679                           
 54680                           ;usb_events.c: 90: break;
 54681  014396  0012               	return	
 54682  014398                     
 54683                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 54684  014398  EC10  F0AF         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 54685                           
 54686                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 54687  01439C  ECFA  F0B1         	call	_APP_DeviceMSDInitialize	;wreg free
 54688                           
 54689                           ;usb_events.c: 100: break;
 54690                           
 54691                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 54692                           
 54693                           ;usb_events.c: 97: break;
 54694  0143A0  0012               	return	
 54695  0143A2                     
 54696                           ;usb_events.c: 105: USBCheckHIDRequest();
 54697  0143A2  EC2A  F093         	call	_USBCheckHIDRequest	;wreg free
 54698                           
 54699                           ;usb_events.c: 108: USBCheckMSDRequest();
 54700  0143A6  EC9D  F098         	call	_USBCheckMSDRequest	;wreg free
 54701                           
 54702                           ;usb_events.c: 112: break;
 54703                           
 54704                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 54705                           
 54706                           ;usb_events.c: 109: break;
 54707  0143AA  0012               	return	
 54708  0143AC                     
 54709                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 54710  0143AC  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 54711  0143B0  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 54712  0143B4  EC08  F0AA         	call	_MSDTransferTerminated	;wreg free
 54713                           
 54714                           ;usb_events.c: 129: }
 54715                           
 54716                           ;usb_events.c: 128: break;
 54717                           
 54718                           ;usb_events.c: 127: default:
 54719                           
 54720                           ;usb_events.c: 125: break;
 54721  0143B8  0012               	return	
 54722  0143BA                     i2l816:
 54723  0143BA  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 54724  0143BE  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 54725                           
 54726                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 54727                           ; Switch size 1, requested type "space"
 54728                           ; Number of cases is 2, Range of values is 0 to 127
 54729                           ; switch strategies available:
 54730                           ; Name         Instructions Cycles
 54731                           ; simple_byte            7     4 (average)
 54732                           ;	Chosen strategy is simple_byte
 54733  0143C2  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 54734  0143C4  0A00               	xorlw	0	; case 0
 54735  0143C6  B4D8               	btfsc	status,2,c
 54736  0143C8  D004               	goto	i2l20727
 54737  0143CA  0A7F               	xorlw	127	; case 127
 54738  0143CC  A4D8               	btfss	status,2,c
 54739  0143CE  0012               	return	
 54740  0143D0  D01A               	goto	i2l20729
 54741  0143D2                     i2l20727:
 54742                           
 54743                           ; Switch size 1, requested type "space"
 54744                           ; Number of cases is 8, Range of values is 1 to 117
 54745                           ; switch strategies available:
 54746                           ; Name         Instructions Cycles
 54747                           ; simple_byte           25    13 (average)
 54748                           ;	Chosen strategy is simple_byte
 54749  0143D2  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 54750  0143D4  0A01               	xorlw	1	; case 1
 54751  0143D6  B4D8               	btfsc	status,2,c
 54752  0143D8  D7DF               	goto	i2l822
 54753  0143DA  0A03               	xorlw	3	; case 2
 54754  0143DC  B4D8               	btfsc	status,2,c
 54755  0143DE  0012               	return	
 54756  0143E0  0A01               	xorlw	1	; case 3
 54757  0143E2  B4D8               	btfsc	status,2,c
 54758  0143E4  D7DE               	goto	i2l824
 54759  0143E6  0A06               	xorlw	6	; case 5
 54760  0143E8  B4D8               	btfsc	status,2,c
 54761  0143EA  D7E0               	goto	i2l826
 54762  0143EC  0A77               	xorlw	119	; case 114
 54763  0143EE  B4D8               	btfsc	status,2,c
 54764  0143F0  0012               	return	
 54765  0143F2  0A01               	xorlw	1	; case 115
 54766  0143F4  B4D8               	btfsc	status,2,c
 54767  0143F6  0012               	return	
 54768  0143F8  0A07               	xorlw	7	; case 116
 54769  0143FA  B4D8               	btfsc	status,2,c
 54770  0143FC  D7C9               	goto	i2l821
 54771  0143FE  0A01               	xorlw	1	; case 117
 54772  014400  A4D8               	btfss	status,2,c
 54773  014402  0012               	return	
 54774  014404  D7C1               	goto	i2l820
 54775  014406                     i2l20729:
 54776                           
 54777                           ; Switch size 1, requested type "space"
 54778                           ; Number of cases is 1, Range of values is 255 to 255
 54779                           ; switch strategies available:
 54780                           ; Name         Instructions Cycles
 54781                           ; simple_byte            4     3 (average)
 54782                           ;	Chosen strategy is simple_byte
 54783  014406  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 54784  014408  0AFF               	xorlw	255	; case 255
 54785  01440A  0012               	return	
 54786  01440C                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 54787                           	opt stack 0
 54788                           tosu	equ	0xFFF
 54789                           tosh	equ	0xFFE
 54790                           tosl	equ	0xFFD
 54791                           pclatu	equ	0xFFB
 54792                           pclath	equ	0xFFA
 54793                           tblptru	equ	0xFF8
 54794                           tblptrh	equ	0xFF7
 54795                           tblptrl	equ	0xFF6
 54796                           tablat	equ	0xFF5
 54797                           prodh	equ	0xFF4
 54798                           prodl	equ	0xFF3
 54799                           intcon	equ	0xFF2
 54800                           indf0	equ	0xFEF
 54801                           postinc0	equ	0xFEE
 54802                           fsr0h	equ	0xFEA
 54803                           fsr0l	equ	0xFE9
 54804                           wreg	equ	0xFE8
 54805                           indf1	equ	0xFE7
 54806                           postinc1	equ	0xFE6
 54807                           postdec1	equ	0xFE5
 54808                           plusw1	equ	0xFE3
 54809                           fsr1h	equ	0xFE2
 54810                           fsr1l	equ	0xFE1
 54811                           indf2	equ	0xFDF
 54812                           postinc2	equ	0xFDE
 54813                           postdec2	equ	0xFDD
 54814                           plusw2	equ	0xFDB
 54815                           fsr2h	equ	0xFDA
 54816                           fsr2l	equ	0xFD9
 54817                           status	equ	0xFD8
 54818                           
 54819 ;; *************** function i2_SYSTEM_Initialize *****************
 54820 ;; Defined at:
 54821 ;;		line 39 in file "system.c"
 54822 ;; Parameters:    Size  Location     Type
 54823 ;;  state           1    wreg     enum E6623
 54824 ;; Auto vars:     Size  Location     Type
 54825 ;;  state           1    4[COMRAM] enum E6623
 54826 ;;  SYSTEM_Initi    2    2[COMRAM] unsigned int 
 54827 ;;  SYSTEM_Initi    2    0[COMRAM] unsigned int 
 54828 ;; Return value:  Size  Location     Type
 54829 ;;                  1    wreg      void 
 54830 ;; Registers used:
 54831 ;;		wreg, status,2, status,0
 54832 ;; Tracked objects:
 54833 ;;		On entry : 0/0
 54834 ;;		On exit  : 0/0
 54835 ;;		Unchanged: 0/0
 54836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54838 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54840 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54841 ;;Total ram usage:        5 bytes
 54842 ;; Hardware stack levels used:    1
 54843 ;; This function calls:
 54844 ;;		Nothing
 54845 ;; This function is called by:
 54846 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 54847 ;; This function uses a non-reentrant model
 54848 ;;
 54849                           
 54850                           	psect	text231
 54851  015562                     __ptext231:
 54852                           	opt stack 0
 54853  015562                     i2_SYSTEM_Initialize:
 54854                           	opt stack 15
 54855                           
 54856                           ;incstack = 0
 54857                           ;i2SYSTEM_Initialize@state stored from wreg
 54858  015562  6E05               	movwf	i2SYSTEM_Initialize@state,c
 54859                           
 54860                           ;system.c: 41: switch(state)
 54861  015564  D01D               	goto	i2l897
 54862  015566                     
 54863                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 54864  015566  0E02               	movlw	2
 54865  015568  6E02               	movwf	i2SYSTEM_Initialize@pll_startup_counter+1,c
 54866  01556A  0E58               	movlw	88
 54867  01556C  6E01               	movwf	i2SYSTEM_Initialize@pll_startup_counter,c
 54868                           
 54869                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 54870  01556E  8C9B               	bsf	3995,6,c	;volatile
 54871  015570                     i2l13323:
 54872  015570  0601               	decf	i2SYSTEM_Initialize@pll_startup_counter,f,c
 54873  015572  A0D8               	btfss	status,0,c
 54874  015574  0602               	decf	i2SYSTEM_Initialize@pll_startup_counter+1,f,c
 54875  015576  2801               	incf	i2SYSTEM_Initialize@pll_startup_counter,w,c
 54876  015578  E1FB               	bnz	i2l13323
 54877  01557A  2802               	incf	i2SYSTEM_Initialize@pll_startup_counter+1,w,c
 54878  01557C  B4D8               	btfsc	status,2,c
 54879  01557E  0012               	return	
 54880  015580  D7F7               	goto	i2l900
 54881  015582                     
 54882                           ;system.c: 78: OSCCON = 0x70;
 54883  015582  0E70               	movlw	112
 54884  015584  6ED3               	movwf	4051,c	;volatile
 54885                           
 54886                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 54887  015586  0E03               	movlw	3
 54888  015588  6E04               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3152+1,c
 54889  01558A  0E20               	movlw	32
 54890  01558C  6E03               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3152,c
 54891  01558E                     i2l13327:
 54892  01558E  0603               	decf	i2SYSTEM_Initialize@pll_startup_counter_3152,f,c
 54893  015590  A0D8               	btfss	status,0,c
 54894  015592  0604               	decf	i2SYSTEM_Initialize@pll_startup_counter_3152+1,f,c
 54895  015594  2803               	incf	i2SYSTEM_Initialize@pll_startup_counter_3152,w,c
 54896  015596  E1FB               	bnz	i2l13327
 54897  015598  2804               	incf	i2SYSTEM_Initialize@pll_startup_counter_3152+1,w,c
 54898  01559A  B4D8               	btfsc	status,2,c
 54899  01559C  0012               	return	
 54900  01559E  D7F7               	goto	i2l906
 54901  0155A0                     i2l897:
 54902  0155A0  5005               	movf	i2SYSTEM_Initialize@state,w,c
 54903                           
 54904                           ; Switch size 1, requested type "space"
 54905                           ; Number of cases is 3, Range of values is 0 to 2
 54906                           ; switch strategies available:
 54907                           ; Name         Instructions Cycles
 54908                           ; simple_byte           10     6 (average)
 54909                           ;	Chosen strategy is simple_byte
 54910  0155A2  0A00               	xorlw	0	; case 0
 54911  0155A4  B4D8               	btfsc	status,2,c
 54912  0155A6  D7DF               	goto	i2l898
 54913  0155A8  0A01               	xorlw	1	; case 1
 54914  0155AA  B4D8               	btfsc	status,2,c
 54915  0155AC  0012               	return	
 54916  0155AE  0A03               	xorlw	3	; case 2
 54917  0155B0  A4D8               	btfss	status,2,c
 54918  0155B2  0012               	return	
 54919  0155B4  D7E6               	goto	i2l904
 54920  0155B6                     __end_ofi2_SYSTEM_Initialize:
 54921                           	opt stack 0
 54922                           tosu	equ	0xFFF
 54923                           tosh	equ	0xFFE
 54924                           tosl	equ	0xFFD
 54925                           pclatu	equ	0xFFB
 54926                           pclath	equ	0xFFA
 54927                           tblptru	equ	0xFF8
 54928                           tblptrh	equ	0xFF7
 54929                           tblptrl	equ	0xFF6
 54930                           tablat	equ	0xFF5
 54931                           prodh	equ	0xFF4
 54932                           prodl	equ	0xFF3
 54933                           intcon	equ	0xFF2
 54934                           indf0	equ	0xFEF
 54935                           postinc0	equ	0xFEE
 54936                           fsr0h	equ	0xFEA
 54937                           fsr0l	equ	0xFE9
 54938                           wreg	equ	0xFE8
 54939                           indf1	equ	0xFE7
 54940                           postinc1	equ	0xFE6
 54941                           postdec1	equ	0xFE5
 54942                           plusw1	equ	0xFE3
 54943                           fsr1h	equ	0xFE2
 54944                           fsr1l	equ	0xFE1
 54945                           indf2	equ	0xFDF
 54946                           postinc2	equ	0xFDE
 54947                           postdec2	equ	0xFDD
 54948                           plusw2	equ	0xFDB
 54949                           fsr2h	equ	0xFDA
 54950                           fsr2l	equ	0xFD9
 54951                           status	equ	0xFD8
 54952                           
 54953 ;; *************** function _USBCheckMSDRequest *****************
 54954 ;; Defined at:
 54955 ;;		line 218 in file "usb_device_msd.c"
 54956 ;; Parameters:    Size  Location     Type
 54957 ;;		None
 54958 ;; Auto vars:     Size  Location     Type
 54959 ;;		None
 54960 ;; Return value:  Size  Location     Type
 54961 ;;                  1    wreg      void 
 54962 ;; Registers used:
 54963 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 54964 ;; Tracked objects:
 54965 ;;		On entry : 0/0
 54966 ;;		On exit  : 0/0
 54967 ;;		Unchanged: 0/0
 54968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54970 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54972 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54973 ;;Total ram usage:        4 bytes
 54974 ;; Hardware stack levels used:    1
 54975 ;; Hardware stack levels required when called:    1
 54976 ;; This function calls:
 54977 ;;		i2_USBTransferOnePacket
 54978 ;; This function is called by:
 54979 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 54980 ;; This function uses a non-reentrant model
 54981 ;;
 54982                           
 54983                           	psect	text232
 54984  01313A                     __ptext232:
 54985                           	opt stack 0
 54986  01313A                     _USBCheckMSDRequest:
 54987                           	opt stack 14
 54988                           
 54989                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 54990                           
 54991                           ;incstack = 0
 54992  01313A  010D               	movlb	13	; () banked
 54993  01313C  5130               	movf	48,w,b	;volatile
 54994  01313E  0B1F               	andlw	31
 54995  013140  06E8               	decf	wreg,f,c
 54996  013142  A4D8               	btfss	status,2,c
 54997  013144  0012               	return	
 54998                           
 54999                           ; BSR set to: 13
 55000                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 55001                           
 55002                           ; BSR set to: 13
 55003                           
 55004                           ; BSR set to: 13
 55005                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 55006  013146  5134               	movf	52,w,b	;volatile
 55007  013148  A4D8               	btfss	status,2,c
 55008  01314A  0012               	return	
 55009  01314C  D04E               	goto	i2l545
 55010  01314E                     
 55011                           ; BSR set to: 13
 55012                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 55013                           
 55014                           ; BSR set to: 13
 55015  01314E  5132               	movf	50,w,b	;volatile
 55016  013150  1133               	iorwf	51,w,b	;volatile
 55017  013152  A4D8               	btfss	status,2,c
 55018  013154  0012               	return	
 55019                           
 55020                           ; BSR set to: 13
 55021  013156  5136               	movf	54,w,b	;volatile
 55022  013158  1137               	iorwf	55,w,b	;volatile
 55023  01315A  A4D8               	btfss	status,2,c
 55024  01315C  0012               	return	
 55025                           
 55026                           ; BSR set to: 13
 55027                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 55028                           
 55029                           ; BSR set to: 13
 55030                           
 55031                           ; BSR set to: 13
 55032                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 55033  01315E  0E00               	movlw	0
 55034  013160  0101               	movlb	1	; () banked
 55035  013162  6F57               	movwf	_MSD_State& (0+255),b
 55036                           
 55037                           ; BSR set to: 1
 55038                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 55039  013164  6956               	setf	_MSDCommandState& (0+255),b
 55040                           
 55041                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 55042  013166  0E00               	movlw	0
 55043  013168  6F55               	movwf	_MSDReadState& (0+255),b
 55044                           
 55045                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 55046  01316A  0E00               	movlw	0
 55047  01316C  6F54               	movwf	_MSDWriteState& (0+255),b
 55048                           
 55049                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 55050  01316E  0E01               	movlw	1
 55051  013170  6F4F               	movwf	_MSDCBWValid& (0+255),b
 55052                           
 55053                           ; BSR set to: 1
 55054                           
 55055                           ; BSR set to: 1
 55056                           
 55057                           ; BSR set to: 1
 55058                           
 55059                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 55060  013172  C119  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2534
 55061  013176  C11A  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2534+1
 55062                           
 55063                           ; BSR set to: 1
 55064  01317A  500C               	movf	_USBCheckMSDRequest$2534,w,c
 55065  01317C  100D               	iorwf	_USBCheckMSDRequest$2534+1,w,c
 55066  01317E  B4D8               	btfsc	status,2,c
 55067  013180  D00A               	goto	i2u1073_40
 55068                           
 55069                           ; BSR set to: 1
 55070                           
 55071                           ; BSR set to: 1
 55072                           
 55073                           ; BSR set to: 1
 55074                           
 55075                           ; BSR set to: 1
 55076  013182  C119  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2535
 55077  013186  C11A  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2535+1
 55078                           
 55079                           ; BSR set to: 1
 55080                           
 55081                           ; BSR set to: 1
 55082  01318A  C00E  FFD9         	movff	_USBCheckMSDRequest$2535,fsr2l
 55083  01318E  C00F  FFDA         	movff	_USBCheckMSDRequest$2535+1,fsr2h
 55084  013192  BEDF               	btfsc	indf2,7,c
 55085  013194  D00F               	goto	i2l550
 55086  013196                     i2u1073_40:
 55087                           
 55088                           ; BSR set to: 1
 55089                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 55090                           
 55091                           ; BSR set to: 1
 55092  013196  0E00               	movlw	0
 55093  013198  6E01               	movwf	i2USBTransferOnePacket@dir,c
 55094  01319A  0E40               	movlw	64
 55095  01319C  6E02               	movwf	i2USBTransferOnePacket@data,c
 55096  01319E  0E0D               	movlw	13
 55097  0131A0  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 55098  0131A2  0E40               	movlw	64
 55099  0131A4  6E04               	movwf	i2USBTransferOnePacket@len,c
 55100  0131A6  0E02               	movlw	2
 55101  0131A8  EC9C  F08C         	call	i2_USBTransferOnePacket
 55102  0131AC  C001  F140         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 55103  0131B0  C002  F141         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 55104  0131B4                     i2l550:
 55105                           
 55106                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 55107  0131B4  0E80               	movlw	128
 55108  0131B6  0101               	movlb	1	; () banked
 55109  0131B8  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 55110                           
 55111                           ;usb_device_msd.c: 263: break;
 55112  0131BA  0012               	return	
 55113  0131BC                     
 55114                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 55115                           
 55116                           ; BSR set to: 1
 55117  0131BC  010D               	movlb	13	; () banked
 55118  0131BE  5132               	movf	50,w,b	;volatile
 55119  0131C0  1133               	iorwf	51,w,b	;volatile
 55120  0131C2  A4D8               	btfss	status,2,c
 55121  0131C4  0012               	return	
 55122                           
 55123                           ; BSR set to: 13
 55124  0131C6  0536               	decf	54,w,b	;volatile
 55125  0131C8  1137               	iorwf	55,w,b	;volatile
 55126  0131CA  A4D8               	btfss	status,2,c
 55127  0131CC  0012               	return	
 55128                           
 55129                           ; BSR set to: 13
 55130                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 55131                           
 55132                           ; BSR set to: 13
 55133                           
 55134                           ; BSR set to: 13
 55135                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 55136  0131CE  0E00               	movlw	0
 55137  0131D0  6F38               	movwf	56,b	;volatile
 55138                           
 55139                           ; BSR set to: 13
 55140                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 55141  0131D2  0E38               	movlw	56
 55142  0131D4  0101               	movlb	1	; () banked
 55143  0131D6  6F09               	movwf	_inPipes& (0+255),b	;volatile
 55144  0131D8  0E0D               	movlw	13
 55145  0131DA  6F0A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 55146                           
 55147                           ; BSR set to: 1
 55148  0131DC  0E00               	movlw	0
 55149  0131DE  6F0E               	movwf	(_inPipes+5)& (0+255),b	;volatile
 55150  0131E0  0E01               	movlw	1
 55151  0131E2  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 55152                           
 55153                           ; BSR set to: 1
 55154  0131E4  0EC1               	movlw	193
 55155  0131E6  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 55156                           
 55157                           ; BSR set to: 1
 55158                           ;usb_device_msd.c: 278: }
 55159                           
 55160                           ;usb_device_msd.c: 277: break;
 55161  0131E8  0012               	return	
 55162  0131EA                     i2l545:
 55163                           
 55164                           ; BSR set to: 1
 55165  0131EA  010D               	movlb	13	; () banked
 55166  0131EC  5131               	movf	49,w,b	;volatile
 55167                           
 55168                           ; Switch size 1, requested type "space"
 55169                           ; Number of cases is 2, Range of values is 254 to 255
 55170                           ; switch strategies available:
 55171                           ; Name         Instructions Cycles
 55172                           ; simple_byte            7     4 (average)
 55173                           ;	Chosen strategy is simple_byte
 55174  0131EE  0AFE               	xorlw	254	; case 254
 55175  0131F0  B4D8               	btfsc	status,2,c
 55176  0131F2  D7E4               	goto	i2l562
 55177  0131F4  0A01               	xorlw	1	; case 255
 55178  0131F6  A4D8               	btfss	status,2,c
 55179  0131F8  0012               	return	
 55180  0131FA  D7A9               	goto	i2l546
 55181  0131FC                     __end_of_USBCheckMSDRequest:
 55182                           	opt stack 0
 55183                           tosu	equ	0xFFF
 55184                           tosh	equ	0xFFE
 55185                           tosl	equ	0xFFD
 55186                           pclatu	equ	0xFFB
 55187                           pclath	equ	0xFFA
 55188                           tblptru	equ	0xFF8
 55189                           tblptrh	equ	0xFF7
 55190                           tblptrl	equ	0xFF6
 55191                           tablat	equ	0xFF5
 55192                           prodh	equ	0xFF4
 55193                           prodl	equ	0xFF3
 55194                           intcon	equ	0xFF2
 55195                           indf0	equ	0xFEF
 55196                           postinc0	equ	0xFEE
 55197                           fsr0h	equ	0xFEA
 55198                           fsr0l	equ	0xFE9
 55199                           wreg	equ	0xFE8
 55200                           indf1	equ	0xFE7
 55201                           postinc1	equ	0xFE6
 55202                           postdec1	equ	0xFE5
 55203                           plusw1	equ	0xFE3
 55204                           fsr1h	equ	0xFE2
 55205                           fsr1l	equ	0xFE1
 55206                           indf2	equ	0xFDF
 55207                           postinc2	equ	0xFDE
 55208                           postdec2	equ	0xFDD
 55209                           plusw2	equ	0xFDB
 55210                           fsr2h	equ	0xFDA
 55211                           fsr2l	equ	0xFD9
 55212                           status	equ	0xFD8
 55213                           
 55214 ;; *************** function _USBCheckHIDRequest *****************
 55215 ;; Defined at:
 55216 ;;		line 153 in file "usb_device_hid.c"
 55217 ;; Parameters:    Size  Location     Type
 55218 ;;		None
 55219 ;; Auto vars:     Size  Location     Type
 55220 ;;		None
 55221 ;; Return value:  Size  Location     Type
 55222 ;;                  1    wreg      void 
 55223 ;; Registers used:
 55224 ;;		wreg, status,2, status,0
 55225 ;; Tracked objects:
 55226 ;;		On entry : 0/0
 55227 ;;		On exit  : 0/0
 55228 ;;		Unchanged: 0/0
 55229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55234 ;;Total ram usage:        0 bytes
 55235 ;; Hardware stack levels used:    1
 55236 ;; This function calls:
 55237 ;;		Nothing
 55238 ;; This function is called by:
 55239 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 55240 ;; This function uses a non-reentrant model
 55241 ;;
 55242                           
 55243                           	psect	text233
 55244  012654                     __ptext233:
 55245                           	opt stack 0
 55246  012654                     _USBCheckHIDRequest:
 55247                           	opt stack 15
 55248                           
 55249                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 55250                           
 55251                           ;incstack = 0
 55252  012654  010D               	movlb	13	; () banked
 55253  012656  5130               	movf	48,w,b	;volatile
 55254  012658  0B1F               	andlw	31
 55255  01265A  06E8               	decf	wreg,f,c
 55256  01265C  A4D8               	btfss	status,2,c
 55257  01265E  0012               	return	
 55258                           
 55259                           ; BSR set to: 13
 55260                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 55261                           
 55262                           ; BSR set to: 13
 55263                           
 55264                           ; BSR set to: 13
 55265  012660  5134               	movf	52,w,b	;volatile
 55266  012662  A4D8               	btfss	status,2,c
 55267  012664  0012               	return	
 55268                           
 55269                           ; BSR set to: 13
 55270                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 55271                           
 55272                           ; BSR set to: 13
 55273                           
 55274                           ; BSR set to: 13
 55275  012666  0E06               	movlw	6
 55276  012668  1931               	xorwf	49,w,b	;volatile
 55277  01266A  B4D8               	btfsc	status,2,c
 55278  01266C  D01A               	goto	i2l425
 55279  01266E  D022               	goto	i2l428
 55280  012670                     
 55281                           ; BSR set to: 13
 55282                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 55283                           
 55284                           ; BSR set to: 13
 55285  012670  0101               	movlb	1	; () banked
 55286  012672  05C3               	decf	_USBActiveConfiguration& (0+255),w,b	;volatile
 55287  012674  A4D8               	btfss	status,2,c
 55288  012676  D01E               	goto	i2l428
 55289                           
 55290                           ; BSR set to: 1
 55291                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 55292  012678  0E20               	movlw	low (_configDescriptor1+18)
 55293  01267A  6F09               	movwf	_inPipes& (0+255),b	;volatile
 55294  01267C  0EA1               	movlw	high (_configDescriptor1+18)
 55295  01267E  6F0A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 55296                           
 55297                           ; BSR set to: 1
 55298  012680  0E00               	movlw	0
 55299  012682  6F0E               	movwf	(_inPipes+5)& (0+255),b	;volatile
 55300  012684  0E09               	movlw	9
 55301  012686  D00B               	goto	L66
 55302  012688                     i2l12959:
 55303                           
 55304                           ; BSR set to: 1
 55305  012688  0EC0               	movlw	192
 55306  01268A  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 55307                           
 55308                           ; BSR set to: 1
 55309                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 55310  01268C  D013               	goto	i2l428
 55311  01268E                     
 55312                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 55313                           
 55314                           ; BSR set to: 1
 55315  01268E  0ED4               	movlw	low _hid_rpt01
 55316  012690  0101               	movlb	1	; () banked
 55317  012692  6F09               	movwf	_inPipes& (0+255),b	;volatile
 55318  012694  0EA1               	movlw	high _hid_rpt01
 55319  012696  6F0A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 55320                           
 55321                           ; BSR set to: 1
 55322  012698  0E00               	movlw	0
 55323  01269A  6F0E               	movwf	(_inPipes+5)& (0+255),b	;volatile
 55324  01269C  0E1D               	movlw	29
 55325  01269E                     L66:
 55326  01269E  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 55327  0126A0  D7F3               	goto	i2l12959
 55328  0126A2                     i2l425:
 55329                           
 55330                           ; BSR set to: 1
 55331  0126A2  010D               	movlb	13	; () banked
 55332  0126A4  5133               	movf	51,w,b	;volatile
 55333                           
 55334                           ; Switch size 1, requested type "space"
 55335                           ; Number of cases is 3, Range of values is 33 to 35
 55336                           ; switch strategies available:
 55337                           ; Name         Instructions Cycles
 55338                           ; simple_byte           10     6 (average)
 55339                           ;	Chosen strategy is simple_byte
 55340  0126A6  0A21               	xorlw	33	; case 33
 55341  0126A8  B4D8               	btfsc	status,2,c
 55342  0126AA  D7E2               	goto	i2l426
 55343  0126AC  0A03               	xorlw	3	; case 34
 55344  0126AE  B4D8               	btfsc	status,2,c
 55345  0126B0  D7EE               	goto	i2l429
 55346  0126B2  0A01               	xorlw	1	; case 35
 55347  0126B4                     i2l428:
 55348                           
 55349                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 55350                           
 55351                           ; BSR set to: 13
 55352                           
 55353                           ; BSR set to: 13
 55354  0126B4  010D               	movlb	13	; () banked
 55355  0126B6  3930               	swapf	48,w,b	;volatile
 55356  0126B8  32E8               	rrcf	wreg,f,c
 55357  0126BA  0B03               	andlw	3
 55358  0126BC  06E8               	decf	wreg,f,c
 55359  0126BE  A4D8               	btfss	status,2,c
 55360  0126C0  0012               	return	
 55361  0126C2  D024               	goto	i2l432
 55362  0126C4                     
 55363                           ; BSR set to: 13
 55364                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 55365                           
 55366                           ; BSR set to: 13
 55367  0126C4  0EC2               	movlw	low _idle_rate
 55368  0126C6  0101               	movlb	1	; () banked
 55369  0126C8  6F09               	movwf	_inPipes& (0+255),b	;volatile
 55370  0126CA  0E01               	movlw	high _idle_rate
 55371  0126CC  6F0A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 55372                           
 55373                           ; BSR set to: 1
 55374  0126CE  0E00               	movlw	0
 55375  0126D0  6F0E               	movwf	(_inPipes+5)& (0+255),b	;volatile
 55376  0126D2  0E01               	movlw	1
 55377  0126D4  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 55378                           
 55379                           ; BSR set to: 1
 55380  0126D6  0EC1               	movlw	193
 55381  0126D8  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 55382                           
 55383                           ;usb_device_hid.c: 223: break;
 55384  0126DA  0012               	return	
 55385  0126DC                     
 55386                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 55387                           
 55388                           ; BSR set to: 1
 55389  0126DC  0E80               	movlw	128
 55390  0126DE  0101               	movlb	1	; () banked
 55391  0126E0  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 55392                           
 55393                           ; BSR set to: 1
 55394                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 55395  0126E2  CD33 F1C2          	movff	3379,_idle_rate	;volatile
 55396                           
 55397                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 55398  0126E6  0012               	return	
 55399  0126E8                     
 55400                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 55401                           
 55402                           ; BSR set to: 1
 55403  0126E8  0EC1               	movlw	low _active_protocol
 55404  0126EA  0101               	movlb	1	; () banked
 55405  0126EC  6F09               	movwf	_inPipes& (0+255),b	;volatile
 55406  0126EE  0E01               	movlw	high _active_protocol
 55407  0126F0  6F0A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 55408                           
 55409                           ; BSR set to: 1
 55410  0126F2  0E00               	movlw	0
 55411  0126F4  6F0E               	movwf	(_inPipes+5)& (0+255),b	;volatile
 55412  0126F6  0E01               	movlw	1
 55413  0126F8  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 55414                           
 55415                           ; BSR set to: 1
 55416  0126FA  0E81               	movlw	129
 55417  0126FC  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 55418                           
 55419                           ;usb_device_hid.c: 234: break;
 55420  0126FE  0012               	return	
 55421  012700                     
 55422                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 55423                           
 55424                           ; BSR set to: 1
 55425  012700  0E80               	movlw	128
 55426  012702  0101               	movlb	1	; () banked
 55427  012704  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 55428                           
 55429                           ; BSR set to: 1
 55430                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 55431  012706  CD32 F1C1          	movff	3378,_active_protocol	;volatile
 55432                           
 55433                           ; BSR set to: 1
 55434                           ;usb_device_hid.c: 239: }
 55435                           
 55436                           ;usb_device_hid.c: 238: break;
 55437  01270A  0012               	return	
 55438  01270C                     i2l432:
 55439                           
 55440                           ; BSR set to: 1
 55441  01270C  010D               	movlb	13	; () banked
 55442  01270E  5131               	movf	49,w,b	;volatile
 55443                           
 55444                           ; Switch size 1, requested type "space"
 55445                           ; Number of cases is 6, Range of values is 1 to 11
 55446                           ; switch strategies available:
 55447                           ; Name         Instructions Cycles
 55448                           ; simple_byte           19    10 (average)
 55449                           ;	Chosen strategy is simple_byte
 55450  012710  0A01               	xorlw	1	; case 1
 55451  012712  B4D8               	btfsc	status,2,c
 55452  012714  0012               	return	
 55453  012716  0A03               	xorlw	3	; case 2
 55454  012718  B4D8               	btfsc	status,2,c
 55455  01271A  D7D4               	goto	i2l436
 55456  01271C  0A01               	xorlw	1	; case 3
 55457  01271E  B4D8               	btfsc	status,2,c
 55458  012720  D7E3               	goto	i2l438
 55459  012722  0A0A               	xorlw	10	; case 9
 55460  012724  B4D8               	btfsc	status,2,c
 55461  012726  0012               	return	
 55462  012728  0A03               	xorlw	3	; case 10
 55463  01272A  B4D8               	btfsc	status,2,c
 55464  01272C  D7D7               	goto	i2l437
 55465  01272E  0A01               	xorlw	1	; case 11
 55466  012730  A4D8               	btfss	status,2,c
 55467  012732  0012               	return	
 55468  012734  D7E5               	goto	i2l439
 55469  012736                     __end_of_USBCheckHIDRequest:
 55470                           	opt stack 0
 55471                           tosu	equ	0xFFF
 55472                           tosh	equ	0xFFE
 55473                           tosl	equ	0xFFD
 55474                           pclatu	equ	0xFFB
 55475                           pclath	equ	0xFFA
 55476                           tblptru	equ	0xFF8
 55477                           tblptrh	equ	0xFF7
 55478                           tblptrl	equ	0xFF6
 55479                           tablat	equ	0xFF5
 55480                           prodh	equ	0xFF4
 55481                           prodl	equ	0xFF3
 55482                           intcon	equ	0xFF2
 55483                           indf0	equ	0xFEF
 55484                           postinc0	equ	0xFEE
 55485                           fsr0h	equ	0xFEA
 55486                           fsr0l	equ	0xFE9
 55487                           wreg	equ	0xFE8
 55488                           indf1	equ	0xFE7
 55489                           postinc1	equ	0xFE6
 55490                           postdec1	equ	0xFE5
 55491                           plusw1	equ	0xFE3
 55492                           fsr1h	equ	0xFE2
 55493                           fsr1l	equ	0xFE1
 55494                           indf2	equ	0xFDF
 55495                           postinc2	equ	0xFDE
 55496                           postdec2	equ	0xFDD
 55497                           plusw2	equ	0xFDB
 55498                           fsr2h	equ	0xFDA
 55499                           fsr2l	equ	0xFD9
 55500                           status	equ	0xFD8
 55501                           
 55502 ;; *************** function _MSDTransferTerminated *****************
 55503 ;; Defined at:
 55504 ;;		line 1674 in file "usb_device_msd.c"
 55505 ;; Parameters:    Size  Location     Type
 55506 ;;  handle          2   11[COMRAM] PTR void 
 55507 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 55508 ;;		 -> BDT(48), 
 55509 ;; Auto vars:     Size  Location     Type
 55510 ;;		None
 55511 ;; Return value:  Size  Location     Type
 55512 ;;                  1    wreg      void 
 55513 ;; Registers used:
 55514 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 55515 ;; Tracked objects:
 55516 ;;		On entry : 0/0
 55517 ;;		On exit  : 0/0
 55518 ;;		Unchanged: 0/0
 55519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55520 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55521 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55523 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55524 ;;Total ram usage:        4 bytes
 55525 ;; Hardware stack levels used:    1
 55526 ;; Hardware stack levels required when called:    1
 55527 ;; This function calls:
 55528 ;;		i2_USBStallEndpoint
 55529 ;;		i2_USBTransferOnePacket
 55530 ;; This function is called by:
 55531 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 55532 ;; This function uses a non-reentrant model
 55533 ;;
 55534                           
 55535                           	psect	text234
 55536  015410                     __ptext234:
 55537                           	opt stack 0
 55538  015410                     _MSDTransferTerminated:
 55539                           	opt stack 14
 55540                           
 55541                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 55542                           
 55543                           ;incstack = 0
 55544  015410  0101               	movlb	1	; () banked
 55545  015412  514F               	movf	_MSDCBWValid& (0+255),w,b
 55546  015414  A4D8               	btfss	status,2,c
 55547  015416  D00B               	goto	i2l780
 55548                           
 55549                           ; BSR set to: 1
 55550                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 55551  015418  0E01               	movlw	1
 55552  01541A  6E01               	movwf	i2USBStallEndpoint@dir,c
 55553  01541C  0E02               	movlw	2
 55554  01541E  EC98  F08B         	call	i2_USBStallEndpoint
 55555                           
 55556                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 55557  015422  0E00               	movlw	0
 55558  015424  6E01               	movwf	i2USBStallEndpoint@dir,c
 55559  015426  0E02               	movlw	2
 55560  015428  EC98  F08B         	call	i2_USBStallEndpoint
 55561                           
 55562                           ;usb_device_msd.c: 1681: }
 55563  01542C  0012               	return	
 55564  01542E                     i2l780:
 55565  01542E  C119  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2623
 55566  015432  C11A  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2623+1
 55567  015436  500E               	movf	_MSDTransferTerminated$2623,w,c
 55568  015438  180C               	xorwf	MSDTransferTerminated@handle,w,c
 55569  01543A  E114               	bnz	i2l783
 55570  01543C  500F               	movf	_MSDTransferTerminated$2623+1,w,c
 55571  01543E  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 55572  015440  A4D8               	btfss	status,2,c
 55573  015442  0012               	return	
 55574                           
 55575                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 55576  015444  0E00               	movlw	0
 55577  015446  6E01               	movwf	i2USBTransferOnePacket@dir,c
 55578  015448  0E40               	movlw	64
 55579  01544A  6E02               	movwf	i2USBTransferOnePacket@data,c
 55580  01544C  0E0D               	movlw	13
 55581  01544E  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 55582  015450  0E40               	movlw	64
 55583  015452  6E04               	movwf	i2USBTransferOnePacket@len,c
 55584  015454  0E02               	movlw	2
 55585  015456  EC9C  F08C         	call	i2_USBTransferOnePacket
 55586  01545A  C001  F140         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 55587  01545E  C002  F141         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 55588  015462  0012               	return	
 55589  015464                     i2l783:
 55590  015464  0012               	return		;funcret
 55591  015466                     __end_of_MSDTransferTerminated:
 55592                           	opt stack 0
 55593                           tosu	equ	0xFFF
 55594                           tosh	equ	0xFFE
 55595                           tosl	equ	0xFFD
 55596                           pclatu	equ	0xFFB
 55597                           pclath	equ	0xFFA
 55598                           tblptru	equ	0xFF8
 55599                           tblptrh	equ	0xFF7
 55600                           tblptrl	equ	0xFF6
 55601                           tablat	equ	0xFF5
 55602                           prodh	equ	0xFF4
 55603                           prodl	equ	0xFF3
 55604                           intcon	equ	0xFF2
 55605                           indf0	equ	0xFEF
 55606                           postinc0	equ	0xFEE
 55607                           fsr0h	equ	0xFEA
 55608                           fsr0l	equ	0xFE9
 55609                           wreg	equ	0xFE8
 55610                           indf1	equ	0xFE7
 55611                           postinc1	equ	0xFE6
 55612                           postdec1	equ	0xFE5
 55613                           plusw1	equ	0xFE3
 55614                           fsr1h	equ	0xFE2
 55615                           fsr1l	equ	0xFE1
 55616                           indf2	equ	0xFDF
 55617                           postinc2	equ	0xFDE
 55618                           postdec2	equ	0xFDD
 55619                           plusw2	equ	0xFDB
 55620                           fsr2h	equ	0xFDA
 55621                           fsr2l	equ	0xFD9
 55622                           status	equ	0xFD8
 55623                           
 55624 ;; *************** function i2_USBStallEndpoint *****************
 55625 ;; Defined at:
 55626 ;;		line 1073 in file "usb_device.c"
 55627 ;; Parameters:    Size  Location     Type
 55628 ;;  ep              1    wreg     unsigned char 
 55629 ;;  dir             1    0[COMRAM] unsigned char 
 55630 ;; Auto vars:     Size  Location     Type
 55631 ;;  ep              1    5[COMRAM] unsigned char 
 55632 ;;  USBStallEndp    2    6[COMRAM] PTR struct __BDT
 55633 ;;		 -> BDT(48), 
 55634 ;; Return value:  Size  Location     Type
 55635 ;;                  1    wreg      void 
 55636 ;; Registers used:
 55637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 55638 ;; Tracked objects:
 55639 ;;		On entry : 0/0
 55640 ;;		On exit  : 0/0
 55641 ;;		Unchanged: 0/0
 55642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55643 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55644 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55645 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55646 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55647 ;;Total ram usage:        8 bytes
 55648 ;; Hardware stack levels used:    1
 55649 ;; This function calls:
 55650 ;;		Nothing
 55651 ;; This function is called by:
 55652 ;;		_MSDTransferTerminated
 55653 ;; This function uses a non-reentrant model
 55654 ;;
 55655                           
 55656                           	psect	text235
 55657  011730                     __ptext235:
 55658                           	opt stack 0
 55659  011730                     i2_USBStallEndpoint:
 55660                           	opt stack 14
 55661                           
 55662                           ;incstack = 0
 55663                           ;i2USBStallEndpoint@ep stored from wreg
 55664  011730  6E06               	movwf	i2USBStallEndpoint@ep,c
 55665                           
 55666                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 55667  011732  5006               	movf	i2USBStallEndpoint@ep,w,c
 55668  011734  A4D8               	btfss	status,2,c
 55669  011736  D02B               	goto	i2l192
 55670                           
 55671                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 55672  011738  EE20 F001          	lfsr	2,1
 55673  01173C  5059               	movf	_pBDTEntryEP0OutNext,w,c
 55674  01173E  26D9               	addwf	fsr2l,f,c
 55675  011740  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 55676  011742  22DA               	addwfc	fsr2h,f,c
 55677  011744  0E08               	movlw	8
 55678  011746  6EDF               	movwf	indf2,c
 55679                           
 55680                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 55681  011748  EE20 F002          	lfsr	2,2
 55682  01174C  5059               	movf	_pBDTEntryEP0OutNext,w,c
 55683  01174E  26D9               	addwf	fsr2l,f,c
 55684  011750  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 55685  011752  22DA               	addwfc	fsr2h,f,c
 55686  011754  0E30               	movlw	48
 55687  011756  6EDE               	movwf	postinc2,c
 55688  011758  0E0D               	movlw	13
 55689  01175A  6EDD               	movwf	postdec2,c
 55690                           
 55691                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 55692  01175C  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55693  011760  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55694  011764  0E0C               	movlw	12
 55695  011766  6EDF               	movwf	indf2,c
 55696                           
 55697                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 55698  011768  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55699  01176C  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55700  011770  0E00               	movlw	0
 55701  011772  8EDB               	bsf	plusw2,7,c
 55702                           
 55703                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 55704  011774  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 55705  011778  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 55706  01177C  0E04               	movlw	4
 55707  01177E  6EDF               	movwf	indf2,c
 55708                           
 55709                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 55710  011780  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 55711  011784  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 55712  011788  0E00               	movlw	0
 55713  01178A  8EDB               	bsf	plusw2,7,c
 55714                           
 55715                           ;usb_device.c: 1089: }
 55716  01178C  0012               	return	
 55717  01178E                     i2l192:
 55718                           
 55719                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 55720  01178E  5001               	movf	i2USBStallEndpoint@dir,w,c
 55721  011790  6E02               	movwf	??i2_USBStallEndpoint& (0+255),c
 55722  011792  6A03               	clrf	(??i2_USBStallEndpoint+1)& (0+255),c
 55723  011794  90D8               	bcf	status,0,c
 55724  011796  3602               	rlcf	??i2_USBStallEndpoint,f,c
 55725  011798  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 55726  01179A  5006               	movf	i2USBStallEndpoint@ep,w,c
 55727  01179C  6E04               	movwf	(??i2_USBStallEndpoint+2)& (0+255),c
 55728  01179E  6A05               	clrf	(??i2_USBStallEndpoint+3)& (0+255),c
 55729  0117A0  90D8               	bcf	status,0,c
 55730  0117A2  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 55731  0117A4  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 55732  0117A6  90D8               	bcf	status,0,c
 55733  0117A8  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 55734  0117AA  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 55735  0117AC  5002               	movf	??i2_USBStallEndpoint,w,c
 55736  0117AE  2604               	addwf	??i2_USBStallEndpoint+2,f,c
 55737  0117B0  5003               	movf	??i2_USBStallEndpoint+1,w,c
 55738  0117B2  2205               	addwfc	??i2_USBStallEndpoint+3,f,c
 55739  0117B4  90D8               	bcf	status,0,c
 55740  0117B6  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 55741  0117B8  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 55742  0117BA  90D8               	bcf	status,0,c
 55743  0117BC  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 55744  0117BE  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 55745  0117C0  0E00               	movlw	0
 55746  0117C2  2404               	addwf	??i2_USBStallEndpoint+2,w,c
 55747  0117C4  6E07               	movwf	i2USBStallEndpoint@p,c
 55748  0117C6  0E0D               	movlw	13
 55749  0117C8  2005               	addwfc	??i2_USBStallEndpoint+3,w,c
 55750  0117CA  6E08               	movwf	i2USBStallEndpoint@p+1,c
 55751                           
 55752                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 55753  0117CC  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 55754  0117D0  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 55755  0117D4  0E00               	movlw	0
 55756  0117D6  84DB               	bsf	plusw2,2,c
 55757                           
 55758                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 55759  0117D8  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 55760  0117DC  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 55761  0117E0  0E00               	movlw	0
 55762  0117E2  8EDB               	bsf	plusw2,7,c
 55763                           
 55764                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 55765  0117E4  5006               	movf	i2USBStallEndpoint@ep,w,c
 55766  0117E6  0D04               	mullw	4
 55767  0117E8  CFF3 F002          	movff	prodl,??i2_USBStallEndpoint
 55768  0117EC  CFF4 F003          	movff	prodh,??i2_USBStallEndpoint+1
 55769  0117F0  5001               	movf	i2USBStallEndpoint@dir,w,c
 55770  0117F2  0D02               	mullw	2
 55771  0117F4  50F3               	movf	prodl,w,c
 55772  0117F6  2602               	addwf	??i2_USBStallEndpoint,f,c
 55773  0117F8  50F4               	movf	prodh,w,c
 55774  0117FA  2203               	addwfc	??i2_USBStallEndpoint+1,f,c
 55775  0117FC  90D8               	bcf	status,0,c
 55776  0117FE  3602               	rlcf	??i2_USBStallEndpoint,f,c
 55777  011800  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 55778  011802  90D8               	bcf	status,0,c
 55779  011804  3602               	rlcf	??i2_USBStallEndpoint,f,c
 55780  011806  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 55781  011808  0E04               	movlw	4
 55782  01180A  2602               	addwf	??i2_USBStallEndpoint,f,c
 55783  01180C  0E00               	movlw	0
 55784  01180E  2203               	addwfc	??i2_USBStallEndpoint+1,f,c
 55785  011810  0E00               	movlw	0
 55786  011812  2402               	addwf	??i2_USBStallEndpoint,w,c
 55787  011814  6E07               	movwf	i2USBStallEndpoint@p,c
 55788  011816  0E0D               	movlw	13
 55789  011818  2003               	addwfc	??i2_USBStallEndpoint+1,w,c
 55790  01181A  6E08               	movwf	i2USBStallEndpoint@p+1,c
 55791                           
 55792                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 55793  01181C  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 55794  011820  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 55795  011824  0E00               	movlw	0
 55796  011826  84DB               	bsf	plusw2,2,c
 55797                           
 55798                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 55799  011828  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 55800  01182C  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 55801  011830  0E00               	movlw	0
 55802  011832  8EDB               	bsf	plusw2,7,c
 55803  011834  0012               	return	
 55804  011836                     __end_ofi2_USBStallEndpoint:
 55805                           	opt stack 0
 55806                           tosu	equ	0xFFF
 55807                           tosh	equ	0xFFE
 55808                           tosl	equ	0xFFD
 55809                           pclatu	equ	0xFFB
 55810                           pclath	equ	0xFFA
 55811                           tblptru	equ	0xFF8
 55812                           tblptrh	equ	0xFF7
 55813                           tblptrl	equ	0xFF6
 55814                           tablat	equ	0xFF5
 55815                           prodh	equ	0xFF4
 55816                           prodl	equ	0xFF3
 55817                           intcon	equ	0xFF2
 55818                           indf0	equ	0xFEF
 55819                           postinc0	equ	0xFEE
 55820                           fsr0h	equ	0xFEA
 55821                           fsr0l	equ	0xFE9
 55822                           wreg	equ	0xFE8
 55823                           indf1	equ	0xFE7
 55824                           postinc1	equ	0xFE6
 55825                           postdec1	equ	0xFE5
 55826                           plusw1	equ	0xFE3
 55827                           fsr1h	equ	0xFE2
 55828                           fsr1l	equ	0xFE1
 55829                           indf2	equ	0xFDF
 55830                           postinc2	equ	0xFDE
 55831                           postdec2	equ	0xFDD
 55832                           plusw2	equ	0xFDB
 55833                           fsr2h	equ	0xFDA
 55834                           fsr2l	equ	0xFD9
 55835                           status	equ	0xFD8
 55836                           
 55837 ;; *************** function _APP_DeviceMSDInitialize *****************
 55838 ;; Defined at:
 55839 ;;		line 84 in file "app_device_msd.c"
 55840 ;; Parameters:    Size  Location     Type
 55841 ;;		None
 55842 ;; Auto vars:     Size  Location     Type
 55843 ;;		None
 55844 ;; Return value:  Size  Location     Type
 55845 ;;                  1    wreg      void 
 55846 ;; Registers used:
 55847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 55848 ;; Tracked objects:
 55849 ;;		On entry : 0/0
 55850 ;;		On exit  : 0/0
 55851 ;;		Unchanged: 0/0
 55852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55857 ;;Total ram usage:        0 bytes
 55858 ;; Hardware stack levels used:    1
 55859 ;; Hardware stack levels required when called:    2
 55860 ;; This function calls:
 55861 ;;		_USBEnableEndpoint
 55862 ;;		_USBMSDInit
 55863 ;; This function is called by:
 55864 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 55865 ;; This function uses a non-reentrant model
 55866 ;;
 55867                           
 55868                           	psect	text236
 55869  0163F4                     __ptext236:
 55870                           	opt stack 0
 55871  0163F4                     _APP_DeviceMSDInitialize:
 55872                           	opt stack 13
 55873                           
 55874                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 55875                           
 55876                           ;incstack = 0
 55877  0163F4  0E1E               	movlw	30
 55878  0163F6  6E09               	movwf	USBEnableEndpoint@options,c
 55879  0163F8  0E02               	movlw	2
 55880  0163FA  ECFB  F0AD         	call	_USBEnableEndpoint
 55881                           
 55882                           ;app_device_msd.c: 93: USBMSDInit();
 55883  0163FE  EC82  F089         	call	_USBMSDInit	;wreg free
 55884  016402  0012               	return		;funcret
 55885  016404                     __end_of_APP_DeviceMSDInitialize:
 55886                           	opt stack 0
 55887                           tosu	equ	0xFFF
 55888                           tosh	equ	0xFFE
 55889                           tosl	equ	0xFFD
 55890                           pclatu	equ	0xFFB
 55891                           pclath	equ	0xFFA
 55892                           tblptru	equ	0xFF8
 55893                           tblptrh	equ	0xFF7
 55894                           tblptrl	equ	0xFF6
 55895                           tablat	equ	0xFF5
 55896                           prodh	equ	0xFF4
 55897                           prodl	equ	0xFF3
 55898                           intcon	equ	0xFF2
 55899                           indf0	equ	0xFEF
 55900                           postinc0	equ	0xFEE
 55901                           fsr0h	equ	0xFEA
 55902                           fsr0l	equ	0xFE9
 55903                           wreg	equ	0xFE8
 55904                           indf1	equ	0xFE7
 55905                           postinc1	equ	0xFE6
 55906                           postdec1	equ	0xFE5
 55907                           plusw1	equ	0xFE3
 55908                           fsr1h	equ	0xFE2
 55909                           fsr1l	equ	0xFE1
 55910                           indf2	equ	0xFDF
 55911                           postinc2	equ	0xFDE
 55912                           postdec2	equ	0xFDD
 55913                           plusw2	equ	0xFDB
 55914                           fsr2h	equ	0xFDA
 55915                           fsr2l	equ	0xFD9
 55916                           status	equ	0xFD8
 55917                           
 55918 ;; *************** function _USBMSDInit *****************
 55919 ;; Defined at:
 55920 ;;		line 142 in file "usb_device_msd.c"
 55921 ;; Parameters:    Size  Location     Type
 55922 ;;		None
 55923 ;; Auto vars:     Size  Location     Type
 55924 ;;		None
 55925 ;; Return value:  Size  Location     Type
 55926 ;;                  1    wreg      void 
 55927 ;; Registers used:
 55928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 55929 ;; Tracked objects:
 55930 ;;		On entry : 0/0
 55931 ;;		On exit  : 0/0
 55932 ;;		Unchanged: 0/0
 55933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55936 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55937 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55938 ;;Total ram usage:        3 bytes
 55939 ;; Hardware stack levels used:    1
 55940 ;; Hardware stack levels required when called:    1
 55941 ;; This function calls:
 55942 ;;		i2_ExternalFlash_MediaDetect
 55943 ;;		i2_ExternalFlash_MediaInitialize
 55944 ;;		i2_ResetSenseData
 55945 ;;		i2_USBTransferOnePacket
 55946 ;; This function is called by:
 55947 ;;		_APP_DeviceMSDInitialize
 55948 ;; This function uses a non-reentrant model
 55949 ;;
 55950                           
 55951                           	psect	text237
 55952  011304                     __ptext237:
 55953                           	opt stack 0
 55954  011304                     _USBMSDInit:
 55955                           	opt stack 13
 55956                           
 55957                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 55958                           
 55959                           ;incstack = 0
 55960  011304  0E00               	movlw	0
 55961  011306  6E01               	movwf	i2USBTransferOnePacket@dir,c
 55962  011308  0E40               	movlw	64
 55963  01130A  6E02               	movwf	i2USBTransferOnePacket@data,c
 55964  01130C  0E0D               	movlw	13
 55965  01130E  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 55966  011310  0E40               	movlw	64
 55967  011312  6E04               	movwf	i2USBTransferOnePacket@len,c
 55968  011314  0E02               	movlw	2
 55969  011316  EC9C  F08C         	call	i2_USBTransferOnePacket
 55970  01131A  C001  F140         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 55971  01131E  C002  F141         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 55972  011322  C113  F13E         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 55973  011326  C114  F13F         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 55974                           
 55975                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 55976  01132A  0E00               	movlw	0
 55977  01132C  0101               	movlb	1	; () banked
 55978  01132E  6F57               	movwf	_MSD_State& (0+255),b
 55979                           
 55980                           ; BSR set to: 1
 55981                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 55982  011330  6956               	setf	_MSDCommandState& (0+255),b
 55983                           
 55984                           ; BSR set to: 1
 55985                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 55986  011332  0E00               	movlw	0
 55987  011334  6F55               	movwf	_MSDReadState& (0+255),b
 55988                           
 55989                           ; BSR set to: 1
 55990                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 55991  011336  0E00               	movlw	0
 55992  011338  6F54               	movwf	_MSDWriteState& (0+255),b
 55993                           
 55994                           ; BSR set to: 1
 55995                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 55996  01133A  0E00               	movlw	0
 55997  01133C  6F50               	movwf	_MSDHostNoData& (0+255),b
 55998                           
 55999                           ; BSR set to: 1
 56000                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 56001  01133E  0E00               	movlw	0
 56002  011340  0102               	movlb	2	; () banked
 56003  011342  6F40               	movwf	_gblNumBLKS& (0+255),b
 56004  011344  0E00               	movlw	0
 56005  011346  6F41               	movwf	(_gblNumBLKS+1)& (0+255),b
 56006  011348  0E00               	movlw	0
 56007  01134A  6F42               	movwf	(_gblNumBLKS+2)& (0+255),b
 56008  01134C  0E00               	movlw	0
 56009  01134E  6F43               	movwf	(_gblNumBLKS+3)& (0+255),b
 56010                           
 56011                           ; BSR set to: 2
 56012                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 56013  011350  0E00               	movlw	0
 56014  011352  6F3C               	movwf	_gblBLKLen& (0+255),b
 56015  011354  0E00               	movlw	0
 56016  011356  6F3D               	movwf	(_gblBLKLen+1)& (0+255),b
 56017  011358  0E00               	movlw	0
 56018  01135A  6F3E               	movwf	(_gblBLKLen+2)& (0+255),b
 56019  01135C  0E00               	movlw	0
 56020  01135E  6F3F               	movwf	(_gblBLKLen+3)& (0+255),b
 56021                           
 56022                           ; BSR set to: 2
 56023                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 56024  011360  0E01               	movlw	1
 56025  011362  0101               	movlb	1	; () banked
 56026  011364  6F4F               	movwf	_MSDCBWValid& (0+255),b
 56027                           
 56028                           ; BSR set to: 1
 56029                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 56030  011366  0E00               	movlw	0
 56031  011368  6F3D               	movwf	(_gblMediaPresent+1)& (0+255),b
 56032  01136A  0E00               	movlw	0
 56033  01136C  6F3C               	movwf	_gblMediaPresent& (0+255),b
 56034                           
 56035                           ; BSR set to: 1
 56036                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 56037  01136E  0E00               	movlw	0
 56038  011370  0102               	movlb	2	; () banked
 56039  011372  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 56040  011374  D04A               	goto	i2l534
 56041  011376                     
 56042                           ; BSR set to: 2
 56043                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 56044                           
 56045                           ; BSR set to: 2
 56046  011376  510D               	movf	(_gblCBW+13)& (0+255),w,b
 56047  011378  0D01               	mullw	1
 56048  01137A  0E51               	movlw	low _SoftDetach
 56049  01137C  24F3               	addwf	prodl,w,c
 56050  01137E  6ED9               	movwf	fsr2l,c
 56051  011380  0E01               	movlw	high _SoftDetach
 56052  011382  20F4               	addwfc	prodh,w,c
 56053  011384  6EDA               	movwf	fsr2h,c
 56054  011386  0E00               	movlw	0
 56055  011388  6EDF               	movwf	indf2,c
 56056                           
 56057                           ; BSR set to: 2
 56058                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 56059  01138A  C2B3  F001         	movff	_LUN+21,i2ExternalFlash_MediaDetect@config
 56060  01138E  C2B4  F002         	movff	_LUN+22,i2ExternalFlash_MediaDetect@config+1
 56061  011392  EE22  F0A7         	lfsr	2,_LUN+9
 56062  011396  D801               	call	i2u1044_48
 56063  011398  D00A               	goto	i2u1044_49
 56064  01139A                     i2u1044_48:
 56065  01139A  0005               	push	
 56066  01139C  6EFA               	movwf	pclath,c
 56067  01139E  50DE               	movf	postinc2,w,c
 56068  0113A0  6EFD               	movwf	tosl,c
 56069  0113A2  50DE               	movf	postinc2,w,c
 56070  0113A4  6EFE               	movwf	tosh,c
 56071  0113A6  50DE               	movf	postinc2,w,c
 56072  0113A8  6EFF               	movwf	tosu,c
 56073  0113AA  50FA               	movf	pclath,w,c
 56074  0113AC  0012               	return		;indir
 56075  0113AE                     i2u1044_49:
 56076  0113AE  0900               	iorlw	0
 56077  0113B0  B4D8               	btfsc	status,2,c
 56078  0113B2  D027               	goto	i2l537
 56079                           
 56080                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 56081  0113B4  C2B3  F001         	movff	_LUN+21,i2ExternalFlash_MediaInitialize@config
 56082  0113B8  C2B4  F002         	movff	_LUN+22,i2ExternalFlash_MediaInitialize@config+1
 56083  0113BC  D801               	call	i2u1046_48
 56084  0113BE  D00B               	goto	i2u1046_49
 56085  0113C0                     i2u1046_48:
 56086  0113C0  0005               	push	
 56087  0113C2  6EFA               	movwf	pclath,c
 56088  0113C4  0102               	movlb	2	; () banked
 56089  0113C6  519E               	movf	_LUN& (0+255),w,b
 56090  0113C8  6EFD               	movwf	tosl,c
 56091  0113CA  519F               	movf	(_LUN+1)& (0+255),w,b
 56092  0113CC  6EFE               	movwf	tosh,c
 56093  0113CE  51A0               	movf	(_LUN+2)& (0+255),w,b
 56094  0113D0  6EFF               	movwf	tosu,c
 56095  0113D2  50FA               	movf	pclath,w,c
 56096  0113D4  0012               	return		;indir
 56097  0113D6                     i2u1046_49:
 56098  0113D6  5001               	movf	?i2_ExternalFlash_MediaInitialize,w,c
 56099  0113D8  1002               	iorwf	?i2_ExternalFlash_MediaInitialize+1,w,c
 56100  0113DA  B4D8               	btfsc	status,2,c
 56101  0113DC  D012               	goto	i2l537
 56102                           
 56103                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 56104  0113DE  C20D  F00C         	movff	_gblCBW+13,??_USBMSDInit
 56105  0113E2  0E01               	movlw	1
 56106  0113E4  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 56107  0113E6  0E00               	movlw	0
 56108  0113E8  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 56109  0113EA  2A0C               	incf	??_USBMSDInit,f,c
 56110  0113EC  D003               	goto	i2u1048_44
 56111  0113EE                     i2u1048_45:
 56112  0113EE  90D8               	bcf	status,0,c
 56113  0113F0  360D               	rlcf	??_USBMSDInit+1,f,c
 56114  0113F2  360E               	rlcf	??_USBMSDInit+2,f,c
 56115  0113F4                     i2u1048_44:
 56116  0113F4  2E0C               	decfsz	??_USBMSDInit,f,c
 56117  0113F6  D7FB               	goto	i2u1048_45
 56118  0113F8  500D               	movf	??_USBMSDInit+1,w,c
 56119  0113FA  0101               	movlb	1	; () banked
 56120  0113FC  133C               	iorwf	_gblMediaPresent& (0+255),f,b
 56121  0113FE  500E               	movf	??_USBMSDInit+2,w,c
 56122  011400  133D               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 56123  011402                     i2l537:
 56124                           
 56125                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 56126                           
 56127                           ; BSR set to: 1
 56128                           
 56129                           ; BSR set to: 1
 56130  011402  EC31  F0A7         	call	i2_ResetSenseData	;wreg free
 56131  011406  0102               	movlb	2	; () banked
 56132  011408  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 56133  01140A                     i2l534:
 56134                           
 56135                           ; BSR set to: 2
 56136                           
 56137                           ; BSR set to: 2
 56138  01140A  510D               	movf	(_gblCBW+13)& (0+255),w,b
 56139  01140C  A4D8               	btfss	status,2,c
 56140  01140E  0012               	return	
 56141  011410  D7B2               	goto	i2l535
 56142  011412                     __end_of_USBMSDInit:
 56143                           	opt stack 0
 56144                           tosu	equ	0xFFF
 56145                           tosh	equ	0xFFE
 56146                           tosl	equ	0xFFD
 56147                           pclatu	equ	0xFFB
 56148                           pclath	equ	0xFFA
 56149                           tblptru	equ	0xFF8
 56150                           tblptrh	equ	0xFF7
 56151                           tblptrl	equ	0xFF6
 56152                           tablat	equ	0xFF5
 56153                           prodh	equ	0xFF4
 56154                           prodl	equ	0xFF3
 56155                           intcon	equ	0xFF2
 56156                           indf0	equ	0xFEF
 56157                           postinc0	equ	0xFEE
 56158                           fsr0h	equ	0xFEA
 56159                           fsr0l	equ	0xFE9
 56160                           wreg	equ	0xFE8
 56161                           indf1	equ	0xFE7
 56162                           postinc1	equ	0xFE6
 56163                           postdec1	equ	0xFE5
 56164                           plusw1	equ	0xFE3
 56165                           fsr1h	equ	0xFE2
 56166                           fsr1l	equ	0xFE1
 56167                           indf2	equ	0xFDF
 56168                           postinc2	equ	0xFDE
 56169                           postdec2	equ	0xFDD
 56170                           plusw2	equ	0xFDB
 56171                           fsr2h	equ	0xFDA
 56172                           fsr2l	equ	0xFD9
 56173                           status	equ	0xFD8
 56174                           
 56175 ;; *************** function i2_ResetSenseData *****************
 56176 ;; Defined at:
 56177 ;;		line 1373 in file "usb_device_msd.c"
 56178 ;; Parameters:    Size  Location     Type
 56179 ;;		None
 56180 ;; Auto vars:     Size  Location     Type
 56181 ;;		None
 56182 ;; Return value:  Size  Location     Type
 56183 ;;                  1    wreg      void 
 56184 ;; Registers used:
 56185 ;;		wreg, status,2
 56186 ;; Tracked objects:
 56187 ;;		On entry : 0/0
 56188 ;;		On exit  : 0/0
 56189 ;;		Unchanged: 0/0
 56190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 56191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56195 ;;Total ram usage:        0 bytes
 56196 ;; Hardware stack levels used:    1
 56197 ;; This function calls:
 56198 ;;		Nothing
 56199 ;; This function is called by:
 56200 ;;		_USBMSDInit
 56201 ;; This function uses a non-reentrant model
 56202 ;;
 56203                           
 56204                           	psect	text238
 56205  014E62                     __ptext238:
 56206                           	opt stack 0
 56207  014E62                     i2_ResetSenseData:
 56208                           	opt stack 13
 56209                           
 56210                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 56211                           
 56212                           ; BSR set to: 2
 56213                           ;incstack = 0
 56214  014E62  0102               	movlb	2	; () banked
 56215  014E64  911F               	bcf	_gblSenseData& (0+255),0,b
 56216  014E66  931F               	bcf	_gblSenseData& (0+255),1,b
 56217  014E68  951F               	bcf	_gblSenseData& (0+255),2,b
 56218  014E6A  971F               	bcf	_gblSenseData& (0+255),3,b
 56219  014E6C  891F               	bsf	_gblSenseData& (0+255),4,b
 56220  014E6E  8B1F               	bsf	_gblSenseData& (0+255),5,b
 56221  014E70  8D1F               	bsf	_gblSenseData& (0+255),6,b
 56222                           
 56223                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 56224  014E72  9F1F               	bcf	_gblSenseData& (0+255),7,b
 56225                           
 56226                           ; BSR set to: 2
 56227                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 56228  014E74  0E00               	movlw	0
 56229  014E76  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 56230                           
 56231                           ; BSR set to: 2
 56232                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 56233  014E78  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 56234  014E7A  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 56235  014E7C  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 56236  014E7E  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 56237                           
 56238                           ; BSR set to: 2
 56239                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 56240  014E80  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 56241                           
 56242                           ; BSR set to: 2
 56243                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 56244  014E82  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 56245                           
 56246                           ; BSR set to: 2
 56247                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 56248  014E84  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 56249                           
 56250                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 56251  014E86  0E00               	movlw	0
 56252  014E88  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 56253                           
 56254                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 56255  014E8A  0E00               	movlw	0
 56256  014E8C  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 56257                           
 56258                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 56259  014E8E  0E00               	movlw	0
 56260  014E90  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 56261                           
 56262                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 56263  014E92  0E00               	movlw	0
 56264  014E94  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 56265                           
 56266                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 56267  014E96  0E0A               	movlw	10
 56268  014E98  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 56269                           
 56270                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 56271  014E9A  0E00               	movlw	0
 56272  014E9C  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 56273  014E9E  0E00               	movlw	0
 56274  014EA0  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 56275  014EA2  0E00               	movlw	0
 56276  014EA4  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 56277  014EA6  0E00               	movlw	0
 56278  014EA8  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 56279                           
 56280                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 56281  014EAA  0E00               	movlw	0
 56282  014EAC  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 56283                           
 56284                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 56285  014EAE  0E00               	movlw	0
 56286  014EB0  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 56287                           
 56288                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 56289  014EB2  0E00               	movlw	0
 56290  014EB4  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 56291                           
 56292                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 56293  014EB6  0E00               	movlw	0
 56294  014EB8  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 56295                           
 56296                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 56297  014EBA  0E00               	movlw	0
 56298  014EBC  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 56299                           
 56300                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 56301  014EBE  0E00               	movlw	0
 56302  014EC0  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 56303                           
 56304                           ; BSR set to: 2
 56305  014EC2  0012               	return		;funcret
 56306  014EC4                     __end_ofi2_ResetSenseData:
 56307                           	opt stack 0
 56308                           tosu	equ	0xFFF
 56309                           tosh	equ	0xFFE
 56310                           tosl	equ	0xFFD
 56311                           pclatu	equ	0xFFB
 56312                           pclath	equ	0xFFA
 56313                           tblptru	equ	0xFF8
 56314                           tblptrh	equ	0xFF7
 56315                           tblptrl	equ	0xFF6
 56316                           tablat	equ	0xFF5
 56317                           prodh	equ	0xFF4
 56318                           prodl	equ	0xFF3
 56319                           intcon	equ	0xFF2
 56320                           indf0	equ	0xFEF
 56321                           postinc0	equ	0xFEE
 56322                           fsr0h	equ	0xFEA
 56323                           fsr0l	equ	0xFE9
 56324                           wreg	equ	0xFE8
 56325                           indf1	equ	0xFE7
 56326                           postinc1	equ	0xFE6
 56327                           postdec1	equ	0xFE5
 56328                           plusw1	equ	0xFE3
 56329                           fsr1h	equ	0xFE2
 56330                           fsr1l	equ	0xFE1
 56331                           indf2	equ	0xFDF
 56332                           postinc2	equ	0xFDE
 56333                           postdec2	equ	0xFDD
 56334                           plusw2	equ	0xFDB
 56335                           fsr2h	equ	0xFDA
 56336                           fsr2l	equ	0xFD9
 56337                           status	equ	0xFD8
 56338                           
 56339 ;; *************** function i2_ExternalFlash_MediaInitialize *****************
 56340 ;; Defined at:
 56341 ;;		line 10 in file "external_flash.c"
 56342 ;; Parameters:    Size  Location     Type
 56343 ;;  config          2    0[COMRAM] PTR void 
 56344 ;;		 -> NULL(0), 
 56345 ;; Auto vars:     Size  Location     Type
 56346 ;;		None
 56347 ;; Return value:  Size  Location     Type
 56348 ;;                  2    0[COMRAM] PTR struct .
 56349 ;; Registers used:
 56350 ;;		wreg, status,2, status,0
 56351 ;; Tracked objects:
 56352 ;;		On entry : 0/0
 56353 ;;		On exit  : 0/0
 56354 ;;		Unchanged: 0/0
 56355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 56356 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56359 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56360 ;;Total ram usage:        2 bytes
 56361 ;; Hardware stack levels used:    1
 56362 ;; This function calls:
 56363 ;;		Nothing
 56364 ;; This function is called by:
 56365 ;;		_USBMSDInit
 56366 ;;		_MSDProcessCommand
 56367 ;; This function uses a non-reentrant model
 56368 ;;
 56369                           
 56370                           	psect	text239
 56371  016366                     __ptext239:
 56372                           	opt stack 0
 56373  016366                     i2_ExternalFlash_MediaInitialize:
 56374                           	opt stack 13
 56375                           
 56376                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 56377                           
 56378                           ; BSR set to: 2
 56379                           ;incstack = 0
 56380  016366  0102               	movlb	2	; () banked
 56381  016368  819A               	bsf	(_mediaInformation+1)& (0+255),0,b
 56382                           
 56383                           ; BSR set to: 2
 56384                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 56385  01636A  0E02               	movlw	2
 56386  01636C  6F9C               	movwf	(_mediaInformation+3)& (0+255),b
 56387  01636E  0E00               	movlw	0
 56388  016370  6F9B               	movwf	(_mediaInformation+2)& (0+255),b
 56389                           
 56390                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 56391  016372  0E00               	movlw	0
 56392  016374  6F99               	movwf	_mediaInformation& (0+255),b
 56393                           
 56394                           ; BSR set to: 2
 56395                           ;external_flash.c: 15: return &mediaInformation;
 56396  016376  0E99               	movlw	low _mediaInformation
 56397  016378  6E01               	movwf	?i2_ExternalFlash_MediaInitialize,c
 56398  01637A  0E02               	movlw	high _mediaInformation
 56399  01637C  6E02               	movwf	?i2_ExternalFlash_MediaInitialize+1,c
 56400  01637E  0012               	return	
 56401  016380                     __end_ofi2_ExternalFlash_MediaInitialize:
 56402                           	opt stack 0
 56403                           tosu	equ	0xFFF
 56404                           tosh	equ	0xFFE
 56405                           tosl	equ	0xFFD
 56406                           pclatu	equ	0xFFB
 56407                           pclath	equ	0xFFA
 56408                           tblptru	equ	0xFF8
 56409                           tblptrh	equ	0xFF7
 56410                           tblptrl	equ	0xFF6
 56411                           tablat	equ	0xFF5
 56412                           prodh	equ	0xFF4
 56413                           prodl	equ	0xFF3
 56414                           intcon	equ	0xFF2
 56415                           indf0	equ	0xFEF
 56416                           postinc0	equ	0xFEE
 56417                           fsr0h	equ	0xFEA
 56418                           fsr0l	equ	0xFE9
 56419                           wreg	equ	0xFE8
 56420                           indf1	equ	0xFE7
 56421                           postinc1	equ	0xFE6
 56422                           postdec1	equ	0xFE5
 56423                           plusw1	equ	0xFE3
 56424                           fsr1h	equ	0xFE2
 56425                           fsr1l	equ	0xFE1
 56426                           indf2	equ	0xFDF
 56427                           postinc2	equ	0xFDE
 56428                           postdec2	equ	0xFDD
 56429                           plusw2	equ	0xFDB
 56430                           fsr2h	equ	0xFDA
 56431                           fsr2l	equ	0xFD9
 56432                           status	equ	0xFD8
 56433                           
 56434 ;; *************** function i2_ExternalFlash_MediaDetect *****************
 56435 ;; Defined at:
 56436 ;;		line 29 in file "external_flash.c"
 56437 ;; Parameters:    Size  Location     Type
 56438 ;;  config          2    0[COMRAM] PTR void 
 56439 ;;		 -> NULL(0), 
 56440 ;; Auto vars:     Size  Location     Type
 56441 ;;		None
 56442 ;; Return value:  Size  Location     Type
 56443 ;;                  1    wreg      unsigned char 
 56444 ;; Registers used:
 56445 ;;		wreg
 56446 ;; Tracked objects:
 56447 ;;		On entry : 0/0
 56448 ;;		On exit  : 0/0
 56449 ;;		Unchanged: 0/0
 56450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 56451 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56454 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56455 ;;Total ram usage:        2 bytes
 56456 ;; Hardware stack levels used:    1
 56457 ;; This function calls:
 56458 ;;		Nothing
 56459 ;; This function is called by:
 56460 ;;		_USBMSDInit
 56461 ;;		_MSDProcessCommand
 56462 ;; This function uses a non-reentrant model
 56463 ;;
 56464                           
 56465                           	psect	text240
 56466  0164BA                     __ptext240:
 56467                           	opt stack 0
 56468  0164BA                     i2_ExternalFlash_MediaDetect:
 56469                           	opt stack 13
 56470                           
 56471                           ;external_flash.c: 31: return 1;
 56472                           
 56473                           ; BSR set to: 2
 56474                           ;incstack = 0
 56475  0164BA  0E01               	movlw	1
 56476  0164BC  0012               	return	
 56477  0164BE                     __end_ofi2_ExternalFlash_MediaDetect:
 56478                           	opt stack 0
 56479                           tosu	equ	0xFFF
 56480                           tosh	equ	0xFFE
 56481                           tosl	equ	0xFFD
 56482                           pclatu	equ	0xFFB
 56483                           pclath	equ	0xFFA
 56484                           tblptru	equ	0xFF8
 56485                           tblptrh	equ	0xFF7
 56486                           tblptrl	equ	0xFF6
 56487                           tablat	equ	0xFF5
 56488                           prodh	equ	0xFF4
 56489                           prodl	equ	0xFF3
 56490                           intcon	equ	0xFF2
 56491                           indf0	equ	0xFEF
 56492                           postinc0	equ	0xFEE
 56493                           fsr0h	equ	0xFEA
 56494                           fsr0l	equ	0xFE9
 56495                           wreg	equ	0xFE8
 56496                           indf1	equ	0xFE7
 56497                           postinc1	equ	0xFE6
 56498                           postdec1	equ	0xFE5
 56499                           plusw1	equ	0xFE3
 56500                           fsr1h	equ	0xFE2
 56501                           fsr1l	equ	0xFE1
 56502                           indf2	equ	0xFDF
 56503                           postinc2	equ	0xFDE
 56504                           postdec2	equ	0xFDD
 56505                           plusw2	equ	0xFDB
 56506                           fsr2h	equ	0xFDA
 56507                           fsr2l	equ	0xFD9
 56508                           status	equ	0xFD8
 56509                           
 56510 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 56511 ;; Defined at:
 56512 ;;		line 46 in file "app_device_custom_hid.c"
 56513 ;; Parameters:    Size  Location     Type
 56514 ;;		None
 56515 ;; Auto vars:     Size  Location     Type
 56516 ;;		None
 56517 ;; Return value:  Size  Location     Type
 56518 ;;                  1    wreg      void 
 56519 ;; Registers used:
 56520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 56521 ;; Tracked objects:
 56522 ;;		On entry : 0/0
 56523 ;;		On exit  : 0/0
 56524 ;;		Unchanged: 0/0
 56525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 56526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56530 ;;Total ram usage:        0 bytes
 56531 ;; Hardware stack levels used:    1
 56532 ;; Hardware stack levels required when called:    2
 56533 ;; This function calls:
 56534 ;;		_USBEnableEndpoint
 56535 ;;		i2_USBTransferOnePacket
 56536 ;; This function is called by:
 56537 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 56538 ;; This function uses a non-reentrant model
 56539 ;;
 56540                           
 56541                           	psect	text241
 56542  015E20                     __ptext241:
 56543                           	opt stack 0
 56544  015E20                     _APP_DeviceCustomHIDInitialize:
 56545                           	opt stack 13
 56546                           
 56547                           ;app_device_custom_hid.c: 50: USBInHandle = 0;
 56548                           
 56549                           ;incstack = 0
 56550  015E20  0E00               	movlw	0
 56551  015E22  0101               	movlb	1	; () banked
 56552  015E24  6F36               	movwf	_USBInHandle& (0+255),b
 56553  015E26  0E00               	movlw	0
 56554  015E28  6F37               	movwf	(_USBInHandle+1)& (0+255),b
 56555                           
 56556                           ; BSR set to: 1
 56557                           ;app_device_custom_hid.c: 53: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 56558  015E2A  0E1E               	movlw	30
 56559  015E2C  6E09               	movwf	USBEnableEndpoint@options,c
 56560  015E2E  0E01               	movlw	1
 56561  015E30  ECFB  F0AD         	call	_USBEnableEndpoint
 56562                           
 56563                           ;app_device_custom_hid.c: 56: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 56564  015E34  0E00               	movlw	0
 56565  015E36  6E01               	movwf	i2USBTransferOnePacket@dir,c
 56566  015E38  0E80               	movlw	low _ReceivedDataBuffer
 56567  015E3A  6E02               	movwf	i2USBTransferOnePacket@data,c
 56568  015E3C  0E03               	movlw	high _ReceivedDataBuffer
 56569  015E3E  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 56570  015E40  0E40               	movlw	64
 56571  015E42  6E04               	movwf	i2USBTransferOnePacket@len,c
 56572  015E44  0E01               	movlw	1
 56573  015E46  EC9C  F08C         	call	i2_USBTransferOnePacket
 56574  015E4A  C001  F138         	movff	?i2_USBTransferOnePacket,_USBOutHandle
 56575  015E4E  C002  F139         	movff	?i2_USBTransferOnePacket+1,_USBOutHandle+1
 56576  015E52  0012               	return		;funcret
 56577  015E54                     __end_of_APP_DeviceCustomHIDInitialize:
 56578                           	opt stack 0
 56579                           tosu	equ	0xFFF
 56580                           tosh	equ	0xFFE
 56581                           tosl	equ	0xFFD
 56582                           pclatu	equ	0xFFB
 56583                           pclath	equ	0xFFA
 56584                           tblptru	equ	0xFF8
 56585                           tblptrh	equ	0xFF7
 56586                           tblptrl	equ	0xFF6
 56587                           tablat	equ	0xFF5
 56588                           prodh	equ	0xFF4
 56589                           prodl	equ	0xFF3
 56590                           intcon	equ	0xFF2
 56591                           indf0	equ	0xFEF
 56592                           postinc0	equ	0xFEE
 56593                           fsr0h	equ	0xFEA
 56594                           fsr0l	equ	0xFE9
 56595                           wreg	equ	0xFE8
 56596                           indf1	equ	0xFE7
 56597                           postinc1	equ	0xFE6
 56598                           postdec1	equ	0xFE5
 56599                           plusw1	equ	0xFE3
 56600                           fsr1h	equ	0xFE2
 56601                           fsr1l	equ	0xFE1
 56602                           indf2	equ	0xFDF
 56603                           postinc2	equ	0xFDE
 56604                           postdec2	equ	0xFDD
 56605                           plusw2	equ	0xFDB
 56606                           fsr2h	equ	0xFDA
 56607                           fsr2l	equ	0xFD9
 56608                           status	equ	0xFD8
 56609                           
 56610 ;; *************** function i2_USBTransferOnePacket *****************
 56611 ;; Defined at:
 56612 ;;		line 995 in file "usb_device.c"
 56613 ;; Parameters:    Size  Location     Type
 56614 ;;  ep              1    wreg     unsigned char 
 56615 ;;  dir             1    0[COMRAM] unsigned char 
 56616 ;;  data            2    1[COMRAM] PTR unsigned char 
 56617 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 56618 ;;		 -> msd_cbw(31), NULL(0), 
 56619 ;;  len             1    3[COMRAM] unsigned char 
 56620 ;; Auto vars:     Size  Location     Type
 56621 ;;  ep              1    8[COMRAM] unsigned char 
 56622 ;;  USBTransferO    2    9[COMRAM] PTR volatile struct __BD
 56623 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 56624 ;; Return value:  Size  Location     Type
 56625 ;;                  2    0[COMRAM] PTR void 
 56626 ;; Registers used:
 56627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 56628 ;; Tracked objects:
 56629 ;;		On entry : 0/0
 56630 ;;		On exit  : 0/0
 56631 ;;		Unchanged: 0/0
 56632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 56633 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56634 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56635 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56636 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56637 ;;Total ram usage:       11 bytes
 56638 ;; Hardware stack levels used:    1
 56639 ;; This function calls:
 56640 ;;		Nothing
 56641 ;; This function is called by:
 56642 ;;		_USBMSDInit
 56643 ;;		_USBCheckMSDRequest
 56644 ;;		_MSDTransferTerminated
 56645 ;;		_APP_DeviceCustomHIDInitialize
 56646 ;; This function uses a non-reentrant model
 56647 ;;
 56648                           
 56649                           	psect	text242
 56650  011938                     __ptext242:
 56651                           	opt stack 0
 56652  011938                     i2_USBTransferOnePacket:
 56653                           	opt stack 14
 56654                           
 56655                           ;incstack = 0
 56656                           ;i2USBTransferOnePacket@ep stored from wreg
 56657  011938  6E09               	movwf	i2USBTransferOnePacket@ep,c
 56658                           
 56659                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 56660  01193A  5001               	movf	i2USBTransferOnePacket@dir,w,c
 56661  01193C  B4D8               	btfsc	status,2,c
 56662  01193E  D007               	goto	i2l184
 56663                           
 56664                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 56665  011940  5009               	movf	i2USBTransferOnePacket@ep,w,c
 56666  011942  0D02               	mullw	2
 56667  011944  0E0F               	movlw	low _pBDTEntryIn
 56668  011946  24F3               	addwf	prodl,w,c
 56669  011948  6ED9               	movwf	fsr2l,c
 56670  01194A  0E01               	movlw	high _pBDTEntryIn
 56671  01194C  D006               	goto	L67
 56672  01194E                     i2l184:
 56673                           
 56674                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 56675  01194E  5009               	movf	i2USBTransferOnePacket@ep,w,c
 56676  011950  0D02               	mullw	2
 56677  011952  0E15               	movlw	low _pBDTEntryOut
 56678  011954  24F3               	addwf	prodl,w,c
 56679  011956  6ED9               	movwf	fsr2l,c
 56680  011958  0E01               	movlw	high _pBDTEntryOut
 56681  01195A                     L67:
 56682  01195A  20F4               	addwfc	prodh,w,c
 56683  01195C  6EDA               	movwf	fsr2h,c
 56684  01195E  CFDE F00A          	movff	postinc2,i2USBTransferOnePacket@handle
 56685  011962  CFDD F00B          	movff	postdec2,i2USBTransferOnePacket@handle+1
 56686                           
 56687                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 56688  011966  500A               	movf	i2USBTransferOnePacket@handle,w,c
 56689  011968  100B               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 56690  01196A  A4D8               	btfss	status,2,c
 56691  01196C  D005               	goto	i2l186
 56692                           
 56693                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 56694  01196E  0E00               	movlw	0
 56695  011970  6E01               	movwf	?i2_USBTransferOnePacket,c
 56696  011972  0E00               	movlw	0
 56697  011974  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 56698  011976  0012               	return	
 56699  011978                     i2l186:
 56700                           
 56701                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 56702  011978  EE20 F002          	lfsr	2,2
 56703  01197C  500A               	movf	i2USBTransferOnePacket@handle,w,c
 56704  01197E  26D9               	addwf	fsr2l,f,c
 56705  011980  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 56706  011982  22DA               	addwfc	fsr2h,f,c
 56707  011984  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 56708  011988  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 56709                           
 56710                           ;usb_device.c: 1030: handle->CNT = len;
 56711  01198C  EE20 F001          	lfsr	2,1
 56712  011990  500A               	movf	i2USBTransferOnePacket@handle,w,c
 56713  011992  26D9               	addwf	fsr2l,f,c
 56714  011994  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 56715  011996  22DA               	addwfc	fsr2h,f,c
 56716  011998  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 56717                           
 56718                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 56719  01199C  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 56720  0119A0  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 56721  0119A4  0E40               	movlw	64
 56722  0119A6  16DF               	andwf	indf2,f,c
 56723                           
 56724                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 56725  0119A8  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 56726  0119AC  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 56727  0119B0  0E00               	movlw	0
 56728  0119B2  86DB               	bsf	plusw2,3,c
 56729                           
 56730                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 56731  0119B4  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 56732  0119B8  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 56733  0119BC  0E00               	movlw	0
 56734  0119BE  8EDB               	bsf	plusw2,7,c
 56735                           
 56736                           ;usb_device.c: 1036: if(dir != 0)
 56737  0119C0  5001               	movf	i2USBTransferOnePacket@dir,w,c
 56738  0119C2  B4D8               	btfsc	status,2,c
 56739  0119C4  D018               	goto	i2l188
 56740                           
 56741                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 56742  0119C6  5009               	movf	i2USBTransferOnePacket@ep,w,c
 56743  0119C8  0D02               	mullw	2
 56744  0119CA  0E0F               	movlw	low _pBDTEntryIn
 56745  0119CC  24F3               	addwf	prodl,w,c
 56746  0119CE  6ED9               	movwf	fsr2l,c
 56747  0119D0  0E01               	movlw	high _pBDTEntryIn
 56748  0119D2  20F4               	addwfc	prodh,w,c
 56749  0119D4  6EDA               	movwf	fsr2h,c
 56750  0119D6  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 56751  0119DA  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 56752  0119DE  0E04               	movlw	4
 56753  0119E0  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 56754  0119E2  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 56755  0119E4  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 56756  0119E6  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 56757  0119E8  5009               	movf	i2USBTransferOnePacket@ep,w,c
 56758  0119EA  0D02               	mullw	2
 56759  0119EC  0E0F               	movlw	low _pBDTEntryIn
 56760  0119EE  24F3               	addwf	prodl,w,c
 56761  0119F0  6ED9               	movwf	fsr2l,c
 56762  0119F2  0E01               	movlw	high _pBDTEntryIn
 56763  0119F4  D017               	goto	L68
 56764  0119F6                     i2l188:
 56765                           
 56766                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 56767  0119F6  5009               	movf	i2USBTransferOnePacket@ep,w,c
 56768  0119F8  0D02               	mullw	2
 56769  0119FA  0E15               	movlw	low _pBDTEntryOut
 56770  0119FC  24F3               	addwf	prodl,w,c
 56771  0119FE  6ED9               	movwf	fsr2l,c
 56772  011A00  0E01               	movlw	high _pBDTEntryOut
 56773  011A02  20F4               	addwfc	prodh,w,c
 56774  011A04  6EDA               	movwf	fsr2h,c
 56775  011A06  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 56776  011A0A  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 56777  011A0E  0E04               	movlw	4
 56778  011A10  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 56779  011A12  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 56780  011A14  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 56781  011A16  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 56782  011A18  5009               	movf	i2USBTransferOnePacket@ep,w,c
 56783  011A1A  0D02               	mullw	2
 56784  011A1C  0E15               	movlw	low _pBDTEntryOut
 56785  011A1E  24F3               	addwf	prodl,w,c
 56786  011A20  6ED9               	movwf	fsr2l,c
 56787  011A22  0E01               	movlw	high _pBDTEntryOut
 56788  011A24                     L68:
 56789  011A24  20F4               	addwfc	prodh,w,c
 56790  011A26  6EDA               	movwf	fsr2h,c
 56791  011A28  C007  FFDE         	movff	??i2_USBTransferOnePacket+2,postinc2
 56792  011A2C  C008  FFDD         	movff	??i2_USBTransferOnePacket+3,postdec2
 56793                           
 56794                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 56795  011A30  C00A  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 56796  011A34  C00B  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 56797  011A38  0012               	return	
 56798  011A3A                     __end_ofi2_USBTransferOnePacket:
 56799                           	opt stack 0
 56800                           tosu	equ	0xFFF
 56801                           tosh	equ	0xFFE
 56802                           tosl	equ	0xFFD
 56803                           pclatu	equ	0xFFB
 56804                           pclath	equ	0xFFA
 56805                           tblptru	equ	0xFF8
 56806                           tblptrh	equ	0xFF7
 56807                           tblptrl	equ	0xFF6
 56808                           tablat	equ	0xFF5
 56809                           prodh	equ	0xFF4
 56810                           prodl	equ	0xFF3
 56811                           intcon	equ	0xFF2
 56812                           indf0	equ	0xFEF
 56813                           postinc0	equ	0xFEE
 56814                           fsr0h	equ	0xFEA
 56815                           fsr0l	equ	0xFE9
 56816                           wreg	equ	0xFE8
 56817                           indf1	equ	0xFE7
 56818                           postinc1	equ	0xFE6
 56819                           postdec1	equ	0xFE5
 56820                           plusw1	equ	0xFE3
 56821                           fsr1h	equ	0xFE2
 56822                           fsr1l	equ	0xFE1
 56823                           indf2	equ	0xFDF
 56824                           postinc2	equ	0xFDE
 56825                           postdec2	equ	0xFDD
 56826                           plusw2	equ	0xFDB
 56827                           fsr2h	equ	0xFDA
 56828                           fsr2l	equ	0xFD9
 56829                           status	equ	0xFD8
 56830                           
 56831 ;; *************** function _USBEnableEndpoint *****************
 56832 ;; Defined at:
 56833 ;;		line 878 in file "usb_device.c"
 56834 ;; Parameters:    Size  Location     Type
 56835 ;;  ep              1    wreg     unsigned char 
 56836 ;;  options         1    8[COMRAM] unsigned char 
 56837 ;; Auto vars:     Size  Location     Type
 56838 ;;  ep              1   11[COMRAM] unsigned char 
 56839 ;;  p               2    9[COMRAM] PTR unsigned char 
 56840 ;;		 -> UEP0(1), 
 56841 ;; Return value:  Size  Location     Type
 56842 ;;                  1    wreg      void 
 56843 ;; Registers used:
 56844 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 56845 ;; Tracked objects:
 56846 ;;		On entry : 0/0
 56847 ;;		On exit  : 0/0
 56848 ;;		Unchanged: 0/0
 56849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 56850 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56851 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56853 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56854 ;;Total ram usage:        4 bytes
 56855 ;; Hardware stack levels used:    1
 56856 ;; Hardware stack levels required when called:    1
 56857 ;; This function calls:
 56858 ;;		_USBConfigureEndpoint
 56859 ;; This function is called by:
 56860 ;;		_APP_DeviceCustomHIDInitialize
 56861 ;;		_APP_DeviceMSDInitialize
 56862 ;; This function uses a non-reentrant model
 56863 ;;
 56864                           
 56865                           	psect	text243
 56866  015BF6                     __ptext243:
 56867                           	opt stack 0
 56868  015BF6                     _USBEnableEndpoint:
 56869                           	opt stack 13
 56870                           
 56871                           ;incstack = 0
 56872                           ;USBEnableEndpoint@ep stored from wreg
 56873  015BF6  6E0C               	movwf	USBEnableEndpoint@ep,c
 56874                           
 56875                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 56876  015BF8  A409               	btfss	USBEnableEndpoint@options,2,c
 56877  015BFA  D005               	goto	i2l179
 56878                           
 56879                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 56880  015BFC  0E00               	movlw	0
 56881  015BFE  6E01               	movwf	USBConfigureEndpoint@direction,c
 56882  015C00  500C               	movf	USBEnableEndpoint@ep,w,c
 56883  015C02  EC15  F0A0         	call	_USBConfigureEndpoint
 56884  015C06                     i2l179:
 56885                           
 56886                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 56887  015C06  A209               	btfss	USBEnableEndpoint@options,1,c
 56888  015C08  D005               	goto	i2l180
 56889                           
 56890                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 56891  015C0A  0E01               	movlw	1
 56892  015C0C  6E01               	movwf	USBConfigureEndpoint@direction,c
 56893  015C0E  500C               	movf	USBEnableEndpoint@ep,w,c
 56894  015C10  EC15  F0A0         	call	_USBConfigureEndpoint
 56895  015C14                     i2l180:
 56896                           
 56897                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 56898  015C14  500C               	movf	USBEnableEndpoint@ep,w,c
 56899  015C16  0D01               	mullw	1
 56900  015C18  0E26               	movlw	38
 56901  015C1A  24F3               	addwf	prodl,w,c
 56902  015C1C  6E0A               	movwf	USBEnableEndpoint@p,c
 56903  015C1E  0E0F               	movlw	15
 56904  015C20  20F4               	addwfc	prodh,w,c
 56905  015C22  6E0B               	movwf	USBEnableEndpoint@p+1,c
 56906                           
 56907                           ;usb_device.c: 901: *p = options;
 56908  015C24  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 56909  015C28  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 56910  015C2C  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 56911  015C30  0012               	return		;funcret
 56912  015C32                     __end_of_USBEnableEndpoint:
 56913                           	opt stack 0
 56914                           tosu	equ	0xFFF
 56915                           tosh	equ	0xFFE
 56916                           tosl	equ	0xFFD
 56917                           pclatu	equ	0xFFB
 56918                           pclath	equ	0xFFA
 56919                           tblptru	equ	0xFF8
 56920                           tblptrh	equ	0xFF7
 56921                           tblptrl	equ	0xFF6
 56922                           tablat	equ	0xFF5
 56923                           prodh	equ	0xFF4
 56924                           prodl	equ	0xFF3
 56925                           intcon	equ	0xFF2
 56926                           indf0	equ	0xFEF
 56927                           postinc0	equ	0xFEE
 56928                           fsr0h	equ	0xFEA
 56929                           fsr0l	equ	0xFE9
 56930                           wreg	equ	0xFE8
 56931                           indf1	equ	0xFE7
 56932                           postinc1	equ	0xFE6
 56933                           postdec1	equ	0xFE5
 56934                           plusw1	equ	0xFE3
 56935                           fsr1h	equ	0xFE2
 56936                           fsr1l	equ	0xFE1
 56937                           indf2	equ	0xFDF
 56938                           postinc2	equ	0xFDE
 56939                           postdec2	equ	0xFDD
 56940                           plusw2	equ	0xFDB
 56941                           fsr2h	equ	0xFDA
 56942                           fsr2l	equ	0xFD9
 56943                           status	equ	0xFD8
 56944                           
 56945 ;; *************** function _USBConfigureEndpoint *****************
 56946 ;; Defined at:
 56947 ;;		line 1545 in file "usb_device.c"
 56948 ;; Parameters:    Size  Location     Type
 56949 ;;  EPNum           1    wreg     unsigned char 
 56950 ;;  direction       1    0[COMRAM] unsigned char 
 56951 ;; Auto vars:     Size  Location     Type
 56952 ;;  EPNum           1    5[COMRAM] unsigned char 
 56953 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 56954 ;;		 -> BDT(48), 
 56955 ;; Return value:  Size  Location     Type
 56956 ;;                  1    wreg      void 
 56957 ;; Registers used:
 56958 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 56959 ;; Tracked objects:
 56960 ;;		On entry : 0/0
 56961 ;;		On exit  : 0/0
 56962 ;;		Unchanged: 0/0
 56963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 56964 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56965 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56966 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56967 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56968 ;;Total ram usage:        8 bytes
 56969 ;; Hardware stack levels used:    1
 56970 ;; This function calls:
 56971 ;;		Nothing
 56972 ;; This function is called by:
 56973 ;;		_USBEnableEndpoint
 56974 ;; This function uses a non-reentrant model
 56975 ;;
 56976                           
 56977                           	psect	text244
 56978  01402A                     __ptext244:
 56979                           	opt stack 0
 56980  01402A                     _USBConfigureEndpoint:
 56981                           	opt stack 13
 56982                           
 56983                           ;incstack = 0
 56984                           ;USBConfigureEndpoint@EPNum stored from wreg
 56985  01402A  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 56986                           
 56987                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 56988  01402C  0E00               	movlw	0
 56989  01402E  6E07               	movwf	USBConfigureEndpoint@handle,c
 56990  014030  0E0D               	movlw	13
 56991  014032  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 56992                           
 56993                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 56994  014034  5001               	movf	USBConfigureEndpoint@direction,w,c
 56995  014036  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 56996  014038  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 56997  01403A  90D8               	bcf	status,0,c
 56998  01403C  3602               	rlcf	??_USBConfigureEndpoint,f,c
 56999  01403E  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 57000  014040  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 57001  014042  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 57002  014044  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 57003  014046  90D8               	bcf	status,0,c
 57004  014048  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 57005  01404A  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 57006  01404C  90D8               	bcf	status,0,c
 57007  01404E  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 57008  014050  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 57009  014052  5002               	movf	??_USBConfigureEndpoint,w,c
 57010  014054  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 57011  014056  5003               	movf	??_USBConfigureEndpoint+1,w,c
 57012  014058  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 57013  01405A  90D8               	bcf	status,0,c
 57014  01405C  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 57015  01405E  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 57016  014060  90D8               	bcf	status,0,c
 57017  014062  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 57018  014064  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 57019  014066  5004               	movf	??_USBConfigureEndpoint+2,w,c
 57020  014068  2607               	addwf	USBConfigureEndpoint@handle,f,c
 57021  01406A  5005               	movf	??_USBConfigureEndpoint+3,w,c
 57022  01406C  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 57023                           
 57024                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 57025  01406E  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 57026  014072  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 57027  014076  9EDF               	bcf	indf2,7,c
 57028                           
 57029                           ;usb_device.c: 1559: if(direction == 0)
 57030  014078  5001               	movf	USBConfigureEndpoint@direction,w,c
 57031  01407A  A4D8               	btfss	status,2,c
 57032  01407C  D007               	goto	i2l226
 57033                           
 57034                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 57035  01407E  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 57036  014080  0D02               	mullw	2
 57037  014082  0E15               	movlw	low _pBDTEntryOut
 57038  014084  24F3               	addwf	prodl,w,c
 57039  014086  6ED9               	movwf	fsr2l,c
 57040  014088  0E01               	movlw	high _pBDTEntryOut
 57041  01408A  D006               	goto	L69
 57042  01408C                     i2l226:
 57043                           
 57044                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 57045  01408C  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 57046  01408E  0D02               	mullw	2
 57047  014090  0E0F               	movlw	low _pBDTEntryIn
 57048  014092  24F3               	addwf	prodl,w,c
 57049  014094  6ED9               	movwf	fsr2l,c
 57050  014096  0E01               	movlw	high _pBDTEntryIn
 57051  014098                     L69:
 57052  014098  20F4               	addwfc	prodh,w,c
 57053  01409A  6EDA               	movwf	fsr2h,c
 57054  01409C  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 57055  0140A0  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 57056                           
 57057                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 57058  0140A4  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 57059  0140A8  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 57060  0140AC  9CDF               	bcf	indf2,6,c
 57061                           
 57062                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 57063  0140AE  EE20 F004          	lfsr	2,4
 57064  0140B2  5007               	movf	USBConfigureEndpoint@handle,w,c
 57065  0140B4  26D9               	addwf	fsr2l,f,c
 57066  0140B6  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 57067  0140B8  22DA               	addwfc	fsr2h,f,c
 57068  0140BA  8CDF               	bsf	indf2,6,c
 57069  0140BC  0012               	return		;funcret
 57070  0140BE                     __end_of_USBConfigureEndpoint:
 57071                           	opt stack 0
 57072                           tosu	equ	0xFFF
 57073                           tosh	equ	0xFFE
 57074                           tosl	equ	0xFFD
 57075                           pclatu	equ	0xFFB
 57076                           pclath	equ	0xFFA
 57077                           tblptru	equ	0xFF8
 57078                           tblptrh	equ	0xFF7
 57079                           tblptrl	equ	0xFF6
 57080                           tablat	equ	0xFF5
 57081                           prodh	equ	0xFF4
 57082                           prodl	equ	0xFF3
 57083                           intcon	equ	0xFF2
 57084                           indf0	equ	0xFEF
 57085                           postinc0	equ	0xFEE
 57086                           fsr0h	equ	0xFEA
 57087                           fsr0l	equ	0xFE9
 57088                           wreg	equ	0xFE8
 57089                           indf1	equ	0xFE7
 57090                           postinc1	equ	0xFE6
 57091                           postdec1	equ	0xFE5
 57092                           plusw1	equ	0xFE3
 57093                           fsr1h	equ	0xFE2
 57094                           fsr1l	equ	0xFE1
 57095                           indf2	equ	0xFDF
 57096                           postinc2	equ	0xFDE
 57097                           postdec2	equ	0xFDD
 57098                           plusw2	equ	0xFDB
 57099                           fsr2h	equ	0xFDA
 57100                           fsr2l	equ	0xFD9
 57101                           status	equ	0xFD8
 57102                           
 57103 ;; *************** function _USBCtrlTrfOutHandler *****************
 57104 ;; Defined at:
 57105 ;;		line 2540 in file "usb_device.c"
 57106 ;; Parameters:    Size  Location     Type
 57107 ;;		None
 57108 ;; Auto vars:     Size  Location     Type
 57109 ;;		None
 57110 ;; Return value:  Size  Location     Type
 57111 ;;                  1    wreg      void 
 57112 ;; Registers used:
 57113 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 57114 ;; Tracked objects:
 57115 ;;		On entry : 0/0
 57116 ;;		On exit  : 0/0
 57117 ;;		Unchanged: 0/0
 57118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 57119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57123 ;;Total ram usage:        0 bytes
 57124 ;; Hardware stack levels used:    1
 57125 ;; Hardware stack levels required when called:    2
 57126 ;; This function calls:
 57127 ;;		_USBCtrlTrfRxService
 57128 ;; This function is called by:
 57129 ;;		_USBCtrlEPService
 57130 ;; This function uses a non-reentrant model
 57131 ;;
 57132                           
 57133                           	psect	text245
 57134  014EC4                     __ptext245:
 57135                           	opt stack 0
 57136  014EC4                     _USBCtrlTrfOutHandler:
 57137                           	opt stack 13
 57138                           
 57139                           ;usb_device.c: 2542: if(controlTransferState == 2)
 57140                           
 57141                           ;incstack = 0
 57142  014EC4  0E02               	movlw	2
 57143  014EC6  0100               	movlb	0	; () banked
 57144  014EC8  19FF               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 57145  014ECA  A4D8               	btfss	status,2,c
 57146  014ECC  D003               	goto	i2l332
 57147                           
 57148                           ; BSR set to: 0
 57149                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 57150  014ECE  EC09  F08A         	call	_USBCtrlTrfRxService	;wreg free
 57151                           
 57152                           ;usb_device.c: 2545: }
 57153  014ED2  0012               	return	
 57154  014ED4                     i2l332:
 57155                           
 57156                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 57157  014ED4  0E00               	movlw	0
 57158  014ED6  0100               	movlb	0	; () banked
 57159  014ED8  6FFF               	movwf	_controlTransferState& (0+255),b	;volatile
 57160                           
 57161                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 57162  014EDA  0101               	movlb	1	; () banked
 57163  014EDC  515F               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 57164  014EDE  A4D8               	btfss	status,2,c
 57165  014EE0  D01F               	goto	i2l334
 57166                           
 57167                           ; BSR set to: 1
 57168                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 57169  014EE2  EE20 F001          	lfsr	2,1
 57170  014EE6  5059               	movf	_pBDTEntryEP0OutNext,w,c
 57171  014EE8  26D9               	addwf	fsr2l,f,c
 57172  014EEA  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 57173  014EEC  22DA               	addwfc	fsr2h,f,c
 57174  014EEE  0E08               	movlw	8
 57175  014EF0  6EDF               	movwf	indf2,c
 57176                           
 57177                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 57178  014EF2  EE20 F002          	lfsr	2,2
 57179  014EF6  5059               	movf	_pBDTEntryEP0OutNext,w,c
 57180  014EF8  26D9               	addwf	fsr2l,f,c
 57181  014EFA  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 57182  014EFC  22DA               	addwfc	fsr2h,f,c
 57183  014EFE  0E30               	movlw	48
 57184  014F00  6EDE               	movwf	postinc2,c
 57185  014F02  0E0D               	movlw	13
 57186  014F04  6EDD               	movwf	postdec2,c
 57187                           
 57188                           ; BSR set to: 1
 57189                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 57190  014F06  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 57191  014F0A  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 57192  014F0E  0E0C               	movlw	12
 57193  014F10  6EDF               	movwf	indf2,c
 57194                           
 57195                           ; BSR set to: 1
 57196                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 57197  014F12  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 57198  014F16  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 57199  014F1A  0E00               	movlw	0
 57200  014F1C  8EDB               	bsf	plusw2,7,c
 57201                           
 57202                           ;usb_device.c: 2563: }
 57203  014F1E  0012               	return	
 57204  014F20                     i2l334:
 57205                           
 57206                           ; BSR set to: 1
 57207                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 57208                           
 57209                           ; BSR set to: 1
 57210  014F20  0E00               	movlw	0
 57211  014F22  6F5F               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 57212                           
 57213                           ; BSR set to: 1
 57214  014F24  0012               	return	
 57215  014F26                     __end_of_USBCtrlTrfOutHandler:
 57216                           	opt stack 0
 57217                           tosu	equ	0xFFF
 57218                           tosh	equ	0xFFE
 57219                           tosl	equ	0xFFD
 57220                           pclatu	equ	0xFFB
 57221                           pclath	equ	0xFFA
 57222                           tblptru	equ	0xFF8
 57223                           tblptrh	equ	0xFF7
 57224                           tblptrl	equ	0xFF6
 57225                           tablat	equ	0xFF5
 57226                           prodh	equ	0xFF4
 57227                           prodl	equ	0xFF3
 57228                           intcon	equ	0xFF2
 57229                           indf0	equ	0xFEF
 57230                           postinc0	equ	0xFEE
 57231                           fsr0h	equ	0xFEA
 57232                           fsr0l	equ	0xFE9
 57233                           wreg	equ	0xFE8
 57234                           indf1	equ	0xFE7
 57235                           postinc1	equ	0xFE6
 57236                           postdec1	equ	0xFE5
 57237                           plusw1	equ	0xFE3
 57238                           fsr1h	equ	0xFE2
 57239                           fsr1l	equ	0xFE1
 57240                           indf2	equ	0xFDF
 57241                           postinc2	equ	0xFDE
 57242                           postdec2	equ	0xFDD
 57243                           plusw2	equ	0xFDB
 57244                           fsr2h	equ	0xFDA
 57245                           fsr2l	equ	0xFD9
 57246                           status	equ	0xFD8
 57247                           
 57248 ;; *************** function _USBCtrlTrfRxService *****************
 57249 ;; Defined at:
 57250 ;;		line 1854 in file "usb_device.c"
 57251 ;; Parameters:    Size  Location     Type
 57252 ;;		None
 57253 ;; Auto vars:     Size  Location     Type
 57254 ;;  byteToRead      1    1[COMRAM] unsigned char 
 57255 ;;  i               1    0[COMRAM] unsigned char 
 57256 ;; Return value:  Size  Location     Type
 57257 ;;                  1    wreg      void 
 57258 ;; Registers used:
 57259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 57260 ;; Tracked objects:
 57261 ;;		On entry : 0/0
 57262 ;;		On exit  : 0/0
 57263 ;;		Unchanged: 0/0
 57264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 57265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57266 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57268 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57269 ;;Total ram usage:        2 bytes
 57270 ;; Hardware stack levels used:    1
 57271 ;; Hardware stack levels required when called:    1
 57272 ;; This function calls:
 57273 ;;		_USBCtrlEPAllowStatusStage
 57274 ;; This function is called by:
 57275 ;;		_USBCtrlTrfOutHandler
 57276 ;; This function uses a non-reentrant model
 57277 ;;
 57278                           
 57279                           	psect	text246
 57280  011412                     __ptext246:
 57281                           	opt stack 0
 57282  011412                     _USBCtrlTrfRxService:
 57283                           	opt stack 13
 57284                           
 57285                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 57286                           
 57287                           ;incstack = 0
 57288  011412  EE20 F001          	lfsr	2,1
 57289  011416  505B               	movf	_pBDTEntryEP0OutCurrent,w,c
 57290  011418  26D9               	addwf	fsr2l,f,c
 57291  01141A  505C               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 57292  01141C  22DA               	addwfc	fsr2h,f,c
 57293  01141E  50DF               	movf	indf2,w,c
 57294  011420  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 57295                           
 57296                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 57297  011422  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 57298  011424  0101               	movlb	1	; () banked
 57299  011426  5D04               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 57300  011428  0E00               	movlw	0
 57301  01142A  5905               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 57302  01142C  A0D8               	btfss	status,0,c
 57303                           
 57304                           ; BSR set to: 1
 57305                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 57306  01142E  C104  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 57307                           
 57308                           ; BSR set to: 1
 57309                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 57310                           
 57311                           ; BSR set to: 1
 57312  011432  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 57313  011434  5F04               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 57314  011436  0E00               	movlw	0
 57315  011438  5B05               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 57316                           
 57317                           ; BSR set to: 1
 57318                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 57319  01143A  0E00               	movlw	0
 57320  01143C  6E01               	movwf	USBCtrlTrfRxService@i,c
 57321  01143E  D011               	goto	i2l260
 57322  011440                     
 57323                           ; BSR set to: 1
 57324                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 57325                           
 57326                           ; BSR set to: 1
 57327  011440  5001               	movf	USBCtrlTrfRxService@i,w,c
 57328  011442  0D01               	mullw	1
 57329  011444  0E38               	movlw	56
 57330  011446  24F3               	addwf	prodl,w,c
 57331  011448  6ED9               	movwf	fsr2l,c
 57332  01144A  0E0D               	movlw	13
 57333  01144C  20F4               	addwfc	prodh,w,c
 57334  01144E  6EDA               	movwf	fsr2h,c
 57335  011450  C100  FFE1         	movff	_outPipes,fsr1l	;volatile
 57336  011454  C101  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 57337  011458  CFDF FFE7          	movff	indf2,indf1
 57338                           
 57339                           ; BSR set to: 1
 57340  01145C  4B00               	infsnz	_outPipes& (0+255),f,b	;volatile
 57341  01145E  2B01               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 57342                           
 57343                           ; BSR set to: 1
 57344  011460  2A01               	incf	USBCtrlTrfRxService@i,f,c
 57345  011462                     i2l260:
 57346                           
 57347                           ; BSR set to: 1
 57348                           
 57349                           ; BSR set to: 1
 57350  011462  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 57351  011464  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 57352  011466  A0D8               	btfss	status,0,c
 57353  011468  D7EB               	goto	i2l261
 57354                           
 57355                           ; BSR set to: 1
 57356                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 57357                           
 57358                           ; BSR set to: 1
 57359  01146A  5104               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 57360  01146C  1105               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 57361  01146E  B4D8               	btfsc	status,2,c
 57362  011470  D032               	goto	i2l263
 57363                           
 57364                           ; BSR set to: 1
 57365                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 57366  011472  EE20 F001          	lfsr	2,1
 57367  011476  5059               	movf	_pBDTEntryEP0OutNext,w,c
 57368  011478  26D9               	addwf	fsr2l,f,c
 57369  01147A  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 57370  01147C  22DA               	addwfc	fsr2h,f,c
 57371  01147E  0E08               	movlw	8
 57372  011480  6EDF               	movwf	indf2,c
 57373                           
 57374                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 57375  011482  EE20 F002          	lfsr	2,2
 57376  011486  5059               	movf	_pBDTEntryEP0OutNext,w,c
 57377  011488  26D9               	addwf	fsr2l,f,c
 57378  01148A  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 57379  01148C  22DA               	addwfc	fsr2h,f,c
 57380  01148E  0E38               	movlw	56
 57381  011490  6EDE               	movwf	postinc2,c
 57382  011492  0E0D               	movlw	13
 57383  011494  6EDD               	movwf	postdec2,c
 57384                           
 57385                           ; BSR set to: 1
 57386                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 57387  011496  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 57388  01149A  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 57389  01149E  BCDF               	btfsc	indf2,6,c
 57390  0114A0  D00D               	goto	i2l264
 57391                           
 57392                           ; BSR set to: 1
 57393                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 57394  0114A2  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 57395  0114A6  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 57396  0114AA  0E48               	movlw	72
 57397  0114AC  6EDF               	movwf	indf2,c
 57398                           
 57399                           ; BSR set to: 1
 57400                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 57401  0114AE  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 57402  0114B2  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 57403  0114B6  0E00               	movlw	0
 57404  0114B8  8EDB               	bsf	plusw2,7,c
 57405                           
 57406                           ;usb_device.c: 1891: }
 57407  0114BA  0012               	return	
 57408  0114BC                     i2l264:
 57409                           
 57410                           ; BSR set to: 1
 57411                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 57412                           
 57413                           ; BSR set to: 1
 57414  0114BC  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 57415  0114C0  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 57416  0114C4  0E08               	movlw	8
 57417  0114C6  6EDF               	movwf	indf2,c
 57418                           
 57419                           ; BSR set to: 1
 57420                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 57421  0114C8  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 57422  0114CC  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 57423  0114D0  0E00               	movlw	0
 57424  0114D2  8EDB               	bsf	plusw2,7,c
 57425                           
 57426                           ; BSR set to: 1
 57427                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 57428  0114D4  0012               	return	
 57429  0114D6                     i2l263:
 57430                           
 57431                           ; BSR set to: 1
 57432                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 57433                           
 57434                           ; BSR set to: 1
 57435  0114D6  EE20 F001          	lfsr	2,1
 57436  0114DA  5059               	movf	_pBDTEntryEP0OutNext,w,c
 57437  0114DC  26D9               	addwf	fsr2l,f,c
 57438  0114DE  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 57439  0114E0  22DA               	addwfc	fsr2h,f,c
 57440  0114E2  0E08               	movlw	8
 57441  0114E4  6EDF               	movwf	indf2,c
 57442                           
 57443                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 57444  0114E6  EE20 F002          	lfsr	2,2
 57445  0114EA  5059               	movf	_pBDTEntryEP0OutNext,w,c
 57446  0114EC  26D9               	addwf	fsr2l,f,c
 57447  0114EE  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 57448  0114F0  22DA               	addwfc	fsr2h,f,c
 57449  0114F2  0E30               	movlw	48
 57450  0114F4  6EDE               	movwf	postinc2,c
 57451  0114F6  0E0D               	movlw	13
 57452  0114F8  6EDD               	movwf	postdec2,c
 57453                           
 57454                           ; BSR set to: 1
 57455                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 57456  0114FA  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 57457  0114FE  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 57458  011502  0E04               	movlw	4
 57459  011504  6EDF               	movwf	indf2,c
 57460                           
 57461                           ; BSR set to: 1
 57462                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 57463  011506  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 57464  01150A  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 57465  01150E  0E00               	movlw	0
 57466  011510  8EDB               	bsf	plusw2,7,c
 57467                           
 57468                           ; BSR set to: 1
 57469                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 57470                           
 57471                           ; BSR set to: 1
 57472                           ;usb_device.c: 1917: {;usb_device.c: 1923: outPipes[0].pFunc();
 57473  011512  9F03               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 57474                           
 57475                           ; BSR set to: 1
 57476                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 57477  011514  515D               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 57478  011516  A4D8               	btfss	status,2,c
 57479  011518  0012               	return	
 57480                           
 57481                           ; BSR set to: 1
 57482                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 57483  01151A  ECD2  F097         	call	_USBCtrlEPAllowStatusStage	;wreg free
 57484  01151E  0012               	return	
 57485  011520                     __end_of_USBCtrlTrfRxService:
 57486                           	opt stack 0
 57487                           tosu	equ	0xFFF
 57488                           tosh	equ	0xFFE
 57489                           tosl	equ	0xFFD
 57490                           pclatu	equ	0xFFB
 57491                           pclath	equ	0xFFA
 57492                           tblptru	equ	0xFF8
 57493                           tblptrh	equ	0xFF7
 57494                           tblptrl	equ	0xFF6
 57495                           tablat	equ	0xFF5
 57496                           prodh	equ	0xFF4
 57497                           prodl	equ	0xFF3
 57498                           intcon	equ	0xFF2
 57499                           indf0	equ	0xFEF
 57500                           postinc0	equ	0xFEE
 57501                           fsr0h	equ	0xFEA
 57502                           fsr0l	equ	0xFE9
 57503                           wreg	equ	0xFE8
 57504                           indf1	equ	0xFE7
 57505                           postinc1	equ	0xFE6
 57506                           postdec1	equ	0xFE5
 57507                           plusw1	equ	0xFE3
 57508                           fsr1h	equ	0xFE2
 57509                           fsr1l	equ	0xFE1
 57510                           indf2	equ	0xFDF
 57511                           postinc2	equ	0xFDE
 57512                           postdec2	equ	0xFDD
 57513                           plusw2	equ	0xFDB
 57514                           fsr2h	equ	0xFDA
 57515                           fsr2l	equ	0xFD9
 57516                           status	equ	0xFD8
 57517                           
 57518 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 57519 ;; Defined at:
 57520 ;;		line 1418 in file "usb_device.c"
 57521 ;; Parameters:    Size  Location     Type
 57522 ;;		None
 57523 ;; Auto vars:     Size  Location     Type
 57524 ;;		None
 57525 ;; Return value:  Size  Location     Type
 57526 ;;                  1    wreg      void 
 57527 ;; Registers used:
 57528 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 57529 ;; Tracked objects:
 57530 ;;		On entry : 0/0
 57531 ;;		On exit  : 0/0
 57532 ;;		Unchanged: 0/0
 57533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 57534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57538 ;;Total ram usage:        0 bytes
 57539 ;; Hardware stack levels used:    1
 57540 ;; This function calls:
 57541 ;;		Nothing
 57542 ;; This function is called by:
 57543 ;;		_USBDeviceTasks
 57544 ;;		_USBCtrlEPServiceComplete
 57545 ;;		_USBCtrlTrfRxService
 57546 ;; This function uses a non-reentrant model
 57547 ;;
 57548                           
 57549                           	psect	text247
 57550  012FA4                     __ptext247:
 57551                           	opt stack 0
 57552  012FA4                     _USBCtrlEPAllowStatusStage:
 57553                           	opt stack 13
 57554                           
 57555                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 57556                           
 57557                           ;incstack = 0
 57558  012FA4  0101               	movlb	1	; () banked
 57559  012FA6  515C               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 57560  012FA8  A4D8               	btfss	status,2,c
 57561  012FAA  0012               	return	
 57562                           
 57563                           ; BSR set to: 1
 57564                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 57565  012FAC  0E01               	movlw	1
 57566  012FAE  6F5C               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 57567                           
 57568                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 57569  012FB0  515B               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 57570  012FB2  A4D8               	btfss	status,2,c
 57571  012FB4  0012               	return	
 57572                           
 57573                           ; BSR set to: 1
 57574                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 57575  012FB6  0E01               	movlw	1
 57576  012FB8  6F5B               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 57577                           
 57578                           ; BSR set to: 1
 57579                           ;usb_device.c: 1434: if(controlTransferState == 2)
 57580  012FBA  0E02               	movlw	2
 57581  012FBC  0100               	movlb	0	; () banked
 57582  012FBE  19FF               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 57583  012FC0  A4D8               	btfss	status,2,c
 57584  012FC2  D016               	goto	i2l214
 57585                           
 57586                           ; BSR set to: 0
 57587                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 57588  012FC4  0101               	movlb	1	; () banked
 57589  012FC6  EE20 F001          	lfsr	2,1
 57590  012FCA  510F               	movf	_pBDTEntryIn& (0+255),w,b
 57591  012FCC  26D9               	addwf	fsr2l,f,c
 57592  012FCE  5110               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 57593  012FD0  22DA               	addwfc	fsr2h,f,c
 57594  012FD2  0E00               	movlw	0
 57595  012FD4  6EDF               	movwf	indf2,c
 57596                           
 57597                           ; BSR set to: 1
 57598                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 57599  012FD6  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 57600  012FDA  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 57601  012FDE  0E48               	movlw	72
 57602  012FE0  6EDF               	movwf	indf2,c
 57603                           
 57604                           ; BSR set to: 1
 57605                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 57606  012FE2  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 57607  012FE6  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 57608  012FEA  0E00               	movlw	0
 57609  012FEC  8EDB               	bsf	plusw2,7,c
 57610                           
 57611                           ;usb_device.c: 1439: }
 57612  012FEE  0012               	return	
 57613  012FF0                     i2l214:
 57614                           
 57615                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 57616                           
 57617                           ; BSR set to: 1
 57618  012FF0  0100               	movlb	0	; () banked
 57619  012FF2  05FF               	decf	_controlTransferState& (0+255),w,b	;volatile
 57620  012FF4  A4D8               	btfss	status,2,c
 57621  012FF6  0012               	return	
 57622                           
 57623                           ; BSR set to: 0
 57624                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 57625  012FF8  0E00               	movlw	0
 57626  012FFA  0101               	movlb	1	; () banked
 57627  012FFC  6F5F               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 57628                           
 57629                           ; BSR set to: 1
 57630                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 57631  012FFE  EE20 F001          	lfsr	2,1
 57632  013002  505B               	movf	_pBDTEntryEP0OutCurrent,w,c
 57633  013004  26D9               	addwf	fsr2l,f,c
 57634  013006  505C               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 57635  013008  22DA               	addwfc	fsr2h,f,c
 57636  01300A  0E08               	movlw	8
 57637  01300C  6EDF               	movwf	indf2,c
 57638                           
 57639                           ; BSR set to: 1
 57640                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 57641  01300E  EE20 F002          	lfsr	2,2
 57642  013012  505B               	movf	_pBDTEntryEP0OutCurrent,w,c
 57643  013014  26D9               	addwf	fsr2l,f,c
 57644  013016  505C               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 57645  013018  22DA               	addwfc	fsr2h,f,c
 57646  01301A  0E30               	movlw	48
 57647  01301C  6EDE               	movwf	postinc2,c
 57648  01301E  0E0D               	movlw	13
 57649  013020  6EDD               	movwf	postdec2,c
 57650                           
 57651                           ; BSR set to: 1
 57652                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 57653  013022  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 57654  013026  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 57655  01302A  0E04               	movlw	4
 57656  01302C  6EDF               	movwf	indf2,c
 57657                           
 57658                           ; BSR set to: 1
 57659                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 57660  01302E  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 57661  013032  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 57662  013036  0E00               	movlw	0
 57663  013038  8EDB               	bsf	plusw2,7,c
 57664                           
 57665                           ; BSR set to: 1
 57666                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 57667  01303A  0E01               	movlw	1
 57668  01303C  6F5F               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 57669                           
 57670                           ; BSR set to: 1
 57671                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 57672  01303E  EE20 F001          	lfsr	2,1
 57673  013042  5059               	movf	_pBDTEntryEP0OutNext,w,c
 57674  013044  26D9               	addwf	fsr2l,f,c
 57675  013046  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 57676  013048  22DA               	addwfc	fsr2h,f,c
 57677  01304A  0E08               	movlw	8
 57678  01304C  6EDF               	movwf	indf2,c
 57679                           
 57680                           ; BSR set to: 1
 57681                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 57682  01304E  EE20 F002          	lfsr	2,2
 57683  013052  5059               	movf	_pBDTEntryEP0OutNext,w,c
 57684  013054  26D9               	addwf	fsr2l,f,c
 57685  013056  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 57686  013058  22DA               	addwfc	fsr2h,f,c
 57687  01305A  0E30               	movlw	48
 57688  01305C  6EDE               	movwf	postinc2,c
 57689  01305E  0E0D               	movlw	13
 57690  013060  6EDD               	movwf	postdec2,c
 57691                           
 57692                           ; BSR set to: 1
 57693                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 57694  013062  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 57695  013066  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 57696  01306A  0E80               	movlw	128
 57697  01306C  6EDF               	movwf	indf2,c
 57698                           
 57699                           ; BSR set to: 1
 57700                           
 57701                           ; BSR set to: 1
 57702                           
 57703                           ; BSR set to: 1
 57704  01306E  0012               	return	
 57705  013070                     __end_of_USBCtrlEPAllowStatusStage:
 57706                           	opt stack 0
 57707                           tosu	equ	0xFFF
 57708                           tosh	equ	0xFFE
 57709                           tosl	equ	0xFFD
 57710                           pclatu	equ	0xFFB
 57711                           pclath	equ	0xFFA
 57712                           tblptru	equ	0xFF8
 57713                           tblptrh	equ	0xFF7
 57714                           tblptrl	equ	0xFF6
 57715                           tablat	equ	0xFF5
 57716                           prodh	equ	0xFF4
 57717                           prodl	equ	0xFF3
 57718                           intcon	equ	0xFF2
 57719                           indf0	equ	0xFEF
 57720                           postinc0	equ	0xFEE
 57721                           fsr0h	equ	0xFEA
 57722                           fsr0l	equ	0xFE9
 57723                           wreg	equ	0xFE8
 57724                           indf1	equ	0xFE7
 57725                           postinc1	equ	0xFE6
 57726                           postdec1	equ	0xFE5
 57727                           plusw1	equ	0xFE3
 57728                           fsr1h	equ	0xFE2
 57729                           fsr1l	equ	0xFE1
 57730                           indf2	equ	0xFDF
 57731                           postinc2	equ	0xFDE
 57732                           postdec2	equ	0xFDD
 57733                           plusw2	equ	0xFDB
 57734                           fsr2h	equ	0xFDA
 57735                           fsr2l	equ	0xFD9
 57736                           status	equ	0xFD8
 57737                           
 57738 ;; *************** function _USBCtrlTrfInHandler *****************
 57739 ;; Defined at:
 57740 ;;		line 2594 in file "usb_device.c"
 57741 ;; Parameters:    Size  Location     Type
 57742 ;;		None
 57743 ;; Auto vars:     Size  Location     Type
 57744 ;;  lastDTS         1    1[COMRAM] unsigned char 
 57745 ;; Return value:  Size  Location     Type
 57746 ;;                  1    wreg      void 
 57747 ;; Registers used:
 57748 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 57749 ;; Tracked objects:
 57750 ;;		On entry : 0/0
 57751 ;;		On exit  : 0/0
 57752 ;;		Unchanged: 0/0
 57753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 57754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57755 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57757 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57758 ;;Total ram usage:        1 bytes
 57759 ;; Hardware stack levels used:    1
 57760 ;; Hardware stack levels required when called:    1
 57761 ;; This function calls:
 57762 ;;		_USBCtrlTrfTxService
 57763 ;; This function is called by:
 57764 ;;		_USBCtrlEPService
 57765 ;; This function uses a non-reentrant model
 57766 ;;
 57767                           
 57768                           	psect	text248
 57769  013070                     __ptext248:
 57770                           	opt stack 0
 57771  013070                     _USBCtrlTrfInHandler:
 57772                           	opt stack 14
 57773                           
 57774                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 57775                           
 57776                           ;incstack = 0
 57777  013070  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 57778  013074  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 57779  013078  0101               	movlb	1	; () banked
 57780  01307A  0E00               	movlw	0
 57781  01307C  BCDF               	btfsc	indf2,6,c
 57782  01307E  0E01               	movlw	1
 57783  013080  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 57784                           
 57785                           ; BSR set to: 1
 57786                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 57787  013082  0E04               	movlw	4
 57788  013084  190F               	xorwf	_pBDTEntryIn& (0+255),w,b
 57789  013086  6F0F               	movwf	_pBDTEntryIn& (0+255),b
 57790  013088  5110               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 57791  01308A  6F10               	movwf	(_pBDTEntryIn+1)& (0+255),b
 57792                           
 57793                           ; BSR set to: 1
 57794                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 57795  01308C  0E08               	movlw	8
 57796  01308E  185D               	xorwf	_USBDeviceState,w,c	;volatile
 57797  013090  A4D8               	btfss	status,2,c
 57798  013092  D00C               	goto	i2l341
 57799                           
 57800                           ; BSR set to: 1
 57801                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 57802  013094  010D               	movlb	13	; () banked
 57803  013096  5132               	movf	50,w,b	;volatile
 57804  013098  0B7F               	andlw	127
 57805  01309A  010F               	movlb	15	; () banked
 57806  01309C  6F38               	movwf	56,b	;volatile
 57807                           
 57808                           ; BSR set to: 15
 57809                           ;usb_device.c: 2609: if(UADDR != 0u)
 57810  01309E  5138               	movf	56,w,b	;volatile
 57811  0130A0  B4D8               	btfsc	status,2,c
 57812  0130A2  D002               	goto	i2l340
 57813                           
 57814                           ; BSR set to: 15
 57815                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 57816  0130A4  0E10               	movlw	16
 57817  0130A6  D001               	goto	L70
 57818  0130A8                     i2l340:
 57819                           
 57820                           ; BSR set to: 15
 57821                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 57822                           
 57823                           ; BSR set to: 15
 57824  0130A8  0E04               	movlw	4
 57825  0130AA                     L70:
 57826  0130AA  6E5D               	movwf	_USBDeviceState,c	;volatile
 57827  0130AC                     i2l341:
 57828                           
 57829                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 57830                           
 57831                           ; BSR set to: 15
 57832                           
 57833                           ; BSR set to: 15
 57834  0130AC  0100               	movlb	0	; () banked
 57835  0130AE  05FF               	decf	_controlTransferState& (0+255),w,b	;volatile
 57836  0130B0  A4D8               	btfss	status,2,c
 57837  0130B2  D03C               	goto	i2l342
 57838                           
 57839                           ; BSR set to: 0
 57840                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 57841  0130B4  0101               	movlb	1	; () banked
 57842  0130B6  EE20 F002          	lfsr	2,2
 57843  0130BA  510F               	movf	_pBDTEntryIn& (0+255),w,b
 57844  0130BC  26D9               	addwf	fsr2l,f,c
 57845  0130BE  5110               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 57846  0130C0  22DA               	addwfc	fsr2h,f,c
 57847  0130C2  0E38               	movlw	56
 57848  0130C4  6EDE               	movwf	postinc2,c
 57849  0130C6  0E0D               	movlw	13
 57850  0130C8  6EDD               	movwf	postdec2,c
 57851                           
 57852                           ; BSR set to: 1
 57853                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 57854  0130CA  EC9C  F096         	call	_USBCtrlTrfTxService	;wreg free
 57855                           
 57856                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 57857  0130CE  0E02               	movlw	2
 57858  0130D0  0101               	movlb	1	; () banked
 57859  0130D2  1963               	xorwf	_shortPacketStatus& (0+255),w,b	;volatile
 57860  0130D4  A4D8               	btfss	status,2,c
 57861  0130D6  D00D               	goto	i2l343
 57862                           
 57863                           ; BSR set to: 1
 57864                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 57865  0130D8  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 57866  0130DC  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 57867  0130E0  0E04               	movlw	4
 57868  0130E2  6EDF               	movwf	indf2,c
 57869                           
 57870                           ; BSR set to: 1
 57871                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 57872  0130E4  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 57873  0130E8  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 57874  0130EC  0E00               	movlw	0
 57875  0130EE  8EDB               	bsf	plusw2,7,c
 57876                           
 57877                           ;usb_device.c: 2635: }
 57878  0130F0  0012               	return	
 57879  0130F2                     i2l343:
 57880                           
 57881                           ; BSR set to: 1
 57882                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 57883                           
 57884                           ; BSR set to: 1
 57885  0130F2  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 57886  0130F4  A4D8               	btfss	status,2,c
 57887  0130F6  D00D               	goto	i2l345
 57888                           
 57889                           ; BSR set to: 1
 57890                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 57891  0130F8  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 57892  0130FC  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 57893  013100  0E48               	movlw	72
 57894  013102  6EDF               	movwf	indf2,c
 57895                           
 57896                           ; BSR set to: 1
 57897                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 57898  013104  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 57899  013108  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 57900  01310C  0E00               	movlw	0
 57901  01310E  8EDB               	bsf	plusw2,7,c
 57902                           
 57903                           ;usb_device.c: 2642: }
 57904  013110  0012               	return	
 57905  013112                     i2l345:
 57906                           
 57907                           ; BSR set to: 1
 57908                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 57909                           
 57910                           ; BSR set to: 1
 57911  013112  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 57912  013116  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 57913  01311A  0E08               	movlw	8
 57914  01311C  6EDF               	movwf	indf2,c
 57915                           
 57916                           ; BSR set to: 1
 57917                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 57918  01311E  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 57919  013122  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 57920  013126  0E00               	movlw	0
 57921  013128  8EDB               	bsf	plusw2,7,c
 57922                           
 57923                           ; BSR set to: 1
 57924                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 57925                           
 57926                           ; BSR set to: 1
 57927  01312A  0012               	return	
 57928  01312C                     i2l342:
 57929                           
 57930                           ; BSR set to: 0
 57931                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 57932  01312C  0101               	movlb	1	; () banked
 57933  01312E  BF03               	btfsc	(_outPipes+3)& (0+255),7,b	;volatile
 57934                           
 57935                           ; BSR set to: 1
 57936                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 57937                           
 57938                           ; BSR set to: 1
 57939                           ;usb_device.c: 2658: {;usb_device.c: 2659: outPipes[0].pFunc();
 57940  013130  9F03               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 57941                           
 57942                           ; BSR set to: 1
 57943                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 57944                           
 57945                           ; BSR set to: 1
 57946  013132  0E00               	movlw	0
 57947  013134  0100               	movlb	0	; () banked
 57948  013136  6FFF               	movwf	_controlTransferState& (0+255),b	;volatile
 57949  013138  0012               	return	
 57950  01313A                     __end_of_USBCtrlTrfInHandler:
 57951                           	opt stack 0
 57952                           tosu	equ	0xFFF
 57953                           tosh	equ	0xFFE
 57954                           tosl	equ	0xFFD
 57955                           pclatu	equ	0xFFB
 57956                           pclath	equ	0xFFA
 57957                           tblptru	equ	0xFF8
 57958                           tblptrh	equ	0xFF7
 57959                           tblptrl	equ	0xFF6
 57960                           tablat	equ	0xFF5
 57961                           prodh	equ	0xFF4
 57962                           prodl	equ	0xFF3
 57963                           intcon	equ	0xFF2
 57964                           indf0	equ	0xFEF
 57965                           postinc0	equ	0xFEE
 57966                           fsr0h	equ	0xFEA
 57967                           fsr0l	equ	0xFE9
 57968                           wreg	equ	0xFE8
 57969                           indf1	equ	0xFE7
 57970                           postinc1	equ	0xFE6
 57971                           postdec1	equ	0xFE5
 57972                           plusw1	equ	0xFE3
 57973                           fsr1h	equ	0xFE2
 57974                           fsr1l	equ	0xFE1
 57975                           indf2	equ	0xFDF
 57976                           postinc2	equ	0xFDE
 57977                           postdec2	equ	0xFDD
 57978                           plusw2	equ	0xFDB
 57979                           fsr2h	equ	0xFDA
 57980                           fsr2l	equ	0xFD9
 57981                           status	equ	0xFD8
 57982                           
 57983 ;; *************** function _USBCtrlTrfTxService *****************
 57984 ;; Defined at:
 57985 ;;		line 1773 in file "usb_device.c"
 57986 ;; Parameters:    Size  Location     Type
 57987 ;;		None
 57988 ;; Auto vars:     Size  Location     Type
 57989 ;;  byteToSend      1    0[COMRAM] unsigned char 
 57990 ;; Return value:  Size  Location     Type
 57991 ;;                  1    wreg      void 
 57992 ;; Registers used:
 57993 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 57994 ;; Tracked objects:
 57995 ;;		On entry : 0/0
 57996 ;;		On exit  : 0/0
 57997 ;;		Unchanged: 0/0
 57998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 57999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 58000 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 58001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 58002 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 58003 ;;Total ram usage:        1 bytes
 58004 ;; Hardware stack levels used:    1
 58005 ;; This function calls:
 58006 ;;		Nothing
 58007 ;; This function is called by:
 58008 ;;		_USBCtrlEPAllowDataStage
 58009 ;;		_USBCtrlTrfInHandler
 58010 ;; This function uses a non-reentrant model
 58011 ;;
 58012                           
 58013                           	psect	text249
 58014  012D38                     __ptext249:
 58015                           	opt stack 0
 58016  012D38                     _USBCtrlTrfTxService:
 58017                           	opt stack 12
 58018                           
 58019                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 58020                           
 58021                           ;incstack = 0
 58022  012D38  0E08               	movlw	8
 58023  012D3A  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 58024                           
 58025                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 58026  012D3C  0101               	movlb	1	; () banked
 58027  012D3E  510E               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 58028  012D40  E110               	bnz	i2l13375
 58029  012D42  0E08               	movlw	8
 58030  012D44  5D0D               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 58031  012D46  B0D8               	btfsc	status,0,c
 58032  012D48  D00C               	goto	i2l247
 58033                           
 58034                           ; BSR set to: 1
 58035                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 58036  012D4A  C10D  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 58037                           
 58038                           ; BSR set to: 1
 58039                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 58040  012D4E  5163               	movf	_shortPacketStatus& (0+255),w,b	;volatile
 58041  012D50  A4D8               	btfss	status,2,c
 58042  012D52  D002               	goto	i2l245
 58043                           
 58044                           ; BSR set to: 1
 58045                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 58046  012D54  0E01               	movlw	1
 58047  012D56  D004               	goto	L71
 58048  012D58                     i2l245:
 58049                           
 58050                           ; BSR set to: 1
 58051                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 58052                           
 58053                           ; BSR set to: 1
 58054  012D58  0563               	decf	_shortPacketStatus& (0+255),w,b	;volatile
 58055  012D5A  A4D8               	btfss	status,2,c
 58056  012D5C  D002               	goto	i2l247
 58057                           
 58058                           ; BSR set to: 1
 58059                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 58060  012D5E  0E02               	movlw	2
 58061  012D60                     L71:
 58062  012D60  6F63               	movwf	_shortPacketStatus& (0+255),b	;volatile
 58063  012D62                     i2l247:
 58064  012D62                     i2l13375:
 58065                           
 58066                           ; BSR set to: 1
 58067                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 58068  012D62  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 58069  012D64  5F0D               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 58070  012D66  0E00               	movlw	0
 58071  012D68  5B0E               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 58072                           
 58073                           ; BSR set to: 1
 58074                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 58075  012D6A  EE20 F001          	lfsr	2,1
 58076  012D6E  510F               	movf	_pBDTEntryIn& (0+255),w,b
 58077  012D70  26D9               	addwf	fsr2l,f,c
 58078  012D72  5110               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 58079  012D74  22DA               	addwfc	fsr2h,f,c
 58080  012D76  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 58081                           
 58082                           ; BSR set to: 1
 58083                           ;usb_device.c: 1810: pDst = (volatile uint8_t*)CtrlTrfData;
 58084  012D7A  0E38               	movlw	56
 58085  012D7C  6F44               	movwf	_pDst& (0+255),b
 58086  012D7E  0E0D               	movlw	13
 58087  012D80  6F45               	movwf	(_pDst+1)& (0+255),b
 58088                           
 58089                           ; BSR set to: 1
 58090                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 58091  012D82  A10C               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 58092  012D84  D01D               	goto	i2l249
 58093  012D86  D03C               	goto	i2l253
 58094  012D88                     
 58095                           ; BSR set to: 1
 58096                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 58097                           
 58098                           ; BSR set to: 1
 58099  012D88  C109  FFF6         	movff	_inPipes,tblptrl	;volatile
 58100  012D8C  C10A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 58101  012D90  0E00               	movlw	low (__mediumconst shr (0+16))
 58102  012D92  6EF8               	movwf	tblptru,c
 58103  012D94  C144  FFD9         	movff	_pDst,fsr2l
 58104  012D98  C145  FFDA         	movff	_pDst+1,fsr2h
 58105  012D9C  0E0E               	movlw	(high __ramtop+-1)
 58106  012D9E  64F7               	cpfsgt	tblptrh,c
 58107  012DA0  D003               	bra	i2u1123_47
 58108  012DA2  0008               	tblrd		*
 58109  012DA4  50F5               	movf	tablat,w,c
 58110  012DA6  D005               	bra	i2u1123_40
 58111  012DA8                     i2u1123_47:
 58112  012DA8  CFF6 FFE9          	movff	tblptrl,fsr0l
 58113  012DAC  CFF7 FFEA          	movff	tblptrh,fsr0h
 58114  012DB0  50EF               	movf	indf0,w,c
 58115  012DB2                     i2u1123_40:
 58116  012DB2  6EDF               	movwf	indf2,c
 58117  012DB4  0101               	movlb	1	; () banked
 58118  012DB6  4B09               	infsnz	_inPipes& (0+255),f,b	;volatile
 58119  012DB8  2B0A               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 58120                           
 58121                           ; BSR set to: 1
 58122  012DBA  4B44               	infsnz	_pDst& (0+255),f,b
 58123  012DBC  2B45               	incf	(_pDst+1)& (0+255),f,b
 58124                           
 58125                           ; BSR set to: 1
 58126                           ;usb_device.c: 1816: byteToSend--;
 58127  012DBE  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 58128  012DC0                     i2l249:
 58129                           
 58130                           ; BSR set to: 1
 58131                           
 58132                           ; BSR set to: 1
 58133  012DC0  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 58134  012DC2  B4D8               	btfsc	status,2,c
 58135  012DC4  0012               	return	
 58136  012DC6  D7E0               	goto	i2l250
 58137  012DC8                     
 58138                           ; BSR set to: 1
 58139                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 58140                           
 58141                           ; BSR set to: 1
 58142  012DC8  C109  FFF6         	movff	_inPipes,tblptrl	;volatile
 58143  012DCC  C10A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 58144  012DD0  0E00               	movlw	low (__mediumconst shr (0+16))
 58145  012DD2  6EF8               	movwf	tblptru,c
 58146  012DD4  C144  FFD9         	movff	_pDst,fsr2l
 58147  012DD8  C145  FFDA         	movff	_pDst+1,fsr2h
 58148  012DDC  0E0E               	movlw	(high __ramtop+-1)
 58149  012DDE  64F7               	cpfsgt	tblptrh,c
 58150  012DE0  D003               	bra	i2u1125_47
 58151  012DE2  0008               	tblrd		*
 58152  012DE4  50F5               	movf	tablat,w,c
 58153  012DE6  D005               	bra	i2u1125_40
 58154  012DE8                     i2u1125_47:
 58155  012DE8  CFF6 FFE9          	movff	tblptrl,fsr0l
 58156  012DEC  CFF7 FFEA          	movff	tblptrh,fsr0h
 58157  012DF0  50EF               	movf	indf0,w,c
 58158  012DF2                     i2u1125_40:
 58159  012DF2  6EDF               	movwf	indf2,c
 58160  012DF4  0101               	movlb	1	; () banked
 58161  012DF6  4B09               	infsnz	_inPipes& (0+255),f,b	;volatile
 58162  012DF8  2B0A               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 58163                           
 58164                           ; BSR set to: 1
 58165  012DFA  4B44               	infsnz	_pDst& (0+255),f,b
 58166  012DFC  2B45               	incf	(_pDst+1)& (0+255),f,b
 58167                           
 58168                           ; BSR set to: 1
 58169                           ;usb_device.c: 1824: byteToSend--;
 58170  012DFE  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 58171  012E00                     i2l253:
 58172                           
 58173                           ; BSR set to: 1
 58174                           
 58175                           ; BSR set to: 1
 58176  012E00  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 58177  012E02  B4D8               	btfsc	status,2,c
 58178  012E04  0012               	return	
 58179  012E06  D7E0               	goto	i2l254
 58180  012E08                     __end_of_USBCtrlTrfTxService:
 58181                           	opt stack 0
 58182                           tosu	equ	0xFFF
 58183                           tosh	equ	0xFFE
 58184                           tosl	equ	0xFFD
 58185                           pclatu	equ	0xFFB
 58186                           pclath	equ	0xFFA
 58187                           tblptru	equ	0xFF8
 58188                           tblptrh	equ	0xFF7
 58189                           tblptrl	equ	0xFF6
 58190                           tablat	equ	0xFF5
 58191                           prodh	equ	0xFF4
 58192                           prodl	equ	0xFF3
 58193                           intcon	equ	0xFF2
 58194                           indf0	equ	0xFEF
 58195                           postinc0	equ	0xFEE
 58196                           fsr0h	equ	0xFEA
 58197                           fsr0l	equ	0xFE9
 58198                           wreg	equ	0xFE8
 58199                           indf1	equ	0xFE7
 58200                           postinc1	equ	0xFE6
 58201                           postdec1	equ	0xFE5
 58202                           plusw1	equ	0xFE3
 58203                           fsr1h	equ	0xFE2
 58204                           fsr1l	equ	0xFE1
 58205                           indf2	equ	0xFDF
 58206                           postinc2	equ	0xFDE
 58207                           postdec2	equ	0xFDD
 58208                           plusw2	equ	0xFDB
 58209                           fsr2h	equ	0xFDA
 58210                           fsr2l	equ	0xFD9
 58211                           status	equ	0xFD8
 58212                           tosu	equ	0xFFF
 58213                           tosh	equ	0xFFE
 58214                           tosl	equ	0xFFD
 58215                           pclatu	equ	0xFFB
 58216                           pclath	equ	0xFFA
 58217                           tblptru	equ	0xFF8
 58218                           tblptrh	equ	0xFF7
 58219                           tblptrl	equ	0xFF6
 58220                           tablat	equ	0xFF5
 58221                           prodh	equ	0xFF4
 58222                           prodl	equ	0xFF3
 58223                           intcon	equ	0xFF2
 58224                           indf0	equ	0xFEF
 58225                           postinc0	equ	0xFEE
 58226                           fsr0h	equ	0xFEA
 58227                           fsr0l	equ	0xFE9
 58228                           wreg	equ	0xFE8
 58229                           indf1	equ	0xFE7
 58230                           postinc1	equ	0xFE6
 58231                           postdec1	equ	0xFE5
 58232                           plusw1	equ	0xFE3
 58233                           fsr1h	equ	0xFE2
 58234                           fsr1l	equ	0xFE1
 58235                           indf2	equ	0xFDF
 58236                           postinc2	equ	0xFDE
 58237                           postdec2	equ	0xFDD
 58238                           plusw2	equ	0xFDB
 58239                           fsr2h	equ	0xFDA
 58240                           fsr2l	equ	0xFD9
 58241                           status	equ	0xFD8
 58242                           
 58243                           	psect	text250
 58244  000000                     __ptext250:
 58245                           	opt stack 0
 58246                           tosu	equ	0xFFF
 58247                           tosh	equ	0xFFE
 58248                           tosl	equ	0xFFD
 58249                           pclatu	equ	0xFFB
 58250                           pclath	equ	0xFFA
 58251                           tblptru	equ	0xFF8
 58252                           tblptrh	equ	0xFF7
 58253                           tblptrl	equ	0xFF6
 58254                           tablat	equ	0xFF5
 58255                           prodh	equ	0xFF4
 58256                           prodl	equ	0xFF3
 58257                           intcon	equ	0xFF2
 58258                           indf0	equ	0xFEF
 58259                           postinc0	equ	0xFEE
 58260                           fsr0h	equ	0xFEA
 58261                           fsr0l	equ	0xFE9
 58262                           wreg	equ	0xFE8
 58263                           indf1	equ	0xFE7
 58264                           postinc1	equ	0xFE6
 58265                           postdec1	equ	0xFE5
 58266                           plusw1	equ	0xFE3
 58267                           fsr1h	equ	0xFE2
 58268                           fsr1l	equ	0xFE1
 58269                           indf2	equ	0xFDF
 58270                           postinc2	equ	0xFDE
 58271                           postdec2	equ	0xFDD
 58272                           plusw2	equ	0xFDB
 58273                           fsr2h	equ	0xFDA
 58274                           fsr2l	equ	0xFD9
 58275                           status	equ	0xFD8
 58276                           
 58277                           	psect	rparam
 58278  0000                     tosu	equ	0xFFF
 58279                           tosh	equ	0xFFE
 58280                           tosl	equ	0xFFD
 58281                           pclatu	equ	0xFFB
 58282                           pclath	equ	0xFFA
 58283                           tblptru	equ	0xFF8
 58284                           tblptrh	equ	0xFF7
 58285                           tblptrl	equ	0xFF6
 58286                           tablat	equ	0xFF5
 58287                           prodh	equ	0xFF4
 58288                           prodl	equ	0xFF3
 58289                           intcon	equ	0xFF2
 58290                           indf0	equ	0xFEF
 58291                           postinc0	equ	0xFEE
 58292                           fsr0h	equ	0xFEA
 58293                           fsr0l	equ	0xFE9
 58294                           wreg	equ	0xFE8
 58295                           indf1	equ	0xFE7
 58296                           postinc1	equ	0xFE6
 58297                           postdec1	equ	0xFE5
 58298                           plusw1	equ	0xFE3
 58299                           fsr1h	equ	0xFE2
 58300                           fsr1l	equ	0xFE1
 58301                           indf2	equ	0xFDF
 58302                           postinc2	equ	0xFDE
 58303                           postdec2	equ	0xFDD
 58304                           plusw2	equ	0xFDB
 58305                           fsr2h	equ	0xFDA
 58306                           fsr2l	equ	0xFD9
 58307                           status	equ	0xFD8
 58308                           
 58309                           	psect	temp
 58310  00005F                     btemp:
 58311                           	opt stack 0
 58312  00005F                     	ds	1
 58313  0000                     int$flags	set	btemp
 58314  0000                     wtemp8	set	btemp+1
 58315  0000                     ttemp5	set	btemp+1
 58316  0000                     ttemp6	set	btemp+4
 58317  0000                     ttemp7	set	btemp+8
 58318                           tosu	equ	0xFFF
 58319                           tosh	equ	0xFFE
 58320                           tosl	equ	0xFFD
 58321                           pclatu	equ	0xFFB
 58322                           pclath	equ	0xFFA
 58323                           tblptru	equ	0xFF8
 58324                           tblptrh	equ	0xFF7
 58325                           tblptrl	equ	0xFF6
 58326                           tablat	equ	0xFF5
 58327                           prodh	equ	0xFF4
 58328                           prodl	equ	0xFF3
 58329                           intcon	equ	0xFF2
 58330                           indf0	equ	0xFEF
 58331                           postinc0	equ	0xFEE
 58332                           fsr0h	equ	0xFEA
 58333                           fsr0l	equ	0xFE9
 58334                           wreg	equ	0xFE8
 58335                           indf1	equ	0xFE7
 58336                           postinc1	equ	0xFE6
 58337                           postdec1	equ	0xFE5
 58338                           plusw1	equ	0xFE3
 58339                           fsr1h	equ	0xFE2
 58340                           fsr1l	equ	0xFE1
 58341                           indf2	equ	0xFDF
 58342                           postinc2	equ	0xFDE
 58343                           postdec2	equ	0xFDD
 58344                           plusw2	equ	0xFDB
 58345                           fsr2h	equ	0xFDA
 58346                           fsr2l	equ	0xFD9
 58347                           status	equ	0xFD8


Data Sizes:
    Strings     69
    Constant    4810
    Data        157
    BSS         1579
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      94
    BANK0           160    159     160
    BANK1           256     60     256
    BANK2           256      0     235
    BANK3           256      0     192
    BANK4           256      0      80
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 8
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), configFile_extention(BANK2[3]), configFile_name(BANK2[8]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    stricmp@s2	PTR const unsigned char  size(2) Largest target is 24
		 -> menu_structure_string(CODE[15]), position_display_180_string(CODE[21]), ccw_limit_string(CODE[10]), use_ccw_limit_string(CODE[14]), 
		 -> cw_limit_string(CODE[9]), use_cw_limit_string(CODE[13]), beep_duration_string(CODE[14]), maximum_speed_manual_string(CODE[21]), 
		 -> initial_speed_manual_string(CODE[21]), maximum_speed_arc_string(CODE[18]), initial_speed_arc_string(CODE[18]), maximum_speed_string(CODE[14]), 
		 -> minimum_speed_string(CODE[14]), overshoot_cost_in_steps_string(CODE[24]), inverse_direction_string(CODE[18]), overshoot_in_steps_string(CODE[19]), 
		 -> full_circle_in_steps_string(CODE[21]), 

    stricmp@s1	PTR const unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), i2c_eeprom_save_position@buffer(COMRAM[11]), 
		 -> os.divide_position(BANK1[2]), os.division(BANK1[2]), os.absolute_position(BANK1[2]), os.current_position_in_steps(BANK1[4]), 
		 -> ToSendDataBuffer(BANK3[64]), os(BANK1[49]), msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), i2c_eeprom_save_position@buffer(COMRAM[11]), 
		 -> os.divide_position(BANK1[2]), os.division(BANK1[2]), os.absolute_position(BANK1[2]), os.current_position_in_steps(BANK1[4]), 
		 -> ToSendDataBuffer(BANK3[64]), os(BANK1[49]), msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3759
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> STR_6(CODE[6]), STR_5(CODE[9]), STR_4(CODE[7]), STR_3(CODE[9]), 
		 -> dc_manual(CODE[80]), dc_zero(CODE[80]), STR_2(CODE[7]), STR_1(CODE[9]), 
		 -> dc_arc2(CODE[80]), dc_arc1(CODE[80]), dc_divide2(CODE[80]), dc_divide1(CODE[80]), 
		 -> dc_setup2(CODE[80]), dc_setup1(CODE[80]), dc_main_simplified(CODE[80]), dc_main(CODE[80]), 
		 -> dc_startup(BANK4[80]), i2c_eeprom_recover_position@buffer(BANK0[11]), config(BANK1[42]), os.current_position_in_degrees(BANK1[2]), 
		 -> os.current_position_in_steps(BANK1[4]), ReceivedDataBuffer(BANK3[64]), os(BANK1[49]), inq_resp(CODE[36]), 
		 -> RAM(DATA[3759]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3759
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> STR_6(CODE[6]), STR_5(CODE[9]), STR_4(CODE[7]), STR_3(CODE[9]), 
		 -> dc_manual(CODE[80]), dc_zero(CODE[80]), STR_2(CODE[7]), STR_1(CODE[9]), 
		 -> dc_arc2(CODE[80]), dc_arc1(CODE[80]), dc_divide2(CODE[80]), dc_divide1(CODE[80]), 
		 -> dc_setup2(CODE[80]), dc_setup1(CODE[80]), dc_main_simplified(CODE[80]), dc_main(CODE[80]), 
		 -> dc_startup(BANK4[80]), i2c_eeprom_recover_position@buffer(BANK0[11]), config(BANK1[42]), os.current_position_in_degrees(BANK1[2]), 
		 -> os.current_position_in_steps(BANK1[4]), ReceivedDataBuffer(BANK3[64]), os(BANK1[49]), inq_resp(CODE[36]), 
		 -> RAM(DATA[3759]), 

    ultoa@buf	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    ltoa@buf	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    ltoa@cp	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _parse_item@value_string	PTR unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _parse_item@item_string	PTR unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    _get_item@value_string	PTR unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _get_item@item_string	PTR unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    _get_item@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    _add_item@item_string	PTR unsigned char  size(2) Largest target is 24
		 -> menu_structure_string(CODE[15]), position_display_180_string(CODE[21]), ccw_limit_string(CODE[10]), use_ccw_limit_string(CODE[14]), 
		 -> cw_limit_string(CODE[9]), use_cw_limit_string(CODE[13]), beep_duration_string(CODE[14]), maximum_speed_manual_string(CODE[21]), 
		 -> initial_speed_manual_string(CODE[21]), maximum_speed_arc_string(CODE[18]), initial_speed_arc_string(CODE[18]), maximum_speed_string(CODE[14]), 
		 -> minimum_speed_string(CODE[14]), overshoot_cost_in_steps_string(CODE[24]), inverse_direction_string(CODE[18]), overshoot_in_steps_string(CODE[19]), 
		 -> full_circle_in_steps_string(CODE[21]), 

    _add_item@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    _parse_set_manual_speed@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_set_manual_speed@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_set_manual_speed@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _parse_jump_steps_with_overshoot@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_jump_steps_with_overshoot@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_jump_steps_with_overshoot@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _parse_jump_steps@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_jump_steps@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_jump_steps@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _parse_command_long@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_command_long@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _fill_buffer_get_mode_details@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_parse@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    api_parse@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), buffer(BIGRAMll[512]), _flash_get_status@status(BANK0[2]), msd_buffer(BIGRAMll[512]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_buffer_read@command(COMRAM[4]), _flash_partial_read@command(BANK0[4]), _flash_get_status@command(BANK0[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(BANK0[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(BANK0[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(BANK0[4]), 
		 -> _flash_copy_page_to_buffer@command(BANK0[4]), _flash_wakeup@command(BANK0[1]), _flash_set_page_size@command(BANK0[4]), 

    fat_get_file_information@data	PTR struct . size(2) Largest target is 32
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 

    fat_modify_file@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_read_from_file_fast@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_read_from_file_fast@cluster	PTR unsigned int  size(2) Largest target is 2
		 -> fat_read_from_file@cluster(BANK0[2]), 

    fat_read_from_file_fast@cluster_number	PTR unsigned int  size(2) Largest target is 2
		 -> fat_read_from_file@cluster_number(BANK0[2]), 

    fat_read_from_file@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 3
		 -> configFile_used_extention(BANK2[3]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 8
		 -> configFile_used_name(BANK2[8]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 3
		 -> configFile_used_extention(BANK2[3]), configFile_extention(BANK2[3]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 8
		 -> configFile_used_name(BANK2[8]), configFile_name(BANK2[8]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 

    _write_value_to_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _read_value_from_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _get_available_offset_from_buffer@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), 

    flash_sector_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_sector_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    _display_itoa_long@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_itoa@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_prepare@temp(BANK0[10]), display_content(BANK2[80]), 

    _display_signed_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_padded_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    i2c_display_program_custom_character@bit_pattern	PTR unsigned char  size(2) Largest target is 8
		 -> bit_pattern_ae(CODE[8]), bit_pattern_degree(CODE[8]), bit_pattern_verticalbar(CODE[8]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    i2c_eeprom_read@data	PTR unsigned char  size(2) Largest target is 11
		 -> i2c_eeprom_recover_position@buffer(BANK0[11]), i2c_eeprom_readInt16@data(COMRAM[2]), i2c_eeprom_readUint32@data(COMRAM[4]), i2c_eeprom_readUint16@data(COMRAM[2]), 

    i2c_eeprom_write@data	PTR unsigned char  size(2) Largest target is 11
		 -> i2c_eeprom_save_position@buffer(COMRAM[11]), i2c_eeprom_writeInt16@data(COMRAM[2]), i2c_eeprom_writeUint32@data(COMRAM[4]), i2c_eeprom_writeUint16@data(COMRAM[2]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 11
		 -> i2c_eeprom_recover_position@buffer(BANK0[11]), i2c_eeprom_readInt16@data(COMRAM[2]), i2c_eeprom_readUint32@data(COMRAM[4]), i2c_eeprom_readUint16@data(COMRAM[2]), 
		 -> i2c_eeprom_readByte@addr(COMRAM[1]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_display_program_custom_character@data_array(BANK0[11]), _ic2_display_set_cgram_address@data_array(BANK0[3]), _ic2_display_set_ddram_address@data_array(BANK0[2]), i2c_display_init@init_sequence(BANK0[9]), 
		 -> _i2c_display_send_init_sequence@init_sequence(COMRAM[9]), i2c_eeprom_read@addr(BANK0[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), 
		 -> i2c_eeprom_writeByte@dat(BANK0[2]), i2c_adc_start@configuration_byte(COMRAM[1]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(BANK1[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2623	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(BANK1[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2589	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2588	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2535	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2534	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S2167$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    S2167$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S2167$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S2167$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S2167$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> i2_ExternalFlash_MediaDetect(), ExternalFlash_MediaDetect(), 

    S2167$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S2167$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S2167$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> i2_ExternalFlash_MediaInitialize(), ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), i2c_eeprom_save_position@buffer(COMRAM[11]), 
		 -> os.divide_position(BANK1[2]), os.division(BANK1[2]), os.absolute_position(BANK1[2]), os.current_position_in_steps(BANK1[4]), 
		 -> ToSendDataBuffer(BANK3[64]), os(BANK1[49]), msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(3) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_motor_isr
    _motor_isr->_i2c_eeprom_save_position
    _i2c_eeprom_save_position->_i2c_eeprom_write
    _i2c_eeprom_write->i2__i2c_write
    i2__i2c_write->i2__i2c_wait_idle
    i2__i2c_eeprom_busy->i2__i2c_wait_idle
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->i2_USBTransferOnePacket
    _MSDTransferTerminated->i2_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->i2_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_system_init
    _motor_calculate_position_in_degrees->___fldiv
    _motor_calculate_position_in_degrees->___flmul
    _i2c_eeprom_recover_position->_i2c_eeprom_read
    _i2c_eeprom_read->__i2c_read
    __i2c_read->__i2c_wait_idle
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_restore_mbr_fbr->_flash_sector_write
    _fat_get_format_status->_flash_sector_read
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_ddram_address
    __ic2_display_set_ddram_address->__i2c_write
    _display_init->_i2c_display_program_custom_character
    _i2c_display_program_custom_character->__ic2_display_set_cgram_address
    __ic2_display_set_cgram_address->__i2c_write
    _i2c_display_init->__i2c_write
    __display_start->__display_itoa_u16
    __display_itoa_u16->_itoa
    _configFile_write->_fat_modify_file
    _fat_resize_file->__make_cluster_chain
    _fat_modify_file->__find_nth_cluster
    _fat_create_file->__make_cluster_chain
    __write_root->_flash_partial_write
    _flash_partial_write->__flash_compare_page_to_buffer
    __flash_copy_page_to_buffer->__flash_is_busy
    __make_cluster_chain->__get_available_cluster
    __get_available_cluster->_flash_sector_read
    __get_available_root_entry->__root_is_available
    __add_item->_ltoa
    _ltoa->_ultoa
    _ultoa->___lldiv
    _configFile_read->_fat_read_from_file
    _fat_read_from_file->_fat_read_from_file_fast
    _fat_read_from_file_fast->__find_nth_cluster
    __find_nth_cluster->__read_fat
    __read_fat->_flash_partial_read
    _fat_get_file_information->_flash_partial_read
    _fat_get_file_size->__root_is_available
    __root_is_available->_flash_partial_read
    _flash_partial_read->__flash_partial_read
    _fat_find_file->_flash_sector_read
    __parse_item->__steps_from_degrees
    _stricmp->_toupper
    _atol->___lmul
    _atoi->___wmul
    __steps_from_degrees->___fldiv
    __steps_from_degrees->___flmul
    ___flge->___xxtofl
    _motor_process_cue->__motor_run
    _encoder_statemachine->__encoder_statemachine_divide
    __encoder_statemachine_zero->_motor_goto_steps
    __encoder_statemachine_setup->_motor_move_degrees_int
    _motor_move_degrees_int->__motor_steps_from_degrees_int
    __motor_steps_from_degrees_int->___fldiv
    __motor_steps_from_degrees_int->___flmul
    __encoder_statemachine_manual->_motor_move_endless
    _motor_increase_manual_speed->_motor_set_manual_speed
    _motor_decrease_manual_speed->_motor_set_manual_speed
    __encoder_statemachine_divide->_motor_divide_jump_to_nearest
    _motor_divide_jump_to_nearest->_motor_goto_steps
    _motor_divide_jump->_motor_goto_steps
    __step_position_from_divide_position->___fldiv
    __step_position_from_divide_position->___flmul
    __encoder_statemachine_arc->_motor_arc_move
    _motor_arc_move->_motor_move_steps
    _display_prepare->__display_itoa_long
    _motor_speed_from_index->__motor_get_speed_in_degrees
    __motor_get_speed_in_degrees->___fldiv
    ___fldiv->___xxtofl
    __display_signed_itoa->__display_padded_itoa
    __display_padded_itoa->_itoa
    __display_itoa_long->__display_itoa
    __display_itoa->_motor_speed_from_index
    _itoa->_utoa
    _utoa->___lwdiv
    _adc_read_temperature->___flmul
    ___xxtofl->___fltol
    ___flneg->___xxtofl
    ___flmul->___xxtofl
    ___fladd->___flneg
    _USBDeviceInit->_memset
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_sector_write
    _flash_sector_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->__flash_is_busy
    __flash_write_page_from_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_sector_read
    _flash_sector_read->__flash_partial_read
    __flash_partial_read->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx
    _APP_DeviceCustomHIDTasks->_api_parse
    _api_prepare->__fill_buffer_get_display
    __fill_buffer_get_status->_memcpy
    __fill_buffer_get_display->_display_get_character
    _api_parse->__parse_command_long
    __parse_command_short->_motor_goto_steps
    _motor_set_zero->__motor_move_back_forth
    __motor_move_back_forth->__motor_schedule_command
    _motor_move_endless->__motor_move_steps
    _motor_goto_steps->__motor_decide_direction
    __motor_decide_direction->__motor_distance_to_limit
    _i2c_eeprom_writeByte->__i2c_write
    __i2c_write->__i2c_wait_idle
    __i2c_eeprom_busy->__i2c_wait_idle
    __parse_command_long->__parse_jump_steps
    __parse_command_long->__parse_jump_steps_with_overshoot
    __parse_set_manual_speed->_motor_set_manual_speed
    _motor_set_manual_speed->_motor_change_speed
    __parse_jump_steps_with_overshoot->_motor_move_steps
    __parse_jump_steps->_motor_move_steps
    _motor_move_steps->__motor_move_steps
    __motor_move_steps->__motor_distance_to_limit
    __motor_distance_to_limit->___lmul

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _system_init->_configFile_read

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _SYS_InterruptHigh in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _SYS_InterruptHigh in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SYS_InterruptHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  783731
                                            158 BANK0      1     1      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
               _adc_read_temperature
                    _display_prepare
                     _display_update
               _encoder_statemachine
_motor_calculate_position_in_degrees
                  _motor_process_cue
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          1     1      0  407892
                                            157 BANK0      1     1      0
                    __backlight_init
                  __system_pin_setup
                __system_timer0_init
                           _adc_init
                    _configFile_read
             _configFile_readDefault
                   _configFile_write
                       _display_init
                     _display_update
                       _encoder_init
                           _fat_init
                         _flash_init
        _i2c_eeprom_recover_position
                           _i2c_init
_motor_calculate_position_in_degrees
                         _motor_init
 ---------------------------------------------------------------------------------
 (2) _motor_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _motor_calculate_position_in_degrees                  4     4      0    9741
                                             49 BANK0      4     4      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_recover_position                         11    11      0   12884
                                             25 BANK0     11    11      0
                    _i2c_eeprom_read
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _i2c_eeprom_read                                      8     3      5    3647
                                             17 BANK0      8     3      5
                   __i2c_eeprom_busy
                          __i2c_read
                         __i2c_write
 ---------------------------------------------------------------------------------
 (4) __i2c_read                                           12     9      3     534
                                              5 BANK0     12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (5) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0   13459
               __flash_set_page_size
                           _spi_init
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     222
                                              3 BANK0      1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     178
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0   13237
                                             19 BANK0      5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   24913
              _fat_get_format_status
                _fat_restore_mbr_fbr
 ---------------------------------------------------------------------------------
 (3) _fat_restore_mbr_fbr                                  2     2      0   17966
                                             36 BANK0      2     2      0
                           __get_fbr
                           __get_mbr
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    6947
                                             43 BANK0      4     4      0
                           __get_fbr
                           __get_mbr
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     289
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     289
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _encoder_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_update                                       1     1      0    2472
                                             16 BANK0      1     1      0
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (3) _i2c_display_write_fixed                              4     1      3     290
                                              5 BANK0      4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_display_cursor                                   3     2      1    2092
                                             13 BANK0      3     2      1
     __ic2_display_set_ddram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_ddram_address                       3     3      0    1933
                                             10 BANK0      3     3      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (2) _display_init                                         0     0      0   18535
                     __display_start
                   _i2c_display_init
_i2c_display_program_custom_characte
 ---------------------------------------------------------------------------------
 (3) _i2c_display_program_custom_character                19    17      2    4270
                                             14 BANK0     19    17      2
                         __i2c_write
     __ic2_display_set_cgram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_cgram_address                       4     4      0    1958
                                             10 BANK0      4     4      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_display_init                                    10    10      0    1887
                                             10 BANK0     10    10      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (3) __display_start                                       1     1      0   12378
                                             28 BANK0      1     1      0
                  __display_itoa_u16
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) __display_itoa_u16                                    4     0      4    3164
                                             24 BANK0      4     0      4
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _configFile_write                                     6     6      0  234201
                                            131 BANK0      6     6      0
                          __add_item
                    _fat_create_file
                      _fat_find_file
                    _fat_modify_file
                    _fat_resize_file
 ---------------------------------------------------------------------------------
 (3) _fat_resize_file                                     47    43      4   75708
                                             76 BANK0     47    43      4
                __make_cluster_chain
                 __root_is_available
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (3) _fat_modify_file                                     66    58      8   58065
                                             65 BANK0     66    58      8
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
           _fat_get_file_information
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) _fat_create_file                                     49    41      8   85447
                                             76 BANK0     49    41      8
          __get_available_root_entry
                          __get_date
                          __get_time
                __make_cluster_chain
                        __write_root
                      _fat_find_file
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) __write_root                                          7     5      2   24113
                                             40 BANK0      7     5      2
           __offset_from_file_number
           __sector_from_file_number
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (5) _flash_partial_write                                  9     1      8   23640
                                             31 BANK0      9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
                     __flash_is_busy
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (6) __flash_copy_page_to_buffer                          10     7      3    4565
                                             19 BANK0     10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) __make_cluster_chain                                 23    19      4   35886
                                             53 BANK0     23    19      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
             __get_available_cluster
  __get_available_offset_from_buffer
            __read_value_from_offset
             __write_value_to_offset
                  _flash_sector_read
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (5) __write_value_to_offset                               8     2      6     934
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) __get_available_cluster                              10     6      4    7752
                                             43 BANK0     10     6      4
    __cluster_from_sector_and_offset
  __get_available_offset_from_buffer
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) __get_available_offset_from_buffer                    8     4      4     712
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (6) __cluster_from_sector_and_offset                      4     0      4     226
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) __get_time                                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __get_date                                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __get_available_root_entry                            1     1      0    7485
                                             53 BANK0      1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (3) __add_item                                           11     3      8    6794
                                             36 BANK0     11     3      8
                               _ltoa
 ---------------------------------------------------------------------------------
 (4) _ltoa                                                10     2      8    1853
                                             26 BANK0     10     2      8
                              _ultoa
 ---------------------------------------------------------------------------------
 (5) _ultoa                                               13     5      8    1423
                                             13 BANK0     13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     337
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     518
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) _configFile_readDefault                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configFile_read                                     60    60      0   91687
                                              0 BANK1     60    60      0
                          __get_item
                        __parse_item
                      _fat_find_file
                  _fat_get_file_size
                 _fat_read_from_file
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file                                  52    42     10   42312
                                            105 BANK0     52    42     10
           _fat_get_file_information
            _fat_read_from_file_fast
 ---------------------------------------------------------------------------------
 (4) _fat_read_from_file_fast                             40    26     14   33651
                                             65 BANK0     40    26     14
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __find_nth_cluster                                   10     6      4   16816
                                             55 BANK0     10     6      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                          __read_fat
            __read_value_from_offset
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) __read_value_from_offset                              9     5      4     825
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (4) __read_fat                                            8     6      2    8284
                                             47 BANK0      8     6      2
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __fat_sector_from_cluster                             2     0      2     469
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) __fat_offset_from_cluster                             2     0      2     291
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __data_sector_from_cluster                            2     0      2     289
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _fat_get_file_information                             8     6      2    7751
                                             47 BANK0      8     6      2
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_size                                   13     9      4   14768
                                             53 BANK0     13     9      4
           __offset_from_file_number
                 __root_is_available
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __root_is_available                                   6     6      0    7395
                                             47 BANK0      6     6      0
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) _flash_partial_read                                   8     0      8    7123
                                             39 BANK0      8     0      8
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __sector_from_file_number                             5     3      2      47
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (5) __offset_from_file_number                             5     3      2      47
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _fat_find_file                                       11     7      4    7661
                                             43 BANK0     11     7      4
                  _flash_sector_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     668
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) __parse_item                                          4     0      4   25438
                                             57 BANK0      4     0      4
                __steps_from_degrees
                               _atoi
                               _atol
                            _stricmp
 ---------------------------------------------------------------------------------
 (4) _stricmp                                              6     2      4    3362
                                              1 BANK0      6     2      4
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              1     1      0      67
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4    1878
                                             12 BANK0     14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2    8505
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    7141
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) __steps_from_degrees                                  8     4      4   10723
                                             49 BANK0      8     4      4
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     716
                                             24 BANK0     12     4      8
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __get_item                                           11     5      6    1132
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_pin_setup                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __backlight_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor_process_cue                                    0     0      0     377
                         __motor_run
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (2) __motor_run                                          12     5      7     377
                                              0 BANK0     12     5      7
 ---------------------------------------------------------------------------------
 (1) _encoder_statemachine                                 2     2      0  118380
                                             75 BANK0      2     2      0
          __encoder_statemachine_arc
       __encoder_statemachine_divide
         __encoder_statemachine_main
       __encoder_statemachine_manual
        __encoder_statemachine_setup
         __encoder_statemachine_zero
 ---------------------------------------------------------------------------------
 (2) __encoder_statemachine_zero                           2     2      0   11492
                                             62 BANK0      2     2      0
                   _motor_goto_steps
 ---------------------------------------------------------------------------------
 (2) __encoder_statemachine_setup                          4     4      0   23565
                                             67 BANK0      4     4      0
       __encoder_next_setup_stepsize
             _motor_move_degrees_int
                     _motor_set_zero
 ---------------------------------------------------------------------------------
 (3) _motor_move_degrees_int                              10     5      5   20726
                                             57 BANK0     10     5      5
                  __motor_move_steps
      __motor_steps_from_degrees_int
 ---------------------------------------------------------------------------------
 (4) __motor_steps_from_degrees_int                        8     4      4   12986
                                             49 BANK0      8     4      4
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) __encoder_next_setup_stepsize                         4     2      2     111
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) __encoder_statemachine_manual                         2     2      0    8785
                                             47 BANK0      2     2      0
        _motor_decrease_manual_speed
        _motor_increase_manual_speed
                 _motor_move_endless
                         _motor_stop
 ---------------------------------------------------------------------------------
 (3) _motor_increase_manual_speed                          0     0      0     645
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (3) _motor_decrease_manual_speed                          0     0      0     645
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (2) __encoder_statemachine_main                           5     5      0      22
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) __encoder_statemachine_divide                         3     3      0   55835
                                             72 BANK0      3     3      0
        __divide_jump_size_decrement
        __divide_jump_size_increment
     __encoder_next_divide_step_size
                  _motor_divide_jump
       _motor_divide_jump_to_nearest
 ---------------------------------------------------------------------------------
 (3) _motor_divide_jump_to_nearest                        10    10      0   34265
                                             62 BANK0     10    10      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
__step_position_from_divide_position
                   _motor_goto_steps
 ---------------------------------------------------------------------------------
 (3) _motor_divide_jump                                    7     7      0   21548
                                             62 BANK0      7     7      0
__step_position_from_divide_position
                   _motor_goto_steps
 ---------------------------------------------------------------------------------
 (4) __step_position_from_divide_position                  8     4      4    9941
                                             49 BANK0      8     4      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) __encoder_next_divide_step_size                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) __divide_jump_size_increment                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) __divide_jump_size_decrement                          3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) __encoder_statemachine_arc                            4     4      0   18681
                                             57 BANK0      4     4      0
        __encoder_next_arc_step_size
                     _motor_arc_move
                 _motor_change_speed
                         _motor_stop
 ---------------------------------------------------------------------------------
 (3) _motor_arc_move                                       5     5      0   18281
                                             52 BANK0      5     5      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                   _motor_move_steps
 ---------------------------------------------------------------------------------
 (3) __encoder_next_arc_step_size                          4     2      2     111
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _display_prepare                                     14    14      0   47431
                                            102 BANK0     14    14      0
                     __display_clear
                      __display_itoa
                 __display_itoa_long
               __display_padded_itoa
       __display_position_in_degrees
               __display_signed_itoa
                             _memcpy
             _motor_speed_from_index
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _motor_speed_from_index                               2     0      2    8013
                                             61 BANK0      2     0      2
        __motor_get_speed_in_degrees
 ---------------------------------------------------------------------------------
 (3) __motor_get_speed_in_degrees                         12    10      2    7813
                                             49 BANK0     12    10      2
                            ___fldiv
                            ___fltol
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2875
                                             24 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __display_signed_itoa                                 4     0      4    4979
                                             47 BANK0      4     0      4
               __display_padded_itoa
 ---------------------------------------------------------------------------------
 (3) __display_padded_itoa                                23    18      5    4668
                                             24 BANK0     23    18      5
                               _itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (2) __display_position_in_degrees                         8     4      4      46
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) __display_itoa_long                                  15     8      7   10370
                                             87 BANK0     15     8      7
                            ___aldiv
                            ___almod
                      __display_itoa
       __display_position_in_degrees (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (3) __display_itoa                                       24    19      5    6858
                                             63 BANK0     24    19      5
                               _itoa
             _motor_speed_from_index (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     535
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _itoa                                                 8     2      6    2388
                                             16 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                 9     3      6    1424
                                              7 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     337
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     518
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     474
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     478
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __display_clear                                       4     4      0     136
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _adc_read_temperature                                 8     8      0   10091
                                             49 BANK0      8     8      0
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    2280
                                             10 BANK0     14    10      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4    1297
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     223
                                             24 BANK0      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    3220
                                             24 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             20    12      8    3000
                                             28 BANK0     20    12      8
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1132
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     930
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    5     5      0      68
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0  117658
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0  117658
                                             76 BANK0      6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0  112858
                                             71 BANK0      5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   57180
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   55474
                                             57 BANK0     14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   24725
                                             47 BANK0      5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   17553
                                             36 BANK0     11     2      9
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) _flash_sector_write                                   5     1      4   17208
                                             31 BANK0      5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    4519
                                             19 BANK0     11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     532
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4743
                                             19 BANK0     10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5899
                                             19 BANK0     12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   13450
                                             53 BANK0      4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2318
                                             10 BANK0      7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1706
                                              8 BANK0      2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (3) _USBStallEndpoint                                     8     7      1    1661
                                              0 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    6470
                                             43 BANK0     10     2      8
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) _flash_sector_read                                    4     0      4    6189
                                             39 BANK0      4     0      4
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    4899
                                             19 BANK0     20    12      8
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    2691
                                             17 BANK0      2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 BANK0      1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1334
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2    1311
                                             12 BANK0      5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8    1244
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaInitialize                        2     0      2     102
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaDetect                            2     0      2     102
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             1     1      0   68465
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (2) _api_prepare                                          5     1      4   20766
                                             16 BANK0      5     1      4
           __fill_buffer_get_display
      __fill_buffer_get_mode_details
            __fill_buffer_get_status
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_status                              2     0      2    9847
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              11     5      6    9098
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_mode_details                        4     2      2     529
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_display                            12     9      3     827
                                              4 BANK0     12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (4) _display_get_character                                4     3      1     133
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _api_parse                                           11     6      5   44698
                                             71 BANK0     11     6      5
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (3) __parse_command_short                                 1     1      0   24116
                                             62 BANK0      1     1      0
               _i2c_eeprom_writeByte
            _motor_clear_command_cue
                   _motor_goto_steps
                 _motor_move_endless
                     _motor_set_zero
                         _motor_stop
                             _reboot
 ---------------------------------------------------------------------------------
 (4) _reboot                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _motor_stop                                           2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _motor_set_zero                                       1     1      0    2728
                                             10 BANK0      1     1      0
             __motor_move_back_forth
 ---------------------------------------------------------------------------------
 (4) __motor_move_back_forth                               2     2      0    2706
                                              8 BANK0      2     2      0
            __motor_schedule_command
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (3) _motor_move_endless                                   3     1      2    7495
                                             44 BANK0      3     1      2
                  __motor_move_steps
 ---------------------------------------------------------------------------------
 (3) _motor_goto_steps                                    12     5      7   11492
                                             50 BANK0     12     5      7
          __motor_calculate_distance
            __motor_decide_direction
                  __motor_move_steps
 ---------------------------------------------------------------------------------
 (4) __motor_decide_direction                             21    16      5    2526
                                             29 BANK0     21    16      5
          __motor_calculate_distance
           __motor_distance_to_limit
 ---------------------------------------------------------------------------------
 (5) __motor_calculate_distance                           13     9      4     581
                                              0 BANK0     13     9      4
 ---------------------------------------------------------------------------------
 (4) _motor_clear_command_cue                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_eeprom_writeByte                                 9     6      3    2379
                                             10 BANK0      9     6      3
                   __i2c_eeprom_busy
                         __i2c_write
 ---------------------------------------------------------------------------------
 (4) __i2c_write                                           5     2      3    1862
                                              5 BANK0      5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_eeprom_busy                                     1     1      0      23
                                              5 BANK0      1     1      0
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (5) __i2c_wait_idle                                       5     5      0       0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (5) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_send                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) __parse_command_long                                  7     1      6   19830
                                             64 BANK0      7     1      6
                  __parse_jump_steps
   __parse_jump_steps_with_overshoot
            __parse_set_manual_speed
 ---------------------------------------------------------------------------------
 (4) __parse_set_manual_speed                              9     3      6    1069
                                              6 BANK0      9     3      6
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (4) _motor_set_manual_speed                               4     2      2     645
                                              2 BANK0      4     2      2
                 _motor_change_speed
 ---------------------------------------------------------------------------------
 (5) _motor_change_speed                                   2     0      2     289
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __parse_jump_steps_with_overshoot                    12     6      6    9123
                                             52 BANK0     12     6      6
                   _motor_move_steps
 ---------------------------------------------------------------------------------
 (4) __parse_jump_steps                                   12     6      6    9125
                                             52 BANK0     12     6      6
                   _motor_move_steps
 ---------------------------------------------------------------------------------
 (4) _motor_move_steps                                     8     1      7    8518
                                             44 BANK0      8     1      7
                            ___fltol (ARG)
                  __motor_move_steps
 ---------------------------------------------------------------------------------
 (4) __motor_move_steps                                   15     7      8    7095
                                             29 BANK0     15     7      8
           __motor_distance_to_limit
            __motor_schedule_command
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (5) __motor_schedule_command                              8     1      7    2646
                                              0 BANK0      8     1      7
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (2) _motor_items_in_cue                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __motor_distance_to_limit                            17    13      4    1115
                                             12 BANK0     17    13      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     956
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    3001
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _SYS_InterruptHigh                                  14    14      0   57225
                                             72 COMRAM    14    14      0
                     _USBDeviceTasks
                          _motor_isr
                           _tmr0_isr
 ---------------------------------------------------------------------------------
 (14) _tmr0_isr                                            0     0      0       0
                        _encoder_run
 ---------------------------------------------------------------------------------
 (15) _encoder_run                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _motor_isr                                          24    24      0    2291
                                             48 COMRAM    24    24      0
           _i2c_eeprom_save_position
 ---------------------------------------------------------------------------------
 (15) _i2c_eeprom_save_position                           11    11      0    2200
                                             37 COMRAM    11    11      0
                   _i2c_eeprom_write
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (16) _i2c_eeprom_write                                   27    22      5    1528
                                             10 COMRAM    27    22      5
                 i2__i2c_eeprom_busy
                       i2__i2c_write
 ---------------------------------------------------------------------------------
 (17) i2__i2c_write                                        5     2      3     186
                                              5 COMRAM     5     2      3
                        i2__i2c_send
                       i2__i2c_start
                        i2__i2c_stop
                   i2__i2c_wait_idle
 ---------------------------------------------------------------------------------
 (17) i2__i2c_eeprom_busy                                  1     1      0      23
                                              5 COMRAM     1     1      0
                        i2__i2c_send
                       i2__i2c_start
                        i2__i2c_stop
                   i2__i2c_wait_idle
 ---------------------------------------------------------------------------------
 (18) i2__i2c_wait_idle                                    5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_stop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_start                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_send                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) _USBDeviceTasks                                      1     1      0   54934
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (15) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (15) _USBWakeFromSuspend                                  0     0      0    7487
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBSuspend                                          0     0      0    7487
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USBIncrement1msInternalTimers                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPService                                    1     1      0   31817
                                             29 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (16) i2_memcpy                                           11     5      6     533
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfSetupHandler                              0     0      0   31055
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (17) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCheckStdRequest                                  0     0      0   23476
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (18) _USBStdSetCfgHandler                                 1     1      0    7985
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (16) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (18) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (18) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (18) _USBStdFeatureReqHandler                             6     6      0    7958
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    7487
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
                i2_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (16) i2_SYSTEM_Initialize                                 5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (16) _USBCheckMSDRequest                                  4     4      0     736
                                             11 COMRAM     4     4      0
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) _USBCheckHIDRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _MSDTransferTerminated                               4     2      2    1075
                                             11 COMRAM     4     2      2
                 i2_USBStallEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBStallEndpoint                                  8     7      1     252
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceMSDInitialize                             0     0      0    1473
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (17) _USBMSDInit                                          3     3      0     740
                                             11 COMRAM     3     3      0
        i2_ExternalFlash_MediaDetect *
    i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (18) i2_ResetSenseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaInitialize                     2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaDetect                         2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceCustomHIDInitialize                       0     0      0    1421
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBTransferOnePacket                             11     7      4     688
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (17) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (18) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (19) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_jump_steps
           _motor_move_steps
             ___fltol (ARG)
             __motor_move_steps (ARG)
               __motor_distance_to_limit
                 ___lmul
               __motor_schedule_command
                 _motor_items_in_cue
               _motor_items_in_cue
         __parse_jump_steps_with_overshoot
           _motor_move_steps
             ___fltol (ARG)
             __motor_move_steps (ARG)
               __motor_distance_to_limit
                 ___lmul
               __motor_schedule_command
                 _motor_items_in_cue
               _motor_items_in_cue
         __parse_set_manual_speed
           _motor_set_manual_speed
             _motor_change_speed
       __parse_command_short
         _i2c_eeprom_writeByte
           __i2c_eeprom_busy
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
         _motor_clear_command_cue
         _motor_goto_steps
           __motor_calculate_distance
           __motor_decide_direction
             __motor_calculate_distance
             __motor_distance_to_limit
               ___lmul
           __motor_move_steps
             __motor_distance_to_limit
               ___lmul
             __motor_schedule_command
               _motor_items_in_cue
             _motor_items_in_cue
         _motor_move_endless
           __motor_move_steps
             __motor_distance_to_limit
               ___lmul
             __motor_schedule_command
               _motor_items_in_cue
             _motor_items_in_cue
         _motor_set_zero
           __motor_move_back_forth
             __motor_schedule_command
               _motor_items_in_cue
             _motor_items_in_cue
         _motor_stop
         _reboot
     _api_prepare
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_mode_details
       __fill_buffer_get_status
         _memcpy
       _memcpy
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_sector_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _adc_read_temperature
     ___fladd
       ___flneg (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___flmul
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___flneg
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___fltol
     ___xxtofl
       ___fltol (ARG)
   _display_prepare
     __display_clear
     __display_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _motor_speed_from_index (ARG)
         __motor_get_speed_in_degrees
           ___fldiv
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___fltol
           ___lmul
           ___xxtofl
             ___fltol (ARG)
       _strlen (ARG)
     __display_itoa_long
       ___aldiv
       ___almod
       __display_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _motor_speed_from_index (ARG)
           __motor_get_speed_in_degrees
             ___fldiv
               ___xxtofl (ARG)
                 ___fltol (ARG)
             ___fltol
             ___lmul
             ___xxtofl
               ___fltol (ARG)
         _strlen (ARG)
       __display_position_in_degrees (ARG)
       _strlen (ARG)
     __display_padded_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _strlen
     __display_position_in_degrees
     __display_signed_itoa
       __display_padded_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _strlen
     _memcpy
     _motor_speed_from_index
       __motor_get_speed_in_degrees
         ___fldiv
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fltol
         ___lmul
         ___xxtofl
           ___fltol (ARG)
     _strlen
   _display_update
     _i2c_display_cursor
       __ic2_display_set_ddram_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
   _encoder_statemachine
     __encoder_statemachine_arc
       __encoder_next_arc_step_size
       _motor_arc_move
         ___fldiv
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fltol
         ___xxtofl
           ___fltol (ARG)
         _motor_move_steps
           ___fltol (ARG)
           __motor_move_steps (ARG)
             __motor_distance_to_limit
               ___lmul
             __motor_schedule_command
               _motor_items_in_cue
             _motor_items_in_cue
       _motor_change_speed
       _motor_stop
     __encoder_statemachine_divide
       __divide_jump_size_decrement
       __divide_jump_size_increment
       __encoder_next_divide_step_size
       _motor_divide_jump
         __step_position_from_divide_position
           ___fldiv
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___fltol
           ___xxtofl
             ___fltol (ARG)
         _motor_goto_steps
           __motor_calculate_distance
           __motor_decide_direction
             __motor_calculate_distance
             __motor_distance_to_limit
               ___lmul
           __motor_move_steps
             __motor_distance_to_limit
               ___lmul
             __motor_schedule_command
               _motor_items_in_cue
             _motor_items_in_cue
       _motor_divide_jump_to_nearest
         ___fladd
           ___flneg (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fldiv
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fltol
         ___xxtofl
           ___fltol (ARG)
         __step_position_from_divide_position
           ___fldiv
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___fltol
           ___xxtofl
             ___fltol (ARG)
         _motor_goto_steps
           __motor_calculate_distance
           __motor_decide_direction
             __motor_calculate_distance
             __motor_distance_to_limit
               ___lmul
           __motor_move_steps
             __motor_distance_to_limit
               ___lmul
             __motor_schedule_command
               _motor_items_in_cue
             _motor_items_in_cue
     __encoder_statemachine_main
     __encoder_statemachine_manual
       _motor_decrease_manual_speed
         _motor_set_manual_speed
           _motor_change_speed
       _motor_increase_manual_speed
         _motor_set_manual_speed
           _motor_change_speed
       _motor_move_endless
         __motor_move_steps
           __motor_distance_to_limit
             ___lmul
           __motor_schedule_command
             _motor_items_in_cue
           _motor_items_in_cue
       _motor_stop
     __encoder_statemachine_setup
       __encoder_next_setup_stepsize
       _motor_move_degrees_int
         __motor_move_steps
           __motor_distance_to_limit
             ___lmul
           __motor_schedule_command
             _motor_items_in_cue
           _motor_items_in_cue
         __motor_steps_from_degrees_int
           ___fladd
             ___flneg (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___fldiv
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___fltol
           ___xxtofl
             ___fltol (ARG)
       _motor_set_zero
         __motor_move_back_forth
           __motor_schedule_command
             _motor_items_in_cue
           _motor_items_in_cue
     __encoder_statemachine_zero
       _motor_goto_steps
         __motor_calculate_distance
         __motor_decide_direction
           __motor_calculate_distance
           __motor_distance_to_limit
             ___lmul
         __motor_move_steps
           __motor_distance_to_limit
             ___lmul
           __motor_schedule_command
             _motor_items_in_cue
           _motor_items_in_cue
   _motor_calculate_position_in_degrees
     ___fldiv
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___flmul
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___fltol
     ___xxtofl
       ___fltol (ARG)
   _motor_process_cue
     __motor_run
     _motor_items_in_cue
   _system_init
     __backlight_init
     __system_pin_setup
     __system_timer0_init
     _adc_init
     _configFile_read
       __get_item
       __parse_item
         __steps_from_degrees
           ___fldiv
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___flge
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___fltol
           ___xxtofl
             ___fltol (ARG)
         _atoi
           ___wmul
           _isdigit
         _atol
           ___lmul
           _isdigit
         _stricmp
           _toupper
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
         _strncmp
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _fat_read_from_file
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _fat_read_from_file_fast
           __data_sector_from_cluster
           __find_nth_cluster
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
             __read_value_from_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
     _configFile_readDefault
     _configFile_write
       __add_item
         _ltoa
           _ultoa
             ___lldiv
             ___llmod
       _fat_create_file
         __get_available_root_entry
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
         __get_date
         __get_time
         __make_cluster_chain
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __get_available_cluster
             __cluster_from_sector_and_offset
             __get_available_offset_from_buffer
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __get_available_offset_from_buffer
           __read_value_from_offset
           __write_value_to_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _flash_sector_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         __write_root
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         _fat_find_file
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _strncmp
         _memcpy
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
         _strncmp
       _fat_modify_file
         __data_sector_from_cluster
         __find_nth_cluster
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __read_value_from_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __read_fat
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_copy_page_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
       _fat_resize_file
         __make_cluster_chain
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __get_available_cluster
             __cluster_from_sector_and_offset
             __get_available_offset_from_buffer
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __get_available_offset_from_buffer
           __read_value_from_offset
           __write_value_to_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _flash_sector_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __write_root
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
     _display_init
       __display_start
         __display_itoa_u16
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
         _memcpy
       _i2c_display_init
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
       _i2c_display_program_custom_character
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __ic2_display_set_cgram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
     _display_update
       _i2c_display_cursor
         __ic2_display_set_ddram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
       _i2c_display_write_fixed
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
     _encoder_init
     _fat_init
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _fat_restore_mbr_fbr
         __get_fbr
         __get_mbr
         _flash_sector_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _memcpy
         _spi_tx
       _spi_init
         __spi_init
     _i2c_eeprom_recover_position
       _i2c_eeprom_read
         __i2c_eeprom_busy
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_read
           __i2c_acknowledge
           __i2c_get
           __i2c_not_acknowledge
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
       _memcpy
     _i2c_init
     _motor_calculate_position_in_degrees
       ___fldiv
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___fltol
       ___xxtofl
         ___fltol (ARG)
     _motor_init

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 i2_ExternalFlash_MediaDetect *
                 i2_ExternalFlash_MediaInitialize *
                 i2_ResetSenseData *
                 i2_USBTransferOnePacket *
             _MSDTransferTerminated
               i2_USBStallEndpoint
               i2_USBTransferOnePacket
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               i2_USBTransferOnePacket
             i2_SYSTEM_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               i2_ExternalFlash_MediaDetect *
               i2_ExternalFlash_MediaInitialize *
               i2_ResetSenseData *
               i2_USBTransferOnePacket *
           _MSDTransferTerminated
             i2_USBStallEndpoint
             i2_USBTransferOnePacket
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             i2_USBTransferOnePacket
           i2_SYSTEM_Initialize
       i2_memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           i2_ExternalFlash_MediaDetect *
           i2_ExternalFlash_MediaInitialize *
           i2_ResetSenseData *
           i2_USBTransferOnePacket *
       _MSDTransferTerminated
         i2_USBStallEndpoint
         i2_USBTransferOnePacket
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         i2_USBTransferOnePacket
       i2_SYSTEM_Initialize
     i2_USBDeviceInit
       i2_memset
   _motor_isr
     _i2c_eeprom_save_position
       _i2c_eeprom_write
         i2__i2c_eeprom_busy
           i2__i2c_send
           i2__i2c_start
           i2__i2c_stop
           i2__i2c_wait_idle
         i2__i2c_write
           i2__i2c_send
           i2__i2c_start
           i2__i2c_stop
           i2__i2c_wait_idle
       i2_memcpy
   _tmr0_isr
     _encoder_run

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     400      36       66.7%
BIGRAMlh           500      0       0      35        0.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      50      13       31.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C0      11       75.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      EB       9       91.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     3C     100       7      100.0%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9F      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5E       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3F9      31        0.0%
DATA                 0      0     7F9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Jan 06 20:00:32 2020

                           __end_of_fat_read_from_file 22C6  
                               _motor_next_speed_check 0238  
                      __size_of__write_value_to_offset 0036  
                                           _USB_SD_Ptr 9DE4  
                                         ___fldiv@aexp 0090  
                                         ___fldiv@bexp 008F  
                             fat_create_file@extension 00AE  
                                  __get_item@value_ctr 0069  
                                         ___fldiv@sign 0088  
               motor_calculate_position_in_degrees@tmp 0091  
                                  __system_timer0_init 5FFE  
                      __size_of_configFile_readDefault 007C  
                     __motor_move_steps@return_value_1 0085  
                     __motor_move_steps@return_value_2 0086  
                         __motor_schedule_command@type 0066  
                            __end_of_motor_divide_jump 3374  
                              configFile_read@position 01FC  
                                                   _os 0164  
                                        _USBDeviceInit 0002  
                                  ___wmul@multiplicand 0062  
                                   _USBCheckHIDRequest 2654  
                          ??__data_sector_from_cluster 0062  
               __end_of__encoder_next_divide_step_size 5F74  
              __size_of__encoder_next_divide_step_size 002E  
                       __encoder_next_divide_step_size 5F46  
                                     __i2c_eeprom_busy 614C  
                                     ??__flash_is_busy 0071  
                           ??__sector_from_file_number 0062  
                                         __CFG_CP0$OFF 000000  
                       __root_is_available@root_sector 008F  
                                  __end_of_system_init FC02  
                             ?_i2c_display_write_fixed 0065  
                              fat_modify_file@position 00BF  
                                      _fat_resize_file 1A3A  
                 USER_USB_CALLBACK_EVENT_HANDLER@event 0010  
                 USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                        __motor_schedule_command@speed 0064  
                                                  l206 5E7C  
                                                  l207 5E7A  
                                                  l145 004C  
                                                  l147 0074  
                                                  l149 00AE  
                          __end_of_USBStdGetDscHandler 07A6  
                                                  l184 1644  
                                                  l192 1582  
                                                  l186 166E  
                                                  l602 DC7C  
                                                  l188 16EC  
                                                  l700 CFA6  
                                                  l620 4DA0  
                                                  l612 0B46  
                                                  l701 CCE6  
                                                  l613 0B40  
                                                  l605 DC84  
                                                  l710 CDE6  
                                                  l630 C254  
                                                  l622 4DBC  
                                                  l703 CFCA  
                                                  l711 CE54  
                                                  l631 BEB2  
                                                  l615 0B4A  
                                                  l720 CF8C  
                                                  l712 CE50  
                                                  l704 CD92  
                                                  l640 BFF6  
                                                  l624 4DC8  
                                                  l608 0A98  
                                                  l641 C000  
                                                  l625 4DCE  
                                                  l714 CE68  
                                                  l706 CD98  
                                                  l650 C0FA  
                                                  l642 C024  
                                                  l634 BEC2  
                                                  l626 4DD4  
                                                  l570 DC9C  
                                                  l731 1038  
                                                  l715 CEEC  
                                                  l707 CDA4  
                                                  l619 4DDC  
                                                  l571 DA64  
                                                  l708 CDC2  
                                                  l660 C1A0  
                                                  l652 C130  
                                                  l644 C054  
                                                  l636 BED2  
                                                  l580 DB72  
                                                  l900 5106  
                                                  l709 CE0E  
                                                  l661 C1B4  
                                                  l637 BEDC  
                                                  l734 1044  
                                                  l726 0FE2  
                                                  l718 CF5C  
                                                  l670 C24C  
                                                  l662 C1DC  
                                                  l654 C14C  
                                                  l646 C094  
                                                  l582 DB8A  
                                                  l735 106C  
                                                  l719 CF74  
                                                  l639 BF30  
                                                  l591 DBFE  
                                                  l575 DA88  
                                                  l728 0FFA  
                                                  l664 C210  
                                                  l656 C164  
                                                  l592 DC02  
                                                  l904 5118  
                                                  l753 10D6  
                                                  l737 10A8  
                                                  l681 EB1E  
                                                  l665 C1E4  
                                                  l649 C0CC  
                                                  l593 DC28  
                                                  l577 DBB0  
                                                  l770 0F5C  
                                                  l738 108E  
                                                  l690 EA34  
                                                  l682 E960  
                                                  l666 C1F6  
                                                  l578 DB96  
                                                  l586 DCBA  
                                                  l906 5124  
                                                  l675 3248  
                                                  l763 0FA6  
                                                  l771 0F98  
                                                  l747 10B6  
                                                  l691 EA5E  
                                                  l667 C20C  
                                                  l587 DBD0  
                                                  l579 DB6A  
                                                  l764 0F10  
                                                  l684 EB42  
                                                  l692 EA8C  
                                                  _BDT 000D00  
                                                  l677 3264  
                                                  l757 0EE4  
                                                  l749 10C4  
                                                  l693 EA9E  
                                                  l685 E9BA  
                                                  l589 DBDC  
                                                  l950 3958  
                                                  l766 0F18  
                                                  l694 EAA4  
                                                  l686 E9C6  
                                                  l862 3DF2  
                                                  l767 0F26  
                                                  l695 EAB8  
                                                  l687 E9D0  
                                                  l871 3E34  
                                                  l863 3E0C  
                                                  l944 38F4  
                                                  l768 0F3A  
                                                  l696 EB06  
                                                  l688 E9E4  
                                                  l872 3E38  
                                                  l769 0F48  
                                                  l873 3E3E  
                                                  l867 3E44  
                                                  l869 3E66  
                                                  l897 5136  
                                                  l986 63CA  
                                                  l898 50FA  
                                                  _LBA 0123  
                                        ?_display_init 0001  
                                                  _PR2 000FCB  
                                                  _LUN 029E  
                                                  _UIE 000F36  
                                                  _UIR 000F62  
                                     ??_motor_set_zero 006A  
                                   api_prepare@command 0074  
                                           _USBSuspend 5F16  
                               __end_of_display_update 5D16  
                                 USBStdSetCfgHandler@i 0018  
                               i2c_eeprom_read@address 0071  
                                                  prod 000FF3  
                                                  tosl 000FFD  
                                                  wreg 000FE8  
                                       _USBDeviceTasks 0296  
                                  ?_USBCheckHIDRequest 0001  
                                         __CFG_IESO$ON 000000  
                                       _USBDeviceState 005D  
                                         ___flmul@aexp 0089  
                                         ___flmul@bexp 008A  
                                         ?__write_root 0088  
                              __parse_item@item_string 0099  
                                         ___flmul@sign 0084  
                                         ___flmul@temp 008F  
                                         ___flmul@prod 008B  
                            __size_of_i2c_display_init 0050  
                                    ?_motor_goto_steps 0092  
                                ??_USBCtrlTrfRxService 0001  
                             __size_ofi2_USBDeviceInit 0146  
                             USBEnableEndpoint@options 0009  
                             ?__motor_decide_direction 007D  
                                    __find_nth_cluster 3994  
                                    ??_MSDErrorHandler 0068  
                                 ?__system_timer0_init 0001  
                                  api_prepare@inBuffer 0070  
                                         ___fltol@exp1 0069  
                    __size_of__offset_from_file_number 002A  
                          __flash_write_to_buffer@data 0075  
                                                 l2000 D8B2  
                                                 l2001 D8B6  
                                                 l2010 D8DA  
                                                 l2002 D8BA  
                                                 l1131 6494  
                                                 l2011 D8DE  
                                                 l2003 D8BE  
                                                 l2020 D8FE  
                                                 l2012 D8E2  
                                                 l2004 D8C2  
                                                 l1140 645A  
                                                 l2021 D902  
                                                 l2013 D8E6  
                                                 l2005 D8C6  
                                                 l2022 D906  
                                                 l2006 D8CA  
                                                 l2023 D90A  
                                                 l2015 D8EA  
                                                 l2007 D8CE  
                                                 l1400 AFFA  
                                                 l3000 3F26  
                                                 l2024 D90E  
                                                 l2016 D8EE  
                                                 l2008 D8D2  
                                                 l1152 6466  
                                                 l1224 53DC  
                                                 l3001 3F2C  
                                                 l2025 D912  
                                                 l2017 D8F2  
                                                 l2009 D8D6  
                                                 l1146 648C  
                                                 l2210 51FA  
                                                 l1402 A438  
                                                 l2018 D8F6  
                                                 l2202 5B26  
                                                 l1170 3E94  
                                                 l1082 FBBA  
                                                 l1163 57DA  
                                                 l1331 58E6  
                                                 l1403 A3A8  
                                                 l2019 D8FA  
                                                 l2203 5B02  
                                                 l1083 FBFC  
                                                 l1164 57BC  
                                                 l2300 0BDC  
                                                 l1340 250C  
                                                 l1420 A496  
                                                 l1412 A3FC  
                                                 l1404 A3DC  
                                                 l2116 479A  
                                                 l1260 54AC  
                                                 l2204 5B36  
                                                 l2301 0C70  
                                                 l1501 AF2C  
                                                 l1413 A426  
                                                 l1261 548E  
                                                 l2205 5B14  
                                                 l2302 0BF4  
                                                 l1350 E1F6  
                                                 l1510 AFC8  
                                                 l1502 AF56  
                                                 l1430 A524  
                                                 l1422 A4D2  
                                                 l1414 A41C  
                                                 l2118 4800  
                                                 l3110 1DE0  
                                                 l1158 6452  
                                                 l2303 0C10  
                                                 l2311 3388  
                                                 l3031 ED18  
                                                 l1431 A510  
                                                 l1423 A4A2  
                                                 l1407 A3C8  
                                                 l2216 4234  
                                                 l1600 55CC  
                                                 l1360 E266  
                                                 l1336 24DE  
                                                 l1512 AFF2  
                                                 l1504 AF64  
                                                 l1440 A5F2  
                                                 l2313 33C2  
                                                 l2225 3CFA  
                                                 l1601 55D6  
                                                 l3025 ECDC  
                                                 l1329 58DA  
                                                 l1361 E27A  
                                                 l1337 24C8  
                                                 l1345 5A06  
                                                 l1433 A51A  
                                                 l1409 A3D2  
                                                 l3201 443C  
                                                 l1169 3EB2  
                                                 l2330 F354  
                                                 l1362 E2DA  
                                                 l1354 E1CE  
                                                 l1506 AF8E  
                                                 l1450 A76C  
                                                 l1442 A5FC  
                                                 l1434 A538  
                                                 l1418 B056  
                                                 l3202 4430  
                                                 l3106 1D72  
                                                 l1266 4638  
                                                 l2315 3402  
                                                 l2323 F3E4  
                                                 l2219 426A  
                                                 l1363 E294  
                                                 l1355 E1EC  
                                                 l1339 253C  
                                                 l1443 A61A  
                                                 l1435 A57C  
                                                 l1419 A44C  
                                                 l3115 F912  
                                                 l3131 B6D2  
                                                 l3107 1D3A  
                                                 l2083 3636  
                                                 l2500 EFF6  
                                                 l2340 F5F4  
                                                 l2316 33CC  
                                                 l2228 3D38  
                                                 l3028 ED02  
                                                 l1364 E2D8  
                                                 l1372 1246  
                                                 l1508 AFBA  
                                                 l1460 A910  
                                                 l1452 A834  
                                                 l1444 A68A  
                                                 l3140 B8B8  
                                                 l3132 B708  
                                                 l2501 F028  
                                                 l2341 F60C  
                                                 l2317 33D8  
                                                 l2333 F3AE  
                                                 l1357 E282  
                                                 l1461 A930  
                                                 l1453 A804  
                                                 l1445 A65A  
                                                 l1437 A5CA  
                                                 l1429 A4F0  
                                                 l3141 B8EE  
                                                 l3133 B73E  
                                                 l3205 4470  
                                                 l3109 1DE4  
                                                 l1381 348C  
                                                 l2502 F058  
                                                 l2350 F67C  
                                                 l2342 F614  
                                                 l2326 F2C4  
                                                 l1614 624C  
                                                 l1710 5DD4  
                                                 l1366 E314  
                                                 l1390 56E6  
                                                 l1462 A918  
                                                 l3118 F974  
                                                 l3150 F0EA  
                                                 l3142 B924  
                                                 l3134 B774  
                                                 l3206 447E  
                                                 l1518 5CEC  
                                   _dc_main_simplified A06E  
                                                 l2503 F0C6  
                                                 l2351 F682  
                                                 l2343 F61C  
                                                 l1367 E2E4  
                                                 l1471 AA58  
                                                 l1463 A98A  
                                                 l1455 A8DA  
                                                 l1447 A70E  
                                                 l1439 A606  
                                                 l3143 B986  
                                                 l3135 B7AA  
                                                 l1383 34AC  
                                                 l2079 35E2  
                                                 l2520 F82C  
                                                 l2512 37FE  
                                                 l2360 F6D8  
                                                 l2352 F688  
                                                 l2344 F624  
                                                 l2328 F2D6  
                                                 l2280 2B68  
                                                 l1608 5164  
                                                 l1480 ABA2  
                                                 l1472 AAC0  
                                                 l1464 A95A  
                                                 l1456 A8AA  
                                                 l3152 F1F8  
                                                 l3144 B9BC  
                                                 l3136 B7E0  
                                                 l1800 3A26  
                                                 l2521 F844  
                                                 l2337 F6F0  
                                                 l2353 F68E  
                                                 l2345 F62C  
                                                 l1609 516E  
                                                 l1473 AA76  
                                                 l1449 A79C  
                                                 l3153 F25E  
                                                 l3145 BA1E  
                                                 l3137 B816  
                                                 l3129 B69C  
                                                 l1801 39BC  
                                                 l3161 F588  
                                                 l1385 34CC  
                                                 l2354 F694  
                                                 l2346 F634  
                                                 l2338 F5DC  
                                                 l1714 5DA0  
                                                 l3250 2F7C  
                                                 l3242 2EF4  
                                                 l1490 ADB4  
                                                 l1482 AC4E  
                                                 l1474 AAD0  
                                                 l1466 A9E8  
                                                 l1458 A8F2  
                                                 l3146 BA54  
                                                 l3138 B84C  
                                                 l1802 3A08  
                                                 l3162 F47C  
                                                 l1810 D048  
                                                 l1378 346C  
                                                 l2523 F898  
                                                 l2355 F69A  
                                                 l2347 F63C  
                                                 l2283 2AE4  
                                                 l1563 52F8  
                                                 l3251 2F92  
                                                 l3243 2F0C  
                                                 l1491 AD2C  
                                                 l1483 AC1E  
                                                 l1475 AA82  
                                                 l1459 A920  
                                                 l3139 B882  
                                                 l3163 F512  
                                                 l1811 D0EE  
                                                 l1555 4A82  
                                                 l2540 019A  
                                                 l2380 FE46  
                                                 l2524 F8E6  
                                                 l2356 F6A0  
                                                 l2348 F644  
                                                 l2292 0B6E  
                                                 l2284 2AF2  
                                                 l1564 52B4  
                                                 l1492 ADCA  
                                                 l1476 AB2A  
                                                 l1468 AA24  
                                                 l3164 F544  
                                                 l1820 D198  
                                                 l1812 D09A  
                                                 l1556 4AA6  
                           USBConfigureEndpoint@handle 0007  
                                                 l2541 023A  
                                                 l2373 FF66  
                                                 l2381 FEAC  
                                                 l2365 4366  
                                                 l2525 F900  
                                                 l2349 F64C  
                                                 l2285 2B06  
                                                 l1581 4724  
                                                 l3245 2F3A  
                                                 l1493 AD38  
                                                 l1485 AC66  
                                                 l1477 AAFA  
                                                 l1469 A9F4  
                                                 l1813 D1B6  
                                                 l1573 5056  
                                                 l3182 531C  
                                                 l2366 4308  
                                                 l2518 F814  
                                                 l2358 F6BC  
                                                 l2286 2B1A  
                                                 l1566 52DE  
                                                 l1582 472E  
                                                 l3246 2F2E  
                                                 l3262 36B8  
                                                 l1494 AD76  
                                                 l1486 ACE0  
                                                 l2534 0DB8  
                                                 l1910 2278  
                                                 l1822 D20E  
                                                 l1574 5060  
                                                 l3183 5330  
                                                 l2375 FFFE  
                                                 l2631 491E  
                                                 l2367 4382  
                                                 l2295 0BBC  
                                                 l2287 2B28  
                                                 l3263 36C6  
                                                 l3255 365E  
                                                 l1495 AE46  
                                                 l1487 ACB0  
                                                 l1479 ABDA  
                                                 l3431 0CB0  
                                                 l1823 D206  
                                                 l1807 D03E  
                                                 l2368 4326  
                                                 l2288 2B48  
                                                 l1584 4766  
                                                 l3264 36DC  
                                                 l3256 3672  
                                                 l1496 AE0E  
                                                 l2800 C2B6  
                                                 l2472 EDC0  
                                                 l3432 0CE4  
                                                 l1824 D24E  
                                                 l3168 BE70  
                                                 l2481 2030  
                                                 l2633 493A  
                                                 l2385 4510  
                                                 l2369 4344  
                                                 l2545 277A  
                                                 l2297 0BC2  
                                                 l3249 2F6E  
                                                 l1489 AD0E  
                                                 l2473 EDC2  
                                                 l3433 0D22  
                                                 l1841 4C00  
                                                 l1913 DF36  
                                                 l1817 D182  
                                                 l3169 BE86  
                                                 l2538 0176  
                                                 l2482 2040  
                                                 l2634 4942  
                                                 l1586 4786  
                                                 l3258 3690  
                                                 l1498 AEBA  
                                                 l2642 3308  
                                                 l2810 C354  
                                                 l2730 4972  
                                                 l2474 EE2E  
                                                 l3434 0D60  
                                                 l2483 2050  
                                                 l2379 FE14  
                                                 l2299 0C3A  
                                                 l3259 3684  
                                                 l1499 AE8A  
                                                 l2803 C2E8  
                                                 l2475 EE5E  
                                                 l2467 ED5A  
                                                 l1915 E100  
                                                 l1819 D190  
                                                 l2484 205C  
                                                 l2492 EF26  
                                                 l2636 496E  
                                                 l2548 2804  
                                                 l3700 CB40  
                                                 l2740 5F4C  
                                                 l2900 1110  
                                                 l2812 C37E  
                                                 l2732 497E  
                                                 l2468 EDB4  
                                                 l1916 DFEE  
                                                 l1828 D288  
                                                 l2564 29D2  
                                                 l2485 2076  
                                                 l2493 EF36  
                                                 l3701 CB44  
                                                 l3461 29F4  
                                                 l2645 332C  
                                                 l2901 111A  
                                                 l2813 C38E  
                                                 l2733 4988  
                                                 l1917 E016  
                                                 l1829 D29C  
                                                 l1933 1A4A  
                                                 l2494 EF42  
                                                 l3438 5ED4  
                                                 l3470 2A78  
                                                 l2742 5F50  
                                                 l2910 11A4  
                                                 l2902 1128  
                                                 l2822 C42C  
                                                 l2806 C312  
                                                 l2734 4992  
                                                 l1918 E0BE  
                                                 l1774 4F94  
                                                 l1790 2E62  
                                                 l2479 201E  
                                                 l2495 EF52  
                                                 l2671 3BC0  
                                                 l3711 CC28  
                                                 l3463 2A60  
                                                 l2751 49EE  
                                                 l2743 5F54  
                                                 l2911 11B0  
                                                 l2807 C322  
                                                 l2735 499C  
                                                 l1839 4BA8  
                                                 l1847 608E  
                                                 l1943 DD38  
                                                 l1935 1A5A  
                                                 l1951 2CB6  
                                                 l2496 EF62  
                                                 l2488 EF14  
                                                 l3704 CBDE  
                                                 l3472 2AA0  
                                                 l3464 2A50  
                                                 l2752 49F8  
                                                 l2920 E5A6  
                                                 l2744 5F58  
                                                 l2904 1152  
                                                 l2824 C456  
                                                 l2816 C3C0  
                                                 l1776 4FCE  
                                                 l1944 DED0  
                                                 l1936 1B16  
                                                 l1960 2C86  
                                                 l1952 2C6A  
                                                 l2497 EF90  
                                                 l3721 CC98  
                                                 l3713 CC32  
                                                 l2753 4A02  
                                                 l2921 E562  
                                                 l2905 1164  
                                                 l2833 C62C  
                                                 l2841 C554  
                                                 l2825 C466  
                                                 l2729 49A6  
                                                 l1849 60A0  
                                                 l1793 2EBC  
                                                 l1945 DDBE  
                                                 l1937 1B0E  
                                                 l1961 2C8A  
                                                 l2498 EFA8  
                                                 l3706 CBEE  
                                                 l2754 4A0C  
                                                 l2930 E5D0  
                                                 l2922 E56E  
                                                 l2842 C564  
                                                 l2834 C4E8  
                                                 l2818 C3EA  
                                                 l1866 21DC  
                                                 l1882 07C4  
                                                 l1946 DDE6  
                                                 l1970 2CAE  
                                                 l1962 2C8E  
                                                 l1954 2C6E  
                                                 l2499 EFCC  
                                                 l2923 E57C  
                                                 l2763 4AD2  
                                                 l2739 5F5C  
                                                 l2907 1198  
                                                 l2851 C602  
                                                 l2835 C4F8  
                                                 l2819 C3FA  
                                                 l1875 21C6  
                                                 l1795 2EC6  
                                                 l1947 DE8E  
                                                 l1971 2CB2  
                                                 l1963 2C92  
                                                 l1955 2C72  
                                                 l3820 05A4  
                                                 l3740 D314  
                                                 l2748 4A16  
                                                 l2932 E614  
                                                 l2828 C498  
                                                 l2860 E794  
                                                 l1884 07D6  
                                                 l1980 D7F2  
                                                 l1964 2C96  
                                                 l1956 2C76  
                                                 l3725 CCBE  
                                                 l3709 CC12  
                                                 l3469 2A84  
                                                 l3821 0598  
                                                 l3653 552E  
                                                 l2749 49E2  
                                                 l2941 E6B2  
                                                 l2925 E5B6  
                                                 l2845 C596  
                                                 l2861 E7A2  
                                                 l1869 214E  
                                                 l1885 0834  
                                                 l1981 D804  
                                                 l1965 2C9A  
                                                 l1957 2C7A  
                                                 l3726 CCC6  
                                                 l3718 CC52  
                                                 l3654 5526  
                                                 l3742 D362  
                                                 l2918 E74A  
                                                 l2926 E584  
                                                 l2758 5B52  
                                                 l2838 C52A  
                                                 l2870 E822  
                                                 l1878 4822  
                                                 l3582 4C8E  
                                                 l1990 D88A  
                                                 l1982 D816  
                                                 l1966 2C9E  
                                                 l1958 2C7E  
                                                 l3903 5F02  
                                                 l3727 CCC8  
                                                 l3823 05E2  
                                                 l3663 5A8C  
                                                 l3735 D2D8  
                                                 l2943 E732  
                                                 l2951 E70C  
                                                 l2927 E58E  
                                                 l2847 C5C0  
                                                 l2863 E7DC  
                                                 l3911 50A6  
                                                 l3583 4C82  
                                                 l1975 D916  
                                                 l1991 D88E  
                                                 l1983 D828  
                                                 l1967 2CA2  
                                                 l1959 2C82  
                                                 l3904 5EF0  
                                                 l3832 0654  
                                                 l3824 05CA  
                                                 l3816 0564  
                                                 l3664 5A84  
                                                 l3920 5B86  
                                                 l3752 D46C  
                                                 l3744 D38A  
                                                 l3736 D2D4  
                                                 l2944 E6C6  
                                                 l2936 E66C  
                                                 l2928 E59C  
                                                 l2848 C5D0  
                                                 l2960 22C8  
                                                 l2856 E93A  
                                                 l2880 E890  
                                                 l2864 E7AA  
                                                 l3840 2BDA  
                                                 l3912 509C  
                                                 l1992 D892  
                                                 l1984 D83A  
                                                 l1976 D7E6  
                                                 l1968 2CA6  
                                                 l3817 0574  
                                                 l3657 554E  
                                                 l3761 D4E8  
                                                 l3753 D44E  
                                                 l3745 D438  
                                                 l2953 E716  
                                                 l2945 E6DA  
                                                 l2865 E7B4  
                                                 l1993 D896  
                                                 l1985 D84C  
                                                 l1969 2CAA  
                                                 l3690 CAFA  
                                                 l3770 C684  
                                                 l3826 0614  
                                                 l3818 0592  
                                                 l3658 5558  
                                                 l3762 D50C  
                                                 l3746 D3E8  
                                                 l2954 E728  
                                                 l2938 E688  
                                                 l2970 2326  
                                                 l2858 E7CC  
                                                 l2866 E7C2  
                                                 l3586 4CB6  
                                                 l1994 D89A  
                                                 l1986 D85E  
                                                 l1978 D7EA  
                                                 l3691 CAD8  
                                                 l3683 CA22  
                                                 l3771 C698  
                                                 l3827 0608  
                                                 l3667 5AA4  
                                                 l3763 D536  
                                                 l3747 D410  
                                                 l3739 D318  
                                                 l2939 E69A  
                                                 l2963 2370  
                                                 l2875 E928  
                                                 l2883 E8BA  
                                                 l2859 E770  
                                                 l3843 2C2A  
                                                 l3587 4CC4  
                                                 l1995 D89E  
                                                 l1987 D870  
                                                 l1979 D7EE  
                                                 l3692 CAE6  
                                                 l3684 CA1E  
                                                 l3780 C8B6  
                                                 l3668 5AAE  
                                                 l3764 D542  
                                                 l2948 E6EA  
                                                 l2892 11D2  
                                                 l2796 C644  
                                                 l2972 2330  
                                                 l2964 22E2  
                                                 l2884 E8CC  
                                                 l2876 E84A  
                                                 l2868 E7F6  
                                                 l3844 2BEC  
                                                 l3860 1D20  
                                                 l1996 D8A2  
                                                 l1988 D882  
                                                 l3693 CAEA  
                                                 l3781 C898  
                                                 l3773 C6C8  
                                                 l3765 D544  
                                                 l3749 D436  
                                                 l2949 E6FE  
                                                 l2973 2348  
                                                 l2965 22FE  
                                                 l2877 E85E  
                                                 l3837 2B98  
                                                 l3925 45FA  
                                                 l1997 D8A6  
                                                 l1989 D886  
                            ?__offset_from_file_number 0060  
                                                 l3686 CA7E  
                                                 l3678 C9DA  
                                                 l3790 C950  
                                                 l3774 C6C4  
                                                 l2894 1132  
                                                 l2798 C4C2  
                                                 l2982 4D1C  
                                                 l2990 3F34  
                                                 l3846 2C5E  
                                                 l3838 2B92  
                                                 l3854 1C78  
                                                 l3934 6394  
                                                 l3926 4598  
                                                 l1998 D8AA  
                                                 l3687 CA42  
                                                 l3679 C9D6  
                                                 l3775 C6D8  
                                                 l3871 5A56  
                                                 l3919 5B8C  
                                                 l3759 D4A4  
                                                 l2895 10E8  
                                                 l2799 C2A4  
                                                 l2959 238E  
                                                 l2975 2354  
                                                 l2887 E8FE  
                                                 l2983 4CD8  
                                                 l2991 3F04  
                                                 l3927 45F0  
                                                 l1999 D8AE  
                                                 l3696 CB56  
                                                 l3792 C974  
                                                 l3776 C6F6  
                                                 l2896 10FA  
                                                 l2976 235E  
                                                 l2968 230E  
                                                 l2984 4D10  
                                                 l2992 3F82  
                                                 l3697 CB1E  
                                                 l3793 C992  
                                                 l3769 C688  
                                                 l2897 1108  
                                                 l2969 2318  
                                                 l2993 3F0E  
                                                 l3865 628C  
                                                 l3857 1CDA  
                                                 l3858 1C82  
                                                 l3787 C8EE  
                                                 l3875 36F6  
                                                 l2899 1142  
                                                 l2995 3F14  
                                                 l3891 1BA4  
                                                 l3892 1C12  
                                                 l3789 C932  
                                                 l3877 3732  
                                                 l2997 3F1A  
                                                 l3885 54E8  
                                                 l3878 3774  
                                                 l2999 3F20  
                                                 l3897 4F72  
                                                 l3889 1B48  
                                                 l3898 4F38  
                  __end_of__encoder_next_arc_step_size 4A50  
                          __encoder_next_arc_step_size 49E0  
                        __size_of_encoder_statemachine 0094  
                                ??i2_SYSTEM_Initialize 0001  
                                                 STR_1 A388  
                                                 STR_2 A391  
                                                 STR_3 A388  
                                                 STR_4 A391  
                                                 STR_5 A388  
                                                 STR_6 A398  
                                                 STR_7 A37F  
                                                 STR_8 A37F  
                                                 STR_9 A37F  
                                   ??_motor_goto_steps 0099  
                                ??_USBCtrlTrfTxService 0001  
                                                 _UCFG 000F39  
                                 _configFile_extention 02E8  
                                                 _UEP0 000F26  
                                                 _UEP1 000F27  
                                     ?_fat_create_file 00AC  
                                                 _UEIE 000F37  
                                                 _UEIR 000F63  
                                                 _UCON 000F65  
                                                 _TMR2 000FCC  
                          __size_ofi2_USBStallEndpoint 0106  
                                   ?__find_nth_cluster 0097  
                                       ??_encoder_init 0060  
                              ??_fat_get_format_status 008B  
                                 api_parse@out_idx_ptr 00AE  
                                       _ResetSenseData 4E00  
                          __end_of_fat_restore_mbr_fbr 41E2  
                                                 _enc1 0147  
                                                 _enc2 0146  
               USBStdFeatureReqHandler@current_ep_data 001B  
                                                 _pDst 0144  
                                                 _atoi 2B90  
                                                 _atol 1C36  
                                                 _main 3DD8  
                              _bit_pattern_verticalbar A349  
                                                 _itoa 5A30  
                             ??i2_USBTransferOnePacket 0005  
                                  _use_cw_limit_string A319  
                                                 _ltoa 54BA  
                          __size_of_APP_DeviceMSDTasks 0012  
                                                 fsr0h 000FEA  
                                                 fsr1h 000FE2  
                              __end_of_display_prepare B072  
                    motor_goto_steps@distance_in_steps 0099  
                                                 indf0 000FEF  
                                                 fsr2h 000FDA  
                                                 fsr0l 000FE9  
                                                 indf1 000FE7  
                                                 indf2 000FDF  
                                                 fsr1l 000FE1  
                                                 fsr2l 000FD9  
                                      _USBDeviceAttach 5E54  
                                                 btemp 005F  
                                                 _utoa 36EE  
                               __CFG_DSWDTOSC$T1OSCREF 000000  
                           ??_ExternalFlash_SectorRead 0093  
                         ?i2_ExternalFlash_MediaDetect 0001  
                            _ExternalFlash_MediaDetect 646C  
                                                 prodh 000FF4  
                                                 prodl 000FF3  
     __get_available_offset_from_buffer@minimum_offset 0060  
                       fat_modify_file@number_of_bytes 00BD  
                                                 start 908E  
                      __end_of_APP_DeviceMSDInitialize 6404  
                         ?__motor_get_speed_in_degrees 0091  
                                      ___fldiv@new_exp 0089  
                                _display_get_character 5F74  
                                 ??_USBCheckHIDRequest 0001  
  __motor_distance_to_limit@absolute_position_in_steps 0079  
                                     ?_MSDWriteHandler 0001  
                              __end_of_fat_modify_file DEF2  
                        ??__encoder_next_arc_step_size 0062  
                                  ??__find_nth_cluster 009B  
                       ??_MSDProcessCommandMediaAbsent 00A7  
                           __end_of_USBCheckStdRequest 2654  
                               ??_USBCtrlTrfOutHandler 0003  
                         ??__flash_copy_page_to_buffer 0076  
                       ?__flash_write_page_from_buffer 0073  
                                         ___param_bank 000000  
                            ??_USBStdFeatureReqHandler 0018  
                                         _USBOutHandle 0138  
                     __end_of__fat_sector_from_cluster 634C  
                               __get_available_cluster 2E08  
                        __write_value_to_offset@buffer 0062  
                               __get_item@value_string 0062  
                           __end_ofi2__i2c_eeprom_busy 61C0  
                        __size_of__display_padded_itoa 00E2  
                      __end_of__parse_set_manual_speed 4514  
                      __size_of__flash_write_to_buffer 0052  
                             ??_USBStdGetStatusHandler 0001  
                        __write_value_to_offset@offset 0060  
                                       ?_USBDeviceInit 0001  
                                    __flash_get_status 5DEC  
                 __make_cluster_chain@sector_in_buffer 00A6  
                     __fat_offset_from_cluster@cluster 0060  
                    motor_speed_from_index@speed_index 009D  
                                        __CFG_PLLDIV$2 000000  
                         ??__encoder_statemachine_main 0060  
                                 _configFile_used_name 02D5  
                           __end_of_motor_speed_lookup 9461  
                                    ?_motor_move_steps 008C  
                        i2c_display_write_fixed@length 0067  
                         ??__encoder_statemachine_zero 009E  
                                                l13077 1044  
                                                l13407 4F38  
                                                l12463 0D98  
                                                l20707 49C0  
                                                l20717 4A30  
                                                l20709 49D6  
                                                l20719 4A46  
                                                l14431 4598  
                                                l14177 C01C  
                                                l14361 2E2C  
                                                l13485 EB18  
                                                l13745 EF90  
                                                l14385 2ECC  
                                                l20697 D930  
                                                l16243 2C26  
                                                l20699 DA48  
                                                l15605 2130  
                                                l16503 4630  
                                         spi_tx@length 0062  
                                                l18115 58DE  
                                                l18109 58D2  
                                                l17325 F9FE  
                                                l17309 F96C  
                                                l19031 5124  
                                                l16543 E166  
                                                l15639 21DC  
                                                l15575 6086  
                                                l18145 1246  
                                                l14865 D536  
                                                l19027 5106  
                                                l16563 E210  
                                                l18235 EE5E  
                                                l16811 35B2  
                                                l16619 4A54  
                                                l18229 EE2E  
                                                l17633 DA80  
                                                l17289 F90A  
                                                l17811 0C0A  
                                                l17547 5EF0  
                                                l19325 A574  
                                                l16677 0834  
                                                l17741 5CE4  
                                                l16829 3606  
                                                l16863 41A2  
                                                l16849 415A  
                                                l19339 A5C2  
                                                l16959 33D0  
                                                l18847 0044  
                                        ___fltol@sign1 0068  
                                motor_move_steps@speed 0090  
                                                l18875 00A6  
                                      __end_of___aldiv 2FA4  
                                   ?__flash_get_status 006C  
                                       ??_display_init 0081  
                                                ?_atoi 0066  
                                      __end_of___almod 36EE  
                                                ?_atol 006C  
                                      __end_of___fladd CCE4  
                                                ?_main 0001  
                  __end_of_initial_speed_manual_string A262  
                          _initial_speed_manual_string A24D  
                                      __end_of___fldiv D560  
                                                ?_itoa 0070  
                                      __end_of___flneg 5EE6  
                                                STR_10 A37F  
                                                ?_ltoa 007A  
                                                STR_11 A37F  
                                                STR_12 A37F  
                                                STR_13 A37F  
                                                STR_14 A37F  
                                                STR_15 A36A  
                                                STR_16 A376  
                                                STR_17 A39E  
                                                STR_18 A35D  
                                      __end_of___flmul C9A8  
                                     ??__display_clear 0060  
                                      _cw_limit_string A330  
                    __size_of_USBCtrlEPServiceComplete 0102  
                                      __end_of___fltol 2AB2  
                                      __end_of___lldiv 4490  
                                                ?_utoa 0067  
                     MSDCheckForErrorCases@DeviceBytes 006A  
                                                u11120 5532  
                                                u12020 4C92  
                                                u10510 0ED0  
                                                u11150 5A90  
                                                u10275 473A  
                                                u10365 517A  
                                                u11405 CD12  
                                                u11270 4F5A  
                                                u11600 4D46  
                                                u10385 4898  
                                      __end_of___llmod 4CD6  
                               __end_of_USBDeviceTasks 03DC  
                                                u11610 4D54  
                                                u11530 CF28  
                                                u20307 52EC  
                                                u11620 4D62  
                                                u11348 EA0E  
                                                u11540 CF2A  
                                                u11428 CD4A  
                                                u13140 CAAE  
                                                u11277 4F50  
                                                u11349 EA22  
                                                u11429 CD5E  
                                                u11630 4D70  
                                                u10910 10BE  
                                                u13150 CABE  
                                                u11295 E98C  
                                                u11640 4D7E  
                                                u11608 4D4A  
                                                u13400 CCA4  
                                                u13320 CC36  
                                                u13160 CAC0  
                                                u14040 061E  
                                                u11650 4D8A  
                                                u11618 4D58  
                                                u10930 10D2  
                                                u12610 C178  
                                                u20267 5674  
                                                u11628 4D66  
                                                u10860 108A  
                                                u12620 C18A  
                                                u12540 C04C  
                                                u12508 BF40  
                                                u12509 BF54  
                                                u11725 506C  
                                                u20277 5688  
                                                u11638 4D74  
                                                u11558 CF36  
                                                u12518 BF74  
                                                u13350 CC4E  
                                                u13190 CB02  
                                                u20287 52D0  
                                                u11559 CF4A  
                                                u12519 BF88  
                                                u11735 60C0  
                                                u11656 4D8C  
                                                u11648 4D82  
                                                u10960 5DD0  
                                                u11488 CE1E  
                                                u20297 52E2  
                                                u11489 CE32  
                                                u10890 10A4  
                                                u10970 5D9C  
                                                u12650 C218  
                                                u13610 D4A0  
                                                u12810 39F4  
                                                u15220 0A5E  
                                                u14500 D0FA  
                                                u11790 EF10  
                                                u12558 C070  
                                                u14510 D124  
                                                u14430 3498  
                                                u12559 C084  
                                                u11880 EF8C  
                                                u15208 0A2C  
                                                u13800 C8EA  
                                                u13640 D4F6  
                                                u16120 F9EA  
                                                u14520 D130  
                                                u14440 34B8  
                                                u15209 0A40  
                                                u11890 EFA4  
                                                u15234 0A76  
                                                u13650 D51A  
                                                u12850 4BFC  
                                                u12770 2E8C  
                                                u14530 D15C  
                            ?_USBCtrlEPServiceComplete 0001  
                                                u15235 0A70  
                                                u15244 0AB0  
                                                u13740 C6E4  
                                                u15245 0AAA  
                                                u15341 5662  
                                                u15325 53CC  
                                                u13830 C940  
                                                u13750 C85A  
                                                u15430 E17A  
                                                u12870 45BE  
                                                u14710 21D2  
                                                u11990 4440  
                                                u12790 2ECC  
                                   ??_motor_move_steps 0093  
                                                u13840 C95E  
                                                u13920 2A12  
                                                u15440 E1F0  
                                                u16080 F952  
                                                u14720 21DC  
                                                u14640 60A6  
                                                u14560 D1E6  
                                                u14480 D080  
                                                u15370 467E  
                                                u14395 59BE  
                                                u13755 C850  
                                                u15284 0B0E  
                                                u15268 0AD8  
                                                u14580 D262  
                                                u15620 1A96  
                                                u15285 0B08  
                                                u15269 0AEE  
                                                u13925 2A08  
                                                u17310 5912  
                                                u15470 E224  
                                                u14750 47FC  
                                                u14590 D26E  
                                                u15630 1AC8  
                                                u14840 FF44  
                                                u13960 2A8A  
                                                u16440 3694  
                                                u15480 E27E  
                                                u18200 E604  
                                                u14760 DF12  
                                                u15640 1AE2  
                                                u15625 1A8C  
                                                u16610 DA7A  
                                                u15810 363C  
                                                u15635 1ABE  
                                                u16380 2F3E  
                                                u18220 E65A  
                                                u15580 07FC  
                                                u18221 E658  
                                                u14765 DF06  
                                                u14870 FDF2  
                                                u16630 DAB0  
                                                u14950 50E8  
                                                u15830 4184  
                                                u17271 F5D4  
                                                u16800 DC5C  
                                                u19040 ECC6  
                                                u19120 A5A4  
                                                u17600 C3F6  
                                                u17520 C31E  
                                                u17440 EDBC  
                                                u14785 DFAA  
                                                u15585 07F2  
                                                u19050 ECD6  
                                                u17370 56D6  
                                                u17610 C426  
                                                u17530 C34E  
                                                u15690 DD5E  
                                                u15850 41CC  
                                                u19060 ECEC  
                                                u15780 35E8  
                                                u19070 ECFC  
                                                u15950 6214  
                                                u15695 DD54  
                                                u18600 010A  
                                                u17720 C560  
                                                u17640 C462  
                                                u17560 C38A  
                                                u17480 C2B2  
                                                u15945 0916  
                                                u15890 3400  
                                                u15970 32CC  
                                                u17730 C590  
                                                u17650 C492  
                                                u17570 C3BA  
                                                u17490 C2E2  
                                      __end_of___lwdiv 5562  
                                                u17910 E858  
                                                u17760 C5CC  
                                                u17680 C4F4  
                                                u17920 E88A  
                                                u18570 0068  
                                                u17770 C5FC  
                                                u17690 C524  
                         __flash_write_to_buffer@start 0073  
                                                u18900 FBD0  
                                                u17950 E8C6  
                                                u18910 FBEA  
                                                u17960 E8F8  
                                                u19660 3E14  
                          __size_of_motor_change_speed 000A  
                                                u18970 390E  
                                                u18990 3922  
                                      __end_of___lwmod 5AB8  
                                                i2l300 3884  
                                                i2l220 3A8C  
                                                i2l214 2FF0  
                                                i2l222 3AA8  
                                                i2l231 18B4  
                                                i2l232 185E  
                                                i2l160 02E6  
                                                i2l321 3DC8  
                                                i2l145 0422  
                                                i2l250 2D88  
                                                i2l226 408C  
                                                i2l322 3DC2  
                                                i2l162 030C  
                                      __end_of_dc_arc1 9F2E  
                                                i2l307 5AF8  
                                                i2l315 5D42  
                                                i2l147 044A  
                                                i2l155 02AC  
                                      __end_of_dc_arc2 9EDE  
                                                i2l340 30A8  
                                                i2l260 1462  
                                                i2l332 4ED4  
                                                i2l180 5C14  
                                                i2l236 18E0  
                                                i2l308 5AF6  
                                                i2l316 5D40  
                                                i2l172 039A  
                                                i2l164 0322  
                                                i2l156 02BC  
                                        __CFG_WDTEN$ON 000000  
                                                i2l253 2E00  
                                                i2l245 2D58  
                                                i2l341 30AC  
                                                i2l261 1440  
                                                i2l149 0482  
                                                i2l165 032E  
                                                i2l157 02C4  
                                                i2l254 2DC8  
                                                i2l342 312C  
                                                i2l334 4F20  
                                                i2l174 03B8  
                                                i2l166 0356  
                                                i2l247 2D62  
                                                i2l343 30F2  
                                                i2l263 14D6  
                                                i2l167 0360  
                                                i2l159 02DA  
                                                i2l264 14BC  
                                                i2l184 194E  
                                                i2l192 178E  
                                                i2l432 270C  
                                                i2l280 078E  
                                                i2l272 2860  
                                                i2l360 2598  
                                                i2l176 03D4  
                                                i2l249 2DC0  
                                                i2l345 3112  
                                                i2l425 26A2  
                                                i2l281 0678  
                                                i2l361 25AC  
                                                i2l169 0372  
                                                i2l186 1978  
                                                i2l426 2670  
                                                i2l274 28D4  
                                                i2l362 25B2  
                                                i2l179 5C06  
                                                i2l283 068C  
                                                i2l355 2610  
                                                i2l188 19F6  
                                                i2l436 26C4  
                                                i2l428 26B4  
                                                i2l372 D584  
                                                i2l284 071E  
                                                i2l364 25B8  
                                                i2l356 2582  
                                                i2l437 26DC  
                                                i2l429 268E  
                                                i2l381 D6E0  
                                                i2l373 D58A  
                                                i2l293 38C0  
                                                i2l365 25D6  
                                                i2l534 140A  
                                                i2l438 26E8  
                                                i2l550 31B4  
                                                i2l286 0726  
                                                i2l294 384E  
                                                i2l366 25F2  
                                                i2l358 258C  
                                                i2l535 1376  
                                                i2l439 2700  
                                                i2l391 D76C  
                                                i2l383 D6AA  
                                                i2l375 D5F6  
                                                i2l287 077E  
                                                i2l359 2592  
                                                i2l384 D6C6  
                                                i2l537 1402  
                                                i2l545 31EA  
                                                i2l393 D7BE  
                                                i2l377 D63E  
                                                i2l289 0786  
                                                i2l297 38D6  
                                                i2l562 31BC  
                                                i2l546 314E  
                                                i2l386 D72C  
                                                i2l298 3860  
                                                i2l387 D738  
                                                i2l379 D660  
                                                i2l299 3866  
                                                i2l900 5570  
                                                i2l820 4388  
                                                i2l388 D7B2  
                                                i2l821 4390  
                                                i2l822 4398  
                                                i2l904 5582  
                                                i2l816 43BA  
                                                i2l824 43A2  
                                                i2l906 558E  
                                                i2l826 43AC  
                                                i2l780 542E  
                                                i2l783 5464  
                                                _UADDR 000F38  
                                                i2l897 55A0  
                                                i2l898 5566  
          __end_of_motor_calculate_position_in_degrees 29D4  
         __size_of_motor_calculate_position_in_degrees 00DE  
                 ?_motor_calculate_position_in_degrees 0001  
                ??_motor_calculate_position_in_degrees 0091  
                  _motor_calculate_position_in_degrees 28F6  
                                      __end_of_dc_main A10E  
                                                _TMR0H 000FD7  
                                                _TMR0L 000FD6  
                                                _PORTA 000F80  
                                                _PORTE 000F84  
                       ??__encoder_statemachine_divide 00A8  
                                                _RPOR4 000EC4  
                                     ??__display_start 007C  
                          __motor_move_steps@direction 008B  
                      __end_of__motor_schedule_command 20F8  
                                                _USTAT 000F64  
                                      __end_of_dc_zero 9E8E  
                           ?__motor_calculate_distance 0060  
                                     __i2c_read@length 0067  
                       ??__encoder_statemachine_manual 008F  
                                 _beep_duration_string A2EF  
                          ?_ExternalFlash_CapacityRead 0060  
                                      ?_display_update 0001  
                             __find_nth_cluster@offset 009B  
                   __size_of_USBCtrlEPAllowStatusStage 00CC  
                                      _i2c_eeprom_read 53BA  
                                  ___lmul@multiplicand 0064  
                               __motor_move_back_forth 3798  
                            __end_of__find_nth_cluster 3A3A  
                             __find_nth_cluster@sector 009F  
                                     __end_of_MSDTasks DCBE  
                                           i2memcpy@d1 0001  
                                       __CFG_FCMEN$OFF 000000  
                                      __read_fat@value 0095  
                                   _USBCheckMSDRequest 313A  
                                           i2memcpy@s1 0003  
                      __end_of_USBCtrlEPAllowDataStage 3ADC  
            motor_divide_jump@target_position_in_steps 009F  
                                                _sd000 A359  
                               __write_value_to_offset 5D4E  
                                                _sd001 A14E  
                                                _sd002 A182  
                                                _sd003 A1F1  
                       ?_USBIncrement1msInternalTimers 0001  
                       __size_of_MSDTransferTerminated 0056  
                                  ??__flash_get_status 006E  
                __i2c_display_send_init_sequence@F7101 02C4  
                        __end_of_MSDTransferTerminated 5466  
                                         _gblCBWLength 0152  
                                           i2memset@p1 0001  
                               ?_MSDCheckForErrorCases 006A  
                                ??__system_timer0_init 0060  
                                 _use_ccw_limit_string A2E1  
                               _configFile_readDefault 4692  
                                      __end_of_isdigit 6294  
                                i2USBStallEndpoint@dir 0001  
                               __end_of_ResetSenseData 4E62  
                                                atoi@a 006B  
                                                atol@a 0075  
                                                atol@c 0079  
                                                atoi@s 0066  
                                                atol@s 006C  
                              __end_of__backlight_init 64B6  
                                      __motor_run@type 0066  
                                                _ultoa 1B38  
                             __parse_command_long@data 00A0  
                            __data_sector_from_cluster 63E4  
                            fat_get_format_status@cntr 008D  
                      __end_of_motor_postscaler_lookup 9A16  
                       __end_of_motor_prescaler_lookup 9DE4  
                                                pclath 000FFA  
                           __end_of__display_itoa_long 1304  
                                                tablat 000FF5  
                           i2__i2c_write@slave_address 0009  
                            __size_of_USBStallEndpoint 010A  
                                  ?_USBCheckMSDRequest 0001  
                                      _MSDCommandState 0156  
                          ??_ExternalFlash_SectorWrite 008D  
                                                plusw1 000FE3  
                                                plusw2 000FDB  
                                          ?_USBMSDInit 0001  
             ExternalFlash_WriteProtectStateGet@config 0060  
                                                ttemp5 0060  
                                                ttemp6 0063  
                                                ttemp7 0067  
                                                utoa@c 006F  
                                                utoa@v 006D  
                                                status 000FD8  
                          ?__flash_copy_page_to_buffer 0073  
                                    __CFG_DSWDTPS$8192 000000  
                                                wtemp8 0060  
                             __end_ofi2_ResetSenseData 4EC4  
                                      __end_of_stricmp 50F4  
                                      __end_of_strncmp 4616  
                                      __end_of_toupper 6398  
                                     __end_ofi2_memcpy 5040  
                                     __end_ofi2_memset 6056  
                       ??_MSDComputeDeviceInAndResidue 0062  
                                 __size_of__parse_item 042C  
                                       _MSDReadHandler E95E  
          i2c_display_program_custom_character@address 007F  
                                  __steps_from_degrees F0CA  
                         __size_of_USBStdSetCfgHandler 00E0  
                    fat_create_file@number_of_clusters 00B8  
                        ??i2_ExternalFlash_MediaDetect 0003  
                          __end_of__make_cluster_chain D2A6  
                    __make_cluster_chain@first_cluster 0095  
                                      __initialization 40BE  
                         ?_motor_decrease_manual_speed 0001  
                          ?__encoder_statemachine_main 0001  
                        fat_read_from_file@file_number 00D7  
                            __end_of__flash_get_status 5E20  
                         fat_get_file_information@data 008F  
                          fat_read_from_file_fast@data 00A9  
                          ?__encoder_statemachine_zero 0001  
              __end_ofi2_ExternalFlash_MediaInitialize 6380  
             __size_ofi2_ExternalFlash_MediaInitialize 001A  
                __end_of_ExternalFlash_MediaInitialize 62D8  
               __size_of_ExternalFlash_MediaInitialize 0022  
                    ??i2_ExternalFlash_MediaInitialize 0003  
                     ?i2_ExternalFlash_MediaInitialize 0001  
                      i2_ExternalFlash_MediaInitialize 6366  
                        _ExternalFlash_MediaInitialize 62B6  
                 __offset_from_file_number@file_number 0062  
                                          _system_init FA8E  
        __motor_decide_direction@distance_to_limit_ccw 0086  
                              __end_of_fat_resize_file 1B38  
                                         __end_of_atoi 2C68  
                                         __end_of_atol 1D32  
                                         __end_of_main 3E6E  
                                         __end_of_itoa 5A74  
               __end_of__ic2_display_set_ddram_address 6208  
              __size_of__ic2_display_set_ddram_address 0024  
                       __ic2_display_set_ddram_address 61E4  
                                         __end_of_ltoa 550E  
                      __end_of_i2c_display_write_fixed 54BA  
                                         __end_of_utoa 3798  
                        fat_read_from_file_fast@length 00A5  
                        fat_read_from_file_fast@offset 00BF  
                             __parse_command_short@cmd 009E  
                   fat_read_from_file_fast@read_length 00C3  
                                     __end_of_i2c_init 6332  
                           __display_signed_itoa@value 008F  
                        fat_read_from_file_fast@sector 00BB  
                             __end_of__i2c_acknowledge 646C  
                          configFile_write@file_number 00E4  
                           __size_of_motor_divide_jump 00B8  
                         __motor_run@distance_in_steps 0060  
                       ??__encoder_next_setup_stepsize 0062  
                                 ??_USBCheckMSDRequest 000C  
                    __fill_buffer_get_status@outBuffer 006B  
                                 _adc_read_temperature EB48  
                                       __CFG_OSC$HSPLL 000000  
               MSDComputeDeviceInAndResidue@DiExpected 0060  
                              _USBCheckMSDRequest$2534 000C  
                              _USBCheckMSDRequest$2535 000E  
                            __size_of_USBCtrlEPService 0098  
                 __end_of_motor_divide_jump_to_nearest FD5E  
                __size_of_motor_divide_jump_to_nearest 015C  
                         _motor_divide_jump_to_nearest FC02  
                                         __get_fbr@idx 0060  
                                    ?i2__i2c_wait_idle 0001  
                                               ??_atoi 0068  
                                               ??_atol 0070  
                                 api_prepare@outBuffer 0072  
                                               ??_main 00FE  
                                     __end_of__i2c_get 6462  
                                               ??_itoa 0076  
                                               ??_ltoa 0082  
                                   USBStallEndpoint@ep 0065  
                                               ??_utoa 006D  
                                        __activetblptr 000003  
                                      ?_USBDeviceTasks 0001  
        __motor_decide_direction@distance_to_target_cw 008A  
                             _fat_get_file_information 478A  
                                   __write_root@offset 008C  
                                         __get_mbr@idx 0060  
           __end_of_ExternalFlash_WriteProtectStateGet 64BA  
          __size_of_ExternalFlash_WriteProtectStateGet 0004  
                 ??_ExternalFlash_WriteProtectStateGet 0062  
                  ?_ExternalFlash_WriteProtectStateGet 0060  
                   _ExternalFlash_WriteProtectStateGet 64B6  
                                  __find_nth_cluster@n 0099  
                                          ?_USBSuspend 0001  
                                   __write_root@sector 008A  
                                   ??i2__i2c_wait_idle 0001  
                                 __size_of_api_prepare 00DE  
                                _motor_final_stepcount 011B  
                             __steps_from_degrees@temp 0095  
                                 ?__steps_from_degrees 0091  
                        __get_available_cluster@offset 0091  
                                   _motor_items_in_cue 6442  
                          __motor_move_steps@overshoot 0083  
                        __get_available_cluster@sector 0093  
                                 _i2c_eeprom_writeByte 59A6  
                              motor_move_endless@speed 008C  
                        __flash_write_to_buffer@buffer 0079  
                              __end_of_USBDeviceAttach 5E86  
                               __flash_write_to_buffer 55B6  
               __end_of__ic2_display_set_cgram_address 6080  
              __size_of__ic2_display_set_cgram_address 002A  
                       __ic2_display_set_cgram_address 6056  
                                     ___llmod@dividend 0060  
                                               _ADRESH 000FC4  
                                               _ADRESL 000FC3  
                     __end_of__fat_offset_from_cluster 6366  
                                               _CCPR1L 000FBB  
                                     _ccw_limit_string A326  
                                               _EECON2 000FA7  
                                               _DMABCH 000F66  
                                               _DMABCL 000F67  
                                      ?_ResetSenseData 0001  
                          ??__get_available_root_entry 0095  
                                               ?_ultoa 006D  
                                           __i2c_start 6492  
                               SYSTEM_Initialize@state 0064  
                                           __i2c_write 5798  
                          motor_move_endless@direction 008E  
                                     __end_of_adc_init 52B2  
                                               i2l1131 64A4  
                                               i2l1214 4570  
                            fat_read_from_file@cluster 00D9  
                                               i2l1215 4540  
                                  ?_motor_items_in_cue 0001  
                                               i2l1146 649C  
                                               i2l1066 5C9C  
                                               i2l1163 5998  
                                               i2l1164 597C  
                                               i2l2601 B0BE  
                                               i2l2610 B3BC  
                                               i2l2602 B118  
                                               i2l2603 B148  
                                               i2l2613 B4F0  
                                               i2l2605 B40A  
                                               i2l2608 B23E  
                                               i2l2617 B5A6  
                                               i2l2609 B28C  
                 __flash_write_page_from_buffer@buffer 0075  
                                               i2l2771 1E9E  
                                               i2l2596 B084  
                                               i2l2780 1E98  
                                               i2l2781 1F0E  
                                               i2l2598 B0BC  
                                               i2l2790 1F08  
                                               i2l2774 1E58  
                                               i2l3903 6044  
                                               i2l3904 6034  
                                               i2l2784 1EC8  
                                               i2l2777 1E7A  
                                               i2l2787 1EEA  
                                               i2l2779 1E90  
                                               i2l2789 1F00  
                                               i2l3897 502E  
                                               i2l3898 4FF6  
                      ??_APP_DeviceCustomHIDInitialize 000D  
                             ?__fill_buffer_get_status 006B  
                                     __end_of__get_fbr DA58  
                                     __end_of__get_mbr 2D38  
                                               _OSCCON 000FD3  
                          __flash_partial_read@address 0083  
                       ??__display_position_in_degrees 0064  
                                       __CFG_WDTPS$512 000000  
                                               _RPOR21 000ED5  
                                               _RPOR23 000ED7  
                                       __CFG_WPCFG$OFF 000000  
                                __display_itoa@missing 00B5  
                               __end_of_MSDReadHandler EB48  
                                    __spi_init@details 0060  
                              i2c_eeprom_write@address 000B  
                                     __end_of___xxtofl 0666  
                             i2USBTransferOnePacket@ep 0009  
                                     ??__i2c_wait_idle 0060  
                                    ??i2_USBDeviceInit 0009  
                               ?_display_get_character 0060  
                                     ?_display_prepare 0001  
                      __size_ofi2_USBTransferOnePacket 0102  
                         ?__divide_jump_size_decrement 0001  
                              ?_motor_speed_from_index 009D  
                          __flash_partial_read@command 007F  
                                       __CFG_WPDIS$OFF 000000  
                             __motor_distance_to_limit 014E  
                                     _configFile_write BA8A  
                                     __read_fat@offset 0093  
                                     __end_of_fat_init 63E4  
                                     __read_fat@sector 0091  
                                    _shortPacketStatus 0163  
                     __end_of_initial_speed_arc_string A2AE  
                                       __CFG_XINST$OFF 000000  
                                     _i2c_eeprom_write 4514  
                                     ?_fat_modify_file 00A1  
                             __size_of_configFile_read 01A4  
                                  _motor_current_speed 0057  
                                      USBDeviceTasks@i 001F  
                                          i2memcpy@tmp 000B  
                                         _CCPTMRS0bits 000F52  
        __parse_jump_steps_with_overshoot@return_value 009B  
                                    _motor_process_cue 3ADC  
                          USBStdFeatureReqHandler@pUEP 0019  
                             USBTransferOnePacket@data 0061  
                           USBCtrlTrfInHandler@lastDTS 0002  
                                 __size_of_encoder_run 00F4  
                         __end_of__flash_set_page_size 4ABE  
                                               ___flge 0C7A  
                                      ??_USBDeviceInit 0068  
                   __flash_copy_page_to_buffer@command 0079  
                             flash_partial_read@length 008B  
                                               ___lmul 530A  
                              __end_of_cw_limit_string A339  
                                               _gblCBW 0200  
                                            ??___aldiv 0068  
                             ?_motor_clear_command_cue 0001  
                                    _fat_get_file_size 4804  
                                            ??___almod 0068  
                                   __size_of__i2c_read 0094  
                                            ??___fladd 0084  
                 __encoder_statemachine_main@structure 0064  
                                               ___wmul 60FC  
                                   __size_of__i2c_send 000A  
                                            ??___fldiv 0080  
                                            ??___flneg 007C  
                                       __CFG_STVREN$ON 000000  
                       __read_value_from_offset@buffer 0062  
                                            ??___flmul 0080  
                                   __size_of__i2c_stop 0008  
                                            ??___fltol 0064  
                        ??_motor_decrease_manual_speed 0066  
                                            ??___lldiv 0068  
                                            ??___llmod 0068  
          i2SYSTEM_Initialize@pll_startup_counter_3152 0003  
            SYSTEM_Initialize@pll_startup_counter_3152 0062  
                                            ??___lwdiv 0064  
                                   ?_motor_process_cue 0001  
                         __size_of_flash_partial_write 006C  
                                           _SoftDetach 0151  
                                            ??___lwmod 0064  
                                               _config 0195  
                                               _buffer 0A00  
                                    _USBEnableEndpoint 5BF6  
                       __read_value_from_offset@offset 0060  
                      __size_of_USBStdGetStatusHandler 00AA  
                                ?_adc_read_temperature 0001  
                                 ??_motor_items_in_cue 0060  
                            _configFile_used_extention 02E5  
                                               _memcpy 4F26  
                                   ?_fat_get_file_size 0095  
                                               _memset 5EE6  
                     __end_of__sector_from_file_number 5EB6  
                              __end_of_i2c_eeprom_read 5410  
                                               _params 0231  
                                               clear_0 4106  
                                               clear_1 4118  
                                               clear_2 4124  
                                               clear_3 4130  
                                               clear_4 4140  
                            _ExternalFlash_SectorWrite 5D84  
                                    api_parse@inBuffer 00A7  
                                      __CFG_CLKOEC$OFF 000000  
                                     __end_of_inq_resp A1D4  
                                               _reboot 64BE  
                                     __motor_run@speed 0064  
                                 __end_of_encoder_init 61E4  
                                               _spi_tx 51A8  
                                   ?_USBEnableEndpoint 0009  
                           ??_i2c_eeprom_save_position 0026  
                              i2c_eeprom_writeByte@dat 0071  
                                   _flash_partial_read 6174  
               __make_cluster_chain@number_of_clusters 0097  
                                               _tx_buf 02CD  
                                i2c_display_init@F7104 02BB  
                                               _strlen 5B7C  
                              _motor_current_stepcount 011F  
                           __parse_command_long@length 00A6  
             i2c_display_program_custom_character@cntr 0080  
                              motor_set_zero@direction 006A  
                                     __end_of_tmr0_isr 5CA6  
                        __size_of_USBTransferOnePacket 0106  
                                  __size_of_USBMSDInit 010E  
                 __size_of_i2c_eeprom_recover_position 0098  
                          i2c_display_write_fixed@data 0065  
                        ?_motor_divide_jump_to_nearest 0001  
                               __size_of__flash_wakeup 0058  
                                               itoa@cp 0076  
                                  ??_motor_process_cue 006C  
                                ??__steps_from_degrees 0095  
                        __size_of__display_signed_itoa 0044  
                                            ??_isdigit 0060  
                    i2c_eeprom_recover_position@buffer 0079  
                           __end_of_motor_steps_lookup 982F  
                                __end_of_fat_find_file 21E0  
                 __size_of__motor_get_speed_in_degrees 013A  
                              ?_motor_set_manual_speed 0062  
                                               ltoa@cp 0082  
                       __parse_command_long@out_buffer 00A2  
                                  ??_fat_get_file_size 0099  
                        __size_of__parse_command_short 0198  
                     __size_of__read_value_from_offset 0048  
                                ?_i2c_eeprom_writeByte 006A  
                     __size_of_fat_read_from_file_fast 0226  
                         ?__divide_jump_size_increment 0001  
                                         __mediumconst 9092  
                           __size_of__find_nth_cluster 00A6  
                                               tblptrh 000FF7  
                                               tblptrl 000FF6  
                                               tblptru 000FF8  
                                     __end_of_spi_init 5B3C  
                     __size_of_APP_DeviceMSDInitialize 0010  
                                      _motor_direction 0149  
                      ??__flash_compare_page_to_buffer 0076  
                                  ??_USBEnableEndpoint 000A  
                                  ?_flash_partial_read 0087  
                                     _i2c_display_init 5658  
                        __end_of_menu_structure_string A2E1  
                                               ultoa@c 0079  
                                        spi_tx_rx@data 0064  
                    __size_of__fat_sector_from_cluster 001A  
                                               ultoa@v 0075  
                           __end_of__root_is_available 4C04  
                            ?__fat_sector_from_cluster 0060  
                                        spi_tx_tx@data 0064  
                                            ??_stricmp 0065  
                                motor_goto_steps@speed 0096  
                                          _CtrlTrfData 000D38  
                                    __system_pin_setup 4C04  
                                            ??_strncmp 0066  
                                            ??_toupper 0060  
                                   __size_of__add_item 00FA  
                                 __size_of__write_root 004C  
                                     ?__backlight_init 0001  
                    i2ExternalFlash_MediaDetect@config 0001  
                      ExternalFlash_MediaDetect@config 0060  
                                 _controlTransferState 00FF  
                           ??_APP_DeviceCustomHIDTasks 00B2  
                                           ___flge@ff1 0078  
                                           ___flge@ff2 007C  
                                 __CFG_LS48MHZ$SYS48X8 000000  
                                         ___xxtofl@arg 0074  
                                         ___xxtofl@exp 0073  
                                    _SYSTEM_Initialize 50F4  
                                         ___xxtofl@val 006A  
                                fat_modify_file@length 00A5  
                                   ?__system_pin_setup 0001  
                                fat_modify_file@offset 00BB  
                             __end_of__i2c_eeprom_busy 6174  
                                           __accesstop 0060  
                              __end_of__initialization 4146  
                       __end_of_motor_speed_from_index 63AE  
                                fat_modify_file@sector 00B5  
                    MSDCheckForErrorCases@MSDErrorCase 006F  
                                           ___flneg@f1 0078  
                                      ?_MSDReadHandler 0001  
                                         ?i2__i2c_send 0001  
                         fat_resize_file@first_cluster 00B8  
                                         ?i2__i2c_stop 0001  
                                 __end_of_display_init 5C6C  
                                   ?_SYSTEM_Initialize 0001  
                               __size_of__display_itoa 0224  
                                        ___rparam_used 000001  
        motor_isr@steps_until_standstill_if_accelerate 0043  
                             __size_of_USBStallHandler 0044  
                                           ___fltol@f1 0060  
                         __end_of__i2c_not_acknowledge 6458  
                      ExternalFlash_SectorWrite@config 0084  
                      ExternalFlash_SectorWrite@buffer 008A  
                            __end_of_motor_process_cue 3B76  
                          __end_of__parse_command_long 4386  
                                   __size_of__get_date 000C  
                            __end_of_fat_get_file_size 487E  
                                   __size_of__get_item 018A  
                                  __size_of_USBSuspend 0030  
                                   __size_of__get_time 000C  
                                  ??__system_pin_setup 0060  
                                  _motor_maximum_speed 0134  
                                 ??_flash_partial_read 008F  
                  __end_of_motor_increase_manual_speed 622C  
                          _motor_increase_manual_speed 6208  
                                       __pcstackCOMRAM 0001  
                           __size_of__flash_get_status 0034  
                            __end_of_USBEnableEndpoint 5C32  
                  __size_of_ExternalFlash_CapacityRead 0014  
                                        __end_of_sd000 A35D  
                                        __end_of_sd001 A182  
                                        __end_of_sd002 A1B0  
                                        __end_of_sd003 A20B  
                           ?__encoder_statemachine_arc 0001  
                         ?__encoder_statemachine_setup 0001  
                                            ?_MSDTasks 0001  
                                         __pidataBANK2 57E8  
                                         __pidataBANK4 5608  
                             __parse_item@value_string 009B  
                                     ?_fat_resize_file 00AC  
                                  ??_SYSTEM_Initialize 0060  
                            __get_available_root_entry 6080  
                 ExternalFlash_SectorWrite@sector_addr 0086  
                      __end_of_bit_pattern_verticalbar A351  
                     __size_of_USBCtrlEPAllowDataStage 00A2  
                                   __size_of__read_fat 0058  
                                      _active_protocol 01C1  
                                  i2USBStallEndpoint@p 0007  
                        __size_of_USBConfigureEndpoint 0094  
                   __size_of_ExternalFlash_MediaDetect 000A  
                          __end_of_USBCtrlTrfInHandler 313A  
                                        __end_of_ultoa 1C36  
                                  display_prepare@cntr 00D3  
                                  display_prepare@temp 00C8  
                                         _gblSenseData 021F  
                          motor_change_speed@new_speed 0060  
                                      _MSDErrorHandler 0EB6  
                       ?_ExternalFlash_MediaInitialize 0060  
                 __sector_from_file_number@file_number 0062  
                               i2_USBTransferOnePacket 1938  
                       __end_of_motor_set_manual_speed 4970  
                                   __size_of_api_parse 012A  
                      ??__motor_steps_from_degrees_int 0095  
                                      _motor_move_type 014A  
                                   _motor_move_endless 5FA2  
                                   _flash_sector_write 56F8  
                                           _dc_divide1 9F7E  
                                           _dc_divide2 9F2E  
                                   _fat_read_from_file 21E0  
                                   __size_of__spi_init 0038  
                                            ?i2_memcpy 0001  
                                            ?i2_memset 0001  
                              flash_sector_write@match 0083  
                __end_of_MSDProcessCommandMediaPresent C29E  
               __size_of_MSDProcessCommandMediaPresent 03EE  
                        _MSDProcessCommandMediaPresent BEB0  
                               flash_partial_read@data 008D  
                            __end_of__system_pin_setup 4C6E  
                               flash_partial_read@page 0087  
                 __size_of_motor_decrease_manual_speed 0022  
                             ??_USBCtrlTrfSetupHandler 001E  
                              _USBTicksSinceSuspendEnd 0158  
                       motor_move_degrees_int@distance 0099  
                    __flash_copy_page_to_buffer@buffer 0075  
                                     ?_USBDeviceAttach 0001  
                                  ?_motor_move_endless 008C  
                            __end_of_SYSTEM_Initialize 514E  
                                    __end_of__i2c_read 3F02  
                                    __end_of__i2c_send 6480  
                               _USBStdGetStatusHandler 3842  
                                  ?_flash_sector_write 007F  
                                  USBStallEndpoint@dir 0060  
                                    __end_of__i2c_stop 6492  
                                          ?__i2c_start 0001  
                                              ??_ultoa 0075  
                      ?__encoder_next_divide_step_size 0001  
                     ??__encoder_next_divide_step_size 0060  
                                  ?_fat_read_from_file 00C9  
                                          ?__i2c_write 0065  
                        __read_value_from_offset@value 0067  
                                           __pbssBANK0 00FF  
                                           __pbssBANK1 0100  
                                           __pbssBANK2 0200  
                                           __pbssBANK3 0300  
                                           _dc_startup 0400  
       __motor_decide_direction@distance_to_target_ccw 008E  
                     __size_of_i2c_display_write_fixed 0054  
                                     _USBStallEndpoint 1520  
                                           _gblNumBLKS 0240  
                                            ?_i2c_init 0001  
                            _overshoot_in_steps_string A277  
                                     _mediaInformation 0299  
                       __size_of_fat_get_format_status 00AE  
                       fat_get_file_information@offset 0094  
                       __get_available_cluster@cluster 008F  
                        __end_of_fat_get_format_status 3640  
                                        __flash_wakeup 52B2  
                             __fill_buffer_get_display 3374  
                              ?__get_available_cluster 008B  
                                            ?__i2c_get 0001  
                          __size_of_USBWakeFromSuspend 0038  
                                          _pBDTEntryIn 010F  
                          __size_of_i2c_display_cursor 0022  
                     __end_of_USBCtrlEPServiceComplete 1938  
                __end_of_APP_DeviceCustomHIDInitialize 5E54  
               __size_of_APP_DeviceCustomHIDInitialize 0034  
                        _APP_DeviceCustomHIDInitialize 5E20  
                          MSDTransferTerminated@handle 000C  
                               __motor_move_steps@type 0084  
                   __size_of__data_sector_from_cluster 0010  
                            __size_of_motor_goto_steps 009A  
                     __size_of__motor_decide_direction 0196  
                   ExternalFlash_SectorSizeRead@config 0060  
                                 USBCtrlTrfRxService@i 0001  
                                              ?___flge 0078  
                                              ?___lmul 0060  
                                           ??_MSDTasks 00AC  
                               __display_itoa@decimals 00A1  
                         __parse_jump_steps@out_buffer 0096  
                                 ??_motor_move_endless 008E  
                               ??_adc_read_temperature 0091  
                                              ?___wmul 0060  
                         __end_of_encoder_statemachine 3F96  
                                 ??_flash_sector_write 0083  
                    __size_of__fat_offset_from_cluster 001A  
                       __flash_write_to_buffer@command 007A  
                                 ??_fat_read_from_file 00D3  
                         __size_of__flash_partial_read 007A  
                            ?__fat_offset_from_cluster 0060  
                                    __end_of__add_item 1E2C  
                                            MSDTasks@i 00B1  
                             ??_motor_move_degrees_int 009E  
                                              ?_memcpy 0060  
                                              ?_memset 0060  
                                           __motor_run ED26  
                                       ___lmul@product 0068  
                                           _device_dsc A2C0  
                  fat_get_file_information@file_number 0096  
                                     ??_display_update 0070  
                                              ?_reboot 0001  
                                     ?_i2c_eeprom_read 0071  
                                     _USBCtrlEPService 3D40  
                                    ??_configFile_read 01C4  
                                           _ep_data_in 0131  
                                              ?_spi_tx 0060  
                                   __display_clear@col 0063  
                                            ?_adc_init 0001  
            __motor_calculate_distance@target_position 0060  
                              ?__motor_move_back_forth 0001  
                                   __display_clear@row 0062  
                                              ?_strlen 0060  
                                            ?__get_fbr 0060  
                __data_sector_from_cluster@fat_cluster 0060  
                                            ?__get_mbr 0060  
                          __end_of_USBCtrlTrfRxService 1520  
            __ic2_display_set_ddram_address@data_array 006B  
                                        __display_itoa E118  
                              ?__write_value_to_offset 0060  
                                   _USBCheckStdRequest 2572  
                                   __size_of_motor_isr 05EC  
                               ??_i2c_eeprom_writeByte 006D  
                                    _configDescriptor1 A10E  
                 __size_of__divide_jump_size_decrement 006E  
                                              i2l13323 5570  
                                              i2l13327 558E  
                                              i2l13375 2D62  
                                              i2l20727 43D2  
                                              i2l20729 4406  
                                              i2l12959 2688  
                                              i2l13945 2858  
                                              i2l13875 6034  
                                              i2l17535 4FF6  
                              ??_MSDCheckForErrorCases 006E  
                                              i2l18803 047A  
                                              i2l19633 B118  
                                              i2l18775 041A  
                                              i2l19639 B148  
                                              i2l18981 036A  
                                    i2__i2c_write@data 0006  
                                            ?___xxtofl 006A  
                                    i2__i2c_write@cntr 000A  
                              ?_configFile_readDefault 0001  
                          __end_ofi2_SYSTEM_Initialize 55B6  
                                           ??i2_memcpy 0007  
                          ??__motor_calculate_distance 0064  
                                           ??i2_memset 0007  
                                           _flash_init 6404  
                             ?__parse_set_manual_speed 0066  
                   __fill_buffer_get_display@outBuffer 0064  
                          __end_of_USBCtrlTrfTxService 2E08  
                                    __end_of__get_date 642A  
                                  _USBStdSetCfgHandler 2816  
                                    __end_of__get_item FA8E  
                                   i2__i2c_eeprom_busy 619A  
                                    __end_of__get_time 641E  
                     __end_of_maximum_speed_arc_string A29C  
                                   __size_of_spi_tx_rx 0098  
                                   __size_of_spi_tx_tx 0090  
                                            ?_fat_init 0001  
                __parse_jump_steps_with_overshoot@data 0094  
                                              _RPINR21 000EFC  
                                              _RPINR22 000EFD  
                                              _SSP1ADD 000FC8  
                        i2c_display_init@init_sequence 006B  
                                    __end_of_dc_manual 9E3E  
                         __end_of__display_padded_itoa 2572  
                                              _SSP1BUF 000FC9  
                                              _RXADDRH 000F68  
                                              _RXADDRL 000F69  
                           __end_ofi2_USBStallEndpoint 1836  
                       ??_motor_divide_jump_to_nearest 009E  
                                              _TXADDRH 000F6A  
                                              _TXADDRL 000F6B  
                                  ?_USBCheckStdRequest 0001  
                         __size_of_USBStdGetDscHandler 0140  
                                   _motor_speed_lookup 9093  
                                 __flash_set_page_size 4A50  
                                    __end_of_dc_setup1 A06E  
                                    __end_of_dc_setup2 A01E  
                                              _UIEbits 000F36  
                         __parse_set_manual_speed@data 0066  
                            __size_of_motor_move_steps 002E  
                                  i2c_eeprom_read@addr 0077  
                           __end_of_APP_DeviceMSDTasks 63D4  
                                              _UIRbits 000F62  
                                    __end_of__read_fat 525A  
                                  i2c_eeprom_read@data 0073  
          MSDCheckForErrorCases@HostMoreDataThanDevice 006E  
                    __size_of__sector_from_file_number 0030  
                __end_of__flash_compare_page_to_buffer 478A  
               __size_of__flash_compare_page_to_buffer 007C  
                        __flash_compare_page_to_buffer 470E  
                                  ?i2__i2c_eeprom_busy 0001  
                                           ??_i2c_init 0060  
                                     __CFG_CFGPLLEN$ON 000000  
                             __i2c_write@slave_address 0068  
                            ?__sector_from_file_number 0060  
                             ?__motor_schedule_command 0060  
                                         ??_USBMSDInit 000C  
                        fat_read_from_file@return_code 00D8  
                                    __read_fat@cluster 008F  
                       __end_of__get_available_cluster 2ED6  
                                       ?__flash_wakeup 0001  
               fat_read_from_file_fast@working_cluster 00BD  
             __encoder_next_arc_step_size@old_stepsize 0060  
                               fat_find_file@extension 008D  
                                    __end_of_api_parse 0C7A  
                                    ?i2_ResetSenseData 0001  
                                           ??__i2c_get 0060  
                                    _MSDProcessCommand 0A1C  
                           __display_padded_itoa@value 0078  
                           __size_of_motor_process_cue 009A  
                             fat_find_file@file_number 0091  
                            motor_goto_steps@direction 009D  
                                        __i2c_send@dat 0060  
                  __motor_move_steps@distance_in_steps 007D  
                            __flash_get_status@command 006E  
                                            ?_tmr0_isr 0001  
                                              __Hparam 0000  
                      ??_USBIncrement1msInternalTimers 0001  
                                 ?_USBStdSetCfgHandler 0001  
                           __size_of_fat_get_file_size 007A  
            __end_of__get_available_offset_from_buffer 4FE4  
           __size_of__get_available_offset_from_buffer 005E  
                  ??__get_available_offset_from_buffer 0064  
                   ?__get_available_offset_from_buffer 0060  
                    __get_available_offset_from_buffer 4F86  
                                    __end_of__spi_init 5CDE  
                          __size_of_USBCheckHIDRequest 00E2  
                                              __Lparam 0000  
                 __size_of__divide_jump_size_increment 0040  
                                   ??i2_ResetSenseData 0001  
                                   __display_itoa@text 00A2  
                             __size_of_fat_create_file 013C  
                                    __end_of_hid_rpt01 A1F1  
                                   ?_MSDProcessCommand 0001  
                              __end_of_MSDErrorHandler 0FD0  
                           _MSDTransferTerminated$2623 000E  
                           __size_of_USBEnableEndpoint 003C  
                                         ?_system_init 0001  
                         __size_of_fat_restore_mbr_fbr 0092  
                             _inverse_direction_string A2AE  
                                __size_of_encoder_init 0024  
                           ??_fat_get_file_information 0091  
                                 ??_USBCheckStdRequest 001E  
                                              ___aldiv 2ED6  
                                      __size_of___flge 0122  
                                              ___almod 3640  
                                            ?_spi_init 0001  
                                              ___fladd C9A8  
                        __size_of_USBCtrlTrfOutHandler 0062  
                                   __display_itoa_long 11F6  
                i2ExternalFlash_MediaInitialize@config 0001  
                  ExternalFlash_MediaInitialize@config 0060  
                                              ___fldiv D2A6  
                                     _ToSendDataBuffer 0340  
                                              ___flneg 5EB6  
                                      __size_of___lmul 0058  
                    __end_of__data_sector_from_cluster 63F4  
                                              ___flmul C656  
                                              ___fltol 29D4  
                                              ___lldiv 440C  
                             __end_of_ccw_limit_string A330  
                                     ??_USBDeviceTasks 001F  
                                      __size_of___wmul 0028  
                                              ___llmod 4C6E  
                    __motor_decide_direction@overshoot 0081  
                                              ___lwdiv 550E  
                                    ??_USBStallHandler 0001  
                                              ___lwmod 5A74  
                                              _dc_arc1 9EDE  
                                              _dc_arc2 9E8E  
       i2c_display_program_custom_character@data_array 0074  
                                              _dc_main A0BE  
                       __end_of__motor_move_back_forth 3842  
                                    ?__i2c_acknowledge 0001  
               __ic2_display_set_cgram_address@address 006D  
                           __end_of_motor_change_speed 648A  
                                 ??i2__i2c_eeprom_busy 0006  
                                              _dc_zero 9E3E  
                                  __size_of__i2c_start 0008  
                              __size_of_motor_arc_move 00E4  
                                              __pcinit 40BE  
                                      __size_of_memcpy 0060  
                                  __size_of__i2c_write 0050  
                                      __size_of_memset 0030  
                             __size_of_MSDWriteHandler 02EC  
                            __end_of_configDescriptor1 A14E  
                       __end_of__write_value_to_offset 5D84  
                                  ??_MSDProcessCommand 00A7  
                  __motor_move_steps@distance_to_limit 0087  
                                              __ramtop 0F00  
                                    __motor_move_steps EEFA  
                                      __size_of_reboot 0002  
                         ExternalFlash_SectorRead@page 0093  
                               __display_itoa_u16@text 007A  
                                           ??_adc_init 0060  
                                              __ptext0 3DD8  
                                              __ptext1 FA8E  
                                              __ptext2 62F8  
                                              __ptext3 28F6  
                                              __ptext4 6316  
                                              __ptext5 3C10  
                                              __ptext6 53BA  
                                              __ptext7 3E6E  
                                              __ptext8 644E  
                                              __ptext9 6458  
                                       ?__display_itoa 009F  
                                              _inPipes 0109  
                    __size_of_ExternalFlash_SectorRead 0034  
                                      __size_of_spi_tx 005A  
                          _USBDeferOUTDataStagePackets 0159  
                                   ??__i2c_acknowledge 0060  
                                            _T0CONbits 000FD5  
                                           ??__get_fbr 0062  
                       __end_of_configFile_readDefault 470E  
                                  ?__display_itoa_long 00B7  
                                           ??__get_mbr 0062  
                            ?_ExternalFlash_SectorRead 008B  
              motor_divide_jump@target_divide_position 00A3  
                                 __motor_run@direction 006B  
                                      __size_of_strlen 003E  
                          __end_of__system_timer0_init 602A  
                              __read_value_from_offset 5916  
                                   ?__motor_move_steps 007D  
                              _fat_read_from_file_fast DEF2  
                                         ??_USBSuspend 0018  
                                            _T2CONbits 000FCA  
                                   __end_of_USBMSDInit 1412  
                                              _isdigit 6272  
                                     ??_ResetSenseData 0060  
                              ?__flash_write_to_buffer 0073  
                             __end_of_configFile_write BEB0  
                                           ??___xxtofl 006E  
                              _APP_DeviceMSDInitialize 63F4  
                                              _msd_cbw 000D40  
                                     ___aldiv@dividend 0060  
                                              _msd_csw 000D80  
                                 __i2c_not_acknowledge 644E  
                             __offset_from_file_number 60AA  
                             __end_of_i2c_eeprom_write 4596  
                          __display_itoa_long@decimals 00BB  
                                      i2_USBDeviceInit 03DC  
                                     i2USBDeviceInit@i 0009  
                           __size_of__system_pin_setup 006A  
                      ?__ic2_display_set_ddram_address 0001  
                     ??__ic2_display_set_ddram_address 006A  
                                           ??_fat_init 008F  
                    __parse_set_manual_speed@new_speed 006D  
                   __size_of_ExternalFlash_SectorWrite 0034  
                __end_of__motor_steps_from_degrees_int 0EB6  
               __size_of__motor_steps_from_degrees_int 011A  
                        __motor_steps_from_degrees_int 0D9C  
                                ?__flash_set_page_size 0001  
                                   __end_of_USB_CD_Ptr 9DEE  
                             i2c_eeprom_writeByte@data 006C  
                                           _msd_buffer 000600  
                 __size_of__encoder_statemachine_setup 01F0  
                           ??__motor_distance_to_limit 0070  
                           __size_of_SYSTEM_Initialize 005A  
                      __size_of_USBCtrlTrfSetupHandler 0094  
                                  ??__motor_move_steps 0085  
                                              _stricmp 509A  
                                __size_of_display_init 003A  
                              __size_of__flash_is_busy 0024  
                         fat_get_file_size@file_number 00A1  
                                              _strncmp 4596  
                                              _toupper 6380  
                                  _flash_partial_write 4B2C  
                                 end_of_initialization 4146  
                  __end_of_maximum_speed_manual_string A24D  
                          _maximum_speed_manual_string A238  
                              ??_display_get_character 0061  
                                _MSDTransferTerminated 5410  
                __flash_compare_page_to_buffer@command 007B  
                       ?_MSDProcessCommandMediaPresent 0001  
                                   __end_of_USB_SD_Ptr 9DEC  
                           __end_of_bit_pattern_degree A349  
                                  i2__i2c_write@length 0008  
                              __size_of_motor_set_zero 003C  
                            __size_ofi2__i2c_wait_idle 0058  
                                  i2c_eeprom_write@dat 0013  
                                              memcpy@d 0066  
                                              memcpy@n 0064  
                                              memcpy@s 0068  
                                        ??__parse_item 009D  
              __motor_get_speed_in_degrees@speed_index 0091  
                                  _pBDTEntryEP0OutNext 0059  
                            __end_of_MSDProcessCommand 0B50  
                                              itoa@buf 0070  
                                              memset@c 0062  
                                              itoa@val 0072  
                                              memset@n 0064  
                                              memset@p 0066  
                                         _encoder_init 61C0  
                                      _USB1msTickCount 0127  
                                 ??__display_itoa_long 00BE  
                             __flash_partial_read@data 0079  
                                            i2u1123_40 2DB2  
                                            i2u1123_47 2DA8  
                                            i2u1220_40 0718  
                                            i2u1220_47 070E  
                                            i2u1125_40 2DF2  
                                            i2u1044_48 139A  
                                            i2u1044_49 13AE  
                                            i2u1125_47 2DE8  
                                            i2u1222_40 0772  
                             ?_USBStdFeatureReqHandler 0001  
                                            i2u1222_47 0768  
                                            i2u1046_48 13C0  
                                            i2u1215_40 288C  
                                            i2u1046_49 13D6  
                                            i2u1048_44 13F4  
                                            i2u1048_45 13EE  
                             __flash_partial_read@page 0073  
                                            i2u1073_40 3196  
                                            i2u1219_40 06E6  
                                            i2u1219_47 06DC  
                                            i2u1244_40 D752  
                                            i2u1420_40 53A6  
                                            i2u1420_46 53A8  
                        i2c_eeprom_write@slave_address 0024  
                                            i2u1415_40 536C  
                                            i2u1416_40 5378  
                                            i2u1415_48 536E  
                                              ltoa@buf 007A  
                                            i2u1417_40 5384  
                                            i2u1416_48 537A  
                                            i2u1418_40 5390  
                                            i2u1417_48 5386  
                                            i2u1530_40 4578  
                                            i2u1419_40 539C  
                                            i2u1418_48 5392  
                                            i2u1419_48 539E  
                                              ltoa@val 007C  
                                            i2u1529_45 4520  
                                    __end_of_motor_isr B65E  
                                            i2u1647_40 5018  
                                            i2u1647_47 500E  
                          i2c_eeprom_writeByte@address 006A  
                                            i2u1852_40 043E  
                            __motor_calculate_distance 2736  
                                            i2u1950_40 B43A  
                                            i2u1942_41 B170  
                                ??_USBStdSetCfgHandler 0018  
                                            i2u1855_40 04DE  
                                            i2u1944_40 B230  
                      __parse_command_long@out_idx_ptr 00A4  
                                      ___lldiv@divisor 0064  
                                            i2u1939_41 B0A8  
                                            i2u1884_40 03D8  
                                            i2u1949_40 B41A  
                 __end_of__encoder_statemachine_divide 11F6  
                __size_of__encoder_statemachine_divide 0110  
                         __encoder_statemachine_divide 10E6  
                                           ??_tmr0_isr 0001  
                                      ___lldiv@counter 006C  
                                 __size_ofi2__i2c_send 0008  
                 __end_of__encoder_statemachine_manual 23AC  
                __size_of__encoder_statemachine_manual 00E6  
                         __encoder_statemachine_manual 22C6  
              motor_move_degrees_int@distance_in_steps 009E  
                                 __size_ofi2__i2c_stop 0008  
                         ?_i2c_eeprom_recover_position 0001  
                            motor_goto_steps@overshoot 0098  
                      ?__ic2_display_set_cgram_address 0001  
                     ??__ic2_display_set_cgram_address 006A  
                                   __end_of_USBSuspend 5F46  
                          __end_of_use_cw_limit_string A326  
                                  _motor_period_lookup 9A16  
              __fill_buffer_get_mode_details@outBuffer 0060  
                              _USBCtrlEPAllowDataStage 3A3A  
                                    __end_of_spi_tx_rx 3D40  
                                    __end_of_spi_tx_tx 4272  
                             __end_of_i2c_display_init 56A8  
                                     ___aldiv@quotient 006A  
                                              postdec1 000FE5  
                                              postdec2 000FDD  
         __make_cluster_chain@different_sector_cluster 009F  
                 __end_of_ExternalFlash_SectorSizeRead 6436  
                __size_of_ExternalFlash_SectorSizeRead 000C  
                         _ExternalFlash_SectorSizeRead 642A  
                                           ??_spi_init 0063  
                                              postinc0 000FEE  
                                              postinc1 000FE6  
                                              postinc2 000FDE  
                                 ?_flash_partial_write 007F  
                            __end_of__motor_move_steps F0CA  
                     __size_of__fill_buffer_get_status 0224  
                                              utoa@buf 0067  
                                           _motor_init 62F8  
              MSDProcessCommandMediaPresent@sectorSize 009E  
                                           _motor_mode 0148  
                             _USBCtrlEPServiceComplete 1836  
                                              utoa@val 0069  
                                            _MSD_State 0157  
                                           _motor_stop 5748  
              __end_of__cluster_from_sector_and_offset 60FC  
             __size_of__cluster_from_sector_and_offset 0028  
                    ??__cluster_from_sector_and_offset 0064  
                     ?__cluster_from_sector_and_offset 0060  
                      __cluster_from_sector_and_offset 60D4  
                                          ?__motor_run 0060  
                                              strlen@s 0060  
                          __size_of_USBCheckMSDRequest 00C2  
                                        ??_api_prepare 0074  
                      __size_of_motor_move_degrees_int 004A  
                           _USBStatusStageEnabledFlag1 015C  
                           _USBStatusStageEnabledFlag2 015B  
                             flash_partial_write@match 0087  
                                       _bit_pattern_ae A339  
                                   USBEnableEndpoint@p 000A  
                         __size_of__make_cluster_chain 02D6  
                                            _PORTAbits 000F80  
                                            _PORTDbits 000F83  
                                            _PORTEbits 000F84  
                             flash_partial_write@start 0081  
                       __end_of__flash_write_to_buffer 5608  
                                     __CFG_DSBOREN$OFF 000000  
                                   __get_item@item_ctr 006A  
                                         _display_init 5C32  
motor_divide_jump_to_nearest@nearest_position_in_steps 009E  
                                          ___fladd@grs 008F  
                   __size_of__get_available_root_entry 002A  
                                 spi_tx_rx@data_length 0066  
                                ?__i2c_not_acknowledge 0001  
                     __make_cluster_chain@next_cluster 00AA  
                               fat_modify_file@cluster 00B9  
                                          ?_flash_init 0001  
                                     __CFG_CPUDIV$OSC1 000000  
                      adc_read_temperature@temperature 0095  
                                        ___xxtofl@sign 0072  
                                            _TRISAbits 000F92  
                                            _TRISBbits 000F93  
                                            _TRISCbits 000F94  
                                   api_parse@outBuffer 00AA  
                                            _TRISDbits 000F95  
                                            _TRISEbits 000F96  
                     __size_of_motor_clear_command_cue 000C  
                                   _ReceivedDataBuffer 0380  
                                   _BothEP0OutUOWNsSet 015F  
                                          ___fldiv@grs 008B  
                                          ___fldiv@rem 0084  
                       i2c_eeprom_save_position@buffer 0026  
                                        __pbssBIGRAMll 0800  
                                     ??_MSDReadHandler 0095  
                            __flash_partial_read@start 0075  
                            USBConfigureEndpoint@EPNum 0006  
                              _i2c_display_write_fixed 5466  
                           motor_arc_move@arc_in_steps 0095  
     __parse_jump_steps_with_overshoot@number_of_steps 009C  
                                    __CFG_SOSCSEL$HIGH 000000  
                           ?_USBCtrlEPAllowStatusStage 0001  
                                        ?i2__i2c_start 0001  
                                 _encoder_statemachine 3F02  
                  USER_USB_CALLBACK_EVENT_HANDLER@size 0014  
                                        ?i2__i2c_write 0006  
                              __size_of__display_clear 004A  
                                            _USTATcopy 005E  
                                      ??__flash_wakeup 0068  
        MSDProcessCommandMediaPresent@NumBytesInPacket 009D  
  __step_position_from_divide_position@divide_position 0091  
                 __end_of__encoder_next_setup_stepsize 49E0  
                __size_of__encoder_next_setup_stepsize 0070  
                         __encoder_next_setup_stepsize 4970  
                                          ___flmul@grs 0085  
                              __size_of__display_start 00B2  
                         __end_of_USBTransferOnePacket 1730  
                                   _motor_steps_lookup 9461  
                                          _CCP1CONbits 000FBA  
                                    ?__i2c_eeprom_busy 0001  
                                __i2c_eeprom_busy@busy 0065  
                  __end_ofi2_ExternalFlash_MediaDetect 64BE  
                                i2c_eeprom_read@length 0075  
                          i2_ExternalFlash_MediaDetect 64BA  
                    __parse_jump_steps@number_of_steps 009C  
                         __end_of__display_signed_itoa 5A30  
                  __end_of__motor_get_speed_in_degrees 0A1C  
                          __motor_get_speed_in_degrees 08E2  
                               i2c_display_cursor@line 006E  
                     __fat_sector_from_cluster@cluster 0060  
                                     __CFG_IOL1WAY$OFF 000000  
                                        ??_encoder_run 0001  
                         __end_of__parse_command_short F76E  
                                   ??__i2c_eeprom_busy 0065  
                              __motor_decide_direction F76E  
                  __end_of_position_display_180_string A238  
                          _position_display_180_string A223  
                       ?__flash_compare_page_to_buffer 0073  
                        __fill_buffer_get_display@cntr 006C  
                                   __root_is_available 4B98  
                        __fill_buffer_get_display@line 006D  
                                    __CFG_WPEND$PAGE_0 000000  
                                     _motor_goto_steps 3B76  
                   __flash_compare_page_to_buffer@page 0073  
                                  __CFG_MSSP7B_EN$MSK7 000000  
                                  __end_of__parse_item BA8A  
                        ?__encoder_statemachine_divide 0001  
                   __make_cluster_chain@minimum_sector 009D  
                                     ?_MSDErrorHandler 0001  
                fat_resize_file@new_number_of_clusters 00B6  
                   __find_nth_cluster@sector_in_buffer 009D  
                         fat_resize_file@new_file_size 00AC  
                                     __write_root@data 0088  
                               _USBCtrlTrfSetupHandler 3F96  
                        ?__encoder_statemachine_manual 0001  
                        ??_i2c_eeprom_recover_position 0079  
                                ??_flash_partial_write 0087  
                         __write_value_to_offset@value 0064  
                          ??__encoder_statemachine_arc 0099  
                                 __display_padded_itoa 2490  
                               __end_of_bit_pattern_ae A341  
                     ExternalFlash_CapacityRead@config 0060  
                              ?i2_USBTransferOnePacket 0001  
                             __size_of_display_prepare 0CCE  
                                       __end_of___flge 0D9C  
                        ??__motor_get_speed_in_degrees 0093  
                                __end_of_USBDeviceInit 014E  
                __end_of_USBIncrement1msInternalTimers 62F8  
               __size_of_USBIncrement1msInternalTimers 0020  
                        _USBIncrement1msInternalTimers 62D8  
                          __end_of__steps_from_degrees F284  
                                       __end_of___lmul 5362  
                      __sector_from_file_number@sector 0063  
                                      ??__display_itoa 00A4  
                        ?_ExternalFlash_SectorSizeRead 0060  
                                       __end_of___wmul 6124  
                          __size_of_motor_items_in_cue 000C  
                            ??__read_value_from_offset 0064  
                                  ?__root_is_available 0001  
                                    __size_of_MSDTasks 0266  
                            ??_fat_read_from_file_fast 00AF  
                             __end_of_USBStallEndpoint 162A  
                                            i2memcpy@d 0007  
                                            i2memcpy@n 0005  
                                    ??_fat_create_file 00B4  
                       adc_read_temperature@adc_result 0093  
                              __end_ofi2_USBDeviceInit 0522  
                                            i2memcpy@s 0009  
                             __size_of_fat_modify_file 0234  
                            ??_APP_DeviceMSDInitialize 000F  
                                            i2memset@c 0003  
                                            i2memset@n 0005  
                                            i2memset@p 0007  
                                       __end_of_memcpy 4F86  
                 __end_of__display_position_in_degrees 56F8  
                __size_of__display_position_in_degrees 0050  
                         __display_position_in_degrees 56A8  
                                      _MSDRetryAttempt 0153  
                                 i2USBStallEndpoint@ep 0006  
                                       __end_of_memset 5F16  
                                       __end_of_reboot 64C0  
                                     __CFG_DSWDTEN$OFF 000000  
                                    _USBBusIsSuspended 0161  
                            flash_partial_write@length 0083  
                                       __end_of_spi_tx 5202  
                __get_available_root_entry@file_number 0095  
                                  fat_modify_file@data 00A7  
                                       __end_of_strlen 5BBA  
                         __display_padded_itoa@padding 008E  
                            __flash_set_page_size@size 0077  
                                  start_initialization 40BE  
                                  fat_modify_file@root 00C3  
                              ?_USBStdGetStatusHandler 0001  
                                        ??__write_root 008A  
                             i2SYSTEM_Initialize@state 0005  
                        ExternalFlash_SectorWrite@page 008D  
                        USBCtrlTrfRxService@byteToRead 0002  
                               ??__flash_set_page_size 0073  
                                 display_prepare@space 00D2  
                                    ??_MSDWriteHandler 008F  
                                  __end_of_api_prepare 2B90  
                    __end_of__get_available_root_entry 60AA  
                            __display_itoa_long@length 00C2  
         __motor_decide_direction@distance_to_limit_cw 0082  
  __step_position_from_divide_position@target_position 0095  
                           ??__fill_buffer_get_display 0067  
                                    __size_ofi2_memcpy 005C  
                           i2c_display_cursor@position 006D  
                               ?_MSDTransferTerminated 000C  
                                    __size_ofi2_memset 002C  
                                       ??i2__i2c_start 0001  
                                      _USBMSDOutHandle 0140  
                         __end_of_USBConfigureEndpoint 40BE  
                                ?_encoder_statemachine 0001  
                                       ??i2__i2c_write 0009  
                                         ??__i2c_start 0060  
                                         ??__i2c_write 0068  
                      __end_of_USBStdFeatureReqHandler D7E4  
                                  __flash_partial_read 487E  
                                    USBStallEndpoint@p 0066  
                                     _motor_move_steps 5FD0  
                                        _MSDHostNoData 0150  
                                _menu_structure_string A2D2  
                                 ??__root_is_available 008F  
                               _motor_move_degrees_int 5882  
                    __end_of_USBCtrlEPAllowStatusStage 3070  
                         ?__encoder_next_arc_step_size 0060  
                    __size_of_i2c_eeprom_save_position 008E  
                             __end_of_USBCtrlEPService 3DD8  
                       ?__motor_steps_from_degrees_int 0091  
                           __size_of_MSDProcessCommand 0134  
                                  __size_of__motor_run 01D4  
                            ?_i2c_eeprom_save_position 0001  
                                            __i2c_read 3E6E  
                                            __i2c_send 6476  
                                      ___llmod@divisor 0064  
                                            __i2c_stop 648A  
                        ?__encoder_next_setup_stepsize 0060  
                                      ___llmod@counter 0068  
              _ExternalFlash_MediaInitialize$intlevel0 62BC  
             __end_of__parse_jump_steps_with_overshoot FEB0  
            __size_of__parse_jump_steps_with_overshoot 0152  
                   ??__parse_jump_steps_with_overshoot 009A  
                    ?__parse_jump_steps_with_overshoot 0094  
                     __parse_jump_steps_with_overshoot FD5E  
                                    __size_of_i2c_init 001C  
                           configFile_read@file_number 01FB  
                            ??_USBCtrlEPAllowDataStage 0002  
                                _motor_cue_write_index 014B  
                                      _configFile_name 02DD  
                      ??__fill_buffer_get_mode_details 0062  
                                      _configFile_read F432  
                                       USBDeviceInit@i 0068  
                  __end_of_motor_decrease_manual_speed 62B6  
                          _motor_decrease_manual_speed 6294  
                             __size_of__backlight_init 0004  
                           __flash_partial_read@length 0077  
                        __root_is_available@first_byte 0094  
                               _pBDTEntryEP0OutCurrent 005B  
                               __size_of_fat_find_file 00E8  
                     __end_of_fat_get_file_information 4804  
                                          _DMACON1bits 000F88  
                               i2c_eeprom_write@length 000F  
                                          _DMACON2bits 000F86  
                                  __size_of_flash_init 000E  
                              USBTransferOnePacket@dir 0060  
                              USBTransferOnePacket@len 0063  
                                    __size_of__i2c_get 000A  
                                        _MSDTasks$2588 00AD  
                          MSDErrorHandler@OldMSD_State 0069  
                                        _MSDTasks$2589 00AF  
                       __end_ofi2_USBTransferOnePacket 1A3A  
                          __size_of_flash_partial_read 0026  
                                             ??___flge 0080  
                                             ??___lmul 0068  
                                spi_init@configuration 0063  
                                ?__display_padded_itoa 0078  
                              flash_partial_read@start 0089  
                      motor_move_degrees_int@direction 00A2  
                                             ??___wmul 0064  
                                  _USBStdGetDscHandler 0666  
                           __size_of__motor_move_steps 01D0  
                                 ?__flash_partial_read 0073  
                                          ?_motor_init 0001  
                                  __end_of_encoder_run 1F20  
                                    __CFG_ADCSEL$BIT12 000000  
                    __size_of_APP_DeviceCustomHIDTasks 00A8  
                           fat_get_file_size@file_size 009D  
                                          __pdataBANK2 029E  
                                          __pdataBANK4 0400  
                             motor_isr@steps_remaining 0045  
                                          ?_motor_stop 0001  
                            ?_APP_DeviceCustomHIDTasks 0001  
                                       _motor_arc_move 23AC  
                    __end_of_overshoot_in_steps_string A28A  
                                 __size_of_system_init 0174  
                                             ??_memcpy 0066  
                              __size_of__i2c_wait_idle 0064  
                                             ??_memset 0066  
     __motor_decide_direction@target_position_in_steps 007D  
                         __size_of__parse_command_long 0086  
                                             ??_reboot 0060  
                                   __end_of__i2c_start 649A  
                                             ??_spi_tx 0064  
                                   __end_of__i2c_write 57E8  
                                     __get_item@buffer 0064  
                            __root_is_available@offset 0091  
          __parse_jump_steps_with_overshoot@out_buffer 0096  
                                             ??_strlen 0062  
                               ??__i2c_not_acknowledge 0060  
                                            ___fladd@a 0080  
                                            ___fladd@b 007C  
  motor_divide_jump_to_nearest@nearest_divide_position 00A2  
                                            __add_item 1D32  
                               _USBActiveConfiguration 01C3  
                       __end_of_USBStdGetStatusHandler 38EC  
                                            ___fldiv@a 007C  
                                            ___fldiv@b 0078  
                             __size_of_fat_resize_file 00FE  
                        ?__display_position_in_degrees 0060  
                             __fat_sector_from_cluster 6332  
                          api_parse@receivedDataLength 00A9  
                                     api_parse@out_idx 00B0  
                                    __size_of_adc_init 0058  
                                            ___flmul@a 007C  
                                            ___flmul@b 0078  
                                          __pbssCOMRAM 0057  
                                    __size_of__get_fbr 0274  
                            ??_i2c_display_write_fixed 0068  
                                        __pcstackBANK0 0060  
                                        __pcstackBANK1 01C4  
                         __size_of_USBCtrlTrfInHandler 00CA  
                                    __size_of__get_mbr 00D0  
                         ??_ExternalFlash_CapacityRead 0064  
                       __size_of_MSDCheckForErrorCases 0116  
             __get_available_offset_from_buffer@buffer 0062  
                        __end_of_MSDCheckForErrorCases 10E6  
                     __end_of__motor_distance_to_limit 0296  
                                  _fat_restore_mbr_fbr 4150  
                           fat_create_file@file_number 00BC  
                            __encoder_statemachine_arc E560  
                                    __size_of___xxtofl 0144  
                                            _gblBLKLen 023C  
             __get_available_offset_from_buffer@offset 0066  
                   __end_of_flash_command_pagesize_512 A359  
                           _flash_command_pagesize_512 A355  
                   __end_of_flash_command_pagesize_528 A355  
                           _flash_command_pagesize_528 A351  
                                       __flash_is_busy 622C  
                                 ?_USBStdGetDscHandler 0001  
                                         _isdigit$8519 0061  
         __end_of_i2c_display_program_custom_character 4692  
        __size_of_i2c_display_program_custom_character 007C  
               ??_i2c_display_program_custom_character 0070  
                ?_i2c_display_program_custom_character 006E  
                 _i2c_display_program_custom_character 4616  
                                            __get_date 641E  
                                    _flash_sector_read 6124  
                                    __size_of_fat_init 0010  
                  fat_get_file_information@root_sector 0092  
                      __end_of__read_value_from_offset 595E  
                                            __get_item F904  
                      __end_of_fat_read_from_file_fast E118  
                                       _motor_set_zero 5BBA  
                                            __get_time 6412  
                               flash_sector_write@data 0081  
                                     i2__i2c_wait_idle 5362  
                               flash_sector_write@page 007F  
                                  __end_of__write_root 5882  
                                            _dc_manual 9DEE  
                          motor_move_degrees_int@speed 009B  
                           __end_of_USBWakeFromSuspend 5D4E  
                            ??__motor_decide_direction 0082  
                                   ?_flash_sector_read 0087  
                           __end_of_i2c_display_cursor 6272  
                                          __parse_item B65E  
                  __end_of__divide_jump_size_decrement 4B2C  
                          __divide_jump_size_decrement 4ABE  
                                           ?__i2c_read 0065  
                                           ?__i2c_send 0001  
                                            _dc_setup1 A01E  
                                            _dc_setup2 9FCE  
                                      _USBStallHandler 5AB8  
                             __display_padded_itoa@len 008C  
                                         _pBDTEntryOut 0115  
                                           ?__i2c_stop 0001  
                           fat_modify_file@file_number 00B7  
                             __display_padded_itoa@pos 008D  
                             __display_padded_itoa@tmp 0082  
                             motor_move_steps@distance 008C  
                                            __read_fat 5202  
                          configFile_read@value_string 01EB  
                     __size_of__parse_set_manual_speed 0084  
                             __size_of_USBDeviceAttach 0032  
                     __end_of_ExternalFlash_SectorRead 5DEC  
          __end_of__step_position_from_divide_position 200C  
         __size_of__step_position_from_divide_position 00EC  
                ??__step_position_from_divide_position 0095  
                 ?__step_position_from_divide_position 0091  
                  __step_position_from_divide_position 1F20  
                              __motor_move_steps@speed 0081  
                   __get_available_cluster@skip_sector 008D  
                                   i2_USBStallEndpoint 1730  
                                     ___lwdiv@dividend 0060  
                                 _motor_cue_read_index 014C  
                                _fat_get_format_status 3592  
                    fat_read_from_file_fast@start_byte 00A1  
                                    fat_find_file@name 008B  
                       MSDProcessCommandMediaPresent@i 00A6  
                                 ?_fat_restore_mbr_fbr 0001  
                                  ??_flash_sector_read 008B  
                                            _api_parse 0B50  
                                            __pintcode 9008  
                            fat_create_file@root_entry 00BD  
                               __end_of_motor_arc_move 2490  
                              __fill_buffer_get_status E33C  
                                   _APP_DeviceMSDTasks 63C2  
                                        __pmediumconst 9092  
                                             ?___aldiv 0060  
                                    __size_of_tmr0_isr 003A  
                                             ?___almod 0060  
                                             ?___fladd 007C  
                                  fat_find_file@offset 0094  
                                ??__flash_partial_read 007B  
                               __parse_jump_steps@data 0094  
                                             ?___fldiv 0078  
                                            __ptext100 5B3C  
                                            __ptext101 4ABE  
                                            __ptext110 2490  
                                            __ptext102 E560  
                                             ?___flneg 0078  
                                            __ptext111 56A8  
                                            __ptext103 23AC  
                                            __ptext200 162A  
                                            __ptext120 2ED6  
                                            __ptext112 11F6  
                                            __ptext104 49E0  
                                            __ptext121 58CC  
                                            __ptext113 E118  
                                            __ptext105 A3A4  
                                            __ptext210 649A  
                                            __ptext202 5C6C  
                                            __ptext130 5E54  
                                            __ptext122 EB48  
                                            __ptext114 5B7C  
                                            __ptext106 6398  
                                            __ptext211 64A2  
                                            __ptext203 1E2C  
                                            __ptext131 50F4  
                                            __ptext123 0522  
                                            __ptext115 5A30  
                                            __ptext107 08E2  
                                            __ptext220 4FE4  
                                            __ptext212 64AA  
                                            __ptext204 B072  
                                            __ptext140 56F8  
                                            __ptext132 63C2  
                                            __ptext124 29D4  
                                            __ptext116 36EE  
                                            __ptext108 D2A6  
                                            __ptext221 3F96  
                                            __ptext213 0296  
                                            __ptext205 4272  
                                            __ptext141 55B6  
                                            __ptext133 DA58  
                                            __ptext125 5EB6  
                                            __ptext117 5A74  
                                            __ptext109 59EC  
                                            __ptext230 4386  
                                            __ptext222 1836  
                                            __ptext214 03DC  
                                            __ptext206 4514  
                                            __ptext150 5DB8  
                                            __ptext142 41E2  
                                            __ptext134 0A1C  
                                            __ptext126 C656  
                                            __ptext118 550E  
                                            __ptext231 5562  
                                            __ptext223 3A3A  
                                            __ptext215 5D16  
                                            __ptext207 595E  
                                            __ptext151 6124  
                                            __ptext143 514E  
                                            __ptext135 4D9E  
                                            __ptext127 C9A8  
                                            __ptext119 3640  
                                            __ptext240 64BA  
                                            __ptext232 313A  
                                            __ptext224 2572  
                                            __ptext216 5F16  
                                            __ptext208 619A  
                                            __ptext160 63AE  
                                            __ptext152 487E  
                                            __ptext144 470E  
                                            __ptext136 BEB0  
                                            __ptext128 0002  
                                            __ptext241 5E20  
                                            __ptext233 2654  
                                            __ptext225 2816  
                                            __ptext217 5AB8  
                                            __ptext209 5362  
                                            __ptext161 62B6  
                                            __ptext153 622C  
                                            __ptext145 E95E  
                                            __ptext137 CCE4  
                                            __ptext129 5EE6  
                        ??__divide_jump_size_decrement 0060  
                                            __ptext250 0000  
                                            __ptext242 1938  
                                            __ptext234 5410  
                                            __ptext226 602A  
                                            __ptext218 62D8  
                                            __ptext170 0B50  
                                            __ptext162 646C  
                                            __ptext154 52B2  
                                            __ptext146 0FD0  
                                            __ptext138 64B6  
                                            __ptext243 5BF6  
                                            __ptext235 1730  
                                            __ptext227 3842  
                                            __ptext219 3D40  
                                            __ptext171 F5D6  
                                            __ptext163 38EC  
                                            __ptext155 51A8  
                                            __ptext147 0EB6  
                                            __ptext139 5D84  
                                            __ptext244 402A  
                                            __ptext236 63F4  
                                            __ptext228 0666  
                                            __ptext180 6436  
                                            __ptext172 64BE  
                                            __ptext164 2AB2  
                                            __ptext156 5DEC  
                                            __ptext148 1520  
                                            __ptext245 4EC4  
                                            __ptext237 1304  
                                            __ptext229 D560  
                                            __ptext181 59A6  
                                            __ptext173 5748  
                                            __ptext165 E33C  
                                            __ptext157 3CA8  
                                            __ptext149 4E00  
                                            __ptext246 1412  
                                            __ptext238 4E62  
                                            __ptext190 48F8  
                                            __ptext182 5798  
                                            __ptext174 5BBA  
                                            __ptext166 4F26  
                                            __ptext158 31FC  
                                            __ptext247 2FA4  
                                            __ptext239 6366  
                                            __ptext191 6480  
                                            __ptext183 614C  
                                            __ptext175 3798  
                                            __ptext167 F284  
                                            __ptext159 642A  
                                            __ptext248 3070  
                                            __ptext192 FD5E  
                                            __ptext184 4D3A  
                                            __ptext176 5FA2  
                                            __ptext168 3374  
                                            __ptext249 2D38  
                                            __ptext193 FEB0  
                                            __ptext185 648A  
                                            __ptext177 3B76  
                                            __ptext169 5F74  
                                            __ptext194 5FD0  
                                            __ptext186 6492  
                                            __ptext178 F76E  
                                            __ptext195 EEFA  
                                            __ptext187 6476  
                                            __ptext179 2736  
                                            __ptext196 200C  
                                            __ptext188 4300  
                                            __ptext197 6442  
                                            __ptext189 4490  
                                            __ptext198 014E  
                                            __ptext199 530A  
                                             ?___flmul 0078  
                          __size_of_motor_move_endless 002E  
                                             ?___fltol 0060  
                                  fat_find_file@sector 0092  
                                             ?___lldiv 0060  
                                             ?___llmod 0060  
                      motor_move_degrees_int@overshoot 009D  
                          __size_of_flash_sector_write 0050  
                                             ?___lwdiv 0060  
                                            __spi_init 5CA6  
                                             ?___lwmod 0060  
                           ??__offset_from_file_number 0062  
                          __size_of_fat_read_from_file 00E6  
                     __size_of__motor_schedule_command 00EC  
                                            _hid_rpt01 A1D4  
                                  ?i2_USBStallEndpoint 0001  
                        __size_of_adc_read_temperature 01DE  
                        __parse_jump_steps@out_idx_ptr 0098  
                                            _idle_rate 01C2  
                   __size_of__motor_calculate_distance 00E0  
                                   display_update@line 0070  
                                    __size_of_spi_init 0040  
                                     ___almod@dividend 0060  
                                     ?i2_USBDeviceInit 0001  
                                          _api_prepare 2AB2  
                            fat_modify_file@start_byte 00A1  
                                      __i2c_write@data 0065  
                                      __i2c_write@cntr 0069  
                                  fat_create_file@name 00AC  
                                  ?_APP_DeviceMSDTasks 0001  
                            __size_ofi2_ResetSenseData 0062  
                   __motor_calculate_distance@distance 0069  
                   __flash_write_to_buffer@data_length 0077  
                                  fat_create_file@size 00B0  
                                           ?__add_item 0084  
                                 _USBTransferOnePacket 162A  
                           __make_cluster_chain@offset 00A8  
            __ic2_display_set_cgram_address@data_array 006A  
                           ?_ExternalFlash_MediaDetect 0060  
                           __make_cluster_chain@sector 00A4  
                       ??_ExternalFlash_SectorSizeRead 0062  
                                 __display_signed_itoa 59EC  
                  __end_of__divide_jump_size_increment 5B7C  
                          __divide_jump_size_increment 5B3C  
                                    ??_display_prepare 00C6  
                                             ?_isdigit 0001  
                              _motor_clear_command_cue 6436  
                                 __CFG_RTCOSC$T1OSCREF 000000  
                                 __parse_command_short F5D6  
                               fat_read_from_file@data 00D1  
                  __fill_buffer_get_display@secondHalf 0066  
                                    ?_configFile_write 0001  
                               __end_of__flash_is_busy 6250  
                                        _fat_find_file 20F8  
                                    __display_itoa@len 00B4  
                        __size_of_i2c_eeprom_writeByte 0046  
                                    __display_itoa@pos 00B6  
                                    __display_itoa@tmp 00AA  
                               fat_read_from_file@root 00DD  
                                    __display_itoa_u16 342C  
                                    ?_i2c_eeprom_write 000B  
                         __end_of_USBCtrlTrfOutHandler 4F26  
                             __size_of_i2c_eeprom_read 0056  
                                    ??_fat_modify_file 00A9  
                               ??_encoder_statemachine 00AB  
                             ??_motor_speed_from_index 009F  
                            __end_of_flash_sector_read 614C  
                                ??_USBStdGetDscHandler 0001  
                  __size_of__flash_copy_page_to_buffer 005A  
                                          _ep_data_out 012E  
                                     ___lwdiv@quotient 0064  
                               __end_of_motor_set_zero 5BF6  
                                   ??_configFile_write 00E3  
                                   _motor_change_speed 6480  
                                        _MSDWriteState 0154  
                         __size_of_USBCtrlTrfRxService 010E  
                                             ?_stricmp 0061  
                                    _ConfigFile_buffer 0800  
                                   ?__display_itoa_u16 0078  
                        USBConfigureEndpoint@direction 0001  
                                             ?_strncmp 0060  
                                             ?_toupper 0001  
                                       __display_clear 58CC  
                                   ??_i2c_eeprom_write 0010  
                            __size_of__i2c_acknowledge 000A  
                                           ?__get_date 0060  
               __cluster_from_sector_and_offset@offset 0062  
                                       __size_of_ultoa 00FE  
                              __end_of_configFile_read F5D6  
                                 ??i2_USBStallEndpoint 0002  
                                           ?__get_item 0060  
               __cluster_from_sector_and_offset@sector 0060  
                                      _config_internal 012B  
                                           ?__get_time 0060  
                        ??__divide_jump_size_increment 0060  
                                  __size_of_motor_init 001E  
                         __size_ofi2_SYSTEM_Initialize 0054  
                              i2__i2c_eeprom_busy@busy 0006  
                                      _config_external 0244  
                                       __display_start 34E0  
                                  __size_of_motor_stop 0050  
                                      ___aldiv@divisor 0064  
                         __size_of_USBCtrlTrfTxService 00D0  
                       __size_of_display_get_character 002E  
                  __size_of__encoder_statemachine_main 03B8  
                                  __make_cluster_chain CFD0  
                                      ___aldiv@counter 0068  
                                 ??_APP_DeviceMSDTasks 00B2  
                        __end_of_display_get_character 5FA2  
                                       ___wmul@product 0064  
                  __size_of__encoder_statemachine_zero 0064  
                                             _LATAbits 000F89  
                                             _LATBbits 000F8A  
                                             _LATCbits 000F8B  
                                             _LATDbits 000F8C  
                           __end_of_USBCheckHIDRequest 2736  
                       __root_is_available@file_number 0093  
                 __flash_compare_page_to_buffer@buffer 0075  
                                  ?_motor_change_speed 0060  
                           ??_USBCtrlEPServiceComplete 0002  
                                           ?__read_fat 008F  
                                  ??__display_itoa_u16 007C  
                              __i2c_read@slave_address 006F  
                                             _IPR2bits 000FA2  
                                             _PIE1bits 000F9D  
                                             _PIE2bits 000FA0  
                      motor_isr@steps_until_standstill 0041  
                           configFile_read@item_string 01CC  
                                          _encoder_run 1E2C  
                             __fat_offset_from_cluster 634C  
                                ??_fat_restore_mbr_fbr 0084  
                 __flash_compare_page_to_buffer@status 0079  
                                             _PIR1bits 000F9E  
                                             _PIR2bits 000FA1  
                               ??__display_padded_itoa 007D  
                                   __end_of_dc_divide1 9FCE  
                                   __end_of_dc_divide2 9F7E  
                  __end_of__encoder_statemachine_setup E95E  
                          __encoder_statemachine_setup E76E  
                                             _RCONbits 000FD0  
                                           ?_api_parse 00A7  
                                             _UEP0bits 000F26  
                                      ?_motor_arc_move 0001  
                                             _MSDTasks DA58  
                                            _motor_isr B072  
                           _USBDeferINDataStagePackets 015A  
                                 _active_configuration 014D  
                             ??_motor_set_manual_speed 0064  
                                    ?_i2c_display_init 0001  
                              spi_tx_rx@command_length 0062  
                              flash_partial_write@data 0085  
                                   _bit_pattern_degree A341  
                          __size_of_USBCheckStdRequest 00E2  
                      ??_MSDProcessCommandMediaPresent 0099  
                              flash_partial_write@page 007F  
                __end_of__fill_buffer_get_mode_details F432  
               __size_of__fill_buffer_get_mode_details 01AE  
                        __fill_buffer_get_mode_details F284  
                                             _UCONbits 000F65  
                                           ?__spi_init 0060  
                                 __end_ofi2__i2c_start 64AA  
                                 __end_ofi2__i2c_write 59A6  
                                 _USBConfigureEndpoint 402A  
                                         ??__motor_run 0067  
                           ?__data_sector_from_cluster 0060  
               __ic2_display_set_ddram_address@address 006A  
                                   ??_i2c_display_init 006A  
                 __size_of__encoder_next_arc_step_size 0070  
                                    __i2c_write@length 0067  
                                    ??__backlight_init 0060  
                                            _spi_tx_rx 3CA8  
                                            _spi_tx_tx 41E2  
                          __size_ofi2__i2c_eeprom_busy 0026  
                           __end_of_dc_main_simplified A0BE  
                      __end_of__motor_decide_direction F904  
                                 ?__make_cluster_chain 0095  
                      __make_cluster_chain@next_offset 009B  
                   __flash_write_page_from_buffer@page 0073  
                     __size_of_USBStdFeatureReqHandler 0284  
                                       _USBMSDInHandle 013E  
                                           _ADCON0bits 000FC2  
                                           _ADCON1bits 000FC1  
                                flash_sector_read@data 0089  
                                    ___wmul@multiplier 0060  
                                ?_USBTransferOnePacket 0060  
                                flash_sector_read@page 0087  
                                 ??_motor_change_speed 0062  
                             _initial_speed_arc_string A29C  
                        ??__encoder_statemachine_setup 00A3  
                    __end_of__motor_calculate_distance 2816  
                __motor_steps_from_degrees_int@degrees 0091  
                                ?__display_signed_itoa 008F  
                  _ExternalFlash_MediaDetect$intlevel0 6472  
                                    _SYS_InterruptHigh 9008  
                            __end_of__display_itoa_u16 34E0  
                                ?__parse_command_short 0001  
                            i2c_display_cursor@address 006F  
                                     __CFG_WPFP$PAGE_1 000000  
                                       ?_fat_find_file 008B  
                         i2c_eeprom_read@slave_address 0078  
                                         ??_flash_init 0078  
                                         _RemoteWakeup 0162  
                    __end_of_ExternalFlash_MediaDetect 6476  
                                             i2_memcpy 4FE4  
                                             i2_memset 602A  
                    MSDCheckForErrorCases@DeviceNoData 0070  
                                 spi_tx_tx@data_length 0066  
                      fat_read_from_file_fast@position 00C5  
                                      ?__flash_is_busy 0001  
                     __end_of__fill_buffer_get_display 342C  
                                          __write_root 5836  
                                   ?_SYS_InterruptHigh 0001  
                             __end_of_motor_goto_steps 3C10  
                  __fill_buffer_get_display@start_line 006E  
                               __end_of__display_clear 5916  
                    __size_of_fat_get_file_information 007A  
                                           spi_tx@data 0060  
                            ?_fat_get_file_information 008F  
               __end_of_overshoot_cost_in_steps_string A223  
                       _overshoot_cost_in_steps_string A20B  
                              __end_of_USBStallHandler 5AFC  
                    __motor_schedule_command@direction 0067  
                             __sector_from_file_number 5E86  
                                      ?_motor_set_zero 0001  
                                       __i2c_read@data 0065  
                      ??__flash_write_page_from_buffer 0076  
                              __size_of_display_update 0038  
                                       __i2c_read@cntr 0070  
                         __end_of_maximum_speed_string A30B  
                               __end_of__display_start 3592  
                         __end_of_minimum_speed_string A319  
                                    ___lmul@multiplier 0060  
                                     __add_item@buffer 008A  
                                            copy_data0 40D2  
                                            copy_data1 40F2  
                         __size_of__system_timer0_init 002C  
                                    ??_fat_resize_file 00B0  
                            __display_signed_itoa@text 0091  
          __encoder_next_divide_step_size@old_stepsize 0060  
                                     __add_item@length 008E  
                          ??_USBCtrlEPAllowStatusStage 0001  
                            __find_nth_cluster@cluster 0097  
                          __end_of_USBStdSetCfgHandler 28F6  
                          __display_padded_itoa@length 007A  
                                             _i2c_init 6316  
                                  ??_SYS_InterruptHigh 0049  
                                        ??i2__i2c_send 0001  
                                          ??__i2c_read 0068  
                                          ??__i2c_send 0060  
                                         _MSDReadState 0155  
                                        ??i2__i2c_stop 0001  
                                          ??__i2c_stop 0060  
                                   __end_of__motor_run EEFA  
                                   __end_of_device_dsc A2D2  
                          __size_of__display_itoa_long 010E  
            __encoder_next_setup_stepsize@old_stepsize 0060  
                             MSDErrorHandler@ErrorCase 0068  
                               ?_fat_get_format_status 0001  
                                             __i2c_get 6458  
                              ?_USBCtrlTrfSetupHandler 0001  
                                      _fat_create_file 07A6  
                            ??__fill_buffer_get_status 006D  
                                           _ANCON0bits 000F48  
                                           _ANCON1bits 000F49  
                              USBStdGetStatusHandler@p 0002  
                             fat_read_from_file@length 00CD  
                                             __Hrparam 0000  
                                  __display_itoa@value 009F  
                               _motor_prescaler_lookup 9BFD  
                                            memcpy@tmp 006A  
                                             __Lrparam 0000  
                               USBTransferOnePacket@ep 0068  
                                    __parse_jump_steps FEB0  
                    __size_of__motor_distance_to_limit 0148  
                                             _SetupPkt 000D30  
                                   __end_of_flash_init 6412  
                                       _TransferLength 013A  
                                           ?_motor_isr 0001  
                            ?__motor_distance_to_limit 006C  
                         ?_motor_increase_manual_speed 0001  
                           __end_of_USBCheckMSDRequest 31FC  
                                      api_parse@in_idx 00B1  
                fat_read_from_file_fast@cluster_number 00AD  
                                ?_USBConfigureEndpoint 0001  
                                __flash_is_busy@status 0071  
                                     __size_of___aldiv 00CE  
                             _ExternalFlash_SectorRead 5DB8  
                            display_get_character@line 0063  
                                   ?__parse_jump_steps 0094  
                                     __size_of___almod 00AE  
                                     __size_of___fladd 033C  
                                    ??_USBDeviceAttach 0060  
                                       __i2c_wait_idle 4D3A  
                                      _MSDWriteHandler CCE4  
                                     __size_of___fldiv 02BA  
                             __end_of_motor_move_steps 5FFE  
                                     __size_of___flneg 0030  
                                     __size_of___flmul 0352  
                                     __size_of___fltol 00DE  
                         fat_create_file@first_cluster 00BA  
                                     __size_of___lldiv 0084  
                                     __size_of___llmod 0068  
                                      i2__i2c_send@dat 0001  
                                ??__make_cluster_chain 0099  
                                     __size_of___lwdiv 0054  
                       __display_itoa_long@short_value 00C3  
                                     __size_of___lwmod 0044  
            ExternalFlash_SectorWrite@allowWriteToZero 008C  
                                           ?_spi_tx_rx 0060  
                                           ?_spi_tx_tx 0060  
                 __size_ofi2_ExternalFlash_MediaDetect 0004  
                                          _MSDCBWValid 014F  
                            __size_of__i2c_eeprom_busy 0028  
                            __end_of_SYS_InterruptHigh 908E  
                            ??_motor_clear_command_cue 0060  
                        __display_itoa_long@last_digit 00C5  
                                    ?_USBStallEndpoint 0060  
                           i2c_display_write_fixed@pos 0068  
                                             _adc_init 525A  
                          __steps_from_degrees@degrees 0091  
  __motor_distance_to_limit@distance_to_limit_in_steps 0074  
                                             __get_fbr D7E4  
                                             __get_mbr 2C68  
                                          ??__add_item 008C  
                     __end_of_i2c_eeprom_save_position 4300  
                                   ??_USBStallEndpoint 0061  
                                  ??__parse_jump_steps 009A  
                      __flash_copy_page_to_buffer@page 0073  
                   __end_of_ExternalFlash_CapacityRead 63C2  
                           _ExternalFlash_CapacityRead 63AE  
                                             ___xxtofl 0522  
                              ??_MSDTransferTerminated 000E  
                                     __size_of_isdigit 0022  
                              __size_of_USBDeviceTasks 0146  
         __parse_jump_steps_with_overshoot@out_idx_ptr 0098  
                                      ___lwdiv@divisor 0062  
                              __display_itoa_u16@value 0078  
                                             _fat_init 63D4  
                              ?_motor_move_degrees_int 0099  
                                      ?__display_clear 0001  
                                      ___lwdiv@counter 0066  
                           __size_of_flash_sector_read 0028  
                             ??__get_available_cluster 008F  
                                             __ptext10 6462  
                                             __ptext11 6404  
                                             __ptext20 61C0  
                                             __ptext12 5AFC  
                                             __ptext21 5CDE  
                                             __ptext13 5CA6  
                                             __ptext30 342C  
                                             __ptext22 5466  
                                             __ptext14 4A50  
                                             __ptext31 BA8A  
                                             __ptext23 6250  
                                             __ptext15 63D4  
                                             __ptext40 2E08  
                                             __ptext32 1A3A  
                                             __ptext24 61E4  
                                             __ptext16 4150  
                                             __ptext41 4F86  
                                             __ptext33 DCBE  
                                             __ptext25 5C32  
                                             __ptext17 3592  
                                             __ptext50 440C  
                                             __ptext42 60D4  
                                             __ptext34 07A6  
                                             __ptext26 4616  
                                             __ptext18 2C68  
                                             __ptext51 4692  
                                             __ptext43 6412  
                                             __ptext35 5836  
                                             __ptext27 6056  
                                             __ptext19 D7E4  
                                             __ptext60 63E4  
                                             __ptext52 F432  
                                             __ptext44 641E  
                                             __ptext36 4B2C  
                                             __ptext28 5658  
                                             __ptext61 478A  
                                             __ptext53 21E0  
                                             __ptext45 6080  
                                             __ptext37 5040  
                                             __ptext29 34E0  
                                             __ptext70 509A  
                                             __ptext62 4804  
                                             __ptext54 DEF2  
                                             __ptext46 1D32  
                                             __ptext38 CFD0  
                                             __ptext71 6380  
                                             __ptext63 4B98  
                                             __ptext55 3994  
                                             __ptext47 54BA  
                                             __ptext39 5D4E  
                                             __ptext80 5FFE  
                                             __ptext72 1C36  
                                             __ptext64 6174  
                                             __ptext56 5916  
                                             __ptext48 1B38  
                                             __ptext81 4C04  
                                             __ptext73 2B90  
                                             __ptext65 5E86  
                                             __ptext57 5202  
                                             __ptext49 4C6E  
                                             __ptext90 4970  
                                             __ptext82 64B2  
                                             __ptext74 6272  
                                             __ptext66 60AA  
                                             __ptext58 6332  
                                             __ptext91 22C6  
                                             __ptext83 3ADC  
                                             __ptext75 60FC  
                                             __ptext67 20F8  
                                             __ptext59 634C  
                                             __ptext92 6208  
                                             __ptext84 ED26  
                                             __ptext76 F0CA  
                                             __ptext68 4596  
                                             __ptext93 6294  
                                             __ptext85 3F02  
                                             __ptext77 0C7A  
                                             __ptext69 B65E  
                                             __ptext94 C29E  
                                             __ptext86 4CD6  
                                             __ptext78 F904  
                                             __ptext95 10E6  
                                             __ptext87 E76E  
                                             __ptext79 525A  
                                             __ptext96 FC02  
                                             __ptext88 5882  
                                             __ptext97 32BC  
                                             __ptext89 0D9C  
                                             __ptext98 1F20  
                                             __ptext99 5F46  
                                         _SSP1CON1bits 000FC6  
                      __size_of_motor_speed_from_index 0016  
                                         _SSP1CON2bits 000FC5  
                                      ?__display_start 0001  
                         __flash_set_page_size@command 0073  
                                         _SSP2CON1bits 000F72  
                 __end_of_MSDProcessCommandMediaAbsent 4E00  
                __size_of_MSDProcessCommandMediaAbsent 0062  
                         _MSDProcessCommandMediaAbsent 4D9E  
                                      ___almod@divisor 0064  
                                          ??__get_date 0062  
                                __flash_wakeup@command 0068  
                                          ??__get_item 0066  
                                      ___almod@counter 0068  
                                          ??__get_time 0062  
                                     __size_of_stricmp 005A  
                     __end_of_inverse_direction_string A2C0  
                                     ?_configFile_read 0001  
                                     __size_of_strncmp 0080  
                                     __size_of_toupper 0018  
                                  __parse_command_long 4300  
                           ?_ExternalFlash_SectorWrite 0084  
                       ExternalFlash_SectorRead@config 008B  
                       ExternalFlash_SectorRead@buffer 0091  
                   __end_of__flash_copy_page_to_buffer 509A  
                           __flash_copy_page_to_buffer 5040  
                              __size_of_ResetSenseData 0062  
                     __end_of_APP_DeviceCustomHIDTasks 3994  
                                    ??_i2c_eeprom_read 0076  
                                __end_of__flash_wakeup 530A  
                              __parse_set_manual_speed 4490  
                                        __size_of_atoi 00D8  
                                        __size_of_atol 00FC  
                       __end_of_USBCtrlTrfSetupHandler 402A  
                                        __size_of_main 0096  
                                    ?_USBCtrlEPService 0001  
                                        __size_of_itoa 0044  
                                             _inq_resp A1B0  
                                        __size_of_ltoa 0054  
                                        __size_of_utoa 00AA  
                                          ??__read_fat 0091  
                          __end_of_flash_partial_write 4B98  
                                           strncmp@len 0064  
                   __size_of__encoder_statemachine_arc 020E  
                              fat_get_file_size@offset 009B  
                              fat_get_file_size@sector 0099  
                            __end_of__parse_jump_steps 0002  
                fat_read_from_file_fast@needed_cluster 00C1  
                                   ??_USBCtrlEPService 001E  
                                             _tmr0_isr 5C6C  
                             ??__motor_move_back_forth 0068  
                                  _USBCtrlTrfInHandler 3070  
                   __end_of__encoder_statemachine_main C656  
                           __encoder_statemachine_main C29E  
                   _MSDProcessCommandMediaPresent$2606 009B  
                             ??__write_value_to_offset 0066  
                   __end_of__encoder_statemachine_zero 4D3A  
                           __encoder_statemachine_zero 4CD6  
                  __parse_set_manual_speed@out_idx_ptr 006A  
                       fat_read_from_file_fast@cluster 00AB  
                                          ??_api_parse 00AC  
                               __end_of__i2c_wait_idle 4D9E  
                fat_resize_file@old_number_of_clusters 00B4  
                                  __end_ofi2__i2c_send 64B2  
                           __end_of_motor_items_in_cue 644E  
                                             _outPipes 0100  
      i2c_display_program_custom_character@bit_pattern 006E  
                                  __end_ofi2__i2c_stop 64A2  
                                             _spi_init 5AFC  
                              __motor_schedule_command 200C  
                             ??_configFile_readDefault 0060  
                                 _USBCtrlTrfOutHandler 4EC4  
                                             int$flags 005F  
                     __end_of__offset_from_file_number 60D4  
                           ??__fat_sector_from_cluster 0062  
                                             atoi@sign 006A  
                            _USBCtrlEPAllowStatusStage 2FA4  
                      __size_of_motor_set_manual_speed 0078  
                                         ??_motor_init 0060  
                                          ??__spi_init 0063  
                                             atol@sign 0074  
                                         ??_motor_stop 0060  
                        ??_motor_increase_manual_speed 0066  
                                 ?__parse_command_long 00A0  
                                         _SSP1STATbits 000FC7  
                    i2c_eeprom_writeByte@slave_address 0070  
                               ??_USBTransferOnePacket 0064  
                             __end_ofi2__i2c_wait_idle 53BA  
                                    main@startup_timer 00FE  
                          __end_of_motor_period_lookup 9BFD  
               __make_cluster_chain@remaining_clusters 00A2  
                                  __display_start@cntr 007C  
                                         _SSP2STATbits 000F73  
                __display_position_in_degrees@position 0064  
                               ??__display_signed_itoa 0093  
                                __end_of__display_itoa E33C  
                                     i2_ResetSenseData 4E62  
                       ?_APP_DeviceCustomHIDInitialize 0001  
                                      ??_fat_find_file 008F  
                               ??__parse_command_short 009E  
                MSDProcessCommandMediaPresent@capacity 00A2  
                        display_get_character@position 0060  
                             __size_of_MSDErrorHandler 011A  
                       ?__fill_buffer_get_mode_details 0060  
                                      __add_item@value 0086  
                              _motor_postscaler_lookup 982F  
                            _USBDeferStatusStagePacket 015D  
                           __size_of__display_itoa_u16 00B4  
                      __end_of__fill_buffer_get_status E560  
                    __fill_buffer_get_display@position 006F  
                                          _OSCTUNEbits 000F9B  
                                           _INTCONbits 000FF2  
                       __end_of_motor_move_degrees_int 58CC  
                       __parse_jump_steps@return_value 009B  
                            motor_move_steps@direction 0093  
                         __size_of__steps_from_degrees 01BA  
                                 ?_USBCtrlTrfInHandler 0001  
                                             memcpy@d1 0060  
                                             memcpy@s1 0062  
                                 i2c_eeprom_write@data 000D  
                                 i2c_eeprom_write@cntr 0025  
                        USBCtrlTrfTxService@byteToSend 0001  
                   __motor_get_speed_in_degrees@lookup 0099  
                            __display_padded_itoa@text 007B  
                                             itoa@base 0074  
                __motor_move_back_forth@return_value_1 0068  
                __motor_move_back_forth@return_value_2 0069  
                                             isdigit@c 0062  
                                             memset@p1 0060  
                                            ultoa@base 0073  
                     fat_read_from_file@cluster_number 00DB  
                 __end_of_MSDComputeDeviceInAndResidue 32BC  
                __size_of_MSDComputeDeviceInAndResidue 00C0  
                         _MSDComputeDeviceInAndResidue 31FC  
                           fat_modify_file@return_code 00B8  
                                     ?_USBStallHandler 0001  
                             USBStdFeatureReqHandler@p 001C  
                           ?__get_available_root_entry 0001  
                              spi_tx_tx@command_length 0062  
                        __size_of__flash_set_page_size 006E  
                                     __i2c_acknowledge 6462  
                              __end_of_fat_create_file 08E2  
                                             intlevel2 0000  
                                     spi_tx_rx@command 0060  
                             __flash_get_status@status 006F  
                                             ltoa@base 0080  
                          __size_of__root_is_available 006C  
                              fat_restore_mbr_fbr@cntr 0084  
                               __size_of_USBDeviceInit 014C  
                      __end_of_motor_clear_command_cue 6442  
                        ?_MSDProcessCommandMediaAbsent 0001  
              __end_of_USER_USB_CALLBACK_EVENT_HANDLER 440C  
             __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                    ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
                     ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
                      _USER_USB_CALLBACK_EVENT_HANDLER 4386  
            __motor_schedule_command@distance_in_steps 0060  
                                   __end_of_motor_init 6316  
                                         ?__parse_item 0099  
                                     ___lwmod@dividend 0060  
                  __end_of_full_circle_in_steps_string A277  
                          _full_circle_in_steps_string A262  
                         i2USBTransferOnePacket@handle 000A  
                    __end_of_ExternalFlash_SectorWrite 5DB8  
                                     ___lldiv@dividend 0060  
                                   __end_of_motor_stop 5798  
                __end_of__flash_write_page_from_buffer 51A8  
               __size_of__flash_write_page_from_buffer 005A  
                        __flash_write_page_from_buffer 514E  
               i2SYSTEM_Initialize@pll_startup_counter 0001  
                 SYSTEM_Initialize@pll_startup_counter 0060  
                                            stricmp@s1 0061  
                                            stricmp@s2 0063  
                             _maximum_speed_arc_string A28A  
                         __end_of_beep_duration_string A2FD  
                         fat_read_from_file@start_byte 00C9  
                                      _display_content 0249  
                           __end_of_flash_partial_read 619A  
                              __end_of_MSDWriteHandler CFD0  
                                            strncmp@s1 0060  
                  __end_of_i2c_eeprom_recover_position 3CA8  
                                            strncmp@s2 0062  
                          _i2c_eeprom_recover_position 3C10  
                              __write_root@file_number 008E  
                                     spi_tx_tx@command 0060  
                                __size_ofi2__i2c_start 0008  
                              __size_of_MSDReadHandler 01EA  
                                __size_ofi2__i2c_write 0048  
                                __add_item@item_string 0084  
                    __end_of__encoder_statemachine_arc E76E  
                   __parse_set_manual_speed@out_buffer 0068  
                                  fat_resize_file@root 00BB  
                           i2USBTransferOnePacket@data 0002  
                                        ??_system_init 00FD  
                                __get_item@item_string 0060  
                    __size_of__fill_buffer_get_display 00B8  
                         __end_of_use_ccw_limit_string A2EF  
                             ?__read_value_from_offset 0060  
                             ?_fat_read_from_file_fast 00A1  
                               _motor_speed_from_index 6398  
                            ?__fill_buffer_get_display 0064  
                               ??_USBConfigureEndpoint 0002  
                                      ?__i2c_wait_idle 0001  
                                ?_USBCtrlTrfOutHandler 0001  
                             motor_goto_steps@position 0092  
                                      _display_prepare A3A4  
                                          ??_motor_isr 0031  
                             ??__flash_write_to_buffer 007A  
                             ?_APP_DeviceMSDInitialize 0001  
                                  _USBCtrlTrfRxService 1412  
                                   _USBWakeFromSuspend 5D16  
                                ??__parse_command_long 00A6  
                      motor_set_manual_speed@old_speed 0064  
                                 _maximum_speed_string A2FD  
                                   _i2c_display_cursor 6250  
                      motor_set_manual_speed@new_speed 0062  
                                 _minimum_speed_string A30B  
                              _USBStdFeatureReqHandler D560  
                                      _fat_modify_file DCBE  
                                  i2_SYSTEM_Initialize 5562  
                                          ??_spi_tx_rx 0068  
                                          ??_spi_tx_tx 0068  
                                  _USBCtrlTrfTxService 2D38  
                           __size_of_SYS_InterruptHigh 0086  
                                         ?_api_prepare 0070  
                    __motor_get_speed_in_degrees@speed 0095  
                __flash_write_page_from_buffer@command 0079  
                                             utoa@base 006B  
                                             ultoa@buf 006D  
                                    _motor_divide_jump 32BC  
                                             ultoa@val 006F  
                                      _gblMediaPresent 013C  
                   __motor_steps_from_degrees_int@temp 0095  
                             configFile_read@file_size 01F7  
                  ExternalFlash_SectorRead@sector_addr 008D  
                                    _motor_command_cue 0300  
                  __motor_calculate_distance@direction 0068  
                                  ?_USBWakeFromSuspend 0001  
                                           _PPSCONbits 000EBF  
                                     ___lldiv@quotient 0068  
                                      ___lwmod@divisor 0062  
                          ??_ExternalFlash_MediaDetect 0062  
                                  ?_i2c_display_cursor 006D  
                                ??_USBCtrlTrfInHandler 0002  
                                   ?_motor_divide_jump 0001  
                                             stricmp@r 0066  
                                             strlen@cp 0064  
                                _USBAlternateInterface 01BF  
                                      ___lwmod@counter 0064  
                        __size_of__i2c_not_acknowledge 000A  
                                             toupper@c 0060  
                                          _ptrNextData 0142  
                                         ___aldiv@sign 0069  
                     __make_cluster_chain@data_changed 00A1  
                            motor_move_steps@overshoot 0092  
                            i2USBTransferOnePacket@dir 0001  
                            i2USBTransferOnePacket@len 0004  
                                  USBEnableEndpoint@ep 000C  
                                      _endpoint_number 0160  
                                       _display_update 5CDE  
                  __get_available_cluster@first_sector 008B  
                               _motor_set_manual_speed 48F8  
                             _i2c_eeprom_save_position 4272  
                      __size_of__get_available_cluster 00CE  
                                 ?_USBCtrlTrfRxService 0001  
                 __size_of_motor_increase_manual_speed 0024  
                                        ___fladd@signs 008C  
                         __end_of_adc_read_temperature ED26  
                            ??__parse_set_manual_speed 006C  
                                _MSDCheckForErrorCases 0FD0  
                                  ??_motor_divide_jump 009E  
                           ??__fat_offset_from_cluster 0062  
                        ?_MSDComputeDeviceInAndResidue 0060  
                                         i2__i2c_start 64A2  
                              motor_arc_move@direction 0094  
                                 ?i2_SYSTEM_Initialize 0001  
                                         i2__i2c_write 595E  
                             ?_USBCtrlEPAllowDataStage 0001  
                                       _MSBBufferIndex 0247  
                                         ___almod@sign 0069  
                                 ?_USBCtrlTrfTxService 0001  
                      __offset_from_file_number@offset 0063  
                                         ___fladd@aexp 008D  
                                        ?_encoder_init 0001  
                                         ___fladd@bexp 008E  
                                           _USBMSDInit 1304  
                         _USBStatusStageTimeoutCounter 015E  
                                          i2__i2c_send 64AA  
                      ??_ExternalFlash_MediaInitialize 0062  
                                          i2__i2c_stop 649A  
                                     ??_motor_arc_move 0094  
                                 ??_USBWakeFromSuspend 0018  
                             __display_itoa_long@value 00B7  
                          __end_of__flash_partial_read 48F8  
                            configFile_write@file_size 00E5  
                           USBTransferOnePacket@handle 0069  
                                      __backlight_init 64B2  
                                 ??_i2c_display_cursor 006E  
                                         ?_encoder_run 0001  
    motor_divide_jump_to_nearest@divide_position_float 00A4  
                           __size_of__parse_jump_steps 0152  
                            __size_of_configFile_write 0426  
                         __end_of_i2c_eeprom_writeByte 59EC  
                              __display_itoa_long@text 00BC  
                            ??__motor_schedule_command 0067  
                   __motor_distance_to_limit@direction 0078  
                           fat_resize_file@file_number 00BA  
                                           _USB_CD_Ptr 9DEC  
                           __end_of_motor_move_endless 5FD0  
                            __size_of_i2c_eeprom_write 0082  
                                          _power_state 014E  
                                          _USBInHandle 0136  
                             _APP_DeviceCustomHIDTasks 38EC  
                      __size_of__motor_move_back_forth 00AA  
                           __end_of_flash_sector_write 5748  
